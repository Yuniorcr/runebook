<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="651990921909d5750a9b110f7087b0c6ff565c6e" translate="yes" xml:space="preserve">
          <source>Accepts a list of at least two text fields or expressions and returns the concatenated text. Each argument must be of a text or char type. If you want to concatenate a &lt;code&gt;TextField()&lt;/code&gt; with a &lt;code&gt;CharField()&lt;/code&gt;, then be sure to tell Django that the &lt;code&gt;output_field&lt;/code&gt; should be a &lt;code&gt;TextField()&lt;/code&gt;. Specifying an &lt;code&gt;output_field&lt;/code&gt; is also required when concatenating a &lt;code&gt;Value&lt;/code&gt; as in the example below.</source>
          <target state="translated">Принимает список как минимум из двух текстовых полей или выражений и возвращает объединенный текст. Каждый аргумент должен иметь тип текста или символа. Если вы хотите &lt;code&gt;CharField()&lt;/code&gt; &lt;code&gt;TextField()&lt;/code&gt; с CharField () , то обязательно сообщите Django, что поле &lt;code&gt;output_field&lt;/code&gt; должно быть &lt;code&gt;TextField()&lt;/code&gt; . Указание &lt;code&gt;output_field&lt;/code&gt; также требуется при конкатенации &lt;code&gt;Value&lt;/code&gt; как в примере ниже.</target>
        </trans-unit>
        <trans-unit id="cbc82473a8e0bd0fe72439d5e4d84775a91a5e4a" translate="yes" xml:space="preserve">
          <source>Accepts a numeric field or expression and returns the text representation of the expression as a single character. It works the same as Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/functions.html#chr&quot;&gt;&lt;code&gt;chr()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Принимает числовое поле или выражение и возвращает текстовое представление выражения в виде одного символа. Он работает так же, как и функция Python &lt;a href=&quot;https://docs.python.org/3/library/functions.html#chr&quot;&gt; &lt;code&gt;chr()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a82ee117f4ab7b34cf69b9f475422a38f72ec13" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;Keyhole Markup Language (KML)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает представление геометрии на &lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;языке разметки замочной скважины (KML)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95f21af24d82a0d743fb2b1ae13bade9e937af0c" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Geography_Markup_Language&quot;&gt;Geographic Markup Language (GML)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает представление геометрии на языке &lt;a href=&quot;https://en.wikipedia.org/wiki/Geography_Markup_Language&quot;&gt;географической разметки (GML)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56950137bc79c1fe91b955af4f24e5c6499122ec" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;GeoHash&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает представление геометрии &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;GeoHash&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2edd8558ead8c0c41c8046c981a7b5ed180637f0" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry&quot;&gt;Well-known text (WKT)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry&quot;&gt;широко известное текстовое (WKT)&lt;/a&gt; представление геометрии.</target>
        </trans-unit>
        <trans-unit id="3571125a5f8d9978dd538b50f30c66266728eb8e" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary&quot;&gt;Well-known binary (WKB)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary&quot;&gt;широко известное двоичное (WKB)&lt;/a&gt; представление геометрии.</target>
        </trans-unit>
        <trans-unit id="657e11eb33f01b69f5e33eeb949a91f6fd40ee0a" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; representation of the geometry. Note that the result is not a complete GeoJSON structure but only the &lt;code&gt;geometry&lt;/code&gt; key content of a GeoJSON structure. See also &lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt;.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает представление геометрии &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; . Обратите внимание, что результатом является не полная структура GeoJSON, а только содержимое ключа &lt;code&gt;geometry&lt;/code&gt; структуры GeoJSON. Смотрите также &lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14bfeffca9ca818d49288a07690181434cb7c29d" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://www.w3.org/Graphics/SVG/&quot;&gt;Scalable Vector Graphics (SVG)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает представление геометрии в формате &lt;a href=&quot;https://www.w3.org/Graphics/SVG/&quot;&gt;Scalable Vector Graphics (SVG)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9eaceb8f73c655f3cc6a68da79e3d30ea6e56980" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;code&gt;Point&lt;/code&gt; geometry guaranteed to lie on the surface of the field; otherwise returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает геометрию &lt;code&gt;Point&lt;/code&gt; гарантированно лежащую на поверхности поля; в противном случае возвращает &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e84009ac9a234b365e6fe51fbebd50d36c375d3" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with all points snapped to the given grid. How the geometry is snapped to the grid depends on how many numeric (either float, integer, or long) arguments are given.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает геометрию со всеми точками,привязанными к заданной сетке.Как геометрия привязывается к сетке,зависит от того,сколько числовых (плавающих,целочисленных или длинных)аргументов задано.</target>
        </trans-unit>
        <trans-unit id="1d75b7405eb2f866cf68e396014013bf7002cf93" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with its coordinates offset by the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and optionally &lt;code&gt;z&lt;/code&gt; numeric parameters.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает геометрию с координатами, смещенными на числовые параметры &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; и, возможно, &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11726a810332e7e30ca7913f37c322116b5e114f" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with reversed coordinates.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает геометрию с перевернутыми координатами.</target>
        </trans-unit>
        <trans-unit id="19f890c9c0859a45cf1fdbe2e69ff88d46456dc9" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with scaled coordinates by multiplying them with the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and optionally &lt;code&gt;z&lt;/code&gt; parameters.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает геометрию с масштабированными координатами, умножая их на параметры &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; и, необязательно, &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ed891d166b4c3b41549d228485aaff67d3e2b4" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a modified version of the polygon/multipolygon in which all exterior rings are oriented clockwise and all interior rings are oriented counterclockwise. Non-polygonal geometries are returned unchanged.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает модифицированную версию полигона/многополигона,в которой все внешние кольца ориентированы по часовой стрелке,а все внутренние кольца-против часовой стрелки.Неполигональные геометрии возвращаются без изменений.</target>
        </trans-unit>
        <trans-unit id="3f683d3ed41ea8f15ff7f4b8fd69947814c3d503" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the &lt;code&gt;centroid&lt;/code&gt; value of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает значение &lt;code&gt;centroid&lt;/code&gt; геометрии.</target>
        </trans-unit>
        <trans-unit id="a16fb807e556b8168c52b4c02df11039d3c22778" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the area of the field as an &lt;a href=&quot;measure#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; measure.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает площадь поля в качестве меры &lt;a href=&quot;measure#django.contrib.gis.measure.Area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="894baa74f10f984cb42ee3542530dcac1030b236" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the geometry representing the bounding box of the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает геометрию,представляющую граничное поле геометрии.</target>
        </trans-unit>
        <trans-unit id="b9a576062e78c1c62c2d11552d4116e25853b0ec" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the memory size (number of bytes) that the geometry field takes.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает объем памяти (количество байт),которое занимает поле геометрии.</target>
        </trans-unit>
        <trans-unit id="1405cab29ed4f82b8153fbc0581c26e14c0bc05a" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the number of geometries if the geometry field is a collection (e.g., a &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; or &lt;code&gt;MULTI*&lt;/code&gt; field). Returns 1 for single geometries.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает количество геометрий, если поле геометрии является коллекцией (например, поле &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; или &lt;code&gt;MULTI*&lt;/code&gt; ). Возвращает 1 для одиночной геометрии.</target>
        </trans-unit>
        <trans-unit id="4bafcd90cee37aa8bf66b2eb68ddf7dda0f2f16d" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the number of points in a geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает количество точек в геометрии.</target>
        </trans-unit>
        <trans-unit id="e1a3b53570fa1619e85009fc2e43afc948df7def" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the perimeter of the geometry field as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает периметр геометрического поля в качестве объекта &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f87d11cff69a70303d5e7c77cbfef1fc27494e1" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the smallest circle polygon that can fully contain the geometry.</source>
          <target state="translated">Принимает одно географическое поле или выражение и возвращает наименьший круг полигона,который может полностью содержать геометрию.</target>
        </trans-unit>
        <trans-unit id="9b263a6957772a42280da039db9e98bbe33bd417" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic linestring or multilinestring field or expression and returns its length as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; measure.</source>
          <target state="translated">Принимает одно поле или выражение с географической линией строк или многоканальных строк и возвращает его длину в качестве меры &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0f937f22036d4da21aaf24afbf52a9eb9d0201" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or an expression, a query, a config, and a set of options. Returns highlighted search results.</source>
          <target state="translated">Принимает одно текстовое поле или выражение,запрос,конфигурацию и набор опций.Возвращает выделенные результаты поиска.</target>
        </trans-unit>
        <trans-unit id="e94bb56a17617d1d457d56e9cbbcda0a2fff3aed" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the MD5 hash of the string.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает MD5-хэш строки.</target>
        </trans-unit>
        <trans-unit id="9ae8765b2acec59844a12c8e2e495aa22aec2438" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the Unicode code point value for the first character of that expression. It works similar to Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/functions.html#ord&quot;&gt;&lt;code&gt;ord()&lt;/code&gt;&lt;/a&gt; function, but an exception isn&amp;rsquo;t raised if the expression is more than one character long.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает значение кодовой точки Unicode для первого символа этого выражения. Он работает аналогично функции &lt;a href=&quot;https://docs.python.org/3/library/functions.html#ord&quot;&gt; &lt;code&gt;ord()&lt;/code&gt; &lt;/a&gt; в Python , но исключение не возникает, если длина выражения превышает один символ.</target>
        </trans-unit>
        <trans-unit id="549c3fd3fc223077dcaadcf7f13534cf15c32595" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the characters of that expression in reverse order.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает символы этого выражения в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="74229dcf98653374b869555ef5f0abe75fcf68bb" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the lowercase representation.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает строчное представление.</target>
        </trans-unit>
        <trans-unit id="e06db45cb0075a89734c8009693479cd720e1d83" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the number of characters the value has. If the expression is null, then the length will also be null.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает количество символов,которое имеет значение.Если выражение является нулевым,то длина также будет нулевой.</target>
        </trans-unit>
        <trans-unit id="71f22e95c98dffd3a8ec5fc5c82730d47889766d" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the particular hash of the string.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает определенный хэш строки.</target>
        </trans-unit>
        <trans-unit id="4b2b5833bcf18880c991919c7207a6a57cbabf44" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the uppercase representation.</source>
          <target state="translated">Принимает одно текстовое поле или выражение и возвращает заглавное представление.</target>
        </trans-unit>
        <trans-unit id="ea58a83f52f471ce437448da8c01634ab701fee5" translate="yes" xml:space="preserve">
          <source>Accepts any format understood by &lt;a href=&quot;../utils#django.utils.dateparse.parse_duration&quot;&gt;&lt;code&gt;parse_duration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Принимает любой формат, понятный &lt;a href=&quot;../utils#django.utils.dateparse.parse_duration&quot;&gt; &lt;code&gt;parse_duration()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e4915db3019ce7f68f5dd7ee8090bc81c9101b1" translate="yes" xml:space="preserve">
          <source>Accepts two expressions and returns &lt;code&gt;None&lt;/code&gt; if they are equal, otherwise returns &lt;code&gt;expression1&lt;/code&gt;.</source>
          <target state="translated">Принимает два выражения и возвращает &lt;code&gt;None&lt;/code&gt; , если они равны, в противном случае возвращает &lt;code&gt;expression1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee7856f2001d93e76e9b8af8270479d621a210cd" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the distance between them, as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object. On MySQL, a raw float value is returned when the coordinates are geodetic.</source>
          <target state="translated">Принимает два географических поля или выражения и возвращает расстояние между ними как объект &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; . В MySQL необработанное значение с плавающей точкой возвращается, когда координаты геодезические.</target>
        </trans-unit>
        <trans-unit id="958327c3e5327273cc2f3161e66e45020fff9c66" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the distance between them. When used in an &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; clause, it provides index-assisted nearest-neighbor result sets.</source>
          <target state="translated">Принимает два географических поля или выражения и возвращает расстояние между ними. При использовании в предложении &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; он предоставляет индексные наборы результатов для ближайших соседей.</target>
        </trans-unit>
        <trans-unit id="d806ff458db000b20381bf0310c3d85777aca1a9" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric difference, that is the part of geometry A that does not intersect with geometry B.</source>
          <target state="translated">Принимает два географических поля или выражения и возвращает геометрическую разницу,т.е.ту часть геометрии A,которая не пересекается с геометрией B.</target>
        </trans-unit>
        <trans-unit id="5f8e0479b490fd8a5168039d9c00a12fcb470f1a" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric intersection between them.</source>
          <target state="translated">Принимает два географических поля или выражения и возвращает геометрическое пересечение между ними.</target>
        </trans-unit>
        <trans-unit id="03cd71f01f6f1f5993554ef614bcf4862e65af76" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric symmetric difference (union without the intersection) between the given parameters.</source>
          <target state="translated">Принимает два географических поля или выражения и возвращает геометрическую симметрическую разницу (объединение без пересечения)между заданными параметрами.</target>
        </trans-unit>
        <trans-unit id="d74f7c7cef82abfe45344bcbeb4804272efaa5c8" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the union of both geometries.</source>
          <target state="translated">Принимает два географических поля или выражения и возвращает объединение обеих геометрий.</target>
        </trans-unit>
        <trans-unit id="fe506cac1179895dadcf2a28dd9fc43f361e3104" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the logarithm of the first to base of the second.</source>
          <target state="translated">Принимает два числовых поля или выражения и возвращает логарифм первого в основание второго.</target>
        </trans-unit>
        <trans-unit id="439402aace1e8ee2628b4527313d1b3db278c384" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the remainder of the first divided by the second (modulo operation).</source>
          <target state="translated">Принимает два числовых поля или выражения и возвращает оставшуюся часть первого,разделенную на второе (операция modulo).</target>
        </trans-unit>
        <trans-unit id="3682b37ac52be11c06f4185d23eb9ef0443a03f0" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the value of the first raised to the power of the second.</source>
          <target state="translated">Принимает два числовых поля или выражения и возвращает значение первого из них в силу второго.</target>
        </trans-unit>
        <trans-unit id="27fa97d87729019951db2d8a6aebd5731fee67d6" translate="yes" xml:space="preserve">
          <source>Access the &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute to get a dictionary of error messages:</source>
          <target state="translated">Получите доступ к атрибуту &lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt; чтобы получить словарь сообщений об ошибках:</target>
        </trans-unit>
        <trans-unit id="70844f99b01c9887bd3cd6ac918267f64ac095d5" translate="yes" xml:space="preserve">
          <source>Access to delete an object is limited to users with the &amp;ldquo;delete&amp;rdquo; permission for that type of object.</source>
          <target state="translated">Доступ к удалению объекта ограничен пользователями с разрешением &amp;laquo;удалить&amp;raquo; для этого типа объекта.</target>
        </trans-unit>
        <trans-unit id="366a11d335f02df3f29598095bfe942fd23dae76" translate="yes" xml:space="preserve">
          <source>Access to view objects is limited to users with the &amp;ldquo;view&amp;rdquo; or &amp;ldquo;change&amp;rdquo; permission for that type of object.</source>
          <target state="translated">Доступ к объектам просмотра ограничен пользователями с правами &amp;laquo;просмотра&amp;raquo; или &amp;laquo;изменения&amp;raquo; для этого типа объектов.</target>
        </trans-unit>
        <trans-unit id="38e06500cb4d92bb119465a50fb9b86093a6009c" translate="yes" xml:space="preserve">
          <source>Access to view the &amp;ldquo;add&amp;rdquo; form and add an object is limited to users with the &amp;ldquo;add&amp;rdquo; permission for that type of object.</source>
          <target state="translated">Доступ к просмотру формы &amp;laquo;Добавить&amp;raquo; и добавлению объекта ограничен пользователями с разрешением &amp;laquo;Добавить&amp;raquo; для этого типа объекта.</target>
        </trans-unit>
        <trans-unit id="93db48fd1dde234b588b1a45da085aa25579c603" translate="yes" xml:space="preserve">
          <source>Access to view the change list, view the &amp;ldquo;change&amp;rdquo; form and change an object is limited to users with the &amp;ldquo;change&amp;rdquo; permission for that type of object.</source>
          <target state="translated">Доступ к просмотру списка изменений, просмотру формы &amp;laquo;изменение&amp;raquo; и изменению объекта предоставляется только пользователям с правами &amp;laquo;изменения&amp;raquo; для этого типа объекта.</target>
        </trans-unit>
        <trans-unit id="2813c4129c2938f226f74f0d6397ea87e54eeead" translate="yes" xml:space="preserve">
          <source>Accessing &amp;ldquo;clean&amp;rdquo; data</source>
          <target state="translated">Доступ к &amp;laquo;чистым&amp;raquo; данным</target>
        </trans-unit>
        <trans-unit id="4fbacb7119cba6d5d1991036814bdceefb24b0f5" translate="yes" xml:space="preserve">
          <source>Accessing &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; inside middleware before the view runs or in &lt;code&gt;process_view()&lt;/code&gt; will prevent any view running after the middleware from being able to &lt;a href=&quot;file-uploads#modifying-upload-handlers-on-the-fly&quot;&gt;modify the upload handlers for the request&lt;/a&gt;, and should normally be avoided.</source>
          <target state="translated">Доступ к &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;request.POST&lt;/code&gt; &lt;/a&gt; внутри промежуточного программного обеспечения до запуска представления или в &lt;code&gt;process_view()&lt;/code&gt; предотвратит запуск любого представления после того, как промежуточное программное обеспечение сможет &lt;a href=&quot;file-uploads#modifying-upload-handlers-on-the-fly&quot;&gt;изменять обработчики загрузки для запроса&lt;/a&gt; , и обычно этого следует избегать.</target>
        </trans-unit>
        <trans-unit id="dba8c55facde2fcbf3afa09a373e3e68108704d8" translate="yes" xml:space="preserve">
          <source>Accessing method calls</source>
          <target state="translated">Метод доступа к вызовам</target>
        </trans-unit>
        <trans-unit id="9e9865ef8d15c01595b6b655ad850c74bce1812a" translate="yes" xml:space="preserve">
          <source>Accessing models from other apps</source>
          <target state="translated">Доступ к моделям из других приложений</target>
        </trans-unit>
        <trans-unit id="bbc0ef11767ffcb6245d3a45e892639cc25a7bb1" translate="yes" xml:space="preserve">
          <source>Accessing the cache</source>
          <target state="translated">Доступ к кэшу</target>
        </trans-unit>
        <trans-unit id="f2275e202f6f5545a5e5a268c8877e7f21562068" translate="yes" xml:space="preserve">
          <source>Accessing the fields from the form</source>
          <target state="translated">Доступ к полям из формы</target>
        </trans-unit>
        <trans-unit id="8bd4b1d305d7be0f627fb7f8c1aa2a94b62c4214" translate="yes" xml:space="preserve">
          <source>According to this design, the URL for the archive corresponding to year &lt;em&gt;nnnn&lt;/em&gt; is &lt;code&gt;/articles/&amp;lt;nnnn&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">В соответствии с этим дизайном URL для архива, соответствующего году &lt;em&gt;nnnn,&lt;/em&gt; равен &lt;code&gt;/articles/&amp;lt;nnnn&amp;gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daabc7b465ab7ca34a13943237cf2f1d8a517b51" translate="yes" xml:space="preserve">
          <source>Acquiring the token if &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">Получение маркера , если &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; является &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e04b42ab7f6e52405f0521b9742bf7a1cd0f86c4" translate="yes" xml:space="preserve">
          <source>Acquiring the token if &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">Получение токена, если &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; - &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efc107784283b34b7f7958205ac5438711b20983" translate="yes" xml:space="preserve">
          <source>Actions as &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">Действия как методы &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb816f654713bed5c74865320bee81f41e3ccd80" translate="yes" xml:space="preserve">
          <source>Actions may limit their availability to users with specific permissions by setting an &lt;code&gt;allowed_permissions&lt;/code&gt; attribute on the action function:</source>
          <target state="translated">Действия могут ограничивать их доступность для пользователей с определенными разрешениями, устанавливая атрибут &lt;code&gt;allowed_permissions&lt;/code&gt; в функции action:</target>
        </trans-unit>
        <trans-unit id="f9e1795879dfbc37215933b8cc56a60f6f0fbf82" translate="yes" xml:space="preserve">
          <source>Actions that provide intermediate pages</source>
          <target state="translated">Действия,предоставляющие промежуточные страницы</target>
        </trans-unit>
        <trans-unit id="9951a92b331c9d8caf130eb6889f831dc049a60e" translate="yes" xml:space="preserve">
          <source>Activate this view by adding the following line to your URLconf:</source>
          <target state="translated">Активируйте этот вид,добавив следующую строку к Вашему URLconf:</target>
        </trans-unit>
        <trans-unit id="0aa4c06f0fcad75c97ecc22ca28a7b36d66d0f5d" translate="yes" xml:space="preserve">
          <source>Activates some additional checks that are only relevant in a deployment setting.</source>
          <target state="translated">Активирует некоторые дополнительные проверки,которые актуальны только в настройках развертывания.</target>
        </trans-unit>
        <trans-unit id="4b4f7663e482a79242a94ee26cd46a50169934e7" translate="yes" xml:space="preserve">
          <source>Activating middleware</source>
          <target state="translated">Активация промежуточного программного обеспечения</target>
        </trans-unit>
        <trans-unit id="c7f5b8c15f3e67199af71c91865179df3a82c15f" translate="yes" xml:space="preserve">
          <source>Activating models</source>
          <target state="translated">Активация моделей</target>
        </trans-unit>
        <trans-unit id="6425bc77fc2311d432f3c6dadc948ecec41755af" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 400 status code.</source>
          <target state="translated">Действует так же, как &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; но использует код состояния 400.</target>
        </trans-unit>
        <trans-unit id="1ad023f335ce1f4a613b48dd7e19ffe903630c0d" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 403 status code.</source>
          <target state="translated">Действует так же, как &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; но использует код состояния 403.</target>
        </trans-unit>
        <trans-unit id="19f379d64f80d0caaf87d4defa31809099a865ce" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 404 status code.</source>
          <target state="translated">Действует так же, как &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; но использует код состояния 404.</target>
        </trans-unit>
        <trans-unit id="387a1008617d77a04b9deccff0a2d5bfaa3553a1" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 410 status code.</source>
          <target state="translated">Действует так же, как &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; но использует код состояния 410.</target>
        </trans-unit>
        <trans-unit id="35155d5f679b570e59ff0ecc8dbdfe14fd4aaea6" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 500 status code.</source>
          <target state="translated">Действует так же, как &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; но использует код состояния 500.</target>
        </trans-unit>
        <trans-unit id="251ce9dca3225b5cb410dc91fa95b1a8c4234fa1" translate="yes" xml:space="preserve">
          <source>Acts like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt;&lt;code&gt;dict.items()&lt;/code&gt;&lt;/a&gt; for HTTP headers on the response.</source>
          <target state="translated">Действует как &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt; &lt;code&gt;dict.items()&lt;/code&gt; &lt;/a&gt; для заголовков HTTP в ответе.</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">Add</target>
        </trans-unit>
        <trans-unit id="1781f1983893889bfb4e2f805c1c4ac45e575a3d" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; to your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Добавьте &lt;a href=&quot;#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt; в ваши &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aee32ce5a37fb08ca19c3c059f786253013a8558" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.admin'&lt;/code&gt; and its dependencies - &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;django.contrib.contenttypes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; - to your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.admin'&lt;/code&gt; и его зависимости - &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes&quot;&gt; &lt;code&gt;django.contrib.contenttypes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt; &lt;code&gt;django.contrib.messages&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; &lt;/a&gt; - в настройку &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e18e6aa0b565d8aa03bcbedee7dbaa75a0dca49" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.flatpages'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.flatpages'&lt;/code&gt; в настройку &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08f59dc4b59961edb6f73a3a7b17606a7b566d9e" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'&lt;/code&gt; в настройку &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0397db5067511c5655f72ed2eeb2c56c8e0f042a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; в ваш &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="174d52a78c97ad32e9199eded7fb3ff59db50471" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; в настройку &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="143d4d686f2f6b2ecc4271019cc19e1a5e24cb8f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.redirects.middleware.RedirectFallbackMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.redirects.middleware.RedirectFallbackMiddleware'&lt;/code&gt; в настройку &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45606432fd93c03462735cd98f148a73fdb9d96b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.sitemaps'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.sitemaps'&lt;/code&gt; в настройку &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ad2903b96cc7c2efcfa526b8b0aa8ac2eb3c98b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.sites'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Добавьте &lt;code&gt;'django.contrib.sites'&lt;/code&gt; в настройку &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d94ca7b85226ff148b3305333826d511bd6f89c" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;django.contrib.gis&lt;/code&gt; to &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Добавьте &lt;code&gt;django.contrib.gis&lt;/code&gt; в &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9222fafb5ea216f3ae56e452996c046dd3381b66" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;path('admin/doc/', include('django.contrib.admindocs.urls'))&lt;/code&gt; to your &lt;code&gt;urlpatterns&lt;/code&gt;. Make sure it&amp;rsquo;s included &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;'admin/'&lt;/code&gt; entry, so that requests to &lt;code&gt;/admin/doc/&lt;/code&gt; don&amp;rsquo;t get handled by the latter entry.</source>
          <target state="translated">Добавьте &lt;code&gt;path('admin/doc/', include('django.contrib.admindocs.urls'))&lt;/code&gt; к своим &lt;code&gt;urlpatterns&lt;/code&gt; . Убедитесь , что он включен , &lt;em&gt;прежде чем&lt;/em&gt; в &lt;code&gt;'admin/'&lt;/code&gt; запись, так что запросы к &lt;code&gt;/admin/doc/&lt;/code&gt; не получить обрабатываются последней записи.</target>
        </trans-unit>
        <trans-unit id="542cc9c2b819f97521525dba6aaade88bad47f25" translate="yes" xml:space="preserve">
          <source>Add a Waiter to the Restaurant:</source>
          <target state="translated">Добавьте официанта в ресторан:</target>
        </trans-unit>
        <trans-unit id="84da544896ff6b09ffc33abb5a1e8af7c965d705" translate="yes" xml:space="preserve">
          <source>Add a callback that will be invoked after rendering has taken place. This hook can be used to defer certain processing operations (such as caching) until after rendering has occurred.</source>
          <target state="translated">Добавить обратный вызов,который будет вызван после рендеринга.Этот крюк может быть использован для того,чтобы отложить определенные операции обработки (такие как кэширование)до тех пор,пока не произойдет рендеринг.</target>
        </trans-unit>
        <trans-unit id="312ff4feee6ea5004410a1e36dd7a51cbd167d9f" translate="yes" xml:space="preserve">
          <source>Add a classmethod on the model class:</source>
          <target state="translated">Добавить одноклассник на модельный класс:</target>
        </trans-unit>
        <trans-unit id="c56cd0b17a6484404450cbece72765986670d747" translate="yes" xml:space="preserve">
          <source>Add a method on a custom manager (usually preferred):</source>
          <target state="translated">Добавить метод на пользовательском менеджере (обычно предпочтительно):</target>
        </trans-unit>
        <trans-unit id="7eea3ddaf55306731e16d78033c237bd4b6b9a17" translate="yes" xml:space="preserve">
          <source>Add an entry in your URLconf. For example:</source>
          <target state="translated">Добавьте запись в URLconf.Например:</target>
        </trans-unit>
        <trans-unit id="7c5c60eeeda06a7cbea23a2031ee90e364746f1e" translate="yes" xml:space="preserve">
          <source>Add an item to the feed with the given parameters.</source>
          <target state="translated">Добавьте элемент в ленту с заданными параметрами.</target>
        </trans-unit>
        <trans-unit id="9c967c762729f4dcb287ed7d1527256f1992f670" translate="yes" xml:space="preserve">
          <source>Add elements in the root (i.e. feed/channel) element. Called from &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="translated">Добавьте элементы в корневой элемент (т. Е. Канал / канал). Вызывается из &lt;code&gt;write()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="064def1c016a4c0f855806eea4b737660d8b6c5e" translate="yes" xml:space="preserve">
          <source>Add elements on each item (i.e. item/entry) element.</source>
          <target state="translated">Добавлять элементы в каждый элемент (т.е.элемент/вход).</target>
        </trans-unit>
        <trans-unit id="d332082a7d97d7c4d3b54712a6248ddea608f173" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; to your model, defining the &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; option to specify a subdirectory of &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; to use for uploaded files.</source>
          <target state="translated">Добавьте &lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; к вашей модели, определив опцию &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; ,&lt;/a&gt; чтобы указать подкаталог &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; ,который&lt;/a&gt; будет использоваться для загружаемых файлов.</target>
        </trans-unit>
        <trans-unit id="7ce97b976111d12dea30ef369832a81b6f8c5c88" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;system_check_deprecated_details&lt;/code&gt; attribute to your model field similar to the following:</source>
          <target state="translated">Добавьте атрибут &lt;code&gt;system_check_deprecated_details&lt;/code&gt; в поле модели, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="c775d2405227f64cfab31b8ebb0bd2e958a68989" translate="yes" xml:space="preserve">
          <source>Add the current instance (&lt;code&gt;self.object&lt;/code&gt;) to the standard &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt;&lt;code&gt;get_form_kwargs()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Добавьте текущий экземпляр ( &lt;code&gt;self.object&lt;/code&gt; ) к стандартному &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt; &lt;code&gt;get_form_kwargs()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23d9164c11ffee165ad5824e194a73e3c5b602a6" translate="yes" xml:space="preserve">
          <source>Add the default value to your field and run the &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AlterField&lt;/code&gt; operation.</source>
          <target state="translated">Добавьте значение по умолчанию в ваше поле и выполните команду &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; . Это должно сгенерировать миграцию с помощью операции &lt;code&gt;AlterField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6681e3e9d5f8f7e8e7120280f1f2a7979086c58" translate="yes" xml:space="preserve">
          <source>Add the field on your model with &lt;code&gt;default=uuid.uuid4&lt;/code&gt; and &lt;code&gt;unique=True&lt;/code&gt; arguments (choose an appropriate default for the type of the field you&amp;rsquo;re adding).</source>
          <target state="translated">Добавьте поле в вашей модели с аргументами &lt;code&gt;default=uuid.uuid4&lt;/code&gt; и &lt;code&gt;unique=True&lt;/code&gt; (выберите подходящее значение по умолчанию для типа добавляемого поля).</target>
        </trans-unit>
        <trans-unit id="02e1da9ced0fc993734740c21f17ae2a87c975ef" translate="yes" xml:space="preserve">
          <source>Add the following middleware to &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Добавьте следующее промежуточное ПО в &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="81e22044472d5af6216bb40b88cc70aa51aa6e2e" translate="yes" xml:space="preserve">
          <source>Add the following to &lt;code&gt;polls/tests.py&lt;/code&gt;:</source>
          <target state="translated">Добавьте в &lt;code&gt;polls/tests.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5c39e16b32deb2f096fa3a5cb2d52f59ee8c1559" translate="yes" xml:space="preserve">
          <source>Add the nullable field without the default value and run the &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AddField&lt;/code&gt; operation.</source>
          <target state="translated">Добавьте пустое поле без значения по умолчанию и выполните команду &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; . Это должно сгенерировать миграцию с помощью операции &lt;code&gt;AddField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="897846243edef3b03fde13f648c9bf56469bd194" translate="yes" xml:space="preserve">
          <source>Add the same article to a different article set - check that it moves:</source>
          <target state="translated">Добавьте одну и ту же статью в другой комплект-убедитесь,что она движется:</target>
        </trans-unit>
        <trans-unit id="da7de644f515ca77678230d2a489c2a0f1a496f0" translate="yes" xml:space="preserve">
          <source>Add two more test methods to the same class, to test the behavior of the method more comprehensively:</source>
          <target state="translated">Добавьте еще два метода тестирования к тому же классу,чтобы более полно проверить поведение метода:</target>
        </trans-unit>
        <trans-unit id="b98dc98fe9e447d835aef4277affce64c01dd401" translate="yes" xml:space="preserve">
          <source>Add your new hasher as the first entry in &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Добавьте ваш новый хэш в качестве первой записи в &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c4f919a2b3ad49ac11fcd9dcc041e6e2629763b4" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;related_name&lt;/code&gt; to the &lt;code&gt;customers&lt;/code&gt; field as follows would resolve the error: &lt;code&gt;models.ManyToManyField(Place, related_name='provider')&lt;/code&gt;.</source>
          <target state="translated">Добавление &lt;code&gt;related_name&lt;/code&gt; в поле &lt;code&gt;customers&lt;/code&gt; следующим образом устранит ошибку: &lt;code&gt;models.ManyToManyField(Place, related_name='provider')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd68975af9ff6bf42b31e25093a9ca4bc04db184" translate="yes" xml:space="preserve">
          <source>Adding a &lt;code&gt;deconstruct()&lt;/code&gt; method</source>
          <target state="translated">Добавление метода &lt;code&gt;deconstruct()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e2866da8913b39ced8f2ec66b3247474f2ebdaf" translate="yes" xml:space="preserve">
          <source>Adding a background-image</source>
          <target state="translated">Добавление фонового изображения</target>
        </trans-unit>
        <trans-unit id="0d892178c15bd974d128fa41f9821824862b1564" translate="yes" xml:space="preserve">
          <source>Adding a foreign key from one of your own models to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; allows your model to effectively tie itself to another model class, as in the example of the &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; model above. But it&amp;rsquo;s possible to go one step further and use &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; to enable truly generic (sometimes called &amp;ldquo;polymorphic&amp;rdquo;) relationships between models.</source>
          <target state="translated">Добавление внешнего ключа от одной из ваших собственных моделей в &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; позволяет вашей модели эффективно связывать себя с другим классом модели, как в примере модели &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt; выше. Но можно пойти еще дальше и использовать &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; для обеспечения действительно общих (иногда называемых &amp;laquo;полиморфными&amp;raquo;) отношений между моделями.</target>
        </trans-unit>
        <trans-unit id="f32d42966426915a684928a50a3f91eefcb2668c" translate="yes" xml:space="preserve">
          <source>Adding a message</source>
          <target state="translated">Добавление сообщения</target>
        </trans-unit>
        <trans-unit id="9647b442f7b65a49aa241643ed53e216f831e273" translate="yes" xml:space="preserve">
          <source>Adding a password reset feature</source>
          <target state="translated">Добавление функции сброса пароля</target>
        </trans-unit>
        <trans-unit id="737275ab3224f8851da2d9bbb1a5a7c02b448f55" translate="yes" xml:space="preserve">
          <source>Adding a second time is OK, it will not duplicate the relation:</source>
          <target state="translated">Добавление второго раза нормально,это не будет дублировать отношения:</target>
        </trans-unit>
        <trans-unit id="b717fb8e46bbd80f84d44a868651e9774677833a" translate="yes" xml:space="preserve">
          <source>Adding actions to the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Добавление действий в &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fb6dd5ea495cc9b3ab9a76c1b753884aba14e9b" translate="yes" xml:space="preserve">
          <source>Adding additional fields to a formset</source>
          <target state="translated">Добавление дополнительных полей в формуляр</target>
        </trans-unit>
        <trans-unit id="f9e4c9a8b7d7bdf21d02d1603728d6f080e21fd5" translate="yes" xml:space="preserve">
          <source>Adding an automatic primary key field to the model if you don&amp;rsquo;t declare it. To avoid confusion for later code readers, it&amp;rsquo;s recommended to specify all the columns from the database table you are modeling when using unmanaged models.</source>
          <target state="translated">Добавление автоматического поля первичного ключа в модель, если вы его не объявили. Чтобы избежать путаницы для более поздних читателей кода, рекомендуется указывать все столбцы из таблицы базы данных, которую вы моделируете при использовании неуправляемых моделей.</target>
        </trans-unit>
        <trans-unit id="a677f2d3d7d36704d5ef8fe9f52670fb7004e7da" translate="yes" xml:space="preserve">
          <source>Adding an index to your database may help to improve ordering performance.</source>
          <target state="translated">Добавление индекса в базу данных может помочь улучшить выполнение заказов.</target>
        </trans-unit>
        <trans-unit id="4b94c475955db5b6e3e02bf21b87eea5874a2a38" translate="yes" xml:space="preserve">
          <source>Adding an object of the wrong type raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Добавление объекта неправильного типа вызывает &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2480784cdec9378029855e4634deeb18753830ae" translate="yes" xml:space="preserve">
          <source>Adding an object of the wrong type raises TypeError:</source>
          <target state="translated">Добавление объекта неправильного типа приводит к ошибке TypeError:</target>
        </trans-unit>
        <trans-unit id="75ac589a7c74b921108f817dbc58cc312b033a74" translate="yes" xml:space="preserve">
          <source>Adding annotations</source>
          <target state="translated">Добавление примечаний</target>
        </trans-unit>
        <trans-unit id="6f3fb504cadea63bb79c2a9f67921972335a2ab4" translate="yes" xml:space="preserve">
          <source>Adding custom validation to the admin</source>
          <target state="translated">Добавление пользовательской проверки для администратора</target>
        </trans-unit>
        <trans-unit id="21c3a8a053ec2e21cb223570d2501da48845f4b6" translate="yes" xml:space="preserve">
          <source>Adding extra &lt;code&gt;Manager&lt;/code&gt; methods is the preferred way to add &amp;ldquo;table-level&amp;rdquo; functionality to your models. (For &amp;ldquo;row-level&amp;rdquo; functionality &amp;ndash; i.e., functions that act on a single instance of a model object &amp;ndash; use &lt;a href=&quot;models#model-methods&quot;&gt;Model methods&lt;/a&gt;, not custom &lt;code&gt;Manager&lt;/code&gt; methods.)</source>
          <target state="translated">Добавление дополнительных методов &lt;code&gt;Manager&lt;/code&gt; является предпочтительным способом добавления функциональности &amp;laquo;на уровне таблицы&amp;raquo; в ваши модели. (Для функциональности &amp;laquo;на уровне строк&amp;raquo;, т. Е. Функций, действующих на один экземпляр объекта модели, используйте &lt;a href=&quot;models#model-methods&quot;&gt;методы Model&lt;/a&gt; , а не пользовательские методы &lt;code&gt;Manager&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="49a457ad4a4fb40029dfeb98bf770d419b6ed80e" translate="yes" xml:space="preserve">
          <source>Adding extra context</source>
          <target state="translated">Добавление дополнительного контекста</target>
        </trans-unit>
        <trans-unit id="7d6b19de730f99e44e54a6e2f60d6fba5e949606" translate="yes" xml:space="preserve">
          <source>Adding extra manager methods</source>
          <target state="translated">Добавление дополнительных методов управления</target>
        </trans-unit>
        <trans-unit id="05c9b92bf3c6992f2275d32eb1bb9a5f874cbe2a" translate="yes" xml:space="preserve">
          <source>Adding extra message tags</source>
          <target state="translated">Добавление дополнительных тегов сообщения</target>
        </trans-unit>
        <trans-unit id="065d8edc35a41c3e1c7f7106fb0ce5eebe146add" translate="yes" xml:space="preserve">
          <source>Adding messages in class-based views</source>
          <target state="translated">Добавление сообщений в представлениях на основе классов</target>
        </trans-unit>
        <trans-unit id="dde5351483f81b0be2720e29f44edb20496f0b3c" translate="yes" xml:space="preserve">
          <source>Adding migrations to apps</source>
          <target state="translated">Добавление миграции в приложения</target>
        </trans-unit>
        <trans-unit id="cd9492e64e9db0d1444a09b5329d3bce5e245f07" translate="yes" xml:space="preserve">
          <source>Adding related objects</source>
          <target state="translated">Добавление связанных объектов</target>
        </trans-unit>
        <trans-unit id="80f31e3c892ed2c3d9284ce59d6e189757bbb332" translate="yes" xml:space="preserve">
          <source>Adding support in third-party database backends</source>
          <target state="translated">Добавление поддержки в бэкэнды сторонних баз данных</target>
        </trans-unit>
        <trans-unit id="8f942de47430dca18f13c33d368bb70c332460c2" translate="yes" xml:space="preserve">
          <source>Adding the built-in widgets templates directory in &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; of one of your template engines. To generate that path:</source>
          <target state="translated">Добавление каталога шаблонов встроенных виджетов в &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt; одного из ваших шаблонизаторов. Чтобы сгенерировать этот путь:</target>
        </trans-unit>
        <trans-unit id="199984b1c4df9b28def33449c0f29df2d3cea020" translate="yes" xml:space="preserve">
          <source>Adding the language prefix to the root of the URL patterns to make it possible for &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt;&lt;code&gt;LocaleMiddleware&lt;/code&gt;&lt;/a&gt; to detect the language to activate from the requested URL.</source>
          <target state="translated">Добавление языкового префикса в корень шаблонов URL, чтобы &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt; &lt;code&gt;LocaleMiddleware&lt;/code&gt; могла&lt;/a&gt; определить язык для активации по запрошенному URL.</target>
        </trans-unit>
        <trans-unit id="8bbdf001f85301d5c4caf9cad678d83599003252" translate="yes" xml:space="preserve">
          <source>Adding translations to JavaScript poses some problems:</source>
          <target state="translated">Добавление переводов в JavaScript создает некоторые проблемы:</target>
        </trans-unit>
        <trans-unit id="9b2bc4970a121d42083d328ea38dfa708de484df" translate="yes" xml:space="preserve">
          <source>Adding via the &amp;lsquo;other&amp;rsquo; end of an m2m:</source>
          <target state="translated">Добавление через &amp;laquo;другой&amp;raquo; конец m2m:</target>
        </trans-unit>
        <trans-unit id="58981ac9ab470f289e179674aec179db087b8177" translate="yes" xml:space="preserve">
          <source>Adding via the other end using keywords:</source>
          <target state="translated">Добавление через другой конец по ключевым словам:</target>
        </trans-unit>
        <trans-unit id="3726f6959d53012c980dc6e6514bf9f49e25f7f8" translate="yes" xml:space="preserve">
          <source>Adding views to admin sites</source>
          <target state="translated">Добавление просмотров на сайтах администраторов</target>
        </trans-unit>
        <trans-unit id="eeb2928b085f70ed3eefe2ebfb553f92ebbeb1d4" translate="yes" xml:space="preserve">
          <source>Additional Resources:</source>
          <target state="translated">Дополнительные ресурсы:</target>
        </trans-unit>
        <trans-unit id="20e967d50fd03923d186da10f984c24954c279bc" translate="yes" xml:space="preserve">
          <source>Additional form template furniture</source>
          <target state="translated">Дополнительная форма шаблона мебели</target>
        </trans-unit>
        <trans-unit id="0639dbfaee6711fafef42bd5e3a8bb2d5b4d6b0d" translate="yes" xml:space="preserve">
          <source>Additional methods on files attached to objects</source>
          <target state="translated">Дополнительные методы по файлам,прикрепленным к объектам</target>
        </trans-unit>
        <trans-unit id="a3bd37141e3db51c93a974f72b5ed99fd4be069a" translate="yes" xml:space="preserve">
          <source>Additional methods to handle related objects</source>
          <target state="translated">Дополнительные методы работы со связанными объектами</target>
        </trans-unit>
        <trans-unit id="af004711cc4f84f9b7f7e5f37159b9933b2615c7" translate="yes" xml:space="preserve">
          <source>Additional security topics</source>
          <target state="translated">Дополнительные темы безопасности</target>
        </trans-unit>
        <trans-unit id="f51f11764f8ab3f8650e43b07eec550d435e9d07" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;OneToOneField&lt;/code&gt; accepts all of the extra arguments accepted by &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, plus one extra argument:</source>
          <target state="translated">Кроме того, &lt;code&gt;OneToOneField&lt;/code&gt; принимает все дополнительные аргументы, принятые &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , плюс один дополнительный аргумент:</target>
        </trans-unit>
        <trans-unit id="f18c9828e81de90a123e4ab9f3d1248d2eaa355f" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; automatically sets a few headers in each &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; which affect &lt;a href=&quot;#downstream-caches&quot;&gt;downstream caches&lt;/a&gt;:</source>
          <target state="translated">Кроме того, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; автоматически устанавливает несколько заголовков в каждом &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; которые влияют на &lt;a href=&quot;#downstream-caches&quot;&gt;последующие кеши&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3bb4297691e2586f5e087e3bc7b4b49164fe1279" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; automatically sets a few headers in each &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Кроме того, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; автоматически устанавливает несколько заголовков в каждом &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d9c3eb7a943d408e9ef3eff367c07a9bdf0b504f" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UploadedFile.content_type&lt;/code&gt; will be updated with the image&amp;rsquo;s content type if Pillow can determine it, otherwise it will be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Кроме того, &lt;code&gt;UploadedFile.content_type&lt;/code&gt; будет обновляться с типом контента изображения, если Pillow может определить его, в противном случае для него будет установлено значение &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5f3789a249b86a962e868dcf5a537068b47abe" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;cache_page&lt;/code&gt; automatically sets &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;Expires&lt;/code&gt; headers in the response which affect &lt;a href=&quot;#downstream-caches&quot;&gt;downstream caches&lt;/a&gt;.</source>
          <target state="translated">Кроме того, &lt;code&gt;cache_page&lt;/code&gt; автоматически устанавливает заголовки &lt;code&gt;Cache-Control&lt;/code&gt; и &lt;code&gt;Expires&lt;/code&gt; в ответе, которые влияют на &lt;a href=&quot;#downstream-caches&quot;&gt;последующие кеши&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59f091ea1fdfee35fafef8f5beec4d2ea7795fb3" translate="yes" xml:space="preserve">
          <source>Additionally, Django requires you to explicitly enable support for the &lt;code&gt;X-Forwarded-Host&lt;/code&gt; header (via the &lt;a href=&quot;../ref/settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; setting) if your configuration requires it.</source>
          <target state="translated">Кроме того, Django требует, чтобы вы явно включили поддержку заголовка &lt;code&gt;X-Forwarded-Host&lt;/code&gt; (через параметр &lt;a href=&quot;../ref/settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt; &lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt; &lt;/a&gt; ), если ваша конфигурация требует этого.</target>
        </trans-unit>
        <trans-unit id="8c1950c86ec7cad350a1882f9069c6111aa2bc35" translate="yes" xml:space="preserve">
          <source>Additionally, if a &lt;code&gt;some_queryset&lt;/code&gt; has not yet been evaluated, but you know that it will be at some point, then using &lt;code&gt;some_queryset.exists()&lt;/code&gt; will do more overall work (one query for the existence check plus an extra one to later retrieve the results) than using &lt;code&gt;bool(some_queryset)&lt;/code&gt;, which retrieves the results and then checks if any were returned.</source>
          <target state="translated">Кроме того, если &lt;code&gt;some_queryset&lt;/code&gt; еще не был оценен, но вы знаете, что он будет в какой-то момент, тогда использование &lt;code&gt;some_queryset.exists()&lt;/code&gt; сделает большую общую работу (один запрос для проверки существования плюс дополнительный для последующего получения результатов). ) чем использование &lt;code&gt;bool(some_queryset)&lt;/code&gt; , который извлекает результаты, а затем проверяет, были ли возвращены какие-либо.</target>
        </trans-unit>
        <trans-unit id="5cd413f4862375205f2c9c8f5fb743ea9ac00da3" translate="yes" xml:space="preserve">
          <source>Additionally, if there are complex rules around pluralization, the catalog view will render a conditional expression. This will evaluate to either a &lt;code&gt;true&lt;/code&gt; (should pluralize) or &lt;code&gt;false&lt;/code&gt; (should &lt;strong&gt;not&lt;/strong&gt; pluralize) value.</source>
          <target state="translated">Кроме того, если существуют сложные правила, относящиеся к плюрализации, представление каталога отобразит условное выражение. При этом будет получено либо &lt;code&gt;true&lt;/code&gt; (должно быть множественное число), либо &lt;code&gt;false&lt;/code&gt; ( &lt;strong&gt;не&lt;/strong&gt; следует использовать множественное число) значение.</target>
        </trans-unit>
        <trans-unit id="155b9da3a7f3110c995a2609d26841c5c24dd1fd" translate="yes" xml:space="preserve">
          <source>Additionally, if you set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt;&lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;SecurityMiddleware&lt;/code&gt; will add the &lt;code&gt;includeSubDomains&lt;/code&gt; directive to the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header. This is recommended (assuming all subdomains are served exclusively using HTTPS), otherwise your site may still be vulnerable via an insecure connection to a subdomain.</source>
          <target state="translated">Кроме того, если для параметра &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt; &lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;SecurityMiddleware&lt;/code&gt; добавит директиву &lt;code&gt;includeSubDomains&lt;/code&gt; в заголовок &lt;code&gt;Strict-Transport-Security&lt;/code&gt; . Это рекомендуется (при условии, что все субдомены обслуживаются исключительно с использованием HTTPS), в противном случае ваш сайт все еще может быть уязвим из-за небезопасного подключения к субдомену.</target>
        </trans-unit>
        <trans-unit id="796ba10f1ad831c76eb8c34a0b7761256ed12335" translate="yes" xml:space="preserve">
          <source>Additionally, it is recommended to install the &lt;a href=&quot;https://github.com/maxmind/libmaxminddb&quot;&gt;libmaxminddb C library&lt;/a&gt;, so that &lt;code&gt;geoip2&lt;/code&gt; can leverage the C library&amp;rsquo;s faster speed.</source>
          <target state="translated">Кроме того, рекомендуется установить &lt;a href=&quot;https://github.com/maxmind/libmaxminddb&quot;&gt;библиотеку C libmaxminddb&lt;/a&gt; , чтобы &lt;code&gt;geoip2&lt;/code&gt; мог использовать более высокую скорость библиотеки C.</target>
        </trans-unit>
        <trans-unit id="7b5fcf69c665bf56f6d133b6aa0ec9e54e765756" translate="yes" xml:space="preserve">
          <source>Additionally, the following property is available:</source>
          <target state="translated">Кроме того,доступна следующая недвижимость:</target>
        </trans-unit>
        <trans-unit id="58aadc8b0bc2556a2416983dd97e11e2dca317e2" translate="yes" xml:space="preserve">
          <source>Additionally, the variable may be an iterable of template names, in which case the first that can be loaded will be used, as per &lt;a href=&quot;../../topics/templates#django.template.loader.select_template&quot;&gt;&lt;code&gt;select_template()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Кроме того, переменная может быть повторением имен шаблонов, и в этом случае будет использоваться первая, которая может быть загружена, согласно &lt;a href=&quot;../../topics/templates#django.template.loader.select_template&quot;&gt; &lt;code&gt;select_template()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="065186d003b68ca80e33b415f720adf82fb1f37e" translate="yes" xml:space="preserve">
          <source>Adds (or updates) the &lt;code&gt;Vary&lt;/code&gt; header in the given &lt;code&gt;HttpResponse&lt;/code&gt; object. &lt;code&gt;newheaders&lt;/code&gt; is a list of header names that should be in &lt;code&gt;Vary&lt;/code&gt;. If headers contains an asterisk, then &lt;code&gt;Vary&lt;/code&gt; header will consist of a single asterisk &lt;code&gt;'*'&lt;/code&gt;. Otherwise, existing headers in &lt;code&gt;Vary&lt;/code&gt; aren&amp;rsquo;t removed.</source>
          <target state="translated">Добавляет (или обновляет) заголовок &lt;code&gt;Vary&lt;/code&gt; в заданный объект &lt;code&gt;HttpResponse&lt;/code&gt; . &lt;code&gt;newheaders&lt;/code&gt; - это список имен заголовков, которые должны быть в &lt;code&gt;Vary&lt;/code&gt; . Если заголовки содержат звездочку, то заголовок &lt;code&gt;Vary&lt;/code&gt; будет состоять из одной звездочки &lt;code&gt;'*'&lt;/code&gt; . В противном случае существующие заголовки в &lt;code&gt;Vary&lt;/code&gt; не удаляются.</target>
        </trans-unit>
        <trans-unit id="1e90b62d665048ec0284ccfaa223ced853188c83" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;constraint&lt;/code&gt; to &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">Добавляет &lt;code&gt;constraint&lt;/code&gt; к таблице &lt;code&gt;model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="189c0dc50c29d58c3f168feb673c8841534b5c85" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;index&lt;/code&gt; to &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">Добавляет &lt;code&gt;index&lt;/code&gt; в таблицу &lt;code&gt;model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b8cfac95da60494037975ba4ec543ba3fe273f3" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;object_list&lt;/code&gt; to the context. If &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; is True then display an empty list. If &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; is False then raise a 404 error.</source>
          <target state="translated">Добавляет &lt;code&gt;object_list&lt;/code&gt; в контекст. Если &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt; &lt;code&gt;allow_empty&lt;/code&gt; &lt;/a&gt; имеет значение True, отобразить пустой список. Если &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt; &lt;code&gt;allow_empty&lt;/code&gt; &lt;/a&gt; имеет значение False, то возникает ошибка 404.</target>
        </trans-unit>
        <trans-unit id="514fb7f40df63dff563c3c7ad7a9ae3f9e685565" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;Cache-Control: max-age=0, no-cache, no-store, must-revalidate,
private&lt;/code&gt; header to a response to indicate that a page should never be cached.</source>
          <target state="translated">Добавляет &lt;code&gt;Cache-Control: max-age=0, no-cache, no-store, must-revalidate, private&lt;/code&gt; заголовок к ответу, чтобы указать, что страница никогда не должна кэшироваться.</target>
        </trans-unit>
        <trans-unit id="ff7383298422a0675008a255cc33c19c23220b7a" translate="yes" xml:space="preserve">
          <source>Adds a column (or sometimes multiple) to the model&amp;rsquo;s table to represent the field. This will also add indexes or a unique constraint if the field has &lt;code&gt;db_index=True&lt;/code&gt; or &lt;code&gt;unique=True&lt;/code&gt;.</source>
          <target state="translated">Добавляет столбец (или иногда несколько) в таблицу модели для представления поля. Это также добавит индексы или ограничение уникальности, если поле имеет &lt;code&gt;db_index=True&lt;/code&gt; или &lt;code&gt;unique=True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e56f8bda02f55055ccc1af79a5faec7f5d76e619" translate="yes" xml:space="preserve">
          <source>Adds a few conveniences for perfectionists:</source>
          <target state="translated">Добавляет несколько удобств для перфекционистов:</target>
        </trans-unit>
        <trans-unit id="3bc2c30ca18e7b58b0c427c2bd1065d3d8e2da65" translate="yes" xml:space="preserve">
          <source>Adds a field to a model. &lt;code&gt;model_name&lt;/code&gt; is the model&amp;rsquo;s name, &lt;code&gt;name&lt;/code&gt; is the field&amp;rsquo;s name, and &lt;code&gt;field&lt;/code&gt; is an unbound Field instance (the thing you would put in the field declaration in &lt;code&gt;models.py&lt;/code&gt; - for example, &lt;code&gt;models.IntegerField(null=True)&lt;/code&gt;.</source>
          <target state="translated">Добавляет поле в модель. &lt;code&gt;model_name&lt;/code&gt; - это имя модели, &lt;code&gt;name&lt;/code&gt; - это имя поля, а &lt;code&gt;field&lt;/code&gt; - это несвязанный экземпляр поля (вещь, которую вы бы поместили в объявление поля в &lt;code&gt;models.py&lt;/code&gt; - например, &lt;code&gt;models.IntegerField(null=True)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd25b00fce5148ea823ee8b2f9f6663ac9a6299b" translate="yes" xml:space="preserve">
          <source>Adds a geometry to this geometry collection. Not applicable to other geometry types.</source>
          <target state="translated">Добавляет геометрию к этой коллекции геометрии.Не применимо к другим типам геометрии.</target>
        </trans-unit>
        <trans-unit id="40b2d7c6759c3aa4f4958c39ef024b8c9802838b" translate="yes" xml:space="preserve">
          <source>Adds a success message attribute to &lt;a href=&quot;../class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; based classes</source>
          <target state="translated">Добавляет атрибут сообщения об &lt;a href=&quot;../class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; &lt;/a&gt; классы на основе FormView</target>
        </trans-unit>
        <trans-unit id="9443cc483fc4f79eee63f7b91ff9b63be753eaf3" translate="yes" xml:space="preserve">
          <source>Adds an item to the feed. All args are expected to be strings except &lt;code&gt;pubdate&lt;/code&gt; and &lt;code&gt;updateddate&lt;/code&gt;, which are &lt;code&gt;datetime.datetime&lt;/code&gt; objects, and &lt;code&gt;enclosures&lt;/code&gt;, which is a list of &lt;code&gt;Enclosure&lt;/code&gt; instances.</source>
          <target state="translated">Добавляет элемент в канал. Ожидается, что все аргументы будут строками, кроме &lt;code&gt;pubdate&lt;/code&gt; и &lt;code&gt;updateddate&lt;/code&gt; , которые являются объектами &lt;code&gt;datetime.datetime&lt;/code&gt; , и &lt;code&gt;enclosures&lt;/code&gt; , представляющими собой список экземпляров &lt;code&gt;Enclosure&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3215cc38c2b33036efd88026a859c0cf5388f402" translate="yes" xml:space="preserve">
          <source>Adds protection against Cross Site Request Forgeries by adding hidden form fields to POST forms and checking requests for the correct value. See the &lt;a href=&quot;csrf&quot;&gt;Cross Site Request Forgery protection documentation&lt;/a&gt;.</source>
          <target state="translated">Добавляет защиту от подделок межсайтовых запросов путем добавления скрытых полей формы в формы POST и проверки правильности значений запросов. См. &lt;a href=&quot;csrf&quot;&gt;Документацию по защите от подделки межсайтовых запросов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="248f884a6debb66d33bb542947c6b5a70ec29527" translate="yes" xml:space="preserve">
          <source>Adds slashes before quotes. Useful for escaping strings in CSV, for example.</source>
          <target state="translated">Добавляет косые черты перед кавычками.Полезно,например,для экранирования строк в CSV.</target>
        </trans-unit>
        <trans-unit id="9fe6973ff05e99c675a4730464539f2a5309cce2" translate="yes" xml:space="preserve">
          <source>Adds some useful headers to the given &lt;code&gt;HttpResponse&lt;/code&gt; object:</source>
          <target state="translated">Добавляет несколько полезных заголовков к данному объекту &lt;code&gt;HttpResponse&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a032013929920ba96d6f65e3ffe00d36c0baef9d" translate="yes" xml:space="preserve">
          <source>Adds support for modern browsers to conditionally GET responses based on the &lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt; headers. It also calculates and sets an ETag if needed.</source>
          <target state="translated">Добавляет поддержку современных браузеров для условно GET-ответов на основе &lt;code&gt;ETag&lt;/code&gt; и &lt;code&gt;Last-Modified&lt;/code&gt; . Он также рассчитывает и устанавливает ETag, если это необходимо.</target>
        </trans-unit>
        <trans-unit id="c356b3798142f51ac749e338cf5674b7a71f9400" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;site&lt;/code&gt; attribute representing the current site to every incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See the &lt;a href=&quot;contrib/sites#site-middleware&quot;&gt;sites documentation&lt;/a&gt;.</source>
          <target state="translated">Добавляет атрибут &lt;code&gt;site&lt;/code&gt; представляющий текущий сайт, к каждому входящему объекту &lt;code&gt;HttpRequest&lt;/code&gt; . Смотрите &lt;a href=&quot;contrib/sites#site-middleware&quot;&gt;документацию сайтов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="664b30fbbf82f2c9316ffc7123a36e6ed05f431e" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;user&lt;/code&gt; attribute, representing the currently-logged-in user, to every incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See &lt;a href=&quot;../topics/auth/default#auth-web-requests&quot;&gt;Authentication in Web requests&lt;/a&gt;.</source>
          <target state="translated">Добавляет атрибут &lt;code&gt;user&lt;/code&gt; , представляющий текущего пользователя, вошедшего в систему, к каждому входящему объекту &lt;code&gt;HttpRequest&lt;/code&gt; . См. &lt;a href=&quot;../topics/auth/default#auth-web-requests&quot;&gt;Аутентификация в веб-запросах&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82b26bb2b7e0b4dedd5abbf9499cb1f58e215b32" translate="yes" xml:space="preserve">
          <source>Adds the argument to the value.</source>
          <target state="translated">Добавляет аргумент к значению.</target>
        </trans-unit>
        <trans-unit id="e1db2693361f92fab5512898e218f1eb6734dbaf" translate="yes" xml:space="preserve">
          <source>Adds the given filesystem path to the Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;import search path&lt;/a&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">Добавляет указанный путь файловой системы к пути &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;поиска импорта&lt;/a&gt; Python . Если это не предусмотрено, &lt;code&gt;django-admin&lt;/code&gt; будет использовать переменную среды &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="903c089d1a56e44c804837cfb1c84f16e81440b8" translate="yes" xml:space="preserve">
          <source>Adds the given filesystem path to the Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;import search path&lt;/a&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">Добавляет указанный путь к файловой системе в путь &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;поиска импорта&lt;/a&gt; Python . Если это не предусмотрено, &lt;code&gt;django-admin&lt;/code&gt; будет использовать переменную окружения &lt;code&gt;PYTHONPATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be0a5949d228cfa91cfd2972bb3ffb858416c326" translate="yes" xml:space="preserve">
          <source>Adds the specified model objects to the related object set.</source>
          <target state="translated">Добавляет указанные объекты модели в соответствующий набор объектов.</target>
        </trans-unit>
        <trans-unit id="df614a098659ffdff10d271df37bd396baae86e3" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;time_cost&lt;/code&gt; and measure the time hashing a password takes. Pick a &lt;code&gt;time_cost&lt;/code&gt; that takes an acceptable time for you. If &lt;code&gt;time_cost&lt;/code&gt; set to 1 is unacceptably slow, lower &lt;code&gt;memory_cost&lt;/code&gt;.</source>
          <target state="translated">Настройте &lt;code&gt;time_cost&lt;/code&gt; и измерьте время хэширования пароля. Выберите &lt;code&gt;time_cost&lt;/code&gt; , который занимает приемлемое для вас время. Если &lt;code&gt;time_cost&lt;/code&gt; , установленный в 1, является недопустимо медленным, уменьшите &lt;code&gt;memory_cost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa81c61f91756873608f1f7af2602b2f7fc03a81" translate="yes" xml:space="preserve">
          <source>Admin actions</source>
          <target state="translated">Административные действия</target>
        </trans-unit>
        <trans-unit id="f535d8e7c9b9ab3a3dfb3ab83bec8e5535ab79e9" translate="yes" xml:space="preserve">
          <source>Admin checks are all performed as part of the &lt;code&gt;admin&lt;/code&gt; tag.</source>
          <target state="translated">Все проверки администратора выполняются как часть тега &lt;code&gt;admin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9d7b247e2f49f891dbb48cdd1ab3b6f10c4c23" translate="yes" xml:space="preserve">
          <source>Admin documentation generator</source>
          <target state="translated">Генератор административной документации</target>
        </trans-unit>
        <trans-unit id="3aee1adc5c2281168d92436481848549843930c8" translate="yes" xml:space="preserve">
          <source>Admin site</source>
          <target state="translated">Административный сайт</target>
        </trans-unit>
        <trans-unit id="ea4395545ea1af3a57cb72e9912004568a18a70f" translate="yes" xml:space="preserve">
          <source>Administrator privileges are required to execute these commands. To do this, create a &lt;code&gt;bat&lt;/code&gt; script with the commands, right-click it, and select Run as administrator. You need to log out and log back in again for the settings to take effect.</source>
          <target state="translated">Для выполнения этих команд требуются права администратора. Для этого создайте скрипт &lt;code&gt;bat&lt;/code&gt; с командами, щелкните его правой кнопкой мыши и выберите &amp;laquo;Запуск от имени администратора&amp;raquo;. Вам нужно выйти и снова войти, чтобы настройки вступили в силу.</target>
        </trans-unit>
        <trans-unit id="dc254ff09ad8edb5e90daec2acf4e090e64a2a3c" translate="yes" xml:space="preserve">
          <source>Administrator privileges are required to execute these commands. To do this, run command prompt as administrator and enter the commands above. You need to log out and log back in again for the settings to take effect.</source>
          <target state="translated">Для выполнения этих команд требуются права администратора.Для этого запустите командную строку от имени администратора и введите команды,указанные выше.Вам нужно выйти из системы и снова войти в систему,чтобы настройки вступили в силу.</target>
        </trans-unit>
        <trans-unit id="e6be539fb22a5b9d1b2dbc3f3efee91842482592" translate="yes" xml:space="preserve">
          <source>Advanced action techniques</source>
          <target state="translated">Передовые методики действия</target>
        </trans-unit>
        <trans-unit id="7d11fcc75baee8b3a5e324b547b893ebb063f2ea" translate="yes" xml:space="preserve">
          <source>Advanced custom template tags</source>
          <target state="translated">Расширенные пользовательские теги шаблонов</target>
        </trans-unit>
        <trans-unit id="2ea5de740ecde63e7278f9c6f1ad4f38244713cc" translate="yes" xml:space="preserve">
          <source>Advanced features of &lt;code&gt;TransactionTestCase&lt;/code&gt;</source>
          <target state="translated">Расширенные возможности &lt;code&gt;TransactionTestCase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bfe0e3b7c302688acc1807007e8d8b521dfe939" translate="yes" xml:space="preserve">
          <source>Advanced queries</source>
          <target state="translated">Расширенные запросы</target>
        </trans-unit>
        <trans-unit id="6013e5a6b54a406e23e302755962d51289372466" translate="yes" xml:space="preserve">
          <source>Advanced testing topics</source>
          <target state="translated">Расширенные темы тестирования</target>
        </trans-unit>
        <trans-unit id="8176f171fd2c2a51f8e7eeff9ab6630a3285d740" translate="yes" xml:space="preserve">
          <source>Advanced tutorial: How to write reusable apps</source>
          <target state="translated">Продвинутое учебное пособие:Как писать многоразовые приложения</target>
        </trans-unit>
        <trans-unit id="3f2484833c357305a71ba8f10aa625e55a1a6622" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;GZipMiddleware&lt;/code&gt; so it won&amp;rsquo;t calculate an &lt;code&gt;ETag&lt;/code&gt; header on gzipped contents.</source>
          <target state="translated">После &lt;code&gt;GZipMiddleware&lt;/code&gt; поэтому он не будет вычислять &lt;code&gt;ETag&lt;/code&gt; заголовок на содержание с gzip'нутыми.</target>
        </trans-unit>
        <trans-unit id="86f00443055d740ee3c3763e61aeea16472d09ef" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt; if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">После &lt;code&gt;SessionMiddleware&lt;/code&gt; , если вы используете &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9289f81e58cb8e19e5576059e58ac92f6f4ba14b" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt;: can use session-based storage.</source>
          <target state="translated">После &lt;code&gt;SessionMiddleware&lt;/code&gt; : можно использовать сессионное хранилище.</target>
        </trans-unit>
        <trans-unit id="d726b0a1292337eaaae0815a0c2fa33faa692651" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt;: uses session storage.</source>
          <target state="translated">После &lt;code&gt;SessionMiddleware&lt;/code&gt; : использует хранилище сессии.</target>
        </trans-unit>
        <trans-unit id="4a5f057391aa6585b79fd3da631b77f7f1c42b44" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt;: Modifies &lt;code&gt;Vary&lt;/code&gt; header.</source>
          <target state="translated">После &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; : изменяет заголовок &lt;code&gt;Vary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2681fdd75b468f221993a3699c1f8d91d4bbbffc" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;parser.parse()&lt;/code&gt; is called, the parser hasn&amp;rsquo;t yet &amp;ldquo;consumed&amp;rdquo; the &lt;code&gt;{% endcomment %}&lt;/code&gt; tag, so the code needs to explicitly call &lt;code&gt;parser.delete_first_token()&lt;/code&gt;.</source>
          <target state="translated">После &lt;code&gt;parser.parse()&lt;/code&gt; анализатор еще не &amp;laquo;потребил&amp;raquo; тег &lt;code&gt;{% endcomment %}&lt;/code&gt; , поэтому код должен явно вызывать &lt;code&gt;parser.delete_first_token()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="281a78946c958de801c852d816af4adf36943168" translate="yes" xml:space="preserve">
          <source>After a deprecation period of your choosing (two or three feature releases for fields in Django itself), change the &lt;code&gt;system_check_deprecated_details&lt;/code&gt; attribute to &lt;code&gt;system_check_removed_details&lt;/code&gt; and update the dictionary similar to:</source>
          <target state="translated">После периода устаревания по вашему выбору (два или три выпуска функции для полей в самой Джанго), изменить &lt;code&gt;system_check_deprecated_details&lt;/code&gt; атрибут &lt;code&gt;system_check_removed_details&lt;/code&gt; и обновление словаря похожи на:</target>
        </trans-unit>
        <trans-unit id="6accf2533a2ff16ba36e8ad20774b9e6ba4a6eb7" translate="yes" xml:space="preserve">
          <source>After a ticket has a patch, it needs to be reviewed by a second set of eyes. After submitting a pull request, update the ticket metadata by setting the flags on the ticket to say &amp;ldquo;has patch&amp;rdquo;, &amp;ldquo;doesn&amp;rsquo;t need tests&amp;rdquo;, etc, so others can find it for review. Contributing doesn&amp;rsquo;t necessarily always mean writing a patch from scratch. Reviewing existing patches is also a very helpful contribution. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/triaging-tickets/&quot;&gt;Triaging tickets&lt;/a&gt; for details.</source>
          <target state="translated">После того, как у билета есть патч, его нужно рассмотреть вторым набором глаз. После отправки запроса на получение обновлений обновите метаданные заявки, установив флажки в заявке с надписью &amp;laquo;есть исправление&amp;raquo;, &amp;laquo;не нужны тесты&amp;raquo; и т. Д., Чтобы другие могли найти его для просмотра. Вклад не всегда означает написание патча с нуля. Просмотр существующих исправлений также является очень полезным вкладом. Подробнее смотрите в &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/triaging-tickets/&quot;&gt;Triaging tickets&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6abcb2ff248ea2f61984947bf36856668333da73" translate="yes" xml:space="preserve">
          <source>After a ticket has a patch, it needs to be reviewed by a second set of eyes. After submitting a pull request, update the ticket metadata by setting the flags on the ticket to say &amp;ldquo;has patch&amp;rdquo;, &amp;ldquo;doesn&amp;rsquo;t need tests&amp;rdquo;, etc, so others can find it for review. Contributing doesn&amp;rsquo;t necessarily always mean writing a patch from scratch. Reviewing existing patches is also a very helpful contribution. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/triaging-tickets/&quot;&gt;Triaging tickets&lt;/a&gt; for details.</source>
          <target state="translated">После того, как на билете есть патч, он должен быть рассмотрен второй парой глаз. После отправки запроса на перенос обновите метаданные билета, установив флажки на билете, чтобы сказать &amp;laquo;имеет патч&amp;raquo;, &amp;laquo;не требует тестов&amp;raquo; и т. Д., Чтобы другие могли найти его для просмотра. Участие не обязательно означает написание патча с нуля. Обзор существующих патчей также очень полезен. См. &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/triaging-tickets/&quot;&gt;Подробности в&lt;/a&gt; разделе &amp;laquo; Отбор билетов&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="e32c6f7dcad4ecb9998b074a7cc11c519c1f8bd3" translate="yes" xml:space="preserve">
          <source>After adding the &lt;code&gt;templatetags&lt;/code&gt; module, you will need to restart your server before you can use the tags or filters in templates.</source>
          <target state="translated">После добавления модуля &lt;code&gt;templatetags&lt;/code&gt; вам потребуется перезагрузить сервер, прежде чем вы сможете использовать теги или фильтры в шаблонах.</target>
        </trans-unit>
        <trans-unit id="1f9942a37c8cd58111bc08a610226302ee82774c" translate="yes" xml:space="preserve">
          <source>After any middleware that modifies the &lt;code&gt;Vary&lt;/code&gt; header: that header is used to pick a value for the cache hash-key.</source>
          <target state="translated">После любого промежуточного программного обеспечения, которое изменяет заголовок &lt;code&gt;Vary&lt;/code&gt; : этот заголовок используется для выбора значения для хеш-ключа кэша.</target>
        </trans-unit>
        <trans-unit id="1f06aea5ce8261b350616986ce317de50c27042d" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;save()&lt;/code&gt;, your model formset will have three new attributes containing the formset&amp;rsquo;s changes:</source>
          <target state="translated">После вызова &lt;code&gt;save()&lt;/code&gt; ваш модельный набор форм будет иметь три новых атрибута, содержащих изменения формового набора:</target>
        </trans-unit>
        <trans-unit id="c58ac7107e455c654ba47c150a89bf6b48e736fc" translate="yes" xml:space="preserve">
          <source>After clicking next, you will be prompted to confirm the selected package and &amp;ldquo;Download directory&amp;rdquo;. Click next again, this will download PostGIS and you will be asked to click next to begin the PostGIS installer. Select the default options during install. The install process includes three Yes/No dialog boxes, the default option for all three is &amp;ldquo;No&amp;rdquo;.</source>
          <target state="translated">После нажатия кнопки &amp;laquo;Далее&amp;raquo; вам будет предложено подтвердить выбранный пакет и &amp;laquo;Каталог для загрузки&amp;raquo;. Снова нажмите &amp;laquo;Далее&amp;raquo;, будет загружен PostGIS, и вам будет предложено нажать &amp;laquo;Далее&amp;raquo;, чтобы запустить установщик PostGIS. Выберите параметры по умолчанию во время установки. Процесс установки включает три диалоговых окна &amp;laquo;Да / Нет&amp;raquo;, параметр по умолчанию для всех трех - &amp;laquo;Нет&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4d390de24fb64624d4aff4859d91742174ae6775" translate="yes" xml:space="preserve">
          <source>After clicking next, you will be prompted to select your mirror, PostGIS will be downloaded, and the PostGIS installer will begin. Select only the default options during install (e.g., do not uncheck the option to create a default PostGIS database).</source>
          <target state="translated">После щелчка по следующей ссылке вам будет предложено выбрать зеркало,загрузить PostGIS и запустить программу установки PostGIS.Во время установки выберите только опции по умолчанию (например,не убирайте галочку с опции создания базы данных PostGIS по умолчанию).</target>
        </trans-unit>
        <trans-unit id="7e357a5e8113a5b7fddea0de2d89e752e5b16ef5" translate="yes" xml:space="preserve">
          <source>After committing the patch, send it to your fork on GitHub (substitute &amp;ldquo;ticket_99999&amp;rdquo; with the name of your branch if it&amp;rsquo;s different):</source>
          <target state="translated">После фиксации патча отправьте его на свой форк на GitHub (замените &amp;laquo;ticket_99999&amp;raquo; на название вашей ветки, если оно отличается):</target>
        </trans-unit>
        <trans-unit id="2aed56fcb855399b7f515c0d75a3f8bfa74e730b" translate="yes" xml:space="preserve">
          <source>After defining these URL patterns, Django will automatically add the language prefix to the URL patterns that were added by the &lt;code&gt;i18n_patterns&lt;/code&gt; function. Example:</source>
          <target state="translated">После определения этих шаблонов URL, Django автоматически добавит языковой префикс к шаблонам URL, которые были добавлены функцией &lt;code&gt;i18n_patterns&lt;/code&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="7d008e64d4a0475b85406cccc8318f86e3da9019" translate="yes" xml:space="preserve">
          <source>After defining your model, you need to sync it with the database. First, create a database migration:</source>
          <target state="translated">После определения модели необходимо синхронизировать ее с базой данных.Сначала создайте миграцию базы данных:</target>
        </trans-unit>
        <trans-unit id="8e6930a6c173b07b683b82da9d1f296b3dcb130c" translate="yes" xml:space="preserve">
          <source>After each test, Django empties only tables corresponding to models in available apps. However, at the database level, truncation may cascade to related models in unavailable apps. Furthermore &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t fired; it will be fired by the next &lt;code&gt;TransactionTestCase&lt;/code&gt;, after the correct set of applications is selected.</source>
          <target state="translated">После каждого теста Django очищает только таблицы, соответствующие моделям в доступных приложениях. Однако на уровне базы данных усечение может каскадно связываться с соответствующими моделями в недоступных приложениях. Кроме того, &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; &lt;/a&gt; не запускается; он будет запущен следующим &lt;code&gt;TransactionTestCase&lt;/code&gt; после выбора правильного набора приложений.</target>
        </trans-unit>
        <trans-unit id="b85411d44bdeb415c99e270e325cf620c6f3d48c" translate="yes" xml:space="preserve">
          <source>After identifying a bug, we wrote a test that exposes it and corrected the bug in the code so our test passes.</source>
          <target state="translated">После выявления ошибки мы написали тест,который выставляет ее и исправили ошибку в коде,чтобы наш тест прошел.</target>
        </trans-unit>
        <trans-unit id="9ca69a5e2e9e85d442e5087cec08c6e01b338c19" translate="yes" xml:space="preserve">
          <source>After incrementing the choice count, the code returns an &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; rather than a normal &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; takes a single argument: the URL to which the user will be redirected (see the following point for how we construct the URL in this case).</source>
          <target state="translated">После увеличения счетчика выбора код возвращает &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; ,&lt;/a&gt; а не обычный &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt; принимает один аргумент: URL-адрес, на который будет перенаправлен пользователь (см. Следующий пункт, как мы создаем URL-адрес в этом случае).</target>
        </trans-unit>
        <trans-unit id="774c302b2329f500a54a6b1f4edb804e0b750ee4" translate="yes" xml:space="preserve">
          <source>After installation, open the command prompt and check that the Python version matches the version you installed by executing:</source>
          <target state="translated">После установки откройте командную строку и убедитесь,что версия Python соответствует установленной вами:</target>
        </trans-unit>
        <trans-unit id="71a6e296bbb95376e2919538a9365dbb8734ff32" translate="yes" xml:space="preserve">
          <source>After installing Memcached itself, you&amp;rsquo;ll need to install a Memcached binding. There are several Python Memcached bindings available; the two most common are &lt;a href=&quot;https://pypi.org/project/python-memcached/&quot;&gt;python-memcached&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/project/pylibmc/&quot;&gt;pylibmc&lt;/a&gt;.</source>
          <target state="translated">После установки самого Memcached вам необходимо установить привязку Memcached. Существует несколько привязок Python Memcached; два наиболее распространенных - это &lt;a href=&quot;https://pypi.org/project/python-memcached/&quot;&gt;python-memcached&lt;/a&gt; и &lt;a href=&quot;https://pypi.org/project/pylibmc/&quot;&gt;pylibmc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7aa4b22c12e8c71bdc31e0284bc1ee8ce0c4ac6c" translate="yes" xml:space="preserve">
          <source>After installing Postgres.app, add the following to your &lt;code&gt;.bash_profile&lt;/code&gt; so you can run the package&amp;rsquo;s programs from the command-line. Replace &lt;code&gt;X.Y&lt;/code&gt; with the version of PostgreSQL in the Postgres.app you installed:</source>
          <target state="translated">После установки Postgres.app добавьте в свой &lt;code&gt;.bash_profile&lt;/code&gt; следующее, чтобы вы могли запускать программы пакета из командной строки. Замените &lt;code&gt;X.Y&lt;/code&gt; версией PostgreSQL в установленном вами Postgres.app:</target>
        </trans-unit>
        <trans-unit id="b736f158d630c0182bc11671267f8e1b4815968a" translate="yes" xml:space="preserve">
          <source>After installing the binary packages, you&amp;rsquo;ll want to add the following to your &lt;code&gt;.profile&lt;/code&gt; to be able to run the package programs from the command-line:</source>
          <target state="translated">После установки бинарных пакетов вы захотите добавить в свой &lt;code&gt;.profile&lt;/code&gt; следующее, чтобы иметь возможность запускать программы пакетов из командной строки:</target>
        </trans-unit>
        <trans-unit id="a60de7d58c77244f0cf00d8e784d29a1e7247f48" translate="yes" xml:space="preserve">
          <source>After passing through template response middleware, but before passing through response middleware.</source>
          <target state="translated">После прохождения через промежуточное ПО ответа шаблона,но до прохождения через промежуточное ПО ответа.</target>
        </trans-unit>
        <trans-unit id="5bee1621e895ebf9bd0640dd87cf6d184eec12d4" translate="yes" xml:space="preserve">
          <source>After reading those, if you want something a little meatier to sink your teeth into, there&amp;rsquo;s always the Python &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">После прочтения, если вы хотите, чтобы что-то немного более простое впитало ваши зубы, всегда &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; документация по тестированию юнитов Python .</target>
        </trans-unit>
        <trans-unit id="7dc0c875063a5da44991572aecb9756257b690a4" translate="yes" xml:space="preserve">
          <source>After setting the language choice, Django looks for a &lt;code&gt;next&lt;/code&gt; parameter in the &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt; data. If that is found and Django considers it to be a safe URL (i.e. it doesn&amp;rsquo;t point to a different host and uses a safe scheme), a redirect to that URL will be performed. Otherwise, Django may fall back to redirecting the user to the URL from the &lt;code&gt;Referer&lt;/code&gt; header or, if it is not set, to &lt;code&gt;/&lt;/code&gt;, depending on the nature of the request:</source>
          <target state="translated">После установки выбора языка Django ищет &lt;code&gt;next&lt;/code&gt; параметр в данных &lt;code&gt;POST&lt;/code&gt; или &lt;code&gt;GET&lt;/code&gt; . Если он найден и Django считает его безопасным URL-адресом (т. Е. Он не указывает на другой хост и использует безопасную схему), будет выполнено перенаправление на этот URL-адрес. В противном случае Django может вернуться к перенаправлению пользователя на URL из заголовка &lt;code&gt;Referer&lt;/code&gt; или, если он не установлен, на &lt;code&gt;/&lt;/code&gt; , в зависимости от характера запроса:</target>
        </trans-unit>
        <trans-unit id="3e1436ef5379ce0f1a30ea3cae55047febc6a4e9" translate="yes" xml:space="preserve">
          <source>After setting up and activating the virtual environment, run the following command:</source>
          <target state="translated">После настройки и активации виртуальной среды выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="c7620c7b76f9f6f83e5a60670049dd6c754d2eb5" translate="yes" xml:space="preserve">
          <source>After setting up and activating the virtualenv, run the following command:</source>
          <target state="translated">После настройки и активации virtualenv выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="749f4fb21ac06aa715512fb023e5e4518d514613" translate="yes" xml:space="preserve">
          <source>After somebody votes in a question, the &lt;code&gt;vote()&lt;/code&gt; view redirects to the results page for the question. Let&amp;rsquo;s write that view:</source>
          <target state="translated">После того, как кто-то проголосовал в вопросе, представление &lt;code&gt;vote()&lt;/code&gt; перенаправляет на страницу результатов для вопроса. Давайте напишем эту точку зрения:</target>
        </trans-unit>
        <trans-unit id="a217c47f5d8014faf6fc30b3753dfee60b8d8123" translate="yes" xml:space="preserve">
          <source>After the &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; cache needs to be cleared, and the referenced objects should be gone:</source>
          <target state="translated">После &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; , то &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; потребность кэша должна быть очищена, и ссылочные объекты должны исчезнуть:</target>
        </trans-unit>
        <trans-unit id="4fcd69199df456b7ec6054b8a08e330f73536452" translate="yes" xml:space="preserve">
          <source>After the field has been cleaned and validated, the &lt;code&gt;UploadedFile&lt;/code&gt; object will have an additional &lt;code&gt;image&lt;/code&gt; attribute containing the Pillow &lt;a href=&quot;https://pillow.readthedocs.io/en/latest/reference/Image.html&quot;&gt;Image&lt;/a&gt; instance used to check if the file was a valid image. Pillow closes the underlying file descriptor after verifying an image, so whilst non-image data attributes, such as &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;, are available, methods that access the underlying image data, such as &lt;code&gt;getdata()&lt;/code&gt; or &lt;code&gt;getpixel()&lt;/code&gt;, cannot be used without reopening the file. For example:</source>
          <target state="translated">После того, как поле было очищено и проверено, объект &lt;code&gt;UploadedFile&lt;/code&gt; будет иметь дополнительный атрибут &lt;code&gt;image&lt;/code&gt; содержащий экземпляр &lt;a href=&quot;https://pillow.readthedocs.io/en/latest/reference/Image.html&quot;&gt;изображения&lt;/a&gt; подушки, используемый для проверки, является ли файл допустимым изображением. Подушка закрывает базовый дескриптор файла после проверки изображения, поэтому, пока доступны атрибуты данных, не относящиеся к изображению, такие как &lt;code&gt;format&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; и &lt;code&gt;width&lt;/code&gt; , методы, которые обращаются к данным базового изображения, таким как &lt;code&gt;getdata()&lt;/code&gt; или &lt;code&gt;getpixel()&lt;/code&gt; , не могут использоваться без повторного открытия файла. Например:</target>
        </trans-unit>
        <trans-unit id="14ee9b4c42739ebdc299c256addfef73b7b4d50d" translate="yes" xml:space="preserve">
          <source>After the installation has completed, you can verify your Django installation by executing &lt;code&gt;django-admin --version&lt;/code&gt; in the command prompt.</source>
          <target state="translated">После завершения установки вы можете проверить установку Django, выполнив &lt;code&gt;django-admin --version&lt;/code&gt; в командной строке.</target>
        </trans-unit>
        <trans-unit id="81017b450bb562125665785f46775a28051421ac" translate="yes" xml:space="preserve">
          <source>After the previous tutorials, our project should look like this:</source>
          <target state="translated">После предыдущих уроков наш проект должен выглядеть так:</target>
        </trans-unit>
        <trans-unit id="ac7e3cfe6d36fcc8800548c504c913db5ea08bda" translate="yes" xml:space="preserve">
          <source>After the tables are created, execute an &lt;code&gt;ALTER TABLE&lt;/code&gt; statement to convert a table to a new storage engine (such as InnoDB):</source>
          <target state="translated">После создания таблиц выполните инструкцию &lt;code&gt;ALTER TABLE&lt;/code&gt; , чтобы преобразовать таблицу в новый механизм хранения (например, InnoDB):</target>
        </trans-unit>
        <trans-unit id="833c95b13093b5d748d6f17ddb4f86d50a0bd954" translate="yes" xml:space="preserve">
          <source>After those, if you&amp;rsquo;re still hungry for more information about contributing, you can always browse through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains a ton of useful information and should be your first source for answering any questions you might have.</source>
          <target state="translated">После этого, если вы все еще жаждете получить дополнительную информацию об участии, вы всегда можете просмотреть остальную часть &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;документации Django о внесении вклада&lt;/a&gt; . Он содержит массу полезной информации и должен быть вашим первым источником ответов на любые ваши вопросы.</target>
        </trans-unit>
        <trans-unit id="4392b74ce8f91504a3283e7e6876633a2885864e" translate="yes" xml:space="preserve">
          <source>After those, if you&amp;rsquo;re still hungry for more information about contributing, you can always browse through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains a ton of useful information and should be your first source for answering any questions you might have.</source>
          <target state="translated">После этого, если вы все еще жаждете получить дополнительную информацию об участии, вы всегда можете просмотреть остальную часть &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/index/&quot;&gt;документации Django по участию&lt;/a&gt; . Он содержит массу полезной информации и должен быть вашим первым источником ответов на любые вопросы, которые могут у вас возникнуть.</target>
        </trans-unit>
        <trans-unit id="454dbfd1138b5db0a027bc12c3fb8a7dd0e23f9f" translate="yes" xml:space="preserve">
          <source>After you call this method, the test client will have all the cookies and session data cleared to defaults. Subsequent requests will appear to come from an &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">После вызова этого метода тестовый клиент очистит все файлы cookie и данные сеанса до значений по умолчанию. Последующие запросы будут поступать от &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6524b580510278d19c4826bcc1d86bb9822378" translate="yes" xml:space="preserve">
          <source>After you call this method, the test client will have all the cookies and session data required to pass any login-based tests that may form part of a view.</source>
          <target state="translated">После того,как вы позвоните в этот метод,тестовый клиент будет иметь все куки и данные сессии,необходимые для прохождения любых тестов на основе входа,которые могут быть частью представления.</target>
        </trans-unit>
        <trans-unit id="8ccf916013f6746ea045fc6d05d7dcf32415b07c" translate="yes" xml:space="preserve">
          <source>After you create your message file &amp;ndash; and each time you make changes to it &amp;ndash; you&amp;rsquo;ll need to compile it into a more efficient form, for use by &lt;code&gt;gettext&lt;/code&gt;. Do this with the &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages&lt;/code&gt;&lt;/a&gt; utility.</source>
          <target state="translated">После того, как вы создадите файл сообщения - и каждый раз, когда вы будете вносить в него изменения - вам нужно будет скомпилировать его в более эффективную форму для использования &lt;code&gt;gettext&lt;/code&gt; . Сделайте это с &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt; утилиты django-admin compilemessages .</target>
        </trans-unit>
        <trans-unit id="9f142d8357e94c93bff8e02e5c80a67c40758627" translate="yes" xml:space="preserve">
          <source>After you have run the tests, fix any failures. While you have the release notes fresh in your mind, it may also be a good time to take advantage of new features in Django by refactoring your code to eliminate any deprecation warnings.</source>
          <target state="translated">После того,как вы запустили тесты,исправьте любые неполадки.Несмотря на то,что у вас свежие примечания к выпуску,это также может быть подходящим моментом,чтобы воспользоваться новыми возможностями в Django,рефакторингуя ваш код для устранения любых предупреждений об обесценивании.</target>
        </trans-unit>
        <trans-unit id="75948cd661d2774dc7b4af27c50f524b8ec48d16" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve created and activated a virtual environment, enter the command:</source>
          <target state="translated">После того, как вы создали и активировали виртуальную среду, введите команду:</target>
        </trans-unit>
        <trans-unit id="6c00f9f95d692f9f5d52dc64a0c910df8598d94d" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve created the translations, the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function will return the URL in the active language. Example:</source>
          <target state="translated">После того как вы создали переводы, функция &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; вернет URL на активном языке. Пример:</target>
        </trans-unit>
        <trans-unit id="a83bf81fa68c7adb95861b4267776fda80bfd431" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve either set &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; or called &lt;code&gt;configure()&lt;/code&gt;, you&amp;rsquo;ll need to call &lt;a href=&quot;../ref/applications#django.setup&quot;&gt;&lt;code&gt;django.setup()&lt;/code&gt;&lt;/a&gt; to load your settings and populate Django&amp;rsquo;s application registry. For example:</source>
          <target state="translated">После того, как вы установили &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; или вызвали &lt;code&gt;configure()&lt;/code&gt; , вам нужно вызвать &lt;a href=&quot;../ref/applications#django.setup&quot;&gt; &lt;code&gt;django.setup()&lt;/code&gt; &lt;/a&gt; чтобы загрузить ваши настройки и заполнить реестр приложений Django. Например:</target>
        </trans-unit>
        <trans-unit id="c00c09156a5af6e5afc0c9ffaf58bed13a5f856f" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve either set &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; or called &lt;code&gt;configure()&lt;/code&gt;, you&amp;rsquo;ll need to call &lt;a href=&quot;../ref/applications#django.setup&quot;&gt;&lt;code&gt;django.setup()&lt;/code&gt;&lt;/a&gt; to load your settings and populate Django&amp;rsquo;s application registry. For example:</source>
          <target state="translated">После того, как вы установили &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; или вызвали &lt;code&gt;configure()&lt;/code&gt; , вам нужно будет вызвать &lt;a href=&quot;../ref/applications#django.setup&quot;&gt; &lt;code&gt;django.setup()&lt;/code&gt; &lt;/a&gt; чтобы загрузить ваши настройки и заполнить реестр приложений Django. Например:</target>
        </trans-unit>
        <trans-unit id="6eb54cbde4f24bf5c6af4e6dd0b7a585b18eb988" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve installed the KyngChaos binaries and modified your &lt;code&gt;PATH&lt;/code&gt;, as described above, &lt;code&gt;psycopg2&lt;/code&gt; may be installed using the following command:</source>
          <target state="translated">После того, как вы установили двоичные файлы KyngChaos и изменили свой &lt;code&gt;PATH&lt;/code&gt; , как описано выше, &lt;code&gt;psycopg2&lt;/code&gt; может быть установлен с помощью следующей команды:</target>
        </trans-unit>
        <trans-unit id="88b1186bb9c94ec6c9603db091e796a247ecb17d" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve taken these steps, you&amp;rsquo;ll be able to use the admin site by visiting the URL you hooked it into (&lt;code&gt;/admin/&lt;/code&gt;, by default).</source>
          <target state="translated">После того, как вы выполните эти шаги, вы сможете использовать сайт администратора, посетив URL-адрес, по которому вы его подключили ( по умолчанию &lt;code&gt;/admin/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="84768878fd67444cf6aeb2b9f70fb7f8c46001a3" translate="yes" xml:space="preserve">
          <source>Afterwards, invoke the Django shell from the &lt;code&gt;geodjango&lt;/code&gt; project directory:</source>
          <target state="translated">После этого вызовите оболочку Django из &lt;code&gt;geodjango&lt;/code&gt; проекта geodjango :</target>
        </trans-unit>
        <trans-unit id="b0c1764bcde7adb7e9f9737f8f18137d064ad3a9" translate="yes" xml:space="preserve">
          <source>Afterwards, you can also install the KyngChaos binary packages for &lt;a href=&quot;https://www.kyngchaos.com/software/postgres&quot;&gt;PostgreSQL and PostGIS&lt;/a&gt;.</source>
          <target state="translated">После этого вы также можете установить бинарные пакеты KyngChaos для &lt;a href=&quot;https://www.kyngchaos.com/software/postgres&quot;&gt;PostgreSQL и PostGIS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="609ae4a2b711e9851698f5c7ccad2895c556ca86" translate="yes" xml:space="preserve">
          <source>Afterwards, you should familiarize yourself with the changes that were made in the new Django version(s):</source>
          <target state="translated">После этого вам следует ознакомиться с изменениями,внесенными в новую версию(и)Django:</target>
        </trans-unit>
        <trans-unit id="76d9eb1aa30256965c27105fa5717d6b2a4ac66b" translate="yes" xml:space="preserve">
          <source>Again, &lt;code&gt;polls&lt;/code&gt; is a minimal application, but however complex it grows in the future and whatever other code it interacts with, we now have some guarantee that the method we have written tests for will behave in expected ways.</source>
          <target state="translated">Опять же, &lt;code&gt;polls&lt;/code&gt; - это минимальное приложение, но каким бы сложным оно ни росло в будущем, и независимо от того, с каким другим кодом он взаимодействует, у нас теперь есть некоторая гарантия того, что метод, для которого мы написали тесты, будет вести себя ожидаемым образом.</target>
        </trans-unit>
        <trans-unit id="76edc27b78551b9907274be664d0d529b149a682" translate="yes" xml:space="preserve">
          <source>Again, defining project-specific configuration classes in a submodule called &lt;code&gt;apps&lt;/code&gt; is a convention, not a requirement.</source>
          <target state="translated">Опять же, определение классов конфигурации для конкретного проекта в подмодуле, называемом &lt;code&gt;apps&lt;/code&gt; является соглашением, а не требованием.</target>
        </trans-unit>
        <trans-unit id="4800e0bd8f8bf2f1ef78d7b6e6b1e6c25da9510a" translate="yes" xml:space="preserve">
          <source>Again, middleware are run in reverse order during the response phase, which includes &lt;code&gt;process_exception&lt;/code&gt;. If an exception middleware returns a response, the &lt;code&gt;process_exception&lt;/code&gt; methods of the middleware classes above that middleware won&amp;rsquo;t be called at all.</source>
          <target state="translated">Опять же, промежуточное программное обеспечение запускается в обратном порядке на этапе ответа, который включает в себя &lt;code&gt;process_exception&lt;/code&gt; . Если промежуточное программное обеспечение исключения возвращает ответ, методы &lt;code&gt;process_exception&lt;/code&gt; классов промежуточного программного обеспечения выше этого промежуточного программного обеспечения вообще не будут вызываться.</target>
        </trans-unit>
        <trans-unit id="07f00b688ea0b766303ecee7f61a1a4a6d54efd8" translate="yes" xml:space="preserve">
          <source>Again, the above is only a selection of the whole list; see the &lt;a href=&quot;builtins#ref-templates-builtins-tags&quot;&gt;built-in tag reference&lt;/a&gt; for the complete list.</source>
          <target state="translated">Опять же, выше, это только выбор из всего списка; см. &lt;a href=&quot;builtins#ref-templates-builtins-tags&quot;&gt;ссылку&lt;/a&gt; на встроенный тег для полного списка.</target>
        </trans-unit>
        <trans-unit id="72d90458b1cb9acc91a52abbd86072d9d2f737ca" translate="yes" xml:space="preserve">
          <source>Again, these are just a few examples; see the &lt;a href=&quot;builtins#ref-templates-builtins-filters&quot;&gt;built-in filter reference&lt;/a&gt; for the complete list.</source>
          <target state="translated">Опять же, это всего лишь несколько примеров; см. &lt;a href=&quot;builtins#ref-templates-builtins-filters&quot;&gt;ссылку&lt;/a&gt; на встроенный фильтр для полного списка.</target>
        </trans-unit>
        <trans-unit id="f2a7af272e8491c8ef8998c146668b3190e291a3" translate="yes" xml:space="preserve">
          <source>Again, these are just short descriptions of the most common field options. Full details can be found in the &lt;a href=&quot;../../ref/models/fields#common-model-field-options&quot;&gt;common model field option reference&lt;/a&gt;.</source>
          <target state="translated">Опять же, это лишь краткие описания наиболее распространенных вариантов полей. Полную информацию можно найти в &lt;a href=&quot;../../ref/models/fields#common-model-field-options&quot;&gt;справочнике опций общего поля модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ad6465156415426b3b441f0d6cb9831006c7d96" translate="yes" xml:space="preserve">
          <source>Again, this is a minimal example; your tests may require additional settings to run.</source>
          <target state="translated">Опять же,это минимальный пример;для выполнения ваших тестов могут потребоваться дополнительные настройки.</target>
        </trans-unit>
        <trans-unit id="22f87c4755a2a72211f05d455242c68a7b90af59" translate="yes" xml:space="preserve">
          <source>Again, this only scratches the surface. A complete reference can be found in the &lt;a href=&quot;../../ref/models/querysets#field-lookups&quot;&gt;field lookup reference&lt;/a&gt;.</source>
          <target state="translated">Опять же, это только царапины на поверхности. Полная ссылка может быть найдена в &lt;a href=&quot;../../ref/models/querysets#field-lookups&quot;&gt;справочнике поиска поля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f6e5271c1968addea0910c36407cb68adbcc2a4" translate="yes" xml:space="preserve">
          <source>Again, we stress that this behavior is on by default. If you&amp;rsquo;re using Django&amp;rsquo;s template system, you&amp;rsquo;re protected.</source>
          <target state="translated">Опять же, мы подчеркиваем, что это поведение включено по умолчанию. Если вы используете систему шаблонов Django, вы защищены.</target>
        </trans-unit>
        <trans-unit id="6a8e8189f1313ddd69a6c196be4e792c160e8ade" translate="yes" xml:space="preserve">
          <source>Aggregate</source>
          <target state="translated">Aggregate</target>
        </trans-unit>
        <trans-unit id="558d7aad6e94b62a3c3d222979b260b60b6db7d2" translate="yes" xml:space="preserve">
          <source>Aggregate Functions</source>
          <target state="translated">Совокупные функции</target>
        </trans-unit>
        <trans-unit id="58db3b6eabf8f4ca517fda205de7d76143146986" translate="yes" xml:space="preserve">
          <source>Aggregate functions for statistics</source>
          <target state="translated">Функции группировки для статистики</target>
        </trans-unit>
        <trans-unit id="e592a786dfbb7bba39abe800dc70d129c6dce799" translate="yes" xml:space="preserve">
          <source>Aggregates can also participate in filters. Any &lt;code&gt;filter()&lt;/code&gt; (or &lt;code&gt;exclude()&lt;/code&gt;) applied to normal model fields will have the effect of constraining the objects that are considered for aggregation.</source>
          <target state="translated">Агрегаты также могут участвовать в фильтрах. Любой &lt;code&gt;filter()&lt;/code&gt; (или &lt;code&gt;exclude()&lt;/code&gt; ), примененный к полям обычной модели, будет иметь эффект ограничения объектов, которые рассматриваются для агрегирования.</target>
        </trans-unit>
        <trans-unit id="0c1907fa8ba92171ecd5a41aa1138a68fd39e6c3" translate="yes" xml:space="preserve">
          <source>Aggregates may be used within a &lt;code&gt;Subquery&lt;/code&gt;, but they require a specific combination of &lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;querysets#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; to get the subquery grouping correct.</source>
          <target state="translated">Агрегаты могут использоваться в &lt;code&gt;Subquery&lt;/code&gt; , но для правильной группировки подзапроса им требуется определенная комбинация &lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;querysets#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3046a0b95ce675e13e620164db3548ddbeed47d" translate="yes" xml:space="preserve">
          <source>Aggregates specified using keyword arguments will use the keyword as the name for the annotation. Anonymous arguments will have a name generated for them based upon the name of the aggregate function and the model field that is being aggregated. Complex aggregates cannot use anonymous arguments and must specify a keyword argument as an alias.</source>
          <target state="translated">Агрегаты,заданные с помощью аргументов ключевых слов,будут использовать ключевое слово в качестве имени для аннотации.Анонимные аргументы будут иметь имя,сгенерированное для них на основе имени агрегатной функции и поля модели,которое агрегируется.Сложные агрегаты не могут использовать анонимные аргументы и должны указывать аргумент ключевого слова в качестве псевдонима.</target>
        </trans-unit>
        <trans-unit id="4c54474caf51a4cfcf55ae1aeaad92afdaea6ae2" translate="yes" xml:space="preserve">
          <source>Aggregates the logic of multiple fields that together produce a single value.</source>
          <target state="translated">Сопоставляет логику нескольких полей,которые вместе дают одно значение.</target>
        </trans-unit>
        <trans-unit id="c5224068860504ef288a954b021f18be1d0eca82" translate="yes" xml:space="preserve">
          <source>Aggregating annotations</source>
          <target state="translated">Сводные аннотации</target>
        </trans-unit>
        <trans-unit id="b9ba037c0e4c06d192c83e08070b15787f07daaa" translate="yes" xml:space="preserve">
          <source>Aggregation</source>
          <target state="translated">Aggregation</target>
        </trans-unit>
        <trans-unit id="8744763c19352d1e7e8a834af21ab845a14c6d4a" translate="yes" xml:space="preserve">
          <source>Aggregation functions</source>
          <target state="translated">Агрегационные функции</target>
        </trans-unit>
        <trans-unit id="db05f7da09b2a0260f41b164da50f58bf58d7db4" translate="yes" xml:space="preserve">
          <source>Aggregation functions return &lt;code&gt;None&lt;/code&gt; when used with an empty &lt;code&gt;QuerySet&lt;/code&gt;. For example, the &lt;code&gt;Sum&lt;/code&gt; aggregation function returns &lt;code&gt;None&lt;/code&gt; instead of &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; contains no entries. An exception is &lt;code&gt;Count&lt;/code&gt;, which does return &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; is empty.</source>
          <target state="translated">Функции агрегирования возвращают &lt;code&gt;None&lt;/code&gt; при использовании с пустым &lt;code&gt;QuerySet&lt;/code&gt; . Например, функция агрегирования &lt;code&gt;Sum&lt;/code&gt; возвращает &lt;code&gt;None&lt;/code&gt; вместо &lt;code&gt;0&lt;/code&gt; , если &lt;code&gt;QuerySet&lt;/code&gt; не содержит записей. Исключением является &lt;code&gt;Count&lt;/code&gt; , который возвращает &lt;code&gt;0&lt;/code&gt; , если &lt;code&gt;QuerySet&lt;/code&gt; пуст.</target>
        </trans-unit>
        <trans-unit id="28526bd2f39d981e3a8e47d55d1edc91059ed733" translate="yes" xml:space="preserve">
          <source>Aggregations and other &lt;code&gt;QuerySet&lt;/code&gt; clauses</source>
          <target state="translated">Агрегации и другие предложения &lt;code&gt;QuerySet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03401c7929a3c8c6e403e43f42554e9b39a016bc" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.point_count&quot;&gt;&lt;code&gt;point_count&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.point_count&quot;&gt; &lt;code&gt;point_count&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89a10a12a5bd894bfe79c45dad116ea940883dff" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference.proj&quot;&gt;&lt;code&gt;SpatialReference.proj&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference.proj&quot;&gt; &lt;code&gt;SpatialReference.proj&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="311340d0f664404d0e32bcc705f7f5a3f899a664" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.json&quot;&gt;&lt;code&gt;GEOSGeometry.json&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.json&quot;&gt; &lt;code&gt;GEOSGeometry.json&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eea85015493bafd873240e2440370250d63e355a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; класса.</target>
        </trans-unit>
        <trans-unit id="3139c96ef36bdd16b025d9f6b3f8b24e7ab6c197" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; класса.</target>
        </trans-unit>
        <trans-unit id="d3596c0273800b5bfe61283f267b07dcfe497e68" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt;&lt;code&gt;force_str()&lt;/code&gt;&lt;/a&gt; for backwards compatibility, especially in code that supports Python 2.</source>
          <target state="translated">Псевдоним &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt; &lt;code&gt;force_str()&lt;/code&gt; &lt;/a&gt; для обратной совместимости, особенно в коде, который поддерживает Python 2.</target>
        </trans-unit>
        <trans-unit id="e367d79c8df65fe0d42fc97a7d15eb1a67e28fd5" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#django.views.decorators.debug.sensitive_variables&quot;&gt;&lt;code&gt;sensitive_variables()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.decorators.debug.sensitive_post_parameters&quot;&gt;&lt;code&gt;sensitive_post_parameters()&lt;/code&gt;&lt;/a&gt; do is, respectively, annotate the decorated function with the names of sensitive variables and annotate the &lt;code&gt;HttpRequest&lt;/code&gt; object with the names of sensitive POST parameters, so that this sensitive information can later be filtered out of reports when an error occurs. The actual filtering is done by Django&amp;rsquo;s default error reporter filter: &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt;. This filter uses the decorators&amp;rsquo; annotations to replace the corresponding values with stars (&lt;code&gt;**********&lt;/code&gt;) when the error reports are produced. If you wish to override or customize this default behavior for your entire site, you need to define your own filter class and tell Django to use it via the &lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER_FILTER&quot;&gt;&lt;code&gt;DEFAULT_EXCEPTION_REPORTER_FILTER&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">Все функции &lt;a href=&quot;#django.views.decorators.debug.sensitive_variables&quot;&gt; &lt;code&gt;sensitive_variables()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.views.decorators.debug.sensitive_post_parameters&quot;&gt; &lt;code&gt;sensitive_post_parameters()&lt;/code&gt; &lt;/a&gt; соответственно аннотируют декорированную функцию именами чувствительных переменных и аннотируют объект &lt;code&gt;HttpRequest&lt;/code&gt; именами чувствительных параметров POST, так что эта конфиденциальная информация впоследствии может быть отфильтрована из отчетов, когда ошибка происходит. Фактическая фильтрация выполняется фильтром репортера ошибок Django по умолчанию: &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt; &lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt; &lt;/a&gt; . Этот фильтр использует аннотации декораторов для замены соответствующих значений звездами ( &lt;code&gt;**********&lt;/code&gt; ) когда создаются отчеты об ошибках. Если вы хотите переопределить или настроить это поведение по умолчанию для всего сайта, вам нужно определить свой собственный класс фильтра и указать Django использовать его с помощью параметра &lt;a href=&quot;../ref/settings#std:setting-DEFAULT_EXCEPTION_REPORTER_FILTER&quot;&gt; &lt;code&gt;DEFAULT_EXCEPTION_REPORTER_FILTER&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a8039f9e6b2179f06189ad75d841b92549f36262" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.PasswordResetView&quot;&gt;&lt;code&gt;PasswordResetView&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">Все токены &lt;a href=&quot;../topics/auth/default#django.contrib.auth.views.PasswordResetView&quot;&gt; &lt;code&gt;PasswordResetView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83ad2f51e4998821b250c8647a84c6d07b6ed7e4" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../topics/http/sessions&quot;&gt;sessions&lt;/a&gt; if you are using any other session backend than &lt;code&gt;django.contrib.sessions.backends.cache&lt;/code&gt;, or are using the default &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Все &lt;a href=&quot;../topics/http/sessions&quot;&gt;сеансы,&lt;/a&gt; если вы используете любой другой сеансовый бэкэнд, кроме &lt;code&gt;django.contrib.sessions.backends.cache&lt;/code&gt; , или используете по умолчанию &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04ac9d489c3dc8f1a010bfe9b454bb3b904669e8" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;contrib/messages&quot;&gt;messages&lt;/a&gt; if you are using &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.cookie.CookieStorage&quot;&gt;&lt;code&gt;CookieStorage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt;&lt;code&gt;FallbackStorage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Все &lt;a href=&quot;contrib/messages&quot;&gt;сообщения&lt;/a&gt; , если вы используете &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.cookie.CookieStorage&quot;&gt; &lt;code&gt;CookieStorage&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;contrib/messages#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt; &lt;code&gt;FallbackStorage&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0384f79740400bf6124e127c5152b7d8fa1cdbc2" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; subclasses are run first.</source>
          <target state="translated">Все подклассы &lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; запускаются первыми.</target>
        </trans-unit>
        <trans-unit id="31517b0b1c71d2abf5c73d7d73dc156598e93d51" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;SessionStore&lt;/code&gt; classes available in Django inherit from &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt;&lt;code&gt;SessionBase&lt;/code&gt;&lt;/a&gt; and implement data manipulation methods, namely:</source>
          <target state="translated">Все &lt;code&gt;SessionStore&lt;/code&gt; классы , доступные в Django наследовать от &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt; &lt;code&gt;SessionBase&lt;/code&gt; &lt;/a&gt; и реализации методов манипулирования данными, а именно:</target>
        </trans-unit>
        <trans-unit id="c9f1617e377da8269575590aa14bf2bce27cdb91" translate="yes" xml:space="preserve">
          <source>All Django wants is that &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. Or an exception.</source>
          <target state="translated">Все, что хочет Джанго, это &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; . Или исключение.</target>
        </trans-unit>
        <trans-unit id="9dd77df42cbf9e4375aa2cccefdd1a4331364ccb" translate="yes" xml:space="preserve">
          <source>All POST parameters are systematically filtered out of error reports for certain &lt;a href=&quot;../topics/auth/default#module-django.contrib.auth.views&quot;&gt;&lt;code&gt;django.contrib.auth.views&lt;/code&gt;&lt;/a&gt; views (&lt;code&gt;login&lt;/code&gt;, &lt;code&gt;password_reset_confirm&lt;/code&gt;, &lt;code&gt;password_change&lt;/code&gt;, and &lt;code&gt;add_view&lt;/code&gt; and &lt;code&gt;user_change_password&lt;/code&gt; in the &lt;code&gt;auth&lt;/code&gt; admin) to prevent the leaking of sensitive information such as user passwords.</source>
          <target state="translated">Все параметры POST систематически отфильтровываются из отчетов об ошибках для определенных представлений &lt;a href=&quot;../topics/auth/default#module-django.contrib.auth.views&quot;&gt; &lt;code&gt;django.contrib.auth.views&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;login&lt;/code&gt; , &lt;code&gt;password_reset_confirm&lt;/code&gt; , &lt;code&gt;password_change&lt;/code&gt; и &lt;code&gt;add_view&lt;/code&gt; и &lt;code&gt;user_change_password&lt;/code&gt; в &lt;code&gt;auth&lt;/code&gt; admin) для предотвращения утечки конфиденциальной информации, такой как пароли пользователей.</target>
        </trans-unit>
        <trans-unit id="0b711e4e0c0aa1b459af24f49b004fe6a8f8910a" translate="yes" xml:space="preserve">
          <source>All aggregates have the &lt;a href=&quot;../../models/querysets#aggregate-filter&quot;&gt;filter&lt;/a&gt; keyword argument.</source>
          <target state="translated">Все агрегаты имеют аргумент ключевого слова &lt;a href=&quot;../../models/querysets#aggregate-filter&quot;&gt;фильтра&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8d288bc11de64752d70a611e5d42fa8b3b32332" translate="yes" xml:space="preserve">
          <source>All aggregates have the following parameters in common:</source>
          <target state="translated">Все агрегаты имеют следующие общие параметры:</target>
        </trans-unit>
        <trans-unit id="7a23a0a248b43bbcfef231f9bbc931de01093aed" translate="yes" xml:space="preserve">
          <source>All arguments passed to &lt;code&gt;push()&lt;/code&gt; will be passed to the &lt;code&gt;dict&lt;/code&gt; constructor used to build the new context level.</source>
          <target state="translated">Все аргументы, переданные &lt;code&gt;push()&lt;/code&gt; будут переданы конструктору &lt;code&gt;dict&lt;/code&gt; , используемому для создания нового уровня контекста.</target>
        </trans-unit>
        <trans-unit id="fe5fd9064b79f1bef279924828a3bad888755038" translate="yes" xml:space="preserve">
          <source>All attributes can be set in your derived class and can be used in &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#ref-basecommand-subclasses&quot;&gt;subclasses&lt;/a&gt;.</source>
          <target state="translated">Все атрибуты могут быть установлены в производном классе и могут быть использованы в &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt; &amp;laquo;s &lt;a href=&quot;#ref-basecommand-subclasses&quot;&gt;подклассов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a9a5ca4be05a737b99621754bef89baa865d53b" translate="yes" xml:space="preserve">
          <source>All attributes should be considered read-only unless stated otherwise.</source>
          <target state="translated">Все атрибуты должны рассматриваться только для чтения,если не указано иное.</target>
        </trans-unit>
        <trans-unit id="3654cf136b268bf0a4f4bf5e1314d277651c1fe1" translate="yes" xml:space="preserve">
          <source>All attributes should be considered read-only, unless stated otherwise.</source>
          <target state="translated">Все атрибуты должны рассматриваться как предназначенные только для чтения,если не указано иное.</target>
        </trans-unit>
        <trans-unit id="6c4a691f96ada2abf291b5d01a2c703144bc487d" translate="yes" xml:space="preserve">
          <source>All authentication views</source>
          <target state="translated">Все виды аутентификации</target>
        </trans-unit>
        <trans-unit id="799abb870d053e1b0e49a20db77bfd8d0926901c" translate="yes" xml:space="preserve">
          <source>All data is now dumped with Unicode. If you need the previous behavior, pass &lt;code&gt;allow_unicode=False&lt;/code&gt; to the &lt;code&gt;serializers.serialize()&lt;/code&gt; function.</source>
          <target state="translated">Все данные теперь выгружаются с помощью Unicode. Если вам нужно предыдущее поведение, передайте &lt;code&gt;allow_unicode=False&lt;/code&gt; функции &lt;code&gt;serializers.serialize()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78dad26e1457753d4c81a5622a385195e1ed4091" translate="yes" xml:space="preserve">
          <source>All data is now dumped with Unicode. If you need the previous behavior, pass &lt;code&gt;ensure_ascii=True&lt;/code&gt; to the &lt;code&gt;serializers.serialize()&lt;/code&gt; function.</source>
          <target state="translated">Все данные теперь выгружаются с помощью Unicode. Если вам нужно предыдущее поведение, передайте &lt;code&gt;ensure_ascii=True&lt;/code&gt; функции &lt;code&gt;serializers.serialize()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d2cc8e4b1a53e5ff26f7c2253d15ca956b99f0e" translate="yes" xml:space="preserve">
          <source>All examples in the reference below are given for geometry fields and inputs, but the lookups can be used the same way with rasters on both sides. Whenever a lookup doesn&amp;rsquo;t support raster input, the input is automatically converted to a geometry where necessary using the &lt;a href=&quot;https://postgis.net/docs/RT_ST_Polygon.html&quot;&gt;ST_Polygon&lt;/a&gt; function. See also the &lt;a href=&quot;db-api#spatial-lookup-raster&quot;&gt;introduction to raster lookups&lt;/a&gt;.</source>
          <target state="translated">Все примеры в приведенной ниже ссылке приведены для геометрических полей и входных данных, но поиски могут использоваться одинаково с растрами с обеих сторон. Всякий раз, когда поиск не поддерживает растровый ввод, он автоматически конвертируется в геометрию, где это необходимо, с &lt;a href=&quot;https://postgis.net/docs/RT_ST_Polygon.html&quot;&gt;помощью&lt;/a&gt; функции ST_Polygon . Смотрите также &lt;a href=&quot;db-api#spatial-lookup-raster&quot;&gt;введение в растровые поиски&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1164b8ae07415e94da9b058be21f6bb9956deb5c" translate="yes" xml:space="preserve">
          <source>All examples in this section use the sample &lt;code&gt;Blog&lt;/code&gt;, &lt;code&gt;Author&lt;/code&gt; and &lt;code&gt;Entry&lt;/code&gt; models defined at the top of this page.</source>
          <target state="translated">Все примеры в этом разделе используют образцы моделей &lt;code&gt;Blog&lt;/code&gt; , &lt;code&gt;Author&lt;/code&gt; и &lt;code&gt;Entry&lt;/code&gt; , определенные в верхней части этой страницы.</target>
        </trans-unit>
        <trans-unit id="02c9e7a76c652166d38ab264750ff35c60dc4b46" translate="yes" xml:space="preserve">
          <source>All file upload handlers should be subclasses of &lt;code&gt;django.core.files.uploadhandler.FileUploadHandler&lt;/code&gt;. You can define upload handlers wherever you wish.</source>
          <target state="translated">Все обработчики загрузки файлов должны быть подклассами &lt;code&gt;django.core.files.uploadhandler.FileUploadHandler&lt;/code&gt; . Вы можете определить обработчики загрузки, где вы хотите.</target>
        </trans-unit>
        <trans-unit id="19a5a27019567030d2cbca69e09abcfb4975cafd" translate="yes" xml:space="preserve">
          <source>All form classes are created as subclasses of either &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;django.forms.Form&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;django.forms.ModelForm&lt;/code&gt;&lt;/a&gt;. You can think of &lt;code&gt;ModelForm&lt;/code&gt; as a subclass of &lt;code&gt;Form&lt;/code&gt;. &lt;code&gt;Form&lt;/code&gt; and &lt;code&gt;ModelForm&lt;/code&gt; actually inherit common functionality from a (private) &lt;code&gt;BaseForm&lt;/code&gt; class, but this implementation detail is rarely important.</source>
          <target state="translated">Все классы форм создаются как подклассы &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;django.forms.Form&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;django.forms.ModelForm&lt;/code&gt; &lt;/a&gt; . Вы можете думать о &lt;code&gt;ModelForm&lt;/code&gt; как о подклассе &lt;code&gt;Form&lt;/code&gt; . &lt;code&gt;Form&lt;/code&gt; и &lt;code&gt;ModelForm&lt;/code&gt; на самом деле наследуют общие функциональные возможности от (частного) класса &lt;code&gt;BaseForm&lt;/code&gt; , но эта деталь реализации редко важна.</target>
        </trans-unit>
        <trans-unit id="9082a9d4ed7be6ac91a3858cfc8e0d456bc7434e" translate="yes" xml:space="preserve">
          <source>All functions come without default aliases, so you must explicitly provide one. For example:</source>
          <target state="translated">Все функции поставляются без псевдонимов по умолчанию,поэтому вы должны явно указать его.Например:</target>
        </trans-unit>
        <trans-unit id="eb8c277929e720d58493dcd7faeaed7ee077a3e1" translate="yes" xml:space="preserve">
          <source>All keyword parameter names are turned to lowercase, and underscores are converted to hyphens.</source>
          <target state="translated">Все имена параметров ключевых слов преобразуются в нижний регистр,а символы подчеркивания-в дефисы.</target>
        </trans-unit>
        <trans-unit id="544970aea4074b488ba69731db1254ed617836c1" translate="yes" xml:space="preserve">
          <source>All loggers except &lt;a href=&quot;#django-server-logger&quot;&gt;django.server&lt;/a&gt; propagate logging to their parents, up to the root &lt;code&gt;django&lt;/code&gt; logger. The &lt;code&gt;console&lt;/code&gt; and &lt;code&gt;mail_admins&lt;/code&gt; handlers are attached to the root logger to provide the behavior described above.</source>
          <target state="translated">Все регистраторы, за исключением &lt;a href=&quot;#django-server-logger&quot;&gt;django.server,&lt;/a&gt; распространяют регистрацию своим родителям вплоть до корневого регистратора &lt;code&gt;django&lt;/code&gt; . В &lt;code&gt;console&lt;/code&gt; и &lt;code&gt;mail_admins&lt;/code&gt; обработчики прикреплены к корневой регистратор , чтобы обеспечить поведение , описанное выше.</target>
        </trans-unit>
        <trans-unit id="9016f8182d2fe2c55bef97c4e79cb1bf3e62947b" translate="yes" xml:space="preserve">
          <source>All message file repositories are structured the same way. They are:</source>
          <target state="translated">Все хранилища файлов сообщений структурированы одинаково.Так и есть:</target>
        </trans-unit>
        <trans-unit id="a2a722a87c436c67f4c4024376ede8cce074d719" translate="yes" xml:space="preserve">
          <source>All methods on &lt;code&gt;PreparedGeometry&lt;/code&gt; take an &lt;code&gt;other&lt;/code&gt; argument, which must be a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Все методы в &lt;code&gt;PreparedGeometry&lt;/code&gt; имеют &lt;code&gt;other&lt;/code&gt; аргумент, который должен быть экземпляром &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd9bfa9ebbc4d39a8057cc0688dd6cd8bba7bfc3" translate="yes" xml:space="preserve">
          <source>All non-deferred fields of the model are updated to the values currently present in the database.</source>
          <target state="translated">Все неоплаченные поля модели обновляются до значений,присутствующих в настоящее время в базе данных.</target>
        </trans-unit>
        <trans-unit id="52bd8839678fd66e4de579c13c97026b52a41c70" translate="yes" xml:space="preserve">
          <source>All numeric values are now translated as plural, except &lt;code&gt;1.0&lt;/code&gt; which is translated as a singular phrase. This may be incorrect for some languages.</source>
          <target state="translated">Все числовые значения теперь переводятся как множественное число, за исключением &lt;code&gt;1.0&lt;/code&gt; , который переводится как единичная фраза. Это может быть неверно для некоторых языков.</target>
        </trans-unit>
        <trans-unit id="43879c25ad1f9ff0dbd0dee3407939e60e2d2d88" translate="yes" xml:space="preserve">
          <source>All of Django&amp;rsquo;s built-in fields, such as &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, are particular implementations of &lt;code&gt;Field&lt;/code&gt;. If you need a custom field, you can either subclass any of the built-in fields or write a &lt;code&gt;Field&lt;/code&gt; from scratch. In either case, see &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;Writing custom model fields&lt;/a&gt;.</source>
          <target state="translated">Все встроенные поля Django, такие как &lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; , являются конкретными реализациями &lt;code&gt;Field&lt;/code&gt; . Если вам нужно настраиваемое поле, вы можете создать подкласс любого из встроенных полей или написать &lt;code&gt;Field&lt;/code&gt; с нуля. В любом случае см. &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;Запись пользовательских полей модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e0d672fbdfd3bd2fd3b9fdc94cd770c410f30ef" translate="yes" xml:space="preserve">
          <source>All of Django&amp;rsquo;s database backends automatically convert strings into the appropriate encoding for talking to the database. They also automatically convert strings retrieved from the database into strings. You don&amp;rsquo;t even need to tell Django what encoding your database uses: that is handled transparently.</source>
          <target state="translated">Все серверные базы данных Django автоматически конвертируют строки в соответствующую кодировку для связи с базой данных. Они также автоматически преобразуют строки, извлеченные из базы данных, в строки. Вам даже не нужно сообщать Django, какую кодировку использует ваша база данных: она обрабатывается прозрачно.</target>
        </trans-unit>
        <trans-unit id="25d8c074531237860e80f6129a0d529bf6a881f2" translate="yes" xml:space="preserve">
          <source>All of Django&amp;rsquo;s fields (and when we say &lt;em&gt;fields&lt;/em&gt; in this document, we always mean model fields and not &lt;a href=&quot;../ref/forms/fields&quot;&gt;form fields&lt;/a&gt;) are subclasses of &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;django.db.models.Field&lt;/code&gt;&lt;/a&gt;. Most of the information that Django records about a field is common to all fields &amp;ndash; name, help text, uniqueness and so forth. Storing all that information is handled by &lt;code&gt;Field&lt;/code&gt;. We&amp;rsquo;ll get into the precise details of what &lt;code&gt;Field&lt;/code&gt; can do later on; for now, suffice it to say that everything descends from &lt;code&gt;Field&lt;/code&gt; and then customizes key pieces of the class behavior.</source>
          <target state="translated">Все поля Django (и когда мы говорим &lt;em&gt;поля&lt;/em&gt; в этом документе, мы всегда подразумеваем поля модели, а не &lt;a href=&quot;../ref/forms/fields&quot;&gt;поля формы&lt;/a&gt; ) являются подклассами &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;django.db.models.Field&lt;/code&gt; &lt;/a&gt; . Большая часть информации, которую Django записывает о поле, является общей для всех полей - имя, текст справки, уникальность и так далее. Хранение всей этой информации обрабатывается &lt;code&gt;Field&lt;/code&gt; . Мы подробно рассмотрим, что может сделать &lt;code&gt;Field&lt;/code&gt; позже; на данный момент достаточно сказать, что все происходит от &lt;code&gt;Field&lt;/code&gt; а затем настраивает ключевые элементы поведения класса.</target>
        </trans-unit>
        <trans-unit id="fd788ae21f1d7d0fcd8ae323dc21ea5bbe95d8f5" translate="yes" xml:space="preserve">
          <source>All of the &lt;code&gt;kwargs&lt;/code&gt; dictionary is passed directly to the form field&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method. Normally, all you need to do is set up a good default for the &lt;code&gt;form_class&lt;/code&gt; (and maybe &lt;code&gt;choices_form_class&lt;/code&gt;) argument and then delegate further handling to the parent class. This might require you to write a custom form field (and even a form widget). See the &lt;a href=&quot;../topics/forms/index&quot;&gt;forms documentation&lt;/a&gt; for information about this.</source>
          <target state="translated">Весь словарь &lt;code&gt;kwargs&lt;/code&gt; передается непосредственно в метод поля формы &lt;code&gt;__init__()&lt;/code&gt; . Обычно все, что вам нужно сделать, это установить хорошее значение по умолчанию для &lt;code&gt;form_class&lt;/code&gt; (и, возможно, &lt;code&gt;choices_form_class&lt;/code&gt; ), а затем передать дальнейшую обработку родительскому классу. Для этого может потребоваться написать настраиваемое поле формы (и даже виджет формы). См. &lt;a href=&quot;../topics/forms/index&quot;&gt;Формы документации&lt;/a&gt; для получения информации об этом.</target>
        </trans-unit>
        <trans-unit id="db95fd1155b2734442bf4a034c402f65a5fac4d4" translate="yes" xml:space="preserve">
          <source>All of the above can be combined to form complex expressions. For such expressions, it can be important to know how the operators are grouped when the expression is evaluated - that is, the precedence rules. The precedence of the operators, from lowest to highest, is as follows:</source>
          <target state="translated">Все вышеперечисленное может быть объединено в сложные выражения.Для таких выражений может быть важно знать,как группируются операторы,когда оценивается выражение-то есть правила приоритета.Приоритетность операторов,от низших до высших,выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="90e2cc10b0a5ed4093dc1410275ea6c4e9a947e4" translate="yes" xml:space="preserve">
          <source>All of the built-in Django template tags are safe to use with the cached loader, but if you&amp;rsquo;re using custom template tags that come from third party packages, or that you wrote yourself, you should ensure that the &lt;code&gt;Node&lt;/code&gt; implementation for each tag is thread-safe. For more information, see &lt;a href=&quot;../../howto/custom-template-tags#template-tag-thread-safety&quot;&gt;template tag thread safety considerations&lt;/a&gt;.</source>
          <target state="translated">Все встроенные теги шаблонов Django безопасны для использования с кэшированным загрузчиком, но если вы используете пользовательские теги шаблонов, которые приходят из сторонних пакетов, или которые вы написали сами, вы должны убедиться, что реализация &lt;code&gt;Node&lt;/code&gt; для каждого тега Потокобезопасен. Для получения дополнительной информации см. &lt;a href=&quot;../../howto/custom-template-tags#template-tag-thread-safety&quot;&gt;Соображения безопасности потока тега шаблона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09975dacc6609e21c13e0ae24e664fb6e20c2dfd" translate="yes" xml:space="preserve">
          <source>All of the cautions in the note for the &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt; documentation apply to &lt;code&gt;only()&lt;/code&gt; as well. Use it cautiously and only after exhausting your other options.</source>
          <target state="translated">Все предостережения в примечании к документации &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt; относятся и к &lt;code&gt;only()&lt;/code&gt; . Используйте его осторожно и только после того, как исчерпаете ваши другие возможности.</target>
        </trans-unit>
        <trans-unit id="842bb58d8d3fde08f19712960e865ccc82a3b6a4" translate="yes" xml:space="preserve">
          <source>All of the core Django operations are available from the &lt;code&gt;django.db.migrations.operations&lt;/code&gt; module.</source>
          <target state="translated">Все основные операции Django доступны из модуля &lt;code&gt;django.db.migrations.operations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fe0461c1dc8f2290a9c15cc547f9e3d24400d21" translate="yes" xml:space="preserve">
          <source>All of the fields of &lt;code&gt;Place&lt;/code&gt; will also be available in &lt;code&gt;Restaurant&lt;/code&gt;, although the data will reside in a different database table. So these are both possible:</source>
          <target state="translated">Все поля &lt;code&gt;Place&lt;/code&gt; также будут доступны в &lt;code&gt;Restaurant&lt;/code&gt; , хотя данные будут находиться в другой таблице базы данных. Так что это возможно:</target>
        </trans-unit>
        <trans-unit id="b101a05b6664afc950679820eed8500bf36c445e" translate="yes" xml:space="preserve">
          <source>All of the following spatial predicate methods take another &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; instance (&lt;code&gt;other&lt;/code&gt;) as a parameter, and return a boolean.</source>
          <target state="translated">Все следующие методы пространственного предиката принимают в качестве параметра другой экземпляр &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;other&lt;/code&gt; ) и возвращают логическое значение.</target>
        </trans-unit>
        <trans-unit id="f7d8fdc618c1fcb75c91fd91936783ef99cfc1e4" translate="yes" xml:space="preserve">
          <source>All of the generic views listed above have matching &lt;code&gt;Base&lt;/code&gt; views that only differ in that they do not include the &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the archive views) or &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt;&lt;code&gt;DateDetailView&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Все перечисленные выше общие представления имеют совпадающие &lt;code&gt;Base&lt;/code&gt; представления, которые отличаются только тем, что они не включают &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt; (для представлений архива) или &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt; (для &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt; &lt;code&gt;DateDetailView&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="ec3968d8dd3e9c20b69be73031342bec269e973b" translate="yes" xml:space="preserve">
          <source>All of the generic views listed above have matching &lt;code&gt;Base&lt;/code&gt; views that only differ in that they do not include the &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the archive views) or &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt;&lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt;&lt;/a&gt; (for the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt;&lt;code&gt;DateDetailView&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Все перечисленные выше общие представления имеют соответствующие &lt;code&gt;Base&lt;/code&gt; представления, которые отличаются только тем, что они не включают &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;MultipleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt; (для представлений архива) или &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin&quot;&gt; &lt;code&gt;SingleObjectTemplateResponseMixin&lt;/code&gt; &lt;/a&gt; (для &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DateDetailView&quot;&gt; &lt;code&gt;DateDetailView&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="993f88424c9eb90136110e3989777865daf81d23" translate="yes" xml:space="preserve">
          <source>All of the options without an explanation in the above list have the same meaning they do for normal Django fields. See the &lt;a href=&quot;../ref/models/fields&quot;&gt;field documentation&lt;/a&gt; for examples and details.</source>
          <target state="translated">Все параметры без объяснения в приведенном выше списке имеют то же значение, что и для обычных полей Django. См. &lt;a href=&quot;../ref/models/fields&quot;&gt;Полевую документацию&lt;/a&gt; для примеров и деталей.</target>
        </trans-unit>
        <trans-unit id="e9186a35fc6e3bff19ebd7c9ee446a905473d50a" translate="yes" xml:space="preserve">
          <source>All of the range fields translate to &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;psycopg2 Range objects&lt;/a&gt; in Python, but also accept tuples as input if no bounds information is necessary. The default is lower bound included, upper bound excluded, that is &lt;code&gt;[)&lt;/code&gt; (see the PostgreSQL documentation for details about &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-IO&quot;&gt;different bounds&lt;/a&gt;).</source>
          <target state="translated">Все поля диапазона преобразуются в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;объекты диапазона psycopg2&lt;/a&gt; в Python, но также принимают кортежи в качестве входных данных, если информация о границах не требуется. По умолчанию нижняя граница включена, верхняя исключена, то есть &lt;code&gt;[)&lt;/code&gt; (подробности о &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-IO&quot;&gt;различных границах&lt;/a&gt; см. В документации PostgreSQL ).</target>
        </trans-unit>
        <trans-unit id="624a5a8d10c60270d031b529a547369c7fd64845" translate="yes" xml:space="preserve">
          <source>All of the range fields translate to &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;psycopg2 Range objects&lt;/a&gt; in Python, but also accept tuples as input if no bounds information is necessary. The default is lower bound included, upper bound excluded; that is, &lt;code&gt;[)&lt;/code&gt;.</source>
          <target state="translated">Все поля диапазона преобразуются в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#adapt-range&quot;&gt;объекты Psycopg2 Range&lt;/a&gt; в Python, но также принимают кортежи в качестве входных данных, если информация о границах не требуется. По умолчанию включена нижняя граница, верхняя граница исключена; то есть &lt;code&gt;[)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2902724522b24a6a9baf75157913e5df50ff81cf" translate="yes" xml:space="preserve">
          <source>All of the searching tools provided by &lt;a href=&quot;../../ref/contrib/postgres/index#module-django.contrib.postgres&quot;&gt;&lt;code&gt;django.contrib.postgres&lt;/code&gt;&lt;/a&gt; are constructed entirely on public APIs such as &lt;a href=&quot;../../ref/models/lookups&quot;&gt;custom lookups&lt;/a&gt; and &lt;a href=&quot;../../ref/models/database-functions&quot;&gt;database functions&lt;/a&gt;. Depending on your database, you should be able to construct queries to allow similar APIs. If there are specific things which cannot be achieved this way, please open a ticket.</source>
          <target state="translated">Все инструменты поиска, предоставляемые &lt;a href=&quot;../../ref/contrib/postgres/index#module-django.contrib.postgres&quot;&gt; &lt;code&gt;django.contrib.postgres&lt;/code&gt; &lt;/a&gt; , полностью построены на общедоступных API, таких как &lt;a href=&quot;../../ref/models/lookups&quot;&gt;пользовательские поиски&lt;/a&gt; и &lt;a href=&quot;../../ref/models/database-functions&quot;&gt;функции базы данных&lt;/a&gt; . В зависимости от вашей базы данных вы должны иметь возможность создавать запросы, чтобы разрешить подобные API. Если есть определенные вещи, которые не могут быть достигнуты таким образом, пожалуйста, откройте билет.</target>
        </trans-unit>
        <trans-unit id="c98396e0c2b9f2c7ef436c4e1cf9e5f31888c1be" translate="yes" xml:space="preserve">
          <source>All of these &lt;a href=&quot;../../migration-operations&quot;&gt;operations&lt;/a&gt; are available from the &lt;code&gt;django.contrib.postgres.operations&lt;/code&gt; module.</source>
          <target state="translated">Все эти &lt;a href=&quot;../../migration-operations&quot;&gt;операции&lt;/a&gt; доступны из модуля &lt;code&gt;django.contrib.postgres.operations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf69fe6ddacfc94447bb1654591dc2ef5e20fd2e" translate="yes" xml:space="preserve">
          <source>All of these fields and widgets are available from the &lt;code&gt;django.contrib.postgres.forms&lt;/code&gt; module.</source>
          <target state="translated">Все эти поля и виджеты доступны из модуля &lt;code&gt;django.contrib.postgres.forms&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6c91b1cb74c4317aa449a6be37db052e8b533e8" translate="yes" xml:space="preserve">
          <source>All of these fields are available from the &lt;code&gt;django.contrib.postgres.fields&lt;/code&gt; module.</source>
          <target state="translated">Все эти поля доступны из модуля &lt;code&gt;django.contrib.postgres.fields&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2acb772d997846489b2b26ab0c755d6580d4b4f6" translate="yes" xml:space="preserve">
          <source>All of these functions are available from the &lt;code&gt;django.contrib.postgres.functions&lt;/code&gt; module.</source>
          <target state="translated">Все эти функции доступны из модуля &lt;code&gt;django.contrib.postgres.functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="856c715c58d67f1194ee039629e537842d2c1e4d" translate="yes" xml:space="preserve">
          <source>All of these privileges are included in the DBA role, which is appropriate for use on a private developer&amp;rsquo;s database.</source>
          <target state="translated">Все эти привилегии включены в роль DBA, которая подходит для использования в частной базе данных разработчика.</target>
        </trans-unit>
        <trans-unit id="dbf98850f8f06d736b8ca5f7baec9fbb0a05444b" translate="yes" xml:space="preserve">
          <source>All open tags are closed implicitly, e.g. when a surrounding tag is closed or the HTML document ends.</source>
          <target state="translated">Все открытые теги закрываются неявно,например,когда закрывается окружающий тег или заканчивается HTML документ.</target>
        </trans-unit>
        <trans-unit id="a0f69135e80ea5c60940b72ac5f763b58088a197" translate="yes" xml:space="preserve">
          <source>All other arguments are passed directly to the constructor of the email backend.</source>
          <target state="translated">Все остальные аргументы передаются непосредственно конструктору почтового бэкенда.</target>
        </trans-unit>
        <trans-unit id="50e8cd16153274bc54b4af97b232706269c58a27" translate="yes" xml:space="preserve">
          <source>All other parameters are added with their value, after applying &lt;code&gt;str()&lt;/code&gt; to it.</source>
          <target state="translated">Все остальные параметры добавляются с их значением после применения к нему &lt;code&gt;str()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f4fdbbc35fbb9ea3542dc3763d600cc60c72446" translate="yes" xml:space="preserve">
          <source>All parameters should be strings, except &lt;code&gt;categories&lt;/code&gt;, which should be a sequence of strings.</source>
          <target state="translated">Все параметры должны быть строками, кроме &lt;code&gt;categories&lt;/code&gt; , которые должны быть последовательностью строк.</target>
        </trans-unit>
        <trans-unit id="c7f29b7d19514ab25d12772fb55a815025e66f61" translate="yes" xml:space="preserve">
          <source>All parameters should be strings, except &lt;code&gt;categories&lt;/code&gt;, which should be a sequence of strings. Beware that some control characters are &lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;not allowed&lt;/a&gt; in XML documents. If your content has some of them, you might encounter a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when producing the feed.</source>
          <target state="translated">Все параметры должны быть строками, кроме &lt;code&gt;categories&lt;/code&gt; , которые должны быть последовательностью строк. Помните, что некоторые управляющие символы &lt;a href=&quot;https://www.w3.org/International/questions/qa-controls&quot;&gt;недопустимы&lt;/a&gt; в документах XML. Если в вашем контенте есть некоторые из них, вы можете столкнуться с &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; при создании канала.</target>
        </trans-unit>
        <trans-unit id="4af4dad26ab178c09537c563b2a0614380b4b23a" translate="yes" xml:space="preserve">
          <source>All parameters, if given, should be strings, except:</source>
          <target state="translated">Все параметры,если они заданы,должны быть строками,кроме строк:</target>
        </trans-unit>
        <trans-unit id="4a271b4683a28a9fc5a2fc552854a0d231daccb3" translate="yes" xml:space="preserve">
          <source>All paths listed in &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; in your settings file are searched for &lt;code&gt;&amp;lt;language&amp;gt;/LC_MESSAGES/django.(po|mo)&lt;/code&gt;</source>
          <target state="translated">Все пути, перечисленные в &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt; в вашем файле настроек, ищутся по &lt;code&gt;&amp;lt;language&amp;gt;/LC_MESSAGES/django.(po|mo)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfc16dbd3530c3abe3050ff2730113eba38dad65" translate="yes" xml:space="preserve">
          <source>All signals are &lt;a href=&quot;#django.dispatch.Signal&quot;&gt;&lt;code&gt;django.dispatch.Signal&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">Все сигналы являются экземплярами &lt;a href=&quot;#django.dispatch.Signal&quot;&gt; &lt;code&gt;django.dispatch.Signal&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5db8c4111c1c2d8f37d711c7a4555c41dfb63b67" translate="yes" xml:space="preserve">
          <source>All signals are &lt;a href=&quot;#django.dispatch.Signal&quot;&gt;&lt;code&gt;django.dispatch.Signal&lt;/code&gt;&lt;/a&gt; instances. The &lt;code&gt;providing_args&lt;/code&gt; is a list of the names of arguments the signal will provide to listeners. This is purely documentational, however, as there is nothing that checks that the signal actually provides these arguments to its listeners.</source>
          <target state="translated">Все сигналы являются экземплярами &lt;a href=&quot;#django.dispatch.Signal&quot;&gt; &lt;code&gt;django.dispatch.Signal&lt;/code&gt; &lt;/a&gt; . В &lt;code&gt;providing_args&lt;/code&gt; список имен аргументов сигнал будет предоставлять слушателям. Однако это чисто документально, поскольку нет ничего, что проверяло бы, что сигнал фактически предоставляет эти аргументы своим слушателям.</target>
        </trans-unit>
        <trans-unit id="c5600e5832db9d352453e1ae0c944a0cb30304f5" translate="yes" xml:space="preserve">
          <source>All string literals are inserted &lt;strong&gt;without&lt;/strong&gt; any automatic escaping into the template &amp;ndash; they act as if they were all passed through the &lt;a href=&quot;builtins#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filter. The reasoning behind this is that the template author is in control of what goes into the string literal, so they can make sure the text is correctly escaped when the template is written.</source>
          <target state="translated">Все строковые литералы вставляются &lt;strong&gt;без&lt;/strong&gt; какого-либо автоматического экранирования в шаблон - они действуют так, как если бы они были все пропущены через &lt;a href=&quot;builtins#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt; фильтр. Причиной этого является то, что автор шаблона контролирует то, что входит в строковый литерал, поэтому они могут убедиться, что текст правильно экранирован при написании шаблона.</target>
        </trans-unit>
        <trans-unit id="eef9606bdef9ac250cca6fae75b8370dda710764" translate="yes" xml:space="preserve">
          <source>All that will be stored in your database is a path to the file (relative to &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt;). You&amp;rsquo;ll most likely want to use the convenience &lt;a href=&quot;#django.db.models.fields.files.FieldFile.url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; attribute provided by Django. For example, if your &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; is called &lt;code&gt;mug_shot&lt;/code&gt;, you can get the absolute path to your image in a template with &lt;code&gt;{{ object.mug_shot.url }}&lt;/code&gt;.</source>
          <target state="translated">Все, что будет храниться в вашей базе данных, это путь к файлу (относительно &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; ). Скорее всего, вы захотите использовать &lt;a href=&quot;#django.db.models.fields.files.FieldFile.url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; атрибут url, предоставленный Django. Например, если ваш &lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; называется &lt;code&gt;mug_shot&lt;/code&gt; , вы можете получить абсолютный путь к вашему изображению в шаблоне с помощью &lt;code&gt;{{ object.mug_shot.url }}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f2f6ea665148cbc04152358949c5beb998e57ea" translate="yes" xml:space="preserve">
          <source>All the date formatting attributes in these mixins use &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format characters. Do not try to use the format characters from the &lt;a href=&quot;../templates/builtins#std:templatetag-now&quot;&gt;&lt;code&gt;now&lt;/code&gt;&lt;/a&gt; template tag as they are not compatible.</source>
          <target state="translated">Все атрибуты форматирования даты в этих миксинах используют символы формата &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; . Не пытайтесь использовать символы формата из тега &lt;a href=&quot;../templates/builtins#std:templatetag-now&quot;&gt; &lt;code&gt;now&lt;/code&gt; ,&lt;/a&gt; поскольку они несовместимы.</target>
        </trans-unit>
        <trans-unit id="8d411a1915cf1d79692f0ecc7eab33f4df58268f" translate="yes" xml:space="preserve">
          <source>All the following querying routines may take either a string IP address or a fully qualified domain name (FQDN). For example, both &lt;code&gt;'205.186.163.125'&lt;/code&gt; and &lt;code&gt;'djangoproject.com'&lt;/code&gt; would be valid query parameters.</source>
          <target state="translated">Все последующие процедуры запроса могут принимать либо строковый IP-адрес, либо полное доменное имя (FQDN). Например, &lt;code&gt;'205.186.163.125'&lt;/code&gt; и &lt;code&gt;'djangoproject.com'&lt;/code&gt; будут допустимыми параметрами запроса.</target>
        </trans-unit>
        <trans-unit id="a23111386f47d33144e97c201e8b2819947440dd" translate="yes" xml:space="preserve">
          <source>All the form&amp;rsquo;s fields and their attributes will be unpacked into HTML markup from that &lt;code&gt;{{ form }}&lt;/code&gt; by Django&amp;rsquo;s template language.</source>
          <target state="translated">Все поля формы и их атрибуты будут распакованы в разметку HTML из этой &lt;code&gt;{{ form }}&lt;/code&gt; языка шаблонов Django.</target>
        </trans-unit>
        <trans-unit id="70f425fb82934c9c3f6ad3e0e4651384ac86ae46" translate="yes" xml:space="preserve">
          <source>All these constructors take the keyword argument &lt;code&gt;srid&lt;/code&gt;. For example:</source>
          <target state="translated">Все эти конструкторы принимают ключевое слово аргумент &lt;code&gt;srid&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="d93916726c30a4bd59a342267e7e13db2348de5f" translate="yes" xml:space="preserve">
          <source>All three steps are performed when you call a model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;full_clean()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Все три шага выполняются при вызове метода модели &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt; &lt;code&gt;full_clean()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f5d1da75bdef06070e1dc5cbe9e56db56806493" translate="yes" xml:space="preserve">
          <source>All types of whitespace are considered equivalent.</source>
          <target state="translated">Все типы пробельных символов считаются эквивалентными.</target>
        </trans-unit>
        <trans-unit id="960e29b6390375b2975735a4f48891f3bc5ac228" translate="yes" xml:space="preserve">
          <source>All views are &lt;a href=&quot;../class-based-views/index&quot;&gt;class-based&lt;/a&gt;, which allows you to easily customize them by subclassing.</source>
          <target state="translated">Все представления основаны на &lt;a href=&quot;../class-based-views/index&quot;&gt;классах&lt;/a&gt; , что позволяет легко настраивать их путем создания подклассов.</target>
        </trans-unit>
        <trans-unit id="511c46e961182dd1e2188c3056c3fd8298dc280a" translate="yes" xml:space="preserve">
          <source>All writer objects have a &lt;code&gt;write(geom)&lt;/code&gt; method that returns either the WKB or WKT of the given geometry. In addition, &lt;a href=&quot;#django.contrib.gis.geos.WKBWriter&quot;&gt;&lt;code&gt;WKBWriter&lt;/code&gt;&lt;/a&gt; objects also have properties that may be used to change the byte order, and or include the SRID value (in other words, EWKB).</source>
          <target state="translated">Все объекты записи имеют метод &lt;code&gt;write(geom)&lt;/code&gt; который возвращает либо WKB, либо WKT заданной геометрии. Кроме того, объекты &lt;a href=&quot;#django.contrib.gis.geos.WKBWriter&quot;&gt; &lt;code&gt;WKBWriter&lt;/code&gt; &lt;/a&gt; также имеют свойства, которые можно использовать для изменения порядка байтов и / или включения значения SRID (другими словами, EWKB).</target>
        </trans-unit>
        <trans-unit id="976206a5e39fc2cd6f46f9358ce379242cf92f7c" translate="yes" xml:space="preserve">
          <source>All you need to do to get your form into a template is to place the form instance into the template context. So if your form is called &lt;code&gt;form&lt;/code&gt; in the context, &lt;code&gt;{{ form }}&lt;/code&gt; will render its &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements appropriately.</source>
          <target state="translated">Все, что вам нужно сделать, чтобы вставить форму в шаблон, это поместить экземпляр формы в контекст шаблона. Поэтому, если ваша форма называется &lt;code&gt;form&lt;/code&gt; в контексте, &lt;code&gt;{{ form }}&lt;/code&gt; будет соответствующим образом отображать ее элементы &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42b60e0ae235388663637de3e921a7ed4445dd82" translate="yes" xml:space="preserve">
          <source>Allow certain users to connect to a WebDAV share created with &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_dav.html&quot;&gt;mod_dav&lt;/a&gt;.</source>
          <target state="translated">Разрешить определенным пользователям подключаться к общему ресурсу WebDAV, созданному с помощью &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_dav.html&quot;&gt;mod_dav&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="190d3b06294b0737593e33b2a763d1fcd1eea641" translate="yes" xml:space="preserve">
          <source>Allow the &lt;a href=&quot;templates/api#django.template.context_processors.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; context processor to add some variables to the template context.</source>
          <target state="translated">Разрешить обработчику контекста &lt;a href=&quot;templates/api#django.template.context_processors.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; добавить некоторые переменные в контекст шаблона.</target>
        </trans-unit>
        <trans-unit id="66b7cc1827e806b544424c0ff618a3255503780d" translate="yes" xml:space="preserve">
          <source>Allow users to create, update, and delete objects &amp;ndash; with or without authorization.</source>
          <target state="translated">Разрешить пользователям создавать, обновлять и удалять объекты - с авторизацией или без нее.</target>
        </trans-unit>
        <trans-unit id="71a13e3c339e6985292477c95ec07f081b0e242e" translate="yes" xml:space="preserve">
          <source>Allowed HTTP methods</source>
          <target state="translated">Разрешенные методы HTTP</target>
        </trans-unit>
        <trans-unit id="ec83abe710d81428cfbbb0caa76901503f7932b0" translate="yes" xml:space="preserve">
          <source>Allows Django to skip an app&amp;rsquo;s initial migration if all database tables with the names of all models created by all &lt;a href=&quot;migration-operations#django.db.migrations.operations.CreateModel&quot;&gt;&lt;code&gt;CreateModel&lt;/code&gt;&lt;/a&gt; operations in that migration already exist. This option is intended for use when first running migrations against a database that preexisted the use of migrations. This option does not, however, check for matching database schema beyond matching table names and so is only safe to use if you are confident that your existing schema matches what is recorded in your initial migration.</source>
          <target state="translated">Позволяет Django пропустить начальную миграцию приложения, если все таблицы базы данных с именами всех моделей, созданных всеми операциями &lt;a href=&quot;migration-operations#django.db.migrations.operations.CreateModel&quot;&gt; &lt;code&gt;CreateModel&lt;/code&gt; &lt;/a&gt; в этой миграции, уже существуют. Этот параметр предназначен для использования при первом запуске миграций для базы данных, в которой ранее использовались миграции. Однако этот параметр не проверяет соответствие схемы базы данных за пределами совпадающих имен таблиц, поэтому его можно использовать только в том случае, если вы уверены, что ваша существующая схема соответствует тому, что записано при первоначальной миграции.</target>
        </trans-unit>
        <trans-unit id="8f1aa13a48b42ff100decd5fc5ded1a58aa81a1a" translate="yes" xml:space="preserve">
          <source>Allows a user to change their password.</source>
          <target state="translated">Позволяет пользователю изменять свой пароль.</target>
        </trans-unit>
        <trans-unit id="b6c4b72fea14639d13b981ac1ddbff185022a039" translate="yes" xml:space="preserve">
          <source>Allows a user to reset their password by generating a one-time use link that can be used to reset the password, and sending that link to the user&amp;rsquo;s registered email address.</source>
          <target state="translated">Позволяет пользователю сбросить свой пароль, создав одноразовую ссылку, которая может быть использована для сброса пароля, и отправив эту ссылку на зарегистрированный адрес электронной почты пользователя.</target>
        </trans-unit>
        <trans-unit id="9b5db4acef816cc020ffda17473160d626d24626" translate="yes" xml:space="preserve">
          <source>Allows changing a user&amp;rsquo;s password. It prompts you to enter a new password twice for the given user. If the entries are identical, this immediately becomes the new password. If you do not supply a user, the command will attempt to change the password whose username matches the current user.</source>
          <target state="translated">Позволяет изменить пароль пользователя. Он предлагает вам дважды ввести новый пароль для данного пользователя. Если записи идентичны, это сразу становится новым паролем. Если вы не укажете пользователя, команда попытается изменить пароль, имя пользователя которого совпадает с текущим пользователем.</target>
        </trans-unit>
        <trans-unit id="945c742eac538b55929d9c2519561e805d8de9f1" translate="yes" xml:space="preserve">
          <source>Allows creating tables for apps without migrations. While this isn&amp;rsquo;t recommended, the migrations framework is sometimes too slow on large projects with hundreds of models.</source>
          <target state="translated">Позволяет создавать таблицы для приложений без миграции. Хотя это не рекомендуется, среда миграции иногда слишком медленная для больших проектов с сотнями моделей.</target>
        </trans-unit>
        <trans-unit id="775e744db0d361ad243681079679c9dfe7619701" translate="yes" xml:space="preserve">
          <source>Allows naming the generated migration(s) instead of using a generated name. The name must be a valid Python &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#identifiers&quot;&gt;identifier&lt;/a&gt;.</source>
          <target state="translated">Позволяет называть сгенерированные миграции вместо использования сгенерированного имени. Имя должно быть действительным &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#identifiers&quot;&gt;идентификатором&lt;/a&gt; Python .</target>
        </trans-unit>
        <trans-unit id="5c5d7a1ae635e28e0843f83610edbf2c00760416" translate="yes" xml:space="preserve">
          <source>Allows running of arbitrary SQL on the database - useful for more advanced features of database backends that Django doesn&amp;rsquo;t support directly, like partial indexes.</source>
          <target state="translated">Позволяет запускать произвольный SQL в базе данных - полезно для более расширенных функций бэкэндов базы данных, которые Django не поддерживает напрямую, например, частичные индексы.</target>
        </trans-unit>
        <trans-unit id="b02cf5fa9d1c920264f9951fc16d8a6144d1a292" translate="yes" xml:space="preserve">
          <source>Allows running of arbitrary SQL on the database - useful for more advanced features of database backends that Django doesn&amp;rsquo;t support directly.</source>
          <target state="translated">Позволяет запускать произвольный SQL в базе данных - полезно для более сложных функций серверной части базы данных, которые Django не поддерживает напрямую.</target>
        </trans-unit>
        <trans-unit id="b3fc80d31ea31c921a37c65daf34995b592e35ee" translate="yes" xml:space="preserve">
          <source>Allows the handler to completely override the parsing of the raw HTTP input.</source>
          <target state="translated">Позволяет обработчику полностью переопределить парсинг исходного HTTP-входа.</target>
        </trans-unit>
        <trans-unit id="eccb9b87175b88b821a7bc4e489d2465a78cb3b9" translate="yes" xml:space="preserve">
          <source>Allows the selection of a single model object, suitable for representing a foreign key. Note that the default widget for &lt;code&gt;ModelChoiceField&lt;/code&gt; becomes impractical when the number of entries increases. You should avoid using it for more than 100 items.</source>
          <target state="translated">Позволяет выбрать один объект модели, подходящий для представления внешнего ключа. Обратите внимание, что виджет по умолчанию для &lt;code&gt;ModelChoiceField&lt;/code&gt; становится непрактичным, когда количество записей увеличивается. Вы должны избегать использования его для более чем 100 предметов.</target>
        </trans-unit>
        <trans-unit id="29acfb43849ab9b0daf20cd41edafb3f9243b2d6" translate="yes" xml:space="preserve">
          <source>Allows the selection of one or more model objects, suitable for representing a many-to-many relation. As with &lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt;&lt;code&gt;ModelChoiceField&lt;/code&gt;&lt;/a&gt;, you can use &lt;code&gt;label_from_instance&lt;/code&gt; to customize the object representations.</source>
          <target state="translated">Позволяет выбрать один или несколько объектов модели, подходящих для представления отношения &amp;laquo;многие ко многим&amp;raquo;. Как и в случае с &lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt; &lt;code&gt;ModelChoiceField&lt;/code&gt; &lt;/a&gt; , вы можете использовать &lt;code&gt;label_from_instance&lt;/code&gt; для настройки представлений объектов.</target>
        </trans-unit>
        <trans-unit id="cc224d0743f2b3f1729cd3289e77a06a12ab78e8" translate="yes" xml:space="preserve">
          <source>Along with another app &lt;code&gt;rare/models.py&lt;/code&gt;:</source>
          <target state="translated">Наряду с другим приложением &lt;code&gt;rare/models.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="74c6032e98af391fe7bf85d75bccec29ac396723" translate="yes" xml:space="preserve">
          <source>Also as a convenience, the &lt;code&gt;ModelAdmin&lt;/code&gt; object is passed to the &lt;code&gt;lookups&lt;/code&gt; method, for example if you want to base the lookups on the available data:</source>
          <target state="translated">Также для удобства объект &lt;code&gt;ModelAdmin&lt;/code&gt; передается в метод &lt;code&gt;lookups&lt;/code&gt; , например, если вы хотите основывать запросы на доступных данных:</target>
        </trans-unit>
        <trans-unit id="dccc91e2b5b7283cd7d78d2ca5a8c6c83cdc4461" translate="yes" xml:space="preserve">
          <source>Also consider what you want to happen when the migration is unapplied. You could either do nothing (as in the example above) or remove some or all of the data from the new application. Adjust the second argument of the &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operation accordingly.</source>
          <target state="translated">Также подумайте, что вы хотите, чтобы миграция не применялась. Вы можете ничего не делать (как в примере выше) или удалить некоторые или все данные из нового приложения. Настройте второй аргумент операции &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="079db1f37aab1427fb72df3b03673a8a53beed4e" translate="yes" xml:space="preserve">
          <source>Also make sure that the database user provided in &lt;code&gt;mysite/settings.py&lt;/code&gt; has &amp;ldquo;create database&amp;rdquo; privileges. This allows automatic creation of a &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;test database&lt;/a&gt; which will be needed in a later tutorial.</source>
          <target state="translated">Также убедитесь, что пользователь базы данных, указанный в &lt;code&gt;mysite/settings.py&lt;/code&gt; , имеет права &amp;laquo;создать базу данных&amp;raquo;. Это позволяет автоматически создавать &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;тестовую базу данных,&lt;/a&gt; которая потребуется в следующем уроке.</target>
        </trans-unit>
        <trans-unit id="430d3e806bb33f656af3862b5015413135ec86e7" translate="yes" xml:space="preserve">
          <source>Also make sure you&amp;rsquo;ve correctly set &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; to the ID of the site the settings file represents. This will usually be &lt;code&gt;1&lt;/code&gt; (i.e. &lt;code&gt;SITE_ID = 1&lt;/code&gt;, but if you&amp;rsquo;re using the sites framework to manage multiple sites, it could be the ID of a different site.</source>
          <target state="translated">Также убедитесь, что вы правильно установили &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt; в качестве идентификатора сайта, который представляет файл настроек. Обычно это &lt;code&gt;1&lt;/code&gt; (т. &lt;code&gt;SITE_ID = 1&lt;/code&gt; , но если вы используете структуру сайтов для управления несколькими сайтами, это может быть идентификатор другого сайта).</target>
        </trans-unit>
        <trans-unit id="c8b0b0c45501b28f9ae6548c508388d04ebd9a13" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;initial&lt;/code&gt; values are &lt;em&gt;not&lt;/em&gt; used as &amp;ldquo;fallback&amp;rdquo; data in validation if a particular field&amp;rsquo;s value is not given. &lt;code&gt;initial&lt;/code&gt; values are &lt;em&gt;only&lt;/em&gt; intended for initial form display:</source>
          <target state="translated">Также обратите внимание, что &lt;code&gt;initial&lt;/code&gt; значения &lt;em&gt;не&lt;/em&gt; используются в качестве &amp;laquo;запасных&amp;raquo; данных при проверке, если значение определенного поля не задано. &lt;code&gt;initial&lt;/code&gt; значения предназначены &lt;em&gt;только&lt;/em&gt; для отображения начальной формы:</target>
        </trans-unit>
        <trans-unit id="be520e4bab7c72fb552c6243756860e284bb3687" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;items()&lt;/code&gt; also follows the same algorithm &amp;ndash; first, it tries &lt;code&gt;items(obj)&lt;/code&gt;, then &lt;code&gt;items()&lt;/code&gt;, then finally an &lt;code&gt;items&lt;/code&gt; class attribute (which should be a list).</source>
          <target state="translated">Также обратите внимание, что &lt;code&gt;items()&lt;/code&gt; также следует тому же алгоритму - сначала он пытается &lt;code&gt;items(obj)&lt;/code&gt; , затем &lt;code&gt;items()&lt;/code&gt; , затем, наконец, атрибут класса &lt;code&gt;items&lt;/code&gt; (который должен быть списком).</target>
        </trans-unit>
        <trans-unit id="ddd7d3643d00b0897475d780a3c9e83ac347bcfc" translate="yes" xml:space="preserve">
          <source>Also note that Django expects the &lt;code&gt;&quot;%s&quot;&lt;/code&gt; placeholder, &lt;em&gt;not&lt;/em&gt; the &lt;code&gt;&quot;?&quot;&lt;/code&gt; placeholder, which is used by the SQLite Python bindings. This is for the sake of consistency and sanity.</source>
          <target state="translated">Также отметим , что Джанго ожидает &lt;code&gt;&quot;%s&quot;&lt;/code&gt; заполнитель, &lt;em&gt;не &lt;/em&gt; &lt;code&gt;&quot;?&quot;&lt;/code&gt; заполнитель, который используется привязками SQLite Python. Это ради последовательности и здравомыслия.</target>
        </trans-unit>
        <trans-unit id="e2634049a3f74c53b08c8960283181a1d277b605" translate="yes" xml:space="preserve">
          <source>Also note that GeoDjango provides a &lt;a href=&quot;../ref/contrib/gis/serializers&quot;&gt;customized GeoJSON serializer&lt;/a&gt;.</source>
          <target state="translated">Также обратите внимание, что GeoDjango предоставляет &lt;a href=&quot;../ref/contrib/gis/serializers&quot;&gt;настроенный сериализатор GeoJSON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09c5f604de33bd5f14c0e2b803d418d64e00922c" translate="yes" xml:space="preserve">
          <source>Also note that by the time you reach this step, individual model instances have already been created for each &lt;code&gt;Form&lt;/code&gt;. Modifying a value in &lt;code&gt;form.cleaned_data&lt;/code&gt; is not sufficient to affect the saved value. If you wish to modify a value in &lt;code&gt;ModelFormSet.clean()&lt;/code&gt; you must modify &lt;code&gt;form.instance&lt;/code&gt;:</source>
          <target state="translated">Также обратите внимание, что к тому времени, когда вы достигнете этого шага, отдельные экземпляры модели уже созданы для каждой &lt;code&gt;Form&lt;/code&gt; . Изменение значения в &lt;code&gt;form.cleaned_data&lt;/code&gt; недостаточно для воздействия на сохраненное значение. Если вы хотите изменить значение в &lt;code&gt;ModelFormSet.clean()&lt;/code&gt; вы должны изменить &lt;code&gt;form.instance&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0b6f701f2b5f4527d2271459ed75e2410e4d7a1b" translate="yes" xml:space="preserve">
          <source>Also note that even an uploaded HTML file, since it can be executed by the browser (though not by the server), can pose security threats that are equivalent to XSS or CSRF attacks.</source>
          <target state="translated">Также обратите внимание,что даже загруженный HTML-файл,так как он может быть выполнен браузером (хотя и не сервером),может представлять собой угрозу безопасности,эквивалентную XSS или CSRF-атакам.</target>
        </trans-unit>
        <trans-unit id="1f8ddc74def1b0eb285056b958bc6feae34a8858" translate="yes" xml:space="preserve">
          <source>Also note that even though slicing an unevaluated &lt;code&gt;QuerySet&lt;/code&gt; returns another unevaluated &lt;code&gt;QuerySet&lt;/code&gt;, modifying it further (e.g., adding more filters, or modifying ordering) is not allowed, since that does not translate well into SQL and it would not have a clear meaning either.</source>
          <target state="translated">Также обратите внимание, что даже если нарезка неоцененного &lt;code&gt;QuerySet&lt;/code&gt; возвращает другой неоцененный &lt;code&gt;QuerySet&lt;/code&gt; , его дальнейшее изменение (например, добавление дополнительных фильтров или изменение порядка) недопустимо, поскольку это плохо переводится в SQL и также не имеет ясного значения.</target>
        </trans-unit>
        <trans-unit id="eb1d889432b542300870c076033a0c500c3f32c9" translate="yes" xml:space="preserve">
          <source>Also note that there are special considerations when overriding the &lt;code&gt;clean()&lt;/code&gt; method of a &lt;code&gt;ModelForm&lt;/code&gt; subclass. (see the &lt;a href=&quot;../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;ModelForm documentation&lt;/a&gt; for more information)</source>
          <target state="translated">Также обратите внимание, что при переопределении метода &lt;code&gt;clean()&lt;/code&gt; подкласса &lt;code&gt;ModelForm&lt;/code&gt; есть особые соображения . (см. &lt;a href=&quot;../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;документацию ModelForm&lt;/a&gt; для получения дополнительной информации)</target>
        </trans-unit>
        <trans-unit id="b337869beeb43597783a966bea73e9d052f4736d" translate="yes" xml:space="preserve">
          <source>Also note that your code should &lt;em&gt;not&lt;/em&gt; import from either &lt;code&gt;global_settings&lt;/code&gt; or your own settings file. &lt;code&gt;django.conf.settings&lt;/code&gt; abstracts the concepts of default settings and site-specific settings; it presents a single interface. It also decouples the code that uses settings from the location of your settings.</source>
          <target state="translated">Также обратите внимание, что ваш код &lt;em&gt;не&lt;/em&gt; должен импортироваться ни из &lt;code&gt;global_settings&lt;/code&gt; , ни из вашего собственного файла настроек. &lt;code&gt;django.conf.settings&lt;/code&gt; абстрагирует понятия настроек по умолчанию и настроек, специфичных для сайта; это представляет единый интерфейс. Он также разделяет код, который использует настройки, от расположения ваших настроек.</target>
        </trans-unit>
        <trans-unit id="8b29efb6291c296b502920b310ea73c4228fffac" translate="yes" xml:space="preserve">
          <source>Also note the &amp;ldquo;Add Another&amp;rdquo; link next to &amp;ldquo;Question.&amp;rdquo; Every object with a &lt;code&gt;ForeignKey&lt;/code&gt; relationship to another gets this for free. When you click &amp;ldquo;Add Another&amp;rdquo;, you&amp;rsquo;ll get a popup window with the &amp;ldquo;Add question&amp;rdquo; form. If you add a question in that window and click &amp;ldquo;Save&amp;rdquo;, Django will save the question to the database and dynamically add it as the selected choice on the &amp;ldquo;Add choice&amp;rdquo; form you&amp;rsquo;re looking at.</source>
          <target state="translated">Также обратите внимание на ссылку &amp;laquo;Добавить еще&amp;raquo; рядом с &amp;laquo;Вопрос&amp;raquo;. Каждый объект, &lt;code&gt;ForeignKey&lt;/code&gt; отношение ForeignKey к другому, получает это бесплатно. Когда вы нажмете &amp;laquo;Добавить еще&amp;raquo;, вы получите всплывающее окно с формой &amp;laquo;Добавить вопрос&amp;raquo;. Если вы добавите вопрос в это окно и нажмете &amp;laquo;Сохранить&amp;raquo;, Django сохранит вопрос в базе данных и динамически добавит его в качестве выбранного в форме &amp;laquo;Добавить выбор&amp;raquo;, которую вы просматриваете.</target>
        </trans-unit>
        <trans-unit id="bf024fe79e32a8702c4c93dfb2506ad81ad9987b" translate="yes" xml:space="preserve">
          <source>Also note: if you want a user account to be able to create users using the Django admin site, you&amp;rsquo;ll need to give them permission to add users &lt;em&gt;and&lt;/em&gt; change users (i.e., the &amp;ldquo;Add user&amp;rdquo; and &amp;ldquo;Change user&amp;rdquo; permissions). If an account has permission to add users but not to change them, that account won&amp;rsquo;t be able to add users. Why? Because if you have permission to add users, you have the power to create superusers, which can then, in turn, change other users. So Django requires add &lt;em&gt;and&lt;/em&gt; change permissions as a slight security measure.</source>
          <target state="translated">Также обратите внимание: если вы хотите, чтобы учетная запись пользователя могла создавать пользователей с помощью сайта администрирования Django, вам нужно дать им разрешение на добавление пользователей &lt;em&gt;и&lt;/em&gt; изменение пользователей (т. Е. Разрешения &amp;laquo;Добавить пользователя&amp;raquo; и &amp;laquo;Изменить пользователя&amp;raquo;) , Если у учетной записи есть разрешение на добавление пользователей, но не на их изменение, эта учетная запись не сможет добавлять пользователей. Зачем? Потому что, если у вас есть разрешение на добавление пользователей, у вас есть возможность создавать суперпользователей, которые могут, в свою очередь, изменять других пользователей. Так что Django требует добавления &lt;em&gt;и&lt;/em&gt; изменения разрешений в качестве небольшой меры безопасности.</target>
        </trans-unit>
        <trans-unit id="696e086368362c2d09106b35b57c47867e028a93" translate="yes" xml:space="preserve">
          <source>Also notice that this isn&amp;rsquo;t a very elegant way of doing publisher-specific books. If we want to add another publisher page, we&amp;rsquo;d need another handful of lines in the URLconf, and more than a few publishers would get unreasonable. We&amp;rsquo;ll deal with this problem in the next section.</source>
          <target state="translated">Также обратите внимание, что это не очень элегантный способ делать книги для издателей. Если мы хотим добавить еще одну страницу издателя, нам понадобится еще несколько строк в URLconf, и более чем несколько издателей получат необоснованные. Мы рассмотрим эту проблему в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="274f94a8731614b29d48ec0b7318f1b3988943f8" translate="yes" xml:space="preserve">
          <source>Also takes &lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;min_length&lt;/code&gt;, &lt;code&gt;strip&lt;/code&gt;, and &lt;code&gt;empty_value&lt;/code&gt; which work just as they do for &lt;a href=&quot;#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Также принимает &lt;code&gt;max_length&lt;/code&gt; , &lt;code&gt;min_length&lt;/code&gt; , &lt;code&gt;strip&lt;/code&gt; и &lt;code&gt;empty_value&lt;/code&gt; , которые работают так же, как и для &lt;a href=&quot;#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9b4efe342a799ea29ae37efd1b65b2539fe6c99" translate="yes" xml:space="preserve">
          <source>Also takes &lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;min_length&lt;/code&gt;, and &lt;code&gt;strip&lt;/code&gt;, which work just as they do for &lt;a href=&quot;#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Также принимает &lt;code&gt;max_length&lt;/code&gt; , &lt;code&gt;min_length&lt;/code&gt; и &lt;code&gt;strip&lt;/code&gt; , которые работают так же, как и для &lt;a href=&quot;#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43d3f0dec8708afadcd4301e960c1f9ba74f008b" translate="yes" xml:space="preserve">
          <source>Also takes some optional arguments:</source>
          <target state="translated">Также принимает некоторые необязательные аргументы:</target>
        </trans-unit>
        <trans-unit id="41e4d1d7bc570080f714dde302cfe63771621c32" translate="yes" xml:space="preserve">
          <source>Also this helper function only serves the actual &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; folder; it doesn&amp;rsquo;t perform static files discovery like &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Также эта вспомогательная функция обслуживает только фактическую папку &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; ; он не выполняет статическое обнаружение файлов, таких как &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="953ccdb4013747658e82aad06c56f0c154c9caf2" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;extra=0&lt;/code&gt; doesn&amp;rsquo;t prevent creation of new model instances as you can &lt;a href=&quot;formsets#understanding-the-managementform&quot;&gt;add additional forms with JavaScript&lt;/a&gt; or send additional POST data. Formsets &lt;a href=&quot;https://code.djangoproject.com/ticket/26142&quot;&gt;don&amp;rsquo;t yet provide functionality&lt;/a&gt; for an &amp;ldquo;edit only&amp;rdquo; view that prevents creation of new instances.</source>
          <target state="translated">Кроме того, &lt;code&gt;extra=0&lt;/code&gt; не препятствует созданию новых экземпляров модели, поскольку вы можете &lt;a href=&quot;formsets#understanding-the-managementform&quot;&gt;добавлять дополнительные формы с помощью JavaScript&lt;/a&gt; или отправлять дополнительные данные POST. Наборы форм &lt;a href=&quot;https://code.djangoproject.com/ticket/26142&quot;&gt;еще не предоставляют функциональность&lt;/a&gt; для представления &amp;laquo;только для редактирования&amp;raquo;, которое предотвращает создание новых экземпляров.</target>
        </trans-unit>
        <trans-unit id="a2bd6e68e9d37a21829d8762c978cf7a2c012cf0" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;request.POST&lt;/code&gt; is accessed by &lt;a href=&quot;../../ref/middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt;&lt;code&gt;CsrfViewMiddleware&lt;/code&gt;&lt;/a&gt; which is enabled by default. This means you will need to use &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; on your view to allow you to change the upload handlers. You will then need to use &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; on the function that actually processes the request. Note that this means that the handlers may start receiving the file upload before the CSRF checks have been done. Example code:</source>
          <target state="translated">Кроме того, &lt;code&gt;request.POST&lt;/code&gt; доступен из &lt;a href=&quot;../../ref/middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt; &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; ,&lt;/a&gt; который включен по умолчанию. Это означает, что вам нужно будет использовать &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_exempt&quot;&gt; &lt;code&gt;csrf_exempt()&lt;/code&gt; &lt;/a&gt; в вашем представлении, чтобы позволить вам изменить обработчики загрузки. Затем вам нужно будет использовать &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;csrf_protect()&lt;/code&gt; &lt;/a&gt; для функции, которая фактически обрабатывает запрос. Обратите внимание, что это означает, что обработчики могут начать получать загрузку файла до того, как будут выполнены проверки CSRF. Пример кода:</target>
        </trans-unit>
        <trans-unit id="92a75a0b0baf789cfb6ccc150f550b1442b059a0" translate="yes" xml:space="preserve">
          <source>Also, if you call the database-altering methods &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt;, on &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;related managers&lt;/code&gt;&lt;/a&gt;, any prefetched cache for the relation will be cleared.</source>
          <target state="translated">Кроме того, если вы вызовете методы изменения базы данных &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; для &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt; &lt;code&gt;related managers&lt;/code&gt; &lt;/a&gt; , любой предварительно выбранный кэш для отношения будет очищен.</target>
        </trans-unit>
        <trans-unit id="698ca776869738d41eaf7a155f51f0e5da884fdc" translate="yes" xml:space="preserve">
          <source>Also, if your search fields include fields that aren&amp;rsquo;t indexed by the database, you might encounter poor performance on extremely large tables.</source>
          <target state="translated">Кроме того, если ваши поля поиска содержат поля, которые не индексируются базой данных, вы можете столкнуться с низкой производительностью на очень больших таблицах.</target>
        </trans-unit>
        <trans-unit id="0825e6acbf0d587052cfc960fc478bc68675d460" translate="yes" xml:space="preserve">
          <source>Also, if your template tag creates a new context for performing some sub-rendering, set the auto-escape attribute to the current context&amp;rsquo;s value. The &lt;code&gt;__init__&lt;/code&gt; method for the &lt;code&gt;Context&lt;/code&gt; class takes a parameter called &lt;code&gt;autoescape&lt;/code&gt; that you can use for this purpose. For example:</source>
          <target state="translated">Кроме того, если ваш шаблонный тег создает новый контекст для выполнения некоторого суб-рендеринга, установите для атрибута auto-escape значение текущего контекста. Метод &lt;code&gt;__init__&lt;/code&gt; для класса &lt;code&gt;Context&lt;/code&gt; принимает параметр &lt;code&gt;autoescape&lt;/code&gt; , который вы можете использовать для этой цели. Например:</target>
        </trans-unit>
        <trans-unit id="92abe54f4e4095755881b3d83e2ca157117e1f06" translate="yes" xml:space="preserve">
          <source>Also, it&amp;rsquo;s an error to call &lt;code&gt;configure()&lt;/code&gt; more than once, or to call &lt;code&gt;configure()&lt;/code&gt; after any setting has been accessed.</source>
          <target state="translated">Также ошибочно вызывать &lt;code&gt;configure()&lt;/code&gt; более одного раза или вызывать &lt;code&gt;configure()&lt;/code&gt; после обращения к любому параметру.</target>
        </trans-unit>
        <trans-unit id="de338795c2b16c294f7a41b095d17ca5ed1c7c66" translate="yes" xml:space="preserve">
          <source>Also, note that &lt;code&gt;reverse()&lt;/code&gt; should generally only be called on a &lt;code&gt;QuerySet&lt;/code&gt; which has a defined ordering (e.g., when querying against a model which defines a default ordering, or when using &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;). If no such ordering is defined for a given &lt;code&gt;QuerySet&lt;/code&gt;, calling &lt;code&gt;reverse()&lt;/code&gt; on it has no real effect (the ordering was undefined prior to calling &lt;code&gt;reverse()&lt;/code&gt;, and will remain undefined afterward).</source>
          <target state="translated">Также обратите внимание, что &lt;code&gt;reverse()&lt;/code&gt; обычно вызывается только для &lt;code&gt;QuerySet&lt;/code&gt; , который имеет определенный порядок (например, при запросе к модели, которая определяет порядок по умолчанию, или при использовании &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; ). Если такой порядок не определен для данного &lt;code&gt;QuerySet&lt;/code&gt; , то вызов &lt;code&gt;reverse()&lt;/code&gt; для него не имеет реального эффекта (порядок был неопределен до вызова &lt;code&gt;reverse()&lt;/code&gt; и останется неопределенным после).</target>
        </trans-unit>
        <trans-unit id="6564a059141b793de7c4015d115111e5700aa878" translate="yes" xml:space="preserve">
          <source>Also, note the &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting at the top of the file. That holds the names of all Django applications that are activated in this Django instance. Apps can be used in multiple projects, and you can package and distribute them for use by others in their projects.</source>
          <target state="translated">Также обратите внимание на параметр &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; в верхней части файла. Он содержит имена всех приложений Django, которые активированы в этом экземпляре Django. Приложения могут использоваться в нескольких проектах, и вы можете упаковывать и распространять их для использования другими в своих проектах.</target>
        </trans-unit>
        <trans-unit id="32fad38c70d331f28b8993769e786f5f8acf6480" translate="yes" xml:space="preserve">
          <source>Also, register the model in the app&amp;rsquo;s &lt;code&gt;admin.py&lt;/code&gt;:</source>
          <target state="translated">Кроме того, зарегистрируйте модель в &lt;code&gt;admin.py&lt;/code&gt; приложения :</target>
        </trans-unit>
        <trans-unit id="47fd7628205150d42e8bf244b355fc6770d7aa52" translate="yes" xml:space="preserve">
          <source>Also, use of &lt;code&gt;iterator()&lt;/code&gt; causes previous &lt;code&gt;prefetch_related()&lt;/code&gt; calls to be ignored since these two optimizations do not make sense together.</source>
          <target state="translated">Кроме того, использование &lt;code&gt;iterator()&lt;/code&gt; приводит к тому, что предыдущие вызовы &lt;code&gt;prefetch_related()&lt;/code&gt; игнорируются, поскольку эти две оптимизации не имеют смысла вместе.</target>
        </trans-unit>
        <trans-unit id="c24b47c5852869dcfdc94dc268593f79c8801929" translate="yes" xml:space="preserve">
          <source>Also, you can easily &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;write your own custom model fields&lt;/a&gt;.</source>
          <target state="translated">Кроме того, вы можете легко &lt;a href=&quot;../../howto/custom-model-fields&quot;&gt;написать свои собственные поля модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe2f959782b3ac938753e3a5cc6f8e44788d56e9" translate="yes" xml:space="preserve">
          <source>Also, you can give &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; a list of additional processors, using the optional, third positional argument, &lt;code&gt;processors&lt;/code&gt;. In this example, the &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; instance gets an &lt;code&gt;ip_address&lt;/code&gt; variable:</source>
          <target state="translated">Кроме того, вы можете предоставить &lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt; список дополнительных процессоров, используя необязательный третий позиционный аргумент &lt;code&gt;processors&lt;/code&gt; . В этом примере экземпляр &lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt; получает переменную &lt;code&gt;ip_address&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d068b3f2fe4f8285a438bec72113e6d9cc12d56b" translate="yes" xml:space="preserve">
          <source>Altering settings at runtime</source>
          <target state="translated">Изменение настроек во время выполнения</target>
        </trans-unit>
        <trans-unit id="71a869542b89c60e80814055a00906889f48491c" translate="yes" xml:space="preserve">
          <source>Alternative software implementations</source>
          <target state="translated">Альтернативные программные реализации</target>
        </trans-unit>
        <trans-unit id="6e522f9a7cffe2ed0c63f89a3004cfe45ca65f35" translate="yes" xml:space="preserve">
          <source>Alternative template systems vary in the extent to which they share Django&amp;rsquo;s templating language.</source>
          <target state="translated">Альтернативные системы шаблонов различаются в той степени, в которой они разделяют язык шаблонов Django.</target>
        </trans-unit>
        <trans-unit id="33dcb6032eefd2804d531b416d323ccba2ea1014" translate="yes" xml:space="preserve">
          <source>Alternatively it is possible to register the inclusion tag using a &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt;&lt;code&gt;django.template.Template&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="translated">В качестве альтернативы можно зарегистрировать тег включения, используя экземпляр &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt; &lt;code&gt;django.template.Template&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a7cdd84aa7f928d9cff82ebbc61a89788dc1bc59" translate="yes" xml:space="preserve">
          <source>Alternatively you can use plain text and &lt;a href=&quot;../utils#django.utils.html.escape&quot;&gt;&lt;code&gt;django.utils.html.escape()&lt;/code&gt;&lt;/a&gt; to escape any HTML special characters. Ensure that you escape any help text that may come from untrusted users to avoid a cross-site scripting attack.</source>
          <target state="translated">В качестве альтернативы вы можете использовать обычный текст и &lt;a href=&quot;../utils#django.utils.html.escape&quot;&gt; &lt;code&gt;django.utils.html.escape()&lt;/code&gt; &lt;/a&gt; для экранирования любых специальных символов HTML. Убедитесь, что вы избегаете любого текста справки, который может прийти от ненадежных пользователей, чтобы избежать атаки сценариев между сайтами.</target>
        </trans-unit>
        <trans-unit id="2624e15c47d1ca23eaf50d436bb985d27e5220ab" translate="yes" xml:space="preserve">
          <source>Alternatively, it would still be less work than the above approach to have a separate view for processing the form, which could use &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; distinct from &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; without concerns.</source>
          <target state="translated">В качестве альтернативы, было бы все еще меньше работы, чем в вышеупомянутом подходе, иметь отдельное представление для обработки формы, которое могло бы использовать &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; ,&lt;/a&gt; отличный от &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; ,&lt;/a&gt; без проблем.</target>
        </trans-unit>
        <trans-unit id="bf935409335b0819ad31fff64ab28b7ddb6d2009" translate="yes" xml:space="preserve">
          <source>Alternatively, it would still be less work than the above approach to have a separate view for processing the form, which could use &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; distinct from &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; without concerns.</source>
          <target state="translated">В качестве альтернативы было бы все равно меньше работы, чем вышеупомянутый подход, чтобы иметь отдельное представление для обработки формы, которое могло &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt; без проблем использовать &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; ,&lt;/a&gt; отличное от DetailView .</target>
        </trans-unit>
        <trans-unit id="6ceea1051ad37e03b252c47ef8b593e57b8c022b" translate="yes" xml:space="preserve">
          <source>Alternatively, template tag modules can be registered through the &lt;code&gt;'libraries'&lt;/code&gt; argument to &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt;. This is useful if you want to use a different label from the template tag module name when loading template tags. It also enables you to register tags without installing an application.</source>
          <target state="translated">Кроме того, модули тегов шаблонов можно зарегистрировать с помощью аргумента &lt;code&gt;'libraries'&lt;/code&gt; в &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; . Это полезно, если вы хотите использовать другую метку от имени модуля тега шаблона при загрузке тегов шаблона. Это также позволяет регистрировать теги без установки приложения.</target>
        </trans-unit>
        <trans-unit id="ad074627882cec434ab6881802c7f64d46ab69ee" translate="yes" xml:space="preserve">
          <source>Alternatively, you can activate the &lt;a href=&quot;../../ref/templates/api#django.template.context_processors.tz&quot;&gt;&lt;code&gt;tz()&lt;/code&gt;&lt;/a&gt; context processor and use the &lt;code&gt;TIME_ZONE&lt;/code&gt; context variable.</source>
          <target state="translated">Кроме того, вы можете активировать контекстный процессор &lt;a href=&quot;../../ref/templates/api#django.template.context_processors.tz&quot;&gt; &lt;code&gt;tz()&lt;/code&gt; &lt;/a&gt; и использовать контекстную переменную &lt;code&gt;TIME_ZONE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d7e1d285de0e8c723c915766ec923e21dec62b3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create a subclass that sets &lt;code&gt;self.queryset&lt;/code&gt; in &lt;code&gt;__init__&lt;/code&gt;:</source>
          <target state="translated">Кроме того, вы можете создать подкласс, который устанавливает &lt;code&gt;self.queryset&lt;/code&gt; в &lt;code&gt;__init__&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b9aa58af8effd4d680ef6010538b711b78b68f52" translate="yes" xml:space="preserve">
          <source>Alternatively, you can map fields in the query to model fields using the &lt;code&gt;translations&lt;/code&gt; argument to &lt;code&gt;raw()&lt;/code&gt;. This is a dictionary mapping names of fields in the query to names of fields on the model. For example, the above query could also be written:</source>
          <target state="translated">Кроме того, вы можете сопоставить поля в запросе с полями модели, используя аргумент &lt;code&gt;translations&lt;/code&gt; to &lt;code&gt;raw()&lt;/code&gt; . Это словарь, сопоставляющий имена полей в запросе с именами полей в модели. Например, вышеприведенный запрос также может быть записан:</target>
        </trans-unit>
        <trans-unit id="588bd3c0e8ac048379d18ae614bd814abd203833" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass &lt;code&gt;attach()&lt;/code&gt; three arguments: &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;mimetype&lt;/code&gt;. &lt;code&gt;filename&lt;/code&gt; is the name of the file attachment as it will appear in the email, &lt;code&gt;content&lt;/code&gt; is the data that will be contained inside the attachment and &lt;code&gt;mimetype&lt;/code&gt; is the optional MIME type for the attachment. If you omit &lt;code&gt;mimetype&lt;/code&gt;, the MIME content type will be guessed from the filename of the attachment.</source>
          <target state="translated">Кроме того, вы можете передать &lt;code&gt;attach()&lt;/code&gt; три аргумента: &lt;code&gt;filename&lt;/code&gt; , &lt;code&gt;content&lt;/code&gt; и &lt;code&gt;mimetype&lt;/code&gt; . &lt;code&gt;filename&lt;/code&gt; - это имя вложения, которое будет отображаться в электронном письме, &lt;code&gt;content&lt;/code&gt; - это данные, которые будут содержаться во вложении, а &lt;code&gt;mimetype&lt;/code&gt; - необязательный тип MIME для вложения. Если вы опустите &lt;code&gt;mimetype&lt;/code&gt; , тип содержимого MIME будет угадан из имени файла вложения.</target>
        </trans-unit>
        <trans-unit id="56baacf75a7d1dd4e8e5a5ae7bb58b76cd961ea0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;code&gt;save(commit=False)&lt;/code&gt; and manually set any extra required fields:</source>
          <target state="translated">Кроме того, вы можете использовать &lt;code&gt;save(commit=False)&lt;/code&gt; и вручную установить любые дополнительные обязательные поля:</target>
        </trans-unit>
        <trans-unit id="85fbfeef40e52114cb18912e3180133fb64b164e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use a &lt;a href=&quot;#django.dispatch.receiver&quot;&gt;&lt;code&gt;receiver()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">В качестве альтернативы вы можете использовать оформитель &lt;a href=&quot;#django.dispatch.receiver&quot;&gt; &lt;code&gt;receiver()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d2ab6c8b2d0a505ac8a240c953a735296c8dd0ef" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;../topics/templates&quot;&gt;Django template system&lt;/a&gt; to generate CSV. This is lower-level than using the convenient Python &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module, but the solution is presented here for completeness.</source>
          <target state="translated">Кроме того, вы можете использовать систему &lt;a href=&quot;../topics/templates&quot;&gt;шаблонов Django&lt;/a&gt; для генерации CSV. Это более низкий уровень, чем при использовании удобного модуля Python &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt; , но решение представлено здесь для полноты.</target>
        </trans-unit>
        <trans-unit id="27e398202050801cd681b4055b573026e175814f" translate="yes" xml:space="preserve">
          <source>Alternatively, you may alter an existing user&amp;rsquo;s role from the SQL shell (assuming this is done from an existing superuser account):</source>
          <target state="translated">В качестве альтернативы вы можете изменить роль существующего пользователя из оболочки SQL (при условии, что это сделано из существующей учетной записи суперпользователя):</target>
        </trans-unit>
        <trans-unit id="0abe152a51938c05079be6a7f31d395c658aeab4" translate="yes" xml:space="preserve">
          <source>Alternatively, you may have a complex Python object that can somehow be serialized to fit into a standard database column type. This is another case where a &lt;code&gt;Field&lt;/code&gt; subclass will help you use your object with your models.</source>
          <target state="translated">В качестве альтернативы, у вас может быть сложный объект Python, который можно каким-то образом сериализовать, чтобы он соответствовал стандартному типу столбца базы данных. Это еще один случай, когда подкласс &lt;code&gt;Field&lt;/code&gt; поможет вам использовать ваш объект с вашими моделями.</target>
        </trans-unit>
        <trans-unit id="d22e73a36ee72142b9710c6f598b2fa17ad341ae" translate="yes" xml:space="preserve">
          <source>Alternatively, your filter code can manually take care of any necessary escaping. This is necessary when you&amp;rsquo;re introducing new HTML markup into the result. You want to mark the output as safe from further escaping so that your HTML markup isn&amp;rsquo;t escaped further, so you&amp;rsquo;ll need to handle the input yourself.</source>
          <target state="translated">Кроме того, ваш код фильтра может вручную позаботиться о любом необходимом экранировании. Это необходимо, когда вы вводите новую HTML-разметку в результат. Вы хотите пометить вывод как безопасный от дальнейшего экранирования, чтобы ваша HTML-разметка не экранировалась дальше, поэтому вам придется обрабатывать ввод самостоятельно.</target>
        </trans-unit>
        <trans-unit id="ea10ad892df4bcea34e41f944c0cec79f52baaf9" translate="yes" xml:space="preserve">
          <source>Alternatives to Django&amp;rsquo;s template language</source>
          <target state="translated">Альтернативы языку шаблонов Django</target>
        </trans-unit>
        <trans-unit id="ae3e5f3db33e272b63b1b64732ee7fcd4f54eb4b" translate="yes" xml:space="preserve">
          <source>Alters a field&amp;rsquo;s definition, including changes to its type, &lt;a href=&quot;models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.Field.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt; and other field attributes.</source>
          <target state="translated">Изменяет определение поля, включая изменения его типа, &lt;a href=&quot;models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;models/fields#django.db.models.Field.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt; &lt;code&gt;db_column&lt;/code&gt; &lt;/a&gt; и других атрибутов поля.</target>
        </trans-unit>
        <trans-unit id="e5910625172e9af95bdd7fc7ab84528f5d87198e" translate="yes" xml:space="preserve">
          <source>Alters the managers that are available during migrations.</source>
          <target state="translated">Меняет менеджеров,которые доступны во время миграции.</target>
        </trans-unit>
        <trans-unit id="36a270dcb3503dfb775409cd7f97e05895cb28d0" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; output is the default output style when you &lt;code&gt;print&lt;/code&gt; a form, other output styles are available. Each style is available as a method on a form object, and each rendering method returns a string.</source>
          <target state="translated">Хотя &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; - это стиль вывода по умолчанию при &lt;code&gt;print&lt;/code&gt; формы, доступны другие стили вывода. Каждый стиль доступен как метод объекта формы, и каждый метод рендеринга возвращает строку.</target>
        </trans-unit>
        <trans-unit id="f1d6bdab964b21813432d1c5afef320356d65640" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;reporter.stories_filed = F('stories_filed') + 1&lt;/code&gt; looks like a normal Python assignment of value to an instance attribute, in fact it&amp;rsquo;s an SQL construct describing an operation on the database.</source>
          <target state="translated">Хотя &lt;code&gt;reporter.stories_filed = F('stories_filed') + 1&lt;/code&gt; выглядит как обычное присвоение значения Python атрибуту экземпляра, на самом деле это конструкция SQL, описывающая операцию над базой данных.</target>
        </trans-unit>
        <trans-unit id="eb73c88f5f50706eae03b23bf2627359294c5bf9" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;select_for_update()&lt;/code&gt; normally fails in autocommit mode, since &lt;a href=&quot;../../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; automatically wraps each test in a transaction, calling &lt;code&gt;select_for_update()&lt;/code&gt; in a &lt;code&gt;TestCase&lt;/code&gt; even outside an &lt;a href=&quot;../../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block will (perhaps unexpectedly) pass without raising a &lt;code&gt;TransactionManagementError&lt;/code&gt;. To properly test &lt;code&gt;select_for_update()&lt;/code&gt; you should use &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Хотя &lt;code&gt;select_for_update()&lt;/code&gt; обычно завершается неудачно в режиме автоматической фиксации, поскольку &lt;a href=&quot;../../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; автоматически оборачивает каждый тест в транзакции, вызов &lt;code&gt;select_for_update()&lt;/code&gt; в &lt;code&gt;TestCase&lt;/code&gt; даже вне блока &lt;a href=&quot;../../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; будет (возможно, неожиданно) проходить без вызова &lt;code&gt;TransactionManagementError&lt;/code&gt; . Для правильной проверки &lt;code&gt;select_for_update()&lt;/code&gt; вы должны использовать &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17d2e7a0d393b7d56d8a593921880b94e217792b" translate="yes" xml:space="preserve">
          <source>Although Python provides a mail sending interface via the &lt;a href=&quot;https://docs.python.org/3/library/smtplib.html#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; module, Django provides a couple of light wrappers over it. These wrappers are provided to make sending email extra quick, to help test email sending during development, and to provide support for platforms that can&amp;rsquo;t use SMTP.</source>
          <target state="translated">Хотя Python предоставляет интерфейс для отправки почты через модуль &lt;a href=&quot;https://docs.python.org/3/library/smtplib.html#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt; , Django предоставляет несколько легких оболочек для него. Эти оболочки предназначены для ускорения отправки электронной почты, для проверки отправки электронной почты во время разработки и для поддержки платформ, которые не могут использовать SMTP.</target>
        </trans-unit>
        <trans-unit id="ad28848e7e3de4d9e1c1d1e1c78fd615e37e0584" translate="yes" xml:space="preserve">
          <source>Although it&amp;rsquo;s not required that you use the sites framework, it&amp;rsquo;s strongly encouraged, because Django takes advantage of it in a few places. Even if your Django installation is powering only a single site, you should take the two seconds to create the site object with your &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, and point to its ID in your &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Хотя не обязательно использовать платформу сайтов, это настоятельно рекомендуется, потому что Django использует это в нескольких местах. Даже если ваша установка Django включает только один сайт, вам нужно потратить две секунды на создание объекта сайта с вашим &lt;code&gt;domain&lt;/code&gt; и &lt;code&gt;name&lt;/code&gt; и указать его идентификатор в настройке &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="194869c1637c7a1a85b3692422964d84722a7385" translate="yes" xml:space="preserve">
          <source>Although macOS comes with Python installed, users can use &lt;a href=&quot;https://www.python.org/ftp/python/&quot;&gt;framework installers&lt;/a&gt; provided by the Python Software Foundation. An advantage to using the installer is that macOS&amp;rsquo;s Python will remain &amp;ldquo;pristine&amp;rdquo; for internal operating system use.</source>
          <target state="translated">Хотя macOS поставляется с установленным Python, пользователи могут использовать &lt;a href=&quot;https://www.python.org/ftp/python/&quot;&gt;установщики инфраструктуры,&lt;/a&gt; предоставляемые Python Software Foundation. Преимущество использования установщика в том, что Python в macOS останется &amp;laquo;нетронутым&amp;raquo; для внутреннего использования операционной системой.</target>
        </trans-unit>
        <trans-unit id="df04fcbdb047e55419855b5e1f2c6a44d972baa7" translate="yes" xml:space="preserve">
          <source>Although some commands may allow their own custom options, every command allows for the following options:</source>
          <target state="translated">Хотя некоторые команды могут разрешать свои собственные пользовательские опции,каждая команда разрешает следующие опции:</target>
        </trans-unit>
        <trans-unit id="25e537bbf3b1fe34054d4a0be78f060d686c2d47" translate="yes" xml:space="preserve">
          <source>Although the above example would work in the Python interactive interpreter, some of the test client&amp;rsquo;s functionality, notably the template-related functionality, is only available &lt;em&gt;while tests are running&lt;/em&gt;.</source>
          <target state="translated">Хотя приведенный выше пример будет работать в интерактивном интерпретаторе Python, некоторые функции клиента тестирования, в частности, связанные с шаблоном, доступны только &lt;em&gt;во время выполнения тестов&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="642aada3b4dd7550553bdd48221f14037a9e70d5" translate="yes" xml:space="preserve">
          <source>Although the module is named &lt;code&gt;gdal&lt;/code&gt;, GeoDjango only supports some of the capabilities of OGR and GDAL&amp;rsquo;s raster features at this time.</source>
          <target state="translated">Хотя модуль называется &lt;code&gt;gdal&lt;/code&gt; , в настоящее время GeoDjango поддерживает только некоторые возможности растровых функций OGR и GDAL.</target>
        </trans-unit>
        <trans-unit id="83f5a70b7b65e453c2f6735c339756076fead2b2" translate="yes" xml:space="preserve">
          <source>Although the primary way you&amp;rsquo;ll use &lt;code&gt;Field&lt;/code&gt; classes is in &lt;code&gt;Form&lt;/code&gt; classes, you can also instantiate them and use them directly to get a better idea of how they work. Each &lt;code&gt;Field&lt;/code&gt; instance has a &lt;code&gt;clean()&lt;/code&gt; method, which takes a single argument and either raises a &lt;code&gt;django.core.exceptions.ValidationError&lt;/code&gt; exception or returns the clean value:</source>
          <target state="translated">Хотя основной способ использования классов &lt;code&gt;Field&lt;/code&gt; классы &lt;code&gt;Form&lt;/code&gt; , вы также можете создать их экземпляры и использовать их напрямую, чтобы лучше понять, как они работают. У каждого экземпляра &lt;code&gt;Field&lt;/code&gt; есть метод &lt;code&gt;clean()&lt;/code&gt; , который принимает один аргумент и либо вызывает исключение &lt;code&gt;django.core.exceptions.ValidationError&lt;/code&gt; , либо возвращает чистое значение:</target>
        </trans-unit>
        <trans-unit id="bee4b6c86d4b5ab7cb7d3c1c53cb24d37af0da9f" translate="yes" xml:space="preserve">
          <source>Although the primary way you&amp;rsquo;ll use &lt;code&gt;Field&lt;/code&gt; classes is in &lt;code&gt;Form&lt;/code&gt; classes, you can also instantiate them and use them directly to get a better idea of how they work. Each &lt;code&gt;Field&lt;/code&gt; instance has a &lt;code&gt;clean()&lt;/code&gt; method, which takes a single argument and either raises a &lt;code&gt;django.forms.ValidationError&lt;/code&gt; exception or returns the clean value:</source>
          <target state="translated">Хотя основной способ использования классов &lt;code&gt;Field&lt;/code&gt; - это использование классов &lt;code&gt;Form&lt;/code&gt; , вы также можете создавать их экземпляры и использовать их напрямую, чтобы лучше понять, как они работают. Каждый экземпляр &lt;code&gt;Field&lt;/code&gt; имеет метод &lt;code&gt;clean()&lt;/code&gt; , который принимает один аргумент и либо вызывает исключение &lt;code&gt;django.forms.ValidationError&lt;/code&gt; , либо возвращает чистое значение:</target>
        </trans-unit>
        <trans-unit id="6226386795c943c9b1edd5627cd66bae7276a870" translate="yes" xml:space="preserve">
          <source>Although the setting offers little practical benefit, it&amp;rsquo;s sometimes required by security auditors.</source>
          <target state="translated">Хотя этот параметр не дает практической пользы, иногда он требуется аудиторам безопасности.</target>
        </trans-unit>
        <trans-unit id="7668db2531ca50b0b25171433eb3dcb36b9e4815" translate="yes" xml:space="preserve">
          <source>Although there is no built-in method for copying model instances, it is possible to easily create new instance with all fields&amp;rsquo; values copied. In the simplest case, you can set &lt;code&gt;pk&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;. Using our blog example:</source>
          <target state="translated">Хотя нет встроенного метода для копирования экземпляров модели, можно легко создать новый экземпляр со скопированными значениями всех полей. В простейшем случае вы можете установить &lt;code&gt;pk&lt;/code&gt; на &lt;code&gt;None&lt;/code&gt; . Используя наш пример блога:</target>
        </trans-unit>
        <trans-unit id="e224421f07b0d6dcb4559fde5db93254f751573e" translate="yes" xml:space="preserve">
          <source>Although you can access model classes as described above, avoid interacting with the database in your &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; implementation. This includes model methods that execute queries (&lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, manager methods etc.), and also raw SQL queries via &lt;code&gt;django.db.connection&lt;/code&gt;. Your &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method will run during startup of every management command. For example, even though the test database configuration is separate from the production settings, &lt;code&gt;manage.py test&lt;/code&gt; would still execute some queries against your &lt;strong&gt;production&lt;/strong&gt; database!</source>
          <target state="translated">Хотя вы можете обращаться к классам моделей, как описано выше, избегайте взаимодействия с базой данных в вашей реализации &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; . Это включает методы модели, которые выполняют запросы ( &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; , методы менеджера и т. Д.), А также необработанные запросы SQL через &lt;code&gt;django.db.connection&lt;/code&gt; . Ваш метод &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; будет запускаться при запуске каждой команды управления. Например, несмотря на то, что конфигурация тестовой базы данных отделена от производственных настроек, &lt;code&gt;manage.py test&lt;/code&gt; все равно выполнит некоторые запросы к вашей &lt;strong&gt;производственной&lt;/strong&gt; базе данных!</target>
        </trans-unit>
        <trans-unit id="61b75b8d0b36d72cb541a55f1994f7c38a8ead9d" translate="yes" xml:space="preserve">
          <source>Although you can pass any number of arguments to a template tag using &lt;code&gt;token.split_contents()&lt;/code&gt;, the arguments are all unpacked as string literals. A little more work is required in order to pass dynamic content (a template variable) to a template tag as an argument.</source>
          <target state="translated">Хотя вы можете передать любое количество аргументов в тег шаблона с помощью &lt;code&gt;token.split_contents()&lt;/code&gt; , все аргументы распаковываются как строковые литералы. Требуется немного больше работы, чтобы передать динамический контент (переменную шаблона) в тег шаблона в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="a1a76598ce45e214be02b0c1dad6e5cccdb65e6a" translate="yes" xml:space="preserve">
          <source>Although you can use Django without a database, it comes with an &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;object-relational mapper&lt;/a&gt; in which you describe your database layout in Python code.</source>
          <target state="translated">Хотя вы можете использовать Django без базы данных, он поставляется с &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;объектно-реляционным картографом,&lt;/a&gt; в котором вы описываете структуру вашей базы данных в коде Python.</target>
        </trans-unit>
        <trans-unit id="3f2946c2a1c3d3fb758114cb91b72f1c7ecc85a0" translate="yes" xml:space="preserve">
          <source>Although you can&amp;rsquo;t import models at the module-level where &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; classes are defined, you can import them in &lt;code&gt;ready()&lt;/code&gt;, using either an &lt;code&gt;import&lt;/code&gt; statement or &lt;a href=&quot;#django.apps.AppConfig.get_model&quot;&gt;&lt;code&gt;get_model()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Хотя вы не можете импортировать модели на уровне модуля, где определены классы &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; , вы можете импортировать их в &lt;code&gt;ready()&lt;/code&gt; , используя оператор &lt;code&gt;import&lt;/code&gt; или &lt;a href=&quot;#django.apps.AppConfig.get_model&quot;&gt; &lt;code&gt;get_model()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c9d48b83bada6a5ee76fb5e0fea2eab96528d7e" translate="yes" xml:space="preserve">
          <source>Although you might think about storing files in the database, consider that it is bad design in 99% of the cases. This field is &lt;em&gt;not&lt;/em&gt; a replacement for proper &lt;a href=&quot;../../howto/static-files/index&quot;&gt;static files&lt;/a&gt; handling.</source>
          <target state="translated">Хотя вы можете подумать о хранении файлов в базе данных, учтите, что это плохой дизайн в 99% случаев. Это поле &lt;em&gt;не&lt;/em&gt; является заменой для правильной обработки &lt;a href=&quot;../../howto/static-files/index&quot;&gt;статических файлов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67df2de3326ef19fc04ce801e27ed4b4b8fad0ec" translate="yes" xml:space="preserve">
          <source>Always &lt;code&gt;False&lt;/code&gt;. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="translated">Всегда &lt;code&gt;False&lt;/code&gt; . Этот метод делает экземпляр &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; потоковым объектом.</target>
        </trans-unit>
        <trans-unit id="4686e5206fe2cbfcf5605c9202da330b22ccc178" translate="yes" xml:space="preserve">
          <source>Always &lt;code&gt;True&lt;/code&gt;. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="translated">Всегда &lt;code&gt;True&lt;/code&gt; . Этот метод делает экземпляр &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; потоковым объектом.</target>
        </trans-unit>
        <trans-unit id="125a4148526d3132ede8f973cff78ac6a82e0dff" translate="yes" xml:space="preserve">
          <source>Always prefer &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; if possible at all. It accounts for the idiosyncrasies of each database and prevents invalid operations.</source>
          <target state="translated">Всегда предпочитайте &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; если это вообще возможно. Он учитывает особенности каждой базы данных и предотвращает недопустимые операции.</target>
        </trans-unit>
        <trans-unit id="92aeab1f6ae301136883fbf61b508354c6a1d03b" translate="yes" xml:space="preserve">
          <source>Always refer to the documentation that corresponds to the version of Django you&amp;rsquo;re using!</source>
          <target state="translated">Всегда обращайтесь к документации, которая соответствует используемой версии Django!</target>
        </trans-unit>
        <trans-unit id="5e36151c5431caa487785143303f4667f6105373" translate="yes" xml:space="preserve">
          <source>Always return strings from a template tag&amp;rsquo;s &lt;code&gt;render()&lt;/code&gt; method and from template filters.</source>
          <target state="translated">Всегда возвращайте строки из метода &lt;code&gt;render()&lt;/code&gt; тега шаблона и из фильтров шаблона.</target>
        </trans-unit>
        <trans-unit id="e129e2c256cac5a202052b90d6f48444141571d0" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;params&lt;/code&gt; instead of embedding values directly into &lt;code&gt;where&lt;/code&gt; because &lt;code&gt;params&lt;/code&gt; will ensure values are quoted correctly according to your particular backend. For example, quotes will be escaped correctly.</source>
          <target state="translated">Всегда используйте &lt;code&gt;params&lt;/code&gt; вместо того, чтобы встраивать значения непосредственно в &lt;code&gt;where&lt;/code&gt; , потому что &lt;code&gt;params&lt;/code&gt; обеспечит правильное цитирование значений в соответствии с вашим конкретным бэкэндом. Например, кавычки будут экранированы правильно.</target>
        </trans-unit>
        <trans-unit id="1509c95c0c093c1fb332475c1de5de599eb6a97d" translate="yes" xml:space="preserve">
          <source>Amend URLconf</source>
          <target state="translated">Внести изменения в URLconf</target>
        </trans-unit>
        <trans-unit id="d0797826ea1aa534137aa2c3b4982212038f9bbc" translate="yes" xml:space="preserve">
          <source>Amend views</source>
          <target state="translated">Восхитительные взгляды</target>
        </trans-unit>
        <trans-unit id="98cb3586308743cf6fabda4d4ef48767bd8f9376" translate="yes" xml:space="preserve">
          <source>Among Django&amp;rsquo;s built-in database backends, MySQL 8.0.2+, PostgreSQL, and Oracle support window expressions. Support for different window expression features varies among the different databases. For example, the options in &lt;a href=&quot;#django.db.models.Expression.asc&quot;&gt;&lt;code&gt;asc()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Expression.desc&quot;&gt;&lt;code&gt;desc()&lt;/code&gt;&lt;/a&gt; may not be supported. Consult the documentation for your database as needed.</source>
          <target state="translated">Среди встроенных баз данных Django MySQL 8.0.2+, PostgreSQL и Oracle поддерживают выражения окон. Поддержка различных функций выражения окон различается в разных базах данных. Например, параметры в &lt;a href=&quot;#django.db.models.Expression.asc&quot;&gt; &lt;code&gt;asc()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.Expression.desc&quot;&gt; &lt;code&gt;desc()&lt;/code&gt; &lt;/a&gt; могут не поддерживаться. Обратитесь к документации для вашей базы данных по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="dc2ba95fda99894557e8f895c4b9ab687f5bc290" translate="yes" xml:space="preserve">
          <source>Among other things, the default logging configuration passes HTTP 500 server errors to an email log handler when &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;. See also &lt;a href=&quot;../topics/logging#configuring-logging&quot;&gt;Configuring logging&lt;/a&gt;.</source>
          <target state="translated">Помимо прочего, конфигурация ведения журнала по умолчанию передает ошибки сервера HTTP 500 в обработчик журнала электронной почты, когда &lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;False&lt;/code&gt; . Смотрите также &lt;a href=&quot;../topics/logging#configuring-logging&quot;&gt;Настройка регистрации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5dfcb63505f909d2e384679116d111c4e9c2d49" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;exact&amp;rdquo; match. For example:</source>
          <target state="translated">&amp;laquo;Точное&amp;raquo; совпадение. Например:</target>
        </trans-unit>
        <trans-unit id="6f863f157d9803f99f181e74a12c7d7d120b7259" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#django.core.validators.EmailValidator&quot;&gt;&lt;code&gt;EmailValidator&lt;/code&gt;&lt;/a&gt; instance without any customizations.</source>
          <target state="translated">&lt;a href=&quot;#django.core.validators.EmailValidator&quot;&gt; &lt;code&gt;EmailValidator&lt;/code&gt; &lt;/a&gt; экземпляр без каких - либо настроек.</target>
        </trans-unit>
        <trans-unit id="2c68635b466c4a39a19dd05df8c021ee90a24ffd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; that automatically increments according to available IDs. You usually won&amp;rsquo;t need to use this directly; a primary key field will automatically be added to your model if you don&amp;rsquo;t specify otherwise. See &lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; , что автоматически увеличивает в соответствии с имеющимися идентификаторами. Вам обычно не нужно использовать это напрямую; поле первичного ключа будет автоматически добавлено в вашу модель, если вы не укажете иное. См. &lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;Автоматические поля первичного ключа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="faddb2573c4c67040a191c29d77ac165c4bfede9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; subclass that helps to create a JSON-encoded response. It inherits most behavior from its superclass with a couple differences:</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; подкласс , который помогает создать JSON-закодированный ответ. Он наследует большую часть поведения от своего суперкласса с парой различий:</target>
        </trans-unit>
        <trans-unit id="c0d33f2c22b5dcd80cd0b425eda25b332db008db" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; representing the current request,</source>
          <target state="translated">&lt;a href=&quot;../../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; , представляющий текущий запрос,</target>
        </trans-unit>
        <trans-unit id="186111add1c13054b5e366f4d7b79674600a0885" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance for the application about to be migrated/synced.</source>
          <target state="translated">&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; экземпляр для приложения о которое должно быть сменено / синхронизирован.</target>
        </trans-unit>
        <trans-unit id="da3b88811bdac19d13bfca669b77a38651837b81" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance for the application that was just installed.</source>
          <target state="translated">&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; экземпляр приложения , которое было только что установили.</target>
        </trans-unit>
        <trans-unit id="4106e26619049b03071241b0425bb837c58c7e97" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; экземпляр.</target>
        </trans-unit>
        <trans-unit id="cfa7d765cd5e7151478725f3460053f18691d841" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;F()&lt;/code&gt; object represents the value of a model field or annotated column. It makes it possible to refer to model field values and perform database operations using them without actually having to pull them out of the database into Python memory.</source>
          <target state="translated">Объект &lt;code&gt;F()&lt;/code&gt; представляет значение поля модели или аннотированного столбца. Это позволяет ссылаться на значения полей модели и выполнять операции с базой данных, используя их без необходимости извлечения их из базы данных в память Python.</target>
        </trans-unit>
        <trans-unit id="9f6969cbb4292c3086f7c958ae19344bb5aaa421" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Operation&lt;/code&gt; subclass which installs PostgreSQL extensions.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; подкласс , который устанавливает расширения PostgreSQL.</target>
        </trans-unit>
        <trans-unit id="b4204a2187e660eb7e65f9b02da09772bc3ffaf7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Operation&lt;/code&gt; subclass which installs a PostgreSQL extension. For common extensions, use one of the more specific subclasses below.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; подкласс , который устанавливает расширение PostgreSQL. Для общих расширений используйте один из более конкретных подклассов ниже.</target>
        </trans-unit>
        <trans-unit id="98724fe973995dab889727509346ca4f9510047d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;id&lt;/code&gt; field is added automatically, but this behavior can be overridden. See &lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;Automatic primary key fields&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; поля добавляется автоматически, но это поведение может быть переопределены. См. &lt;a href=&quot;#automatic-primary-key-fields&quot;&gt;Автоматические поля первичного ключа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59a2100a48bb74ca3c223e06a67c881b76a9b9c4" translate="yes" xml:space="preserve">
          <source>An API is available to manipulate session data outside of a view:</source>
          <target state="translated">Доступен API для манипулирования данными сессии вне представления:</target>
        </trans-unit>
        <trans-unit id="65dffa4497ac4db1209b15a06c360f65a3812e50" translate="yes" xml:space="preserve">
          <source>An IPv4 or IPv6 address, in string format (e.g. &lt;code&gt;192.0.2.30&lt;/code&gt; or &lt;code&gt;2a02:42fe::4&lt;/code&gt;). The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">IPv4 или IPv6 - адрес в виде строки (например , &lt;code&gt;192.0.2.30&lt;/code&gt; или &lt;code&gt;2a02:42fe::4&lt;/code&gt; ). Виджет формы по умолчанию для этого поля - &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18e6d94a1f45fbaae76dc484c2c64added263e27" translate="yes" xml:space="preserve">
          <source>An absolute or relative URL, which will be used as-is for the redirect location.</source>
          <target state="translated">Абсолютный или относительный URL,который будет использоваться как есть для перенаправления местоположения.</target>
        </trans-unit>
        <trans-unit id="e3925ec179972ff07fb76189661269abc5b99a88" translate="yes" xml:space="preserve">
          <source>An action was &lt;strong&gt;not&lt;/strong&gt; successful or some other failure occurred</source>
          <target state="translated">Действие &lt;strong&gt;не было&lt;/strong&gt; успешным или произошел какой-то другой сбой</target>
        </trans-unit>
        <trans-unit id="e3a6647bd061a5c968c8eaf481deb4759e5f2412" translate="yes" xml:space="preserve">
          <source>An action was successful, e.g. &amp;ldquo;Your profile was updated successfully&amp;rdquo;</source>
          <target state="translated">Действие было успешным, например, &amp;laquo;Ваш профиль был успешно обновлен&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="4435bfb73984e94fc86de917153522bf1df0a5d7" translate="yes" xml:space="preserve">
          <source>An admin site that lets you add, change, and delete polls.</source>
          <target state="translated">Сайт администратора,который позволяет добавлять,изменять и удалять опросы.</target>
        </trans-unit>
        <trans-unit id="9c68c75bc4729d236beed0fc44e1ac416abbfd61" translate="yes" xml:space="preserve">
          <source>An aggregate expression is a special case of a &lt;a href=&quot;#func-expressions&quot;&gt;Func() expression&lt;/a&gt; that informs the query that a &lt;code&gt;GROUP BY&lt;/code&gt; clause is required. All of the &lt;a href=&quot;querysets#aggregation-functions&quot;&gt;aggregate functions&lt;/a&gt;, like &lt;code&gt;Sum()&lt;/code&gt; and &lt;code&gt;Count()&lt;/code&gt;, inherit from &lt;code&gt;Aggregate()&lt;/code&gt;.</source>
          <target state="translated">Агрегатное выражение - это особый случай &lt;a href=&quot;#func-expressions&quot;&gt;выражения Func (),&lt;/a&gt; которое информирует запрос о необходимости предложения &lt;code&gt;GROUP BY&lt;/code&gt; . Все &lt;a href=&quot;querysets#aggregation-functions&quot;&gt;агрегатные функции&lt;/a&gt; , такие как &lt;code&gt;Sum()&lt;/code&gt; и &lt;code&gt;Count()&lt;/code&gt; , наследуются от &lt;code&gt;Aggregate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dac8c4d87a8e94f377a297147a7ed6a8deb0b20" translate="yes" xml:space="preserve">
          <source>An aggregate within a &lt;code&gt;values()&lt;/code&gt; clause is applied before other arguments within the same &lt;code&gt;values()&lt;/code&gt; clause. If you need to group by another value, add it to an earlier &lt;code&gt;values()&lt;/code&gt; clause instead. For example:</source>
          <target state="translated">Агрегат в предложении &lt;code&gt;values()&lt;/code&gt; применяется перед другими аргументами в том же предложении &lt;code&gt;values()&lt;/code&gt; . Если вам нужно сгруппировать по другому значению, добавьте его в более раннее предложение &lt;code&gt;values()&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="33d2fc7e42e04914b254e4159f933abde947704f" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry.tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3aff51db3da0e7b64fab96d99fc5c327a215a3e4" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#django.contrib.gis.gdal.Polygon.shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Псевдоним для &lt;a href=&quot;#django.contrib.gis.gdal.Polygon.shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61d19c8e07f4c913c49aeae377f8f1d9b469aa9c" translate="yes" xml:space="preserve">
          <source>An alternative better solution</source>
          <target state="translated">Альтернативное лучшее решение</target>
        </trans-unit>
        <trans-unit id="1deb6430deb14f32cdaa8501e3f8aec60b594ea3" translate="yes" xml:space="preserve">
          <source>An anonymous user is one that is not authenticated i.e. they have provided no valid authentication details. However, that does not necessarily mean they are not authorized to do anything. At the most basic level, most websites authorize anonymous users to browse most of the site, and many allow anonymous posting of comments etc.</source>
          <target state="translated">Анонимный пользователь-это пользователь,не прошедший аутентификацию,т.е.не предоставивший действительных данных для аутентификации.Однако это не обязательно означает,что он не уполномочен что-либо делать.На самом базовом уровне большинство сайтов разрешают анонимным пользователям просматривать большую часть сайта,многие разрешают анонимное размещение комментариев и т.д.</target>
        </trans-unit>
        <trans-unit id="4b08a99e915ba9c989b651c61303f82ad2208c1e" translate="yes" xml:space="preserve">
          <source>An attacker in possession of the &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; can not only generate falsified session data, which your site will trust, but also remotely execute arbitrary code, as the data is serialized using pickle.</source>
          <target state="translated">Злоумышленник, владеющий &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; ,&lt;/a&gt; может не только генерировать фальсифицированные данные сеанса, которым ваш сайт будет доверять, но и удаленно выполнять произвольный код, поскольку данные сериализуются с использованием pickle.</target>
        </trans-unit>
        <trans-unit id="bb2dca9b7402e3038c29ea2d17d64957926209e9" translate="yes" xml:space="preserve">
          <source>An attribute that defaults to &lt;code&gt;True&lt;/code&gt;. If set to &lt;code&gt;False&lt;/code&gt;, the microseconds part of &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; values will be set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Атрибут, который по умолчанию равен &lt;code&gt;True&lt;/code&gt; . Если установлено значение &lt;code&gt;False&lt;/code&gt; , микросекунды для значений &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; будут установлены в &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd268500a89a883b70edb57f72986316598ae3d7" translate="yes" xml:space="preserve">
          <source>An authentication backend is a class that implements two required methods: &lt;code&gt;get_user(user_id)&lt;/code&gt; and &lt;code&gt;authenticate(request, **credentials)&lt;/code&gt;, as well as a set of optional permission related &lt;a href=&quot;#authorization-methods&quot;&gt;authorization methods&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;get_user(user_id)&lt;/code&gt; аутентификации - это класс, который реализует два обязательных метода: get_user (user_id) и &lt;code&gt;authenticate(request, **credentials)&lt;/code&gt; , а также набор необязательных &lt;a href=&quot;#authorization-methods&quot;&gt;методов авторизации,&lt;/a&gt; связанных с разрешениями .</target>
        </trans-unit>
        <trans-unit id="de073d9defd676ec7471fad3bbfe1a2dc52b507b" translate="yes" xml:space="preserve">
          <source>An available formatting that can be used for displaying date fields on templates. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Доступное форматирование, которое можно использовать для отображения полей даты в шаблонах. Обратите внимание, что если для &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; задано значение &lt;code&gt;True&lt;/code&gt; , соответствующий формат, определяемый локалью, имеет более высокий приоритет и будет применяться. Смотрите &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96ebe49d47555429233b3848f332b38958349db3" translate="yes" xml:space="preserve">
          <source>An available formatting that can be used for displaying datetime fields on templates. Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied. See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Доступное форматирование, которое можно использовать для отображения полей даты и времени в шаблонах. Обратите внимание, что если для &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; задано значение &lt;code&gt;True&lt;/code&gt; , соответствующий формат, определяемый локалью, имеет более высокий приоритет и будет применяться. Смотрите &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;allowed date format strings&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ea26de5566952ec524cedbb60ee90bf6c1be0e2" translate="yes" xml:space="preserve">
          <source>An example</source>
          <target state="translated">Пример</target>
        </trans-unit>
        <trans-unit id="44dc5e773df10840021031d5567151fd83c15331" translate="yes" xml:space="preserve">
          <source>An example makes this easier to understand:</source>
          <target state="translated">Пример делает это более понятным:</target>
        </trans-unit>
        <trans-unit id="9c7cf5762a90e14bf9c1f5ef6f288bc6ceef0b2a" translate="yes" xml:space="preserve">
          <source>An example might clarify things here:</source>
          <target state="translated">Пример может все прояснить:</target>
        </trans-unit>
        <trans-unit id="b994f90ff92f4e93c073288c79a6cd02bfc15ab0" translate="yes" xml:space="preserve">
          <source>An example of clickjacking</source>
          <target state="translated">Пример клик-джеккинга</target>
        </trans-unit>
        <trans-unit id="9e5daf695560715d43805edc8de2766a29f586db" translate="yes" xml:space="preserve">
          <source>An example of this is how &lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt; turns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; value into a list with date and time split into two separate values:</source>
          <target state="translated">Примером этого является то, как &lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt; &lt;code&gt;SplitDateTimeWidget&lt;/code&gt; &lt;/a&gt; превращает &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; значение в список с указанием даты и времени разделен на два отдельных значения:</target>
        </trans-unit>
        <trans-unit id="e35ab3d53b689526afb17ba5bf93be01898a48f4" translate="yes" xml:space="preserve">
          <source>An example to demonstrate:</source>
          <target state="translated">Пример для демонстрации:</target>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="translated">Пример:</target>
        </trans-unit>
        <trans-unit id="fb43ae8a2d9729a801eac153bba3110e42b5e9c8" translate="yes" xml:space="preserve">
          <source>An exception raised when an error occurs when constructing or using a spatial reference system object.</source>
          <target state="translated">Исключение,возникающее при ошибке при построении или использовании объекта пространственной системы отсчета.</target>
        </trans-unit>
        <trans-unit id="e5be9941c1dfa47b6a4a02b39ea4053fdb6457e4" translate="yes" xml:space="preserve">
          <source>An exception to this rule is the &lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. It validates the migration history in the databases to catch problems with the existing migration files (which could be caused by editing them) before creating new migrations. By default, it checks only the &lt;code&gt;default&lt;/code&gt; database, but it consults the &lt;a href=&quot;#allow_migrate&quot;&gt;&lt;code&gt;allow_migrate()&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;routers&lt;/a&gt; if any are installed.</source>
          <target state="translated">Исключением из этого правила является команда &lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; . Он проверяет историю миграции в базах данных, чтобы выявить проблемы с существующими файлами миграции (которые могут быть вызваны их редактированием) перед созданием новых миграций. По умолчанию, он проверяет только по &lt;code&gt;default&lt;/code&gt; базы данных, но он консультируется &lt;a href=&quot;#allow_migrate&quot;&gt; &lt;code&gt;allow_migrate()&lt;/code&gt; &lt;/a&gt; метода &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;маршрутизаторов&lt;/a&gt; , если таковые будут установлены.</target>
        </trans-unit>
        <trans-unit id="ed175ed81f980812bd97abba4555214c4575fb8d" translate="yes" xml:space="preserve">
          <source>An in-memory raster is created through the following example:</source>
          <target state="translated">Внутрипамятный растр создается на следующем примере:</target>
        </trans-unit>
        <trans-unit id="c3a0de81244b1acb46976eba51d4d245458bc3eb" translate="yes" xml:space="preserve">
          <source>An inactive user is one that has its &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; field set to &lt;code&gt;False&lt;/code&gt;. The &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; authentication backends prohibits these users from authenticating. If a custom user model doesn&amp;rsquo;t have an &lt;a href=&quot;#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; field, all users will be allowed to authenticate.</source>
          <target state="translated">Неактивный пользователь - это тот, у &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt; &lt;code&gt;is_active&lt;/code&gt; &lt;/a&gt; поле is_active установлено значение &lt;code&gt;False&lt;/code&gt; . В &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt; &lt;code&gt;ModelBackend&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt; движки аутентификации запрещает этим пользователям от аутентификации. Если пользовательская модель пользователя не имеет поля &lt;a href=&quot;#django.contrib.auth.models.CustomUser.is_active&quot;&gt; &lt;code&gt;is_active&lt;/code&gt; &lt;/a&gt; , всем пользователям будет разрешено проходить аутентификацию.</target>
        </trans-unit>
        <trans-unit id="274d404b49cf7865c14ab687e838802e41ea0186" translate="yes" xml:space="preserve">
          <source>An included URLconf receives any captured parameters from parent URLconfs, so the following example is valid:</source>
          <target state="translated">Включенный URLconf получает любые захваченные параметры от родительских URLconf,поэтому следующий пример верен:</target>
        </trans-unit>
        <trans-unit id="79f65afd7426a1dc2bc9545fd8cbde0c68685dda" translate="yes" xml:space="preserve">
          <source>An included template is rendered within the context of the template that includes it. This example produces the output &lt;code&gt;&quot;Hello, John!&quot;&lt;/code&gt;:</source>
          <target state="translated">Включенный шаблон отображается в контексте шаблона, который его включает. В этом примере выводится &lt;code&gt;&quot;Hello, John!&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4168fcd2b3e8ad3adb04bc480ef91ac9dc32ac30" translate="yes" xml:space="preserve">
          <source>An infinite loop is caused by ordering</source>
          <target state="translated">Бесконечный цикл обусловлен заказом</target>
        </trans-unit>
        <trans-unit id="c342f5dc50caf73da0bd431eb33d447655a8bc38" translate="yes" xml:space="preserve">
          <source>An instance attribute that helps create colored output when writing to &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt;. For example:</source>
          <target state="translated">Атрибут экземпляра, который помогает создавать цветной вывод при записи в &lt;code&gt;stdout&lt;/code&gt; или &lt;code&gt;stderr&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="9f2451f5257ef2ded26bcd890212ab4d9e0f0273" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Экземпляр &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b677133dba37f8a0d05b9f531f292924134b17ce" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch&quot;&gt;&lt;code&gt;ResolverMatch&lt;/code&gt;&lt;/a&gt; for the response. You can use the &lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch.func&quot;&gt;&lt;code&gt;func&lt;/code&gt;&lt;/a&gt; attribute, for example, to verify the view that served the response:</source>
          <target state="translated">Экземпляр &lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch&quot;&gt; &lt;code&gt;ResolverMatch&lt;/code&gt; &lt;/a&gt; для ответа. Вы можете использовать атрибут &lt;a href=&quot;../../ref/urlresolvers#django.urls.ResolverMatch.func&quot;&gt; &lt;code&gt;func&lt;/code&gt; &lt;/a&gt; , например, для проверки представления, обслуживающего ответ:</target>
        </trans-unit>
        <trans-unit id="7151476a634aadae82a4558d217d3768bb129a09" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;Apps&lt;/code&gt;&lt;/a&gt; containing the state of the project after the migration run. It should be used instead of the global &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; registry to retrieve the models you want to perform operations on.</source>
          <target state="translated">Экземпляр &lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;Apps&lt;/code&gt; ,&lt;/a&gt; содержащий состояние проекта после выполнения миграции. Его следует использовать вместо глобального реестра &lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;apps&lt;/code&gt; &lt;/a&gt; для получения моделей, над которыми вы хотите выполнить операции.</target>
        </trans-unit>
        <trans-unit id="cee580ae302ae948e23c6225b6c391017760b3a8" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;applications#module-django.apps&quot;&gt;&lt;code&gt;Apps&lt;/code&gt;&lt;/a&gt; containing the state of the project before the migration run. It should be used instead of the global &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; registry to retrieve the models you want to perform operations on.</source>
          <target state="translated">Экземпляр &lt;a href=&quot;applications#module-django.apps&quot;&gt; &lt;code&gt;Apps&lt;/code&gt; ,&lt;/a&gt; содержащий состояние проекта до запуска миграции. Его следует использовать вместо глобального реестра &lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;apps&lt;/code&gt; &lt;/a&gt; для получения моделей, над которыми вы хотите выполнить операции.</target>
        </trans-unit>
        <trans-unit id="e82dde0c45c38efd74e624d73450580c79f107d0" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;urlresolvers#django.urls.ResolverMatch&quot;&gt;&lt;code&gt;ResolverMatch&lt;/code&gt;&lt;/a&gt; representing the resolved URL. This attribute is only set after URL resolving took place, which means it&amp;rsquo;s available in all views but not in middleware which are executed before URL resolving takes place (you can use it in &lt;a href=&quot;../topics/http/middleware#process_view&quot;&gt;&lt;code&gt;process_view()&lt;/code&gt;&lt;/a&gt; though).</source>
          <target state="translated">Экземпляр &lt;a href=&quot;urlresolvers#django.urls.ResolverMatch&quot;&gt; &lt;code&gt;ResolverMatch&lt;/code&gt; ,&lt;/a&gt; представляющий разрешенный URL-адрес. Этот атрибут устанавливается только после разрешения URL, что означает, что он доступен во всех представлениях, но не в промежуточном программном обеспечении, которое выполняется до разрешения URL &lt;a href=&quot;../topics/http/middleware#process_view&quot;&gt; &lt;code&gt;process_view()&lt;/code&gt; &lt;/a&gt; хотя вы можете использовать его в process_view () ).</target>
        </trans-unit>
        <trans-unit id="62ebe3e92736407b7884afd74c06e451815b6cb6" translate="yes" xml:space="preserve">
          <source>An instance of the correct type (e.g., &lt;code&gt;Hand&lt;/code&gt; in our ongoing example).</source>
          <target state="translated">Экземпляр правильного типа (например, &lt;code&gt;Hand&lt;/code&gt; в нашем текущем примере).</target>
        </trans-unit>
        <trans-unit id="3c52b4b7dae7b1e7ef9416b4cfb7f0b060d5fcc5" translate="yes" xml:space="preserve">
          <source>An instance of the model where the &lt;code&gt;FileField&lt;/code&gt; is defined. More specifically, this is the particular instance where the current file is being attached.</source>
          <target state="translated">Экземпляр модели, в которой определен &lt;code&gt;FileField&lt;/code&gt; . Более конкретно, это конкретный случай, когда текущий файл присоединяется.</target>
        </trans-unit>
        <trans-unit id="246472979f1a8942a4358ead771333c2b2a02c0e" translate="yes" xml:space="preserve">
          <source>An integer specifying how many objects should be displayed per page. If this is given, the view will paginate objects with &lt;code&gt;paginate_by&lt;/code&gt; objects per page. The view will expect either a &lt;code&gt;page&lt;/code&gt; query string parameter (via &lt;code&gt;request.GET&lt;/code&gt;) or a &lt;code&gt;page&lt;/code&gt; variable specified in the URLconf.</source>
          <target state="translated">Целое число, указывающее, сколько объектов должно отображаться на странице. Если это задано, представление будет разбивать объекты на &lt;code&gt;paginate_by&lt;/code&gt; объектами paginate_by . Представление будет ожидать либо параметр строки запроса &lt;code&gt;page&lt;/code&gt; (через &lt;code&gt;request.GET&lt;/code&gt; ), либо переменную &lt;code&gt;page&lt;/code&gt; указанную в URLconf.</target>
        </trans-unit>
        <trans-unit id="3cf3b0caba7b39ed0e3bdd29ce7b2c628df21356" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of &amp;ldquo;overflow&amp;rdquo; objects the last page can contain. By default this returns the value of &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_orphans&quot;&gt;&lt;code&gt;paginate_orphans&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Целое число, указывающее количество &amp;laquo;переполненных&amp;raquo; объектов, которые может содержать последняя страница. По умолчанию это возвращает значение &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_orphans&quot;&gt; &lt;code&gt;paginate_orphans&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4ecc6422927cd0e8e9f3314e294f6a80faeaf21" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of &amp;ldquo;overflow&amp;rdquo; objects the last page can contain. This extends the &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_by&quot;&gt;&lt;code&gt;paginate_by&lt;/code&gt;&lt;/a&gt; limit on the last page by up to &lt;code&gt;paginate_orphans&lt;/code&gt;, in order to keep the last page from having a very small number of objects.</source>
          <target state="translated">Целое число, указывающее количество &amp;laquo;переполненных&amp;raquo; объектов, которые может содержать последняя страница. Это расширяет ограничение &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_by&quot;&gt; &lt;code&gt;paginate_by&lt;/code&gt; &lt;/a&gt; на последней странице до &lt;code&gt;paginate_orphans&lt;/code&gt; , чтобы на последней странице не было очень небольшого числа объектов.</target>
        </trans-unit>
        <trans-unit id="30bb341a7bdb22e3ad1a0e3a492d93a67005d6ea" translate="yes" xml:space="preserve">
          <source>An integer. Values from &lt;code&gt;-2147483648&lt;/code&gt; to &lt;code&gt;2147483647&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">Целое число Значения от &lt;code&gt;-2147483648&lt;/code&gt; до &lt;code&gt;2147483647&lt;/code&gt; безопасны во всех базах данных, поддерживаемых Django.</target>
        </trans-unit>
        <trans-unit id="e411d51eaf1718afd2228051f6d13a61f2e26282" translate="yes" xml:space="preserve">
          <source>An iterable containing the widgets needed.</source>
          <target state="translated">Итерабель,содержащий необходимые виджеты.</target>
        </trans-unit>
        <trans-unit id="1b68325a327361fc33c0b282ee4b1f9f41e3138d" translate="yes" xml:space="preserve">
          <source>An iterable containing the widgets needed. For example:</source>
          <target state="translated">Итерабель,содержащий необходимые виджеты.Например:</target>
        </trans-unit>
        <trans-unit id="782cb10126cecb403d126e1d894a7815f6715df8" translate="yes" xml:space="preserve">
          <source>An iterable of 2-tuples. The first element is an expression or string. The second element is a SQL operator represented as a string. To avoid typos, you may use &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt;&lt;code&gt;RangeOperators&lt;/code&gt;&lt;/a&gt; which maps the operators with strings. For example:</source>
          <target state="translated">Итерируемый из 2-х кортежей. Первый элемент - это выражение или строка. Второй элемент - это оператор SQL, представленный в виде строки. Чтобы избежать опечаток, вы можете использовать &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt; &lt;code&gt;RangeOperators&lt;/code&gt; ,&lt;/a&gt; который отображает операторы со строками. Например:</target>
        </trans-unit>
        <trans-unit id="3890cb41c06b9fab006f1af94416b413635cd836" translate="yes" xml:space="preserve">
          <source>An iterable of 2-tuples. The first element is an expression or string. The second element is an SQL operator represented as a string. To avoid typos, you may use &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt;&lt;code&gt;RangeOperators&lt;/code&gt;&lt;/a&gt; which maps the operators with strings. For example:</source>
          <target state="translated">Итерация двух кортежей. Первый элемент - это выражение или строка. Второй элемент - это оператор SQL, представленный в виде строки. Чтобы избежать опечаток, вы можете использовать &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeOperators&quot;&gt; &lt;code&gt;RangeOperators&lt;/code&gt; ,&lt;/a&gt; который сопоставляет операторы со строками. Например:</target>
        </trans-unit>
        <trans-unit id="1557e7d813a443c6e97ac8e302948f8a2a92ddc6" translate="yes" xml:space="preserve">
          <source>An iterator of the response content, bytestring encoded according to &lt;a href=&quot;#django.http.HttpResponse.charset&quot;&gt;&lt;code&gt;HttpResponse.charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Итератор содержимого ответа, строка байта закодирована в соответствии с &lt;a href=&quot;#django.http.HttpResponse.charset&quot;&gt; &lt;code&gt;HttpResponse.charset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="764c42b91212f12a629a423f0f0afc1d1031be0b" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q object&lt;/code&gt;&lt;/a&gt; that&amp;rsquo;s used to filter the rows that are aggregated.</source>
          <target state="translated">Необязательный &lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q object&lt;/code&gt; &lt;/a&gt; который используется для фильтрации агрегируемых строк.</target>
        </trans-unit>
        <trans-unit id="76ce46abaa60ff7cf50fa9f088ed9542f78f2bd9" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; that will be available during the template&amp;rsquo;s rendering process.</source>
          <target state="translated">Необязательный &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; ,&lt;/a&gt; который будет доступен во время процесса рендеринга шаблона.</target>
        </trans-unit>
        <trans-unit id="f191d1f3bf0b579d3a02e71f79987b16c358797b" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONDecoder&quot;&gt;&lt;code&gt;json.JSONDecoder&lt;/code&gt;&lt;/a&gt; subclass to deserialize the value retrieved from the database. The value will be in the format chosen by the custom encoder (most often a string). Your deserialization may need to account for the fact that you can&amp;rsquo;t be certain of the input type. For example, you run the risk of returning a &lt;code&gt;datetime&lt;/code&gt; that was actually a string that just happened to be in the same format chosen for &lt;code&gt;datetime&lt;/code&gt;s.</source>
          <target state="translated">Необязательный подкласс &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONDecoder&quot;&gt; &lt;code&gt;json.JSONDecoder&lt;/code&gt; &lt;/a&gt; для десериализации значения, полученного из базы данных. Значение будет в формате, выбранном пользовательским кодировщиком (чаще всего в виде строки). При десериализации может потребоваться учитывать тот факт, что вы не можете быть уверены в типе ввода. Например, вы рискуете вернуть &lt;code&gt;datetime&lt;/code&gt; , которое на самом деле было строкой, которая случайно оказалась в том же формате, что и для &lt;code&gt;datetime&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="a23afb57c393244f57d98b21627322991047b000" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt;&lt;code&gt;json.JSONEncoder&lt;/code&gt;&lt;/a&gt; subclass to serialize data types not supported by the standard JSON serializer (e.g. &lt;code&gt;datetime.datetime&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt;). For example, you can use the &lt;a href=&quot;../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Необязательный подкласс &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt; &lt;code&gt;json.JSONEncoder&lt;/code&gt; &lt;/a&gt; для сериализации типов данных, не поддерживаемых стандартным сериализатором JSON (например, &lt;code&gt;datetime.datetime&lt;/code&gt; или &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt; ). Например, вы можете использовать класс &lt;a href=&quot;../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51eabca0c49f8538626e416027ab8362de298d12" translate="yes" xml:space="preserve">
          <source>An optional JSON-encoding class to serialize data types not supported by the standard JSON serializer (&lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;uuid&lt;/code&gt;, etc.). For example, you can use the &lt;a href=&quot;../../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; class or any other &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt;&lt;code&gt;json.JSONEncoder&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">Необязательный класс кодирования JSON для сериализации типов данных, не поддерживаемых стандартным сериализатором JSON ( &lt;code&gt;datetime&lt;/code&gt; , &lt;code&gt;uuid&lt;/code&gt; и т. Д.). Например, вы можете использовать класс &lt;a href=&quot;../../../topics/serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt; или любой другой подкласс &lt;a href=&quot;https://docs.python.org/3/library/json.html#json.JSONEncoder&quot;&gt; &lt;code&gt;json.JSONEncoder&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf302c0ed6a7c8a745f8c8a389e92f3899cfc20e" translate="yes" xml:space="preserve">
          <source>An optional argument containing the characters which should not be escaped can be provided.</source>
          <target state="translated">Может быть предоставлен необязательный аргумент,содержащий символы,которые не должны быть экранированы.</target>
        </trans-unit>
        <trans-unit id="37ddfbc6f10b5cbdd9c7a438e7bb14fa1cb94502" translate="yes" xml:space="preserve">
          <source>An optional argument that represents the &lt;a href=&quot;fields&quot;&gt;model field&lt;/a&gt; of the return value</source>
          <target state="translated">Необязательный аргумент, представляющий &lt;a href=&quot;fields&quot;&gt;поле модели&lt;/a&gt; возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="176299013af047e8122133ec1910bd95756256bf" translate="yes" xml:space="preserve">
          <source>An optional argument, &lt;code&gt;starts_with&lt;/code&gt;, can be applied to limit the returned pages to those beginning with a particular base URL. This argument may be passed as a string, or as a variable to be resolved from the context.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;starts_with&lt;/code&gt; может применяться для ограничения возвращаемых страниц теми, которые начинаются с определенного базового URL. Этот аргумент может быть передан как строка или как переменная для разрешения из контекста.</target>
        </trans-unit>
        <trans-unit id="90bbb5879cc4d952fc776e24ebf8fbe1815ea83c" translate="yes" xml:space="preserve">
          <source>An optional boolean argument that determines if array values will be distinct. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Необязательный логический аргумент, который определяет, будут ли значения массива различаться. По умолчанию &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d7f719647ab51bd56cc6adc7bb2ef3848a3d37a" translate="yes" xml:space="preserve">
          <source>An optional boolean argument that determines if concatenated values will be distinct. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Необязательный логический аргумент, который определяет, будут ли объединенные значения различаться. По умолчанию &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0965bf17b8eef60057dfda1be8bca2a9a5b070a" translate="yes" xml:space="preserve">
          <source>An optional dict of months to use in the &amp;ldquo;months&amp;rdquo; select box.</source>
          <target state="translated">Необязательный набор месяцев для использования в поле выбора &amp;laquo;месяцы&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="04946ca43c81da1014a5b10d04e67a735be7869b" translate="yes" xml:space="preserve">
          <source>An optional list/tuple of years to use in the &amp;ldquo;year&amp;rdquo; select box. The default is a list containing the current year and the next 9 years.</source>
          <target state="translated">Необязательный список / кортеж лет для использования в поле выбора &amp;laquo;год&amp;raquo;. По умолчанию это список, содержащий текущий год и следующие 9 лет.</target>
        </trans-unit>
        <trans-unit id="b15bc30576b82accc7ddd0cd521ab74377a57926" translate="yes" xml:space="preserve">
          <source>An optional string of a field name (with an optional &lt;code&gt;&quot;-&quot;&lt;/code&gt; prefix which indicates descending order) or an expression (or a tuple or list of strings and/or expressions) that specifies the ordering of the elements in the result list.</source>
          <target state="translated">Необязательная строка с именем поля (с необязательным префиксом &lt;code&gt;&quot;-&quot;&lt;/code&gt; который указывает нисходящий порядок) или выражением (или кортежем или списком строк и / или выражений), который указывает порядок элементов в списке результатов.</target>
        </trans-unit>
        <trans-unit id="310bd87082e4e4832de44c97dbfa3ba94bc08f0d" translate="yes" xml:space="preserve">
          <source>An optional string of a field name (with an optional &lt;code&gt;&quot;-&quot;&lt;/code&gt; prefix which indicates descending order) or an expression (or a tuple or list of strings and/or expressions) that specifies the ordering of the elements in the result string.</source>
          <target state="translated">Необязательная строка имени поля (с необязательным префиксом &lt;code&gt;&quot;-&quot;&lt;/code&gt; который указывает нисходящий порядок) или выражения (или кортеж или список строк и / или выражений), который задает порядок элементов в строке результата.</target>
        </trans-unit>
        <trans-unit id="6f4edaf62b1dfdf8cb719bee64a43ebbceef00a2" translate="yes" xml:space="preserve">
          <source>An optional template engine &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;. The search for the template will be restricted to that engine.</source>
          <target state="translated">Дополнительный шаблонизатор &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; . Поиск шаблона будет ограничен этим механизмом.</target>
        </trans-unit>
        <trans-unit id="611aeb7acdb34b543451330642fcd3627d71cd8a" translate="yes" xml:space="preserve">
          <source>An override to the &lt;code&gt;verbose_name&lt;/code&gt; found in the model&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">Переопределение к &lt;code&gt;verbose_name&lt;/code&gt; , найденному во внутреннем &lt;code&gt;Meta&lt;/code&gt; классе модели .</target>
        </trans-unit>
        <trans-unit id="ffcf163174409718ffabbf89f4d0f36fb79d14f9" translate="yes" xml:space="preserve">
          <source>An override to the &lt;code&gt;verbose_name_plural&lt;/code&gt; found in the model&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">Переопределение к &lt;code&gt;verbose_name_plural&lt;/code&gt; , найденному во внутреннем &lt;code&gt;Meta&lt;/code&gt; классе модели .</target>
        </trans-unit>
        <trans-unit id="355d8688f4f9696453a0994cdc549492d8510967" translate="yes" xml:space="preserve">
          <source>An unbound form has no data associated with it. When rendered to the user, it will be empty or will contain default values.</source>
          <target state="translated">С несвязанной формой не связаны никакие данные.При отображении пользователю она будет пустой или будет содержать значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="b1a32456d35755cee8d21b9e4b77c13ccc1b84b8" translate="yes" xml:space="preserve">
          <source>Analogous to &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt;&lt;code&gt;SimpleTestCase.assertRaisesMessage()&lt;/code&gt;&lt;/a&gt; but for &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertWarnsRegex&quot;&gt;&lt;code&gt;assertWarnsRegex()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;assertRaisesRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Аналогично &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt; &lt;code&gt;SimpleTestCase.assertRaisesMessage()&lt;/code&gt; &lt;/a&gt; но для &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertWarnsRegex&quot;&gt; &lt;code&gt;assertWarnsRegex()&lt;/code&gt; &lt;/a&gt; вместо &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;assertRaisesRegex()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba957c88b3cfd199216b4fefecb0aef4a43c8fb5" translate="yes" xml:space="preserve">
          <source>Analyzes the request to find what language the user wants the system to show. Only languages listed in settings.LANGUAGES are taken into account. If the user requests a sublanguage where we have a main language, we send out the main language.</source>
          <target state="translated">Анализирует запрос,чтобы найти,какой язык пользователь хочет,чтобы система показывала.Учитываются только языки,перечисленные в файле settings.LANGUAGES.Если пользователь запрашивает подязык,на котором у нас есть основной язык,мы высылаем основной язык.</target>
        </trans-unit>
        <trans-unit id="7fd715a6a77af890a531d36685a0c3f6488bc441" translate="yes" xml:space="preserve">
          <source>And from the other end:</source>
          <target state="translated">И с другого конца:</target>
        </trans-unit>
        <trans-unit id="1696dfe29429eaa7aa951e64f0a5a0adc2a6a84e" translate="yes" xml:space="preserve">
          <source>And here is a custom error message:</source>
          <target state="translated">А вот и пользовательское сообщение об ошибке:</target>
        </trans-unit>
        <trans-unit id="9cca8f3e51662b018d26f9c47a0d2d61b45340e4" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s &lt;code&gt;select_related&lt;/code&gt; lookup:</source>
          <target state="translated">И вот поиск &lt;code&gt;select_related&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="69a494ceeb088d95a44de3a13081c4a6afeb1751" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s an example of how that filter would be used:</source>
          <target state="translated">И вот пример того, как этот фильтр будет использоваться:</target>
        </trans-unit>
        <trans-unit id="03bff843633202076259ba7c810194e187aa4c2d" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s that same fixture as YAML:</source>
          <target state="translated">А вот тот же прибор, что и в YAML:</target>
        </trans-unit>
        <trans-unit id="06b5a16628fc09b1a5c529ccdfe782e3493039ed" translate="yes" xml:space="preserve">
          <source>And if we would then do something like this:</source>
          <target state="translated">И если бы мы тогда сделали что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="1ae632778b90d26ed88e99ef0026a9d9d566d012" translate="yes" xml:space="preserve">
          <source>And if you don&amp;rsquo;t use the database cache backend, you don&amp;rsquo;t need to worry about providing routing instructions for the database cache model.</source>
          <target state="translated">И если вы не используете бэкэнд кеша базы данных, вам не нужно беспокоиться о предоставлении инструкций по маршрутизации для модели кеширования базы данных.</target>
        </trans-unit>
        <trans-unit id="33563f4b623edbd67004711fb92d511f217ed694" translate="yes" xml:space="preserve">
          <source>And in the template you would have:</source>
          <target state="translated">И в шаблоне,который у тебя был:</target>
        </trans-unit>
        <trans-unit id="87cd8b6594bb03456295bc34593a83a34adf0007" translate="yes" xml:space="preserve">
          <source>And in your template you would use the following:</source>
          <target state="translated">И в своем шаблоне вы бы использовали следующее:</target>
        </trans-unit>
        <trans-unit id="51a020ab2b01733bf5f33cb4a326e7e4db7ea093" translate="yes" xml:space="preserve">
          <source>And individual features may be retrieved by their feature ID:</source>
          <target state="translated">А отдельные функции могут быть извлечены по их идентификатору:</target>
        </trans-unit>
        <trans-unit id="90cfe1c3ebdd87032c4d116041779adeb21eb6ac" translate="yes" xml:space="preserve">
          <source>And it would be used in a view to block queries from the template like so:</source>
          <target state="translated">И он будет использоваться для того,чтобы блокировать запросы из шаблона таким образом:</target>
        </trans-unit>
        <trans-unit id="2f1888caae39ce8f393771e448ad036616a00801" translate="yes" xml:space="preserve">
          <source>And now we have three tests that confirm that &lt;code&gt;Question.was_published_recently()&lt;/code&gt; returns sensible values for past, recent, and future questions.</source>
          <target state="translated">И теперь у нас есть три теста, которые подтверждают, что &lt;code&gt;Question.was_published_recently()&lt;/code&gt; возвращает разумные значения для прошлых, недавних и будущих вопросов.</target>
        </trans-unit>
        <trans-unit id="516c9f6b5c81b8fee9261467ab6cdf478025ee22" translate="yes" xml:space="preserve">
          <source>And of course you can easily access methods you&amp;rsquo;ve explicitly defined on your own models:</source>
          <target state="translated">И, конечно, вы можете легко получить доступ к методам, которые вы явно определили в ваших собственных моделях:</target>
        </trans-unit>
        <trans-unit id="dac469ad58c399cc88277f4ad145c4c7733aab27" translate="yes" xml:space="preserve">
          <source>And of course, we will add some tests, to check that a &lt;code&gt;Question&lt;/code&gt; whose &lt;code&gt;pub_date&lt;/code&gt; is in the past can be displayed, and that one with a &lt;code&gt;pub_date&lt;/code&gt; in the future is not:</source>
          <target state="translated">И, конечно, мы добавим несколько тестов, чтобы убедиться, что &lt;code&gt;Question&lt;/code&gt; чья &lt;code&gt;pub_date&lt;/code&gt; находится в прошлом, может быть отображен, а тот, у которого &lt;code&gt;pub_date&lt;/code&gt; в будущем, не будет отображаться :</target>
        </trans-unit>
        <trans-unit id="ff7ec6ce2edd2d93bc624030dca48c59e112bf65" translate="yes" xml:space="preserve">
          <source>And on databases that support distinct on fields (such as PostgreSQL), &lt;code&gt;Experiment.objects.distinct('change__abs')&lt;/code&gt; generates:</source>
          <target state="translated">И для баз данных, которые поддерживают различные поля (например, PostgreSQL), &lt;code&gt;Experiment.objects.distinct('change__abs')&lt;/code&gt; генерирует:</target>
        </trans-unit>
        <trans-unit id="69e0e14986a207d85dd815a22886b945871f3a0c" translate="yes" xml:space="preserve">
          <source>And one required method:</source>
          <target state="translated">И один требуемый метод:</target>
        </trans-unit>
        <trans-unit id="8939b75db788e776e0ebb67584800991f6f44cb3" translate="yes" xml:space="preserve">
          <source>And so on. In effect, we are using the tests to tell a story of admin input and user experience on the site, and checking that at every state and for every new change in the state of the system, the expected results are published.</source>
          <target state="translated">И так далее.По сути,мы используем тесты,чтобы рассказать историю входа администратора и пользовательского опыта на сайте,и проверяем,что в каждом состоянии и при каждом новом изменении состояния системы,ожидаемые результаты публикуются.</target>
        </trans-unit>
        <trans-unit id="116552834b156417c58cbe981b1c02c3e334ad4f" translate="yes" xml:space="preserve">
          <source>And speaking of forms with dozens of fields, you might want to split the form up into fieldsets:</source>
          <target state="translated">А если говорить о формах с десятками полей,то,возможно,вы захотите разделить форму на наборы полей:</target>
        </trans-unit>
        <trans-unit id="d2afd6d3f3b296fe1c08c8b4bd7068fb7e83d7b2" translate="yes" xml:space="preserve">
          <source>And that&amp;rsquo;s it! Every time the &lt;code&gt;bad_mojo&lt;/code&gt; condition is activated, an error log record will be written.</source>
          <target state="translated">И это все! Каждый раз, когда &lt;code&gt;bad_mojo&lt;/code&gt; условие bad_mojo , будет записываться запись в журнал ошибок.</target>
        </trans-unit>
        <trans-unit id="bcfe3c0f395badbeb6a1fad7612c3793afe4eb8a" translate="yes" xml:space="preserve">
          <source>And that&amp;rsquo;s it! If we placed this file in the &lt;code&gt;templates/admin/my_app&lt;/code&gt; directory, our link would appear on the change form for all models within my_app.</source>
          <target state="translated">И это все! Если мы разместим этот файл в каталоге &lt;code&gt;templates/admin/my_app&lt;/code&gt; , наша ссылка появится в форме изменений для всех моделей в my_app.</target>
        </trans-unit>
        <trans-unit id="07e887c0940acf021ebba5ade747fc8fbec51123" translate="yes" xml:space="preserve">
          <source>And the accompanying URLconf:</source>
          <target state="translated">И сопровождающий URLconf:</target>
        </trans-unit>
        <trans-unit id="eab402753ae334de81ac60191919efb50b4bc242" translate="yes" xml:space="preserve">
          <source>And the template:</source>
          <target state="translated">И шаблон:</target>
        </trans-unit>
        <trans-unit id="9b52dd3016f5a17d966f982881e55520530da65e" translate="yes" xml:space="preserve">
          <source>And the view:</source>
          <target state="translated">И вид:</target>
        </trans-unit>
        <trans-unit id="a697ce9cc8667c8e9256c8d32cb413cc810723e1" translate="yes" xml:space="preserve">
          <source>And then later:</source>
          <target state="translated">А потом:</target>
        </trans-unit>
        <trans-unit id="ee6c7a92a558879bf024246e43dd7ff7bd50e6b3" translate="yes" xml:space="preserve">
          <source>And then use it to query for a particular &lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;, or to get access to the &lt;code&gt;User&lt;/code&gt; model class:</source>
          <target state="translated">А затем используйте его для запроса определенного &lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; или для получения доступа к классу модели &lt;code&gt;User&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1098706171a72ea5de650d6dada38e6c6afa8002" translate="yes" xml:space="preserve">
          <source>And to find whether a queryset contains any items:</source>
          <target state="translated">И чтобы выяснить,содержит ли квестибюль какие-нибудь предметы:</target>
        </trans-unit>
        <trans-unit id="869524675f01329a247aa1f09e51825df4ec11fc" translate="yes" xml:space="preserve">
          <source>And to store numbers up to approximately one billion with a resolution of 10 decimal places:</source>
          <target state="translated">И хранить числа примерно до одного миллиарда с разрешением 10 десятичных знаков после запятой:</target>
        </trans-unit>
        <trans-unit id="122dc325cc02b859f8d88f5588295d211a44e206" translate="yes" xml:space="preserve">
          <source>And we also want a router that sends all other apps to the primary/replica configuration, and randomly chooses a replica to read from:</source>
          <target state="translated">И нам также нужен маршрутизатор,который отправляет все остальные приложения в первичную/репличную конфигурацию,и случайным образом выбирает реплику для чтения:</target>
        </trans-unit>
        <trans-unit id="8e49b4c10f64ab640d69b1da323441187a6908f6" translate="yes" xml:space="preserve">
          <source>And you can clear from the other end:</source>
          <target state="translated">И ты можешь убраться с другого конца:</target>
        </trans-unit>
        <trans-unit id="82df6ae1054c31cec6c0f243a78e94fb29b9663d" translate="yes" xml:space="preserve">
          <source>Annotated values can also be filtered. The alias for the annotation can be used in &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;exclude()&lt;/code&gt; clauses in the same way as any other model field.</source>
          <target state="translated">Аннотированные значения также могут быть отфильтрованы. Псевдоним для аннотации можно использовать в предложениях &lt;code&gt;filter()&lt;/code&gt; и &lt;code&gt;exclude()&lt;/code&gt; же, как и в любом другом поле модели.</target>
        </trans-unit>
        <trans-unit id="b554aee820c7e57ad49dd7b64f3173f5d178236d" translate="yes" xml:space="preserve">
          <source>Annotates each object in the &lt;code&gt;QuerySet&lt;/code&gt; with the provided list of &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;. An expression may be a simple value, a reference to a field on the model (or any related models), or an aggregate expression (averages, sums, etc.) that has been computed over the objects that are related to the objects in the &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">Аннотирует каждый объект в &lt;code&gt;QuerySet&lt;/code&gt; с предоставленным списком &lt;a href=&quot;expressions&quot;&gt;выражений запроса&lt;/a&gt; . Выражение может быть простым значением, ссылкой на поле в модели (или любых связанных моделях) или агрегированным выражением (средние значения, суммы и т. Д.), Которое было вычислено для объектов, связанных с объектами в &lt;code&gt;QuerySet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="829792c80022a8daeaba47c149334e000c254d65" translate="yes" xml:space="preserve">
          <source>Annotations can be used as a basis for ordering. When you define an &lt;code&gt;order_by()&lt;/code&gt; clause, the aggregates you provide can reference any alias defined as part of an &lt;code&gt;annotate()&lt;/code&gt; clause in the query.</source>
          <target state="translated">Аннотации могут быть использованы в качестве основы для оформления заказа. Когда вы определяете предложение &lt;code&gt;order_by()&lt;/code&gt; , предоставленные вами агрегаты могут ссылаться на любой псевдоним, определенный как часть предложения &lt;code&gt;annotate()&lt;/code&gt; в запросе.</target>
        </trans-unit>
        <trans-unit id="3e92b3487e05d5f47d7725bc0a904c803488d603" translate="yes" xml:space="preserve">
          <source>Annotations specified using keyword arguments will use the keyword as the alias for the annotation. Anonymous arguments will have an alias generated for them based upon the name of the aggregate function and the model field that is being aggregated. Only aggregate expressions that reference a single field can be anonymous arguments. Everything else must be a keyword argument.</source>
          <target state="translated">Аннотации,заданные с помощью аргументов ключевых слов,будут использовать ключевое слово в качестве псевдонима для аннотации.Анонимные аргументы будут иметь для них псевдоним,созданный на основе имени агрегатной функции и поля модели,которое агрегируется.Анонимными аргументами могут быть только агрегированные выражения,которые ссылаются на одно поле.Все остальное должно быть аргументом по ключевому слову.</target>
        </trans-unit>
        <trans-unit id="88461f63d604b59172c0ff0ab1c649468d205b75" translate="yes" xml:space="preserve">
          <source>Another approach is to use a &amp;ldquo;dumb&amp;rdquo; SMTP server that receives the emails locally and displays them to the terminal, but does not actually send anything. Python has a built-in way to accomplish this with a single command:</source>
          <target state="translated">Другой подход заключается в использовании &amp;laquo;тупого&amp;raquo; SMTP-сервера, который получает электронные письма локально и отображает их на терминале, но фактически ничего не отправляет. Python имеет встроенный способ сделать это с помощью одной команды:</target>
        </trans-unit>
        <trans-unit id="ba396ad6193b9ca5749ed17aafe362419ec415c8" translate="yes" xml:space="preserve">
          <source>Another approach to searching is trigram similarity. A trigram is a group of three consecutive characters. In addition to the &lt;a href=&quot;lookups#std:fieldlookup-trigram_similar&quot;&gt;&lt;code&gt;trigram_similar&lt;/code&gt;&lt;/a&gt; lookup, you can use a couple of other expressions.</source>
          <target state="translated">Другой подход к поиску - сходство триграмм. Триграмма - это группа из трех последовательных символов. В дополнение к &lt;a href=&quot;lookups#std:fieldlookup-trigram_similar&quot;&gt; &lt;code&gt;trigram_similar&lt;/code&gt; &lt;/a&gt; , вы можете использовать несколько других выражений.</target>
        </trans-unit>
        <trans-unit id="21ba367c9e3496589a56140d591b0ffe544a18b6" translate="yes" xml:space="preserve">
          <source>Another common need is to filter down the objects given in a list page by some key in the URL. Earlier we hard-coded the publisher&amp;rsquo;s name in the URLconf, but what if we wanted to write a view that displayed all the books by some arbitrary publisher?</source>
          <target state="translated">Другая распространенная потребность - отфильтровать объекты, указанные на странице списка, по некоторому ключу в URL. Ранее мы жестко закодировали имя издателя в URLconf, но что, если мы захотим написать представление, отображающее все книги какого-либо произвольного издателя?</target>
        </trans-unit>
        <trans-unit id="45940903ef290c6607fb9dc48fca66f59422159d" translate="yes" xml:space="preserve">
          <source>Another common pattern is writing custom SQL statements in model methods and module-level methods. For more details on using raw SQL, see the documentation on &lt;a href=&quot;sql&quot;&gt;using raw SQL&lt;/a&gt;.</source>
          <target state="translated">Другой распространенный шаблон - написание пользовательских операторов SQL в методах модели и методах уровня модуля. Для получения дополнительной информации об использовании необработанного SQL см. Документацию по &lt;a href=&quot;sql&quot;&gt;использованию необработанного SQL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a290b2c69d35adb6da1a5bfba443ced0c880483" translate="yes" xml:space="preserve">
          <source>Another common setup is to use flat pages for a limited set of known pages and to hard code the urls, so you can reference them with the &lt;a href=&quot;../templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag:</source>
          <target state="translated">Другая распространенная настройка - использовать плоские страницы для ограниченного набора известных страниц и жестко кодировать URL-адреса, чтобы вы могли ссылаться на них с помощью тега шаблона &lt;a href=&quot;../templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a1577f6aa21d88594318532f249d8835a0c12d0e" translate="yes" xml:space="preserve">
          <source>Another common tactic is to serve static files from a cloud storage provider like Amazon&amp;rsquo;s S3 and/or a CDN (content delivery network). This lets you ignore the problems of serving static files and can often make for faster-loading Web pages (especially when using a CDN).</source>
          <target state="translated">Другая распространенная тактика - обслуживать статические файлы от поставщика облачного хранилища, такого как Amazon S3 и / или CDN (сеть доставки контента). Это позволяет вам игнорировать проблемы обслуживания статических файлов и часто может ускорить загрузку веб-страниц (особенно при использовании CDN).</target>
        </trans-unit>
        <trans-unit id="87f01f544f559b7fee6f441175ba35e7b16c744c" translate="yes" xml:space="preserve">
          <source>Another common type of template tag is the type that displays some data by rendering &lt;em&gt;another&lt;/em&gt; template. For example, Django&amp;rsquo;s admin interface uses custom template tags to display the buttons along the bottom of the &amp;ldquo;add/change&amp;rdquo; form pages. Those buttons always look the same, but the link targets change depending on the object being edited &amp;ndash; so they&amp;rsquo;re a perfect case for using a small template that is filled with details from the current object. (In the admin&amp;rsquo;s case, this is the &lt;code&gt;submit_row&lt;/code&gt; tag.)</source>
          <target state="translated">Другим распространенным типом тега шаблона является тип, который отображает некоторые данные путем рендеринга &lt;em&gt;другого&lt;/em&gt; шаблона. Например, интерфейс администратора Django использует пользовательские теги шаблонов для отображения кнопок в нижней части страниц формы &amp;laquo;добавить / изменить&amp;raquo;. Эти кнопки всегда выглядят одинаково, но цели ссылок меняются в зависимости от редактируемого объекта, поэтому они идеально подходят для использования небольшого шаблона, который заполнен деталями текущего объекта. (В случае администратора это тег &lt;code&gt;submit_row&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="f0f51871d5071d412fc32544909d6747215d5a77" translate="yes" xml:space="preserve">
          <source>Another consideration is that the context data from class-based generic views will override data provided by context processors; see &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">Другое соображение заключается в том, что данные контекста из общих представлений на основе классов будут переопределять данные, предоставляемые процессорами контекста; см. &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt; &lt;code&gt;get_context_data()&lt;/code&gt; &lt;/a&gt; для примера.</target>
        </trans-unit>
        <trans-unit id="3b24e12dd9fad842cfca1849299590204ccaf993" translate="yes" xml:space="preserve">
          <source>Another difference from one-to-many relationships is that in addition to model instances, the &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;set()&lt;/code&gt;, and &lt;code&gt;remove()&lt;/code&gt; methods on many-to-many relationships accept primary key values. For example, if &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are &lt;code&gt;Entry&lt;/code&gt; instances, then these &lt;code&gt;set()&lt;/code&gt; calls work identically:</source>
          <target state="translated">Другое отличие от отношений &amp;laquo;один ко многим&amp;raquo; состоит в том, что в дополнение к экземплярам модели методы &lt;code&gt;add()&lt;/code&gt; , &lt;code&gt;set()&lt;/code&gt; и &lt;code&gt;remove()&lt;/code&gt; отношениях &amp;laquo;многие ко многим&amp;raquo; принимают значения первичного ключа. Например, если &lt;code&gt;e1&lt;/code&gt; и &lt;code&gt;e2&lt;/code&gt; являются экземплярами &lt;code&gt;Entry&lt;/code&gt; , то эти вызовы &lt;code&gt;set()&lt;/code&gt; работают одинаково:</target>
        </trans-unit>
        <trans-unit id="b9a69673a48bf9c65937988bc581b8dc380dd048" translate="yes" xml:space="preserve">
          <source>Another example would be a backend that only handles writing to files. In this case, you would not need to implement any of the above methods.</source>
          <target state="translated">Другим примером может служить бэкэнд,который обрабатывает только запись в файлы.В этом случае вам не придется реализовывать ни один из вышеперечисленных методов.</target>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="translated">Еще один пример:</target>
        </trans-unit>
        <trans-unit id="4986e55d85710f6d524794428b573b2ea0944346" translate="yes" xml:space="preserve">
          <source>Another feature &lt;code&gt;{% blocktrans %}&lt;/code&gt; supports is the &lt;code&gt;trimmed&lt;/code&gt; option. This option will remove newline characters from the beginning and the end of the content of the &lt;code&gt;{% blocktrans %}&lt;/code&gt; tag, replace any whitespace at the beginning and end of a line and merge all lines into one using a space character to separate them. This is quite useful for indenting the content of a &lt;code&gt;{%
blocktrans %}&lt;/code&gt; tag without having the indentation characters end up in the corresponding entry in the PO file, which makes the translation process easier.</source>
          <target state="translated">Еще одна особенность &lt;code&gt;{% blocktrans %}&lt;/code&gt; поддерживает это &lt;code&gt;trimmed&lt;/code&gt; вариант. Эта опция удалит символы новой строки из начала и конца содержимого тега &lt;code&gt;{% blocktrans %}&lt;/code&gt; , заменит любые пробелы в начале и конце строки и объединит все строки в одну, используя пробел для их разделения. Это очень полезно для отступа содержимого тега &lt;code&gt;{% blocktrans %}&lt;/code&gt; без необходимости вставлять символы отступа в соответствующую запись в PO-файле, что облегчает процесс перевода.</target>
        </trans-unit>
        <trans-unit id="42720cdbeb26755545dc879495f797069e58d4ab" translate="yes" xml:space="preserve">
          <source>Another feature &lt;code&gt;{% blocktranslate %}&lt;/code&gt; supports is the &lt;code&gt;trimmed&lt;/code&gt; option. This option will remove newline characters from the beginning and the end of the content of the &lt;code&gt;{% blocktranslate %}&lt;/code&gt; tag, replace any whitespace at the beginning and end of a line and merge all lines into one using a space character to separate them. This is quite useful for indenting the content of a &lt;code&gt;{% blocktranslate %}&lt;/code&gt; tag without having the indentation characters end up in the corresponding entry in the PO file, which makes the translation process easier.</source>
          <target state="translated">Еще одна особенность &lt;code&gt;{% blocktranslate %}&lt;/code&gt; поддерживает это &lt;code&gt;trimmed&lt;/code&gt; вариант. Эта опция удалит символы новой строки из начала и конца содержимого тега &lt;code&gt;{% blocktranslate %}&lt;/code&gt; , заменит любые пробелы в начале и конце строки и объединит все строки в одну, используя пробел для их разделения. Это очень полезно для отступа содержимого тега &lt;code&gt;{% blocktranslate %}&lt;/code&gt; без того, чтобы символы отступа попадали в соответствующую запись в файле PO, что упрощает процесс перевода.</target>
        </trans-unit>
        <trans-unit id="f6f38b8bf22ce33d0915eebda059aeb43f57443f" translate="yes" xml:space="preserve">
          <source>Another option is to add the required hosts to &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;tools#django.test.override_settings&quot;&gt;&lt;code&gt;override_settings()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tools#django.test.SimpleTestCase.modify_settings&quot;&gt;&lt;code&gt;modify_settings()&lt;/code&gt;&lt;/a&gt;. This option may be preferable in standalone apps that can&amp;rsquo;t package their own settings file or for projects where the list of domains is not static (e.g., subdomains for multitenancy). For example, you could write a test for the domain &lt;code&gt;http://otherserver/&lt;/code&gt; as follows:</source>
          <target state="translated">Другой вариант - добавить необходимые хосты в &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; ,&lt;/a&gt; используя &lt;a href=&quot;tools#django.test.override_settings&quot;&gt; &lt;code&gt;override_settings()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;tools#django.test.SimpleTestCase.modify_settings&quot;&gt; &lt;code&gt;modify_settings()&lt;/code&gt; &lt;/a&gt; . Эта опция может быть предпочтительнее в автономных приложениях, которые не могут упаковать свой собственный файл настроек, или в проектах, где список доменов не является статичным (например, субдомены для мультитенантности). Например, вы можете написать тест для домена &lt;code&gt;http://otherserver/&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="86cbfa1018d17aad7dbbe0a2952b209be21563af" translate="yes" xml:space="preserve">
          <source>Another option is to configure class attributes as keyword arguments to the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; call in the URLconf:</source>
          <target state="translated">Другой вариант - настроить атрибуты класса в качестве аргументов ключевых слов для &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; в URLconf:</target>
        </trans-unit>
        <trans-unit id="0e2072ae951398dc6d033749ffe3f4ec2a9529ef" translate="yes" xml:space="preserve">
          <source>Another option is to use &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;collections.namedtuple()&lt;/code&gt;&lt;/a&gt; from the Python standard library. A &lt;code&gt;namedtuple&lt;/code&gt; is a tuple-like object that has fields accessible by attribute lookup; it&amp;rsquo;s also indexable and iterable. Results are immutable and accessible by field names or indices, which might be useful:</source>
          <target state="translated">Другой вариант - использовать &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; &lt;code&gt;collections.namedtuple()&lt;/code&gt; &lt;/a&gt; из стандартной библиотеки Python. &lt;code&gt;namedtuple&lt;/code&gt; является кортежем-подобный объект , который имеет поля , доступные от атрибута поиска; это также индексируется и повторяется. Результаты неизменны и доступны по именам полей или индексам, что может быть полезно:</target>
        </trans-unit>
        <trans-unit id="b600586952a903b98a1e51daa4f184b2a654da9b" translate="yes" xml:space="preserve">
          <source>Another option is to use the &lt;code&gt;init_command&lt;/code&gt; option for MySQLdb prior to creating your tables:</source>
          <target state="translated">Другой вариант заключается в использовании &lt;code&gt;init_command&lt;/code&gt; вариант для MySQLdb до создания таблиц:</target>
        </trans-unit>
        <trans-unit id="4c3275efd45f8519667225b74be1bee3394ee839" translate="yes" xml:space="preserve">
          <source>Another option is to use the constructor for the specific geometry type that you wish to create. For example, a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; object may be created by passing in the X and Y coordinates into its constructor:</source>
          <target state="translated">Другой вариант - использовать конструктор для определенного типа геометрии, который вы хотите создать. Например, объект &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt; может быть создан путем передачи координат X и Y в его конструктор:</target>
        </trans-unit>
        <trans-unit id="5712178c1bd67ebd8b516f654132f1288bddf9c3" translate="yes" xml:space="preserve">
          <source>Another option is to wrap each &lt;code&gt;QuerySet&lt;/code&gt; using server-side cursors in an &lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block, because it disables &lt;code&gt;autocommit&lt;/code&gt; for the duration of the transaction. This way, the server-side cursor will only live for the duration of the transaction.</source>
          <target state="translated">Другой вариант заключается в том, чтобы обернуть каждый &lt;code&gt;QuerySet&lt;/code&gt; с помощью серверных курсоров в блоке &lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; , поскольку он отключает &lt;code&gt;autocommit&lt;/code&gt; на время транзакции. Таким образом, серверный курсор будет жить только в течение транзакции.</target>
        </trans-unit>
        <trans-unit id="5a4aa7df42c54947c30745a80b3d8f27cb3b16d7" translate="yes" xml:space="preserve">
          <source>Another possibility is to include additional URL patterns by using a list of &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; instances. For example, consider this URLconf:</source>
          <target state="translated">Другой возможностью является включение дополнительных шаблонов URL с использованием списка экземпляров &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt; . Например, рассмотрим этот URLconf:</target>
        </trans-unit>
        <trans-unit id="8351180c3ac17f96e32412d210d1d3655c0a4ab4" translate="yes" xml:space="preserve">
          <source>Another possible attack would be if &lt;code&gt;good.example.com&lt;/code&gt; sets its &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_DOMAIN&quot;&gt;&lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; which would cause session cookies from that site to be sent to &lt;code&gt;bad.example.com&lt;/code&gt;.</source>
          <target state="translated">Другая возможная атака будет в том случае, если &lt;code&gt;good.example.com&lt;/code&gt; установит для &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_DOMAIN&quot;&gt; &lt;code&gt;SESSION_COOKIE_DOMAIN&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; что приведет к отправке файлов cookie сеанса с этого сайта на &lt;code&gt;bad.example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="634ae931c8918bb787c1ab614abd3ba33818e955" translate="yes" xml:space="preserve">
          <source>Another side effect of using &lt;code&gt;commit=False&lt;/code&gt; is seen when your model has a many-to-many relation with another model. If your model has a many-to-many relation and you specify &lt;code&gt;commit=False&lt;/code&gt; when you save a form, Django cannot immediately save the form data for the many-to-many relation. This is because it isn&amp;rsquo;t possible to save many-to-many data for an instance until the instance exists in the database.</source>
          <target state="translated">Еще один побочный эффект использования &lt;code&gt;commit=False&lt;/code&gt; наблюдается, когда ваша модель имеет отношение многие ко многим с другой моделью. Если ваша модель имеет отношение &amp;laquo;многие ко многим&amp;raquo; и вы указываете &lt;code&gt;commit=False&lt;/code&gt; при сохранении формы, Django не может сразу сохранить данные формы для отношения &amp;laquo;многие ко многим&amp;raquo;. Это связано с тем, что невозможно сохранить данные &amp;laquo;многие ко многим&amp;raquo; для экземпляра до тех пор, пока этот экземпляр не появится в базе данных.</target>
        </trans-unit>
        <trans-unit id="19a769a5876c833200ddb5a61c4aac99cdd61a35" translate="yes" xml:space="preserve">
          <source>Another solution is to sort the data in the template using the &lt;a href=&quot;#std:templatefilter-dictsort&quot;&gt;&lt;code&gt;dictsort&lt;/code&gt;&lt;/a&gt; filter, if your data is in a list of dictionaries:</source>
          <target state="translated">Другим решением является сортировка данных в шаблоне с использованием фильтра &lt;a href=&quot;#std:templatefilter-dictsort&quot;&gt; &lt;code&gt;dictsort&lt;/code&gt; &lt;/a&gt; , если ваши данные находятся в списке словарей:</target>
        </trans-unit>
        <trans-unit id="e2bcb7bd2a2294b9fd69bcc472db817498190e7c" translate="yes" xml:space="preserve">
          <source>Another thing to note about this example is that &lt;code&gt;Manager&lt;/code&gt; methods can access &lt;code&gt;self.model&lt;/code&gt; to get the model class to which they&amp;rsquo;re attached.</source>
          <target state="translated">В этом примере следует отметить еще одну вещь: методы &lt;code&gt;Manager&lt;/code&gt; могут обращаться к &lt;code&gt;self.model&lt;/code&gt; , чтобы получить класс модели, к которому они присоединены.</target>
        </trans-unit>
        <trans-unit id="c24ed1973db71e4a285cbe24ded0d0a7d1fac1f2" translate="yes" xml:space="preserve">
          <source>Another useful benefit of &lt;code&gt;F()&lt;/code&gt; is that having the database - rather than Python - update a field&amp;rsquo;s value avoids a &lt;em&gt;race condition&lt;/em&gt;.</source>
          <target state="translated">Другое полезное преимущество &lt;code&gt;F()&lt;/code&gt; заключается в том, что наличие базы данных, а не Python, для обновления значения поля позволяет избежать состояния &lt;em&gt;гонки&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="350b06198d36b009231e64363f3cd68696d2c3fb" translate="yes" xml:space="preserve">
          <source>Another way to access the same information is by querying the &lt;a href=&quot;queries#m2m-reverse-relationships&quot;&gt;many-to-many reverse relationship&lt;/a&gt; from a &lt;code&gt;Person&lt;/code&gt; object:</source>
          <target state="translated">Другой способ получить доступ к той же информации - запросить &lt;a href=&quot;queries#m2m-reverse-relationships&quot;&gt;обратную связь&lt;/a&gt; &amp;laquo; многие ко многим&amp;raquo; из объекта &lt;code&gt;Person&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c6720499a689b825b3931c9adad686693b94d7ca" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; that is associated with an object (as with &lt;code&gt;Car.photo&lt;/code&gt;, below) will also have a couple of extra methods:</source>
          <target state="translated">Любой &lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; , связанный с объектом (как в &lt;code&gt;Car.photo&lt;/code&gt; ниже), также будет иметь несколько дополнительных методов:</target>
        </trans-unit>
        <trans-unit id="259f07ccd997e3ebbc7533171ea4ac71a43f828b" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Car&lt;/code&gt; instance will have a &lt;code&gt;photo&lt;/code&gt; attribute that you can use to get at the details of the attached photo:</source>
          <target state="translated">Любой экземпляр &lt;code&gt;Car&lt;/code&gt; будет иметь атрибут &lt;code&gt;photo&lt;/code&gt; , который можно использовать для получения сведений о прилагаемой фотографии:</target>
        </trans-unit>
        <trans-unit id="82f12e18262dfa08be2fd8dc34797d2dadcfa0eb" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;choices&lt;/code&gt; attribute set on the formfield will be limited to the form field only. If the corresponding field on the model has choices set, the choices provided to the form must be a valid subset of those choices, otherwise the form submission will fail with a &lt;a href=&quot;../../exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; when the model itself is validated before saving.</source>
          <target state="translated">Любой &lt;code&gt;choices&lt;/code&gt; атрибут устанавливается на поле формы будет ограничен только полям формы. Если в соответствующем поле в модели заданы варианты выбора, варианты, предоставленные в форме, должны быть допустимым подмножеством этих вариантов, в противном случае отправка формы завершится ошибкой с &lt;a href=&quot;../../exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; ,&lt;/a&gt; когда сама модель проверяется перед сохранением.</target>
        </trans-unit>
        <trans-unit id="3cfcbfb5e16e8c8b294fbb366355136915411066" translate="yes" xml:space="preserve">
          <source>Any Django field</source>
          <target state="translated">Любое поле Django</target>
        </trans-unit>
        <trans-unit id="f52c2bd963740dcc4cc74100e5cb34b31d2ff1f6" translate="yes" xml:space="preserve">
          <source>Any arguments following a &lt;code&gt;--&lt;/code&gt; divider will be passed on to the underlying command-line client. For example, with PostgreSQL you can use the &lt;code&gt;psql&lt;/code&gt; command&amp;rsquo;s &lt;code&gt;-c&lt;/code&gt; flag to execute a raw SQL query directly:</source>
          <target state="translated">Любые аргументы, следующие за разделителем &lt;code&gt;--&lt;/code&gt; будут переданы базовому клиенту командной строки. Например, в PostgreSQL вы можете использовать флаг &lt;code&gt;-c&lt;/code&gt; команды &lt;code&gt;psql&lt;/code&gt; для непосредственного выполнения необработанного SQL-запроса:</target>
        </trans-unit>
        <trans-unit id="0943bcec768321ce586e2262a98b924049a43318" translate="yes" xml:space="preserve">
          <source>Any arguments passed to &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; will override attributes set on the class. In this example, we set &lt;code&gt;template_name&lt;/code&gt; on the &lt;code&gt;TemplateView&lt;/code&gt;. A similar overriding pattern can be used for the &lt;code&gt;url&lt;/code&gt; attribute on &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.RedirectView&quot;&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Любые аргументы, передаваемые &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; будут переопределять атрибуты, установленные в классе. В этом примере мы устанавливаем &lt;code&gt;template_name&lt;/code&gt; в &lt;code&gt;TemplateView&lt;/code&gt; . Аналогичный шаблон переопределения можно использовать для атрибута &lt;code&gt;url&lt;/code&gt; в &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.RedirectView&quot;&gt; &lt;code&gt;RedirectView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b95e74b82f7912fd5a57b4159d009906620dcdd" translate="yes" xml:space="preserve">
          <source>Any cached relations are cleared from the reloaded instance.</source>
          <target state="translated">Любые кэшированные отношения удаляются из перезагруженного экземпляра.</target>
        </trans-unit>
        <trans-unit id="87ad20ba32653e2c8263b7d56b8e2b1f508d28d2" translate="yes" xml:space="preserve">
          <source>Any class reference (must be in module&amp;rsquo;s top-level scope)</source>
          <target state="translated">Любая ссылка на класс (должна быть в области верхнего уровня модуля)</target>
        </trans-unit>
        <trans-unit id="d7cfbb9e6237b5e4d9536ebf29c5cc594bad4538" translate="yes" xml:space="preserve">
          <source>Any extra keyword arguments you pass to &lt;code&gt;__init__&lt;/code&gt; will be stored in &lt;code&gt;self.feed&lt;/code&gt; for use with &lt;a href=&quot;#custom-feed-generators&quot;&gt;custom feed generators&lt;/a&gt;.</source>
          <target state="translated">Все дополнительные аргументы ключевых слов, которые вы передаете &lt;code&gt;__init__&lt;/code&gt; , будут сохранены в &lt;code&gt;self.feed&lt;/code&gt; для использования с &lt;a href=&quot;#custom-feed-generators&quot;&gt;пользовательскими генераторами каналов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e8de9d3cf5f05073aa258263f2473c8604fc0dd" translate="yes" xml:space="preserve">
          <source>Any extra keyword arguments you pass to &lt;code&gt;__init__&lt;/code&gt; will be stored in &lt;code&gt;self.feed&lt;/code&gt;.</source>
          <target state="translated">Все дополнительные аргументы ключевых слов, которые вы передаете &lt;code&gt;__init__&lt;/code&gt; , будут сохранены в &lt;code&gt;self.feed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eaa1bdee468ee233f3d4bef58a335623ca9709d4" translate="yes" xml:space="preserve">
          <source>Any field in &lt;code&gt;list_editable&lt;/code&gt; must also be in &lt;code&gt;list_display&lt;/code&gt;. You can&amp;rsquo;t edit a field that&amp;rsquo;s not displayed!</source>
          <target state="translated">Любое поле в &lt;code&gt;list_editable&lt;/code&gt; также должно быть в &lt;code&gt;list_display&lt;/code&gt; . Вы не можете редактировать поле, которое не отображается!</target>
        </trans-unit>
        <trans-unit id="bc2c1f8f4f91fd73109d4df0901557ed01d4acba" translate="yes" xml:space="preserve">
          <source>Any fields not included in a form by the above logic will not be set by the form&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method. Also, if you manually add the excluded fields back to the form, they will not be initialized from the model instance.</source>
          <target state="translated">Любые поля, не включенные в форму с помощью вышеуказанной логики, не будут установлены методом &lt;code&gt;save()&lt;/code&gt; . Кроме того, если вы вручную добавите исключенные поля обратно в форму, они не будут инициализированы из экземпляра модели.</target>
        </trans-unit>
        <trans-unit id="d0f265b427e58215ab20a4d836d7f8c516eb4a51" translate="yes" xml:space="preserve">
          <source>Any fields that are stored with &lt;code&gt;VARCHAR&lt;/code&gt; column types have their &lt;code&gt;max_length&lt;/code&gt; restricted to 255 characters if you are using &lt;code&gt;unique=True&lt;/code&gt; for the field. This affects &lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt;&lt;code&gt;SlugField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для всех полей, которые хранятся с типами столбцов &lt;code&gt;VARCHAR&lt;/code&gt; , их &lt;code&gt;max_length&lt;/code&gt; ограничена 255 символами, если вы используете для поля &lt;code&gt;unique=True&lt;/code&gt; . Это влияет на &lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt; &lt;code&gt;SlugField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="361ed15fdbee1edcf82d9d0eaab3f6d9d5c09eb3" translate="yes" xml:space="preserve">
          <source>Any fields that are stored with &lt;code&gt;VARCHAR&lt;/code&gt; column types may have their &lt;code&gt;max_length&lt;/code&gt; restricted to 255 characters if you are using &lt;code&gt;unique=True&lt;/code&gt; for the field. This affects &lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt;&lt;code&gt;SlugField&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-index.html#create-index-column-prefixes&quot;&gt;the MySQL documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Любые поля, которые хранятся с типами столбцов &lt;code&gt;VARCHAR&lt;/code&gt; , могут иметь &lt;code&gt;max_length&lt;/code&gt; , ограниченную 255 символами, если вы используете &lt;code&gt;unique=True&lt;/code&gt; для поля. Это влияет на &lt;a href=&quot;models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;models/fields#django.db.models.SlugField&quot;&gt; &lt;code&gt;SlugField&lt;/code&gt; &lt;/a&gt; . См. &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-index.html#create-index-column-prefixes&quot;&gt;Документацию MySQL&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="23d9acd68c46ec11121d32d169fe6c012befed6e" translate="yes" xml:space="preserve">
          <source>Any fields used in an &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; call are included in the SQL &lt;code&gt;SELECT&lt;/code&gt; columns. This can sometimes lead to unexpected results when used in conjunction with &lt;code&gt;distinct()&lt;/code&gt;. If you order by fields from a related model, those fields will be added to the selected columns and they may make otherwise duplicate rows appear to be distinct. Since the extra columns don&amp;rsquo;t appear in the returned results (they are only there to support ordering), it sometimes looks like non-distinct results are being returned.</source>
          <target state="translated">Все поля, используемые в вызове &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; , включаются в столбцы SQL &lt;code&gt;SELECT&lt;/code&gt; . Иногда это может привести к неожиданным результатам при использовании в сочетании с &lt;code&gt;distinct()&lt;/code&gt; . Если вы упорядочите по полям из связанной модели, эти поля будут добавлены в выбранные столбцы, и в противном случае дублирующиеся строки могут казаться отличными. Поскольку дополнительные столбцы не отображаются в возвращаемых результатах (они предназначены только для поддержки упорядочения), иногда кажется, что возвращаются нечеткие результаты.</target>
        </trans-unit>
        <trans-unit id="389de725feff980095e919bb4630a4b7aa4cbedb" translate="yes" xml:space="preserve">
          <source>Any function or method reference (e.g. &lt;code&gt;datetime.datetime.today&lt;/code&gt;) (must be in module&amp;rsquo;s top-level scope)</source>
          <target state="translated">Ссылка на любую функцию или метод (например, &lt;code&gt;datetime.datetime.today&lt;/code&gt; ) (должна находиться в области верхнего уровня модуля)</target>
        </trans-unit>
        <trans-unit id="340f6cd4cdae6a9fe26ccc2c1321f21a7a65b64b" translate="yes" xml:space="preserve">
          <source>Any help text that has been associated with the field.</source>
          <target state="translated">Любой текст справки,связанный с полем.</target>
        </trans-unit>
        <trans-unit id="a4d976c10e6d33bf9091130ca4635d6f2a79ca77" translate="yes" xml:space="preserve">
          <source>Any initial data loaded in migrations will only be available in &lt;code&gt;TestCase&lt;/code&gt; tests and not in &lt;code&gt;TransactionTestCase&lt;/code&gt; tests, and additionally only on backends where transactions are supported (the most important exception being MyISAM). This is also true for tests which rely on &lt;code&gt;TransactionTestCase&lt;/code&gt; such as &lt;a href=&quot;tools#django.test.LiveServerTestCase&quot;&gt;&lt;code&gt;LiveServerTestCase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt;&lt;code&gt;StaticLiveServerTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Любые исходные данные, загруженные в процессе миграции, будут доступны только в тестах &lt;code&gt;TestCase&lt;/code&gt; , но не в тестах &lt;code&gt;TransactionTestCase&lt;/code&gt; , а также только в бэкэндах, где поддерживаются транзакции (наиболее важным исключением является MyISAM). Это также верно для тестов, которые используют &lt;code&gt;TransactionTestCase&lt;/code&gt; , таких как &lt;a href=&quot;tools#django.test.LiveServerTestCase&quot;&gt; &lt;code&gt;LiveServerTestCase&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt; &lt;code&gt;StaticLiveServerTestCase&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7538d5b082eb7ff86214f434df9e9db4b7599c" translate="yes" xml:space="preserve">
          <source>Any items in the &lt;code&gt;OPTIONS&lt;/code&gt; in &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt;&lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt;&lt;/a&gt; for your validator will be passed to the constructor. All constructor arguments should have a default value.</source>
          <target state="translated">Любые элементы в &lt;code&gt;OPTIONS&lt;/code&gt; в &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt; &lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt; &lt;/a&gt; для вашего валидатора будут переданы в конструктор. Все аргументы конструктора должны иметь значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="269822aff3cab02690efcc28e3a2fadd4d2d5a67" translate="yes" xml:space="preserve">
          <source>Any keyword arguments passed to &lt;code&gt;get_or_create()&lt;/code&gt; &amp;mdash; &lt;em&gt;except&lt;/em&gt; an optional one called &lt;code&gt;defaults&lt;/code&gt; &amp;mdash; will be used in a &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; call. If an object is found, &lt;code&gt;get_or_create()&lt;/code&gt; returns a tuple of that object and &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Любые ключевые аргументы, передаваемые &lt;code&gt;get_or_create()&lt;/code&gt; - &lt;em&gt;кроме&lt;/em&gt; необязательного, называемого &lt;code&gt;defaults&lt;/code&gt; - будут использоваться в вызове &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; . Если объект найден, &lt;code&gt;get_or_create()&lt;/code&gt; возвращает кортеж этого объекта и &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa00f3f233bd76654fd4c34e32d4e0293431a21f" translate="yes" xml:space="preserve">
          <source>Any migration can be reverted with &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; by using the number of previous migrations:</source>
          <target state="translated">Любая миграция может быть отменена с помощью &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; , используя количество предыдущих миграций:</target>
        </trans-unit>
        <trans-unit id="206cfa10cfb7598b7f46150d0b397fbd96ad0e5a" translate="yes" xml:space="preserve">
          <source>Any object that has a URL that uniquely identifies it should define this method.</source>
          <target state="translated">Любой объект,имеющий уникальный идентификационный URL,должен определить этот метод.</target>
        </trans-unit>
        <trans-unit id="bff4e22bfefe56190b6103de76226c38c3154301" translate="yes" xml:space="preserve">
          <source>Any option passed to the &lt;code&gt;startapp&lt;/code&gt; command (among the command&amp;rsquo;s supported options)</source>
          <target state="translated">Любая опция, переданная команде &lt;code&gt;startapp&lt;/code&gt; (среди поддерживаемых опций команды)</target>
        </trans-unit>
        <trans-unit id="9e138beee32bdd3845314ecab39ac8b6f36c0256" translate="yes" xml:space="preserve">
          <source>Any option passed to the &lt;code&gt;startproject&lt;/code&gt; command (among the command&amp;rsquo;s supported options)</source>
          <target state="translated">Любая опция, переданная команде &lt;code&gt;startproject&lt;/code&gt; (среди поддерживаемых опций команды)</target>
        </trans-unit>
        <trans-unit id="5723036376b87299a4b70f4866a921fb58935b0c" translate="yes" xml:space="preserve">
          <source>Any other day is formatted according to given argument or the &lt;a href=&quot;../settings#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt; setting if no argument is given.</source>
          <target state="translated">Любой другой день форматируется в соответствии с заданным аргументом или настройкой &lt;a href=&quot;../settings#std:setting-DATE_FORMAT&quot;&gt; &lt;code&gt;DATE_FORMAT&lt;/code&gt; ,&lt;/a&gt; если аргумент не указан.</target>
        </trans-unit>
        <trans-unit id="ab61e75123334a3ff03ee2353a6d3605bcdc00e5" translate="yes" xml:space="preserve">
          <source>Any request that could be used to change the state of the system - for example, a request that makes changes in the database - should use &lt;code&gt;POST&lt;/code&gt;. &lt;code&gt;GET&lt;/code&gt; should be used only for requests that do not affect the state of the system.</source>
          <target state="translated">Любой запрос, который можно использовать для изменения состояния системы, например запрос, который вносит изменения в базу данных, должен использовать &lt;code&gt;POST&lt;/code&gt; . &lt;code&gt;GET&lt;/code&gt; следует использовать только для запросов, которые не влияют на состояние системы.</target>
        </trans-unit>
        <trans-unit id="016a35f4da2b589350ad00d87184ff46d26ee10f" translate="yes" xml:space="preserve">
          <source>Any usage of &lt;a href=&quot;../topics/signing&quot;&gt;cryptographic signing&lt;/a&gt;, unless a different key is provided.</source>
          <target state="translated">Любое использование &lt;a href=&quot;../topics/signing&quot;&gt;криптографической подписи&lt;/a&gt; , если не предоставлен другой ключ.</target>
        </trans-unit>
        <trans-unit id="1cef5f901bb8067b01d106ba21a0409d9d05625a" translate="yes" xml:space="preserve">
          <source>Any valid &lt;code&gt;Cache-Control&lt;/code&gt; response directive is valid in &lt;code&gt;cache_control()&lt;/code&gt;. Here are some more examples:</source>
          <target state="translated">Любая действительная директива ответа &lt;code&gt;Cache-Control&lt;/code&gt; действительна в &lt;code&gt;cache_control()&lt;/code&gt; . Вот еще несколько примеров:</target>
        </trans-unit>
        <trans-unit id="08019805145fd9728fd9fa82951bfad51124fe4e" translate="yes" xml:space="preserve">
          <source>Any valid template lookup is a legal grouping attribute for the regroup tag, including methods, attributes, dictionary keys and list items. For example, if the &amp;ldquo;country&amp;rdquo; field is a foreign key to a class with an attribute &amp;ldquo;description,&amp;rdquo; you could use:</source>
          <target state="translated">Любой допустимый поиск шаблона является допустимым атрибутом группировки для тега regroup, включая методы, атрибуты, ключи словаря и элементы списка. Например, если поле &amp;laquo;страна&amp;raquo; является внешним ключом класса с атрибутом &amp;laquo;описание&amp;raquo;, вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="a547bb66aef536c1758d075687b8c3c012333d15" translate="yes" xml:space="preserve">
          <source>Any variable set in the context will only be available in the same &lt;code&gt;block&lt;/code&gt; of the template in which it was assigned. This behavior is intentional; it provides a scope for variables so that they don&amp;rsquo;t conflict with context in other blocks.</source>
          <target state="translated">Любая переменная, заданная в контексте, будет доступна только в том же &lt;code&gt;block&lt;/code&gt; шаблона, в котором она была назначена. Такое поведение является преднамеренным; он предоставляет область видимости для переменных, чтобы они не конфликтовали с контекстом в других блоках.</target>
        </trans-unit>
        <trans-unit id="b921f6c9cdbfc0bbe655c78b4cff9c39227a8ad1" translate="yes" xml:space="preserve">
          <source>Any variables from &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt; take precedence over context variables from &lt;a href=&quot;../templates/api#subclassing-context-requestcontext&quot;&gt;context processors&lt;/a&gt;. For example, if your view sets the &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; attribute to &lt;a href=&quot;../contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;, the default context object name of &lt;code&gt;user&lt;/code&gt; would override the &lt;code&gt;user&lt;/code&gt; variable from the &lt;a href=&quot;../templates/api#django.contrib.auth.context_processors.auth&quot;&gt;&lt;code&gt;django.contrib.auth.context_processors.auth()&lt;/code&gt;&lt;/a&gt; context processor. Use &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_object_name&quot;&gt;&lt;code&gt;get_context_object_name()&lt;/code&gt;&lt;/a&gt; to avoid a clash.</source>
          <target state="translated">Любые переменные из &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_data&quot;&gt; &lt;code&gt;get_context_data()&lt;/code&gt; &lt;/a&gt; имеют приоритет над контекстными переменными из &lt;a href=&quot;../templates/api#subclassing-context-requestcontext&quot;&gt;контекстных процессоров&lt;/a&gt; . Например, если ваше представление устанавливает для атрибута &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; &lt;/a&gt; значение &lt;a href=&quot;../contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; , имя объекта контекста по умолчанию для &lt;code&gt;user&lt;/code&gt; переопределяет переменную &lt;code&gt;user&lt;/code&gt; из процессора контекста &lt;a href=&quot;../templates/api#django.contrib.auth.context_processors.auth&quot;&gt; &lt;code&gt;django.contrib.auth.context_processors.auth()&lt;/code&gt; &lt;/a&gt; . Используйте &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_context_object_name&quot;&gt; &lt;code&gt;get_context_object_name()&lt;/code&gt; &lt;/a&gt; чтобы избежать конфликта.</target>
        </trans-unit>
        <trans-unit id="b3a7f61859d620559f076dde253a47afc056d542" translate="yes" xml:space="preserve">
          <source>Any view can be declared async by making the callable part of it return a coroutine - commonly, this is done using &lt;code&gt;async def&lt;/code&gt;. For a function-based view, this means declaring the whole view using &lt;code&gt;async def&lt;/code&gt;. For a class-based view, this means making its &lt;code&gt;__call__()&lt;/code&gt; method an &lt;code&gt;async def&lt;/code&gt; (not its &lt;code&gt;__init__()&lt;/code&gt; or &lt;code&gt;as_view()&lt;/code&gt;).</source>
          <target state="translated">Любое представление можно объявить асинхронным, заставив вызываемую его часть возвращать сопрограмму - обычно это делается с помощью &lt;code&gt;async def&lt;/code&gt; . Для представления на основе функций это означает объявление всего представления с помощью &lt;code&gt;async def&lt;/code&gt; . Для представления на основе классов это означает, что его &lt;code&gt;__call__()&lt;/code&gt; становится &lt;code&gt;async def&lt;/code&gt; (а не его &lt;code&gt;__init__()&lt;/code&gt; или &lt;code&gt;as_view()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="33fdeb58433575a49dc08ea16ba42eea7ffe5d40" translate="yes" xml:space="preserve">
          <source>Any view you render that uses the admin templates, or extends the base admin template, should set &lt;code&gt;request.current_app&lt;/code&gt; before rendering the template. It should be set to either &lt;code&gt;self.name&lt;/code&gt; if your view is on an &lt;code&gt;AdminSite&lt;/code&gt; or &lt;code&gt;self.admin_site.name&lt;/code&gt; if your view is on a &lt;code&gt;ModelAdmin&lt;/code&gt;.</source>
          <target state="translated">Любое представление, которое вы используете, которое использует шаблоны администратора или расширяет базовый шаблон администратора, должно установить &lt;code&gt;request.current_app&lt;/code&gt; перед отображением шаблона. Он должен быть установлен в любой &lt;code&gt;self.name&lt;/code&gt; , если ваш взгляд на &lt;code&gt;AdminSite&lt;/code&gt; или &lt;code&gt;self.admin_site.name&lt;/code&gt; , если ваш взгляд на &lt;code&gt;ModelAdmin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c61ae39f874e4c3fea92eacfe4842fbe9d061b82" translate="yes" xml:space="preserve">
          <source>Any website which allows users to log in should enforce site-wide HTTPS to avoid transmitting access tokens in clear. In Django, access tokens include the login/password, the session cookie, and password reset tokens. (You can&amp;rsquo;t do much to protect password reset tokens if you&amp;rsquo;re sending them by email.)</source>
          <target state="translated">Любой веб-сайт, который позволяет пользователям входить в систему, должен применять HTTPS для всего сайта, чтобы избежать явной передачи маркеров доступа. В Django токены доступа включают в себя логин / пароль, cookie-файл сеанса и токены сброса пароля. (Вы не можете многое сделать для защиты токенов сброса пароля, если отправляете их по электронной почте.)</target>
        </trans-unit>
        <trans-unit id="482767877854b0eb1336580862dfd1a6bcdc6520" translate="yes" xml:space="preserve">
          <source>Anything with a custom &lt;code&gt;deconstruct()&lt;/code&gt; method (&lt;a href=&quot;#custom-deconstruct-method&quot;&gt;see below&lt;/a&gt;)</source>
          <target state="translated">Что-нибудь с пользовательским методом &lt;code&gt;deconstruct()&lt;/code&gt; ( &lt;a href=&quot;#custom-deconstruct-method&quot;&gt;см. Ниже&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="63593d0d5d435dfe384aa50d6b9d31230859491f" translate="yes" xml:space="preserve">
          <source>App names</source>
          <target state="translated">Имена App</target>
        </trans-unit>
        <trans-unit id="bd830f06d5852ef2c9dc8bcccf701902da95053b" translate="yes" xml:space="preserve">
          <source>Appends an item to the internal list associated with key.</source>
          <target state="translated">Добавляет элемент во внутренний список,связанный с ключом.</target>
        </trans-unit>
        <trans-unit id="aa63e6b9e38d910d3df41e7a8cac3f1bb7e475e3" translate="yes" xml:space="preserve">
          <source>Application &lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt;&lt;code&gt;labels&lt;/code&gt;&lt;/a&gt; &amp;mdash; by default the final part of the name &amp;mdash; must be unique too. For example, you can&amp;rsquo;t include both &lt;code&gt;django.contrib.auth&lt;/code&gt; and &lt;code&gt;myproject.auth&lt;/code&gt;. However, you can relabel an application with a custom configuration that defines a different &lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt; &lt;code&gt;labels&lt;/code&gt; &lt;/a&gt; приложений - по умолчанию последняя часть имени - тоже должны быть уникальными. Например, вы не можете включать как &lt;code&gt;django.contrib.auth&lt;/code&gt; ,так и &lt;code&gt;myproject.auth&lt;/code&gt; . Однако вы можете пометить приложение с пользовательской конфигурацией, которая определяет другую &lt;a href=&quot;applications#django.apps.AppConfig.label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cce177b4ed99f13272552802e5efb7cd98ca52c8" translate="yes" xml:space="preserve">
          <source>Application &lt;a href=&quot;applications#django.apps.AppConfig.name&quot;&gt;&lt;code&gt;names&lt;/code&gt;&lt;/a&gt; &amp;mdash; the dotted Python path to the application package &amp;mdash; must be unique. There is no way to include the same application twice, short of duplicating its code under another name.</source>
          <target state="translated">&lt;a href=&quot;applications#django.apps.AppConfig.name&quot;&gt; &lt;code&gt;names&lt;/code&gt; &lt;/a&gt; приложений - пунктирный путь Python к пакету приложений - должны быть уникальными. Невозможно включить одно и то же приложение дважды, если не дублировать его код под другим именем.</target>
        </trans-unit>
        <trans-unit id="1ce84d4d04cdd60bd8ab75207bda952026831b49" translate="yes" xml:space="preserve">
          <source>Application configuration</source>
          <target state="translated">Конфигурация приложения</target>
        </trans-unit>
        <trans-unit id="2d00cf03fc5959163a7822755887dc62e3a89d38" translate="yes" xml:space="preserve">
          <source>Application configuration objects store metadata for an application. Some attributes can be configured in &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclasses. Others are set by Django and read-only.</source>
          <target state="translated">Объекты конфигурации приложения хранят метаданные для приложения. Некоторые атрибуты могут быть настроены в подклассах &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; . Другие устанавливаются Django и доступны только для чтения.</target>
        </trans-unit>
        <trans-unit id="02814f34a196dfe9c70486833f53df2ac42d4ff8" translate="yes" xml:space="preserve">
          <source>Application index page</source>
          <target state="translated">Страница индекса приложений</target>
        </trans-unit>
        <trans-unit id="1fba94f3256e26835d76c00860685efd830812bb" translate="yes" xml:space="preserve">
          <source>Application labels (that is, the final part of the dotted path to application packages) &lt;em&gt;must&lt;/em&gt; be unique in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. Avoid using the same label as any of the Django &lt;a href=&quot;../ref/contrib/index&quot;&gt;contrib packages&lt;/a&gt;, for example &lt;code&gt;auth&lt;/code&gt;, &lt;code&gt;admin&lt;/code&gt;, or &lt;code&gt;messages&lt;/code&gt;.</source>
          <target state="translated">Метки приложений (то есть конечная часть пунктирного пути к пакетам приложений) &lt;em&gt;должны&lt;/em&gt; быть уникальными в &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; . Избегайте использования той же метки, что и любой из &lt;a href=&quot;../ref/contrib/index&quot;&gt;пакетов&lt;/a&gt; для &lt;code&gt;auth&lt;/code&gt; в Django , например auth , &lt;code&gt;admin&lt;/code&gt; или &lt;code&gt;messages&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb450da0c07754aedf67cd45c88b1558ac1cd645" translate="yes" xml:space="preserve">
          <source>Application names and labels must be unique in &lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Имена приложений и метки должны быть уникальными в &lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07f619ff555df81b21d8f81b05235ca1997f69ce" translate="yes" xml:space="preserve">
          <source>Application namespaces of included URLconfs can be specified in two ways.</source>
          <target state="translated">Пространства имен приложений включенных URLconfs могут быть заданы двумя способами.</target>
        </trans-unit>
        <trans-unit id="751084ce854ca0846d5944c04c858023f5b8c71c" translate="yes" xml:space="preserve">
          <source>Application registry</source>
          <target state="translated">Реестр приложений</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="2d95a17e385a3c2fb23081cac8c9295e5d6e462d" translate="yes" xml:space="preserve">
          <source>Applications can register their own actions with &lt;code&gt;manage.py&lt;/code&gt;. For example, you might want to add a &lt;code&gt;manage.py&lt;/code&gt; action for a Django app that you&amp;rsquo;re distributing. In this document, we will be building a custom &lt;code&gt;closepoll&lt;/code&gt; command for the &lt;code&gt;polls&lt;/code&gt; application from the &lt;a href=&quot;../intro/tutorial01&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">Приложения могут регистрировать свои собственные действия с &lt;code&gt;manage.py&lt;/code&gt; . Например, вы можете добавить действие &lt;code&gt;manage.py&lt;/code&gt; для распространяемого приложения Django. В этом документе мы будем создавать пользовательскую команду &lt;code&gt;closepoll&lt;/code&gt; для приложения &lt;code&gt;polls&lt;/code&gt; из &lt;a href=&quot;../intro/tutorial01&quot;&gt;учебника&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b33e5c91a312fb3c95a81e0182e2a5529ab4d2d6" translate="yes" xml:space="preserve">
          <source>Applications include some combination of models, views, templates, template tags, static files, URLs, middleware, etc. They&amp;rsquo;re generally wired into projects with the &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and optionally with other mechanisms such as URLconfs, the &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, or template inheritance.</source>
          <target state="translated">Приложения включают некоторую комбинацию моделей, представлений, шаблонов, тегов шаблонов, статических файлов, URL-адресов, промежуточного программного обеспечения и т. Д. Они обычно подключаются к проектам с параметром &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; и, при необходимости, с другими механизмами, такими как URLconfs, параметр &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; или наследование шаблонов. ,</target>
        </trans-unit>
        <trans-unit id="fcf5bca7c1c28b2d4896a4ad439584b5047d4594" translate="yes" xml:space="preserve">
          <source>Applies HTML escaping to a string (see the &lt;a href=&quot;#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter for details). This filter is applied &lt;em&gt;immediately&lt;/em&gt; and returns a new, escaped string. This is useful in the rare cases where you need multiple escaping or want to apply other filters to the escaped results. Normally, you want to use the &lt;a href=&quot;#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter.</source>
          <target state="translated">Применяет экранирование HTML к строке (подробности см. В &lt;a href=&quot;#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; -&lt;/a&gt; фильтре). Этот фильтр применяется &lt;em&gt;немедленно&lt;/em&gt; и возвращает новую, экранированную строку. Это полезно в тех редких случаях, когда вам нужно многократное экранирование или вы хотите применить другие фильтры к экранированным результатам. Обычно вы хотите использовать &lt;a href=&quot;#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; -&lt;/a&gt; фильтр.</target>
        </trans-unit>
        <trans-unit id="84df2e98f0fb6b4a2a7a0e18e64e0533759512be" translate="yes" xml:space="preserve">
          <source>Applies NFKC Unicode normalization to usernames so that visually identical characters with different Unicode code points are considered identical.</source>
          <target state="translated">Применяет нормализацию NFKC Юникод к именам пользователей таким образом,что визуально идентичные символы с разными точками кода Юникод считаются идентичными.</target>
        </trans-unit>
        <trans-unit id="97651a1b0d977cf8ff25a459e82fee2dcd0fc103" translate="yes" xml:space="preserve">
          <source>Applies the &lt;a href=&quot;#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filter to each element of a sequence. Useful in conjunction with other filters that operate on sequences, such as &lt;a href=&quot;#std:templatefilter-join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Применяет &lt;a href=&quot;#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt; фильтр к каждому элементу последовательности. Полезно в сочетании с другими фильтрами, которые работают с последовательностями, такими как &lt;a href=&quot;#std:templatefilter-join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="1e90ac2f737d779a01b5c20e7cefbbc501e3d3c1" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;escape&lt;/code&gt; to a variable that would normally have auto-escaping applied to the result will only result in one round of escaping being done. So it is safe to use this function even in auto-escaping environments. If you want multiple escaping passes to be applied, use the &lt;a href=&quot;#std:templatefilter-force_escape&quot;&gt;&lt;code&gt;force_escape&lt;/code&gt;&lt;/a&gt; filter.</source>
          <target state="translated">Применение &lt;code&gt;escape&lt;/code&gt; к переменной, к которой обычно применяется автоматическое экранирование, применяется только к одному раунду экранирования. Таким образом, безопасно использовать эту функцию даже в условиях автоматического экранирования. Если вы хотите применить несколько проходов, используйте фильтр &lt;a href=&quot;#std:templatefilter-force_escape&quot;&gt; &lt;code&gt;force_escape&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71fb7e3800ea4bff489d57465f1ad69f7ab2a7ce" translate="yes" xml:space="preserve">
          <source>Applying ASGI middleware</source>
          <target state="translated">Применение промежуточного программного обеспечения ASGI</target>
        </trans-unit>
        <trans-unit id="0ae8ad953facfec96824ae104e86374b11f31f03" translate="yes" xml:space="preserve">
          <source>Applying WSGI middleware</source>
          <target state="translated">Применение промежуточного программного обеспечения WSGI</target>
        </trans-unit>
        <trans-unit id="9bab876cb9ceac2f91928039efab65ebe5cbf56f" translate="yes" xml:space="preserve">
          <source>Applying a &amp;ldquo;plain&amp;rdquo; migration that adds a unique non-nullable field to a table with existing rows will raise an error because the value used to populate existing rows is generated only once, thus breaking the unique constraint.</source>
          <target state="translated">Применение &amp;laquo;простой&amp;raquo; миграции, которая добавляет уникальное ненулевое поле в таблицу с существующими строками, вызовет ошибку, поскольку значение, используемое для заполнения существующих строк, генерируется только один раз, тем самым нарушая ограничение уникальности.</target>
        </trans-unit>
        <trans-unit id="4fb043dc44486291dc3527759033c8e5b635a5ce" translate="yes" xml:space="preserve">
          <source>Applying further encoding (such as &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote&quot;&gt;&lt;code&gt;urllib.parse.quote()&lt;/code&gt;&lt;/a&gt;) to the output of &lt;code&gt;reverse()&lt;/code&gt; may produce undesirable results.</source>
          <target state="translated">Применение дальнейшего кодирования (такого как &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote&quot;&gt; &lt;code&gt;urllib.parse.quote()&lt;/code&gt; &lt;/a&gt; ) к выводу &lt;code&gt;reverse()&lt;/code&gt; может привести к нежелательным результатам.</target>
        </trans-unit>
        <trans-unit id="1fb0e010e8f9e5d7e29b766c8e457da1478cbaa4" translate="yes" xml:space="preserve">
          <source>Appropriate use of field types.</source>
          <target state="translated">Соответствующее использование типов полей.</target>
        </trans-unit>
        <trans-unit id="ab3c3c1852b7964fa4b3a4d4233e6676835a9dae" translate="yes" xml:space="preserve">
          <source>Apps &lt;a href=&quot;overview#test-case-serialized-rollback&quot;&gt;will not see their data reloaded&lt;/a&gt;; if you need this functionality (for example, third-party apps should enable this) you can set &lt;code&gt;serialized_rollback = True&lt;/code&gt; inside the &lt;code&gt;TestCase&lt;/code&gt; body.</source>
          <target state="translated">Приложения &lt;a href=&quot;overview#test-case-serialized-rollback&quot;&gt;не увидят, что их данные перезагружены&lt;/a&gt; ; если вам нужна эта функция (например, сторонние приложения должны включить ее), вы можете установить &lt;code&gt;serialized_rollback = True&lt;/code&gt; в теле &lt;code&gt;TestCase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a272d52149333fb6693bfc9f661e41c2ea99cab6" translate="yes" xml:space="preserve">
          <source>Apps without migrations are also listed, but have &lt;code&gt;(no migrations)&lt;/code&gt; printed under them.</source>
          <target state="translated">Приложения без миграций также перечислены, но под ними &lt;code&gt;(no migrations)&lt;/code&gt; напечатаны.</target>
        </trans-unit>
        <trans-unit id="40df94333b003783fd4708f6c30ce7e977931fb2" translate="yes" xml:space="preserve">
          <source>Apps without migrations must not have relations (&lt;code&gt;ForeignKey&lt;/code&gt;, &lt;code&gt;ManyToManyField&lt;/code&gt;, etc.) to apps with migrations. Sometimes it may work, but it&amp;rsquo;s not supported.</source>
          <target state="translated">Приложения без миграции не должны иметь отношения ( &lt;code&gt;ForeignKey&lt;/code&gt; , &lt;code&gt;ManyToManyField&lt;/code&gt; и т. Д.) К приложениям с миграциями. Иногда это может работать, но это не поддерживается.</target>
        </trans-unit>
        <trans-unit id="3a448e7c70834c89c84d512849750974b243b0c1" translate="yes" xml:space="preserve">
          <source>Arbitrary class instances (e.g. &lt;code&gt;MyClass(4.3, 5.7)&lt;/code&gt;)</source>
          <target state="translated">Произвольные экземпляры классов (например, &lt;code&gt;MyClass(4.3, 5.7)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b7921b5d129746e8520dbca543895e37d9e3c2ad" translate="yes" xml:space="preserve">
          <source>Arbitrary keyword arguments can be passed in a dictionary to the target view. We aren&amp;rsquo;t going to use this feature of Django in the tutorial.</source>
          <target state="translated">Произвольные ключевые аргументы могут быть переданы в словаре в целевое представление. Мы не собираемся использовать эту функцию Django в этом уроке.</target>
        </trans-unit>
        <trans-unit id="4538085594fa71765ec146351dc02cd2a62a49b6" translate="yes" xml:space="preserve">
          <source>Are marked as &amp;ldquo;internal&amp;rdquo; (as opposed to &amp;ldquo;EXTERNAL&amp;rdquo;) in &lt;a href=&quot;../topics/logging#django.utils.log.AdminEmailHandler&quot;&gt;&lt;code&gt;AdminEmailHandler&lt;/code&gt;&lt;/a&gt; emails.</source>
          <target state="translated">&lt;a href=&quot;../topics/logging#django.utils.log.AdminEmailHandler&quot;&gt; &lt;code&gt;AdminEmailHandler&lt;/code&gt; &lt;/a&gt; как &amp;laquo;внутренние&amp;raquo; (в отличие от &amp;laquo;ВНЕШНИЕ&amp;raquo;) в электронных письмах AdminEmailHandler .</target>
        </trans-unit>
        <trans-unit id="0a712e2d33d70b1022cfdcb9a2ae180418d15103" translate="yes" xml:space="preserve">
          <source>Are you new to Django or to programming? This is the place to start!</source>
          <target state="translated">Вы новичок в Джанго или в программировании? Это место для начала!</target>
        </trans-unit>
        <trans-unit id="3ede565cc656a4a577574a466fa3c9ef2c776096" translate="yes" xml:space="preserve">
          <source>Argon2</source>
          <target state="translated">Argon2</target>
        </trans-unit>
        <trans-unit id="2b8852ca2366a97e55c0d2d71ee2669e30845b41" translate="yes" xml:space="preserve">
          <source>Argon2 has three attributes that can be customized:</source>
          <target state="translated">Аргон2 имеет три атрибута,которые можно настроить:</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="67c7d44f963dd2bd2d457a711009398a73deb55b" translate="yes" xml:space="preserve">
          <source>Arguments &lt;code&gt;formset&lt;/code&gt;, &lt;code&gt;extra&lt;/code&gt;, &lt;code&gt;can_delete&lt;/code&gt;, &lt;code&gt;can_order&lt;/code&gt;, &lt;code&gt;max_num&lt;/code&gt;, &lt;code&gt;validate_max&lt;/code&gt;, &lt;code&gt;min_num&lt;/code&gt;, and &lt;code&gt;validate_min&lt;/code&gt; are passed through to &lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;formsets&lt;/a&gt; for details.</source>
          <target state="translated">Аргументы &lt;code&gt;formset&lt;/code&gt; , &lt;code&gt;extra&lt;/code&gt; , &lt;code&gt;can_delete&lt;/code&gt; , &lt;code&gt;can_order&lt;/code&gt; , &lt;code&gt;max_num&lt;/code&gt; , &lt;code&gt;validate_max&lt;/code&gt; , &lt;code&gt;min_num&lt;/code&gt; и &lt;code&gt;validate_min&lt;/code&gt; передаются в &lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt; . См. Подробности в &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;наборах форм&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58197fa61986afbdda62ef537066c9d7d284ce51" translate="yes" xml:space="preserve">
          <source>Arguments &lt;code&gt;formset&lt;/code&gt;, &lt;code&gt;extra&lt;/code&gt;, &lt;code&gt;max_num&lt;/code&gt;, &lt;code&gt;can_order&lt;/code&gt;, &lt;code&gt;can_delete&lt;/code&gt; and &lt;code&gt;validate_max&lt;/code&gt; are passed through to &lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;formsets&lt;/a&gt; for details.</source>
          <target state="translated">Аргументы &lt;code&gt;formset&lt;/code&gt; , &lt;code&gt;extra&lt;/code&gt; , &lt;code&gt;max_num&lt;/code&gt; , &lt;code&gt;can_order&lt;/code&gt; , &lt;code&gt;can_delete&lt;/code&gt; и &lt;code&gt;validate_max&lt;/code&gt; передаются в &lt;a href=&quot;formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt; . Смотрите &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;формы&lt;/a&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="8034fbe6240dce8c15d34b6c1adfb6d842f7d740" translate="yes" xml:space="preserve">
          <source>Arguments &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;form&lt;/code&gt;, &lt;code&gt;fields&lt;/code&gt;, &lt;code&gt;exclude&lt;/code&gt;, &lt;code&gt;formfield_callback&lt;/code&gt;, &lt;code&gt;widgets&lt;/code&gt;, &lt;code&gt;localized_fields&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;help_texts&lt;/code&gt;, &lt;code&gt;error_messages&lt;/code&gt;, and &lt;code&gt;field_classes&lt;/code&gt; are all passed through to &lt;a href=&quot;#django.forms.models.modelform_factory&quot;&gt;&lt;code&gt;modelform_factory()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Аргументы &lt;code&gt;model&lt;/code&gt; , &lt;code&gt;form&lt;/code&gt; , &lt;code&gt;fields&lt;/code&gt; , &lt;code&gt;exclude&lt;/code&gt; , &lt;code&gt;formfield_callback&lt;/code&gt; , &lt;code&gt;widgets&lt;/code&gt; , &lt;code&gt;localized_fields&lt;/code&gt; , &lt;code&gt;labels&lt;/code&gt; , &lt;code&gt;help_texts&lt;/code&gt; , &lt;code&gt;error_messages&lt;/code&gt; и &lt;code&gt;field_classes&lt;/code&gt; передаются в &lt;a href=&quot;#django.forms.models.modelform_factory&quot;&gt; &lt;code&gt;modelform_factory()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1cff7b9a2f029cdb3903bd7fc9052c131b2a51" translate="yes" xml:space="preserve">
          <source>Arguments passed into &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; will be assigned onto the instance that is used to service a request. Using the previous example, this means that every request on &lt;code&gt;MyView&lt;/code&gt; is able to use &lt;code&gt;self.size&lt;/code&gt;. Arguments must correspond to attributes that already exist on the class (return &lt;code&gt;True&lt;/code&gt; on a &lt;code&gt;hasattr&lt;/code&gt; check).</source>
          <target state="translated">Аргументы, переданные в &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; будут назначены экземпляру, который используется для обслуживания запроса. Используя предыдущий пример, это означает, что каждый запрос в &lt;code&gt;MyView&lt;/code&gt; может использовать &lt;code&gt;self.size&lt;/code&gt; . Аргументы должны соответствовать атрибутам, которые уже существуют в классе (возвращать &lt;code&gt;True&lt;/code&gt; при проверке &lt;code&gt;hasattr&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f078c1fdd22e76807380df315056c024853f7857" translate="yes" xml:space="preserve">
          <source>Arguments passed to a view are shared between every instance of a view. This means that you shouldn&amp;rsquo;t use a list, dictionary, or any other mutable object as an argument to a view. If you do and the shared object is modified, the actions of one user visiting your view could have an effect on subsequent users visiting the same view.</source>
          <target state="translated">Аргументы, передаваемые представлению, совместно используются каждым экземпляром представления. Это означает, что вы не должны использовать список, словарь или любой другой изменяемый объект в качестве аргумента для представления. Если вы это сделаете, и общий объект будет изменен, действия одного пользователя, посещающего ваше представление, могут повлиять на последующих пользователей, посещающих то же представление.</target>
        </trans-unit>
        <trans-unit id="b605e3fad4f4e7cae16a126b8f64ee64d9e62bd8" translate="yes" xml:space="preserve">
          <source>Arguments sent with this signal:</source>
          <target state="translated">Аргументы,отправленные с этим сигналом:</target>
        </trans-unit>
        <trans-unit id="88fea68375f653adcd5dce7d298e6094ef9a8491" translate="yes" xml:space="preserve">
          <source>Arguments that are sent with this signal:</source>
          <target state="translated">Аргументы,которые посылаются с этим сигналом:</target>
        </trans-unit>
        <trans-unit id="77a319939251fa1d350565160d40ce342e3a2bdc" translate="yes" xml:space="preserve">
          <source>Arithmetic with &lt;code&gt;DurationField&lt;/code&gt; works in most cases. However on all databases other than PostgreSQL, comparing the value of a &lt;code&gt;DurationField&lt;/code&gt; to arithmetic on &lt;code&gt;DateTimeField&lt;/code&gt; instances will not work as expected.</source>
          <target state="translated">Арифметика с &lt;code&gt;DurationField&lt;/code&gt; работает в большинстве случаев. Однако во всех базах данных, кроме PostgreSQL, сравнение значения &lt;code&gt;DurationField&lt;/code&gt; с арифметикой в экземплярах &lt;code&gt;DateTimeField&lt;/code&gt; не будет работать должным образом.</target>
        </trans-unit>
        <trans-unit id="fd9b41cfd3e7dff29518994e0b9851065abeabf4" translate="yes" xml:space="preserve">
          <source>Article objects have access to their related Reporter objects:</source>
          <target state="translated">Объекты статьи имеют доступ к связанным с ними объектам Reporter:</target>
        </trans-unit>
        <trans-unit id="803ebeca0014020157039a56b7c955bf6bab52e0" translate="yes" xml:space="preserve">
          <source>As Python&amp;rsquo;s normal &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; class implements assertion methods such as &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTrue&quot;&gt;&lt;code&gt;assertTrue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;, Django&amp;rsquo;s custom &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; class provides a number of custom assertion methods that are useful for testing Web applications:</source>
          <target state="translated">Так как обычный класс Python &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; реализует методы утверждения, такие как &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTrue&quot;&gt; &lt;code&gt;assertTrue()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt; , пользовательский класс &lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; Django предоставляет ряд пользовательских методов утверждения, которые полезны для тестирования веб-приложений:</target>
        </trans-unit>
        <trans-unit id="a91d2631645bc3353f670fdb4233c68c7ae8c704" translate="yes" xml:space="preserve">
          <source>As a consequence, if you&amp;rsquo;re using PostgreSQL, you can switch between &lt;code&gt;USE_TZ
= False&lt;/code&gt; and &lt;code&gt;USE_TZ = True&lt;/code&gt; freely. The database connection&amp;rsquo;s time zone will be set to &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;UTC&lt;/code&gt; respectively, so that Django obtains correct datetimes in all cases. You don&amp;rsquo;t need to perform any data conversions.</source>
          <target state="translated">Как следствие, если вы используете PostgreSQL, вы можете &lt;code&gt;USE_TZ = False&lt;/code&gt; переключаться между USE_TZ = False и &lt;code&gt;USE_TZ = True&lt;/code&gt; . Часовой пояс соединения с базой данных будет установлен на &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt; или &lt;code&gt;UTC&lt;/code&gt; соответственно, так что Django будет получать правильные даты и времени во всех случаях. Вам не нужно выполнять какие-либо преобразования данных.</target>
        </trans-unit>
        <trans-unit id="4cb03d8e9a6467edf4c13eac5fd28360a8fcfcb1" translate="yes" xml:space="preserve">
          <source>As a contributor, you can help us keep the Django community open and inclusive. Please read and follow our &lt;a href=&quot;https://www.djangoproject.com/conduct/&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">Как участник, вы можете помочь нам сохранить сообщество Django открытым и инклюзивным. Пожалуйста, прочитайте и следуйте нашему &lt;a href=&quot;https://www.djangoproject.com/conduct/&quot;&gt;Кодексу поведения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd4ac7c4d6c742fe78034f36f942a1b187ad4bf2" translate="yes" xml:space="preserve">
          <source>As a convenience when no lookup type is provided (like in &lt;code&gt;Entry.objects.get(id=14)&lt;/code&gt;) the lookup type is assumed to be &lt;a href=&quot;#std:fieldlookup-exact&quot;&gt;&lt;code&gt;exact&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для удобства, когда не указан тип поиска (как в &lt;code&gt;Entry.objects.get(id=14)&lt;/code&gt; ), тип поиска считается &lt;a href=&quot;#std:fieldlookup-exact&quot;&gt; &lt;code&gt;exact&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5d3a6963dda7727f66b10430d291ec5d9a69966" translate="yes" xml:space="preserve">
          <source>As a convenience, Django comes with a view, &lt;a href=&quot;#django.views.i18n.set_language&quot;&gt;&lt;code&gt;django.views.i18n.set_language()&lt;/code&gt;&lt;/a&gt;, that sets a user&amp;rsquo;s language preference and redirects to a given URL or, by default, back to the previous page.</source>
          <target state="translated">Для удобства Django поставляется с представлением &lt;a href=&quot;#django.views.i18n.set_language&quot;&gt; &lt;code&gt;django.views.i18n.set_language()&lt;/code&gt; &lt;/a&gt; , которое устанавливает языковые предпочтения пользователя и перенаправляет его на заданный URL-адрес или, по умолчанию, обратно на предыдущую страницу.</target>
        </trans-unit>
        <trans-unit id="a148d3a8c6ce021a1fb375d505172fcf07511531" translate="yes" xml:space="preserve">
          <source>As a convenience, Django provides a way to test whether the user&amp;rsquo;s browser accepts cookies. Call the &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.set_test_cookie&quot;&gt;&lt;code&gt;set_test_cookie()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;request.session&lt;/code&gt; in a view, and call &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.test_cookie_worked&quot;&gt;&lt;code&gt;test_cookie_worked()&lt;/code&gt;&lt;/a&gt; in a subsequent view &amp;ndash; not in the same view call.</source>
          <target state="translated">Для удобства Django предоставляет способ проверить, принимает ли браузер пользователя файлы cookie. Вызов &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.set_test_cookie&quot;&gt; &lt;code&gt;set_test_cookie()&lt;/code&gt; &lt;/a&gt; метод &lt;code&gt;request.session&lt;/code&gt; в представлении, и вызов &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.test_cookie_worked&quot;&gt; &lt;code&gt;test_cookie_worked()&lt;/code&gt; &lt;/a&gt; в последующем зрении - не в том же виде вызова.</target>
        </trans-unit>
        <trans-unit id="f2fac89610d998a78384559c126919b128271b4f" translate="yes" xml:space="preserve">
          <source>As a convenience, each message includes, in the form of a comment line prefixed with &lt;code&gt;#&lt;/code&gt; and located above the &lt;code&gt;msgid&lt;/code&gt; line, the filename and line number from which the translation string was gleaned.</source>
          <target state="translated">Для удобства, каждое сообщение включает в себя, в виде строки комментария с префиксом &lt;code&gt;#&lt;/code&gt; и расположенной выше &lt;code&gt;msgid&lt;/code&gt; линии, имя файла и номер строки , из которого подбирала строка перевода.</target>
        </trans-unit>
        <trans-unit id="64031d0a37856a43f293b7ae4f2de01aeeaebdd4" translate="yes" xml:space="preserve">
          <source>As a convenience, the &lt;code&gt;HttpRequest&lt;/code&gt; object is passed to the &lt;code&gt;lookups&lt;/code&gt; and &lt;code&gt;queryset&lt;/code&gt; methods, for example:</source>
          <target state="translated">Для удобства объект &lt;code&gt;HttpRequest&lt;/code&gt; передается методам &lt;code&gt;lookups&lt;/code&gt; и &lt;code&gt;queryset&lt;/code&gt; запросов , например:</target>
        </trans-unit>
        <trans-unit id="55ecd310b00d3a2bedf330c88278908e0dba94f8" translate="yes" xml:space="preserve">
          <source>As a custom field author, you don&amp;rsquo;t need to care about the first two values; the base &lt;code&gt;Field&lt;/code&gt; class has all the code to work out the field&amp;rsquo;s attribute name and import path. You do, however, have to care about the positional and keyword arguments, as these are likely the things you are changing.</source>
          <target state="translated">Как автор пользовательских полей, вам не нужно заботиться о первых двух значениях; базовый класс &lt;code&gt;Field&lt;/code&gt; имеет весь код для определения имени атрибута поля и пути импорта. Однако вам нужно позаботиться о позиционных аргументах и ​​аргументах с ключевыми словами, так как это, вероятно, то, что вы меняете.</target>
        </trans-unit>
        <trans-unit id="d5d0254c52feffc267681ce4c32d47c81002ce3c" translate="yes" xml:space="preserve">
          <source>As a general rule, &lt;code&gt;to_python()&lt;/code&gt; should deal gracefully with any of the following arguments:</source>
          <target state="translated">Как правило, &lt;code&gt;to_python()&lt;/code&gt; должен изящно работать с любым из следующих аргументов:</target>
        </trans-unit>
        <trans-unit id="162f6d794632acfbba6013b0fb22a35fd35d7af3" translate="yes" xml:space="preserve">
          <source>As a general rule, if you can provide functions to compute &lt;em&gt;both&lt;/em&gt; the ETag and the last modified time, you should do so. You don&amp;rsquo;t know which headers any given HTTP client will send you, so be prepared to handle both. However, sometimes only one value is easy to compute and Django provides decorators that handle only ETag or only last-modified computations.</source>
          <target state="translated">Как правило, если вы можете предоставить функции для вычисления &lt;em&gt;как&lt;/em&gt; в ETag и время последнего изменения, вы должны сделать это. Вы не знаете, какие заголовки отправит вам любой данный HTTP-клиент, поэтому будьте готовы обрабатывать оба. Однако иногда легко вычислить только одно значение, и Django предоставляет декораторы, которые обрабатывают только ETag или только последние измененные вычисления.</target>
        </trans-unit>
        <trans-unit id="b4c7b21bf36c481e9159296ec7557ce258ac1e99" translate="yes" xml:space="preserve">
          <source>As a result, each &lt;code&gt;Entry&lt;/code&gt; object will have an extra attribute, &lt;code&gt;is_recent&lt;/code&gt;, a boolean representing whether the entry&amp;rsquo;s &lt;code&gt;pub_date&lt;/code&gt; is greater than Jan. 1, 2006.</source>
          <target state="translated">В результате каждый объект &lt;code&gt;Entry&lt;/code&gt; будет иметь дополнительный атрибут &lt;code&gt;is_recent&lt;/code&gt; , логическое значение, представляющее, больше ли значение &lt;code&gt;pub_date&lt;/code&gt; записи, чем 1 января 2006 года.</target>
        </trans-unit>
        <trans-unit id="e8b143dadf99761dc7a79ebf9d0877018fc623ba" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, only capture the values the view needs to work with and use non-capturing arguments when the regular expression needs an argument but the view ignores it.</source>
          <target state="translated">Как правило,только захват значений,с которыми представление должно работать,и использование не захватывающих аргументов,когда регулярному выражению нужен аргумент,но представление игнорирует его.</target>
        </trans-unit>
        <trans-unit id="f9c9f4b6a6f224e6e33f22feaf9223aac12b41e7" translate="yes" xml:space="preserve">
          <source>As a security measure, Django will &lt;em&gt;not&lt;/em&gt; include settings that might be sensitive, such as &lt;a href=&quot;#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;. Specifically, it will exclude any setting whose name includes any of the following:</source>
          <target state="translated">В качестве меры безопасности Django &lt;em&gt;не&lt;/em&gt; будет включать настройки, которые могут быть конфиденциальными, такие как &lt;a href=&quot;#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; . В частности, он исключит любой параметр, имя которого включает в себя любое из следующего:</target>
        </trans-unit>
        <trans-unit id="84cae640195b75a5b531e4722d3e827ad162687b" translate="yes" xml:space="preserve">
          <source>As a shortcut, the default cache is available as &lt;code&gt;django.core.cache.cache&lt;/code&gt;:</source>
          <target state="translated">В качестве ярлыка кэш по умолчанию доступен как &lt;code&gt;django.core.cache.cache&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d14d8992d9e997382b4e9e188ab3c54a0fe914b1" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the convenient &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">В качестве ярлыка вы можете использовать удобный декоратор &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="65dec2b26adfff7621033fdea8385bf825f6f9f8" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the convenient &lt;code&gt;user_passes_test&lt;/code&gt; decorator which performs a redirect when the callable returns &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">В качестве ярлыка вы можете использовать удобный декоратор &lt;code&gt;user_passes_test&lt;/code&gt; , который выполняет перенаправление, когда вызываемый возвращает &lt;code&gt;False&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3282f21de03e9905c2d09d969f11529dd59351e4" translate="yes" xml:space="preserve">
          <source>As a special case, you are also permitted to use &lt;code&gt;last&lt;/code&gt; as a value for &lt;code&gt;page&lt;/code&gt;:</source>
          <target state="translated">В особом случае вам также разрешено использовать &lt;code&gt;last&lt;/code&gt; в качестве значения для &lt;code&gt;page&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="060ec047b1ef0821812a28018949722fd546d7a8" translate="yes" xml:space="preserve">
          <source>As above, it is recommended to pass a list of &lt;code&gt;ValidationError&lt;/code&gt; instances with &lt;code&gt;code&lt;/code&gt;s and &lt;code&gt;params&lt;/code&gt; but a list of strings will also work:</source>
          <target state="translated">Как и выше, рекомендуется передавать список экземпляров &lt;code&gt;ValidationError&lt;/code&gt; с &lt;code&gt;code&lt;/code&gt; s и &lt;code&gt;params&lt;/code&gt; , но также будет работать список строк:</target>
        </trans-unit>
        <trans-unit id="1f50ad2b65a9d524066daa50cc71bac67fe4f013" translate="yes" xml:space="preserve">
          <source>As above: the class of the user that just logged out or &lt;code&gt;None&lt;/code&gt; if the user was not authenticated.</source>
          <target state="translated">Как и выше: класс пользователя, который только что вышел из системы, или &lt;code&gt;None&lt;/code&gt; , если пользователь не прошел аутентификацию.</target>
        </trans-unit>
        <trans-unit id="8bb130c31241b060e083cd4e48479a7cdb3daa85" translate="yes" xml:space="preserve">
          <source>As above: the model class that just had an instance created.</source>
          <target state="translated">Как и выше:класс модели,который только что создал экземпляр.</target>
        </trans-unit>
        <trans-unit id="e9b3807dca5d7355faf6db7cfede8eab86a99e6a" translate="yes" xml:space="preserve">
          <source>As always, you should document your field type, so users will know what it is. In addition to providing a docstring for it, which is useful for developers, you can also allow users of the admin app to see a short description of the field type via the &lt;a href=&quot;../ref/contrib/admin/admindocs&quot;&gt;django.contrib.admindocs&lt;/a&gt; application. To do this provide descriptive text in a &lt;a href=&quot;../ref/models/fields#django.db.models.Field.description&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; class attribute of your custom field. In the above example, the description displayed by the &lt;code&gt;admindocs&lt;/code&gt; application for a &lt;code&gt;HandField&lt;/code&gt; will be &amp;lsquo;A hand of cards (bridge style)&amp;rsquo;.</source>
          <target state="translated">Как всегда, вы должны документировать свой тип поля, чтобы пользователи знали, что это такое. Помимо предоставления строки документации для него, которая полезна для разработчиков, вы также можете разрешить пользователям приложения администратора просматривать краткое описание типа поля через приложение &lt;a href=&quot;../ref/contrib/admin/admindocs&quot;&gt;django.contrib.admindocs&lt;/a&gt; . Для этого предоставьте описательный текст в атрибуте класса &lt;a href=&quot;../ref/models/fields#django.db.models.Field.description&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt; вашего настраиваемого поля. В приведенном выше примере описание, отображаемое приложением &lt;code&gt;admindocs&lt;/code&gt; для &lt;code&gt;HandField&lt;/code&gt; , будет &amp;laquo;Рука карт (стиль бриджа)&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4483ceedafba3827803d0c6b7e6be9eb9bd58787" translate="yes" xml:space="preserve">
          <source>As an example, let&amp;rsquo;s make an operation that loads PostgreSQL extensions (which contain some of PostgreSQL&amp;rsquo;s more exciting features). Since there&amp;rsquo;s no model state changes, all it does is run one command:</source>
          <target state="translated">В качестве примера, давайте сделаем операцию, которая загружает расширения PostgreSQL (которые содержат некоторые из более интересных функций PostgreSQL). Поскольку изменения состояния модели не происходит, все, что он делает, это запускает одну команду:</target>
        </trans-unit>
        <trans-unit id="a2f0ca9775bd19abb637e2e3b74d35f61538732e" translate="yes" xml:space="preserve">
          <source>As an example, the login form for the Django admin contains several &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements: one of &lt;code&gt;type=&quot;text&quot;&lt;/code&gt; for the username, one of &lt;code&gt;type=&quot;password&quot;&lt;/code&gt; for the password, and one of &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; for the &amp;ldquo;Log in&amp;rdquo; button. It also contains some hidden text fields that the user doesn&amp;rsquo;t see, which Django uses to determine what to do next.</source>
          <target state="translated">Например, форма входа для администратора Django содержит несколько элементов &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; : один из &lt;code&gt;type=&quot;text&quot;&lt;/code&gt; для имени пользователя, один из &lt;code&gt;type=&quot;password&quot;&lt;/code&gt; для пароля и один из &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; для Кнопка &amp;laquo;Войти&amp;raquo;. Он также содержит некоторые скрытые текстовые поля, которые пользователь не видит, которые Django использует, чтобы определить, что делать дальше.</target>
        </trans-unit>
        <trans-unit id="7bbf58fa832a1ed4496f565aefc0d8b472ea5042" translate="yes" xml:space="preserve">
          <source>As an example, though, here&amp;rsquo;s what a fixture for a &lt;code&gt;Person&lt;/code&gt; model might look like in JSON:</source>
          <target state="translated">Однако, в качестве примера, вот как может выглядеть приспособление для модели &lt;code&gt;Person&lt;/code&gt; в JSON:</target>
        </trans-unit>
        <trans-unit id="5c2023817dac1207534202df5e2018211834ce8f" translate="yes" xml:space="preserve">
          <source>As an optimization, Django only flushes the &lt;code&gt;default&lt;/code&gt; database at the start of each test run. If your setup contains multiple databases, and you have a test that requires every database to be clean, you can use the &lt;code&gt;databases&lt;/code&gt; attribute on the test suite to request extra databases to be flushed.</source>
          <target state="translated">В качестве оптимизации Django очищает базу данных по &lt;code&gt;default&lt;/code&gt; в начале каждого запуска теста. Если ваша установка содержит несколько баз данных, и у вас есть тест, который требует очистки каждой базы данных, вы можете использовать атрибут &lt;code&gt;databases&lt;/code&gt; в наборе тестов, чтобы запросить сброс дополнительных баз данных.</target>
        </trans-unit>
        <trans-unit id="cc354dd23505586b5af6774ee796c5ecb636150c" translate="yes" xml:space="preserve">
          <source>As currently implemented, setting &lt;code&gt;auto_now&lt;/code&gt; or &lt;code&gt;auto_now_add&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; will cause the field to have &lt;code&gt;editable=False&lt;/code&gt; and &lt;code&gt;blank=True&lt;/code&gt; set.</source>
          <target state="translated">Как в настоящее время реализовано, установка &lt;code&gt;auto_now&lt;/code&gt; или &lt;code&gt;auto_now_add&lt;/code&gt; в &lt;code&gt;True&lt;/code&gt; приведет к тому, что поле будет иметь значение &lt;code&gt;editable=False&lt;/code&gt; и &lt;code&gt;blank=True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65a69528a8ff360aa751b0174a6a42ab5e776f10" translate="yes" xml:space="preserve">
          <source>As described above in &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt;&lt;code&gt;get_or_create()&lt;/code&gt;&lt;/a&gt;, this method is prone to a race-condition which can result in multiple rows being inserted simultaneously if uniqueness is not enforced at the database level.</source>
          <target state="translated">Как описано выше в &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt; &lt;code&gt;get_or_create()&lt;/code&gt; &lt;/a&gt; , этот метод подвержен гоночному состоянию, которое может привести к одновременной вставке нескольких строк, если уникальность не обеспечивается на уровне базы данных.</target>
        </trans-unit>
        <trans-unit id="c71ae107d635a60941fd857f322a439c4135e3ff" translate="yes" xml:space="preserve">
          <source>As described in the previous section, if a test run is forcefully interrupted, the test database may not be destroyed. On the next run, you&amp;rsquo;ll be asked whether you want to reuse or destroy the database. Use the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-noinput&quot;&gt;&lt;code&gt;test
--noinput&lt;/code&gt;&lt;/a&gt; option to suppress that prompt and automatically destroy the database. This can be useful when running tests on a continuous integration server where tests may be interrupted by a timeout, for example.</source>
          <target state="translated">Как описано в предыдущем разделе, если тестовый запуск принудительно прерван, тестовая база данных не может быть уничтожена. При следующем запуске вас спросят, хотите ли вы повторно использовать или уничтожить базу данных. Используйте параметр &lt;a href=&quot;../../ref/django-admin#cmdoption-test-noinput&quot;&gt; &lt;code&gt;test --noinput&lt;/code&gt; &lt;/a&gt; чтобы подавить это приглашение и автоматически уничтожить базу данных. Это может быть полезно при запуске тестов на сервере непрерывной интеграции, где тесты могут быть прерваны, например, по таймауту.</target>
        </trans-unit>
        <trans-unit id="797408375ed7da94f4e17bb1cfa01a5cf8e7ef8d" translate="yes" xml:space="preserve">
          <source>As described in the previous two sections, the cache key provided by a user is not used verbatim &amp;ndash; it is combined with the cache prefix and key version to provide a final cache key. By default, the three parts are joined using colons to produce a final string:</source>
          <target state="translated">Как описано в предыдущих двух разделах, ключ кеша, предоставленный пользователем, не используется дословно - он объединяется с префиксом кеша и версией ключа для предоставления окончательного ключа кеша. По умолчанию три части объединяются с помощью двоеточий для получения окончательной строки:</target>
        </trans-unit>
        <trans-unit id="4b7ec2ed3acca43c13049b422fb538687f6f7ecb" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;../security#sql-injection-protection&quot;&gt;SQL injection protection&lt;/a&gt;, using the &lt;code&gt;params&lt;/code&gt; argument and leaving the placeholders unquoted protects you from &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL injection attacks&lt;/a&gt;, a common exploit where attackers inject arbitrary SQL into your database. If you use string interpolation or quote the placeholder, you&amp;rsquo;re at risk for SQL injection.</source>
          <target state="translated">Как обсуждалось в &lt;a href=&quot;../security#sql-injection-protection&quot;&gt;защите SQL-инъекций&lt;/a&gt; , использование аргумента &lt;code&gt;params&lt;/code&gt; и отсутствие кавычек защищает вас от &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;атак SQL-инъекций&lt;/a&gt; , которые часто используются злоумышленниками для внедрения произвольного SQL в вашу базу данных. Если вы используете интерполяцию строк или заключаете в кавычки заполнитель, вы подвергаетесь риску внедрения SQL.</target>
        </trans-unit>
        <trans-unit id="20b88726251efae057f2600361cd15353b9aefaf" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;../topics/migrations#migrations-removing-model-fields&quot;&gt;removing fields&lt;/a&gt;, you must retain the original &lt;code&gt;CustomCharField&lt;/code&gt; class as long as you have migrations that reference it.</source>
          <target state="translated">Как обсуждалось при &lt;a href=&quot;../topics/migrations#migrations-removing-model-fields&quot;&gt;удалении полей&lt;/a&gt; , вы должны сохранить исходный класс &lt;code&gt;CustomCharField&lt;/code&gt; , пока у вас есть миграции, которые ссылаются на него.</target>
        </trans-unit>
        <trans-unit id="41bf8726ebe535d8ba58d750aa07cec91ebd0cc7" translate="yes" xml:space="preserve">
          <source>As explained in &amp;ldquo;Outputting forms as HTML&amp;rdquo; above, the default label for a &lt;code&gt;Field&lt;/code&gt; is generated from the field name by converting all underscores to spaces and upper-casing the first letter. Specify &lt;code&gt;label&lt;/code&gt; if that default behavior doesn&amp;rsquo;t result in an adequate label.</source>
          <target state="translated">Как описано выше в разделе &amp;laquo;Вывод форм в виде HTML&amp;raquo;, метка по умолчанию для &lt;code&gt;Field&lt;/code&gt; генерируется из имени поля путем преобразования всех подчеркиваний в пробелы и ввода первой буквы в верхнем регистре. Укажите &lt;code&gt;label&lt;/code&gt; если это поведение по умолчанию не приводит к адекватной метке.</target>
        </trans-unit>
        <trans-unit id="8befa0db1dba58966a2414b9768c2deffe876e03" translate="yes" xml:space="preserve">
          <source>As explained in the documentation of &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt;, Django sets environment variables so that its process runs in the default time zone. This happens regardless of the value of &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; and of the current time zone.</source>
          <target state="translated">Как объясняется в документации к &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt; , Django устанавливает переменные окружения, чтобы его процесс выполнялся в часовом поясе по умолчанию. Это происходит независимо от значения &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt; и текущего часового пояса.</target>
        </trans-unit>
        <trans-unit id="5ed84b5ba0ead8c1fa04f36e7e7bc74c3791dacc" translate="yes" xml:space="preserve">
          <source>As general programming practice, this goes without saying. Find out &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;what queries you are doing and what they are costing you&lt;/a&gt;. Use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt;&lt;code&gt;QuerySet.explain()&lt;/code&gt;&lt;/a&gt; to understand how specific &lt;code&gt;QuerySet&lt;/code&gt;s are executed by your database. You may also want to use an external project like &lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt;, or a tool that monitors your database directly.</source>
          <target state="translated">Как общая практика программирования, это само собой разумеется. Узнайте, &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;какие запросы вы делаете и сколько они вам стоят&lt;/a&gt; . Используйте &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt; &lt;code&gt;QuerySet.explain()&lt;/code&gt; &lt;/a&gt; чтобы понять, как конкретные &lt;code&gt;QuerySet&lt;/code&gt; выполняются вашей базой данных. Вы также можете использовать внешний проект, такой как &lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt; , или инструмент, который контролирует вашу базу данных напрямую.</target>
        </trans-unit>
        <trans-unit id="20b8321f6b1815504a56e2446d229dc3a5cdf1c5" translate="yes" xml:space="preserve">
          <source>As general programming practice, this goes without saying. Find out &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;what queries you are doing and what they are costing you&lt;/a&gt;. Use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt;&lt;code&gt;QuerySet.explain()&lt;/code&gt;&lt;/a&gt; to understand how specific &lt;code&gt;QuerySet&lt;/code&gt;s are executed by your database. You may also want to use an external project like &lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt;, or a tool that monitors your database directly.</source>
          <target state="translated">В качестве общей практики программирования это само собой разумеется. Узнайте, &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;какие запросы вы выполняете и во что они вам обходятся&lt;/a&gt; . Используйте &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt; &lt;code&gt;QuerySet.explain()&lt;/code&gt; &lt;/a&gt; чтобы понять, как конкретные &lt;code&gt;QuerySet&lt;/code&gt; выполняются вашей базой данных. Вы также можете использовать внешний проект, например &lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt; , или инструмент, который напрямую контролирует вашу базу данных.</target>
        </trans-unit>
        <trans-unit id="96991b8ac8856522132d360631369f91573de2f0" translate="yes" xml:space="preserve">
          <source>As in the &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator, &lt;code&gt;login_url&lt;/code&gt; defaults to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Как и в декораторе &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;login_url&lt;/code&gt; умолчанию для login_url используются &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da9fe3df0ac51ceac9db719eba0178803cb06518" translate="yes" xml:space="preserve">
          <source>As in the previous example, we&amp;rsquo;ll use &lt;code&gt;parser.parse()&lt;/code&gt;. But this time, we pass the resulting &lt;code&gt;nodelist&lt;/code&gt; to the &lt;code&gt;Node&lt;/code&gt;:</source>
          <target state="translated">Как и в предыдущем примере, мы будем использовать &lt;code&gt;parser.parse()&lt;/code&gt; . Но на этот раз мы передаем получившийся &lt;code&gt;nodelist&lt;/code&gt; в &lt;code&gt;Node&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fd1a31b1b353515241d23397568df73c392b1bb5" translate="yes" xml:space="preserve">
          <source>As long as all of the arguments to your class&amp;rsquo; constructor are themselves serializable, you can use the &lt;code&gt;@deconstructible&lt;/code&gt; class decorator from &lt;code&gt;django.utils.deconstruct&lt;/code&gt; to add the &lt;code&gt;deconstruct()&lt;/code&gt; method:</source>
          <target state="translated">Пока все аргументы в классе конструктора сами сериализации, вы можете использовать &lt;code&gt;@deconstructible&lt;/code&gt; класс декоратора из &lt;code&gt;django.utils.deconstruct&lt;/code&gt; добавить &lt;code&gt;deconstruct()&lt;/code&gt; метод:</target>
        </trans-unit>
        <trans-unit id="e600596bc5c873450b656d74b175877787ab3b6f" translate="yes" xml:space="preserve">
          <source>As long as the names match, the model instances will be created correctly.</source>
          <target state="translated">Пока имена совпадают,экземпляры моделей будут созданы правильно.</target>
        </trans-unit>
        <trans-unit id="0fde90f7d4164594d56ad64de71511cd1675ba34" translate="yes" xml:space="preserve">
          <source>As long as your tests are properly isolated, you can run them in parallel to gain a speed up on multi-core hardware. See &lt;a href=&quot;../../ref/django-admin#cmdoption-test-parallel&quot;&gt;&lt;code&gt;test --parallel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Пока ваши тесты должным образом изолированы, вы можете запускать их параллельно, чтобы ускорить работу многоядерного оборудования. Смотрите &lt;a href=&quot;../../ref/django-admin#cmdoption-test-parallel&quot;&gt; &lt;code&gt;test --parallel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3c70acb93c6e5c1218f6c1395e14e58b7f5c205" translate="yes" xml:space="preserve">
          <source>As long as your tests are sensibly arranged, they won&amp;rsquo;t become unmanageable. Good rules-of-thumb include having:</source>
          <target state="translated">Пока ваши тесты разумно организованы, они не станут неуправляемыми. Хорошие практические правила включают наличие:</target>
        </trans-unit>
        <trans-unit id="ff98741fa13b2a84ea85722bce2d6ba0fe6eb0c8" translate="yes" xml:space="preserve">
          <source>As mentioned above, an example of a wrapper is a query execution blocker. It could look like this:</source>
          <target state="translated">Как упоминалось выше,примером обертки является блокиратор выполнения запроса.Он может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="1b370539c468c4dfb8aa0c2d9330c6f649435a7a" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;, &lt;code&gt;request&lt;/code&gt; is an &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object. For more on &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; objects, see the &lt;a href=&quot;../ref/request-response&quot;&gt;request and response documentation&lt;/a&gt;.</source>
          <target state="translated">Как упоминалось в &lt;a href=&quot;tutorial03&quot;&gt;уроке 3&lt;/a&gt; , &lt;code&gt;request&lt;/code&gt; является объектом &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; . Подробнее об объектах &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; см. &lt;a href=&quot;../ref/request-response&quot;&gt;Документацию&lt;/a&gt; по запросам и ответам .</target>
        </trans-unit>
        <trans-unit id="4d95c5bf0cefa9c9545e31ef3d2005a5c070fd4d" translate="yes" xml:space="preserve">
          <source>As mentioned, Django will automatically create a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; linking your child class back to any non-abstract parent models. If you want to control the name of the attribute linking back to the parent, you can create your own &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; and set &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt;&lt;code&gt;parent_link=True&lt;/code&gt;&lt;/a&gt; to indicate that your field is the link back to the parent class.</source>
          <target state="translated">Как уже упоминалось, Django автоматически создаст &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; ,&lt;/a&gt; связывающий ваш дочерний класс со всеми неабстрактными родительскими моделями. Если вы хотите контролировать имя атрибута, связывающего обратно с родителем, вы можете создать свой собственный &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; и установить &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt; &lt;code&gt;parent_link=True&lt;/code&gt; ,&lt;/a&gt; чтобы указать, что ваше поле является ссылкой на родительский класс.</target>
        </trans-unit>
        <trans-unit id="d4b79767de4ca41245f3982197bcd1108401cb20" translate="yes" xml:space="preserve">
          <source>As mentioned, any of these methods can raise a &lt;code&gt;ValidationError&lt;/code&gt;. For any field, if the &lt;code&gt;Field.clean()&lt;/code&gt; method raises a &lt;code&gt;ValidationError&lt;/code&gt;, any field-specific cleaning method is not called. However, the cleaning methods for all remaining fields are still executed.</source>
          <target state="translated">Как уже упоминалось, любой из этих методов может вызвать &lt;code&gt;ValidationError&lt;/code&gt; . Для любого поля, если метод &lt;code&gt;Field.clean()&lt;/code&gt; вызывает &lt;code&gt;ValidationError&lt;/code&gt; , какой-либо специфический для поля метод очистки не вызывается. Однако методы очистки для всех оставшихся полей все еще выполняются.</target>
        </trans-unit>
        <trans-unit id="c5537608bf329c234a50e1e6bf69edb69274b89a" translate="yes" xml:space="preserve">
          <source>As noted &lt;a href=&quot;#emptying-test-outbox&quot;&gt;previously&lt;/a&gt;, the test outbox is emptied at the start of every test in a Django &lt;code&gt;*TestCase&lt;/code&gt;. To empty the outbox manually, assign the empty list to &lt;code&gt;mail.outbox&lt;/code&gt;:</source>
          <target state="translated">Как отмечалось &lt;a href=&quot;#emptying-test-outbox&quot;&gt;ранее&lt;/a&gt; , исходящие тесты очищаются в начале каждого теста в Django &lt;code&gt;*TestCase&lt;/code&gt; . Чтобы вручную очистить &lt;code&gt;mail.outbox&lt;/code&gt; &amp;laquo;Исходящие&amp;raquo;, присвойте пустой список mail.outbox :</target>
        </trans-unit>
        <trans-unit id="11567f9b2cb4749058f2ee08859ac819cbb887ba" translate="yes" xml:space="preserve">
          <source>As noted in the warning at the top of this section, Django stores all SQL queries when &lt;code&gt;DEBUG=True&lt;/code&gt;. Set &lt;code&gt;DEBUG=False&lt;/code&gt; in your settings, and this should stop excessive memory use when running &lt;code&gt;LayerMapping&lt;/code&gt; scripts.</source>
          <target state="translated">Как отмечено в предупреждении в верхней части этого раздела, Django сохраняет все запросы SQL, когда &lt;code&gt;DEBUG=True&lt;/code&gt; . Установите &lt;code&gt;DEBUG=False&lt;/code&gt; в ваших настройках, и это должно остановить чрезмерное использование памяти при запуске скриптов &lt;code&gt;LayerMapping&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b24969d3792077ea0404a1157efaffa2850972af" translate="yes" xml:space="preserve">
          <source>As part of the validation process, &lt;code&gt;ModelForm&lt;/code&gt; will call the &lt;code&gt;clean()&lt;/code&gt; method of each field on your model that has a corresponding field on your form. If you have excluded any model fields, validation will not be run on those fields. See the &lt;a href=&quot;../../ref/forms/validation&quot;&gt;form validation&lt;/a&gt; documentation for more on how field cleaning and validation work.</source>
          <target state="translated">В рамках процесса проверки &lt;code&gt;ModelForm&lt;/code&gt; вызовет метод &lt;code&gt;clean()&lt;/code&gt; для каждого поля вашей модели, у которого есть соответствующее поле в вашей форме. Если вы исключили какие-либо поля модели, проверка не будет выполняться для этих полей. См. Документацию &lt;a href=&quot;../../ref/forms/validation&quot;&gt;проверки формы&lt;/a&gt; для получения дополнительной информации о том, как работают очистка и проверка полей.</target>
        </trans-unit>
        <trans-unit id="6f8ea1ba8d0d9e453e5627c48418ee9fcf732126" translate="yes" xml:space="preserve">
          <source>As per &lt;a href=&quot;https://www.python.org/dev/peps/pep-3134&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3134&lt;/strong&gt;&lt;/a&gt;, a &lt;code&gt;__cause__&lt;/code&gt; attribute is set with the original (underlying) database exception, allowing access to any additional information provided.</source>
          <target state="translated">В соответствии с &lt;a href=&quot;https://www.python.org/dev/peps/pep-3134&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3134&lt;/strong&gt;&lt;/a&gt; , A &lt;code&gt;__cause__&lt;/code&gt; атрибут имеет значение, за исключением базы данных оригинала (лежащий в основе), предоставляя доступ к какой - либо дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="4a975be9a69e196fd48d57d72a02baaad0186cb2" translate="yes" xml:space="preserve">
          <source>As previously discussed, you may need to linearize migrations manually when two development branches are joined. While editing migration dependencies, you can inadvertently create an inconsistent history state where a migration has been applied but some of its dependencies haven&amp;rsquo;t. This is a strong indication that the dependencies are incorrect, so Django will refuse to run migrations or make new migrations until it&amp;rsquo;s fixed. When using multiple databases, you can use the &lt;a href=&quot;db/multi-db#allow_migrate&quot;&gt;&lt;code&gt;allow_migrate()&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;db/multi-db#topics-db-multi-db-routing&quot;&gt;database routers&lt;/a&gt; to control which databases &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; checks for consistent history.</source>
          <target state="translated">Как обсуждалось ранее, вам может понадобиться линеаризовать миграции вручную, когда две ветки разработки объединены. При редактировании зависимостей миграции вы можете непреднамеренно создать несогласованное историческое состояние, в котором миграция была применена, а некоторые из ее зависимостей - нет. Это убедительный признак того, что зависимости неверны, поэтому Django откажется запускать миграции или делать новые миграции до тех пор, пока они не будут исправлены. При использовании нескольких баз данных, вы можете использовать &lt;a href=&quot;db/multi-db#allow_migrate&quot;&gt; &lt;code&gt;allow_migrate()&lt;/code&gt; &lt;/a&gt; метод &lt;a href=&quot;db/multi-db#topics-db-multi-db-routing&quot;&gt;маршрутизаторов база данных&lt;/a&gt; для управления , каких базы данных &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; проверки для последовательной истории.</target>
        </trans-unit>
        <trans-unit id="34fd3226d75f12bed342a63f13cbfb1d23154cae" translate="yes" xml:space="preserve">
          <source>As some examples have already demonstrated, when using a callable, a model method, or a &lt;code&gt;ModelAdmin&lt;/code&gt; method, you can customize the column&amp;rsquo;s title by adding a &lt;code&gt;short_description&lt;/code&gt; attribute to the callable.</source>
          <target state="translated">Как уже показали некоторые примеры, при использовании вызываемого, метода модели или метода &lt;code&gt;ModelAdmin&lt;/code&gt; вы можете настроить заголовок столбца, добавив атрибут &lt;code&gt;short_description&lt;/code&gt; к вызываемому элементу .</target>
        </trans-unit>
        <trans-unit id="2561f19164b49d25174c86ee7483f65e053b31b2" translate="yes" xml:space="preserve">
          <source>As stated earlier, you can override the default queryset used by the model formset:</source>
          <target state="translated">Как было сказано ранее,вы можете переопределить запрос по умолчанию,используемый в наборе форм модели:</target>
        </trans-unit>
        <trans-unit id="e45703de797a79b14a59e52d99d9dea8a4938b96" translate="yes" xml:space="preserve">
          <source>As the Python comment above points out, you should always return an &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; after successfully dealing with POST data. This tip isn&amp;rsquo;t specific to Django; it&amp;rsquo;s good Web development practice in general.</source>
          <target state="translated">Как указано выше в комментарии Python, вы должны всегда возвращать &lt;a href=&quot;../ref/request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt; после успешной обработки данных POST. Этот совет не относится только к Django; Это хорошая практика веб-разработки в целом.</target>
        </trans-unit>
        <trans-unit id="8a4e0f05200f4e3bd790c9fcec0b86c5782a9738" translate="yes" xml:space="preserve">
          <source>As the current site is stored in the database, each call to &lt;code&gt;Site.objects.get_current()&lt;/code&gt; could result in a database query. But Django is a little cleverer than that: on the first request, the current site is cached, and any subsequent call returns the cached data instead of hitting the database.</source>
          <target state="translated">Поскольку текущий сайт хранится в базе данных, каждый вызов &lt;code&gt;Site.objects.get_current()&lt;/code&gt; может привести к запросу базы данных. Но Django немного умнее этого: по первому запросу текущий сайт кэшируется, и любой последующий вызов возвращает кэшированные данные вместо попадания в базу данных.</target>
        </trans-unit>
        <trans-unit id="1f4099ae5355f2d5fb266cbbd62c197aa3fbf97a" translate="yes" xml:space="preserve">
          <source>As the name suggests the dummy backend does nothing with your messages. To specify this backend, put the following in your settings:</source>
          <target state="translated">Как следует из названия,манекен-бэкенд ничего не делает с вашими сообщениями.Чтобы указать этот бэкэнд,поставьте в настройках следующее:</target>
        </trans-unit>
        <trans-unit id="b2d24c8e355d23d5cc3828d2e2775a8d9e8611a3" translate="yes" xml:space="preserve">
          <source>As the reverse name for a field should be unique, be careful if you intend to subclass your model. To work around name collisions, part of the name should contain &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(model_name)s'&lt;/code&gt;, which are replaced respectively by the name of the application the model is in, and the name of the model, both lowercased. See the paragraph on &lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;related names for abstract models&lt;/a&gt;.</source>
          <target state="translated">Поскольку обратное имя поля должно быть уникальным, будьте осторожны, если вы намереваетесь создать подкласс для вашей модели. Чтобы обойти коллизии имен, часть имени должна содержать &lt;code&gt;'%(app_label)s'&lt;/code&gt; и &lt;code&gt;'%(model_name)s'&lt;/code&gt; , которые заменяются соответственно именем приложения, в котором находится модель, и названием модели, оба в нижнем регистре. См. Параграф о &lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;связанных именах для абстрактных моделей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f01c1b15fa03baf75efdacb0fbf90b5fd8345d1" translate="yes" xml:space="preserve">
          <source>As this example shows, the same datetime has a different date, depending on the time zone in which it is represented. But the real problem is more fundamental.</source>
          <target state="translated">Как видно из данного примера,одно и то же время имеет различную дату в зависимости от часового пояса,в котором оно представлено.Но реальная проблема более фундаментальна.</target>
        </trans-unit>
        <trans-unit id="a4703cede843d60da3b461a023a621276dff45e4" translate="yes" xml:space="preserve">
          <source>As this example suggests, you can instantiate &lt;code&gt;Client&lt;/code&gt; from within a session of the Python interactive interpreter.</source>
          <target state="translated">Как показывает этот пример, вы можете создать экземпляр &lt;code&gt;Client&lt;/code&gt; из сеанса интерактивного интерпретатора Python.</target>
        </trans-unit>
        <trans-unit id="502899b59d7f16acbbec8754d2d17b6c9dfe74f9" translate="yes" xml:space="preserve">
          <source>As users create new sessions on your website, session data can accumulate in your session store. If you&amp;rsquo;re using the database backend, the &lt;code&gt;django_session&lt;/code&gt; database table will grow. If you&amp;rsquo;re using the file backend, your temporary directory will contain an increasing number of files.</source>
          <target state="translated">Поскольку пользователи создают новые сеансы на вашем веб-сайте, данные сеансов могут накапливаться в вашем хранилище сеансов. Если вы используете базу данных базы данных, &lt;code&gt;django_session&lt;/code&gt; базы данных django_session будет расти. Если вы используете файловый бэкэнд, ваш временный каталог будет содержать все больше файлов.</target>
        </trans-unit>
        <trans-unit id="83a34f76469cc0136158fd2b4197ba5b321cd9c2" translate="yes" xml:space="preserve">
          <source>As we can see, &lt;code&gt;formset.errors&lt;/code&gt; is a list whose entries correspond to the forms in the formset. Validation was performed for each of the two forms, and the expected error message appears for the second item.</source>
          <target state="translated">Как мы видим, &lt;code&gt;formset.errors&lt;/code&gt; - это список, записи которого соответствуют формам в formset. Проверка была выполнена для каждой из двух форм, и ожидаемое сообщение об ошибке появляется для второго элемента.</target>
        </trans-unit>
        <trans-unit id="536eb63644b98260775a8d5bdac6172bde9f8ea8" translate="yes" xml:space="preserve">
          <source>As we mentioned earlier, filter arguments can be strings:</source>
          <target state="translated">Как мы уже упоминали ранее,аргументами фильтра могут быть строки:</target>
        </trans-unit>
        <trans-unit id="d97e9a7198203ff3683051dde6ca2dc19c4acf85" translate="yes" xml:space="preserve">
          <source>As well as WSGI, Django also supports deploying on &lt;a href=&quot;https://asgi.readthedocs.io/en/latest/&quot;&gt;ASGI&lt;/a&gt;, the emerging Python standard for asynchronous web servers and applications.</source>
          <target state="translated">Помимо WSGI, Django также поддерживает развертывание на &lt;a href=&quot;https://asgi.readthedocs.io/en/latest/&quot;&gt;ASGI&lt;/a&gt; , развивающемся стандарте Python для асинхронных веб-серверов и приложений.</target>
        </trans-unit>
        <trans-unit id="e2585fab4aa7d69fceb35ff4ec7ebeb9b8c671c6" translate="yes" xml:space="preserve">
          <source>As well as being synchronous functions, views can also be asynchronous (&amp;ldquo;async&amp;rdquo;) functions, normally defined using Python&amp;rsquo;s &lt;code&gt;async def&lt;/code&gt; syntax. Django will automatically detect these and run them in an async context. However, you will need to use an async server based on ASGI to get their performance benefits.</source>
          <target state="translated">Представления могут быть не только синхронными, но и асинхронными (&amp;laquo;асинхронными&amp;raquo;) функциями, обычно определяемыми с использованием синтаксиса Python &lt;code&gt;async def&lt;/code&gt; . Django автоматически обнаружит их и запустит в асинхронном контексте. Однако вам нужно будет использовать асинхронный сервер на основе ASGI, чтобы получить их преимущества в производительности.</target>
        </trans-unit>
        <trans-unit id="3389aa26160872fdc1ff800062f3da9f89662bf3" translate="yes" xml:space="preserve">
          <source>As well as being used in operations on single instances as above, &lt;code&gt;F()&lt;/code&gt; can be used on &lt;code&gt;QuerySets&lt;/code&gt; of object instances, with &lt;code&gt;update()&lt;/code&gt;. This reduces the two queries we were using above - the &lt;code&gt;get()&lt;/code&gt; and the &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; - to just one:</source>
          <target state="translated">Помимо использования в операциях над отдельными экземплярами, как описано выше, &lt;code&gt;F()&lt;/code&gt; можно использовать в &lt;code&gt;QuerySets&lt;/code&gt; экземпляров объектов с помощью &lt;code&gt;update()&lt;/code&gt; . Это сводит два запроса, которые мы использовали выше - &lt;code&gt;get()&lt;/code&gt; и &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; - к одному:</target>
        </trans-unit>
        <trans-unit id="4b32c9168863a30b185a6576d29e12334bee3290" translate="yes" xml:space="preserve">
          <source>As well as caching of the whole &lt;code&gt;QuerySet&lt;/code&gt;, there is caching of the result of attributes on ORM objects. In general, attributes that are not callable will be cached. For example, assuming the &lt;a href=&quot;queries#queryset-model-example&quot;&gt;example Weblog models&lt;/a&gt;:</source>
          <target state="translated">Помимо кэширования всего &lt;code&gt;QuerySet&lt;/code&gt; , существует кэширование результата атрибутов на объектах ORM. В общем случае атрибуты, которые нельзя вызвать, будут кэшироваться. Например, предполагая &lt;a href=&quot;queries#queryset-model-example&quot;&gt;пример моделей Weblog&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f07fcd9b4fddeadcbcc6d4ab96f71f5ab157dc76" translate="yes" xml:space="preserve">
          <source>As well as changing the database schema, you can also use migrations to change the data in the database itself, in conjunction with the schema if you want.</source>
          <target state="translated">Помимо изменения схемы базы данных,вы также можете использовать миграции для изменения данных в самой базе данных,в сочетании со схемой,если хотите.</target>
        </trans-unit>
        <trans-unit id="fb9aab9ad8871c655982b7b13ec479d3f5d6959c" translate="yes" xml:space="preserve">
          <source>As well as its &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements, a form must specify two things:</source>
          <target state="translated">Помимо элементов &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , форма должна указывать две вещи:</target>
        </trans-unit>
        <trans-unit id="a6abd1f01d13e5e8325182af83c6feb5563a04b9" translate="yes" xml:space="preserve">
          <source>As well as offering potential performance advantages, &lt;code&gt;@cached_property&lt;/code&gt; can ensure that an attribute&amp;rsquo;s value does not change unexpectedly over the life of an instance. This could occur with a method whose computation is based on &lt;code&gt;datetime.now()&lt;/code&gt;, or if a change were saved to the database by some other process in the brief interval between subsequent invocations of a method on the same instance.</source>
          <target state="translated">Наряду с потенциальными преимуществами производительности, &lt;code&gt;@cached_property&lt;/code&gt; может гарантировать, что значение атрибута не изменится неожиданно в течение жизни экземпляра. Это может произойти с методом, вычисления которого основаны на &lt;code&gt;datetime.now()&lt;/code&gt; , или если изменение было сохранено в базе данных другим процессом в течение короткого интервала между последующими вызовами метода в том же экземпляре.</target>
        </trans-unit>
        <trans-unit id="ebe8b7ef5f360037fb3404468afcd52377e7e74f" translate="yes" xml:space="preserve">
          <source>As well as the named group syntax, e.g. &lt;code&gt;(?P&amp;lt;year&amp;gt;[0-9]{4})&lt;/code&gt;, you can also use the shorter unnamed group, e.g. &lt;code&gt;([0-9]{4})&lt;/code&gt;.</source>
          <target state="translated">Помимо синтаксиса именованной группы, например &lt;code&gt;(?P&amp;lt;year&amp;gt;[0-9]{4})&lt;/code&gt; , вы также можете использовать более короткую безымянную группу, например &lt;code&gt;([0-9]{4})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e6561daa7eafe8b31858f977bd4b5a102fd1e7c" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt;, this filter should only be applied to plain text.</source>
          <target state="translated">Как и в случае с &lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt; , этот фильтр должен применяться только к простому тексту.</target>
        </trans-unit>
        <trans-unit id="195bc7afc75bee63d50df5ca12d3cc6ac1d43324" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;recursive relationship&lt;/a&gt; can be defined and &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;references to as-yet undefined models&lt;/a&gt; can be made.</source>
          <target state="translated">Как и в &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , могут быть определены &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;рекурсивные отношения&lt;/a&gt; и &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;ссылки на еще не определенные модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d12d0262217934e05bda9cb843bd23a7b0971aca" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, you can also create &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;recursive relationships&lt;/a&gt; (an object with a many-to-many relationship to itself) and &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;relationships to models not yet defined&lt;/a&gt;.</source>
          <target state="translated">Как и в &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , вы также можете создавать &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;рекурсивные отношения&lt;/a&gt; (объект с отношением &amp;laquo;многие ко многим&amp;raquo; к себе) и &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;отношения с моделями, которые еще не определены&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8c6e392099eca6c7e281f29671628ef8d61549b" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;aggregate()&lt;/code&gt;, the name for the annotation is automatically derived from the name of the aggregate function and the name of the field being aggregated. You can override this default name by providing an alias when you specify the annotation:</source>
          <target state="translated">Как и в &lt;code&gt;aggregate()&lt;/code&gt; , имя для аннотации автоматически получается из имени функции агрегирования и имени агрегируемого поля. Вы можете переопределить это имя по умолчанию, указав псевдоним при указании аннотации:</target>
        </trans-unit>
        <trans-unit id="5d5177c681d3236422cff8cca56cf926bb1d7cc5" translate="yes" xml:space="preserve">
          <source>As with a &lt;code&gt;ModelForm&lt;/code&gt;, you can save the data as a model object. This is done with the formset&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method:</source>
          <target state="translated">Как и в случае с &lt;code&gt;ModelForm&lt;/code&gt; , вы можете сохранить данные как объект модели. Это делается с помощью метода &lt;code&gt;save()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f72eeb211b45f63562fd3611d19742bd0f2e3757" translate="yes" xml:space="preserve">
          <source>As with all deployment tasks, the devil&amp;rsquo;s in the details. Every production setup will be a bit different, so you&amp;rsquo;ll need to adapt the basic outline to fit your needs. Below are a few common patterns that might help.</source>
          <target state="translated">Как и во всех задачах развертывания, дьявол кроется в деталях. Каждая производственная установка будет немного отличаться, поэтому вам нужно будет адаптировать базовую схему в соответствии со своими потребностями. Ниже приведены несколько распространенных шаблонов, которые могут помочь.</target>
        </trans-unit>
        <trans-unit id="d344166e704cbb21a3a3d2b39d35983e33095843" translate="yes" xml:space="preserve">
          <source>As with basic forms, you can extend and reuse &lt;code&gt;ModelForms&lt;/code&gt; by inheriting them. This is useful if you need to declare extra fields or extra methods on a parent class for use in a number of forms derived from models. For example, using the previous &lt;code&gt;ArticleForm&lt;/code&gt; class:</source>
          <target state="translated">Как и в случае базовых форм, вы можете расширять и повторно использовать &lt;code&gt;ModelForms&lt;/code&gt; , наследуя их. Это полезно, если вам нужно объявить дополнительные поля или дополнительные методы в родительском классе для использования в ряде форм, полученных из моделей. Например, используя предыдущий класс &lt;code&gt;ArticleForm&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b8a6cb2344f9d9208fd7d7b21b208a1b9b466d30" translate="yes" xml:space="preserve">
          <source>As with filter registration, it is also possible to use this as a decorator:</source>
          <target state="translated">Как и в случае с регистрацией фильтров,это также можно использовать в качестве декоратора:</target>
        </trans-unit>
        <trans-unit id="7f84614669e2fdbcc38582abe3003d63a2433a52" translate="yes" xml:space="preserve">
          <source>As with other HTTP headers in &lt;code&gt;request.META&lt;/code&gt;, the header name received from the server is normalized by converting all characters to uppercase, replacing any hyphens with underscores, and adding an &lt;code&gt;'HTTP_'&lt;/code&gt; prefix to the name. For example, if your client sends a &lt;code&gt;'X-XSRF-TOKEN'&lt;/code&gt; header, the setting should be &lt;code&gt;'HTTP_X_XSRF_TOKEN'&lt;/code&gt;.</source>
          <target state="translated">Как и в случае других HTTP-заголовков в &lt;code&gt;request.META&lt;/code&gt; , имя заголовка, полученное от сервера, нормализуется путем преобразования всех символов в верхний регистр, замены любых дефисов подчеркиванием и добавления префикса &lt;code&gt;'HTTP_'&lt;/code&gt; к имени. Например, если ваш клиент отправляет заголовок &lt;code&gt;'X-XSRF-TOKEN'&lt;/code&gt; , значение должно быть &lt;code&gt;'HTTP_X_XSRF_TOKEN'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d5eeeb534d86f8c229f540d1e439534abcf6637" translate="yes" xml:space="preserve">
          <source>As with other PostgreSQL fields, there are three standard containment operators: &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;contained_by&lt;/code&gt; and &lt;code&gt;overlap&lt;/code&gt;, using the SQL operators &lt;code&gt;@&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;@&lt;/code&gt;, and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; respectively.</source>
          <target state="translated">Как и в других областях PostgreSQL, есть три стандартные операторы сдерживания: &lt;code&gt;contains&lt;/code&gt; , &lt;code&gt;contained_by&lt;/code&gt; и &lt;code&gt;overlap&lt;/code&gt; , с помощью операторов SQL &lt;code&gt;@&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;@&lt;/code&gt; , и &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="ba0b4d8b02f8406aeb52d3f8ee5150ce47d68b9e" translate="yes" xml:space="preserve">
          <source>As with other fields, storing &lt;code&gt;None&lt;/code&gt; as the field&amp;rsquo;s value will store it as SQL &lt;code&gt;NULL&lt;/code&gt;. While not recommended, it is possible to store JSON scalar &lt;code&gt;null&lt;/code&gt; instead of SQL &lt;code&gt;NULL&lt;/code&gt; by using &lt;a href=&quot;../../ref/models/expressions#django.db.models.Value&quot;&gt;&lt;code&gt;Value('null')&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Как и в случае с другими полями, сохранение &lt;code&gt;None&lt;/code&gt; в качестве значения поля сохранит его как SQL &lt;code&gt;NULL&lt;/code&gt; . Хотя это не рекомендуется, можно сохранить скалярный &lt;code&gt;null&lt;/code&gt; JSON вместо SQL &lt;code&gt;NULL&lt;/code&gt; , используя &lt;a href=&quot;../../ref/models/expressions#django.db.models.Value&quot;&gt; &lt;code&gt;Value('null')&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e64144e886b411ea54b8b392eef0caf07cb6cef" translate="yes" xml:space="preserve">
          <source>As with regular forms, it&amp;rsquo;s possible to specify initial data for forms by specifying an &lt;code&gt;initial&lt;/code&gt; parameter when instantiating the form. Initial values provided this way will override both initial values from the form field and values from an attached model instance. For example:</source>
          <target state="translated">Как и в случае обычных форм, можно указать начальные данные для форм, указав &lt;code&gt;initial&lt;/code&gt; параметр при создании экземпляра формы. Исходные значения, предоставленные таким способом, будут переопределять как начальные значения из поля формы, так и значения из присоединенного экземпляра модели. Например:</target>
        </trans-unit>
        <trans-unit id="ffe99c485c3dc0ce533f1043d34823610c27123f" translate="yes" xml:space="preserve">
          <source>As with regular formsets, it&amp;rsquo;s possible to &lt;a href=&quot;formsets#formsets-initial-data&quot;&gt;specify initial data&lt;/a&gt; for forms in the formset by specifying an &lt;code&gt;initial&lt;/code&gt; parameter when instantiating the model formset class returned by &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt;. However, with model formsets, the initial values only apply to extra forms, those that aren&amp;rsquo;t attached to an existing model instance. If the length of &lt;code&gt;initial&lt;/code&gt; exceeds the number of extra forms, the excess initial data is ignored. If the extra forms with initial data aren&amp;rsquo;t changed by the user, they won&amp;rsquo;t be validated or saved.</source>
          <target state="translated">Как и в случае с обычными наборами форм, можно &lt;a href=&quot;formsets#formsets-initial-data&quot;&gt;указать начальные данные&lt;/a&gt; для форм в наборе форм, указав &lt;code&gt;initial&lt;/code&gt; параметр при создании экземпляра класса formset модели, возвращаемого &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt; &lt;code&gt;modelformset_factory()&lt;/code&gt; &lt;/a&gt; . Однако в случае наборов форм модели начальные значения применяются только к дополнительным формам, которые не привязаны к существующему экземпляру модели. Если длина &lt;code&gt;initial&lt;/code&gt; значений превышает количество дополнительных форм, избыточные начальные данные игнорируются. Если дополнительные формы с исходными данными не изменены пользователем, они не будут проверены или сохранены.</target>
        </trans-unit>
        <trans-unit id="527f8cf0e286007c370fc877419357e189a4595a" translate="yes" xml:space="preserve">
          <source>As with regular formsets, you can use the &lt;code&gt;max_num&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; parameters to &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; to limit the number of extra forms displayed.</source>
          <target state="translated">Как и в случае с обычными наборами форм, вы можете использовать &lt;code&gt;max_num&lt;/code&gt; и &lt;code&gt;extra&lt;/code&gt; параметры для &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt; &lt;code&gt;modelformset_factory()&lt;/code&gt; &lt;/a&gt; чтобы ограничить количество отображаемых дополнительных форм.</target>
        </trans-unit>
        <trans-unit id="1d5de867c1639776d4da6c2f4f2d7cb718667f07" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; option, to display multiple fields on the same line, wrap those fields in their own tuple. In this example, the &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; fields will display on the same line:</source>
          <target state="translated">Как и в случае с &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt; , для отображения нескольких полей в одной строке, оберните эти поля в свой собственный кортеж. В этом примере поля &lt;code&gt;first_name&lt;/code&gt; и &lt;code&gt;last_name&lt;/code&gt; будут отображаться в одной строке:</target>
        </trans-unit>
        <trans-unit id="2234be373123e78349407666595d653e39152ca6" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;filter()&lt;/code&gt; clause, the order in which &lt;code&gt;annotate()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; clauses are applied to a query is significant. If the &lt;code&gt;values()&lt;/code&gt; clause precedes the &lt;code&gt;annotate()&lt;/code&gt;, the annotation will be computed using the grouping described by the &lt;code&gt;values()&lt;/code&gt; clause.</source>
          <target state="translated">Как и в случае с предложением &lt;code&gt;filter()&lt;/code&gt; , порядок, в котором к запросу применяются предложения &lt;code&gt;annotate()&lt;/code&gt; и &lt;code&gt;values()&lt;/code&gt; имеет большое значение. Если предложение &lt;code&gt;values()&lt;/code&gt; предшествует &lt;code&gt;annotate()&lt;/code&gt; , аннотация будет вычислена с использованием группировки, описанной предложением &lt;code&gt;values()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d604729c5ccc31017088443f69517e4b2a49494" translate="yes" xml:space="preserve">
          <source>As with the filter class, you may control which exception reporter class to use within any given view by setting the &lt;code&gt;HttpRequest&lt;/code&gt;&amp;rsquo;s &lt;code&gt;exception_reporter_class&lt;/code&gt; attribute:</source>
          <target state="translated">Как с классом фильтра, вы можете контролировать , какие исключения репортер класса для использования в той или иной точки зрения, установив &lt;code&gt;HttpRequest&lt;/code&gt; &amp;laquo;s &lt;code&gt;exception_reporter_class&lt;/code&gt; атрибут:</target>
        </trans-unit>
        <trans-unit id="9fba9371114d62d3639b4d42414a8a9aa5814a71" translate="yes" xml:space="preserve">
          <source>As you are using an intermediate model, you can also query on its attributes:</source>
          <target state="translated">Так как вы используете промежуточную модель,вы также можете запросить ее атрибуты:</target>
        </trans-unit>
        <trans-unit id="cc048712e6598211018ab15fc4c4e5d7705ea164" translate="yes" xml:space="preserve">
          <source>As you can see it only displayed one empty form. The number of empty forms that is displayed is controlled by the &lt;code&gt;extra&lt;/code&gt; parameter. By default, &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt; defines one extra form; the following example will create a formset class to display two blank forms:</source>
          <target state="translated">Как видите, отображается только одна пустая форма. Количество отображаемых пустых форм определяется &lt;code&gt;extra&lt;/code&gt; параметром. По умолчанию &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt; определяет одну дополнительную форму; В следующем примере будет создан класс formset для отображения двух пустых форм:</target>
        </trans-unit>
        <trans-unit id="879c04f43647cd15cb5b4809e41772fd4186faf1" translate="yes" xml:space="preserve">
          <source>As you can see, &lt;code&gt;SlugField&lt;/code&gt; is a &lt;code&gt;CharField&lt;/code&gt; with a customized validator that validates that submitted text obeys to some character rules. This can also be done on field definition so:</source>
          <target state="translated">Как видите, &lt;code&gt;SlugField&lt;/code&gt; - это &lt;code&gt;CharField&lt;/code&gt; с настроенным валидатором, который проверяет, что отправленный текст подчиняется некоторым правилам символов. Это также можно сделать для определения поля так:</target>
        </trans-unit>
        <trans-unit id="67c02b659fb85b72e2371888efd652ce146dfaa7" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;deserialize&lt;/code&gt; function takes the same format argument as &lt;code&gt;serialize&lt;/code&gt;, a string or stream of data, and returns an iterator.</source>
          <target state="translated">Как видите, функция &lt;code&gt;deserialize&lt;/code&gt; принимает тот же аргумент формата, что и &lt;code&gt;serialize&lt;/code&gt; , строку или поток данных и возвращает итератор.</target>
        </trans-unit>
        <trans-unit id="71345e5bba220323ebb78dd2c42b60e93d3002a3" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;if&lt;/code&gt; tag may take one or several &lt;code&gt;{% elif %}&lt;/code&gt; clauses, as well as an &lt;code&gt;{% else %}&lt;/code&gt; clause that will be displayed if all previous conditions fail. These clauses are optional.</source>
          <target state="translated">Как видите, тег &lt;code&gt;if&lt;/code&gt; может принимать одно или несколько предложений &lt;code&gt;{% elif %}&lt;/code&gt; , а также предложение &lt;code&gt;{% else %}&lt;/code&gt; , которое будет отображаться в случае сбоя всех предыдущих условий. Эти пункты не являются обязательными.</target>
        </trans-unit>
        <trans-unit id="f8915f71d46f96a37ab702d1b08b5f5deda8900e" translate="yes" xml:space="preserve">
          <source>As you can see, the action is rather short; all the complex logic would belong in your export view. This would need to deal with objects of any type, hence the business with the &lt;code&gt;ContentType&lt;/code&gt;.</source>
          <target state="translated">Как видите, действие довольно короткое; вся сложная логика будет принадлежать вашему экспортному представлению. Это должно было бы иметь дело с объектами любого типа, следовательно, бизнес с &lt;code&gt;ContentType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ba5fb948174a296eee1bc5ce8a1d74a772bd21b" translate="yes" xml:space="preserve">
          <source>As you can see, the view logic of a model formset isn&amp;rsquo;t drastically different than that of a &amp;ldquo;normal&amp;rdquo; formset. The only difference is that we call &lt;code&gt;formset.save()&lt;/code&gt; to save the data into the database. (This was described above, in &lt;a href=&quot;#saving-objects-in-the-formset&quot;&gt;Saving objects in the formset&lt;/a&gt;.)</source>
          <target state="translated">Как видите, логика представления модельного набора форм не сильно отличается от логики &amp;laquo;нормального&amp;raquo; набора форм. Единственное отличие состоит в том, что мы вызываем &lt;code&gt;formset.save()&lt;/code&gt; для сохранения данных в базе данных. (Это было описано выше, в &lt;a href=&quot;#saving-objects-in-the-formset&quot;&gt;разделе &amp;laquo;Сохранение объектов в форме&amp;raquo;&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="de0f25a2104a49777d9ee597d14852fc1ff51dce" translate="yes" xml:space="preserve">
          <source>As you might expect, the &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;ManyToManyField&lt;/code&gt; model field types are special cases:</source>
          <target state="translated">Как и следовало ожидать, &lt;code&gt;ForeignKey&lt;/code&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; модели ForeignKey и ManyToManyField являются особыми случаями:</target>
        </trans-unit>
        <trans-unit id="cbdc9cb77dc9cc6e2126127526db5ead30982a19" translate="yes" xml:space="preserve">
          <source>As you might expect, the created models will have an attribute for every field in the table. Note that &lt;code&gt;inspectdb&lt;/code&gt; has a few special cases in its field-name output:</source>
          <target state="translated">Как и следовало ожидать, созданные модели будут иметь атрибут для каждого поля в таблице. Обратите внимание, что &lt;code&gt;inspectdb&lt;/code&gt; имеет несколько особых случаев в выводе имени поля:</target>
        </trans-unit>
        <trans-unit id="b982efad890175e01516b81e3f537fb6d8014461" translate="yes" xml:space="preserve">
          <source>Aside from strings and bytestrings, there&amp;rsquo;s a third type of string-like object you may encounter when using Django. The framework&amp;rsquo;s internationalization features introduce the concept of a &amp;ldquo;lazy translation&amp;rdquo; &amp;ndash; a string that has been marked as translated but whose actual translation result isn&amp;rsquo;t determined until the object is used in a string. This feature is useful in cases where the translation locale is unknown until the string is used, even though the string might have originally been created when the code was first imported.</source>
          <target state="translated">Помимо строк и байтовых строк, существует третий тип строковых объектов, с которыми вы можете столкнуться при использовании Django. Функции интернационализации фреймворка вводят концепцию &amp;laquo;отложенного перевода&amp;raquo; - строки, которая была помечена как переведенная, но фактический результат перевода не определен, пока объект не используется в строке. Эта функция полезна в тех случаях, когда языковой стандарт перевода неизвестен до тех пор, пока строка не будет использована, даже если строка могла быть изначально создана при первом импорте кода.</target>
        </trans-unit>
        <trans-unit id="73bf916809eadb87e354ae61d91f8d7fada6f240" translate="yes" xml:space="preserve">
          <source>Aside from the HTML generated by the server, web applications generally need to serve additional files &amp;mdash; such as images, JavaScript, or CSS &amp;mdash; necessary to render the complete web page. In Django, we refer to these files as &amp;ldquo;static files&amp;rdquo;.</source>
          <target state="translated">Помимо HTML-кода, генерируемого сервером, веб-приложения обычно должны обслуживать дополнительные файлы - такие как изображения, JavaScript или CSS - необходимые для отображения всей веб-страницы. В Django мы называем эти файлы &amp;laquo;статическими файлами&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="801335ff891c76c3f61153e82fc7e76f405d1de3" translate="yes" xml:space="preserve">
          <source>Aside from using a separate database, the test runner will otherwise use all of the same database settings you have in your settings file: &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;ENGINE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;, etc. The test database is created by the user specified by &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, so you&amp;rsquo;ll need to make sure that the given user account has sufficient privileges to create a new database on the system.</source>
          <target state="translated">Помимо использования отдельной базы данных, исполнитель тестов будет использовать все те же настройки базы данных, которые есть в вашем файле настроек: &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ENGINE&quot;&gt; &lt;code&gt;ENGINE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; и т. Д. Тестовая база данных создается пользователем, указанным пользователем &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt; , поэтому вы будете Необходимо убедиться, что данная учетная запись пользователя имеет достаточные права для создания новой базы данных в системе.</target>
        </trans-unit>
        <trans-unit id="a3e68cd197fc11a427c01118c11dbb487de2b2c1" translate="yes" xml:space="preserve">
          <source>Ask a question in the &lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;#django IRC channel&lt;/a&gt;.</source>
          <target state="translated">Задайте вопрос на &lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;IRC-канале #django&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7eb1f68e967a33147b40021bee5c44bbf8c067e4" translate="yes" xml:space="preserve">
          <source>Ask your question on the &lt;a href=&quot;https://groups.google.com/d/forum/geodjango&quot;&gt;GeoDjango&lt;/a&gt; mailing list.</source>
          <target state="translated">Задайте свой вопрос в &lt;a href=&quot;https://groups.google.com/d/forum/geodjango&quot;&gt;списке&lt;/a&gt; рассылки GeoDjango .</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="3c3ab385220f6b65aa5032ebca76349ce0988bbe" translate="yes" xml:space="preserve">
          <source>Asserts that a &lt;code&gt;Response&lt;/code&gt; instance produced the given &lt;code&gt;status_code&lt;/code&gt; and that &lt;code&gt;text&lt;/code&gt; appears in the content of the response. If &lt;code&gt;count&lt;/code&gt; is provided, &lt;code&gt;text&lt;/code&gt; must occur exactly &lt;code&gt;count&lt;/code&gt; times in the response.</source>
          <target state="translated">Утверждает, что экземпляр &lt;code&gt;Response&lt;/code&gt; создал данный &lt;code&gt;status_code&lt;/code&gt; и этот &lt;code&gt;text&lt;/code&gt; появляется в содержимом ответа. Если &lt;code&gt;count&lt;/code&gt; предоставляются, &lt;code&gt;text&lt;/code&gt; должен происходить точно &lt;code&gt;count&lt;/code&gt; время в ответ.</target>
        </trans-unit>
        <trans-unit id="463c066a0ef6fd410a35e951dd7b3b5877e69f1f" translate="yes" xml:space="preserve">
          <source>Asserts that a &lt;code&gt;Response&lt;/code&gt; instance produced the given &lt;code&gt;status_code&lt;/code&gt; and that &lt;code&gt;text&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; appear in the content of the response.</source>
          <target state="translated">Утверждает , что &lt;code&gt;Response&lt;/code&gt; экземпляр произвел данную &lt;code&gt;status_code&lt;/code&gt; и &lt;code&gt;text&lt;/code&gt; никак &lt;em&gt;не&lt;/em&gt; отображается в содержании ответа.</target>
        </trans-unit>
        <trans-unit id="0fd5de239fdc9bd26df8c09eab928a6817abad4f" translate="yes" xml:space="preserve">
          <source>Asserts that a field on a form raises the provided list of errors when rendered on the form.</source>
          <target state="translated">Указывает,что поле на форме поднимает предоставленный список ошибок при отрисовке на форме.</target>
        </trans-unit>
        <trans-unit id="42c441e6d48fad10619b9628fd6668cb1e216b3a" translate="yes" xml:space="preserve">
          <source>Asserts that a form field behaves correctly with various inputs.</source>
          <target state="translated">Указывает,что поле формы ведет себя корректно с различными входами.</target>
        </trans-unit>
        <trans-unit id="c16ebaf667ff8d9be17b8441be73f7c3b07fcbff" translate="yes" xml:space="preserve">
          <source>Asserts that a queryset &lt;code&gt;qs&lt;/code&gt; returns a particular list of values &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">Утверждает, что набор запросов &lt;code&gt;qs&lt;/code&gt; возвращает определенный список значений &lt;code&gt;values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d04d0343979b42c4abb311c3aa9e3d89b870915" translate="yes" xml:space="preserve">
          <source>Asserts that execution of &lt;code&gt;callable&lt;/code&gt; raises &lt;code&gt;expected_exception&lt;/code&gt; and that &lt;code&gt;expected_message&lt;/code&gt; is found in the exception&amp;rsquo;s message. Any other outcome is reported as a failure. It&amp;rsquo;s a simpler version of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;unittest.TestCase.assertRaisesRegex()&lt;/code&gt;&lt;/a&gt; with the difference that &lt;code&gt;expected_message&lt;/code&gt; isn&amp;rsquo;t treated as a regular expression.</source>
          <target state="translated">Утверждает, что выполнение &lt;code&gt;callable&lt;/code&gt; объекта вызывает &lt;code&gt;expected_exception&lt;/code&gt; и что &lt;code&gt;expected_message&lt;/code&gt; находится в сообщении исключения. Любой другой результат сообщается как провал. Это более простая версия &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;unittest.TestCase.assertRaisesRegex()&lt;/code&gt; &lt;/a&gt; с той разницей, что &lt;code&gt;expected_message&lt;/code&gt; , что сообщение не будет рассматриваться как регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="d6161ea697a7c27f8a9591827bd5e9b9c1efba2e" translate="yes" xml:space="preserve">
          <source>Asserts that the &lt;code&gt;formset&lt;/code&gt; raises the provided list of errors when rendered.</source>
          <target state="translated">Утверждает, что при &lt;code&gt;formset&lt;/code&gt; предоставленный список ошибок.</target>
        </trans-unit>
        <trans-unit id="ff59a197649a85d7611947dbf66400822fd3fd57" translate="yes" xml:space="preserve">
          <source>Asserts that the HTML fragment &lt;code&gt;needle&lt;/code&gt; is contained in the &lt;code&gt;haystack&lt;/code&gt; one.</source>
          <target state="translated">Утверждает, что &lt;code&gt;needle&lt;/code&gt; фрагмента HTML содержится в &lt;code&gt;haystack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72cfd60eeafd9e065c5cb6d7c2c4205bb79b91ee" translate="yes" xml:space="preserve">
          <source>Asserts that the JSON fragments &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;expected_data&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; equal. See &lt;a href=&quot;#django.test.SimpleTestCase.assertJSONEqual&quot;&gt;&lt;code&gt;assertJSONEqual()&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">Утверждает , что JSON фрагменты &lt;code&gt;raw&lt;/code&gt; и &lt;code&gt;expected_data&lt;/code&gt; являются &lt;em&gt;не&lt;/em&gt; равны. Смотрите &lt;a href=&quot;#django.test.SimpleTestCase.assertJSONEqual&quot;&gt; &lt;code&gt;assertJSONEqual()&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="85e70bc6e665bfcc530f2833752ea8a330e09608" translate="yes" xml:space="preserve">
          <source>Asserts that the JSON fragments &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;expected_data&lt;/code&gt; are equal. Usual JSON non-significant whitespace rules apply as the heavyweight is delegated to the &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">Утверждает, что фрагменты JSON &lt;code&gt;raw&lt;/code&gt; и &lt;code&gt;expected_data&lt;/code&gt; равны. Обычные правила незначительных пробелов в JSON применяются, поскольку тяжеловес делегируется в библиотеку &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04e2a1c4987747529f25e1ccd3d7e5bcbf9496bb" translate="yes" xml:space="preserve">
          <source>Asserts that the response returned a &lt;code&gt;status_code&lt;/code&gt; redirect status, redirected to &lt;code&gt;expected_url&lt;/code&gt; (including any &lt;code&gt;GET&lt;/code&gt; data), and that the final page was received with &lt;code&gt;target_status_code&lt;/code&gt;.</source>
          <target state="translated">Утверждает, что ответ возвратил статус перенаправления &lt;code&gt;status_code&lt;/code&gt; , перенаправленный на &lt;code&gt;expected_url&lt;/code&gt; (включая любые данные &lt;code&gt;GET&lt;/code&gt; ), и что последняя страница была получена с &lt;code&gt;target_status_code&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10ab43696f727131a6cc76c15936e9e996766dfb" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;html1&lt;/code&gt; and &lt;code&gt;html2&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; equal. The comparison is based on HTML semantics. See &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Утверждает , что строки &lt;code&gt;html1&lt;/code&gt; и &lt;code&gt;html2&lt;/code&gt; являются &lt;em&gt;не&lt;/em&gt; равны. Сравнение основано на семантике HTML. Смотрите &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt; &lt;code&gt;assertHTMLEqual()&lt;/code&gt; &lt;/a&gt; для подробностей.</target>
        </trans-unit>
        <trans-unit id="62ddcb768dff0ff64abf8e34d084b990dac6d090" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;html1&lt;/code&gt; and &lt;code&gt;html2&lt;/code&gt; are equal. The comparison is based on HTML semantics. The comparison takes following things into account:</source>
          <target state="translated">Утверждает, что строки &lt;code&gt;html1&lt;/code&gt; и &lt;code&gt;html2&lt;/code&gt; равны. Сравнение основано на семантике HTML. Сравнение учитывает следующие вещи:</target>
        </trans-unit>
        <trans-unit id="09bb4880b10bf0be7916cea611cb80f9ba9d0a6f" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;xml1&lt;/code&gt; and &lt;code&gt;xml2&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; equal. The comparison is based on XML semantics. See &lt;a href=&quot;#django.test.SimpleTestCase.assertXMLEqual&quot;&gt;&lt;code&gt;assertXMLEqual()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Утверждает , что строки &lt;code&gt;xml1&lt;/code&gt; и &lt;code&gt;xml2&lt;/code&gt; являются &lt;em&gt;не&lt;/em&gt; равны. Сравнение основано на семантике XML. Смотрите &lt;a href=&quot;#django.test.SimpleTestCase.assertXMLEqual&quot;&gt; &lt;code&gt;assertXMLEqual()&lt;/code&gt; &lt;/a&gt; для подробностей.</target>
        </trans-unit>
        <trans-unit id="0f3ac14ce90af9e23f5ed205d1f3feb60e5cb4d4" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;xml1&lt;/code&gt; and &lt;code&gt;xml2&lt;/code&gt; are equal. The comparison is based on XML semantics. Similarly to &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt;, the comparison is made on parsed content, hence only semantic differences are considered, not syntax differences. When invalid XML is passed in any parameter, an &lt;code&gt;AssertionError&lt;/code&gt; is always raised, even if both string are identical.</source>
          <target state="translated">Утверждает, что строки &lt;code&gt;xml1&lt;/code&gt; и &lt;code&gt;xml2&lt;/code&gt; равны. Сравнение основано на семантике XML. Аналогично &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt; &lt;code&gt;assertHTMLEqual()&lt;/code&gt; &lt;/a&gt; , сравнение выполняется для проанализированного содержимого, поэтому рассматриваются только семантические различия, а не синтаксические различия. Когда в любом параметре передается недопустимый XML, &lt;code&gt;AssertionError&lt;/code&gt; всегда возникает, даже если обе строки идентичны.</target>
        </trans-unit>
        <trans-unit id="5856790d3201ec10ff0abec0598ba4b7d6ac3315" translate="yes" xml:space="preserve">
          <source>Asserts that the strings &lt;code&gt;xml1&lt;/code&gt; and &lt;code&gt;xml2&lt;/code&gt; are equal. The comparison is based on XML semantics. Similarly to &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt;, the comparison is made on parsed content, hence only semantic differences are considered, not syntax differences. When invalid XML is passed in any parameter, an &lt;code&gt;AssertionError&lt;/code&gt; is always raised, even if both strings are identical.</source>
          <target state="translated">Утверждает, что строки &lt;code&gt;xml1&lt;/code&gt; и &lt;code&gt;xml2&lt;/code&gt; равны. Сравнение основано на семантике XML. Подобно &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt; &lt;code&gt;assertHTMLEqual()&lt;/code&gt; &lt;/a&gt; , сравнение выполняется на проанализированном контенте, поэтому учитываются только семантические различия, а не синтаксические различия. Когда в каком-либо параметре передается недопустимый XML, всегда возникает &lt;code&gt;AssertionError&lt;/code&gt; , даже если обе строки идентичны.</target>
        </trans-unit>
        <trans-unit id="2f1524535e73d36ad269e12fefb6d8f92b80612e" translate="yes" xml:space="preserve">
          <source>Asserts that the template with the given name was &lt;em&gt;not&lt;/em&gt; used in rendering the response.</source>
          <target state="translated">Утверждает, что шаблон с указанным именем &lt;em&gt;не&lt;/em&gt; использовался при визуализации ответа.</target>
        </trans-unit>
        <trans-unit id="0bcd878feb16c89a31efac7d1f686961eb4e9018" translate="yes" xml:space="preserve">
          <source>Asserts that the template with the given name was used in rendering the response.</source>
          <target state="translated">Указывает,что при отрисовке ответа использовался шаблон с заданным именем.</target>
        </trans-unit>
        <trans-unit id="af9f8e52fffda162a5c29828d54ce8db12a7288f" translate="yes" xml:space="preserve">
          <source>Asserts that two URLs are the same, ignoring the order of query string parameters except for parameters with the same name. For example, &lt;code&gt;/path/?x=1&amp;amp;y=2&lt;/code&gt; is equal to &lt;code&gt;/path/?y=2&amp;amp;x=1&lt;/code&gt;, but &lt;code&gt;/path/?a=1&amp;amp;a=2&lt;/code&gt; isn&amp;rsquo;t equal to &lt;code&gt;/path/?a=2&amp;amp;a=1&lt;/code&gt;.</source>
          <target state="translated">Утверждает, что два URL-адреса одинаковы, игнорируя порядок параметров строки запроса, за исключением параметров с одинаковым именем. Например, &lt;code&gt;/path/?x=1&amp;amp;y=2&lt;/code&gt; равен &lt;code&gt;/path/?y=2&amp;amp;x=1&lt;/code&gt; , но &lt;code&gt;/path/?a=1&amp;amp;a=2&lt;/code&gt; не равен &lt;code&gt;/path/?a=2&amp;amp;a=1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="236be22124ed0d7fa04be050a132e368d177a148" translate="yes" xml:space="preserve">
          <source>Asserts that when &lt;code&gt;func&lt;/code&gt; is called with &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt; that &lt;code&gt;num&lt;/code&gt; database queries are executed.</source>
          <target state="translated">Утверждает, что когда &lt;code&gt;func&lt;/code&gt; вызывается с &lt;code&gt;*args&lt;/code&gt; и &lt;code&gt;**kwargs&lt;/code&gt; , выполняется &lt;code&gt;num&lt;/code&gt; запросов к базе данных.</target>
        </trans-unit>
        <trans-unit id="ba1117e518e5f60b947e1eb3cbc96a3a0de81d79" translate="yes" xml:space="preserve">
          <source>Assets and Django Admin</source>
          <target state="translated">Активы и Django Admin</target>
        </trans-unit>
        <trans-unit id="ee7a87f125429d68fd6a5d90f091a081608f015c" translate="yes" xml:space="preserve">
          <source>Assets as a static definition</source>
          <target state="translated">Активы как статическое определение</target>
        </trans-unit>
        <trans-unit id="3f461fa34176c4b47a012aabf643fc1615d7d901" translate="yes" xml:space="preserve">
          <source>Associate the &lt;code&gt;Article&lt;/code&gt; with a &lt;code&gt;Publication&lt;/code&gt;:</source>
          <target state="translated">Свяжите &lt;code&gt;Article&lt;/code&gt; с &lt;code&gt;Publication&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="604f2861391a4966f134874defeeccf87347ea1b" translate="yes" xml:space="preserve">
          <source>Associating content with a single site</source>
          <target state="translated">Связь содержания с одним сайтом</target>
        </trans-unit>
        <trans-unit id="160af382fad84f01ed5831a3e803426a07248982" translate="yes" xml:space="preserve">
          <source>Associating content with multiple sites</source>
          <target state="translated">Связь содержания с несколькими сайтами</target>
        </trans-unit>
        <trans-unit id="596ea1966975c3b5e427a0286ede76cada93b872" translate="yes" xml:space="preserve">
          <source>Assuming &lt;code&gt;author&lt;/code&gt; is a &lt;code&gt;ForeignKey&lt;/code&gt; to a &lt;code&gt;User&lt;/code&gt; model, this will limit the &lt;code&gt;list_filter&lt;/code&gt; choices to the users who have written a book instead of listing all users.</source>
          <target state="translated">Предполагая, что &lt;code&gt;author&lt;/code&gt; является &lt;code&gt;ForeignKey&lt;/code&gt; для модели &lt;code&gt;User&lt;/code&gt; , это ограничит выбор &lt;code&gt;list_filter&lt;/code&gt; пользователями, которые написали книгу, вместо перечисления всех пользователей.</target>
        </trans-unit>
        <trans-unit id="67cb6d59d5bd23a55c32da92b2e5f481aaf089de" translate="yes" xml:space="preserve">
          <source>Assuming an existing Employee Fred Smith who has both a User and Employee model, you can access the related information using Django&amp;rsquo;s standard related model conventions:</source>
          <target state="translated">Предполагая, что у существующего сотрудника Фреда Смита есть модель &amp;laquo;Пользователь&amp;raquo; и &amp;laquo;Сотрудник&amp;raquo;, вы можете получить доступ к соответствующей информации, используя стандартные соглашения о связанных моделях Django:</target>
        </trans-unit>
        <trans-unit id="185a5c0fe2f8a27d76d5b4ea8cbea1d6724b2c74" translate="yes" xml:space="preserve">
          <source>Assuming both models have a &lt;code&gt;length&lt;/code&gt; field, to find posts where the post length is greater than the total length of all combined comments:</source>
          <target state="translated">Предполагая, что обе модели имеют поле &lt;code&gt;length&lt;/code&gt; , чтобы найти сообщения, длина сообщения которых превышает общую длину всех объединенных комментариев:</target>
        </trans-unit>
        <trans-unit id="e9fe69b31f449015f041b355315b24ddf7359871" translate="yes" xml:space="preserve">
          <source>Assuming models live in a file &lt;code&gt;mysite/blog/models.py&lt;/code&gt;, here&amp;rsquo;s an example:</source>
          <target state="translated">Предполагая, что модели &lt;code&gt;mysite/blog/models.py&lt;/code&gt; в файле mysite / blog / models.py , вот пример:</target>
        </trans-unit>
        <trans-unit id="a43372f88213dad295044509b366e98b21109371" translate="yes" xml:space="preserve">
          <source>Assuming rows of 10-20 columns with a mix of textual and numeric data, 2000 is going to fetch less than 100KB of data, which seems a good compromise between the number of rows transferred and the data discarded if the loop is exited early.</source>
          <target state="translated">Предполагая строки по 10-20 столбцов со смесью текстовых и числовых данных,2000 год получит менее 100 КБ данных,что кажется хорошим компромиссом между количеством переданных строк и данных,отбрасываемых при досрочном завершении цикла.</target>
        </trans-unit>
        <trans-unit id="6365343a740bba2824b80576a3bf0941694912be" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; is, for example, &lt;code&gt;&quot;de&quot;&lt;/code&gt;, then for:</source>
          <target state="translated">Предполагая, что &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;True&lt;/code&gt; , а &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt; , например, &lt;code&gt;&quot;de&quot;&lt;/code&gt; , то для:</target>
        </trans-unit>
        <trans-unit id="7a9b104a6162d8533d6966d8db536a2936bbdb5f" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; is, for example, &lt;code&gt;&quot;es&quot;&lt;/code&gt;, then for:</source>
          <target state="translated">Предполагая, что &lt;a href=&quot;../settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;True&lt;/code&gt; , а &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt; , например, &lt;code&gt;&quot;es&quot;&lt;/code&gt; , то для:</target>
        </trans-unit>
        <trans-unit id="e859c14e91e44380de99cb3733de849b3d0bf3ca" translate="yes" xml:space="preserve">
          <source>Assuming the settings above were in a &lt;code&gt;postgis.py&lt;/code&gt; file in the same directory as &lt;code&gt;runtests.py&lt;/code&gt;, then all Django and GeoDjango tests would be performed when executing the command:</source>
          <target state="translated">Если предположить, что указанные выше настройки находятся в файле &lt;code&gt;postgis.py&lt;/code&gt; в том же каталоге, что и &lt;code&gt;runtests.py&lt;/code&gt; , то при выполнении команды будут выполнены все тесты Django и GeoDjango:</target>
        </trans-unit>
        <trans-unit id="15d9d44a1a13ae4c3c09865d41e5911a0d169d65" translate="yes" xml:space="preserve">
          <source>Assuming you have an application with an &lt;a href=&quot;../../ref/models/options#django.db.models.Options.app_label&quot;&gt;&lt;code&gt;app_label&lt;/code&gt;&lt;/a&gt;&lt;code&gt;foo&lt;/code&gt; and a model named &lt;code&gt;Bar&lt;/code&gt;, to test for basic permissions you should use:</source>
          <target state="translated">Предполагая, что у вас есть приложение с &lt;a href=&quot;../../ref/models/options#django.db.models.Options.app_label&quot;&gt; &lt;code&gt;app_label&lt;/code&gt; &lt;/a&gt; &lt;code&gt;foo&lt;/code&gt; и моделью с именем &lt;code&gt;Bar&lt;/code&gt; , для проверки основных разрешений вы должны использовать:</target>
        </trans-unit>
        <trans-unit id="24ffd2b9ba150c77f60a52bfae4dd953b7b74828" translate="yes" xml:space="preserve">
          <source>Astute readers will ask: But if &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; was empty by default, how was Django finding the default admin templates? The answer is that, since &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django automatically looks for a &lt;code&gt;templates/&lt;/code&gt; subdirectory within each application package, for use as a fallback (don&amp;rsquo;t forget that &lt;code&gt;django.contrib.admin&lt;/code&gt; is an application).</source>
          <target state="translated">Проницательные читатели спросят: Но если &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt; был пуст по умолчанию, как Django находил шаблоны администратора по умолчанию? Ответ &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt; поскольку для APP_DIRS установлено значение &lt;code&gt;True&lt;/code&gt; , Django автоматически ищет подкаталог &lt;code&gt;templates/&lt;/code&gt; в каждом пакете приложения для использования в качестве запасного &lt;code&gt;django.contrib.admin&lt;/code&gt; (не забывайте, что django.contrib.admin является приложением).</target>
        </trans-unit>
        <trans-unit id="d51be43ea19d89d11eab90783eb916d16ff1ec98" translate="yes" xml:space="preserve">
          <source>Async adapter functions</source>
          <target state="translated">Функции адаптера Async</target>
        </trans-unit>
        <trans-unit id="081067c393edf8e5b59a8477f8ccf9941c80fd91" translate="yes" xml:space="preserve">
          <source>Async safety</source>
          <target state="translated">Безопасность Async</target>
        </trans-unit>
        <trans-unit id="247f00368a6e34b379015dfe32b1cba6c325ba87" translate="yes" xml:space="preserve">
          <source>Async views</source>
          <target state="translated">Мнения Async</target>
        </trans-unit>
        <trans-unit id="ce6652834c4009b903e89f99e020f920dd5b16ab" translate="yes" xml:space="preserve">
          <source>Async-safety</source>
          <target state="translated">Async-safety</target>
        </trans-unit>
        <trans-unit id="c05a9d33e7b51e553fd3606ad1076a07a3f0e7b8" translate="yes" xml:space="preserve">
          <source>AsyncRequestFactory</source>
          <target state="translated">AsyncRequestFactory</target>
        </trans-unit>
        <trans-unit id="a3e3a088b1b429408c27d37377c0f5fbb7e78544" translate="yes" xml:space="preserve">
          <source>Asynchronous support</source>
          <target state="translated">Асинхронная поддержка</target>
        </trans-unit>
        <trans-unit id="becc4b8b4fde1f67917d72e71ac9f0397a752159" translate="yes" xml:space="preserve">
          <source>At a certain point you are bound to look at your tests and wonder whether your code is suffering from test bloat, which brings us to:</source>
          <target state="translated">В какой-то момент вы обязательно посмотрите на свои тесты и зададитесь вопросом,не страдает ли ваш код от раздувания тестов,к чему мы и пришли:</target>
        </trans-unit>
        <trans-unit id="b07648c0929cd0231e4f9c7354122d36df0feb38" translate="yes" xml:space="preserve">
          <source>At any point, your &lt;code&gt;urlpatterns&lt;/code&gt; can &amp;ldquo;include&amp;rdquo; other URLconf modules. This essentially &amp;ldquo;roots&amp;rdquo; a set of URLs below other ones.</source>
          <target state="translated">В любой момент ваши &lt;code&gt;urlpatterns&lt;/code&gt; могут &amp;laquo;включать&amp;raquo; другие модули URLconf. По сути, это &amp;laquo;корни&amp;raquo; набора URL-адресов ниже других.</target>
        </trans-unit>
        <trans-unit id="4fb6bc9538b157b5311479759837c5d348f05677" translate="yes" xml:space="preserve">
          <source>At first, this seems like a harmless way to display a user&amp;rsquo;s name, but consider what would happen if the user entered their name as this:</source>
          <target state="translated">Сначала это кажется безопасным способом отображения имени пользователя, но подумайте, что произойдет, если пользователь введет свое имя так:</target>
        </trans-unit>
        <trans-unit id="5c7e592441c168f09fb7eebbe767a10d6bcec63c" translate="yes" xml:space="preserve">
          <source>At its core, a class-based view allows you to respond to different HTTP request methods with different class instance methods, instead of with conditionally branching code inside a single view function.</source>
          <target state="translated">В основе представления на основе классов лежит возможность отвечать на различные методы HTTP-запроса разными экземплярами методов класса,а не с условным кодом ветвления внутри одной функции представления.</target>
        </trans-unit>
        <trans-unit id="9c3be719804e367e8aea431959dce605a3f6cb0b" translate="yes" xml:space="preserve">
          <source>At present, the only hint that will be provided is &lt;code&gt;instance&lt;/code&gt;, an object instance that is related to the read or write operation that is underway. This might be the instance that is being saved, or it might be an instance that is being added in a many-to-many relation. In some cases, no instance hint will be provided at all. The router checks for the existence of an instance hint, and determine if that hint should be used to alter routing behavior.</source>
          <target state="translated">В настоящее время единственным указанием, которое будет предоставлено, является &lt;code&gt;instance&lt;/code&gt; , экземпляр объекта, который связан с выполняемой операцией чтения или записи. Это может быть экземпляр, который сохраняется, или это может быть экземпляр, который добавляется в отношении многие ко многим. В некоторых случаях ни один экземпляр подсказки не будет предоставлен вообще. Маршрутизатор проверяет наличие подсказки экземпляра и определяет, следует ли использовать эту подсказку для изменения поведения маршрутизации.</target>
        </trans-unit>
        <trans-unit id="829ecd1b52e49d4303ad554db77d3eafc6207a1a" translate="yes" xml:space="preserve">
          <source>At runtime, Django builds an in-memory unified catalog of literals-translations. To achieve this it looks for translations by following this algorithm regarding the order in which it examines the different file paths to load the compiled &lt;a href=&quot;index#term-message-file&quot;&gt;message files&lt;/a&gt; (&lt;code&gt;.mo&lt;/code&gt;) and the precedence of multiple translations for the same literal:</source>
          <target state="translated">Во время выполнения Django создает единый каталог литералов-переводов в памяти. Чтобы добиться этого, он ищет переводы, следуя этому алгоритму в отношении порядка, в котором он проверяет различные пути к файлам для загрузки &lt;a href=&quot;index#term-message-file&quot;&gt;файлов&lt;/a&gt; скомпилированных сообщений ( &lt;code&gt;.mo&lt;/code&gt; ), и приоритет нескольких переводов для одного и того же литерала:</target>
        </trans-unit>
        <trans-unit id="8a89ebae1007e121e4006edfa5c170f6cee641b3" translate="yes" xml:space="preserve">
          <source>At that point, the template engine will notice the three &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags in &lt;code&gt;base.html&lt;/code&gt; and replace those blocks with the contents of the child template. Depending on the value of &lt;code&gt;blog_entries&lt;/code&gt;, the output might look like:</source>
          <target state="translated">В этот момент механизм шаблонов заметит три &lt;code&gt;base.html&lt;/code&gt; &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; в base.html и заменит эти блоки содержимым дочернего шаблона. В зависимости от значения &lt;code&gt;blog_entries&lt;/code&gt; вывод может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="77cfb22bf021959ce50588c2fc80c01976cdb6a4" translate="yes" xml:space="preserve">
          <source>At the beginning of each request, Django closes the connection if it has reached its maximum age. If your database terminates idle connections after some time, you should set &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; to a lower value, so that Django doesn&amp;rsquo;t attempt to use a connection that has been terminated by the database server. (This problem may only affect very low traffic sites.)</source>
          <target state="translated">В начале каждого запроса Django закрывает соединение, если оно достигло своего максимального возраста. Если через некоторое время ваша база данных завершает бездействующие соединения, вы должны установить для &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt; более низкое значение, чтобы Django не пытался использовать соединение, которое было прервано сервером базы данных. (Эта проблема может затрагивать только сайты с очень низким трафиком.)</target>
        </trans-unit>
        <trans-unit id="7585cf05112053b01eb73497ef6e6dfe3dfa8b5a" translate="yes" xml:space="preserve">
          <source>At the end of each request, Django closes the connection if it has reached its maximum age or if it is in an unrecoverable error state. If any database errors have occurred while processing the requests, Django checks whether the connection still works, and closes it if it doesn&amp;rsquo;t. Thus, database errors affect at most one request; if the connection becomes unusable, the next request gets a fresh connection.</source>
          <target state="translated">В конце каждого запроса Django закрывает соединение, если оно достигло своего максимального возраста или находится в состоянии неисправимой ошибки. Если при обработке запросов произошли какие-либо ошибки базы данных, Django проверяет, работает ли соединение, и закрывает его, если это не так. Таким образом, ошибки базы данных затрагивают не более одного запроса; если соединение становится непригодным для использования, следующий запрос получает новое соединение.</target>
        </trans-unit>
        <trans-unit id="5d1991088e173e325b34bee658329e011aaa91e8" translate="yes" xml:space="preserve">
          <source>At the end of the three current slots you will find an &amp;ldquo;Add another Choice&amp;rdquo; link. If you click on it, a new slot will be added. If you want to remove the added slot, you can click on the X to the top right of the added slot. Note that you can&amp;rsquo;t remove the original three slots. This image shows an added slot:</source>
          <target state="translated">В конце трех текущих слотов вы найдете ссылку &amp;laquo;Добавить еще один выбор&amp;raquo;. Если вы нажмете на нее, новый слот будет добавлен. Если вы хотите удалить добавленный слот, вы можете нажать на X в правом верхнем углу добавленного слота. Обратите внимание, что вы не можете удалить оригинальные три слота. Это изображение показывает добавленный слот:</target>
        </trans-unit>
        <trans-unit id="189124accca7c04c0f44767f105be012dfc11d09" translate="yes" xml:space="preserve">
          <source>At the heart of the contenttypes application is the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; model, which lives at &lt;code&gt;django.contrib.contenttypes.models.ContentType&lt;/code&gt;. Instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; represent and store information about the models installed in your project, and new instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; are automatically created whenever new models are installed.</source>
          <target state="translated">В основе применения ContentTypes является &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; моделью, которая живет в &lt;code&gt;django.contrib.contenttypes.models.ContentType&lt;/code&gt; . Экземпляры &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; представляют и хранят информацию о моделях, установленных в вашем проекте, и новые экземпляры &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; автоматически создаются при установке новых моделей.</target>
        </trans-unit>
        <trans-unit id="eb21848242712cb52d07267f0c869a17ef5ee284" translate="yes" xml:space="preserve">
          <source>At the heart of this system of components is Django&amp;rsquo;s &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class. In much the same way that a Django model describes the logical structure of an object, its behavior, and the way its parts are represented to us, a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class describes a form and determines how it works and appears.</source>
          <target state="translated">В основе этой системы компонентов лежит класс &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; Джанго . Во многом так же, как модель Django описывает логическую структуру объекта, его поведение и способ представления его частей, класс &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; описывает форму и определяет, как он работает и выглядит.</target>
        </trans-unit>
        <trans-unit id="c74271cae7a8a63a2cd5fb403d3d02546e9dd5b6" translate="yes" xml:space="preserve">
          <source>At the highest level, you can serialize data like this:</source>
          <target state="translated">На самом высоком уровне,вы можете сериализовать данные таким образом:</target>
        </trans-unit>
        <trans-unit id="1644e5cc2b98ba7a4722587d8f99ea04893a79ef" translate="yes" xml:space="preserve">
          <source>At the most basic level, use &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;filter and exclude&lt;/a&gt; to do filtering in the database.</source>
          <target state="translated">На самом базовом уровне используйте &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;filter и exclude,&lt;/a&gt; чтобы выполнить фильтрацию в базе данных.</target>
        </trans-unit>
        <trans-unit id="d1ca0bd847e379e96f7fd3a9732e92c9726b4d7c" translate="yes" xml:space="preserve">
          <source>At the start of each test, before &lt;code&gt;setUp()&lt;/code&gt; is run, Django will flush the database, returning the database to the state it was in directly after &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; was called.</source>
          <target state="translated">В начале каждого теста перед &lt;code&gt;setUp()&lt;/code&gt; Django очищает базу данных, возвращая базу в состояние, в котором она находилась непосредственно после &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5ea45b8b50778db88aebff1341f87e398f338dd" translate="yes" xml:space="preserve">
          <source>At this point it&amp;rsquo;s much easier to get Django to do most of this work for us.</source>
          <target state="translated">На данный момент гораздо проще заставить Джанго выполнить большую часть этой работы за нас.</target>
        </trans-unit>
        <trans-unit id="1d3d271c0b51bfb091b47dcdc7750c2825e9b7ea" translate="yes" xml:space="preserve">
          <source>At this point it&amp;rsquo;s natural to reach for a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; to encapsulate the information sent from the user&amp;rsquo;s browser to Django. Say also that we&amp;rsquo;re heavily invested in &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt;, so we want to use the same URL for displaying the author as for capturing the message from the user. Let&amp;rsquo;s rewrite our &lt;code&gt;AuthorDetailView&lt;/code&gt; to do that.</source>
          <target state="translated">На этом этапе естественно достичь &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; чтобы инкапсулировать информацию, отправленную из браузера пользователя в Django. Скажем также, что мы вложили значительные средства в &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt; , поэтому мы хотим использовать тот же URL для отображения автора, что и для захвата сообщения от пользователя. Давайте перепишем наш &lt;code&gt;AuthorDetailView&lt;/code&gt; , чтобы сделать это.</target>
        </trans-unit>
        <trans-unit id="90c41d5fe4f42710c126fb73e78fd7dfc79715aa" translate="yes" xml:space="preserve">
          <source>At this time 3D support is limited to the PostGIS and SpatiaLite backends.</source>
          <target state="translated">В настоящее время поддержка 3D ограничивается бэкэндами PostGIS и SpatiaLite.</target>
        </trans-unit>
        <trans-unit id="ba6166c252b5f3de38513da17ca78e12d2d37fbe" translate="yes" xml:space="preserve">
          <source>At worst, as you continue developing, you might find that you have some tests that are now redundant. Even that&amp;rsquo;s not a problem; in testing redundancy is a &lt;em&gt;good&lt;/em&gt; thing.</source>
          <target state="translated">В худшем случае, продолжая разработку, вы можете обнаружить, что у вас есть некоторые тесты, которые теперь являются избыточными. Даже это не проблема; в тестировании избыточность это &lt;em&gt;хорошая&lt;/em&gt; вещь.</target>
        </trans-unit>
        <trans-unit id="9be5bc386eecce030df49a1fa6668e0b4cbebbaf" translate="yes" xml:space="preserve">
          <source>Atom feeds require a &lt;code&gt;&amp;lt;link rel=&quot;self&quot;&amp;gt;&lt;/code&gt; that defines the feed&amp;rsquo;s current location. The syndication framework populates this automatically, using the domain of the current site according to the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Для каналов Atom требуется &lt;code&gt;&amp;lt;link rel=&quot;self&quot;&amp;gt;&lt;/code&gt; , который определяет текущее местоположение канала. Структура синдикации заполняет это автоматически, используя домен текущего сайта в соответствии с настройкой &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b90ff34b6a9489024350085d4eb6b735977a0a57" translate="yes" xml:space="preserve">
          <source>Atomicity is the defining property of database transactions. &lt;code&gt;atomic&lt;/code&gt; allows us to create a block of code within which the atomicity on the database is guaranteed. If the block of code is successfully completed, the changes are committed to the database. If there is an exception, the changes are rolled back.</source>
          <target state="translated">Атомарность является определяющим свойством транзакций базы данных. &lt;code&gt;atomic&lt;/code&gt; позволяет нам создать блок кода, в котором гарантируется атомарность базы данных. Если блок кода успешно завершен, изменения фиксируются в базе данных. Если есть исключение, изменения отменяются.</target>
        </trans-unit>
        <trans-unit id="6dcbf3ddd9b69ace301044258cc096b7ab7406f4" translate="yes" xml:space="preserve">
          <source>Attribute lookup. Example: &lt;code&gt;foo.bar&lt;/code&gt;</source>
          <target state="translated">Поиск атрибутов. Пример: &lt;code&gt;foo.bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c55f8f4ff4b77e0b477555d903221859914f758b" translate="yes" xml:space="preserve">
          <source>Attribute or method lookup</source>
          <target state="translated">Атрибут или поиск метода</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="edc8a446f5933031f7f093676869a8b07a4eb854" translate="yes" xml:space="preserve">
          <source>Attributes for fields</source>
          <target state="translated">Атрибуты для полей</target>
        </trans-unit>
        <trans-unit id="3c0023632c2c11e1b27921f86d99a10bac174095" translate="yes" xml:space="preserve">
          <source>Attributes for fields with relations</source>
          <target state="translated">Атрибуты для областей с отношениями</target>
        </trans-unit>
        <trans-unit id="dd6d67bb1ba246f3e978a406d1c86519dde7af4e" translate="yes" xml:space="preserve">
          <source>Attributes of &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="translated">Атрибуты &lt;code&gt;BoundField&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="993fe975317384740fde5b696d0e0475c75b8515" translate="yes" xml:space="preserve">
          <source>Attributes set by application code</source>
          <target state="translated">Атрибуты устанавливаются по коду приложения</target>
        </trans-unit>
        <trans-unit id="d0a488eccef6df802ff85932b4c6929619c28d72" translate="yes" xml:space="preserve">
          <source>Attributes set by middleware</source>
          <target state="translated">Атрибуты устанавливаются промежуточным программным обеспечением</target>
        </trans-unit>
        <trans-unit id="6f04a43b920a1e48fb45a6c179cdc2084ecebf1a" translate="yes" xml:space="preserve">
          <source>Attributes without an argument are equal to attributes that equal in name and value (see the examples).</source>
          <target state="translated">Атрибуты без аргумента равны атрибутам,равным по имени и значению (см.примеры).</target>
        </trans-unit>
        <trans-unit id="35d0f5fbca4b84a0ac3992970ff0119954a9281f" translate="yes" xml:space="preserve">
          <source>Auth</source>
          <target state="translated">Auth</target>
        </trans-unit>
        <trans-unit id="fd9c4ff0e3b6b88e4e4dc570b6c34789d2a1e482" translate="yes" xml:space="preserve">
          <source>Authenticate access to a &lt;a href=&quot;https://subversion.apache.org/&quot;&gt;Subversion&lt;/a&gt; repository against Django users with a certain permission.</source>
          <target state="translated">Аутентифицировать доступ к хранилищу &lt;a href=&quot;https://subversion.apache.org/&quot;&gt;Subversion&lt;/a&gt; против пользователей Django с определенным разрешением.</target>
        </trans-unit>
        <trans-unit id="6337477691f18524a224e218ab6eaa20e4031637" translate="yes" xml:space="preserve">
          <source>Authenticating against Django&amp;rsquo;s user database from Apache</source>
          <target state="translated">Аутентификация против пользовательской базы данных Django от Apache</target>
        </trans-unit>
        <trans-unit id="0ac3a9f2d16fbe183a3d2e9a6f8ff0841176ff51" translate="yes" xml:space="preserve">
          <source>Authenticating against Django’s user database from Apache</source>
          <target state="translated">Аутентификация по базе данных пользователей Django из Apache</target>
        </trans-unit>
        <trans-unit id="e97f1991db31b26ac8a9363240aa4d3ec0615f5c" translate="yes" xml:space="preserve">
          <source>Authenticating users</source>
          <target state="translated">Аутентифицированные пользователи</target>
        </trans-unit>
        <trans-unit id="ed14dcd0fbc726381cb35622dd153753cdb041ca" translate="yes" xml:space="preserve">
          <source>Authentication Views</source>
          <target state="translated">Виды аутентификации</target>
        </trans-unit>
        <trans-unit id="c4983997c1873796ebbede4e16561236e028f0a9" translate="yes" xml:space="preserve">
          <source>Authentication against third-parties (OAuth, for example)</source>
          <target state="translated">Аутентификация против третьих лиц (OAuth,например)</target>
        </trans-unit>
        <trans-unit id="c38992e4692a0d7975f058861174b5e44159613e" translate="yes" xml:space="preserve">
          <source>Authentication backends</source>
          <target state="translated">Подтверждение подлинности</target>
        </trans-unit>
        <trans-unit id="f0da0e5cb0ab6921e6b41fbc41b1d18be2795467" translate="yes" xml:space="preserve">
          <source>Authentication data in templates</source>
          <target state="translated">Аутентификационные данные в шаблонах</target>
        </trans-unit>
        <trans-unit id="f9e0ae3d7a1f59d5610b13b4e0795fe4f6eeae90" translate="yes" xml:space="preserve">
          <source>Authentication in Web requests</source>
          <target state="translated">Аутентификация в веб-запросах</target>
        </trans-unit>
        <trans-unit id="dbf83e500df5ca166953c47d5fd41f5df535f927" translate="yes" xml:space="preserve">
          <source>Authentication in web requests</source>
          <target state="translated">Аутентификация в веб-запросах</target>
        </trans-unit>
        <trans-unit id="8fd5affdb2596beda05dcf367629948f7af5fdac" translate="yes" xml:space="preserve">
          <source>Authentication middleware</source>
          <target state="translated">Промежуточное программное обеспечение для аутентификации</target>
        </trans-unit>
        <trans-unit id="4dfefff9469de419af848d00af520745ea8a4c6b" translate="yes" xml:space="preserve">
          <source>Authentication support is bundled as a Django contrib module in &lt;code&gt;django.contrib.auth&lt;/code&gt;. By default, the required configuration is already included in the &lt;code&gt;settings.py&lt;/code&gt; generated by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt;, these consist of two items listed in your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">Поддержка аутентификации входит в состав модуля Django contrib в &lt;code&gt;django.contrib.auth&lt;/code&gt; . По умолчанию требуемая конфигурация уже включена в &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt; &lt;code&gt;settings.py&lt;/code&gt; , сгенерированный стартовым проектом django-admin , который состоит из двух элементов, перечисленных в настройке &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="28abf6b352445a849a8ed1ac4abaedc6f68a13c8" translate="yes" xml:space="preserve">
          <source>Authentication using &lt;code&gt;REMOTE_USER&lt;/code&gt;</source>
          <target state="translated">Аутентификация с использованием &lt;code&gt;REMOTE_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da5b697f1b93b20c027315397a08a6d47e1b7a2a" translate="yes" xml:space="preserve">
          <source>Authentication using REMOTE_USER</source>
          <target state="translated">Аутентификация с помощью REMOTE_USER</target>
        </trans-unit>
        <trans-unit id="9cb23f99177d8d154483c5dea174d94d6eb5ca7b" translate="yes" xml:space="preserve">
          <source>Authentication with &lt;code&gt;mod_wsgi&lt;/code&gt;</source>
          <target state="translated">Аутентификация с помощью &lt;code&gt;mod_wsgi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="212ec648f9cab319ad23c113e8368944db9a13b4" translate="yes" xml:space="preserve">
          <source>Authorization for anonymous users</source>
          <target state="translated">Авторизация для анонимных пользователей</target>
        </trans-unit>
        <trans-unit id="deebdf5e7d673f1085d509c1b58594d399c3632d" translate="yes" xml:space="preserve">
          <source>Authorization for inactive users</source>
          <target state="translated">Авторизация неактивных пользователей</target>
        </trans-unit>
        <trans-unit id="c3c77cf7e085536fe4f642640a0a0f676bb2d395" translate="yes" xml:space="preserve">
          <source>Authorization with &lt;code&gt;mod_wsgi&lt;/code&gt; and Django groups</source>
          <target state="translated">Авторизация с группами &lt;code&gt;mod_wsgi&lt;/code&gt; и Django</target>
        </trans-unit>
        <trans-unit id="a5d0ea80bfa024e6d10cf0c5e2149c9e5030bdd7" translate="yes" xml:space="preserve">
          <source>Authors with multiple entries appear multiple times and authors without any entries have &lt;code&gt;None&lt;/code&gt; for the entry headline.</source>
          <target state="translated">Авторы с несколькими записями появляются несколько раз и авторов без каких - либо записей нет &lt;code&gt;None&lt;/code&gt; для ввода заголовка.</target>
        </trans-unit>
        <trans-unit id="55f9e784343673164bbb195a41119d309f4c90e6" translate="yes" xml:space="preserve">
          <source>Auto-escaping considerations</source>
          <target state="translated">Автоматическое принятие решений</target>
        </trans-unit>
        <trans-unit id="ade49e65aa2d499a314989d73b7a5087ffe5df44" translate="yes" xml:space="preserve">
          <source>Auto-generate the models</source>
          <target state="translated">Автоматическая генерация моделей</target>
        </trans-unit>
        <trans-unit id="960a275624ec1eca722f7e66870b2a9f99cfac4d" translate="yes" xml:space="preserve">
          <source>Auto-incrementing primary keys</source>
          <target state="translated">Автоинкрементирование первичных ключей</target>
        </trans-unit>
        <trans-unit id="8453dfc709bd717007fa35256ab12791696925f8" translate="yes" xml:space="preserve">
          <source>Autocommit</source>
          <target state="translated">Autocommit</target>
        </trans-unit>
        <trans-unit id="84cf5f8413204d40a8f95216ba5d5526d11ffeaf" translate="yes" xml:space="preserve">
          <source>Autocommit is initially turned on. If you turn it off, it&amp;rsquo;s your responsibility to restore it.</source>
          <target state="translated">Автокоммит изначально включен. Если вы выключите его, это ваша ответственность, чтобы восстановить его.</target>
        </trans-unit>
        <trans-unit id="a943f8638c8dcc1ad157c95e08768cc1250e25d7" translate="yes" xml:space="preserve">
          <source>Automated testing is an extremely useful bug-killing tool for the modern Web developer. You can use a collection of tests &amp;ndash; a &lt;strong&gt;test suite&lt;/strong&gt; &amp;ndash; to solve, or avoid, a number of problems:</source>
          <target state="translated">Автоматизированное тестирование является чрезвычайно полезным инструментом для устранения ошибок для современного веб-разработчика. Вы можете использовать набор тестов - набор &lt;strong&gt;тестов&lt;/strong&gt; - чтобы решить или избежать ряда проблем:</target>
        </trans-unit>
        <trans-unit id="27e49177e9807d73541f916f6c05979f97b85ba4" translate="yes" xml:space="preserve">
          <source>Automatic HTML escaping</source>
          <target state="translated">Автоматическое экранирование HTML</target>
        </trans-unit>
        <trans-unit id="61fa92d56d11b7919bb8da95ce33a7ad7110c3eb" translate="yes" xml:space="preserve">
          <source>Automatic Spatial Transformations</source>
          <target state="translated">Автоматические пространственные преобразования</target>
        </trans-unit>
        <trans-unit id="c0ca671cba6e070d7b0566fe1ba785b6645d5a0c" translate="yes" xml:space="preserve">
          <source>Automatic database routing</source>
          <target state="translated">Автоматическая маршрутизация баз данных</target>
        </trans-unit>
        <trans-unit id="2daa6540a46502f028c3d359454675fd27347edd" translate="yes" xml:space="preserve">
          <source>Automatic primary key fields</source>
          <target state="translated">Автоматические поля первичного ключа</target>
        </trans-unit>
        <trans-unit id="7d8ad18befa397a93cf4e3a8b465b236689355f7" translate="yes" xml:space="preserve">
          <source>Automatic reloading of &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Автоматическая перезагрузка &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1394ea568cf8a61e49123ff400b9295452be4554" translate="yes" xml:space="preserve">
          <source>Automatic typecasting can cause unexpected results</source>
          <target state="translated">Автоматическое печатание на машинке может привести к неожиданным результатам</target>
        </trans-unit>
        <trans-unit id="8a5b7c843454a5b2b1e845bfbf336ce8a6a2428f" translate="yes" xml:space="preserve">
          <source>Automatically generate a mapping dictionary for use with &lt;a href=&quot;layermapping#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Автоматически создавать словарь сопоставления для использования с &lt;a href=&quot;layermapping#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="348a1bbe32f1a6d151804e3d0e2a998d171cfd50" translate="yes" xml:space="preserve">
          <source>Automatically set the field to now every time the object is saved. Useful for &amp;ldquo;last-modified&amp;rdquo; timestamps. Note that the current date is &lt;em&gt;always&lt;/em&gt; used; it&amp;rsquo;s not just a default value that you can override.</source>
          <target state="translated">Автоматически устанавливайте поле сейчас при каждом сохранении объекта. Полезно для &amp;laquo;последних модифицированных&amp;raquo; временных меток. Обратите внимание, что текущая дата &lt;em&gt;всегда&lt;/em&gt; используется; это не просто значение по умолчанию, которое вы можете переопределить.</target>
        </trans-unit>
        <trans-unit id="e1eb3738429a66a56ba42aade58f3873fec71c49" translate="yes" xml:space="preserve">
          <source>Automatically set the field to now when the object is first created. Useful for creation of timestamps. Note that the current date is &lt;em&gt;always&lt;/em&gt; used; it&amp;rsquo;s not just a default value that you can override. So even if you set a value for this field when creating the object, it will be ignored. If you want to be able to modify this field, set the following instead of &lt;code&gt;auto_now_add=True&lt;/code&gt;:</source>
          <target state="translated">Автоматически установить поле на сейчас, когда объект создается впервые. Полезно для создания меток времени. Обратите внимание, что текущая дата &lt;em&gt;всегда&lt;/em&gt; используется; это не просто значение по умолчанию, которое вы можете переопределить. Так что даже если вы установите значение для этого поля при создании объекта, оно будет проигнорировано. Если вы хотите изменить это поле, установите вместо &lt;code&gt;auto_now_add=True&lt;/code&gt; следующее :</target>
        </trans-unit>
        <trans-unit id="0c56f5d1cbaa3e3798d943d9e0c7e14536b2ace4" translate="yes" xml:space="preserve">
          <source>Available &lt;code&gt;Meta&lt;/code&gt; options</source>
          <target state="translated">Доступные &lt;code&gt;Meta&lt;/code&gt; варианты</target>
        </trans-unit>
        <trans-unit id="749dcc6931e997fce0e6000d53dab329edee9e45" translate="yes" xml:space="preserve">
          <source>Available authentication backends</source>
          <target state="translated">Доступная аутентификация</target>
        </trans-unit>
        <trans-unit id="8022dbeab0ead822466c6e95e26e7dc7892483ad" translate="yes" xml:space="preserve">
          <source>Available commands</source>
          <target state="translated">Доступные команды</target>
        </trans-unit>
        <trans-unit id="005b1caaecf7a5e7e239831f844db54f7fb44385" translate="yes" xml:space="preserve">
          <source>Available format strings:</source>
          <target state="translated">Доступные строки формата:</target>
        </trans-unit>
        <trans-unit id="66149627d8cbb08e48e77e67a8c900cf6f8e757f" translate="yes" xml:space="preserve">
          <source>Available formats are:</source>
          <target state="translated">Доступные форматы:</target>
        </trans-unit>
        <trans-unit id="9329e10e25582241a54c6a10908254870af37224" translate="yes" xml:space="preserve">
          <source>Available middleware</source>
          <target state="translated">Доступное промежуточное программное обеспечение</target>
        </trans-unit>
        <trans-unit id="277a0831ffa6dd7df99804a3bbb855b456ec1f81" translate="yes" xml:space="preserve">
          <source>Available settings</source>
          <target state="translated">Доступные настройки</target>
        </trans-unit>
        <trans-unit id="feb8fbc77cb1d6f4edc7d323a43667ba938321aa" translate="yes" xml:space="preserve">
          <source>Available values for &lt;code&gt;allowed_permissions&lt;/code&gt; and the corresponding method checks are:</source>
          <target state="translated">Доступные значения для &lt;code&gt;allowed_permissions&lt;/code&gt; и соответствующих методов проверки:</target>
        </trans-unit>
        <trans-unit id="1e196c09ba87bfb3b1ca68e7701b13e4fdceeae7" translate="yes" xml:space="preserve">
          <source>Avoid anything more complex</source>
          <target state="translated">Избегайте чего-либо более сложного</target>
        </trans-unit>
        <trans-unit id="f080a09173571088fa9d223a4573d550fffb2f30" translate="yes" xml:space="preserve">
          <source>Avoid catching exceptions inside &lt;code&gt;atomic&lt;/code&gt;!</source>
          <target state="translated">Избегайте ловить исключения внутри &lt;code&gt;atomic&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="6e0e214b2855516f39cd3567c046d6d06b5c7dad" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; on string-based fields such as &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt;. If a string-based field has &lt;code&gt;null=True&lt;/code&gt;, that means it has two possible values for &amp;ldquo;no data&amp;rdquo;: &lt;code&gt;NULL&lt;/code&gt;, and the empty string. In most cases, it&amp;rsquo;s redundant to have two possible values for &amp;ldquo;no data;&amp;rdquo; the Django convention is to use the empty string, not &lt;code&gt;NULL&lt;/code&gt;. One exception is when a &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; has both &lt;code&gt;unique=True&lt;/code&gt; and &lt;code&gt;blank=True&lt;/code&gt; set. In this situation, &lt;code&gt;null=True&lt;/code&gt; is required to avoid unique constraint violations when saving multiple objects with blank values.</source>
          <target state="translated">Избегайте использования &lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; в строковых полях, таких как CharField и &lt;a href=&quot;#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; &lt;/a&gt; . Если строковое поле имеет значение &lt;code&gt;null=True&lt;/code&gt; , это означает, что у него есть два возможных значения для &amp;laquo;без данных&amp;raquo;: &lt;code&gt;NULL&lt;/code&gt; и пустая строка. В большинстве случаев избыточно иметь два возможных значения &amp;laquo;нет данных&amp;raquo;; соглашение Django - использовать пустую строку, а не &lt;code&gt;NULL&lt;/code&gt; . Единственным исключением является случай, когда &lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; имеет &lt;code&gt;unique=True&lt;/code&gt; и &lt;code&gt;blank=True&lt;/code&gt; . В этой ситуации &lt;code&gt;null=True&lt;/code&gt; требуется, чтобы избежать уникальных нарушений ограничений при сохранении нескольких объектов с пустыми значениями.</target>
        </trans-unit>
        <trans-unit id="c2c4addd555a2578588f134a04c414a8bfc5cd8d" translate="yes" xml:space="preserve">
          <source>Avoid using the &lt;code&gt;filter&lt;/code&gt; argument with a single annotation or aggregation. It&amp;rsquo;s more efficient to use &lt;code&gt;QuerySet.filter()&lt;/code&gt; to exclude rows. The aggregation &lt;code&gt;filter&lt;/code&gt; argument is only useful when using two or more aggregations over the same relations with different conditionals.</source>
          <target state="translated">Избегайте использования аргумента &lt;code&gt;filter&lt;/code&gt; с одной аннотацией или агрегацией. Более эффективно использовать &lt;code&gt;QuerySet.filter()&lt;/code&gt; для исключения строк. Аргумент &lt;code&gt;filter&lt;/code&gt; агрегации полезен только при использовании двух или более агрегаций для одних и тех же отношений с разными условными выражениями.</target>
        </trans-unit>
        <trans-unit id="94d7b19f9decbb77a74552061d2a7e28ff16c911" translate="yes" xml:space="preserve">
          <source>Avoiding SQL injection</source>
          <target state="translated">Предотвращение SQL-инъекции</target>
        </trans-unit>
        <trans-unit id="9410dc97d2c72692ef59e83fd28566db94c67883" translate="yes" xml:space="preserve">
          <source>Avoiding XSS vulnerabilities when reusing built-in filters</source>
          <target state="translated">Исключение уязвимостей XSS при повторном использовании встроенных фильтров.</target>
        </trans-unit>
        <trans-unit id="65a8d185f4de4fa2986100dd5bc5fd9f71b4dd53" translate="yes" xml:space="preserve">
          <source>Avoiding race conditions using &lt;code&gt;F()&lt;/code&gt;</source>
          <target state="translated">Как избежать условий гонки с помощью &lt;code&gt;F()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="d3995b2b37b0a9d72d4c1f4df49540d8b2f1d7ac" translate="yes" xml:space="preserve">
          <source>B, C</source>
          <target state="translated">B,C</target>
        </trans-unit>
        <trans-unit id="49d16c123e63cae0aa2ecdd12be80bdb56763577" translate="yes" xml:space="preserve">
          <source>Babel provides similar features to &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt;, can replace it in general, and doesn&amp;rsquo;t depend on &lt;code&gt;gettext&lt;/code&gt;. For more information, read its documentation about &lt;a href=&quot;http://babel.pocoo.org/en/latest/messages.html&quot;&gt;working with message catalogs&lt;/a&gt;.</source>
          <target state="translated">Babel предоставляет аналогичные функции для &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt; , может заменить его в целом, и не зависит от &lt;code&gt;gettext&lt;/code&gt; . Для получения дополнительной информации прочитайте документацию по &lt;a href=&quot;http://babel.pocoo.org/en/latest/messages.html&quot;&gt;работе с каталогами сообщений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="022a7f167d95521de1acf21e27e11c487396593f" translate="yes" xml:space="preserve">
          <source>Back to the &lt;code&gt;detail()&lt;/code&gt; view for our poll application. Given the context variable &lt;code&gt;question&lt;/code&gt;, here&amp;rsquo;s what the &lt;code&gt;polls/detail.html&lt;/code&gt; template might look like:</source>
          <target state="translated">Вернуться к представлению &lt;code&gt;detail()&lt;/code&gt; для нашего приложения для опроса. Учитывая &lt;code&gt;question&lt;/code&gt; переменной контекста , вот как может выглядеть шаблон &lt;code&gt;polls/detail.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="907a75668b7e03c4659947b3193d65847d1a8f35" translate="yes" xml:space="preserve">
          <source>Backend Support</source>
          <target state="translated">Бэкэнд Поддержка</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="138b85f239e58f9bda1316136aa82c90e7878d7f" translate="yes" xml:space="preserve">
          <source>Background theory</source>
          <target state="translated">Теория фона</target>
        </trans-unit>
        <trans-unit id="8fd78925dba59eef91afba0cdabe923520e5ee69" translate="yes" xml:space="preserve">
          <source>Backwards compatibility</source>
          <target state="translated">Обратная совместимость</target>
        </trans-unit>
        <trans-unit id="b1ff57d696aa3ec09bd76c88944e1a7097ee37a3" translate="yes" xml:space="preserve">
          <source>Bad:</source>
          <target state="translated">Bad:</target>
        </trans-unit>
        <trans-unit id="02fb997b61900c1aeca6956107b15ab95765ea07" translate="yes" xml:space="preserve">
          <source>Bad: &lt;code&gt;'example.com/foo/bar/'&lt;/code&gt;</source>
          <target state="translated">Плохо: &lt;code&gt;'example.com/foo/bar/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc163b02e6955ecbd0ac6fa7a6c224b77e0f614b" translate="yes" xml:space="preserve">
          <source>Bad: &lt;code&gt;'https://example.com/foo/bar/'&lt;/code&gt;</source>
          <target state="translated">Плохо: &lt;code&gt;'https://example.com/foo/bar/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5400b30a122881d47fdeb120840f94c91748df48" translate="yes" xml:space="preserve">
          <source>Base class for all syndication feeds. Subclasses should provide write().</source>
          <target state="translated">Базовый класс для всех синдикационных каналов.Подклассы должны обеспечивать функцию write().</target>
        </trans-unit>
        <trans-unit id="5a98533d4533777678a2826b595332b97d370e7d" translate="yes" xml:space="preserve">
          <source>Base class for form range fields.</source>
          <target state="translated">Базовый класс для полей диапазона форм.</target>
        </trans-unit>
        <trans-unit id="694691a2cdd7f3264022193ea43da2dc86d47851" translate="yes" xml:space="preserve">
          <source>Base class for model range fields.</source>
          <target state="translated">Базовый класс для полей модельного ряда.</target>
        </trans-unit>
        <trans-unit id="33498e9763de95f98078b83846fb61dc566837f8" translate="yes" xml:space="preserve">
          <source>Base class restrictions</source>
          <target state="translated">Ограничения базового класса</target>
        </trans-unit>
        <trans-unit id="1327df53c1a32ce9abfbbd3212f5272b0617455c" translate="yes" xml:space="preserve">
          <source>Base class-based views can be thought of as &lt;em&gt;parent&lt;/em&gt; views, which can be used by themselves or inherited from. They may not provide all the capabilities required for projects, in which case there are Mixins which extend what base views can do.</source>
          <target state="translated">Представления на основе базового класса можно рассматривать как &lt;em&gt;родительские&lt;/em&gt; представления, которые могут использоваться сами по себе или наследоваться от. Они могут не предоставлять все возможности, необходимые для проектов, и в этом случае существуют миксины, расширяющие возможности базовых представлений.</target>
        </trans-unit>
        <trans-unit id="22ad5eb083aa4a8059d54f5bd8ea8049a7a5258c" translate="yes" xml:space="preserve">
          <source>Base directory to where GeoIP data is located or the full path to where the city or country data files (&lt;code&gt;.mmdb&lt;/code&gt;) are located. Assumes that both the city and country datasets are located in this directory; overrides the &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt;&lt;code&gt;GEOIP_PATH&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Базовый каталог, в котором находятся данные GeoIP, или полный путь к файлам данных города или страны ( &lt;code&gt;.mmdb&lt;/code&gt; ). Предполагается, что наборы данных города и страны находятся в этом каталоге; переопределяет настройку &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt; &lt;code&gt;GEOIP_PATH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49f6341ab3962fe35e78e061dffd867a40acb8d9" translate="yes" xml:space="preserve">
          <source>Base managers</source>
          <target state="translated">Базовые менеджеры</target>
        </trans-unit>
        <trans-unit id="524becf4956384aaf9401753f12a515f39814fae" translate="yes" xml:space="preserve">
          <source>Base managers aren&amp;rsquo;t used when querying on related models, or when &lt;a href=&quot;queries#backwards-related-objects&quot;&gt;accessing a one-to-many or many-to-many relationship&lt;/a&gt;. For example, if the &lt;code&gt;Question&lt;/code&gt; model &lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;from the tutorial&lt;/a&gt; had a &lt;code&gt;deleted&lt;/code&gt; field and a base manager that filters out instances with &lt;code&gt;deleted=True&lt;/code&gt;, a queryset like &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; would include choices related to deleted questions.</source>
          <target state="translated">Базовые менеджеры не используются при запросах связанных моделей или при &lt;a href=&quot;queries#backwards-related-objects&quot;&gt;доступе к отношениям &amp;laquo;один ко многим&amp;raquo; или &amp;laquo;многие ко многим&amp;raquo;&lt;/a&gt; . Например, если в модели &lt;code&gt;Question&lt;/code&gt; &lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;из учебника&lt;/a&gt; есть &lt;code&gt;deleted&lt;/code&gt; поле и базовый менеджер, который отфильтровывает экземпляры с &lt;code&gt;deleted=True&lt;/code&gt; , набор &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; , такой как Choice.objects.filter (question__name__startswith = 'What'), будет включать варианты, связанные с удаленными вопросами.</target>
        </trans-unit>
        <trans-unit id="27eb3e111fe45536ce06e4e05df628d6121d667c" translate="yes" xml:space="preserve">
          <source>Base managers aren&amp;rsquo;t used when querying on related models. For example, if the &lt;code&gt;Question&lt;/code&gt; model &lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;from the tutorial&lt;/a&gt; had a &lt;code&gt;deleted&lt;/code&gt; field and a base manager that filters out instances with &lt;code&gt;deleted=True&lt;/code&gt;, a queryset like &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; would include choices related to deleted questions.</source>
          <target state="translated">Базовые менеджеры не используются при запросах по связанным моделям. Например, если модель &lt;code&gt;Question&lt;/code&gt; &lt;a href=&quot;../../intro/tutorial02#creating-models&quot;&gt;из учебника&lt;/a&gt; имеет &lt;code&gt;deleted&lt;/code&gt; поле и базовый менеджер, который отфильтровывает экземпляры с &lt;code&gt;deleted=True&lt;/code&gt; , набор &lt;code&gt;Choice.objects.filter(question__name__startswith='What')&lt;/code&gt; , такой как Choice.objects.filter (question__name__startswith = 'What'), будет включать варианты, связанные с удаленными вопросами.</target>
        </trans-unit>
        <trans-unit id="a5ed205aa5fd703bcc3d50fb6437d7138a8d1c26" translate="yes" xml:space="preserve">
          <source>Base views</source>
          <target state="translated">Основные виды</target>
        </trans-unit>
        <trans-unit id="13b83badb163e89e1591cbc1c77011d952c1640b" translate="yes" xml:space="preserve">
          <source>Base vs Generic views</source>
          <target state="translated">Вид База против Дженерика</target>
        </trans-unit>
        <trans-unit id="a0ce6714ceb84d23825af929df33051d80afd8c9" translate="yes" xml:space="preserve">
          <source>Base widget classes</source>
          <target state="translated">Базовые классы виджетов</target>
        </trans-unit>
        <trans-unit id="cc1e70bb062910be7a643ca6e26ad21dd094cf82" translate="yes" xml:space="preserve">
          <source>Base widget classes &lt;a href=&quot;#django.forms.Widget&quot;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; are subclassed by all the &lt;a href=&quot;#built-in-widgets&quot;&gt;built-in widgets&lt;/a&gt; and may serve as a foundation for custom widgets.</source>
          <target state="translated">Базовые классы &lt;a href=&quot;#django.forms.Widget&quot;&gt; &lt;code&gt;Widget&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt; подразделяются на все &lt;a href=&quot;#built-in-widgets&quot;&gt;встроенные виджеты&lt;/a&gt; и могут служить основой для пользовательских виджетов.</target>
        </trans-unit>
        <trans-unit id="023ccd9b632124d69f29133e19fa531effbe1c65" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt;&lt;code&gt;DateRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt;&lt;code&gt;DateRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">На основе &lt;a href=&quot;../../forms/fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; и переводит его ввод в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt; &lt;code&gt;DateRange&lt;/code&gt; &lt;/a&gt; . По умолчанию для &lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt; &lt;code&gt;DateRangeField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91cf6094cf7e99756e3d52b512c1ed523b74be07" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt;&lt;code&gt;DateTimeTZRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.DateTimeRangeField&quot;&gt;&lt;code&gt;DateTimeRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Основывается на &lt;a href=&quot;../../forms/fields#django.forms.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; и переводит его входные данные в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt; &lt;code&gt;DateTimeTZRange&lt;/code&gt; &lt;/a&gt; . По умолчанию для &lt;a href=&quot;fields#django.contrib.postgres.fields.DateTimeRangeField&quot;&gt; &lt;code&gt;DateTimeRangeField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d4dac139c2acb993f0cfb3295d29cf679450b8b" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.DecimalRangeField&quot;&gt;&lt;code&gt;DecimalRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Основывается на &lt;a href=&quot;../../forms/fields#django.forms.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; &lt;/a&gt; и переводит его входные данные в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt; . По умолчанию для &lt;a href=&quot;fields#django.contrib.postgres.fields.DecimalRangeField&quot;&gt; &lt;code&gt;DecimalRangeField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2d5fc68b0e87ce589e5a7786b34368ef0034a1e" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.FloatRangeField&quot;&gt;&lt;code&gt;FloatRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Основывается на &lt;a href=&quot;../../forms/fields#django.forms.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; &lt;/a&gt; и переводит его входные данные в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt; . По умолчанию для &lt;a href=&quot;fields#django.contrib.postgres.fields.FloatRangeField&quot;&gt; &lt;code&gt;FloatRangeField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="593a52dc3c5e2722090dcbfa0ed8460ebad0bdd8" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;../../forms/fields#django.forms.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; and translates its input into &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt;. Default for &lt;a href=&quot;fields#django.contrib.postgres.fields.IntegerRangeField&quot;&gt;&lt;code&gt;IntegerRangeField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fields#django.contrib.postgres.fields.BigIntegerRangeField&quot;&gt;&lt;code&gt;BigIntegerRangeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Основывается на &lt;a href=&quot;../../forms/fields#django.forms.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; и переводит его входные данные в &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt; . По умолчанию для &lt;a href=&quot;fields#django.contrib.postgres.fields.IntegerRangeField&quot;&gt; &lt;code&gt;IntegerRangeField&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;fields#django.contrib.postgres.fields.BigIntegerRangeField&quot;&gt; &lt;code&gt;BigIntegerRangeField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e63f51f7e5afad0c831b1acc1916d16e437f5b4a" translate="yes" xml:space="preserve">
          <source>Bash completion</source>
          <target state="translated">Башовое завершение</target>
        </trans-unit>
        <trans-unit id="36c41688b96ebca8546b978b079367e1aa359e74" translate="yes" xml:space="preserve">
          <source>Basic configuration</source>
          <target state="translated">Базовая конфигурация</target>
        </trans-unit>
        <trans-unit id="4c8d5fdc5db9950cf7bea592d196bad4f803b3fb" translate="yes" xml:space="preserve">
          <source>Basic examples</source>
          <target state="translated">Основные примеры</target>
        </trans-unit>
        <trans-unit id="b5fbde77a176de1b8104d736377f8f9f6c7c45c5" translate="yes" xml:space="preserve">
          <source>Basic file uploads</source>
          <target state="translated">Базовые загрузки файлов</target>
        </trans-unit>
        <trans-unit id="2c171ef65e06890e2659b070f8e8e3e962cb28bc" translate="yes" xml:space="preserve">
          <source>Basic forms</source>
          <target state="translated">Основные формы</target>
        </trans-unit>
        <trans-unit id="d5f25c152bb6bc0e7fa0c6d19f0fd9ee0aaac6f7" translate="yes" xml:space="preserve">
          <source>Basic lookups keyword arguments take the form &lt;code&gt;field__lookuptype=value&lt;/code&gt;. (That&amp;rsquo;s a double-underscore). For example:</source>
          <target state="translated">Базовые аргументы для ключевых слов поиска имеют вид &lt;code&gt;field__lookuptype=value&lt;/code&gt; . (Это двойное подчеркивание). Например:</target>
        </trans-unit>
        <trans-unit id="f5f6d1eff70850fa7cf94c4c89bc731b91ecc609" translate="yes" xml:space="preserve">
          <source>Basic testing strategies</source>
          <target state="translated">Основные стратегии тестирования</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">Основное использование</target>
        </trans-unit>
        <trans-unit id="722f99933cbd1a6d2ea10a0e75995a9b288cb431" translate="yes" xml:space="preserve">
          <source>Basically, the deployment of a GeoDjango application is not different from the deployment of a normal Django application. Please consult Django&amp;rsquo;s &lt;a href=&quot;../../../howto/deployment/index&quot;&gt;deployment documentation&lt;/a&gt;.</source>
          <target state="translated">По сути, развертывание приложения GeoDjango не отличается от развертывания обычного приложения Django. Пожалуйста, обратитесь к &lt;a href=&quot;../../../howto/deployment/index&quot;&gt;документации&lt;/a&gt; по развертыванию Django .</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="517dbf0b4b497174beda382d4dbff241d4173d30" translate="yes" xml:space="preserve">
          <source>Be aware that files created in this way are not automatically closed. The following approach may be used to close files automatically:</source>
          <target state="translated">Имейте в виду,что созданные таким образом файлы не закрываются автоматически.Для автоматического закрытия файлов может использоваться следующий подход:</target>
        </trans-unit>
        <trans-unit id="3ec8a16f0562ac16bec7f7eba4ff2610dedf37d0" translate="yes" xml:space="preserve">
          <source>Be aware that if all the passwords in your database aren&amp;rsquo;t encoded in the default hasher&amp;rsquo;s algorithm, you may be vulnerable to a user enumeration timing attack due to a difference between the duration of a login request for a user with a password encoded in a non-default algorithm and the duration of a login request for a nonexistent user (which runs the default hasher). You may be able to mitigate this by &lt;a href=&quot;#wrapping-password-hashers&quot;&gt;upgrading older password hashes&lt;/a&gt;.</source>
          <target state="translated">Имейте в виду, что если все пароли в вашей базе данных не закодированы в алгоритме хэширования по умолчанию, вы можете быть уязвимы к атаке по времени с перечислением пользователей из-за разницы в продолжительности запроса на вход в систему для пользователя с паролем, закодированным в алгоритм не по умолчанию и продолжительность запроса на вход в систему для несуществующего пользователя (который запускает хэш по умолчанию). Вы можете уменьшить это, &lt;a href=&quot;#wrapping-password-hashers&quot;&gt;обновив старые хэши паролей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="894fadfef402ddaec33f2601f2a9a2e3348e30d3" translate="yes" xml:space="preserve">
          <source>Be aware that not all Django output can be passed unmodified to &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;. For example, if you have some custom type in an object to be serialized, you&amp;rsquo;ll have to write a custom &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; encoder for it. Something like this will work:</source>
          <target state="translated">Имейте в виду, что не все выходные данные Django могут быть переданы без изменений в &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt; . Например, если у вас есть некоторый пользовательский тип в объекте, который нужно сериализовать, вам придется написать собственный кодер &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt; для него. Примерно так будет работать:</target>
        </trans-unit>
        <trans-unit id="77345e4d4278d00200e1ee0b3d2293aa945623d3" translate="yes" xml:space="preserve">
          <source>Be aware that not all options set in the &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; part of your database configuration in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; are passed to the command-line client, e.g. &lt;code&gt;'isolation_level'&lt;/code&gt;.</source>
          <target state="translated">Имейте в виду, что не все параметры, установленные в части &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; конфигурации вашей базы данных в &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; , передаются клиенту командной строки, например, &lt;code&gt;'isolation_level'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36e711b8e76ffd6eb7723f59093585eedc6d6a56" translate="yes" xml:space="preserve">
          <source>Be aware that sending an email costs extra time, hence you may be vulnerable to an email address enumeration timing attack due to a difference between the duration of a reset request for an existing email address and the duration of a reset request for a nonexistent email address. To reduce the overhead, you can use a 3rd party package that allows to send emails asynchronously, e.g. &lt;a href=&quot;https://pypi.org/project/django-mailer/&quot;&gt;django-mailer&lt;/a&gt;.</source>
          <target state="translated">Имейте в виду, что отправка электронного письма требует дополнительного времени, поэтому вы можете быть уязвимы для атаки по времени перечисления адресов электронной почты из-за разницы между продолжительностью запроса на сброс для существующего адреса электронной почты и продолжительностью запроса на сброс для несуществующего адреса электронной почты. . Чтобы уменьшить накладные расходы, вы можете использовать сторонний пакет, который позволяет отправлять электронные письма асинхронно, например &lt;a href=&quot;https://pypi.org/project/django-mailer/&quot;&gt;django-mailer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79e3498394e017162e5dbcbada25f0d715476bfd" translate="yes" xml:space="preserve">
          <source>Be aware that the &lt;code&gt;update()&lt;/code&gt; method is converted directly to an SQL statement. It is a bulk operation for direct updates. It doesn&amp;rsquo;t run any &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; methods on your models, or emit the &lt;code&gt;pre_save&lt;/code&gt; or &lt;code&gt;post_save&lt;/code&gt; signals (which are a consequence of calling &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;), or honor the &lt;a href=&quot;../../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; field option. If you want to save every item in a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and make sure that the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method is called on each instance, you don&amp;rsquo;t need any special function to handle that. Loop over them and call &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Помните, что метод &lt;code&gt;update()&lt;/code&gt; преобразуется непосредственно в оператор SQL. Это массовая операция для прямых обновлений. Он не запускает никаких методов &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; на ваших моделях, не &lt;code&gt;post_save&lt;/code&gt; сигналы &lt;code&gt;pre_save&lt;/code&gt; или post_save (которые являются следствием вызова &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; ), или &lt;a href=&quot;../../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt; параметр поля auto_now . Если вы хотите сохранить каждый элемент в &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; и убедиться, что метод &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; вызывается для каждого экземпляра, вам не нужны никакие специальные функции для его обработки. Обведите их и вызовите &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8e728258ab818b7ff5c26154c9afe0d25d494d28" translate="yes" xml:space="preserve">
          <source>Be aware that this migration will take on the order of several minutes for several thousand users, depending on the speed of your hardware.</source>
          <target state="translated">Имейте в виду,что этот переход займет порядка нескольких минут для нескольких тысяч пользователей,в зависимости от скорости вашего оборудования.</target>
        </trans-unit>
        <trans-unit id="bf4d63f2b9cfcfa220a03e6a26d997aa9e14d6d2" translate="yes" xml:space="preserve">
          <source>Be aware that this particular setup disables authentication with the default &lt;code&gt;ModelBackend&lt;/code&gt;. This means that if the &lt;code&gt;REMOTE_USER&lt;/code&gt; value is not set then the user is unable to log in, even using Django&amp;rsquo;s admin interface. Adding &lt;code&gt;'django.contrib.auth.backends.ModelBackend'&lt;/code&gt; to the &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; list will use &lt;code&gt;ModelBackend&lt;/code&gt; as a fallback if &lt;code&gt;REMOTE_USER&lt;/code&gt; is absent, which will solve these issues.</source>
          <target state="translated">Имейте в &lt;code&gt;ModelBackend&lt;/code&gt; что эта конкретная настройка отключает аутентификацию с помощью ModelBackend по умолчанию . Это означает, что если значение &lt;code&gt;REMOTE_USER&lt;/code&gt; не установлено, то пользователь не сможет войти, даже используя интерфейс администратора Django. Добавление &lt;code&gt;'django.contrib.auth.backends.ModelBackend'&lt;/code&gt; в &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; список будет использовать &lt;code&gt;ModelBackend&lt;/code&gt; в качестве запасного варианта , если &lt;code&gt;REMOTE_USER&lt;/code&gt; отсутствует, что позволит решить эти проблемы.</target>
        </trans-unit>
        <trans-unit id="8c45bcc820afa9ec7f09ab5e262d83093e9f5054" translate="yes" xml:space="preserve">
          <source>Be careful not to modify any objects created in &lt;code&gt;setUpTestData()&lt;/code&gt; in your test methods. Modifications to in-memory objects from setup work done at the class level will persist between test methods. If you do need to modify them, you could reload them in the &lt;code&gt;setUp()&lt;/code&gt; method with &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.refresh_from_db&quot;&gt;&lt;code&gt;refresh_from_db()&lt;/code&gt;&lt;/a&gt;, for example.</source>
          <target state="translated">Будьте осторожны, чтобы не изменять любые объекты, созданные в &lt;code&gt;setUpTestData()&lt;/code&gt; в ваших тестовых методах. Изменения в объектах в памяти из-за работы по настройке, выполненной на уровне класса, будут сохраняться между методами тестирования. Если вам нужно изменить их, вы можете загрузить их в &lt;code&gt;setUp()&lt;/code&gt; метод с &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.refresh_from_db&quot;&gt; &lt;code&gt;refresh_from_db()&lt;/code&gt; &lt;/a&gt; , например.</target>
        </trans-unit>
        <trans-unit id="4b6c803cd4cd7fb715766d27118b3711aba748cc" translate="yes" xml:space="preserve">
          <source>Be careful when deciding if your filter really does leave safe strings as safe. If you&amp;rsquo;re &lt;em&gt;removing&lt;/em&gt; characters, you might inadvertently leave unbalanced HTML tags or entities in the result. For example, removing a &lt;code&gt;&amp;gt;&lt;/code&gt; from the input might turn &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;lt;a&lt;/code&gt;, which would need to be escaped on output to avoid causing problems. Similarly, removing a semicolon (&lt;code&gt;;&lt;/code&gt;) can turn &lt;code&gt;&amp;amp;amp;&lt;/code&gt; into &lt;code&gt;&amp;amp;amp&lt;/code&gt;, which is no longer a valid entity and thus needs further escaping. Most cases won&amp;rsquo;t be nearly this tricky, but keep an eye out for any problems like that when reviewing your code.</source>
          <target state="translated">Будьте осторожны, решая, действительно ли ваш фильтр оставляет безопасные строки безопасными. Если вы &lt;em&gt;удаляете&lt;/em&gt; символы, вы можете непреднамеренно оставить несбалансированные HTML-теги или объекты в результате. Например, удаление a &lt;code&gt;&amp;gt;&lt;/code&gt; из ввода может превратить &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; в &lt;code&gt;&amp;lt;a&lt;/code&gt; , что необходимо будет экранировать на выходе, чтобы избежать проблем. Точно так же удаление точки с запятой ( &lt;code&gt;;&lt;/code&gt; ) может привести к &lt;code&gt;&amp;amp;amp;&lt;/code&gt; в &lt;code&gt;&amp;amp;amp&lt;/code&gt; , который больше не является допустимым объектом и, следовательно, нуждается в дальнейшем экранировании. В большинстве случаев это будет не так сложно, но следите за такими проблемами при просмотре кода.</target>
        </trans-unit>
        <trans-unit id="eba0553e37be2c52b9440df03c21c723bfad622f" translate="yes" xml:space="preserve">
          <source>Be careful when reading template code - the template system does not allow use of parentheses, but will call callables automatically, hiding the above distinction.</source>
          <target state="translated">Будьте внимательны при чтении кода шаблона-система шаблонов не допускает использования скобок,но вызовет вызовы автоматически,скрывая вышеуказанное различие.</target>
        </trans-unit>
        <trans-unit id="69691257ffe84235eced0129d9f45dba26cd9e72" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;tables&lt;/code&gt; parameter if you&amp;rsquo;re specifying tables that are already used in the query. When you add extra tables via the &lt;code&gt;tables&lt;/code&gt; parameter, Django assumes you want that table included an extra time, if it is already included. That creates a problem, since the table name will then be given an alias. If a table appears multiple times in an SQL statement, the second and subsequent occurrences must use aliases so the database can tell them apart. If you&amp;rsquo;re referring to the extra table you added in the extra &lt;code&gt;where&lt;/code&gt; parameter this is going to cause errors.</source>
          <target state="translated">Будьте внимательны при использовании параметра &lt;code&gt;tables&lt;/code&gt; , если вы указываете таблицы, которые уже используются в запросе. Когда вы добавляете дополнительные таблицы с помощью параметра &lt;code&gt;tables&lt;/code&gt; , Django предполагает, что вы хотите, чтобы таблица включала дополнительное время, если оно уже включено. Это создает проблему, так как тогда имени таблицы будет присвоен псевдоним. Если таблица появляется в операторе SQL несколько раз, второе и последующие вхождения должны использовать псевдонимы, чтобы база данных могла их различать. Если вы ссылаетесь на дополнительную таблицу, которую вы добавили в дополнительный параметр &lt;code&gt;where&lt;/code&gt; , это приведет к ошибкам.</target>
        </trans-unit>
        <trans-unit id="2bccc52da60358d2d264adb4897908ef269c5f82" translate="yes" xml:space="preserve">
          <source>Be careful when you override settings, especially when the default value is a non-empty list or dictionary, such as &lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt;&lt;code&gt;STATICFILES_FINDERS&lt;/code&gt;&lt;/a&gt;. Make sure you keep the components required by the features of Django you wish to use.</source>
          <target state="translated">Будьте осторожны при переопределении настроек, особенно когда значением по умолчанию является непустой список или словарь, например &lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt; &lt;code&gt;STATICFILES_FINDERS&lt;/code&gt; &lt;/a&gt; . Убедитесь, что у вас есть компоненты, необходимые для функций Django, которые вы хотите использовать.</target>
        </trans-unit>
        <trans-unit id="cd1ed2ef21e62a68037633065cc360f961c4e002" translate="yes" xml:space="preserve">
          <source>Be careful with &lt;code&gt;related_name&lt;/code&gt; and &lt;code&gt;related_query_name&lt;/code&gt;</source>
          <target state="translated">Будьте осторожны с &lt;code&gt;related_name&lt;/code&gt; и &lt;code&gt;related_query_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5bdad25aa14bf675ac1781f25c4b227f57b0179" translate="yes" xml:space="preserve">
          <source>Be careful with the order of decorators</source>
          <target state="translated">Будьте осторожны с заказом декораторов</target>
        </trans-unit>
        <trans-unit id="6d3f850c6cb2bd3b2b49588b50efb20bdb7e6cf3" translate="yes" xml:space="preserve">
          <source>Be careful with this attribute in subclasses.</source>
          <target state="translated">Будьте осторожны с этим атрибутом в подклассах.</target>
        </trans-unit>
        <trans-unit id="9bd60f39da97cb517c583ecc7dc05525327c66e5" translate="yes" xml:space="preserve">
          <source>Be careful with your own custom properties - it is up to you to implement caching when required, for example using the &lt;a href=&quot;../../ref/utils#django.utils.functional.cached_property&quot;&gt;&lt;code&gt;cached_property&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">Будьте осторожны с вашими собственными пользовательскими свойствами - это зависит от вас, если необходимо реализовать кэширование, например, используя декоратор &lt;a href=&quot;../../ref/utils#django.utils.functional.cached_property&quot;&gt; &lt;code&gt;cached_property&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cae78767c33d88536b3f71df5c5467f045e15884" translate="yes" xml:space="preserve">
          <source>Be careful, though. You need to do more than just mark the output as safe. You need to ensure it really &lt;em&gt;is&lt;/em&gt; safe, and what you do depends on whether auto-escaping is in effect. The idea is to write filters that can operate in templates where auto-escaping is either on or off in order to make things easier for your template authors.</source>
          <target state="translated">Будьте осторожны, хотя. Вам нужно сделать больше, чем просто отметить результат как безопасный. Вы должны убедиться , что он действительно &lt;em&gt;является&lt;/em&gt; безопасным, и что вы делаете , зависит от того , действует автоматически побег. Идея состоит в том, чтобы написать фильтры, которые могут работать в шаблонах, где автоматическое экранирование включено или выключено, чтобы упростить задачу авторам шаблонов.</target>
        </trans-unit>
        <trans-unit id="9843c5e6a04319a8b29711d8e625e85b3a246449" translate="yes" xml:space="preserve">
          <source>Be cautious about using nested queries and understand your database server&amp;rsquo;s performance characteristics (if in doubt, benchmark!). Some database backends, most notably MySQL, don&amp;rsquo;t optimize nested queries very well. It is more efficient, in those cases, to extract a list of values and then pass that into the second query. That is, execute two queries instead of one:</source>
          <target state="translated">Будьте осторожны с использованием вложенных запросов и понимайте характеристики производительности вашего сервера баз данных (в случае сомнений, тест!). Некоторые базы данных, особенно MySQL, не очень хорошо оптимизируют вложенные запросы. В этих случаях более эффективно извлечь список значений и затем передать его во второй запрос. То есть выполнить два запроса вместо одного:</target>
        </trans-unit>
        <trans-unit id="cfeddad7d119eee7c62f567d08fe9d6b52683e9c" translate="yes" xml:space="preserve">
          <source>Be cautious when ordering by fields in related models if you are also using &lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt;. See the note in &lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt; for an explanation of how related model ordering can change the expected results.</source>
          <target state="translated">Будьте осторожны при упорядочении по полям в связанных моделях, если вы также используете &lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; &lt;/a&gt; . См. Примечание в &lt;a href=&quot;#django.db.models.query.QuerySet.distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; &lt;/a&gt; для объяснения того, как упорядочение связанной модели может изменить ожидаемые результаты.</target>
        </trans-unit>
        <trans-unit id="1016c4e42e4fadf15e517758fc4068d8d542bdce" translate="yes" xml:space="preserve">
          <source>Be cautious when updating this setting on a production site. If you update this setting to enable cross-domain cookies on a site that previously used standard domain cookies, existing user cookies that have the old domain will not be updated. This will result in site users being unable to switch the language as long as these cookies persist. The only safe and reliable option to perform the switch is to change the language cookie name permanently (via the &lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; setting) and to add a middleware that copies the value from the old cookie to a new one and then deletes the old one.</source>
          <target state="translated">Будьте осторожны при обновлении этого параметра на производственном сайте. Если вы обновите этот параметр, чтобы включить междоменные файлы cookie на сайте, который ранее использовал стандартные файлы cookie домена, существующие файлы cookie пользователя со старым доменом обновляться не будут. Это приведет к тому, что пользователи сайта не смогут переключать язык, пока эти файлы cookie сохраняются. Единственный безопасный и надежный вариант для переключения - это постоянное изменение имени файла cookie языка (с помощью параметра &lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt; ) и добавление промежуточного программного обеспечения, которое копирует значение из старого cookie в новый, а затем удаляет старый.</target>
        </trans-unit>
        <trans-unit id="917d17d58fe2ef61dc24fb00cc8fb801f576cedc" translate="yes" xml:space="preserve">
          <source>Be cautious when updating this setting on a production site. If you update this setting to enable cross-domain cookies on a site that previously used standard domain cookies, existing user cookies will be set to the old domain. This may result in them being unable to log in as long as these cookies persist.</source>
          <target state="translated">Будьте осторожны при обновлении этой настройки на производственной площадке.Если вы обновите эту настройку,чтобы включить междоменные cookie-файлы на сайте,который ранее использовал стандартные доменные cookie-файлы,существующие пользовательские cookie-файлы будут установлены на старый домен.Это может привести к тому,что они не смогут войти в систему до тех пор,пока эти cookie-файлы будут сохраняться.</target>
        </trans-unit>
        <trans-unit id="61b4a3d60b793cba756caf46f3fdd82b2777e45d" translate="yes" xml:space="preserve">
          <source>Be cautious when updating this setting on a production site. If you update this setting to use a deeper path than it previously used, existing user cookies that have the old path will not be updated. This will result in site users being unable to switch the language as long as these cookies persist. The only safe and reliable option to perform the switch is to change the language cookie name permanently (via the &lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; setting), and to add a middleware that copies the value from the old cookie to a new one and then deletes the one.</source>
          <target state="translated">Будьте осторожны при обновлении этого параметра на производственном сайте. Если вы обновите этот параметр, чтобы использовать более глубокий путь, чем тот, который использовался ранее, существующие пользовательские файлы cookie со старым путем не будут обновлены. Это приведет к тому, что пользователи сайта не смогут переключать язык, пока эти файлы cookie сохраняются. Единственный безопасный и надежный вариант переключения - это постоянное изменение имени языкового файла cookie (с помощью параметра &lt;a href=&quot;#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt; ) и добавление промежуточного программного обеспечения, которое копирует значение из старого файла cookie в новый, а затем удаляет его.</target>
        </trans-unit>
        <trans-unit id="040e8be262282dccbf78f864cd1c6985021f4421" translate="yes" xml:space="preserve">
          <source>Be sure to account for Python&amp;rsquo;s behavior if an exception is raised during &lt;code&gt;setUpClass()&lt;/code&gt;. If that happens, neither the tests in the class nor &lt;code&gt;tearDownClass()&lt;/code&gt; are run. In the case of &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt;, this will leak the transaction created in &lt;code&gt;super()&lt;/code&gt; which results in various symptoms including a segmentation fault on some platforms (reported on macOS). If you want to intentionally raise an exception such as &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;setUpClass()&lt;/code&gt;, be sure to do it before calling &lt;code&gt;super()&lt;/code&gt; to avoid this.</source>
          <target state="translated">Обязательно &lt;code&gt;setUpClass()&lt;/code&gt; поведение Python, если во время setUpClass () возникает исключение . Если это происходит, ни тесты в классе, ни &lt;code&gt;tearDownClass()&lt;/code&gt; не запускаются. В случае &lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt; это приведет к утечке транзакции, созданной в &lt;code&gt;super()&lt;/code&gt; что приведет к различным симптомам, включая ошибку сегментации на некоторых платформах (сообщается в macOS). Если вы хотите преднамеренно вызвать исключение, такое как &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; ,&lt;/a&gt; в &lt;code&gt;setUpClass()&lt;/code&gt; , обязательно сделайте это перед вызовом &lt;code&gt;super()&lt;/code&gt; чтобы избежать этого.</target>
        </trans-unit>
        <trans-unit id="ef293d4c285cf086b316ae959351a0cccfa79be9" translate="yes" xml:space="preserve">
          <source>Be thoughtful about how you allow users to manage permissions. If you give a non-superuser the ability to edit users, this is ultimately the same as giving them superuser status because they will be able to elevate permissions of users including themselves!</source>
          <target state="translated">Будьте внимательны к тому,как вы разрешаете пользователям управлять разрешениями.Если вы дадите не суперпользователю возможность редактировать пользователей,это,в конечном счете,то же самое,что и предоставление им статуса суперпользователя,потому что они смогут повысить права пользователей,в том числе и себя!</target>
        </trans-unit>
        <trans-unit id="beddae976d47ce08353a7d3f7a198e04d440ec69" translate="yes" xml:space="preserve">
          <source>Be very careful if using a &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; subclass with a custom HTTP header. You must be sure that your front-end web server always sets or strips that header based on the appropriate authentication checks, never permitting an end-user to submit a fake (or &amp;ldquo;spoofed&amp;rdquo;) header value. Since the HTTP headers &lt;code&gt;X-Auth-User&lt;/code&gt; and &lt;code&gt;X-Auth_User&lt;/code&gt; (for example) both normalize to the &lt;code&gt;HTTP_X_AUTH_USER&lt;/code&gt; key in &lt;code&gt;request.META&lt;/code&gt;, you must also check that your web server doesn&amp;rsquo;t allow a spoofed header using underscores in place of dashes.</source>
          <target state="translated">Будьте очень осторожны при использовании подкласса &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; с настраиваемым заголовком HTTP. Вы должны быть уверены, что ваш интерфейсный веб-сервер всегда устанавливает или удаляет этот заголовок на основе соответствующих проверок аутентификации, не позволяя конечному пользователю отправлять поддельное (или &amp;laquo;поддельное&amp;raquo;) значение заголовка. Так как HTTP-заголовки &lt;code&gt;X-Auth-User&lt;/code&gt; и &lt;code&gt;X-Auth_User&lt;/code&gt; (например) оба нормализуются к ключу &lt;code&gt;HTTP_X_AUTH_USER&lt;/code&gt; в &lt;code&gt;request.META&lt;/code&gt; , вы также должны убедиться, что ваш веб-сервер не допускает использование поддельного заголовка с использованием символов подчеркивания вместо черточек.</target>
        </trans-unit>
        <trans-unit id="67405c085c36ff7bf9e47c05c6ca9a8add17cdbf" translate="yes" xml:space="preserve">
          <source>Be very careful with marking views with the &lt;code&gt;csrf_exempt&lt;/code&gt; decorator unless it is absolutely necessary.</source>
          <target state="translated">Будьте очень осторожны с маркировкой представлений с &lt;code&gt;csrf_exempt&lt;/code&gt; декоратора csrf_exempt, если это не является абсолютно необходимым.</target>
        </trans-unit>
        <trans-unit id="436ebc6dd66c840a88bd7f4d5979b3039fbfbefe" translate="yes" xml:space="preserve">
          <source>Bear in mind that when reversed, this is actually adding a field to a model. The operation is reversible (apart from any data loss, which is irreversible) if the field is nullable or if it has a default value that can be used to populate the recreated column. If the field is not nullable and does not have a default value, the operation is irreversible.</source>
          <target state="translated">Имейте в виду,что при обратном направлении,это на самом деле добавление поля в модель.Операция является обратимой (за исключением любой потери данных,которая является необратимой),если поле является нулевым или если оно имеет значение по умолчанию,которое может быть использовано для заполнения воссозданного столбца.Если поле не является нулевым и не имеет значения по умолчанию,операция является необратимой.</target>
        </trans-unit>
        <trans-unit id="463ef2f89f1e249a7b9be4618cd7fcd06a48a5af" translate="yes" xml:space="preserve">
          <source>Bear in mind that when reversed, this is actually adding a field to a model. The operation is reversible (apart from any data loss, which of course is irreversible) if the field is nullable or if it has a default value that can be used to populate the recreated column. If the field is not nullable and does not have a default value, the operation is irreversible.</source>
          <target state="translated">Имейте в виду,что при обратном направлении,это на самом деле добавление поля в модель.Операция является обратимой (за исключением любой потери данных,которая,конечно,является необратимой),если поле является нулевым или если оно имеет значение по умолчанию,которое может быть использовано для заполнения воссозданного столбца.Если поле не является нулевым и не имеет значения по умолчанию,операция является необратимой.</target>
        </trans-unit>
        <trans-unit id="042ea8e5fddce26815628fa17044ba5d24eb96ab" translate="yes" xml:space="preserve">
          <source>Because 404 errors are by far the most common HTTP error, there&amp;rsquo;s an easier way to handle those errors.</source>
          <target state="translated">Поскольку ошибки 404 являются наиболее распространенной ошибкой HTTP, существует более простой способ их обработки.</target>
        </trans-unit>
        <trans-unit id="d5c2d2c9e70508835a73ca5b22f9ada7d96afd08" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; attributes and reverse relations can have multiple related rows, including these can have a multiplier effect on the size of your result set. This will be especially pronounced if you include multiple such fields in your &lt;code&gt;values()&lt;/code&gt; query, in which case all possible combinations will be returned.</source>
          <target state="translated">Поскольку атрибуты &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; и обратные отношения могут иметь несколько связанных строк, в том числе они могут повлиять на размер набора результатов. Это будет особенно заметно, если вы включите несколько таких полей в запрос &lt;code&gt;values()&lt;/code&gt; , и в этом случае будут возвращены все возможные комбинации.</target>
        </trans-unit>
        <trans-unit id="d592166bd1deeeac277c740bfdfad7f1cfc9799b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;get_queryset()&lt;/code&gt; returns a &lt;code&gt;QuerySet&lt;/code&gt; object, you can use &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;exclude()&lt;/code&gt; and all the other &lt;code&gt;QuerySet&lt;/code&gt; methods on it. So these statements are all legal:</source>
          <target state="translated">Поскольку &lt;code&gt;get_queryset()&lt;/code&gt; возвращает объект &lt;code&gt;QuerySet&lt;/code&gt; , вы можете использовать для него &lt;code&gt;filter()&lt;/code&gt; , &lt;code&gt;exclude()&lt;/code&gt; и все другие методы &lt;code&gt;QuerySet&lt;/code&gt; . Итак, все эти утверждения законны:</target>
        </trans-unit>
        <trans-unit id="732623fe54e2e13e287f4b043b432d7f9c00f9ec" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;order_with_respect_to&lt;/code&gt; adds a new database column, be sure to make and apply the appropriate migrations if you add or change &lt;code&gt;order_with_respect_to&lt;/code&gt; after your initial &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Поскольку &lt;code&gt;order_with_respect_to&lt;/code&gt; добавляет новый столбец базы данных, обязательно сделайте и примените соответствующие миграции, если вы добавите или измените &lt;code&gt;order_with_respect_to&lt;/code&gt; после первоначальной &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3f6262139a989927fabc6f1997f91059c06e8ee" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;{% regroup %}&lt;/code&gt; produces &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; objects, you can also write the previous example as:</source>
          <target state="translated">Поскольку &lt;code&gt;{% regroup %}&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt; %} создает объекты namedtuple () , вы также можете написать предыдущий пример так:</target>
        </trans-unit>
        <trans-unit id="f3c27e564d0e5f570e887ae09cb356cf5b1a7d16" translate="yes" xml:space="preserve">
          <source>Because Django intentionally limits the amount of logic processing available in the template language, it is not possible to pass arguments to method calls accessed from within templates. Data should be calculated in views, then passed to templates for display.</source>
          <target state="translated">Поскольку Django намеренно ограничивает объем логической обработки,доступной на языке шаблонов,передача аргументов вызовам методов,доступ к которым осуществляется изнутри шаблонов,невозможна.Данные должны быть вычислены в представлениях,а затем переданы в шаблоны для отображения.</target>
        </trans-unit>
        <trans-unit id="fc9cbe0ffd1fa8524ae9029257a68071ccaddc76" translate="yes" xml:space="preserve">
          <source>Because Django was developed in a fast-paced newsroom environment, it was designed to make common Web-development tasks fast and easy. Here&amp;rsquo;s an informal overview of how to write a database-driven Web app with Django.</source>
          <target state="translated">Поскольку Django разрабатывался в быстро развивающейся новостной среде, он был разработан для быстрого и простого выполнения общих задач веб-разработки. Вот неофициальный обзор того, как написать веб-приложение на основе базы данных с Django.</target>
        </trans-unit>
        <trans-unit id="7073f6e15877a9af2f4c64844b792af6a94b35a7" translate="yes" xml:space="preserve">
          <source>Because Django&amp;rsquo;s URL resolver expects to send the request and associated arguments to a callable function, not a class, class-based views have an &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; class method which returns a function that can be called when a request arrives for a URL matching the associated pattern. The function creates an instance of the class, calls &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; to initialize its attributes, and then calls its &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.dispatch&quot;&gt;&lt;code&gt;dispatch()&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;dispatch&lt;/code&gt; looks at the request to determine whether it is a &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc, and relays the request to a matching method if one is defined, or raises &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotAllowed&quot;&gt;&lt;code&gt;HttpResponseNotAllowed&lt;/code&gt;&lt;/a&gt; if not:</source>
          <target state="translated">Поскольку обработчик URL-адресов Django ожидает отправки запроса и связанных аргументов вызываемой функции, а не классу, представления на &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; классов имеют метод класса as_view (), который возвращает функцию, которая может быть вызвана при получении запроса для URL-адреса, соответствующего связанному шаблон. Функция создает экземпляр класса, вызывает &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt; &lt;code&gt;setup()&lt;/code&gt; &lt;/a&gt; для инициализации его атрибутов, а затем вызывает его метод &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.dispatch&quot;&gt; &lt;code&gt;dispatch()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;dispatch&lt;/code&gt; просматривает запрос, чтобы определить, является ли он &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; и т. д., и передает запрос соответствующему методу, если он определен, или вызывает &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotAllowed&quot;&gt; &lt;code&gt;HttpResponseNotAllowed&lt;/code&gt; ,&lt;/a&gt; если нет:</target>
        </trans-unit>
        <trans-unit id="d4114dc9d50278d2b36039acfff453d545e54801" translate="yes" xml:space="preserve">
          <source>Because GeoDjango has its own Python interface, the preceding instructions do not build GDAL&amp;rsquo;s own Python bindings. The bindings may be built by adding the &lt;code&gt;--with-python&lt;/code&gt; flag when running &lt;code&gt;configure&lt;/code&gt;. See &lt;a href=&quot;https://trac.osgeo.org/gdal/wiki/GdalOgrInPython&quot;&gt;GDAL/OGR In Python&lt;/a&gt; for more information on GDAL&amp;rsquo;s bindings.</source>
          <target state="translated">Поскольку GeoDjango имеет свой собственный интерфейс Python, предыдущие инструкции не создают собственные привязки Python в GDAL. Привязки могут быть построены путем добавления флага &lt;code&gt;--with-python&lt;/code&gt; при запуске &lt;code&gt;configure&lt;/code&gt; . Смотрите &lt;a href=&quot;https://trac.osgeo.org/gdal/wiki/GdalOgrInPython&quot;&gt;GDAL / OGR в Python&lt;/a&gt; для получения дополнительной информации о привязках GDAL.</target>
        </trans-unit>
        <trans-unit id="eec5abbbc5a08b4bc4c34df5374fe6e6dfcdca67" translate="yes" xml:space="preserve">
          <source>Because GeoDjango is included with Django, please refer to Django&amp;rsquo;s &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;installation instructions&lt;/a&gt; for details on how to install.</source>
          <target state="translated">Поскольку GeoDjango входит в состав Django, обратитесь к &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;инструкциям&lt;/a&gt; по установке Django для получения подробной информации о том, как установить.</target>
        </trans-unit>
        <trans-unit id="6dbdfdb0d36449d54e4c454f3616ebdb6e2b91d5" translate="yes" xml:space="preserve">
          <source>Because GeoDjango takes advantage of the latest in the open source geospatial software technology, recent versions of the libraries are necessary. If binary packages aren&amp;rsquo;t available for your platform, installation from source may be required. When compiling the libraries from source, please follow the directions closely, especially if you&amp;rsquo;re a beginner.</source>
          <target state="translated">Поскольку GeoDjango использует новейшие технологии геопространственного программного обеспечения с открытым исходным кодом, необходимы последние версии библиотек. Если двоичные пакеты недоступны для вашей платформы, может потребоваться установка из исходного кода. При компиляции библиотек из исходного кода, пожалуйста, внимательно следуйте инструкциям, особенно если вы новичок.</target>
        </trans-unit>
        <trans-unit id="ba346e04a85337ab290c6223a629db6764aa3818" translate="yes" xml:space="preserve">
          <source>Because a settings file contains sensitive information, such as the database password, you should make every attempt to limit access to it. For example, change its file permissions so that only you and your Web server&amp;rsquo;s user can read it. This is especially important in a shared-hosting environment.</source>
          <target state="translated">Поскольку файл настроек содержит конфиденциальную информацию, такую ​​как пароль базы данных, вы должны делать все возможное, чтобы ограничить доступ к нему. Например, измените права доступа к файлу, чтобы его могли прочитать только вы и пользователь вашего веб-сервера. Это особенно важно в среде виртуального хостинга.</target>
        </trans-unit>
        <trans-unit id="0191f795bb5a539693858d5221eca789bfb06b55" translate="yes" xml:space="preserve">
          <source>Because a settings file is a Python module, the following apply:</source>
          <target state="translated">Поскольку файл настроек является модулем Python,применяется следующее:</target>
        </trans-unit>
        <trans-unit id="aa97793ffa48e7799626ae1a3b81b880bdd406f6" translate="yes" xml:space="preserve">
          <source>Because all strings are returned from the database as &lt;code&gt;str&lt;/code&gt; objects, model fields that are character based (CharField, TextField, URLField, etc.) will contain Unicode values when Django retrieves data from the database. This is &lt;em&gt;always&lt;/em&gt; the case, even if the data could fit into an ASCII bytestring.</source>
          <target state="translated">Поскольку все строки возвращаются из базы данных как объекты &lt;code&gt;str&lt;/code&gt; , поля модели, основанные на символах (CharField, TextField, URLField и т. Д.), Будут содержать значения Unicode, когда Django извлекает данные из базы данных. Это &lt;em&gt;всегда&lt;/em&gt; так, даже если данные могут поместиться в строку ASCII.</target>
        </trans-unit>
        <trans-unit id="27968fb82192cc6e4d325a0225a156067b99db0c" translate="yes" xml:space="preserve">
          <source>Because an enumeration with a concrete data type requires all values to match the type, overriding the &lt;a href=&quot;#field-choices-blank-label&quot;&gt;blank label&lt;/a&gt; cannot be achieved by creating a member with a value of &lt;code&gt;None&lt;/code&gt;. Instead, set the &lt;code&gt;__empty__&lt;/code&gt; attribute on the class:</source>
          <target state="translated">Поскольку перечисление с конкретным типом данных требует, чтобы все значения соответствовали типу, переопределение &lt;a href=&quot;#field-choices-blank-label&quot;&gt;пустой метки&lt;/a&gt; не может быть достигнуто путем создания элемента со значением &lt;code&gt;None&lt;/code&gt; . Вместо этого установите атрибут &lt;code&gt;__empty__&lt;/code&gt; в классе:</target>
        </trans-unit>
        <trans-unit id="ebc3024b77f785efa1d4b0fbb10d4ee925ba8acb" translate="yes" xml:space="preserve">
          <source>Because auto-escaping is turned off in the base template, it will also be turned off in the child template, resulting in the following rendered HTML when the &lt;code&gt;greeting&lt;/code&gt; variable contains the string &lt;code&gt;&amp;lt;b&amp;gt;Hello!&amp;lt;/b&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Поскольку автоматическое экранирование отключено в базовом шаблоне, оно также будет отключено в дочернем шаблоне, что приведет к следующему отображаемому HTML, когда переменная &lt;code&gt;greeting&lt;/code&gt; содержит строку &lt;code&gt;&amp;lt;b&amp;gt;Hello!&amp;lt;/b&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aa7b97b187e5272ee175067b7632a5cafe8eec2c" translate="yes" xml:space="preserve">
          <source>Because dictionary lookup happens first, that behavior kicks in and provides a default value instead of using the intended &lt;code&gt;.items()&lt;/code&gt; method. In this case, consider converting to a dictionary first.</source>
          <target state="translated">Поскольку поиск по словарю происходит в первую очередь, это поведение срабатывает и предоставляет значение по умолчанию вместо использования предполагаемого &lt;code&gt;.items()&lt;/code&gt; . В этом случае сначала рассмотрите возможность преобразования в словарь.</target>
        </trans-unit>
        <trans-unit id="da72b29a6853c54fa30cdfd4198cbc4c6dd11319" translate="yes" xml:space="preserve">
          <source>Because even seemingly-secure web server configurations are susceptible to fake &lt;code&gt;Host&lt;/code&gt; headers, Django validates &lt;code&gt;Host&lt;/code&gt; headers against the &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting in the &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Потому что даже , казалось бы, безопасные конфигурации веб - сервер чувствительны к поддельным &lt;code&gt;Host&lt;/code&gt; заголовкам, Django проверяет &lt;code&gt;Host&lt;/code&gt; заголовки против &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt; устанавливающего в &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;django.http.HttpRequest.get_host()&lt;/code&gt; &lt;/a&gt; методе.</target>
        </trans-unit>
        <trans-unit id="b14c385e9c068c17518da9eb24b790c994df9ab7" translate="yes" xml:space="preserve">
          <source>Because geography calculations involve more mathematics, only a subset of the PostGIS spatial lookups are available for the geography type. Practically, this means that in addition to the &lt;a href=&quot;geoquerysets#distance-lookups&quot;&gt;distance lookups&lt;/a&gt; only the following additional &lt;a href=&quot;geoquerysets#spatial-lookups&quot;&gt;spatial lookups&lt;/a&gt; are available for geography columns:</source>
          <target state="translated">Поскольку в географических расчетах используется больше математики, для типа географии доступен только подмножество пространственных поисков PostGIS. На практике это означает, что в дополнение к &lt;a href=&quot;geoquerysets#distance-lookups&quot;&gt;поискам&lt;/a&gt; на расстоянии доступны только следующие дополнительные &lt;a href=&quot;geoquerysets#spatial-lookups&quot;&gt;пространственные поиски&lt;/a&gt; для столбцов географии:</target>
        </trans-unit>
        <trans-unit id="595a309749b3a496f49826a3190012c59dc15e12" translate="yes" xml:space="preserve">
          <source>Because it is possible for the developer to turn off the &lt;code&gt;CsrfViewMiddleware&lt;/code&gt;, all relevant views in contrib apps use the &lt;code&gt;csrf_protect&lt;/code&gt; decorator to ensure the security of these applications against CSRF. It is recommended that the developers of other reusable apps that want the same guarantees also use the &lt;code&gt;csrf_protect&lt;/code&gt; decorator on their views.</source>
          <target state="translated">Поскольку разработчик может отключить &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; , все соответствующие представления в приложениях contrib используют декоратор &lt;code&gt;csrf_protect&lt;/code&gt; для обеспечения безопасности этих приложений от CSRF. Рекомендуется, чтобы разработчики других повторно используемых приложений, которым требуются такие же гарантии, также использовали декоратор &lt;code&gt;csrf_protect&lt;/code&gt; в своих представлениях.</target>
        </trans-unit>
        <trans-unit id="cbaffa73d9aa8e66279a76ef371ab49ef8c024dd" translate="yes" xml:space="preserve">
          <source>Because it&amp;rsquo;s convenient, let&amp;rsquo;s use Django&amp;rsquo;s own database API, which we covered in &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;. Here&amp;rsquo;s one stab at a new &lt;code&gt;index()&lt;/code&gt; view, which displays the latest 5 poll questions in the system, separated by commas, according to publication date:</source>
          <target state="translated">Поскольку это удобно, давайте использовать собственный API базы данных Django, который мы рассмотрели в &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt; . Вот один удар в новом представлении &lt;code&gt;index()&lt;/code&gt; , в котором отображаются последние 5 вопросов опроса в системе, разделенные запятыми в соответствии с датой публикации:</target>
        </trans-unit>
        <trans-unit id="db170df6f33cedcfecf70802e14df5bcdf21d2f3" translate="yes" xml:space="preserve">
          <source>Because it&amp;rsquo;s impossible to serialize arbitrary Python code, these historical models will not have any custom methods that you have defined. They will, however, have the same fields, relationships, managers (limited to those with &lt;code&gt;use_in_migrations = True&lt;/code&gt;) and &lt;code&gt;Meta&lt;/code&gt; options (also versioned, so they may be different from your current ones).</source>
          <target state="translated">Поскольку невозможно сериализовать произвольный код Python, эти исторические модели не будут иметь никаких пользовательских методов, которые вы определили. Однако они будут иметь те же поля, отношения, менеджеров (ограничено теми, которые имеют &lt;code&gt;use_in_migrations = True&lt;/code&gt; ) и &lt;code&gt;Meta&lt;/code&gt; опции (также версионные, поэтому они могут отличаться от ваших текущих).</target>
        </trans-unit>
        <trans-unit id="a576b7b74156d956bbdf99772743cf4d2872e210" translate="yes" xml:space="preserve">
          <source>Because migrations are stored in version control, you&amp;rsquo;ll occasionally come across situations where you and another developer have both committed a migration to the same app at the same time, resulting in two migrations with the same number.</source>
          <target state="translated">Поскольку миграции хранятся в системе управления версиями, вы иногда будете сталкиваться с ситуациями, когда вы и другой разработчик одновременно выполняли миграцию в одно и то же приложение, что приводило к двум миграциям с одинаковым номером.</target>
        </trans-unit>
        <trans-unit id="ecf48349c2e18001cd26b4d210fff49794438a69" translate="yes" xml:space="preserve">
          <source>Because multi-table inheritance uses an implicit &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to link the child and the parent, it&amp;rsquo;s possible to move from the parent down to the child, as in the above example. However, this uses up the name that is the default &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; value for &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; relations. If you are putting those types of relations on a subclass of the parent model, you &lt;strong&gt;must&lt;/strong&gt; specify the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; attribute on each such field. If you forget, Django will raise a validation error.</source>
          <target state="translated">Так как наследование нескольких таблиц использует неявное &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; для связи дочернего элемента и родительского элемента , можно перейти от родительского элемента к дочернему элементу , как в примере выше. Однако при этом используется имя, которое является значением &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt; по умолчанию для отношений &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; . Если вы помещаете эти типы отношений в подкласс родительской модели, вы &lt;strong&gt;должны&lt;/strong&gt; указать атрибут &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt; для каждого такого поля. Если вы забудете, Django выдаст ошибку проверки.</target>
        </trans-unit>
        <trans-unit id="07db482e681450eaf30c5a9a75feed11bd8fc0ec" translate="yes" xml:space="preserve">
          <source>Because of how &lt;code&gt;xgettext&lt;/code&gt; (used by &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt;) works, only functions that take a single string argument can be imported as &lt;code&gt;_&lt;/code&gt;:</source>
          <target state="translated">Из-за того, как работает &lt;code&gt;xgettext&lt;/code&gt; (используемый &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt; ), только функции, которые принимают один строковый аргумент, могут быть импортированы как &lt;code&gt;_&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="08b376685af40f9d58e48e32fc32aee5deed6a38" translate="yes" xml:space="preserve">
          <source>Because of the modular design of the admin templates, it is usually neither necessary nor advisable to replace an entire template. It is almost always better to override only the section of the template which you need to change.</source>
          <target state="translated">Из-за модульной конструкции шаблонов администратора,как правило,нет необходимости и нецелесообразно заменять весь шаблон.Почти всегда лучше переопределить только тот раздел шаблона,который необходимо изменить.</target>
        </trans-unit>
        <trans-unit id="713b60fca0bbcd7b6e58185e3d1bda5280526dde" translate="yes" xml:space="preserve">
          <source>Because of the nature of JSON (there is no native distinction between lists and tuples) if you pass in a tuple, you will get a list from &lt;code&gt;signing.loads(object)&lt;/code&gt;:</source>
          <target state="translated">Из-за природы JSON (нет собственного различия между списками и кортежами), если вы передадите кортеж, вы получите список из &lt;code&gt;signing.loads(object)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bba94ca23cad5e9236d4fe8e0f33ecc7d7ba1816" translate="yes" xml:space="preserve">
          <source>Because of the variety of packaging systems available for macOS, users have several different options for installing GeoDjango. These options are:</source>
          <target state="translated">В связи с разнообразием систем упаковки,доступных для MacOS,у пользователей есть несколько различных вариантов установки GeoDjango.Это следующие варианты:</target>
        </trans-unit>
        <trans-unit id="4b50530b574b77078f31f6b85ffe2cb4b3381b5f" translate="yes" xml:space="preserve">
          <source>Because of the way that Python resolves method overloading, the call to &lt;code&gt;super().render_to_response(context)&lt;/code&gt; ends up calling the &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt; implementation of &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Из-за способа , что Python решает метод перегрузки, вызов &lt;code&gt;super().render_to_response(context)&lt;/code&gt; заканчивается вызовом &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt; осуществление &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7e10f96940de25853d507df6c9e0fad8db0d5e" translate="yes" xml:space="preserve">
          <source>Because of the way the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#descriptor-invocation&quot;&gt;descriptor protocol&lt;/a&gt; works, using &lt;code&gt;del&lt;/code&gt; (or &lt;code&gt;delattr&lt;/code&gt;) on a &lt;code&gt;cached_property&lt;/code&gt; that hasn&amp;rsquo;t been accessed raises &lt;code&gt;AttributeError&lt;/code&gt;.</source>
          <target state="translated">Из-за того, как работает &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#descriptor-invocation&quot;&gt;протокол дескриптора&lt;/a&gt; , использование &lt;code&gt;del&lt;/code&gt; (или &lt;code&gt;delattr&lt;/code&gt; ) для &lt;code&gt;cached_property&lt;/code&gt; которому не был получен доступ, вызывает &lt;code&gt;AttributeError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4edf1c60b9c9146737fc713b35918c556d71ae4" translate="yes" xml:space="preserve">
          <source>Because of this, &lt;code&gt;staticfiles&lt;/code&gt; ships its own &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt;&lt;code&gt;django.contrib.staticfiles.testing.StaticLiveServerTestCase&lt;/code&gt;&lt;/a&gt;, a subclass of the built-in one that has the ability to transparently serve all the assets during execution of these tests in a way very similar to what we get at development time with &lt;code&gt;DEBUG = True&lt;/code&gt;, i.e. without having to collect them using &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="translated">Из-за этого &lt;code&gt;staticfiles&lt;/code&gt; поставляет свой собственный &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.testing.StaticLiveServerTestCase&quot;&gt; &lt;code&gt;django.contrib.staticfiles.testing.StaticLiveServerTestCase&lt;/code&gt; &lt;/a&gt; , подкласс встроенного, который имеет возможность прозрачно обслуживать все активы во время выполнения этих тестов способом, очень похожим на то, что мы получаем во время разработки с &lt;code&gt;DEBUG = True&lt;/code&gt; , т.е. без необходимости сначала собирать их с помощью &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25ea53ad057f59936b93761f6edb3a935113ee48" translate="yes" xml:space="preserve">
          <source>Because some string operations come up again and again, Django ships with a few useful functions that should make working with string and bytestring objects a bit easier.</source>
          <target state="translated">Поскольку некоторые строковые операции появляются снова и снова,Django поставляет несколько полезных функций,которые должны немного облегчить работу со строковыми и байтстринговыми объектами.</target>
        </trans-unit>
        <trans-unit id="506105669e8434900f8152c16f863fa603dac585" translate="yes" xml:space="preserve">
          <source>Because that would couple the model layer to the view layer. One of the foremost design goals of Django is to maintain loose coupling. Some controlled coupling is introduced in the &lt;a href=&quot;../topics/http/shortcuts#module-django.shortcuts&quot;&gt;&lt;code&gt;django.shortcuts&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Потому что это связывает слой модели со слоем вида. Одна из главных целей Django - поддерживать слабую связь. Некоторая контролируемая связь представлена ​​в модуле &lt;a href=&quot;../topics/http/shortcuts#module-django.shortcuts&quot;&gt; &lt;code&gt;django.shortcuts&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb2c9a0cdf89cda842c176d6dfe984045f57cf93" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; is applied only after URL resolution has failed and produced a 404, the response it returns will not apply any &lt;a href=&quot;../../topics/http/middleware#view-middleware&quot;&gt;view middleware&lt;/a&gt; methods. Only requests which are successfully routed to a view via normal URL resolution apply view middleware.</source>
          <target state="translated">Поскольку &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; применяется только после сбоя разрешения URL-адреса и выдачи 404, ответ, который он возвращает, не будет применять какие-либо методы &lt;a href=&quot;../../topics/http/middleware#view-middleware&quot;&gt;промежуточного программного обеспечения представления&lt;/a&gt; . Только запросы, которые были успешно перенаправлены в представление через обычное разрешение URL, применяют промежуточное ПО представления.</target>
        </trans-unit>
        <trans-unit id="28be2cf935e455cb809f1b408c0f959b8443b8cb" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;distance&lt;/code&gt; attribute is a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object, you can easily express the value in the units of your choice. For example, &lt;code&gt;city.distance.mi&lt;/code&gt; is the distance value in miles and &lt;code&gt;city.distance.km&lt;/code&gt; is the distance value in kilometers. See &lt;a href=&quot;measure&quot;&gt;Measurement Objects&lt;/a&gt; for usage details and the list of &lt;a href=&quot;measure#supported-units&quot;&gt;Supported units&lt;/a&gt;.</source>
          <target state="translated">Поскольку атрибут &lt;code&gt;distance&lt;/code&gt; - это объект &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; , вы можете легко выразить значение в выбранных вами единицах измерения. Например, &lt;code&gt;city.distance.mi&lt;/code&gt; - это значение расстояния в милях, а &lt;code&gt;city.distance.km&lt;/code&gt; - это значение расстояния в километрах. См. &lt;a href=&quot;measure&quot;&gt;Объекты измерений&lt;/a&gt; для деталей использования и списка &lt;a href=&quot;measure#supported-units&quot;&gt;Поддерживаемых единиц&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5b3e63b0f71b204654b3d2115213f5de20d372b" translate="yes" xml:space="preserve">
          <source>Because values are converted to Python before validators are run, you can even use the same validator with forms:</source>
          <target state="translated">Так как значения преобразуются на Python до запуска валидаторов,вы даже можете использовать один и тот же валидатор с формами:</target>
        </trans-unit>
        <trans-unit id="00e9ab899d3bca12dd35ac7aa67ab15be3a15c95" translate="yes" xml:space="preserve">
          <source>Because varying on cookie is so common, there&amp;rsquo;s a &lt;a href=&quot;http/decorators#django.views.decorators.vary.vary_on_cookie&quot;&gt;&lt;code&gt;django.views.decorators.vary.vary_on_cookie()&lt;/code&gt;&lt;/a&gt; decorator. These two views are equivalent:</source>
          <target state="translated">Поскольку использование cookie очень распространено, существует декоратор &lt;a href=&quot;http/decorators#django.views.decorators.vary.vary_on_cookie&quot;&gt; &lt;code&gt;django.views.decorators.vary.vary_on_cookie()&lt;/code&gt; &lt;/a&gt; . Эти два представления эквивалентны:</target>
        </trans-unit>
        <trans-unit id="af28755edcf5980a22b136cdea6613753af2c890" translate="yes" xml:space="preserve">
          <source>Before &lt;a href=&quot;#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt;&lt;code&gt;RemoteUserMiddleware&lt;/code&gt;&lt;/a&gt;, or any other authentication middleware that may perform a login, and hence rotate the CSRF token, before calling down the middleware chain.</source>
          <target state="translated">Перед &lt;a href=&quot;#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt; &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; &lt;/a&gt; или любым другим промежуточным программным обеспечением для проверки подлинности, которое может выполнить вход в систему и, следовательно, повернуть токен CSRF, прежде чем вызывать цепочку промежуточного программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="30a79da2b8b5a03591499e3e59e4ae9b57b131b8" translate="yes" xml:space="preserve">
          <source>Before MySQL 5.6.1, spatial extensions only support bounding box operations (what MySQL calls minimum bounding rectangles, or MBR). Specifically, MySQL did not conform to the OGC standard. Django supports spatial functions operating on real geometries available in modern MySQL versions. However, the spatial functions are not as rich as other backends like PostGIS.</source>
          <target state="translated">До версии MySQL 5.6.1,пространственные расширения поддерживали только операции с ограничивающими ящиками (то,что MySQL называет минимальными ограничивающими прямоугольниками,или MBR).В частности,MySQL не соответствовал стандарту OGC.Django поддерживает пространственные функции,работающие с реальными геометриями,доступными в современных версиях MySQL.Однако,пространственные функции не так богаты,как другие бэкэнды,такие как PostGIS.</target>
        </trans-unit>
        <trans-unit id="e747f4b68ab596bd8ab1b7359d47a91efe16e3f6" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; instance can be returned to the client, it must be rendered. The rendering process takes the intermediate representation of template and context, and turns it into the final byte stream that can be served to the client.</source>
          <target state="translated">Прежде чем экземпляр &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; может быть возвращен клиенту, он должен быть обработан. Процесс рендеринга берет промежуточное представление шаблона и контекста и превращает его в конечный поток байтов, который может быть передан клиенту.</target>
        </trans-unit>
        <trans-unit id="39a8ed35440f50154028026a9bd0d7bdf0ccc46f" translate="yes" xml:space="preserve">
          <source>Before any middleware that may change or use the response body.</source>
          <target state="translated">Перед любым промежуточным программным обеспечением,которое может изменить или использовать тело ответа.</target>
        </trans-unit>
        <trans-unit id="2b8caca6ca0dc3464c58f73d8b04f82a19d5e4a8" translate="yes" xml:space="preserve">
          <source>Before any middleware that may change the response (it sets the &lt;code&gt;Content-Length&lt;/code&gt; header). A middleware that appears before &lt;code&gt;CommonMiddleware&lt;/code&gt; and changes the response must reset &lt;code&gt;Content-Length&lt;/code&gt;.</source>
          <target state="translated">Перед любым промежуточным программным обеспечением, которое может изменить ответ (он устанавливает заголовок &lt;code&gt;Content-Length&lt;/code&gt; ). &lt;code&gt;CommonMiddleware&lt;/code&gt; программное обеспечение, которое появляется перед CommonMiddleware и изменяет ответ, должно сбрасывать &lt;code&gt;Content-Length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="335b3daca29ecf4cc845518aaab15798bfbefa79" translate="yes" xml:space="preserve">
          <source>Before any middleware that may change the response (it sets the &lt;code&gt;ETag&lt;/code&gt; header).</source>
          <target state="translated">Перед любым промежуточным программным обеспечением, которое может изменить ответ (он устанавливает заголовок &lt;code&gt;ETag&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ddc0fe43c53abb991ec3aef5669c18586af6055c" translate="yes" xml:space="preserve">
          <source>Before any middleware that may raise an an exception to trigger an error view (such as &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;) if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Перед любым промежуточным программным обеспечением, которое может вызвать исключение, чтобы вызвать представление ошибки (например, &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt; ), если вы используете &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b74f7147071597a78ab4aeb9e480f9503dbf00e" translate="yes" xml:space="preserve">
          <source>Before any middleware that may raise an exception to trigger an error view (such as &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;) if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Перед любым промежуточным программным обеспечением, которое может вызвать исключение для запуска представления ошибки (например, &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; &lt;/a&gt; ), если вы используете &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83e652eda1f9c39025a7134ac1e5f7d6f6ca91de" translate="yes" xml:space="preserve">
          <source>Before any view middleware that assumes that CSRF attacks have been dealt with.</source>
          <target state="translated">Перед любым промежуточным программным обеспечением,которое предполагает,что атаки CSRF были устранены.</target>
        </trans-unit>
        <trans-unit id="3bb8531e29d8b0d7e4de297fcbd58b12c5e7175c" translate="yes" xml:space="preserve">
          <source>Before making any changes, create a new branch for the ticket:</source>
          <target state="translated">Перед тем,как вносить какие-либо изменения,создайте новую ветку для билета:</target>
        </trans-unit>
        <trans-unit id="87c61853de29443906cf113351b191d8c3eceae6" translate="yes" xml:space="preserve">
          <source>Before running the test suite, install its dependencies by &lt;code&gt;cd&lt;/code&gt;-ing into the Django &lt;code&gt;tests/&lt;/code&gt; directory and then running:</source>
          <target state="translated">Перед запуском набора тестов установите его зависимости с помощью &lt;code&gt;cd&lt;/code&gt; -ing в директорию Django &lt;code&gt;tests/&lt;/code&gt; и затем запустите:</target>
        </trans-unit>
        <trans-unit id="46ff700820e6c9290efec4b221a3887fe7db92ef" translate="yes" xml:space="preserve">
          <source>Before the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/index.html#sec-11.1.4&quot;&gt;5th edition of ECMAScript&lt;/a&gt; it was possible to poison the JavaScript &lt;code&gt;Array&lt;/code&gt; constructor. For this reason, Django does not allow passing non-dict objects to the &lt;a href=&quot;#django.http.JsonResponse&quot;&gt;&lt;code&gt;JsonResponse&lt;/code&gt;&lt;/a&gt; constructor by default. However, most modern browsers implement EcmaScript 5 which removes this attack vector. Therefore it is possible to disable this security precaution.</source>
          <target state="translated">До &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/index.html#sec-11.1.4&quot;&gt;5-го выпуска ECMAScript&lt;/a&gt; было возможно отравить конструктор JavaScript &lt;code&gt;Array&lt;/code&gt; . По этой причине Django по умолчанию не разрешает передавать &lt;a href=&quot;#django.http.JsonResponse&quot;&gt; &lt;code&gt;JsonResponse&lt;/code&gt; &lt;/a&gt; конструктору JsonResponse . Однако большинство современных браузеров реализуют EcmaScript 5, который удаляет этот вектор атаки. Поэтому возможно отключить эту меру безопасности.</target>
        </trans-unit>
        <trans-unit id="3482fc661487a504b5ead4f883ceae1521f0e887" translate="yes" xml:space="preserve">
          <source>Before those that modify the &lt;code&gt;Vary&lt;/code&gt; header (&lt;code&gt;SessionMiddleware&lt;/code&gt;, &lt;code&gt;GZipMiddleware&lt;/code&gt;, &lt;code&gt;LocaleMiddleware&lt;/code&gt;).</source>
          <target state="translated">Перед теми, которые изменяют заголовок &lt;code&gt;Vary&lt;/code&gt; ( &lt;code&gt;SessionMiddleware&lt;/code&gt; , &lt;code&gt;GZipMiddleware&lt;/code&gt; , &lt;code&gt;LocaleMiddleware&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c312fbdec5708b04fa2e14447f26928bb7d1ca25" translate="yes" xml:space="preserve">
          <source>Before upgrading, it&amp;rsquo;s a good idea to resolve any deprecation warnings raised by your project while using your current version of Django. Fixing these warnings before upgrading ensures that you&amp;rsquo;re informed about areas of the code that need altering.</source>
          <target state="translated">Перед обновлением рекомендуется разрешить все предупреждения об устаревании, выдвинутые вашим проектом, при использовании текущей версии Django. Исправление этих предупреждений перед обновлением гарантирует, что вы проинформированы об областях кода, которые необходимо изменить.</target>
        </trans-unit>
        <trans-unit id="b150695e7cea893935dbf9808598af414c22465e" translate="yes" xml:space="preserve">
          <source>Before using raw SQL, explore &lt;a href=&quot;index&quot;&gt;the ORM&lt;/a&gt;. Ask on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; or the &lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;#django IRC channel&lt;/a&gt; to see if the ORM supports your use case.</source>
          <target state="translated">Прежде чем использовать сырой SQL, изучите &lt;a href=&quot;index&quot;&gt;ORM&lt;/a&gt; . Спросите на &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;Джанго пользователей&lt;/a&gt; или &lt;a href=&quot;irc://irc.freenode.net/django&quot;&gt;IRC канал #django&lt;/a&gt; , чтобы увидеть , если ORM поддерживает ваш случай использования.</target>
        </trans-unit>
        <trans-unit id="10b0118703b6a2c0d78d5018c0196cd5c4017486" translate="yes" xml:space="preserve">
          <source>Before using raw SQL, explore &lt;a href=&quot;index&quot;&gt;the ORM&lt;/a&gt;. Ask on &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; or the &lt;a href=&quot;https://webchat.freenode.net/#django&quot;&gt;#django IRC channel&lt;/a&gt; to see if the ORM supports your use case.</source>
          <target state="translated">Прежде чем использовать необработанный SQL, изучите &lt;a href=&quot;index&quot;&gt;ORM&lt;/a&gt; . Спросите &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; или &lt;a href=&quot;https://webchat.freenode.net/#django&quot;&gt;IRC-канал #django,&lt;/a&gt; чтобы узнать, поддерживает ли ORM ваш вариант использования.</target>
        </trans-unit>
        <trans-unit id="cf36f7df8cb66d43c619f2dbc972675dbd7510b7" translate="yes" xml:space="preserve">
          <source>Before using the database cache, you must create the cache table with this command:</source>
          <target state="translated">Перед использованием кэша базы данных,вы должны создать таблицу кэша с помощью этой команды:</target>
        </trans-unit>
        <trans-unit id="35936ffe9025a0f37c58cf19bdffd8c3833f7b58" translate="yes" xml:space="preserve">
          <source>Before we try to fix anything, let&amp;rsquo;s have a look at the tools at our disposal.</source>
          <target state="translated">Прежде чем пытаться что-то исправить, давайте посмотрим на имеющиеся в нашем распоряжении инструменты.</target>
        </trans-unit>
        <trans-unit id="96e4edc0e1a30c2aee339e20d6a65cd6e9caa561" translate="yes" xml:space="preserve">
          <source>Before you can use Django, you&amp;rsquo;ll need to get it installed. We have a &lt;a href=&quot;../topics/install&quot;&gt;complete installation guide&lt;/a&gt; that covers all the possibilities; this guide will guide you to a minimal installation that&amp;rsquo;ll work while you walk through the introduction.</source>
          <target state="translated">Прежде чем вы сможете использовать Django, вам нужно установить его. У нас есть &lt;a href=&quot;../topics/install&quot;&gt;полное руководство по установке,&lt;/a&gt; которое охватывает все возможности; это руководство поможет вам выполнить минимальную установку, которая будет работать, пока вы будете проходить через введение.</target>
        </trans-unit>
        <trans-unit id="3319c838b49b9a8ad0454acd5932ea7e7a286b87" translate="yes" xml:space="preserve">
          <source>Before you get too into writing patches for Django, there&amp;rsquo;s a little more information on contributing that you should probably take a look at:</source>
          <target state="translated">Прежде чем вы начнете писать патчи для Django, есть немного больше информации о том, как внести свой вклад, и вам стоит взглянуть на него:</target>
        </trans-unit>
        <trans-unit id="5116dedc7de53fc4f4989aaba0cf94dc321d797e" translate="yes" xml:space="preserve">
          <source>Before you save uploaded files, the data needs to be stored somewhere.</source>
          <target state="translated">Прежде чем сохранять загруженные файлы,необходимо где-то хранить данные.</target>
        </trans-unit>
        <trans-unit id="17aef405ad4670f8dce2fd1c4684c6d92449e710" translate="yes" xml:space="preserve">
          <source>Behaves like the standard Python &lt;code&gt;file.close()&lt;/code&gt; method and closes the file associated with this instance.</source>
          <target state="translated">Ведет себя как стандартный метод Python &lt;code&gt;file.close()&lt;/code&gt; и закрывает файл, связанный с этим экземпляром.</target>
        </trans-unit>
        <trans-unit id="058c0a12a9e6a73336cf169899bbd67b58a2696e" translate="yes" xml:space="preserve">
          <source>Behaves the same way as &lt;a href=&quot;#django.db.models.Lookup.process_lhs&quot;&gt;&lt;code&gt;process_lhs()&lt;/code&gt;&lt;/a&gt;, for the right-hand side.</source>
          <target state="translated">Ведет себя так же, как &lt;a href=&quot;#django.db.models.Lookup.process_lhs&quot;&gt; &lt;code&gt;process_lhs()&lt;/code&gt; &lt;/a&gt; , для правой части.</target>
        </trans-unit>
        <trans-unit id="bb28c8b66f1ee877886160ca0f703455045690d5" translate="yes" xml:space="preserve">
          <source>Behavior of contrib apps</source>
          <target state="translated">Поведение приложений</target>
        </trans-unit>
        <trans-unit id="60b5147242d1edb8f92a770b1ec638025b54631a" translate="yes" xml:space="preserve">
          <source>Behavior of parallel requests</source>
          <target state="translated">Поведение параллельных запросов</target>
        </trans-unit>
        <trans-unit id="1334bd3587d4348b9da90cad653f4e01715be733" translate="yes" xml:space="preserve">
          <source>Behavior of unbound forms</source>
          <target state="translated">Поведение несвязанных форм</target>
        </trans-unit>
        <trans-unit id="5bbe3ddff5d188e8a248228bc2152ed147d1b379" translate="yes" xml:space="preserve">
          <source>Behind the scenes</source>
          <target state="translated">За кулисами</target>
        </trans-unit>
        <trans-unit id="2e0fdab6cf6d41997c57faa8163f6751db7574ee" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django appends &lt;code&gt;&quot;_id&quot;&lt;/code&gt; to the field name to create its database column name. In the above example, the database table for the &lt;code&gt;Car&lt;/code&gt; model will have a &lt;code&gt;manufacturer_id&lt;/code&gt; column. (You can change this explicitly by specifying &lt;a href=&quot;#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt;) However, your code should never have to deal with the database column name, unless you write custom SQL. You&amp;rsquo;ll always deal with the field names of your model object.</source>
          <target state="translated">За кулисами Django добавляет &lt;code&gt;&quot;_id&quot;&lt;/code&gt; к имени поля, чтобы создать его имя столбца базы данных. В приведенном выше примере, таблица базы данных для &lt;code&gt;Car&lt;/code&gt; модели будет иметь &lt;code&gt;manufacturer_id&lt;/code&gt; столбца. (Вы можете изменить это явно, указав &lt;a href=&quot;#django.db.models.Field.db_column&quot;&gt; &lt;code&gt;db_column&lt;/code&gt; &lt;/a&gt; ). Однако ваш код никогда не должен иметь дело с именем столбца базы данных, если вы не пишете пользовательский SQL. Вы всегда будете иметь дело с именами полей вашего модельного объекта.</target>
        </trans-unit>
        <trans-unit id="67735357870cd4968ee69d9e4658542d8718d889" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django creates an intermediary join table to represent the many-to-many relationship. By default, this table name is generated using the name of the many-to-many field and the name of the table for the model that contains it. Since some databases don&amp;rsquo;t support table names above a certain length, these table names will be automatically truncated and a uniqueness hash will be used, e.g. &lt;code&gt;author_books_9cdf&lt;/code&gt;. You can manually provide the name of the join table using the &lt;a href=&quot;#django.db.models.ManyToManyField.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">За кулисами Django создает промежуточную таблицу соединений для представления отношения &amp;laquo;многие ко многим&amp;raquo;. По умолчанию это имя таблицы генерируется с использованием имени поля &amp;laquo;многие ко многим&amp;raquo; и имени таблицы для модели, в которой оно содержится. Поскольку некоторые базы данных не поддерживают имена таблиц выше определенной длины, эти имена таблиц будут автоматически усечены, и будет использован хеш уникальности, например, &lt;code&gt;author_books_9cdf&lt;/code&gt; . Вы можете вручную &lt;a href=&quot;#django.db.models.ManyToManyField.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt; имя таблицы соединений, используя опцию db_table .</target>
        </trans-unit>
        <trans-unit id="847ed7171a03f4ee94168580b2643b171022fd15" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django delegates decisions about how and where to store files to a file storage system. This is the object that actually understands things like file systems, opening and reading files, etc.</source>
          <target state="translated">За кулисами,Django делегирует решения о том,как и где хранить файлы на файловом хранилище.Это объект,который на самом деле понимает такие вещи,как файловые системы,открытие и чтение файлов и т.д.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
