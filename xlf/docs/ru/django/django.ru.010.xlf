<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="6468bfe1b90d6cd3667c5baf1e3e836324d1e401" translate="yes" xml:space="preserve">
          <source>Keep your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; a secret.</source>
          <target state="translated">Держите свой &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; в секрете.</target>
        </trans-unit>
        <trans-unit id="11bf666ca636cb39858bb367c2938c163eee182a" translate="yes" xml:space="preserve">
          <source>Keeping all user related information in one model removes the need for additional or more complex database queries to retrieve related models. On the other hand, it may be more suitable to store app-specific user information in a model that has a relation with your custom user model. That allows each app to specify its own user data requirements without potentially conflicting or breaking assumptions by other apps. It also means that you would keep your user model as simple as possible, focused on authentication, and following the minimum requirements Django expects custom user models to meet.</source>
          <target state="translated">Хранение всей пользовательской информации в одной модели устраняет необходимость в дополнительных или более сложных запросах к базе данных для получения связанных моделей.С другой стороны,может быть более удобно хранить пользовательскую информацию,относящуюся к приложениям,в модели,которая имеет отношение к вашей пользовательской модели.Это позволяет каждому приложению указывать свои собственные требования к пользовательским данным без потенциально конфликтующих или нарушающих предположений других приложений.Это также означает,что вы будете держать свою пользовательскую модель как можно более простой,сосредоточенной на аутентификации,и следовать минимальным требованиям,которые Django ожидает от пользовательских моделей.</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="8b81e1ecde65f43dd86891e55d0a4672b89353ce" translate="yes" xml:space="preserve">
          <source>Key lookups</source>
          <target state="translated">Ключевые поиски</target>
        </trans-unit>
        <trans-unit id="3f5fee6e0075615eacd4e89bb50cab8876b4309f" translate="yes" xml:space="preserve">
          <source>Key points to note:</source>
          <target state="translated">Ключевые моменты,на которые следует обратить внимание:</target>
        </trans-unit>
        <trans-unit id="df16181be8da903a9ea0bcf833d332c01485cc71" translate="yes" xml:space="preserve">
          <source>Key, index, and path lookups</source>
          <target state="translated">Поиск ключей,индексов и путей</target>
        </trans-unit>
        <trans-unit id="48181c52d7a0f041d9edd4bdbc167c8eb8cb171d" translate="yes" xml:space="preserve">
          <source>Key, index, and path transforms</source>
          <target state="translated">Трансформации ключей,индексов и траекторий</target>
        </trans-unit>
        <trans-unit id="52b5e092dff22a227c99dc4ed720addb67e119e9" translate="yes" xml:space="preserve">
          <source>Keyword Argument</source>
          <target state="translated">Ключевое слово Аргумент</target>
        </trans-unit>
        <trans-unit id="db32172db3cd21ae36313d815fba0dd39bd7127a" translate="yes" xml:space="preserve">
          <source>Keyword Arguments</source>
          <target state="translated">Ключевое слово Аргументы</target>
        </trans-unit>
        <trans-unit id="b6e263b622ac66480a12aa8dc09139beb9f6e104" translate="yes" xml:space="preserve">
          <source>Keyword argument queries &amp;ndash; in &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;, etc. &amp;ndash; are &amp;ldquo;AND&amp;rdquo;ed together. If you need to execute more complex queries (for example, queries with &lt;code&gt;OR&lt;/code&gt; statements), you can use &lt;a href=&quot;../../ref/models/querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q objects&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Запросы аргументов ключевого слова - в &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; и т. Д. - объединяются &amp;laquo;И&amp;raquo;. Если вам нужно выполнить более сложные запросы (например, запросы с &lt;code&gt;OR&lt;/code&gt; заявления), вы можете использовать &lt;a href=&quot;../../ref/models/querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q objects&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ec8760b0d3dc8d48fb4e0610ab19607da95cff" translate="yes" xml:space="preserve">
          <source>Keyword arguments allow you to change the message level, add extra CSS tags, or fail silently if the &lt;code&gt;contrib.messages&lt;/code&gt; framework is not installed. These keyword arguments match those for &lt;a href=&quot;../messages#django.contrib.messages.add_message&quot;&gt;&lt;code&gt;django.contrib.messages.add_message()&lt;/code&gt;&lt;/a&gt;, see that function&amp;rsquo;s documentation for more details. One difference is that the level may be passed as a string label in addition to integer/constant.</source>
          <target state="translated">Аргументы ключевых слов позволяют изменить уровень сообщения, добавить дополнительные теги CSS или &lt;code&gt;contrib.messages&lt;/code&gt; сбой в режиме без вывода сообщений, если не установлена платформа contrib.messages . Эти ключевые аргументы совпадают с аргументами для &lt;a href=&quot;../messages#django.contrib.messages.add_message&quot;&gt; &lt;code&gt;django.contrib.messages.add_message()&lt;/code&gt; &lt;/a&gt; , более подробную информацию смотрите в документации этой функции. Одно отличие состоит в том, что уровень может быть передан как строковая метка в дополнение к целому числу / константе.</target>
        </trans-unit>
        <trans-unit id="e3c047d4fa560655a4c9b137b6ae6b7f96f9bb33" translate="yes" xml:space="preserve">
          <source>Keyword arguments that can provide extra context for the SQL generated by the aggregate.</source>
          <target state="translated">Ключевые аргументы,которые могут обеспечить дополнительный контекст для SQL,генерируемого агрегатом.</target>
        </trans-unit>
        <trans-unit id="3fa8b79bb0bea1bbd3b43612463d464bd5a74adc" translate="yes" xml:space="preserve">
          <source>Kilometre, Kilometer</source>
          <target state="translated">километры,километры</target>
        </trans-unit>
        <trans-unit id="4e617bafa47d9a4ed6de9204fc070360a5cc8706" translate="yes" xml:space="preserve">
          <source>KyngChaos</source>
          <target state="translated">KyngChaos</target>
        </trans-unit>
        <trans-unit id="cbc770cf346b5261fa6de79f704a15a53242cf2d" translate="yes" xml:space="preserve">
          <source>KyngChaos packages</source>
          <target state="translated">Пакеты KyngChaos</target>
        </trans-unit>
        <trans-unit id="b153eb78e99d2e3e01e42e23731bfe05df63eb8b" translate="yes" xml:space="preserve">
          <source>LJWorld.com and Lawrence.com both have email alert functionality, which lets readers sign up to get notifications when news happens. It&amp;rsquo;s pretty basic: A reader signs up on a Web form and immediately gets an email saying, &amp;ldquo;Thanks for your subscription.&amp;rdquo;</source>
          <target state="translated">LJWorld.com и Lawrence.com имеют функцию оповещения по электронной почте, которая позволяет читателям подписываться на уведомления о появлении новостей. Это довольно просто: читатель регистрируется в веб-форме и сразу же получает электронное письмо со словами &amp;laquo;Спасибо за вашу подписку&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c87e855f857da475f822ad7e332f47b0210e6b27" translate="yes" xml:space="preserve">
          <source>LOB columns may not be used as primary keys.</source>
          <target state="translated">LOB-столбцы не могут использоваться в качестве первичных ключей.</target>
        </trans-unit>
        <trans-unit id="f37a4fdbe1b9352a7f800671735935bf512cbbc1" translate="yes" xml:space="preserve">
          <source>LOB columns may not be used in a &lt;code&gt;SELECT DISTINCT&lt;/code&gt; list. This means that attempting to use the &lt;code&gt;QuerySet.distinct&lt;/code&gt; method on a model that includes &lt;code&gt;TextField&lt;/code&gt; columns will result in an &lt;code&gt;ORA-00932&lt;/code&gt; error when run against Oracle. As a workaround, use the &lt;code&gt;QuerySet.defer&lt;/code&gt; method in conjunction with &lt;code&gt;distinct()&lt;/code&gt; to prevent &lt;code&gt;TextField&lt;/code&gt; columns from being included in the &lt;code&gt;SELECT DISTINCT&lt;/code&gt; list.</source>
          <target state="translated">Столбцы больших объектов нельзя использовать в списке &lt;code&gt;SELECT DISTINCT&lt;/code&gt; . Это означает, что попытка использовать метод &lt;code&gt;QuerySet.distinct&lt;/code&gt; в модели, включающей столбцы &lt;code&gt;TextField&lt;/code&gt; , приведет к ошибке &lt;code&gt;ORA-00932&lt;/code&gt; при запуске с Oracle. В качестве обходного пути используйте метод &lt;code&gt;QuerySet.defer&lt;/code&gt; в сочетании с &lt;code&gt;distinct()&lt;/code&gt; для предотвращения &lt;code&gt;TextField&lt;/code&gt; столбцов TextField в список &lt;code&gt;SELECT DISTINCT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23aa061f34d8daee01c85141530845ac93ba30f7" translate="yes" xml:space="preserve">
          <source>LOB columns may not be used in indexes.</source>
          <target state="translated">LOB-столбцы не могут использоваться в индексах.</target>
        </trans-unit>
        <trans-unit id="2f0d617fe578d453561df393b035a56559df8484" translate="yes" xml:space="preserve">
          <source>LOCALE_PATHS, LANGUAGE_CODE</source>
          <target state="translated">ЛОКАЛЬ_ПУТИ,КОД_ЯЗЫКА</target>
        </trans-unit>
        <trans-unit id="ba9dfe5041cd205445df5b843e8a9dc628256415" translate="yes" xml:space="preserve">
          <source>Lambdas</source>
          <target state="translated">Lambdas</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="15cf7920bc40aa026228a895b90198998e1c661b" translate="yes" xml:space="preserve">
          <source>Language cookie</source>
          <target state="translated">Языковой куки-файл</target>
        </trans-unit>
        <trans-unit id="e2313e70fc3b44edd797d4ee37ae99cf5b536f9e" translate="yes" xml:space="preserve">
          <source>Language prefix in URL patterns</source>
          <target state="translated">Языковой префикс в шаблонах URL</target>
        </trans-unit>
        <trans-unit id="d5706fe49707b39d9d0ba70c9ad9195dbfd8428b" translate="yes" xml:space="preserve">
          <source>Large directories with many files may cause performance issues</source>
          <target state="translated">Большие каталоги с большим количеством файлов могут вызвать проблемы с производительностью</target>
        </trans-unit>
        <trans-unit id="66a2147848cda23e4068f8ecbe6f03cd2754422c" translate="yes" xml:space="preserve">
          <source>Lastly, your check function must be registered explicitly with system check registry. Checks should be registered in a file that&amp;rsquo;s loaded when your application is loaded; for example, in the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Наконец, ваша функция проверки должна быть явно зарегистрирована в реестре проверки системы. Проверки должны быть зарегистрированы в файле, который загружается при загрузке вашего приложения; например, в методе &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;AppConfig.ready()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccbd0691e5899de74565a225b47115af7e41eb95" translate="yes" xml:space="preserve">
          <source>Later on we use the term &lt;em&gt;packaging&lt;/em&gt; to describe the process of making a Python package easy for others to install. It can be a little confusing, we know.</source>
          <target state="translated">Позже мы будем использовать термин &amp;laquo; &lt;em&gt;упаковка&amp;raquo;,&lt;/em&gt; чтобы описать процесс создания пакета Python, который другие могут легко установить. Это может немного сбивать с толку, мы знаем.</target>
        </trans-unit>
        <trans-unit id="bf20c881e0dc069882fc7e5d606a7b61cb53816e" translate="yes" xml:space="preserve">
          <source>LayerMapping data import utility</source>
          <target state="translated">Утилита импорта данных LayerMapping</target>
        </trans-unit>
        <trans-unit id="6eb48363145bff612fcd9f60ac338f08d9514585" translate="yes" xml:space="preserve">
          <source>Laziness allows us to refer to things before they are instantiated, or even before it&amp;rsquo;s possible to instantiate them. This has numerous uses.</source>
          <target state="translated">Лень позволяет нам обращаться к вещам до того, как они будут созданы, или даже до того, как их можно будет создать. Это имеет множество применений.</target>
        </trans-unit>
        <trans-unit id="7306ad109bfe4aa0d559571e47ed10b95c1acd7e" translate="yes" xml:space="preserve">
          <source>Laziness in Django</source>
          <target state="translated">Лень в Джанго</target>
        </trans-unit>
        <trans-unit id="9db8ab131c503038349926561b42c112352a10ec" translate="yes" xml:space="preserve">
          <source>Laziness is also a way to save effort by trying to avoid work in the first place. That is, one aspect of laziness is not doing anything until it has to be done, because it may not turn out to be necessary after all. Laziness can therefore have performance implications, and the more expensive the work concerned, the more there is to gain through laziness.</source>
          <target state="translated">Лень-это также способ сэкономить усилия,пытаясь избежать работы в первую очередь.То есть один из аспектов лени заключается в том,что лень ничего не делать до тех пор,пока это не будет сделано,потому что в конце концов она может оказаться не нужной.Таким образом,лень может иметь последствия для производительности,и чем дороже данная работа,тем больше можно выиграть от лени.</target>
        </trans-unit>
        <trans-unit id="ba6579907e4a7f45362bf94f354f36722b584440" translate="yes" xml:space="preserve">
          <source>Lazy Geometries</source>
          <target state="translated">ленивые геометрии</target>
        </trans-unit>
        <trans-unit id="5da11f4eec7970e01e777c79bbd1f868cda4bd15" translate="yes" xml:space="preserve">
          <source>Lazy translation</source>
          <target state="translated">ленивый перевод</target>
        </trans-unit>
        <trans-unit id="3d6bad0f45a94e2a01930bb1020eff0a76e76f44" translate="yes" xml:space="preserve">
          <source>Lazy translations and plural</source>
          <target state="translated">ленивый перевод и множественное число</target>
        </trans-unit>
        <trans-unit id="9b1f34a5739405246bd9919b678f713ac631fed7" translate="yes" xml:space="preserve">
          <source>Learn about some other core functionalities of the Django framework:</source>
          <target state="translated">Узнайте о некоторых других основных функциях фреймворка Django:</target>
        </trans-unit>
        <trans-unit id="ef1ab011ef2c624e2c7031f6c7a9d37cc55f1cf3" translate="yes" xml:space="preserve">
          <source>Learn about the development process for the Django project itself and about how you can contribute:</source>
          <target state="translated">Узнайте о процессе разработки самого проекта Django и о том,как вы можете внести свой вклад:</target>
        </trans-unit>
        <trans-unit id="2f3354aecddee7d995b534cf8538581af1f6c203" translate="yes" xml:space="preserve">
          <source>Learn about the various components and tools to help you in the development and testing of Django applications:</source>
          <target state="translated">Узнайте о различных компонентах и инструментах,которые помогут вам в разработке и тестировании приложений Django:</target>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="translated">Узнать больше</target>
        </trans-unit>
        <trans-unit id="f1ab6cb67a17a1c6e360ed241bd2dda3b974e3d3" translate="yes" xml:space="preserve">
          <source>Learns what headers to take into account for some request path from the response object. It stores those headers in a global path registry so that later access to that path will know what headers to take into account without building the response object itself. The headers are named in the &lt;code&gt;Vary&lt;/code&gt; header of the response, but we want to prevent response generation.</source>
          <target state="translated">Узнает, какие заголовки нужно учитывать для некоторого пути запроса от объекта ответа. Он сохраняет эти заголовки в реестре глобального пути, чтобы при последующем доступе к этому пути было известно, какие заголовки следует учитывать, не создавая сам объект ответа. Заголовки названы в заголовке &lt;code&gt;Vary&lt;/code&gt; ответа, но мы хотим предотвратить генерацию ответа.</target>
        </trans-unit>
        <trans-unit id="09777de5be0a68a212ac9f63799746f9d808d38b" translate="yes" xml:space="preserve">
          <source>Leaving this setting off isn&amp;rsquo;t a good idea because an attacker could capture an unencrypted session cookie with a packet sniffer and use the cookie to hijack the user&amp;rsquo;s session.</source>
          <target state="translated">Отключение этого параметра не является хорошей идеей, поскольку злоумышленник может перехватить незашифрованный файл cookie сеанса с помощью анализатора пакетов и использовать этот файл cookie для перехвата сеанса пользователя.</target>
        </trans-unit>
        <trans-unit id="083e90c2b3005bc225a03c2abdf03d369325f963" translate="yes" xml:space="preserve">
          <source>Left-aligns the value in a field of a given width.</source>
          <target state="translated">Выравнивает слева значение в поле заданной ширины.</target>
        </trans-unit>
        <trans-unit id="a02227b0f0b9337ad694cb0213155cb14a60b4fc" translate="yes" xml:space="preserve">
          <source>Less than or equal to.</source>
          <target state="translated">Меньше или равно.</target>
        </trans-unit>
        <trans-unit id="73c669caad45b8802c1bb872ff0703e13b665fba" translate="yes" xml:space="preserve">
          <source>Less than or equal to. Example:</source>
          <target state="translated">Меньше или равно.Пример:</target>
        </trans-unit>
        <trans-unit id="40d2a5fe11e0306023d56f6e8912a222594ed047" translate="yes" xml:space="preserve">
          <source>Less than.</source>
          <target state="translated">Меньше чем.</target>
        </trans-unit>
        <trans-unit id="96c4349122b9bb7576d0d61f7a88e8edd3726822" translate="yes" xml:space="preserve">
          <source>Less than. Example:</source>
          <target state="translated">Меньше чем.Пример:</target>
        </trans-unit>
        <trans-unit id="c841a65c7f1c3eccf8b28668b87263bfc640fcff" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s also add a custom method to this model:</source>
          <target state="translated">Давайте также добавим пользовательский метод к этой модели:</target>
        </trans-unit>
        <trans-unit id="8c13e4563c320f96f46850c604f3f010e32fc04d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s assume you have a blog system, with an &lt;code&gt;Entry&lt;/code&gt; model, and you want your sitemap to include all the links to your individual blog entries. Here&amp;rsquo;s how your sitemap class might look:</source>
          <target state="translated">Предположим, у вас есть система блогов с моделью &lt;code&gt;Entry&lt;/code&gt; , и вы хотите, чтобы карта вашего сайта включала все ссылки на ваши отдельные записи блога. Вот как может выглядеть ваш класс Sitemap:</target>
        </trans-unit>
        <trans-unit id="1c225b116fcb368350be69537d8c022103cd45ec" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s convert our poll app to use the generic views system, so we can delete a bunch of our own code. We&amp;rsquo;ll have to take a few steps to make the conversion. We will:</source>
          <target state="translated">Давайте преобразуем наше приложение для опроса, чтобы использовать систему общих представлений, чтобы мы могли удалить часть нашего собственного кода. Мы должны сделать несколько шагов, чтобы сделать преобразование. Мы будем:</target>
        </trans-unit>
        <trans-unit id="37107c1b14b06985400cce64f2c0cee8e51e7116" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a &lt;code&gt;ContactForm&lt;/code&gt; to demonstrate how you&amp;rsquo;d use this field:</source>
          <target state="translated">Давайте создадим &lt;code&gt;ContactForm&lt;/code&gt; , чтобы продемонстрировать, как вы будете использовать это поле:</target>
        </trans-unit>
        <trans-unit id="fc48aeca8eda2b4682b3d6e61de76f5755e853cc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s dive right in. Create a file called &lt;code&gt;admin.py&lt;/code&gt; inside the &lt;code&gt;world&lt;/code&gt; application with the following code:</source>
          <target state="translated">Давайте &lt;code&gt;admin.py&lt;/code&gt; в ситуацию . Создайте файл с именем admin.py внутри приложения &lt;code&gt;world&lt;/code&gt; со следующим кодом:</target>
        </trans-unit>
        <trans-unit id="79da13085a3608464e32b76daf1a4b750cb3a395" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s examine case-insensitive transformations here. This transformation isn&amp;rsquo;t very useful in practice as Django already comes with a bunch of built-in case-insensitive lookups, but it will be a nice demonstration of bilateral transformations in a database-agnostic way.</source>
          <target state="translated">Давайте рассмотрим преобразования без учета регистра здесь. Это преобразование не очень полезно на практике, так как Django уже поставляется с кучей встроенных поисков без учета регистра, но это будет хорошая демонстрация двусторонних преобразований без учета базы данных.</target>
        </trans-unit>
        <trans-unit id="00c7bb390f8a74d36b4ee2f29857af8f287892c8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s first create a custom form field that validates its input is a string containing comma-separated email addresses. The full class looks like this:</source>
          <target state="translated">Давайте сначала создадим настраиваемое поле формы, которое проверяет, что его ввод представляет собой строку, содержащую адреса электронной почты через запятую. Полный класс выглядит так:</target>
        </trans-unit>
        <trans-unit id="187a2d21db52b3e5410be8c2a3c86fdac14a40b4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s learn by example.</source>
          <target state="translated">Давайте учиться на примере.</target>
        </trans-unit>
        <trans-unit id="1fb3c9be87e64709bf5f0c1265d580cb8272df73" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at an example to see how this works. If you already have the &lt;a href=&quot;#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;contenttypes&lt;/code&gt;&lt;/a&gt; application installed, and then add &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;the sites application&lt;/code&gt;&lt;/a&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and run &lt;code&gt;manage.py migrate&lt;/code&gt; to install it, the model &lt;a href=&quot;sites#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;django.contrib.sites.models.Site&lt;/code&gt;&lt;/a&gt; will be installed into your database. Along with it a new instance of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; will be created with the following values:</source>
          <target state="translated">Давайте посмотрим на пример, чтобы увидеть, как это работает. Если у вас уже установлено приложение &lt;a href=&quot;#module-django.contrib.contenttypes&quot;&gt; &lt;code&gt;contenttypes&lt;/code&gt; &lt;/a&gt; , а затем добавьте &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;the sites application&lt;/code&gt; &lt;/a&gt; в настройку &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; и запустите &lt;code&gt;manage.py migrate&lt;/code&gt; , чтобы установить его, модель &lt;a href=&quot;sites#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;django.contrib.sites.models.Site&lt;/code&gt; &lt;/a&gt; будет установлена ​​в вашу базу данных. Наряду с этим будет создан новый экземпляр &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; со следующими значениями:</target>
        </trans-unit>
        <trans-unit id="b482ca18f2f08a83d3ec431b921de771f9948555" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at how two of Django&amp;rsquo;s generic class-based views are built out of mixins providing discrete functionality. We&amp;rsquo;ll consider &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt;, which renders a &amp;ldquo;detail&amp;rdquo; view of an object, and &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;, which will render a list of objects, typically from a queryset, and optionally paginate them. This will introduce us to four mixins which between them provide useful functionality when working with either a single Django object, or multiple objects.</source>
          <target state="translated">Давайте посмотрим, как два общих представления на основе классов в Django построены из миксинов, обеспечивающих дискретную функциональность. Мы рассмотрим &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt; , который отображает &amp;laquo;подробный&amp;raquo; вид объекта, и &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; , который будет отображать список объектов, как правило, из набора запросов, и при необходимости разбивать их на страницы. Это познакомит нас с четырьмя миксинами, которые между ними предоставляют полезную функциональность при работе либо с одним объектом Django, либо с несколькими объектами.</target>
        </trans-unit>
        <trans-unit id="ffefad313aa5954a7172dc72b1d07b889da725a8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at some of these more closely.</source>
          <target state="translated">Давайте посмотрим на некоторые из них более подробно.</target>
        </trans-unit>
        <trans-unit id="010769fda27e004183327e34d1bc70963b10f512" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at template inheritance by starting with an example:</source>
          <target state="translated">Давайте посмотрим на наследование шаблонов, начав с примера:</target>
        </trans-unit>
        <trans-unit id="55d7d95000f7a31233733941186d880e813c5ba9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at the SQL that will generate the table for the &lt;code&gt;WorldBorder&lt;/code&gt; model:</source>
          <target state="translated">Давайте посмотрим на SQL, который сгенерирует таблицу для модели &lt;code&gt;WorldBorder&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a58cc92a0a67b5a9a26020d7c3a1539bddac1b9c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at what &lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; created:</source>
          <target state="translated">Давайте посмотрим, что создал &lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f0916a74a448227e847bd0ae1c7a1ee8b3a78ac6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s refactor our &lt;code&gt;CycleNode&lt;/code&gt; implementation to use the &lt;code&gt;render_context&lt;/code&gt;:</source>
          <target state="translated">Давайте &lt;code&gt;CycleNode&lt;/code&gt; рефакторинг нашей реализации CycleNode для использования &lt;code&gt;render_context&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61527bb6f9f99fa92fe94f8a54144255e683d9a4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s reproduce this error by comparing a naive and an aware datetime:</source>
          <target state="translated">Давайте воспроизведем эту ошибку, сравнив наивное и осведомленное время:</target>
        </trans-unit>
        <trans-unit id="b6172a55db4a398066cf2f300f7a317aae4b91ea" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say the &lt;code&gt;news/year_archive.html&lt;/code&gt; template was found. Here&amp;rsquo;s what that might look like:</source>
          <target state="translated">Допустим, шаблон &lt;code&gt;news/year_archive.html&lt;/code&gt; был найден. Вот как это может выглядеть:</target>
        </trans-unit>
        <trans-unit id="c8498358e4e316a59220a51bcfc584545251953d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to change the &lt;code&gt;account_type&lt;/code&gt; for our clients to match their registration dates. We can do this using a conditional expression and the &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Допустим, мы хотим изменить &lt;code&gt;account_type&lt;/code&gt; для наших клиентов в соответствии с датами их регистрации. Мы можем сделать это, используя условное выражение и метод &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="674775ae6b8f711b93b934fc943f13569ff5e193" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we&amp;rsquo;re writing a backend for Microsoft&amp;rsquo;s SQL Server which uses the SQL &lt;code&gt;LEN&lt;/code&gt; instead of &lt;code&gt;LENGTH&lt;/code&gt; for the &lt;a href=&quot;database-functions#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt; function. We&amp;rsquo;ll monkey patch a new method called &lt;code&gt;as_sqlserver()&lt;/code&gt; onto the &lt;code&gt;Length&lt;/code&gt; class:</source>
          <target state="translated">Допустим, мы пишем бэкэнд для Microsoft SQL Server, который использует SQL &lt;code&gt;LEN&lt;/code&gt; вместо &lt;code&gt;LENGTH&lt;/code&gt; для функции &lt;a href=&quot;database-functions#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt; . Обезьяна исправит новый метод &lt;code&gt;as_sqlserver()&lt;/code&gt; в классе &lt;code&gt;Length&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9fbadd9a8d68743fcc57b910b725e2c6420e8e5f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you were starting a new project that needed a polls app like the one we&amp;rsquo;ve been working on. How do you make this app reusable? Luckily, you&amp;rsquo;re well on the way already. In &lt;a href=&quot;tutorial01&quot;&gt;Tutorial 1&lt;/a&gt;, we saw how we could decouple polls from the project-level URLconf using an &lt;code&gt;include&lt;/code&gt;. In this tutorial, we&amp;rsquo;ll take further steps to make the app easy to use in new projects and ready to publish for others to install and use.</source>
          <target state="translated">Допустим, вы начинаете новый проект, для которого нужно приложение для опросов, такое как то, над которым мы работали. Как вы делаете это приложение многоразовым? К счастью, вы уже в пути. В &lt;a href=&quot;tutorial01&quot;&gt;Уроке 1&lt;/a&gt; мы увидели, как можно отделить опросы от URLconf уровня проекта, используя &lt;code&gt;include&lt;/code&gt; . В этом руководстве мы предпримем дальнейшие шаги, чтобы сделать приложение простым в использовании в новых проектах и ​​готовым к публикации для установки и использования другими пользователями.</target>
        </trans-unit>
        <trans-unit id="f4547f3c6ed9ab627755ced07c0ef98ea5492c5d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you&amp;rsquo;re developing your Django application and have a &amp;ldquo;pristine&amp;rdquo; copy of a database that you&amp;rsquo;d like to interact with. You can dump your database to a fixture (using the &lt;a href=&quot;#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; command, explained above), then use &lt;code&gt;testserver&lt;/code&gt; to run your Web application with that data. With this arrangement, you have the flexibility of messing up your data in any way, knowing that whatever data changes you&amp;rsquo;re making are only being made to a test database.</source>
          <target state="translated">Допустим, вы разрабатываете свое приложение Django и имеете &amp;laquo;нетронутую&amp;raquo; копию базы данных, с которой вы хотели бы взаимодействовать. Вы можете вывести свою базу данных в &lt;a href=&quot;#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt; (используя команду dumpdata , описанную выше), а затем использовать &lt;code&gt;testserver&lt;/code&gt; для запуска вашего веб-приложения с этими данными. При таком расположении вы можете гибко вносить ошибки в ваши данные, зная, что любые изменения данных вносятся только в тестовую базу данных.</target>
        </trans-unit>
        <trans-unit id="3e592833b5543bdeb8888157baa74642a61fc297" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you&amp;rsquo;re trying to override the templates for a third-party application called &lt;code&gt;blog&lt;/code&gt;, which provides the templates &lt;code&gt;blog/post.html&lt;/code&gt; and &lt;code&gt;blog/list.html&lt;/code&gt;. The relevant settings for your project would look like:</source>
          <target state="translated">Допустим, вы пытаетесь переопределить шаблоны для стороннего приложения под названием &lt;code&gt;blog&lt;/code&gt; , которое предоставляет шаблоны &lt;code&gt;blog/post.html&lt;/code&gt; и &lt;code&gt;blog/list.html&lt;/code&gt; . Соответствующие настройки для вашего проекта будут выглядеть так:</target>
        </trans-unit>
        <trans-unit id="4a78da4f0f96ccaa8818c94601b3d212850c1086" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how it works:</source>
          <target state="translated">Давайте посмотрим, как это работает:</target>
        </trans-unit>
        <trans-unit id="e06a71efa03ee78ba69e395440cf513c47c8c2b5" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how this works by registering a signal that gets called after each HTTP request is finished. We&amp;rsquo;ll be connecting to the &lt;a href=&quot;../ref/signals#django.core.signals.request_finished&quot;&gt;&lt;code&gt;request_finished&lt;/code&gt;&lt;/a&gt; signal.</source>
          <target state="translated">Давайте посмотрим, как это работает, зарегистрировав сигнал, который вызывается после завершения каждого HTTP-запроса. Мы будем подключаться к сигналу &lt;a href=&quot;../ref/signals#django.core.signals.request_finished&quot;&gt; &lt;code&gt;request_finished&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="febf35219c9a28beaf6a9acbff3a5277afa2d816" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how this works by reordering the fields on the edit form. Replace the &lt;code&gt;admin.site.register(Question)&lt;/code&gt; line with:</source>
          <target state="translated">Давайте посмотрим, как это работает, переупорядочив поля в форме редактирования. Замените &lt;code&gt;admin.site.register(Question)&lt;/code&gt; на:</target>
        </trans-unit>
        <trans-unit id="6404ea57f576d05b9c8fbca7fa5c5d63fa43f83f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by looking at some examples of showing a list of objects or an individual object.</source>
          <target state="translated">Давайте начнем с рассмотрения нескольких примеров показа списка объектов или отдельного объекта.</target>
        </trans-unit>
        <trans-unit id="1551f600d211b9d0023bac9d0cb4fadb9a4233e4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with a small custom lookup. We will write a custom lookup &lt;code&gt;ne&lt;/code&gt; which works opposite to &lt;code&gt;exact&lt;/code&gt;. &lt;code&gt;Author.objects.filter(name__ne='Jack')&lt;/code&gt; will translate to the SQL:</source>
          <target state="translated">Давайте начнем с небольшого пользовательского поиска. Мы напишем пользовательский поиск &lt;code&gt;ne&lt;/code&gt; , который работает противоположно &lt;code&gt;exact&lt;/code&gt; . &lt;code&gt;Author.objects.filter(name__ne='Jack')&lt;/code&gt; будет переводиться в SQL:</target>
        </trans-unit>
        <trans-unit id="423531172bf446e55a2e04f7a1a96cecf1db8ece" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with model fields. If you break it down, a model field provides a way to take a normal Python object &amp;ndash; string, boolean, &lt;code&gt;datetime&lt;/code&gt;, or something more complex like &lt;code&gt;Hand&lt;/code&gt; &amp;ndash; and convert it to and from a format that is useful when dealing with the database. (Such a format is also useful for serialization, but as we&amp;rsquo;ll see later, that is easier once you have the database side under control).</source>
          <target state="translated">Начнем с модельных полей. Если вы разобьете его, поле модели предоставит способ взять обычный объект Python - string, boolean, &lt;code&gt;datetime&lt;/code&gt; или что-то более сложное, например &lt;code&gt;Hand&lt;/code&gt; - и преобразовать его в формат, который будет полезен при работе с базой данных. (Такой формат также полезен для сериализации, но, как мы увидим позже, это проще, когда вы контролируете сторону базы данных).</target>
        </trans-unit>
        <trans-unit id="6f46797d9a8d056443aa92c8f4619748862100fb" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s step through this code one line at a time:</source>
          <target state="translated">Давайте рассмотрим этот код по одной строке за раз:</target>
        </trans-unit>
        <trans-unit id="94aa51d90972b01afb689b3d1a89d3eb901bb673" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look inside a couple of those files:</source>
          <target state="translated">Давайте посмотрим на пару из этих файлов:</target>
        </trans-unit>
        <trans-unit id="bccd1c870a0a4dcf400d08d947411ab954b771e6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try this with an example. Normally, one might do something like this:</source>
          <target state="translated">Давайте попробуем это на примере. Обычно можно сделать что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="504babc6e275812ba81c4391fb57ae519e3510d7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try with some invalid data. In this case, &lt;code&gt;subject&lt;/code&gt; is blank (an error, because all fields are required by default) and &lt;code&gt;sender&lt;/code&gt; is not a valid email address:</source>
          <target state="translated">Давайте попробуем с некоторыми неверными данными. В этом случае &lt;code&gt;subject&lt;/code&gt; не указана (ошибка, поскольку по умолчанию все поля обязательны для заполнения), а &lt;code&gt;sender&lt;/code&gt; не является действительным адресом электронной почты:</target>
        </trans-unit>
        <trans-unit id="c2190c9fc23eb29106134f7ad4a9ace95beaf6b8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s update our poll detail template (&amp;ldquo;polls/detail.html&amp;rdquo;) from the last tutorial, so that the template contains an HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">Давайте обновим наш детальный шаблон опроса (&amp;laquo;polls / detail.html&amp;raquo;) из последнего урока, чтобы шаблон содержал HTML- элемент &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2632c1e8aa342b4a8b2b77fdaa7894b3813e8647" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s verify your Django project works. Change into the outer &lt;code&gt;mysite&lt;/code&gt; directory, if you haven&amp;rsquo;t already, and run the following commands:</source>
          <target state="translated">Давайте проверим, работает ли ваш Django проект. Перейдите во внешний каталог &lt;code&gt;mysite&lt;/code&gt; , если вы этого еще не сделали, и выполните следующие команды:</target>
        </trans-unit>
        <trans-unit id="7481c3803bbb2daeb5381bc49b0b54a65124b8cb" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s walk through this example. &lt;code&gt;{% regroup %}&lt;/code&gt; takes three arguments: the list you want to regroup, the attribute to group by, and the name of the resulting list. Here, we&amp;rsquo;re regrouping the &lt;code&gt;cities&lt;/code&gt; list by the &lt;code&gt;country&lt;/code&gt; attribute and calling the result &lt;code&gt;country_list&lt;/code&gt;.</source>
          <target state="translated">Давайте пройдемся по этому примеру. &lt;code&gt;{% regroup %}&lt;/code&gt; принимает три аргумента: список, который вы хотите перегруппировать, атрибут для группировки и имя результирующего списка. Здесь мы перегруппируем список &lt;code&gt;cities&lt;/code&gt; по атрибуту &lt;code&gt;country&lt;/code&gt; и вызываем результат &lt;code&gt;country_list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd3cf48e50eddc3fba400217aaf336f782eaf8e5" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write a migration that populates our new &lt;code&gt;name&lt;/code&gt; field with the combined values of &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; (we&amp;rsquo;ve come to our senses and realized that not everyone has first and last names). All we need to do is use the historical model and iterate over the rows:</source>
          <target state="translated">Давайте напишем миграцию, заполняющую наше новое &lt;code&gt;name&lt;/code&gt; поле с объединенными значениями &lt;code&gt;first_name&lt;/code&gt; и &lt;code&gt;last_name&lt;/code&gt; (мы пришли к нашим чувствам и поняли , что не каждый имеют первый и фамилию). Все, что нам нужно сделать, это использовать историческую модель и перебрать строки:</target>
        </trans-unit>
        <trans-unit id="36bb27cf6e20079aabce85127956f8d966f68f12" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write the first view. Open the file &lt;code&gt;polls/views.py&lt;/code&gt; and put the following Python code in it:</source>
          <target state="translated">Давайте напишем первый взгляд. Откройте файл &lt;code&gt;polls/views.py&lt;/code&gt; и поместите в него следующий код Python:</target>
        </trans-unit>
        <trans-unit id="8f407590b229000b90afe5cd5954958752ddd121" translate="yes" xml:space="preserve">
          <source>Lets you create a formset with the ability to order:</source>
          <target state="translated">Позволяет создавать формуляры с возможностью заказа:</target>
        </trans-unit>
        <trans-unit id="c02187affceb445e9305a60658d3c066c7db16fa" translate="yes" xml:space="preserve">
          <source>Lets you create a formset with the ability to select forms for deletion:</source>
          <target state="translated">Позволяет создать набор форм с возможностью выбора форм для удаления:</target>
        </trans-unit>
        <trans-unit id="f556c30e0a0e7632f1adaf69376f9c9a698f371c" translate="yes" xml:space="preserve">
          <source>Lets you pass a command as a string to execute it as Django, like so:</source>
          <target state="translated">Позволяет передать команду в виде строки,чтобы выполнить ее как Django:</target>
        </trans-unit>
        <trans-unit id="df65069d0885fd61cd4c2cc0c08459bf7ec10caa" translate="yes" xml:space="preserve">
          <source>Lets you specify the URL that users who don&amp;rsquo;t pass the test will be redirected to. It may be a login page and defaults to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; if you don&amp;rsquo;t specify one.</source>
          <target state="translated">Позволяет указать URL-адрес, на который будут перенаправлены пользователи, не прошедшие тест. Это может быть страница входа и по умолчанию - &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; ,&lt;/a&gt; если вы ее не указали.</target>
        </trans-unit>
        <trans-unit id="ca7f7f5bed464663e88c2d9517ab5e284fa91f09" translate="yes" xml:space="preserve">
          <source>Level Constant</source>
          <target state="translated">Постоянный уровень</target>
        </trans-unit>
        <trans-unit id="b954a0887add52752e06674c9d7013c57e040fe0" translate="yes" xml:space="preserve">
          <source>Libraries can be loaded by passing the corresponding dictionary key to the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">Загружать библиотеки можно, передав соответствующий ключ словаря в тег &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29808eb5cb44255de14dac59aefcc411b6547528" translate="yes" xml:space="preserve">
          <source>Libraries can be loaded by passing the corresponding dictionary key to the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">Загружать библиотеки можно, передав соответствующий ключ словаря в тег &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b3f991e900143285adef8fbb526e8ab6f02c275" translate="yes" xml:space="preserve">
          <source>Library Requirements</source>
          <target state="translated">Библиотечные требования</target>
        </trans-unit>
        <trans-unit id="ac58e4217af56e3a1ba8bec5e4dcc9685aa92add" translate="yes" xml:space="preserve">
          <source>Library environment settings</source>
          <target state="translated">Настройки библиотечной среды</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="translated">Лицензия BSD.</target>
        </trans-unit>
        <trans-unit id="6e7607aff826aade5ab90b8d8de0fb82a918a57b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="translated">Как &lt;a href=&quot;#django.db.models.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;null=True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58e57aeb5cde6d590a20ba69d32dc0a71347311b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null=True&lt;/code&gt;. Use that instead of this field as it&amp;rsquo;s likely to be deprecated in a future version of Django.</source>
          <target state="translated">Как &lt;a href=&quot;#django.db.models.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;null=True&lt;/code&gt; . Используйте это вместо этого поля, так как оно может быть устаревшим в будущей версии Django.</target>
        </trans-unit>
        <trans-unit id="d863c349005f0af90c7f401e7734ee9139cec79f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt;&lt;code&gt;unique_for_date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Field.unique_for_month&quot;&gt;&lt;code&gt;unique_for_month&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Как &lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt; &lt;code&gt;unique_for_date&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.Field.unique_for_month&quot;&gt; &lt;code&gt;unique_for_month&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cb204156411d2f4610b450ea6f4198604fc63ca" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt;&lt;code&gt;unique_for_date&lt;/code&gt;&lt;/a&gt;, but requires the field to be unique with respect to the month.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.db.models.Field.unique_for_date&quot;&gt; &lt;code&gt;unique_for_date&lt;/code&gt; &lt;/a&gt; , но требует, чтобы поле было уникальным по отношению к месяцу.</target>
        </trans-unit>
        <trans-unit id="911a97afa7975200bcc2321bf08148741b444fe2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;related_query_name&lt;/code&gt; supports app label and class interpolation via &lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;some special syntax&lt;/a&gt;.</source>
          <target state="translated">Как и &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;related_query_name&lt;/code&gt; поддерживает интерполяцию меток приложений и классов с помощью &lt;a href=&quot;../../topics/db/models#abstract-related-name&quot;&gt;специального синтаксиса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e8ba55cee6b9bc75efd8d7b2d9363b4469563af" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;, it can be registered as a transform on &lt;code&gt;IntegerField&lt;/code&gt;. The default lookup name is &lt;code&gt;chr&lt;/code&gt;.</source>
          <target state="translated">Как и &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt; , он может быть зарегистрирован как преобразование на &lt;code&gt;IntegerField&lt;/code&gt; . Имя поиска по умолчанию - &lt;code&gt;chr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1e12840ec9b2637f09dc7a3ab639b1aa8cc958b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; raise &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; if there is no object with the given parameters.</source>
          <target state="translated">Как и &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt; &lt;code&gt;earliest()&lt;/code&gt; и &lt;code&gt;latest()&lt;/code&gt; вызывают DoesNotExist, если не существует объекта с заданными параметрами.</target>
        </trans-unit>
        <trans-unit id="214c8acc0296f6b6279e2c41f5ce14dda1a45453" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; raise &lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; if there is no object with the given parameters.</source>
          <target state="translated">Как &lt;a href=&quot;#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;earliest()&lt;/code&gt; и &lt;code&gt;latest()&lt;/code&gt; поднимают &lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; ,&lt;/a&gt; если нет объекта с данными параметрами.</target>
        </trans-unit>
        <trans-unit id="239355497d3fbe89204c4a53a6ee6315e778dee6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt;&lt;code&gt;get_or_create()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt;, if you&amp;rsquo;re using manually specified primary keys and an object needs to be created but the key already exists in the database, an &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">Как &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt; &lt;code&gt;get_or_create()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.query.QuerySet.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt; , если вы используете указанные вручную первичные ключи и объект должен быть создан, но ключ уже существует в базе данных, возникает &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba1002c38a02557610283e402687e7baac287229" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt;, but sent at the end of a model&amp;rsquo;s &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method and a queryset&amp;rsquo;s &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Как &lt;a href=&quot;#django.db.models.signals.pre_delete&quot;&gt; &lt;code&gt;pre_delete&lt;/code&gt; &lt;/a&gt; , но послали в конце модель &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; метода и QuerySet по &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; метода.</target>
        </trans-unit>
        <trans-unit id="92ea644b70e840a836965a7720340cad8a857b9f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt;, but sent at the end of the &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Как и &lt;a href=&quot;#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;pre_save&lt;/code&gt; &lt;/a&gt; , но отправляется в конце метода &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="346c284a84600b7c02cc33179c217f057c75135f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt;&lt;code&gt;RadioSelect&lt;/code&gt;&lt;/a&gt;, you can loop over the individual checkboxes for the widget&amp;rsquo;s choices. Unlike &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt;&lt;code&gt;RadioSelect&lt;/code&gt;&lt;/a&gt;, the checkboxes won&amp;rsquo;t include the &lt;code&gt;required&lt;/code&gt; HTML attribute if the field is required because browser validation would require all checkboxes to be checked instead of at least one.</source>
          <target state="translated">Как и в &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt; &lt;code&gt;RadioSelect&lt;/code&gt; &lt;/a&gt; , вы можете переключаться между отдельными флажками для выбора виджета. В отличие от &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt; &lt;code&gt;RadioSelect&lt;/code&gt; &lt;/a&gt; , флажки не будут включать &lt;code&gt;required&lt;/code&gt; атрибут HTML, если поле является обязательным, поскольку проверка браузера потребует установки всех флажков вместо хотя бы одного.</target>
        </trans-unit>
        <trans-unit id="3d780d132abddc411dc49eff10a1e51ef8c50836" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpRequest.get_full_path&quot;&gt;&lt;code&gt;get_full_path()&lt;/code&gt;&lt;/a&gt;, but uses &lt;a href=&quot;#django.http.HttpRequest.path_info&quot;&gt;&lt;code&gt;path_info&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#django.http.HttpRequest.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.http.HttpRequest.get_full_path&quot;&gt; &lt;code&gt;get_full_path()&lt;/code&gt; &lt;/a&gt; , но использует &lt;a href=&quot;#django.http.HttpRequest.path_info&quot;&gt; &lt;code&gt;path_info&lt;/code&gt; &lt;/a&gt; вместо &lt;a href=&quot;#django.http.HttpRequest.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b2a9fd84e842e04d0d7921a646d8d793fe3b3df" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;, but uses a 405 status code. The first argument to the constructor is required: a list of permitted methods (e.g. &lt;code&gt;['GET', 'POST']&lt;/code&gt;).</source>
          <target state="translated">Как и &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; , но использует код состояния 405. Требуется первый аргумент конструктора: список разрешенных методов (например, &lt;code&gt;['GET', 'POST']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="705089e55a46741f3540639bd76ad967ec33de2b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpResponse.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;../topics/signing&quot;&gt;cryptographic signing&lt;/a&gt; the cookie before setting it. Use in conjunction with &lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt;&lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt;&lt;/a&gt;. You can use the optional &lt;code&gt;salt&lt;/code&gt; argument for added key strength, but you will need to remember to pass it to the corresponding &lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt;&lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.http.HttpResponse.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt; , но &lt;a href=&quot;../topics/signing&quot;&gt;криптографически подписывает&lt;/a&gt; cookie перед его установкой. Используйте вместе с &lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt; &lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt; &lt;/a&gt; . Вы можете использовать необязательный &lt;code&gt;salt&lt;/code&gt; аргумент для добавления силы ключа, но вам нужно помнить, чтобы передать его соответствующему вызову &lt;a href=&quot;#django.http.HttpRequest.get_signed_cookie&quot;&gt; &lt;code&gt;HttpRequest.get_signed_cookie()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df768b23ac3b315c812da78f870686a8bb4dc2c6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt;, but it returns a permanent redirect (HTTP status code 301) instead of a &amp;ldquo;found&amp;rdquo; redirect (status code 302).</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt; , но он возвращает постоянное перенаправление (код состояния HTTP 301) вместо перенаправления &amp;laquo;найдено&amp;raquo; (код состояния 302).</target>
        </trans-unit>
        <trans-unit id="8563b2bd8ef79b66e64abc13b185806b9bcc5261" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.QueryDict.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;, except it includes all values, as a list, for each member of the dictionary. For example:</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.http.QueryDict.items&quot;&gt; &lt;code&gt;items()&lt;/code&gt; &lt;/a&gt; , за исключением того, что он включает в себя все значения в виде списка для каждого элемента словаря. Например:</target>
        </trans-unit>
        <trans-unit id="8ae206c32c2628442b4554143850ec58ec83ef81" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.http.QueryDict.setdefault&quot;&gt;&lt;code&gt;setdefault()&lt;/code&gt;&lt;/a&gt;, except it takes a list of values instead of a single value.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.http.QueryDict.setdefault&quot;&gt; &lt;code&gt;setdefault()&lt;/code&gt; &lt;/a&gt; , за исключением того, что он принимает список значений вместо одного значения.</target>
        </trans-unit>
        <trans-unit id="955afb7b9c578249edff08f0675f1e6007885295" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#django.template.Engine.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt;, except it takes a list of names and returns the first template that was found.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.template.Engine.get_template&quot;&gt; &lt;code&gt;get_template()&lt;/code&gt; &lt;/a&gt; , за исключением того, что он берет список имен и возвращает первый найденный шаблон.</target>
        </trans-unit>
        <trans-unit id="39373966de87495533da143e122efa7b8991fcf2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../migration-operations#django.db.migrations.operations.AddIndex&quot;&gt;&lt;code&gt;AddIndex&lt;/code&gt;&lt;/a&gt;, but creates an index with the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option. This has a few caveats to be aware of when using this option, see &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY&quot;&gt;the PostgreSQL documentation of building indexes concurrently&lt;/a&gt;.</source>
          <target state="translated">Подобно &lt;a href=&quot;../../migration-operations#django.db.migrations.operations.AddIndex&quot;&gt; &lt;code&gt;AddIndex&lt;/code&gt; &lt;/a&gt; , но создает индекс с параметром &lt;code&gt;CONCURRENTLY&lt;/code&gt; . Это несколько предостережений, о которых следует помнить при использовании этой опции, смотрите &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY&quot;&gt;документацию PostgreSQL по созданию индексов одновременно&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="916b0736c9a97408dd3dd4b442e03c3e1742fbdf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../migration-operations#django.db.migrations.operations.RemoveIndex&quot;&gt;&lt;code&gt;RemoveIndex&lt;/code&gt;&lt;/a&gt;, but removes the index with the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option. This has a few caveats to be aware of when using this option, see &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-dropindex.html&quot;&gt;the PostgreSQL documentation&lt;/a&gt;.</source>
          <target state="translated">Подобно &lt;a href=&quot;../../migration-operations#django.db.migrations.operations.RemoveIndex&quot;&gt; &lt;code&gt;RemoveIndex&lt;/code&gt; &lt;/a&gt; , но удаляет индекс с параметром &lt;code&gt;CONCURRENTLY&lt;/code&gt; . Это несколько предостережений, о которых следует помнить при использовании этой опции, см. &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-dropindex.html&quot;&gt;Документацию PostgreSQL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75f974a90c1064ff9e66af2aa32291764d99ea63" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; can specify &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt;. In the above example, if the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;Entry&lt;/code&gt; had specified &lt;code&gt;related_name='entries'&lt;/code&gt;, then each &lt;code&gt;Author&lt;/code&gt; instance would have an &lt;code&gt;entries&lt;/code&gt; attribute instead of &lt;code&gt;entry_set&lt;/code&gt;.</source>
          <target state="translated">Как &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; может указывать &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt; . В приведенном выше примере, если &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; в &lt;code&gt;Entry&lt;/code&gt; было указано &lt;code&gt;related_name='entries'&lt;/code&gt; , то каждый &lt;code&gt;Author&lt;/code&gt; экземпляр должен иметь &lt;code&gt;entries&lt;/code&gt; атрибута вместо &lt;code&gt;entry_set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="152b27754fb68e577d55e104e8ae19972dad7d59" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt;&lt;code&gt;createcachetable&lt;/code&gt;&lt;/a&gt; won&amp;rsquo;t touch an existing table. It will only create missing tables.</source>
          <target state="translated">Как и &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ref/django-admin#django-admin-createcachetable&quot;&gt; &lt;code&gt;createcachetable&lt;/code&gt; &lt;/a&gt; не затрагивает существующую таблицу. Это только создаст отсутствующие таблицы.</target>
        </trans-unit>
        <trans-unit id="786a89e1a019ca41285aa5568a005c590d86720a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;formsets&quot;&gt;regular formsets&lt;/a&gt;, Django provides a couple of enhanced formset classes to make working with Django models more convenient. Let&amp;rsquo;s reuse the &lt;code&gt;Author&lt;/code&gt; model from above:</source>
          <target state="translated">Как и &lt;a href=&quot;formsets&quot;&gt;обычные формы&lt;/a&gt; , Django предоставляет несколько расширенных классов форм, чтобы сделать работу с моделями Django более удобной. Давайте снова используем модель &lt;code&gt;Author&lt;/code&gt; сверху:</target>
        </trans-unit>
        <trans-unit id="51494adf7a641f08554c36bcc81e8661f20bd02d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt;&lt;code&gt;dict.items()&lt;/code&gt;&lt;/a&gt;, except this uses the same last-value logic as &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and returns an iterator object instead of a view object. For example:</source>
          <target state="translated">Подобно &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.items&quot;&gt; &lt;code&gt;dict.items()&lt;/code&gt; &lt;/a&gt; , за исключением того, что используется та же логика последнего значения, что и &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; и возвращает объект итератора вместо объекта представления. Например:</target>
        </trans-unit>
        <trans-unit id="c55b5527be4c2db918e610d42ba56ec6ab40c74f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&quot;&gt;&lt;code&gt;dict.setdefault()&lt;/code&gt;&lt;/a&gt;, except it uses &lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="translated">Подобно &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&quot;&gt; &lt;code&gt;dict.setdefault()&lt;/code&gt; &lt;/a&gt; , за исключением того, что он использует &lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; внутри.</target>
        </trans-unit>
        <trans-unit id="a7a26680c4baddc5bdcca1a3e548134ab91aa8e0" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.values&quot;&gt;&lt;code&gt;dict.values()&lt;/code&gt;&lt;/a&gt;, except this uses the same last-value logic as &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and returns an iterator instead of a view object. For example:</source>
          <target state="translated">Подобно &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.values&quot;&gt; &lt;code&gt;dict.values()&lt;/code&gt; &lt;/a&gt; , за исключением того, что здесь используется та же логика последнего значения, что и &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; и вместо объекта представления возвращается итератор. Например:</target>
        </trans-unit>
        <trans-unit id="739f7b0ad74db367e30aab10530f59aa3a7cac4f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cache.set()&lt;/code&gt;, &lt;code&gt;set_many()&lt;/code&gt; takes an optional &lt;code&gt;timeout&lt;/code&gt; parameter.</source>
          <target state="translated">Как и &lt;code&gt;cache.set()&lt;/code&gt; , &lt;code&gt;set_many()&lt;/code&gt; принимает необязательный параметр времени &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb1cdfba618a7cae4220d4a0f47c6724622f7e74" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;decorator_from_middleware&lt;/code&gt;, but returns a function that accepts the arguments to be passed to the middleware_class. For example, the &lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt;&lt;code&gt;cache_page()&lt;/code&gt;&lt;/a&gt; decorator is created from the &lt;code&gt;CacheMiddleware&lt;/code&gt; like this:</source>
          <target state="translated">Как и &lt;code&gt;decorator_from_middleware&lt;/code&gt; , но возвращает функцию, которая принимает аргументы для передачи в middleware_class. Например, декоратор &lt;a href=&quot;../topics/cache#django.views.decorators.cache.cache_page&quot;&gt; &lt;code&gt;cache_page()&lt;/code&gt; &lt;/a&gt; создается из &lt;code&gt;CacheMiddleware&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="bdd480f7f0b5f6d4b4fbf2c6f4f3e4f6b1854c5d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;push()&lt;/code&gt;, you can use &lt;code&gt;update()&lt;/code&gt; as a context manager to ensure a matching &lt;code&gt;pop()&lt;/code&gt; is called.</source>
          <target state="translated">Как и &lt;code&gt;push()&lt;/code&gt; , вы можете использовать &lt;code&gt;update()&lt;/code&gt; в качестве менеджера контекста, чтобы обеспечить вызов соответствующей функции &lt;code&gt;pop()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba602b2e6c355200a165d077ac6e9a0594ee71f9" translate="yes" xml:space="preserve">
          <source>Like PostgreSQL itself, Django defaults to the &lt;code&gt;READ COMMITTED&lt;/code&gt;&lt;a href=&quot;https://www.postgresql.org/docs/current/transaction-iso.html&quot;&gt;isolation level&lt;/a&gt;. If you need a higher isolation level such as &lt;code&gt;REPEATABLE READ&lt;/code&gt; or &lt;code&gt;SERIALIZABLE&lt;/code&gt;, set it in the &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; part of your database configuration in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Как и сам PostgreSQL, Django по умолчанию использует &lt;a href=&quot;https://www.postgresql.org/docs/current/transaction-iso.html&quot;&gt;уровень изоляции &lt;/a&gt; &lt;code&gt;READ COMMITTED&lt;/code&gt; . Если вам нужен более высокий уровень изоляции, такой как &lt;code&gt;REPEATABLE READ&lt;/code&gt; или &lt;code&gt;SERIALIZABLE&lt;/code&gt; , установите его в части &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; конфигурации вашей базы данных в &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d34fb63c0b51ff06df9550a1593f51e8117c6b72" translate="yes" xml:space="preserve">
          <source>Like WSGI, ASGI has you supply an &lt;code&gt;application&lt;/code&gt; callable which the application server uses to communicate with your code. It&amp;rsquo;s commonly provided as an object named &lt;code&gt;application&lt;/code&gt; in a Python module accessible to the server.</source>
          <target state="translated">Как и WSGI, ASGI предлагает вам вызвать &lt;code&gt;application&lt;/code&gt; которое сервер приложений использует для связи с вашим кодом. Обычно он предоставляется как объект с именем &lt;code&gt;application&lt;/code&gt; в модуле Python, доступном для сервера.</target>
        </trans-unit>
        <trans-unit id="8b7753e1b85c02959312c8643ca4aadd2afe10bc" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt;&lt;code&gt;PositiveIntegerField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) point. Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;32767&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt; &lt;code&gt;PositiveIntegerField&lt;/code&gt; &lt;/a&gt; , но допускает значения только в определенной (зависящей от базы данных) точке. Значения от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;32767&lt;/code&gt; безопасны во всех базах данных, поддерживаемых Django.</target>
        </trans-unit>
        <trans-unit id="3e2dae3f888c279defb88d23e93842df027bb502" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt;&lt;code&gt;PositiveIntegerField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) point. Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9223372036854775807&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.db.models.PositiveIntegerField&quot;&gt; &lt;code&gt;PositiveIntegerField&lt;/code&gt; &lt;/a&gt; , но допускает значения только в определенной (зависящей от базы данных) точке. Значения от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;9223372036854775807&lt;/code&gt; безопасны во всех базах данных, поддерживаемых Django.</target>
        </trans-unit>
        <trans-unit id="00b7111396930922c74543cf53e7858a5613c560" translate="yes" xml:space="preserve">
          <source>Like a CharField, you can specify &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; (read the note about database portability and &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; in that section, too). If &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; is not specified, Django will use a default length of 50.</source>
          <target state="translated">Как и CharField, вы можете указать &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt; (см. Также примечание о переносимости базы данных и &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt; в этом разделе). Если &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt; не указан, Django будет использовать длину по умолчанию 50.</target>
        </trans-unit>
        <trans-unit id="5f60adb6d58f4db10d99251a6c1029ea1aeda81c" translate="yes" xml:space="preserve">
          <source>Like a view, the arguments in the URL are passed to the &lt;code&gt;get_object()&lt;/code&gt; method along with the request object.</source>
          <target state="translated">Подобно представлению, аргументы в URL передаются &lt;code&gt;get_object()&lt;/code&gt; вместе с объектом запроса.</target>
        </trans-unit>
        <trans-unit id="3540955efa9e226e2af7cd4207b9c9d694373a03" translate="yes" xml:space="preserve">
          <source>Like all &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; subclasses, &lt;a href=&quot;#django.db.models.URLField&quot;&gt;&lt;code&gt;URLField&lt;/code&gt;&lt;/a&gt; takes the optional &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; argument. If you don&amp;rsquo;t specify &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt;, a default of 200 is used.</source>
          <target state="translated">Как и все подклассы &lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.db.models.URLField&quot;&gt; &lt;code&gt;URLField&lt;/code&gt; &lt;/a&gt; принимает необязательный аргумент &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt; . Если вы не укажете &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt; , используется значение по умолчанию 200.</target>
        </trans-unit>
        <trans-unit id="5fcac6c11b3e3fe6905fac69819c8a77da3c7226" translate="yes" xml:space="preserve">
          <source>Like all custom template tags, you&amp;rsquo;ll need to &lt;a href=&quot;../templates/language#loading-custom-template-libraries&quot;&gt;load its custom tag library&lt;/a&gt; before you can use it. After loading the library, you can retrieve all current flatpages via the &lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt;&lt;code&gt;get_flatpages&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">Как и все пользовательские теги шаблонов, вам необходимо &lt;a href=&quot;../templates/language#loading-custom-template-libraries&quot;&gt;загрузить библиотеку пользовательских тегов,&lt;/a&gt; прежде чем вы сможете ее использовать. После загрузки библиотеки вы можете получить все текущие страницы через тег &lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt; &lt;code&gt;get_flatpages&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9951a67920449e4d4b835b90125cd72c36ccfbf5" translate="yes" xml:space="preserve">
          <source>Like an &lt;a href=&quot;#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) limit. Values from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;32767&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt; , но допускает только значения с определенным (зависящим от базы данных) пределом. Значения от &lt;code&gt;1&lt;/code&gt; до &lt;code&gt;32767&lt;/code&gt; безопасны во всех базах данных, поддерживаемых Django.</target>
        </trans-unit>
        <trans-unit id="0bb140ee24bb5ffd0e10ed6b33a66a505a5c3dd7" translate="yes" xml:space="preserve">
          <source>Like an &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;, but must be either positive or zero (&lt;code&gt;0&lt;/code&gt;). Values from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;2147483647&lt;/code&gt; are safe in all databases supported by Django. The value &lt;code&gt;0&lt;/code&gt; is accepted for backward compatibility reasons.</source>
          <target state="translated">Как и &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; , но должен быть либо положительным, либо нулевым ( &lt;code&gt;0&lt;/code&gt; ). Значения от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;2147483647&lt;/code&gt; безопасны во всех базах данных, поддерживаемых Django. Значение &lt;code&gt;0&lt;/code&gt; принимается по причинам обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="95ba58840db2ee448b0fa54dabeda7c3b5fb30f9" translate="yes" xml:space="preserve">
          <source>Like an &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;, but only allows values under a certain (database-dependent) point. Values from &lt;code&gt;-32768&lt;/code&gt; to &lt;code&gt;32767&lt;/code&gt; are safe in all databases supported by Django.</source>
          <target state="translated">Подобно &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; , но допускает значения только в определенной (зависящей от базы данных) точке. Значения от &lt;code&gt;-32768&lt;/code&gt; до &lt;code&gt;32767&lt;/code&gt; безопасны во всех базах данных, поддерживаемых Django.</target>
        </trans-unit>
        <trans-unit id="d83aed216be35e66a6d332c877c5d35102c04c61" translate="yes" xml:space="preserve">
          <source>Like loggers, handlers also have a log level. If the log level of a log record doesn&amp;rsquo;t meet or exceed the level of the handler, the handler will ignore the message.</source>
          <target state="translated">Как и регистраторы, обработчики также имеют уровень журнала. Если уровень журнала записи журнала не соответствует или превышает уровень обработчика, обработчик проигнорирует сообщение.</target>
        </trans-unit>
        <trans-unit id="b7d833a6751175de456bd982f108a2cc4741389d" translate="yes" xml:space="preserve">
          <source>Like other Django contrib applications, you will &lt;em&gt;only&lt;/em&gt; need to add &lt;a href=&quot;../index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; in your settings. This is so that the &lt;code&gt;gis&lt;/code&gt; templates can be located &amp;ndash; if not done, then features such as the geographic admin or KML sitemaps will not function properly.</source>
          <target state="translated">Как и в других приложениях для Django, вам нужно &lt;em&gt;всего лишь&lt;/em&gt; добавить &lt;a href=&quot;../index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; в ваших настройках. Это делается для того, чтобы можно было найти шаблоны &lt;code&gt;gis&lt;/code&gt; - если это не сделано, то такие функции, как географический администратор или карты сайта KML, не будут работать должным образом.</target>
        </trans-unit>
        <trans-unit id="9c665315f6d801d5b6f09a247bd1d42caef56cf5" translate="yes" xml:space="preserve">
          <source>Like other methods, the &lt;code&gt;timeout&lt;/code&gt; argument is optional and defaults to the &lt;code&gt;TIMEOUT&lt;/code&gt; option of the appropriate backend in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Как и другие методы, аргумент &lt;code&gt;timeout&lt;/code&gt; является необязательным и по умолчанию имеет опцию &lt;code&gt;TIMEOUT&lt;/code&gt; соответствующего бэкэнда в настройке &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3aed27718d957f62e17035d413aabc537e0029fc" translate="yes" xml:space="preserve">
          <source>Like pre_init, but this one is sent when the &lt;code&gt;__init__()&lt;/code&gt; method finishes.</source>
          <target state="translated">Как и pre_init, но этот отправляется, когда завершается метод &lt;code&gt;__init__()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f1c6004ebf3711f7e8bdedde30c5087916707a3" translate="yes" xml:space="preserve">
          <source>Like regular Python files, you can read the file line-by-line by iterating over the uploaded file:</source>
          <target state="translated">Как и обычные файлы Python,вы можете читать файл построчно,итерируя по загруженному файлу:</target>
        </trans-unit>
        <trans-unit id="eef7d6244014f8627193d8008d82d067746059ec" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; and &lt;code&gt;formfield_for_manytomany&lt;/code&gt; methods, the &lt;code&gt;formfield_for_choice_field&lt;/code&gt; method can be overridden to change the default formfield for a field that has declared choices. For example, if the choices available to a superuser should be different than those available to regular staff, you could proceed as follows:</source>
          <target state="translated">Как и методы &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; и &lt;code&gt;formfield_for_manytomany&lt;/code&gt; , метод &lt;code&gt;formfield_for_choice_field&lt;/code&gt; может быть переопределен для изменения поля формы по умолчанию для поля, в котором объявлены варианты выбора. Например, если варианты, доступные суперпользователю, должны отличаться от тех, которые доступны обычному персоналу, вы можете сделать следующее:</target>
        </trans-unit>
        <trans-unit id="4b0e54aa6002f6648959e5fde59d83b613a588b1" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; method, the &lt;code&gt;formfield_for_manytomany&lt;/code&gt; method can be overridden to change the default formfield for a many to many field. For example, if an owner can own multiple cars and cars can belong to multiple owners &amp;ndash; a many to many relationship &amp;ndash; you could filter the &lt;code&gt;Car&lt;/code&gt; foreign key field to only display the cars owned by the &lt;code&gt;User&lt;/code&gt;:</source>
          <target state="translated">Как и метод &lt;code&gt;formfield_for_foreignkey&lt;/code&gt; , метод &lt;code&gt;formfield_for_manytomany&lt;/code&gt; можно переопределить, чтобы изменить поле формы по умолчанию для поля &amp;laquo;многие ко многим&amp;raquo;. Например, если владелец может владеть несколькими автомобилями, а автомобили могут принадлежать нескольким владельцам (отношение многих ко многим), вы можете отфильтровать поле внешнего ключа &lt;code&gt;Car&lt;/code&gt; чтобы отобразить только автомобили, принадлежащие &lt;code&gt;User&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="31f10fbef42ead92801c9234e033fbaaf39c7b22" translate="yes" xml:space="preserve">
          <source>Like the model field&amp;rsquo;s &lt;a href=&quot;../models/fields#django.db.models.Field.help_text&quot;&gt;&lt;code&gt;help_text&lt;/code&gt;&lt;/a&gt;, this value isn&amp;rsquo;t HTML-escaped in automatically-generated forms.</source>
          <target state="translated">Подобно &lt;a href=&quot;../models/fields#django.db.models.Field.help_text&quot;&gt; &lt;code&gt;help_text&lt;/code&gt; &lt;/a&gt; поля модели , это значение не экранируется в HTML в автоматически сгенерированных формах.</target>
        </trans-unit>
        <trans-unit id="2ee07a6c8901e20df89791f61993d7c04c839518" translate="yes" xml:space="preserve">
          <source>Like we said above, the default applications are included for the common case, but not everybody needs them. If you don&amp;rsquo;t need any or all of them, feel free to comment-out or delete the appropriate line(s) from &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; before running &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command will only run migrations for apps in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Как мы уже говорили выше, стандартные приложения включены для общего случая, но они нужны не всем. Если вам не нужны какие-либо или все из них, не стесняйтесь комментировать или удалять соответствующие строки из &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; перед запуском &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; . Команда &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; будет запускать миграции только для приложений в &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66be0fca21e376129e6c827671f94aa60b75b0e6" translate="yes" xml:space="preserve">
          <source>Likewise &lt;code&gt;django.template.backends.django.Template&lt;/code&gt; is a thin wrapper adapting &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt;&lt;code&gt;django.template.Template&lt;/code&gt;&lt;/a&gt; to the common template API.</source>
          <target state="translated">Аналогично, &lt;code&gt;django.template.backends.django.Template&lt;/code&gt; - это тонкая оболочка, адаптирующая &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt; &lt;code&gt;django.template.Template&lt;/code&gt; &lt;/a&gt; к общему шаблонному API.</target>
        </trans-unit>
        <trans-unit id="bd395412545993aaaed91e9a0591200ef0116d19" translate="yes" xml:space="preserve">
          <source>Likewise, &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt;s does not appear in &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Аналогично, &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; s не появляется в &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="65651098030cec17f9add3564fabd28b9a8d889b" translate="yes" xml:space="preserve">
          <source>Likewise, Django provides the &lt;a href=&quot;#django.test.modify_settings&quot;&gt;&lt;code&gt;modify_settings()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">Аналогично, Django предоставляет декоратор &lt;a href=&quot;#django.test.modify_settings&quot;&gt; &lt;code&gt;modify_settings()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="a0475d548a6e1cbd1322fc0c9137a9116d5fd248" translate="yes" xml:space="preserve">
          <source>Limitations of multiple databases</source>
          <target state="translated">Ограничения нескольких баз данных</target>
        </trans-unit>
        <trans-unit id="81293e5c309d9dfcca7d5d8a02e465126af1192c" translate="yes" xml:space="preserve">
          <source>Limitations of the provided locale formats</source>
          <target state="translated">Ограничения предоставляемых локальных форматов</target>
        </trans-unit>
        <trans-unit id="8189faab6b029cc653b33f4c4750aed9ad4c8f5a" translate="yes" xml:space="preserve">
          <source>Limitations with string literals</source>
          <target state="translated">Ограничения со строковыми литералами</target>
        </trans-unit>
        <trans-unit id="7bcda513dc4ecc2e4b423a51154674ffc93ff9ff" translate="yes" xml:space="preserve">
          <source>Limiting &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">Ограничение &lt;code&gt;QuerySet&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="2ba12ef865c53db8307ed40e2579ac7177efa133" translate="yes" xml:space="preserve">
          <source>Limiting a subquery to a single column</source>
          <target state="translated">Ограничение подзапроса одним столбцом</target>
        </trans-unit>
        <trans-unit id="971ffbdea2890da7948e9724ae7ef3cf3d664072" translate="yes" xml:space="preserve">
          <source>Limiting access to logged-in users</source>
          <target state="translated">Ограничение доступа для зарегистрированных пользователей</target>
        </trans-unit>
        <trans-unit id="54b02334497290608d1bafc2deca7fc84fc2dfc2" translate="yes" xml:space="preserve">
          <source>Limiting access to logged-in users that pass a test</source>
          <target state="translated">Ограничение доступа к входящим в систему пользователям,прошедшим тест.</target>
        </trans-unit>
        <trans-unit id="bc8f42c384b84979e56038227caf8b777339004f" translate="yes" xml:space="preserve">
          <source>Limiting flatpages by base URL</source>
          <target state="translated">Ограничение плоских страниц базовым URL-адресом</target>
        </trans-unit>
        <trans-unit id="ace73d3c8d253f1855ef095c01717043cd29aa5f" translate="yes" xml:space="preserve">
          <source>Limiting the maximum number of forms</source>
          <target state="translated">Ограничение максимального количества форм</target>
        </trans-unit>
        <trans-unit id="756e3264bedaf6f3365711aa7e045d72b4f68c7a" translate="yes" xml:space="preserve">
          <source>Limiting the number of editable objects</source>
          <target state="translated">Ограничение количества редактируемых объектов</target>
        </trans-unit>
        <trans-unit id="da88c2fe4acaa5b5968c3b02bdc16c00c7b795f2" translate="yes" xml:space="preserve">
          <source>Limiting the subquery to a single row</source>
          <target state="translated">Ограничение подзапроса одной строкой</target>
        </trans-unit>
        <trans-unit id="041db2b4ee7faeb26164b54ec59eaa80dec142d2" translate="yes" xml:space="preserve">
          <source>Limits valid inputs to the specified protocol. Accepted values are &lt;code&gt;'both'&lt;/code&gt; (default), &lt;code&gt;'IPv4'&lt;/code&gt; or &lt;code&gt;'IPv6'&lt;/code&gt;. Matching is case insensitive.</source>
          <target state="translated">Ограничивает допустимые входы указанным протоколом. Допустимые значения: &lt;code&gt;'both'&lt;/code&gt; (по умолчанию), &lt;code&gt;'IPv4'&lt;/code&gt; или &lt;code&gt;'IPv6'&lt;/code&gt; . Соответствие регистронезависимо.</target>
        </trans-unit>
        <trans-unit id="484b44a0117656cdc1e07d33a88d93a8d2f24ea6" translate="yes" xml:space="preserve">
          <source>Limits valid inputs to the specified protocol. Accepted values are &lt;code&gt;both&lt;/code&gt; (default), &lt;code&gt;IPv4&lt;/code&gt; or &lt;code&gt;IPv6&lt;/code&gt;. Matching is case insensitive.</source>
          <target state="translated">Ограничивает допустимые входы указанным протоколом. Допустимые значения &lt;code&gt;both&lt;/code&gt; ( по умолчанию), &lt;code&gt;IPv4&lt;/code&gt; или &lt;code&gt;IPv6&lt;/code&gt; . Соответствие регистронезависимо.</target>
        </trans-unit>
        <trans-unit id="4950b61e87b9227686774b179639eaf32577092a" translate="yes" xml:space="preserve">
          <source>Lines are split using &lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;universal newlines&lt;/strong&gt;&lt;/a&gt;. The following are recognized as ending a line: the Unix end-of-line convention &lt;code&gt;'\n'&lt;/code&gt;, the Windows convention &lt;code&gt;'\r\n'&lt;/code&gt;, and the old Macintosh convention &lt;code&gt;'\r'&lt;/code&gt;.</source>
          <target state="translated">Строки разделяются &lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;универсальными символами новой строки&lt;/strong&gt;&lt;/a&gt; . Следующее считается завершением строки: соглашение Unix о конце строки &lt;code&gt;'\n'&lt;/code&gt; , соглашение Windows &lt;code&gt;'\r\n'&lt;/code&gt; и старое соглашение Macintosh &lt;code&gt;'\r'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="999cfb6c0645f8beaa03ab5c3c2acaad55655c97" translate="yes" xml:space="preserve">
          <source>Lines are split using &lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot;&gt;universal newlines&lt;/a&gt;. The following are recognized as ending a line: the Unix end-of-line convention &lt;code&gt;'\n'&lt;/code&gt;, the Windows convention &lt;code&gt;'\r\n'&lt;/code&gt;, and the old Macintosh convention &lt;code&gt;'\r'&lt;/code&gt;.</source>
          <target state="translated">Строки разбиваются с использованием &lt;a href=&quot;https://www.python.org/dev/peps/pep-0278&quot;&gt;универсальных переносов&lt;/a&gt; . Следующие элементы распознаются как завершающие строку: соглашение &lt;code&gt;'\n'&lt;/code&gt; конце строки Unix '\ n' , соглашение Windows &lt;code&gt;'\r\n'&lt;/code&gt; и старое соглашение Macintosh &lt;code&gt;'\r'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0517071aa376e797705058bbad4b658954b9930" translate="yes" xml:space="preserve">
          <source>Link</source>
          <target state="translated">Link</target>
        </trans-unit>
        <trans-unit id="157c974c5568be5651b5bfe24c42d2205c9b6e69" translate="yes" xml:space="preserve">
          <source>Link (Benoit)</source>
          <target state="translated">Связь (Бенуа)</target>
        </trans-unit>
        <trans-unit id="64590bd60ee31dd14805fcf870b334ba2446be7e" translate="yes" xml:space="preserve">
          <source>Link (Sears)</source>
          <target state="translated">Связь (Sears)</target>
        </trans-unit>
        <trans-unit id="7cb5f491ca042b503781828280e205f3f1b3e730" translate="yes" xml:space="preserve">
          <source>Link to the URL of the OpenLayers JavaScript. Defaults to &lt;code&gt;'https://cdnjs.cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js'&lt;/code&gt;.</source>
          <target state="translated">Ссылка на URL OpenLayers JavaScript. По умолчанию используется &lt;code&gt;'https://cdnjs.cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc86c03eac3b683df07db61068268361cd20abb1" translate="yes" xml:space="preserve">
          <source>Links can have trailing punctuation (periods, commas, close-parens) and leading punctuation (opening parens), and &lt;code&gt;urlize&lt;/code&gt; will still do the right thing.</source>
          <target state="translated">Ссылки могут иметь конечную пунктуацию (точки, запятые, закрывающие скобки) и начальную пунктуацию (вводные скобки), а &lt;code&gt;urlize&lt;/code&gt; все равно будет работать правильно.</target>
        </trans-unit>
        <trans-unit id="e401e8956761640d7577a37f57e96c4dd3ae2c45" translate="yes" xml:space="preserve">
          <source>Links generated by &lt;code&gt;urlize&lt;/code&gt; have a &lt;code&gt;rel=&quot;nofollow&quot;&lt;/code&gt; attribute added to them.</source>
          <target state="translated">К &lt;code&gt;urlize&lt;/code&gt; , сгенерированным urlize , добавлен атрибут &lt;code&gt;rel=&quot;nofollow&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d28ace15581d25a0bc2e3781306393967a803c6" translate="yes" xml:space="preserve">
          <source>List Views</source>
          <target state="translated">Просмотр списка</target>
        </trans-unit>
        <trans-unit id="81c12cbc34f26f6d72020d3250e5638a719f3b2a" translate="yes" xml:space="preserve">
          <source>List filter&amp;rsquo;s typically appear only if the filter has more than one choice. A filter&amp;rsquo;s &lt;code&gt;has_output()&lt;/code&gt; method controls whether or not it appears.</source>
          <target state="translated">Фильтры списков обычно появляются, только если у фильтра более одного выбора. Метод &lt;code&gt;has_output()&lt;/code&gt; фильтра определяет, будет ли он отображаться.</target>
        </trans-unit>
        <trans-unit id="1ff8b40e6d20a6ad55bbd98426ac2eef042a84ff" translate="yes" xml:space="preserve">
          <source>List of all bands of the source, as &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand&quot;&gt;&lt;code&gt;GDALBand&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">Список всех полос источника, как экземпляры &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand&quot;&gt; &lt;code&gt;GDALBand&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d8ec93e18fcf7be286a5711b8624e9d5492b5aa" translate="yes" xml:space="preserve">
          <source>List of compiled regular expression objects describing URLs that should be ignored when reporting HTTP 404 errors via email (see &lt;a href=&quot;../howto/error-reporting&quot;&gt;Error reporting&lt;/a&gt;). Regular expressions are matched against &lt;a href=&quot;request-response#django.http.HttpRequest.get_full_path&quot;&gt;&lt;code&gt;request's full paths&lt;/code&gt;&lt;/a&gt; (including query string, if any). Use this if your site does not provide a commonly requested file such as &lt;code&gt;favicon.ico&lt;/code&gt; or &lt;code&gt;robots.txt&lt;/code&gt;.</source>
          <target state="translated">Список скомпилированных объектов регулярных выражений, описывающих URL-адреса, которые следует игнорировать при сообщении об ошибках HTTP 404 по электронной почте (см. &lt;a href=&quot;../howto/error-reporting&quot;&gt;Отчет об ошибках&lt;/a&gt; ). Регулярные выражения сопоставляются с &lt;a href=&quot;request-response#django.http.HttpRequest.get_full_path&quot;&gt; &lt;code&gt;request's full paths&lt;/code&gt; &lt;/a&gt; запроса (включая строку запроса, если есть). Используйте это, если ваш сайт не предоставляет часто запрашиваемый файл, такой как &lt;code&gt;favicon.ico&lt;/code&gt; или &lt;code&gt;robots.txt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71648c8c3058a09ebc7c06c879fc235d24abcec1" translate="yes" xml:space="preserve">
          <source>List of compiled regular expression objects representing User-Agent strings that are not allowed to visit any page, systemwide. Use this for bots/crawlers. This is only used if &lt;code&gt;CommonMiddleware&lt;/code&gt; is installed (see &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt;).</source>
          <target state="translated">Список скомпилированных объектов регулярных выражений, представляющих строки User-Agent, которым не разрешено посещать какие-либо страницы в масштабе всей системы. Используйте это для ботов / сканеров. Это используется только если установлено &lt;code&gt;CommonMiddleware&lt;/code&gt; (см. &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4144455cc383697baac646a1657f81571b944123" translate="yes" xml:space="preserve">
          <source>List of database features that the current connection should have so that the model is considered during the migration phase. For example, if you set this list to &lt;code&gt;['gis_enabled']&lt;/code&gt;, the model will only be synchronized on GIS-enabled databases. It&amp;rsquo;s also useful to skip some models when testing with several database backends. Avoid relations between models that may or may not be created as the ORM doesn&amp;rsquo;t handle this.</source>
          <target state="translated">Список функций базы данных, которые должно иметь текущее соединение, чтобы модель рассматривалась на этапе миграции. Например, если вы установите для этого списка значение &lt;code&gt;['gis_enabled']&lt;/code&gt; , модель будет синхронизироваться только в базах данных с поддержкой ГИС. Также полезно пропустить некоторые модели при тестировании с несколькими базами данных. Избегайте отношений между моделями, которые могут или не могут быть созданы, так как ORM не справляется с этим.</target>
        </trans-unit>
        <trans-unit id="5a9854912df2ed5719acad92971c25d37b901483" translate="yes" xml:space="preserve">
          <source>List of directories searched for fixture files, in addition to the &lt;code&gt;fixtures&lt;/code&gt; directory of each application, in search order.</source>
          <target state="translated">Список каталогов, в которых ищутся файлы фикстур, в дополнение к каталогу &lt;code&gt;fixtures&lt;/code&gt; каждого приложения, в порядке поиска.</target>
        </trans-unit>
        <trans-unit id="ebb3d7aca57a0d0b26fc7bb3082c4d20c9f33257" translate="yes" xml:space="preserve">
          <source>List-index lookup. Example: &lt;code&gt;foo[bar]&lt;/code&gt;</source>
          <target state="translated">Поиск по индексу списка. Пример: &lt;code&gt;foo[bar]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="005f5ea75301f8060217eadfaf3d96dea8ba5cbd" translate="yes" xml:space="preserve">
          <source>Listening to signals</source>
          <target state="translated">Прослушивание сигналов</target>
        </trans-unit>
        <trans-unit id="385b28bd6da9bf2d5510b146c5f31381bab45cc6" translate="yes" xml:space="preserve">
          <source>Lists all available tags.</source>
          <target state="translated">Перечисляет все доступные теги.</target>
        </trans-unit>
        <trans-unit id="cc017a8f262082983efe363b211f3361bd8ec506" translate="yes" xml:space="preserve">
          <source>Lists all of the apps Django knows about, the migrations available for each app, and whether or not each migration is applied (marked by an &lt;code&gt;[X]&lt;/code&gt; next to the migration name). For a &lt;code&gt;--verbosity&lt;/code&gt; of 2 and above, the applied datetimes are also shown.</source>
          <target state="translated">Перечисляет все приложения, о которых Django знает, миграции, доступные для каждого приложения, и то, применяется ли каждая миграция (отмечена &lt;code&gt;[X]&lt;/code&gt; рядом с именем миграции). Для &lt;code&gt;--verbosity&lt;/code&gt; от 2 и выше также показаны примененные даты и время.</target>
        </trans-unit>
        <trans-unit id="39d23e0d858c2bba4fcae0826399057a4e302793" translate="yes" xml:space="preserve">
          <source>Lists of objects follow roughly the same pattern: we need a (possibly paginated) list of objects, typically a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, and then we need to make a &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; with a suitable template using that list of objects.</source>
          <target state="translated">Списки объектов следуют примерно одному и тому же шаблону: нам нужен (возможно разбитый на страницы) список объектов, обычно это &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; , а затем нам нужно создать &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; с подходящим шаблоном, используя этот список объектов.</target>
        </trans-unit>
        <trans-unit id="bba7499a41a5ad998706215911b138ebb07a56d1" translate="yes" xml:space="preserve">
          <source>Lists the contents of the specified path, returning a 2-tuple of lists; the first item being directories, the second item being files. For storage systems that aren&amp;rsquo;t able to provide such a listing, this will raise a &lt;code&gt;NotImplementedError&lt;/code&gt; instead.</source>
          <target state="translated">Выводит список содержимого указанного пути, возвращая два набора списков; первый элемент - каталоги, второй элемент - файлы. Для систем хранения, которые не могут предоставить такой список, вместо этого возникает &lt;code&gt;NotImplementedError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2fb109cdc5372d5cde6e1d6d294486607ffa713" translate="yes" xml:space="preserve">
          <source>Little Endian (e.g., compatible with x86 systems)</source>
          <target state="translated">Маленький Эндиан (например,совместимый с системами x86)</target>
        </trans-unit>
        <trans-unit id="1266aa8b6dce351b2dce9a52e20e361f295ffe02" translate="yes" xml:space="preserve">
          <source>Load settings from &lt;code&gt;global_settings.py&lt;/code&gt;.</source>
          <target state="translated">Загрузите настройки из &lt;code&gt;global_settings.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4fc7ccaa44c3bece06261e229b60b0ab1fe883" translate="yes" xml:space="preserve">
          <source>Load settings from the specified settings file, overriding the global settings as necessary.</source>
          <target state="translated">Загружайте настройки из указанного файла настроек,при необходимости переопределяя глобальные настройки.</target>
        </trans-unit>
        <trans-unit id="4c676aefee9fb2f37fc993a5bfdd721edc6feb06" translate="yes" xml:space="preserve">
          <source>Load the &amp;ldquo;Add question&amp;rdquo; page to see how that looks:</source>
          <target state="translated">Загрузите страницу &amp;laquo;Добавить вопрос&amp;raquo;, чтобы увидеть, как это выглядит:</target>
        </trans-unit>
        <trans-unit id="c638de2d7ce3a5989cc00da481232df477e68622" translate="yes" xml:space="preserve">
          <source>Load the page by pointing your browser at &amp;ldquo;/polls/&amp;rdquo;, and you should see a bulleted-list containing the &amp;ldquo;What&amp;rsquo;s up&amp;rdquo; question from &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;. The link points to the question&amp;rsquo;s detail page.</source>
          <target state="translated">Загрузите страницу, указав в браузере &amp;laquo;/ polls /&amp;raquo;, и вы увидите маркированный список, содержащий вопрос &amp;laquo;Что случилось&amp;raquo; из &lt;a href=&quot;tutorial02&quot;&gt;урока 2&lt;/a&gt; . Ссылка указывает на страницу с подробностями вопроса.</target>
        </trans-unit>
        <trans-unit id="bfd5d347be46f19d5af74555db1435a5932c014a" translate="yes" xml:space="preserve">
          <source>Loader methods</source>
          <target state="translated">Методы загрузки</target>
        </trans-unit>
        <trans-unit id="a1aae8262dfa8b38b15f329fe9d720fa2af5ce60" translate="yes" xml:space="preserve">
          <source>Loader types</source>
          <target state="translated">Виды погрузчиков</target>
        </trans-unit>
        <trans-unit id="4f514b04ed6b877534da140af8e12cab5016f713" translate="yes" xml:space="preserve">
          <source>Loaders</source>
          <target state="translated">Loaders</target>
        </trans-unit>
        <trans-unit id="5396847021992af28690eea2559e62fb26911d30" translate="yes" xml:space="preserve">
          <source>Loading a template</source>
          <target state="translated">Загрузка шаблона</target>
        </trans-unit>
        <trans-unit id="923064241bee3da1b374c1344aae36c3e741a39f" translate="yes" xml:space="preserve">
          <source>Loading fixtures from &lt;code&gt;stdin&lt;/code&gt;</source>
          <target state="translated">Загрузка светильников от &lt;code&gt;stdin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04d6db619863f3d513c0c93969b27a39dcbe2838" translate="yes" xml:space="preserve">
          <source>Loading from &lt;code&gt;stdin&lt;/code&gt; is useful with standard input and output redirections. For example:</source>
          <target state="translated">Загрузка из &lt;code&gt;stdin&lt;/code&gt; полезна при стандартных перенаправлениях ввода и вывода. Например:</target>
        </trans-unit>
        <trans-unit id="8fb9f7eb8cbdc0a3f102e2624e3f8c578252dcc2" translate="yes" xml:space="preserve">
          <source>Loading templates</source>
          <target state="translated">Загрузка шаблонов</target>
        </trans-unit>
        <trans-unit id="aa3b47e04fbcdf7a0c349a1f65b42792f0bfc04b" translate="yes" xml:space="preserve">
          <source>Loading the settings.</source>
          <target state="translated">Загрузка настроек.</target>
        </trans-unit>
        <trans-unit id="b208b1eada8a869e959c32e9a4f048b2261a0ef9" translate="yes" xml:space="preserve">
          <source>Loads a custom template tag set.</source>
          <target state="translated">Загружает пользовательский набор тегов шаблонов.</target>
        </trans-unit>
        <trans-unit id="61d26d6567c1e53323e6feb2451badc41e00b872" translate="yes" xml:space="preserve">
          <source>Loads a template and renders it with the current context. This is a way of &amp;ldquo;including&amp;rdquo; other templates within a template.</source>
          <target state="translated">Загружает шаблон и отображает его в текущем контексте. Это способ &amp;laquo;включения&amp;raquo; других шаблонов в шаблон.</target>
        </trans-unit>
        <trans-unit id="49622805f34b2cbfb5fecab2184d2c2565f31b9e" translate="yes" xml:space="preserve">
          <source>Loads a template with the given name, compiles it and returns a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Загружает шаблон с указанным именем, компилирует его и возвращает объект &lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d87684e495f6d2a5443bdeacec9acb9e892cab6" translate="yes" xml:space="preserve">
          <source>Loads templates from Django apps on the filesystem. For each app in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, the loader looks for a &lt;code&gt;templates&lt;/code&gt; subdirectory. If the directory exists, Django looks for templates in there.</source>
          <target state="translated">Загружает шаблоны из приложений Django в файловую систему. Для каждого приложения в &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; загрузчик ищет подкаталог &lt;code&gt;templates&lt;/code&gt; . Если каталог существует, Django ищет там шаблоны.</target>
        </trans-unit>
        <trans-unit id="9c77b46a82221a37ce360a54ab22eae4cb8567d7" translate="yes" xml:space="preserve">
          <source>Loads templates from a Python dictionary. This is useful for testing.</source>
          <target state="translated">Загружает шаблоны из словаря Python.Полезно для тестирования.</target>
        </trans-unit>
        <trans-unit id="5ddb5a6aa66f708e939717a50c081f9b1687855e" translate="yes" xml:space="preserve">
          <source>Loads templates from a given source, such as the filesystem or a database.</source>
          <target state="translated">Загружает шаблоны из заданного источника,например,из файловой системы или базы данных.</target>
        </trans-unit>
        <trans-unit id="830f927cc5a7a2d6808cd9d4fd807494ffe8af90" translate="yes" xml:space="preserve">
          <source>Loads templates from the filesystem, according to &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Загружает шаблоны из файловой системы, в соответствии с &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e63c9f12a633eb8c9f0b4ac3283d021d46f12d08" translate="yes" xml:space="preserve">
          <source>Local-memory caching</source>
          <target state="translated">Кэширование локальной памяти</target>
        </trans-unit>
        <trans-unit id="46361934de5303c4bb40033efcb4f3ac07fa41a4" translate="yes" xml:space="preserve">
          <source>Locale aware input in forms</source>
          <target state="translated">Местный ввод в формах с уведомлением о местонахождении</target>
        </trans-unit>
        <trans-unit id="bba391c6c02e5d2f28c6ce4333f7c807d2ee62f0" translate="yes" xml:space="preserve">
          <source>Locale middleware</source>
          <target state="translated">Местное промежуточное программное обеспечение</target>
        </trans-unit>
        <trans-unit id="a17bcca1e911b8aa363c850569b580baafa07f8e" translate="yes" xml:space="preserve">
          <source>Localflavor</source>
          <target state="translated">Localflavor</target>
        </trans-unit>
        <trans-unit id="8760fb7a725faf05acb20618178c43773af945a1" translate="yes" xml:space="preserve">
          <source>Localization: how to create language files</source>
          <target state="translated">Локализация:как создавать языковые файлы</target>
        </trans-unit>
        <trans-unit id="68d96c3fa930173a29f42dabd119f2ec989ef3cb" translate="yes" xml:space="preserve">
          <source>Localized names of languages</source>
          <target state="translated">Локализованные названия языков</target>
        </trans-unit>
        <trans-unit id="5bab46afe953180e60cc6486cb0020ee91d03396" translate="yes" xml:space="preserve">
          <source>Lock parents models in &lt;code&gt;select_for_update(of=(...))&lt;/code&gt;</source>
          <target state="translated">Блокировка родительских моделей в &lt;code&gt;select_for_update(of=(...))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="420dfa7139dd6d5b31fdef28a0943aa84fccd6c5" translate="yes" xml:space="preserve">
          <source>Log messages related to the handling of requests received by the server invoked by the &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command. HTTP 5XX responses are logged as &lt;code&gt;ERROR&lt;/code&gt; messages, 4XX responses are logged as &lt;code&gt;WARNING&lt;/code&gt; messages, and everything else is logged as &lt;code&gt;INFO&lt;/code&gt;.</source>
          <target state="translated">Журнал сообщений, связанных с обработкой запросов, полученных сервером, вызванных командой &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt; . Ответы HTTP 5XX регистрируются как сообщения &lt;code&gt;ERROR&lt;/code&gt; ошибках, ответы 4XX регистрируются как сообщения &lt;code&gt;WARNING&lt;/code&gt; , а все остальное регистрируется как &lt;code&gt;INFO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c50346183ec708677d8278192a3de3bbcc2cc20" translate="yes" xml:space="preserve">
          <source>Log messages related to the handling of requests. 5XX responses are raised as &lt;code&gt;ERROR&lt;/code&gt; messages; 4XX responses are raised as &lt;code&gt;WARNING&lt;/code&gt; messages. Requests that are logged to the &lt;code&gt;django.security&lt;/code&gt; logger aren&amp;rsquo;t logged to &lt;code&gt;django.request&lt;/code&gt;.</source>
          <target state="translated">Журнал сообщений, связанных с обработкой запросов. Ответы 5XX выдаются как сообщения &lt;code&gt;ERROR&lt;/code&gt; ошибках; Ответы 4XX выдаются как &lt;code&gt;WARNING&lt;/code&gt; сообщения. Запросы, которые регистрируются в регистраторе &lt;code&gt;django.security&lt;/code&gt; , не регистрируются в &lt;code&gt;django.request&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb8b376a6ea0f93bedb4b80549e00d705797b62b" translate="yes" xml:space="preserve">
          <source>Log messages related to the rendering of templates.</source>
          <target state="translated">Сообщения журнала,связанные с отрисовкой шаблонов.</target>
        </trans-unit>
        <trans-unit id="012294fbc07fc652fdbbd3b8b48183b6e7925dda" translate="yes" xml:space="preserve">
          <source>Loggers</source>
          <target state="translated">Loggers</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="b6197073d1ec39358a4e3d845faf24f41158555a" translate="yes" xml:space="preserve">
          <source>Logging is configured as part of the general Django &lt;code&gt;setup()&lt;/code&gt; function. Therefore, you can be certain that loggers are always ready for use in your project code.</source>
          <target state="translated">Ведение журнала настраивается как часть общей функции &lt;code&gt;setup()&lt;/code&gt; Django () . Поэтому вы можете быть уверены, что регистраторы всегда готовы к использованию в коде вашего проекта.</target>
        </trans-unit>
        <trans-unit id="3ea927f6b85c95ca60f956a27e51826d1f034e33" translate="yes" xml:space="preserve">
          <source>Logging of each request and response of the server is sent to the &lt;a href=&quot;../topics/logging#django-server-logger&quot;&gt;django.server&lt;/a&gt; logger.</source>
          <target state="translated">Регистрация каждого запроса и ответа сервера отправляется регистратору &lt;a href=&quot;../topics/logging#django-server-logger&quot;&gt;django.server&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="translated">Login</target>
        </trans-unit>
        <trans-unit id="97896e639ea44756e547cd457bf906c408b31625" translate="yes" xml:space="preserve">
          <source>Login and logout signals</source>
          <target state="translated">Сигналы входа и выхода из системы</target>
        </trans-unit>
        <trans-unit id="e43d612e11f1568f2373e719d4c4b08dcecdc7cc" translate="yes" xml:space="preserve">
          <source>Logout</source>
          <target state="translated">Logout</target>
        </trans-unit>
        <trans-unit id="0f9949aa8cddbb021036b013be13fcd58f02e95c" translate="yes" xml:space="preserve">
          <source>Logs a user out, then redirects to the login page.</source>
          <target state="translated">Выходит из системы,затем перенаправляется на страницу входа.</target>
        </trans-unit>
        <trans-unit id="66a401f8c8dd428897c6bb4440e0e65596927d52" translate="yes" xml:space="preserve">
          <source>Logs a user out.</source>
          <target state="translated">Выходит из системы.</target>
        </trans-unit>
        <trans-unit id="87c06f7c9c0dd6c7d57a0b80377942859f9c413d" translate="yes" xml:space="preserve">
          <source>Logs the SQL queries that are executed during schema changes to the database by the &lt;a href=&quot;migrations&quot;&gt;migrations framework&lt;/a&gt;. Note that it won&amp;rsquo;t log the queries executed by &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt;. Messages to this logger have &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;sql&lt;/code&gt; in their extra context (but unlike &lt;code&gt;django.db.backends&lt;/code&gt;, not duration). The values have the same meaning as explained in &lt;a href=&quot;#django-db-logger&quot;&gt;django.db.backends&lt;/a&gt;.</source>
          <target state="translated">Регистрирует запросы SQL, которые выполняются во время изменений схемы в базе данных &lt;a href=&quot;migrations&quot;&gt;инфраструктурой миграции&lt;/a&gt; . Обратите внимание, что он не будет регистрировать запросы, выполненные &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; . Сообщения в этот логгер имеют &lt;code&gt;params&lt;/code&gt; и &lt;code&gt;sql&lt;/code&gt; в своем дополнительном контексте (но в отличие от &lt;code&gt;django.db.backends&lt;/code&gt; , а не длительности). Значения имеют то же значение, как описано в &lt;a href=&quot;#django-db-logger&quot;&gt;django.db.backends&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf24eeb1b831855c84e20ffbab85ed0e2e98d15d" translate="yes" xml:space="preserve">
          <source>Long messages are a special case. There, the first string directly after the &lt;code&gt;msgstr&lt;/code&gt; (or &lt;code&gt;msgid&lt;/code&gt;) is an empty string. Then the content itself will be written over the next few lines as one string per line. Those strings are directly concatenated. Don&amp;rsquo;t forget trailing spaces within the strings; otherwise, they&amp;rsquo;ll be tacked together without whitespace!</source>
          <target state="translated">Длинные сообщения - особый случай. Там, первая строка непосредственно после &lt;code&gt;msgstr&lt;/code&gt; , (или &lt;code&gt;msgid&lt;/code&gt; ) является пустой строкой. Тогда сам контент будет записан в следующие несколько строк как одна строка в строке. Эти строки напрямую связаны. Не забывайте замыкать пробелы в строках; в противном случае они будут склеены без пробелов!</target>
        </trans-unit>
        <trans-unit id="03896792266b6c37fcddf34ea02218f44b413da5" translate="yes" xml:space="preserve">
          <source>Look at the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/deprecation/&quot;&gt;deprecation timeline&lt;/a&gt; for the relevant versions.</source>
          <target state="translated">Посмотрите на &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/deprecation/&quot;&gt;график амортизации&lt;/a&gt; для соответствующих версий.</target>
        </trans-unit>
        <trans-unit id="5af33b9589e0e69caaf074435cb5759b4f613642" translate="yes" xml:space="preserve">
          <source>Look at the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/deprecation/&quot;&gt;deprecation timeline&lt;/a&gt; for the relevant versions.</source>
          <target state="translated">Посмотрите &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/deprecation/&quot;&gt;график прекращения поддержки&lt;/a&gt; для соответствующих версий.</target>
        </trans-unit>
        <trans-unit id="18573a3026539551f5ffe80fbc3fab6545f17122" translate="yes" xml:space="preserve">
          <source>Look at the existing Django fields (in &lt;code&gt;django/db/models/fields/__init__.py&lt;/code&gt;) for inspiration. Try to find a field that&amp;rsquo;s similar to what you want and extend it a little bit, instead of creating an entirely new field from scratch.</source>
          <target state="translated">Посмотрите на существующие поля Django (в &lt;code&gt;django/db/models/fields/__init__.py&lt;/code&gt; ) для вдохновения. Попробуйте найти поле, похожее на то, что вам нужно, и немного расширить его, вместо того, чтобы создавать совершенно новое поле с нуля.</target>
        </trans-unit>
        <trans-unit id="83e1377578dd2108d8423c7213ffe8bd30534cc0" translate="yes" xml:space="preserve">
          <source>Looking for specific information? Try the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/genindex/&quot;&gt;Index&lt;/a&gt;, &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/py-modindex/&quot;&gt;Module Index&lt;/a&gt; or the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/contents/&quot;&gt;detailed table of contents&lt;/a&gt;.</source>
          <target state="translated">Ищете конкретную информацию? Попробуйте &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/genindex/&quot;&gt;указатель&lt;/a&gt; , указатель &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/py-modindex/&quot;&gt;модуля&lt;/a&gt; или &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/contents/&quot;&gt;подробное оглавление&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f996a5b4afddf8e02528b8b854ebf578315565a" translate="yes" xml:space="preserve">
          <source>Looking for specific information? Try the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/genindex/&quot;&gt;Index&lt;/a&gt;, &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/py-modindex/&quot;&gt;Module Index&lt;/a&gt; or the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/contents/&quot;&gt;detailed table of contents&lt;/a&gt;.</source>
          <target state="translated">Ищете конкретную информацию? Попробуйте &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/genindex/&quot;&gt;указатель&lt;/a&gt; , указатель &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/py-modindex/&quot;&gt;модулей&lt;/a&gt; или &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/contents/&quot;&gt;подробное оглавление&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a570127f6a268f5a693b78694a0e6f069ee259be" translate="yes" xml:space="preserve">
          <source>Looking for tests in any file below the current directory whose name matches the pattern &lt;code&gt;test*.py&lt;/code&gt;.</source>
          <target state="translated">Поиск тестов в любом файле ниже текущего каталога, имя которого соответствует шаблону &lt;code&gt;test*.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7015ab4fc4ea24735dbe884238cc1b54bf915eca" translate="yes" xml:space="preserve">
          <source>Lookup</source>
          <target state="translated">Lookup</target>
        </trans-unit>
        <trans-unit id="4f97f5f4ebefacc529850a4ccae9c3992e1498e3" translate="yes" xml:space="preserve">
          <source>Lookup API reference</source>
          <target state="translated">Ссылка на API поиска</target>
        </trans-unit>
        <trans-unit id="0830ad654338d012cacdd174149c78b55003fa0c" translate="yes" xml:space="preserve">
          <source>Lookup Type</source>
          <target state="translated">Тип поиска</target>
        </trans-unit>
        <trans-unit id="b1e95b80675fe4de22a35ddb29898c8e5ee137e9" translate="yes" xml:space="preserve">
          <source>Lookup a &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; by ID. Since this method uses the same shared cache as &lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt;&lt;code&gt;get_for_model()&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s preferred to use this method over the usual &lt;code&gt;ContentType.objects.get(pk=id)&lt;/code&gt;</source>
          <target state="translated">Поиск &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; по идентификатору. Поскольку этот метод использует тот же общий кэш, что и &lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt; &lt;code&gt;get_for_model()&lt;/code&gt; &lt;/a&gt; , предпочтительнее использовать этот метод по сравнению с обычным &lt;code&gt;ContentType.objects.get(pk=id)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4af7afda67ab90eca349b13f266deab4ec35aa10" translate="yes" xml:space="preserve">
          <source>Lookup functions can mix the use of &lt;code&gt;Q&lt;/code&gt; objects and keyword arguments. All arguments provided to a lookup function (be they keyword arguments or &lt;code&gt;Q&lt;/code&gt; objects) are &amp;ldquo;AND&amp;rdquo;ed together. However, if a &lt;code&gt;Q&lt;/code&gt; object is provided, it must precede the definition of any keyword arguments. For example:</source>
          <target state="translated">Функции поиска могут смешивать использование объектов &lt;code&gt;Q&lt;/code&gt; и аргументов ключевых слов. Все аргументы, предоставляемые функции поиска (будь то ключевые аргументы или объекты &lt;code&gt;Q&lt;/code&gt; ), объединяются &amp;laquo;И&amp;raquo;. Однако, если предоставляется объект &lt;code&gt;Q&lt;/code&gt; , он должен предшествовать определению любых аргументов ключевого слова. Например:</target>
        </trans-unit>
        <trans-unit id="6dbdad9ff3b7e8efdd58c11f1971a5b0ed14de47" translate="yes" xml:space="preserve">
          <source>Lookup parameters, which should be in the format accepted by &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt;.</source>
          <target state="translated">Параметры поиска, которые должны быть в формате, принятом &lt;code&gt;get()&lt;/code&gt; и &lt;code&gt;filter()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca99d305ed0945b8d9e457a1542829a19f19f1ac" translate="yes" xml:space="preserve">
          <source>Lookup registration can also be done using a decorator pattern:</source>
          <target state="translated">Регистрация поиска также может быть выполнена с использованием рисунка декоратора:</target>
        </trans-unit>
        <trans-unit id="1c22627487f1bdeac0afcbce546d80cd4f51d447" translate="yes" xml:space="preserve">
          <source>Lookups created with custom &lt;code&gt;to_attr&lt;/code&gt; can still be traversed as usual by other lookups:</source>
          <target state="translated">Поиски, созданные с помощью пользовательского &lt;code&gt;to_attr&lt;/code&gt; ,по- прежнему могут просматриваться другими поисками:</target>
        </trans-unit>
        <trans-unit id="4795e11216648d84c91f69381932d7a8fe148e20" translate="yes" xml:space="preserve">
          <source>Lookups implementation is different in &lt;a href=&quot;../../ref/models/fields#django.db.models.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt;, mainly due to the existence of key transformations. To demonstrate, we will use the following example model:</source>
          <target state="translated">Реализация поиска отличается в &lt;a href=&quot;../../ref/models/fields#django.db.models.JSONField&quot;&gt; &lt;code&gt;JSONField&lt;/code&gt; &lt;/a&gt; , в основном из-за наличия ключевых преобразований. Чтобы продемонстрировать, мы будем использовать следующий пример модели:</target>
        </trans-unit>
        <trans-unit id="bbbc446cd89bbc9f91a61c8d1b7883a4754c0d07" translate="yes" xml:space="preserve">
          <source>Lookups on PostgreSQL</source>
          <target state="translated">Поиск в PostgreSQL</target>
        </trans-unit>
        <trans-unit id="3a6deca122475cb7b177894a1abc642b3c450ad4" translate="yes" xml:space="preserve">
          <source>Lookups that span relationships</source>
          <target state="translated">Поиски,которые охватывают отношения</target>
        </trans-unit>
        <trans-unit id="17694782d38160dbec7f61575168852ee61ca592" translate="yes" xml:space="preserve">
          <source>Lookups with rasters</source>
          <target state="translated">Поиски с растрами</target>
        </trans-unit>
        <trans-unit id="2d971984dd21acc2315cc2384dc6c3cc1e2750fe" translate="yes" xml:space="preserve">
          <source>Loop over each item in an array. For example, to display a list of athletes provided in &lt;code&gt;athlete_list&lt;/code&gt;:</source>
          <target state="translated">Цикл по каждому элементу в массиве. Например, чтобы отобразить список спортсменов, представленный в &lt;code&gt;athlete_list&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4985599a33aedbf517ed7d854dc30df88bcd0eb8" translate="yes" xml:space="preserve">
          <source>Loopback addresses and reserved IP spaces are considered valid. Literal IPv6 addresses (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986#section-3.2.2&lt;/strong&gt;&lt;/a&gt;) and Unicode domains are both supported.</source>
          <target state="translated">Адреса обратной связи и зарезервированные IP-адреса считаются действительными. Поддерживаются как буквальные адреса IPv6 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986 # раздел-3.2.2&lt;/strong&gt;&lt;/a&gt; ), так и домены Unicode.</target>
        </trans-unit>
        <trans-unit id="45543809fe6d79257df2fcb2ced01e5639318229" translate="yes" xml:space="preserve">
          <source>Loopback addresses and reserved IP spaces are considered valid. Literal IPv6 addresses (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986#section-3.2.2&lt;/strong&gt;&lt;/a&gt;) and unicode domains are both supported.</source>
          <target state="translated">Адреса обратной связи и зарезервированные IP-пространства считаются действительными. Поддерживаются буквенные адреса IPv6 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html#section-3.2.2&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3986 # section-3.2.2&lt;/strong&gt;&lt;/a&gt; ) и домены Unicode.</target>
        </trans-unit>
        <trans-unit id="d2e6ddef874e97d78c2e355736d665c5eb63bdd9" translate="yes" xml:space="preserve">
          <source>Looping over &lt;code&gt;UploadedFile.chunks()&lt;/code&gt; instead of using &lt;code&gt;read()&lt;/code&gt; ensures that large files don&amp;rsquo;t overwhelm your system&amp;rsquo;s memory.</source>
          <target state="translated">Зацикливание на &lt;code&gt;UploadedFile.chunks()&lt;/code&gt; вместо использования &lt;code&gt;read()&lt;/code&gt; гарантирует, что большие файлы не переполняют память вашей системы.</target>
        </trans-unit>
        <trans-unit id="b87879ecc3324ca1b5b68b1f628f788675da7274" translate="yes" xml:space="preserve">
          <source>Looping over hidden and visible fields</source>
          <target state="translated">Перелистывание по скрытым и видимым полям</target>
        </trans-unit>
        <trans-unit id="85f78f8afb120cb4e8208c1f6510826e775fef6c" translate="yes" xml:space="preserve">
          <source>Looping over the form&amp;rsquo;s fields</source>
          <target state="translated">Цикл по полям формы</target>
        </trans-unit>
        <trans-unit id="92dfee36a072d60f39ed8b943312cd16aba50fa1" translate="yes" xml:space="preserve">
          <source>Loops over each item in an array, making the item available in a context variable. For example, to display a list of athletes provided in &lt;code&gt;athlete_list&lt;/code&gt;:</source>
          <target state="translated">Зацикливается на каждом элементе в массиве, делая его доступным в переменной контекста. Например, чтобы отобразить список спортсменов, представленный в &lt;code&gt;athlete_list&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="52be3d0c545bc3018bcc23a2c3ea2eb6d6395ec3" translate="yes" xml:space="preserve">
          <source>Loosely-coupled to GeoDjango. For example, &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be used outside of a Django project/application. In other words, no need to have &lt;a href=&quot;../../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; set or use a database, etc.</source>
          <target state="translated">Слабо связано с GeoDjango. Например, объекты &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; могут использоваться вне проекта / приложения Django. Другими словами, нет необходимости устанавливать &lt;a href=&quot;../../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; или использовать базу данных и т. Д.</target>
        </trans-unit>
        <trans-unit id="2f5ba0d2ee5986d496178175529d1a820e6c2011" translate="yes" xml:space="preserve">
          <source>Loosely-coupled to GeoDjango. For example, &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be used outside of a Django project/application. In other words, no need to have &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; set or use a database, etc.</source>
          <target state="translated">Слабо связан с GeoDjango. Например, объекты &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; могут использоваться вне проекта / приложения Django. Другими словами, нет необходимости устанавливать &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; или использовать базу данных и т. Д.</target>
        </trans-unit>
        <trans-unit id="18995b9d14f4d8a9703ab1e599060a15073564b7" translate="yes" xml:space="preserve">
          <source>Loosely-coupled, high-level Python interfaces for GIS geometry and raster operations and data manipulation in different formats.</source>
          <target state="translated">Свободносвязанные,высокоуровневые Python-интерфейсы для геометрии ГИС и растровых операций,а также для манипулирования данными в различных форматах.</target>
        </trans-unit>
        <trans-unit id="d14c62a5e247e1d3a0c3e590257851d326591f90" translate="yes" xml:space="preserve">
          <source>Low bandwidth connection?</source>
          <target state="translated">Подключение с низкой пропускной способностью?</target>
        </trans-unit>
        <trans-unit id="b38b638f8a783319921b9ded343024596436ca9a" translate="yes" xml:space="preserve">
          <source>Low-level APIs</source>
          <target state="translated">Низкоуровневые API</target>
        </trans-unit>
        <trans-unit id="bb82d98842b53ea8e4fc0ba928b83950cba983a9" translate="yes" xml:space="preserve">
          <source>MEDIA_ROOT, DEFAULT_FILE_STORAGE</source>
          <target state="translated">MEDIA_ROOT,ПО УМОЛЧАНИЮ_FILE_STORAGE</target>
        </trans-unit>
        <trans-unit id="07a4d61f0acbbb95318a8a2d2e1f3a3b76934273" translate="yes" xml:space="preserve">
          <source>MacPorts</source>
          <target state="translated">MacPorts</target>
        </trans-unit>
        <trans-unit id="a0d3cf49aa9c486cc3245a67064ef6a90e88d567" translate="yes" xml:space="preserve">
          <source>Mail is sent using the SMTP host and port specified in the &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_PORT&quot;&gt;&lt;code&gt;EMAIL_PORT&lt;/code&gt;&lt;/a&gt; settings. The &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt;&lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt;&lt;/a&gt; settings, if set, are used to authenticate to the SMTP server, and the &lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; settings control whether a secure connection is used.</source>
          <target state="translated">Почта отправляется с использованием SMTP-хоста и порта, указанных в настройках &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/settings#std:setting-EMAIL_PORT&quot;&gt; &lt;code&gt;EMAIL_PORT&lt;/code&gt; &lt;/a&gt; . Настройки &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt; &lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt; &lt;/a&gt; , если они установлены, используются для аутентификации на SMTP-сервере, а настройки &lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/settings#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt; определяют, используется ли безопасное соединение.</target>
        </trans-unit>
        <trans-unit id="2045c2b3b3410d03382b7449be956846f013a676" translate="yes" xml:space="preserve">
          <source>Mails the email addresses specified in &lt;a href=&quot;settings#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;../topics/email#django.core.mail.mail_admins&quot;&gt;&lt;code&gt;mail_admins()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Отправляет по электронной почте адреса электронной почты, указанные в &lt;a href=&quot;settings#std:setting-ADMINS&quot;&gt; &lt;code&gt;ADMINS&lt;/code&gt; ,&lt;/a&gt; с помощью &lt;a href=&quot;../topics/email#django.core.mail.mail_admins&quot;&gt; &lt;code&gt;mail_admins()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09447360b87529c4e200002f47e5957ff5712079" translate="yes" xml:space="preserve">
          <source>Mails the email addresses specified in &lt;a href=&quot;settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;../topics/email#django.core.mail.mail_managers&quot;&gt;&lt;code&gt;mail_managers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mails адреса электронной почты , указанный в &lt;a href=&quot;settings#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; &lt;/a&gt; , используя &lt;a href=&quot;../topics/email#django.core.mail.mail_managers&quot;&gt; &lt;code&gt;mail_managers()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b99cc729613bb252546c2ed4313e808dbf5dd8a" translate="yes" xml:space="preserve">
          <source>Make sure ALL of the following are true before setting this (assuming the values from the example above):</source>
          <target state="translated">Убедитесь,что ВСЕ приведенные ниже значения верны,прежде чем задавать их (предполагая значения из приведенного выше примера):</target>
        </trans-unit>
        <trans-unit id="aa35ed7a8f70d5ae8a72a8185bfd890e5ab93011" translate="yes" xml:space="preserve">
          <source>Make sure it&amp;rsquo;s one of the first middleware installed.</source>
          <target state="translated">Убедитесь, что это одна из первых установленных промежуточных программ.</target>
        </trans-unit>
        <trans-unit id="45c040a2736ded67e62f5c53ffa1a4ec220de726" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; is included in your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Убедитесь, что &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; включен в ваш &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9525d86fc1dd6d513066076e98a6c857591c199" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;mod_auth_basic&lt;/code&gt; and &lt;code&gt;mod_authz_user&lt;/code&gt; are loaded.</source>
          <target state="translated">Убедитесь, что &lt;code&gt;mod_auth_basic&lt;/code&gt; и &lt;code&gt;mod_authz_user&lt;/code&gt; загружены.</target>
        </trans-unit>
        <trans-unit id="69445a55691d7850da50947c34014b2fc4c3ae5d" translate="yes" xml:space="preserve">
          <source>Make sure that mod_wsgi is installed and activated and that you have followed the steps to setup &lt;a href=&quot;modwsgi&quot;&gt;Apache with mod_wsgi&lt;/a&gt;.</source>
          <target state="translated">Убедитесь, что mod_wsgi установлен и активирован, и что вы выполнили шаги по настройке &lt;a href=&quot;modwsgi&quot;&gt;Apache с mod_wsgi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da2abf2d686008baca2b498aeae79af0c709468a" translate="yes" xml:space="preserve">
          <source>Make sure that the Python interpreter can load Django&amp;rsquo;s code. The most convenient way to do this is to use &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;, &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt;, and &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtualenv.</source>
          <target state="translated">Убедитесь, что интерпретатор Python может загрузить код Django. Наиболее удобный способ сделать это - использовать &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt; , &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt; и &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt; . &lt;a href=&quot;../intro/contributing&quot;&gt;Способствует учебник&lt;/a&gt; прогулки , как создать virtualenv.</target>
        </trans-unit>
        <trans-unit id="2552998128fb2470acabb019c65ec215909bcedc" translate="yes" xml:space="preserve">
          <source>Make sure that the Python interpreter can load Django&amp;rsquo;s code. The most convenient way to do this is to use a virtual environment and &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtual environment.</source>
          <target state="translated">Убедитесь, что интерпретатор Python может загружать код Django. Самый удобный способ сделать это - использовать виртуальную среду и &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt; . В дополнительном &lt;a href=&quot;../intro/contributing&quot;&gt;руководстве&lt;/a&gt; рассказывается, как создать виртуальную среду.</target>
        </trans-unit>
        <trans-unit id="c90fe8d9c88a24bdf2ff7e779cd0a6887772c684" translate="yes" xml:space="preserve">
          <source>Make sure that the key used in production isn&amp;rsquo;t used anywhere else and avoid committing it to source control. This reduces the number of vectors from which an attacker may acquire the key.</source>
          <target state="translated">Убедитесь, что ключ, используемый в рабочей среде, больше нигде не используется, и избегайте его передачи в систему контроля версий. Это уменьшает количество векторов, из которых злоумышленник может получить ключ.</target>
        </trans-unit>
        <trans-unit id="c1065df190cc28bea4577001c230e0ec7e0f5f5c" translate="yes" xml:space="preserve">
          <source>Make sure that you don&amp;rsquo;t include the above URL within &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt; - it needs to be language-independent itself to work correctly.</source>
          <target state="translated">Убедитесь, что вы не включили вышеуказанный URL в &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt; - он должен быть независимым от языка, чтобы работать правильно.</target>
        </trans-unit>
        <trans-unit id="4d82bc59e1c3d86100d01ee3c8c4d4ac4373a55c" translate="yes" xml:space="preserve">
          <source>Make sure that you have &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; installed and that you can run its commands from a shell. (Enter &lt;code&gt;git help&lt;/code&gt; at a shell prompt to test this.)</source>
          <target state="translated">Убедитесь, что у вас установлен &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; и что вы можете запускать его команды из оболочки. (Введите &lt;code&gt;git help&lt;/code&gt; в командной строке, чтобы проверить это.)</target>
        </trans-unit>
        <trans-unit id="4febd23799488138305eb5481ce515953522d418" translate="yes" xml:space="preserve">
          <source>Make sure that your Python code is outside of the Web server&amp;rsquo;s root. This will ensure that your Python code is not accidentally served as plain text (or accidentally executed).</source>
          <target state="translated">Убедитесь, что ваш код Python находится за пределами корня веб-сервера. Это гарантирует, что ваш код Python не будет случайно представлен как простой текст (или случайно выполнен).</target>
        </trans-unit>
        <trans-unit id="b4d25e9adadc4f10721db1c559ebdebfced81239" translate="yes" xml:space="preserve">
          <source>Make sure the directory pointed-to by this setting either exists and is readable and writable, or that it can be created by the system user under which your Web server runs. Continuing the above example, if your server runs as the user &lt;code&gt;apache&lt;/code&gt;, make sure the directory &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; exists and is readable and writable by the user &lt;code&gt;apache&lt;/code&gt;, or that it can be created by the user &lt;code&gt;apache&lt;/code&gt;.</source>
          <target state="translated">Убедитесь, что каталог, на который указывает этот параметр, либо существует и доступен для чтения и записи, либо он может быть создан пользователем системы, под которым работает ваш веб-сервер. Продолжая приведенный выше пример, если ваш сервер работает как пользовательский &lt;code&gt;apache&lt;/code&gt; , убедитесь, что каталог &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; существует и доступен для чтения и записи пользовательскому &lt;code&gt;apache&lt;/code&gt; , или что он может быть создан пользователем &lt;code&gt;apache&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5852dd567ba21a0751232f400af285522c51e4b8" translate="yes" xml:space="preserve">
          <source>Make sure the directory pointed-to by this setting exists and is readable and writable by the system user under which your Web server runs. Continuing the above example, if your server runs as the user &lt;code&gt;apache&lt;/code&gt;, make sure the directory &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; exists and is readable and writable by the user &lt;code&gt;apache&lt;/code&gt;.</source>
          <target state="translated">Убедитесь, что каталог, на который указывает этот параметр, существует и доступен для чтения и записи для пользователя системы, под которым работает ваш веб-сервер. Продолжая приведенный выше пример, если ваш сервер работает как пользователь &lt;code&gt;apache&lt;/code&gt; , убедитесь, что каталог &lt;code&gt;/var/tmp/django_cache&lt;/code&gt; существует и доступен для чтения и записи для пользователя &lt;code&gt;apache&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6792ed36d70833105e98f7e1536ea01606bbfe30" translate="yes" xml:space="preserve">
          <source>Make sure you list all extensions you&amp;rsquo;re using! Otherwise Babel won&amp;rsquo;t recognize the tags defined by these extensions and will ignore Jinja2 templates containing them entirely.</source>
          <target state="translated">Убедитесь, что вы перечислили все используемые вами расширения! В противном случае Babel не распознает теги, определенные этими расширениями, и полностью игнорирует шаблоны Jinja2, содержащие их.</target>
        </trans-unit>
        <trans-unit id="8619a1d17175246cf38854aa8293b829b7d1f23b" translate="yes" xml:space="preserve">
          <source>Make sure you&amp;rsquo;ve activated translation for your project (the fastest way is to check if &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt;&lt;code&gt;django.middleware.locale.LocaleMiddleware&lt;/code&gt;&lt;/a&gt;). If you haven&amp;rsquo;t yet, see &lt;a href=&quot;#how-django-discovers-language-preference&quot;&gt;How Django discovers language preference&lt;/a&gt;.</source>
          <target state="translated">Убедитесь, что вы активировали перевод для своего проекта (самый быстрый способ - проверить, включает ли &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt; &lt;code&gt;django.middleware.locale.LocaleMiddleware&lt;/code&gt; &lt;/a&gt; ). Если вы еще этого не сделали, посмотрите, &lt;a href=&quot;#how-django-discovers-language-preference&quot;&gt;как Django обнаруживает языковые предпочтения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c3a7262191d27cdf5c32da423a57d2c31d3d081" translate="yes" xml:space="preserve">
          <source>Make sure you&amp;rsquo;ve installed the &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;sites framework&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Убедитесь, что вы установили &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;sites framework&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ee1e2048edd25b686838bf844c45d24bc1ae95" translate="yes" xml:space="preserve">
          <source>Make sure your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting contains a &lt;code&gt;DjangoTemplates&lt;/code&gt; backend whose &lt;code&gt;APP_DIRS&lt;/code&gt; options is set to &lt;code&gt;True&lt;/code&gt;. It&amp;rsquo;s in there by default, so you&amp;rsquo;ll only need to change this if you&amp;rsquo;ve changed that setting.</source>
          <target state="translated">Убедитесь, что ваш параметр &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; содержит &lt;code&gt;DjangoTemplates&lt;/code&gt; которой &lt;code&gt;APP_DIRS&lt;/code&gt; параметров APP_DIRS установлено значение &lt;code&gt;True&lt;/code&gt; . Он там по умолчанию, поэтому вам нужно будет изменить его, только если вы изменили этот параметр.</target>
        </trans-unit>
        <trans-unit id="ab1c905ed852730023a7a6e5ec3853b4aa30f7c5" translate="yes" xml:space="preserve">
          <source>Make sure your database is configured to be able to store arbitrary string data. Normally, this means giving it an encoding of UTF-8 or UTF-16. If you use a more restrictive encoding &amp;ndash; for example, latin1 (iso8859-1) &amp;ndash; you won&amp;rsquo;t be able to store certain characters in the database, and information will be lost.</source>
          <target state="translated">Убедитесь, что ваша база данных настроена для хранения произвольных строковых данных. Обычно это означает присвоение ему кодировки UTF-8 или UTF-16. Если вы используете более строгую кодировку - например, latin1 (iso8859-1) - вы не сможете хранить определенные символы в базе данных, и информация будет потеряна.</target>
        </trans-unit>
        <trans-unit id="e6d84fe7fe5ec77cf066388c9481b92a6747b344" translate="yes" xml:space="preserve">
          <source>Make the poll app modifiable in the admin</source>
          <target state="translated">Сделайте приложение для опроса модифицируемым у администратора.</target>
        </trans-unit>
        <trans-unit id="3288017f14c5479aa28d05689ff3c090be1108e6" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;makemigrations&lt;/code&gt; exit with a non-zero status when model changes without migrations are detected.</source>
          <target state="translated">Заставляет &lt;code&gt;makemigrations&lt;/code&gt; выйти с ненулевым статусом, когда обнаружены изменения модели без миграций.</target>
        </trans-unit>
        <trans-unit id="e45f4eb2e4ecd287729a2a82141e7631ec4c8e61" translate="yes" xml:space="preserve">
          <source>Makes &lt;code&gt;migrate&lt;/code&gt; exit with a non-zero status when unapplied migrations are detected.</source>
          <target state="translated">Делает &lt;code&gt;migrate&lt;/code&gt; выхода с ненулевым статусом при миграции Непримененной обнаружена.</target>
        </trans-unit>
        <trans-unit id="cd46c57dda19a380dba63b951c50c57d7edd94b1" translate="yes" xml:space="preserve">
          <source>Makes a DELETE request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">Делает запрос DELETE по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; . Полезно для тестирования интерфейсов RESTful.</target>
        </trans-unit>
        <trans-unit id="67b8fdec97a0a90000785f857f6d99d954dfbaaa" translate="yes" xml:space="preserve">
          <source>Makes a GET request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object, which is documented below.</source>
          <target state="translated">Делает GET-запрос по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; , что описано ниже.</target>
        </trans-unit>
        <trans-unit id="3ab36adc110fb58469cbb078f97a12c9d401e7de" translate="yes" xml:space="preserve">
          <source>Makes a HEAD request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. This method works just like &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;, including the &lt;code&gt;follow&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; arguments, except it does not return a message body.</source>
          <target state="translated">Делает запрос HEAD по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; . Этот метод работает так же, как &lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; &lt;/a&gt; , включая аргументы &lt;code&gt;follow&lt;/code&gt; , &lt;code&gt;secure&lt;/code&gt; и &lt;code&gt;extra&lt;/code&gt; , за исключением того, что он не возвращает тело сообщения.</target>
        </trans-unit>
        <trans-unit id="622e768ac61b71b81b98d9e29b486595200ed157" translate="yes" xml:space="preserve">
          <source>Makes a PATCH request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">Делает запрос PATCH по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; . Полезно для тестирования интерфейсов RESTful.</target>
        </trans-unit>
        <trans-unit id="fd9170b880c457475e4acad7c3125b513d409d1e" translate="yes" xml:space="preserve">
          <source>Makes a POST request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object, which is documented below.</source>
          <target state="translated">Делает POST-запрос по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; , что описано ниже.</target>
        </trans-unit>
        <trans-unit id="8a618a092d900f3345d37da0ff87b3e10c65839d" translate="yes" xml:space="preserve">
          <source>Makes a PUT request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">Делает запрос PUT по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; . Полезно для тестирования интерфейсов RESTful.</target>
        </trans-unit>
        <trans-unit id="66196a0bb288c4ef1f8149743502405df89a8fd9" translate="yes" xml:space="preserve">
          <source>Makes a TRACE request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for simulating diagnostic probes.</source>
          <target state="translated">Создает запрос TRACE по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; . Полезно для моделирования диагностических датчиков.</target>
        </trans-unit>
        <trans-unit id="888f82444507e9099b749f8f400d61b51e2436cd" translate="yes" xml:space="preserve">
          <source>Makes all possible efforts to strip all [X]HTML tags.</source>
          <target state="translated">Прилагает все возможные усилия для удаления всех [X]HTML-тегов.</target>
        </trans-unit>
        <trans-unit id="99cf9f3654a5878401b856a77fe4db8a46014e99" translate="yes" xml:space="preserve">
          <source>Makes an OPTIONS request on the provided &lt;code&gt;path&lt;/code&gt; and returns a &lt;code&gt;Response&lt;/code&gt; object. Useful for testing RESTful interfaces.</source>
          <target state="translated">Создает запрос OPTIONS по указанному &lt;code&gt;path&lt;/code&gt; и возвращает объект &lt;code&gt;Response&lt;/code&gt; . Полезно для тестирования интерфейсов RESTful.</target>
        </trans-unit>
        <trans-unit id="a2b1ed94dcb4d0abbc485a341862326c80bacbba" translate="yes" xml:space="preserve">
          <source>Makes or deletes the &lt;code&gt;_order&lt;/code&gt; column needed for the &lt;a href=&quot;models/options#django.db.models.Options.order_with_respect_to&quot;&gt;&lt;code&gt;order_with_respect_to&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass.</source>
          <target state="translated">Создает или удаляет столбец &lt;code&gt;_order&lt;/code&gt; , необходимый для опции &lt;a href=&quot;models/options#django.db.models.Options.order_with_respect_to&quot;&gt; &lt;code&gt;order_with_respect_to&lt;/code&gt; &lt;/a&gt; в подклассе &lt;code&gt;Meta&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dccc437985ff30cb011b62713b84ead4f737431" translate="yes" xml:space="preserve">
          <source>Makes the active translation object a &lt;code&gt;NullTranslations()&lt;/code&gt; instance. This is useful when we want delayed translations to appear as the original string for some reason.</source>
          <target state="translated">Делает активный объект &lt;code&gt;NullTranslations()&lt;/code&gt; экземпляром NullTranslations () . Это полезно, когда по какой-то причине мы хотим, чтобы отложенные переводы отображались как исходная строка.</target>
        </trans-unit>
        <trans-unit id="3ea1449517b61b6227fc0a09d9c44c6bb5266548" translate="yes" xml:space="preserve">
          <source>Makes this object orderable with respect to the given field, usually a &lt;code&gt;ForeignKey&lt;/code&gt;. This can be used to make related objects orderable with respect to a parent object. For example, if an &lt;code&gt;Answer&lt;/code&gt; relates to a &lt;code&gt;Question&lt;/code&gt; object, and a question has more than one answer, and the order of answers matters, you&amp;rsquo;d do this:</source>
          <target state="translated">Делает этот объект упорядоченным относительно данного поля, обычно это &lt;code&gt;ForeignKey&lt;/code&gt; . Это может быть использовано для того, чтобы сделать связанные объекты более доступными для родительского объекта. Например, если &lt;code&gt;Answer&lt;/code&gt; относится к объекту &amp;laquo; &lt;code&gt;Question&lt;/code&gt; , и вопрос имеет более одного ответа, и порядок ответов имеет значение, вы должны сделать это:</target>
        </trans-unit>
        <trans-unit id="d54f5b47c954fae0115f4537ba904f310a264de9" translate="yes" xml:space="preserve">
          <source>Making &amp;ldquo;friendly&amp;rdquo; template contexts</source>
          <target state="translated">Создание &amp;laquo;дружественных&amp;raquo; шаблонных контекстов</target>
        </trans-unit>
        <trans-unit id="c8db8d80fd9fb4fecd9dcd41e45fec83ed98ddd5" translate="yes" xml:space="preserve">
          <source>Making URL patterns themselves translatable via the &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;django.utils.translation.gettext_lazy()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Создание самих шаблонов URL с помощью функции &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;django.utils.translation.gettext_lazy()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42a63d52676fa037454255c2d52959b81d535bf1" translate="yes" xml:space="preserve">
          <source>Making actions available site-wide</source>
          <target state="translated">Предоставление действий по всему сайту</target>
        </trans-unit>
        <trans-unit id="9eec11322f12a5a830e1ec8f9ac3f17534635686" translate="yes" xml:space="preserve">
          <source>Making an expensive computation that depends on the request.</source>
          <target state="translated">Делать дорогие вычисления,которые зависят от запроса.</target>
        </trans-unit>
        <trans-unit id="11280e40fa12c6ed475a0960415249174d29f82b" translate="yes" xml:space="preserve">
          <source>Making logging calls</source>
          <target state="translated">Делать звонки в журнал</target>
        </trans-unit>
        <trans-unit id="7cbc2e6788aa00914bfa34bdeafb0de83e2e8075" translate="yes" xml:space="preserve">
          <source>Making queries</source>
          <target state="translated">Делать запросы</target>
        </trans-unit>
        <trans-unit id="f36af64091c8859d03f0c5912aa8c3e10b3dd9b4" translate="yes" xml:space="preserve">
          <source>Making requests</source>
          <target state="translated">Делать запросы</target>
        </trans-unit>
        <trans-unit id="b880c8b42823e5609b10a452e5205dcb5f7b4996" translate="yes" xml:space="preserve">
          <source>Management Commands</source>
          <target state="translated">Управленческие команды</target>
        </trans-unit>
        <trans-unit id="309988b71dc98cdf2b11d5ce945ef12fe12b7c85" translate="yes" xml:space="preserve">
          <source>Management commands and locales</source>
          <target state="translated">Команды и локали управления</target>
        </trans-unit>
        <trans-unit id="fdb992093f99727071e66bbe2c45fcb5e3b93112" translate="yes" xml:space="preserve">
          <source>Management commands can be tested with the &lt;a href=&quot;../../ref/django-admin#django.core.management.call_command&quot;&gt;&lt;code&gt;call_command()&lt;/code&gt;&lt;/a&gt; function. The output can be redirected into a &lt;code&gt;StringIO&lt;/code&gt; instance:</source>
          <target state="translated">Команды управления можно проверить с помощью функции &lt;a href=&quot;../../ref/django-admin#django.core.management.call_command&quot;&gt; &lt;code&gt;call_command()&lt;/code&gt; &lt;/a&gt; . Вывод может быть перенаправлен в экземпляр &lt;code&gt;StringIO&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="123ebb6632286d41ac5ad793d26b1e8e2995104f" translate="yes" xml:space="preserve">
          <source>Management commands from third-party apps that have been unintentionally overridden can be made available under a new name by creating a new command in one of your project&amp;rsquo;s apps (ordered before the third-party app in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;) which imports the &lt;code&gt;Command&lt;/code&gt; of the overridden command.</source>
          <target state="translated">Команды управления из сторонних приложений, которые были непреднамеренно переопределены, можно сделать доступными под новым именем, создав новую команду в одном из приложений вашего проекта (упорядочено перед сторонним приложением в &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; ), который импортирует &lt;code&gt;Command&lt;/code&gt; переопределенной команды. ,</target>
        </trans-unit>
        <trans-unit id="aedb618e7bae6668445752ed581581d51fca7e48" translate="yes" xml:space="preserve">
          <source>Management signals</source>
          <target state="translated">Управляющие сигналы</target>
        </trans-unit>
        <trans-unit id="bab8c1f3a552b23f9c2fc03d51382bf5a6e5f9e0" translate="yes" xml:space="preserve">
          <source>Manager methods</source>
          <target state="translated">Методы Менеджера</target>
        </trans-unit>
        <trans-unit id="5d37a81c73b96201b2d085091cabd9eeab93ecf1" translate="yes" xml:space="preserve">
          <source>Manager names</source>
          <target state="translated">Имена менеджеров</target>
        </trans-unit>
        <trans-unit id="4f7b3cfa4fbefb6a7d1086c0a97bc4ea23175a55" translate="yes" xml:space="preserve">
          <source>Managers</source>
          <target state="translated">Managers</target>
        </trans-unit>
        <trans-unit id="9e8450ccf72e480aeae5b3890c911f5578602674" translate="yes" xml:space="preserve">
          <source>Managers from base classes are always inherited by the child class, using Python&amp;rsquo;s normal name resolution order (names on the child class override all others; then come names on the first parent class, and so on).</source>
          <target state="translated">Менеджеры базовых классов всегда наследуются дочерним классом, используя обычный порядок разрешения имен в Python (имена дочернего класса переопределяют все остальные; затем идут имена в первом родительском классе и т. Д.).</target>
        </trans-unit>
        <trans-unit id="4f90f7785499fc4cfaa11512554a9d9c8b983450" translate="yes" xml:space="preserve">
          <source>Managing database transactions</source>
          <target state="translated">Управление транзакциями в базе данных</target>
        </trans-unit>
        <trans-unit id="a21bfd78268483f35f3c604df2fe7d8571659141" translate="yes" xml:space="preserve">
          <source>Managing files</source>
          <target state="translated">Управление файлами</target>
        </trans-unit>
        <trans-unit id="1f4073ab68fce5fa416ebfc1214a39c03aa82bd7" translate="yes" xml:space="preserve">
          <source>Managing static files (e.g. images, JavaScript, CSS)</source>
          <target state="translated">Управление статическими файлами (например,изображениями,JavaScript,CSS).</target>
        </trans-unit>
        <trans-unit id="cfe3a8d49df863653ebd64aa7a5c9599baeb268f" translate="yes" xml:space="preserve">
          <source>Managing the database</source>
          <target state="translated">Управление базой данных</target>
        </trans-unit>
        <trans-unit id="821946108f9fcc4278ef8ff2a44740fe9fc0f854" translate="yes" xml:space="preserve">
          <source>Managing users in the admin</source>
          <target state="translated">Управление пользователями у администратора</target>
        </trans-unit>
        <trans-unit id="b383c49ef5abc4e107f02ad08c8c62501452a9f0" translate="yes" xml:space="preserve">
          <source>Mandatory &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Обязательный &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49bb3afa6fe6d5f9c1b4819689c8cb64af32574b" translate="yes" xml:space="preserve">
          <source>Manually managing a user&amp;rsquo;s password</source>
          <target state="translated">Управление паролем пользователя вручную</target>
        </trans-unit>
        <trans-unit id="169b1587f29ae2dd843f597266b7665985a7ec7f" translate="yes" xml:space="preserve">
          <source>Manually rendered &lt;code&gt;can_delete&lt;/code&gt; and &lt;code&gt;can_order&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;can_delete&lt;/code&gt; вручную can_delete и &lt;code&gt;can_order&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="578ba80b666e0ccf9a7012331ca7e916469a6aaf" translate="yes" xml:space="preserve">
          <source>Manually selecting a database</source>
          <target state="translated">Ручной выбор базы данных</target>
        </trans-unit>
        <trans-unit id="9cab6e985bdaa8e6c7cd3d1f1913684e9f6c62a4" translate="yes" xml:space="preserve">
          <source>Manually selecting a database for a &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">Выбор базы данных для &lt;code&gt;QuerySet&lt;/code&gt; вручную</target>
        </trans-unit>
        <trans-unit id="6e5d67e28075441efb68505f6ad34b3922452603" translate="yes" xml:space="preserve">
          <source>Manually-specifying values of auto-incrementing primary keys</source>
          <target state="translated">Ручное определение значений автоинкрементирующих первичных ключей</target>
        </trans-unit>
        <trans-unit id="3fd4f2fc1f97ee8fb54c37f3123e041f2ad5b7eb" translate="yes" xml:space="preserve">
          <source>Many JavaScript toolkits exist, and many of them include widgets (such as calendar widgets) that can be used to enhance your application. Django has deliberately avoided blessing any one JavaScript toolkit. Each toolkit has its own relative strengths and weaknesses - use whichever toolkit suits your requirements. Django is able to integrate with any JavaScript toolkit.</source>
          <target state="translated">Существует множество инструментов JavaScript,и многие из них включают в себя виджеты (например,виджеты календаря),которые могут быть использованы для улучшения вашего приложения.Джанго сознательно избегает благословения какого-либо одного инструментария JavaScript.У каждого инструментария есть свои относительные сильные и слабые стороны-используйте тот,который соответствует вашим требованиям.Django способен интегрироваться с любым набором инструментов JavaScript.</target>
        </trans-unit>
        <trans-unit id="25451186d18d24fb946ba6ce8889475aef168969" translate="yes" xml:space="preserve">
          <source>Many commands take a list of &amp;ldquo;app names.&amp;rdquo; An &amp;ldquo;app name&amp;rdquo; is the basename of the package containing your models. For example, if your &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; contains the string &lt;code&gt;'mysite.blog'&lt;/code&gt;, the app name is &lt;code&gt;blog&lt;/code&gt;.</source>
          <target state="translated">Многие команды принимают список &amp;laquo;имен приложений&amp;raquo;. &amp;laquo;Имя приложения&amp;raquo; - это базовое имя пакета, содержащего ваши модели. Например, если ваш &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; содержит строку &lt;code&gt;'mysite.blog'&lt;/code&gt; , приложение называется &lt;code&gt;blog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1ab0c728d9adbf5dc95998cbd2e06c0ddcc849d" translate="yes" xml:space="preserve">
          <source>Many of Django&amp;rsquo;s built-in class-based views inherit from other class-based views or various mixins. Because this inheritance chain is very important, the ancestor classes are documented under the section title of &lt;strong&gt;Ancestors (MRO)&lt;/strong&gt;. MRO is an acronym for Method Resolution Order.</source>
          <target state="translated">Многие из встроенных в Django представлений классов наследуются от других представлений классов или различных миксов. Поскольку эта цепочка наследования очень важна, классы предков задокументированы под заголовком раздела &lt;strong&gt;Ancestors (MRO)&lt;/strong&gt; . MRO является аббревиатурой от Order Resolution Order.</target>
        </trans-unit>
        <trans-unit id="7ef93725b505fdf5fdda66e9602ccdb48505b2c6" translate="yes" xml:space="preserve">
          <source>Many of Django&amp;rsquo;s model fields accept options that they don&amp;rsquo;t do anything with. For example, you can pass both &lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; to a &lt;a href=&quot;../ref/models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;django.db.models.DateField&lt;/code&gt;&lt;/a&gt; and it will ignore the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/a&gt; parameter (&lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;auto_now&lt;/code&gt;&lt;/a&gt; being set implies &lt;code&gt;editable=False&lt;/code&gt;). No error is raised in this case.</source>
          <target state="translated">Многие из полей модели Django принимают опции, с которыми они ничего не делают. Например, вы можете передать и &lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt; &lt;code&gt;editable&lt;/code&gt; ,&lt;/a&gt; и &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;../ref/models/fields#django.db.models.DateField&quot;&gt; &lt;code&gt;django.db.models.DateField&lt;/code&gt; ,&lt;/a&gt; и он будет игнорировать &lt;a href=&quot;../ref/models/fields#django.db.models.Field.editable&quot;&gt; &lt;code&gt;editable&lt;/code&gt; &lt;/a&gt; параметр (при установке &lt;a href=&quot;../ref/models/fields#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;auto_now&lt;/code&gt; &lt;/a&gt; подразумевается &lt;code&gt;editable=False&lt;/code&gt; ). В этом случае ошибки не возникает.</target>
        </trans-unit>
        <trans-unit id="c7e02cb06b5702dcaa553fe7f77ae3438f401b6a" translate="yes" xml:space="preserve">
          <source>Many of these settings are sensitive and should be treated as confidential. If you&amp;rsquo;re releasing the source code for your project, a common practice is to publish suitable settings for development, and to use a private settings module for production.</source>
          <target state="translated">Многие из этих настроек являются конфиденциальными и должны рассматриваться как конфиденциальные. Если вы выпускаете исходный код для своего проекта, обычной практикой является публикация подходящих настроек для разработки и использование модуля личных настроек для производства.</target>
        </trans-unit>
        <trans-unit id="75861236e48cb91931859e485f7ff7f5f75eebda" translate="yes" xml:space="preserve">
          <source>Many of these signals are sent by various model methods like &lt;code&gt;__init__()&lt;/code&gt; or &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; that you can override in your own code.</source>
          <target state="translated">Многие из этих сигналов отправляются различными методами модели, такими как &lt;code&gt;__init__()&lt;/code&gt; или &lt;a href=&quot;models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; которые вы можете переопределить в своем собственном коде.</target>
        </trans-unit>
        <trans-unit id="22d338ef8445afc99ea23ca8b6ff63e24bec60fb" translate="yes" xml:space="preserve">
          <source>Many other things might go wrong with our application in the future, but we can be sure that we won&amp;rsquo;t inadvertently reintroduce this bug, because running the test will warn us immediately. We can consider this little portion of the application pinned down safely forever.</source>
          <target state="translated">Многие другие вещи могут пойти не так с нашим приложением в будущем, но мы можем быть уверены, что не будем случайно вводить эту ошибку, потому что запуск теста немедленно предупредит нас. Мы можем считать эту маленькую часть приложения закрепленной навсегда.</target>
        </trans-unit>
        <trans-unit id="a06e57ab2b407ee0845b83ecac56cae0cb1c5bb7" translate="yes" xml:space="preserve">
          <source>Many template tags take a number of arguments &amp;ndash; strings or template variables &amp;ndash; and return a result after doing some processing based solely on the input arguments and some external information. For example, a &lt;code&gt;current_time&lt;/code&gt; tag might accept a format string and return the time as a string formatted accordingly.</source>
          <target state="translated">Многие теги шаблонов принимают ряд аргументов - строк или переменных шаблона - и возвращают результат после некоторой обработки, основанной исключительно на входных аргументах и ​​некоторой внешней информации. Например, тег &lt;code&gt;current_time&lt;/code&gt; может принять строку формата и вернуть время в виде строки, отформатированной соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="d934fc1527a93c2b43e246ede7cf475542db271a" translate="yes" xml:space="preserve">
          <source>Many templates, including some of Django&amp;rsquo;s, rely upon the silence of the template system when a nonexistent variable is encountered. If you assign a value other than &lt;code&gt;''&lt;/code&gt; to &lt;code&gt;string_if_invalid&lt;/code&gt;, you will experience rendering problems with these templates and sites.</source>
          <target state="translated">Многие шаблоны, в том числе некоторые из Django, полагаются на молчание системы шаблонов при обнаружении несуществующей переменной. Если вы присвоите значение, отличное от &lt;code&gt;''&lt;/code&gt; для &lt;code&gt;string_if_invalid&lt;/code&gt; , у вас возникнут проблемы с отображением этих шаблонов и сайтов.</target>
        </trans-unit>
        <trans-unit id="67d6af84e82be13a30451c42ca848e947ab607d1" translate="yes" xml:space="preserve">
          <source>Many widgets have optional extra arguments; they can be set when defining the widget on the field. In the following example, the &lt;a href=&quot;#django.forms.SelectDateWidget.years&quot;&gt;&lt;code&gt;years&lt;/code&gt;&lt;/a&gt; attribute is set for a &lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt;&lt;code&gt;SelectDateWidget&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Многие виджеты имеют необязательные дополнительные аргументы; они могут быть установлены при определении виджета на поле. В следующем примере атрибут &lt;a href=&quot;#django.forms.SelectDateWidget.years&quot;&gt; &lt;code&gt;years&lt;/code&gt; &lt;/a&gt; установлен для &lt;a href=&quot;#django.forms.SelectDateWidget&quot;&gt; &lt;code&gt;SelectDateWidget&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d58d8917cafabb2c90c45707f57b660d3626c9ee" translate="yes" xml:space="preserve">
          <source>Many-to-many field to &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Поле &amp;laquo;многие ко многим&amp;raquo; в &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f9d8f6ec324fa681af98e9241f31cfa5781051c6" translate="yes" xml:space="preserve">
          <source>Many-to-many relationship to &lt;a href=&quot;#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Отношение &amp;laquo;многие ко многим&amp;raquo; с &lt;a href=&quot;#django.contrib.auth.models.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1c116d2e532fe76c699eb71681c5f325c7f63e0" translate="yes" xml:space="preserve">
          <source>Many-to-many relationship to &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Отношение многие ко многим к &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70e5715c4c5ce8ff1bacfa3505a6793b1e2d573f" translate="yes" xml:space="preserve">
          <source>Many-to-many relationships</source>
          <target state="translated">Много-много отношений</target>
        </trans-unit>
        <trans-unit id="e425f695d48e438c36b7fc9a91b741584873db30" translate="yes" xml:space="preserve">
          <source>Many-to-many relationships can be queried using &lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;lookups across relationships&lt;/a&gt;:</source>
          <target state="translated">Отношения &amp;laquo;многие ко многим&amp;raquo; могут быть запрошены с помощью &lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;поиска по отношениям&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ba72c44b14ca6638dbe6a05d3bce34a9c08ab179" translate="yes" xml:space="preserve">
          <source>Many-to-one relationships</source>
          <target state="translated">многоликие отношения</target>
        </trans-unit>
        <trans-unit id="9f6d34f1802b32e0c12aec1e3e5d808e6f66d84a" translate="yes" xml:space="preserve">
          <source>ManyToMany-relations are exported for the model that binds them. For instance, the &lt;code&gt;auth.User&lt;/code&gt; model has such a relation to the &lt;code&gt;auth.Permission&lt;/code&gt; model:</source>
          <target state="translated">ManyToMany-отношения экспортируются для модели, которая их связывает. Например, модель &lt;code&gt;auth.User&lt;/code&gt; имеет такое отношение к модели &lt;code&gt;auth.Permission&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5cf3b65a416d6e52bab78d048e87986c34858f91" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.nodata_value&quot;&gt;&lt;code&gt;nodata_value&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Подключенные к &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.nodata_value&quot;&gt; &lt;code&gt;nodata_value&lt;/code&gt; &lt;/a&gt; атрибута</target>
        </trans-unit>
        <trans-unit id="b49cda891b56d96f95a118e0757e9217f5f1c480" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.driver&quot;&gt;&lt;code&gt;driver&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Сопоставлено с атрибутом &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.driver&quot;&gt; &lt;code&gt;driver&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="540288375fb7d6fa4ddcf2966b348db71d56849b" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Отображается на атрибут &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3690a5f473e1bd7016481bb98cfe5cabfcaea42d" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.origin&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Подключенный к &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.origin&quot;&gt; &lt;code&gt;origin&lt;/code&gt; &lt;/a&gt; атрибуту</target>
        </trans-unit>
        <trans-unit id="7d4ecb0587f3cc23b7f26c6f72881682d026d17e" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.scale&quot;&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Отображается на атрибут &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.scale&quot;&gt; &lt;code&gt;scale&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea921e1e0d479e3a85669a075cb1b1c3b19e6693" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.srid&quot;&gt;&lt;code&gt;srid&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Сопоставлено с атрибутом &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.srid&quot;&gt; &lt;code&gt;srid&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa20fe2b5818bbde36ad87034a1ecbf01e297f82" translate="yes" xml:space="preserve">
          <source>Mapped to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; attribute</source>
          <target state="translated">Соответствует атрибуту &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb343929f61bef17958fbce9c5add540ed87a54c" translate="yes" xml:space="preserve">
          <source>Mapping URLs to views</source>
          <target state="translated">Отображение URL-адресов для просмотров</target>
        </trans-unit>
        <trans-unit id="b59a41665f92ed102c9cc53a15e018811cad6724" translate="yes" xml:space="preserve">
          <source>Mapping query fields to model fields</source>
          <target state="translated">сопоставление полей запроса с полями модели</target>
        </trans-unit>
        <trans-unit id="790cecd9579b54cbb8881de7b21413ab38c2dd3f" translate="yes" xml:space="preserve">
          <source>Maps values for &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, and (optionally) &lt;code&gt;None&lt;/code&gt;, to the strings &amp;ldquo;yes&amp;rdquo;, &amp;ldquo;no&amp;rdquo;, &amp;ldquo;maybe&amp;rdquo;, or a custom mapping passed as a comma-separated list, and returns one of those strings according to the value:</source>
          <target state="translated">Сопоставляет значения &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;False&lt;/code&gt; и (необязательно) &lt;code&gt;None&lt;/code&gt; со строками &amp;laquo;да&amp;raquo;, &amp;laquo;нет&amp;raquo;, &amp;laquo;возможно&amp;raquo; или пользовательским отображением, переданным в виде списка через запятую, и возвращает одну из этих строк в соответствии со значением :</target>
        </trans-unit>
        <trans-unit id="7f00002bb6ad2eec19a19de8a03c7d6fad15adff" translate="yes" xml:space="preserve">
          <source>MariaDB</source>
          <target state="translated">MariaDB</target>
        </trans-unit>
        <trans-unit id="7d4168bc3f16d6fe180b1ac18cb68592a82d37fc" translate="yes" xml:space="preserve">
          <source>MariaDB &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-12981&quot;&gt;doesn&amp;rsquo;t support&lt;/a&gt; the &lt;code&gt;default&lt;/code&gt; parameter.</source>
          <target state="translated">MariaDB &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-12981&quot;&gt;не поддерживает&lt;/a&gt; параметр по &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a643fce146444011d7acb230ac298d723eb94e0" translate="yes" xml:space="preserve">
          <source>MariaDB and &lt;code&gt;default&lt;/code&gt;</source>
          <target state="translated">MariaDB и &lt;code&gt;default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60c8a756ff78d3971eda0305304654e702c293c5" translate="yes" xml:space="preserve">
          <source>MariaDB and Oracle users</source>
          <target state="translated">пользователи MariaDB и Oracle</target>
        </trans-unit>
        <trans-unit id="cf8e08dd5e412196ef8d596fa4013be4fa1691fa" translate="yes" xml:space="preserve">
          <source>MariaDB notes</source>
          <target state="translated">MariaDB отмечает</target>
        </trans-unit>
        <trans-unit id="f4d445e79364f1438052336aec87ad0818d1254b" translate="yes" xml:space="preserve">
          <source>MariaDB support was added.</source>
          <target state="translated">Добавлена поддержка MariaDB.</target>
        </trans-unit>
        <trans-unit id="22b9920d6f1372da8351b819c15404ef8d73e846" translate="yes" xml:space="preserve">
          <source>MariaDB, PostGIS, and SpatiaLite</source>
          <target state="translated">MariaDB,PostGIS и SpatiaLite</target>
        </trans-unit>
        <trans-unit id="aff977f722d98c1105c72000c74384e594446a96" translate="yes" xml:space="preserve">
          <source>Marking a filter &lt;code&gt;is_safe&lt;/code&gt; will coerce the filter&amp;rsquo;s return value to a string. If your filter should return a boolean or other non-string value, marking it &lt;code&gt;is_safe&lt;/code&gt; will probably have unintended consequences (such as converting a boolean False to the string &amp;lsquo;False&amp;rsquo;).</source>
          <target state="translated">Маркировка фильтра &lt;code&gt;is_safe&lt;/code&gt; приведёт возвращаемое значение фильтра к строке. Если ваш фильтр должен возвращать логическое или другое &lt;code&gt;is_safe&lt;/code&gt; значение, пометка it_safe , вероятно, будет иметь непредвиденные последствия (например, преобразование логического False в строку &amp;laquo;False&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="8f989987f22e747a6a20e1632167baf49bbb35ce" translate="yes" xml:space="preserve">
          <source>Marking middleware as unused</source>
          <target state="translated">Маркировка промежуточного программного обеспечения как неиспользуемого</target>
        </trans-unit>
        <trans-unit id="311345611b41ef66eb9c30d09d1355a38f149c13" translate="yes" xml:space="preserve">
          <source>Marking strings as no-op</source>
          <target state="translated">Маркировка строк как &quot;нет-нет-нет</target>
        </trans-unit>
        <trans-unit id="9ad57bd8a9f8ffb40bd3a39cd567898505d9a1a7" translate="yes" xml:space="preserve">
          <source>Marks a middleware as &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;asynchronous-only&lt;/a&gt;. Django will wrap it in an asynchronous event loop when it is called from the WSGI request path.</source>
          <target state="translated">Помечает промежуточное ПО как &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;только асинхронное&lt;/a&gt; . Django заключит его в асинхронный цикл обработки событий, когда он будет вызван из пути запроса WSGI.</target>
        </trans-unit>
        <trans-unit id="71a236994fd0ea6b37a7806b66f175d552b1f605" translate="yes" xml:space="preserve">
          <source>Marks a middleware as &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;sync and async compatible&lt;/a&gt;, this allows to avoid converting requests. You must implement detection of the current request type to use this decorator. See &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;asynchronous middleware documentation&lt;/a&gt; for details.</source>
          <target state="translated">Помечает промежуточное ПО как &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;совместимое с синхронизацией и асинхронностью&lt;/a&gt; , это позволяет избежать преобразования запросов. Чтобы использовать этот декоратор, необходимо реализовать определение текущего типа запроса. Подробнее см. В &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;документации&lt;/a&gt; по асинхронному промежуточному программному обеспечению .</target>
        </trans-unit>
        <trans-unit id="5099a30c2ca01220fb6248589e9583ae57c439f0" translate="yes" xml:space="preserve">
          <source>Marks a middleware as &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;synchronous-only&lt;/a&gt;. (The default in Django, but this allows you to future-proof if the default ever changes in a future release.)</source>
          <target state="translated">Помечает промежуточное ПО как &lt;a href=&quot;../topics/http/middleware#async-middleware&quot;&gt;только синхронное&lt;/a&gt; . (Значение по умолчанию в Django, но это позволяет вам рассчитывать на будущее, если значение по умолчанию когда-либо изменится в будущем выпуске.)</target>
        </trans-unit>
        <trans-unit id="47ef4478c5a91ad82e0866515b18c5b9ba23b7af" translate="yes" xml:space="preserve">
          <source>Marks a string as not requiring further HTML escaping prior to output. When autoescaping is off, this filter has no effect.</source>
          <target state="translated">Помечает строку как не требующую дальнейшего экранирования HTML перед выводом.Когда автоэскапирование выключено,этот фильтр не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="223d15dc9b30717101f8c092e0326f6bd5d6b0ed" translate="yes" xml:space="preserve">
          <source>Marks strings for translation but doesn&amp;rsquo;t translate them now. This can be used to store strings in global variables that should stay in the base language (because they might be used externally) and will be translated later.</source>
          <target state="translated">Отмечает строки для перевода, но не переводит их сейчас. Это может использоваться для хранения строк в глобальных переменных, которые должны оставаться на базовом языке (потому что они могут использоваться внешне) и будут переведены позже.</target>
        </trans-unit>
        <trans-unit id="c3ea63ecdea5904962549d0b05f6dc32f2807d9a" translate="yes" xml:space="preserve">
          <source>Marks the migrations up to the target one (following the rules above) as applied, but without actually running the SQL to change your database schema.</source>
          <target state="translated">Пометит миграции до целевой (следуя правилам,приведенным выше),как примененные,но без фактического запуска SQL для изменения схемы вашей базы данных.</target>
        </trans-unit>
        <trans-unit id="8d1f153abd2bfa9e625d24e6543581e4741ba55d" translate="yes" xml:space="preserve">
          <source>Marks the user as having no password set. This isn&amp;rsquo;t the same as having a blank string for a password. &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt; for this user will never return &lt;code&gt;True&lt;/code&gt;. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Помечает пользователя как не имеющий установленного пароля. Это не то же самое, что иметь пустую строку для пароля. &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt; для этого пользователя никогда не вернет &lt;code&gt;True&lt;/code&gt; . Не сохраняет объект &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5bd4c73c983b5ef20c68616eada1df033fb69691" translate="yes" xml:space="preserve">
          <source>Marks the user as having no password set. This isn&amp;rsquo;t the same as having a blank string for a password. &lt;a href=&quot;#django.contrib.auth.models.User.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt; for this user will never return &lt;code&gt;True&lt;/code&gt;. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Помечает пользователя как не имеющий установленного пароля. Это не то же самое, что иметь пустую строку для пароля. &lt;a href=&quot;#django.contrib.auth.models.User.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt; для этого пользователя никогда не вернет &lt;code&gt;True&lt;/code&gt; . Не сохраняет объект &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4d5b558d76aca4dd8323ea862d1817d75c36e4e" translate="yes" xml:space="preserve">
          <source>Matching is done by name. This means that you can use SQL&amp;rsquo;s &lt;code&gt;AS&lt;/code&gt; clauses to map fields in the query to model fields. So if you had some other table that had &lt;code&gt;Person&lt;/code&gt; data in it, you could easily map it into &lt;code&gt;Person&lt;/code&gt; instances:</source>
          <target state="translated">Сопоставление производится по имени. Это означает, что вы можете использовать предложения &lt;code&gt;AS&lt;/code&gt; SQL для сопоставления полей в запросе с полями модели. Поэтому, если у вас есть какая-то другая таблица, в которой есть данные &lt;code&gt;Person&lt;/code&gt; , вы можете легко сопоставить ее с экземплярами &lt;code&gt;Person&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1756bec08ab2e5a4f6f3ea1577c5665ca0e8a418" translate="yes" xml:space="preserve">
          <source>Math Functions</source>
          <target state="translated">Математические функции</target>
        </trans-unit>
        <trans-unit id="a9e1ee5cfc81eca21d13684541c3fe5125c8cf23" translate="yes" xml:space="preserve">
          <source>May be &lt;code&gt;'commit_on_success'&lt;/code&gt; (default) or &lt;code&gt;'autocommit'&lt;/code&gt;.</source>
          <target state="translated">Может быть &lt;code&gt;'commit_on_success'&lt;/code&gt; (по умолчанию) или &lt;code&gt;'autocommit'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7d5a77b56557cd02637c33e06076b81641a4ddd" translate="yes" xml:space="preserve">
          <source>May be set with a slice or tuple of (begin, end) feature ID&amp;rsquo;s to map from the data source. In other words, this keyword enables the user to selectively import a subset range of features in the geographic data source.</source>
          <target state="translated">Может быть установлен с помощью фрагмента или набора (начало, конец) идентификаторов объектов для сопоставления из источника данных. Другими словами, это ключевое слово позволяет пользователю выборочно импортировать подмножество объектов в источник географических данных.</target>
        </trans-unit>
        <trans-unit id="49efc4391faa05cc8087791bccf389e65b797277" translate="yes" xml:space="preserve">
          <source>Maybe. You&amp;rsquo;re better protected from DST-related bugs, but you can still shoot yourself in the foot by carelessly turning naive datetimes into aware datetimes, and vice-versa.</source>
          <target state="translated">Может быть. Вы лучше защищены от ошибок, связанных с DST, но вы все равно можете выстрелить себе в ногу, небрежно превратив наивные даты в осознанные, и наоборот.</target>
        </trans-unit>
        <trans-unit id="de10edfac7e76d9ec68df69f5a5a36c3464c6350" translate="yes" xml:space="preserve">
          <source>Measurement</source>
          <target state="translated">Measurement</target>
        </trans-unit>
        <trans-unit id="3c38753a72f7a69367f3f46f2f3bf8c4fb743041" translate="yes" xml:space="preserve">
          <source>Measurement API</source>
          <target state="translated">API измерения</target>
        </trans-unit>
        <trans-unit id="da9d9ce75f58bd008d16b191b24e7db519550a57" translate="yes" xml:space="preserve">
          <source>Measurement Objects</source>
          <target state="translated">Объекты измерения</target>
        </trans-unit>
        <trans-unit id="04a372dab2b1d8a942ab1b2063b60fdcc95c3fb8" translate="yes" xml:space="preserve">
          <source>Media files are uploaded by your users. They&amp;rsquo;re untrusted! Make sure your web server never attempts to interpret them. For instance, if a user uploads a &lt;code&gt;.php&lt;/code&gt; file, the web server shouldn&amp;rsquo;t execute it.</source>
          <target state="translated">Медиафайлы загружаются вашими пользователями. Они не заслуживают доверия! Убедитесь, что ваш веб-сервер никогда не пытается их интерпретировать. Например, если пользователь загружает файл &lt;code&gt;.php&lt;/code&gt; , веб-сервер не должен его выполнять.</target>
        </trans-unit>
        <trans-unit id="edc301f7283a9e45e85a8a8deab4551d236d86a4" translate="yes" xml:space="preserve">
          <source>Memcached</source>
          <target state="translated">Memcached</target>
        </trans-unit>
        <trans-unit id="3e4380f0ac1531148db9193c0aeaa68f7bbaf08d" translate="yes" xml:space="preserve">
          <source>Memcached backends pass the contents of &lt;a href=&quot;../ref/settings#std:setting-CACHES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; as keyword arguments to the client constructors, allowing for more advanced control of client behavior. For example usage, see below.</source>
          <target state="translated">Бэкэнды Memcached передают содержимое &lt;a href=&quot;../ref/settings#std:setting-CACHES-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; в&lt;/a&gt; качестве аргументов ключевых слов в конструкторы клиента, обеспечивая более расширенный контроль поведения клиента. Например, использование см. Ниже.</target>
        </trans-unit>
        <trans-unit id="fe2d49e9df412b554e332a39a2726c89c1318ae2" translate="yes" xml:space="preserve">
          <source>Memcached runs as a daemon and is allotted a specified amount of RAM. All it does is provide a fast interface for adding, retrieving and deleting data in the cache. All data is stored directly in memory, so there&amp;rsquo;s no overhead of database or filesystem usage.</source>
          <target state="translated">Memcached работает как демон и ему выделяется определенный объем оперативной памяти. Все, что он делает, это обеспечивает быстрый интерфейс для добавления, извлечения и удаления данных в кеше. Все данные хранятся непосредственно в памяти, поэтому нет необходимости в использовании базы данных или файловой системы.</target>
        </trans-unit>
        <trans-unit id="8adc1f5324b8d52b9b22d6eba639e747916c344c" translate="yes" xml:space="preserve">
          <source>Memcached, the most commonly-used production cache backend, does not allow cache keys longer than 250 characters or containing whitespace or control characters, and using such keys will cause an exception. To encourage cache-portable code and minimize unpleasant surprises, the other built-in cache backends issue a warning (&lt;code&gt;django.core.cache.backends.base.CacheKeyWarning&lt;/code&gt;) if a key is used that would cause an error on memcached.</source>
          <target state="translated">Memcached, наиболее часто используемый бэкэнд производственного кэша, не позволяет использовать ключи кэша длиннее 250 символов или содержать пробелы или управляющие символы, и использование таких ключей вызовет исключение. Чтобы поощрить переносимый кеш-код и минимизировать неприятные сюрпризы, другие встроенные &lt;code&gt;django.core.cache.backends.base.CacheKeyWarning&lt;/code&gt; кеша выдают предупреждение ( django.core.cache.backends.base.CacheKeyWarning ), если используется ключ, который может вызвать ошибку в memcached.</target>
        </trans-unit>
        <trans-unit id="7315f949ce30d24b2c84415a3ec8ab22d9946b98" translate="yes" xml:space="preserve">
          <source>Message files</source>
          <target state="translated">Файлы сообщений</target>
        </trans-unit>
        <trans-unit id="8a3f4ed084336620d7b21bf9a32d845342f802b8" translate="yes" xml:space="preserve">
          <source>Message levels</source>
          <target state="translated">Уровни сообщений</target>
        </trans-unit>
        <trans-unit id="3ab63989bf9a5038b658c5d4c375220ce4a1ad58" translate="yes" xml:space="preserve">
          <source>Message middleware</source>
          <target state="translated">Посредническое программное обеспечение</target>
        </trans-unit>
        <trans-unit id="889993ad5e8282135d84fbb43d72e81128bd864a" translate="yes" xml:space="preserve">
          <source>Message tags</source>
          <target state="translated">Теги сообщений</target>
        </trans-unit>
        <trans-unit id="129739eac18a8e97b6afdd53b93d70391d1ea0f8" translate="yes" xml:space="preserve">
          <source>Message tags are a string representation of the message level plus any extra tags that were added directly in the view (see &lt;a href=&quot;#adding-extra-message-tags&quot;&gt;Adding extra message tags&lt;/a&gt; below for more details). Tags are stored in a string and are separated by spaces. Typically, message tags are used as CSS classes to customize message style based on message type. By default, each level has a single tag that&amp;rsquo;s a lowercase version of its own constant:</source>
          <target state="translated">Теги сообщения представляют собой строковое представление уровня сообщения плюс любые дополнительные теги, которые были добавлены непосредственно в представление ( для получения дополнительной информации см. &lt;a href=&quot;#adding-extra-message-tags&quot;&gt;Добавление дополнительных тегов сообщения&lt;/a&gt; ниже). Теги хранятся в строке и разделяются пробелами. Как правило, теги сообщений используются в качестве классов CSS для настройки стиля сообщений в зависимости от типа сообщения. По умолчанию каждый уровень имеет один тег, который является строчной версией его собственной константы:</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="624996c17c837f1f6668cb6415dfad8e3d8884e1" translate="yes" xml:space="preserve">
          <source>Messages are comparable. That allows you to easily write tests:</source>
          <target state="translated">Сообщения сопоставимы.Это позволяет легко писать тесты:</target>
        </trans-unit>
        <trans-unit id="a181e64242c1481fec9677caa37392da3000ad86" translate="yes" xml:space="preserve">
          <source>Messages are implemented through a &lt;a href=&quot;../middleware&quot;&gt;middleware&lt;/a&gt; class and corresponding &lt;a href=&quot;../templates/api&quot;&gt;context processor&lt;/a&gt;.</source>
          <target state="translated">Сообщения реализуются через класс &lt;a href=&quot;../middleware&quot;&gt;промежуточного программного обеспечения&lt;/a&gt; и соответствующий &lt;a href=&quot;../templates/api&quot;&gt;контекстный процессор&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd219d05f6a7f3c767dd3fb3a161b3995ee9e9a7" translate="yes" xml:space="preserve">
          <source>Messages framework</source>
          <target state="translated">Рамки сообщений</target>
        </trans-unit>
        <trans-unit id="a7f63713d0d8953f6ed46c9ee2e3e3db8b179309" translate="yes" xml:space="preserve">
          <source>Messages levels are nothing more than integers, so you can define your own level constants and use them to create more customized user feedback, e.g.:</source>
          <target state="translated">Уровни сообщений-это не более чем целые числа,поэтому вы можете определить свои собственные константы уровня и использовать их для создания более настраиваемых пользовательских отзывов,например:</target>
        </trans-unit>
        <trans-unit id="fac15d4ec7ca50bd18d6e6dc1f5c0d39428a8296" translate="yes" xml:space="preserve">
          <source>Messages relating to the interaction of code with the database. For example, every application-level SQL statement executed by a request is logged at the &lt;code&gt;DEBUG&lt;/code&gt; level to this logger.</source>
          <target state="translated">Сообщения, касающиеся взаимодействия кода с базой данных. Например, каждый оператор SQL уровня приложения, выполняемый запросом, записывается в журнал на уровне &lt;code&gt;DEBUG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fe57b41a0a77a8786566d6da2db51c95d96ec43" translate="yes" xml:space="preserve">
          <source>Messages to this logger have the following extra context:</source>
          <target state="translated">Сообщения в этот регистратор имеют следующий дополнительный контекст:</target>
        </trans-unit>
        <trans-unit id="80427fec440b3b33fe3d42e609fafaf5d7908f0b" translate="yes" xml:space="preserve">
          <source>Meter, Metre</source>
          <target state="translated">Метр,метр</target>
        </trans-unit>
        <trans-unit id="6cc183aef428f6d3047aa1c84a2802cd7e666781" translate="yes" xml:space="preserve">
          <source>Method called prior to &lt;a href=&quot;#django.db.models.Field.get_db_prep_save&quot;&gt;&lt;code&gt;get_db_prep_save()&lt;/code&gt;&lt;/a&gt; to prepare the value before being saved (e.g. for &lt;a href=&quot;#django.db.models.DateField.auto_now&quot;&gt;&lt;code&gt;DateField.auto_now&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Метод, вызываемый до &lt;a href=&quot;#django.db.models.Field.get_db_prep_save&quot;&gt; &lt;code&gt;get_db_prep_save()&lt;/code&gt; &lt;/a&gt; для подготовки значения перед сохранением (например, для &lt;a href=&quot;#django.db.models.DateField.auto_now&quot;&gt; &lt;code&gt;DateField.auto_now&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c8237e11e2d1fac8d031550b39dcb305f6b132f9" translate="yes" xml:space="preserve">
          <source>Method-calling happens in the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;{% for %}&lt;/code&gt;&lt;/a&gt; loop: &lt;code&gt;question.choice_set.all&lt;/code&gt; is interpreted as the Python code &lt;code&gt;question.choice_set.all()&lt;/code&gt;, which returns an iterable of &lt;code&gt;Choice&lt;/code&gt; objects and is suitable for use in the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;{% for %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">Вызов метода происходит в цикле &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;{% for %}&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;question.choice_set.all&lt;/code&gt; интерпретируется как код Python &lt;code&gt;question.choice_set.all()&lt;/code&gt; , который возвращает итеративный объект &lt;code&gt;Choice&lt;/code&gt; и подходит для использования в &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;{% for %}&lt;/code&gt; &lt;/a&gt; тег.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="5110517bbb0ceecfc811636098d300a818bd2903" translate="yes" xml:space="preserve">
          <source>Methods are copied according to the following rules:</source>
          <target state="translated">Способы копируются в соответствии со следующими правилами:</target>
        </trans-unit>
        <trans-unit id="c29b6a782cb3466448adea0bbc4942ee85bf4b9c" translate="yes" xml:space="preserve">
          <source>Methods implementing a file-like interface for reading from an &lt;code&gt;HttpRequest&lt;/code&gt; instance. This makes it possible to consume an incoming request in a streaming fashion. A common use-case would be to process a big XML payload with an iterative parser without constructing a whole XML tree in memory.</source>
          <target state="translated">Методы, реализующие файловый интерфейс для чтения из экземпляра &lt;code&gt;HttpRequest&lt;/code&gt; . Это позволяет использовать входящий запрос в потоковом режиме. Распространенным вариантом использования может быть обработка большой полезной нагрузки XML с помощью итеративного синтаксического анализатора без создания целого дерева XML в памяти.</target>
        </trans-unit>
        <trans-unit id="7537f0d772e0cefae12a5778f293452376697984" translate="yes" xml:space="preserve">
          <source>Methods of &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="translated">Методы &lt;code&gt;BoundField&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7e863f4f1c1be0d2a8f2373d48bcee8d5acaf1b" translate="yes" xml:space="preserve">
          <source>Methods on &lt;code&gt;ContentType&lt;/code&gt; instances</source>
          <target state="translated">Методы в экземплярах &lt;code&gt;ContentType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d351ad385bfedf9cba6858a1efa5aa57dc9698a4" translate="yes" xml:space="preserve">
          <source>Methods that do not return &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">Методы, которые не возвращают &lt;code&gt;QuerySet&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="6fd9ae43b3e6c8f254de171e1a039e0f3d4c6292" translate="yes" xml:space="preserve">
          <source>Methods that it provides can be used to:</source>
          <target state="translated">Методы,которые он предоставляет,могут быть использованы:</target>
        </trans-unit>
        <trans-unit id="50171e2f44297086d6687ff051c7db91aa0d69c5" translate="yes" xml:space="preserve">
          <source>Methods that return new &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">Методы, которые возвращают новые &lt;code&gt;QuerySet&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="34b62d647fb1aa8ee6a32fabd2dd97436495a6e7" translate="yes" xml:space="preserve">
          <source>Methods with a &lt;code&gt;queryset_only&lt;/code&gt; attribute set to &lt;code&gt;False&lt;/code&gt; are always copied.</source>
          <target state="translated">Методы с атрибутом &lt;code&gt;queryset_only&lt;/code&gt; , установленным в &lt;code&gt;False&lt;/code&gt; , всегда копируются.</target>
        </trans-unit>
        <trans-unit id="b92a882f4327d805f08dc3ac7925cb366b015a77" translate="yes" xml:space="preserve">
          <source>Methods with a &lt;code&gt;queryset_only&lt;/code&gt; attribute set to &lt;code&gt;True&lt;/code&gt; are never copied.</source>
          <target state="translated">Методы с атрибутом &lt;code&gt;queryset_only&lt;/code&gt; , установленным в &lt;code&gt;True&lt;/code&gt; , никогда не копируются.</target>
        </trans-unit>
        <trans-unit id="415e8975c1cd5ee32623426c5ac3a1fbe4a66920" translate="yes" xml:space="preserve">
          <source>Micrometer, Micrometre</source>
          <target state="translated">микрометр,микрометр</target>
        </trans-unit>
        <trans-unit id="4ac4affa2d0ba5a96fdb55b5878f3a9560d8453e" translate="yes" xml:space="preserve">
          <source>Microseconds.</source>
          <target state="translated">Microseconds.</target>
        </trans-unit>
        <trans-unit id="8650e63c88329a081961555eda8eb1cef5d7d48c" translate="yes" xml:space="preserve">
          <source>Microsoft SQL Server</source>
          <target state="translated">Microsoft SQL Server</target>
        </trans-unit>
        <trans-unit id="eb8978ed84b5906ad4191a0b252828be64701bfa" translate="yes" xml:space="preserve">
          <source>Middleware</source>
          <target state="translated">Middleware</target>
        </trans-unit>
        <trans-unit id="013b752afcfb9baaa62063cabcd12f518b56607e" translate="yes" xml:space="preserve">
          <source>Middleware are run in reverse order during the response phase, which includes &lt;code&gt;process_template_response()&lt;/code&gt;.</source>
          <target state="translated">Промежуточное программное обеспечение запускается в обратном порядке во время фазы ответа, которая включает &lt;code&gt;process_template_response()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28bfdccf26e23c2219c9da6bf7f094e33a3e7c1d" translate="yes" xml:space="preserve">
          <source>Middleware can be built to support &lt;a href=&quot;http/middleware#async-middleware&quot;&gt;both sync and async&lt;/a&gt; contexts. Some of Django&amp;rsquo;s middleware is built like this, but not all. To see what middleware Django has to adapt, you can turn on debug logging for the &lt;code&gt;django.request&lt;/code&gt; logger and look for log messages about &lt;em&gt;&amp;ldquo;Synchronous middleware &amp;hellip; adapted&amp;rdquo;&lt;/em&gt;.</source>
          <target state="translated">Промежуточное ПО может быть создано для поддержки &lt;a href=&quot;http/middleware#async-middleware&quot;&gt;как синхронизирующего, так и асинхронного&lt;/a&gt; контекстов. Некоторое промежуточное программное обеспечение Django построено таким образом, но не все. Чтобы увидеть, какое промежуточное программное обеспечение Django необходимо адаптировать, вы можете включить ведение журнала отладки для регистратора &lt;code&gt;django.request&lt;/code&gt; и искать сообщения журнала о &lt;em&gt;&amp;laquo;синхронном промежуточном программном обеспечении&amp;hellip; адаптированном&amp;raquo;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="61de36f228910e5410cf91d320477c17afac3493" translate="yes" xml:space="preserve">
          <source>Middleware can either support only synchronous Python (the default), only asynchronous Python, or both. See &lt;a href=&quot;#async-middleware&quot;&gt;Asynchronous support&lt;/a&gt; for details of how to advertise what you support, and know what kind of request you are getting.</source>
          <target state="translated">ПО промежуточного слоя может поддерживать только синхронный Python (по умолчанию), только асинхронный Python или и то, и другое. См. Раздел &amp;laquo; &lt;a href=&quot;#async-middleware&quot;&gt;Асинхронная поддержка&amp;raquo;,&lt;/a&gt; чтобы узнать, как рекламировать то, что вы поддерживаете, и узнать, какой тип запроса вы получаете.</target>
        </trans-unit>
        <trans-unit id="c0fd4a19dba75def9d8c0d763f8181a885326acd" translate="yes" xml:space="preserve">
          <source>Middleware can live anywhere on your Python path.</source>
          <target state="translated">Среднее программное обеспечение может жить где угодно на вашем питонском пути.</target>
        </trans-unit>
        <trans-unit id="40a8812d6b3db5cc375256adc59ffac6ac735c17" translate="yes" xml:space="preserve">
          <source>Middleware can support any combination of synchronous and asynchronous requests. Django will adapt requests to fit the middleware&amp;rsquo;s requirements if it cannot support both, but at a performance penalty.</source>
          <target state="translated">Промежуточное ПО может поддерживать любую комбинацию синхронных и асинхронных запросов. Django адаптирует запросы в соответствии с требованиями промежуточного программного обеспечения, если оно не может поддерживать оба, но со снижением производительности.</target>
        </trans-unit>
        <trans-unit id="041ebd3d71ecfcfc34214d0415172c97361cd2c1" translate="yes" xml:space="preserve">
          <source>Middleware factories must accept a &lt;code&gt;get_response&lt;/code&gt; argument. You can also initialize some global state for the middleware. Keep in mind a couple of caveats:</source>
          <target state="translated">Фабрики промежуточного программного обеспечения должны принимать аргумент &lt;code&gt;get_response&lt;/code&gt; . Вы также можете инициализировать некоторое глобальное состояние для промежуточного программного обеспечения. Имейте в виду пару предостережений:</target>
        </trans-unit>
        <trans-unit id="becb94e67378bbdc666f92221c00fee5d9c7782a" translate="yes" xml:space="preserve">
          <source>Middleware for utilizing Web server provided authentication when enabled only on the login page. See &lt;a href=&quot;../howto/auth-remote-user#persistent-remote-user-middleware-howto&quot;&gt;Using REMOTE_USER on login pages only&lt;/a&gt; for usage details.</source>
          <target state="translated">Промежуточное программное обеспечение для использования веб-сервера обеспечивает аутентификацию при включении только на странице входа. См. &lt;a href=&quot;../howto/auth-remote-user#persistent-remote-user-middleware-howto&quot;&gt;Использование REMOTE_USER на страницах входа только&lt;/a&gt; для подробностей использования.</target>
        </trans-unit>
        <trans-unit id="273bb01c3c655949e84e50a76a64ca07929efe48" translate="yes" xml:space="preserve">
          <source>Middleware for utilizing Web server provided authentication. See &lt;a href=&quot;../howto/auth-remote-user&quot;&gt;Authentication using REMOTE_USER&lt;/a&gt; for usage details.</source>
          <target state="translated">Промежуточное программное обеспечение для использования веб-сервера обеспечивает аутентификацию. Посмотрите &lt;a href=&quot;../howto/auth-remote-user&quot;&gt;Аутентификацию, используя REMOTE_USER&lt;/a&gt; для деталей об использовании.</target>
        </trans-unit>
        <trans-unit id="c162271e592b254696ec9da70c5a639a0962dbfb" translate="yes" xml:space="preserve">
          <source>Middleware is a framework of hooks into Django&amp;rsquo;s request/response processing. It&amp;rsquo;s a light, low-level &amp;ldquo;plugin&amp;rdquo; system for globally altering Django&amp;rsquo;s input or output.</source>
          <target state="translated">Промежуточное программное обеспечение является основой для обработки запросов / ответов Django. Это легкая низкоуровневая &amp;laquo;плагинная&amp;raquo; система для глобальных изменений входа или выхода Django.</target>
        </trans-unit>
        <trans-unit id="5f879bb383b1e685c9b8aed3ac05060d2ce8fdde" translate="yes" xml:space="preserve">
          <source>Middleware order and layering</source>
          <target state="translated">Заказ и расслоение промежуточного программного обеспечения</target>
        </trans-unit>
        <trans-unit id="f978b6bdf37893405edce30440dd6cdeed90da10" translate="yes" xml:space="preserve">
          <source>Middleware ordering</source>
          <target state="translated">Заказ промежуточного программного обеспечения</target>
        </trans-unit>
        <trans-unit id="7a60d1acaad6e279a7e85ba440a4702e817dfa62" translate="yes" xml:space="preserve">
          <source>Migrating data between third-party apps</source>
          <target state="translated">Миграция данных между сторонними приложениями</target>
        </trans-unit>
        <trans-unit id="6104f9f7c588f7a77e0522afbc5dfe496325f1fa" translate="yes" xml:space="preserve">
          <source>Migration Operations</source>
          <target state="translated">Миграционные операции</target>
        </trans-unit>
        <trans-unit id="8e03381bda29b3c39bbf1a66cfd648f8b31e67c1" translate="yes" xml:space="preserve">
          <source>Migration files</source>
          <target state="translated">Миграционные файлы</target>
        </trans-unit>
        <trans-unit id="53ff3d249382d25863d2b7fb6623728e99a7bc35" translate="yes" xml:space="preserve">
          <source>Migration files are composed of one or more &lt;code&gt;Operation&lt;/code&gt;s, objects that declaratively record what the migration should do to your database.</source>
          <target state="translated">Файлы миграции состоят из одной или нескольких &lt;code&gt;Operation&lt;/code&gt; , объектов, которые декларативно записывают, что миграция должна делать с вашей базой данных.</target>
        </trans-unit>
        <trans-unit id="c25bf8db0829f899a4a501088ef01329564b4b8f" translate="yes" xml:space="preserve">
          <source>Migration guide</source>
          <target state="translated">Миграционный справочник</target>
        </trans-unit>
        <trans-unit id="7e2da04ce43cf92a7b18834d64966f83c65ad531" translate="yes" xml:space="preserve">
          <source>Migration operation for adding extensions</source>
          <target state="translated">Миграционная операция для добавления расширений</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="f2a9aa05174d5ea271caefdf9a694cb35808cba9" translate="yes" xml:space="preserve">
          <source>Migrations are Django&amp;rsquo;s way of propagating changes you make to your models (adding a field, deleting a model, etc.) into your database schema. They&amp;rsquo;re designed to be mostly automatic, but you&amp;rsquo;ll need to know when to make migrations, when to run them, and the common problems you might run into.</source>
          <target state="translated">Миграции - это способ Django распространять изменения, которые вы вносите в свои модели (добавление поля, удаление модели и т. Д.) В схему базы данных. Они разработаны, чтобы быть в основном автоматически, но вам нужно знать, когда выполнять миграцию, когда запускать их, и общие проблемы, с которыми вы можете столкнуться.</target>
        </trans-unit>
        <trans-unit id="5860dbdc436c899604f2a6b5c077a545ec4c3e15" translate="yes" xml:space="preserve">
          <source>Migrations are Python files containing the old definitions of your models - thus, to write them, Django must take the current state of your models and serialize them out into a file.</source>
          <target state="translated">Миграции-это файлы Python,содержащие старые определения ваших моделей-таким образом,чтобы записать их,Django должен взять текущее состояние ваших моделей и сериализовать их в файл.</target>
        </trans-unit>
        <trans-unit id="4201b97e35b606bb8ab03e0bf508dc53754b71ae" translate="yes" xml:space="preserve">
          <source>Migrations are how Django stores changes to your models (and thus your database schema) - they&amp;rsquo;re files on disk. You can read the migration for your new model if you like; it&amp;rsquo;s the file &lt;code&gt;polls/migrations/0001_initial.py&lt;/code&gt;. Don&amp;rsquo;t worry, you&amp;rsquo;re not expected to read them every time Django makes one, but they&amp;rsquo;re designed to be human-editable in case you want to manually tweak how Django changes things.</source>
          <target state="translated">Миграции - это то, как Django хранит изменения в ваших моделях (и, следовательно, в вашей схеме базы данных) - это файлы на диске. Вы можете прочитать миграцию для своей новой модели, если хотите; это файл &lt;code&gt;polls/migrations/0001_initial.py&lt;/code&gt; . Не волнуйтесь, от вас не ожидают, что вы будете читать их каждый раз, когда Django делает это, но они предназначены для редактирования человеком, если вы хотите вручную настроить то, как Django меняет вещи.</target>
        </trans-unit>
        <trans-unit id="8520b8c8572a999f56ebaca25b392b1e5a7fd768" translate="yes" xml:space="preserve">
          <source>Migrations are stored as an on-disk format, referred to here as &amp;ldquo;migration files&amp;rdquo;. These files are actually normal Python files with an agreed-upon object layout, written in a declarative style.</source>
          <target state="translated">Миграции хранятся в формате на диске, называемом здесь &amp;laquo;файлами миграции&amp;raquo;. Эти файлы на самом деле являются обычными файлами Python с согласованным макетом объекта, написанным в декларативном стиле.</target>
        </trans-unit>
        <trans-unit id="2a332c317bf1d0e60fbc32123e8677f7cc70c2ae" translate="yes" xml:space="preserve">
          <source>Migrations are supported on all backends that Django ships with, as well as any third-party backends if they have programmed in support for schema alteration (done via the &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt; class).</source>
          <target state="translated">Миграции поддерживаются во всех бэкэндах, с которыми поставляется Django, а также во всех сторонних бэкэндах, если они запрограммированы для поддержки изменения схемы (выполняется через класс &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d8a210ab1a3d79accd51ed6fcf26ac6e586f421a" translate="yes" xml:space="preserve">
          <source>Migrations are very powerful and let you change your models over time, as you develop your project, without the need to delete your database or tables and make new ones - it specializes in upgrading your database live, without losing data. We&amp;rsquo;ll cover them in more depth in a later part of the tutorial, but for now, remember the three-step guide to making model changes:</source>
          <target state="translated">Миграции очень эффективны и позволяют вам со временем менять свои модели по мере разработки проекта без необходимости удалять вашу базу данных или таблицы и создавать новые - она ​​специализируется на обновлении вашей базы данных в реальном времени, без потери данных. Мы рассмотрим их более подробно в следующей части руководства, но сейчас вспомним трехэтапное руководство по внесению изменений в модель:</target>
        </trans-unit>
        <trans-unit id="41654abea0665f9a7a61031904f82652ca108fd1" translate="yes" xml:space="preserve">
          <source>Migrations can be reversed with &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; by passing the number of the previous migration. For example, to reverse migration &lt;code&gt;books.0003&lt;/code&gt;:</source>
          <target state="translated">Миграции можно отменить с помощью &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; , передав номер предыдущей миграции. Например, для обратной миграции &lt;code&gt;books.0003&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="287dd3417d62ad864c57a1c97b22ab37b12724d5" translate="yes" xml:space="preserve">
          <source>Migrations that add unique fields</source>
          <target state="translated">Миграции,которые добавляют уникальные поля</target>
        </trans-unit>
        <trans-unit id="ee3e9d3540e1e45a2df1c00240d8e8d4a4deb51c" translate="yes" xml:space="preserve">
          <source>Migrations that alter data are usually called &amp;ldquo;data migrations&amp;rdquo;; they&amp;rsquo;re best written as separate migrations, sitting alongside your schema migrations.</source>
          <target state="translated">Миграции, которые изменяют данные, обычно называют &amp;laquo;миграциями данных&amp;raquo;; лучше всего их записывать как отдельные миграции, сидя рядом с миграциями вашей схемы.</target>
        </trans-unit>
        <trans-unit id="5ec5bf73e34a683f1006273ac17e9ff09e9d9e72" translate="yes" xml:space="preserve">
          <source>Migrations will run the same way on the same dataset and produce consistent results, meaning that what you see in development and staging is, under the same circumstances, exactly what will happen in production.</source>
          <target state="translated">Миграции будут выполняться одинаково на одном и том же наборе данных и давать последовательные результаты,то есть то,что вы видите в разработке и постановке,при одних и тех же обстоятельствах-это именно то,что будет происходить в производстве.</target>
        </trans-unit>
        <trans-unit id="2eb4f2a30749a0e17e31104b3bab726aafe81cf3" translate="yes" xml:space="preserve">
          <source>Mile</source>
          <target state="translated">Mile</target>
        </trans-unit>
        <trans-unit id="938df1db624a12e5f3794fda79717eccaea7b65b" translate="yes" xml:space="preserve">
          <source>Millimetre, Millimeter</source>
          <target state="translated">миллиметр,миллиметр</target>
        </trans-unit>
        <trans-unit id="294882601354ee55d0273a6e0801814fd33c87c2" translate="yes" xml:space="preserve">
          <source>Mind your charset</source>
          <target state="translated">Следите за своим шарсетом</target>
        </trans-unit>
        <trans-unit id="a3fc900f874bc71a36d5a756225bfdc1f04f6842" translate="yes" xml:space="preserve">
          <source>Minutes is the smallest unit used, and &amp;ldquo;0 minutes&amp;rdquo; will be returned for any date that is in the future relative to the comparison point.</source>
          <target state="translated">Минуты - это наименьшая единица измерения, и &amp;laquo;0 минут&amp;raquo; будут возвращаться для любой даты в будущем относительно точки сравнения.</target>
        </trans-unit>
        <trans-unit id="9f34801db80740b6f10ab3922d189b3912dbf6f0" translate="yes" xml:space="preserve">
          <source>Minutes is the smallest unit used, and &amp;ldquo;0 minutes&amp;rdquo; will be returned for any date that is in the past relative to the comparison point.</source>
          <target state="translated">Минуты - это наименьшая используемая единица, и &amp;laquo;0 минут&amp;raquo; будет возвращено для любой прошедшей даты относительно точки сравнения.</target>
        </trans-unit>
        <trans-unit id="8ed20376662d49d565aa06cdaa83fc71ecbc93eb" translate="yes" xml:space="preserve">
          <source>Minutes.</source>
          <target state="translated">Minutes.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="881da705478e54a3227ce93b7e1330829ae0e155" translate="yes" xml:space="preserve">
          <source>Missing context variables are logged as &lt;code&gt;DEBUG&lt;/code&gt; messages.</source>
          <target state="translated">Отсутствующие контекстные переменные записываются как сообщения &lt;code&gt;DEBUG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6814e874673f049fff670e46ee2d5ebe0602c10a" translate="yes" xml:space="preserve">
          <source>Mitre ratio limit (&lt;code&gt;mitre_limit&lt;/code&gt;) only affects mitered join style.</source>
          <target state="translated">Ограничение отношения &lt;code&gt;mitre_limit&lt;/code&gt; ( mitre_limit ) влияет только на стиль митренного соединения.</target>
        </trans-unit>
        <trans-unit id="dcb555521dabc0a453c76cc4ab7c56dcedf3418e" translate="yes" xml:space="preserve">
          <source>Mixing HTTP and HTTPS on the same site is discouraged, therefore &lt;a href=&quot;#django.http.HttpRequest.build_absolute_uri&quot;&gt;&lt;code&gt;build_absolute_uri()&lt;/code&gt;&lt;/a&gt; will always generate an absolute URI with the same scheme the current request has. If you need to redirect users to HTTPS, it&amp;rsquo;s best to let your Web server redirect all HTTP traffic to HTTPS.</source>
          <target state="translated">Смешивать HTTP и HTTPS на одном сайте не рекомендуется, поэтому &lt;a href=&quot;#django.http.HttpRequest.build_absolute_uri&quot;&gt; &lt;code&gt;build_absolute_uri()&lt;/code&gt; &lt;/a&gt; всегда будет генерировать абсолютный URI с той же схемой, что и текущий запрос. Если вам нужно перенаправить пользователей на HTTPS, лучше всего разрешить веб-серверу перенаправлять весь HTTP-трафик на HTTPS.</target>
        </trans-unit>
        <trans-unit id="6405571c37c55f3908e016d6f0d1bc7dd1ad7b90" translate="yes" xml:space="preserve">
          <source>Mixins are a form of multiple inheritance where behaviors and attributes of multiple parent classes can be combined.</source>
          <target state="translated">Смесины являются формой множественного наследования,где поведение и атрибуты нескольких классов родителей могут быть объединены.</target>
        </trans-unit>
        <trans-unit id="7faff22844ff4aa0e265d825accaee88c80b838d" translate="yes" xml:space="preserve">
          <source>Mixins are an excellent way of reusing code across multiple classes, but they come with some cost. The more your code is scattered among mixins, the harder it will be to read a child class and know what exactly it is doing, and the harder it will be to know which methods from which mixins to override if you are subclassing something that has a deep inheritance tree.</source>
          <target state="translated">Смесины-это отличный способ повторного использования кода в нескольких классах,но они имеют некоторую стоимость.Чем больше ваш код разбросан по микшинам,тем труднее будет прочитать дочерний класс и узнать,что именно он делает,и тем труднее будет узнать,какие методы из каких миксов переопределить,если вы относите к подклассам что-то,что имеет глубокое дерево наследования.</target>
        </trans-unit>
        <trans-unit id="8b491ee73979a719bb1af9d3247e0a61ac5e7319" translate="yes" xml:space="preserve">
          <source>Model &lt;code&gt;Meta&lt;/code&gt; options</source>
          <target state="translated">Модель &lt;code&gt;Meta&lt;/code&gt; опций</target>
        </trans-unit>
        <trans-unit id="bfdb5bfd735f8228097410fff85a12d88904e922" translate="yes" xml:space="preserve">
          <source>Model &lt;code&gt;_meta&lt;/code&gt; API</source>
          <target state="translated">Модель &lt;code&gt;_meta&lt;/code&gt; API</target>
        </trans-unit>
        <trans-unit id="cec2b6199d9a2dcabb152e3ac5aa91edeb898132" translate="yes" xml:space="preserve">
          <source>Model API reference. For introductory material, see &lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;.</source>
          <target state="translated">Ссылка на модель API. Для вводного материала, см. &lt;a href=&quot;../../topics/db/models&quot;&gt;Модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bf86752979128e4676b84c447ce0cf15b2b37d6" translate="yes" xml:space="preserve">
          <source>Model Form API reference. For introductory material about model forms, see the &lt;a href=&quot;../../topics/forms/modelforms&quot;&gt;Creating forms from models&lt;/a&gt; topic guide.</source>
          <target state="translated">Справочник по API формы модели. Вводный материал о модельных формах см. В руководстве по теме &amp;laquo; &lt;a href=&quot;../../topics/forms/modelforms&quot;&gt;Создание форм из моделей&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c96d990f2ccf84f92cf27b02cad319aaaf78f8b" translate="yes" xml:space="preserve">
          <source>Model Form Functions</source>
          <target state="translated">Форма модели Функции</target>
        </trans-unit>
        <trans-unit id="43751733528e91e6a81ee1390944c2f4caa1db81" translate="yes" xml:space="preserve">
          <source>Model Meta options</source>
          <target state="translated">Опции Модели Мета</target>
        </trans-unit>
        <trans-unit id="cda29083574ba4f14bce85088566ec29f2d87d35" translate="yes" xml:space="preserve">
          <source>Model _meta API</source>
          <target state="translated">Модель _API цель</target>
        </trans-unit>
        <trans-unit id="28ca529d99e4855dd276594af7db79215340645f" translate="yes" xml:space="preserve">
          <source>Model attributes</source>
          <target state="translated">Атрибуты модели</target>
        </trans-unit>
        <trans-unit id="15ac726910ce828d6f749b66392ad113e9e02cc8" translate="yes" xml:space="preserve">
          <source>Model class reference</source>
          <target state="translated">Ссылка на класс модели</target>
        </trans-unit>
        <trans-unit id="37287d65959cefe51226e772fa03bd4238e3e0c1" translate="yes" xml:space="preserve">
          <source>Model field</source>
          <target state="translated">Модельное поле</target>
        </trans-unit>
        <trans-unit id="41719e961e289e645a51ec9bdd2cad757b697d54" translate="yes" xml:space="preserve">
          <source>Model field reference</source>
          <target state="translated">Ссылка на модель поля</target>
        </trans-unit>
        <trans-unit id="695921f5cbf66d3a0c35cce9afebbff6926a0687" translate="yes" xml:space="preserve">
          <source>Model fields</source>
          <target state="translated">Поля модели</target>
        </trans-unit>
        <trans-unit id="d56e51d2d60a86a3949592b2c8a12b4b1ebf5d14" translate="yes" xml:space="preserve">
          <source>Model fields and relationships &lt;code&gt;verbose_name&lt;/code&gt; and &lt;code&gt;help_text&lt;/code&gt; option values</source>
          <target state="translated">Поля модели и отношения &lt;code&gt;help_text&lt;/code&gt; параметров &lt;code&gt;verbose_name&lt;/code&gt; и help_text</target>
        </trans-unit>
        <trans-unit id="1e80f8624b932b0e8e91e5056ff5d83c4a905b6b" translate="yes" xml:space="preserve">
          <source>Model form views provide a &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt;&lt;code&gt;form_valid()&lt;/code&gt;&lt;/a&gt; implementation that saves the model automatically. You can override this if you have any special requirements; see below for examples.</source>
          <target state="translated">&lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt; &lt;code&gt;form_valid()&lt;/code&gt; &lt;/a&gt; формы модели предоставляют реализацию form_valid (), которая автоматически сохраняет модель. Вы можете изменить это, если у вас есть особые требования; см. ниже примеры.</target>
        </trans-unit>
        <trans-unit id="7a1d7da0b3927cb03dafa5eee91a571920018939" translate="yes" xml:space="preserve">
          <source>Model forms</source>
          <target state="translated">Формы моделей</target>
        </trans-unit>
        <trans-unit id="d66e24ec33a2b3c68df3f08c48b5b1e196b500a3" translate="yes" xml:space="preserve">
          <source>Model formsets</source>
          <target state="translated">Формы моделей</target>
        </trans-unit>
        <trans-unit id="8378c1c9f92338fe290a10e3674d26e5ac280291" translate="yes" xml:space="preserve">
          <source>Model formsets are very similar to formsets. Let&amp;rsquo;s say we want to present a formset to edit &lt;code&gt;Author&lt;/code&gt; model instances:</source>
          <target state="translated">Модельные наборы очень похожи на наборы форм. Допустим, мы хотим представить набор форм для редактирования экземпляров модели &lt;code&gt;Author&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="65c8939e1430f30633a07f17d075ed74776ac5e3" translate="yes" xml:space="preserve">
          <source>Model formsets validate unique fields in a case-sensitive manner. Thus when using a case-insensitive collation, a formset with unique field values that differ only by case will pass validation, but upon calling &lt;code&gt;save()&lt;/code&gt;, an &lt;code&gt;IntegrityError&lt;/code&gt; will be raised.</source>
          <target state="translated">Модельные наборы форм проверяют уникальные поля с учетом регистра. Таким образом, при использовании сортировки без учета регистра форма набора с уникальными значениями полей, которые отличаются только регистром, пройдет проверку, но при вызове &lt;code&gt;save()&lt;/code&gt; будет &lt;code&gt;IntegrityError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd41371e5246330c123f4f022d722358234894fa" translate="yes" xml:space="preserve">
          <source>Model index reference</source>
          <target state="translated">Ссылка на индекс модели</target>
        </trans-unit>
        <trans-unit id="6960b6acac76077e50017099fe2ef244227d2a7b" translate="yes" xml:space="preserve">
          <source>Model inheritance</source>
          <target state="translated">Наследование модели</target>
        </trans-unit>
        <trans-unit id="5b71c0d1a57d50595ab71717a70ae2e080828c49" translate="yes" xml:space="preserve">
          <source>Model inheritance in Django works almost identically to the way normal class inheritance works in Python, but the basics at the beginning of the page should still be followed. That means the base class should subclass &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;django.db.models.Model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Наследование моделей в Django работает почти так же, как обычное наследование классов в Python, но основы в начале страницы все же должны соблюдаться. Это означает, что базовый класс должен быть подклассом &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;django.db.models.Model&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ca38e74d8be1b734a75b8de59f840b8eac71446" translate="yes" xml:space="preserve">
          <source>Model instance reference</source>
          <target state="translated">Ссылка на образец модели</target>
        </trans-unit>
        <trans-unit id="5b0f552413c0fc0955ae8f0d43a9dce0382f6758" translate="yes" xml:space="preserve">
          <source>Model managers</source>
          <target state="translated">Модельные менеджеры</target>
        </trans-unit>
        <trans-unit id="ee0c8a95a9f103b378fe4743340f1323f96c496a" translate="yes" xml:space="preserve">
          <source>Model managers are inherited from abstract base classes. Overriding an inherited field which is referenced by an inherited &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; may cause subtle bugs. See &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;custom managers and model inheritance&lt;/a&gt;.</source>
          <target state="translated">Менеджеры моделей наследуются от абстрактных базовых классов. Переопределение унаследованного поля, на которое ссылается унаследованный &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; может вызвать незначительные ошибки. Смотрите &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;кастомные менеджеры и модели наследования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7ef284a8b1cde33fda80d5b952f2b5d4500f805" translate="yes" xml:space="preserve">
          <source>Model metadata is &amp;ldquo;anything that&amp;rsquo;s not a field&amp;rdquo;, such as ordering options (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt;), database table name (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt;), or human-readable singular and plural names (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt;&lt;code&gt;verbose_name_plural&lt;/code&gt;&lt;/a&gt;). None are required, and adding &lt;code&gt;class
Meta&lt;/code&gt; to a model is completely optional.</source>
          <target state="translated">Метаданные модели - это &amp;laquo;все, что не является полем&amp;raquo;, например параметры упорядочения ( &lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt; ), имя таблицы базы данных ( &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt; ) или понятные человеку имена в единственном и множественном числе ( &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt; &lt;code&gt;verbose_name_plural&lt;/code&gt; &lt;/a&gt; ). Ничего не требуется, и добавление &lt;code&gt;class Meta&lt;/code&gt; к модели совершенно необязательно.</target>
        </trans-unit>
        <trans-unit id="da0c31f079fa44ab9d3bf1cf67f70d075de29d6d" translate="yes" xml:space="preserve">
          <source>Model methods</source>
          <target state="translated">Модельные методы</target>
        </trans-unit>
        <trans-unit id="e21aa040365d9fd0e90458c9cdf44ab96ac4b61f" translate="yes" xml:space="preserve">
          <source>Model methods &lt;code&gt;short_description&lt;/code&gt; attribute values</source>
          <target state="translated">Методы &lt;code&gt;short_description&lt;/code&gt; значений атрибутов short_description</target>
        </trans-unit>
        <trans-unit id="cfc2c1b4808a8c6c174bac6b735cf6d4817b2770" translate="yes" xml:space="preserve">
          <source>Model reference</source>
          <target state="translated">Ссылка на модель</target>
        </trans-unit>
        <trans-unit id="e901998535b4b4548a823fe6e8dff9a51d7e087d" translate="yes" xml:space="preserve">
          <source>Model signals</source>
          <target state="translated">Модельные сигналы</target>
        </trans-unit>
        <trans-unit id="c8bfdb89301aaa9bc29391e7c013fd0445caa5ab" translate="yes" xml:space="preserve">
          <source>Model signals &lt;code&gt;sender&lt;/code&gt; model can be lazily referenced when connecting a receiver by specifying its full application label. For example, an &lt;code&gt;Question&lt;/code&gt; model defined in the &lt;code&gt;polls&lt;/code&gt; application could be referenced as &lt;code&gt;'polls.Question'&lt;/code&gt;. This sort of reference can be quite handy when dealing with circular import dependencies and swappable models.</source>
          <target state="translated">Модель сигналов &lt;code&gt;sender&lt;/code&gt; модели можно лениво ссылаться при подключении приемника, указав его полную метку приложения. Например, модель &lt;code&gt;Question&lt;/code&gt; определенная в приложении &lt;code&gt;polls&lt;/code&gt; , может называться &lt;code&gt;'polls.Question'&lt;/code&gt; . Такого рода ссылки могут быть очень полезны при работе с циклическими зависимостями импорта и сменными моделями.</target>
        </trans-unit>
        <trans-unit id="165513e8bf709c70b23fa24d2ae33a838ec202dc" translate="yes" xml:space="preserve">
          <source>Model table names</source>
          <target state="translated">Названия таблиц модели</target>
        </trans-unit>
        <trans-unit id="54a980d3853518b4411e7a3b2ddb629ed67ce75d" translate="yes" xml:space="preserve">
          <source>Model verbose names values</source>
          <target state="translated">Значения моделей с многословными названиями</target>
        </trans-unit>
        <trans-unit id="3dc8c7b4713b18469124c44661e6c1bc2f64d7e7" translate="yes" xml:space="preserve">
          <source>ModelForm factory function</source>
          <target state="translated">ModelForm заводская функция</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="1f5b77557908456acc92fa188a7dd4804d6625a9" translate="yes" xml:space="preserve">
          <source>Models across files</source>
          <target state="translated">Модели в разных файлах</target>
        </trans-unit>
        <trans-unit id="28356323a61c86746a499dd28b297834e5993733" translate="yes" xml:space="preserve">
          <source>Models and &lt;code&gt;request.user&lt;/code&gt;</source>
          <target state="translated">Модели и &lt;code&gt;request.user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f50e5bec2539d667d25b642e592d0b97dcede69d" translate="yes" xml:space="preserve">
          <source>Models and Forms</source>
          <target state="translated">Модели и формы</target>
        </trans-unit>
        <trans-unit id="4a49aecaa0df41bb8d712681740aeb1f36c1fc1b" translate="yes" xml:space="preserve">
          <source>Models and databases</source>
          <target state="translated">Модели и базы данных</target>
        </trans-unit>
        <trans-unit id="f9d52954ae89d4a9e2174f5b96bd02ccd7c226bb" translate="yes" xml:space="preserve">
          <source>Models are created for foreign tables.</source>
          <target state="translated">Модели создаются для зарубежных столов.</target>
        </trans-unit>
        <trans-unit id="005e6f010a367db7b6295c852fb0fac610e1e07a" translate="yes" xml:space="preserve">
          <source>Models are created for materialized views if &lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt;&lt;code&gt;--include-views&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Модели создаются для материализованных представлений, если используется &lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt; &lt;code&gt;--include-views&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71b4110d21468008c8e0a0e33f9599a8d37cfc02" translate="yes" xml:space="preserve">
          <source>Models are created for partition tables if &lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt;&lt;code&gt;--include-partitions&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Модели создаются для таблиц разделов, если используется &lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt; &lt;code&gt;--include-partitions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de1c8f41efbb309a8f500003679e08088e02a2b4" translate="yes" xml:space="preserve">
          <source>Modern browsers don&amp;rsquo;t honor &lt;code&gt;X-XSS-Protection&lt;/code&gt; HTTP header anymore. Although the setting offers little practical benefit, you may still want to set the header if you support older browsers.</source>
          <target state="translated">Современные браузеры больше не &lt;code&gt;X-XSS-Protection&lt;/code&gt; HTTP-заголовок X-XSS-Protection . Хотя этот параметр дает мало практического преимущества, вы все равно можете установить заголовок, если вы поддерживаете старые браузеры.</target>
        </trans-unit>
        <trans-unit id="e3034007e7d3292d4b30af33ea10b4ff6560349a" translate="yes" xml:space="preserve">
          <source>Modern browsers honor the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&quot;&gt;X-Frame-Options&lt;/a&gt; HTTP header that indicates whether or not a resource is allowed to load within a frame or iframe. If the response contains the header with a value of &lt;code&gt;SAMEORIGIN&lt;/code&gt; then the browser will only load the resource in a frame if the request originated from the same site. If the header is set to &lt;code&gt;DENY&lt;/code&gt; then the browser will block the resource from loading in a frame no matter which site made the request.</source>
          <target state="translated">Современные браузеры используют HTTP-заголовок &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&quot;&gt;X-Frame-Options,&lt;/a&gt; который указывает, разрешено ли загружать ресурс в пределах фрейма или фрейма. Если ответ содержит заголовок со значением &lt;code&gt;SAMEORIGIN&lt;/code&gt; , то браузер будет загружать ресурс только во фрейме, если запрос исходил с того же сайта. Если для заголовка установлено значение &lt;code&gt;DENY&lt;/code&gt; , браузер будет блокировать загрузку ресурса во фрейме независимо от того, какой сайт сделал запрос.</target>
        </trans-unit>
        <trans-unit id="8c3dd67323c825d3247a42c118aeed74da038214" translate="yes" xml:space="preserve">
          <source>Modern browsers provide a more secure default policy for the &lt;code&gt;SameSite&lt;/code&gt; flag and will assume &lt;code&gt;Lax&lt;/code&gt; for cookies without an explicit value set.</source>
          <target state="translated">Современные браузеры предоставляют более безопасную политику по умолчанию для флага &lt;code&gt;SameSite&lt;/code&gt; и предполагают использование &lt;code&gt;Lax&lt;/code&gt; для файлов cookie без явного задания значения.</target>
        </trans-unit>
        <trans-unit id="61e67113000137e6e326a81f0fcb1e0dadbbee68" translate="yes" xml:space="preserve">
          <source>Modify &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; to list &lt;code&gt;Argon2PasswordHasher&lt;/code&gt; first. That is, in your settings file, you&amp;rsquo;d put:</source>
          <target state="translated">Измените &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; ,&lt;/a&gt; чтобы сначала перечислить &lt;code&gt;Argon2PasswordHasher&lt;/code&gt; . То есть в вашем файле настроек вы бы добавили:</target>
        </trans-unit>
        <trans-unit id="7eae86d823b9275ab9b9bba0c0701ec36c9bc076" translate="yes" xml:space="preserve">
          <source>Modify &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; to list &lt;code&gt;BCryptSHA256PasswordHasher&lt;/code&gt; first. That is, in your settings file, you&amp;rsquo;d put:</source>
          <target state="translated">Измените &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; ,&lt;/a&gt; чтобы сначала перечислить &lt;code&gt;BCryptSHA256PasswordHasher&lt;/code&gt; . То есть в вашем файле настроек вы бы добавили:</target>
        </trans-unit>
        <trans-unit id="8c82d310179969bace38749c982ea817a33948da" translate="yes" xml:space="preserve">
          <source>Modify Windows environment</source>
          <target state="translated">Модифицировать среду Windows</target>
        </trans-unit>
        <trans-unit id="101a18a8e247790ce8a0355c2bad81d18bc06a10" translate="yes" xml:space="preserve">
          <source>Modifying a manager&amp;rsquo;s initial &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">Изменение начального &lt;code&gt;QuerySet&lt;/code&gt; менеджера</target>
        </trans-unit>
        <trans-unit id="b3a3cd384e10d2a50b6cfc40c58749ddd9ddb377" translate="yes" xml:space="preserve">
          <source>Modifying the user libraries can affect other Python software on your system.</source>
          <target state="translated">Изменение пользовательских библиотек может повлиять на другие программы Python в вашей системе.</target>
        </trans-unit>
        <trans-unit id="6188e9bec1a9bf83d8f692aed7153e3b5e7d1f67" translate="yes" xml:space="preserve">
          <source>Modifying upload handlers on the fly</source>
          <target state="translated">Модифицирование обработчиков загрузки на лету</target>
        </trans-unit>
        <trans-unit id="79bf8ae756f6957bd6a600e041cf7b0f01e97d7c" translate="yes" xml:space="preserve">
          <source>Module containing the models, e.g. &lt;code&gt;&amp;lt;module 'django.contrib.admin.models'
from 'django/contrib/admin/models.py'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Модуль, содержащий модели, например, &lt;code&gt;&amp;lt;module 'django.contrib.admin.models' from 'django/contrib/admin/models.py'&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5914d9d522831d2cbcc08992929a1fa0fffd13f4" translate="yes" xml:space="preserve">
          <source>Month abbreviation in Associated Press style. Proprietary extension.</source>
          <target state="translated">Месячная аббревиатура в стиле Associated Press.Собственное расширение.</target>
        </trans-unit>
        <trans-unit id="1547c51f374801edb89bd01a886d7df6c59157e7" translate="yes" xml:space="preserve">
          <source>Month without leading zeros.</source>
          <target state="translated">Месяц без ведущих нулей.</target>
        </trans-unit>
        <trans-unit id="789db7de9daf4c3dea26155c4de1508cc63c78dc" translate="yes" xml:space="preserve">
          <source>Month, 2 digits with leading zeros.</source>
          <target state="translated">Месяц,2 цифры с ведущими нулями.</target>
        </trans-unit>
        <trans-unit id="6268ce268f58c92a8b8c465bb7039eb42da0b88e" translate="yes" xml:space="preserve">
          <source>Month, locale specific alternative representation usually used for long date representation.</source>
          <target state="translated">Месяц,местное специфическое альтернативное представительство,обычно используемое для длительного представления даты.</target>
        </trans-unit>
        <trans-unit id="68b6759ae7ec52517f6707eab3f49676fded852c" translate="yes" xml:space="preserve">
          <source>Month, textual, 3 letters, lowercase.</source>
          <target state="translated">Месяц,текст,3 буквы,строчный.</target>
        </trans-unit>
        <trans-unit id="54acf667cda1d25c557e72b3eecaf3a5e654244a" translate="yes" xml:space="preserve">
          <source>Month, textual, 3 letters.</source>
          <target state="translated">Месяц,текст,3 буквы.</target>
        </trans-unit>
        <trans-unit id="55f3a466c30a6f138ee4b6107c9f1297f5a1c83b" translate="yes" xml:space="preserve">
          <source>Month, textual, long.</source>
          <target state="translated">Месяц,текстовый,длинный.</target>
        </trans-unit>
        <trans-unit id="d8582964d85a742a683053ee36dbed4b0d9acc91" translate="yes" xml:space="preserve">
          <source>Month-based archive page &amp;ndash; displays all days with entries in the given month.</source>
          <target state="translated">Страница архива на основе месяца - отображает все дни с записями в данном месяце.</target>
        </trans-unit>
        <trans-unit id="8e07c73ff2257408bd49d184644b99ce9d8ef611" translate="yes" xml:space="preserve">
          <source>More &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;{% block %}&lt;/code&gt;&lt;/a&gt; tags in your base templates are better. Remember, child templates don&amp;rsquo;t have to define all parent blocks, so you can fill in reasonable defaults in a number of blocks, then only define the ones you need later. It&amp;rsquo;s better to have more hooks than fewer hooks.</source>
          <target state="translated">Чем больше тегов &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;{% block %}&lt;/code&gt; &lt;/a&gt; в ваших базовых шаблонах, тем лучше. Помните, что дочерние шаблоны не должны определять все родительские блоки, поэтому вы можете заполнить разумные значения по умолчанию в ряде блоков, а затем определить только те, которые вам нужны позже. Лучше иметь больше крючков, чем меньше крючков.</target>
        </trans-unit>
        <trans-unit id="299848f148ba8e572159f4587392af118a784da7" translate="yes" xml:space="preserve">
          <source>More about Django &lt;code&gt;Form&lt;/code&gt; classes</source>
          <target state="translated">Подробнее о классах Джанго &lt;code&gt;Form&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0d0d1d2ad55a7e08bc82e9ce7118b05835d686b" translate="yes" xml:space="preserve">
          <source>More about Django Form classes</source>
          <target state="translated">Подробнее о классах Django Form</target>
        </trans-unit>
        <trans-unit id="b989fb93fc290d806e1beba975983651f8aa1602" translate="yes" xml:space="preserve">
          <source>More advanced migrations</source>
          <target state="translated">Более продвинутые миграции</target>
        </trans-unit>
        <trans-unit id="b2e3edf8aaff223f7c4bc82400f24d060ba670ce" translate="yes" xml:space="preserve">
          <source>More attractive automatically-generated admin features &amp;ndash; this overview barely scratched the surface.</source>
          <target state="translated">Более привлекательные автоматически сгенерированные функции администратора - этот обзор едва касался поверхности.</target>
        </trans-unit>
        <trans-unit id="8c923753c18be61c1004c12ca3fade2d08722915" translate="yes" xml:space="preserve">
          <source>More complex examples are beyond the scope of this document, but remember - for any configuration of your Field instance, &lt;code&gt;deconstruct()&lt;/code&gt; must return arguments that you can pass to &lt;code&gt;__init__&lt;/code&gt; to reconstruct that state.</source>
          <target state="translated">Более сложные примеры выходят за рамки этого документа, но помните - для любой конфигурации вашего экземпляра Field &lt;code&gt;deconstruct()&lt;/code&gt; должна возвращать аргументы, которые вы можете передать &lt;code&gt;__init__&lt;/code&gt; , чтобы восстановить это состояние.</target>
        </trans-unit>
        <trans-unit id="db010a93e37a57c66656081acb50090017c4ab0d" translate="yes" xml:space="preserve">
          <source>More comprehensive tests</source>
          <target state="translated">Более комплексные тесты</target>
        </trans-unit>
        <trans-unit id="58c8313dae352f6c86d7bd1fe65b2e1089885088" translate="yes" xml:space="preserve">
          <source>More details are in &lt;a href=&quot;../i18n/translation#explicitly-setting-the-active-language&quot;&gt;Explicitly setting the active language&lt;/a&gt;.</source>
          <target state="translated">Больше подробностей в &lt;a href=&quot;../i18n/translation#explicitly-setting-the-active-language&quot;&gt;явной настройке активного языка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b1a82e1043266d553c6d8ba1b0f6a2fd3e63754" translate="yes" xml:space="preserve">
          <source>More details are in &lt;a href=&quot;../i18n/translation#how-django-discovers-language-preference&quot;&gt;How Django discovers language preference&lt;/a&gt;.</source>
          <target state="translated">Больше подробностей в том, &lt;a href=&quot;../i18n/translation#how-django-discovers-language-preference&quot;&gt;как Django обнаруживает языковые предпочтения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a7b4df20dd480c377a581def56226b3c32ecde3" translate="yes" xml:space="preserve">
          <source>More details can be found in the &lt;a href=&quot;https://www.w3.org/International/questions/qa-i18n&quot;&gt;W3C Web Internationalization FAQ&lt;/a&gt;, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Internationalization_and_localization&quot;&gt;Wikipedia article&lt;/a&gt; or the &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html#Concepts&quot;&gt;GNU gettext documentation&lt;/a&gt;.</source>
          <target state="translated">Более подробную информацию можно найти в &lt;a href=&quot;https://www.w3.org/International/questions/qa-i18n&quot;&gt;FAQ по интернационализации W3C&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/Internationalization_and_localization&quot;&gt;статье&lt;/a&gt; в Википедии или в &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html#Concepts&quot;&gt;документации по GNT gettext&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ad47279afb909f9e5e8501ff7c41001131170ec" translate="yes" xml:space="preserve">
          <source>More examples of generic views are available in some third party applications, or you could write your own as needed.</source>
          <target state="translated">Дополнительные примеры общих взглядов доступны в некоторых приложениях третьих сторон,или вы можете написать свои собственные по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="525622173583779827304cfa800b3d1dfee99b4c" translate="yes" xml:space="preserve">
          <source>More granular output</source>
          <target state="translated">Более гранулированный выпуск</target>
        </trans-unit>
        <trans-unit id="f063c4c87e9bae1816af9e601f0d358edd44ea7d" translate="yes" xml:space="preserve">
          <source>More information for new contributors</source>
          <target state="translated">Дополнительная информация для новых участников</target>
        </trans-unit>
        <trans-unit id="2d8f6e8eec977860d6662bb5520eba03e159160c" translate="yes" xml:space="preserve">
          <source>More often, a newcomer to testing will create some code and later decide that it should have some tests. Perhaps it would have been better to write some tests earlier, but it&amp;rsquo;s never too late to get started.</source>
          <target state="translated">Чаще всего новичок в тестировании создает некоторый код, а затем решает, что у него должно быть несколько тестов. Возможно, было бы лучше написать некоторые тесты раньше, но никогда не поздно начать.</target>
        </trans-unit>
        <trans-unit id="2618cd8952a806ae4124de24ab64990b2f4af767" translate="yes" xml:space="preserve">
          <source>More on fields</source>
          <target state="translated">Подробнее о полях</target>
        </trans-unit>
        <trans-unit id="5bc01b6e00a77dc61a0069c6788d0ed249454de6" translate="yes" xml:space="preserve">
          <source>More than just HTML</source>
          <target state="translated">Больше,чем просто HTML</target>
        </trans-unit>
        <trans-unit id="270b6239e60a5ebd66ab15c63878e1d3222c33cc" translate="yes" xml:space="preserve">
          <source>More than one foreign key to the same model</source>
          <target state="translated">Более одного иностранного ключа к одной и той же модели</target>
        </trans-unit>
        <trans-unit id="2586d441d16010e8412e11c6de8265bc1c1e557f" translate="yes" xml:space="preserve">
          <source>Moreover, arithmetic operations may be performed between the distance objects:</source>
          <target state="translated">Кроме того,между объектами расстояния могут выполняться арифметические операции:</target>
        </trans-unit>
        <trans-unit id="8b1fa3471d34f0d234ba4558b474a601a8cc898d" translate="yes" xml:space="preserve">
          <source>Moreover, if the &lt;code&gt;GEOSGeometry&lt;/code&gt; is in a different coordinate system (has a different SRID value) than that of the field, then it will be implicitly transformed into the SRID of the model&amp;rsquo;s field, using the spatial database&amp;rsquo;s transform procedure:</source>
          <target state="translated">Кроме того, если &lt;code&gt;GEOSGeometry&lt;/code&gt; находится в другой системе координат (имеет другое значение SRID), чем у поля, то она будет неявно преобразована в SRID поля модели, используя процедуру преобразования пространственной базы данных:</target>
        </trans-unit>
        <trans-unit id="fee232fed6319afa654e98407d6a84369cdc26ae" translate="yes" xml:space="preserve">
          <source>Morphs this SpatialReference from ESRI&amp;rsquo;s format to EPSG</source>
          <target state="translated">Превращает эту пространственную ссылку из формата ESRI в EPSG</target>
        </trans-unit>
        <trans-unit id="2776d1cf12cc121cc6a53ab101839d36c44da49e" translate="yes" xml:space="preserve">
          <source>Morphs this SpatialReference to ESRI&amp;rsquo;s format.</source>
          <target state="translated">Превращает эту пространственную ссылку в формат ESRI.</target>
        </trans-unit>
        <trans-unit id="de802c1632cedcbed1d1269dec4dd87d1626b63d" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;QueryDict&lt;/code&gt;s you encounter, and in particular those at &lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.GET&lt;/code&gt;, will be immutable. If you are instantiating one yourself, you can make it mutable by passing &lt;code&gt;mutable=True&lt;/code&gt; to its &lt;code&gt;__init__()&lt;/code&gt;.</source>
          <target state="translated">Большинство &lt;code&gt;QueryDict&lt;/code&gt; , с которыми вы сталкиваетесь, и, в частности, в &lt;code&gt;request.POST&lt;/code&gt; и &lt;code&gt;request.GET&lt;/code&gt; , будут неизменяемыми. Если вы создаете экземпляр самостоятельно, вы можете сделать его изменяемым, передав &lt;code&gt;mutable=True&lt;/code&gt; его &lt;code&gt;__init__()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0099135e74b5675cbf0a4c807d825e1972187f6" translate="yes" xml:space="preserve">
          <source>Most browsers send &lt;code&gt;Accept: */*&lt;/code&gt; by default, so this would return &lt;code&gt;True&lt;/code&gt; for all content types. Setting an explicit &lt;code&gt;Accept&lt;/code&gt; header in API requests can be useful for returning a different content type for those consumers only. See &lt;a href=&quot;../topics/class-based-views/generic-editing#content-negotiation-example&quot;&gt;Content negotiation example&lt;/a&gt; of using &lt;code&gt;accepts()&lt;/code&gt; to return different content to API consumers.</source>
          <target state="translated">Большинство браузеров по умолчанию отправляют &lt;code&gt;Accept: */*&lt;/code&gt; , так что это вернет &lt;code&gt;True&lt;/code&gt; для всех типов контента. Установка явного заголовка &lt;code&gt;Accept&lt;/code&gt; в запросах API может быть полезна для возврата другого типа контента только для этих потребителей. См. &lt;a href=&quot;../topics/class-based-views/generic-editing#content-negotiation-example&quot;&gt;Пример согласования содержимого&lt;/a&gt; с использованием &lt;code&gt;accepts()&lt;/code&gt; для возврата различного содержимого потребителям API.</target>
        </trans-unit>
        <trans-unit id="fd83b2da2d31a5769324d7579da823d1abff813e" translate="yes" xml:space="preserve">
          <source>Most developers won&amp;rsquo;t need to worry about changing form encoding, but this is a useful feature for applications that talk to legacy systems whose encoding you cannot control.</source>
          <target state="translated">Большинству разработчиков не нужно беспокоиться об изменении кодировки форм, но это полезная функция для приложений, работающих с устаревшими системами, кодировкой которых вы не можете управлять.</target>
        </trans-unit>
        <trans-unit id="10ade9a2061b05f7b91f4318c4b19e8aa5ca9527" translate="yes" xml:space="preserve">
          <source>Most fields don&amp;rsquo;t require data preparation. Simple data types, such as integers and strings, are &amp;lsquo;ready to write&amp;rsquo; as a Python object. However, more complex data types often require some modification.</source>
          <target state="translated">Большинство полей не требуют подготовки данных. Простые типы данных, такие как целые числа и строки, &amp;laquo;готовы к записи&amp;raquo; как объект Python. Однако более сложные типы данных часто требуют некоторой модификации.</target>
        </trans-unit>
        <trans-unit id="d529a24fa241e9065286615d191b753364639d64" translate="yes" xml:space="preserve">
          <source>Most filters don&amp;rsquo;t take arguments. In this case, leave the argument out of your function:</source>
          <target state="translated">Большинство фильтров не принимают аргументов. В этом случае оставьте аргумент вне вашей функции:</target>
        </trans-unit>
        <trans-unit id="6ac8c4baf64570371700af7032fa39a6dc85046f" translate="yes" xml:space="preserve">
          <source>Most generic views require the &lt;code&gt;queryset&lt;/code&gt; key, which is a &lt;code&gt;QuerySet&lt;/code&gt; instance; see &lt;a href=&quot;../../topics/db/queries&quot;&gt;Making queries&lt;/a&gt; for more information about &lt;code&gt;QuerySet&lt;/code&gt; objects.</source>
          <target state="translated">Для большинства общих представлений требуется ключ &lt;code&gt;queryset&lt;/code&gt; , который является экземпляром &lt;code&gt;QuerySet&lt;/code&gt; ; см. &lt;a href=&quot;../../topics/db/queries&quot;&gt;Создание запросов&lt;/a&gt; для получения дополнительной информации об объектах &lt;code&gt;QuerySet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="283a9ab800c27a0c42452de79dd91ba830b18c75" translate="yes" xml:space="preserve">
          <source>Most larger Django sites use a separate Web server &amp;ndash; i.e., one that&amp;rsquo;s not also running Django &amp;ndash; for serving static files. This server often runs a different type of web server &amp;ndash; faster but less full-featured. Some common choices are:</source>
          <target state="translated">Большинство крупных сайтов Django используют отдельный веб-сервер - то есть тот, на котором также не работает Django - для обслуживания статических файлов. Этот сервер часто запускает веб-сервер другого типа - более быстрый, но менее полнофункциональный. Некоторые распространенные варианты:</target>
        </trans-unit>
        <trans-unit id="d071dd58c0ea09b5920680c494256897fe6f5f87" translate="yes" xml:space="preserve">
          <source>Most method calls attached to objects are also available from within templates. This means that templates have access to much more than just class attributes (like field names) and variables passed in from views. For example, the Django ORM provides the &lt;a href=&quot;../../topics/db/queries#topics-db-queries-related&quot;&gt;&amp;ldquo;entry_set&amp;rdquo;&lt;/a&gt; syntax for finding a collection of objects related on a foreign key. Therefore, given a model called &amp;ldquo;comment&amp;rdquo; with a foreign key relationship to a model called &amp;ldquo;task&amp;rdquo; you can loop through all comments attached to a given task like this:</source>
          <target state="translated">Большинство вызовов методов, привязанных к объектам, также доступны из шаблонов. Это означает, что шаблоны имеют доступ к гораздо большему, чем просто атрибуты класса (например, имена полей) и переменные, передаваемые из представлений. Например, Django ORM предоставляет синтаксис &lt;a href=&quot;../../topics/db/queries#topics-db-queries-related&quot;&gt;&amp;laquo;entry_set&amp;raquo;&lt;/a&gt; для поиска коллекции объектов, связанных с внешним ключом. Поэтому, учитывая модель с именем &amp;laquo;comment&amp;raquo; с отношением внешнего ключа к модели с именем &amp;laquo;task&amp;raquo;, вы можете просмотреть все комментарии, связанные с данной задачей, следующим образом:</target>
        </trans-unit>
        <trans-unit id="145d0f6157ec473a53e372c29d0eb1af87df32d4" translate="yes" xml:space="preserve">
          <source>Most of the time you&amp;rsquo;ll use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt;&lt;code&gt;all()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt; when you need to look up objects from the database. However, that&amp;rsquo;s far from all there is; see the &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;QuerySet API Reference&lt;/a&gt; for a complete list of all the various &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">Большую часть времени вы будете использовать &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt; &lt;code&gt;all()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt; &lt;code&gt;exclude()&lt;/code&gt; &lt;/a&gt; когда вам нужно искать объекты из базы данных. Однако это далеко не все; см. &lt;a href=&quot;../../ref/models/querysets#queryset-api&quot;&gt;Справочник&lt;/a&gt; по API QuerySet для получения полного списка всех различных методов &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5a70a402429d9e0751ab8352b3b6edf4a999b65" translate="yes" xml:space="preserve">
          <source>Most of the time you&amp;rsquo;ll use a &lt;code&gt;File&lt;/code&gt; that Django&amp;rsquo;s given you (i.e. a file attached to a model as above, or perhaps an uploaded file).</source>
          <target state="translated">Большую часть времени вы будете использовать &lt;code&gt;File&lt;/code&gt; который вам дал Django (т.е. файл, прикрепленный к модели, как указано выше, или, возможно, загруженный файл).</target>
        </trans-unit>
        <trans-unit id="ee3f7c7371e94698b53b1354c3bef6e0872c9065" translate="yes" xml:space="preserve">
          <source>Most of the time, you&amp;rsquo;ll instantiate &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; objects by passing in a fully-populated dictionary to &lt;code&gt;Context()&lt;/code&gt;. But you can add and delete items from a &lt;code&gt;Context&lt;/code&gt; object once it&amp;rsquo;s been instantiated, too, using standard dictionary syntax:</source>
          <target state="translated">В большинстве случаев вы будете создавать экземпляры объектов &lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; , передавая заполненный словарь в &lt;code&gt;Context()&lt;/code&gt; . Но вы также можете добавлять и удалять элементы из объекта &lt;code&gt;Context&lt;/code&gt; ,как только он был создан , используя стандартный синтаксис словаря:</target>
        </trans-unit>
        <trans-unit id="75df474b5d319622c3cc5760d003faf378b95a8e" translate="yes" xml:space="preserve">
          <source>Most of the time, you&amp;rsquo;ll pass the file data from &lt;code&gt;request&lt;/code&gt; into the form as described in &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt;. This would look something like:</source>
          <target state="translated">В большинстве случаев вы будете передавать данные файла из &lt;code&gt;request&lt;/code&gt; в форму, как описано в разделе &amp;laquo; &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Привязка загруженных файлов к форме&amp;raquo;&lt;/a&gt; . Это будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="119f2c924a319d37b00a931fb60d52e9b7e587d8" translate="yes" xml:space="preserve">
          <source>Most other &lt;code&gt;django-admin&lt;/code&gt; commands that interact with the database operate in the same way as &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; &amp;ndash; they only ever operate on one database at a time, using &lt;code&gt;--database&lt;/code&gt; to control the database used.</source>
          <target state="translated">Большинство других команд &lt;code&gt;django-admin&lt;/code&gt; , которые взаимодействуют с базой данных, работают так же, как и &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; - они работают только с одной базой данных за раз, используя &lt;code&gt;--database&lt;/code&gt; для управления используемой базой данных.</target>
        </trans-unit>
        <trans-unit id="377bcaf04e9797c6340b2a8bdad4bee17d23a9bf" translate="yes" xml:space="preserve">
          <source>Most people are familiar with using latitude and longitude to reference a location on the earth&amp;rsquo;s surface. However, latitude and longitude are angles, not distances. In other words, while the shortest path between two points on a flat surface is a straight line, the shortest path between two points on a curved surface (such as the earth) is an &lt;em&gt;arc&lt;/em&gt; of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Great_circle&quot;&gt;great circle&lt;/a&gt;. &lt;a href=&quot;#fnthematic&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt; Thus, additional computation is required to obtain distances in planar units (e.g., kilometers and miles). Using a geographic coordinate system may introduce complications for the developer later on. For example, SpatiaLite does not have the capability to perform distance calculations between geometries using geographic coordinate systems, e.g. constructing a query to find all points within 5 miles of a county boundary stored as WGS84. &lt;a href=&quot;#fndist&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="translated">Большинство людей знакомы с использованием широты и долготы для определения местоположения на поверхности земли. Однако широта и долгота - это углы, а не расстояния. Другими словами, в то время как кратчайший путь между двумя точками на плоской поверхности , представляет собой прямую линию, кратчайший путь между двумя точками на кривой поверхности (например, земли) представляет собой &lt;em&gt;дугу&lt;/em&gt; из &lt;a href=&quot;https://en.wikipedia.org/wiki/Great_circle&quot;&gt;большого круга&lt;/a&gt; . &lt;a href=&quot;#fnthematic&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt;Таким образом, дополнительные вычисления требуются для получения расстояний в плоских единицах (например, километрах и милях). Использование географической системы координат может создать сложности для разработчика позже. Например, SpatiaLite не имеет возможности выполнять расчеты расстояния между геометриями, используя географические системы координат, например, создавать запрос для поиска всех точек в пределах 5 миль от границы округа, сохраненной как WGS84. &lt;a href=&quot;#fndist&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa380c3aed18b055c47fc70106524669e774f0e4" translate="yes" xml:space="preserve">
          <source>Most tags accept arguments:</source>
          <target state="translated">Большинство тегов принимают аргументы:</target>
        </trans-unit>
        <trans-unit id="7d98610356545b43a90b40c891fb649c8f9fda3c" translate="yes" xml:space="preserve">
          <source>Most validation can be done using &lt;a href=&quot;#validators&quot;&gt;validators&lt;/a&gt; - helpers that can be reused. Validators are functions (or callables) that take a single argument and raise &lt;code&gt;ValidationError&lt;/code&gt; on invalid input. Validators are run after the field&amp;rsquo;s &lt;code&gt;to_python&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods have been called.</source>
          <target state="translated">Большая часть проверки может быть выполнена с использованием &lt;a href=&quot;#validators&quot;&gt;валидаторов&lt;/a&gt; - помощников, которые можно использовать повторно. Валидаторы - это функции (или вызываемые объекты), которые принимают один аргумент и вызывают &lt;code&gt;ValidationError&lt;/code&gt; при неверном вводе. Валидаторы запускаются после того, как поле &lt;code&gt;to_python&lt;/code&gt; и методы &lt;code&gt;validate&lt;/code&gt; были вызваны.</target>
        </trans-unit>
        <trans-unit id="723f4d4f07515e4cb9cdd3456d1f4fe86b2d6da5" translate="yes" xml:space="preserve">
          <source>Most views requires CSRF protection, but a few do not.</source>
          <target state="translated">Большинство мнений требуют защиты КСО,но некоторые-нет.</target>
        </trans-unit>
        <trans-unit id="4128c1d8e90ab53d91e5ee014d62fddc81452af8" translate="yes" xml:space="preserve">
          <source>Most websites that care about time zones ask users in which time zone they live and store this information in the user&amp;rsquo;s profile. For anonymous users, they use the time zone of their primary audience or UTC. &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; provides &lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;helpers&lt;/a&gt;, like a list of time zones per country, that you can use to pre-select the most likely choices.</source>
          <target state="translated">Большинство сайтов, которые заботятся о часовых поясах, спрашивают пользователей, в каком часовом поясе они живут, и сохраняют эту информацию в профиле пользователя. Для анонимных пользователей они используют часовой пояс своей основной аудитории или UTC. &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;Pytz&lt;/a&gt; предоставляет &lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;помощников&lt;/a&gt; , таких как список часовых поясов для каждой страны, которые вы можете использовать для предварительного выбора наиболее вероятных вариантов.</target>
        </trans-unit>
        <trans-unit id="6c8d12148748172394b8e79a6d152a32dd323fc1" translate="yes" xml:space="preserve">
          <source>Move the &lt;code&gt;polls&lt;/code&gt; directory into the &lt;code&gt;django-polls&lt;/code&gt; directory.</source>
          <target state="translated">Переместите каталог &lt;code&gt;polls&lt;/code&gt; в каталог &lt;code&gt;django-polls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c58c013c30d8701a971a22d72e01d0b764b2b536" translate="yes" xml:space="preserve">
          <source>Moves the model&amp;rsquo;s table from one tablespace to another.</source>
          <target state="translated">Перемещает таблицу модели из одного табличного пространства в другое.</target>
        </trans-unit>
        <trans-unit id="d794a8d047d2027efa4972e195bbc53e5a2bcbce" translate="yes" xml:space="preserve">
          <source>Moving an object from one database to another</source>
          <target state="translated">Перемещение объекта из одной базы данных в другую</target>
        </trans-unit>
        <trans-unit id="f0a1c83ee00097339c2b403b2193bd3d9c55c46d" translate="yes" xml:space="preserve">
          <source>Mozilla discusses various topics regarding &lt;a href=&quot;https://infosec.mozilla.org/guidelines/web_security.html&quot;&gt;web security&lt;/a&gt;. Their pages also include security principles that apply to any system.</source>
          <target state="translated">Mozilla обсуждает различные темы, касающиеся &lt;a href=&quot;https://infosec.mozilla.org/guidelines/web_security.html&quot;&gt;веб-безопасности&lt;/a&gt; . На их страницах также приведены принципы безопасности, применимые к любой системе.</target>
        </trans-unit>
        <trans-unit id="64683d853b5d7f50f535fc278d45f921a490d24b" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;, ensure that if you change schema inside here you&amp;rsquo;re either doing it outside the scope of the Django model system (e.g. triggers) or that you use &lt;a href=&quot;#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt;&lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;&lt;/a&gt; to add in operations that will reflect your changes to the model state - otherwise, the versioned ORM and the autodetector will stop working correctly.</source>
          <target state="translated">Как и в случае с &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt; , убедитесь, что если вы изменяете схему внутри, вы либо делаете это вне области системы моделей Django (например, триггеры), либо используете &lt;a href=&quot;#django.db.migrations.operations.SeparateDatabaseAndState&quot;&gt; &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; &lt;/a&gt; для добавления операций, которые будут отражать ваши изменения в состоянии модели - в противном случае , версионный ORM и автодетектор перестанут работать правильно.</target>
        </trans-unit>
        <trans-unit id="41621a064f44e6daabdc27522b33298fa8aa62b1" translate="yes" xml:space="preserve">
          <source>Multi-database support</source>
          <target state="translated">Поддержка нескольких баз данных</target>
        </trans-unit>
        <trans-unit id="ddb04e3ae372a17b92e0255fc4b279009db9af90" translate="yes" xml:space="preserve">
          <source>Multi-table inheritance</source>
          <target state="translated">Многоступенчатое наследование</target>
        </trans-unit>
        <trans-unit id="85c68fd61341ba3993094799674748ff1b1fad2b" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays with indexes and slices</source>
          <target state="translated">Многомерные массивы с индексами и ломтиками</target>
        </trans-unit>
        <trans-unit id="6dae03e38262e1d8fbd6001ae280309609de7140" translate="yes" xml:space="preserve">
          <source>Multiple admin sites in the same URLconf</source>
          <target state="translated">Несколько сайтов администратора в одном URLconf</target>
        </trans-unit>
        <trans-unit id="d28c471111be99bb04f22b41815e829ee1145175" translate="yes" xml:space="preserve">
          <source>Multiple databases</source>
          <target state="translated">Многочисленные базы данных</target>
        </trans-unit>
        <trans-unit id="a9dadd9453a271030d305246c8860a4e63627858" translate="yes" xml:space="preserve">
          <source>Multiple inheritance</source>
          <target state="translated">Многократное наследование</target>
        </trans-unit>
        <trans-unit id="232abe7a48c7c1ee8c0efaa67e739c2a6509d72e" translate="yes" xml:space="preserve">
          <source>Multiple keys can be chained together to form a path lookup:</source>
          <target state="translated">Несколько клавиш можно связать вместе,чтобы сформировать поиск пути:</target>
        </trans-unit>
        <trans-unit id="5112902c4e583bfe7514db7252746db758fd62e2" translate="yes" xml:space="preserve">
          <source>Multiple object mixins</source>
          <target state="translated">Многочисленные объектные микшины</target>
        </trans-unit>
        <trans-unit id="86f9c0e7700126520aeb57e446419f134fb8a6f7" translate="yes" xml:space="preserve">
          <source>Mumbai: 19,000,000</source>
          <target state="translated">Мумбаи:19 000 000</target>
        </trans-unit>
        <trans-unit id="ce70a430cc3e5cc4fd6f19e52ba7a0369c6c0c5b" translate="yes" xml:space="preserve">
          <source>Must be a subclass of &lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;django.forms.MultiWidget&lt;/code&gt;&lt;/a&gt;. Default value is &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;, which probably is not very useful in this case.</source>
          <target state="translated">Должен быть подклассом &lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt; &lt;code&gt;django.forms.MultiWidget&lt;/code&gt; &lt;/a&gt; . Значением по умолчанию является &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt; , что, вероятно, не очень полезно в этом случае.</target>
        </trans-unit>
        <trans-unit id="6f73e164a384f2624b0aa7805fd299ecce41fed8" translate="yes" xml:space="preserve">
          <source>Must return the lookup named &lt;code&gt;lookup_name&lt;/code&gt;. For instance, by returning &lt;code&gt;self.output_field.get_lookup(lookup_name)&lt;/code&gt;.</source>
          <target state="translated">Должен вернуть поиск с именем &lt;code&gt;lookup_name&lt;/code&gt; . Например, возвращая &lt;code&gt;self.output_field.get_lookup(lookup_name)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c493b67af068ea997fcbeb95a43f0dc8b18c7ce6" translate="yes" xml:space="preserve">
          <source>Must return the lookup named &lt;code&gt;transform_name&lt;/code&gt;. For instance, by returning &lt;code&gt;self.output_field.get_transform(transform_name)&lt;/code&gt;.</source>
          <target state="translated">Должен вернуть поиск с именем &lt;code&gt;transform_name&lt;/code&gt; . Например, возвращая &lt;code&gt;self.output_field.get_transform(transform_name)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a96b7ca96aaabf64fd5a1e1f8c1b203d836deaa9" translate="yes" xml:space="preserve">
          <source>Mutability: &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be modified.</source>
          <target state="translated">Изменчивость: объекты &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; могут быть изменены.</target>
        </trans-unit>
        <trans-unit id="4bccb0eee0e8600913c2c28639c66e179e6c916b" translate="yes" xml:space="preserve">
          <source>My logs are filled with GEOS-related errors</source>
          <target state="translated">Мои журналы заполнены ошибками,связанными с GEOS.</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="2e0075770347408bd338637c0345bcd2dba7d8f7" translate="yes" xml:space="preserve">
          <source>MySQL 5.6.4 and later can store fractional seconds, provided that the column definition includes a fractional indication (e.g. &lt;code&gt;DATETIME(6)&lt;/code&gt;). Earlier versions do not support them at all.</source>
          <target state="translated">MySQL 5.6.4 и более поздние могут хранить дробные секунды, при условии, что определение столбца включает дробное указание (например, &lt;code&gt;DATETIME(6)&lt;/code&gt; ). Более ранние версии не поддерживают их вообще.</target>
        </trans-unit>
        <trans-unit id="86a5ac5197e92a3bf370a96a8eed2e3a94e4cb1f" translate="yes" xml:space="preserve">
          <source>MySQL &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</source>
          <target state="translated">MySQL &lt;a href=&quot;#id10&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="986a60a235cf32f505dc63fb40ec496ad291c705" translate="yes" xml:space="preserve">
          <source>MySQL Connector/Python</source>
          <target state="translated">MySQL Коннектор/Питон</target>
        </trans-unit>
        <trans-unit id="667f44d66957f73e91d3746ec1ac71180eba2323" translate="yes" xml:space="preserve">
          <source>MySQL Connector/Python is available from the &lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;download page&lt;/a&gt;. The Django adapter is available in versions 1.1.X and later. It may not support the most recent releases of Django.</source>
          <target state="translated">MySQL, Connector / Python доступен со &lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;страницы загрузки&lt;/a&gt; . Адаптер Django доступен в версиях 1.1.X и позже. Он может не поддерживать самые последние выпуски Django.</target>
        </trans-unit>
        <trans-unit id="9bb341b82bf1c83dd03f7466f030dfb1c4ead4ae" translate="yes" xml:space="preserve">
          <source>MySQL DB API Drivers</source>
          <target state="translated">Драйверы MySQL DB API</target>
        </trans-unit>
        <trans-unit id="2a32013dda91967e55f3b5f97fbb0212e962e6ad" translate="yes" xml:space="preserve">
          <source>MySQL Spatial Limitations</source>
          <target state="translated">Пространственные ограничения MySQL</target>
        </trans-unit>
        <trans-unit id="983d4198c4fe496e039642a0b10a31ff61fb8930" translate="yes" xml:space="preserve">
          <source>MySQL and MariaDB</source>
          <target state="translated">MySQL и MariaDB</target>
        </trans-unit>
        <trans-unit id="1ae647f2055c46f7991330b9effd8766eca9dada" translate="yes" xml:space="preserve">
          <source>MySQL and MariaDB do not support some options to the &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; statement. If &lt;code&gt;select_for_update()&lt;/code&gt; is used with an unsupported option, then a &lt;a href=&quot;exceptions#django.db.NotSupportedError&quot;&gt;&lt;code&gt;NotSupportedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">MySQL и MariaDB не поддерживают некоторые параметры &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; . Если &lt;code&gt;select_for_update()&lt;/code&gt; используется с неподдерживаемым параметром, возникает &lt;a href=&quot;exceptions#django.db.NotSupportedError&quot;&gt; &lt;code&gt;NotSupportedError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f05eb6ba63b7a6cd32e2832c1d889278aa95ffb" translate="yes" xml:space="preserve">
          <source>MySQL and SpatiaLite without LWGEOM don&amp;rsquo;t support area calculations on geographic SRSes.</source>
          <target state="translated">MySQL и SpatiaLite без LWGEOM не поддерживают вычисления площади на географических SRS.</target>
        </trans-unit>
        <trans-unit id="e619fd44bc5f6e15a9f90141b521fe84e6c5c40b" translate="yes" xml:space="preserve">
          <source>MySQL can index only the first N chars of a &lt;code&gt;BLOB&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; column. Since &lt;code&gt;TextField&lt;/code&gt; doesn&amp;rsquo;t have a defined length, you can&amp;rsquo;t mark it as &lt;code&gt;unique=True&lt;/code&gt;. MySQL will report: &amp;ldquo;BLOB/TEXT column &amp;lsquo;&amp;lt;db_column&amp;gt;&amp;rsquo; used in key specification without a key length&amp;rdquo;.</source>
          <target state="translated">MySQL может индексировать только первые N символов столбца &lt;code&gt;BLOB&lt;/code&gt; или &lt;code&gt;TEXT&lt;/code&gt; . Поскольку &lt;code&gt;TextField&lt;/code&gt; не имеет определенной длины, вы не можете пометить его как &lt;code&gt;unique=True&lt;/code&gt; . MySQL сообщит: &amp;laquo;столбец BLOB / TEXT&amp;laquo; &amp;lt;db_column&amp;gt; &amp;raquo;используется в спецификации ключа без длины ключа&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e7f9037fbe1194d4e43f2ae2e2b77cd89ac807a6" translate="yes" xml:space="preserve">
          <source>MySQL comparisons</source>
          <target state="translated">сравнения MySQL</target>
        </trans-unit>
        <trans-unit id="1b2f25b29e36685e347b0022acef2066f4e227da" translate="yes" xml:space="preserve">
          <source>MySQL doesn&amp;rsquo;t support length calculations on geographic SRSes.</source>
          <target state="translated">MySQL не поддерживает вычисления длины на географических SRS.</target>
        </trans-unit>
        <trans-unit id="bb747cd75bad69ca691abcfc9dda3c14f82ee26e" translate="yes" xml:space="preserve">
          <source>MySQL doesn&amp;rsquo;t support streaming results, hence the Python database driver loads the entire result set into memory. The result set is then transformed into Python row objects by the database adapter using the &lt;code&gt;fetchmany()&lt;/code&gt; method defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">MySQL не поддерживает потоковые результаты, поэтому драйвер базы данных Python загружает весь набор результатов в память. Затем результирующий набор преобразуется в объекты строк Python адаптером базы данных с помощью &lt;code&gt;fetchmany()&lt;/code&gt; определенного в &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9699bc8cbc6d21071c531e97cae0a82b4d28855a" translate="yes" xml:space="preserve">
          <source>MySQL has a couple drivers that implement the Python Database API described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">В MySQL есть пара драйверов, которые реализуют API базы данных Python, описанный в &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="dd36a013a62a179e364138cb150dda709e3289ba" translate="yes" xml:space="preserve">
          <source>MySQL has several &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/storage-engines.html&quot;&gt;storage engines&lt;/a&gt;. You can change the default storage engine in the server configuration.</source>
          <target state="translated">MySQL имеет несколько &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/storage-engines.html&quot;&gt;механизмов хранения&lt;/a&gt; . Вы можете изменить механизм хранения по умолчанию в конфигурации сервера.</target>
        </trans-unit>
        <trans-unit id="13c24d5b3db43171b5ef4d816ab11e8214bf90ac" translate="yes" xml:space="preserve">
          <source>MySQL lacks support for transactions around schema alteration operations, meaning that if a migration fails to apply you will have to manually unpick the changes in order to try again (it&amp;rsquo;s impossible to roll back to an earlier point).</source>
          <target state="translated">В MySQL отсутствует поддержка транзакций, связанных с операциями изменения схемы, а это означает, что если миграция не будет применена, вам придется вручную отменить изменения, чтобы повторить попытку (откат к более ранней точке невозможен).</target>
        </trans-unit>
        <trans-unit id="da7ec2dd90480fe6867f579ccf7b82e69036fc20" translate="yes" xml:space="preserve">
          <source>MySQL notes</source>
          <target state="translated">заметки MySQL</target>
        </trans-unit>
        <trans-unit id="c97f25b2cd670ac90747ff6c4670fa29f1bdcc07" translate="yes" xml:space="preserve">
          <source>MySQL option files.</source>
          <target state="translated">Файлы опций MySQL.</target>
        </trans-unit>
        <trans-unit id="a18101faca156f271f971ff4f81a92f324b38b2f" translate="yes" xml:space="preserve">
          <source>MySQL support was added.</source>
          <target state="translated">Добавлена поддержка MySQL.</target>
        </trans-unit>
        <trans-unit id="0aca998cada4db772b8e544e84480f89cb51ce1e" translate="yes" xml:space="preserve">
          <source>MySQL users, refer to the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-database.html&quot;&gt;MySQL manual&lt;/a&gt; for details on how to set or alter the database character set encoding.</source>
          <target state="translated">Пользователи MySQL, обратитесь к руководству &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-database.html&quot;&gt;MySQL&lt;/a&gt; для деталей о том, как установить или изменить кодировку набора символов базы данных.</target>
        </trans-unit>
        <trans-unit id="901623a9cc98c4d53a4f346dc9d64f6ee667fc21" translate="yes" xml:space="preserve">
          <source>MySQL with MyISAM and fixtures</source>
          <target state="translated">MySQL с MyISAM и исправлениями</target>
        </trans-unit>
        <trans-unit id="c8423889e44ab6d190ce5b97f8e3f5999ada3a9e" translate="yes" xml:space="preserve">
          <source>MySQL&amp;rsquo;s default storage engine is &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/innodb-storage-engine.html&quot;&gt;InnoDB&lt;/a&gt;. This engine is fully transactional and supports foreign key references. It&amp;rsquo;s the recommended choice. However, the InnoDB autoincrement counter is lost on a MySQL restart because it does not remember the &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; value, instead recreating it as &amp;ldquo;max(id)+1&amp;rdquo;. This may result in an inadvertent reuse of &lt;a href=&quot;models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">По умолчанию хранилище MySQL - &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/innodb-storage-engine.html&quot;&gt;InnoDB&lt;/a&gt; . Этот механизм полностью транзакционный и поддерживает ссылки на внешние ключи. Это рекомендуемый выбор. Однако счетчик автоинкремента InnoDB теряется при перезапуске MySQL, потому что он не запоминает значение &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; , а воссоздает его как &amp;laquo;max (id) +1&amp;raquo;. Это может привести к непреднамеренному повторному использованию значений &lt;a href=&quot;models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="822c500ebb7d59b30db3811ebed6b92e7060041a" translate="yes" xml:space="preserve">
          <source>MySQL, MariaDB, and SQLite.</source>
          <target state="translated">MySQL,MariaDB и SQLite.</target>
        </trans-unit>
        <trans-unit id="da894fa611c76d98f190b501119ec407ebf26fcc" translate="yes" xml:space="preserve">
          <source>MySQL, PostGIS, SpatiaLite</source>
          <target state="translated">MySQL,PostGIS,SpatiaLite</target>
        </trans-unit>
        <trans-unit id="e6d7af34f14cc7cd71ad2da3150f20559678178f" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;max_allowed_packet&lt;/code&gt; error</source>
          <target state="translated">MySQL: ошибка &lt;code&gt;max_allowed_packet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa93eb462b33d3480c38c1390b6b9dda484bd422" translate="yes" xml:space="preserve">
          <source>MySQL: load the time zone tables with &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt;.</source>
          <target state="translated">MySQL: загрузить таблицы часовых поясов с помощью &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/mysql-tzinfo-to-sql.html&quot;&gt;mysql_tzinfo_to_sql&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="87bfcc6203402acde4aabbaf0352d970adff0de9" translate="yes" xml:space="preserve">
          <source>N, B</source>
          <target state="translated">Н,Б</target>
        </trans-unit>
        <trans-unit id="42279a6f78cd081c721ab2a673715d6e0141307a" translate="yes" xml:space="preserve">
          <source>NULL and empty strings</source>
          <target state="translated">NULL и пустые строки</target>
        </trans-unit>
        <trans-unit id="3ec5dc9e67bb01760f1a1602b80350c782cc4a3d" translate="yes" xml:space="preserve">
          <source>Naive and aware datetime objects</source>
          <target state="translated">Наивные и знающие объекты даты</target>
        </trans-unit>
        <trans-unit id="991cb900a910173a0198132c33364a293aa20dc5" translate="yes" xml:space="preserve">
          <source>Name of a model field which will be auto-populated with the height of the image each time the model instance is saved.</source>
          <target state="translated">Название поля модели,которое будет автоматически заполняться с высотой изображения при каждом сохранении экземпляра модели.</target>
        </trans-unit>
        <trans-unit id="77b12c2e53e54a360eee73a9a579997d2f334a46" translate="yes" xml:space="preserve">
          <source>Name of a model field which will be auto-populated with the width of the image each time the model instance is saved.</source>
          <target state="translated">Название поля модели,которое будет автоматически заполняться шириной изображения при каждом сохранении экземпляра модели.</target>
        </trans-unit>
        <trans-unit id="e796ff17766e96ff2c6860b2879523670c9a432e" translate="yes" xml:space="preserve">
          <source>Name of a supported database vendor that this model is specific to. Current built-in vendor names are: &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;. If this attribute is not empty and the current connection vendor doesn&amp;rsquo;t match it, the model will not be synchronized.</source>
          <target state="translated">Имя поддерживаемого поставщика базы данных, к которому относится данная модель. Текущие имена встроенных поставщиков: &lt;code&gt;sqlite&lt;/code&gt; , &lt;code&gt;postgresql&lt;/code&gt; , &lt;code&gt;mysql&lt;/code&gt; , &lt;code&gt;oracle&lt;/code&gt; . Если этот атрибут не пустой и текущий поставщик соединений не соответствует ему, модель не будет синхронизирована.</target>
        </trans-unit>
        <trans-unit id="21e40c06422396c66fc6f011529e9fbb22670cb1" translate="yes" xml:space="preserve">
          <source>Named arguments can be passed by using either one of the following syntaxes:</source>
          <target state="translated">Именованные аргументы могут передаваться с помощью любого из следующих синтаксисов:</target>
        </trans-unit>
        <trans-unit id="456472e152b75181780a0aa5cf5f649563895b18" translate="yes" xml:space="preserve">
          <source>Named interpolation: This mode is selected by passing the optional boolean &lt;code&gt;named&lt;/code&gt; parameter as &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; contains a JavaScript object or associative array. For example:</source>
          <target state="translated">Именованная интерполяция: этот режим выбирается путем передачи необязательного логического &lt;code&gt;named&lt;/code&gt; параметра как &lt;code&gt;true&lt;/code&gt; . &lt;code&gt;obj&lt;/code&gt; содержит объект JavaScript или ассоциативный массив. Например:</target>
        </trans-unit>
        <trans-unit id="cddd6003787cffa647cd2f5ab65bee28c43a64f5" translate="yes" xml:space="preserve">
          <source>Namespace packages as apps</source>
          <target state="translated">Пакеты для использования пространства имен в качестве приложений</target>
        </trans-unit>
        <trans-unit id="b401e0e546ac63496e6d96c97a9fc5aeb9b68b6f" translate="yes" xml:space="preserve">
          <source>Namespaced URLs are specified using the &lt;code&gt;':'&lt;/code&gt; operator. For example, the main index page of the admin application is referenced using &lt;code&gt;'admin:index'&lt;/code&gt;. This indicates a namespace of &lt;code&gt;'admin'&lt;/code&gt;, and a named URL of &lt;code&gt;'index'&lt;/code&gt;.</source>
          <target state="translated">URL-адреса в пространстве имен указываются с помощью оператора &lt;code&gt;':'&lt;/code&gt; . Например, на главную страницу индекса приложения администратора ссылаются с помощью &lt;code&gt;'admin:index'&lt;/code&gt; . Это указывает на пространство имен &lt;code&gt;'admin'&lt;/code&gt; и именованный URL &lt;code&gt;'index'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49121460562c588ebec421e328fc0f9d720e75bf" translate="yes" xml:space="preserve">
          <source>Namespaces can also be nested. The named URL &lt;code&gt;'sports:polls:index'&lt;/code&gt; would look for a pattern named &lt;code&gt;'index'&lt;/code&gt; in the namespace &lt;code&gt;'polls'&lt;/code&gt; that is itself defined within the top-level namespace &lt;code&gt;'sports'&lt;/code&gt;.</source>
          <target state="translated">Пространства имен также могут быть вложенными. Именованный URL &lt;code&gt;'sports:polls:index'&lt;/code&gt; будет искать шаблон с именем &lt;code&gt;'index'&lt;/code&gt; в пространстве имен &lt;code&gt;'polls'&lt;/code&gt; , который сам определен в пространстве имен верхнего уровня &lt;code&gt;'sports'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7214a30965a0f1415063399b413c8991e0fe715d" translate="yes" xml:space="preserve">
          <source>Namespacing URL names</source>
          <target state="translated">Имена URL-адреса,расположенные между именами</target>
        </trans-unit>
        <trans-unit id="245bfd6a442d9a4f4c7f5466cc42e94f2e24f6ba" translate="yes" xml:space="preserve">
          <source>Naming URL patterns</source>
          <target state="translated">Шаблоны URL-адресов для наименования</target>
        </trans-unit>
        <trans-unit id="3801dd9c44d08b327a9ff306cbbe6bed16008529" translate="yes" xml:space="preserve">
          <source>Naming issues</source>
          <target state="translated">Вопросы присвоения имен</target>
        </trans-unit>
        <trans-unit id="7e587f8f91b92c319567d66e4457de8a3eb6d592" translate="yes" xml:space="preserve">
          <source>Naming loggers</source>
          <target state="translated">Регистраторы наименований</target>
        </trans-unit>
        <trans-unit id="6e94241c26e8d79594ba2990ac79ac771826be76" translate="yes" xml:space="preserve">
          <source>Naming your URL lets you refer to it unambiguously from elsewhere in Django, especially from within templates. This powerful feature allows you to make global changes to the URL patterns of your project while only touching a single file.</source>
          <target state="translated">Название вашего URL-адреса позволяет вам ссылаться на него однозначно из других мест в Django,особенно из шаблонов.Эта мощная функция позволяет вам вносить глобальные изменения в шаблоны URL вашего проекта,касаясь только одного файла.</target>
        </trans-unit>
        <trans-unit id="b0e5d9ee1e706056e66182c63e2373c6ad455b80" translate="yes" xml:space="preserve">
          <source>Native raster support &lt;code&gt;N&lt;/code&gt;: the operator accepts rasters natively on both sides of the lookup, and raster input can be mixed with geometry inputs.</source>
          <target state="translated">Встроенная поддержка растров &lt;code&gt;N&lt;/code&gt; : оператор принимает растры изначально по обе стороны от поиска, и растровый ввод можно смешивать с геометрическими входами.</target>
        </trans-unit>
        <trans-unit id="71cb039d6cfd99775661211c11211853f3118ab8" translate="yes" xml:space="preserve">
          <source>Natural keys</source>
          <target state="translated">натуральные ключи</target>
        </trans-unit>
        <trans-unit id="15de939347cd0f43fbb2c840def2f0483ccf19fc" translate="yes" xml:space="preserve">
          <source>Natural keys and forward references</source>
          <target state="translated">Естественные ключи и прямые ссылки</target>
        </trans-unit>
        <trans-unit id="f2670621a6a242a585790697568a8a79acebea97" translate="yes" xml:space="preserve">
          <source>Naturally, the &lt;code&gt;forms&lt;/code&gt; library comes with a set of &lt;code&gt;Field&lt;/code&gt; classes that represent common validation needs. This section documents each built-in field.</source>
          <target state="translated">Естественно, библиотека &lt;code&gt;forms&lt;/code&gt; поставляется с набором классов &lt;code&gt;Field&lt;/code&gt; , которые представляют общие потребности проверки. В этом разделе описаны все встроенные поля.</target>
        </trans-unit>
        <trans-unit id="a0fd1dadeac26fc980d64d53a1d51dc00d872199" translate="yes" xml:space="preserve">
          <source>Nautical Mile</source>
          <target state="translated">Морская миля</target>
        </trans-unit>
        <trans-unit id="c1bf29ee2167be4389b40be2ec27bb9ac6854cf5" translate="yes" xml:space="preserve">
          <source>Nautical Mile (UK)</source>
          <target state="translated">Морская миля (Великобритания)</target>
        </trans-unit>
        <trans-unit id="5e303aed43f7eea12893a04c1344d77f1422d360" translate="yes" xml:space="preserve">
          <source>Navigate to Django&amp;rsquo;s &lt;code&gt;tests/shortcuts/&lt;/code&gt; folder and create a new file &lt;code&gt;test_make_toast.py&lt;/code&gt;. Add the following code:</source>
          <target state="translated">Перейдите в папку Django &lt;code&gt;tests/shortcuts/&lt;/code&gt; и создайте новый файл &lt;code&gt;test_make_toast.py&lt;/code&gt; . Добавьте следующий код:</target>
        </trans-unit>
        <trans-unit id="391931ae9af417747703c930330f904886c481c0" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;django/&lt;/code&gt; folder and open the &lt;code&gt;shortcuts.py&lt;/code&gt; file. At the bottom, add:</source>
          <target state="translated">Перейдите в папку &lt;code&gt;django/&lt;/code&gt; и откройте файл &lt;code&gt;shortcuts.py&lt;/code&gt; . Внизу добавьте:</target>
        </trans-unit>
        <trans-unit id="6ff1387ed6d44dceb1969e9b463d291bf6feec8d" translate="yes" xml:space="preserve">
          <source>Needing the result in every template.</source>
          <target state="translated">Нужен результат в каждом шаблоне.</target>
        </trans-unit>
        <trans-unit id="854d8a7501a391087e8af696c7e80444951d2100" translate="yes" xml:space="preserve">
          <source>Negated object identity. Tests if two values are not the same object. This is the negation of the &lt;code&gt;is&lt;/code&gt; operator. Example:</source>
          <target state="translated">Отрицательная идентичность объекта. Проверяет, не являются ли два значения одним и тем же объектом. Это отрицание оператора &lt;code&gt;is&lt;/code&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="74cddaa347454041893fdb47ba6c8cf1d732490d" translate="yes" xml:space="preserve">
          <source>Negative indexing (i.e. &lt;code&gt;Entry.objects.all()[-1]&lt;/code&gt;) is not supported.</source>
          <target state="translated">Отрицательное индексирование (т.е. &lt;code&gt;Entry.objects.all()[-1]&lt;/code&gt; ) не поддерживается.</target>
        </trans-unit>
        <trans-unit id="16b2420a502b3deb13acfb660bcc642e826d0622" translate="yes" xml:space="preserve">
          <source>Nested arguments</source>
          <target state="translated">Вложенные аргументы</target>
        </trans-unit>
        <trans-unit id="a51d1007934ad9baaf9054dadf4bd0eaf7048e4f" translate="yes" xml:space="preserve">
          <source>Nested captured arguments create a strong coupling between the view arguments and the URL as illustrated by &lt;code&gt;blog_articles&lt;/code&gt;: the view receives part of the URL (&lt;code&gt;page-2/&lt;/code&gt;) instead of only the value the view is interested in. This coupling is even more pronounced when reversing, since to reverse the view we need to pass the piece of URL instead of the page number.</source>
          <target state="translated">Вложенные захваченные аргументы создают сильную связь между аргументами представления и URL-адресом, как показано на &lt;code&gt;blog_articles&lt;/code&gt; : представление получает часть URL-адреса ( &lt;code&gt;page-2/&lt;/code&gt; ), а не только значение, в котором заинтересовано представление. Эта связь становится еще более заметной, когда обратный, поскольку для обратного просмотра нам нужно передать часть URL вместо номера страницы.</target>
        </trans-unit>
        <trans-unit id="65046fcf73f5e6ac3773f70ea1badbd965d975c0" translate="yes" xml:space="preserve">
          <source>Nested classes</source>
          <target state="translated">Вложенные классы</target>
        </trans-unit>
        <trans-unit id="ffea8bcefbb1127b7c2b6d104e473978a7a5dfd5" translate="yes" xml:space="preserve">
          <source>Never deploy a site into production with &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; turned on.</source>
          <target state="translated">Никогда не запускайте сайт в производство с &lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e08b5505096fc8f458225bbe21af122777de6ec" translate="yes" xml:space="preserve">
          <source>New York: 20,000,000</source>
          <target state="translated">Нью-Йорк:20 000 000</target>
        </trans-unit>
        <trans-unit id="bc6939c687d34dccd6c0632aa8427056bf9dd500" translate="yes" xml:space="preserve">
          <source>New applications should avoid &lt;code&gt;default_app_config&lt;/code&gt;. Instead they should require the dotted path to the appropriate &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass to be configured explicitly in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Новые приложения должны избегать &lt;code&gt;default_app_config&lt;/code&gt; . Вместо этого им необходимо, чтобы точечный путь к соответствующему подклассу &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; был явно настроен в &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb77323982627c875ecedea26b1cf8c9800f344b" translate="yes" xml:space="preserve">
          <source>New apps come preconfigured to accept migrations, and so you can add migrations by running &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; once you&amp;rsquo;ve made some changes.</source>
          <target state="translated">Новые приложения предварительно настроены для принятия миграций, поэтому вы можете добавить миграции, выполнив &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; после внесения некоторых изменений.</target>
        </trans-unit>
        <trans-unit id="397e08be4588b3e13fecbfaca297d85d558665ee" translate="yes" xml:space="preserve">
          <source>New features and improvements are added.</source>
          <target state="translated">Добавлены новые функции и улучшения.</target>
        </trans-unit>
        <trans-unit id="cdb2b3eaffe8e9fe13d1e76ec6f821570338db67" translate="yes" xml:space="preserve">
          <source>New in Django 2.2.</source>
          <target state="translated">Новое в Django 2.2.</target>
        </trans-unit>
        <trans-unit id="a8859c9f8e0e148cbb9c7e291b070736ec990c4d" translate="yes" xml:space="preserve">
          <source>New in Django 2.2:</source>
          <target state="translated">Новое в Django 2.2:</target>
        </trans-unit>
        <trans-unit id="7d4766fe3d85797ad596d99b8671ea4eafbe878d" translate="yes" xml:space="preserve">
          <source>New in Django 3.0.</source>
          <target state="translated">Новое в Django 3.0.</target>
        </trans-unit>
        <trans-unit id="7802f5226ecb3555d94a9cf2a3159c22a8454a02" translate="yes" xml:space="preserve">
          <source>New in Django 3.0:</source>
          <target state="translated">Новое в Django 3.0:</target>
        </trans-unit>
        <trans-unit id="0c2953d63622f6f02b8976691c2a6a9e13454aad" translate="yes" xml:space="preserve">
          <source>New in Django 3.1.</source>
          <target state="translated">Новое в Django 3.1.</target>
        </trans-unit>
        <trans-unit id="53c5fd58379d0dc6dfd1944e576aa7ae4b49831e" translate="yes" xml:space="preserve">
          <source>New in Django 3.1:</source>
          <target state="translated">Новое в Django 3.1:</target>
        </trans-unit>
        <trans-unit id="3bdd2af04da21e645534a0164ec69a9d2e7eea84" translate="yes" xml:space="preserve">
          <source>New to Django? Or to Web development in general? Well, you came to the right place: read this material to quickly get up and running.</source>
          <target state="translated">Новичок в Джанго? Или в веб-разработке в целом? Ну,вы пришли по адресу:прочитайте этот материал,чтобы быстро приступить к работе.</target>
        </trans-unit>
        <trans-unit id="42c8c31ac17b91db81378ce6cded2f0b14aad34c" translate="yes" xml:space="preserve">
          <source>Newer is often - but not always - better</source>
          <target state="translated">Новое часто-но не всегда-лучше.</target>
        </trans-unit>
        <trans-unit id="90839b06d66480978bb51446f706afdc2004ad1e" translate="yes" xml:space="preserve">
          <source>Newer versions of Python, and also of Python packages, will often perform better too - but measure, rather than assume.</source>
          <target state="translated">Более новые версии Python,а также пакетов Python,часто будут работать и лучше-но измерять,а не предполагать.</target>
        </trans-unit>
        <trans-unit id="0f758a36445ca7a95d9a1d5274601a1eef8619f7" translate="yes" xml:space="preserve">
          <source>Newlines in the HTML content will be preserved.</source>
          <target state="translated">Новые строки в HTML-контенте будут сохранены.</target>
        </trans-unit>
        <trans-unit id="60c9dfae09ab7d11db1bd2a8800128d7b6ebdec0" translate="yes" xml:space="preserve">
          <source>Newlines within the string will be removed.</source>
          <target state="translated">Новые строки внутри строки будут удалены.</target>
        </trans-unit>
        <trans-unit id="aca8d1cbfaf7c04f3f791c3ad1ffe332fa7cfcc1" translate="yes" xml:space="preserve">
          <source>Newly instantiated instances have &lt;code&gt;adding=True&lt;/code&gt; and &lt;code&gt;db=None&lt;/code&gt;, since they are yet to be saved. Instances fetched from a &lt;code&gt;QuerySet&lt;/code&gt; will have &lt;code&gt;adding=False&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; set to the alias of the associated database.</source>
          <target state="translated">У вновь созданных экземпляров есть &lt;code&gt;adding=True&lt;/code&gt; и &lt;code&gt;db=None&lt;/code&gt; , поскольку они еще не сохранены. Экземпляры, полученные из &lt;code&gt;QuerySet&lt;/code&gt; , будут иметь &lt;code&gt;adding=False&lt;/code&gt; и &lt;code&gt;db&lt;/code&gt; , установленное для псевдонима связанной базы данных.</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">Следующие шаги</target>
        </trans-unit>
        <trans-unit id="ac65e32833ef6dab9578aad7abb6397e0ec34f48" translate="yes" xml:space="preserve">
          <source>Next we can add more fine-grained logging. Here&amp;rsquo;s an example of how to make the logging system print more messages from just the &lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt; named logger:</source>
          <target state="translated">Затем мы можем добавить более детальное ведение журнала. Вот пример того, как заставить систему журналирования печатать больше сообщений только из &lt;a href=&quot;#django-logger&quot;&gt;django с&lt;/a&gt; именем logger:</target>
        </trans-unit>
        <trans-unit id="6d1add59418ea384f8c14da01d32dd82a0c03a15" translate="yes" xml:space="preserve">
          <source>Next we need to import the test client class (later in &lt;code&gt;tests.py&lt;/code&gt; we will use the &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; class, which comes with its own client, so this won&amp;rsquo;t be required):</source>
          <target state="translated">Далее нам нужно импортировать тестовый клиентский класс (позже в &lt;code&gt;tests.py&lt;/code&gt; мы будем использовать класс &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt; , который поставляется со своим собственным клиентом, так что это не потребуется):</target>
        </trans-unit>
        <trans-unit id="b111a7c819e1512c7c04b41004b2e237b4657367" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll be adding the &lt;code&gt;make_toast()&lt;/code&gt; function.</source>
          <target state="translated">Далее мы добавим &lt;code&gt;make_toast()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76a45c894c9d7c9724383aea29e1d93ed7e569dd" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll create &lt;code&gt;setup.cfg&lt;/code&gt; and &lt;code&gt;setup.py&lt;/code&gt; files which detail how to build and install the app. A full explanation of these files is beyond the scope of this tutorial, but the &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools documentation&lt;/a&gt; has a good explanation. Create the files &lt;code&gt;django-polls/setup.cfg&lt;/code&gt; and &lt;code&gt;django-polls/setup.py&lt;/code&gt; with the following contents:</source>
          <target state="translated">Далее мы создадим &lt;code&gt;setup.cfg&lt;/code&gt; и &lt;code&gt;setup.py&lt;/code&gt; ,в которых подробно описано, как создать и установить приложение. Полное объяснение этих файлов выходит за рамки данного руководства, но в &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;документации&lt;/a&gt; к setuptools есть хорошее объяснение. Создайте файлы &lt;code&gt;django-polls/setup.cfg&lt;/code&gt; и &lt;code&gt;django-polls/setup.py&lt;/code&gt; со следующим содержимым:</target>
        </trans-unit>
        <trans-unit id="2428b562258cc645b8a378441e5a8efef21e5410" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll need to ensure this &lt;code&gt;wsgi.py&lt;/code&gt; with a WSGI application object exists. As of Django version 1.4, &lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; will have created one for you; otherwise, you&amp;rsquo;ll need to create it. See the &lt;a href=&quot;index&quot;&gt;WSGI overview documentation&lt;/a&gt; for the default contents you should put in this file, and what else you can add to it.</source>
          <target state="translated">Далее нам нужно убедиться, что этот &lt;code&gt;wsgi.py&lt;/code&gt; с объектом приложения WSGI существует. Начиная с версии Django 1.4, &lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt; будет создавать ее для вас; в противном случае вам нужно будет его создать. См. &lt;a href=&quot;index&quot;&gt;Обзорную документацию WSGI&lt;/a&gt; для содержимого по умолчанию, которое вы должны поместить в этот файл, и что еще вы можете добавить к нему.</target>
        </trans-unit>
        <trans-unit id="4458b46e2456208cc57f0c3fe8234e81455698af" translate="yes" xml:space="preserve">
          <source>Next, add the following at the top of &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt;:</source>
          <target state="translated">Затем добавьте следующее в начало файла &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7e08d179fd99e5127a4244c23ceecf4befacdb5" translate="yes" xml:space="preserve">
          <source>Next, change into the directory where GEOS was unpacked, run the configure script, compile, and install:</source>
          <target state="translated">Далее,перейдите в каталог,в котором была распакована GEOS,запустите скрипт конфигурации,скомпилируйте и установите:</target>
        </trans-unit>
        <trans-unit id="97c565000f4ddc46a4029869cb4fde12f8283aea" translate="yes" xml:space="preserve">
          <source>Next, create the template used to render the tag&amp;rsquo;s output. This template is a fixed feature of the tag: the tag writer specifies it, not the template designer. Following our example, the template is very short:</source>
          <target state="translated">Затем создайте шаблон, используемый для визуализации вывода тега. Этот шаблон является фиксированной функцией тега: его определяет создатель тега, а не дизайнер шаблона. Следуя нашему примеру, шаблон очень короткий:</target>
        </trans-unit>
        <trans-unit id="b06e64f44c84b4c936c45d05747ad2632f4f84e0" translate="yes" xml:space="preserve">
          <source>Next, edit your &lt;code&gt;urls.py&lt;/code&gt; in the &lt;code&gt;geodjango&lt;/code&gt; application folder as follows:</source>
          <target state="translated">Затем отредактируйте ваш &lt;code&gt;urls.py&lt;/code&gt; в &lt;code&gt;geodjango&lt;/code&gt; приложения geodjango следующим образом:</target>
        </trans-unit>
        <trans-unit id="977397e98ad4a4b3fb6d6c58fd844d5bc9efb0cf" translate="yes" xml:space="preserve">
          <source>Next, edit your Apache configuration to add a location that you want only authenticated users to be able to view:</source>
          <target state="translated">Затем отредактируйте конфигурацию Apache,чтобы добавить местоположение,которое смогут просматривать только аутентифицированные пользователи:</target>
        </trans-unit>
        <trans-unit id="c378e99152f7b9fca914a5bcc9c3e1b7f8efc41d" translate="yes" xml:space="preserve">
          <source>Next, import the &lt;code&gt;load&lt;/code&gt; module, call the &lt;code&gt;run&lt;/code&gt; routine, and watch &lt;code&gt;LayerMapping&lt;/code&gt; do the work:</source>
          <target state="translated">Затем импортируйте модуль &lt;code&gt;load&lt;/code&gt; , вызовите подпрограмму &lt;code&gt;run&lt;/code&gt; и посмотрите, как &lt;code&gt;LayerMapping&lt;/code&gt; выполняет работу:</target>
        </trans-unit>
        <trans-unit id="0ebf4ba3fa141f4156fed974267f5f3468106b7b" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s register it for &lt;code&gt;IntegerField&lt;/code&gt;:</source>
          <target state="translated">Далее, давайте зарегистрируем его для &lt;code&gt;IntegerField&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="70a1521747b230808ef34f3a484673e2d3e2c778" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s register it:</source>
          <target state="translated">Далее, давайте зарегистрируем это:</target>
        </trans-unit>
        <trans-unit id="654260d8e6502409d1293980e5369dedc75a1e08" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command to install any extra needed database records such as admin permissions and content types:</source>
          <target state="translated">Затем выполните команду &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; ,&lt;/a&gt; чтобы установить любые дополнительные необходимые записи базы данных, такие как права администратора и типы контента:</target>
        </trans-unit>
        <trans-unit id="7bd185e2faa9b778aa47cb7ad13b219b635277a4" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;code&gt;configure&lt;/code&gt; script &amp;ndash; however the &lt;code&gt;CFLAGS&lt;/code&gt; environment variable needs to be customized so that SQLite knows to build the R*Tree module:</source>
          <target state="translated">Затем запустите скрипт &lt;code&gt;configure&lt;/code&gt; - однако переменную среды &lt;code&gt;CFLAGS&lt;/code&gt; необходимо настроить так, чтобы SQLite знал, как построить модуль R * Tree:</target>
        </trans-unit>
        <trans-unit id="6725dcdbf417b3ebc4306851939ccba5bb592dda" translate="yes" xml:space="preserve">
          <source>Next, run the Django command-line utilities to create the database tables automatically:</source>
          <target state="translated">Далее запустите утилиты командной строки Django для автоматического создания таблиц БД:</target>
        </trans-unit>
        <trans-unit id="3d2afbfa24772718392bac2a4e9a06485063aa1a" translate="yes" xml:space="preserve">
          <source>Next, start up the Django development server:</source>
          <target state="translated">Далее запустите сервер разработки Django:</target>
        </trans-unit>
        <trans-unit id="71a03345430550cc7e9c59db9c5b7395c24fb91c" translate="yes" xml:space="preserve">
          <source>Next, untar the source code archive, and extract the datum shifting files in the &lt;code&gt;nad&lt;/code&gt; subdirectory. This must be done &lt;em&gt;prior&lt;/em&gt; to configuration:</source>
          <target state="translated">Затем распакуйте архив с исходным кодом и извлеките файлы смещения данных в подкаталоге &lt;code&gt;nad&lt;/code&gt; . Это должно быть сделано &lt;em&gt;до&lt;/em&gt; настройки:</target>
        </trans-unit>
        <trans-unit id="021c776346f3be3e04eaad68d47bfd2f60ac64ea" translate="yes" xml:space="preserve">
          <source>Next, we define a function called &lt;code&gt;current_datetime&lt;/code&gt;. This is the view function. Each view function takes an &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object as its first parameter, which is typically named &lt;code&gt;request&lt;/code&gt;.</source>
          <target state="translated">Далее мы определим функцию с именем &lt;code&gt;current_datetime&lt;/code&gt; . Это функция просмотра. Каждая функция представления принимает объект &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; в&lt;/a&gt; качестве первого параметра, который обычно называется &lt;code&gt;request&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="285aab5cab4e6d27cc92dd179795c52e99d8e048" translate="yes" xml:space="preserve">
          <source>Next, we write the method responsible for generating the SQL:</source>
          <target state="translated">Далее мы пишем метод,отвечающий за генерацию SQL:</target>
        </trans-unit>
        <trans-unit id="0c7a20054827a1f65c3805460f6867fbf008e055" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll create a subdirectory for images. Create an &lt;code&gt;images&lt;/code&gt; subdirectory in the &lt;code&gt;polls/static/polls/&lt;/code&gt; directory. Inside this directory, put an image called &lt;code&gt;background.gif&lt;/code&gt;. In other words, put your image in &lt;code&gt;polls/static/polls/images/background.gif&lt;/code&gt;.</source>
          <target state="translated">Далее мы создадим подкаталог для изображений. Создайте подкаталог &lt;code&gt;images&lt;/code&gt; в каталоге &lt;code&gt;polls/static/polls/&lt;/code&gt; . Внутри этого каталога поместите изображение с именем &lt;code&gt;background.gif&lt;/code&gt; . Другими словами, поместите ваше изображение в &lt;code&gt;polls/static/polls/images/background.gif&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2448d8012ce49bb13b445b0d77f557096a6e430b" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll need to inform our &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; of the action. This works just like any other configuration option. So, the complete &lt;code&gt;admin.py&lt;/code&gt; with the action and its registration would look like:</source>
          <target state="translated">Далее нам нужно сообщить нашему &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt; о действии. Это работает так же, как и любой другой вариант конфигурации. Итак, полный &lt;code&gt;admin.py&lt;/code&gt; с действием и его регистрацией будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="96a65e04544e3b461117b55fa16483b977d28de6" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll write the &lt;code&gt;PublisherBookList&lt;/code&gt; view itself:</source>
          <target state="translated">Далее мы напишем само представление &lt;code&gt;PublisherBookList&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a0e179a073e3c81a9e2691303a73447da0cb82ce" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;re going to remove our old &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;detail&lt;/code&gt;, and &lt;code&gt;results&lt;/code&gt; views and use Django&amp;rsquo;s generic views instead. To do so, open the &lt;code&gt;polls/views.py&lt;/code&gt; file and change it like so:</source>
          <target state="translated">Далее мы собираемся удалить наши старые представления &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;detail&lt;/code&gt; и &lt;code&gt;results&lt;/code&gt; и использовать вместо них общие представления Django. Для этого откройте файл &lt;code&gt;polls/views.py&lt;/code&gt; и измените его следующим образом:</target>
        </trans-unit>
        <trans-unit id="5f86a40e869fcd75bbca46dc9ff1ce17defbb2ec" translate="yes" xml:space="preserve">
          <source>Next, you must replace the &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">Далее, вы должны заменить &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt; &lt;code&gt;ModelBackend&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt; настройки:</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="20edec5d0ae49d85148c06bcee71d165b579befe" translate="yes" xml:space="preserve">
          <source>No arguments: All apps have all of their migrations run.</source>
          <target state="translated">Никаких аргументов:Все приложения имеют все свои миграции.</target>
        </trans-unit>
        <trans-unit id="d14d96d5d8b6c42d1f07720884470a5df54ddfae" translate="yes" xml:space="preserve">
          <source>No bulletproof technical solution exists at the framework level to safely validate all user uploaded file content, however, there are some other steps you can take to mitigate these attacks:</source>
          <target state="translated">На уровне фреймворка не существует пуленепробиваемого технического решения для безопасной проверки всего загруженного пользователями содержимого файлов,однако есть некоторые другие шаги,которые можно предпринять для уменьшения количества таких атак:</target>
        </trans-unit>
        <trans-unit id="3d8384f7fd7da9b2b422f4c883195efb29896bda" translate="yes" xml:space="preserve">
          <source>No checking is done on the SQL statement that is passed in to &lt;code&gt;.raw()&lt;/code&gt;. Django expects that the statement will return a set of rows from the database, but does nothing to enforce that. If the query does not return rows, a (possibly cryptic) error will result.</source>
          <target state="translated">Не выполняется проверка оператора SQL, переданного в &lt;code&gt;.raw()&lt;/code&gt; . Джанго ожидает, что оператор вернет набор строк из базы данных, но ничего не предпринимает, чтобы обеспечить это. Если запрос не возвращает строки, возникнет (возможно, загадочная) ошибка.</target>
        </trans-unit>
        <trans-unit id="3b1825829e0d568b54e3f2738dbb38d3f1fe4df1" translate="yes" xml:space="preserve">
          <source>No gettext?</source>
          <target state="translated">Без текста?</target>
        </trans-unit>
        <trans-unit id="77e07c3be309fde63eb2e14702370190c908a04a" translate="yes" xml:space="preserve">
          <source>No matter which database backend we are using, this will mean that &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; and other SQL commands create the right column type for storing a string.</source>
          <target state="translated">Независимо от того, какую базу данных мы используем, это будет означать, что &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; и другие команды SQL создают правильный тип столбца для хранения строки.</target>
        </trans-unit>
        <trans-unit id="12930b65de7726f62fe80a0b6083ac02553c2c82" translate="yes" xml:space="preserve">
          <source>No referrer: do not send a &lt;code&gt;Referer&lt;/code&gt; header at all.</source>
          <target state="translated">Нет ссылающейся: Не послать &lt;code&gt;Referer&lt;/code&gt; заголовок на всех.</target>
        </trans-unit>
        <trans-unit id="4a2f33f43afb49828b5490390f091674882fcb65" translate="yes" xml:space="preserve">
          <source>No safety guarantee</source>
          <target state="translated">Нет гарантии безопасности</target>
        </trans-unit>
        <trans-unit id="5d4134379c894768a5b0b531aeca8ad07511ff4d" translate="yes" xml:space="preserve">
          <source>No, that&amp;rsquo;s not a typo: the &amp;ldquo;update&amp;rdquo; middleware must be first in the list, and the &amp;ldquo;fetch&amp;rdquo; middleware must be last. The details are a bit obscure, but see &lt;a href=&quot;#order-of-middleware&quot;&gt;Order of MIDDLEWARE&lt;/a&gt; below if you&amp;rsquo;d like the full story.</source>
          <target state="translated">Нет, это не опечатка: промежуточное ПО &amp;laquo;обновление&amp;raquo; должно быть первым в списке, а промежуточное ПО &amp;laquo;выборка&amp;raquo; должно быть последним. Детали немного неясны, но смотрите &lt;a href=&quot;#order-of-middleware&quot;&gt;Порядок СРЕДНЕГО ОБЕСПЕЧЕНИЯ&lt;/a&gt; ниже, если вам нужна полная история.</target>
        </trans-unit>
        <trans-unit id="0bae75e75a1d8c0944e2819de3d77ea82e28a278" translate="yes" xml:space="preserve">
          <source>No, this is by design. Not linking CSRF protection to a session allows using the protection on sites such as a &lt;code&gt;pastebin&lt;/code&gt; that allow submissions from anonymous users which don&amp;rsquo;t have a session.</source>
          <target state="translated">Нет, это по замыслу. Отсутствие привязки защиты CSRF к сеансу позволяет использовать защиту на таких сайтах, как &lt;code&gt;pastebin&lt;/code&gt; которые разрешают отправку анонимных пользователей, у которых нет сеанса.</target>
        </trans-unit>
        <trans-unit id="75ac05ec01bf669ca63b694f09f01bafc803a917" translate="yes" xml:space="preserve">
          <source>No, this is by design. Not linking CSRF protection to a session allows using the protection on sites such as a &lt;em&gt;pastebin&lt;/em&gt; that allow submissions from anonymous users which don&amp;rsquo;t have a session.</source>
          <target state="translated">Нет, это сделано намеренно. Отсутствие привязки защиты CSRF к сеансу позволяет использовать защиту на таких сайтах, как &lt;em&gt;pastebin,&lt;/em&gt; которые позволяют &lt;em&gt;отправлять&lt;/em&gt; сообщения от анонимных пользователей, у которых нет сеанса.</target>
        </trans-unit>
        <trans-unit id="75a6e20e5d3d2a956555b09b0ceec04066703569" translate="yes" xml:space="preserve">
          <source>No, this is by design. Without a man-in-the-middle attack, there is no way for an attacker to send a CSRF token cookie to a victim&amp;rsquo;s browser, so a successful attack would need to obtain the victim&amp;rsquo;s browser&amp;rsquo;s cookie via XSS or similar, in which case an attacker usually doesn&amp;rsquo;t need CSRF attacks.</source>
          <target state="translated">Нет, это по замыслу. Без атаки &amp;laquo;человек посередине&amp;raquo; злоумышленник не может отправить куки-файл с токеном CSRF в браузер жертвы, поэтому для успешной атаки потребуется получить куки-файл браузера жертвы через XSS или подобное, в этом случае Злоумышленнику обычно не нужны CSRF-атаки.</target>
        </trans-unit>
        <trans-unit id="bd0b455c46e5ca610bef77120da2e5ba9eaebc54" translate="yes" xml:space="preserve">
          <source>Non-atomic migrations</source>
          <target state="translated">Неатомные миграции</target>
        </trans-unit>
        <trans-unit id="69833b38232d3e89572bdb6759074b9ad006c98c" translate="yes" xml:space="preserve">
          <source>Non-field errors (and/or hidden field errors that are rendered at the top of the form when using helpers like &lt;code&gt;form.as_p()&lt;/code&gt;) will be rendered with an additional class of &lt;code&gt;nonfield&lt;/code&gt; to help distinguish them from field-specific errors. For example, &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; would look like:</source>
          <target state="translated">Неполевые ошибки (и / или скрытые полевые ошибки, которые отображаются в верхней части формы при использовании таких помощников, как &lt;code&gt;form.as_p()&lt;/code&gt; ), будут отображаться с дополнительным классом &lt;code&gt;nonfield&lt;/code&gt; чтобы помочь отличить их от ошибок, специфичных для поля. Например, &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="c32acd7553559b10b098232e03fd1062116c6e62" translate="yes" xml:space="preserve">
          <source>None of this is true in a time zone aware environment:</source>
          <target state="translated">Ничего из этого не происходит в среде с учетом часовых поясов:</target>
        </trans-unit>
        <trans-unit id="6c905dba689783614e7cd8189d7380a8142bf699" translate="yes" xml:space="preserve">
          <source>Normal Python name resolution rules apply. If you have multiple base classes that declare a &lt;code&gt;Meta&lt;/code&gt; inner class, only the first one will be used. This means the child&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt;, if it exists, otherwise the &lt;code&gt;Meta&lt;/code&gt; of the first parent, etc.</source>
          <target state="translated">Применяются нормальные правила разрешения имен Python. Если у вас есть несколько базовых классов, которые объявляют внутренний класс &lt;code&gt;Meta&lt;/code&gt; , будет использоваться только первый. Это означает, что &lt;code&gt;Meta&lt;/code&gt; ребенка , если она существует, в противном случае &lt;code&gt;Meta&lt;/code&gt; первого родителя и т. Д.</target>
        </trans-unit>
        <trans-unit id="787e251fceb20e20f58285f09344abec1dac3b8e" translate="yes" xml:space="preserve">
          <source>Normal Python unit test classes extend a base class of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. Django provides a few extensions of this base class:</source>
          <target state="translated">Обычные классы модульных тестов Python расширяют базовый класс &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; . Django предоставляет несколько расширений этого базового класса:</target>
        </trans-unit>
        <trans-unit id="1ad536357eed7c72cb7dc875d4df958bc22cdd9b" translate="yes" xml:space="preserve">
          <source>Normalizes email addresses by lowercasing the domain portion of the email address.</source>
          <target state="translated">Нормализует адреса электронной почты,уменьшая доменную часть адреса электронной почты.</target>
        </trans-unit>
        <trans-unit id="d2bd9144908a9d20be8073dbbaa165af1378fd10" translate="yes" xml:space="preserve">
          <source>Normalizes the email by calling &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager.normalize_email&quot;&gt;&lt;code&gt;BaseUserManager.normalize_email()&lt;/code&gt;&lt;/a&gt;. If you override this method, be sure to call &lt;code&gt;super()&lt;/code&gt; to retain the normalization.</source>
          <target state="translated">Нормализует электронную почту, вызывая &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager.normalize_email&quot;&gt; &lt;code&gt;BaseUserManager.normalize_email()&lt;/code&gt; &lt;/a&gt; . Если вы переопределите этот метод, обязательно вызовите &lt;code&gt;super()&lt;/code&gt; чтобы сохранить нормализацию.</target>
        </trans-unit>
        <trans-unit id="ebca8d3e7cb9434f28975cda931653991094e57c" translate="yes" xml:space="preserve">
          <source>Normalizes the username by calling &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.normalize_username&quot;&gt;&lt;code&gt;normalize_username()&lt;/code&gt;&lt;/a&gt;. If you override this method, be sure to call &lt;code&gt;super()&lt;/code&gt; to retain the normalization.</source>
          <target state="translated">Нормализует имя пользователя, вызывая &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.normalize_username&quot;&gt; &lt;code&gt;normalize_username()&lt;/code&gt; &lt;/a&gt; . Если вы переопределите этот метод, обязательно вызовите &lt;code&gt;super()&lt;/code&gt; чтобы сохранить нормализацию.</target>
        </trans-unit>
        <trans-unit id="c716c10654bb0f9670d96ab83c4ff9181bbc894e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Нормализуется на: &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; -&lt;/a&gt; объект.</target>
        </trans-unit>
        <trans-unit id="23571b266e909356ef73bc9292429433256272f7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A &lt;code&gt;QuerySet&lt;/code&gt; of model instances.</source>
          <target state="translated">Нормализуется на: &lt;code&gt;QuerySet&lt;/code&gt; экземпляров модели.</target>
        </trans-unit>
        <trans-unit id="d8db01bd92878bf8c9d9ba50bf01d544d075050e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Нормализуется до: Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f06883286dbd9b7a7366dcec2b203da4a388e3d8" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; value.</source>
          <target state="translated">Нормализуется на: значение Python &lt;code&gt;True&lt;/code&gt; или &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4886d2a0f53043db52f5cde8feddfa0bc26c7b2" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; value.</source>
          <target state="translated">Нормализуется до значения Python &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;False&lt;/code&gt; или &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="605b63bef291da49b100f180cd452f4da48ba0c9" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.date&lt;/code&gt; object.</source>
          <target state="translated">Нормализуется до: объекта Python &lt;code&gt;datetime.date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ca92c54da10e1d5c685996a1b8233213ac1d451" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.datetime&lt;/code&gt; object.</source>
          <target state="translated">Нормализуется до: объекта Python &lt;code&gt;datetime.datetime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f27a4c57bf6c2c00615c6bd981ee576ffc7d62f7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;datetime.time&lt;/code&gt; object.</source>
          <target state="translated">Нормализуется на: объект &lt;code&gt;datetime.time&lt;/code&gt; Python .</target>
        </trans-unit>
        <trans-unit id="8208bd6963bb476e18fec3f6260c3df00f3671a6" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python &lt;code&gt;decimal&lt;/code&gt;.</source>
          <target state="translated">Нормализуется до: &lt;code&gt;decimal&lt;/code&gt; Python .</target>
        </trans-unit>
        <trans-unit id="77e22ea42119f399cbae9e4153b4d1808eaee60c" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python float.</source>
          <target state="translated">Нормализует:Плавучий питон.</target>
        </trans-unit>
        <trans-unit id="3a1c8382df016399dc527e0652beec43e30a44b8" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python integer.</source>
          <target state="translated">Нормализует:Питоновое целое число.</target>
        </trans-unit>
        <trans-unit id="3cd0055e6682f053f1055a5133dd78f42a15a194" translate="yes" xml:space="preserve">
          <source>Normalizes to: A Python representation of the JSON value (usually as a &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;), depending on &lt;a href=&quot;#django.forms.JSONField.decoder&quot;&gt;&lt;code&gt;JSONField.decoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Нормализуется до: представления Python значения JSON (обычно в виде &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; или &lt;code&gt;None&lt;/code&gt; ), в зависимости от &lt;a href=&quot;#django.forms.JSONField.decoder&quot;&gt; &lt;code&gt;JSONField.decoder&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a22741f23a65dd20cd7fdbc9a7d00afdfb0db9cf" translate="yes" xml:space="preserve">
          <source>Normalizes to: A list of strings.</source>
          <target state="translated">Нормализует:Список строк.</target>
        </trans-unit>
        <trans-unit id="03edfdc79677e527c568c032a0794b48135d3b8f" translate="yes" xml:space="preserve">
          <source>Normalizes to: A list of values of the type provided by the &lt;code&gt;coerce&lt;/code&gt; argument.</source>
          <target state="translated">Нормализуется на: список значений типа, предоставленного аргументом &lt;code&gt;coerce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a4cda7e66de907da2a21e509ad56f05074178a7" translate="yes" xml:space="preserve">
          <source>Normalizes to: A model instance.</source>
          <target state="translated">Нормализует:Образцовый экземпляр.</target>
        </trans-unit>
        <trans-unit id="55888b9b4ff1eb1ec8ba6a3bbc52308ac1adbfc2" translate="yes" xml:space="preserve">
          <source>Normalizes to: A string.</source>
          <target state="translated">Нормализует:Строка.</target>
        </trans-unit>
        <trans-unit id="24a53ad769cff7f9d766b78fc9dcb56af2255d2e" translate="yes" xml:space="preserve">
          <source>Normalizes to: A string. IPv6 addresses are normalized as described below.</source>
          <target state="translated">Нормализует:Строка.Адреса IPv6 нормализуются,как описано ниже.</target>
        </trans-unit>
        <trans-unit id="f17a7f7bab37ec3a1b4b6f3ae02f34271a88be2a" translate="yes" xml:space="preserve">
          <source>Normalizes to: A value of the type provided by the &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt;&lt;code&gt;coerce&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">Нормализуется до: значения типа, предоставляемого аргументом &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt; &lt;code&gt;coerce&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7beb335ed1ad3ce19afe6d6855d444ffea421d" translate="yes" xml:space="preserve">
          <source>Normalizes to: An &lt;code&gt;UploadedFile&lt;/code&gt; object that wraps the file content and file name into a single object.</source>
          <target state="translated">Нормализуется на: объект &lt;code&gt;UploadedFile&lt;/code&gt; , который упаковывает содержимое файла и имя файла в один объект.</target>
        </trans-unit>
        <trans-unit id="4e7bc8818cf68569ca76c5ed75dcf2518442499f" translate="yes" xml:space="preserve">
          <source>Normalizes to: the type returned by the &lt;code&gt;compress&lt;/code&gt; method of the subclass.</source>
          <target state="translated">Нормализуется на: тип, возвращаемый методом &lt;code&gt;compress&lt;/code&gt; подкласса.</target>
        </trans-unit>
        <trans-unit id="4ed9d7700d72a59a0582b3f18f6a1b3e16b71b15" translate="yes" xml:space="preserve">
          <source>Normally the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag will not work if &lt;code&gt;CsrfViewMiddleware.process_view&lt;/code&gt; or an equivalent like &lt;code&gt;csrf_protect&lt;/code&gt; has not run. The view decorator &lt;code&gt;requires_csrf_token&lt;/code&gt; can be used to ensure the template tag does work. This decorator works similarly to &lt;code&gt;csrf_protect&lt;/code&gt;, but never rejects an incoming request.</source>
          <target state="translated">Обычно &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt; шаблона csrf_token не будет работать, если &lt;code&gt;CsrfViewMiddleware.process_view&lt;/code&gt; или его эквивалент, такой как &lt;code&gt;csrf_protect&lt;/code&gt; , не запущен. Вид декоратор &lt;code&gt;requires_csrf_token&lt;/code&gt; может быть использован для обеспечения шаблонный тег работает. Этот декоратор работает аналогично &lt;code&gt;csrf_protect&lt;/code&gt; , но никогда не отклоняет входящий запрос.</target>
        </trans-unit>
        <trans-unit id="cdf12ca4e299dccc08f02ece3bea84cff2a538e5" translate="yes" xml:space="preserve">
          <source>Normally the template name is relative to the template loader&amp;rsquo;s root directory. A string argument may also be a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt; as described in the &lt;a href=&quot;#std:templatetag-extends&quot;&gt;&lt;code&gt;extends&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">Обычно имя шаблона относится к корневому каталогу загрузчика шаблонов. Строковый аргумент также может быть относительным путем, начинающимся с &lt;code&gt;./&lt;/code&gt; или &lt;code&gt;../&lt;/code&gt; , как описано в теге &lt;a href=&quot;#std:templatetag-extends&quot;&gt; &lt;code&gt;extends&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="735ce792d80ea48985a0c3c2c332b181a7542837" translate="yes" xml:space="preserve">
          <source>Normally the template name is relative to the template loader&amp;rsquo;s root directory. A string argument may also be a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;. For example, assume the following directory structure:</source>
          <target state="translated">Обычно имя шаблона относится к корневому каталогу загрузчика шаблонов. Строковый аргумент также может быть относительным путем, начинающимся с &lt;code&gt;./&lt;/code&gt; или &lt;code&gt;../&lt;/code&gt; . Например, предположим следующую структуру каталогов:</target>
        </trans-unit>
        <trans-unit id="2dd3dec7507f373967972687c007b5c2f2200db3" translate="yes" xml:space="preserve">
          <source>Normally you&amp;rsquo;ll only be adding extra tables that don&amp;rsquo;t already appear in the query. However, if the case outlined above does occur, there are a few solutions. First, see if you can get by without including the extra table and use the one already in the query. If that isn&amp;rsquo;t possible, put your &lt;code&gt;extra()&lt;/code&gt; call at the front of the queryset construction so that your table is the first use of that table. Finally, if all else fails, look at the query produced and rewrite your &lt;code&gt;where&lt;/code&gt; addition to use the alias given to your extra table. The alias will be the same each time you construct the queryset in the same way, so you can rely upon the alias name to not change.</source>
          <target state="translated">Обычно вы будете добавлять только дополнительные таблицы, которые еще не отображаются в запросе. Однако, если описанный выше случай действительно имеет место, есть несколько решений. Во-первых, посмотрите, сможете ли вы обойтись без включения дополнительной таблицы и используйте ту, которая уже есть в запросе. Если это невозможно, поместите ваш вызов &lt;code&gt;extra()&lt;/code&gt; в начале конструкции набора запросов, чтобы ваша таблица использовалась первой в этой таблице. Наконец, если ничего не помогает, посмотрите на полученный запрос и перепишите свое дополнение &lt;code&gt;where&lt;/code&gt; , чтобы использовать псевдоним, указанный в вашей дополнительной таблице. Псевдоним будет одинаковым каждый раз, когда вы создаете набор запросов одним и тем же способом, поэтому вы можете полагаться на имя псевдонима, чтобы не изменять его.</target>
        </trans-unit>
        <trans-unit id="4f40a32d698fbe63e70a0ff00283bd488789116d" translate="yes" xml:space="preserve">
          <source>Normally, objects have three save options: &amp;ldquo;Save&amp;rdquo;, &amp;ldquo;Save and continue editing&amp;rdquo;, and &amp;ldquo;Save and add another&amp;rdquo;. If &lt;code&gt;save_as&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &amp;ldquo;Save and add another&amp;rdquo; will be replaced by a &amp;ldquo;Save as new&amp;rdquo; button that creates a new object (with a new ID) rather than updating the existing object.</source>
          <target state="translated">Обычно объекты имеют три варианта сохранения: &amp;laquo;Сохранить&amp;raquo;, &amp;laquo;Сохранить и продолжить редактирование&amp;raquo; и &amp;laquo;Сохранить и добавить другое&amp;raquo;. Если &lt;code&gt;save_as&lt;/code&gt; является относящимся к &lt;code&gt;True&lt;/code&gt; , &amp;laquo;Сохранить и добавить еще один&amp;raquo; будет заменен на кнопку &amp;laquo;Сохранить как новые&amp;raquo; , который создает новый объект (с новым идентификатором) , а не обновление существующего объекта.</target>
        </trans-unit>
        <trans-unit id="fc1a750f10e8d842b641d322f43c6420831581c7" translate="yes" xml:space="preserve">
          <source>Normally, the save buttons appear only at the bottom of the forms. If you set &lt;code&gt;save_on_top&lt;/code&gt;, the buttons will appear both on the top and the bottom.</source>
          <target state="translated">Обычно кнопки сохранения отображаются только в нижней части формы. Если вы установите &lt;code&gt;save_on_top&lt;/code&gt; , кнопки появятся как сверху, так и снизу.</target>
        </trans-unit>
        <trans-unit id="159f39779a59cc0691baa39db4014b657a742b47" translate="yes" xml:space="preserve">
          <source>Normally, you should always use &lt;a href=&quot;#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; to define URLs within your application. However, if your application constructs part of the URL hierarchy itself, you may occasionally need to generate URLs. In that case, you need to be able to find the base URL of the Django project within its Web server (normally, &lt;a href=&quot;#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; takes care of this for you). In that case, you can call &lt;code&gt;get_script_prefix()&lt;/code&gt;, which will return the script prefix portion of the URL for your Django project. If your Django project is at the root of its web server, this is always &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">Обычно вы всегда должны использовать &lt;a href=&quot;#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; для определения URL в вашем приложении. Однако, если ваше приложение создает часть иерархии URL-адресов, вам иногда может потребоваться сгенерировать URL-адреса. В этом случае вы должны быть в состоянии найти базовый URL-адрес проекта Django на его веб-сервере (как правило, &lt;a href=&quot;#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; позаботится об этом за вас). В этом случае вы можете вызвать &lt;code&gt;get_script_prefix()&lt;/code&gt; , который вернет часть префикса сценария URL для вашего проекта Django. Если ваш проект Django находится в корне своего веб-сервера, это всегда &lt;code&gt;&quot;/&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e93810e7ce2337ee98760b872339538f911e403d" translate="yes" xml:space="preserve">
          <source>Normally, you will not need to override the defaults in this fashion. The Django defaults are sufficiently tame that you can safely use them. Be aware that if you do pass in a new default module, it entirely &lt;em&gt;replaces&lt;/em&gt; the Django defaults, so you must specify a value for every possible setting that might be used in that code you are importing. Check in &lt;code&gt;django.conf.settings.global_settings&lt;/code&gt; for the full list.</source>
          <target state="translated">Обычно вам не нужно переопределять значения по умолчанию таким способом. Значения по умолчанию в Django достаточно ручные, чтобы их можно было безопасно использовать. Помните, что если вы передадите новый модуль по умолчанию, он полностью &lt;em&gt;заменит&lt;/em&gt; значения по умолчанию для Django, поэтому вы должны указать значение для каждого возможного параметра, который может использоваться в импортируемом вами коде. Проверьте в &lt;code&gt;django.conf.settings.global_settings&lt;/code&gt; для полного списка.</target>
        </trans-unit>
        <trans-unit id="0bf43317eddd783b9efbccb3bf152e0b1cdb043f" translate="yes" xml:space="preserve">
          <source>Normally, you won&amp;rsquo;t have to worry about lazy translations. Just be aware that if you examine an object and it claims to be a &lt;code&gt;django.utils.functional.__proxy__&lt;/code&gt; object, it is a lazy translation. Calling &lt;code&gt;str()&lt;/code&gt; with the lazy translation as the argument will generate a string in the current locale.</source>
          <target state="translated">Обычно вам не придется беспокоиться о ленивых переводах. Просто имейте в &lt;code&gt;django.utils.functional.__proxy__&lt;/code&gt; что если вы исследуете объект, и он утверждает , что он является объектом django.utils.functional .__ proxy__ , это ленивый перевод. Вызов &lt;code&gt;str()&lt;/code&gt; с ленивым переводом в качестве аргумента сгенерирует строку в текущей локали.</target>
        </trans-unit>
        <trans-unit id="887896ca3cf9796c1df0cd00c7595e083f030487" translate="yes" xml:space="preserve">
          <source>Normally, you&amp;rsquo;ll only need to use &lt;code&gt;force_str()&lt;/code&gt;. Call it as early as possible on any input data that might be either a string or a bytestring, and from then on, you can treat the result as always being a string.</source>
          <target state="translated">Обычно вам нужно использовать только &lt;code&gt;force_str()&lt;/code&gt; . Вызывайте его как можно раньше для любых входных данных, которые могут быть либо строкой, либо строкой байтов, и с тех пор вы можете рассматривать результат как строку.</target>
        </trans-unit>
        <trans-unit id="f226bb2d80ebbb2763506939a29736102f7ef23d" translate="yes" xml:space="preserve">
          <source>Normally, you&amp;rsquo;re either writing a Django field to match a particular database column type, or you will need a way to convert your data to, say, a string.</source>
          <target state="translated">Обычно вы пишете поле Django для соответствия определенному типу столбца базы данных, или вам нужен способ преобразования ваших данных, скажем, в строку.</target>
        </trans-unit>
        <trans-unit id="ce4466a62d04187676c02df4614fbce2c4ba7436" translate="yes" xml:space="preserve">
          <source>Not all backends support all functions, so refer to the documentation of each function to see if your database backend supports the function you want to use. If you call a geographic function on a backend that doesn&amp;rsquo;t support it, you&amp;rsquo;ll get a &lt;code&gt;NotImplementedError&lt;/code&gt; exception.</source>
          <target state="translated">Не все бэкэнды поддерживают все функции, поэтому обратитесь к документации по каждой функции, чтобы узнать, поддерживает ли бэкэнд вашей базы данных ту функцию, которую вы хотите использовать. Если вы &lt;code&gt;NotImplementedError&lt;/code&gt; географическую функцию в бэкэнде, который ее не поддерживает, вы получите исключение NotImplementedError .</target>
        </trans-unit>
        <trans-unit id="d9b293fdef69d661a6a9fab7edba5fc8c10298b9" translate="yes" xml:space="preserve">
          <source>Not all features of the &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class are available through the &lt;a href=&quot;#django.core.mail.send_mail&quot;&gt;&lt;code&gt;send_mail()&lt;/code&gt;&lt;/a&gt; and related wrapper functions. If you wish to use advanced features, such as BCC&amp;rsquo;ed recipients, file attachments, or multi-part email, you&amp;rsquo;ll need to create &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances directly.</source>
          <target state="translated">Не все функции класса &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; доступны через &lt;a href=&quot;#django.core.mail.send_mail&quot;&gt; &lt;code&gt;send_mail()&lt;/code&gt; &lt;/a&gt; и связанные функции-оболочки. Если вы хотите использовать расширенные функции, такие как получатели BCC, вложения файлов или электронная почта, &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; нескольких частей, вам необходимо напрямую создавать экземпляры EmailMessage .</target>
        </trans-unit>
        <trans-unit id="affd0634cea2588f77f986208d4ea492e34b7daf" translate="yes" xml:space="preserve">
          <source>Not all mixins can be used together, and not all generic class based views can be used with all other mixins. Here we present a few examples that do work; if you want to bring together other functionality then you&amp;rsquo;ll have to consider interactions between attributes and methods that overlap between the different classes you&amp;rsquo;re using, and how &lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;method resolution order&lt;/a&gt; will affect which versions of the methods will be called in what order.</source>
          <target state="translated">Не все миксины могут использоваться вместе, и не все общие представления на основе классов могут использоваться со всеми другими миксинами. Здесь мы представляем несколько примеров, которые действительно работают; если вы хотите объединить другие функциональные возможности, вам придется рассмотреть взаимодействие между атрибутами и методами, которые перекрываются между различными классами, которые вы используете, и то, как &lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;порядок разрешения методов&lt;/a&gt; повлияет на то, какие версии методов будут вызываться в каком порядке.</target>
        </trans-unit>
        <trans-unit id="391ee549e2bdb434e349e78237a5df19f1d67675" translate="yes" xml:space="preserve">
          <source>Not contained within. This is the negation of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">Не содержится внутри. Это отрицание оператора &lt;code&gt;in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d73f1f8457b1700a505f1a5f8a7aa88ca0436156" translate="yes" xml:space="preserve">
          <source>Not every &lt;code&gt;QuerySet&lt;/code&gt; method makes sense at the &lt;code&gt;Manager&lt;/code&gt; level; for instance we intentionally prevent the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;QuerySet.delete()&lt;/code&gt;&lt;/a&gt; method from being copied onto the &lt;code&gt;Manager&lt;/code&gt; class.</source>
          <target state="translated">Не каждый метод &lt;code&gt;QuerySet&lt;/code&gt; имеет смысл на уровне &lt;code&gt;Manager&lt;/code&gt; ; например, мы намеренно запрещаем копирование метода &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;QuerySet.delete()&lt;/code&gt; &lt;/a&gt; в класс &lt;code&gt;Manager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a63cbf6b4d6edab9e07d126c7a36e814a81f1ec6" translate="yes" xml:space="preserve">
          <source>Not every template in &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; may be overridden per app or per model. The following can:</source>
          <target state="translated">Не каждый шаблон в &lt;code&gt;contrib/admin/templates/admin&lt;/code&gt; может быть переопределен для приложения или модели. Следующее может:</target>
        </trans-unit>
        <trans-unit id="acba9927675c8a60aae9adcfef202f41a6c00c6d" translate="yes" xml:space="preserve">
          <source>Not found anything? See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;FAQ: Getting Help&lt;/a&gt; for information on getting support and asking questions to the community.</source>
          <target state="translated">Ничего не нашли? См. Раздел &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;FAQ: Получение помощи&lt;/a&gt; для получения информации о том, как получить поддержку и задать вопросы сообществу.</target>
        </trans-unit>
        <trans-unit id="2fc7fe98cf64c700ce9b0cc4bb17c0caec7c3361" translate="yes" xml:space="preserve">
          <source>Not represented in the form</source>
          <target state="translated">Не представлено в форме</target>
        </trans-unit>
        <trans-unit id="d3f69563db3e7715296e2ae2d359c0c8bdd2cce0" translate="yes" xml:space="preserve">
          <source>Not using Django templates?</source>
          <target state="translated">Не используете шаблоны Django?</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="296473149ccc264ba7b462302f22e07ee1613215" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;{{ article.pub_date|date:&quot;F j, Y&quot; }}&lt;/code&gt; uses a Unix-style &amp;ldquo;pipe&amp;rdquo; (the &amp;ldquo;|&amp;rdquo; character). This is called a template filter, and it&amp;rsquo;s a way to filter the value of a variable. In this case, the date filter formats a Python datetime object in the given format (as found in PHP&amp;rsquo;s date function).</source>
          <target state="translated">Примечание &lt;code&gt;{{ article.pub_date|date:&quot;F j, Y&quot; }}&lt;/code&gt; использует &amp;laquo;pipe&amp;raquo; в стиле Unix (символ &amp;laquo;|&amp;raquo;). Это называется шаблонным фильтром, и это способ фильтрации значения переменной. В этом случае фильтр даты форматирует объект даты и времени Python в заданном формате (как в функции даты в PHP).</target>
        </trans-unit>
        <trans-unit id="870a794d4d0468102a15a5fa5bb46615f6e62898" translate="yes" xml:space="preserve">
          <source>Note a few important things about how the test client works:</source>
          <target state="translated">Обратите внимание на несколько важных вещей о том,как работает тестовый клиент:</target>
        </trans-unit>
        <trans-unit id="5da84070f0015820b57bc36610be733ca3294c24" translate="yes" xml:space="preserve">
          <source>Note also that Django stores signal handlers as weak references by default, so if your handler is a local function, it may be garbage collected. To prevent this, pass &lt;code&gt;weak=False&lt;/code&gt; when you call the signal&amp;rsquo;s &lt;a href=&quot;../topics/signals#django.dispatch.Signal.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Также обратите внимание, что Django хранит обработчики сигналов как слабые ссылки по умолчанию, поэтому, если ваш обработчик является локальной функцией, он может быть сборщиком мусора. Чтобы предотвратить это, передайте &lt;code&gt;weak=False&lt;/code&gt; когда вызываете сигнал &lt;a href=&quot;../topics/signals#django.dispatch.Signal.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14299bd3cea26d7db0d4aabfc73b1f096d5551d9" translate="yes" xml:space="preserve">
          <source>Note also that while the MAC can guarantee the authenticity of the data (that it was generated by your site, and not someone else), and the integrity of the data (that it is all there and correct), it cannot guarantee freshness i.e. that you are being sent back the last thing you sent to the client. This means that for some uses of session data, the cookie backend might open you up to &lt;a href=&quot;https://en.wikipedia.org/wiki/Replay_attack&quot;&gt;replay attacks&lt;/a&gt;. Unlike other session backends which keep a server-side record of each session and invalidate it when a user logs out, cookie-based sessions are not invalidated when a user logs out. Thus if an attacker steals a user&amp;rsquo;s cookie, they can use that cookie to login as that user even if the user logs out. Cookies will only be detected as &amp;lsquo;stale&amp;rsquo; if they are older than your &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Также обратите внимание, что хотя MAC может гарантировать подлинность данных (которые были созданы вашим сайтом, а не кем-то другим), а также целостность данных (что они все там и правильно), он не может гарантировать свежесть, т.е. вам возвращают последнее, что вы отправили клиенту. Это означает, что для некоторых видов использования данных сеанса бэкэнд cookie может открыть вас для &lt;a href=&quot;https://en.wikipedia.org/wiki/Replay_attack&quot;&gt;повторных атак&lt;/a&gt; . В отличие от других бэкэндов сеансов, которые хранят записи каждого сеанса на стороне сервера и делают ее недействительной, когда пользователь выходит из системы, сеансы на основе файлов cookie не становятся недействительными, когда пользователь выходит из системы. Таким образом, если злоумышленник похитит cookie-файл пользователя, он может использовать этот cookie-файл для входа в систему в качестве этого пользователя, даже если пользователь выходит из системы. Файлы cookie будут считаться устаревшими, только если они старше вашего &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt; &lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a33d9580056f5d9f9ef0f3f8d807edc652ece048" translate="yes" xml:space="preserve">
          <source>Note also that you can only inherit from one generic view - that is, only one parent class may inherit from &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and the rest (if any) should be mixins. Trying to inherit from more than one class that inherits from &lt;code&gt;View&lt;/code&gt; - for example, trying to use a form at the top of a list and combining &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ProcessFormView&quot;&gt;&lt;code&gt;ProcessFormView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; - won&amp;rsquo;t work as expected.</source>
          <target state="translated">Также обратите внимание, что вы можете наследовать только от одного общего представления - то есть только один родительский класс может наследовать от &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; ,&lt;/a&gt; а остальные (если таковые имеются) должны быть mixins. Попытка унаследовать от более чем одного класса, который наследуется от &lt;code&gt;View&lt;/code&gt; - например, попытка использовать форму в верхней части списка и объединение &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ProcessFormView&quot;&gt; &lt;code&gt;ProcessFormView&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; - не будет работать должным образом.</target>
        </trans-unit>
        <trans-unit id="9582cd85442dd5db57f039a1ee4d57e14418eb91" translate="yes" xml:space="preserve">
          <source>Note also, that if you delete an object that has a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;, any objects which have a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; pointing at it will be deleted as well. In the example above, this means that if a &lt;code&gt;Bookmark&lt;/code&gt; object were deleted, any &lt;code&gt;TaggedItem&lt;/code&gt; objects pointing at it would be deleted at the same time.</source>
          <target state="translated">Также обратите внимание, что если вы удалите объект, имеющий &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt; , любые объекты, на &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; указывает GenericForeignKey, также будут удалены. В приведенном выше примере это означает, что если объект &lt;code&gt;Bookmark&lt;/code&gt; был удален, любые объекты &lt;code&gt;TaggedItem&lt;/code&gt; , указывающие на него, будут удалены одновременно.</target>
        </trans-unit>
        <trans-unit id="afb22d70274d73a3af0a11a9efbc7601c6cffe84" translate="yes" xml:space="preserve">
          <source>Note however that not all these methods are required and may be deliberately omitted. As it happens, it is possible to leave each method unimplemented and still have a working Storage.</source>
          <target state="translated">Обратите внимание,однако,что не все эти методы являются обязательными и могут быть намеренно пропущены.Так уж сложилось,что каждый метод можно оставить нереализованным и при этом иметь рабочее Хранилище.</target>
        </trans-unit>
        <trans-unit id="a281167ca6f3f3d6ce6cf851b7d39c49313bd017" translate="yes" xml:space="preserve">
          <source>Note on performance</source>
          <target state="translated">Примечание по производительности</target>
        </trans-unit>
        <trans-unit id="8edc7ffdd6f4a3b096034148187e765e050e9ef8" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;bar&amp;rdquo; in a template expression like &lt;code&gt;{{ foo.bar }}&lt;/code&gt; will be interpreted as a literal string and not using the value of the variable &amp;ldquo;bar&amp;rdquo;, if one exists in the template context.</source>
          <target state="translated">Обратите внимание, что &amp;laquo;bar&amp;raquo; в выражении шаблона, таком как &lt;code&gt;{{ foo.bar }}&lt;/code&gt; будет интерпретироваться как буквенная строка и не использовать значение переменной &amp;laquo;bar&amp;raquo;, если оно существует в контексте шаблона.</target>
        </trans-unit>
        <trans-unit id="afe31081e1c0a0c22ce8c03c79b6e9fe781b5cdf" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt;&lt;code&gt;permission_required()&lt;/code&gt;&lt;/a&gt; also takes an optional &lt;code&gt;login_url&lt;/code&gt; parameter:</source>
          <target state="translated">Обратите внимание, &lt;code&gt;login_url&lt;/code&gt; &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt; &lt;code&gt;permission_required()&lt;/code&gt; &lt;/a&gt; также принимает необязательный параметр login_url :</target>
        </trans-unit>
        <trans-unit id="5935aa7699bc39ae3d2e0a6a74be308015833cce" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt;&lt;code&gt;logout()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t throw any errors if the user wasn&amp;rsquo;t logged in.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt; &lt;code&gt;logout()&lt;/code&gt; &lt;/a&gt; не выдает никаких ошибок, если пользователь не вошел в систему.</target>
        </trans-unit>
        <trans-unit id="d5a560efe9ed69acab07d99a89a77ed4ccc33f23" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt; are mutually exclusive, so only set one of those settings to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt; являются взаимоисключающими, поэтому установите только одну из этих настроек в &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a5ff144d4383f6e080bcaf3e8709508673fa55" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; is the only &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; method that is not exposed on a &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; itself. This is a safety mechanism to prevent you from accidentally requesting &lt;code&gt;Entry.objects.delete()&lt;/code&gt;, and deleting &lt;em&gt;all&lt;/em&gt; the entries. If you &lt;em&gt;do&lt;/em&gt; want to delete all the objects, then you have to explicitly request a complete query set:</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; - это единственный метод &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; ,&lt;/a&gt; который не предоставляется в самом &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; . Это механизм безопасности, который предотвращает случайный запрос &lt;code&gt;Entry.objects.delete()&lt;/code&gt; и удаление &lt;em&gt;всех&lt;/em&gt; записей. Если вы &lt;em&gt;действительно&lt;/em&gt; хотите удалить все объекты, то вы должны явно запросить полный набор запросов:</target>
        </trans-unit>
        <trans-unit id="efbe9c61755a3354107632b1df1edcfca88d5654" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; will only contain data if the request method was &lt;code&gt;POST&lt;/code&gt; and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that posted the request has the attribute &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;. Otherwise, &lt;code&gt;request.FILES&lt;/code&gt; will be empty.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt; будет содержать данные только в том случае, если метод запроса был &lt;code&gt;POST&lt;/code&gt; , а &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; , &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; запрос, имеет атрибут enctype = &quot;multipart / form-data&quot; . В противном случае &lt;code&gt;request.FILES&lt;/code&gt; будет пустым.</target>
        </trans-unit>
        <trans-unit id="d0796c678d8887176b4064744ab4bf371a4b7ac7" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; will only contain data if the request method was &lt;code&gt;POST&lt;/code&gt;, at least one file field was actually posted, and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that posted the request has the attribute &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;. Otherwise, &lt;code&gt;request.FILES&lt;/code&gt; will be empty.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt; будет содержать данные только в том случае, если метод запроса был &lt;code&gt;POST&lt;/code&gt; , по крайней мере одно поле файла было фактически опубликовано, а &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; , &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; запрос, имеет атрибут enctype = &quot;multipart / form-data&quot; . В противном случае &lt;code&gt;request.FILES&lt;/code&gt; будет пустым.</target>
        </trans-unit>
        <trans-unit id="114ec4ae4f7b3f1c9ee023cbb2f4ae83341a7264" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt;, which is the base class for all Django database API &lt;code&gt;DoesNotExist&lt;/code&gt; exceptions, has &lt;code&gt;silent_variable_failure = True&lt;/code&gt;. So if you&amp;rsquo;re using Django templates with Django model objects, any &lt;code&gt;DoesNotExist&lt;/code&gt; exception will fail silently.</source>
          <target state="translated">Обратите внимание на то , что &lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt; , который является базовым классом для всех исключений из Django API-интерфейса &lt;code&gt;DoesNotExist&lt;/code&gt; , имеет &lt;code&gt;silent_variable_failure = True&lt;/code&gt; . Поэтому, если вы используете шаблоны Django с объектами модели Django, любое исключение &lt;code&gt;DoesNotExist&lt;/code&gt; завершится с ошибкой.</target>
        </trans-unit>
        <trans-unit id="12f148b2871d0ee0ac320bfab0d6043b1e56d19b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; strips all headers with underscores in the name, so you won&amp;rsquo;t see them in &lt;code&gt;META&lt;/code&gt;. This prevents header-spoofing based on ambiguity between underscores and dashes both being normalizing to underscores in WSGI environment variables. It matches the behavior of Web servers like Nginx and Apache 2.4+.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt; удаляет все заголовки с подчеркиванием в имени, поэтому вы не увидите их в &lt;code&gt;META&lt;/code&gt; . Это предотвращает подделку заголовка, основанную на неоднозначности между подчеркиваниями и тире, которые нормализуются в подчеркиваниях переменных среды WSGI. Он соответствует поведению веб-серверов, таких как Nginx и Apache 2.4+.</target>
        </trans-unit>
        <trans-unit id="51299edb450e554bd78f74b0809db32387011d1a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt; has a complementary method &lt;a href=&quot;fields#django.forms.MultiValueField.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; with the opposite responsibility - to combine cleaned values of all member fields into one.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt; имеет дополнительный метод &lt;a href=&quot;fields#django.forms.MultiValueField.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt; с противоположной ответственностью - объединять очищенные значения всех полей-членов в одно.</target>
        </trans-unit>
        <trans-unit id="174125b977abe383ebe027c7283e688f70171a40" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Form.add_error()&lt;/code&gt; automatically removes the relevant field from &lt;code&gt;cleaned_data&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;Form.add_error()&lt;/code&gt; автоматически удаляет соответствующее поле из &lt;code&gt;cleaned_data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4591c68c233751182879e8ea4c7ab5f0a044d31a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt;, and &lt;code&gt;set()&lt;/code&gt; all apply database changes immediately for all types of related fields. In other words, there is no need to call &lt;code&gt;save()&lt;/code&gt; on either end of the relationship.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;add()&lt;/code&gt; , &lt;code&gt;create()&lt;/code&gt; , &lt;code&gt;remove()&lt;/code&gt; , &lt;code&gt;clear()&lt;/code&gt; и &lt;code&gt;set()&lt;/code&gt; все изменения базы данных применяются немедленно для всех типов связанных полей. Другими словами, нет необходимости вызывать &lt;code&gt;save()&lt;/code&gt; на любом конце отношения.</target>
        </trans-unit>
        <trans-unit id="90ef74f6371e10a6782d0c647e7ce73f1b8c10a7" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;django.conf.settings&lt;/code&gt; isn&amp;rsquo;t a module &amp;ndash; it&amp;rsquo;s an object. So importing individual settings is not possible:</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;django.conf.settings&lt;/code&gt; - это не модуль, а объект. Поэтому импорт отдельных настроек невозможен:</target>
        </trans-unit>
        <trans-unit id="4d70a240827ed6a63d96ee2feb5521ee6e8c53d8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;dumpdata&lt;/code&gt; uses the default manager on the model for selecting the records to dump. If you&amp;rsquo;re using a &lt;a href=&quot;../topics/db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt; as the default manager and it filters some of the available records, not all of the objects will be dumped.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;dumpdata&lt;/code&gt; использует менеджер по умолчанию в модели для выбора записей для дампа. Если вы используете &lt;a href=&quot;../topics/db/managers#custom-managers&quot;&gt;собственный менеджер в&lt;/a&gt; качестве менеджера по умолчанию и он фильтрует некоторые доступные записи, не все объекты будут выгружены.</target>
        </trans-unit>
        <trans-unit id="617474170b52d9ea43a8f37beddaa5594df33958" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;earliest()&lt;/code&gt; and &lt;code&gt;latest()&lt;/code&gt; exist purely for convenience and readability.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;earliest()&lt;/code&gt; и &lt;code&gt;latest()&lt;/code&gt; существуют исключительно для удобства и читабельности.</target>
        </trans-unit>
        <trans-unit id="60bc6baf0f131a6ccb397c320fca68e1cf2cb32d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;first()&lt;/code&gt; is a convenience method, the following code sample is equivalent to the above example:</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;first()&lt;/code&gt; является вспомогательным методом, следующий пример кода эквивалентен приведенному выше примеру:</target>
        </trans-unit>
        <trans-unit id="2477105d4945a87d3531b00f61d9dfbbde81b7a1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;full_clean()&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be called automatically when you call your model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method. You&amp;rsquo;ll need to call it manually when you want to run one-step model validation for your own manually created models. For example:</source>
          <target state="translated">Обратите внимание , что &lt;code&gt;full_clean()&lt;/code&gt; будет &lt;em&gt;не&lt;/em&gt; будет вызываться автоматически при вызове вашей модели &lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; метод. Вам нужно будет вызывать его вручную, если вы хотите запустить одношаговую проверку моделей для ваших собственных моделей, созданных вручную. Например:</target>
        </trans-unit>
        <trans-unit id="b60eaaa655b6061f0ff964b2c7c786fae5248e6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;localize&lt;/code&gt; is a pytz extension to the &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; API. Also, you may want to catch &lt;code&gt;pytz.InvalidTimeError&lt;/code&gt;. The documentation of pytz contains &lt;a href=&quot;http://pytz.sourceforge.net/#example-usage&quot;&gt;more examples&lt;/a&gt;. You should review it before attempting to manipulate aware datetimes.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;localize&lt;/code&gt; - это расширение &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; API tzinfo . Также вы можете захотеть поймать &lt;code&gt;pytz.InvalidTimeError&lt;/code&gt; . Документация pytz содержит &lt;a href=&quot;http://pytz.sourceforge.net/#example-usage&quot;&gt;больше примеров&lt;/a&gt; . Вы должны просмотреть его, прежде чем пытаться манипулировать осведомленными датами.</target>
        </trans-unit>
        <trans-unit id="fcff2e0ec8bf12bd9fd1d74a3726364370255148" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output_field&lt;/code&gt; is only required when Django is unable to determine what field type the result should be. Complex expressions that mix field types should define the desired &lt;code&gt;output_field&lt;/code&gt;. For example, adding an &lt;code&gt;IntegerField()&lt;/code&gt; and a &lt;code&gt;FloatField()&lt;/code&gt; together should probably have &lt;code&gt;output_field=FloatField()&lt;/code&gt; defined.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;output_field&lt;/code&gt; требуется только тогда, когда Django не может определить, какой тип поля должен быть в результате. Сложные выражения, которые смешивают типы полей, должны определять желаемое &lt;code&gt;output_field&lt;/code&gt; . Например, добавление &lt;code&gt;IntegerField()&lt;/code&gt; и &lt;code&gt;FloatField()&lt;/code&gt; вместе должно, вероятно, &lt;code&gt;output_field=FloatField()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e0000d6c434afcf6f1baf1d4b21199b5b33c66a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;page&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be either a valid page number or the value &lt;code&gt;last&lt;/code&gt;; any other value for &lt;code&gt;page&lt;/code&gt; will result in a 404 error.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;page&lt;/code&gt; &lt;em&gt;должна&lt;/em&gt; быть либо действительным номером страницы, либо значением &lt;code&gt;last&lt;/code&gt; ; любое другое значение для &lt;code&gt;page&lt;/code&gt; приведет к ошибке 404.</target>
        </trans-unit>
        <trans-unit id="4fa87508d78ed938ea3b53c04e6e8bac6e4c0d53" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;pnt&lt;/code&gt; may also be constructed with EWKT, an &amp;ldquo;extended&amp;rdquo; form of WKT that includes the SRID:</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;pnt&lt;/code&gt; также может быть создан с EWKT, &amp;laquo;расширенной&amp;raquo; формой WKT, которая включает в себя SRID:</target>
        </trans-unit>
        <trans-unit id="69afc1bd88ec7db55e0a8541d45277ff4bd45240" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;render()&lt;/code&gt; returns the empty string. &lt;code&gt;render()&lt;/code&gt; should always return string output. If all the template tag does is set a variable, &lt;code&gt;render()&lt;/code&gt; should return the empty string.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;render()&lt;/code&gt; возвращает пустую строку. &lt;code&gt;render()&lt;/code&gt; всегда должен возвращать вывод строки. Если все, что делает тег шаблона, это установить переменную, то &lt;code&gt;render()&lt;/code&gt; должен вернуть пустую строку.</target>
        </trans-unit>
        <trans-unit id="eeadeb6021da41a361ee20d5764d2103bff4b20d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;sqlmigrate&lt;/code&gt; doesn&amp;rsquo;t colorize its output.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;sqlmigrate&lt;/code&gt; не окрашивает свой вывод.</target>
        </trans-unit>
        <trans-unit id="f4ef6ae7ec0603ef3df71659f00737594af30ccc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;striptags&lt;/code&gt; doesn&amp;rsquo;t give any guarantee about its output being HTML safe, particularly with non valid HTML input. So &lt;strong&gt;NEVER&lt;/strong&gt; apply the &lt;code&gt;safe&lt;/code&gt; filter to a &lt;code&gt;striptags&lt;/code&gt; output. If you are looking for something more robust, you can use the &lt;code&gt;bleach&lt;/code&gt; Python library, notably its &lt;a href=&quot;https://bleach.readthedocs.io/en/latest/clean.html&quot;&gt;clean&lt;/a&gt; method.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;striptags&lt;/code&gt; не дают никаких гарантий о том, что их выходные данные безопасны для HTML, особенно при неправильном вводе HTML. Поэтому &lt;strong&gt;НИКОГДА не&lt;/strong&gt; применяйте &lt;code&gt;safe&lt;/code&gt; фильтр к &lt;code&gt;striptags&lt;/code&gt; . Если вы ищете что-то более надежное, вы можете использовать &lt;code&gt;bleach&lt;/code&gt; библиотеку Python, особенно ее &lt;a href=&quot;https://bleach.readthedocs.io/en/latest/clean.html&quot;&gt;чистый&lt;/a&gt; метод.</target>
        </trans-unit>
        <trans-unit id="e6c1a0bf2d18380514c058c2103f2660189ecd36" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;{% regroup %}&lt;/code&gt; does not order its input! Our example relies on the fact that the &lt;code&gt;cities&lt;/code&gt; list was ordered by &lt;code&gt;country&lt;/code&gt; in the first place. If the &lt;code&gt;cities&lt;/code&gt; list did &lt;em&gt;not&lt;/em&gt; order its members by &lt;code&gt;country&lt;/code&gt;, the regrouping would naively display more than one group for a single country. For example, say the &lt;code&gt;cities&lt;/code&gt; list was set to this (note that the countries are not grouped together):</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;{% regroup %}&lt;/code&gt; не упорядочивает свой ввод! Наш пример опирается на тот факт, что список &lt;code&gt;cities&lt;/code&gt; был упорядочен по &lt;code&gt;country&lt;/code&gt; в первую очередь. Если бы список &lt;code&gt;cities&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; упорядочивал своих членов по &lt;code&gt;country&lt;/code&gt; , перегруппировка наивно отображала бы более одной группы для одной страны. Например, скажем, список &lt;code&gt;cities&lt;/code&gt; был установлен на это (обратите внимание, что страны не сгруппированы вместе):</target>
        </trans-unit>
        <trans-unit id="555959baa50f98a7ff375b125440d82908185be5" translate="yes" xml:space="preserve">
          <source>Note that Django also provides &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;request.GET&lt;/code&gt;&lt;/a&gt; for accessing GET data in the same way &amp;ndash; but we&amp;rsquo;re explicitly using &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; in our code, to ensure that data is only altered via a POST call.</source>
          <target state="translated">Обратите внимание, что Django также предоставляет &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;request.GET&lt;/code&gt; &lt;/a&gt; для доступа к данным GET таким же образом - но мы явно используем &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;request.POST&lt;/code&gt; &lt;/a&gt; в нашем коде, чтобы гарантировать, что данные изменяются только через вызов POST.</target>
        </trans-unit>
        <trans-unit id="5a86bd35e7d0371b683012acf70b7110506f8792" translate="yes" xml:space="preserve">
          <source>Note that a callable (with the parentheses omitted) is passed to &lt;code&gt;default&lt;/code&gt;, not an instance of &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что вызываемый (без круглых скобок) передается по &lt;code&gt;default&lt;/code&gt; , а не экземпляр &lt;code&gt;UUID&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="769f71352d570fcd1ad93b9334853d28dc71b571" translate="yes" xml:space="preserve">
          <source>Note that a settings file should &lt;em&gt;not&lt;/em&gt; import from &lt;code&gt;global_settings&lt;/code&gt;, because that&amp;rsquo;s redundant.</source>
          <target state="translated">Обратите внимание, что файл настроек &lt;em&gt;не&lt;/em&gt; должен импортироваться из &lt;code&gt;global_settings&lt;/code&gt; , потому что это избыточно.</target>
        </trans-unit>
        <trans-unit id="91d33e115058c62ed3b06406e2b16a18f7403773" translate="yes" xml:space="preserve">
          <source>Note that all subsequent PDF-generation methods are called on the PDF object (in this case, &lt;code&gt;p&lt;/code&gt;) &amp;ndash; not on &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что все последующие методы генерации PDF вызываются для объекта PDF (в данном случае &lt;code&gt;p&lt;/code&gt; ), а не для &lt;code&gt;buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2720462e729bf12c9dc1637761930abaf6e5302" translate="yes" xml:space="preserve">
          <source>Note that although this function uses &lt;code&gt;str.format()&lt;/code&gt; to do the interpolation, some of the formatting options provided by &lt;code&gt;str.format()&lt;/code&gt; (e.g. number formatting) will not work, since all arguments are passed through &lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt;&lt;code&gt;conditional_escape()&lt;/code&gt;&lt;/a&gt; which (ultimately) calls &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt;&lt;code&gt;force_str()&lt;/code&gt;&lt;/a&gt; on the values.</source>
          <target state="translated">Обратите внимание, что хотя эта функция использует &lt;code&gt;str.format()&lt;/code&gt; для выполнения интерполяции, некоторые параметры форматирования, предоставляемые &lt;code&gt;str.format()&lt;/code&gt; (например, форматирование чисел), не будут работать, поскольку все аргументы передаются через &lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt; &lt;code&gt;conditional_escape()&lt;/code&gt; &lt;/a&gt; которая (в конечном итоге) вызывает &lt;a href=&quot;#django.utils.encoding.force_str&quot;&gt; &lt;code&gt;force_str()&lt;/code&gt; &lt;/a&gt; для значений.</target>
        </trans-unit>
        <trans-unit id="1655d49d10104c3e29e68482b9119e277e90f07d" translate="yes" xml:space="preserve">
          <source>Note that an even more flexible (but more heavyweight) way of doing this would be to use Django&amp;rsquo;s template system. Assuming Lawrence.com and LJWorld.com have different template directories (&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt;), you could farm out to the template system like so:</source>
          <target state="translated">Обратите внимание, что еще более гибкий (но более тяжелый) способ сделать это - использовать систему шаблонов Django. Предполагая, что Lawrence.com и LJWorld.com имеют разные каталоги шаблонов ( &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt; ), вы можете перейти к системе шаблонов следующим образом:</target>
        </trans-unit>
        <trans-unit id="a03be98ba22733726f31548200c2a1eb13fd38d0" translate="yes" xml:space="preserve">
          <source>Note that any data set during the anonymous session is retained in the session after a user logs in.</source>
          <target state="translated">Обратите внимание,что любой набор данных во время анонимной сессии сохраняется в сессии после входа пользователя в систему.</target>
        </trans-unit>
        <trans-unit id="5e76af3cfee25aa8aedca5c9cce37758a092a5a5" translate="yes" xml:space="preserve">
          <source>Note that any errors raised by your &lt;a href=&quot;api#django.forms.Form.clean&quot;&gt;&lt;code&gt;Form.clean()&lt;/code&gt;&lt;/a&gt; override will not be associated with any field in particular. They go into a special &amp;ldquo;field&amp;rdquo; (called &lt;code&gt;__all__&lt;/code&gt;), which you can access via the &lt;a href=&quot;api#django.forms.Form.non_field_errors&quot;&gt;&lt;code&gt;non_field_errors()&lt;/code&gt;&lt;/a&gt; method if you need to. If you want to attach errors to a specific field in the form, you need to call &lt;a href=&quot;api#django.forms.Form.add_error&quot;&gt;&lt;code&gt;add_error()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что любые ошибки, &lt;a href=&quot;api#django.forms.Form.clean&quot;&gt; &lt;code&gt;Form.clean()&lt;/code&gt; &lt;/a&gt; переопределением Form.clean () , не будут связаны с каким-либо конкретным полем. Они &lt;code&gt;__all__&lt;/code&gt; в специальное &amp;laquo;поле&amp;raquo; (называемое __all__ ), к которому вы можете получить доступ через метод &lt;a href=&quot;api#django.forms.Form.non_field_errors&quot;&gt; &lt;code&gt;non_field_errors()&lt;/code&gt; &lt;/a&gt; если вам нужно. Если вы хотите прикрепить ошибки к определенному полю в форме, вам нужно вызвать &lt;a href=&quot;api#django.forms.Form.add_error&quot;&gt; &lt;code&gt;add_error()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb7f74b1561095f41f3d18b56dd6375c9ec3906f" translate="yes" xml:space="preserve">
          <source>Note that any of Django&amp;rsquo;s default admin templates can be overridden. To override a template, do the same thing you did with &lt;code&gt;base_site.html&lt;/code&gt; &amp;ndash; copy it from the default directory into your custom directory, and make changes.</source>
          <target state="translated">Обратите внимание, что любой из стандартных шаблонов администратора Django может быть переопределен. Чтобы переопределить шаблон, сделайте то же самое, что вы сделали с &lt;code&gt;base_site.html&lt;/code&gt; - скопируйте его из каталога по умолчанию в свой пользовательский каталог и внесите изменения.</target>
        </trans-unit>
        <trans-unit id="239df39fbba56c17e5c95caf2ecf410c00f83202" translate="yes" xml:space="preserve">
          <source>Note that any text-based field &amp;ndash; such as &lt;code&gt;CharField&lt;/code&gt; or &lt;code&gt;EmailField&lt;/code&gt; &amp;ndash; always cleans the input into a string. We&amp;rsquo;ll cover the encoding implications later in this document.</source>
          <target state="translated">Обратите внимание, что любое текстовое поле, такое как &lt;code&gt;CharField&lt;/code&gt; или &lt;code&gt;EmailField&lt;/code&gt; , всегда очищает ввод в строку. Мы рассмотрим последствия кодирования позже в этом документе.</target>
        </trans-unit>
        <trans-unit id="7bedfd96029424831aed4722f0eb96eed865f31a" translate="yes" xml:space="preserve">
          <source>Note that as the method is now a property, in Python code it will need to be accessed appropriately:</source>
          <target state="translated">Обратите внимание,что поскольку метод теперь является свойством,то в коде Python к нему нужно будет получить соответствующий доступ:</target>
        </trans-unit>
        <trans-unit id="fe32d6c5f76eb9f75c146ee626da625540f82c24" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;code&gt;django.setup()&lt;/code&gt; is only necessary if your code is truly standalone. When invoked by your Web server, or through &lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin&lt;/a&gt;, Django will handle this for you.</source>
          <target state="translated">Обратите внимание, что вызов &lt;code&gt;django.setup()&lt;/code&gt; необходим, только если ваш код действительно автономен. Когда он вызывается вашим веб-сервером или через &lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin&lt;/a&gt; , Django справится с этим за вас.</target>
        </trans-unit>
        <trans-unit id="3bc381cc771bad16450ca029b7c0214227351136" translate="yes" xml:space="preserve">
          <source>Note that choices can be any sequence object &amp;ndash; not necessarily a list or tuple. This lets you construct choices dynamically. But if you find yourself hacking &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; to be dynamic, you&amp;rsquo;re probably better off using a proper database table with a &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; is meant for static data that doesn&amp;rsquo;t change much, if ever.</source>
          <target state="translated">Обратите внимание, что выбором может быть любой объект последовательности - не обязательно список или кортеж. Это позволяет вам динамически строить выбор. Но если вы обнаружите, что &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt; хака будет динамичным, вам, вероятно, лучше использовать правильную таблицу базы данных с &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt; предназначен для статических данных, которые не сильно меняются, если вообще.</target>
        </trans-unit>
        <trans-unit id="23311557d1c1b4a3bc91b67a7dcbb2a15f706caf" translate="yes" xml:space="preserve">
          <source>Note that command options that take no arguments are passed as keywords with &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, as you can see with the &lt;code&gt;interactive&lt;/code&gt; option above.</source>
          <target state="translated">Обратите внимание, что параметры команды, которые не принимают аргументов, передаются как ключевые слова с &lt;code&gt;True&lt;/code&gt; или &lt;code&gt;False&lt;/code&gt; , как вы можете видеть с &lt;code&gt;interactive&lt;/code&gt; опцией выше.</target>
        </trans-unit>
        <trans-unit id="771c36984deec4007d5e353a2afde4a1288b3d14" translate="yes" xml:space="preserve">
          <source>Note that each form field has an ID attribute set to &lt;code&gt;id_&amp;lt;field-name&amp;gt;&lt;/code&gt;, which is referenced by the accompanying label tag. This is important in ensuring that forms are accessible to assistive technology such as screen reader software. You can also &lt;a href=&quot;../../ref/forms/api#ref-forms-api-configuring-label&quot;&gt;customize the way in which labels and ids are generated&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что каждое поле формы имеет атрибут ID, установленный в &lt;code&gt;id_&amp;lt;field-name&amp;gt;&lt;/code&gt; , на который ссылается сопровождающий тег label. Это важно для обеспечения доступности форм для вспомогательных технологий, таких как программное обеспечение для чтения с экрана. Вы также можете &lt;a href=&quot;../../ref/forms/api#ref-forms-api-configuring-label&quot;&gt;настроить способ создания меток и идентификаторов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3bdfccd500eb934555bb43b9a29d41da73c40d02" translate="yes" xml:space="preserve">
          <source>Note that each process will have its own private cache instance, which means no cross-process caching is possible. This also means the local memory cache isn&amp;rsquo;t particularly memory-efficient, so it&amp;rsquo;s probably not a good choice for production environments. It&amp;rsquo;s nice for development.</source>
          <target state="translated">Обратите внимание, что каждый процесс будет иметь свой собственный частный экземпляр кеша, что означает невозможность межпроцессного кэширования. Это также означает, что кэш локальной памяти не особенно эффективен с точки зрения памяти, поэтому, вероятно, это не лучший выбор для производственных сред. Это приятно для развития.</target>
        </trans-unit>
        <trans-unit id="1f0445bbbacae2bc87d1553017a414c56d8a13c4" translate="yes" xml:space="preserve">
          <source>Note that each process will have its own private cache instance, which means no cross-process caching is possible. This obviously also means the local memory cache isn&amp;rsquo;t particularly memory-efficient, so it&amp;rsquo;s probably not a good choice for production environments. It&amp;rsquo;s nice for development.</source>
          <target state="translated">Обратите внимание, что у каждого процесса будет свой собственный экземпляр частного кэша, что означает, что межпроцессное кэширование невозможно. Это, очевидно, также означает, что локальная кэш-память не особенно эффективна для памяти, поэтому, вероятно, это не лучший выбор для производственных сред. Это хорошо для развития.</target>
        </trans-unit>
        <trans-unit id="a2eeff486edfad4d9520b6f22313f2e3567d2e11" translate="yes" xml:space="preserve">
          <source>Note that extra options will &lt;em&gt;always&lt;/em&gt; be passed to &lt;em&gt;every&lt;/em&gt; line in the included URLconf, regardless of whether the line&amp;rsquo;s view actually accepts those options as valid. For this reason, this technique is only useful if you&amp;rsquo;re certain that every view in the included URLconf accepts the extra options you&amp;rsquo;re passing.</source>
          <target state="translated">Обратите внимание, что дополнительные параметры &lt;em&gt;всегда&lt;/em&gt; будут передаваться &lt;em&gt;каждой&lt;/em&gt; строке во включенном URLconf, независимо от того, действительно ли представление строки принимает эти параметры как допустимые. По этой причине этот метод полезен, только если вы уверены, что каждое представление во включенном URLconf принимает дополнительные параметры, которые вы передаете.</target>
        </trans-unit>
        <trans-unit id="92c628e1fbd6a9010f3d0db034ba40cb41449dee" translate="yes" xml:space="preserve">
          <source>Note that having the view instance in the template context may expose potentially hazardous methods to template authors. To prevent methods like this from being called in the template, set &lt;code&gt;alters_data=True&lt;/code&gt; on those methods. For more information, read the documentation on &lt;a href=&quot;../templates/api#alters-data-description&quot;&gt;rendering a template context&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что наличие экземпляра представления в контексте шаблона может привести к появлению потенциально опасных методов для авторов шаблона. Чтобы такие методы не вызывались в шаблоне, установите &lt;code&gt;alters_data=True&lt;/code&gt; для этих методов. Для получения дополнительной информации прочитайте документацию по &lt;a href=&quot;../templates/api#alters-data-description&quot;&gt;визуализации контекста шаблона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98f6de66c762486638954c88d910ab00b17debe3" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the corresponding locale-dictated format has higher precedence and will be applied.</source>
          <target state="translated">Обратите внимание, что если для &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; задано значение &lt;code&gt;True&lt;/code&gt; , соответствующий формат, определяемый локалью, имеет более высокий приоритет и будет применяться.</target>
        </trans-unit>
        <trans-unit id="50d31d0e0ebd30e972979684ec82c5fb17e9796a" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the locale-dictated format has higher precedence and will be applied instead.</source>
          <target state="translated">Обратите внимание, что если для &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; задано значение &lt;code&gt;True&lt;/code&gt; , то формат, определяемый локалью, имеет более высокий приоритет и будет применяться вместо него.</target>
        </trans-unit>
        <trans-unit id="49e296c8c84c9dd47aab0634b92f9ddef9e72e21" translate="yes" xml:space="preserve">
          <source>Note that if a &lt;code&gt;ModelChoiceField&lt;/code&gt; is required and has a default initial value, no empty choice is created (regardless of the value of &lt;code&gt;empty_label&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание, что если &lt;code&gt;ModelChoiceField&lt;/code&gt; требуется и имеет начальное значение по умолчанию, пустой выбор не создается (независимо от значения &lt;code&gt;empty_label&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a602110fb64a1dd4cb469f056ba8051460109907" translate="yes" xml:space="preserve">
          <source>Note that if an empty string is given, the default value will &lt;em&gt;not&lt;/em&gt; be used. Use the &lt;a href=&quot;#std:templatefilter-default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; filter if you want to fallback for empty strings.</source>
          <target state="translated">Обратите внимание, что если задана пустая строка, значение по умолчанию &lt;em&gt;не&lt;/em&gt; будет использоваться. Используйте фильтр по &lt;a href=&quot;#std:templatefilter-default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; если вы хотите использовать запасные строки.</target>
        </trans-unit>
        <trans-unit id="80730ee1d592ce07bf82235a3404e06b9d3abf66" translate="yes" xml:space="preserve">
          <source>Note that if the URL you&amp;rsquo;re reversing doesn&amp;rsquo;t exist, you&amp;rsquo;ll get an &lt;a href=&quot;../exceptions#django.urls.NoReverseMatch&quot;&gt;&lt;code&gt;NoReverseMatch&lt;/code&gt;&lt;/a&gt; exception raised, which will cause your site to display an error page.</source>
          <target state="translated">Обратите внимание, что если URL-адрес, который вы переворачиваете, не существует, вы получите исключение &lt;a href=&quot;../exceptions#django.urls.NoReverseMatch&quot;&gt; &lt;code&gt;NoReverseMatch&lt;/code&gt; &lt;/a&gt; , в результате чего на вашем сайте отобразится страница с ошибкой.</target>
        </trans-unit>
        <trans-unit id="3e45a85a7dcecfdfcfb4389a347188b10434abde" translate="yes" xml:space="preserve">
          <source>Note that if the form &lt;a href=&quot;#validation-on-modelform&quot;&gt;hasn&amp;rsquo;t been validated&lt;/a&gt;, calling &lt;code&gt;save()&lt;/code&gt; will do so by checking &lt;code&gt;form.errors&lt;/code&gt;. A &lt;code&gt;ValueError&lt;/code&gt; will be raised if the data in the form doesn&amp;rsquo;t validate &amp;ndash; i.e., if &lt;code&gt;form.errors&lt;/code&gt; evaluates to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что если форма &lt;a href=&quot;#validation-on-modelform&quot;&gt;не была проверена&lt;/a&gt; , вызов &lt;code&gt;save()&lt;/code&gt; сделает это путем проверки &lt;code&gt;form.errors&lt;/code&gt; . Ошибка &lt;code&gt;ValueError&lt;/code&gt; возникает, если данные в форме не проверяются, т. &lt;code&gt;form.errors&lt;/code&gt; Если form.errors имеет значение &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61f3ec02092015ed9d1f89e12937af6bb0ee587e" translate="yes" xml:space="preserve">
          <source>Note that if the tests are run on a database with no transaction support (for instance, MySQL with the MyISAM engine), &lt;code&gt;setUpTestData()&lt;/code&gt; will be called before each test, negating the speed benefits.</source>
          <target state="translated">Обратите внимание, что если тесты выполняются в базе данных без поддержки транзакций (например, MySQL с механизмом MyISAM), &lt;code&gt;setUpTestData()&lt;/code&gt; будет вызываться перед каждым тестом, сводя на нет преимущества в скорости.</target>
        </trans-unit>
        <trans-unit id="a758f5f8e960e50154e5596b9c6aefae0ab85207" translate="yes" xml:space="preserve">
          <source>Note that if two fixtures with the same name but different fixture type are discovered (for example, if &lt;code&gt;mydata.json&lt;/code&gt; and &lt;code&gt;mydata.xml.gz&lt;/code&gt; were found in the same fixture directory), fixture installation will be aborted, and any data installed in the call to &lt;code&gt;loaddata&lt;/code&gt; will be removed from the database.</source>
          <target state="translated">Обратите внимание, что если обнаружены два устройства с одним и тем же именем, но с другим типом устройства (например, если &lt;code&gt;mydata.json&lt;/code&gt; и &lt;code&gt;mydata.xml.gz&lt;/code&gt; были найдены в одном каталоге устройств), установка устройства будет прервана, а все данные, установленные в вызов &lt;code&gt;loaddata&lt;/code&gt; будет удален из базы данных.</target>
        </trans-unit>
        <trans-unit id="ac49bd48639bcacfaff102892d44aa3595f4440b" translate="yes" xml:space="preserve">
          <source>Note that if you don&amp;rsquo;t specify the &lt;code&gt;login_url&lt;/code&gt; parameter, you&amp;rsquo;ll need to ensure that the &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; and your login view are properly associated. For example, using the defaults, add the following lines to your URLconf:</source>
          <target state="translated">Обратите внимание, что если вы не укажете параметр &lt;code&gt;login_url&lt;/code&gt; , вам необходимо убедиться, что &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; &lt;/a&gt; и ваш вид входа в систему правильно связаны. Например, используя значения по умолчанию, добавьте следующие строки в ваш URLconf:</target>
        </trans-unit>
        <trans-unit id="6cd271fbb7b9ed101646f23af0c3630189f7de5d" translate="yes" xml:space="preserve">
          <source>Note that if you provide a value to &lt;code&gt;redirect_field_name&lt;/code&gt;, you will most likely need to customize your login template as well, since the template context variable which stores the redirect path will use the value of &lt;code&gt;redirect_field_name&lt;/code&gt; as its key rather than &lt;code&gt;&quot;next&quot;&lt;/code&gt; (the default).</source>
          <target state="translated">Обратите внимание, что если вы предоставите значение для &lt;code&gt;redirect_field_name&lt;/code&gt; , вам, скорее всего, потребуется также настроить свой шаблон входа в систему, поскольку переменная контекста шаблона, в которой хранится путь перенаправления, будет использовать значение &lt;code&gt;redirect_field_name&lt;/code&gt; в качестве своего ключа, а не &lt;code&gt;&quot;next&quot;&lt;/code&gt; (по умолчанию) ).</target>
        </trans-unit>
        <trans-unit id="7d9053627b6ab7bc8cafe04e748b5f7e44a6dca7" translate="yes" xml:space="preserve">
          <source>Note that if you provide an &lt;code&gt;exclude&lt;/code&gt; argument to &lt;code&gt;validate_unique()&lt;/code&gt;, any &lt;a href=&quot;options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; constraint involving one of the fields you provided will not be checked.</source>
          <target state="translated">Обратите внимание, что если вы предоставите аргумент &lt;code&gt;exclude&lt;/code&gt; для &lt;code&gt;validate_unique()&lt;/code&gt; , любое ограничение &lt;a href=&quot;options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; ,&lt;/a&gt; включающее одно из предоставленных вами полей, проверяться не будет.</target>
        </trans-unit>
        <trans-unit id="4bf8a879fdf5070b51826c9b7caa260383bcc815" translate="yes" xml:space="preserve">
          <source>Note that if you set this to point to a &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;, only the date portion of the field will be considered. Besides, when &lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, the check will be performed in the &lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; at the time the object gets saved.</source>
          <target state="translated">Обратите внимание, что если вы установите это значение, указывающее на &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; , будет учитываться только часть поля даты. Кроме того, когда &lt;a href=&quot;../settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;True&lt;/code&gt; , проверка будет выполняться в &lt;a href=&quot;../../topics/i18n/timezones#default-current-time-zone&quot;&gt;текущем часовом поясе&lt;/a&gt; в момент сохранения объекта.</target>
        </trans-unit>
        <trans-unit id="57208e52924136beaba1ef45b1cfb353a276896c" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;iterator()&lt;/code&gt; to run the query, &lt;code&gt;prefetch_related()&lt;/code&gt; calls will be ignored since these two optimizations do not make sense together.</source>
          <target state="translated">Обратите внимание, что если вы используете &lt;code&gt;iterator()&lt;/code&gt; для выполнения запроса, вызовы &lt;code&gt;prefetch_related()&lt;/code&gt; будут игнорироваться, так как эти две оптимизации не имеют смысла вместе.</target>
        </trans-unit>
        <trans-unit id="d3fefd7119376ae7f60ef230db53d905b5c5f7ea" translate="yes" xml:space="preserve">
          <source>Note that if you want the number of items in a &lt;code&gt;QuerySet&lt;/code&gt; and are also retrieving model instances from it (for example, by iterating over it), it&amp;rsquo;s probably more efficient to use &lt;code&gt;len(queryset)&lt;/code&gt; which won&amp;rsquo;t cause an extra database query like &lt;code&gt;count()&lt;/code&gt; would.</source>
          <target state="translated">Обратите внимание, что если вы хотите количество элементов в &lt;code&gt;QuerySet&lt;/code&gt; и также извлекаете из него экземпляры модели (например, путем итерации по нему), возможно, более эффективно использовать &lt;code&gt;len(queryset)&lt;/code&gt; который не вызовет дополнительный запрос к базе данных, такой как &lt;code&gt;count()&lt;/code&gt; будет.</target>
        </trans-unit>
        <trans-unit id="4b51148aa0e1df68489edcd2daa4501a3ad657c5" translate="yes" xml:space="preserve">
          <source>Note that if you want to include literal percent signs in the query, you have to double them in the case you are passing parameters:</source>
          <target state="translated">Обратите внимание,что если вы хотите включить в запрос буквальные знаки процента,то вы должны удвоить их в случае передачи параметров:</target>
        </trans-unit>
        <trans-unit id="4b4035dfedcff608a0dab9991ed7812ee69969f8" translate="yes" xml:space="preserve">
          <source>Note that if you wish to use the same file handle for multiple &lt;code&gt;post()&lt;/code&gt; calls then you will need to manually reset the file pointer between posts. The easiest way to do this is to manually close the file after it has been provided to &lt;code&gt;post()&lt;/code&gt;, as demonstrated above.</source>
          <target state="translated">Обратите внимание, что если вы хотите использовать один и тот же дескриптор файла для нескольких вызовов &lt;code&gt;post()&lt;/code&gt; вам необходимо вручную сбросить указатель файла между сообщениями. Самый простой способ сделать это - вручную закрыть файл после того, как он был предоставлен &lt;code&gt;post()&lt;/code&gt; , как показано выше.</target>
        </trans-unit>
        <trans-unit id="7f860210b1c27c53f17cee74317f048e4e6632b1" translate="yes" xml:space="preserve">
          <source>Note that in case there is no other lookup specified, Django interprets &lt;code&gt;change__abs=27&lt;/code&gt; as &lt;code&gt;change__abs__exact=27&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что в случае, если не указан другой поиск, Django интерпретирует &lt;code&gt;change__abs=27&lt;/code&gt; как &lt;code&gt;change__abs__exact=27&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9930c8dc279b69fbaa1a8be67211867deca2a03e" translate="yes" xml:space="preserve">
          <source>Note that in most deployment situations where Django isn&amp;rsquo;t involved in serving user-uploaded files, this setting won&amp;rsquo;t help you. For example, if your &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; is served directly by your front-end Web server (nginx, Apache, etc.) then you&amp;rsquo;d want to set this header there. On the other hand, if you are using Django to do something like require authorization in order to download files and you cannot set the header using your Web server, this setting will be useful.</source>
          <target state="translated">Обратите внимание, что в большинстве ситуаций развертывания, когда Django не участвует в обслуживании файлов, загруженных пользователем, этот параметр вам не поможет. Например, если ваш &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt; обслуживается непосредственно интерфейсным веб-сервером (nginx, Apache и т. Д.), То вы захотите установить этот заголовок там. С другой стороны, если вы используете Django для выполнения каких-либо действий, требующих авторизации для загрузки файлов, и вы не можете установить заголовок с помощью веб-сервера, этот параметр будет полезен.</target>
        </trans-unit>
        <trans-unit id="99e79e30a12a76f1313050e4f0b66fec20480e07" translate="yes" xml:space="preserve">
          <source>Note that in the case of identical date values, these methods will use the primary key as a tie-breaker. This guarantees that no records are skipped or duplicated. That also means you cannot use those methods on unsaved objects.</source>
          <target state="translated">Обратите внимание,что в случае одинаковых значений даты,эти методы будут использовать первичный ключ в качестве тай-брейка.Это гарантирует,что никакие записи не будут пропущены или дублированы.Это также означает,что вы не можете использовать эти методы на несохраненных объектах.</target>
        </trans-unit>
        <trans-unit id="90c15f36e80bc36194e7fc7c88e2411b03bc0b09" translate="yes" xml:space="preserve">
          <source>Note that in the last example the article has moved from John to Paul.</source>
          <target state="translated">Обратите внимание,что в последнем примере статья переместилась от Иоанна к Павлу.</target>
        </trans-unit>
        <trans-unit id="cf55cefd5bd9a22b0ef1f0f6fcfbd1370197c2a8" translate="yes" xml:space="preserve">
          <source>Note that inheriting from multiple models that have a common &lt;code&gt;id&lt;/code&gt; primary key field will raise an error. To properly use multiple inheritance, you can use an explicit &lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; in the base models:</source>
          <target state="translated">Обратите внимание, что наследование от нескольких моделей с полем первичного ключа с общим &lt;code&gt;id&lt;/code&gt; вызовет ошибку. Чтобы правильно использовать множественное наследование, вы можете использовать явное &lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt; в базовых моделях:</target>
        </trans-unit>
        <trans-unit id="f16597be826caa262d10a0f4d0ad1380467491e9" translate="yes" xml:space="preserve">
          <source>Note that it &lt;strong&gt;does not&lt;/strong&gt; include the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags, or a submit button. We&amp;rsquo;ll have to provide those ourselves in the template.</source>
          <target state="translated">Обратите внимание, что он &lt;strong&gt;не&lt;/strong&gt; включает теги &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; или кнопку отправки. Мы должны предоставить их самим в шаблоне.</target>
        </trans-unit>
        <trans-unit id="20fcecc00ae0237fe53c67889180caee6880fbb3" translate="yes" xml:space="preserve">
          <source>Note that it is possible to compare &lt;code&gt;Polygon&lt;/code&gt; objects directly with &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;, but as the comparison is made through Polygon&amp;rsquo;s &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, it does not mean much (but is consistent and quick). You can always force the comparison with the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.area&quot;&gt;&lt;code&gt;area&lt;/code&gt;&lt;/a&gt; property:</source>
          <target state="translated">Обратите внимание, что можно сравнивать объекты &lt;code&gt;Polygon&lt;/code&gt; напрямую с &lt;code&gt;&amp;lt;&lt;/code&gt; или &lt;code&gt;&amp;gt;&lt;/code&gt; , но так как сравнение выполняется через &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt; Polygon , это не имеет большого значения (но является последовательным и быстрым). Вы всегда можете выполнить сравнение со свойством &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.area&quot;&gt; &lt;code&gt;area&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="309e54b62c2f8838bb6218907b1b434ce25c9449" translate="yes" xml:space="preserve">
          <source>Note that it&amp;rsquo;s perfectly safe to store global information that will not change throughout the life of the &lt;code&gt;Node&lt;/code&gt; as an attribute. In the case of &lt;code&gt;CycleNode&lt;/code&gt;, the &lt;code&gt;cyclevars&lt;/code&gt; argument doesn&amp;rsquo;t change after the &lt;code&gt;Node&lt;/code&gt; is instantiated, so we don&amp;rsquo;t need to put it in the &lt;code&gt;render_context&lt;/code&gt;. But state information that is specific to the template that is currently being rendered, like the current iteration of the &lt;code&gt;CycleNode&lt;/code&gt;, should be stored in the &lt;code&gt;render_context&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что в качестве атрибута совершенно безопасно хранить глобальную информацию, которая не будет изменяться в течение всего срока службы &lt;code&gt;Node&lt;/code&gt; . В случае &lt;code&gt;CycleNode&lt;/code&gt; , то &lt;code&gt;cyclevars&lt;/code&gt; аргумент не изменяется после &lt;code&gt;Node&lt;/code&gt; экземпляра, поэтому нам не нужно ставить его в &lt;code&gt;render_context&lt;/code&gt; . Но информация о состоянии, &lt;code&gt;CycleNode&lt;/code&gt; к шаблону, который отображается в данный момент, например текущая итерация CycleNode , должна храниться в &lt;code&gt;render_context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e90fd4cc43a3b840e41758699f16f4a951c22c6a" translate="yes" xml:space="preserve">
          <source>Note that model interdependencies in Django can get very complex, and squashing may result in migrations that do not run; either mis-optimized (in which case you can try again with &lt;code&gt;--no-optimize&lt;/code&gt;, though you should also report an issue), or with a &lt;code&gt;CircularDependencyError&lt;/code&gt;, in which case you can manually resolve it.</source>
          <target state="translated">Обратите внимание, что взаимозависимости моделей в Django могут быть очень сложными, а сжатие может привести к миграции, которая не выполняется; либо неправильно оптимизирован (в этом случае вы можете повторить попытку с &lt;code&gt;--no-optimize&lt;/code&gt; , хотя вы также должны сообщить о проблеме), либо с &lt;code&gt;CircularDependencyError&lt;/code&gt; , и в этом случае вы можете решить ее вручную.</target>
        </trans-unit>
        <trans-unit id="284c76538164a551a6ead0347d70137da1e7759a" translate="yes" xml:space="preserve">
          <source>Note that not all changes are possible on all databases - for example, you cannot change a text-type field like &lt;code&gt;models.TextField()&lt;/code&gt; into a number-type field like &lt;code&gt;models.IntegerField()&lt;/code&gt; on most databases.</source>
          <target state="translated">Обратите внимание, что не все изменения возможны во всех базах данных - например, вы не можете изменить поле текстового типа, например &lt;code&gt;models.TextField()&lt;/code&gt; в поле &lt;code&gt;models.IntegerField()&lt;/code&gt; типа, например models.IntegerField (), в большинстве баз данных.</target>
        </trans-unit>
        <trans-unit id="5765b42680f5abb4a72b6c1b5ae0dc4354eab406" translate="yes" xml:space="preserve">
          <source>Note that older or more recent versions of these libraries &lt;em&gt;may&lt;/em&gt; also work totally fine with GeoDjango. Your mileage may vary.</source>
          <target state="translated">Обратите внимание, что более старые или более поздние версии этих библиотек &lt;em&gt;могут&lt;/em&gt; также прекрасно работать с GeoDjango. Ваш пробег может варьироваться.</target>
        </trans-unit>
        <trans-unit id="fbd318205dcfeda5f23d3aa3a5607de8d9bf49a6" translate="yes" xml:space="preserve">
          <source>Note that once we&amp;rsquo;ve done this in all these views, we no longer need to import &lt;a href=&quot;../topics/templates#module-django.template.loader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; (you&amp;rsquo;ll want to keep &lt;code&gt;HttpResponse&lt;/code&gt; if you still have the stub methods for &lt;code&gt;detail&lt;/code&gt;, &lt;code&gt;results&lt;/code&gt;, and &lt;code&gt;vote&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание, что после того, как мы сделали это во всех этих представлениях, нам больше не нужно импортировать &lt;a href=&quot;../topics/templates#module-django.template.loader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; (вы захотите сохранить &lt;code&gt;HttpResponse&lt;/code&gt; , если у вас все еще есть методы-заглушки для &lt;code&gt;detail&lt;/code&gt; , &lt;code&gt;results&lt;/code&gt; и &lt;code&gt;vote&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="db3daa7b3e0d58113112241aa78669b84d25e7f6" translate="yes" xml:space="preserve">
          <source>Note that only the execution of your view is enclosed in the transactions. Middleware runs outside of the transaction, and so does the rendering of template responses.</source>
          <target state="translated">Обратите внимание,что в транзакциях вложено только выполнение Вашего представления.Среднее программное обеспечение работает вне транзакции,так же как и отрисовка ответов по шаблону.</target>
        </trans-unit>
        <trans-unit id="f230fc5e74b5fca6a965580a65f23bf035b6e813" translate="yes" xml:space="preserve">
          <source>Note that only the outermost call to &lt;a href=&quot;../../../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; sets up a transaction and thus sets the time that &lt;code&gt;TransactionNow()&lt;/code&gt; will return; nested calls create savepoints which do not affect the transaction time.</source>
          <target state="translated">Обратите внимание, что только самый внешний вызов &lt;a href=&quot;../../../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; устанавливает транзакцию и, следовательно, устанавливает время, которое &lt;code&gt;TransactionNow()&lt;/code&gt; возвратит; вложенные вызовы создают точки сохранения, которые не влияют на время транзакции.</target>
        </trans-unit>
        <trans-unit id="d57570c30207a70feb1f95d543f2d181afc9bba6" translate="yes" xml:space="preserve">
          <source>Note that passing an empty dictionary creates a &lt;em&gt;bound&lt;/em&gt; form with empty data:</source>
          <target state="translated">Обратите внимание, что передача пустого словаря создает &lt;em&gt;связанную&lt;/em&gt; форму с пустыми данными:</target>
        </trans-unit>
        <trans-unit id="eaad0f28e2fcb42d6532c371c6cfac0fd491200a" translate="yes" xml:space="preserve">
          <source>Note that per-user installations can still affect the behavior of system tools that run as that user, so &lt;code&gt;virtualenv&lt;/code&gt; is a more robust solution (see below).</source>
          <target state="translated">Обратите внимание, что индивидуальные установки могут по-прежнему влиять на поведение системных инструментов, которые запускаются от имени этого пользователя, поэтому &lt;code&gt;virtualenv&lt;/code&gt; является более надежным решением (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="773f2a11fc905c994db622bf8e5b84629e2c2670" translate="yes" xml:space="preserve">
          <source>Note that per-user installations can still affect the behavior of system tools that run as that user, so using a virtual environment is a more robust solution (see below).</source>
          <target state="translated">Обратите внимание,что установка для каждого пользователя все еще может влиять на поведение системных инструментов,которые работают от имени этого пользователя,поэтому использование виртуальной среды является более надежным решением (см.ниже).</target>
        </trans-unit>
        <trans-unit id="cb0441db5179fedc88175f7abe68eb6db9244379" translate="yes" xml:space="preserve">
          <source>Note that pluralization is complicated and works differently in each language. Comparing &lt;code&gt;count&lt;/code&gt; to 1 isn&amp;rsquo;t always the correct rule. This code looks sophisticated, but will produce incorrect results for some languages:</source>
          <target state="translated">Обратите внимание, что плюрализация сложна и работает по-разному в каждом языке. Сравнение &lt;code&gt;count&lt;/code&gt; с 1 не всегда является правильным правилом. Этот код выглядит сложным, но для некоторых языков выдаст неверные результаты:</target>
        </trans-unit>
        <trans-unit id="5de11d40e524334a2d38e78962aaeec3d5b135e7" translate="yes" xml:space="preserve">
          <source>Note that request methods should be in uppercase.</source>
          <target state="translated">Обратите внимание,что методы запроса должны быть в верхнем регистре.</target>
        </trans-unit>
        <trans-unit id="968db22470d1ca267f45216e5aaa73f7fd939af9" translate="yes" xml:space="preserve">
          <source>Note that setting &lt;a href=&quot;#std:setting-EMAIL_SSL_CERTFILE&quot;&gt;&lt;code&gt;EMAIL_SSL_CERTFILE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-EMAIL_SSL_KEYFILE&quot;&gt;&lt;code&gt;EMAIL_SSL_KEYFILE&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t result in any certificate checking. They&amp;rsquo;re passed to the underlying SSL connection. Please refer to the documentation of Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/ssl.html#ssl.wrap_socket&quot;&gt;&lt;code&gt;ssl.wrap_socket()&lt;/code&gt;&lt;/a&gt; function for details on how the certificate chain file and private key file are handled.</source>
          <target state="translated">Обратите внимание, что установка &lt;a href=&quot;#std:setting-EMAIL_SSL_CERTFILE&quot;&gt; &lt;code&gt;EMAIL_SSL_CERTFILE&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#std:setting-EMAIL_SSL_KEYFILE&quot;&gt; &lt;code&gt;EMAIL_SSL_KEYFILE&lt;/code&gt; &lt;/a&gt; не приводит к проверке сертификата. Они передаются в основное соединение SSL. Пожалуйста, обратитесь к документации функции Python &lt;a href=&quot;https://docs.python.org/3/library/ssl.html#ssl.wrap_socket&quot;&gt; &lt;code&gt;ssl.wrap_socket()&lt;/code&gt; &lt;/a&gt; для получения подробной информации о том, как обрабатываются файл цепочки сертификатов и файл закрытого ключа.</target>
        </trans-unit>
        <trans-unit id="c22e8dd57361cf848941e0793916235467d46530" translate="yes" xml:space="preserve">
          <source>Note that since &lt;code&gt;set()&lt;/code&gt; is a compound operation, it is subject to race conditions. For instance, new objects may be added to the database in between the call to &lt;code&gt;clear()&lt;/code&gt; and the call to &lt;code&gt;add()&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что поскольку &lt;code&gt;set()&lt;/code&gt; является составной операцией, она зависит от условий гонки. Например, новые объекты могут быть добавлены в базу данных между вызовом &lt;code&gt;clear()&lt;/code&gt; и вызовом &lt;code&gt;add()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1ea0edc5eb39ec2c96e83f140636e0429b857eb" translate="yes" xml:space="preserve">
          <source>Note that since the child template didn&amp;rsquo;t define the &lt;code&gt;sidebar&lt;/code&gt; block, the value from the parent template is used instead. Content within a &lt;code&gt;{% block %}&lt;/code&gt; tag in a parent template is always used as a fallback.</source>
          <target state="translated">Обратите внимание, что, поскольку дочерний шаблон не определил блок &lt;code&gt;sidebar&lt;/code&gt; , вместо него используется значение из родительского шаблона. Содержимое внутри тега &lt;code&gt;{% block %}&lt;/code&gt; в родительском шаблоне всегда используется в качестве запасного варианта.</target>
        </trans-unit>
        <trans-unit id="a0ef7e754d821fe5a5389a0e0485b1236840d758" translate="yes" xml:space="preserve">
          <source>Note that some Django code was executed while running tests, but it is not listed here because of the &lt;code&gt;source&lt;/code&gt; flag passed to the previous command.</source>
          <target state="translated">Обратите внимание, что некоторый код Django был выполнен во время выполнения тестов, но его здесь нет в списке из-за флага &lt;code&gt;source&lt;/code&gt; переданного предыдущей команде.</target>
        </trans-unit>
        <trans-unit id="b58e3568c1f9f0b7253202c19712cef23c12adeb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; only steps in once another view has successfully produced a 404 response. If another view or middleware class attempts to produce a 404 but ends up raising an exception instead, the response will become an HTTP 500 (&amp;ldquo;Internal Server Error&amp;rdquo;) and the &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; will not attempt to serve a flat page.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; выполняет&lt;/a&gt; только шаги, если другое представление успешно выдало ответ 404. Если другой класс представления или промежуточного программного обеспечения пытается создать 404, но вместо этого &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt; исключение, ответом станет HTTP 500 (&amp;laquo;Внутренняя ошибка сервера&amp;raquo;), и FlatpageFallbackMiddleware не будет пытаться обслуживать плоскую страницу.</target>
        </trans-unit>
        <trans-unit id="6fd81eb0266642f411e0ec2b93dda43fb0cdaa81" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method for an object is not necessarily called when &lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;deleting objects in bulk using a QuerySet&lt;/a&gt; or as a result of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;cascading
delete&lt;/code&gt;&lt;/a&gt;. To ensure customized delete logic gets executed, you can use &lt;a href=&quot;../../ref/signals#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;post_delete&lt;/code&gt;&lt;/a&gt; signals.</source>
          <target state="translated">Обратите внимание, что метод &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; для объекта не обязательно вызывается при &lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;массовом удалении объектов с использованием QuerySet&lt;/a&gt; или в результате &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;cascading delete&lt;/code&gt; &lt;/a&gt; . Чтобы обеспечить выполнение настроенной логики удаления, вы можете использовать &lt;a href=&quot;../../ref/signals#django.db.models.signals.pre_delete&quot;&gt; &lt;code&gt;pre_delete&lt;/code&gt; &lt;/a&gt; и / или &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_delete&quot;&gt; &lt;code&gt;post_delete&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="253ce872bdbdccddb3ef8b680bcb97ef630a7e6c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; method recursively prepopulates the cache of all one-to-many relationships ahead of time. Example:</source>
          <target state="translated">Обратите внимание, что метод &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt; рекурсивно заранее заполняет кэш всех отношений &amp;laquo;один ко многим&amp;raquo;. Пример:</target>
        </trans-unit>
        <trans-unit id="e80f5630b8f1dca8b0ea0eedd1bf8d8773a13237" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;content&lt;/code&gt; argument must be an instance of either &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; or of a subclass of &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt;&lt;code&gt;ContentFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что аргумент &lt;code&gt;content&lt;/code&gt; должен быть экземпляром либо &lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; ,&lt;/a&gt; либо подкласса &lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; , например &lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt; &lt;code&gt;ContentFile&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69cf65c7f436b8fbaff150d2dc857544f903a181" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;content&lt;/code&gt; argument should be an instance of &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;django.core.files.File&lt;/code&gt;&lt;/a&gt;, not Python&amp;rsquo;s built-in file object. You can construct a &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; from an existing Python file object like this:</source>
          <target state="translated">Обратите внимание, что аргумент &lt;code&gt;content&lt;/code&gt; должен быть экземпляром &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;django.core.files.File&lt;/code&gt; &lt;/a&gt; , а не встроенным файловым объектом Python. Вы можете создать &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; из существующего объекта файла Python следующим образом:</target>
        </trans-unit>
        <trans-unit id="f40ef01b229f9c63dbeb83559c6536f91520f3ba" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;docs&lt;/code&gt; directory won&amp;rsquo;t be included in your package unless you add some files to it. Many Django apps also provide their documentation online through sites like &lt;a href=&quot;https://readthedocs.org&quot;&gt;readthedocs.org&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что каталог &lt;code&gt;docs&lt;/code&gt; не будет включен в ваш пакет, если вы не добавите в него некоторые файлы. Многие приложения Django также предоставляют свою документацию онлайн через такие сайты, как &lt;a href=&quot;https://readthedocs.org&quot;&gt;readthedocs.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="480e601acbf5c70f30565ccc01d9a0fb37503e26" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;models&lt;/code&gt; module is imported from &lt;code&gt;django.contrib.gis.db&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что модуль &lt;code&gt;models&lt;/code&gt; импортирован из &lt;code&gt;django.contrib.gis.db&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c97e4e91823174dcc8b363df50dbaa5e57e373" translate="yes" xml:space="preserve">
          <source>Note that the block includes &lt;em&gt;all&lt;/em&gt; the text between the &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;endfilter&lt;/code&gt; tags.</source>
          <target state="translated">Обратите внимание, что блок включает &lt;em&gt;весь&lt;/em&gt; текст между тегами &lt;code&gt;filter&lt;/code&gt; и &lt;code&gt;endfilter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d560327fe2008995352ea5ff59887465ed4e02c3" translate="yes" xml:space="preserve">
          <source>Note that the cache backend isn&amp;rsquo;t vulnerable to this problem, because caches automatically delete stale data. Neither is the cookie backend, because the session data is stored by the users&amp;rsquo; browsers.</source>
          <target state="translated">Обратите внимание, что серверная часть кэша не подвержена этой проблеме, поскольку кэши автоматически удаляют устаревшие данные. Ни один из них не является куки-файлом, потому что данные сеанса хранятся в браузерах пользователей.</target>
        </trans-unit>
        <trans-unit id="997b862ea7c654dba69036735ee9c3d739d594e9" translate="yes" xml:space="preserve">
          <source>Note that the cache control settings &amp;ldquo;private&amp;rdquo; and &amp;ldquo;public&amp;rdquo; are mutually exclusive. The decorator ensures that the &amp;ldquo;public&amp;rdquo; directive is removed if &amp;ldquo;private&amp;rdquo; should be set (and vice versa). An example use of the two directives would be a blog site that offers both private and public entries. Public entries may be cached on any shared cache. The following code uses &lt;a href=&quot;../ref/utils#django.utils.cache.patch_cache_control&quot;&gt;&lt;code&gt;patch_cache_control()&lt;/code&gt;&lt;/a&gt;, the manual way to modify the cache control header (it is internally called by the &lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt;&lt;code&gt;cache_control()&lt;/code&gt;&lt;/a&gt; decorator):</source>
          <target state="translated">Обратите внимание, что настройки управления кэшем &amp;laquo;private&amp;raquo; и &amp;laquo;public&amp;raquo; являются взаимоисключающими. Декоратор гарантирует, что директива public будет удалена, если нужно установить private (и наоборот). Примером использования этих двух директив будет сайт блога, который предлагает как частные, так и публичные записи. Публичные записи могут кэшироваться в любом общем кеше. В следующем коде используется &lt;a href=&quot;../ref/utils#django.utils.cache.patch_cache_control&quot;&gt; &lt;code&gt;patch_cache_control()&lt;/code&gt; &lt;/a&gt; , ручной способ изменения заголовка &lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt; &lt;code&gt;cache_control()&lt;/code&gt; &lt;/a&gt; управления кеша (он вызывается внутренне декоратором cache_control () ):</target>
        </trans-unit>
        <trans-unit id="329a8fe91b918a1eabc78ec4127577a2eaa4620a" translate="yes" xml:space="preserve">
          <source>Note that the default IP address, &lt;code&gt;127.0.0.1&lt;/code&gt;, is not accessible from other machines on your network. To make your development server viewable to other machines on the network, use its own IP address (e.g. &lt;code&gt;192.168.2.1&lt;/code&gt;) or &lt;code&gt;0.0.0.0&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; (with IPv6 enabled).</source>
          <target state="translated">Обратите внимание, что IP-адрес по умолчанию, &lt;code&gt;127.0.0.1&lt;/code&gt; , недоступен с других компьютеров вашей сети. Чтобы сделать ваш сервер разработки видимым для других компьютеров в сети, используйте его собственный IP-адрес (например, &lt;code&gt;192.168.2.1&lt;/code&gt; ) или &lt;code&gt;0.0.0.0&lt;/code&gt; или &lt;code&gt;::&lt;/code&gt; (с включенным IPv6).</target>
        </trans-unit>
        <trans-unit id="7932c67ecc916c97da8c8c7c0e37c190f380e858" translate="yes" xml:space="preserve">
          <source>Note that the default configuration process only calls &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; once settings are fully-loaded. In contrast, manually configuring the logging in your settings file will load your logging config immediately. As such, your logging config must appear &lt;em&gt;after&lt;/em&gt; any settings on which it depends.</source>
          <target state="translated">Обратите внимание, что процесс настройки по умолчанию вызывает &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt; только после полной загрузки параметров. Напротив, ручная настройка ведения журнала в файле настроек немедленно загрузит конфигурацию ведения журнала. Таким образом, ваша конфигурация ведения журнала должна отображаться &lt;em&gt;после&lt;/em&gt; любых настроек, от которых она зависит.</target>
        </trans-unit>
        <trans-unit id="40528c2a9e8caf146e1fc466ce15cb5b451cd1a5" translate="yes" xml:space="preserve">
          <source>Note that the first argument &lt;em&gt;must&lt;/em&gt; be called &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что первый аргумент &lt;em&gt;должен&lt;/em&gt; называться &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65e9739383cf60a6791ac75fed8f327d25413bd7" translate="yes" xml:space="preserve">
          <source>Note that the first parameter to the function &lt;em&gt;must&lt;/em&gt; be called &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что первый параметр функции &lt;em&gt;должен&lt;/em&gt; называться &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0abaf39e2d3058e4498c22aad4c34d7e6f3e0926" translate="yes" xml:space="preserve">
          <source>Note that the header needs to be in the format as used by &lt;code&gt;request.META&lt;/code&gt; &amp;ndash; all caps and likely starting with &lt;code&gt;HTTP_&lt;/code&gt;. (Remember, Django automatically adds &lt;code&gt;'HTTP_'&lt;/code&gt; to the start of x-header names before making the header available in &lt;code&gt;request.META&lt;/code&gt;.)</source>
          <target state="translated">Обратите внимание, что заголовок должен быть в формате, который используется &lt;code&gt;request.META&lt;/code&gt; - все заглавные буквы и, вероятно, начинаются с &lt;code&gt;HTTP_&lt;/code&gt; . (Помните, Django автоматически добавляет &lt;code&gt;'HTTP_'&lt;/code&gt; в начало имен x-заголовков перед тем, как сделать заголовок доступным в &lt;code&gt;request.META&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="a0b88ccf06c4a2dde1c8ecf8326ade5f6087323f" translate="yes" xml:space="preserve">
          <source>Note that the key in the dictionary is the actual field class, &lt;em&gt;not&lt;/em&gt; a string. The value is another dictionary; these arguments will be passed to the form field&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method. See &lt;a href=&quot;../../forms/api&quot;&gt;The Forms API&lt;/a&gt; for details.</source>
          <target state="translated">Обратите внимание, что ключ в словаре - это фактический класс поля, а &lt;em&gt;не&lt;/em&gt; строка. Значение другого словаря; эти аргументы будут переданы методу поля формы &lt;code&gt;__init__()&lt;/code&gt; . См &lt;a href=&quot;../../forms/api&quot;&gt;. Forms API&lt;/a&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="09019a3c236f5e543c42c3fc84c9325d2206d759" translate="yes" xml:space="preserve">
          <source>Note that the label suffix is added only if the last character of the label isn&amp;rsquo;t a punctuation character (in English, those are &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание, что суффикс метки добавляется только в том случае, если последний символ метки не является символом пунктуации (на английском языке это &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; Или &lt;code&gt;:&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="45f9ccb1fbd2c54a94373b7ce9767a5b690ebf8b" translate="yes" xml:space="preserve">
          <source>Note that the latest Django master may not always be stable. When developing against master, you can check &lt;a href=&quot;https://djangoci.com&quot;&gt;Django&amp;rsquo;s continuous integration builds&lt;/a&gt; to determine if the failures are specific to your machine or if they are also present in Django&amp;rsquo;s official builds. If you click to view a particular build, you can view the &amp;ldquo;Configuration Matrix&amp;rdquo; which shows failures broken down by Python version and database backend.</source>
          <target state="translated">Обратите внимание, что последний мастер Django не всегда может быть стабильным. При разработке против master вы можете проверить &lt;a href=&quot;https://djangoci.com&quot;&gt;сборки непрерывной интеграции Django,&lt;/a&gt; чтобы определить, являются ли сбои специфичными для вашей машины или они также присутствуют в официальных сборках Django. Если вы щелкнете, чтобы просмотреть конкретную сборку, вы сможете просмотреть &amp;laquo;Матрицу конфигурации&amp;raquo;, в которой показаны сбои, разбитые по версии Python и бэкэнду базы данных.</target>
        </trans-unit>
        <trans-unit id="1c1acd60a0e2efb4514768243487586e4ccb5e22" translate="yes" xml:space="preserve">
          <source>Note that the loader performs an optimization when it first runs: it caches a list of which &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; packages have a &lt;code&gt;templates&lt;/code&gt; subdirectory.</source>
          <target state="translated">Обратите внимание, что загрузчик выполняет оптимизацию при первом запуске: он кэширует список пакетов &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; ,&lt;/a&gt; в которых есть подкаталог &lt;code&gt;templates&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d5d95f9aa8b375a624a768724d8045e847dc228" translate="yes" xml:space="preserve">
          <source>Note that the name of the matched pattern in the path strings of the second and third patterns has changed from &lt;code&gt;&amp;lt;question_id&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;pk&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что имя соответствующего шаблона в строках пути второго и третьего шаблонов изменилось с &lt;code&gt;&amp;lt;question_id&amp;gt;&lt;/code&gt; на &lt;code&gt;&amp;lt;pk&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b16982e8febbd865c853824b0312670d37d10b80" translate="yes" xml:space="preserve">
          <source>Note that the name of the view function doesn&amp;rsquo;t matter; it doesn&amp;rsquo;t have to be named in a certain way in order for Django to recognize it. We&amp;rsquo;re calling it &lt;code&gt;current_datetime&lt;/code&gt; here, because that name clearly indicates what it does.</source>
          <target state="translated">Обратите внимание, что имя функции представления не имеет значения; его не нужно называть определенным образом, чтобы Джанго узнал его. Мы называем это &lt;code&gt;current_datetime&lt;/code&gt; здесь, потому что это имя ясно указывает на то, что оно делает.</target>
        </trans-unit>
        <trans-unit id="1d37566e826663dd236669ec8c0a538314d88d04" translate="yes" xml:space="preserve">
          <source>Note that the object will no longer be in the database, so be very careful what you do with this instance.</source>
          <target state="translated">Обратите внимание,что объект больше не будет в базе данных,поэтому будьте очень осторожны при работе с этим экземпляром.</target>
        </trans-unit>
        <trans-unit id="6cb9b339d54209535bd6dcb521d136ae0891eda7" translate="yes" xml:space="preserve">
          <source>Note that the order in which fixture files are processed is undefined. However, all fixture data is installed as a single transaction, so data in one fixture can reference data in another fixture. If the database backend supports row-level constraints, these constraints will be checked at the end of the transaction.</source>
          <target state="translated">Обратите внимание,что порядок обработки файлов фиксаторов не определен.Однако все данные по фикстурам устанавливаются как одна транзакция,поэтому данные в одной фикстуре могут ссылаться на данные в другой фикстуре.Если бэкэнд БД поддерживает ограничения на уровне рядов,то эти ограничения будут проверяться в конце транзакции.</target>
        </trans-unit>
        <trans-unit id="cb80071655e1d9fbbd4b908b7ff6b7de62de9971" translate="yes" xml:space="preserve">
          <source>Note that the order of &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; matters. Generally, you can put &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; at the end of the list. This means it will run first when processing the response, and ensures that any other response-processing middleware see the real flatpage response rather than the 404.</source>
          <target state="translated">Обратите внимание, что порядок &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; имеет значение. Как правило, вы можете поместить &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt; в конец списка. Это означает, что он будет запускаться первым при обработке ответа и гарантирует, что любое другое промежуточное ПО для обработки ответов будет видеть реальный отклик плоской страницы, а не 404.</target>
        </trans-unit>
        <trans-unit id="08698ded25f56ec765d5763a05954e398b0131e4" translate="yes" xml:space="preserve">
          <source>Note that the order of &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; matters. Generally, you can put &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; at the end of the list, because it&amp;rsquo;s a last resort.</source>
          <target state="translated">Обратите внимание, что порядок &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; имеет значение. Как правило, вы можете поместить &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; &lt;/a&gt; в конец списка, потому что это последнее средство.</target>
        </trans-unit>
        <trans-unit id="fef6bd3ebae4c1ec9ddd2798fe72b4fcf23c8784" translate="yes" xml:space="preserve">
          <source>Note that the parentheses required by most database engines around subqueries are not required in Django&amp;rsquo;s &lt;code&gt;select&lt;/code&gt; clauses. Also note that some database backends, such as some MySQL versions, don&amp;rsquo;t support subqueries.</source>
          <target state="translated">Обратите внимание, что скобки, требуемые большинством механизмов баз данных для подзапросов, не требуются в предложениях &lt;code&gt;select&lt;/code&gt; Django . Также обратите внимание, что некоторые базы данных, такие как некоторые версии MySQL, не поддерживают подзапросы.</target>
        </trans-unit>
        <trans-unit id="cfc63e63ecf8ac2eb2e30b758738319acc47dd43" translate="yes" xml:space="preserve">
          <source>Note that the queries generated in object deletion is an implementation detail subject to change.</source>
          <target state="translated">Обратите внимание,что запросы,генерируемые при удалении объектов,являются деталями реализации,которые могут быть изменены.</target>
        </trans-unit>
        <trans-unit id="08ece2bb01374f6040408665502dabf3bdbfee50" translate="yes" xml:space="preserve">
          <source>Note that the result cache of the primary &lt;code&gt;QuerySet&lt;/code&gt; and all specified related objects will then be fully loaded into memory. This changes the typical behavior of &lt;code&gt;QuerySets&lt;/code&gt;, which normally try to avoid loading all objects into memory before they are needed, even after a query has been executed in the database.</source>
          <target state="translated">Обратите внимание, что кэш результатов основного &lt;code&gt;QuerySet&lt;/code&gt; и всех указанных связанных объектов будет полностью загружен в память. Это меняет типичное поведение &lt;code&gt;QuerySets&lt;/code&gt; , которые обычно пытаются избежать загрузки всех объектов в память до того, как они понадобятся, даже после того, как запрос был выполнен в базе данных.</target>
        </trans-unit>
        <trans-unit id="aa58b675144be5fd04bd425ca97fc559b052e8eb" translate="yes" xml:space="preserve">
          <source>Note that the return code for the test-runner script is 1 for any number of failed and erroneous tests. If all the tests pass, the return code is 0. This feature is useful if you&amp;rsquo;re using the test-runner script in a shell script and need to test for success or failure at that level.</source>
          <target state="translated">Обратите внимание, что код возврата для сценария выполнения теста равен 1 для любого количества неудачных и ошибочных тестов. Если все тесты пройдены, код возврата равен 0. Эта функция полезна, если вы используете сценарий тестового прогона в сценарии оболочки и вам нужно проверить его на успешность или неудачу на этом уровне.</target>
        </trans-unit>
        <trans-unit id="d50fd012ff22d54624835fa78fdc60e01d630190" translate="yes" xml:space="preserve">
          <source>Note that the session cookie is only sent when a session has been created or modified. If &lt;a href=&quot;../../ref/settings#std:setting-SESSION_SAVE_EVERY_REQUEST&quot;&gt;&lt;code&gt;SESSION_SAVE_EVERY_REQUEST&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, the session cookie will be sent on every request.</source>
          <target state="translated">Обратите внимание, что cookie-файл сеанса отправляется только тогда, когда сеанс был создан или изменен. Если значение &lt;a href=&quot;../../ref/settings#std:setting-SESSION_SAVE_EVERY_REQUEST&quot;&gt; &lt;code&gt;SESSION_SAVE_EVERY_REQUEST&lt;/code&gt; &lt;/a&gt; равно &lt;code&gt;True&lt;/code&gt; , cookie-файл сеанса будет отправляться при каждом запросе.</target>
        </trans-unit>
        <trans-unit id="5a3066deed15c333016258a7e176bfa5fbe7bff4" translate="yes" xml:space="preserve">
          <source>Note that the test client is not intended to be a replacement for &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; or other &amp;ldquo;in-browser&amp;rdquo; frameworks. Django&amp;rsquo;s test client has a different focus. In short:</source>
          <target state="translated">Обратите внимание, что тестовый клиент не предназначен для замены &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; или других платформ &amp;laquo;в браузере&amp;raquo;. Тестовый клиент Django имеет другую направленность. Коротко:</target>
        </trans-unit>
        <trans-unit id="e7c15fa6899ee16f22c2f3eebad5d4575601d120" translate="yes" xml:space="preserve">
          <source>Note that there also is a &lt;a href=&quot;#django.forms.MultipleHiddenInput&quot;&gt;&lt;code&gt;MultipleHiddenInput&lt;/code&gt;&lt;/a&gt; widget that encapsulates a set of hidden input elements.</source>
          <target state="translated">Обратите внимание, что также есть виджет &lt;a href=&quot;#django.forms.MultipleHiddenInput&quot;&gt; &lt;code&gt;MultipleHiddenInput&lt;/code&gt; ,&lt;/a&gt; который инкапсулирует набор скрытых элементов ввода.</target>
        </trans-unit>
        <trans-unit id="f3dc5df00a8e3e730c40fe838d9cf28eedc30a0f" translate="yes" xml:space="preserve">
          <source>Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="translated">Обратите внимание, что у &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt; &lt;code&gt;caveats to this method&lt;/code&gt; &lt;/a&gt; есть ряд предостережений , поэтому убедитесь, что он подходит для вашего варианта использования.</target>
        </trans-unit>
        <trans-unit id="ed11446b0c6e152b1bcc9ce1866f87a0033a7c22" translate="yes" xml:space="preserve">
          <source>Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_update&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="translated">Обратите внимание, что у &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_update&quot;&gt; &lt;code&gt;caveats to this method&lt;/code&gt; &lt;/a&gt; есть ряд предостережений , поэтому убедитесь, что он подходит для вашего варианта использования.</target>
        </trans-unit>
        <trans-unit id="ec4883b6f62b2a123fc0b302f2c2ef4d90d01466" translate="yes" xml:space="preserve">
          <source>Note that there is a difference between using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; with a slice of &lt;code&gt;[0]&lt;/code&gt;. If there are no results that match the query, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; will raise a &lt;code&gt;DoesNotExist&lt;/code&gt; exception. This exception is an attribute of the model class that the query is being performed on - so in the code above, if there is no &lt;code&gt;Entry&lt;/code&gt; object with a primary key of 1, Django will raise &lt;code&gt;Entry.DoesNotExist&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что есть разница между использованием &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; со срезом &lt;code&gt;[0]&lt;/code&gt; . Если нет никаких результатов, соответствующих запрос, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; возбудит &lt;code&gt;DoesNotExist&lt;/code&gt; исключения. Это исключение является атрибутом класса модели, к которому выполняется запрос - поэтому в приведенном выше коде, если нет объекта &lt;code&gt;Entry&lt;/code&gt; с первичным ключом, &lt;code&gt;Entry.DoesNotExist&lt;/code&gt; 1, Django вызовет Entry.DoesNotExist .</target>
        </trans-unit>
        <trans-unit id="e083cac1d45447670947e2765f04c7f401bd320c" translate="yes" xml:space="preserve">
          <source>Note that there is an extra &amp;ldquo;Delete?&amp;rdquo; column that allows removing rows added using the &amp;ldquo;Add Another Choice&amp;rdquo; button and rows that have already been saved.</source>
          <target state="translated">Обратите внимание, что есть дополнительный &amp;laquo;Удалить?&amp;raquo; столбец, который позволяет удалять строки, добавленные с помощью кнопки &amp;laquo;Добавить другой выбор&amp;raquo;, и строки, которые уже были сохранены.</target>
        </trans-unit>
        <trans-unit id="d2130933d4a7a35839fd38a445d7757805cf2913" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no need to specify the keyword argument of the model that defines the relationship. In the above example, we don&amp;rsquo;t pass the parameter &lt;code&gt;blog&lt;/code&gt; to &lt;code&gt;create()&lt;/code&gt;. Django figures out that the new &lt;code&gt;Entry&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;blog&lt;/code&gt; field should be set to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что нет необходимости указывать ключевой аргумент модели, которая определяет отношения. В приведенном выше примере мы не передаем параметр &lt;code&gt;blog&lt;/code&gt; в &lt;code&gt;create()&lt;/code&gt; . Джанго выясняет, что поле &lt;code&gt;blog&lt;/code&gt; нового объекта &lt;code&gt;Entry&lt;/code&gt; должно быть установлено в &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2477290a913291cbc38ebf667d64085a6083a034" translate="yes" xml:space="preserve">
          <source>Note that these are &lt;em&gt;partial&lt;/em&gt; matches. &lt;code&gt;'PASS'&lt;/code&gt; will also match PASSWORD, just as &lt;code&gt;'TOKEN'&lt;/code&gt; will also match TOKENIZED and so on.</source>
          <target state="translated">Обратите внимание, что это &lt;em&gt;частичные&lt;/em&gt; совпадения. &lt;code&gt;'PASS'&lt;/code&gt; также будет соответствовать PASSWORD, точно так же, как &lt;code&gt;'TOKEN'&lt;/code&gt; будет также соответствовать TOKENIZED и так далее.</target>
        </trans-unit>
        <trans-unit id="e1fc5fa3e855f806a565c439909e116dd3591f60" translate="yes" xml:space="preserve">
          <source>Note that these paths should use Unix-style forward slashes, even on Windows (e.g. &lt;code&gt;&quot;C:/Users/user/mysite/extra_static_content&quot;&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание, что эти пути должны использовать косую &lt;code&gt;&quot;C:/Users/user/mysite/extra_static_content&quot;&lt;/code&gt; стиле Unix, даже в Windows (например, &amp;laquo;C: / Users / user / mysite / extra_static_content&amp;raquo; ).</target>
        </trans-unit>
        <trans-unit id="795b6608e8468ba6ef747bf20d7df8c092e409b7" translate="yes" xml:space="preserve">
          <source>Note that these paths should use Unix-style forward slashes, even on Windows.</source>
          <target state="translated">Обратите внимание,что эти пути должны использовать передние косые черты в стиле Unix,даже в Windows.</target>
        </trans-unit>
        <trans-unit id="2cf35c103d926ddc769c79ec834723110b7dd384" translate="yes" xml:space="preserve">
          <source>Note that this HTML version of the email contains a full traceback, with names and values of local variables at each level of the stack, plus the values of your Django settings. This information is potentially very sensitive, and you may not want to send it over email. Consider using something such as &lt;a href=&quot;https://pypi.org/project/sentry/&quot;&gt;Sentry&lt;/a&gt; to get the best of both worlds &amp;ndash; the rich information of full tracebacks plus the security of &lt;em&gt;not&lt;/em&gt; sending the information over email. You may also explicitly designate certain sensitive information to be filtered out of error reports &amp;ndash; learn more on &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;Filtering error reports&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что эта HTML-версия электронного письма содержит полную трассировку с именами и значениями локальных переменных на каждом уровне стека, а также значения ваших настроек Django. Эта информация потенциально очень конфиденциальна, и вы можете не захотеть отправлять ее по электронной почте. Подумайте об использовании чего-то вроде &lt;a href=&quot;https://pypi.org/project/sentry/&quot;&gt;Sentry,&lt;/a&gt; чтобы получить лучшее из обоих миров - богатую информацию о полных трассировках плюс безопасность, &lt;em&gt;не&lt;/em&gt; позволяющую отправлять информацию по электронной почте. Вы также можете явно указать определенную конфиденциальную информацию, которая будет отфильтрована из отчетов об ошибках - узнайте больше о &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;фильтрации отчетов об ошибках&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a3d1d6be0677336f3c4ce808049c72f672b6643" translate="yes" xml:space="preserve">
          <source>Note that this checks only for the existence of a given key, not that the value of a key is non-empty.</source>
          <target state="translated">Обратите внимание,что при этом проверяется только существование данного ключа,а не то,что значение ключа не является пустым.</target>
        </trans-unit>
        <trans-unit id="0bbb736bbd29d6ee2584aa607cfd01a5217b40a3" translate="yes" xml:space="preserve">
          <source>Note that this equivalent to:</source>
          <target state="translated">Обратите внимание,что это эквивалентно:</target>
        </trans-unit>
        <trans-unit id="dba99c12af9dce2149cb16de622b8b3d2a6c2aad" translate="yes" xml:space="preserve">
          <source>Note that this is different than &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is purely database-related, whereas &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is validation-related. If a field has &lt;code&gt;blank=True&lt;/code&gt;, form validation will allow entry of an empty value. If a field has &lt;code&gt;blank=False&lt;/code&gt;, the field will be required.</source>
          <target state="translated">Обратите внимание, что это отличается от &lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; чисто связан с базой данных, тогда как &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt; связан с проверкой. Если поле имеет &lt;code&gt;blank=True&lt;/code&gt; , проверка формы позволит ввести пустое значение. Если поле имеет &lt;code&gt;blank=False&lt;/code&gt; , поле будет обязательным.</target>
        </trans-unit>
        <trans-unit id="e1a927a86b31c6fe256c0c201864b03e59d37343" translate="yes" xml:space="preserve">
          <source>Note that this is different than &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is purely database-related, whereas &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is validation-related. If a field has &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;, form validation will allow entry of an empty value. If a field has &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=False&lt;/code&gt;&lt;/a&gt;, the field will be required.</source>
          <target state="translated">Обратите внимание, что это отличается от &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; чисто связан с базой данных, тогда как &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt; связан с проверкой. Если поле имеет &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt; , проверка формы позволит ввести пустое значение. Если поле имеет &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=False&lt;/code&gt; &lt;/a&gt; , поле будет обязательным.</target>
        </trans-unit>
        <trans-unit id="65807d9d49cf72ec77bf7a331d692c91fa7c9ef4" translate="yes" xml:space="preserve">
          <source>Note that this is not quite the same as slicing from the end of a sequence in Python. The above example will return the last item first, then the penultimate item and so on. If we had a Python sequence and looked at &lt;code&gt;seq[-5:]&lt;/code&gt;, we would see the fifth-last item first. Django doesn&amp;rsquo;t support that mode of access (slicing from the end), because it&amp;rsquo;s not possible to do it efficiently in SQL.</source>
          <target state="translated">Обратите внимание, что это не совсем то же самое, что вырезание из конца последовательности в Python. В приведенном выше примере сначала будет возвращен последний элемент, затем предпоследний элемент и т. Д. Если бы у нас была последовательность Python и мы посмотрели на &lt;code&gt;seq[-5:]&lt;/code&gt; , мы бы увидели пятый-последний элемент первым. Django не поддерживает этот режим доступа (нарезка с конца), потому что это невозможно сделать эффективно в SQL.</target>
        </trans-unit>
        <trans-unit id="bb0ad9f46efaf6ea73d6b6569c751fa30e6aab82" translate="yes" xml:space="preserve">
          <source>Note that this isn&amp;rsquo;t necessarily the time zone of the server. For example, one server may serve multiple Django-powered sites, each with a separate time zone setting.</source>
          <target state="translated">Обратите внимание, что это не обязательно часовой пояс сервера. Например, один сервер может обслуживать несколько сайтов на платформе Django, каждый с отдельной настройкой часового пояса.</target>
        </trans-unit>
        <trans-unit id="c953b63059173178458ed761fbedea0ac39027ac" translate="yes" xml:space="preserve">
          <source>Note that this only works given two things:</source>
          <target state="translated">Обратите внимание,что это работает только при наличии двух вещей:</target>
        </trans-unit>
        <trans-unit id="43246198826a48db05dda06a13016417e496af6b" translate="yes" xml:space="preserve">
          <source>Note that this server does &lt;em&gt;not&lt;/em&gt; automatically detect changes to your Python source code (as &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; does). It does, however, detect changes to templates.</source>
          <target state="translated">Обратите внимание , что этот сервер не &lt;em&gt;не&lt;/em&gt; автоматически обнаруживает изменения в исходном коде Python (как &lt;a href=&quot;#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt; делает). Однако он обнаруживает изменения в шаблонах.</target>
        </trans-unit>
        <trans-unit id="77708f0489400a9d946be1d05b99670aa11a0f4b" translate="yes" xml:space="preserve">
          <source>Note that this value is &lt;em&gt;not&lt;/em&gt; HTML-escaped in automatically-generated forms. This lets you include HTML in &lt;a href=&quot;#django.db.models.Field.help_text&quot;&gt;&lt;code&gt;help_text&lt;/code&gt;&lt;/a&gt; if you so desire. For example:</source>
          <target state="translated">Обратите внимание, что это значение &lt;em&gt;не&lt;/em&gt; экранируется HTML в автоматически сгенерированных формах. Это позволяет вам включать HTML в &lt;a href=&quot;#django.db.models.Field.help_text&quot;&gt; &lt;code&gt;help_text&lt;/code&gt; ,&lt;/a&gt; если вы того пожелаете. Например:</target>
        </trans-unit>
        <trans-unit id="bcf38a05a5b6f4694b53daa8eea90c967fc370a2" translate="yes" xml:space="preserve">
          <source>Note that this value is &lt;em&gt;not&lt;/em&gt; HTML-escaped when it&amp;rsquo;s displayed in the admin interface. This lets you include HTML if you so desire. Alternatively you can use plain text and &lt;a href=&quot;../../utils#django.utils.html.escape&quot;&gt;&lt;code&gt;django.utils.html.escape()&lt;/code&gt;&lt;/a&gt; to escape any HTML special characters.</source>
          <target state="translated">Обратите внимание, что это значение &lt;em&gt;не&lt;/em&gt; экранировано HTML, когда отображается в интерфейсе администратора. Это позволяет вам включить HTML, если вы того пожелаете. В качестве альтернативы вы можете использовать обычный текст и &lt;a href=&quot;../../utils#django.utils.html.escape&quot;&gt; &lt;code&gt;django.utils.html.escape()&lt;/code&gt; &lt;/a&gt; для экранирования любых специальных символов HTML.</target>
        </trans-unit>
        <trans-unit id="906411ef03113b0636d2db25f54351b72fe13574" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt;&lt;code&gt;PickleSerializer&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#django.contrib.sessions.serializers.JSONSerializer&quot;&gt;&lt;code&gt;JSONSerializer&lt;/code&gt;&lt;/a&gt; cannot handle arbitrary Python data types. As is often the case, there is a trade-off between convenience and security. If you wish to store more advanced data types including &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;Decimal&lt;/code&gt; in JSON backed sessions, you will need to write a custom serializer (or convert such values to a JSON serializable object before storing them in &lt;code&gt;request.session&lt;/code&gt;). While serializing these values is often straightforward (&lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt;&lt;code&gt;DjangoJSONEncoder&lt;/code&gt;&lt;/a&gt; may be helpful), writing a decoder that can reliably get back the same thing that you put in is more fragile. For example, you run the risk of returning a &lt;code&gt;datetime&lt;/code&gt; that was actually a string that just happened to be in the same format chosen for &lt;code&gt;datetime&lt;/code&gt;s).</source>
          <target state="translated">Обратите внимание, что в отличие от &lt;a href=&quot;#django.contrib.sessions.serializers.PickleSerializer&quot;&gt; &lt;code&gt;PickleSerializer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.contrib.sessions.serializers.JSONSerializer&quot;&gt; &lt;code&gt;JSONSerializer&lt;/code&gt; &lt;/a&gt; не может обрабатывать произвольные типы данных Python. Как это часто бывает, существует компромисс между удобством и безопасностью. Если вы хотите хранить более продвинутые типы данных, включая &lt;code&gt;datetime&lt;/code&gt; и &lt;code&gt;Decimal&lt;/code&gt; , в сеансах с поддержкой JSON, вам необходимо написать собственный сериализатор (или преобразовать такие значения в сериализуемый объект JSON, прежде чем сохранять их в &lt;code&gt;request.session&lt;/code&gt; ). Хотя сериализация этих значений часто проста ( &lt;a href=&quot;../serialization#django.core.serializers.json.DjangoJSONEncoder&quot;&gt; &lt;code&gt;DjangoJSONEncoder&lt;/code&gt; &lt;/a&gt; может быть полезен), написание декодера, который может надежно вернуть то же самое, что вы вставили, является более хрупким. Например, вы рискуете вернуть &lt;code&gt;datetime&lt;/code&gt; на самом деле это была строка в том же формате, который был выбран для &lt;code&gt;datetime&lt;/code&gt; s).</target>
        </trans-unit>
        <trans-unit id="702d81c03f196bf44f8bcd6b11a9b027b74ab4bb" translate="yes" xml:space="preserve">
          <source>Note that unlike a dictionary, &lt;code&gt;del&lt;/code&gt; doesn&amp;rsquo;t raise &lt;code&gt;KeyError&lt;/code&gt; if the header field doesn&amp;rsquo;t exist.</source>
          <target state="translated">Обратите внимание, что в отличие от словаря, &lt;code&gt;del&lt;/code&gt; не &lt;code&gt;KeyError&lt;/code&gt; если поле заголовка не существует.</target>
        </trans-unit>
        <trans-unit id="66f752221b158da1f8b91ce1869204010b1f48ea" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;YearInSchool.SENIOR&lt;/code&gt;, &lt;code&gt;YearInSchool['SENIOR']&lt;/code&gt;, or &lt;code&gt;YearInSchool('SR')&lt;/code&gt; to access or lookup enum members work as expected, as do the &lt;code&gt;.name&lt;/code&gt; and &lt;code&gt;.value&lt;/code&gt; properties on the members.</source>
          <target state="translated">Обратите внимание, что использование &lt;code&gt;YearInSchool.SENIOR&lt;/code&gt; , &lt;code&gt;YearInSchool['SENIOR']&lt;/code&gt; или &lt;code&gt;YearInSchool('SR')&lt;/code&gt; для доступа к элементам перечисления или их поиска работает должным образом , как и свойства &lt;code&gt;.name&lt;/code&gt; и &lt;code&gt;.value&lt;/code&gt; для элементов.</target>
        </trans-unit>
        <trans-unit id="f50008769d1a14e593867a6db9cdf9470058cdd6" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;iterator()&lt;/code&gt; on a &lt;code&gt;QuerySet&lt;/code&gt; which has already been evaluated will force it to evaluate again, repeating the query.</source>
          <target state="translated">Обратите внимание, что использование &lt;code&gt;iterator()&lt;/code&gt; для &lt;code&gt;QuerySet&lt;/code&gt; , который уже был оценен, вынудит его выполнить повторную оценку, повторяя запрос.</target>
        </trans-unit>
        <trans-unit id="f5a5705d4f4e4dba6360106b56cde3d815c0b93d" translate="yes" xml:space="preserve">
          <source>Note that we pass the &lt;code&gt;queryset&lt;/code&gt; argument in both the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; cases in this example.</source>
          <target state="translated">Обратите внимание, что в этом примере мы передаем аргумент &lt;code&gt;queryset&lt;/code&gt; в случаях &lt;code&gt;POST&lt;/code&gt; и &lt;code&gt;GET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe5575ba32184ff281804a3e6ed550d830b3259c" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;unique&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, you don&amp;rsquo;t need to specify &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;db_index&lt;/code&gt;&lt;/a&gt;, because &lt;code&gt;unique&lt;/code&gt; implies the creation of an index.</source>
          <target state="translated">Обратите внимание, что когда для параметра &lt;code&gt;unique&lt;/code&gt; установлено значение &lt;code&gt;True&lt;/code&gt; , вам не нужно указывать &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;db_index&lt;/code&gt; &lt;/a&gt; , поскольку &lt;code&gt;unique&lt;/code&gt; подразумевает создание индекса.</target>
        </trans-unit>
        <trans-unit id="39167b947707fbb5b9cf4b6e5a2e4668c034defb" translate="yes" xml:space="preserve">
          <source>Note that when a model is deleted, related files are not deleted. If you need to cleanup orphaned files, you&amp;rsquo;ll need to handle it yourself (for instance, with a custom management command that can be run manually or scheduled to run periodically via e.g. cron).</source>
          <target state="translated">Обратите внимание, что при удалении модели связанные файлы не удаляются. Если вам нужно очистить потерянные файлы, вам придется обрабатывать их самостоятельно (например, с помощью настраиваемой команды управления, которую можно запускать вручную или запускать по расписанию, например, через cron).</target>
        </trans-unit>
        <trans-unit id="719be46afabc795f700c5cdc4fb51623fb2f80af" translate="yes" xml:space="preserve">
          <source>Note that when deferred fields are accessed, the loading of the deferred field&amp;rsquo;s value happens through this method. Thus it is possible to customize the way deferred loading happens. The example below shows how one can reload all of the instance&amp;rsquo;s fields when a deferred field is reloaded:</source>
          <target state="translated">Обратите внимание, что при доступе к отложенным полям загрузка значения отложенного поля происходит с помощью этого метода. Таким образом, можно настроить способ отложенной загрузки. В приведенном ниже примере показано, как можно перезагрузить все поля экземпляра при перезагрузке отложенного поля:</target>
        </trans-unit>
        <trans-unit id="94c1c16b5b2cd3f86c4031d357763da656691cbe" translate="yes" xml:space="preserve">
          <source>Note that when using this technique the &lt;a href=&quot;../../signals#django.db.models.signals.m2m_changed&quot;&gt;&lt;code&gt;m2m_changed&lt;/code&gt;&lt;/a&gt; signals aren&amp;rsquo;t triggered. This is because as far as the admin is concerned, &lt;code&gt;through&lt;/code&gt; is just a model with two foreign key fields rather than a many-to-many relation.</source>
          <target state="translated">Обратите внимание, что при использовании этой техники сигналы &lt;a href=&quot;../../signals#django.db.models.signals.m2m_changed&quot;&gt; &lt;code&gt;m2m_changed&lt;/code&gt; &lt;/a&gt; не срабатывают. Это происходит потому , что, насколько администратор обеспокоен, &lt;code&gt;through&lt;/code&gt; это просто модель с двумя иностранных ключевых полей , а не многие-ко-многим.</target>
        </trans-unit>
        <trans-unit id="b05fa36010992ac15dfe2760e5308fe656f763bc" translate="yes" xml:space="preserve">
          <source>Note that when you&amp;rsquo;re using &lt;code&gt;takes_context=True&lt;/code&gt;, there&amp;rsquo;s no need to pass arguments to the template tag. It automatically gets access to the context.</source>
          <target state="translated">Обратите внимание, что когда вы используете &lt;code&gt;takes_context=True&lt;/code&gt; , нет необходимости передавать аргументы в тег шаблона. Он автоматически получает доступ к контексту.</target>
        </trans-unit>
        <trans-unit id="79079404d7b87dcc164745f56a3bf81208b2cc17" translate="yes" xml:space="preserve">
          <source>Note that whenever you deal with uploaded files, you should pay close attention to where you&amp;rsquo;re uploading them and what type of files they are, to avoid security holes. &lt;em&gt;Validate all uploaded files&lt;/em&gt; so that you&amp;rsquo;re sure the files are what you think they are. For example, if you blindly let somebody upload files, without validation, to a directory that&amp;rsquo;s within your Web server&amp;rsquo;s document root, then somebody could upload a CGI or PHP script and execute that script by visiting its URL on your site. Don&amp;rsquo;t allow that.</source>
          <target state="translated">Обратите внимание, что всякий раз, когда вы имеете дело с загруженными файлами, вы должны внимательно следить за тем, где вы их загружаете и какими типами файлов они являются, чтобы избежать дыр в безопасности. &lt;em&gt;Проверьте все загруженные файлы,&lt;/em&gt; чтобы убедиться, что файлы соответствуют вашим ожиданиям. Например, если вы слепо разрешаете кому-либо загружать файлы без проверки в каталог, который находится в корне документа вашего веб-сервера, тогда кто-то может загрузить сценарий CGI или PHP и выполнить этот сценарий, посетив его URL на вашем сайте. Не позволяй этого.</target>
        </trans-unit>
        <trans-unit id="39f8400a649c5d93c855cdc636e888afa63eb937" translate="yes" xml:space="preserve">
          <source>Note that where the password is passed to one of these functions, this should always be the clear text password - not a hashed password.</source>
          <target state="translated">Обратите внимание,что если пароль передается одной из этих функций,то это всегда должен быть пароль из чистого текста,а не хэш-пароль.</target>
        </trans-unit>
        <trans-unit id="d093d349e1d459362f8b4a2b1a67b11670c43223" translate="yes" xml:space="preserve">
          <source>Note that while you can &lt;em&gt;define&lt;/em&gt; a custom manager on the abstract model, you can&amp;rsquo;t &lt;em&gt;invoke&lt;/em&gt; any methods using the abstract model. That is:</source>
          <target state="translated">Обратите внимание, что хотя вы можете &lt;em&gt;определить&lt;/em&gt; собственный менеджер в абстрактной модели, вы не можете &lt;em&gt;вызывать&lt;/em&gt; какие-либо методы, использующие абстрактную модель. То есть:</target>
        </trans-unit>
        <trans-unit id="3265dff3dd371813ef80cf218a365cc918b03a70" translate="yes" xml:space="preserve">
          <source>Note that you can backslash-escape a format string if you want to use the &amp;ldquo;raw&amp;rdquo; value. In this example, both &amp;ldquo;h&amp;rdquo; and &amp;ldquo;m&amp;rdquo; are backslash-escaped, because otherwise each is a format string that displays the hour and the month, respectively:</source>
          <target state="translated">Обратите внимание, что вы можете использовать обратную косую черту в строке формата, если хотите использовать &amp;laquo;сырое&amp;raquo; значение. В этом примере и &amp;laquo;h&amp;raquo;, и &amp;laquo;m&amp;raquo; экранированы обратной косой чертой, потому что в противном случае каждая из них представляет собой строку формата, которая отображает час и месяц соответственно:</target>
        </trans-unit>
        <trans-unit id="7476fdc821a56bd47f0eda1f0b41d488383e4103" translate="yes" xml:space="preserve">
          <source>Note that you can backslash-escape a format string if you want to use the &amp;ldquo;raw&amp;rdquo; value. In this example, both &amp;ldquo;o&amp;rdquo; and &amp;ldquo;f&amp;rdquo; are backslash-escaped, because otherwise each is a format string that displays the year and the time, respectively:</source>
          <target state="translated">Обратите внимание, что вы можете использовать обратную косую черту в строке формата, если хотите использовать &amp;laquo;сырое&amp;raquo; значение. В этом примере и &amp;laquo;o&amp;raquo;, и &amp;laquo;f&amp;raquo; экранированы обратной косой чертой, потому что в противном случае каждая является строкой формата, которая отображает год и время соответственно:</target>
        </trans-unit>
        <trans-unit id="4f73d7dc009cf6ecb0d2dc25b668df5cadd84847" translate="yes" xml:space="preserve">
          <source>Note that you can give &lt;code&gt;Paginator&lt;/code&gt; a list/tuple, a Django &lt;code&gt;QuerySet&lt;/code&gt;, or any other object with a &lt;code&gt;count()&lt;/code&gt; or &lt;code&gt;__len__()&lt;/code&gt; method. When determining the number of objects contained in the passed object, &lt;code&gt;Paginator&lt;/code&gt; will first try calling &lt;code&gt;count()&lt;/code&gt;, then fallback to using &lt;code&gt;len()&lt;/code&gt; if the passed object has no &lt;code&gt;count()&lt;/code&gt; method. This allows objects such as Django&amp;rsquo;s &lt;code&gt;QuerySet&lt;/code&gt; to use a more efficient &lt;code&gt;count()&lt;/code&gt; method when available.</source>
          <target state="translated">Обратите внимание, что вы можете предоставить &lt;code&gt;Paginator&lt;/code&gt; список / кортеж, Django &lt;code&gt;QuerySet&lt;/code&gt; или любой другой объект с помощью метода &lt;code&gt;count()&lt;/code&gt; или &lt;code&gt;__len__()&lt;/code&gt; . При определении количества объектов, содержащихся в переданном объекте, &lt;code&gt;Paginator&lt;/code&gt; сначала попытается вызвать &lt;code&gt;count()&lt;/code&gt; , а затем отступить к использованию &lt;code&gt;len()&lt;/code&gt; если переданный объект не имеет метода &lt;code&gt;count()&lt;/code&gt; . Это позволяет таким объектам, как &lt;code&gt;QuerySet&lt;/code&gt; Django, использовать более эффективный метод &lt;code&gt;count()&lt;/code&gt; когда он доступен.</target>
        </trans-unit>
        <trans-unit id="9e42e9704f036f9a6dfea5bd7eeae341bb89a4c9" translate="yes" xml:space="preserve">
          <source>Note that you can redirect standard output and error streams as all commands support the &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; options. For example, you could write:</source>
          <target state="translated">Обратите внимание, что вы можете перенаправить стандартный поток вывода и ошибок, так как все команды поддерживают параметры &lt;code&gt;stdout&lt;/code&gt; и &lt;code&gt;stderr&lt;/code&gt; . Например, вы можете написать:</target>
        </trans-unit>
        <trans-unit id="28f96228f714507e7175e473320352a2987351be" translate="yes" xml:space="preserve">
          <source>Note that you can use the decorators in conjunction with the middleware. Use of a decorator overrides the middleware.</source>
          <target state="translated">Обратите внимание,что декораторы можно использовать вместе с промежуточным программным обеспечением.Использование декоратора отменяет промежуточное программное обеспечение.</target>
        </trans-unit>
        <trans-unit id="b96ab2ffca51fc0d415d2ea2c91ff51267bb654f" translate="yes" xml:space="preserve">
          <source>Note that you don&amp;rsquo;t have to use Django&amp;rsquo;s template system if you prefer another system. While Django&amp;rsquo;s template system is particularly well-integrated with Django&amp;rsquo;s model layer, nothing forces you to use it. For that matter, you don&amp;rsquo;t have to use Django&amp;rsquo;s database API, either. You can use another database abstraction layer, you can read XML files, you can read files off disk, or anything you want. Each piece of Django &amp;ndash; models, views, templates &amp;ndash; is decoupled from the next.</source>
          <target state="translated">Обратите внимание, что вам не нужно использовать систему шаблонов Django, если вы предпочитаете другую систему. Хотя система шаблонов Django особенно хорошо интегрирована с модельным слоем Django, ничто не заставляет вас использовать ее. В этом отношении вам также не нужно использовать API базы данных Django. Вы можете использовать другой уровень абстракции базы данных, вы можете читать файлы XML, вы можете читать файлы с диска или что угодно. Каждая часть Django - модели, виды, шаблоны - отделена от следующей.</target>
        </trans-unit>
        <trans-unit id="f31c5c5b9d42b1077c8970e03ed8c44f9ddad790" translate="yes" xml:space="preserve">
          <source>Note that you may not want autodiscovery of &lt;code&gt;admin&lt;/code&gt; modules when using your own &lt;code&gt;AdminSite&lt;/code&gt; instance since you will likely be importing all the per-app &lt;code&gt;admin&lt;/code&gt; modules in your &lt;code&gt;myproject.admin&lt;/code&gt; module. This means you need to put &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; instead of &lt;code&gt;'django.contrib.admin'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Обратите внимание, что вам может не потребоваться автоматическое обнаружение модулей &lt;code&gt;admin&lt;/code&gt; при использовании вашего собственного экземпляра &lt;code&gt;AdminSite&lt;/code&gt; , поскольку вы, скорее всего, будете импортировать все модули &lt;code&gt;admin&lt;/code&gt; каждого приложения в свой модуль &lt;code&gt;myproject.admin&lt;/code&gt; . Это означает, что вам нужно поместить &lt;code&gt;'django.contrib.admin.apps.SimpleAdminConfig'&lt;/code&gt; вместо &lt;code&gt;'django.contrib.admin'&lt;/code&gt; в настройке &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21df1330fbaf74e0680f4452a5609d54fd10fa1a" translate="yes" xml:space="preserve">
          <source>Note that you must save an object before it can be assigned to a foreign key relationship. For example, creating an &lt;code&gt;Article&lt;/code&gt; with unsaved &lt;code&gt;Reporter&lt;/code&gt; raises &lt;code&gt;ValueError&lt;/code&gt;:</source>
          <target state="translated">Обратите внимание, что вы должны сохранить объект, прежде чем он может быть назначен для отношения внешнего ключа. Например, создание &lt;code&gt;Article&lt;/code&gt; с несохраненным &lt;code&gt;Reporter&lt;/code&gt; вызывает &lt;code&gt;ValueError&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="376f6d08577acaa494289e31892d8f4bc49a71b1" translate="yes" xml:space="preserve">
          <source>Note that you must save an object before it can be assigned to a one-to-one relationship. For example, creating a &lt;code&gt;Restaurant&lt;/code&gt; with unsaved &lt;code&gt;Place&lt;/code&gt; raises &lt;code&gt;ValueError&lt;/code&gt;:</source>
          <target state="translated">Обратите внимание, что вы должны сохранить объект, прежде чем он может быть назначен для отношения один-к-одному. Например, создание &lt;code&gt;Restaurant&lt;/code&gt; с несохраненным &lt;code&gt;Place&lt;/code&gt; вызывает &lt;code&gt;ValueError&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3aa4492251f1f89b7d1b67c82923a765943b8b96" translate="yes" xml:space="preserve">
          <source>Note that you set &lt;code&gt;feed_type&lt;/code&gt; to a class object, not an instance.</source>
          <target state="translated">Обратите внимание, что вы устанавливаете &lt;code&gt;feed_type&lt;/code&gt; для объекта класса, а не для экземпляра.</target>
        </trans-unit>
        <trans-unit id="41780517e58575ae1fd4b7cf13682bde6c859248" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll have to provide the surrounding &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; elements yourself.</source>
          <target state="translated">Обратите внимание, что вам придется предоставить окружающие элементы &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; самостоятельно.</target>
        </trans-unit>
        <trans-unit id="739a26284bb028620f19294b60895ab661309c8a" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll need to call &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession.get_decoded&quot;&gt;&lt;code&gt;get_decoded()&lt;/code&gt;&lt;/a&gt; to get the session dictionary. This is necessary because the dictionary is stored in an encoded format:</source>
          <target state="translated">Обратите внимание, что вам нужно вызвать &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession.get_decoded&quot;&gt; &lt;code&gt;get_decoded()&lt;/code&gt; &lt;/a&gt; чтобы получить словарь сеанса. Это необходимо, поскольку словарь хранится в закодированном формате:</target>
        </trans-unit>
        <trans-unit id="5764965c279a49130b8ab3f921987b56c15bcdef" translate="yes" xml:space="preserve">
          <source>Note that, with static (middleware-less) translation, the language is in &lt;code&gt;settings.LANGUAGE_CODE&lt;/code&gt;, while with dynamic (middleware) translation, it&amp;rsquo;s in &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что при статическом (промежуточном) переводе язык находится в &lt;code&gt;settings.LANGUAGE_CODE&lt;/code&gt; , а при динамическом (промежуточном) переводе он находится в &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">Обратите внимание:</target>
        </trans-unit>
        <trans-unit id="2c5683f35f8382bf853d6c54b47a1958d38402e3" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;list()&lt;/code&gt; call around the Blog &lt;code&gt;QuerySet&lt;/code&gt; to force execution of the first query. Without it, a nested query would be executed, because &lt;a href=&quot;../../topics/db/queries#querysets-are-lazy&quot;&gt;QuerySets are lazy&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание на вызов &lt;code&gt;list()&lt;/code&gt; вокруг Blog &lt;code&gt;QuerySet&lt;/code&gt; для принудительного выполнения первого запроса. Без него будет выполнен вложенный запрос, потому что &lt;a href=&quot;../../topics/db/queries#querysets-are-lazy&quot;&gt;QuerySets ленивы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50042f95afef19ddcee485ac7f7b1bcf7743b564" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;pk&lt;/code&gt; named group, which &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt;&lt;code&gt;get_object()&lt;/code&gt;&lt;/a&gt; uses to look up the &lt;code&gt;Author&lt;/code&gt; instance. You could also use a slug, or any of the other features of &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание на именованную группу &lt;code&gt;pk&lt;/code&gt; , которую &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt; &lt;code&gt;get_object()&lt;/code&gt; &lt;/a&gt; использует для поиска экземпляра &lt;code&gt;Author&lt;/code&gt; . Вы также можете использовать слаг или любые другие функции &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1548150f65982792369c241ae984f2b20c5090cc" translate="yes" xml:space="preserve">
          <source>Note the addition of &lt;code&gt;import datetime&lt;/code&gt; and &lt;code&gt;from django.utils import
timezone&lt;/code&gt;, to reference Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module and Django&amp;rsquo;s time-zone-related utilities in &lt;a href=&quot;../ref/utils#module-django.utils.timezone&quot;&gt;&lt;code&gt;django.utils.timezone&lt;/code&gt;&lt;/a&gt;, respectively. If you aren&amp;rsquo;t familiar with time zone handling in Python, you can learn more in the &lt;a href=&quot;../topics/i18n/timezones&quot;&gt;time zone support docs&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание на добавление &lt;code&gt;import datetime&lt;/code&gt; и &lt;code&gt;from django.utils import timezone&lt;/code&gt; для ссылки на стандартный модуль &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; Python и утилиты &lt;a href=&quot;../ref/utils#module-django.utils.timezone&quot;&gt; &lt;code&gt;django.utils.timezone&lt;/code&gt; &lt;/a&gt; , связанные с часовым поясом , в django.utils.timezone соответственно. Если вы не знакомы с обработкой часовых поясов в Python, вы можете узнать больше в &lt;a href=&quot;../topics/i18n/timezones&quot;&gt;документации по поддержке часовых поясов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36e778e75c22dd51e685a8060e6bf755ecbdde51" translate="yes" xml:space="preserve">
          <source>Note the first query will match &lt;code&gt;'Beatles Blog'&lt;/code&gt;, &lt;code&gt;'beatles blog'&lt;/code&gt;, &lt;code&gt;'BeAtLes BLoG'&lt;/code&gt;, etc.</source>
          <target state="translated">Обратите внимание , что первый запрос будет совпадать с &lt;code&gt;'Beatles Blog'&lt;/code&gt; , &lt;code&gt;'beatles blog'&lt;/code&gt; , &lt;code&gt;'BeAtLes BLoG'&lt;/code&gt; и т.д.</target>
        </trans-unit>
        <trans-unit id="20d78a8e421517dfc8501178399cb2a435e63306" translate="yes" xml:space="preserve">
          <source>Note the following:</source>
          <target state="translated">Обратите внимание на следующее:</target>
        </trans-unit>
        <trans-unit id="4270a55c8d2d5be21936635e96658dc1d9f116f5" translate="yes" xml:space="preserve">
          <source>Note the second example is more restrictive.</source>
          <target state="translated">Обратите внимание,что второй пример более ограничительный.</target>
        </trans-unit>
        <trans-unit id="f90cc3f74d38c8aecec6b1b3c2cf127ed6722f4d" translate="yes" xml:space="preserve">
          <source>Note there is a race condition if you allow objects to be created while this migration is running. Objects created after the &lt;code&gt;AddField&lt;/code&gt; and before &lt;code&gt;RunPython&lt;/code&gt; will have their original &lt;code&gt;uuid&lt;/code&gt;&amp;rsquo;s overwritten.</source>
          <target state="translated">Обратите внимание, что существует условие гонки, если вы разрешаете создавать объекты во время выполнения этой миграции. Объекты, созданные после &lt;code&gt;AddField&lt;/code&gt; и до &lt;code&gt;RunPython&lt;/code&gt; , будут перезаписаны в своем исходном &lt;code&gt;uuid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e57ad67f321891403673ac74379faf842d068ac0" translate="yes" xml:space="preserve">
          <source>Note this doesn&amp;rsquo;t delete the related objects &amp;ndash; it just disassociates them.</source>
          <target state="translated">Обратите внимание, что это не удаляет связанные объекты - оно просто разъединяет их.</target>
        </trans-unit>
        <trans-unit id="625d205aa6a02c8990ca032fce68080c4bbaac13" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a &lt;code&gt;pub_date&lt;/code&gt; that falls on a Monday (day 1 of the week), regardless of the month or year in which it occurs. Week days are indexed with day 1 being Monday and day 7 being Sunday.</source>
          <target state="translated">Обратите внимание, что это будет соответствовать любой записи с &lt;code&gt;pub_date&lt;/code&gt; , приходящейся на понедельник (день 1 недели), независимо от месяца или года, в котором это происходит. Дни недели индексируются: день 1 - понедельник, а день 7 - воскресенье.</target>
        </trans-unit>
        <trans-unit id="1e1c648f6363a79666bda4022f326dccc253cf89" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a &lt;code&gt;pub_date&lt;/code&gt; that falls on a Monday (day 2 of the week), regardless of the month or year in which it occurs. Week days are indexed with day 1 being Sunday and day 7 being Saturday.</source>
          <target state="translated">Обратите внимание, что это будет сопоставлять любую запись с &lt;code&gt;pub_date&lt;/code&gt; , которая выпадает на понедельник (день 2 недели), независимо от месяца или года, в котором она происходит. Дни недели индексируются, причем день 1 - воскресенье, а день 7 - суббота.</target>
        </trans-unit>
        <trans-unit id="e6eb4a1725fee4458ebd4aae91065f1733dbed3c" translate="yes" xml:space="preserve">
          <source>Note this will match any record with a pub_date on the third day of the month, such as January 3, July 3, etc.</source>
          <target state="translated">Обратите внимание,что это будет соответствовать любому рекорду с датой pub_date в третий день месяца,например,3 января,3 июля и т.п.</target>
        </trans-unit>
        <trans-unit id="91a2cf41eebcf0cbbe41c2fed03384b950262468" translate="yes" xml:space="preserve">
          <source>Note this will match the headline &lt;code&gt;'Lennon honored today'&lt;/code&gt; but not &lt;code&gt;'lennon
honored today'&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что это будет соответствовать заголовку &lt;code&gt;'Lennon honored today'&lt;/code&gt; но не &lt;code&gt;'lennon honored today'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd54aed7458a908757d562528231778dc691427f" translate="yes" xml:space="preserve">
          <source>Note this will match the headline &lt;code&gt;'Today Lennon honored'&lt;/code&gt; but not &lt;code&gt;'today lennon honored'&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что это будет соответствовать заголовку &lt;code&gt;'Today Lennon honored'&lt;/code&gt; но не &lt;code&gt;'today lennon honored'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97147c98752b50c4fd43dfdbddc52f844a56c7e1" translate="yes" xml:space="preserve">
          <source>Note, however, that like &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;Model.full_clean()&lt;/code&gt;&lt;/a&gt;, a model&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is not invoked when you call your model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Обратите внимание, что, как и &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt; &lt;code&gt;Model.full_clean()&lt;/code&gt; &lt;/a&gt; , метод &lt;code&gt;clean()&lt;/code&gt; модели не вызывается при вызове метода &lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; вашей модели .</target>
        </trans-unit>
        <trans-unit id="e3ef265b66c27a036bf430bdf6cdf4e5f69c53b0" translate="yes" xml:space="preserve">
          <source>Note, however, that the first of these will raise &lt;code&gt;IndexError&lt;/code&gt; while the second will raise &lt;code&gt;DoesNotExist&lt;/code&gt; if no objects match the given criteria. See &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Обратите внимание, однако, что первый из них вызовет &lt;code&gt;IndexError&lt;/code&gt; , а второй вызовет &lt;code&gt;DoesNotExist&lt;/code&gt; , если ни один объект не соответствует заданным критериям. Смотрите &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="4bf23a731a060601e951cfde8e837da30936df56" translate="yes" xml:space="preserve">
          <source>Note, however, that these bulk update methods cannot call the &lt;code&gt;save()&lt;/code&gt; or &lt;code&gt;delete()&lt;/code&gt; methods of individual instances, which means that any custom behavior you have added for these methods will not be executed, including anything driven from the normal database object &lt;a href=&quot;../../ref/signals&quot;&gt;signals&lt;/a&gt;.</source>
          <target state="translated">Однако обратите внимание, что эти методы массового обновления не могут вызывать методы &lt;code&gt;save()&lt;/code&gt; или &lt;code&gt;delete()&lt;/code&gt; отдельных экземпляров, что означает, что любое пользовательское поведение, добавленное для этих методов, не будет выполнено, включая все, что связано с обычными &lt;a href=&quot;../../ref/signals&quot;&gt;сигналами&lt;/a&gt; объекта базы данных. ,</target>
        </trans-unit>
        <trans-unit id="c9a64d96116de9297dfea7c94ac09033ffbd0323" translate="yes" xml:space="preserve">
          <source>Note, the beginning of the pattern (&lt;code&gt;r'^static/'&lt;/code&gt;) should be your &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Обратите внимание, что начало шаблона ( &lt;code&gt;r'^static/'&lt;/code&gt; ) должно быть вашим параметром &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53e1a6480426cb88534e0d776b00fdf6ab609686" translate="yes" xml:space="preserve">
          <source>Note, the snippet assumes your &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; has a value of &lt;code&gt;'/media/'&lt;/code&gt;. This will call the &lt;a href=&quot;#django.views.static.serve&quot;&gt;&lt;code&gt;serve()&lt;/code&gt;&lt;/a&gt; view, passing in the path from the URLconf and the (required) &lt;code&gt;document_root&lt;/code&gt; parameter.</source>
          <target state="translated">Обратите внимание, что фрагмент предполагает, что ваш &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;'/media/'&lt;/code&gt; . Это вызовет представление &lt;a href=&quot;#django.views.static.serve&quot;&gt; &lt;code&gt;serve()&lt;/code&gt; &lt;/a&gt; , передавая путь из URLconf и (обязательный) параметр &lt;code&gt;document_root&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="9ef9ec7a9d7bf170473fb43f8eca38078f7b19b8" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;order_by('?')&lt;/code&gt; queries may be expensive and slow, depending on the database backend you&amp;rsquo;re using.</source>
          <target state="translated">Примечание: запросы &lt;code&gt;order_by('?')&lt;/code&gt; Могут быть дорогими и медленными, в зависимости от используемой вами базы данных.</target>
        </trans-unit>
        <trans-unit id="befec88db067d5cfe6f992fabb031cd376020ac6" translate="yes" xml:space="preserve">
          <source>Note: As with &lt;code&gt;get()&lt;/code&gt;, a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exception will be raised if more than one object is found.</source>
          <target state="translated">Примечание. Как и в случае с &lt;code&gt;get()&lt;/code&gt; , исключение &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt; будет вызвано, если будет найдено более одного объекта.</target>
        </trans-unit>
        <trans-unit id="910a845f2c2f78c037f270de3da706b062724005" translate="yes" xml:space="preserve">
          <source>Note: Don&amp;rsquo;t use this if all you want to do is determine if at least one result exists. It&amp;rsquo;s more efficient to use &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Примечание: не используйте это, если все, что вы хотите сделать, это определить, существует ли хотя бы один результат. Это более эффективно использовать, &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="385f626475e0107c6a0177ca3b63ffea00ce9f62" translate="yes" xml:space="preserve">
          <source>Note: If you only need to determine the number of records in the set (and don&amp;rsquo;t need the actual objects), it&amp;rsquo;s much more efficient to handle a count at the database level using SQL&amp;rsquo;s &lt;code&gt;SELECT COUNT(*)&lt;/code&gt;. Django provides a &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; method for precisely this reason.</source>
          <target state="translated">Примечание. Если вам нужно только определить количество записей в наборе (и вам не нужны реальные объекты), гораздо эффективнее обрабатывать счет на уровне базы данных с помощью SQL &lt;code&gt;SELECT COUNT(*)&lt;/code&gt; . Именно по этой причине Django предоставляет метод &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e985be7c9234ac7fdd7d0605d286a7defa1cd034" translate="yes" xml:space="preserve">
          <source>Note: If you only want to determine if at least one result exists (and don&amp;rsquo;t need the actual objects), it&amp;rsquo;s more efficient to use &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Примечание. Если вы хотите только определить, существует ли хотя бы один результат (и вам не нужны фактические объекты), более эффективно использовать &lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d230e76ec82af164b0c7d3b96c1e1a1415482dfc" translate="yes" xml:space="preserve">
          <source>Note: Without a really compelling reason, such as a host that doesn&amp;rsquo;t support them, you should stick to the cache backends included with Django. They&amp;rsquo;ve been well-tested and are well-documented.</source>
          <target state="translated">Примечание. Без веских причин, таких как хост, который их не поддерживает, вы должны придерживаться бэкэндов кеша, включенных в Django. Они были хорошо проверены и хорошо документированы.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="a8813e550b224d06483ad44dd0caab3e91810f54" translate="yes" xml:space="preserve">
          <source>Notes on field ordering</source>
          <target state="translated">Примечания к заказу на месте</target>
        </trans-unit>
        <trans-unit id="03285d22efba2cd6d7db91dcbcfa20e93a3abcbd" translate="yes" xml:space="preserve">
          <source>Notes on specific fields</source>
          <target state="translated">Примечания по конкретным полям</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="000e64e4b4ee3745e9af8db1a328fea32acd56cf" translate="yes" xml:space="preserve">
          <source>Notice also that as both sides are used multiple times in the query the params need to contain &lt;code&gt;lhs_params&lt;/code&gt; and &lt;code&gt;rhs_params&lt;/code&gt; multiple times.</source>
          <target state="translated">Обратите также внимание, что поскольку обе стороны используются в запросе несколько раз, параметры должны содержать &lt;code&gt;lhs_params&lt;/code&gt; и &lt;code&gt;rhs_params&lt;/code&gt; несколько раз.</target>
        </trans-unit>
        <trans-unit id="2384e08c0f35bbe96198a9eea0586bf6a621eb2b" translate="yes" xml:space="preserve">
          <source>Notice first that we&amp;rsquo;ve moved &lt;code&gt;make_published&lt;/code&gt; into a method and renamed the &lt;code&gt;modeladmin&lt;/code&gt; parameter to &lt;code&gt;self&lt;/code&gt;, and second that we&amp;rsquo;ve now put the string &lt;code&gt;'make_published'&lt;/code&gt; in &lt;code&gt;actions&lt;/code&gt; instead of a direct function reference. This tells the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; to look up the action as a method.</source>
          <target state="translated">&lt;code&gt;make_published&lt;/code&gt; первых, обратите внимание, что мы переместили make_published в метод и переименовали параметр &lt;code&gt;modeladmin&lt;/code&gt; в &lt;code&gt;self&lt;/code&gt; , а во-вторых, теперь мы поместили строку &lt;code&gt;'make_published'&lt;/code&gt; в &lt;code&gt;actions&lt;/code&gt; вместо прямой ссылки на функцию. Это говорит &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; ,что&lt;/a&gt; нужно искать действие как метод.</target>
        </trans-unit>
        <trans-unit id="8b0cc5089c4b2a1219a366349dd5e31eab5291cc" translate="yes" xml:space="preserve">
          <source>Notice how the first block ends with &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; and the new one starts with &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt;. Without the &lt;code&gt;{% resetcycle %}&lt;/code&gt; tag, the second block would start with &lt;code&gt;class=&quot;even&quot;&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, как первый блок заканчивается с &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; , а новый начинается с &lt;code&gt;class=&quot;odd&quot;&lt;/code&gt; . Без тега &lt;code&gt;{% resetcycle %}&lt;/code&gt; второй блок будет начинаться с &lt;code&gt;class=&quot;even&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f70af69036a60f939ee11c7ec6dd9119fc16aaef" translate="yes" xml:space="preserve">
          <source>Notice how we need to explicitly render &lt;code&gt;{{ form.id }}&lt;/code&gt;. This ensures that the model formset, in the &lt;code&gt;POST&lt;/code&gt; case, will work correctly. (This example assumes a primary key named &lt;code&gt;id&lt;/code&gt;. If you&amp;rsquo;ve explicitly defined your own primary key that isn&amp;rsquo;t called &lt;code&gt;id&lt;/code&gt;, make sure it gets rendered.)</source>
          <target state="translated">Обратите внимание, как нам нужно явно визуализировать &lt;code&gt;{{ form.id }}&lt;/code&gt; . Это гарантирует, что модельный набор форм в случае &lt;code&gt;POST&lt;/code&gt; будет работать правильно. (В этом примере предполагается использование первичного ключа с именем &lt;code&gt;id&lt;/code&gt; . Если вы явно определили свой собственный первичный ключ, который не называется &lt;code&gt;id&lt;/code&gt; , убедитесь, что он отображается.)</target>
        </trans-unit>
        <trans-unit id="0229f8c21d6b19db58706ac73ebaa3b227103d86" translate="yes" xml:space="preserve">
          <source>Notice how we pass &lt;code&gt;instance&lt;/code&gt; in both the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; cases.</source>
          <target state="translated">Обратите внимание, как мы передаем &lt;code&gt;instance&lt;/code&gt; в случаях &lt;code&gt;POST&lt;/code&gt; и &lt;code&gt;GET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa5250b6be8df62e51f37c769420fd8720950beb" translate="yes" xml:space="preserve">
          <source>Notice how we set &lt;code&gt;self.object&lt;/code&gt; within &lt;code&gt;get()&lt;/code&gt; so we can use it again later in &lt;code&gt;get_context_data()&lt;/code&gt; and &lt;code&gt;get_queryset()&lt;/code&gt;. If you don&amp;rsquo;t set &lt;code&gt;template_name&lt;/code&gt;, the template will default to the normal &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; choice, which in this case would be &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; because it&amp;rsquo;s a list of books; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; knows nothing about &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so it doesn&amp;rsquo;t have any clue this view is anything to do with a &lt;code&gt;Publisher&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, как мы устанавливаем &lt;code&gt;self.object&lt;/code&gt; в &lt;code&gt;get()&lt;/code&gt; чтобы мы могли использовать его позже в &lt;code&gt;get_context_data()&lt;/code&gt; и &lt;code&gt;get_queryset()&lt;/code&gt; . Если вы не установите &lt;code&gt;template_name&lt;/code&gt; , для шаблона по умолчанию будет выбран обычный &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; , который в этом случае будет &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; потому что это список книг; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; ничего не знает о &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt; , поэтому он не имеет ни малейшего представления, что это представление как-то связано с &lt;code&gt;Publisher&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f13f463d1411391b196b9c3d220258b3801b8b2" translate="yes" xml:space="preserve">
          <source>Notice how we set &lt;code&gt;self.object&lt;/code&gt; within &lt;code&gt;get()&lt;/code&gt; so we can use it again later in &lt;code&gt;get_context_data()&lt;/code&gt; and &lt;code&gt;get_queryset()&lt;/code&gt;. If you don&amp;rsquo;t set &lt;code&gt;template_name&lt;/code&gt;, the template will default to the normal &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; choice, which in this case would be &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; because it&amp;rsquo;s a list of books; &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; knows nothing about &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so it doesn&amp;rsquo;t have any clue this view is anything to do with a &lt;code&gt;Publisher&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, как мы устанавливаем &lt;code&gt;self.object&lt;/code&gt; в &lt;code&gt;get()&lt;/code&gt; чтобы мы могли использовать его позже в &lt;code&gt;get_context_data()&lt;/code&gt; и &lt;code&gt;get_queryset()&lt;/code&gt; . Если вы не установите &lt;code&gt;template_name&lt;/code&gt; , для шаблона по умолчанию будет выбран обычный &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; , которым в данном случае будет &lt;code&gt;&quot;books/book_list.html&quot;&lt;/code&gt; , потому что это список книг; &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; ничего не знает о &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt; , поэтому он не имеет никакого отношения к тому , что это представление связано с &lt;code&gt;Publisher&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f88f6f6b02e714ff2c4fe469bdc1f6fb93d22663" translate="yes" xml:space="preserve">
          <source>Notice how we used &lt;code&gt;self&lt;/code&gt; to scope the &lt;code&gt;CycleNode&lt;/code&gt; specific information within the &lt;code&gt;render_context&lt;/code&gt;. There may be multiple &lt;code&gt;CycleNodes&lt;/code&gt; in a given template, so we need to be careful not to clobber another node&amp;rsquo;s state information. The easiest way to do this is to always use &lt;code&gt;self&lt;/code&gt; as the key into &lt;code&gt;render_context&lt;/code&gt;. If you&amp;rsquo;re keeping track of several state variables, make &lt;code&gt;render_context[self]&lt;/code&gt; a dictionary.</source>
          <target state="translated">Обратите внимание, как мы использовали &lt;code&gt;self&lt;/code&gt; для &lt;code&gt;CycleNode&lt;/code&gt; конкретной информации &lt;code&gt;render_context&lt;/code&gt; в render_context . В данном шаблоне может быть несколько &lt;code&gt;CycleNodes&lt;/code&gt; , поэтому мы должны быть осторожны, чтобы не забить информацию о состоянии другого узла. Самый простой способ сделать это - всегда использовать &lt;code&gt;self&lt;/code&gt; в качестве ключа для &lt;code&gt;render_context&lt;/code&gt; . Если вы отслеживаете несколько переменных состояния, сделайте &lt;code&gt;render_context[self]&lt;/code&gt; словарем.</target>
        </trans-unit>
        <trans-unit id="cb164517055d21810f3fcb5b55cae736b85fa840" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;(0, 0)&lt;/code&gt; is the first and last coordinate &amp;ndash; if they were not equal, an error would be raised.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;(0, 0)&lt;/code&gt; - это первая и последняя координаты - если бы они не были равны, возникла бы ошибка.</target>
        </trans-unit>
        <trans-unit id="ac06989a6888c756b6647843b41cc87a3733f5ba" translate="yes" xml:space="preserve">
          <source>Notice that along with a filtered &lt;code&gt;queryset&lt;/code&gt;, we&amp;rsquo;re also using a custom template name. If we didn&amp;rsquo;t, the generic view would use the same template as the &amp;ldquo;vanilla&amp;rdquo; object list, which might not be what we want.</source>
          <target state="translated">Обратите внимание, что наряду с отфильтрованным &lt;code&gt;queryset&lt;/code&gt; мы также используем настраиваемое имя шаблона. Если бы мы этого не сделали, общий вид использовал бы тот же шаблон, что и список объектов &amp;laquo;vanilla&amp;raquo;, что может быть не тем, что мы хотим.</target>
        </trans-unit>
        <trans-unit id="423d90eb39ba0efaae8b6fe6038d1df1eed0d32b" translate="yes" xml:space="preserve">
          <source>Notice that the custom patterns are included &lt;em&gt;before&lt;/em&gt; the regular admin URLs: the admin URL patterns are very permissive and will match nearly anything, so you&amp;rsquo;ll usually want to prepend your custom URLs to the built-in ones.</source>
          <target state="translated">Обратите внимание, что пользовательские шаблоны включены &lt;em&gt;перед&lt;/em&gt; обычными URL-адресами администратора: шаблоны URL-адресов администратора являются весьма разрешающими и будут соответствовать практически всем, поэтому обычно вы хотите добавить свои пользовательские URL-адреса к встроенным.</target>
        </trans-unit>
        <trans-unit id="a287bfd08800792a69e7a9c13eeb25e0be2944c0" translate="yes" xml:space="preserve">
          <source>Notice that the function takes a &lt;code&gt;sender&lt;/code&gt; argument, along with wildcard keyword arguments (&lt;code&gt;**kwargs&lt;/code&gt;); all signal handlers must take these arguments.</source>
          <target state="translated">Обратите внимание, что функция принимает аргумент &lt;code&gt;sender&lt;/code&gt; вместе с аргументами подстановочных ключевых слов ( &lt;code&gt;**kwargs&lt;/code&gt; ); все обработчики сигналов должны принимать эти аргументы.</target>
        </trans-unit>
        <trans-unit id="c6d96c5e92b1bc39c53248522c2579dd44ac99ae" translate="yes" xml:space="preserve">
          <source>Notice that there isn&amp;rsquo;t a lot in these examples that&amp;rsquo;s PDF-specific &amp;ndash; just the bits using &lt;code&gt;reportlab&lt;/code&gt;. You can use a similar technique to generate any arbitrary format that you can find a Python library for. Also see &lt;a href=&quot;outputting-csv&quot;&gt;Outputting CSV with Django&lt;/a&gt; for another example and some techniques you can use when generated text-based formats.</source>
          <target state="translated">Обратите внимание, что в этих примерах не так уж много специфичных для PDF &lt;code&gt;reportlab&lt;/code&gt; - только биты, использующие reportlab . Вы можете использовать подобную технику для генерации любого произвольного формата, для которого вы можете найти библиотеку Python. Также смотрите &lt;a href=&quot;outputting-csv&quot;&gt;Вывод CSV с помощью Django&lt;/a&gt; для другого примера и некоторых методов, которые вы можете использовать при создании текстовых форматов.</target>
        </trans-unit>
        <trans-unit id="62566baa057cfcfdb2bc356cfe8e2afa1aa5d755" translate="yes" xml:space="preserve">
          <source>Notice that there isn&amp;rsquo;t very much specific to CSV here &amp;ndash; just the specific output format. You can use either of these techniques to output any text-based format you can dream of. You can also use a similar technique to generate arbitrary binary data; see &lt;a href=&quot;outputting-pdf&quot;&gt;Outputting PDFs with Django&lt;/a&gt; for an example.</source>
          <target state="translated">Обратите внимание, что здесь нет особого отношения к CSV - только конкретный формат вывода. Вы можете использовать любой из этих методов для вывода любого текстового формата, о котором вы только можете мечтать. Вы также можете использовать похожую технику для генерации произвольных двоичных данных; см. &lt;a href=&quot;outputting-pdf&quot;&gt;Вывод PDF с помощью Django&lt;/a&gt; для примера.</target>
        </trans-unit>
        <trans-unit id="ec92f0273100502d01875ac12f88f482d518616e" translate="yes" xml:space="preserve">
          <source>Notice that we always return a &lt;code&gt;Hand&lt;/code&gt; instance from these methods. That&amp;rsquo;s the Python object type we want to store in the model&amp;rsquo;s attribute.</source>
          <target state="translated">Обратите внимание, что мы всегда возвращаем экземпляр &lt;code&gt;Hand&lt;/code&gt; из этих методов. Это тип объекта Python, который мы хотим сохранить в атрибуте модели.</target>
        </trans-unit>
        <trans-unit id="7cb962ccf88e6d68aadedd4642d88f1b96287c61" translate="yes" xml:space="preserve">
          <source>Notice that we have to pass &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt; into the form&amp;rsquo;s constructor; this is how file data gets bound into a form.</source>
          <target state="translated">Обратите внимание, что мы должны передать &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt; в конструктор формы; Вот как данные файла попадают в форму.</target>
        </trans-unit>
        <trans-unit id="ebe9aa5966d9fd8238eb5df6b3f145913747b3be" translate="yes" xml:space="preserve">
          <source>Notice the wrapped view in the fifth line above:</source>
          <target state="translated">Обратите внимание на завернутый вид в пятой строке выше:</target>
        </trans-unit>
        <trans-unit id="7d3a34e68924487518a00635e921200b1ac742b0" translate="yes" xml:space="preserve">
          <source>Now &amp;ldquo;Choices&amp;rdquo; is an available option in the Django admin. The &amp;ldquo;Add choice&amp;rdquo; form looks like this:</source>
          <target state="translated">Теперь &amp;laquo;Выбор&amp;raquo; является доступной опцией в админке Django. Форма &amp;laquo;Добавить выбор&amp;raquo; выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="3506a6d9619d5b948e78683002fea85609bda448" translate="yes" xml:space="preserve">
          <source>Now Django knows to include the &lt;code&gt;polls&lt;/code&gt; app. Let&amp;rsquo;s run another command:</source>
          <target state="translated">Теперь Django знает, как включить приложение &lt;code&gt;polls&lt;/code&gt; . Давайте запустим другую команду:</target>
        </trans-unit>
        <trans-unit id="7f03ca20e19c12646270f4a55b9c68e694ccfc63" translate="yes" xml:space="preserve">
          <source>Now books can use that natural key to refer to &lt;code&gt;Person&lt;/code&gt; objects:</source>
          <target state="translated">Теперь книги могут использовать этот естественный ключ для ссылки на объекты &lt;code&gt;Person&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f48eb4671182254c386d97a21fd740b58e671430" translate="yes" xml:space="preserve">
          <source>Now change your &lt;code&gt;polls/index.html&lt;/code&gt; template from:</source>
          <target state="translated">Теперь измените ваш шаблон &lt;code&gt;polls/index.html&lt;/code&gt; из:</target>
        </trans-unit>
        <trans-unit id="3c17a0825c6bc86f0b3d2cec1786b40f2a2a7adf" translate="yes" xml:space="preserve">
          <source>Now create a directory called &lt;code&gt;admin&lt;/code&gt; inside &lt;code&gt;templates&lt;/code&gt;, and copy the template &lt;code&gt;admin/base_site.html&lt;/code&gt; from within the default Django admin template directory in the source code of Django itself (&lt;code&gt;django/contrib/admin/templates&lt;/code&gt;) into that directory.</source>
          <target state="translated">Теперь создайте каталог с именем &lt;code&gt;admin&lt;/code&gt; внутри &lt;code&gt;templates&lt;/code&gt; и скопируйте в этот &lt;code&gt;admin/base_site.html&lt;/code&gt; шаблон admin / base_site.html из каталога шаблонов администратора Django по умолчанию в исходном коде самого Django ( &lt;code&gt;django/contrib/admin/templates&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ad66c95e391e146cd22fbf05a88db00e41ed0fca" translate="yes" xml:space="preserve">
          <source>Now create admin views for the &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Group&lt;/code&gt; models:</source>
          <target state="translated">Теперь создайте административные представления для моделей &lt;code&gt;Person&lt;/code&gt; и &lt;code&gt;Group&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="32171b8cd59d1de6923e5f771f767aa171c9ff0d" translate="yes" xml:space="preserve">
          <source>Now for our hands-on example.</source>
          <target state="translated">А теперь для примера.</target>
        </trans-unit>
        <trans-unit id="729e7fc2aa726bb0bbccd67b261c45e009998ba6" translate="yes" xml:space="preserve">
          <source>Now in your time on the web you may have come across such beauties as &amp;ldquo;ME2/Sites/dirmod.asp?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&amp;rdquo;. You will be pleased to know that Django allows us much more elegant &lt;em&gt;URL patterns&lt;/em&gt; than that.</source>
          <target state="translated">Теперь, находясь в Интернете, вы можете встретить таких красоток, как &amp;laquo;ME2 / Sites / dirmod.asp? Sid = &amp;amp; type = gen &amp;amp; mod = Core + Pages &amp;amp; gid = A6CD4967199A42D9B65B1B&amp;raquo;. Вам будет приятно узнать, что Django позволяет нам гораздо более элегантные &lt;em&gt;шаблоны URL,&lt;/em&gt; чем это.</target>
        </trans-unit>
        <trans-unit id="4a92f218cc3e9875e924bf54caa6461c527dc629" translate="yes" xml:space="preserve">
          <source>Now in your time on the web you may have come across such beauties as &lt;code&gt;ME2/Sites/dirmod.htm?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&lt;/code&gt;. You will be pleased to know that Django allows us much more elegant &lt;em&gt;URL patterns&lt;/em&gt; than that.</source>
          <target state="translated">Теперь, в свое время в сети, вы, возможно, встречали таких красот, как &lt;code&gt;ME2/Sites/dirmod.htm?sid=&amp;amp;type=gen&amp;amp;mod=Core+Pages&amp;amp;gid=A6CD4967199A42D9B65B1B&lt;/code&gt; . Вам будет приятно узнать, что Django позволяет нам гораздо более элегантные &lt;em&gt;шаблоны URL&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d7ae0cff622895ccfc58ecd68188d07d6dbf3c75" translate="yes" xml:space="preserve">
          <source>Now is a good time to check your backup strategy for these files.</source>
          <target state="translated">Сейчас самое время проверить вашу стратегию резервного копирования для этих файлов.</target>
        </trans-unit>
        <trans-unit id="36e9dc72ab05bd8c0ba6109d8103272522c57402" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s time to go through all the changes made in our patch. To stage all the changes ready for commit, run:</source>
          <target state="translated">Теперь пришло время ознакомиться со всеми изменениями, внесенными в наш патч. Чтобы подготовить все изменения к фиксации, выполните:</target>
        </trans-unit>
        <trans-unit id="f163c45d21c3827f27074167e2374cf71f319599" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add a few more views to &lt;code&gt;polls/views.py&lt;/code&gt;. These views are slightly different, because they take an argument:</source>
          <target state="translated">Теперь давайте добавим еще несколько просмотров в &lt;code&gt;polls/views.py&lt;/code&gt; . Эти взгляды немного отличаются, потому что они принимают аргумент:</target>
        </trans-unit>
        <trans-unit id="f9a6d41951be6209dd204da14498c508cbc2918a" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s take a closer look at the &lt;code&gt;model&lt;/code&gt; argument we&amp;rsquo;ve been using all along. The &lt;code&gt;model&lt;/code&gt; argument, which specifies the database model that the view will operate upon, is available on all the generic views that operate on a single object or a collection of objects. However, the &lt;code&gt;model&lt;/code&gt; argument is not the only way to specify the objects that the view will operate upon &amp;ndash; you can also specify the list of objects using the &lt;code&gt;queryset&lt;/code&gt; argument:</source>
          <target state="translated">Теперь давайте подробнее рассмотрим аргумент &lt;code&gt;model&lt;/code&gt; мы использовали все это время. &lt;code&gt;model&lt;/code&gt; аргумент, который определяет модель базы данных , что вид будет работать на, доступно на всех общих представлений , которые работают на одном объекте или коллекции объектов. Однако аргумент &lt;code&gt;model&lt;/code&gt; - не единственный способ указать объекты, с которыми будет работать представление - вы также можете указать список объектов, используя аргумент &lt;code&gt;queryset&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="04c4dc8474d5993bb9a263be8a4f51e3572a25c0" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update our &lt;code&gt;index&lt;/code&gt; view in &lt;code&gt;polls/views.py&lt;/code&gt; to use the template:</source>
          <target state="translated">Теперь давайте обновим наше &lt;code&gt;index&lt;/code&gt; представление в &lt;code&gt;polls/views.py&lt;/code&gt; , чтобы использовать шаблон:</target>
        </trans-unit>
        <trans-unit id="f7acf85e2f16d675683380e16460476b2319c859" translate="yes" xml:space="preserve">
          <source>Now normal &lt;code&gt;Person&lt;/code&gt; queries will be unordered and &lt;code&gt;OrderedPerson&lt;/code&gt; queries will be ordered by &lt;code&gt;last_name&lt;/code&gt;.</source>
          <target state="translated">Теперь обычные запросы &lt;code&gt;Person&lt;/code&gt; будут неупорядоченными, а запросы &lt;code&gt;OrderedPerson&lt;/code&gt; будут упорядочены по &lt;code&gt;last_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52926bd958ab5c5a3c94125229eeb6b79ce9a920" translate="yes" xml:space="preserve">
          <source>Now sit back and relax. Django&amp;rsquo;s entire test suite has thousands of tests, and it takes at least a few minutes run, depending on the speed of your computer.</source>
          <target state="translated">Теперь сядь и расслабься. Весь набор тестов Django содержит тысячи тестов, и его запуск занимает не менее нескольких минут, в зависимости от скорости вашего компьютера.</target>
        </trans-unit>
        <trans-unit id="7662abc4461a188dc00d3f866b2b22d621b6328a" translate="yes" xml:space="preserve">
          <source>Now sit back and relax. Django&amp;rsquo;s entire test suite has thousands of tests, and it takes at least a few minutes to run, depending on the speed of your computer.</source>
          <target state="translated">Теперь сядьте и расслабьтесь. Весь набор тестов Django состоит из тысяч тестов, запуск которых занимает как минимум несколько минут, в зависимости от скорости вашего компьютера.</target>
        </trans-unit>
        <trans-unit id="1207f077c878e60c8e36479acd1b3e82b4924ee9" translate="yes" xml:space="preserve">
          <source>Now that the Question admin page is looking good, let&amp;rsquo;s make some tweaks to the &amp;ldquo;change list&amp;rdquo; page &amp;ndash; the one that displays all the questions in the system.</source>
          <target state="translated">Теперь, когда страница администрирования вопросов выглядит хорошо, давайте внесем некоторые изменения в страницу &amp;laquo;Список изменений&amp;raquo;, которая отображает все вопросы в системе.</target>
        </trans-unit>
        <trans-unit id="9c4af4d9ba28bde34b6930edb4ff370956fb3d37" translate="yes" xml:space="preserve">
          <source>Now that the server&amp;rsquo;s running, visit &lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt; with your Web browser. You&amp;rsquo;ll see a &amp;ldquo;Congratulations!&amp;rdquo; page, with a rocket taking off. It worked!</source>
          <target state="translated">Теперь, когда сервер работает, посетите веб-браузер по &lt;a href=&quot;http://127.0.0.1:8000/&quot;&gt;адресу http://127.0.0.1:8000/&lt;/a&gt; . Вы увидите &amp;laquo;Поздравляем!&amp;raquo; страница с взлетом ракеты. Это сработало!</target>
        </trans-unit>
        <trans-unit id="75e57caa4343eb4793c179b4fc0c146dbae59a0e" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve packaged and tested &lt;code&gt;django-polls&lt;/code&gt;, it&amp;rsquo;s ready to share with the world! If this wasn&amp;rsquo;t just an example, you could now:</source>
          <target state="translated">Теперь, когда мы упаковали и протестировали &lt;code&gt;django-polls&lt;/code&gt; , он готов поделиться с миром! Если бы это был не просто пример, вы могли бы сейчас:</target>
        </trans-unit>
        <trans-unit id="bf406cea330fa6d9142db8c49a22df6724bea522" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve registered &lt;code&gt;Question&lt;/code&gt;, Django knows that it should be displayed on the admin index page:</source>
          <target state="translated">Теперь, когда мы зарегистрировали &lt;code&gt;Question&lt;/code&gt; , Django знает, что он должен отображаться на странице индекса администратора:</target>
        </trans-unit>
        <trans-unit id="75cde598167c7f2589d0c60c6738de9584b976d6" translate="yes" xml:space="preserve">
          <source>Now that you have a local copy of Django, you can install it just like you would install any package using &lt;code&gt;pip&lt;/code&gt;. The most convenient way to do so is by using a &lt;em&gt;virtual environment&lt;/em&gt;, which is a feature built into Python that allows you to keep a separate directory of installed packages for each of your projects so that they don&amp;rsquo;t interfere with each other.</source>
          <target state="translated">Теперь, когда у вас есть локальная копия Django, вы можете установить ее так же, как если бы вы устанавливали любой пакет, используя &lt;code&gt;pip&lt;/code&gt; . Наиболее удобный способ сделать это - использовать &lt;em&gt;виртуальную среду&lt;/em&gt; , которая является функцией, встроенной в Python, которая позволяет вам хранить отдельный каталог установленных пакетов для каждого из ваших проектов, чтобы они не мешали друг другу.</target>
        </trans-unit>
        <trans-unit id="64bad9fc6f101dcdbda55bfa6724529b3cc5e83a" translate="yes" xml:space="preserve">
          <source>Now that you have set up your &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to use your intermediary model (&lt;code&gt;Membership&lt;/code&gt;, in this case), you&amp;rsquo;re ready to start creating some many-to-many relationships. You do this by creating instances of the intermediate model:</source>
          <target state="translated">Теперь, когда вы настроили свой &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; для использования своей посреднической модели ( в данном случае - &lt;code&gt;Membership&lt;/code&gt; ), вы готовы начать создавать некоторые отношения &amp;laquo;многие ко многим&amp;raquo;. Вы делаете это путем создания экземпляров промежуточной модели:</target>
        </trans-unit>
        <trans-unit id="2529a6500c0e15e2c4abe6d28f26cc62054cc372" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve examined your dataset using &lt;code&gt;ogrinfo&lt;/code&gt;, create a GeoDjango model to represent this data:</source>
          <target state="translated">Теперь, когда вы проверили свой набор данных с помощью &lt;code&gt;ogrinfo&lt;/code&gt; , создайте модель GeoDjango для представления этих данных:</target>
        </trans-unit>
        <trans-unit id="dc2389b5f334729c58b759c145bcf664705ad347" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve seen how to define geographic models and import data with the &lt;a href=&quot;layermapping&quot;&gt;LayerMapping data import utility&lt;/a&gt;, it&amp;rsquo;s possible to further automate this process with use of the &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;ogrinspect&lt;/code&gt;&lt;/a&gt; management command. The &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;ogrinspect&lt;/code&gt;&lt;/a&gt; command introspects a GDAL-supported vector data source (e.g., a shapefile) and generates a model definition and &lt;code&gt;LayerMapping&lt;/code&gt; dictionary automatically.</source>
          <target state="translated">Теперь, когда вы &lt;a href=&quot;layermapping&quot;&gt;узнали,&lt;/a&gt; как определять географические модели и импортировать данные с помощью утилиты импорта данных LayerMapping , можно дополнительно автоматизировать этот процесс с помощью команды управления &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;ogrinspect&lt;/code&gt; &lt;/a&gt; . Команда &lt;a href=&quot;commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;ogrinspect&lt;/code&gt; анализирует&lt;/a&gt; поддерживаемый GDAL источник векторных данных (например, шейп- &lt;code&gt;LayerMapping&lt;/code&gt; и автоматически генерирует определение модели и словарь LayerMapping .</target>
        </trans-unit>
        <trans-unit id="6376b1ae238a5fa6f312c93f3d2f4898fe8c1b17" translate="yes" xml:space="preserve">
          <source>Now that your environment &amp;ndash; a &amp;ldquo;project&amp;rdquo; &amp;ndash; is set up, you&amp;rsquo;re set to start doing work.</source>
          <target state="translated">Теперь, когда ваша среда - &amp;laquo;проект&amp;raquo; - настроена, вы готовы приступить к работе.</target>
        </trans-unit>
        <trans-unit id="fae278f6e2f60b163eed4caa52b0d02177fea03c" translate="yes" xml:space="preserve">
          <source>Now the question change list page looks like this:</source>
          <target state="translated">Теперь страница со списком вопросов выглядит так:</target>
        </trans-unit>
        <trans-unit id="eb90dc277d26d2a028d83b7c97946650cba77833" translate="yes" xml:space="preserve">
          <source>Now we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our static files directly in &lt;code&gt;my_app/static/&lt;/code&gt; (rather than creating another &lt;code&gt;my_app&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will use the first static file it finds whose name matches, and if you had a static file with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those static files inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">Теперь мы &lt;em&gt;могли бы&lt;/em&gt; быть в состоянии уйти с проставлением наших статических файлов непосредственно в &lt;code&gt;my_app/static/&lt;/code&gt; (вместо создания другой &lt;code&gt;my_app&lt;/code&gt; подкаталога), но это будет на самом деле плохая идея. Django будет использовать первый найденный им статический файл, имя которого совпадает, и если бы у вас был статический файл с тем же именем в &lt;em&gt;другом&lt;/em&gt; приложении, Django не смог бы различить их. Мы должны быть в состоянии указать Django на правильный путь, и лучший способ убедиться в этом - использовать &lt;em&gt;пространство имен&lt;/em&gt; . То есть, поместив эти статические файлы в &lt;em&gt;другой&lt;/em&gt; каталог, названный для самого приложения.</target>
        </trans-unit>
        <trans-unit id="01d175c1e637f3cee5ceb291fdf4c9adfc0dc821" translate="yes" xml:space="preserve">
          <source>Now we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our templates directly in &lt;code&gt;polls/templates&lt;/code&gt; (rather than creating another &lt;code&gt;polls&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will choose the first template it finds whose name matches, and if you had a template with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those templates inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">Теперь мы &lt;em&gt;могли бы&lt;/em&gt; быть в состоянии уйти с проставлением наших шаблонов непосредственно в &lt;code&gt;polls/templates&lt;/code&gt; (а не создавать еще &lt;code&gt;polls&lt;/code&gt; подкаталог), но это будет на самом деле плохая идея. Django выберет первый найденный шаблон, чье имя совпадает, и если у вас был шаблон с таким же именем в &lt;em&gt;другом&lt;/em&gt; приложении, Django не сможет их различить. Мы должны быть в состоянии указать Django на правильный путь, и лучший способ убедиться в этом - использовать &lt;em&gt;пространство имен&lt;/em&gt; . То есть, помещая эти шаблоны в &lt;em&gt;другой&lt;/em&gt; каталог, названный для самого приложения.</target>
        </trans-unit>
        <trans-unit id="7c4f42edd57918625d34396bf4a71a96fb72f5a7" translate="yes" xml:space="preserve">
          <source>Now we are ready to run the test suite. If you&amp;rsquo;re using GNU/Linux, macOS, or some other flavor of Unix, run:</source>
          <target state="translated">Теперь мы готовы запустить тестовый набор. Если вы используете GNU / Linux, macOS или какой-либо другой вариант Unix, запустите:</target>
        </trans-unit>
        <trans-unit id="e47a8ac15a5ebf5edb5feb22215c8cd06eb6fb07" translate="yes" xml:space="preserve">
          <source>Now we can write a new &lt;code&gt;PublisherDetail&lt;/code&gt;:</source>
          <target state="translated">Теперь мы можем написать новый &lt;code&gt;PublisherDetail&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7c66e87b3835c409da2dcefebcb4caed4fb353a1" translate="yes" xml:space="preserve">
          <source>Now we define our corresponding Django model (make sure to use &lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Теперь мы определим нашу соответствующую модель Django (обязательно используйте &lt;a href=&quot;../../django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="7ae1e4292d6b8aae98119242843cc18f427ab83b" translate="yes" xml:space="preserve">
          <source>Now we have a different problem - the longer name of &amp;ldquo;Helena Bonham Carter&amp;rdquo; doesn&amp;rsquo;t show up as it is much longer. Trigram searches consider all combinations of three letters, and compares how many appear in both search and source strings. For the longer name, there are more combinations that don&amp;rsquo;t appear in the source string, so it is no longer considered a close match.</source>
          <target state="translated">Теперь у нас другая проблема - более длинное имя &amp;laquo;Хелена Бонэм Картер&amp;raquo; не появляется, потому что оно намного длиннее. При поиске по триграмме рассматриваются все комбинации из трех букв и сравнивается их количество в строке поиска и в исходной строке. Для более длинного имени есть больше комбинаций, которые не появляются в исходной строке, поэтому оно больше не считается близким совпадением.</target>
        </trans-unit>
        <trans-unit id="4c5602413593d1c5528e6e57dcbd46503a8f2804" translate="yes" xml:space="preserve">
          <source>Now we have a different problem - the longer name of &amp;ldquo;Helena Bonham Carter&amp;rdquo; doesn&amp;rsquo;t show up as it is much longer. Trigram searches consider all combinations of three letters, and compares how many appear in both search and source strings. For the longer name, there are more combinations which appear in the source string so it is no longer considered a close match.</source>
          <target state="translated">Теперь у нас другая проблема - более длинное имя &amp;laquo;Хелена Бонэм Картер&amp;raquo; не появляется, поскольку оно намного длиннее. Поиск триграмм учитывает все комбинации из трех букв и сравнивает их количество в строках поиска и источника. Для более длинного имени в исходной строке появляется больше комбинаций, поэтому оно больше не считается близким совпадением.</target>
        </trans-unit>
        <trans-unit id="2d795b337a92c0a5e31febc9c4041e82a9227dbc" translate="yes" xml:space="preserve">
          <source>Now we implement the pre-processing and validation. Since we do not have any of our own validation at this point, we delegate to the nested expressions:</source>
          <target state="translated">Теперь мы реализуем предварительную обработку и валидацию.Так как на данный момент у нас нет собственной валидации,мы делегируем вложенные выражения:</target>
        </trans-unit>
        <trans-unit id="c37a1e6f4b5daec07056100cf46833458caf834e" translate="yes" xml:space="preserve">
          <source>Now we need to define a view:</source>
          <target state="translated">Теперь нам нужно определить вид:</target>
        </trans-unit>
        <trans-unit id="8cfc15775270a0cf7074a75118fb26261619cc6f" translate="yes" xml:space="preserve">
          <source>Now we need to make sure that the test we wrote earlier passes, so we can see whether the code we added is working correctly. Again, navigate to the Django &lt;code&gt;tests/&lt;/code&gt; directory and run:</source>
          <target state="translated">Теперь нам нужно убедиться, что тест, который мы написали ранее, проходит, чтобы мы могли видеть, работает ли добавленный код правильно. Снова перейдите в каталог Django &lt;code&gt;tests/&lt;/code&gt; и запустите:</target>
        </trans-unit>
        <trans-unit id="bcac3a04746aabf930cb5a747d4e5bc7fbac7974" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll define your models &amp;ndash; essentially, your database layout, with additional metadata.</source>
          <target state="translated">Теперь мы определим ваши модели - по сути, ваш макет базы данных с дополнительными метаданными.</target>
        </trans-unit>
        <trans-unit id="fe5908be768f13a2be925c73b002c0119eef5f3a" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll need to handle routing. First we want a router that knows to send queries for the &lt;code&gt;auth&lt;/code&gt; and &lt;code&gt;contenttypes&lt;/code&gt; apps to &lt;code&gt;auth_db&lt;/code&gt; (&lt;code&gt;auth&lt;/code&gt; models are linked to &lt;code&gt;ContentType&lt;/code&gt;, so they must be stored in the same database):</source>
          <target state="translated">Теперь нам нужно обработать маршрутизацию. Сначала мы хотим, чтобы маршрутизатор, который знает, отправляет запросы для приложений &lt;code&gt;auth&lt;/code&gt; и &lt;code&gt;contenttypes&lt;/code&gt; в &lt;code&gt;auth_db&lt;/code&gt; ( модели &lt;code&gt;auth&lt;/code&gt; связаны с &lt;code&gt;ContentType&lt;/code&gt; , поэтому они должны храниться в одной базе данных):</target>
        </trans-unit>
        <trans-unit id="d5c11520a098768a6c24489507829a2b07907224" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ve seen how Django&amp;rsquo;s generic class-based views use the provided mixins, let&amp;rsquo;s look at other ways we can combine them. Of course we&amp;rsquo;re still going to be combining them with either built-in class-based views, or other generic class-based views, but there are a range of rarer problems you can solve than are provided for by Django out of the box.</source>
          <target state="translated">Теперь мы увидели, как общие представления на основе классов в Django используют предоставленные миксины, давайте рассмотрим другие способы их объединения. Конечно, мы все еще собираемся комбинировать их со встроенными представлениями на основе классов или другими общими представлениями на основе классов, но есть ряд более редких проблем, которые вы можете решить, чем предусмотрено Django &amp;laquo;из коробки&amp;raquo;. ,</target>
        </trans-unit>
        <trans-unit id="d0d9f0575c1c236d5af487efdbf517700e1f99af" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ve seen how Django&amp;rsquo;s generic class-based views use the provided mixins, let&amp;rsquo;s look at other ways we can combine them. We&amp;rsquo;re still going to be combining them with either built-in class-based views, or other generic class-based views, but there are a range of rarer problems you can solve than are provided for by Django out of the box.</source>
          <target state="translated">Теперь мы увидели, как общие представления на основе классов Django используют предоставленные миксины, давайте рассмотрим другие способы их комбинирования. Мы по-прежнему собираемся комбинировать их либо со встроенными представлениями на основе классов, либо с другими общими представлениями на основе классов, но существует ряд более редких проблем, которые вы можете решить, чем те, которые предусмотрены Django из коробки.</target>
        </trans-unit>
        <trans-unit id="2b516478da3cbf3e609d2d9aa54d602ac37ba736" translate="yes" xml:space="preserve">
          <source>Now you can access the country in a template with &lt;code&gt;{{ form.coordinates.country }}&lt;/code&gt;.</source>
          <target state="translated">Теперь вы можете получить доступ к стране в шаблоне с помощью &lt;code&gt;{{ form.coordinates.country }}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d475869dbc3deb53f1f216a136b9eba20db60766" translate="yes" xml:space="preserve">
          <source>Now you can apply the migrations as usual with the &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Теперь вы можете применить миграцию как обычно с помощью команды &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72ac8fc1339f4d03f079fb6f9c9f0e194b347a82" translate="yes" xml:space="preserve">
          <source>Now you can put those skills to good use by helping to improve Django&amp;rsquo;s codebase.</source>
          <target state="translated">Теперь вы можете эффективно использовать эти навыки, помогая улучшить кодовую базу Django.</target>
        </trans-unit>
        <trans-unit id="23f1e33e76b69dcdf87c9a1fb7103093a05beea6" translate="yes" xml:space="preserve">
          <source>Now you can satisfy yourself that this behaves as expected by firing up &lt;code&gt;runserver&lt;/code&gt;, loading the site in your browser, creating &lt;code&gt;Questions&lt;/code&gt; with dates in the past and future, and checking that only those that have been published are listed. You don&amp;rsquo;t want to have to do that &lt;em&gt;every single time you make any change that might affect this&lt;/em&gt; - so let&amp;rsquo;s also create a test, based on our &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; session above.</source>
          <target state="translated">Теперь вы можете убедиться, что это ведет себя так, как и ожидалось, &lt;code&gt;runserver&lt;/code&gt; , загрузив сайт в браузере, создав &lt;code&gt;Questions&lt;/code&gt; с датами в прошлом и будущем и проверив, что в нем перечислены только те, которые были опубликованы. Вам не нужно делать это &lt;em&gt;каждый раз, когда вы вносите какие-либо изменения, которые могут повлиять на это,&lt;/em&gt; поэтому давайте также создадим тест, основанный на нашем сеансе &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt; выше.</target>
        </trans-unit>
        <trans-unit id="0dd4f0d714b7b440236676490d5cd5cc97710517" translate="yes" xml:space="preserve">
          <source>Now you can use any of the documented attributes and methods of the &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Теперь вы можете использовать любой из документированных атрибутов и методов класса &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ab3a4c732a570e45e72d8279159c31dd602e88c" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ll also need a view corresponding to that &lt;code&gt;/your-name/&lt;/code&gt; URL which will find the appropriate key/value pairs in the request, and then process them.</source>
          <target state="translated">Теперь вам также потребуется представление, соответствующее этому &lt;code&gt;/your-name/&lt;/code&gt; URL, которое найдет подходящие пары ключ / значение в запросе, а затем обработает их.</target>
        </trans-unit>
        <trans-unit id="773ae0c9b55a06a6212d086ca1c9132147c8e3bc" translate="yes" xml:space="preserve">
          <source>Now your admin site is set up to edit &lt;code&gt;Membership&lt;/code&gt; objects inline from either the &lt;code&gt;Person&lt;/code&gt; or the &lt;code&gt;Group&lt;/code&gt; detail pages.</source>
          <target state="translated">Теперь ваш админ-сайт настроен для редактирования объектов &lt;code&gt;Membership&lt;/code&gt; встроенных на страницах сведений о &lt;code&gt;Person&lt;/code&gt; или &lt;code&gt;Group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d7161c477ce1fa34e1cd8a8fcedd1a97cd45391" translate="yes" xml:space="preserve">
          <source>Now your tag should begin to look like this:</source>
          <target state="translated">Теперь твоя бирка должна выглядеть вот так:</target>
        </trans-unit>
        <trans-unit id="3ca505f89a58836d8d8355a91fcfdcb88a64397d" translate="yes" xml:space="preserve">
          <source>Now&amp;rsquo;s a good time to note: &lt;strong&gt;don&amp;rsquo;t&lt;/strong&gt; use this server in anything resembling a production environment. It&amp;rsquo;s intended only for use while developing. (We&amp;rsquo;re in the business of making Web frameworks, not Web servers.)</source>
          <target state="translated">Сейчас самое время отметить: &lt;strong&gt;не&lt;/strong&gt; используйте этот сервер во всем, что напоминает производственную среду. Он предназначен только для использования при разработке. (Мы занимаемся созданием веб-фреймворков, а не веб-серверов.)</target>
        </trans-unit>
        <trans-unit id="8d15bcc0a82dc2d5aaadb1122619ae9298528376" translate="yes" xml:space="preserve">
          <source>Now&amp;rsquo;s also a good time to note that change lists give you free pagination. The default is to display 100 items per page. &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_per_page&quot;&gt;&lt;code&gt;Change list pagination&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;search boxes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_filter&quot;&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.date_hierarchy&quot;&gt;&lt;code&gt;date-hierarchies&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;column-header-ordering&lt;/code&gt;&lt;/a&gt; all work together like you think they should.</source>
          <target state="translated">Сейчас также самое время отметить, что списки изменений дают вам бесплатную нумерацию страниц. По умолчанию отображается 100 элементов на странице. &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_per_page&quot;&gt; &lt;code&gt;Change list pagination&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;search boxes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_filter&quot;&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.date_hierarchy&quot;&gt; &lt;code&gt;date-hierarchies&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;column-header-ordering&lt;/code&gt; &lt;/a&gt; все работает вместе, как вы думаете.</target>
        </trans-unit>
        <trans-unit id="99ce113dbab28c6966339979cd1800d1c3a5e9a6" translate="yes" xml:space="preserve">
          <source>Now, all you need to do is create a new function and have &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; use it. &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; expects a callable as its argument which takes two arguments - the first is an &lt;a href=&quot;../ref/applications&quot;&gt;app registry&lt;/a&gt; that has the historical versions of all your models loaded into it to match where in your history the migration sits, and the second is a &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt;, which you can use to manually effect database schema changes (but beware, doing this can confuse the migration autodetector!)</source>
          <target state="translated">Теперь все, что вам нужно сделать, это создать новую функцию и использовать ее в &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; ожидает вызова в качестве аргумента, который принимает два аргумента: первый - это &lt;a href=&quot;../ref/applications&quot;&gt;реестр приложений&lt;/a&gt; , в который загружены исторические версии всех ваших моделей, чтобы соответствовать месту в вашей истории миграции, а второй - &lt;a href=&quot;../ref/schema-editor&quot;&gt;SchemaEditor&lt;/a&gt; , который вы можете используйте для ручного изменения схемы базы данных (но будьте осторожны, это может сбить с толку автоопределитель миграции!)</target>
        </trans-unit>
        <trans-unit id="e26eeede8de5f6aef6477290252659725320f583" translate="yes" xml:space="preserve">
          <source>Now, create a &lt;code&gt;polls/results.html&lt;/code&gt; template:</source>
          <target state="translated">Теперь создайте шаблон &lt;code&gt;polls/results.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9b9600adacf65499e24be89755a51a93c7893117" translate="yes" xml:space="preserve">
          <source>Now, create and register the inclusion tag by calling the &lt;code&gt;inclusion_tag()&lt;/code&gt; method on a &lt;code&gt;Library&lt;/code&gt; object. Following our example, if the above template is in a file called &lt;code&gt;results.html&lt;/code&gt; in a directory that&amp;rsquo;s searched by the template loader, we&amp;rsquo;d register the tag like this:</source>
          <target state="translated">Теперь создайте и зарегистрируйте тег включения, вызвав метод &lt;code&gt;inclusion_tag()&lt;/code&gt; для объекта &lt;code&gt;Library&lt;/code&gt; . Следуя нашему примеру, если вышеупомянутый шаблон находится в файле с именем &lt;code&gt;results.html&lt;/code&gt; в каталоге, который ищется загрузчиком шаблона, мы бы зарегистрировали тег следующим образом:</target>
        </trans-unit>
        <trans-unit id="61df64fac0bdb450dcab9337d6fdd355672882b3" translate="yes" xml:space="preserve">
          <source>Now, define a point of interest &lt;a href=&quot;#id13&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;:</source>
          <target state="translated">Теперь определим точку интереса &lt;a href=&quot;#id13&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c9f3f21fc4e880937be50b7fcf36ca081326148a" translate="yes" xml:space="preserve">
          <source>Now, go to &lt;code&gt;/polls/1/&lt;/code&gt; in your browser and vote in the question. You should see a results page that gets updated each time you vote. If you submit the form without having chosen a choice, you should see the error message.</source>
          <target state="translated">Теперь перейдите к &lt;code&gt;/polls/1/&lt;/code&gt; в вашем браузере и проголосуйте за вопрос. Вы должны увидеть страницу результатов, которая обновляется каждый раз, когда вы голосуете. Если вы отправляете форму, не выбрав вариант, вы должны увидеть сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="a1efea4230fe635c172ad6eeb75a83bbd75fc583" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s create a Django view that handles the submitted data and does something with it. Remember, in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;, we created a URLconf for the polls application that includes this line:</source>
          <target state="translated">Теперь давайте создадим представление Django, которое обрабатывает отправленные данные и что-то с ними делает. Помните, что в уроке &lt;a href=&quot;tutorial03&quot;&gt;3&lt;/a&gt; мы создали URLconf для приложения polls, включающего следующую строку:</target>
        </trans-unit>
        <trans-unit id="38f59dfc7640b31e36394dc7c9a2f46f24eb17ba" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s hop into the interactive Python shell and play around with the free API Django gives you. To invoke the Python shell, use this command:</source>
          <target state="translated">Теперь давайте перейдем к интерактивной оболочке Python и поиграемся с бесплатным API, предоставляемым Django. Чтобы вызвать оболочку Python, используйте эту команду:</target>
        </trans-unit>
        <trans-unit id="7cbef95cf75c7a3f4b4837de306a008dbc014431" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s tackle the question detail view &amp;ndash; the page that displays the question text for a given poll. Here&amp;rsquo;s the view:</source>
          <target state="translated">Теперь давайте рассмотрим подробный вид вопроса - страницу, которая отображает текст вопроса для данного опроса. Вот мнение:</target>
        </trans-unit>
        <trans-unit id="b460cbb07f78017c0c6f37a652de30bf9aafdb00" translate="yes" xml:space="preserve">
          <source>Now, open a Web browser and go to &amp;ldquo;/admin/&amp;rdquo; on your local domain &amp;ndash; e.g., &lt;a href=&quot;http://127.0.0.1:8000/admin/&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt;. You should see the admin&amp;rsquo;s login screen:</source>
          <target state="translated">Теперь откройте веб-браузер и перейдите к &amp;laquo;/ admin /&amp;raquo; в вашем локальном домене - например, &lt;a href=&quot;http://127.0.0.1:8000/admin/&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt; . Вы должны увидеть экран входа администратора:</target>
        </trans-unit>
        <trans-unit id="2b81dff36c6dd0997b6aebdd48e22ac831af4eec" translate="yes" xml:space="preserve">
          <source>Now, open the world borders shapefile using GeoDjango&amp;rsquo;s &lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="translated">Теперь откройте шейп-файл границ мира с помощью интерфейса &lt;a href=&quot;gdal#django.contrib.gis.gdal.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt; GeoDjango :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
