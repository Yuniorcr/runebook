<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="38dee66af115536410728b1affd492e9ffc234a5" translate="yes" xml:space="preserve">
          <source>When using the SQLite backend and non-ASCII strings, bear in mind the &lt;a href=&quot;../databases#sqlite-string-matching&quot;&gt;database note&lt;/a&gt; about string comparisons.</source>
          <target state="translated">При использовании бэкэнда SQLite и строк, не относящихся к ASCII, помните &lt;a href=&quot;../databases#sqlite-string-matching&quot;&gt;примечание базы данных&lt;/a&gt; о сравнении строк.</target>
        </trans-unit>
        <trans-unit id="61d4f0f76eb7fb9b2a9c6e757398b181712184c1" translate="yes" xml:space="preserve">
          <source>When using the SQLite backend and non-ASCII strings, bear in mind the &lt;a href=&quot;../databases#sqlite-string-matching&quot;&gt;database note&lt;/a&gt; about string comparisons. SQLite does not do case-insensitive matching for non-ASCII strings.</source>
          <target state="translated">При использовании бэкэнда SQLite и строк, не относящихся к ASCII, помните &lt;a href=&quot;../databases#sqlite-string-matching&quot;&gt;примечание базы данных&lt;/a&gt; о сравнении строк. SQLite не выполняет сопоставление без учета регистра для строк, не относящихся к ASCII.</target>
        </trans-unit>
        <trans-unit id="d5696cc7aa1339e54989a77486231650c1ade0a9" translate="yes" xml:space="preserve">
          <source>When using the above written &lt;code&gt;abs&lt;/code&gt; lookup, the SQL produced will not use indexes efficiently in some cases. In particular, when we use &lt;code&gt;change__abs__lt=27&lt;/code&gt;, this is equivalent to &lt;code&gt;change__gt=-27&lt;/code&gt; AND &lt;code&gt;change__lt=27&lt;/code&gt;. (For the &lt;code&gt;lte&lt;/code&gt; case we could use the SQL &lt;code&gt;BETWEEN&lt;/code&gt;).</source>
          <target state="translated">При использовании вышеупомянутого написанного &lt;code&gt;abs&lt;/code&gt; - поиска созданный SQL не будет эффективно использовать индексы в некоторых случаях. В частности, когда мы используем &lt;code&gt;change__abs__lt=27&lt;/code&gt; , это эквивалентно &lt;code&gt;change__gt=-27&lt;/code&gt; AND &lt;code&gt;change__lt=27&lt;/code&gt; . (Для &lt;code&gt;lte&lt;/code&gt; случае мы могли бы использовать SQL &lt;code&gt;BETWEEN&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cf6290c44eb00e5e348edce760cc337e99eeda9b" translate="yes" xml:space="preserve">
          <source>When using the cookies backend the session data can be read by the client.</source>
          <target state="translated">При использовании бэкэнда cookie-файлов данные сессии могут быть прочитаны клиентом.</target>
        </trans-unit>
        <trans-unit id="25b1c2d093966da4974f56dc88f3d8263871967c" translate="yes" xml:space="preserve">
          <source>When using the middleware there may be some views where you do &lt;strong&gt;not&lt;/strong&gt; want the &lt;code&gt;X-Frame-Options&lt;/code&gt; header set. For those cases, you can use a view decorator that tells the middleware not to set the header:</source>
          <target state="translated">При использовании промежуточного программного обеспечения могут быть некоторые представления, в которых вы &lt;strong&gt;не&lt;/strong&gt; хотите устанавливать заголовок &lt;code&gt;X-Frame-Options&lt;/code&gt; . В этих случаях вы можете использовать декоратор представления, который сообщает промежуточному программному обеспечению не устанавливать заголовок:</target>
        </trans-unit>
        <trans-unit id="bdddc5482e8d57e6747babb63466a78743a03b11" translate="yes" xml:space="preserve">
          <source>When using these services, the basic workflow would look a bit like the above, except that instead of using &lt;code&gt;rsync&lt;/code&gt; to transfer your static files to the server you&amp;rsquo;d need to transfer the static files to the storage provider or CDN.</source>
          <target state="translated">При использовании этих сервисов базовый рабочий процесс будет выглядеть примерно так, как указано выше, за исключением того, что вместо использования &lt;code&gt;rsync&lt;/code&gt; для передачи статических файлов на сервер вам потребуется передать статические файлы поставщику хранилища или CDN.</target>
        </trans-unit>
        <trans-unit id="da2df67ad09d6722cb2077ad42b8cdd1029ef430" translate="yes" xml:space="preserve">
          <source>When using this backend, you&amp;rsquo;ll likely want to customize the &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm&quot;&gt;&lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/a&gt; used by the &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;LoginView&lt;/code&gt;&lt;/a&gt; by overriding the &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed&quot;&gt;&lt;code&gt;confirm_login_allowed()&lt;/code&gt;&lt;/a&gt; method as it rejects inactive users.</source>
          <target state="translated">При использовании этого бэкэнда вы, вероятно, захотите настроить &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm&quot;&gt; &lt;code&gt;AuthenticationForm&lt;/code&gt; ,&lt;/a&gt; используемую &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;LoginView&lt;/code&gt; &lt;/a&gt; , переопределив метод &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed&quot;&gt; &lt;code&gt;confirm_login_allowed()&lt;/code&gt; &lt;/a&gt; поскольку он отклоняет неактивных пользователей.</target>
        </trans-unit>
        <trans-unit id="dbfbd0966dad63416803e5998a1b37fadea4e021" translate="yes" xml:space="preserve">
          <source>When validating the &amp;lsquo;csrfmiddlewaretoken&amp;rsquo; field value, only the secret, not the full token, is compared with the secret in the cookie value. This allows the use of ever-changing tokens. While each request may use its own token, the secret remains common to all.</source>
          <target state="translated">При проверке значения поля 'csrfmiddlewaretoken' сравнивается только секрет, а не полный токен, с секретом в значении cookie. Это позволяет использовать постоянно меняющиеся токены. Хотя каждый запрос может использовать свой собственный токен, секрет остается общим для всех.</target>
        </trans-unit>
        <trans-unit id="7bb5644a3fdbf354af8aaeeaca88ff24ed2e5d26" translate="yes" xml:space="preserve">
          <source>When value is &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;select_related()&lt;/code&gt; will always be called. When value is set to &lt;code&gt;False&lt;/code&gt;, Django will look at &lt;code&gt;list_display&lt;/code&gt; and call &lt;code&gt;select_related()&lt;/code&gt; if any &lt;code&gt;ForeignKey&lt;/code&gt; is present.</source>
          <target state="translated">Когда значение равно &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;select_related()&lt;/code&gt; всегда будет вызываться. Когда значение установлено в &lt;code&gt;False&lt;/code&gt; , Django будет просматривать &lt;code&gt;list_display&lt;/code&gt; и вызывать &lt;code&gt;select_related()&lt;/code&gt; если присутствует какой-либо &lt;code&gt;ForeignKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="762bfd621a5d62b55b07395446b78f6a419696b4" translate="yes" xml:space="preserve">
          <source>When we fixed the bug above, we wrote the test first and then the code to fix it. In fact that was an example of test-driven development, but it doesn&amp;rsquo;t really matter in which order we do the work.</source>
          <target state="translated">Когда мы исправили ошибку выше, мы сначала написали тест, а затем код для его исправления. На самом деле это был пример разработки, основанной на тестировании, но не имеет значения, в каком порядке мы выполняем эту работу.</target>
        </trans-unit>
        <trans-unit id="00ac2eac35df9778c6d2584609b70e329e17a9fc" translate="yes" xml:space="preserve">
          <source>When we instantiate a form, we can opt to leave it empty or pre-populate it, for example with:</source>
          <target state="translated">Когда мы инстанцируем форму,мы можем оставить ее пустой или предварительно заселить,например,с помощью:</target>
        </trans-unit>
        <trans-unit id="71861f6883f1e21a923a2557863f3ae46320a891" translate="yes" xml:space="preserve">
          <source>When working with sessions internally, Django uses a session store object from the corresponding session engine. By convention, the session store object class is named &lt;code&gt;SessionStore&lt;/code&gt; and is located in the module designated by &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt;&lt;code&gt;SESSION_ENGINE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">При внутренней работе с сессиями Django использует объект хранилища сессий из соответствующего механизма сессий. По соглашению класс объекта хранилища сеансов называется &lt;code&gt;SessionStore&lt;/code&gt; и находится в модуле, обозначенном как &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt; &lt;code&gt;SESSION_ENGINE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a4661ed792f9a543282dccc2742af3143789c34" translate="yes" xml:space="preserve">
          <source>When writing a &lt;code&gt;RunPython&lt;/code&gt; function that uses models from apps other than the one in which the migration is located, the migration&amp;rsquo;s &lt;code&gt;dependencies&lt;/code&gt; attribute should include the latest migration of each app that is involved, otherwise you may get an error similar to: &lt;code&gt;LookupError: No installed app
with label 'myappname'&lt;/code&gt; when you try to retrieve the model in the &lt;code&gt;RunPython&lt;/code&gt; function using &lt;code&gt;apps.get_model()&lt;/code&gt;.</source>
          <target state="translated">При написании функции &lt;code&gt;RunPython&lt;/code&gt; , которая использует модели из приложений, отличных от той, в которой расположена миграция, атрибут &lt;code&gt;dependencies&lt;/code&gt; миграции должен включать в себя последнюю миграцию каждого участвующего приложения, в противном случае вы можете получить ошибку, похожую на: &lt;code&gt;LookupError: No installed app with label 'myappname'&lt;/code&gt; при попытке получить модель в &lt;code&gt;RunPython&lt;/code&gt; функции с помощью &lt;code&gt;apps.get_model()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a42827cc599317fa5952dd46e90497356d44296a" translate="yes" xml:space="preserve">
          <source>When writing a custom filter, give some thought to how the filter will interact with Django&amp;rsquo;s auto-escaping behavior. Note that two types of strings can be passed around inside the template code:</source>
          <target state="translated">При написании пользовательского фильтра подумайте о том, как фильтр будет взаимодействовать с автоматическим экранированием Django. Обратите внимание, что внутри кода шаблона можно передавать два типа строк:</target>
        </trans-unit>
        <trans-unit id="cb4a99691b530c61a2380d1460906787b2eb3b8e" translate="yes" xml:space="preserve">
          <source>When writing custom validation for &lt;code&gt;InlineModelAdmin&lt;/code&gt; forms, be cautious of writing validation that relies on features of the parent model. If the parent model fails to validate, it may be left in an inconsistent state as described in the warning in &lt;a href=&quot;../../../topics/forms/modelforms#validation-on-modelform&quot;&gt;Validation on a ModelForm&lt;/a&gt;.</source>
          <target state="translated">При написании пользовательской проверки для форм &lt;code&gt;InlineModelAdmin&lt;/code&gt; будьте осторожны при написании проверки, которая опирается на функции родительской модели. Если родительская модель не проходит проверку, ее можно оставить в несогласованном состоянии, как описано в предупреждении в разделе &lt;a href=&quot;../../../topics/forms/modelforms#validation-on-modelform&quot;&gt;Валидация в ModelForm&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="219296b4d360e0326b82540bb67bbcb02a0e75e1" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;#running-tests&quot;&gt;run your tests&lt;/a&gt;, the default behavior of the test utility is to find all the test cases (that is, subclasses of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;) in any file whose name begins with &lt;code&gt;test&lt;/code&gt;, automatically build a test suite out of those test cases, and run that suite.</source>
          <target state="translated">Когда вы &lt;a href=&quot;#running-tests&quot;&gt;запускаете свои тесты&lt;/a&gt; , поведение тестовой утилиты по умолчанию состоит в том, чтобы найти все тестовые случаи (то есть подклассы &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; ) в любом файле, имя которого начинается с &lt;code&gt;test&lt;/code&gt; , автоматически создать набор тестов из этих тестовых случаев, и запустить этот набор.</target>
        </trans-unit>
        <trans-unit id="b8afb8b8cacf61ac9ae242b3ac15583017e3fa88" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; a model, its current state is pickled. When you unpickle it, it&amp;rsquo;ll contain the model instance at the moment it was pickled, rather than the data that&amp;rsquo;s currently in the database.</source>
          <target state="translated">Когда вы &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; модель, ее текущее состояние протравливается. Когда вы откроете его, он будет содержать экземпляр модели в тот момент, когда он был выбран, а не данные, которые в данный момент находятся в базе данных.</target>
        </trans-unit>
        <trans-unit id="de1ee25f95594a76c8269ace89d8d4813fc2094d" translate="yes" xml:space="preserve">
          <source>When you access a &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; on a model, you are given an instance of &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt; as a proxy for accessing the underlying file.</source>
          <target state="translated">Когда вы &lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; к FileField в модели, вам предоставляется экземпляр &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt; &lt;code&gt;FieldFile&lt;/code&gt; &lt;/a&gt; в качестве прокси для доступа к базовому файлу.</target>
        </trans-unit>
        <trans-unit id="dc0ac3f13e1aec7fcfd479235a3a77f29f00d9f7" translate="yes" xml:space="preserve">
          <source>When you add new apps to &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, be sure to run &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;manage.py migrate&lt;/code&gt;&lt;/a&gt;, optionally making migrations for them first with &lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;manage.py makemigrations&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Когда вы добавляете новые приложения в &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; , обязательно запустите &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;manage.py migrate&lt;/code&gt; &lt;/a&gt; , при необходимости сначала &lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;manage.py makemigrations&lt;/code&gt; &lt;/a&gt; для них миграцию с makemigrations manage.py .</target>
        </trans-unit>
        <trans-unit id="05bdc601159ef086a6a2da8c8b09a881b7c7ec48" translate="yes" xml:space="preserve">
          <source>When you are filtering an object based on a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; or a reverse &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, there are two different sorts of filter you may be interested in. Consider the &lt;code&gt;Blog&lt;/code&gt;/&lt;code&gt;Entry&lt;/code&gt; relationship (&lt;code&gt;Blog&lt;/code&gt; to &lt;code&gt;Entry&lt;/code&gt; is a one-to-many relation). We might be interested in finding blogs that have an entry which has both &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline and was published in 2008. Or we might want to find blogs that have an entry with &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline as well as an entry that was published in 2008. Since there are multiple entries associated with a single &lt;code&gt;Blog&lt;/code&gt;, both of these queries are possible and make sense in some situations.</source>
          <target state="translated">При фильтрации объекта , основанный на &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; или обратного &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , есть два различных вида фильтра вы можете быть заинтересованы в. Рассмотрим &lt;code&gt;Blog&lt;/code&gt; / &lt;code&gt;Entry&lt;/code&gt; отношения ( &lt;code&gt;Blog&lt;/code&gt; на &lt;code&gt;Entry&lt;/code&gt; является один-ко-многим). Возможно, нам будет интересно найти блоги, в которых есть запись с заголовком &lt;em&gt;&amp;laquo;Lennon&amp;raquo;&lt;/em&gt; и опубликованная в 2008 году. Или мы можем захотеть найти блоги с заголовком &lt;em&gt;&amp;laquo;Lennon&amp;raquo;&lt;/em&gt; в заголовке, а также запись, которая был опубликован в 2008 году. Так как есть несколько записей, связанных с одним &lt;code&gt;Blog&lt;/code&gt; Оба эти запроса возможны и имеют смысл в некоторых ситуациях.</target>
        </trans-unit>
        <trans-unit id="2bb3744667ab0bd820ede55958cf3ee20aeeb823" translate="yes" xml:space="preserve">
          <source>When you are sufficiently confident your app works with the new version of Django, you&amp;rsquo;re ready to go ahead and &lt;a href=&quot;deployment/index&quot;&gt;deploy&lt;/a&gt; your upgraded Django project.</source>
          <target state="translated">Когда вы достаточно уверены, что ваше приложение работает с новой версией Django, вы готовы приступить к &lt;a href=&quot;deployment/index&quot;&gt;развертыванию&lt;/a&gt; обновленного проекта Django.</target>
        </trans-unit>
        <trans-unit id="c6e10bd215d5b8ce88fe2d29e14f0c3c51b28b17" translate="yes" xml:space="preserve">
          <source>When you are using management commands and wish to provide console output, you should write to &lt;code&gt;self.stdout&lt;/code&gt; and &lt;code&gt;self.stderr&lt;/code&gt;, instead of printing to &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; directly. By using these proxies, it becomes much easier to test your custom command. Note also that you don&amp;rsquo;t need to end messages with a newline character, it will be added automatically, unless you specify the &lt;code&gt;ending&lt;/code&gt; parameter:</source>
          <target state="translated">Когда вы используете команды управления и хотите предоставить консольный вывод, вы должны писать в &lt;code&gt;self.stdout&lt;/code&gt; и &lt;code&gt;self.stderr&lt;/code&gt; вместо прямой печати в &lt;code&gt;stdout&lt;/code&gt; и &lt;code&gt;stderr&lt;/code&gt; . Используя эти прокси, становится намного проще протестировать вашу пользовательскую команду. Также обратите внимание, что вам не нужно заканчивать сообщения символом новой строки, он будет добавлен автоматически, если вы не укажете &lt;code&gt;ending&lt;/code&gt; параметр:</target>
        </trans-unit>
        <trans-unit id="13a5871d21107a4b7e9f3e5a544e075155803d54" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt;&lt;code&gt;logout()&lt;/code&gt;&lt;/a&gt;, the session data for the current request is completely cleaned out. All existing data is removed. This is to prevent another person from using the same Web browser to log in and have access to the previous user&amp;rsquo;s session data. If you want to put anything into the session that will be available to the user immediately after logging out, do that &lt;em&gt;after&lt;/em&gt; calling &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt;&lt;code&gt;django.contrib.auth.logout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Когда вы вызываете &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt; &lt;code&gt;logout()&lt;/code&gt; &lt;/a&gt; , данные сеанса для текущего запроса полностью очищаются. Все существующие данные удалены. Это сделано для того, чтобы другой человек не мог использовать тот же веб-браузер для входа в систему и доступа к данным сеанса предыдущего пользователя. Если вы хотите поместить в сеанс что-либо, что будет доступно пользователю сразу после выхода из системы, сделайте это &lt;em&gt;после&lt;/em&gt; вызова &lt;a href=&quot;#django.contrib.auth.logout&quot;&gt; &lt;code&gt;django.contrib.auth.logout()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bec01b982f14d8fad8b76498a9eab958a614445" translate="yes" xml:space="preserve">
          <source>When you change running code that uses cached values, you may need to purge any existing cached values. The easiest way to do this is to flush the entire cache, but this can lead to the loss of cache values that are still valid and useful.</source>
          <target state="translated">При изменении запущенного кода,использующего кэшированные значения,вам может потребоваться очистить любые существующие кэшированные значения.Самый простой способ сделать это-это очистить весь кэш,но это может привести к потере значений кэша,которые все еще действительны и полезны.</target>
        </trans-unit>
        <trans-unit id="cd67ab6234d346eaeaed46a1d06b46d489bb1f53" translate="yes" xml:space="preserve">
          <source>When you create a &lt;code&gt;Form&lt;/code&gt; class, the most important part is defining the fields of the form. Each field has custom validation logic, along with a few other hooks.</source>
          <target state="translated">Когда вы создаете класс &lt;code&gt;Form&lt;/code&gt; , наиболее важной частью является определение полей формы. Каждое поле имеет собственную логику проверки, а также несколько других хуков.</target>
        </trans-unit>
        <trans-unit id="62699cdc477b72bf29185c2621e68c12d5731c36" translate="yes" xml:space="preserve">
          <source>When you create a new Django project using &lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;settings.py&lt;/code&gt; file is generated automatically and gets a random &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; value. This value is the key to securing signed data &amp;ndash; it is vital you keep this secure, or attackers could use it to generate their own signed values.</source>
          <target state="translated">Когда вы создаете новый проект Django с помощью &lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; &lt;/a&gt; , файл &lt;code&gt;settings.py&lt;/code&gt; генерируется автоматически и получает случайное значение &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; . Это значение является ключом к защите подписанных данных - крайне важно, чтобы вы сохранили это в безопасности, иначе злоумышленники могут использовать его для создания собственных подписанных значений.</target>
        </trans-unit>
        <trans-unit id="bca3a3d8e3eff409b97b0a424c72b4825c199f0b" translate="yes" xml:space="preserve">
          <source>When you define a foreign key or many-to-many relations to the user model, you should specify the custom model using the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting. For example:</source>
          <target state="translated">Когда вы определяете внешний ключ или отношения &amp;laquo;многие ко многим&amp;raquo; с пользовательской моделью, вы должны указать пользовательскую модель, используя параметр &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="9abada09ee2a7643acb0f50bc1fb14cfd3361323" translate="yes" xml:space="preserve">
          <source>When you define a relationship in a model (i.e., a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;), instances of that model will have a convenient API to access the related object(s).</source>
          <target state="translated">Когда вы определяете отношение в модели (например, &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; ), экземпляры этой модели будут иметь удобный API для доступа к связанным объектам.</target>
        </trans-unit>
        <trans-unit id="7ade15602eb4613839e7423bc150952f40c614a7" translate="yes" xml:space="preserve">
          <source>When you enable time zone support, Django converts aware datetime objects to the &lt;a href=&quot;#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; when they&amp;rsquo;re rendered in templates. This behaves very much like &lt;a href=&quot;formatting&quot;&gt;format localization&lt;/a&gt;.</source>
          <target state="translated">Когда вы активируете поддержку часовых поясов, Django преобразует осведомленные объекты даты и &lt;a href=&quot;#default-current-time-zone&quot;&gt;времени&lt;/a&gt; в текущий часовой пояс, когда они отображаются в шаблонах. Это ведет себя очень похоже на &lt;a href=&quot;formatting&quot;&gt;локализацию формата&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="598f93cd4b390f62ed8759df4ec3a5b17c146572" translate="yes" xml:space="preserve">
          <source>When you enable time zone support, Django interprets datetimes entered in forms in the &lt;a href=&quot;#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; and returns aware datetime objects in &lt;code&gt;cleaned_data&lt;/code&gt;.</source>
          <target state="translated">Когда вы включаете поддержку часового пояса, Django интерпретирует даты и время, введенные в формы в &lt;a href=&quot;#default-current-time-zone&quot;&gt;текущем часовом поясе,&lt;/a&gt; и возвращает осведомленные объекты даты и времени в &lt;code&gt;cleaned_data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fab0c6ca61f7627dd8debe13e56e6873302f94fe" translate="yes" xml:space="preserve">
          <source>When you enable time zone support, you&amp;rsquo;ll encounter some errors because you&amp;rsquo;re using naive datetimes where Django expects aware datetimes. Such errors show up when running tests. You&amp;rsquo;ll quickly learn how to avoid invalid operations.</source>
          <target state="translated">Когда вы включаете поддержку часовых поясов, вы сталкиваетесь с некоторыми ошибками, потому что вы используете наивные даты и времени, когда Django ожидает осведомленные даты и времени. Такие ошибки появляются при запуске тестов. Вы быстро научитесь избегать недопустимых операций.</target>
        </trans-unit>
        <trans-unit id="908372df97d370c7f6d4a09588cd8addd7a6a6b7" translate="yes" xml:space="preserve">
          <source>When you explicitly instantiate a form field like this, it is important to understand how &lt;code&gt;ModelForm&lt;/code&gt; and regular &lt;code&gt;Form&lt;/code&gt; are related.</source>
          <target state="translated">Когда вы явно создаете экземпляр поля формы, подобного этому, важно понимать, как связаны между собой &lt;code&gt;ModelForm&lt;/code&gt; и обычная &lt;code&gt;Form&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd574b531e6529e9b4c184f74475a8c8c6784da6" translate="yes" xml:space="preserve">
          <source>When you have a lot of objects, the caching behavior of the &lt;code&gt;QuerySet&lt;/code&gt; can cause a large amount of memory to be used. In this case, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.iterator&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; may help.</source>
          <target state="translated">Когда у вас много объектов, поведение &lt;code&gt;QuerySet&lt;/code&gt; при кэшировании может привести к использованию большого объема памяти. В этом случае &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.iterator&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; может помочь.</target>
        </trans-unit>
        <trans-unit id="0c88a75a0c21033676606747fa8679b116580319" translate="yes" xml:space="preserve">
          <source>When you have both &lt;code&gt;django.contrib.admin&lt;/code&gt; and &lt;code&gt;django.contrib.auth&lt;/code&gt; installed, the admin provides a convenient way to view and manage users, groups, and permissions. Users can be created and deleted like any Django model. Groups can be created, and permissions can be assigned to users or groups. A log of user edits to models made within the admin is also stored and displayed.</source>
          <target state="translated">Если у вас установлены &lt;code&gt;django.contrib.admin&lt;/code&gt; и &lt;code&gt;django.contrib.auth&lt;/code&gt; , администратор предоставляет удобный способ просмотра и управления пользователями, группами и разрешениями. Пользователи могут быть созданы и удалены как любая модель Django. Группы могут быть созданы, и разрешения могут быть назначены пользователям или группам. Журнал пользовательских изменений в моделях, сделанных администратором, также сохраняется и отображается</target>
        </trans-unit>
        <trans-unit id="e94a3a25595772d6e02a2dd78870a98c685517b6" translate="yes" xml:space="preserve">
          <source>When you have enabled formatting with &lt;a href=&quot;../../ref/settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt;, Django will try to use a locale specific format whenever it outputs a value in a template.</source>
          <target state="translated">Когда вы включили форматирование с помощью &lt;a href=&quot;../../ref/settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; &lt;/a&gt; , Django будет пытаться использовать специфичный для локали формат всякий раз, когда выводит значение в шаблоне.</target>
        </trans-unit>
        <trans-unit id="0fb7161ed8a685fcfe3894909e8331cb64746c13" translate="yes" xml:space="preserve">
          <source>When you have more than one foreign key on an intermediary model to any (or even both) of the models participating in a many-to-many relationship, you &lt;em&gt;must&lt;/em&gt; specify &lt;code&gt;through_fields&lt;/code&gt;. This also applies to &lt;a href=&quot;#recursive-relationships&quot;&gt;recursive relationships&lt;/a&gt; when an intermediary model is used and there are more than two foreign keys to the model, or you want to explicitly specify which two Django should use.</source>
          <target state="translated">Если у вас есть более одного внешнего ключа в промежуточной модели для любой (или даже обеих) моделей, участвующих в отношении многие-ко-многим, вы &lt;em&gt;должны&lt;/em&gt; указать &lt;code&gt;through_fields&lt;/code&gt; . Это также применимо к &lt;a href=&quot;#recursive-relationships&quot;&gt;рекурсивным отношениям,&lt;/a&gt; когда используется промежуточная модель и существует более двух внешних ключей для модели, или вы хотите явно указать, какие два Django следует использовать.</target>
        </trans-unit>
        <trans-unit id="ef917a0760350a205f29f49f83a0fa869ef77e5e" translate="yes" xml:space="preserve">
          <source>When you interrogate the &lt;code&gt;media&lt;/code&gt; attribute of a widget or form, the value that is returned is a &lt;code&gt;forms.Media&lt;/code&gt; object. As we have already seen, the string representation of a &lt;code&gt;Media&lt;/code&gt; object is the HTML required to include the relevant files in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; block of your HTML page.</source>
          <target state="translated">Когда вы &lt;code&gt;forms.Media&lt;/code&gt; атрибут &lt;code&gt;media&lt;/code&gt; виджета или формы, возвращаемое значение является объектом forms.Media . Как мы уже видели, строковое представление объекта &lt;code&gt;Media&lt;/code&gt; - это HTML-код, необходимый для включения соответствующих файлов в блок &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; вашей HTML-страницы.</target>
        </trans-unit>
        <trans-unit id="92eff6980ce197131f0e2a5fe9daf993ede549cf" translate="yes" xml:space="preserve">
          <source>When you load a custom tag or filter library, the tags/filters are only made available to the current template &amp;ndash; not any parent or child templates along the template-inheritance path.</source>
          <target state="translated">Когда вы загружаете пользовательский тег или библиотеку фильтров, теги / фильтры становятся доступными только для текущего шаблона, но не для любых родительских или дочерних шаблонов по пути наследования шаблонов.</target>
        </trans-unit>
        <trans-unit id="f8c9cfe0a0e3db566ebf271f111b2fee63c340fd" translate="yes" xml:space="preserve">
          <source>When you loop over the list of messages in a template, what you get are instances of the &lt;code&gt;Message&lt;/code&gt; class. They have only a few attributes:</source>
          <target state="translated">Когда вы перебираете список сообщений в шаблоне, вы получаете экземпляры класса &lt;code&gt;Message&lt;/code&gt; . У них есть только несколько атрибутов:</target>
        </trans-unit>
        <trans-unit id="aef5dfe6d6895debd3712fd7bafda94fb0e9884c" translate="yes" xml:space="preserve">
          <source>When you manually render the forms yourself, be sure to render the management form as shown above. See the &lt;a href=&quot;formsets#understanding-the-managementform&quot;&gt;management form documentation&lt;/a&gt;.</source>
          <target state="translated">Когда вы вручную визуализируете формы, не забудьте отобразить форму управления, как показано выше. Смотрите &lt;a href=&quot;formsets#understanding-the-managementform&quot;&gt;документацию формы управления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3872769f2c93a112fe1c0dc5bdc7dde36a6b5fc" translate="yes" xml:space="preserve">
          <source>When you need more fine-grained control you may use per-view conditional processing functions.</source>
          <target state="translated">При необходимости более тонкого управления можно использовать функции условной обработки для каждого вида.</target>
        </trans-unit>
        <trans-unit id="a7dbc3600068917a2ca0ed37381dd462dde39596" translate="yes" xml:space="preserve">
          <source>When you only care if something happened in a particular year, hour, or day, but not the exact second, then &lt;code&gt;Trunc&lt;/code&gt; (and its subclasses) can be useful to filter or aggregate your data. For example, you can use &lt;code&gt;Trunc&lt;/code&gt; to calculate the number of sales per day.</source>
          <target state="translated">Если вам важно только, если что-то произошло в конкретный год, час или день, но не с точностью до секунды, то &lt;code&gt;Trunc&lt;/code&gt; (и его подклассы) может быть полезен для фильтрации или агрегирования ваших данных. Например, вы можете использовать &lt;code&gt;Trunc&lt;/code&gt; для расчета количества продаж в день.</target>
        </trans-unit>
        <trans-unit id="6a70ca33ccd762221c87694d4464849c2dccaf63" translate="yes" xml:space="preserve">
          <source>When you only want a &lt;code&gt;dict&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; of values, and don&amp;rsquo;t need ORM model objects, make appropriate usage of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;. These can be useful for replacing model objects in template code - as long as the dicts you supply have the same attributes as those used in the template, you are fine.</source>
          <target state="translated">Если вам нужен только &lt;code&gt;dict&lt;/code&gt; или &lt;code&gt;list&lt;/code&gt; значений, и вам не нужны объекты модели ORM, используйте соответствующие &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; . Они могут быть полезны для замены объектов модели в коде шаблона - если у предоставленных вами кодов есть те же атрибуты, что и в шаблоне, у вас все в порядке.</target>
        </trans-unit>
        <trans-unit id="edf48e7a2c9121d0da51134dbb9264c7da638bba" translate="yes" xml:space="preserve">
          <source>When you put &lt;code&gt;'django.contrib.admin'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting, Django automatically looks for an &lt;code&gt;admin&lt;/code&gt; module in each application and imports it.</source>
          <target state="translated">Когда вы устанавливаете &lt;code&gt;'django.contrib.admin'&lt;/code&gt; в настройке &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; , Django автоматически ищет модуль &lt;code&gt;admin&lt;/code&gt; в каждом приложении и импортирует его.</target>
        </trans-unit>
        <trans-unit id="fe4cbecc6de5bd6c365bb7d2a9ac544dac1bbf74" translate="yes" xml:space="preserve">
          <source>When you raise &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; from within a view, Django loads a special view devoted to handling 404 errors. By default, it&amp;rsquo;s the view &lt;a href=&quot;#django.views.defaults.page_not_found&quot;&gt;&lt;code&gt;django.views.defaults.page_not_found()&lt;/code&gt;&lt;/a&gt;, which either produces a &amp;ldquo;Not Found&amp;rdquo; message or loads and renders the template &lt;code&gt;404.html&lt;/code&gt; if you created it in your root template directory.</source>
          <target state="translated">Когда вы поднимаете &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt; изнутри представления, Django загружает специальное представление, посвященное обработке 404 ошибок. По умолчанию это представление &lt;a href=&quot;#django.views.defaults.page_not_found&quot;&gt; &lt;code&gt;django.views.defaults.page_not_found()&lt;/code&gt; &lt;/a&gt; , которое либо создает сообщение &amp;laquo;Not Found&amp;raquo;, либо загружает и отображает шаблон &lt;code&gt;404.html&lt;/code&gt; , если вы создали его в корневом каталоге шаблонов.</target>
        </trans-unit>
        <trans-unit id="3c0ada4cfb5c18cee99b9189a8d71873f89eb3ce" translate="yes" xml:space="preserve">
          <source>When you return an error such as &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotFound&quot;&gt;&lt;code&gt;HttpResponseNotFound&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;re responsible for defining the HTML of the resulting error page:</source>
          <target state="translated">Когда вы возвращаете ошибку, такую ​​как &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseNotFound&quot;&gt; &lt;code&gt;HttpResponseNotFound&lt;/code&gt; &lt;/a&gt; , вы несете ответственность за определение HTML-кода полученной страницы ошибки:</target>
        </trans-unit>
        <trans-unit id="8ccf29e4ae1a45b659be60303b8ce7fdddcfb2c2" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;./manage.py test&lt;/code&gt;, Django looks at the &lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; setting to determine what to do. By default, &lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; points to &lt;code&gt;'django.test.runner.DiscoverRunner'&lt;/code&gt;. This class defines the default Django testing behavior. This behavior involves:</source>
          <target state="translated">Когда вы запускаете &lt;code&gt;./manage.py test&lt;/code&gt; , Джанго просматривает настройку &lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt; &lt;code&gt;TEST_RUNNER&lt;/code&gt; ,&lt;/a&gt; чтобы определить, что делать. По умолчанию &lt;a href=&quot;../../ref/settings#std:setting-TEST_RUNNER&quot;&gt; &lt;code&gt;TEST_RUNNER&lt;/code&gt; &lt;/a&gt; указывает на &lt;code&gt;'django.test.runner.DiscoverRunner'&lt;/code&gt; . Этот класс определяет стандартное поведение тестирования Django. Такое поведение включает в себя:</target>
        </trans-unit>
        <trans-unit id="a2d39420cf515d7fec774896f9e595c93550c39a" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;makemessages&lt;/code&gt; from the root directory of your project, the extracted strings will be automatically distributed to the proper message files. That is, a string extracted from a file of an app containing a &lt;code&gt;locale&lt;/code&gt; directory will go in a message file under that directory. A string extracted from a file of an app without any &lt;code&gt;locale&lt;/code&gt; directory will either go in a message file under the directory listed first in &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; or will generate an error if &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="translated">Когда вы запускаете &lt;code&gt;makemessages&lt;/code&gt; из корневого каталога вашего проекта, извлеченные строки будут автоматически распределены в соответствующие файлы сообщений. То есть строка, извлеченная из файла приложения, содержащего каталог &lt;code&gt;locale&lt;/code&gt; будет помещена в файл сообщений в этом каталоге. Строка, извлеченная из файла приложения без какого-либо &lt;code&gt;locale&lt;/code&gt; каталога, будет либо помещена в файл сообщений в каталоге, указанном первым в &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; ,&lt;/a&gt; либо выдаст ошибку, если &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt; будет пустым.</target>
        </trans-unit>
        <trans-unit id="94c63f9fa31d5b90afb9266d77802185ba9ffee5" translate="yes" xml:space="preserve">
          <source>When you run migrations, Django is working from historical versions of your models stored in the migration files. If you write Python code using the &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operation, or if you have &lt;code&gt;allow_migrate&lt;/code&gt; methods on your database routers, you &lt;strong&gt;need to use&lt;/strong&gt; these historical model versions rather than importing them directly.</source>
          <target state="translated">Когда вы запускаете миграции, Django работает с историческими версиями ваших моделей, хранящимися в файлах миграции. Если вы пишете код Python с использованием операции &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; или если у вас есть методы &lt;code&gt;allow_migrate&lt;/code&gt; на ваших маршрутизаторах базы данных, вам &lt;strong&gt;нужно использовать&lt;/strong&gt; эти версии исторических моделей, а не импортировать их напрямую.</target>
        </trans-unit>
        <trans-unit id="eef43b49ed5faa6b2a2a01758940feaac11b71b5" translate="yes" xml:space="preserve">
          <source>When you run your tests, you&amp;rsquo;ll see a number of messages as the test runner prepares itself. You can control the level of detail of these messages with the &lt;code&gt;verbosity&lt;/code&gt; option on the command line:</source>
          <target state="translated">Когда вы запустите свои тесты, вы увидите несколько сообщений по мере того, как организатор подготовит себя. Вы можете контролировать уровень детализации этих сообщений с помощью параметра &lt;code&gt;verbosity&lt;/code&gt; в командной строке:</target>
        </trans-unit>
        <trans-unit id="f1fe5466a06d0a950808ef949155df4e132681d6" translate="yes" xml:space="preserve">
          <source>When you save an object, Django performs the following steps:</source>
          <target state="translated">При сохранении объекта Django выполняет следующие действия:</target>
        </trans-unit>
        <trans-unit id="a72aaef0ac9be0d03bc03e6e5684667b83be8c40" translate="yes" xml:space="preserve">
          <source>When you set up the intermediary model, you explicitly specify foreign keys to the models that are involved in the many-to-many relationship. This explicit declaration defines how the two models are related.</source>
          <target state="translated">При настройке посреднической модели вы явно указываете внешние ключи к моделям,которые участвуют в много-многочисленных отношениях.Это явное заявление определяет,как эти две модели связаны.</target>
        </trans-unit>
        <trans-unit id="af78f5580f1c6e3cbdeed59306a9995f7b05165d" translate="yes" xml:space="preserve">
          <source>When you specify an intermediary model using the &lt;code&gt;through&lt;/code&gt; argument to a &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, the admin will not display a widget by default. This is because each instance of that intermediary model requires more information than could be displayed in a single widget, and the layout required for multiple widgets will vary depending on the intermediate model.</source>
          <target state="translated">Когда вы указываете промежуточную модель, используя аргумент &lt;code&gt;through&lt;/code&gt; для &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; , администратор не будет отображать виджет по умолчанию. Это связано с тем, что для каждого экземпляра этой промежуточной модели требуется больше информации, чем может быть отображено в одном виджете, а компоновка, требуемая для нескольких виджетов, будет варьироваться в зависимости от промежуточной модели.</target>
        </trans-unit>
        <trans-unit id="e258e34f34049ccc90dc565864306d8cde3ec398" translate="yes" xml:space="preserve">
          <source>When you specify field names, you &lt;em&gt;must&lt;/em&gt; provide an &lt;code&gt;order_by()&lt;/code&gt; in the &lt;code&gt;QuerySet&lt;/code&gt;, and the fields in &lt;code&gt;order_by()&lt;/code&gt; must start with the fields in &lt;code&gt;distinct()&lt;/code&gt;, in the same order.</source>
          <target state="translated">Когда вы указываете имена полей, вы &lt;em&gt;должны&lt;/em&gt; предоставить &lt;code&gt;order_by()&lt;/code&gt; в &lt;code&gt;QuerySet&lt;/code&gt; , а поля в &lt;code&gt;order_by()&lt;/code&gt; должны начинаться с полей в &lt;code&gt;distinct()&lt;/code&gt; в том же порядке.</target>
        </trans-unit>
        <trans-unit id="d06c1cbf4db99bb2919956dcde83a74e905e5efd" translate="yes" xml:space="preserve">
          <source>When you start the server, and each time you change Python code while the server is running, the system check framework will check your entire Django project for some common errors (see the &lt;a href=&quot;#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; command). If any errors are found, they will be printed to standard output.</source>
          <target state="translated">Когда вы запускаете сервер и каждый раз, когда вы изменяете код Python во время его работы, система проверки системы будет проверять весь ваш проект Django на наличие распространенных ошибок (см. &lt;a href=&quot;#django-admin-check&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt; ). Если обнаружены какие-либо ошибки, они будут распечатаны на стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="85b733e2e5bceac5a30d09d4c8bd885c451ac3b3" translate="yes" xml:space="preserve">
          <source>When you start your project with a custom user model, stop to consider if this is the right choice for your project.</source>
          <target state="translated">Когда вы начинаете свой проект с пользовательской модели,остановитесь,чтобы подумать,является ли это правильным выбором для вашего проекта.</target>
        </trans-unit>
        <trans-unit id="fb58eb9d111d65c5931d5b8864ba414d93ee767f" translate="yes" xml:space="preserve">
          <source>When you subclass a custom &lt;code&gt;Form&lt;/code&gt; class, the resulting subclass will include all fields of the parent class(es), followed by the fields you define in the subclass.</source>
          <target state="translated">Когда вы создаете подкласс пользовательского класса &lt;code&gt;Form&lt;/code&gt; , результирующий подкласс будет включать все поля родительского (ых) класса (ов), а затем поля, которые вы определили в подклассе.</target>
        </trans-unit>
        <trans-unit id="26631416795e892a2a8c86d97764f07642fd08ab" translate="yes" xml:space="preserve">
          <source>When you supply &lt;code&gt;None&lt;/code&gt; as a value for an app, Django will consider the app as an app without migrations regardless of an existing &lt;code&gt;migrations&lt;/code&gt; submodule. This can be used, for example, in a test settings file to skip migrations while testing (tables will still be created for the apps&amp;rsquo; models). If this is used in your general project settings, remember to use the &lt;a href=&quot;django-admin#cmdoption-migrate-run-syncdb&quot;&gt;&lt;code&gt;migrate
--run-syncdb&lt;/code&gt;&lt;/a&gt; option if you want to create tables for the app.</source>
          <target state="translated">Когда вы предоставляете &lt;code&gt;None&lt;/code&gt; в качестве значения для приложения, Django будет рассматривать приложение как приложение без миграций, независимо от существующего субмодуля &lt;code&gt;migrations&lt;/code&gt; . Это можно использовать, например, в файле настроек теста, чтобы пропустить миграции во время тестирования (таблицы все еще будут создаваться для моделей приложений). Если это используется в ваших общих настройках проекта, не забудьте использовать &lt;a href=&quot;django-admin#cmdoption-migrate-run-syncdb&quot;&gt; &lt;code&gt;migrate --run-syncdb&lt;/code&gt; &lt;/a&gt; если вы хотите создать таблицы для приложения.</target>
        </trans-unit>
        <trans-unit id="b4459c991a14a4fa100615fdfbd04759a6bbdda7" translate="yes" xml:space="preserve">
          <source>When you try to load this serialized data, Django will use the &lt;code&gt;get_by_natural_key()&lt;/code&gt; method to resolve &lt;code&gt;[&quot;Douglas&quot;, &quot;Adams&quot;]&lt;/code&gt; into the primary key of an actual &lt;code&gt;Person&lt;/code&gt; object.</source>
          <target state="translated">Когда вы попытаетесь загрузить эти сериализованные данные, Django будет использовать метод &lt;code&gt;get_by_natural_key()&lt;/code&gt; для преобразования &lt;code&gt;[&quot;Douglas&quot;, &quot;Adams&quot;]&lt;/code&gt; в первичный ключ фактического объекта &lt;code&gt;Person&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47293a3da91bf58fd7984d1ea135728a3931013e" translate="yes" xml:space="preserve">
          <source>When you use Django&amp;rsquo;s rendering shortcuts, CSS classes are used to indicate required form fields or fields that contain errors. If you&amp;rsquo;re manually rendering a form, you can access these CSS classes using the &lt;code&gt;css_classes&lt;/code&gt; method:</source>
          <target state="translated">Когда вы используете ярлыки рендеринга Django, классы CSS используются для указания обязательных полей формы или полей, которые содержат ошибки. Если вы вручную визуализируете форму, вы можете получить доступ к этим классам CSS с &lt;code&gt;css_classes&lt;/code&gt; метода css_classes :</target>
        </trans-unit>
        <trans-unit id="5ae280409351d91e2dda0008e83557801d8d50a6" translate="yes" xml:space="preserve">
          <source>When you use Django, you have to tell it which settings you&amp;rsquo;re using. Do this by using an environment variable, &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;.</source>
          <target state="translated">Когда вы используете Django, вы должны сообщить ему, какие настройки вы используете. Сделайте это с помощью переменной среды &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54667b9197575a345cb73b4665c2d6cf36f5c3a7" translate="yes" xml:space="preserve">
          <source>When you use a &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, the call to &lt;a href=&quot;../forms/api#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; will perform these validation steps for all the fields that are included on the form. See the &lt;a href=&quot;../../topics/forms/modelforms&quot;&gt;ModelForm documentation&lt;/a&gt; for more information. You should only need to call a model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;full_clean()&lt;/code&gt;&lt;/a&gt; method if you plan to handle validation errors yourself, or if you have excluded fields from the &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; that require validation.</source>
          <target state="translated">Когда вы используете &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; , вызов &lt;a href=&quot;../forms/api#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt; будет выполнять эти шаги проверки для всех полей, которые включены в форму. См. &lt;a href=&quot;../../topics/forms/modelforms&quot;&gt;Документацию ModelForm&lt;/a&gt; для получения дополнительной информации. Вам следует вызывать метод &lt;a href=&quot;#django.db.models.Model.full_clean&quot;&gt; &lt;code&gt;full_clean()&lt;/code&gt; &lt;/a&gt; модели только в том случае, если вы планируете самостоятельно обрабатывать ошибки проверки или если вы исключили из &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; поля , требующие проверки.</target>
        </trans-unit>
        <trans-unit id="343ab00ce81ddd4fc99010180d70d7758bcb4fd1" translate="yes" xml:space="preserve">
          <source>When you use a &lt;a href=&quot;../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt;, Django provides a set of APIs you can use to deal with that file.</source>
          <target state="translated">Когда вы используете &lt;a href=&quot;../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; , Django предоставляет набор API, которые вы можете использовать для работы с этим файлом.</target>
        </trans-unit>
        <trans-unit id="8e89c93410c3cc7530bbaa3f04a9ad9466fbc95c" translate="yes" xml:space="preserve">
          <source>When you use a &lt;code&gt;FileField&lt;/code&gt; in a form, you must also remember to &lt;a href=&quot;api#binding-uploaded-files&quot;&gt;bind the file data to the form&lt;/a&gt;.</source>
          <target state="translated">Когда вы используете &lt;code&gt;FileField&lt;/code&gt; в форме, вы также должны помнить, чтобы &lt;a href=&quot;api#binding-uploaded-files&quot;&gt;связать данные файла с формой&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e10d7719c6936754850d348b5372edb2f6f6659" translate="yes" xml:space="preserve">
          <source>When you use a backend that lacks support for tablespaces, Django ignores all tablespace-related options.</source>
          <target state="translated">Когда вы используете бекенд,который не поддерживает табличные пространства,Django игнорирует все опции,связанные с табличными пространствами.</target>
        </trans-unit>
        <trans-unit id="46ea224f1406c5b2adedbe9bdf3d42ebade96a3e" translate="yes" xml:space="preserve">
          <source>When you use an &lt;code&gt;ImageField&lt;/code&gt; on a form, you must also remember to &lt;a href=&quot;api#binding-uploaded-files&quot;&gt;bind the file data to the form&lt;/a&gt;.</source>
          <target state="translated">Когда вы используете &lt;code&gt;ImageField&lt;/code&gt; в форме, вы также должны помнить, чтобы &lt;a href=&quot;api#binding-uploaded-files&quot;&gt;привязать данные файла к форме&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="320dbef19134d4c759b58f8b4e2879afff472b9c" translate="yes" xml:space="preserve">
          <source>When you use both the pluralization feature and bind values to local variables in addition to the counter value, keep in mind that the &lt;code&gt;blocktrans&lt;/code&gt; construct is internally converted to an &lt;code&gt;ngettext&lt;/code&gt; call. This means the same &lt;a href=&quot;#pluralization-var-notes&quot;&gt;notes regarding ngettext variables&lt;/a&gt; apply.</source>
          <target state="translated">Когда вы используете как функцию плюрализации, так и привязку значений к локальным переменным в дополнение к значению счетчика, имейте в виду, что конструкция &lt;code&gt;blocktrans&lt;/code&gt; внутренне преобразуется в вызов &lt;code&gt;ngettext&lt;/code&gt; . Это означает, что применяются те же &lt;a href=&quot;#pluralization-var-notes&quot;&gt;примечания относительно переменных ngettext&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cec8beaeb7e004da1aedec1b1e92232edc644827" translate="yes" xml:space="preserve">
          <source>When you use the subscript operator, the value that is returned is a new &lt;code&gt;Media&lt;/code&gt; object &amp;ndash; but one that only contains the media of interest.</source>
          <target state="translated">Когда вы используете оператор &amp;laquo;индекс&amp;raquo;, возвращаемое значение является новым объектом &lt;code&gt;Media&lt;/code&gt; , но содержит только интересующее вас содержимое.</target>
        </trans-unit>
        <trans-unit id="9a0e92cde80b807eb7a9e9e0771d2bded37c3ac6" translate="yes" xml:space="preserve">
          <source>When you want to update your copy of the Django source code, run the command &lt;code&gt;git pull&lt;/code&gt; from within the &lt;code&gt;django&lt;/code&gt; directory. When you do this, Git will download any changes.</source>
          <target state="translated">Если вы хотите обновить свою копию исходного кода Django, запустите команду &lt;code&gt;git pull&lt;/code&gt; из каталога &lt;code&gt;django&lt;/code&gt; . Когда вы сделаете это, Git загрузит все изменения.</target>
        </trans-unit>
        <trans-unit id="d79bb1dd55226df569404b8960a7a9b9783bcce1" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re comfortable with forms and generic views, read &lt;a href=&quot;tutorial05&quot;&gt;part 5 of this tutorial&lt;/a&gt; to learn about testing our polls app.</source>
          <target state="translated">Если вам удобны формы и общие представления, прочитайте &lt;a href=&quot;tutorial05&quot;&gt;часть 5 этого руководства,&lt;/a&gt; чтобы узнать о тестировании нашего приложения для опросов.</target>
        </trans-unit>
        <trans-unit id="fad2c62d53674683c06dec9c5bf83ecd5054b5a9" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re comfortable with testing Django views, read &lt;a href=&quot;tutorial06&quot;&gt;part 6 of this tutorial&lt;/a&gt; to learn about static files management.</source>
          <target state="translated">Когда вы освоите тестирование представлений Django, прочитайте &lt;a href=&quot;tutorial06&quot;&gt;часть 6 этого руководства,&lt;/a&gt; чтобы узнать об управлении статическими файлами.</target>
        </trans-unit>
        <trans-unit id="02ba9563b51cee67ba1ac84a5f027de0a6ad34d0" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re comfortable with the basic request and response flow, read &lt;a href=&quot;tutorial02&quot;&gt;part 2 of this tutorial&lt;/a&gt; to start working with the database.</source>
          <target state="translated">Когда вы освоитесь с базовым потоком запросов и ответов, прочитайте &lt;a href=&quot;tutorial02&quot;&gt;часть 2 этого руководства,&lt;/a&gt; чтобы начать работу с базой данных.</target>
        </trans-unit>
        <trans-unit id="2847bdcdd13b53e198bfb0e43eb37e646833d96e" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re comfortable with the models API and have familiarized yourself with the admin site, read &lt;a href=&quot;tutorial03&quot;&gt;part 3 of this tutorial&lt;/a&gt; to learn about how to add more views to our polls app.</source>
          <target state="translated">Если вы знакомы с API моделей и ознакомились с сайтом администратора, прочитайте &lt;a href=&quot;tutorial03&quot;&gt;часть 3 этого руководства,&lt;/a&gt; чтобы узнать, как добавить больше просмотров в наше приложение для опросов.</target>
        </trans-unit>
        <trans-unit id="01c3594bd85009815b256384c703ca67a84f2aca" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re comfortable with the static files, read &lt;a href=&quot;tutorial07&quot;&gt;part 7 of this tutorial&lt;/a&gt; to learn how to customize Django&amp;rsquo;s automatically-generated admin site.</source>
          <target state="translated">Когда вы освоитесь со статическими файлами, прочитайте &lt;a href=&quot;tutorial07&quot;&gt;часть 7 этого руководства,&lt;/a&gt; чтобы узнать, как настроить автоматически созданный административный сайт Django.</target>
        </trans-unit>
        <trans-unit id="72973a7865804a7a4621af28424b1d31d00fbb8c" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re comfortable with writing views, read &lt;a href=&quot;tutorial04&quot;&gt;part 4 of this tutorial&lt;/a&gt; to learn the basics about form processing and generic views.</source>
          <target state="translated">Когда вы освоите написание представлений, прочитайте &lt;a href=&quot;tutorial04&quot;&gt;часть 4 этого руководства,&lt;/a&gt; чтобы узнать основы обработки форм и общих представлений.</target>
        </trans-unit>
        <trans-unit id="fbb75eb0d1954df8a37938afb5b511b6709d1b34" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re done previewing the patch, hit the &lt;code&gt;q&lt;/code&gt; key to return to the command line. If the patch&amp;rsquo;s content looked okay, it&amp;rsquo;s time to commit the changes.</source>
          <target state="translated">Когда вы закончите предварительный просмотр патча, нажмите клавишу &lt;code&gt;q&lt;/code&gt; , чтобы вернуться в командную строку. Если содержимое патча выглядело нормально, пришло время зафиксировать изменения.</target>
        </trans-unit>
        <trans-unit id="cb5aebe1e169914842620064134dcff194307daf" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re only dealing with many-to-many relationships such as mixing and matching pizzas and toppings, a standard &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is all you need. However, sometimes you may need to associate data with the relationship between two models.</source>
          <target state="translated">Когда вы имеете дело только с отношениями &amp;laquo;многие ко многим&amp;raquo;, такими как смешивание и сопоставление пиццы и начинки, все, что вам нужно - это стандартный &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; . Однако иногда вам может потребоваться связать данные с отношениями между двумя моделями.</target>
        </trans-unit>
        <trans-unit id="6b910842b365f4ef062d98c3052e31a9f5a499e3" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re refactoring or modifying old code, you can use tests to ensure your changes haven&amp;rsquo;t affected your application&amp;rsquo;s behavior unexpectedly.</source>
          <target state="translated">Когда вы реорганизуете или изменяете старый код, вы можете использовать тесты, чтобы убедиться, что ваши изменения не повлияли на поведение вашего приложения неожиданно.</target>
        </trans-unit>
        <trans-unit id="0c1280baf245e43c78dd06873e878fcfc39d9796" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re running a public site you should always turn off the &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting. That will make your server run much faster, and will also prevent malicious users from seeing details of your application that can be revealed by the error pages.</source>
          <target state="translated">Когда вы работаете с общедоступным сайтом, вы всегда должны отключать настройку &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; . Это заставит ваш сервер работать намного быстрее, а также не позволит злоумышленникам увидеть детали вашего приложения, которые могут быть обнаружены на страницах ошибок.</target>
        </trans-unit>
        <trans-unit id="580f6ac8231fcd84a1ce95defb8bf88801dc4549" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re writing &lt;a href=&quot;../topics/testing/overview&quot;&gt;unit tests&lt;/a&gt; of how your views act with certain fixture data, you can use &lt;code&gt;testserver&lt;/code&gt; to interact with the views in a Web browser, manually.</source>
          <target state="translated">Когда вы пишете &lt;a href=&quot;../topics/testing/overview&quot;&gt;модульные тесты&lt;/a&gt; того, как ваши представления работают с определенными данными приборов, вы можете использовать &lt;code&gt;testserver&lt;/code&gt; для взаимодействия с представлениями в веб-браузере вручную.</target>
        </trans-unit>
        <trans-unit id="fef10092b9162f12e7aaaff9ca85a5ad4f067f84" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re writing new code, you can use tests to validate your code works as expected.</source>
          <target state="translated">Когда вы пишете новый код, вы можете использовать тесты для проверки правильности работы вашего кода.</target>
        </trans-unit>
        <trans-unit id="042cab17a1eeb5ea2febda688598424130e722fb" translate="yes" xml:space="preserve">
          <source>When your site is served via HTTPS, &lt;a href=&quot;csrf#using-csrf&quot;&gt;Django&amp;rsquo;s CSRF protection system&lt;/a&gt; requires the &lt;code&gt;Referer&lt;/code&gt; header to be present, so completely disabling the &lt;code&gt;Referer&lt;/code&gt; header will interfere with CSRF protection. To gain most of the benefits of disabling &lt;code&gt;Referer&lt;/code&gt; headers while also keeping CSRF protection, consider enabling only same-origin referrers.</source>
          <target state="translated">Когда ваш сайт обслуживается по HTTPS, &lt;a href=&quot;csrf#using-csrf&quot;&gt;система защиты CSRF Django&lt;/a&gt; требует наличия заголовка &lt;code&gt;Referer&lt;/code&gt; , поэтому полное отключение заголовка &lt;code&gt;Referer&lt;/code&gt; будет мешать защите CSRF. Чтобы получить большинство преимуществ от отключения заголовков &lt;code&gt;Referer&lt;/code&gt; , сохраняя при этом защиту CSRF, рассмотрите возможность включения только тех, кто ссылается на источник.</target>
        </trans-unit>
        <trans-unit id="41a1b057ed129ea2b16a82a687c98724e627a109" translate="yes" xml:space="preserve">
          <source>When your static files change, run &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; locally.</source>
          <target state="translated">Когда ваши статические файлы меняются, запускайте &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt; локально.</target>
        </trans-unit>
        <trans-unit id="45c377f3d9fd40ff822a8edf4c63ed50ee513ab4" translate="yes" xml:space="preserve">
          <source>Whenever Django encounters &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt;, it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing.</source>
          <target state="translated">Всякий раз, когда Django встречает &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; , он отсекает любую часть URL-адреса, совпадающую с этой точкой, и отправляет оставшуюся строку во включенный URLconf для дальнейшей обработки.</target>
        </trans-unit>
        <trans-unit id="e3acaace95a729cf5c4732c35daeb05acc2c33db" translate="yes" xml:space="preserve">
          <source>Whenever you call &lt;code&gt;only()&lt;/code&gt; it &lt;em&gt;replaces&lt;/em&gt; the set of fields to load immediately. The method&amp;rsquo;s name is mnemonic: &lt;strong&gt;only&lt;/strong&gt; those fields are loaded immediately; the remainder are deferred. Thus, successive calls to &lt;code&gt;only()&lt;/code&gt; result in only the final fields being considered:</source>
          <target state="translated">Всякий раз, когда вы вызываете &lt;code&gt;only()&lt;/code&gt; он &lt;em&gt;заменяет&lt;/em&gt; набор полей для немедленной загрузки. Имя метода мнемоническое: сразу загружаются &lt;strong&gt;только&lt;/strong&gt; эти поля; Остальные откладываются. Таким образом, последовательные вызовы &lt;code&gt;only()&lt;/code&gt; приводят только к рассмотрению последних полей:</target>
        </trans-unit>
        <trans-unit id="ce486967d039b16157c02bb77db966a70b5e85de" translate="yes" xml:space="preserve">
          <source>Whenever you instantiate a Django model, this signal is sent at the beginning of the model&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method.</source>
          <target state="translated">Всякий раз, когда вы создаете экземпляр модели Django, этот сигнал отправляется в начале метода модели &lt;code&gt;__init__()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d39ebfc1a10205b8f8d644a1e733171bb64aa708" translate="yes" xml:space="preserve">
          <source>Whenever you specify a field on a form, Django will use a default widget that is appropriate to the type of data that is to be displayed. To find which widget is used on which field, see the documentation about &lt;a href=&quot;fields#built-in-fields&quot;&gt;Built-in Field classes&lt;/a&gt;.</source>
          <target state="translated">Всякий раз, когда вы указываете поле в форме, Django будет использовать виджет по умолчанию, который соответствует типу данных, которые должны отображаться. Чтобы узнать, какой виджет используется в каком поле, см. Документацию о &lt;a href=&quot;fields#built-in-fields&quot;&gt;классах встроенных полей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a108e6c3153039f249b827a17bcf2c7807ed1fec" translate="yes" xml:space="preserve">
          <source>Whenever you use strings with Django &amp;ndash; e.g., in database lookups, template rendering or anywhere else &amp;ndash; you have two choices for encoding those strings. You can use normal strings or bytestrings (starting with a &amp;lsquo;b&amp;rsquo;).</source>
          <target state="translated">Всякий раз, когда вы используете строки с Django - например, при поиске в базе данных, рендеринге шаблона или где-либо еще - у вас есть два варианта кодирования этих строк. Вы можете использовать обычные строки или байтовые строки (начиная с 'b').</target>
        </trans-unit>
        <trans-unit id="ca97d1810905ddcb8ae8d76cc00f34b0b2ca2131" translate="yes" xml:space="preserve">
          <source>Where Django finds fixture files</source>
          <target state="translated">Где Django находит файлы исправлений</target>
        </trans-unit>
        <trans-unit id="94010e6a538a60d311f5adb37ade5382e690daae" translate="yes" xml:space="preserve">
          <source>Where a policy value is &lt;a href=&quot;https://w3c.github.io/webappsec-referrer-policy/#unknown-policy-values&quot;&gt;unknown&lt;/a&gt; by a user agent, it is possible to specify multiple policy values to provide a fallback. The last specified value that is understood takes precedence. To support this, an iterable or comma-separated string can be used with &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt;&lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если значение политики &lt;a href=&quot;https://w3c.github.io/webappsec-referrer-policy/#unknown-policy-values&quot;&gt;неизвестно&lt;/a&gt; пользовательскому агенту, можно указать несколько значений политики, чтобы обеспечить запасной вариант. Последнее указанное значение имеет приоритет. Для поддержки этого можно использовать итеративную или разделенную запятыми строку с &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt; &lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="780f84e301a5ebeb3673abac337d2b0138bd3137" translate="yes" xml:space="preserve">
          <source>Where are the Django source files?</source>
          <target state="translated">Где исходные файлы Django?</target>
        </trans-unit>
        <trans-unit id="7685279f988bf6123bde6b5dc74962ce5a36e12d" translate="yes" xml:space="preserve">
          <source>Where class-based views shine is when you want to do the same thing many times. Suppose you&amp;rsquo;re writing an API, and every view should return JSON instead of rendered HTML.</source>
          <target state="translated">Когда классовые представления сияют, когда вы хотите делать одно и то же много раз. Предположим, вы пишете API, и каждое представление должно возвращать JSON вместо отрисованного HTML.</target>
        </trans-unit>
        <trans-unit id="d0c426d912d6eedc61d6f9899f202e87d7ddd881" translate="yes" xml:space="preserve">
          <source>Where did the name of the &lt;code&gt;Person&lt;/code&gt; table come from in that example?</source>
          <target state="translated">Откуда произошло имя таблицы &lt;code&gt;Person&lt;/code&gt; в этом примере?</target>
        </trans-unit>
        <trans-unit id="b0c1451f3f33eafbd0ab7c1bb6ebc389f39f6c84" translate="yes" xml:space="preserve">
          <source>Where is the example template for &lt;code&gt;TodayArchiveView&lt;/code&gt;?</source>
          <target state="translated">Где пример шаблона для &lt;code&gt;TodayArchiveView&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="f83de26e3e6e554d8ceba88b133fdee619a077ed" translate="yes" xml:space="preserve">
          <source>Where should the tests live?</source>
          <target state="translated">Где должны жить тесты?</target>
        </trans-unit>
        <trans-unit id="cf3c0baf6f3077e94c2094d1f832fadd38c22a7d" translate="yes" xml:space="preserve">
          <source>Where should this code live?</source>
          <target state="translated">Где должен жить этот код?</target>
        </trans-unit>
        <trans-unit id="2225f87a5cff465efb1c6c4493b2a62111a8bb04" translate="yes" xml:space="preserve">
          <source>Where the band with index 2 (the third band) of the raster &lt;code&gt;rst&lt;/code&gt; would be used for the lookup.</source>
          <target state="translated">Там , где полоса с индексом 2 (третья зона) растрового &lt;code&gt;rst&lt;/code&gt; будет использоваться для поиска.</target>
        </trans-unit>
        <trans-unit id="df540ecbf7130c28a69b3c12a4be8490bf9f95e3" translate="yes" xml:space="preserve">
          <source>Where to get help:</source>
          <target state="translated">Где можно получить помощь:</target>
        </trans-unit>
        <trans-unit id="189ce02f5881b00551ca0b2dbffa725039792568" translate="yes" xml:space="preserve">
          <source>Where to look for more information.</source>
          <target state="translated">Где искать дополнительную информацию.</target>
        </trans-unit>
        <trans-unit id="f3b501e3a5bcdf22ce18908ca175fa2f182f4c67" translate="yes" xml:space="preserve">
          <source>Where uploaded data is stored</source>
          <target state="translated">Где хранятся загруженные данные</target>
        </trans-unit>
        <trans-unit id="31e7d6991b00103c12328287f6ea206aec25fa5d" translate="yes" xml:space="preserve">
          <source>Whereas indexing on a &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; will return the ring (a &lt;a href=&quot;#django.contrib.gis.geos.LinearRing&quot;&gt;&lt;code&gt;LinearRing&lt;/code&gt;&lt;/a&gt; object) corresponding to the index:</source>
          <target state="translated">Принимая во внимание, что индексирование в &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt; вернет кольцо ( объект &lt;a href=&quot;#django.contrib.gis.geos.LinearRing&quot;&gt; &lt;code&gt;LinearRing&lt;/code&gt; &lt;/a&gt; ), соответствующее индексу:</target>
        </trans-unit>
        <trans-unit id="91e37ed922bca17a11622976ca8b912c2e470d52" translate="yes" xml:space="preserve">
          <source>Whether or not you use &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; settings are required to render a complete web page.</source>
          <target state="translated">Независимо от того, используете ли вы &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt; , параметры &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; необходимы для отображения всей веб-страницы.</target>
        </trans-unit>
        <trans-unit id="51ca9c7926a06d52e6ad9a93a4aa5c48157b6617" translate="yes" xml:space="preserve">
          <source>Whether the engine should look for template source files inside installed applications.</source>
          <target state="translated">Должен ли движок искать исходные файлы шаблонов внутри установленных приложений.</target>
        </trans-unit>
        <trans-unit id="5e5dc8d3952e65b2b37c9e692e3be49baa61a4f7" translate="yes" xml:space="preserve">
          <source>Whether the redirect should be permanent. The only difference here is the HTTP status code returned. If &lt;code&gt;True&lt;/code&gt;, then the redirect will use status code 301. If &lt;code&gt;False&lt;/code&gt;, then the redirect will use status code 302. By default, &lt;code&gt;permanent&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Должен ли перенаправление быть постоянным. Единственная разница здесь - возвращенный код состояния HTTP. Если &amp;laquo; &lt;code&gt;True&lt;/code&gt; , то при перенаправлении будет использоваться код состояния 301. Если &amp;laquo; &lt;code&gt;False&lt;/code&gt; , то при перенаправлении будет использоваться код состояния 302. По умолчанию &amp;laquo; &lt;code&gt;permanent&lt;/code&gt; имеет значение &amp;laquo; &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a22136c5c2960531bad6b0dfc1ec8ea91904af8a" translate="yes" xml:space="preserve">
          <source>Whether to expire the session when the user closes their browser. See &lt;a href=&quot;../topics/http/sessions#browser-length-vs-persistent-sessions&quot;&gt;Browser-length sessions vs. persistent sessions&lt;/a&gt;.</source>
          <target state="translated">Истек ли сеанс, когда пользователь закрывает свой браузер. См. &lt;a href=&quot;../topics/http/sessions#browser-length-vs-persistent-sessions&quot;&gt;Сеансы длины браузера против постоянных сессий&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df058eca3aa2a9c32c28750652403ab4803691ba" translate="yes" xml:space="preserve">
          <source>Whether to pass along the GET query string to the new location. If &lt;code&gt;True&lt;/code&gt;, then the query string is appended to the URL. If &lt;code&gt;False&lt;/code&gt;, then the query string is discarded. By default, &lt;code&gt;query_string&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Передавать ли строку запроса GET на новое место. Если &lt;code&gt;True&lt;/code&gt; , тогда строка запроса добавляется к URL. Если &lt;code&gt;False&lt;/code&gt; , то строка запроса отбрасывается. По умолчанию &lt;code&gt;query_string&lt;/code&gt; имеет значение &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97a9a41da7d27933950a7e2459e0a281648069dc" translate="yes" xml:space="preserve">
          <source>Whether to prepend the &amp;ldquo;www.&amp;rdquo; subdomain to URLs that don&amp;rsquo;t have it. This is only used if &lt;a href=&quot;middleware#django.middleware.common.CommonMiddleware&quot;&gt;&lt;code&gt;CommonMiddleware&lt;/code&gt;&lt;/a&gt; is installed (see &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt;). See also &lt;a href=&quot;#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Стоит ли добавлять &amp;laquo;www&amp;raquo;? субдомен для URL, которые не имеют его. Это используется только если установлено &lt;a href=&quot;middleware#django.middleware.common.CommonMiddleware&quot;&gt; &lt;code&gt;CommonMiddleware&lt;/code&gt; &lt;/a&gt; (см. &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt; ). Смотрите также &lt;a href=&quot;#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="716428ff330d008de5a07326666ca451aeafcc56" translate="yes" xml:space="preserve">
          <source>Whether to save the session data on every request. If this is &lt;code&gt;False&lt;/code&gt; (default), then the session data will only be saved if it has been modified &amp;ndash; that is, if any of its dictionary values have been assigned or deleted. Empty sessions won&amp;rsquo;t be created, even if this setting is active.</source>
          <target state="translated">Сохранять ли данные сеанса по каждому запросу. Если это &lt;code&gt;False&lt;/code&gt; (по умолчанию), то данные сеанса будут сохраняться только в том случае, если они были изменены - то есть, если какое-либо из его значений словаря было назначено или удалено. Пустые сеансы не будут созданы, даже если этот параметр активен.</target>
        </trans-unit>
        <trans-unit id="c230afc77e4e2c048214892543e0e0dba92c74b2" translate="yes" xml:space="preserve">
          <source>Whether to send the SMTP &lt;code&gt;Date&lt;/code&gt; header of email messages in the local time zone (&lt;code&gt;True&lt;/code&gt;) or in UTC (&lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">Отправлять ли заголовок SMTP &lt;code&gt;Date&lt;/code&gt; сообщений электронной почты в местном часовом поясе ( &lt;code&gt;True&lt;/code&gt; ) или в формате UTC ( &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dc1e42b820954197897da57aa1029b7141d260e7" translate="yes" xml:space="preserve">
          <source>Whether to store the CSRF token in the user&amp;rsquo;s session instead of in a cookie. It requires the use of &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сохранять ли токен CSRF в сеансе пользователя, а не в файле cookie. Это требует использования &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c079c4554b51556bba08c60f024b5b03af786cb5" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;HttpOnly&lt;/code&gt; flag on the CSRF cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, client-side JavaScript will not be able to access the CSRF cookie.</source>
          <target state="translated">Использовать ли флаг &lt;code&gt;HttpOnly&lt;/code&gt; в файле cookie CSRF. Если для этого параметра установлено значение &lt;code&gt;True&lt;/code&gt; , JavaScript на стороне клиента не сможет получить доступ к файлу CSRF.</target>
        </trans-unit>
        <trans-unit id="c52d23d9b26da97c8d9f367babd5994ea5aa9437" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;HttpOnly&lt;/code&gt; flag on the language cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, client-side JavaScript will not be able to access the language cookie.</source>
          <target state="translated">Использовать ли флаг &lt;code&gt;HttpOnly&lt;/code&gt; для языкового файла cookie. Если для этого параметра установлено значение &lt;code&gt;True&lt;/code&gt; , JavaScript на стороне клиента не сможет получить доступ к языку cookie.</target>
        </trans-unit>
        <trans-unit id="b8860a37a8b105e05edd83dd377bca6f7ffd0838" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;HttpOnly&lt;/code&gt; flag on the session cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, client-side JavaScript will not be able to access the session cookie.</source>
          <target state="translated">Использовать ли флаг &lt;code&gt;HttpOnly&lt;/code&gt; в файле cookie сеанса. Если для этого параметра установлено значение &lt;code&gt;True&lt;/code&gt; , клиентский JavaScript не сможет получить доступ к куки-файлу сеанса.</target>
        </trans-unit>
        <trans-unit id="9aac0f8462dc8185262894647ee25cf268a09603" translate="yes" xml:space="preserve">
          <source>Whether to use a TLS (secure) connection when talking to the SMTP server. This is used for explicit TLS connections, generally on port 587. If you are experiencing hanging connections, see the implicit TLS setting &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt;&lt;code&gt;EMAIL_USE_SSL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Использовать ли TLS (безопасное) соединение при общении с SMTP-сервером. Это используется для явных соединений TLS, обычно через порт 587. Если вы испытываете зависание соединений, посмотрите неявную настройку TLS &lt;a href=&quot;#std:setting-EMAIL_USE_SSL&quot;&gt; &lt;code&gt;EMAIL_USE_SSL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c261409dce3008d3b091919da390431f4ea6ea8c" translate="yes" xml:space="preserve">
          <source>Whether to use a secure cookie for the CSRF cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, the cookie will be marked as &amp;ldquo;secure&amp;rdquo;, which means browsers may ensure that the cookie is only sent with an HTTPS connection.</source>
          <target state="translated">Использовать ли безопасный файл cookie для файла CSRF. Если для этого параметра установлено значение &lt;code&gt;True&lt;/code&gt; , файл cookie будет помечен как &amp;laquo;безопасный&amp;raquo;, что означает, что браузеры могут гарантировать, что файл cookie отправляется только с подключением HTTPS.</target>
        </trans-unit>
        <trans-unit id="79c300f0f514e3c7ea395168f8c1c50973a04964" translate="yes" xml:space="preserve">
          <source>Whether to use a secure cookie for the language cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, the cookie will be marked as &amp;ldquo;secure&amp;rdquo;, which means browsers may ensure that the cookie is only sent under an HTTPS connection.</source>
          <target state="translated">Использовать ли безопасный cookie для языкового cookie. Если для этого параметра установлено значение &lt;code&gt;True&lt;/code&gt; , файл cookie будет помечен как &amp;laquo;безопасный&amp;raquo;, что означает, что браузеры могут гарантировать, что файл cookie отправляется только через соединение HTTPS.</target>
        </trans-unit>
        <trans-unit id="439826a24f2e1d39d8ee81a7d4dfa81db02d2dfc" translate="yes" xml:space="preserve">
          <source>Whether to use a secure cookie for the session cookie. If this is set to &lt;code&gt;True&lt;/code&gt;, the cookie will be marked as &amp;ldquo;secure&amp;rdquo;, which means browsers may ensure that the cookie is only sent under an HTTPS connection.</source>
          <target state="translated">Использовать ли безопасный файл cookie для файла cookie сеанса. Если для этого параметра установлено значение &lt;code&gt;True&lt;/code&gt; , файл cookie будет помечен как &amp;laquo;безопасный&amp;raquo;, что означает, что браузеры могут гарантировать, что файл cookie отправляется только через соединение HTTPS.</target>
        </trans-unit>
        <trans-unit id="b07c93b5a741115a7c7596e671b87e0d71c0fddd" translate="yes" xml:space="preserve">
          <source>Whether to use an implicit TLS (secure) connection when talking to the SMTP server. In most email documentation this type of TLS connection is referred to as SSL. It is generally used on port 465. If you are experiencing problems, see the explicit TLS setting &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt;&lt;code&gt;EMAIL_USE_TLS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Использовать ли неявное (безопасное) соединение TLS при общении с SMTP-сервером. В большинстве документов электронной почты этот тип соединения TLS называется SSL. Обычно он используется на порту 465. Если у вас возникли проблемы, см. &lt;a href=&quot;#std:setting-EMAIL_USE_TLS&quot;&gt; &lt;code&gt;EMAIL_USE_TLS&lt;/code&gt; &lt;/a&gt; настройку TLS EMAIL_USE_TLS .</target>
        </trans-unit>
        <trans-unit id="376234d99dc3a95e0722958abf3e5eb0b68178e1" translate="yes" xml:space="preserve">
          <source>Which JavaScript toolkit?</source>
          <target state="translated">Какой инструментарий JavaScript?</target>
        </trans-unit>
        <trans-unit id="bf329a9e741ad910179064d4bcef2f4b209b9bc9" translate="yes" xml:space="preserve">
          <source>Which host to use when connecting to the database. An empty string means localhost. Not used with SQLite.</source>
          <target state="translated">Какой хост использовать при подключении к базе данных.Пустая строка означает localhost.Не используется с SQLite.</target>
        </trans-unit>
        <trans-unit id="ffca8dc299cd5a5eb0951d97b6660e2dde043b4a" translate="yes" xml:space="preserve">
          <source>Which will be faster than the following which requires evaluating and iterating through the entire queryset:</source>
          <target state="translated">Который будет быстрее,чем следующий,который требует оценки и итераций по всему кварситету:</target>
        </trans-unit>
        <trans-unit id="328c17f197011d5407dc89a421a3da316c3aa8fb" translate="yes" xml:space="preserve">
          <source>Which will be faster than:</source>
          <target state="translated">Что будет быстрее:</target>
        </trans-unit>
        <trans-unit id="40333b2b4d00ce350b05c7dbba14a15c5cafbd8f" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;customizing#custom-permissions&quot;&gt;custom permissions&lt;/a&gt; can be defined within a model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; class, you can also create permissions directly. For example, you can create the &lt;code&gt;can_publish&lt;/code&gt; permission for a &lt;code&gt;BlogPost&lt;/code&gt; model in &lt;code&gt;myapp&lt;/code&gt;:</source>
          <target state="translated">Хотя &lt;a href=&quot;customizing#custom-permissions&quot;&gt;пользовательские разрешения&lt;/a&gt; могут быть определены в &lt;code&gt;Meta&lt;/code&gt; классе модели , вы также можете создавать разрешения напрямую. Например, вы можете создать разрешение &lt;code&gt;can_publish&lt;/code&gt; для модели &lt;code&gt;BlogPost&lt;/code&gt; в &lt;code&gt;myapp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9e112772455647f45523756c9a2d0e3a32d6b942" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;admindocs&lt;/code&gt; does not include a place to document templates by themselves, if you use the &lt;code&gt;:template:`path/to/template.html`&lt;/code&gt; syntax in a docstring the resulting page will verify the path of that template with Django&amp;rsquo;s &lt;a href=&quot;../../templates/api#template-loaders&quot;&gt;template loaders&lt;/a&gt;. This can be a handy way to check if the specified template exists and to show where on the filesystem that template is stored.</source>
          <target state="translated">Хотя &lt;code&gt;admindocs&lt;/code&gt; не содержит места для самостоятельного документирования шаблонов, если вы используете синтаксис &lt;code&gt;:template:`path/to/template.html`&lt;/code&gt; в строке документа, полученная страница будет проверять путь к этому шаблону с помощью &lt;a href=&quot;../../templates/api#template-loaders&quot;&gt;загрузчиков&lt;/a&gt; шаблонов Django . Это может быть удобным способом проверить, существует ли указанный шаблон, и показать, где в файловой системе этот шаблон хранится.</target>
        </trans-unit>
        <trans-unit id="fb7a0ed50264f4caeb1cefccb5e4015103378d8a" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;person.get_friends()&lt;/code&gt; will recompute the friends on each call, the value of the cached property will persist until you delete it as described above:</source>
          <target state="translated">Хотя &lt;code&gt;person.get_friends()&lt;/code&gt; будет повторно вычислять друзей при каждом вызове, значение кэшированного свойства будет сохраняться до тех пор, пока вы не удалите его, как описано выше:</target>
        </trans-unit>
        <trans-unit id="65537ea137bfde5ca9eb175967f6b53591b10c82" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;prefetch_related&lt;/code&gt; supports prefetching &lt;code&gt;GenericForeignKey&lt;/code&gt; relationships, the number of queries will depend on the data. Since a &lt;code&gt;GenericForeignKey&lt;/code&gt; can reference data in multiple tables, one query per table referenced is needed, rather than one query for all the items. There could be additional queries on the &lt;code&gt;ContentType&lt;/code&gt; table if the relevant rows have not already been fetched.</source>
          <target state="translated">Хотя &lt;code&gt;prefetch_related&lt;/code&gt; поддерживает предварительную &lt;code&gt;GenericForeignKey&lt;/code&gt; отношений GenericForeignKey , количество запросов будет зависеть от данных. Поскольку &lt;code&gt;GenericForeignKey&lt;/code&gt; может ссылаться на данные в нескольких таблицах, необходим один запрос для каждой таблицы, а не один запрос для всех элементов. Могут быть дополнительные запросы к таблице &lt;code&gt;ContentType&lt;/code&gt; , если соответствующие строки еще не получены.</target>
        </trans-unit>
        <trans-unit id="a6ee0ce737a4a79a4c6019b63be335c554729803" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;string_if_invalid&lt;/code&gt; can be a useful debugging tool, it is a bad idea to turn it on as a &amp;lsquo;development default&amp;rsquo;.</source>
          <target state="translated">Хотя &lt;code&gt;string_if_invalid&lt;/code&gt; может быть полезным инструментом отладки, плохая идея включать его как &amp;laquo;стандартное значение для разработки&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e1283fd95d654acac3eb495812e2bdbc42fe32e5" translate="yes" xml:space="preserve">
          <source>While Django can serialize most things, there are some things that we just can&amp;rsquo;t serialize out into a valid Python representation - there&amp;rsquo;s no Python standard for how a value can be turned back into code (&lt;code&gt;repr()&lt;/code&gt; only works for basic values, and doesn&amp;rsquo;t specify import paths).</source>
          <target state="translated">В то время как Django может сериализовать большинство вещей, есть некоторые вещи, которые мы просто не можем сериализовать в допустимое представление Python - не существует стандарта Python для того, как значение может быть превращено обратно в код ( &lt;code&gt;repr()&lt;/code&gt; работает только для базовых значений, и не указывает пути импорта).</target>
        </trans-unit>
        <trans-unit id="b819b684c05a74102a74d29e47e2e3b91c5b2c30" translate="yes" xml:space="preserve">
          <source>While Django includes support for a number of cache backends out-of-the-box, sometimes you might want to use a customized cache backend. To use an external cache backend with Django, use the Python import path as the &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting, like so:</source>
          <target state="translated">В то время как Django включает в себя встроенную поддержку ряда бэкэндов кеша, иногда вы можете захотеть использовать настроенный бэкэнд кеша. Для того, чтобы использовать внешний бэкенд кэша с Django, используйте путь импорта Python как &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt; из &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt; устанавливающие, например , так:</target>
        </trans-unit>
        <trans-unit id="e5c4feb8da82ac191403f15d1c8bc5298fa7ca58" translate="yes" xml:space="preserve">
          <source>While Django is best suited for developing new applications, it&amp;rsquo;s quite possible to integrate it into legacy databases. Django includes a couple of utilities to automate as much of this process as possible.</source>
          <target state="translated">Хотя Django лучше всего подходит для разработки новых приложений, вполне возможно интегрировать его в устаревшие базы данных. Django включает в себя несколько утилит для автоматизации как можно большей части этого процесса.</target>
        </trans-unit>
        <trans-unit id="fb03d5f18ab539d5324f858324f6c87cb4879d89" translate="yes" xml:space="preserve">
          <source>While Django provides a rich set of i18n tools for use in views and templates, it does not restrict the usage to Django-specific code. The Django translation mechanisms can be used to translate arbitrary texts to any language that is supported by Django (as long as an appropriate translation catalog exists, of course). You can load a translation catalog, activate it and translate text to language of your choice, but remember to switch back to original language, as activating a translation catalog is done on per-thread basis and such change will affect code running in the same thread.</source>
          <target state="translated">Хотя Django предоставляет богатый набор i18n инструментов для использования в представлениях и шаблонах,он не ограничивает использование кода,специфичного для Django.Механизмы перевода Django могут быть использованы для перевода произвольных текстов на любой язык,поддерживаемый Django (при условии наличия соответствующего каталога переводов).Вы можете загрузить каталог перевода,активировать его и перевести текст на выбранный вами язык,но не забудьте переключиться обратно на язык оригинала,поскольку активация каталога перевода выполняется поточно,и такое изменение повлияет на код,запущенный в том же потоке.</target>
        </trans-unit>
        <trans-unit id="b049dc7ef40873c5bb08aca5fbf10cf607001a5e" translate="yes" xml:space="preserve">
          <source>While Django provides good security protection out of the box, it is still important to properly deploy your application and take advantage of the security protection of the Web server, operating system and other components.</source>
          <target state="translated">Несмотря на то,что Django обеспечивает хорошую защиту,все же важно правильно развернуть приложение и воспользоваться преимуществами защиты веб-сервера,операционной системы и других компонентов.</target>
        </trans-unit>
        <trans-unit id="34cf6abdbd5ec94a4ddbaf1e762bfe77c50c8592" translate="yes" xml:space="preserve">
          <source>While Django&amp;rsquo;s default ASGI handler will run all your code in a synchronous thread, if you choose to run your own async handler you must be aware of async-safety.</source>
          <target state="translated">Хотя обработчик ASGI по умолчанию в Django будет запускать весь ваш код в синхронном потоке, если вы решите запустить собственный асинхронный обработчик, вы должны знать об асинхронной безопасности.</target>
        </trans-unit>
        <trans-unit id="899e4cee0f9a64e876c21b82209eba4348985627" translate="yes" xml:space="preserve">
          <source>While Django&amp;rsquo;s test suite is running, you&amp;rsquo;ll see a stream of characters representing the status of each test as it completes. &lt;code&gt;E&lt;/code&gt; indicates that an error was raised during a test, and &lt;code&gt;F&lt;/code&gt; indicates that a test&amp;rsquo;s assertions failed. Both of these are considered to be test failures. Meanwhile, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;s&lt;/code&gt; indicated expected failures and skipped tests, respectively. Dots indicate passing tests.</source>
          <target state="translated">Пока запущен набор тестов Django, вы увидите поток символов, представляющих состояние каждого теста после его завершения. &lt;code&gt;E&lt;/code&gt; указывает, что во время теста возникла ошибка, а &lt;code&gt;F&lt;/code&gt; означает, что утверждения теста не пройдены. Оба они считаются неудачными испытаниями. Между тем, &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;s&lt;/code&gt; указывают на ожидаемые сбои и пропущенные тесты соответственно. Точки указывают на прохождение испытаний.</target>
        </trans-unit>
        <trans-unit id="631f249ec0a862c285f840855aa5319c50d4423f" translate="yes" xml:space="preserve">
          <source>While SQLite supports savepoints, a flaw in the design of the &lt;a href=&quot;https://docs.python.org/3/library/sqlite3.html#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module makes them hardly usable.</source>
          <target state="translated">В то время как SQLite поддерживает точки сохранения, недостаток в дизайне модуля &lt;a href=&quot;https://docs.python.org/3/library/sqlite3.html#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt; делает их малопригодными для использования.</target>
        </trans-unit>
        <trans-unit id="065e5b60e7cb3b39f47ddc276ad75d602561a364" translate="yes" xml:space="preserve">
          <source>While a minimal class-based view does not require any class attributes to perform its job, class attributes are useful in many class-based designs, and there are two ways to configure or set class attributes.</source>
          <target state="translated">В то время как минимальное представление на основе классов не требует никаких атрибутов классов для выполнения своей работы,атрибуты классов полезны во многих конструкциях,основанных на классах,и есть два способа настроить или установить атрибуты классов.</target>
        </trans-unit>
        <trans-unit id="a7df68b20c04e29a83bc2d7b7977bd8ee9e34054" translate="yes" xml:space="preserve">
          <source>While all spatial lookups can be used with raster objects on both sides, not all underlying operators natively accept raster input. For cases where the operator expects geometry input, the raster is automatically converted to a geometry. It&amp;rsquo;s important to keep this in mind when interpreting the lookup results.</source>
          <target state="translated">Хотя все пространственные поиски можно использовать с растровыми объектами с обеих сторон, не все базовые операторы изначально принимают растровые входные данные. В тех случаях, когда оператор ожидает ввода геометрии, растр автоматически преобразуется в геометрию. Важно помнить об этом при интерпретации результатов поиска.</target>
        </trans-unit>
        <trans-unit id="e246e71fedf351571698f5920052466ab1b2f548" translate="yes" xml:space="preserve">
          <source>While for a naive datetime, it isn&amp;rsquo;t:</source>
          <target state="translated">Хотя для наивного свидания это не так:</target>
        </trans-unit>
        <trans-unit id="6cffe2311eb1d1bb8515c4b0c9166729077e361b" translate="yes" xml:space="preserve">
          <source>While it can be a complex process at times, upgrading to the latest Django version has several benefits:</source>
          <target state="translated">Хотя иногда это может быть сложным процессом,обновление до последней версии Django имеет ряд преимуществ:</target>
        </trans-unit>
        <trans-unit id="193d8e6e7114df4964300086f01c6b4768374149" translate="yes" xml:space="preserve">
          <source>While migrations are per-app, the tables and relationships implied by your models are too complex to be created for one app at a time. When you make a migration that requires something else to run - for example, you add a &lt;code&gt;ForeignKey&lt;/code&gt; in your &lt;code&gt;books&lt;/code&gt; app to your &lt;code&gt;authors&lt;/code&gt; app - the resulting migration will contain a dependency on a migration in &lt;code&gt;authors&lt;/code&gt;.</source>
          <target state="translated">Хотя миграции выполняются для каждого приложения, таблицы и отношения, подразумеваемые вашими моделями, слишком сложны, чтобы создавать их для одного приложения за раз. Когда вы делаете миграцию, которая требует чего-то другого для запуска - например, вы добавляете &lt;code&gt;ForeignKey&lt;/code&gt; в своем приложении &lt;code&gt;books&lt;/code&gt; в свое приложение &lt;code&gt;authors&lt;/code&gt; - результирующая миграция будет содержать зависимость от миграции &lt;code&gt;authors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="181982987d13719ec0c945a54560f8a726490266" translate="yes" xml:space="preserve">
          <source>While most methods from the standard &lt;code&gt;QuerySet&lt;/code&gt; are accessible directly from the &lt;code&gt;Manager&lt;/code&gt;, this is only the case for the extra methods defined on a custom &lt;code&gt;QuerySet&lt;/code&gt; if you also implement them on the &lt;code&gt;Manager&lt;/code&gt;:</source>
          <target state="translated">Хотя большинство методов из стандартного &lt;code&gt;QuerySet&lt;/code&gt; доступны непосредственно из &lt;code&gt;Manager&lt;/code&gt; , это относится только к дополнительным методам, определенным в пользовательском &lt;code&gt;QuerySet&lt;/code&gt; , если вы также реализуете их в &lt;code&gt;Manager&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7e6fb585b1590782f67cd9301a2b1723c167dc0d" translate="yes" xml:space="preserve">
          <source>While not recommended, if you are at the end of the validation chain (i.e. your form &lt;code&gt;clean()&lt;/code&gt; method) and you know you will &lt;em&gt;never&lt;/em&gt; need to override your error message you can still opt for the less verbose:</source>
          <target state="translated">Хотя это и не рекомендуется, если вы находитесь в конце цепочки валидации (т. Е. Метода формы &lt;code&gt;clean()&lt;/code&gt; ) и знаете, что вам &lt;em&gt;никогда не&lt;/em&gt; понадобится переопределять сообщение об ошибке, вы все равно можете выбрать менее подробный:</target>
        </trans-unit>
        <trans-unit id="83d533881f9a91c2a74157ddecbcdc46b72b4600" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;RESOURCE&lt;/code&gt; role has the required &lt;code&gt;CREATE TABLE&lt;/code&gt;, &lt;code&gt;CREATE SEQUENCE&lt;/code&gt;, &lt;code&gt;CREATE PROCEDURE&lt;/code&gt;, and &lt;code&gt;CREATE TRIGGER&lt;/code&gt; privileges, and a user granted &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; can grant &lt;code&gt;RESOURCE&lt;/code&gt;, such a user cannot grant the individual privileges (e.g. &lt;code&gt;CREATE TABLE&lt;/code&gt;), and thus &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; is not usually sufficient for running tests.</source>
          <target state="translated">В то время как роль &lt;code&gt;RESOURCE&lt;/code&gt; имеет необходимые привилегии &lt;code&gt;CREATE TABLE&lt;/code&gt; , &lt;code&gt;CREATE SEQUENCE&lt;/code&gt; , &lt;code&gt;CREATE PROCEDURE&lt;/code&gt; и &lt;code&gt;CREATE TRIGGER&lt;/code&gt; , а пользователь, &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; предоставлен параметр RESOURCE WITH ADMIN, может предоставить &lt;code&gt;RESOURCE&lt;/code&gt; , такой пользователь не может предоставлять отдельные привилегии (например, &lt;code&gt;CREATE TABLE&lt;/code&gt; ) и, следовательно, &lt;code&gt;RESOURCE WITH ADMIN OPTION&lt;/code&gt; обычно недостаточно для выполнения тестов.</target>
        </trans-unit>
        <trans-unit id="bb4aa02c2fa2335eea36739030b3cbf1c0c19375" translate="yes" xml:space="preserve">
          <source>While the above example works, be aware that most template filters return strings, so mathematical comparisons using filters will generally not work as you expect. &lt;a href=&quot;builtins#std:templatefilter-length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; is an exception.</source>
          <target state="translated">Хотя приведенный выше пример работает, имейте в виду, что большинство шаблонных фильтров возвращают строки, поэтому математическое сравнение с использованием фильтров обычно не будет работать так, как вы ожидаете. &lt;a href=&quot;builtins#std:templatefilter-length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; является исключением.</target>
        </trans-unit>
        <trans-unit id="e3c62b5451709c2e8bedbe9f8589ce64588d6ad1" translate="yes" xml:space="preserve">
          <source>While the above method can be used for AJAX POST requests, it has some inconveniences: you have to remember to pass the CSRF token in as POST data with every POST request. For this reason, there is an alternative method: on each XMLHttpRequest, set a custom &lt;code&gt;X-CSRFToken&lt;/code&gt; header (as specified by the &lt;a href=&quot;settings#std:setting-CSRF_HEADER_NAME&quot;&gt;&lt;code&gt;CSRF_HEADER_NAME&lt;/code&gt;&lt;/a&gt; setting) to the value of the CSRF token. This is often easier because many JavaScript frameworks provide hooks that allow headers to be set on every request.</source>
          <target state="translated">Хотя описанный выше метод можно использовать для запросов POST AJAX, он имеет некоторые неудобства: вы должны помнить о том, чтобы передавать маркер CSRF как данные POST при каждом запросе POST. По этой причине существует альтернативный метод: для каждого XMLHttpRequest установите пользовательский заголовок &lt;code&gt;X-CSRFToken&lt;/code&gt; (как указано в параметре &lt;a href=&quot;settings#std:setting-CSRF_HEADER_NAME&quot;&gt; &lt;code&gt;CSRF_HEADER_NAME&lt;/code&gt; &lt;/a&gt; ) в значение токена CSRF. Это часто проще, потому что многие JavaScript-фреймворки предоставляют хуки, которые позволяют устанавливать заголовки при каждом запросе.</target>
        </trans-unit>
        <trans-unit id="7370d5d0cabcd6474c51daa270f7dc01cced68b9" translate="yes" xml:space="preserve">
          <source>While the first occurrence of &amp;ldquo;Welcome to our page&amp;rdquo; uses the current language, the second will always be in English.</source>
          <target state="translated">В то время как первое вхождение &amp;laquo;Добро пожаловать на нашу страницу&amp;raquo; использует текущий язык, второе всегда будет на английском языке.</target>
        </trans-unit>
        <trans-unit id="30e6c1821b12210cd89c7642bff43e1a73b2e026" translate="yes" xml:space="preserve">
          <source>While the previous examples have formatted the current time into a string and returned the string, suppose you wanted to pass in a &lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; from an object and have the template tag format that date-time:</source>
          <target state="translated">В то время как предыдущие примеры форматировали текущее время в строку и возвращали строку, предположим, что вы хотите передать &lt;a href=&quot;../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; от объекта и иметь тег шаблона в формате date-time:</target>
        </trans-unit>
        <trans-unit id="05ab51bd02ea0de931c3e36adc9520bb723d1351" translate="yes" xml:space="preserve">
          <source>While the simplicity of this transaction model is appealing, it also makes it inefficient when traffic increases. Opening a transaction for every view has some overhead. The impact on performance depends on the query patterns of your application and on how well your database handles locking.</source>
          <target state="translated">Простота этой модели транзакций привлекательна,но она также делает ее неэффективной при увеличении трафика.Открытие транзакции для каждого вида имеет некоторые накладные расходы.Влияние на производительность зависит от шаблонов запросов вашего приложения и от того,насколько хорошо ваша база данных справляется с блокировкой.</target>
        </trans-unit>
        <trans-unit id="2c3266f7028f5b1063d846b757ad363b19861a58" translate="yes" xml:space="preserve">
          <source>While this code is correct and simple, it may not be the most portable way to to write this kind of method. The &lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function is usually the best approach.</source>
          <target state="translated">Хотя этот код является правильным и простым, он может быть не самым переносимым способом написания такого рода метода. Функция &lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; обычно является наилучшим подходом.</target>
        </trans-unit>
        <trans-unit id="694447cd06f3437b217a9a8c85f1d58a88abc503" translate="yes" xml:space="preserve">
          <source>While this view (and its subclasses) are executing, &lt;code&gt;self.object_list&lt;/code&gt; will contain the list of objects that the view is operating upon, and &lt;code&gt;self.date_list&lt;/code&gt; will contain the list of dates for which data is available.</source>
          <target state="translated">Пока это представление (и его подклассы) выполняются, &lt;code&gt;self.object_list&lt;/code&gt; будет содержать список объектов, с которыми работает представление, а &lt;code&gt;self.date_list&lt;/code&gt; будет содержать список дат, для которых доступны данные.</target>
        </trans-unit>
        <trans-unit id="c821a57d14f6748f67104e0b7d173bb6e5dbb3e4" translate="yes" xml:space="preserve">
          <source>While this view is executing, &lt;code&gt;self.object&lt;/code&gt; will contain the object that the view is operating upon.</source>
          <target state="translated">Пока выполняется это представление, &lt;code&gt;self.object&lt;/code&gt; будет содержать объект, с которым работает представление.</target>
        </trans-unit>
        <trans-unit id="6f82b07f3ff91f1ae7689b01d5d543449245dec4" translate="yes" xml:space="preserve">
          <source>While this view is executing, &lt;code&gt;self.object_list&lt;/code&gt; will contain the list of objects (usually, but not necessarily a queryset) that the view is operating upon.</source>
          <target state="translated">Пока это представление выполняется, &lt;code&gt;self.object_list&lt;/code&gt; будет содержать список объектов (обычно, но не обязательно набор запросов), с которыми работает представление.</target>
        </trans-unit>
        <trans-unit id="05428d17b1e05ecb53a8f14c722ab33b2a818f35" translate="yes" xml:space="preserve">
          <source>While uncommon, it&amp;rsquo;s possible to configure several instances of the same backend with different options. In that case you should define a unique &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; for each engine.</source>
          <target state="translated">Хотя это и необычно, можно настроить несколько экземпляров одного и того же сервера с разными параметрами. В этом случае вы должны определить уникальное &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; для каждого движка.</target>
        </trans-unit>
        <trans-unit id="3a5c5c9c651f18f5ab008faafd5f310f7927fcd8" translate="yes" xml:space="preserve">
          <source>While we&amp;rsquo;re here, we can further pin down the &lt;code&gt;was_published_recently()&lt;/code&gt; method; in fact, it would be positively embarrassing if in fixing one bug we had introduced another.</source>
          <target state="translated">Пока мы здесь, мы можем дополнительно закрепить метод &lt;code&gt;was_published_recently()&lt;/code&gt; ; на самом деле, было бы весьма неловко, если бы при исправлении одной ошибки мы ввели другую.</target>
        </trans-unit>
        <trans-unit id="3eb2c3ac3d1de54b1c3dbd2d5fa902a3564f8d2c" translate="yes" xml:space="preserve">
          <source>While you&amp;rsquo;re editing &lt;code&gt;mysite/settings.py&lt;/code&gt;, set &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; to your time zone.</source>
          <target state="translated">Пока вы редактируете &lt;code&gt;mysite/settings.py&lt;/code&gt; , установите &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt; в свой часовой пояс.</target>
        </trans-unit>
        <trans-unit id="00d2e45ae1a8e9eaba910c44effa857eddc9d358" translate="yes" xml:space="preserve">
          <source>While your class is instantiated for each request dispatched to it, class attributes set through the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; entry point are configured only once at the time your URLs are imported.</source>
          <target state="translated">В то время как ваш класс создается для каждого отправленного ему запроса, атрибуты класса, заданные через &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; входа as_view () , настраиваются только один раз во время импорта ваших URL.</target>
        </trans-unit>
        <trans-unit id="ada227210c7d938fb3c2b334d694885135785e5b" translate="yes" xml:space="preserve">
          <source>Whilst &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; non-image data attributes, such as &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;size&lt;/code&gt; are available on the instance, the underlying image data cannot be used without reopening the image. For example:</source>
          <target state="translated">Несмотря на то, что в экземпляре доступны атрибуты данных без изображения &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; , такие как &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; и &lt;code&gt;size&lt;/code&gt; , данные базового изображения нельзя использовать без повторного открытия изображения. Например:</target>
        </trans-unit>
        <trans-unit id="746160809dab1115509392d54f296c0adca09bea" translate="yes" xml:space="preserve">
          <source>Whitelist of email domains to allow. By default, a regular expression (the &lt;code&gt;domain_regex&lt;/code&gt; attribute) is used to validate whatever appears after the @ sign. However, if that string appears in the whitelist, this validation is bypassed. If not provided, the default whitelist is &lt;code&gt;['localhost']&lt;/code&gt;. Other domains that don&amp;rsquo;t contain a dot won&amp;rsquo;t pass validation, so you&amp;rsquo;d need to whitelist them as necessary.</source>
          <target state="translated">Белый список доменов электронной почты, чтобы разрешить. По умолчанию регулярное выражение ( атрибут &lt;code&gt;domain_regex&lt;/code&gt; ) используется для проверки того, что появляется после знака @. Однако, если эта строка появляется в белом списке, эта проверка обходится. Если не указан, белый список по умолчанию - &lt;code&gt;['localhost']&lt;/code&gt; . Другие домены, в которых нет точки, не пройдут валидацию, поэтому при необходимости вам потребуется внести их в белый список.</target>
        </trans-unit>
        <trans-unit id="0df76ce9ba11d64d88060d7cda0c1f4adbcc42c0" translate="yes" xml:space="preserve">
          <source>Whitespace before and after HTML tags is ignored.</source>
          <target state="translated">Пробельные символы до и после HTML-тегов игнорируются.</target>
        </trans-unit>
        <trans-unit id="987614b21e58e2d1847c4937309a2b59685c7cdd" translate="yes" xml:space="preserve">
          <source>Whitespace in most cases is ignored, and attribute ordering is not significant. The passed-in arguments must be valid HTML.</source>
          <target state="translated">Пробельные символы в большинстве случаев игнорируются,а заказ атрибутов не имеет значения.Передаваемые аргументы должны быть корректными HTML.</target>
        </trans-unit>
        <trans-unit id="5b5a1b43fc84dbf9538cfd1c73320ddadddd8f59" translate="yes" xml:space="preserve">
          <source>Who&amp;rsquo;s this tutorial for?</source>
          <target state="translated">Для кого этот урок?</target>
        </trans-unit>
        <trans-unit id="77278a0d438ff1776dc9f307bbab5cf7fb851b89" translate="yes" xml:space="preserve">
          <source>Why Django uses autocommit</source>
          <target state="translated">Почему Django использует автокомиссию</target>
        </trans-unit>
        <trans-unit id="92671a9eb4b94fff980153bd39e593270f308a3e" translate="yes" xml:space="preserve">
          <source>Why are my emails sent from a different address?</source>
          <target state="translated">Почему мои электронные письма отправляются с другого адреса?</target>
        </trans-unit>
        <trans-unit id="e2279d02d063d060e3dd4a3869ba503958427610" translate="yes" xml:space="preserve">
          <source>Why do we use a helper function &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt;&lt;code&gt;get_object_or_404()&lt;/code&gt;&lt;/a&gt; instead of automatically catching the &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions at a higher level, or having the model API raise &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">Почему мы используем вспомогательную функцию &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt; &lt;code&gt;get_object_or_404()&lt;/code&gt; &lt;/a&gt; вместо того, чтобы автоматически &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt; исключения ObjectDoesNotExist на более высоком уровне, или чтобы API модели &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt; вместо &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt; ?</target>
        </trans-unit>
        <trans-unit id="e6585783edc6acd9083d646e9f414a4eab6c32c9" translate="yes" xml:space="preserve">
          <source>Why is the hierarchy important? Well, because loggers can be set to &lt;em&gt;propagate&lt;/em&gt; their logging calls to their parents. In this way, you can define a single set of handlers at the root of a logger tree, and capture all logging calls in the subtree of loggers. A logger defined in the &lt;code&gt;project&lt;/code&gt; namespace will catch all logging messages issued on the &lt;code&gt;project.interesting&lt;/code&gt; and &lt;code&gt;project.interesting.stuff&lt;/code&gt; loggers.</source>
          <target state="translated">Почему важна иерархия? Ну, потому что регистраторы могут быть настроены на &lt;em&gt;передачу&lt;/em&gt; своих вызовов регистрации их родителям. Таким образом, вы можете определить один набор обработчиков в корне дерева регистратора и записывать все вызовы журналирования в поддерево регистраторов. Средство ведения журнала, определенное в пространстве имен &lt;code&gt;project&lt;/code&gt; будет перехватывать все сообщения ведения журнала, выдаваемые в средствах ведения журнала &lt;code&gt;project.interesting&lt;/code&gt; и &lt;code&gt;project.interesting.stuff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7e026d000a104e9e2549b9cc1098f5938098b9c" translate="yes" xml:space="preserve">
          <source>Why might a user encounter a CSRF validation failure after logging in?</source>
          <target state="translated">Почему пользователь может столкнуться с ошибкой проверки CSRF после входа в систему?</target>
        </trans-unit>
        <trans-unit id="c0c1a6e50126b8372ccf9a9573cca00f3dc0aff5" translate="yes" xml:space="preserve">
          <source>Why no rollback hook?</source>
          <target state="translated">Почему нет крючка для отката?</target>
        </trans-unit>
        <trans-unit id="8fd136539769e691d7a4d79b4f142255c832444c" translate="yes" xml:space="preserve">
          <source>Why the code-shuffle?</source>
          <target state="translated">Почему кодовая перестановка?</target>
        </trans-unit>
        <trans-unit id="e51a93adaa2b9c163db5abed9f94cc8d4a6d1aa3" translate="yes" xml:space="preserve">
          <source>Why use a text-based template instead of an XML-based one (like Zope&amp;rsquo;s TAL)? We wanted Django&amp;rsquo;s template language to be usable for more than just XML/HTML templates. At World Online, we use it for emails, JavaScript and CSV. You can use the template language for any text-based format.</source>
          <target state="translated">Зачем использовать текстовый шаблон вместо XML-шаблона (например, TAL Zope)? Мы хотели, чтобы язык шаблонов Django использовался не только для шаблонов XML / HTML. В World Online мы используем его для электронной почты, JavaScript и CSV. Вы можете использовать язык шаблонов для любого текстового формата.</target>
        </trans-unit>
        <trans-unit id="2e10f1bf6c1a24b0656ac3d9f129fd19722bbc1c" translate="yes" xml:space="preserve">
          <source>Why would you use sites? It&amp;rsquo;s best explained through examples.</source>
          <target state="translated">Почему вы используете сайты? Это лучше всего объяснить на примерах.</target>
        </trans-unit>
        <trans-unit id="d2135e1f5ed41c1051fc0eff486d60fbe86e25b0" translate="yes" xml:space="preserve">
          <source>Why would you want to turn it off? Because sometimes, template variables contain data that you &lt;em&gt;intend&lt;/em&gt; to be rendered as raw HTML, in which case you don&amp;rsquo;t want their contents to be escaped. For example, you might store a blob of HTML in your database and want to embed that directly into your template. Or, you might be using Django&amp;rsquo;s template system to produce text that is &lt;em&gt;not&lt;/em&gt; HTML &amp;ndash; like an email message, for instance.</source>
          <target state="translated">Почему вы хотите выключить его? Потому что иногда переменные шаблона содержат данные, которые вы &lt;em&gt;намереваетесь&lt;/em&gt; отображать как необработанный HTML, и в этом случае вы не хотите, чтобы их содержимое было экранировано. Например, вы можете сохранить блоб HTML в вашей базе данных и захотите встроить его прямо в шаблон. Или вы можете использовать систему шаблонов Django для создания текста, который &lt;em&gt;не&lt;/em&gt; является HTML - например, сообщение электронной почты.</target>
        </trans-unit>
        <trans-unit id="fba9323c0b374f7b48987bd09d658cc86e9143be" translate="yes" xml:space="preserve">
          <source>Why you need to create tests</source>
          <target state="translated">Зачем нужно создавать тесты</target>
        </trans-unit>
        <trans-unit id="e1999eb963009172d97538240f024e9f140ce7b6" translate="yes" xml:space="preserve">
          <source>Widget attributes</source>
          <target state="translated">Атрибуты виджета</target>
        </trans-unit>
        <trans-unit id="99febd1d326a537ae88b32dd6c8f7845cf453118" translate="yes" xml:space="preserve">
          <source>Widget classes</source>
          <target state="translated">Занятия по виджетам</target>
        </trans-unit>
        <trans-unit id="8b53682482102f30c4843fa0b855c58d40d29954" translate="yes" xml:space="preserve">
          <source>Widget templates receive a context from &lt;a href=&quot;widgets#django.forms.Widget.get_context&quot;&gt;&lt;code&gt;Widget.get_context()&lt;/code&gt;&lt;/a&gt;. By default, widgets receive a single value in the context, &lt;code&gt;widget&lt;/code&gt;. This is a dictionary that contains values like:</source>
          <target state="translated">Шаблоны виджетов получают контекст от &lt;a href=&quot;widgets#django.forms.Widget.get_context&quot;&gt; &lt;code&gt;Widget.get_context()&lt;/code&gt; &lt;/a&gt; . По умолчанию виджеты получают одно значение в контексте &lt;code&gt;widget&lt;/code&gt; . Это словарь, который содержит такие значения, как:</target>
        </trans-unit>
        <trans-unit id="c748f934de54f111e6c4805824bae58d5d42de64" translate="yes" xml:space="preserve">
          <source>Widget used by all of the range fields. Based on &lt;a href=&quot;../../forms/widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Виджет используется всеми полями диапазона. Основано на &lt;a href=&quot;../../forms/widgets#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf8a6678a1e36e3d2c45861b80308b477e3345ac" translate="yes" xml:space="preserve">
          <source>Widgets</source>
          <target state="translated">Widgets</target>
        </trans-unit>
        <trans-unit id="0f70dd2e107f87991ffa75f0992c4dd33aa8d2c5" translate="yes" xml:space="preserve">
          <source>Widgets aren&amp;rsquo;t the only objects that can have &lt;code&gt;media&lt;/code&gt; definitions &amp;ndash; forms can also define &lt;code&gt;media&lt;/code&gt;. The rules for &lt;code&gt;media&lt;/code&gt; definitions on forms are the same as the rules for widgets: declarations can be static or dynamic; path and inheritance rules for those declarations are exactly the same.</source>
          <target state="translated">Виджеты - не единственные объекты, которые могут иметь определения &lt;code&gt;media&lt;/code&gt; - формы также могут определять &lt;code&gt;media&lt;/code&gt; . Правила для определения &lt;code&gt;media&lt;/code&gt; в формах такие же, как правила для виджетов: объявления могут быть статическими или динамическими; правила пути и наследования для этих объявлений абсолютно одинаковы.</target>
        </trans-unit>
        <trans-unit id="0960dfecea279de44fadfcc27358e722f786094a" translate="yes" xml:space="preserve">
          <source>Widgets can specify custom template names.</source>
          <target state="translated">Виджеты могут задавать имена пользовательских шаблонов.</target>
        </trans-unit>
        <trans-unit id="19023cf1400f436f1bea98c5fc298c3154996c22" translate="yes" xml:space="preserve">
          <source>Widgets handling input of text</source>
          <target state="translated">Виджеты,обрабатывающие ввод текста</target>
        </trans-unit>
        <trans-unit id="b52f266518e398c7548600708df84144f8f2214d" translate="yes" xml:space="preserve">
          <source>Widgets inheriting from the &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget deal with choices. They present the user with a list of options to choose from. The different widgets present this choice differently; the &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget itself uses a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; HTML list representation, while &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt;&lt;code&gt;RadioSelect&lt;/code&gt;&lt;/a&gt; uses radio buttons.</source>
          <target state="translated">Виджеты, наследуемые от виджета &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; ,&lt;/a&gt; имеют дело с выбором. Они предоставляют пользователю список вариантов на выбор. Различные виджеты представляют этот выбор по-разному; &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt; виджет сам использует &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; HTML список представление, в то время как &lt;a href=&quot;#django.forms.RadioSelect&quot;&gt; &lt;code&gt;RadioSelect&lt;/code&gt; &lt;/a&gt; использует радио - кнопки.</target>
        </trans-unit>
        <trans-unit id="13d672b823f4f412908b6f575527fa4d68135a2b" translate="yes" xml:space="preserve">
          <source>Widgets inheriting from the &lt;code&gt;Select&lt;/code&gt; widget</source>
          <target state="translated">Виджеты, наследуемые от виджета &lt;code&gt;Select&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af8a0bf37f0e5af3e1fc739ac4fc803357e390cc" translate="yes" xml:space="preserve">
          <source>Widgets of required form fields have the &lt;code&gt;required&lt;/code&gt; HTML attribute. Set the &lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt;&lt;code&gt;Form.use_required_attribute&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;False&lt;/code&gt; to disable it. The &lt;code&gt;required&lt;/code&gt; attribute isn&amp;rsquo;t included on forms of formsets because the browser validation may not be correct when adding and deleting formsets.</source>
          <target state="translated">Виджеты обязательных полей формы имеют &lt;code&gt;required&lt;/code&gt; атрибут HTML. Установите для атрибута &lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt; &lt;code&gt;Form.use_required_attribute&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;False&lt;/code&gt; , чтобы отключить его. &lt;code&gt;required&lt;/code&gt; атрибут не включен форм FormSets , поскольку проверка браузер не может быть правильным при добавлении и удалении FormSets.</target>
        </trans-unit>
        <trans-unit id="91f2175f00ef0547c92bb82668d2b8b9ac5cebc5" translate="yes" xml:space="preserve">
          <source>Widgets should not be confused with the &lt;a href=&quot;fields&quot;&gt;form fields&lt;/a&gt;. Form fields deal with the logic of input validation and are used directly in templates. Widgets deal with rendering of HTML form input elements on the web page and extraction of raw submitted data. However, widgets do need to be &lt;a href=&quot;#widget-to-field&quot;&gt;assigned&lt;/a&gt; to form fields.</source>
          <target state="translated">Виджеты не следует путать с &lt;a href=&quot;fields&quot;&gt;полями формы&lt;/a&gt; . Поля формы имеют дело с логикой проверки ввода и используются непосредственно в шаблонах. Виджеты связаны с отображением элементов ввода HTML-формы на веб-странице и извлечением необработанных отправленных данных. Однако виджеты должны быть &lt;a href=&quot;#widget-to-field&quot;&gt;назначены&lt;/a&gt; полям формы.</target>
        </trans-unit>
        <trans-unit id="76af709f4a34c45a3c203ff55432ddd682a6bdd3" translate="yes" xml:space="preserve">
          <source>Widgets that render multiple choices have an &lt;code&gt;option_template_name&lt;/code&gt; attribute that specifies the template used to render each choice. For example, for the &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widget, &lt;code&gt;select_option.html&lt;/code&gt; renders the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; for a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Виджеты, отображающие несколько вариантов выбора, имеют атрибут &lt;code&gt;option_template_name&lt;/code&gt; , который указывает шаблон, используемый для отображения каждого варианта. Например, для виджета &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt; &lt;code&gt;select_option.html&lt;/code&gt; отображает &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; для &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1f9849d85404cf6cd6ea0d0e962f81f2553eff6" translate="yes" xml:space="preserve">
          <source>Widgets which offer a &lt;a href=&quot;#django.forms.Select.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; attribute can however be used with fields which are not based on choice &amp;ndash; such as a &lt;a href=&quot;fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; &amp;ndash; but it is recommended to use a &lt;a href=&quot;fields#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt;-based field when the choices are inherent to the model and not just the representational widget.</source>
          <target state="translated">Виджеты, которые предлагают атрибут &lt;a href=&quot;#django.forms.Select.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt; могут, однако, использоваться с полями, которые не основаны на выборе - например, &lt;a href=&quot;fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; - но рекомендуется использовать &lt;a href=&quot;fields#django.forms.ChoiceField&quot;&gt; &lt;code&gt;ChoiceField&lt;/code&gt; &lt;/a&gt; основе ChoiceField, когда варианты выбора присущи модели, а не только представительному виджету.</target>
        </trans-unit>
        <trans-unit id="8b0831c2aecc7cab05b0760968fa0514c19c80f8" translate="yes" xml:space="preserve">
          <source>Width of the image in pixels.</source>
          <target state="translated">Ширина изображения в пикселях.</target>
        </trans-unit>
        <trans-unit id="1735ffac02eeccc67f3462cd5ef956719ce3ed1f" translate="yes" xml:space="preserve">
          <source>Width of the map, in pixels. Defaults to 600.</source>
          <target state="translated">Ширина карты,в пикселях.По умолчанию 600.</target>
        </trans-unit>
        <trans-unit id="2be1d5c881ce8f3d9ed70e3fcf6b3480cbd72654" translate="yes" xml:space="preserve">
          <source>William Kyngesburye provides a number of &lt;a href=&quot;https://www.kyngchaos.com/software/frameworks&quot;&gt;geospatial library binary packages&lt;/a&gt; that help to get GeoDjango installed on macOS without compiling them from source. However, &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt; is still necessary for compiling the Python database adapters &lt;a href=&quot;#psycopg2-kyngchaos&quot;&gt;psycopg2&lt;/a&gt; (for PostGIS).</source>
          <target state="translated">William Kyngesburye предоставляет несколько &lt;a href=&quot;https://www.kyngchaos.com/software/frameworks&quot;&gt;бинарных пакетов геопространственных библиотек,&lt;/a&gt; которые помогают установить GeoDjango на macOS без компиляции их из исходного кода. Однако &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt; все еще необходим для компиляции адаптеров базы данных Python &lt;a href=&quot;#psycopg2-kyngchaos&quot;&gt;psycopg2&lt;/a&gt; (для PostGIS).</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">Функции окон</target>
        </trans-unit>
        <trans-unit id="49db405d8949ad08728f96c7887d0f3179391ffc" translate="yes" xml:space="preserve">
          <source>Window functions provide a way to apply functions on partitions. Unlike a normal aggregation function which computes a final result for each set defined by the group by, window functions operate on &lt;a href=&quot;#window-frames&quot;&gt;frames&lt;/a&gt; and partitions, and compute the result for each row.</source>
          <target state="translated">Оконные функции позволяют применять функции к разделам. В отличие от обычной функции агрегирования, которая вычисляет окончательный результат для каждого набора, определенного группой, оконные функции работают с &lt;a href=&quot;#window-frames&quot;&gt;кадрами&lt;/a&gt; и разделами и вычисляют результат для каждой строки.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="21f3916bb144fa450bc17de4418890fb26b717e5" translate="yes" xml:space="preserve">
          <source>Wire these new views into the &lt;code&gt;polls.urls&lt;/code&gt; module by adding the following &lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; calls:</source>
          <target state="translated">Подключите эти новые представления в модуль &lt;code&gt;polls.urls&lt;/code&gt; , добавив следующие вызовы &lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="bf6d547b4d9dc7045aafca1ca26b12f0214c830b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;True&lt;/code&gt;, the template loader will look in the app&amp;rsquo;s templates directory and find the templates.</source>
          <target state="translated">Если для &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;True&lt;/code&gt; , загрузчик шаблонов будет искать в каталоге шаблонов приложения и находить шаблоны.</target>
        </trans-unit>
        <trans-unit id="d15b3cc9e3d8bb4b722ed0d98bb95927c9a30d81" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;prefix_default_language=False&lt;/code&gt; and &lt;code&gt;LANGUAGE_CODE='en'&lt;/code&gt;, the URLs will be:</source>
          <target state="translated">Если &lt;code&gt;prefix_default_language=False&lt;/code&gt; и &lt;code&gt;LANGUAGE_CODE='en'&lt;/code&gt; , URL будут следующими:</target>
        </trans-unit>
        <trans-unit id="2f667e0f3a0b0b5f764d9d3eec354348cc4bd078" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;substring&lt;/code&gt; instead passed as a positional argument, it&amp;rsquo;ll be passed as a parameter in the database query.</source>
          <target state="translated">С &lt;code&gt;substring&lt;/code&gt; переданной в качестве позиционного аргумента, она будет передана как параметр в запросе к базе данных.</target>
        </trans-unit>
        <trans-unit id="169ef01ed496f2c3486a3afd6b1fbc8c6f1fbfe6" translate="yes" xml:space="preserve">
          <source>With a context of &lt;code&gt;{'django': 'the web framework for perfectionists with
deadlines'}&lt;/code&gt;, this template renders to:</source>
          <target state="translated">В контексте &lt;code&gt;{'django': 'the web framework for perfectionists with deadlines'}&lt;/code&gt; этот шаблон отображает:</target>
        </trans-unit>
        <trans-unit id="2ce2eb807a2c38791b0c70f253e31aa065e6af6f" translate="yes" xml:space="preserve">
          <source>With a context of &lt;code&gt;{'first_name': 'John', 'last_name': 'Doe'}&lt;/code&gt;, this template renders to:</source>
          <target state="translated">С контекстом &lt;code&gt;{'first_name': 'John', 'last_name': 'Doe'}&lt;/code&gt; этот шаблон отображает:</target>
        </trans-unit>
        <trans-unit id="b83e9b6bb343b5b95268c96fa70fc484970977f7" translate="yes" xml:space="preserve">
          <source>With all of this, Django gives you an automatically-generated database-access API; see &lt;a href=&quot;queries&quot;&gt;Making queries&lt;/a&gt;.</source>
          <target state="translated">При этом Django предоставляет вам автоматически сгенерированный API доступа к базе данных; см. &lt;a href=&quot;queries&quot;&gt;Выполнение запросов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e0d80c47930c8edfef21a681fbbe240821e076d" translate="yes" xml:space="preserve">
          <source>With any geometry object, the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.coords&quot;&gt;&lt;code&gt;GEOSGeometry.coords&lt;/code&gt;&lt;/a&gt; property may be used to get the geometry coordinates as a Python tuple:</source>
          <target state="translated">Для любого геометрического объекта свойство &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.coords&quot;&gt; &lt;code&gt;GEOSGeometry.coords&lt;/code&gt; &lt;/a&gt; можно использовать для получения геометрических координат в виде кортежа Python:</target>
        </trans-unit>
        <trans-unit id="738fe89e67c8043fa2660ee5b692c8105242a2cd" translate="yes" xml:space="preserve">
          <source>With careful setting of &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;Meta.db_table&lt;/code&gt;&lt;/a&gt; you could create an unmanaged model that shadows an existing model and adds Python methods to it. However, that would be very repetitive and fragile as you need to keep both copies synchronized if you make any changes.</source>
          <target state="translated">Тщательно установив &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;Meta.db_table&lt;/code&gt; ,&lt;/a&gt; вы можете создать неуправляемую модель, которая затеняет существующую модель и добавляет к ней методы Python. Тем не менее, это будет очень повторяющимся и хрупким, поскольку вам нужно синхронизировать обе копии, если вы вносите какие-либо изменения.</target>
        </trans-unit>
        <trans-unit id="62904bca0049a3c884ede45e1c518c521b5a0ffc" translate="yes" xml:space="preserve">
          <source>With everything that follows, remember to profile after every change to ensure that the change is a benefit, and a big enough benefit given the decrease in readability of your code. &lt;strong&gt;All&lt;/strong&gt; of the suggestions below come with the caveat that in your circumstances the general principle might not apply, or might even be reversed.</source>
          <target state="translated">Со всем, что следует, не забывайте профилировать после каждого изменения, чтобы гарантировать, что изменение является преимуществом и достаточно большим преимуществом, учитывая снижение читабельности вашего кода. &lt;strong&gt;Все&lt;/strong&gt; приведенные ниже предложения сопровождаются предупреждением о том, что в ваших обстоятельствах общий принцип может не применяться или даже может быть отменен.</target>
        </trans-unit>
        <trans-unit id="9b77daa194057f5e4662c2bcf38b5f5f280a8773" translate="yes" xml:space="preserve">
          <source>With luck, your Django project should now work correctly again. Run the server again to confirm this.</source>
          <target state="translated">Если повезет,ваш проект &quot;Джанго&quot; теперь должен снова работать правильно.Запустите сервер еще раз,чтобы подтвердить это.</target>
        </trans-unit>
        <trans-unit id="9e442668fd797633e803c097aa305bee3edf5b87" translate="yes" xml:space="preserve">
          <source>With server-side cursors</source>
          <target state="translated">С курсорами на стороне сервера</target>
        </trans-unit>
        <trans-unit id="fafa8432aaa55fb4e9263d82c8ef29deb64d6fc9" translate="yes" xml:space="preserve">
          <source>With server-side cursors, the &lt;code&gt;chunk_size&lt;/code&gt; parameter specifies the number of results to cache at the database driver level. Fetching bigger chunks diminishes the number of round trips between the database driver and the database, at the expense of memory.</source>
          <target state="translated">Для серверных курсоров параметр &lt;code&gt;chunk_size&lt;/code&gt; указывает число результатов, которые необходимо кэшировать на уровне драйвера базы данных. Выборка больших кусков уменьшает количество циклов между драйвером базы данных и базой данных за счет памяти.</target>
        </trans-unit>
        <trans-unit id="ad1f5bc5a6ec34b141f574c5ec00a52fa0d7135a" translate="yes" xml:space="preserve">
          <source>With that &lt;code&gt;TabularInline&lt;/code&gt; (instead of &lt;code&gt;StackedInline&lt;/code&gt;), the related objects are displayed in a more compact, table-based format:</source>
          <target state="translated">С этим &lt;code&gt;TabularInline&lt;/code&gt; (вместо &lt;code&gt;StackedInline&lt;/code&gt; ) связанные объекты отображаются в более компактном табличном формате:</target>
        </trans-unit>
        <trans-unit id="e56cb910598479eb4fb42fa76907c043d04a5411" translate="yes" xml:space="preserve">
          <source>With that ready, we can ask the client to do some work for us:</source>
          <target state="translated">Готовясь к этому,мы можем попросить клиента сделать кое-какую работу за нас:</target>
        </trans-unit>
        <trans-unit id="0f5e24cb3a7a96d792b15a4007309792477697eb" translate="yes" xml:space="preserve">
          <source>With that, you&amp;rsquo;ve got a free, and rich, &lt;a href=&quot;../topics/db/queries&quot;&gt;Python API&lt;/a&gt; to access your data. The API is created on the fly, no code generation necessary:</source>
          <target state="translated">Благодаря этому у вас есть бесплатный и богатый &lt;a href=&quot;../topics/db/queries&quot;&gt;Python API&lt;/a&gt; для доступа к вашим данным. API создается на лету, генерация кода не требуется:</target>
        </trans-unit>
        <trans-unit id="07b783fc8afc75fc87e46cd9a91c869a8286a4f3" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;admin#django.contrib.gis.admin.OSMGeoAdmin&quot;&gt;&lt;code&gt;OSMGeoAdmin&lt;/code&gt;&lt;/a&gt;, GeoDjango uses a &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;Open Street Map&lt;/a&gt; layer in the admin. This provides more context (including street and thoroughfare details) than available with the &lt;a href=&quot;admin#django.contrib.gis.admin.GeoModelAdmin&quot;&gt;&lt;code&gt;GeoModelAdmin&lt;/code&gt;&lt;/a&gt; (which uses the &lt;a href=&quot;https://earth-info.nga.mil/publications/vmap0.html&quot;&gt;Vector Map Level 0&lt;/a&gt; WMS dataset hosted at &lt;a href=&quot;https://www.osgeo.org/&quot;&gt;OSGeo&lt;/a&gt;).</source>
          <target state="translated">С &lt;a href=&quot;admin#django.contrib.gis.admin.OSMGeoAdmin&quot;&gt; &lt;code&gt;OSMGeoAdmin&lt;/code&gt; &lt;/a&gt; GeoDjango использует слой &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;Open Street Map&lt;/a&gt; в админке. Это обеспечивает больше контекста (включая детали улиц и улиц), чем доступный в &lt;a href=&quot;admin#django.contrib.gis.admin.GeoModelAdmin&quot;&gt; &lt;code&gt;GeoModelAdmin&lt;/code&gt; &lt;/a&gt; (который использует набор данных WMS &lt;a href=&quot;https://earth-info.nga.mil/publications/vmap0.html&quot;&gt;Vector Map Level 0,&lt;/a&gt; размещенный в &lt;a href=&quot;https://www.osgeo.org/&quot;&gt;OSGeo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc51a5dcab30a442714ab67541d3b8b8547abe14" translate="yes" xml:space="preserve">
          <source>With the default manager class, it is the same as:</source>
          <target state="translated">Класс менеджера по умолчанию такой же:</target>
        </trans-unit>
        <trans-unit id="ff149737533c0bba9681cff2f90d2e468bcad178" translate="yes" xml:space="preserve">
          <source>With the exception of &lt;code&gt;CONTENT_LENGTH&lt;/code&gt; and &lt;code&gt;CONTENT_TYPE&lt;/code&gt;, as given above, any HTTP headers in the request are converted to &lt;code&gt;META&lt;/code&gt; keys by converting all characters to uppercase, replacing any hyphens with underscores and adding an &lt;code&gt;HTTP_&lt;/code&gt; prefix to the name. So, for example, a header called &lt;code&gt;X-Bender&lt;/code&gt; would be mapped to the &lt;code&gt;META&lt;/code&gt; key &lt;code&gt;HTTP_X_BENDER&lt;/code&gt;.</source>
          <target state="translated">За исключением &lt;code&gt;CONTENT_LENGTH&lt;/code&gt; и &lt;code&gt;CONTENT_TYPE&lt;/code&gt; , как указано выше, любые заголовки HTTP в запросе преобразуются в ключи &lt;code&gt;META&lt;/code&gt; путем преобразования всех символов в верхний регистр, замены любых дефисов подчеркиванием и добавления префикса &lt;code&gt;HTTP_&lt;/code&gt; к имени. Так, например, заголовок с именем &lt;code&gt;X-Bender&lt;/code&gt; будет сопоставлен с ключом &lt;code&gt;META&lt;/code&gt; &lt;code&gt;HTTP_X_BENDER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eafb38acfb691fbb0caaf415d8ea4dd48fa6f4b" translate="yes" xml:space="preserve">
          <source>With the following example:</source>
          <target state="translated">На следующем примере:</target>
        </trans-unit>
        <trans-unit id="338dabc240ad9424e18ac84ff8599b1b2c110d62" translate="yes" xml:space="preserve">
          <source>With these caveats in mind, you should be aware of:</source>
          <target state="translated">Учитывая эти предостережения,вы должны быть в курсе:</target>
        </trans-unit>
        <trans-unit id="0ef35d5472fe507b145151e1f823f4ed965c0fab" translate="yes" xml:space="preserve">
          <source>With these models, the &lt;code&gt;ModelForm&lt;/code&gt; subclasses above would be roughly equivalent to this (the only difference being the &lt;code&gt;save()&lt;/code&gt; method, which we&amp;rsquo;ll discuss in a moment.):</source>
          <target state="translated">С этими моделями подклассы &lt;code&gt;ModelForm&lt;/code&gt; , приведенные выше, были бы примерно эквивалентны этому (единственное отличие - метод &lt;code&gt;save()&lt;/code&gt; , который мы обсудим чуть позже.):</target>
        </trans-unit>
        <trans-unit id="30f874a8062ab7ae52b8048f4e9f7cd797555000" translate="yes" xml:space="preserve">
          <source>With these settings in place, running the command &lt;code&gt;manage.py migrate&lt;/code&gt; creates the necessary database tables for auth related models and permissions for any models defined in your installed apps.</source>
          <target state="translated">После установки этих параметров при запуске команды &lt;code&gt;manage.py migrate&lt;/code&gt; создаются необходимые таблицы базы данных для моделей, связанных с аутентификацией, и разрешения для любых моделей, определенных в установленных приложениях.</target>
        </trans-unit>
        <trans-unit id="425cae5f26a3fe623cc4b325c993d62dd42a4c55" translate="yes" xml:space="preserve">
          <source>With this example, you&amp;rsquo;d use &lt;code&gt;OpinionPoll.objects.with_counts()&lt;/code&gt; to return that list of &lt;code&gt;OpinionPoll&lt;/code&gt; objects with &lt;code&gt;num_responses&lt;/code&gt; attributes.</source>
          <target state="translated">В этом примере вы будете использовать &lt;code&gt;OpinionPoll.objects.with_counts()&lt;/code&gt; , чтобы вернуться , что список &lt;code&gt;OpinionPoll&lt;/code&gt; объектов с &lt;code&gt;num_responses&lt;/code&gt; атрибутами.</target>
        </trans-unit>
        <trans-unit id="86c312570ee6d0c22a5eba5243d3cea820e264f8" translate="yes" xml:space="preserve">
          <source>With this input for &lt;code&gt;cities&lt;/code&gt;, the example &lt;code&gt;{% regroup %}&lt;/code&gt; template code above would result in the following output:</source>
          <target state="translated">С этим вводом для &lt;code&gt;cities&lt;/code&gt; приведенный выше пример шаблона шаблона &lt;code&gt;{% regroup %}&lt;/code&gt; приведет к следующему выводу:</target>
        </trans-unit>
        <trans-unit id="d10ff10740718d4baa881425d36f9a787d2d721d" translate="yes" xml:space="preserve">
          <source>With this model, &lt;code&gt;Photo.objects.all()&lt;/code&gt; will return all &lt;code&gt;Photo&lt;/code&gt; objects in the database, but &lt;code&gt;Photo.on_site.all()&lt;/code&gt; will return only the &lt;code&gt;Photo&lt;/code&gt; objects associated with the current site, according to the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">В этой модели &lt;code&gt;Photo.objects.all()&lt;/code&gt; вернет все объекты &lt;code&gt;Photo&lt;/code&gt; в базе данных, но &lt;code&gt;Photo.on_site.all()&lt;/code&gt; вернет только объекты &lt;code&gt;Photo&lt;/code&gt; , связанные с текущим сайтом, в соответствии с настройкой &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c43597e4e70ecc7341fedb053c4f56d9baeb0390" translate="yes" xml:space="preserve">
          <source>With this name value, the template would be rendered as:</source>
          <target state="translated">При таком значении имени шаблон будет отображен как:</target>
        </trans-unit>
        <trans-unit id="7ee0c93f012f2660125c1340af18dd7acdc600c4" translate="yes" xml:space="preserve">
          <source>With this sample model, &lt;code&gt;Book.objects.all()&lt;/code&gt; will return all books in the database, but &lt;code&gt;Book.dahl_objects.all()&lt;/code&gt; will only return the ones written by Roald Dahl.</source>
          <target state="translated">В этом примере модели &lt;code&gt;Book.objects.all()&lt;/code&gt; вернет все книги в базе данных, а &lt;code&gt;Book.dahl_objects.all()&lt;/code&gt; вернет только те, которые написаны Роальдом Далом.</target>
        </trans-unit>
        <trans-unit id="2bb1df83373df7666462ed7dac48c9e73071e381" translate="yes" xml:space="preserve">
          <source>With this setup installed, lets run some Django code:</source>
          <target state="translated">Установив эту установку,давайте запустим какой-нибудь код Django:</target>
        </trans-unit>
        <trans-unit id="2fde5a9daf66e9ab154496d2d95b77550ecf55b5" translate="yes" xml:space="preserve">
          <source>With this setup, &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; will detect the username in &lt;code&gt;request.META['REMOTE_USER']&lt;/code&gt; and will authenticate and auto-login that user using the &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">С этой настройкой &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; обнаружит имя пользователя в &lt;code&gt;request.META['REMOTE_USER']&lt;/code&gt; и аутентифицирует и автоматически авторизует этого пользователя, используя &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.backends.RemoteUserBackend&quot;&gt; &lt;code&gt;RemoteUserBackend&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ea8e483994674d63b5c518f25cd64bebf68cdc" translate="yes" xml:space="preserve">
          <source>With widgets, it is possible to add assets (&lt;code&gt;css&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt;) and more deeply customize their appearance and behavior.</source>
          <target state="translated">С помощью виджетов можно добавлять ресурсы ( &lt;code&gt;css&lt;/code&gt; и &lt;code&gt;javascript&lt;/code&gt; ) и более глубоко настраивать их внешний вид и поведение.</target>
        </trans-unit>
        <trans-unit id="86c4a61644ab2edf50d4da920e388176369b7eb4" translate="yes" xml:space="preserve">
          <source>Within such a migration, all operations are run without a transaction. It&amp;rsquo;s possible to execute parts of the migration inside a transaction using &lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; or by passing &lt;code&gt;atomic=True&lt;/code&gt; to &lt;code&gt;RunPython&lt;/code&gt;.</source>
          <target state="translated">В рамках такой миграции все операции выполняются без транзакции. Можно выполнить часть миграции внутри транзакции, используя &lt;a href=&quot;../topics/db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; или передавая &lt;code&gt;atomic=True&lt;/code&gt; в &lt;code&gt;RunPython&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dccd5509c0f1f271c08437befb3bf1c06db50e6" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;static&lt;/code&gt; directory you have just created, create another directory called &lt;code&gt;polls&lt;/code&gt; and within that create a file called &lt;code&gt;style.css&lt;/code&gt;. In other words, your stylesheet should be at &lt;code&gt;polls/static/polls/style.css&lt;/code&gt;. Because of how the &lt;code&gt;AppDirectoriesFinder&lt;/code&gt; staticfile finder works, you can refer to this static file in Django as &lt;code&gt;polls/style.css&lt;/code&gt;, similar to how you reference the path for templates.</source>
          <target state="translated">В &lt;code&gt;static&lt;/code&gt; каталоге, который вы только что создали, создайте другой каталог с именем &lt;code&gt;polls&lt;/code&gt; и в нем создайте файл с именем &lt;code&gt;style.css&lt;/code&gt; . Другими словами, ваша таблица стилей должна быть в &lt;code&gt;polls/static/polls/style.css&lt;/code&gt; . Из - за того , как &lt;code&gt;AppDirectoriesFinder&lt;/code&gt; StaticFile искатель работа, вы можете обратиться к этому статическому файлу в Django , как &lt;code&gt;polls/style.css&lt;/code&gt; , подобно тому , как вы ссылка на пути для шаблонов.</target>
        </trans-unit>
        <trans-unit id="d90214a20a57d631f322ecba2947da5c36983def" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;templates&lt;/code&gt; directory you have just created, create another directory called &lt;code&gt;polls&lt;/code&gt;, and within that create a file called &lt;code&gt;index.html&lt;/code&gt;. In other words, your template should be at &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt;. Because of how the &lt;code&gt;app_directories&lt;/code&gt; template loader works as described above, you can refer to this template within Django as &lt;code&gt;polls/index.html&lt;/code&gt;.</source>
          <target state="translated">В каталоге &lt;code&gt;templates&lt;/code&gt; вы только что создали, создайте другой каталог с именем &lt;code&gt;polls&lt;/code&gt; , а внутри него создайте файл с именем &lt;code&gt;index.html&lt;/code&gt; . Другими словами, ваш шаблон должен быть в &lt;code&gt;polls/templates/polls/index.html&lt;/code&gt; . Из-за того, как &lt;code&gt;app_directories&lt;/code&gt; шаблонов app_directories работает, как описано выше, вы можете ссылаться на этот шаблон в Django как &lt;code&gt;polls/index.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="860f3f8136ad1b30aaed113d8fc7a05e68d5e190" translate="yes" xml:space="preserve">
          <source>Within this &lt;code&gt;admin&lt;/code&gt; directory, create sub-directories named after your app. Within these app subdirectories create sub-directories named after your models. Note, that the admin app will lowercase the model name when looking for the directory, so make sure you name the directory in all lowercase if you are going to run your app on a case-sensitive filesystem.</source>
          <target state="translated">В этом &lt;code&gt;admin&lt;/code&gt; каталоге создайте подкаталоги, названные в честь вашего приложения. В этих подкаталогах приложения создайте подкаталоги, названные в честь ваших моделей. Обратите внимание, что приложение администратора будет искать имя модели в нижнем регистре при поиске каталога, поэтому убедитесь, что имя каталога указано в нижнем регистре, если вы собираетесь запускать приложение в чувствительной к регистру файловой системе.</target>
        </trans-unit>
        <trans-unit id="4ca0d6e3b0362dd0b3d73a1fa76f30a90dcda587" translate="yes" xml:space="preserve">
          <source>Without passing &lt;code&gt;safe=False&lt;/code&gt;, a &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">Без прохождения &lt;code&gt;safe=False&lt;/code&gt; , &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; будет поднят.</target>
        </trans-unit>
        <trans-unit id="f284bfae092e3b0361f7b1a82a5cc6fdd589d50e" translate="yes" xml:space="preserve">
          <source>Without server-side cursors</source>
          <target state="translated">Без серверных курсоров</target>
        </trans-unit>
        <trans-unit id="a86dc2954ba50b0e94500dc269d92f5b9d22776e" translate="yes" xml:space="preserve">
          <source>Without tests, the purpose or intended behavior of an application might be rather opaque. Even when it&amp;rsquo;s your own code, you will sometimes find yourself poking around in it trying to find out what exactly it&amp;rsquo;s doing.</source>
          <target state="translated">Без тестов цель или предполагаемое поведение приложения могут быть довольно непрозрачными. Даже когда это ваш собственный код, вы иногда будете копаться в нем, пытаясь выяснить, что именно он делает.</target>
        </trans-unit>
        <trans-unit id="6eef4c92bb90c0d30ae8bf398ba7f74b5ec8257d" translate="yes" xml:space="preserve">
          <source>Work at the appropriate level</source>
          <target state="translated">Работать на должном уровне</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="cf0a3114c0fc19fbd07e4133015e8a2d9864d366" translate="yes" xml:space="preserve">
          <source>Working on Windows?</source>
          <target state="translated">Работаете под Windows?</target>
        </trans-unit>
        <trans-unit id="ea2a843424161edf786985c720f3f8fb74c9cdcf" translate="yes" xml:space="preserve">
          <source>Working on a feature</source>
          <target state="translated">Работа над функцией</target>
        </trans-unit>
        <trans-unit id="c4f3b7c87ff6119e5fa3e2d759974fa95309264e" translate="yes" xml:space="preserve">
          <source>Working with User objects</source>
          <target state="translated">Работа с объектами Пользователя</target>
        </trans-unit>
        <trans-unit id="38c38e0a2b96715f609ad36f347d5b4b204f5b03" translate="yes" xml:space="preserve">
          <source>Working with a model with two or more foreign keys to the same parent model</source>
          <target state="translated">Работа с моделью с двумя или более иностранными ключами к одной и той же родительской модели.</target>
        </trans-unit>
        <trans-unit id="37711baf96d8b42949c354e70ad51d333cf6464d" translate="yes" xml:space="preserve">
          <source>Working with form templates</source>
          <target state="translated">Работа с шаблонами форм</target>
        </trans-unit>
        <trans-unit id="6b9c32fb1ecf6ca317697bb483fbda64b55198f2" translate="yes" xml:space="preserve">
          <source>Working with forms</source>
          <target state="translated">Работа с формами</target>
        </trans-unit>
        <trans-unit id="263d5356a18c33fbc84ea99f9393971f194a22ab" translate="yes" xml:space="preserve">
          <source>Working with lazy translation objects</source>
          <target state="translated">Работа с ленивыми объектами перевода</target>
        </trans-unit>
        <trans-unit id="bc1c623de2a5c76ef2f9416d9b9fcfd44c106169" translate="yes" xml:space="preserve">
          <source>Working with many-to-many intermediary models</source>
          <target state="translated">Работа с множеством посреднических моделей.</target>
        </trans-unit>
        <trans-unit id="1f01e152465533ae5a972a35b6bbfbf28502cf01" translate="yes" xml:space="preserve">
          <source>Working with many-to-many models</source>
          <target state="translated">Работа с много-многочисленными моделями</target>
        </trans-unit>
        <trans-unit id="ddcb6b13f425070f529f4d11169bef8d874481dc" translate="yes" xml:space="preserve">
          <source>Works like &lt;a href=&quot;#django.db.models.query.QuerySet.first&quot;&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/a&gt;, but returns the last object in the queryset.</source>
          <target state="translated">Работает как &lt;a href=&quot;#django.db.models.query.QuerySet.first&quot;&gt; &lt;code&gt;first()&lt;/code&gt; &lt;/a&gt; , но возвращает последний объект в наборе запросов.</target>
        </trans-unit>
        <trans-unit id="34561367ffbe167dbfe530daabec78fdac33cdcf" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;as_sql()&lt;/code&gt; method. When an expression is compiled by &lt;code&gt;compiler.compile()&lt;/code&gt;, Django will first try to call &lt;code&gt;as_vendorname()&lt;/code&gt;, where &lt;code&gt;vendorname&lt;/code&gt; is the vendor name of the backend used for executing the query. The &lt;code&gt;vendorname&lt;/code&gt; is one of &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, or &lt;code&gt;mysql&lt;/code&gt; for Django&amp;rsquo;s built-in backends.</source>
          <target state="translated">Работает как &lt;code&gt;as_sql()&lt;/code&gt; . Когда выражение компилируется с помощью &lt;code&gt;compiler.compile()&lt;/code&gt; , Django сначала попытается вызвать &lt;code&gt;as_vendorname()&lt;/code&gt; , где &lt;code&gt;vendorname&lt;/code&gt; - это имя поставщика серверной части, используемой для выполнения запроса. &lt;code&gt;vendorname&lt;/code&gt; является одним из &lt;code&gt;postgresql&lt;/code&gt; , &lt;code&gt;oracle&lt;/code&gt; , &lt;code&gt;sqlite&lt;/code&gt; или &lt;code&gt;mysql&lt;/code&gt; для встроенных в бэкэндах Джанго.</target>
        </trans-unit>
        <trans-unit id="c5ecd51ae5c4c7caed0dae2ab8030ca8198edf70" translate="yes" xml:space="preserve">
          <source>Works otherwise like &lt;a href=&quot;#django.db.models.query.QuerySet.latest&quot;&gt;&lt;code&gt;latest()&lt;/code&gt;&lt;/a&gt; except the direction is changed.</source>
          <target state="translated">Работает иначе, как &lt;a href=&quot;#django.db.models.query.QuerySet.latest&quot;&gt; &lt;code&gt;latest()&lt;/code&gt; &lt;/a&gt; за исключением изменения направления.</target>
        </trans-unit>
        <trans-unit id="f8991b2c73ed446411f13ca50f19e938b090cffc" translate="yes" xml:space="preserve">
          <source>World Borders</source>
          <target state="translated">Мировые границы</target>
        </trans-unit>
        <trans-unit id="1eb904c54c7b10a6925beddf1368b31095a72618" translate="yes" xml:space="preserve">
          <source>Would generate SQL along these lines:</source>
          <target state="translated">Будет генерировать SQL в соответствии с этим:</target>
        </trans-unit>
        <trans-unit id="6401b988f8471df5a57e9c9a83961e7b9604a7ae" translate="yes" xml:space="preserve">
          <source>Would match a &lt;code&gt;Blog&lt;/code&gt; titled &lt;code&gt;&quot;Beatles Blog&quot;&lt;/code&gt;, &lt;code&gt;&quot;beatles blog&quot;&lt;/code&gt;, or even &lt;code&gt;&quot;BeAtlES blOG&quot;&lt;/code&gt;.</source>
          <target state="translated">Будет ли соответствовать &lt;code&gt;Blog&lt;/code&gt; под названием &lt;code&gt;&quot;Beatles Blog&quot;&lt;/code&gt; , &lt;code&gt;&quot;beatles blog&quot;&lt;/code&gt; , или даже &lt;code&gt;&quot;BeAtlES blOG&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6962ff8c9e27a68a644675d133701514aae2e762" translate="yes" xml:space="preserve">
          <source>Would output:</source>
          <target state="translated">Выводит:</target>
        </trans-unit>
        <trans-unit id="67166998ac24e1858679f67fc83a1bdc460fff7b" translate="yes" xml:space="preserve">
          <source>Wrap the message with &lt;code&gt;gettext&lt;/code&gt; to enable translation:</source>
          <target state="translated">Оберните сообщение &lt;code&gt;gettext&lt;/code&gt; , чтобы включить перевод:</target>
        </trans-unit>
        <trans-unit id="4c08c2c2aff601756bcfcd16aeed4ec3ea7dbf9a" translate="yes" xml:space="preserve">
          <source>Wrapper (using &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt;) around two widgets: &lt;a href=&quot;#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt; for the date, and &lt;a href=&quot;#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt; for the time. Must be used with &lt;a href=&quot;fields#django.forms.SplitDateTimeField&quot;&gt;&lt;code&gt;SplitDateTimeField&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;fields#django.forms.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обертка (используя &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt; ) вокруг двух виджетов: &lt;a href=&quot;#django.forms.DateInput&quot;&gt; &lt;code&gt;DateInput&lt;/code&gt; &lt;/a&gt; для даты и &lt;a href=&quot;#django.forms.TimeInput&quot;&gt; &lt;code&gt;TimeInput&lt;/code&gt; &lt;/a&gt; для времени. Должен использоваться с &lt;a href=&quot;fields#django.forms.SplitDateTimeField&quot;&gt; &lt;code&gt;SplitDateTimeField&lt;/code&gt; ,&lt;/a&gt; а не с &lt;a href=&quot;fields#django.forms.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b7a6fc46dc6b50bb95bd6ccbfaa5bcf04a972b9" translate="yes" xml:space="preserve">
          <source>Wrapper around three &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widgets: one each for month, day, and year.</source>
          <target state="translated">Обертка вокруг трех виджетов &lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt; : по одному на месяц, день и год.</target>
        </trans-unit>
        <trans-unit id="4e3bc69181c58540083b70522b49708615621e5b" translate="yes" xml:space="preserve">
          <source>Wrapping &lt;code&gt;atomic&lt;/code&gt; in a try/except block allows for natural handling of integrity errors:</source>
          <target state="translated">Обтекание &lt;code&gt;atomic&lt;/code&gt; элементов в блоке try / исключением допускает естественную обработку ошибок целостности:</target>
        </trans-unit>
        <trans-unit id="eeb2378b4a939e60b2ba22f29d81d2bbf683ab8a" translate="yes" xml:space="preserve">
          <source>Wraps the tests within two nested &lt;a href=&quot;../db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; blocks: one for the whole class and one for each test. Therefore, if you want to test some specific database transaction behavior, use &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Оборачивает тесты в два вложенных блока &lt;a href=&quot;../db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; : один для всего класса и один для каждого теста. Поэтому, если вы хотите протестировать определенное поведение транзакции базы данных, используйте &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f1af4224bf5c782c2c2c5df427fb018e1b12079" translate="yes" xml:space="preserve">
          <source>Wraps words at specified line length.</source>
          <target state="translated">Обертывает слова на заданную длину строки.</target>
        </trans-unit>
        <trans-unit id="d95030187251f05f26dba7724a78f629481d6b82" translate="yes" xml:space="preserve">
          <source>Write a minimal form</source>
          <target state="translated">Написать минимальную форму</target>
        </trans-unit>
        <trans-unit id="69f644f506729d32956c47b6af20b41508c872d3" translate="yes" xml:space="preserve">
          <source>Write views that actually do something</source>
          <target state="translated">Пишите мнения,которые действительно что-то делают</target>
        </trans-unit>
        <trans-unit id="9b7778ebda17369cfe0858b8e658b8e29e72e12c" translate="yes" xml:space="preserve">
          <source>Write your first view</source>
          <target state="translated">Напиши свой первый взгляд</target>
        </trans-unit>
        <trans-unit id="ba89409cdbb719e520e537d4dc3c9fa66f953fe1" translate="yes" xml:space="preserve">
          <source>Write your own &lt;a href=&quot;sql&quot;&gt;custom SQL to retrieve data or populate models&lt;/a&gt;. Use &lt;code&gt;django.db.connection.queries&lt;/code&gt; to find out what Django is writing for you and start from there.</source>
          <target state="translated">Напишите свой собственный &lt;a href=&quot;sql&quot;&gt;SQL для извлечения данных или заполнения моделей&lt;/a&gt; . Используйте &lt;code&gt;django.db.connection.queries&lt;/code&gt; , чтобы узнать, что Django пишет для вас, и начните с этого.</target>
        </trans-unit>
        <trans-unit id="4516094b6c11867d7fd71bd2edcec64e519ad7f8" translate="yes" xml:space="preserve">
          <source>Write your own serializer</source>
          <target state="translated">Напиши свой собственный сериализатор</target>
        </trans-unit>
        <trans-unit id="593a593db2c2e8101ecc6716ddea21f8e36004c5" translate="yes" xml:space="preserve">
          <source>Write your view</source>
          <target state="translated">Напишите ваше мнение</target>
        </trans-unit>
        <trans-unit id="51fb5c4a36aefd820c0a4a2e727717e3a99e8e4e" translate="yes" xml:space="preserve">
          <source>Write your views</source>
          <target state="translated">Запишите свои взгляды</target>
        </trans-unit>
        <trans-unit id="335cbd7aaa63f61606a8ce6bfa9ddbc970e54241" translate="yes" xml:space="preserve">
          <source>Writer Objects</source>
          <target state="translated">Объекты писателя</target>
        </trans-unit>
        <trans-unit id="ac5688fd5b9416a32c09412ae4319afcb4c746dc" translate="yes" xml:space="preserve">
          <source>Writes a list of lines to the response. Line separators are not added. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="translated">Записывает список строк в ответ. Разделители строк не добавляются. Этот метод делает экземпляр &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; потоковым объектом.</target>
        </trans-unit>
        <trans-unit id="469b1f8873498de485e6c8f565f8f7d313eb6b92" translate="yes" xml:space="preserve">
          <source>Writing Documentation</source>
          <target state="translated">Письменная документация</target>
        </trans-unit>
        <trans-unit id="0e4a6e0250dd5cea6b06e01b05fc4ec66b26a313" translate="yes" xml:space="preserve">
          <source>Writing Web applications can be monotonous, because we repeat certain patterns again and again. Django tries to take away some of that monotony at the model and template layers, but Web developers also experience this boredom at the view level.</source>
          <target state="translated">Написание веб-приложений может быть монотонным,потому что мы повторяем определенные шаблоны снова и снова.Джанго пытается убрать часть этой монотонности на уровне модели и шаблонов,но веб-разработчики также испытывают эту скуку на уровне просмотра.</target>
        </trans-unit>
        <trans-unit id="f5eea826a103a9e63aaa17bb8e08e0a850bed2d7" translate="yes" xml:space="preserve">
          <source>Writing a &lt;code&gt;FileField&lt;/code&gt; subclass</source>
          <target state="translated">Написание подкласса &lt;code&gt;FileField&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="442ecc5a1b124669e58f9d2b78fe24454b924167" translate="yes" xml:space="preserve">
          <source>Writing a custom field can be a tricky process, particularly if you&amp;rsquo;re doing complex conversions between your Python types and your database and serialization formats. Here are a couple of tips to make things go more smoothly:</source>
          <target state="translated">Написание настраиваемого поля может быть сложным процессом, особенно если вы делаете сложные преобразования между вашими типами Python и вашей базой данных и форматами сериализации. Вот несколько советов, чтобы все прошло более гладко:</target>
        </trans-unit>
        <trans-unit id="81cc6a1dc4905f3203cc2469c61dbd19a8ea56a2" translate="yes" xml:space="preserve">
          <source>Writing a custom storage system</source>
          <target state="translated">Написание пользовательской системы хранения данных</target>
        </trans-unit>
        <trans-unit id="3c77ee8057b170032f3fc2082d0bf5504d32ab58" translate="yes" xml:space="preserve">
          <source>Writing a field subclass</source>
          <target state="translated">Написание подкласса поля</target>
        </trans-unit>
        <trans-unit id="28190efa607b31c7c24d9f5779e46c865e0a83fe" translate="yes" xml:space="preserve">
          <source>Writing a manager for a custom user model</source>
          <target state="translated">Написание менеджера для пользовательской модели.</target>
        </trans-unit>
        <trans-unit id="4a95409945ba70d523b221bcfe69cd4acf48486d" translate="yes" xml:space="preserve">
          <source>Writing a test for ticket #99999</source>
          <target state="translated">Писание теста на билет №99999</target>
        </trans-unit>
        <trans-unit id="88ab807ab1b51b24fa926c7acfe234cde3fc1923" translate="yes" xml:space="preserve">
          <source>Writing a test for your patch.</source>
          <target state="translated">Пишу тест для твоего патча.</target>
        </trans-unit>
        <trans-unit id="1af41d263686eb32d60e244754483e08b7554c16" translate="yes" xml:space="preserve">
          <source>Writing action functions</source>
          <target state="translated">Функции записи действий</target>
        </trans-unit>
        <trans-unit id="7017aaee486b4a2f2f9818b5d2d33987237c62e3" translate="yes" xml:space="preserve">
          <source>Writing actions</source>
          <target state="translated">Письменные действия</target>
        </trans-unit>
        <trans-unit id="dac7c061b7ede6561530907e3cac49d1154f3064" translate="yes" xml:space="preserve">
          <source>Writing alternative implementations for existing lookups</source>
          <target state="translated">Написание альтернативных реализаций для существующих поисков</target>
        </trans-unit>
        <trans-unit id="b632bd18a18b0ac82e8864d3ef7fbb3f13884779" translate="yes" xml:space="preserve">
          <source>Writing an authentication backend</source>
          <target state="translated">Написание бэкэнда аутентификации</target>
        </trans-unit>
        <trans-unit id="d240b9a5209cfc65c18ec9a484be5d142b0dc927" translate="yes" xml:space="preserve">
          <source>Writing an efficient &lt;code&gt;abs__lt&lt;/code&gt; lookup</source>
          <target state="translated">Написание эффективного поиска &lt;code&gt;abs__lt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce09dc8b1630d5b6121f1680420853474009f4cd" translate="yes" xml:space="preserve">
          <source>Writing and running tests</source>
          <target state="translated">Пишущий и выполняющий тесты</target>
        </trans-unit>
        <trans-unit id="a24e68be06da6f3453a917ef63dbe5a614d3b176" translate="yes" xml:space="preserve">
          <source>Writing custom &lt;code&gt;django-admin&lt;/code&gt; commands</source>
          <target state="translated">Написание пользовательских команд &lt;code&gt;django-admin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24078713b88a4bed8207f7f7de52445c32b30688" translate="yes" xml:space="preserve">
          <source>Writing custom django-admin commands</source>
          <target state="translated">Запись пользовательских команд django-admin</target>
        </trans-unit>
        <trans-unit id="507357a9c46458552e9fd2b88f20b8166e5d93d6" translate="yes" xml:space="preserve">
          <source>Writing custom model fields</source>
          <target state="translated">Запись пользовательских полей модели</target>
        </trans-unit>
        <trans-unit id="a1949cc5d14d30f1aa7e649edd0f81322fd1cfc1" translate="yes" xml:space="preserve">
          <source>Writing custom template filters</source>
          <target state="translated">Запись пользовательских шаблонных фильтров</target>
        </trans-unit>
        <trans-unit id="b6ae11c406299261bda61ef17f951bbbabdca2c9" translate="yes" xml:space="preserve">
          <source>Writing custom template tags</source>
          <target state="translated">Запись пользовательских тегов шаблона</target>
        </trans-unit>
        <trans-unit id="a60d853a4f6c3f84ca86f63adef876cfbd4da6c3" translate="yes" xml:space="preserve">
          <source>Writing custom upload handlers</source>
          <target state="translated">Написание пользовательских обработчиков загрузки</target>
        </trans-unit>
        <trans-unit id="968e60d1fab1b7f1dde5b50a54cbd1107b9490c9" translate="yes" xml:space="preserve">
          <source>Writing database migrations</source>
          <target state="translated">Миграции баз данных для записи</target>
        </trans-unit>
        <trans-unit id="c6d07e9abc215c0341de92ee7a969a93141c2181" translate="yes" xml:space="preserve">
          <source>Writing inclusion tags is probably best demonstrated by example. Let&amp;rsquo;s write a tag that outputs a list of choices for a given &lt;code&gt;Poll&lt;/code&gt; object, such as was created in the &lt;a href=&quot;../intro/tutorial02#creating-models&quot;&gt;tutorials&lt;/a&gt;. We&amp;rsquo;ll use the tag like this:</source>
          <target state="translated">Написание тегов включения, вероятно, лучше всего продемонстрировать на примере. Давайте напишем тег, который выводит список вариантов для данного объекта &lt;code&gt;Poll&lt;/code&gt; , например, который был создан в &lt;a href=&quot;../intro/tutorial02#creating-models&quot;&gt;руководствах&lt;/a&gt; . Мы будем использовать тег как это:</target>
        </trans-unit>
        <trans-unit id="f67410572b6948ee1c5ab1efb2fad3ffe185721a" translate="yes" xml:space="preserve">
          <source>Writing more views</source>
          <target state="translated">Написание дополнительных просмотров</target>
        </trans-unit>
        <trans-unit id="4c607be4256339b1e317fd7c1af8dc620bafeb19" translate="yes" xml:space="preserve">
          <source>Writing our first test</source>
          <target state="translated">Написание нашего первого теста</target>
        </trans-unit>
        <trans-unit id="91333aac1156b58854cc4d86be5d81f2e2a0c3c6" translate="yes" xml:space="preserve">
          <source>Writing some tests for your ticket</source>
          <target state="translated">Пишу некоторые тесты для твоего билета</target>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="translated">Тесты на написание</target>
        </trans-unit>
        <trans-unit id="b8c9449f7653b86092e8d2020b473b30f62baabd" translate="yes" xml:space="preserve">
          <source>Writing the code for your patch.</source>
          <target state="translated">Пишу код для твоего патча.</target>
        </trans-unit>
        <trans-unit id="91a690a4062b317f7e9d899541dec3e3d0b44596" translate="yes" xml:space="preserve">
          <source>Writing the code for your ticket</source>
          <target state="translated">Пишите код для вашего билета</target>
        </trans-unit>
        <trans-unit id="8fb4ac090b5f7d8a78b7e4615d3248bdf40f8a59" translate="yes" xml:space="preserve">
          <source>Writing the compilation function</source>
          <target state="translated">Написание функции компиляции</target>
        </trans-unit>
        <trans-unit id="378ff51957d0646d75fadf471b9bf71be736c5af" translate="yes" xml:space="preserve">
          <source>Writing the renderer</source>
          <target state="translated">Написание визуализатора</target>
        </trans-unit>
        <trans-unit id="10f53db1537ba910dc5bfce9768080ea1b76b397" translate="yes" xml:space="preserve">
          <source>Writing the translations and local formats. Usually done by translators.</source>
          <target state="translated">Написание переводов и локальных форматов.Обычно выполняются переводчиками.</target>
        </trans-unit>
        <trans-unit id="f118dea57ae8fd0d617376a99b1f7f6e97195a00" translate="yes" xml:space="preserve">
          <source>Writing this view is left as an exercise to the reader.</source>
          <target state="translated">Написание этого взгляда оставлено для читателя как упражнение.</target>
        </trans-unit>
        <trans-unit id="a34619be35d84072a7d650382a097d8599d0e818" translate="yes" xml:space="preserve">
          <source>Writing validators</source>
          <target state="translated">Написание валидаторов</target>
        </trans-unit>
        <trans-unit id="2b8a469310befbd0ea7d884e9716de6afafcb480" translate="yes" xml:space="preserve">
          <source>Writing views</source>
          <target state="translated">Мнения при написании</target>
        </trans-unit>
        <trans-unit id="cad8a42e973822a174ddd51ae033e62b808dbf51" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 1</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 1.</target>
        </trans-unit>
        <trans-unit id="7071265c988154509c7d511c8542976bc0435aed" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 2</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 2.</target>
        </trans-unit>
        <trans-unit id="52b435ea36d5aff0f2e26bf95a33727b217b1077" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 3</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 3.</target>
        </trans-unit>
        <trans-unit id="1130d84b977b0fbfc3567312868ad4ad75d8526b" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 4</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 4.</target>
        </trans-unit>
        <trans-unit id="019df1e846c9adfba2f2f0acefe8fa3f53f4f7ba" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 5</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 5.</target>
        </trans-unit>
        <trans-unit id="820ec49eb1d1304ae4da7db8d62b55ff5b588ecc" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 6</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 6.</target>
        </trans-unit>
        <trans-unit id="db8b208576928d0e127ca8e15eaf858569cb627f" translate="yes" xml:space="preserve">
          <source>Writing your first Django app, part 7</source>
          <target state="translated">Написание твоего первого приложения &quot;Джанго&quot;,часть 7.</target>
        </trans-unit>
        <trans-unit id="5371286899fc4b6e246355721348e53e6030932b" translate="yes" xml:space="preserve">
          <source>Writing your first patch for Django</source>
          <target state="translated">Пишите свой первый патч для Джанго.</target>
        </trans-unit>
        <trans-unit id="5e03a1ed4788149883fbc8f2954297f7f07446f5" translate="yes" xml:space="preserve">
          <source>Writing your own</source>
          <target state="translated">Пиши свой собственный</target>
        </trans-unit>
        <trans-unit id="c00321d5b11ab75c2ff8f121a719cfc906d0aa11" translate="yes" xml:space="preserve">
          <source>Writing your own Query Expressions</source>
          <target state="translated">Пишите свои собственные Выражения Запросов</target>
        </trans-unit>
        <trans-unit id="4a0fc27e1e76c7b07c1a175a4fe442911047f461" translate="yes" xml:space="preserve">
          <source>Writing your own checks</source>
          <target state="translated">Выписывание собственных чеков</target>
        </trans-unit>
        <trans-unit id="fc29bf2e85b7e479f76ba5215f43e004feb25120" translate="yes" xml:space="preserve">
          <source>Writing your own context processors</source>
          <target state="translated">Написание собственных контекстных процессоров</target>
        </trans-unit>
        <trans-unit id="e206dc975fa788215609b841c99e5a6c734c7df3" translate="yes" xml:space="preserve">
          <source>Writing your own hasher</source>
          <target state="translated">Написание собственного хэшера</target>
        </trans-unit>
        <trans-unit id="5a95f9f8dbae7e584e4c94d5da5667a4cc4dcb65" translate="yes" xml:space="preserve">
          <source>Writing your own middleware</source>
          <target state="translated">Написание собственного промежуточного программного обеспечения</target>
        </trans-unit>
        <trans-unit id="03d8af8eb1554272f5280b9631be754629efb742" translate="yes" xml:space="preserve">
          <source>Writing your own validator</source>
          <target state="translated">Написание собственного валидатора</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="492faa8c7fb1e4982d75c9e8a40141a28ba34bf2" translate="yes" xml:space="preserve">
          <source>X (&amp;ge; 10.2.4)</source>
          <target state="translated">X (&amp;ge; 10.2.4)</target>
        </trans-unit>
        <trans-unit id="5169085b86b81a3a71bbe0fe57a138087370a97c" translate="yes" xml:space="preserve">
          <source>X (&amp;ge; 5.7.5)</source>
          <target state="translated">X (&amp;ge; 5.7.5)</target>
        </trans-unit>
        <trans-unit id="4a3104bb7914fdb7c22e205c4cd815388af17412" translate="yes" xml:space="preserve">
          <source>X (&amp;ge;10.3)</source>
          <target state="translated">X (&amp;ge;10,3)</target>
        </trans-unit>
        <trans-unit id="46fc78ee1944c50714396aadc1e176e5ea09c911" translate="yes" xml:space="preserve">
          <source>X (&amp;ge;8.0.1)</source>
          <target state="translated">X (&amp;ge;8.0.1)</target>
        </trans-unit>
        <trans-unit id="89fdc352a9eea99e0bef83f9a6cdc077894a6831" translate="yes" xml:space="preserve">
          <source>X (LWGEOM)</source>
          <target state="translated">X (LWGEOM)</target>
        </trans-unit>
        <trans-unit id="13cc13c68e22cba1e7d0bc0fe950d8d9b6beea90" translate="yes" xml:space="preserve">
          <source>X and Y sizes to snap the grid to.</source>
          <target state="translated">Размеры X и Y для привязки сетки к.</target>
        </trans-unit>
        <trans-unit id="211e20ce1b59817a4400300639d4d1e39f47fd96" translate="yes" xml:space="preserve">
          <source>X, Y sizes and the corresponding X, Y origins.</source>
          <target state="translated">Размеры X,Y и соответствующее происхождение X,Y.</target>
        </trans-unit>
        <trans-unit id="09752649f6a0071adcb25a852740840060d5cb7b" translate="yes" xml:space="preserve">
          <source>XE not supported.</source>
          <target state="translated">XE не поддерживается.</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="e8930cc11d019911e67cd36f7208b613455e2838" translate="yes" xml:space="preserve">
          <source>XML declaration, document type, and comments are ignored. Only the root element and its children are compared.</source>
          <target state="translated">XML-декларация,тип документа и комментарии игнорируются.Сравниваются только корневой элемент и его дети.</target>
        </trans-unit>
        <trans-unit id="5ac9ea4dedfb364c35a3e3e09c7e833b9fe5b05e" translate="yes" xml:space="preserve">
          <source>XSS attacks allow a user to inject client side scripts into the browsers of other users. This is usually achieved by storing the malicious scripts in the database where it will be retrieved and displayed to other users, or by getting users to click a link which will cause the attacker&amp;rsquo;s JavaScript to be executed by the user&amp;rsquo;s browser. However, XSS attacks can originate from any untrusted source of data, such as cookies or Web services, whenever the data is not sufficiently sanitized before including in a page.</source>
          <target state="translated">Атаки XSS позволяют пользователю внедрять клиентские сценарии в браузеры других пользователей. Обычно это достигается путем хранения вредоносных сценариев в базе данных, где они будут извлекаться и отображаться для других пользователей, или путем предоставления пользователям возможности щелкнуть ссылку, которая приведет к тому, что браузер пользователя выполнит JavaScript-код злоумышленника. Однако атаки XSS могут осуществляться из любого ненадежного источника данных, такого как файлы cookie или веб-службы, когда данные недостаточно очищены перед включением в страницу.</target>
        </trans-unit>
        <trans-unit id="10bbdd6485adccb62cf72b3b064fbc310a638bac" translate="yes" xml:space="preserve">
          <source>XSS attacks are mitigated by escaping the characters &amp;ldquo;&amp;lt;&amp;rdquo;, &amp;ldquo;&amp;gt;&amp;rdquo; and &amp;ldquo;&amp;amp;&amp;rdquo;. For example if &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;{'hello': 'world&amp;lt;/script&amp;gt;&amp;amp;amp;'}&lt;/code&gt;, the output is:</source>
          <target state="translated">Атаки XSS смягчаются путем экранирования символов &amp;laquo;&amp;lt;&amp;raquo;, &amp;laquo;&amp;gt;&amp;raquo; и &amp;laquo;&amp;amp;&amp;raquo;. Например, если &lt;code&gt;value&lt;/code&gt; равно &lt;code&gt;{'hello': 'world&amp;lt;/script&amp;gt;&amp;amp;amp;'}&lt;/code&gt; , выводом будет:</target>
        </trans-unit>
        <trans-unit id="ffbcb202b09db426bae56cf2ffb88f18594f2258" translate="yes" xml:space="preserve">
          <source>YAML</source>
          <target state="translated">YAML</target>
        </trans-unit>
        <trans-unit id="c6bbff28a9f2ee0de8903b9e1f1de7d1d03a98e1" translate="yes" xml:space="preserve">
          <source>YAML serialization looks quite similar to JSON. The object list is serialized as a sequence mappings with the keys &amp;ldquo;pk&amp;rdquo;, &amp;ldquo;model&amp;rdquo; and &amp;ldquo;fields&amp;rdquo;. Each field is again a mapping with the key being name of the field and the value the value:</source>
          <target state="translated">Сериализация YAML очень похожа на JSON. Список объектов сериализуется как последовательности последовательностей с ключами &amp;laquo;pk&amp;raquo;, &amp;laquo;model&amp;raquo; и &amp;laquo;fields&amp;raquo;. Каждое поле снова является отображением, ключом которого является имя поля, а значением является значение:</target>
        </trans-unit>
        <trans-unit id="313a9e1956e25fb6aaf235ae9f81979ef5e2530a" translate="yes" xml:space="preserve">
          <source>Yahoo&amp;rsquo;s Yslow</source>
          <target state="translated">Yslow от Yahoo</target>
        </trans-unit>
        <trans-unit id="0637a8c214de05478d2f80caa89292ae204313c1" translate="yes" xml:space="preserve">
          <source>Yard</source>
          <target state="translated">Yard</target>
        </trans-unit>
        <trans-unit id="fee934ee081d372e08a790ccc20076f29e4289ca" translate="yes" xml:space="preserve">
          <source>Yard (Sears)</source>
          <target state="translated">Двор (Sears)</target>
        </trans-unit>
        <trans-unit id="982392780b169519763bccb155f22790b4b7fba2" translate="yes" xml:space="preserve">
          <source>Year, 2 digits.</source>
          <target state="translated">Год,2 цифры.</target>
        </trans-unit>
        <trans-unit id="f10724d68e74c8eb7b80bebd41bf35ea9ebc156d" translate="yes" xml:space="preserve">
          <source>Year, 4 digits.</source>
          <target state="translated">Год,4 цифры.</target>
        </trans-unit>
        <trans-unit id="5dc228ae5d7c2f4293618af9ea7e7e0ae8d5ac4c" translate="yes" xml:space="preserve">
          <source>Year-based archive page &amp;ndash; displays all months with entries in the given year.</source>
          <target state="translated">Страница архива на основе года - отображает все месяцы с записями в данном году.</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="9bf7dbbdc997273e01073d8fdc7cb7779d77d25f" translate="yes" xml:space="preserve">
          <source>Yes (PostgreSQL and SQLite only)</source>
          <target state="translated">Да (только PostgreSQL и SQLite)</target>
        </trans-unit>
        <trans-unit id="08b2c1c800667fd09eb187617f64b3626365e8c2" translate="yes" xml:space="preserve">
          <source>Yes (PostgreSQL only)</source>
          <target state="translated">Да (только PostgreSQL)</target>
        </trans-unit>
        <trans-unit id="832e444c5e13b4f30a5ba161fa5711d7a4e208bc" translate="yes" xml:space="preserve">
          <source>Yes (SQLite only)</source>
          <target state="translated">Да (только SQLite)</target>
        </trans-unit>
        <trans-unit id="1e75bdac7485b5b2a93fabe59147a5e53ea0124f" translate="yes" xml:space="preserve">
          <source>Yes. When time zone support is enabled, Django uses a more accurate model of local time. This shields you from subtle and unreproducible bugs around Daylight Saving Time (DST) transitions.</source>
          <target state="translated">Да.Когда включена поддержка часового пояса,Django использует более точную модель локального времени.Это защищает вас от тонких и невоспроизводимых ошибок вокруг переходов на летнее время (DST).</target>
        </trans-unit>
        <trans-unit id="772cd52d5f4ebd48e018f1a521c966938e27bdc7" translate="yes" xml:space="preserve">
          <source>Yet.</source>
          <target state="translated">Yet.</target>
        </trans-unit>
        <trans-unit id="02de1c240c0d0c552be777ae102835b4f88a9a39" translate="yes" xml:space="preserve">
          <source>Yields (&lt;code&gt;FormSet&lt;/code&gt;, &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt;) pairs for use in admin add and change views.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt; &lt;code&gt;InlineModelAdmin&lt;/code&gt; &lt;/a&gt; пары ( &lt;code&gt;FormSet&lt;/code&gt; , InlineModelAdmin ) для использования в представлениях добавления и изменения администраторов.</target>
        </trans-unit>
        <trans-unit id="a25a54faec9117915765945c0a92c7319022672c" translate="yes" xml:space="preserve">
          <source>You also have to change the renderer to retrieve the actual contents of the &lt;code&gt;date_updated&lt;/code&gt; property of the &lt;code&gt;blog_entry&lt;/code&gt; object. This can be accomplished by using the &lt;code&gt;Variable()&lt;/code&gt; class in &lt;code&gt;django.template&lt;/code&gt;.</source>
          <target state="translated">Вы также должны изменить визуализации , чтобы получить фактическое содержимое &lt;code&gt;date_updated&lt;/code&gt; имущества &lt;code&gt;blog_entry&lt;/code&gt; объекта. Это можно сделать с помощью класса &lt;code&gt;Variable()&lt;/code&gt; в &lt;code&gt;django.template&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bfd84f2c19dcb8ddec1e0c67018144dc07be341" translate="yes" xml:space="preserve">
          <source>You also must not quote placeholders in the SQL string. This example is vulnerable to SQL injection because of the quotes around &lt;code&gt;%s&lt;/code&gt;:</source>
          <target state="translated">Вы также не должны заключать в кавычки в строке SQL. Этот пример уязвим для внедрения SQL из-за кавычек около &lt;code&gt;%s&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e2958e24aad130a5d596d95c744eb0bd091ae3b2" translate="yes" xml:space="preserve">
          <source>You are able to use more than one formset in a view if you like. Formsets borrow much of its behavior from forms. With that said you are able to use &lt;code&gt;prefix&lt;/code&gt; to prefix formset form field names with a given value to allow more than one formset to be sent to a view without name clashing. Let&amp;rsquo;s take a look at how this might be accomplished:</source>
          <target state="translated">Вы можете использовать более одного набора форм в представлении, если хотите. Formsets заимствуют большую часть своего поведения из форм. При этом вы можете использовать &lt;code&gt;prefix&lt;/code&gt; для префикса имен полей формы набора с заданным значением, чтобы разрешить отправку более одного набора форм в представление без конфликта имен. Давайте посмотрим, как это можно сделать:</target>
        </trans-unit>
        <trans-unit id="0cf503b49f17edca85b6bf6461c3251be1a249ec" translate="yes" xml:space="preserve">
          <source>You are advised to write the code as a separate function above the &lt;code&gt;Migration&lt;/code&gt; class in the migration file, and pass it to &lt;code&gt;RunPython&lt;/code&gt;. Here&amp;rsquo;s an example of using &lt;code&gt;RunPython&lt;/code&gt; to create some initial objects on a &lt;code&gt;Country&lt;/code&gt; model:</source>
          <target state="translated">Рекомендуется написать код в виде отдельной функции над классом &lt;code&gt;Migration&lt;/code&gt; в файле миграции и передать его в &lt;code&gt;RunPython&lt;/code&gt; . Вот пример использования &lt;code&gt;RunPython&lt;/code&gt; для создания некоторых начальных объектов в модели &lt;code&gt;Country&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2e2927c114e2274367c91d0068c7d9f1b02e8fb9" translate="yes" xml:space="preserve">
          <source>You are encouraged to make migrations freely and not worry about how many you have; the migration code is optimized to deal with hundreds at a time without much slowdown. However, eventually you will want to move back from having several hundred migrations to just a few, and that&amp;rsquo;s where squashing comes in.</source>
          <target state="translated">Вам предлагается свободно перемещаться и не беспокоиться о том, сколько у вас есть; Код миграции оптимизирован для одновременной работы с сотнями без особого замедления. Тем не менее, в конечном итоге вы захотите вернуться от нескольких сотен миграций к нескольким, и вот тут-то и начнется сквош.</target>
        </trans-unit>
        <trans-unit id="d2e5cf76f8f2f31d181c7b619e609db9e2f36c53" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;#extending-user&quot;&gt;extend&lt;/a&gt; the default &lt;code&gt;User&lt;/code&gt; model, or &lt;a href=&quot;#auth-custom-user&quot;&gt;substitute&lt;/a&gt; a completely customized model.</source>
          <target state="translated">Вы можете &lt;a href=&quot;#extending-user&quot;&gt;расширить &lt;/a&gt; &lt;code&gt;User&lt;/code&gt; модель по умолчанию или &lt;a href=&quot;#auth-custom-user&quot;&gt;заменить&lt;/a&gt; полностью настроенную модель.</target>
        </trans-unit>
        <trans-unit id="d8c15e0beefedc1d0b291e74d5f081c724c2d03f" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;aggregation&quot;&gt;aggregate&lt;/a&gt; using many built-in &lt;a href=&quot;../../ref/models/database-functions&quot;&gt;database functions&lt;/a&gt;. Beyond those, you can create &lt;a href=&quot;../../ref/models/expressions&quot;&gt;custom query expressions&lt;/a&gt;.</source>
          <target state="translated">Вы можете &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;aggregation&quot;&gt;агрегировать,&lt;/a&gt; используя множество встроенных &lt;a href=&quot;../../ref/models/database-functions&quot;&gt;функций базы данных&lt;/a&gt; . Помимо этого, вы можете создавать &lt;a href=&quot;../../ref/models/expressions&quot;&gt;собственные выражения запросов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9265bcca4a9ea85791d5d3bd618a765cf886f463" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-database.html&quot;&gt;create your database&lt;/a&gt; using the command-line tools and this SQL:</source>
          <target state="translated">Вы можете &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/create-database.html&quot;&gt;создать свою базу данных,&lt;/a&gt; используя инструменты командной строки и этот SQL:</target>
        </trans-unit>
        <trans-unit id="ae4e63c409a1a1e2c74d44c22f44ab5c079d00a8" translate="yes" xml:space="preserve">
          <source>You can access &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; without having to call &lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; first. The form&amp;rsquo;s data will be validated the first time either you call &lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; or access &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете получить доступ к &lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt; без предварительного вызова &lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt; . Данные формы будут проверены при первом вызове &lt;a href=&quot;#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt; или при доступе к &lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4220ad7fc8a6abb61ba1dacb574863f342fc101a" translate="yes" xml:space="preserve">
          <source>You can access the caches configured in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting through a dict-like object: &lt;code&gt;django.core.cache.caches&lt;/code&gt;. Repeated requests for the same alias in the same thread will return the same object.</source>
          <target state="translated">Вы можете получить доступ к кэшам, настроенным в параметре &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; ,&lt;/a&gt; через объект, &lt;code&gt;django.core.cache.caches&lt;/code&gt; на dict: django.core.cache.caches . Повторные запросы для одного и того же псевдонима в том же потоке будут возвращать один и тот же объект.</target>
        </trans-unit>
        <trans-unit id="18847e3a62e8f5bc8cf77c4fc117cf59ba9eb466" translate="yes" xml:space="preserve">
          <source>You can access the fields of &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance from its &lt;code&gt;fields&lt;/code&gt; attribute:</source>
          <target state="translated">Вы можете получить доступ к полям экземпляра &lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; из атрибута &lt;code&gt;fields&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="966e78a36f90dc41f84710259a9e1473b873d7cc" translate="yes" xml:space="preserve">
          <source>You can acquire the token like this:</source>
          <target state="translated">Ты можешь приобрести такой же символ:</target>
        </trans-unit>
        <trans-unit id="db1fd64b347378f25b6e879e50af5202e6fb08c6" translate="yes" xml:space="preserve">
          <source>You can add a password reset feature to the admin site by adding a few lines to your URLconf. Specifically, add these four patterns:</source>
          <target state="translated">Вы можете добавить функцию сброса пароля на сайте администратора,добавив несколько строк к вашему URLconf.В частности,добавьте эти четыре шаблона:</target>
        </trans-unit>
        <trans-unit id="26dc0ce58675ca8cc58915ff4d5f01e106814e85" translate="yes" xml:space="preserve">
          <source>You can add an explicit subquery to a &lt;code&gt;QuerySet&lt;/code&gt; using the &lt;code&gt;Subquery&lt;/code&gt; expression.</source>
          <target state="translated">Вы можете добавить явный подзапрос к &lt;code&gt;QuerySet&lt;/code&gt; , используя выражение &lt;code&gt;Subquery&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2881d5a6c8193381aae6edc428d3d579d5fd9314" translate="yes" xml:space="preserve">
          <source>You can add the &lt;code&gt;--depth 1&lt;/code&gt; argument to &lt;code&gt;git clone&lt;/code&gt; to skip downloading all of Django&amp;rsquo;s commit history, which reduces data transfer from ~250 MB to ~70 MB.</source>
          <target state="translated">Вы можете добавить аргумент &lt;code&gt;--depth 1&lt;/code&gt; в &lt;code&gt;git clone&lt;/code&gt; , чтобы пропустить загрузку всей истории коммитов Django, что уменьшает передачу данных с ~ 250 МБ до ~ 70 МБ.</target>
        </trans-unit>
        <trans-unit id="34e92aec10982c584e80ddee8ec0605781bc3e92" translate="yes" xml:space="preserve">
          <source>You can add this to a model field via the field&amp;rsquo;s &lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt;&lt;code&gt;validators&lt;/code&gt;&lt;/a&gt; argument:</source>
          <target state="translated">Вы можете добавить это в поле модели через аргумент &lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt; &lt;code&gt;validators&lt;/code&gt; &lt;/a&gt; поля :</target>
        </trans-unit>
        <trans-unit id="27300ac14808ad55ca8248da04940034b1d7eb6f" translate="yes" xml:space="preserve">
          <source>You can adjust class-based views by decorating the result of the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; method. The easiest place to do this is in the URLconf where you deploy your view:</source>
          <target state="translated">Вы можете настроить представления на основе классов, украсив результат метода &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; . Самый простой способ сделать это - в URLconf, где вы развернете свое представление:</target>
        </trans-unit>
        <trans-unit id="9720c39901f30ead4b2fb9e4964adc4ff8fe9d36" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;#defining-and-sending-signals&quot;&gt;define and send your own custom signals&lt;/a&gt;; see below.</source>
          <target state="translated">Вы также можете &lt;a href=&quot;#defining-and-sending-signals&quot;&gt;определить и отправить свои собственные сигналы&lt;/a&gt; ; увидеть ниже.</target>
        </trans-unit>
        <trans-unit id="3ba1c194241c425816f14f9e37c9bed65f90c07b" translate="yes" xml:space="preserve">
          <source>You can also add context using the &lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin.extra_context&quot;&gt;&lt;code&gt;extra_context&lt;/code&gt;&lt;/a&gt; keyword argument for &lt;a href=&quot;#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Можно также добавить контекст , используя &lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin.extra_context&quot;&gt; &lt;code&gt;extra_context&lt;/code&gt; &lt;/a&gt; аргумент ключевых слов для &lt;a href=&quot;#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9376e10d78ac9a6074bba1777563a711fe6ee24b" translate="yes" xml:space="preserve">
          <source>You can also add custom validation of data in the admin. The automatic admin interface reuses &lt;a href=&quot;../../forms/api#module-django.forms&quot;&gt;&lt;code&gt;django.forms&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;ModelAdmin&lt;/code&gt; class gives you the ability define your own form:</source>
          <target state="translated">Вы также можете добавить пользовательскую проверку данных в админке. Автоматический интерфейс администратора повторно использует &lt;a href=&quot;../../forms/api#module-django.forms&quot;&gt; &lt;code&gt;django.forms&lt;/code&gt; &lt;/a&gt; , а класс &lt;code&gt;ModelAdmin&lt;/code&gt; дает вам возможность определить свою собственную форму:</target>
        </trans-unit>
        <trans-unit id="dc30af1f69189bb86934c9b1b8a60d570b0b78fa" translate="yes" xml:space="preserve">
          <source>You can also assign the prefetched result to a custom attribute with the optional &lt;code&gt;to_attr&lt;/code&gt; argument. The result will be stored directly in a list.</source>
          <target state="translated">Вы также можете присвоить предварительно выбранный результат пользовательскому атрибуту с необязательным аргументом &lt;code&gt;to_attr&lt;/code&gt; . Результат будет сохранен непосредственно в списке.</target>
        </trans-unit>
        <trans-unit id="a4c73f7f0019c6f5f3ff09d430d593b0ef70d61a" translate="yes" xml:space="preserve">
          <source>You can also change a password programmatically, using &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы также можете изменить пароль программно, используя &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0258bb265ce3f55122c75a4aa0e08d7d5bd72f9a" translate="yes" xml:space="preserve">
          <source>You can also choose the latest based on several fields. For example, to select the &lt;code&gt;Entry&lt;/code&gt; with the earliest &lt;code&gt;expire_date&lt;/code&gt; when two entries have the same &lt;code&gt;pub_date&lt;/code&gt;:</source>
          <target state="translated">Вы также можете выбрать последнюю версию на основе нескольких полей. Например, чтобы выбрать &lt;code&gt;Entry&lt;/code&gt; с самой ранней &lt;code&gt;expire_date&lt;/code&gt; когда две записи имеют одинаковую &lt;code&gt;pub_date&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1a352d82d08178ba10926da835112ef7fb71c486" translate="yes" xml:space="preserve">
          <source>You can also collect your available choices into named groups that can be used for organizational purposes:</source>
          <target state="translated">Вы также можете собирать доступные варианты в именованные группы,которые можно использовать в организационных целях:</target>
        </trans-unit>
        <trans-unit id="008ce2487c49e342362fd6c9a89f73104086a010" translate="yes" xml:space="preserve">
          <source>You can also create &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;recursive relationships&lt;/a&gt; (an object with a many-to-one relationship to itself) and &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;relationships to models not yet defined&lt;/a&gt;; see &lt;a href=&quot;../../ref/models/fields#ref-foreignkey&quot;&gt;the model field reference&lt;/a&gt; for details.</source>
          <target state="translated">Вы также можете создавать &lt;a href=&quot;../../ref/models/fields#recursive-relationships&quot;&gt;рекурсивные отношения&lt;/a&gt; (объект с отношением &amp;laquo;многие к одному&amp;raquo;) и &lt;a href=&quot;../../ref/models/fields#lazy-relationships&quot;&gt;отношения с моделями, которые еще не определены&lt;/a&gt; ; см. &lt;a href=&quot;../../ref/models/fields#ref-foreignkey&quot;&gt;ссылку&lt;/a&gt; на поле модели для деталей.</target>
        </trans-unit>
        <trans-unit id="d91af020c29e969dedfe526c9bc47b587ce3974b" translate="yes" xml:space="preserve">
          <source>You can also create your own custom template filters; see &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt;.</source>
          <target state="translated">Вы также можете создавать свои собственные шаблоны фильтров; см. &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Пользовательские шаблоны тегов и фильтров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18ff26327460effed0b34362d94610ec3dc6ef23" translate="yes" xml:space="preserve">
          <source>You can also create your own custom template tags; see &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt;.</source>
          <target state="translated">Вы также можете создавать свои собственные шаблоны тегов; см. &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Пользовательские шаблоны тегов и фильтров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52f655d9be3e88117e1aff19e4796af692ddb268" translate="yes" xml:space="preserve">
          <source>You can also customize how a field will be accessed by overriding &lt;a href=&quot;api#django.forms.Field.get_bound_field&quot;&gt;&lt;code&gt;get_bound_field()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы также можете настроить доступ к &lt;a href=&quot;api#django.forms.Field.get_bound_field&quot;&gt; &lt;code&gt;get_bound_field()&lt;/code&gt; &lt;/a&gt; переопределив get_bound_field () .</target>
        </trans-unit>
        <trans-unit id="94e65aba749c40ee3d106755279dd959b8abd401" translate="yes" xml:space="preserve">
          <source>You can also customize the SQL using the &lt;code&gt;template&lt;/code&gt; parameter of &lt;code&gt;as_sql()&lt;/code&gt;.</source>
          <target state="translated">Вы также можете настроить SQL, используя параметр &lt;code&gt;template&lt;/code&gt; &lt;code&gt;as_sql()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94b18a51eaa9089911df581f8b05ccea7757e39a" translate="yes" xml:space="preserve">
          <source>You can also customize the colors that are used. Django specifies a number of roles in which color is used:</source>
          <target state="translated">Вы также можете настроить используемые цвета.Джанго задает количество ролей,в которых используется цвет:</target>
        </trans-unit>
        <trans-unit id="9eeb08eee06a8956dffdffb9ff101b758e055eb6" translate="yes" xml:space="preserve">
          <source>You can also customize the model manager by subclassing &lt;a href=&quot;#django.contrib.sessions.base_session.BaseSessionManager&quot;&gt;&lt;code&gt;BaseSessionManager&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы также можете настроить менеджер модели, &lt;a href=&quot;#django.contrib.sessions.base_session.BaseSessionManager&quot;&gt; &lt;code&gt;BaseSessionManager&lt;/code&gt; &lt;/a&gt; подкласс BaseSessionManager :</target>
        </trans-unit>
        <trans-unit id="3aef1d0fa321b60cf35a6780f2809a97312555de" translate="yes" xml:space="preserve">
          <source>You can also delete objects in bulk. Every &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; has a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, which deletes all members of that &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы также можете удалить объекты навалом. Каждый &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; имеет метод &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; , который удаляет все члены этого &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="189491d81e1028711d62d91262b0538b195ce131" translate="yes" xml:space="preserve">
          <source>You can also designate a specific closing tag, allowing the use of &lt;code&gt;{% endverbatim %}&lt;/code&gt; as part of the unrendered contents:</source>
          <target state="translated">Вы также можете назначить определенный закрывающий тег, позволяющий использовать &lt;code&gt;{% endverbatim %}&lt;/code&gt; как часть не обработанного содержимого:</target>
        </trans-unit>
        <trans-unit id="cb35003efe9e82769fd7d8a5e0ee023bf3bbbf91" translate="yes" xml:space="preserve">
          <source>You can also do more complicated things like:</source>
          <target state="translated">Ты также можешь делать более сложные вещи,например:</target>
        </trans-unit>
        <trans-unit id="ee8be544ce1bce75dce6e73ab0104d7bc199d38b" translate="yes" xml:space="preserve">
          <source>You can also enable template caching with some custom template loaders using settings like this:</source>
          <target state="translated">Вы также можете включить кэширование шаблонов с помощью некоторых пользовательских загрузчиков шаблонов,используя такие настройки:</target>
        </trans-unit>
        <trans-unit id="e116f8b7e4c0795a9377faf998ea4d1a00e17fc5" translate="yes" xml:space="preserve">
          <source>You can also exclude tests by tag. To run core tests if they are not slow:</source>
          <target state="translated">Вы также можете исключить тесты по меткам.Запускать тесты ядра,если они не медленные:</target>
        </trans-unit>
        <trans-unit id="089c599e76796f75d93fdb2194c09a28d7ea8e60" translate="yes" xml:space="preserve">
          <source>You can also execute queries containing fields that aren&amp;rsquo;t defined on the model. For example, we could use &lt;a href=&quot;https://www.postgresql.org/docs/current/functions-datetime.html&quot;&gt;PostgreSQL&amp;rsquo;s age() function&lt;/a&gt; to get a list of people with their ages calculated by the database:</source>
          <target state="translated">Вы также можете выполнять запросы, содержащие поля, которые не определены в модели. Например, мы могли бы использовать &lt;a href=&quot;https://www.postgresql.org/docs/current/functions-datetime.html&quot;&gt;функцию age () PostgreSQL,&lt;/a&gt; чтобы получить список людей с их возрастом, рассчитанным по базе данных:</target>
        </trans-unit>
        <trans-unit id="58f630a421444363965d01dae6bed5a39aac1e79" translate="yes" xml:space="preserve">
          <source>You can also filter on a combination of fields and on related models:</source>
          <target state="translated">Вы также можете фильтровать по комбинации полей и по связанным с ними моделям:</target>
        </trans-unit>
        <trans-unit id="d8d1ed87f5dfcf51acf2741769d74c92ece52133" translate="yes" xml:space="preserve">
          <source>You can also generate an aggregate on the result of an annotation. When you define an &lt;code&gt;aggregate()&lt;/code&gt; clause, the aggregates you provide can reference any alias defined as part of an &lt;code&gt;annotate()&lt;/code&gt; clause in the query.</source>
          <target state="translated">Вы также можете создать агрегат на основе результата аннотации. Когда вы определяете предложение &lt;code&gt;aggregate()&lt;/code&gt; , предоставленные вами агрегаты могут ссылаться на любой псевдоним, определенный как часть предложения &lt;code&gt;annotate()&lt;/code&gt; в запросе.</target>
        </trans-unit>
        <trans-unit id="100e9ee5d64e8b7c9c54faef7813e88203b085d6" translate="yes" xml:space="preserve">
          <source>You can also implement &lt;code&gt;password_changed(password, user=None&lt;/code&gt;), which will be called after a successful password change. That can be used to prevent password reuse, for example. However, if you decide to store a user&amp;rsquo;s previous passwords, you should never do so in clear text.</source>
          <target state="translated">Вы также можете реализовать &lt;code&gt;password_changed(password, user=None&lt;/code&gt; ), который будет вызываться после успешной смены пароля. Это может быть использовано, например, для предотвращения повторного использования пароля. Однако, если вы решили сохранить предыдущие пароли пользователя, вы никогда не должны делать это в виде открытого текста.</target>
        </trans-unit>
        <trans-unit id="d2ee2500cb1ce408d6114724f67ed763dd936a3a" translate="yes" xml:space="preserve">
          <source>You can also import this signal from &lt;code&gt;django.core.signals&lt;/code&gt; to avoid importing from &lt;code&gt;django.test&lt;/code&gt; in non-test situations.</source>
          <target state="translated">Вы также можете импортировать этот сигнал из &lt;code&gt;django.core.signals&lt;/code&gt; , чтобы избежать импорта из &lt;code&gt;django.test&lt;/code&gt; в не тестовых ситуациях.</target>
        </trans-unit>
        <trans-unit id="b2ce1354ae918d65aa80a0e60f39b48066fd0c95" translate="yes" xml:space="preserve">
          <source>You can also increment or decrement a key that already exists using the &lt;code&gt;incr()&lt;/code&gt; or &lt;code&gt;decr()&lt;/code&gt; methods, respectively. By default, the existing cache value will be incremented or decremented by 1. Other increment/decrement values can be specified by providing an argument to the increment/decrement call. A ValueError will be raised if you attempt to increment or decrement a nonexistent cache key.:</source>
          <target state="translated">Вы также можете увеличивать или уменьшать ключ, который уже существует, используя методы &lt;code&gt;incr()&lt;/code&gt; или &lt;code&gt;decr()&lt;/code&gt; соответственно. По умолчанию существующее значение кэша будет увеличено или уменьшено на 1. Другие значения увеличения / уменьшения можно указать, указав аргумент для вызова увеличения или уменьшения. Ошибка ValueError будет вызываться, если вы попытаетесь увеличить или уменьшить несуществующий ключ кэша.</target>
        </trans-unit>
        <trans-unit id="9bd38cfb7d04b98cb7f66dfa985bb8294ec45339" translate="yes" xml:space="preserve">
          <source>You can also modify a widget in the form definition:</source>
          <target state="translated">Вы также можете изменить виджет в определении формы:</target>
        </trans-unit>
        <trans-unit id="9f2a914dce164bfb67650dbeff3bf67e59be97fa" translate="yes" xml:space="preserve">
          <source>You can also order by &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt; by calling &lt;a href=&quot;expressions#django.db.models.Expression.asc&quot;&gt;&lt;code&gt;asc()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;expressions#django.db.models.Expression.desc&quot;&gt;&lt;code&gt;desc()&lt;/code&gt;&lt;/a&gt; on the expression:</source>
          <target state="translated">Вы также можете упорядочить по &lt;a href=&quot;expressions&quot;&gt;выражениям запросов&lt;/a&gt; , вызвав &lt;a href=&quot;expressions#django.db.models.Expression.asc&quot;&gt; &lt;code&gt;asc()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;expressions#django.db.models.Expression.desc&quot;&gt; &lt;code&gt;desc()&lt;/code&gt; &lt;/a&gt; для выражения:</target>
        </trans-unit>
        <trans-unit id="bb827d0c965869de530f9d1e4ff61e09c9f47487" translate="yes" xml:space="preserve">
          <source>You can also override &lt;code&gt;'DIRS'&lt;/code&gt; and specify specific directories for a particular filesystem loader:</source>
          <target state="translated">Вы также можете переопределить &lt;code&gt;'DIRS'&lt;/code&gt; и указать конкретные каталоги для конкретного загрузчика файловой системы:</target>
        </trans-unit>
        <trans-unit id="49553709dac5a97c267b8d655fc1db794297b211" translate="yes" xml:space="preserve">
          <source>You can also override &lt;code&gt;empty_value_display&lt;/code&gt; for all admin pages with &lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt;&lt;code&gt;AdminSite.empty_value_display&lt;/code&gt;&lt;/a&gt;, or for specific fields like this:</source>
          <target state="translated">Вы также можете переопределить &lt;code&gt;empty_value_display&lt;/code&gt; для всех страниц администратора с &lt;a href=&quot;#django.contrib.admin.AdminSite.empty_value_display&quot;&gt; &lt;code&gt;AdminSite.empty_value_display&lt;/code&gt; &lt;/a&gt; или для определенных полей, таких как это:</target>
        </trans-unit>
        <trans-unit id="d3ae6ce73cb41b7c6ddeba93d1a55bbbb1a31231" translate="yes" xml:space="preserve">
          <source>You can also override the &lt;code&gt;get_test_func()&lt;/code&gt; method to have the mixin use a differently named function for its checks (instead of &lt;a href=&quot;#django.contrib.auth.mixins.UserPassesTestMixin.test_func&quot;&gt;&lt;code&gt;test_func()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Вы также можете переопределить метод &lt;code&gt;get_test_func()&lt;/code&gt; чтобы mixin использовал для проверок функцию с другим именем (вместо &lt;a href=&quot;#django.contrib.auth.mixins.UserPassesTestMixin.test_func&quot;&gt; &lt;code&gt;test_func()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="03a9a4d8f89dd34062b11b538549f13b1ec2eae9" translate="yes" xml:space="preserve">
          <source>You can also override the cache prefix on a per-view basis. &lt;code&gt;cache_page&lt;/code&gt; takes an optional keyword argument, &lt;code&gt;key_prefix&lt;/code&gt;, which works in the same way as the &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_KEY_PREFIX&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_KEY_PREFIX&lt;/code&gt;&lt;/a&gt; setting for the middleware. It can be used like this:</source>
          <target state="translated">Вы также можете переопределить префикс кэша для каждого просмотра. &lt;code&gt;cache_page&lt;/code&gt; принимает необязательный аргумент ключевого слова &lt;code&gt;key_prefix&lt;/code&gt; , который работает так же, как параметр &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_KEY_PREFIX&quot;&gt; &lt;code&gt;CACHE_MIDDLEWARE_KEY_PREFIX&lt;/code&gt; &lt;/a&gt; для промежуточного программного обеспечения. Это можно использовать так:</target>
        </trans-unit>
        <trans-unit id="a5714dd521c27f3ca379ad758cb9f6364b28ced6" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;kwargs&lt;/code&gt; instead of &lt;code&gt;args&lt;/code&gt;. For example:</source>
          <target state="translated">Вы также можете передать &lt;code&gt;kwargs&lt;/code&gt; вместо &lt;code&gt;args&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="e0c70c1bafa63fd1f362eba97220240d2d031891" translate="yes" xml:space="preserve">
          <source>You can also pass a list of strings or 2-tuples. The latter is used for passing queries and parameters in the same way as &lt;a href=&quot;../topics/db/sql#executing-custom-sql&quot;&gt;cursor.execute()&lt;/a&gt;. These three operations are equivalent:</source>
          <target state="translated">Вы также можете передать список строк или 2-кортежей. Последний используется для передачи запросов и параметров таким же образом, как &lt;a href=&quot;../topics/db/sql#executing-custom-sql&quot;&gt;cursor.execute ()&lt;/a&gt; . Эти три операции эквивалентны:</target>
        </trans-unit>
        <trans-unit id="bc860d872dd41451b6454404413ac31dab6726b2" translate="yes" xml:space="preserve">
          <source>You can also pass any callable as a &lt;em&gt;default&lt;/em&gt; value:</source>
          <target state="translated">Вы также можете передать любую вызываемую функцию в качестве &lt;em&gt;значения&lt;/em&gt; по &lt;em&gt;умолчанию&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="287bba86c0bfd4302553b74b6f78e8611bd63d7a" translate="yes" xml:space="preserve">
          <source>You can also pass code in on standard input to execute it. For example:</source>
          <target state="translated">Вы также можете передать код на стандартный вход для его выполнения.Например:</target>
        </trans-unit>
        <trans-unit id="3afff0c1d5553587433be427c08633ef8697c846" translate="yes" xml:space="preserve">
          <source>You can also prevent saving:</source>
          <target state="translated">Вы также можете предотвратить спасение:</target>
        </trans-unit>
        <trans-unit id="eafb1123e92af7700ddbebd945c460232df607ae" translate="yes" xml:space="preserve">
          <source>You can also provide a custom renderer by setting the &lt;a href=&quot;api#django.forms.Form.default_renderer&quot;&gt;&lt;code&gt;Form.default_renderer&lt;/code&gt;&lt;/a&gt; attribute or by using the &lt;code&gt;renderer&lt;/code&gt; argument of &lt;a href=&quot;widgets#django.forms.Widget.render&quot;&gt;&lt;code&gt;Widget.render()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы также можете предоставить пользовательский рендерер, установив атрибут &lt;a href=&quot;api#django.forms.Form.default_renderer&quot;&gt; &lt;code&gt;Form.default_renderer&lt;/code&gt; &lt;/a&gt; или используя аргумент &lt;code&gt;renderer&lt;/code&gt; &lt;a href=&quot;widgets#django.forms.Widget.render&quot;&gt; &lt;code&gt;Widget.render()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63c59091d5816a9459b64989925bd75c669a1da5" translate="yes" xml:space="preserve">
          <source>You can also provide a path to a directory to discover tests below that directory:</source>
          <target state="translated">Вы также можете указать путь к каталогу для обнаружения тестов под этим каталогом:</target>
        </trans-unit>
        <trans-unit id="00a16dc3ef85bc8b861723686a179616db4ce669" translate="yes" xml:space="preserve">
          <source>You can also provide data using fixtures, however, this data isn&amp;rsquo;t loaded automatically, except if you use &lt;a href=&quot;../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;TransactionTestCase.fixtures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы также можете предоставить данные с помощью осветителей, однако эти данные не загружаются автоматически, кроме случаев, когда вы используете &lt;a href=&quot;../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;TransactionTestCase.fixtures&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ba675a780ed6423b07763dd377d5a8afe074350" translate="yes" xml:space="preserve">
          <source>You can also provide hints that will be passed to the &lt;a href=&quot;../topics/db/multi-db#allow_migrate&quot;&gt;&lt;code&gt;allow_migrate()&lt;/code&gt;&lt;/a&gt; method of database routers as &lt;code&gt;**hints&lt;/code&gt;:</source>
          <target state="translated">Вы также можете предоставить подсказки, которые будут переданы &lt;a href=&quot;../topics/db/multi-db#allow_migrate&quot;&gt; &lt;code&gt;allow_migrate()&lt;/code&gt; &lt;/a&gt; маршрутизаторов базы данных в виде &lt;code&gt;**hints&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="022452b885dbb9b16de88b23507ad2fb75c15c67" translate="yes" xml:space="preserve">
          <source>You can also put &lt;a href=&quot;formatting#custom-format-files&quot;&gt;custom format files&lt;/a&gt; in the &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; directories if you also set &lt;a href=&quot;../../ref/settings#std:setting-FORMAT_MODULE_PATH&quot;&gt;&lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы также можете поместить &lt;a href=&quot;formatting#custom-format-files&quot;&gt;файлы нестандартного формата&lt;/a&gt; в &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt; если вы также установили &lt;a href=&quot;../../ref/settings#std:setting-FORMAT_MODULE_PATH&quot;&gt; &lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59abebaf879fa69011494146b9b03ae4df2f1656" translate="yes" xml:space="preserve">
          <source>You can also read from an &lt;code&gt;HttpRequest&lt;/code&gt; using a file-like interface. See &lt;a href=&quot;#django.http.HttpRequest.read&quot;&gt;&lt;code&gt;HttpRequest.read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы также можете читать из &lt;code&gt;HttpRequest&lt;/code&gt; , используя файловый интерфейс. Смотрите &lt;a href=&quot;#django.http.HttpRequest.read&quot;&gt; &lt;code&gt;HttpRequest.read()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="358e1e016f4c5e1b216d58f6b3d2487adfdda693" translate="yes" xml:space="preserve">
          <source>You can also refer to fields on related models with reverse relations through &lt;code&gt;OneToOneField&lt;/code&gt;, &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;ManyToManyField&lt;/code&gt; attributes:</source>
          <target state="translated">Вы также можете ссылаться на поля в связанных моделях с обратными связями через &lt;code&gt;OneToOneField&lt;/code&gt; , &lt;code&gt;ForeignKey&lt;/code&gt; и &lt;code&gt;ManyToManyField&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cf74419deb96981bf331ae641c3c209169209cda" translate="yes" xml:space="preserve">
          <source>You can also refer to the reverse direction of a &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; in the list of fields passed to &lt;code&gt;select_related&lt;/code&gt; &amp;mdash; that is, you can traverse a &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; back to the object on which the field is defined. Instead of specifying the field name, use the &lt;a href=&quot;fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; for the field on the related object.</source>
          <target state="translated">Вы также можете сослаться на обратное направление &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; в списке полей, переданных в &lt;code&gt;select_related&lt;/code&gt; - то есть вы можете пройти &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; обратно к объекту, для которого определено поле. Вместо указания имени поля используйте &lt;a href=&quot;fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt; для поля связанного объекта.</target>
        </trans-unit>
        <trans-unit id="44d64a225b94d82e49720387903fe28b5e41e7c8" translate="yes" xml:space="preserve">
          <source>You can also reset named cycle tags:</source>
          <target state="translated">Вы также можете сбросить именованные метки цикла:</target>
        </trans-unit>
        <trans-unit id="72bb22034fc55d9fe7fcd59f7f5f498d6fb8b8c0" translate="yes" xml:space="preserve">
          <source>You can also retrieve information about any of the available languages using provided template tags and filters. To get information about a single language, use the &lt;code&gt;{% get_language_info %}&lt;/code&gt; tag:</source>
          <target state="translated">Вы также можете получить информацию о любом из доступных языков, используя предоставленные шаблоны тегов и фильтров. Чтобы получить информацию об одном языке, используйте тег &lt;code&gt;{% get_language_info %}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5d35b9d06ae5e0278f2dffa00f370855a8c09a40" translate="yes" xml:space="preserve">
          <source>You can also run &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages
--settings=path.to.settings&lt;/code&gt;&lt;/a&gt; to make the compiler process all the directories in your &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Вы также можете запустить &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages --settings=path.to.settings&lt;/code&gt; &lt;/a&gt; чтобы компилятор обработал все каталоги в настройке &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3668ee8fd39c171dbcf0d60d880fc823aabfbbe" translate="yes" xml:space="preserve">
          <source>You can also selectively load individual filters or tags from a library, using the &lt;code&gt;from&lt;/code&gt; argument. In this example, the template tags/filters named &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; will be loaded from &lt;code&gt;somelibrary&lt;/code&gt;:</source>
          <target state="translated">Вы также можете выборочно загружать отдельные фильтры или теги из библиотеки, используя аргумент &lt;code&gt;from&lt;/code&gt; . В этом примере шаблонные теги / фильтры с именами &lt;code&gt;foo&lt;/code&gt; и &lt;code&gt;bar&lt;/code&gt; будут загружены из &lt;code&gt;somelibrary&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92863574021638c7bcb6f1974c94a6214152819d" translate="yes" xml:space="preserve">
          <source>You can also set it up as a &amp;ldquo;catchall&amp;rdquo; pattern. In this case, it is important to place the pattern at the end of the other urlpatterns:</source>
          <target state="translated">Вы также можете настроить его как шаблон &amp;laquo;ловушка&amp;raquo;. В этом случае важно поместить шаблон в конец других шаблонов URL:</target>
        </trans-unit>
        <trans-unit id="ae24ab21edd0927b8ad705db372cf9e9acabb24c" translate="yes" xml:space="preserve">
          <source>You can also set the HTML &lt;code&gt;id&lt;/code&gt; using &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;api#django.forms.BoundField.id_for_label&quot;&gt;&lt;code&gt;BoundField.id_for_label&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">Вы также можете установить &lt;code&gt;id&lt;/code&gt; HTML, используя &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt; . См. &lt;a href=&quot;api#django.forms.BoundField.id_for_label&quot;&gt; &lt;code&gt;BoundField.id_for_label&lt;/code&gt; &lt;/a&gt; для примера.</target>
        </trans-unit>
        <trans-unit id="c904338b5060462340e638720b0634cbfaf131e9" translate="yes" xml:space="preserve">
          <source>You can also set this setting to a list of Python paths, for example:</source>
          <target state="translated">Вы также можете установить этот параметр,например,в список путей Python:</target>
        </trans-unit>
        <trans-unit id="8798d55b20978ca71bab3f3bfcd53fa8861acaf0" translate="yes" xml:space="preserve">
          <source>You can also set up custom error reporting by writing a custom piece of &lt;a href=&quot;../topics/http/middleware#exception-middleware&quot;&gt;exception middleware&lt;/a&gt;. If you do write custom error handling, it&amp;rsquo;s a good idea to emulate Django&amp;rsquo;s built-in error handling and only report/log errors if &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Вы также можете настроить пользовательские отчеты об ошибках, написав специальную часть &lt;a href=&quot;../topics/http/middleware#exception-middleware&quot;&gt;промежуточного программного обеспечения исключений&lt;/a&gt; . Если вы пишете пользовательскую обработку ошибок, рекомендуется эмулировать встроенную обработку ошибок Django и сообщать об ошибках только в том случае, если &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41aa798c4da90dde5e8c060f8494397a792b523d" translate="yes" xml:space="preserve">
          <source>You can also simulate the absence of a setting by deleting it after settings have been overridden, like this:</source>
          <target state="translated">Также можно смоделировать отсутствие параметра,удалив его после того,как параметры были переопределены,например,таким образом:</target>
        </trans-unit>
        <trans-unit id="43c07ff8b0836ac9263317c191091192caf4b694" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;field_classes&lt;/code&gt; to customize the type of fields instantiated by the form.</source>
          <target state="translated">Вы также можете указать &lt;code&gt;field_classes&lt;/code&gt; , чтобы настроить тип полей, созданных в форме.</target>
        </trans-unit>
        <trans-unit id="c549e10dfe9791756dd36d8d5b86be228acf9be8" translate="yes" xml:space="preserve">
          <source>You can also specify a field on a related model using the &lt;code&gt;__&lt;/code&gt; lookup, for example:</source>
          <target state="translated">Вы также можете указать поле в связанной модели, используя поиск &lt;code&gt;__&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="a885d5a64f8e3a531a2b9f54ca9c9e742e9f4f1d" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the &lt;code&gt;GET&lt;/code&gt; field which contains the URL to redirect to after login using &lt;code&gt;redirect_field_name&lt;/code&gt;. By default, the field is called &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">Вы также можете указать имя поля &lt;code&gt;GET&lt;/code&gt; , которое содержит URL для перенаправления после входа в систему, используя &lt;code&gt;redirect_field_name&lt;/code&gt; . По умолчанию поле называется &lt;code&gt;next&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f817c1b7f8c8bcf34b6be49c17c0a179f220823c" translate="yes" xml:space="preserve">
          <source>You can also subclass the parent&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; inner class if you want to change the &lt;code&gt;Meta.fields&lt;/code&gt; or &lt;code&gt;Meta.exclude&lt;/code&gt; lists:</source>
          <target state="translated">Вы также можете &lt;code&gt;Meta.fields&lt;/code&gt; подкласс &lt;code&gt;Meta&lt;/code&gt; внутреннего класса, если хотите изменить списки Meta.fields или &lt;code&gt;Meta.exclude&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6c6d25b27cc69dd2e2c3a9f5cbaaafb25be182cb" translate="yes" xml:space="preserve">
          <source>You can also tag a test case:</source>
          <target state="translated">Вы также можете пометить тестовый кейс:</target>
        </trans-unit>
        <trans-unit id="3aed1f1e80c18818b95809ab7b8b096ea8cc81dc" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;#django.contrib.admin.ModelAdmin.empty_value_display&quot;&gt;&lt;code&gt;ModelAdmin.empty_value_display&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы также можете использовать &lt;a href=&quot;#django.contrib.admin.ModelAdmin.empty_value_display&quot;&gt; &lt;code&gt;ModelAdmin.empty_value_display&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d7fc4f43e190c819b98e2217d0857811ccdddccf" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;related managers&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы также можете использовать &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager&quot;&gt; &lt;code&gt;related managers&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="fe75806a45034a4e626d3ce3c58483059030ccfd" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;. To order by &lt;code&gt;author&lt;/code&gt; ascending and make null values sort last, use this:</source>
          <target state="translated">Вы также можете использовать &lt;a href=&quot;expressions&quot;&gt;выражения запроса&lt;/a&gt; . Чтобы упорядочить по возрастанию по &lt;code&gt;author&lt;/code&gt; и сделать сортировку пустых значений последней, используйте это:</target>
        </trans-unit>
        <trans-unit id="79322b11048685016f38757a96634f288bd6e405" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;add()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, or &lt;code&gt;set()&lt;/code&gt; to create relationships, as long as you specify &lt;code&gt;through_defaults&lt;/code&gt; for any required fields:</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;add()&lt;/code&gt; , &lt;code&gt;create()&lt;/code&gt; или &lt;code&gt;set()&lt;/code&gt; для создания отношений, если вы указываете &lt;code&gt;through_defaults&lt;/code&gt; для любых обязательных полей:</target>
        </trans-unit>
        <trans-unit id="5afab11dde67165486704e54a389fa37903229e9" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;hasattr&lt;/code&gt; to avoid the need for exception catching:</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;hasattr&lt;/code&gt; , чтобы избежать необходимости перехвата исключений:</target>
        </trans-unit>
        <trans-unit id="01d552b55aed661c54c14351dad565f1b1411217" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;push()&lt;/code&gt; as a context manager to ensure a matching &lt;code&gt;pop()&lt;/code&gt; is called.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;push()&lt;/code&gt; в качестве менеджера контекста, чтобы обеспечить вызов соответствующей функции &lt;code&gt;pop()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e324c7f6a64be2f1ddb903f3a3ee32eb3031229" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;register&lt;/code&gt; as a function rather than a decorator by passing a callable object (usually a function) as the first argument to &lt;code&gt;register&lt;/code&gt;.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;register&lt;/code&gt; как функцию, а не как декоратор, передав вызываемый объект (обычно функцию) в качестве первого аргумента для &lt;code&gt;register&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a808b5087972e519c99fcea19d1c7b0acdf7bef" translate="yes" xml:space="preserve">
          <source>You can also use a class with a &lt;code&gt;__call__()&lt;/code&gt; method for more complex or configurable validators. &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt;, for example, uses this technique. If a class-based validator is used in the &lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt;&lt;code&gt;validators&lt;/code&gt;&lt;/a&gt; model field option, you should make sure it is &lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;serializable by the migration framework&lt;/a&gt; by adding &lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;deconstruct()&lt;/a&gt; and &lt;code&gt;__eq__()&lt;/code&gt; methods.</source>
          <target state="translated">Вы также можете использовать класс с &lt;code&gt;__call__()&lt;/code&gt; для более сложных или настраиваемых валидаторов. &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt; , RegexValidator использует эту технику. Если валидатор класса на основе используются в &lt;a href=&quot;models/fields#django.db.models.Field.validators&quot;&gt; &lt;code&gt;validators&lt;/code&gt; &lt;/a&gt; опции модели поля, вы должны убедиться , что это &lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;сериализация в рамках миграции&lt;/a&gt; пути добавления &lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;() деконструкции&lt;/a&gt; и &lt;code&gt;__eq__()&lt;/code&gt; метода.</target>
        </trans-unit>
        <trans-unit id="fe2c7a8880f6fdf7f01673abb9c7f76f4e8b6ac0" translate="yes" xml:space="preserve">
          <source>You can also use a helper function, &lt;a href=&quot;../ref/utils#django.utils.cache.patch_vary_headers&quot;&gt;&lt;code&gt;django.utils.cache.patch_vary_headers()&lt;/code&gt;&lt;/a&gt;, directly. This function sets, or adds to, the &lt;code&gt;Vary header&lt;/code&gt;. For example:</source>
          <target state="translated">Вы также можете напрямую использовать вспомогательную функцию &lt;a href=&quot;../ref/utils#django.utils.cache.patch_vary_headers&quot;&gt; &lt;code&gt;django.utils.cache.patch_vary_headers()&lt;/code&gt; &lt;/a&gt; . Эта функция устанавливает или добавляет &lt;code&gt;Vary header&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="3d9b8c21c69e2afc2cf0a806ba25fbcaed001c3d" translate="yes" xml:space="preserve">
          <source>You can also use a literal string as a fallback value in case all passed variables are False:</source>
          <target state="translated">Вы также можете использовать строку литерала в качестве резервного значения в случае,если все передаваемые переменные будут False:</target>
        </trans-unit>
        <trans-unit id="061480c11a61e35a4959517d5c293ae50fd12467" translate="yes" xml:space="preserve">
          <source>You can also use a queryset instead of a literal list of instances:</source>
          <target state="translated">Вместо буквального списка экземпляров можно также использовать квартет:</target>
        </trans-unit>
        <trans-unit id="aab5fb5e804a3558a8ca88184a13f9f9761369b6" translate="yes" xml:space="preserve">
          <source>You can also use a queryset to dynamically evaluate the list of values instead of providing a list of literal values:</source>
          <target state="translated">Вы также можете использовать квестибюль для динамической оценки списка значений вместо предоставления списка буквальных значений:</target>
        </trans-unit>
        <trans-unit id="407bccaeb0f1845fe4166ca14fdc9fe392fcf74d" translate="yes" xml:space="preserve">
          <source>You can also use a serializer object directly:</source>
          <target state="translated">Вы также можете напрямую использовать объект сериализатора:</target>
        </trans-unit>
        <trans-unit id="4b8df8582741947a4b0df83aac95428948297715" translate="yes" xml:space="preserve">
          <source>You can also use any &lt;em&gt;other&lt;/em&gt; Python test framework; Django provides an API and tools for that kind of integration. They are described in the &lt;a href=&quot;advanced#other-testing-frameworks&quot;&gt;Using different testing frameworks&lt;/a&gt; section of &lt;a href=&quot;advanced&quot;&gt;Advanced testing topics&lt;/a&gt;.</source>
          <target state="translated">Вы также можете использовать любую &lt;em&gt;другую&lt;/em&gt; тестовую среду Python; Django предоставляет API и инструменты для такой интеграции. Они описаны в разделе &amp;laquo; &lt;a href=&quot;advanced#other-testing-frameworks&quot;&gt;Использование различных структур тестирования&amp;raquo; в&lt;/a&gt; разделах &amp;laquo; &lt;a href=&quot;advanced&quot;&gt;Расширенное тестирование&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb43f78892131ec4008839168f4425ddcd2544f2" translate="yes" xml:space="preserve">
          <source>You can also use dictionary syntax on the response object to query the value of any settings in the HTTP headers. For example, you could determine the content type of a response using &lt;code&gt;response['Content-Type']&lt;/code&gt;.</source>
          <target state="translated">Вы также можете использовать синтаксис словаря для объекта ответа, чтобы запросить значение любых настроек в заголовках HTTP. Например, вы можете определить тип содержимого ответа, используя &lt;code&gt;response['Content-Type']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="915daf7ba6487f5348a344feb3ffeab0c47e4f2b" translate="yes" xml:space="preserve">
          <source>You can also use enumeration classes to define &lt;code&gt;choices&lt;/code&gt; in a concise way:</source>
          <target state="translated">Вы также можете использовать классы перечисления для краткого определения &lt;code&gt;choices&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0c8e322ad3d53e47c9a6419c8ec89125946a4832" translate="yes" xml:space="preserve">
          <source>You can also use filters and various operators in the &lt;a href=&quot;builtins#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">Вы также можете использовать фильтры и различные операторы в теге &lt;a href=&quot;builtins#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="79f174bff460472400f76494769bc2b18e659388" translate="yes" xml:space="preserve">
          <source>You can also use filters in the &lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; expression. For example:</source>
          <target state="translated">Вы также можете использовать фильтры в выражении &lt;a href=&quot;#std:templatetag-if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="1878669a19b656591f023883ce2494fa4eee5261" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;Form.field_order&lt;/code&gt; argument to a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; to override the field order. If a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; defines &lt;a href=&quot;#django.forms.Form.field_order&quot;&gt;&lt;code&gt;field_order&lt;/code&gt;&lt;/a&gt;&lt;em&gt;and&lt;/em&gt; you include &lt;code&gt;field_order&lt;/code&gt; when instantiating the &lt;code&gt;Form&lt;/code&gt;, then the latter &lt;code&gt;field_order&lt;/code&gt; will have precedence.</source>
          <target state="translated">Вы также можете использовать аргумент &lt;code&gt;Form.field_order&lt;/code&gt; для &lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; чтобы переопределить порядок полей. Если &lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; определяет &lt;a href=&quot;#django.forms.Form.field_order&quot;&gt; &lt;code&gt;field_order&lt;/code&gt; &lt;/a&gt;&lt;em&gt; и&lt;/em&gt; вы включаете &lt;code&gt;field_order&lt;/code&gt; при создании экземпляра &lt;code&gt;Form&lt;/code&gt; , то последний &lt;code&gt;field_order&lt;/code&gt; будет иметь приоритет.</target>
        </trans-unit>
        <trans-unit id="719e57a410fcf037849d22b4f6b16cf1b497ead8" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; template tag to retrieve information for a list of languages (e.g. active languages as specified in &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt;). See &lt;a href=&quot;#set-language-redirect-view&quot;&gt;the section about the set_language redirect view&lt;/a&gt; for an example of how to display a language selector using &lt;code&gt;{% get_language_info_list %}&lt;/code&gt;.</source>
          <target state="translated">Вы также можете использовать тег шаблона &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; чтобы получить информацию для списка языков (например, активные языки, как указано в &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt; ). См. &lt;a href=&quot;#set-language-redirect-view&quot;&gt;Раздел о представлении перенаправления set_language&lt;/a&gt; для примера того, как отобразить селектор языка, используя &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99dfd6b05badaa8259fb0f5a4631065e390bf071" translate="yes" xml:space="preserve">
          <source>You can also use the double underscore notation to span relationships in an &lt;code&gt;F()&lt;/code&gt; object. An &lt;code&gt;F()&lt;/code&gt; object with a double underscore will introduce any joins needed to access the related object. For example, to retrieve all the entries where the author&amp;rsquo;s name is the same as the blog name, we could issue the query:</source>
          <target state="translated">Вы также можете использовать нотацию с двойным подчеркиванием, чтобы охватить отношения в объекте &lt;code&gt;F()&lt;/code&gt; . Объект &lt;code&gt;F()&lt;/code&gt; с двойным подчеркиванием будет вводить любые объединения, необходимые для доступа к связанному объекту. Например, чтобы получить все записи, в которых имя автора совпадает с именем блога, мы можем выполнить запрос:</target>
        </trans-unit>
        <trans-unit id="e437d37bcf26c1bc682e415f71c90111d63af291" translate="yes" xml:space="preserve">
          <source>You can also use the normal join syntax to do related fields of related fields. Suppose we have an additional model to the example above:</source>
          <target state="translated">Вы также можете использовать обычный синтаксис соединения для выполнения связанных полей.Предположим,у нас есть дополнительная модель к примеру выше:</target>
        </trans-unit>
        <trans-unit id="8f0f7ac5cacbee7e47f189389f677aa6e33df35e" translate="yes" xml:space="preserve">
          <source>You can also use the syntax &lt;code&gt;{% now &quot;Y&quot; as current_year %}&lt;/code&gt; to store the output (as a string) inside a variable. This is useful if you want to use &lt;code&gt;{% now %}&lt;/code&gt; inside a template tag like &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; for example:</source>
          <target state="translated">Вы также можете использовать синтаксис &lt;code&gt;{% now &quot;Y&quot; as current_year %}&lt;/code&gt; для хранения вывода (в виде строки) внутри переменной. Это полезно, если вы хотите использовать &lt;code&gt;{% now %}&lt;/code&gt; внутри тега шаблона, такого как &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; ,&lt;/a&gt; например:</target>
        </trans-unit>
        <trans-unit id="5f8f9f6f308e487b229068a0d7574221665759bd" translate="yes" xml:space="preserve">
          <source>You can also use this as a context manager:</source>
          <target state="translated">Вы также можете использовать его в качестве контекстного менеджера:</target>
        </trans-unit>
        <trans-unit id="539d0fd25379972d55bb4b005a6355f0a5760a1e" translate="yes" xml:space="preserve">
          <source>You can also wrap your function in a lambda:</source>
          <target state="translated">Вы также можете завернуть свою функцию в лямбда:</target>
        </trans-unit>
        <trans-unit id="6d9b8be27ab8cf9bde126b29514e8f0805d80f88" translate="yes" xml:space="preserve">
          <source>You can alter the field of &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance to change the way it is presented in the form:</source>
          <target state="translated">Вы можете изменить поле экземпляра &lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; чтобы изменить способ его представления в форме:</target>
        </trans-unit>
        <trans-unit id="b80b98b8e2f0458f83eabc27e89367d8e27b27a9" translate="yes" xml:space="preserve">
          <source>You can apply GZip compression to individual views using the &lt;a href=&quot;../topics/http/decorators#django.views.decorators.gzip.gzip_page&quot;&gt;&lt;code&gt;gzip_page()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">Вы можете применить сжатие GZip к отдельным представлениям, используя декоратор &lt;a href=&quot;../topics/http/decorators#django.views.decorators.gzip.gzip_page&quot;&gt; &lt;code&gt;gzip_page()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50acaeb7e86f73ac244d307d6a2263e8cc094337" translate="yes" xml:space="preserve">
          <source>You can assign more than one context variable:</source>
          <target state="translated">Можно присваивать более одной контекстной переменной:</target>
        </trans-unit>
        <trans-unit id="43196f9b7eac3499bdcec9d1f3f9a827687a23d9" translate="yes" xml:space="preserve">
          <source>You can avoid such problems by casting &lt;code&gt;gettext_lazy()&lt;/code&gt; objects to text strings before passing them to non-Django code:</source>
          <target state="translated">Вы можете избежать таких проблем, &lt;code&gt;gettext_lazy()&lt;/code&gt; объекты gettext_lazy () к текстовым строкам перед передачей их в не-Django-код:</target>
        </trans-unit>
        <trans-unit id="6706fd13335b8bd87e76dab0718b94c997a7d24f" translate="yes" xml:space="preserve">
          <source>You can avoid this in two ways. First, you can clear the primary key of the instance. If an object has no primary key, Django will treat it as a new object, avoiding any loss of data on the &lt;code&gt;second&lt;/code&gt; database:</source>
          <target state="translated">Вы можете избежать этого двумя способами. Сначала вы можете очистить первичный ключ экземпляра. Если у объекта нет первичного ключа, Django будет рассматривать его как новый объект, избегая потери данных во &lt;code&gt;second&lt;/code&gt; базе данных:</target>
        </trans-unit>
        <trans-unit id="19a7a87f5a666a186ac0158177dc9b981201c278" translate="yes" xml:space="preserve">
          <source>You can chain other lookups after key lookups:</source>
          <target state="translated">После поиска по ключам вы можете связать другие поисковые системы:</target>
        </trans-unit>
        <trans-unit id="2d9c09d15553a53d0014d2ed7192e21b1e5a76b5" translate="yes" xml:space="preserve">
          <source>You can chain together as many filters as you&amp;rsquo;d like. You can write &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-filters&quot;&gt;custom template filters&lt;/a&gt;. You can write &lt;a href=&quot;../howto/custom-template-tags&quot;&gt;custom template tags&lt;/a&gt;, which run custom Python code behind the scenes.</source>
          <target state="translated">Вы можете объединить столько фильтров, сколько захотите. Вы можете написать &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-filters&quot;&gt;собственные фильтры шаблонов&lt;/a&gt; . Вы можете написать &lt;a href=&quot;../howto/custom-template-tags&quot;&gt;собственные теги шаблонов&lt;/a&gt; , которые запускают пользовательский код Python за кулисами.</target>
        </trans-unit>
        <trans-unit id="dba7e37adc3d08b8c45f79733c61c31a8b1a14d5" translate="yes" xml:space="preserve">
          <source>You can change it, though, using Django&amp;rsquo;s template system. The Django admin is powered by Django itself, and its interfaces use Django&amp;rsquo;s own template system.</source>
          <target state="translated">Вы можете изменить его, используя систему шаблонов Django. Администратор Django работает на основе самого Django, а его интерфейсы используют собственную систему шаблонов Django.</target>
        </trans-unit>
        <trans-unit id="093fe940f0a4b1ed2c2a05f718d5c2f36fab8ae5" translate="yes" xml:space="preserve">
          <source>You can change the &lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; classes used by the middleware by creating a subclass of &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; and overriding &lt;code&gt;response_gone_class&lt;/code&gt; and/or &lt;code&gt;response_redirect_class&lt;/code&gt;.</source>
          <target state="translated">Вы можете изменить классы &lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; ,&lt;/a&gt; используемые промежуточным программным обеспечением, создав подкласс &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; &lt;/a&gt; и переопределив &lt;code&gt;response_gone_class&lt;/code&gt; и / или &lt;code&gt;response_redirect_class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="889560ddac7621d7cafd51a2c950065e94cfcbe0" translate="yes" xml:space="preserve">
          <source>You can check if the path is set up correctly by typing &lt;code&gt;which psql&lt;/code&gt; at a terminal prompt.</source>
          <target state="translated">Вы можете проверить, правильно ли задан путь, введя &lt;code&gt;which psql&lt;/code&gt; в командной строке терминала.</target>
        </trans-unit>
        <trans-unit id="9a62480e400cce13d0cba19b67a1dbb0a6cf407e" translate="yes" xml:space="preserve">
          <source>You can choose any name that you want for the branch, &amp;ldquo;ticket_99999&amp;rdquo; is an example. All changes made in this branch will be specific to the ticket and won&amp;rsquo;t affect the main copy of the code that we cloned earlier.</source>
          <target state="translated">Вы можете выбрать любое имя, которое вы хотите для филиала, например, &amp;laquo;ticket_99999&amp;raquo;. Все изменения, сделанные в этой ветке, будут относиться только к заявке и не будут влиять на основную копию кода, который мы клонировали ранее.</target>
        </trans-unit>
        <trans-unit id="1385467693f36ee016826cbb9453576407fb1f03" translate="yes" xml:space="preserve">
          <source>You can click on the column headers to sort by those values &amp;ndash; except in the case of the &lt;code&gt;was_published_recently&lt;/code&gt; header, because sorting by the output of an arbitrary method is not supported. Also note that the column header for &lt;code&gt;was_published_recently&lt;/code&gt; is, by default, the name of the method (with underscores replaced with spaces), and that each line contains the string representation of the output.</source>
          <target state="translated">Вы можете щелкнуть заголовки столбцов для сортировки по этим значениям - за исключением случая с заголовком &lt;code&gt;was_published_recently&lt;/code&gt; , поскольку сортировка по выводу произвольного метода не поддерживается. Также обратите внимание, что заголовок столбца для &lt;code&gt;was_published_recently&lt;/code&gt; по умолчанию является именем метода (с подчеркиванием, замененным пробелами), и что каждая строка содержит строковое представление выходных данных.</target>
        </trans-unit>
        <trans-unit id="5b2c34a81955b60f681a3dd23cc8775f5827bfb2" translate="yes" xml:space="preserve">
          <source>You can close the connection to your cache with &lt;code&gt;close()&lt;/code&gt; if implemented by the cache backend.</source>
          <target state="translated">Вы можете закрыть соединение с вашим кешем с помощью &lt;code&gt;close()&lt;/code&gt; если это реализовано в бэкенде кеша.</target>
        </trans-unit>
        <trans-unit id="7500502860ca0816c9c1bef96579a9e9f8be1fb1" translate="yes" xml:space="preserve">
          <source>You can combine &lt;code&gt;date&lt;/code&gt; with the &lt;a href=&quot;#std:templatefilter-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; filter to render a full representation of a &lt;code&gt;datetime&lt;/code&gt; value. E.g.:</source>
          <target state="translated">Вы можете объединить &lt;code&gt;date&lt;/code&gt; с &lt;a href=&quot;#std:templatefilter-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; фильтром, чтобы получить полное представление значения &lt;code&gt;datetime&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="f1e17fbfbcc022d918835fb90481ebf453c5ac8f" translate="yes" xml:space="preserve">
          <source>You can compose statements of arbitrary complexity by combining &lt;code&gt;Q&lt;/code&gt; objects with the &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; operators and use parenthetical grouping. Also, &lt;code&gt;Q&lt;/code&gt; objects can be negated using the &lt;code&gt;~&lt;/code&gt; operator, allowing for combined lookups that combine both a normal query and a negated (&lt;code&gt;NOT&lt;/code&gt;) query:</source>
          <target state="translated">Вы можете составлять операторы произвольной сложности, комбинируя объекты &lt;code&gt;Q&lt;/code&gt; с символами &lt;code&gt;&amp;amp;&lt;/code&gt; и &lt;code&gt;|&lt;/code&gt; операторы и использовать скобки в скобках. Кроме того, объекты &lt;code&gt;Q&lt;/code&gt; могут быть отменены с помощью оператора &lt;code&gt;~&lt;/code&gt; , что позволяет комбинировать поиск, который объединяет как обычный запрос, так и отрицательный ( &lt;code&gt;NOT&lt;/code&gt; ) запрос:</target>
        </trans-unit>
        <trans-unit id="49e3ab471c0e0783a0461541ebe6cb5ad7731f68" translate="yes" xml:space="preserve">
          <source>You can control downstream caches in other ways as well (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7234&lt;/strong&gt;&lt;/a&gt; for details on HTTP caching). For example, even if you don&amp;rsquo;t use Django&amp;rsquo;s server-side cache framework, you can still tell clients to cache a view for a certain amount of time with the &lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html#section-5.2.2.8&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;max-age&lt;/strong&gt;&lt;/a&gt; directive:</source>
          <target state="translated">Вы также можете управлять нисходящим кэшем и другими способами (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7234&lt;/strong&gt;&lt;/a&gt; для получения подробной информации о HTTP-кэшировании). Например, даже если вы не используете серверную среду кэширования Django, вы все равно можете сказать клиентам кэшировать представление в течение определенного периода времени с помощью директивы &lt;a href=&quot;https://tools.ietf.org/html/rfc7234.html#section-5.2.2.8&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;max-age&lt;/strong&gt;&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1b0a89971ceb8dbe845fd755418d85e0cbd0748f" translate="yes" xml:space="preserve">
          <source>You can control whether the session framework uses browser-length sessions vs. persistent sessions with the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">С помощью параметра &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt; &lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt; &lt;/a&gt; вы можете контролировать, использует ли структура сеансов длительность браузера или постоянные сеансы .</target>
        </trans-unit>
        <trans-unit id="0a19292a876da906a003668fec46a95e9991ae8b" translate="yes" xml:space="preserve">
          <source>You can convert a normal &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; to any of the subclasses: change the base class of your test from &lt;code&gt;unittest.TestCase&lt;/code&gt; to the subclass. All of the standard Python unit test functionality will be available, and it will be augmented with some useful additions as described in each section below.</source>
          <target state="translated">Вы можете преобразовать обычный &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; в любой из подклассов: измените базовый класс вашего теста с &lt;code&gt;unittest.TestCase&lt;/code&gt; на подкласс. Будут доступны все стандартные функциональные возможности тестового модуля Python, и он будет дополнен некоторыми полезными дополнениями, как описано в каждом разделе ниже.</target>
        </trans-unit>
        <trans-unit id="3f48c825823a39977b7ea9acac5fc4e84256a021" translate="yes" xml:space="preserve">
          <source>You can create a PostgreSQL extension in your database using a migration file. This example creates an hstore extension, but the same principles apply for other extensions.</source>
          <target state="translated">Вы можете создать расширение PostgreSQL в своей базе данных с помощью файла миграции.В этом примере создается расширение hstore,но те же принципы применимы и к другим расширениям.</target>
        </trans-unit>
        <trans-unit id="b4758528db78afc5b414299c5a85a46a2e40cc56" translate="yes" xml:space="preserve">
          <source>You can create a pull request by visiting the &lt;a href=&quot;https://github.com/django/django/&quot;&gt;Django GitHub page&lt;/a&gt;. You&amp;rsquo;ll see your branch under &amp;ldquo;Your recently pushed branches&amp;rdquo;. Click &amp;ldquo;Compare &amp;amp; pull request&amp;rdquo; next to it.</source>
          <target state="translated">Вы можете создать пул-запрос, посетив &lt;a href=&quot;https://github.com/django/django/&quot;&gt;страницу Django GitHub&lt;/a&gt; . Вы увидите свою ветку в разделе &amp;laquo;Недавно добавленные ветки&amp;raquo;. Нажмите &amp;laquo;Сравнить и получить запрос&amp;raquo; рядом с ним.</target>
        </trans-unit>
        <trans-unit id="d392e5b287166675248a1fa4972a37d1f7842ce0" translate="yes" xml:space="preserve">
          <source>You can create forms from a given model using the standalone function &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelform_factory&quot;&gt;&lt;code&gt;modelform_factory()&lt;/code&gt;&lt;/a&gt;, instead of using a class definition. This may be more convenient if you do not have many customizations to make:</source>
          <target state="translated">Вы можете создавать формы из заданной модели, используя автономную функцию &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelform_factory&quot;&gt; &lt;code&gt;modelform_factory()&lt;/code&gt; &lt;/a&gt; вместо использования определения класса. Это может быть более удобно, если у вас не так много настроек:</target>
        </trans-unit>
        <trans-unit id="06a429c724a3a8d6fdc8d61c747bc54012b518e5" translate="yes" xml:space="preserve">
          <source>You can create multiple instances of the admin site on the same Django-powered website. Create multiple instances of &lt;code&gt;AdminSite&lt;/code&gt; and place each one at a different URL.</source>
          <target state="translated">Вы можете создать несколько экземпляров сайта администратора на одном и том же веб-сайте с поддержкой Django. Создайте несколько экземпляров &lt;code&gt;AdminSite&lt;/code&gt; и разместите каждый по отдельному URL.</target>
        </trans-unit>
        <trans-unit id="ee639f0e42c79c1a2da9a4df90ab790ddc8839dd" translate="yes" xml:space="preserve">
          <source>You can create your own aggregate functions, too. At a minimum, you need to define &lt;code&gt;function&lt;/code&gt;, but you can also completely customize the SQL that is generated. Here&amp;rsquo;s a brief example:</source>
          <target state="translated">Вы также можете создавать свои собственные агрегатные функции. Как минимум, вам нужно определить &lt;code&gt;function&lt;/code&gt; , но вы также можете полностью настроить сгенерированный SQL. Вот краткий пример:</target>
        </trans-unit>
        <trans-unit id="348f56868c2e0df997214174e22691a59b7dffc9" translate="yes" xml:space="preserve">
          <source>You can customize the instance by overriding this method and calling &lt;code&gt;super()&lt;/code&gt; with &lt;code&gt;kwargs&lt;/code&gt; of &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">Вы можете настроить экземпляр с помощью переопределения этого метода и вызова &lt;code&gt;super()&lt;/code&gt; с &lt;code&gt;kwargs&lt;/code&gt; из &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; параметров.</target>
        </trans-unit>
        <trans-unit id="8aab006c176a2f246d1125662ae3d3baf13e4ddd" translate="yes" xml:space="preserve">
          <source>You can defer loading of fields in related models (if the related models are loading via &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt;) by using the standard double-underscore notation to separate related fields:</source>
          <target state="translated">Вы можете отложить загрузку полей в связанных моделях (если связанные модели загружаются с помощью &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt; ), используя стандартную запись двойного подчеркивания для разделения связанных полей:</target>
        </trans-unit>
        <trans-unit id="c1b6fcbea6fba504fba8d70201ab01d4cb2c7880" translate="yes" xml:space="preserve">
          <source>You can define explicit SQL &lt;code&gt;WHERE&lt;/code&gt; clauses &amp;mdash; perhaps to perform non-explicit joins &amp;mdash; by using &lt;code&gt;where&lt;/code&gt;. You can manually add tables to the SQL &lt;code&gt;FROM&lt;/code&gt; clause by using &lt;code&gt;tables&lt;/code&gt;.</source>
          <target state="translated">Вы можете определить явные &lt;code&gt;WHERE&lt;/code&gt; SQL WHERE - возможно, для выполнения неявных объединений - используя &lt;code&gt;where&lt;/code&gt; . Вы можете вручную добавить таблицы в предложение SQL &lt;code&gt;FROM&lt;/code&gt; , используя &lt;code&gt;tables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d6038d95e0541d471bca8d806ccd964cfcc57b5" translate="yes" xml:space="preserve">
          <source>You can delete keys explicitly with &lt;code&gt;delete()&lt;/code&gt; to clear the cache for a particular object:</source>
          <target state="translated">Вы можете явно удалить ключи с помощью &lt;code&gt;delete()&lt;/code&gt; чтобы очистить кеш для определенного объекта:</target>
        </trans-unit>
        <trans-unit id="c71bc46c7446b75662ea4d1f8d3cd3cf2603d7a4" translate="yes" xml:space="preserve">
          <source>You can delete using a JOIN in the query:</source>
          <target state="translated">Вы можете удалить,используя JOIN в запросе:</target>
        </trans-unit>
        <trans-unit id="c732b1e46aed4b370654d212e2ddf3852efee55a" translate="yes" xml:space="preserve">
          <source>You can deliberately choose the &lt;em&gt;same URL name&lt;/em&gt; as another application if you want to override a view. For example, a common use case is to override the &lt;a href=&quot;../auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;LoginView&lt;/code&gt;&lt;/a&gt;. Parts of Django and most third-party apps assume that this view has a URL pattern with the name &lt;code&gt;login&lt;/code&gt;. If you have a custom login view and give its URL the name &lt;code&gt;login&lt;/code&gt;, &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; will find your custom view as long as it&amp;rsquo;s in &lt;code&gt;urlpatterns&lt;/code&gt; after &lt;code&gt;django.contrib.auth.urls&lt;/code&gt; is included (if that&amp;rsquo;s included at all).</source>
          <target state="translated">Вы можете сознательно выбрать то &lt;em&gt;же имя URL,&lt;/em&gt; что и другое приложение, если вы хотите переопределить представление. Например, распространенным случаем использования является переопределение &lt;a href=&quot;../auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;LoginView&lt;/code&gt; &lt;/a&gt; . Части Django и большинства сторонних приложений предполагают, что в этом представлении есть шаблон URL с именем &lt;code&gt;login&lt;/code&gt; . Если у вас есть пользовательское представление входа в систему и присваивает его URL имя &lt;code&gt;login&lt;/code&gt; , &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; найдет ваше пользовательское представление, если оно находится в &lt;code&gt;urlpatterns&lt;/code&gt; после &lt;code&gt;django.contrib.auth.urls&lt;/code&gt; (если оно вообще включено).</target>
        </trans-unit>
        <trans-unit id="3a0060243dcf3009d5ef444a5e7fd808f173cb9b" translate="yes" xml:space="preserve">
          <source>You can disable the creation of savepoints for inner blocks by setting the &lt;code&gt;savepoint&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt;. If an exception occurs, Django will perform the rollback when exiting the first parent block with a savepoint if there is one, and the outermost block otherwise. Atomicity is still guaranteed by the outer transaction. This option should only be used if the overhead of savepoints is noticeable. It has the drawback of breaking the error handling described above.</source>
          <target state="translated">Вы можете отключить создание точек сохранения для внутренних блоков, установив для аргумента &lt;code&gt;savepoint&lt;/code&gt; значение &lt;code&gt;False&lt;/code&gt; . Если возникает исключение, Django выполнит откат при выходе из первого родительского блока с точкой сохранения, если таковая имеется, и с внешним блоком в противном случае. Атомность все еще гарантируется внешней транзакцией. Эту опцию следует использовать только в том случае, если накладные расходы на точки сохранения заметны. У него есть недостаток, заключающийся в нарушении обработки ошибок, описанной выше.</target>
        </trans-unit>
        <trans-unit id="2fb1f1cc32d452424b94a5732876b07d598ec9d7" translate="yes" xml:space="preserve">
          <source>You can do it like this:</source>
          <target state="translated">Ты можешь сделать это вот так:</target>
        </trans-unit>
        <trans-unit id="5a52e51f45dd5899727849babae2a0ddb38658bc" translate="yes" xml:space="preserve">
          <source>You can do so by wrapping the view function with &lt;code&gt;cache_page&lt;/code&gt; when you refer to it in the URLconf. Here&amp;rsquo;s the old URLconf from earlier:</source>
          <target state="translated">Вы можете сделать это, &lt;code&gt;cache_page&lt;/code&gt; функцию view в cache_page, когда вы ссылаетесь на нее в URLconf. Вот старый URLconf из ранее:</target>
        </trans-unit>
        <trans-unit id="0d835da88c5d179d0b2c5d75c54dec8645abae4c" translate="yes" xml:space="preserve">
          <source>You can edit the books authored by an author on the author page. You add inlines to a model by specifying them in a &lt;code&gt;ModelAdmin.inlines&lt;/code&gt;:</source>
          <target state="translated">Вы можете редактировать книги, написанные автором на странице автора. Вы добавляете inlines к модели, указывая их в &lt;code&gt;ModelAdmin.inlines&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3016db5eb19544d025be1a8b7268ea97ec20a0c2" translate="yes" xml:space="preserve">
          <source>You can enable this loader by setting &lt;a href=&quot;../settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">Вы можете включить этот загрузчик, установив для &lt;a href=&quot;../settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;True&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="de79d0b2607f7d5a145f930159362536d7b65111" translate="yes" xml:space="preserve">
          <source>You can evaluate a &lt;code&gt;QuerySet&lt;/code&gt; in the following ways:</source>
          <target state="translated">Вы можете оценить &lt;code&gt;QuerySet&lt;/code&gt; следующими способами:</target>
        </trans-unit>
        <trans-unit id="da1b0330bf3f3cef0c75fc37e89d40294848a6fc" translate="yes" xml:space="preserve">
          <source>You can even change the encoding after having accessed &lt;code&gt;request.GET&lt;/code&gt; or &lt;code&gt;request.POST&lt;/code&gt;, and all subsequent accesses will use the new encoding.</source>
          <target state="translated">Вы даже можете изменить кодировку после обращения к &lt;code&gt;request.GET&lt;/code&gt; или &lt;code&gt;request.POST&lt;/code&gt; , и все последующие доступы будут использовать новую кодировку.</target>
        </trans-unit>
        <trans-unit id="d713cfacd8ce578e0d97c05dc6d3052dc947a818" translate="yes" xml:space="preserve">
          <source>You can even pre-generate the JavaScript catalog as part of your deployment procedure and serve it as a static file. This radical technique is implemented in &lt;a href=&quot;https://django-statici18n.readthedocs.io/en/latest/&quot;&gt;django-statici18n&lt;/a&gt;.</source>
          <target state="translated">Вы даже можете предварительно сгенерировать каталог JavaScript как часть процедуры развертывания и использовать его как статический файл. Эта радикальная техника реализована в &lt;a href=&quot;https://django-statici18n.readthedocs.io/en/latest/&quot;&gt;django-statici18n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f8472285bb51c529d792962f29746b546a94cfc" translate="yes" xml:space="preserve">
          <source>You can extend the session engines, but doing so with database-backed session engines generally requires some extra effort (see the next section for details).</source>
          <target state="translated">Вы можете расширить движки сеанса,но сделать это с движками сеанса,поддерживаемыми базой данных,обычно требует некоторых дополнительных усилий (смотрите следующий раздел для подробностей).</target>
        </trans-unit>
        <trans-unit id="7f749123281393780ec0d8e9612ffc235641f0b1" translate="yes" xml:space="preserve">
          <source>You can follow foreign keys in a similar way to querying them. If you have the following models:</source>
          <target state="translated">Вы можете следить за иностранными ключами аналогично тому,как вы их запрашиваете.Если у вас есть следующие модели:</target>
        </trans-unit>
        <trans-unit id="13aae5d47e0aedbc3d374d151cbf104b7f4aa090" translate="yes" xml:space="preserve">
          <source>You can get and set via a foreign-key attribute. As you may expect, changes to the foreign key aren&amp;rsquo;t saved to the database until you call &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">Вы можете получить и установить через атрибут внешнего ключа. Как вы можете ожидать, изменения во внешнем ключе не сохраняются в базе данных, пока вы не вызовете &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="2cd47eeef091e44d00c6f4e3584f8f6843712304" translate="yes" xml:space="preserve">
          <source>You can get the name of the current time zone using the &lt;code&gt;get_current_timezone&lt;/code&gt; tag:</source>
          <target state="translated">Вы можете получить имя текущего часового пояса, используя тег &lt;code&gt;get_current_timezone&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cf4b95e934f3445d9539d37663d1a45d3a94ba5a" translate="yes" xml:space="preserve">
          <source>You can get/set geometry components using standard Python indexing techniques. However, what is returned depends on the geometry type of the object. For example, indexing on a &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; returns a coordinate tuple:</source>
          <target state="translated">Вы можете получить / установить геометрические компоненты, используя стандартные методы индексации Python. Однако то, что возвращается, зависит от типа геометрии объекта. Например, индексирование в &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt; возвращает кортеж координат:</target>
        </trans-unit>
        <trans-unit id="d4974682a1670f11df5f908a7d73b594d9b3ae98" translate="yes" xml:space="preserve">
          <source>You can give your models &lt;a href=&quot;#custom-permissions&quot;&gt;custom permissions&lt;/a&gt; that can be checked through Django&amp;rsquo;s authorization system.</source>
          <target state="translated">Вы можете дать своим моделям &lt;a href=&quot;#custom-permissions&quot;&gt;специальные разрешения,&lt;/a&gt; которые можно проверить через систему авторизации Django.</target>
        </trans-unit>
        <trans-unit id="139a20bc99bb7c4946c169f1f4a8666882a75cc4" translate="yes" xml:space="preserve">
          <source>You can hook into the CSV-generation API by passing &lt;code&gt;response&lt;/code&gt; as the first argument to &lt;code&gt;csv.writer&lt;/code&gt;. The &lt;code&gt;csv.writer&lt;/code&gt; function expects a file-like object, and &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects fit the bill.</source>
          <target state="translated">Вы можете подключиться к API генерации CSV, передав &lt;code&gt;response&lt;/code&gt; в качестве первого аргумента &lt;code&gt;csv.writer&lt;/code&gt; . Функция &lt;code&gt;csv.writer&lt;/code&gt; ожидает объект, подобный файлу, а объекты &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; отвечают всем требованиям.</target>
        </trans-unit>
        <trans-unit id="1a4b42d8da6932419fcfd15e761c94f69a7ce968" translate="yes" xml:space="preserve">
          <source>You can hook into the ReportLab API: The same buffer passed as the first argument to &lt;code&gt;canvas.Canvas&lt;/code&gt; can be fed to the &lt;a href=&quot;../ref/request-response#django.http.FileResponse&quot;&gt;&lt;code&gt;FileResponse&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Вы можете подключиться к API ReportLab: тот же буфер, который передан в качестве первого аргумента в &lt;code&gt;canvas.Canvas&lt;/code&gt; можно передать в класс &lt;a href=&quot;../ref/request-response#django.http.FileResponse&quot;&gt; &lt;code&gt;FileResponse&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7477188d83fde163e14417b378688bdfc8ad014a" translate="yes" xml:space="preserve">
          <source>You can improve that by giving that method (in &lt;code&gt;polls/models.py&lt;/code&gt;) a few attributes, as follows:</source>
          <target state="translated">Вы можете улучшить это, предоставив этому методу (в &lt;code&gt;polls/models.py&lt;/code&gt; ) несколько атрибутов, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="e446d0bbe429da1de16972b0d90351fb95e14c7d" translate="yes" xml:space="preserve">
          <source>You can install Daphne with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">Вы можете установить Дафну с помощью &lt;code&gt;pip&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0ced5f834fe207cad8796a0c5f9bce4fc0c7824d" translate="yes" xml:space="preserve">
          <source>You can install Uvicorn with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">Вы можете установить Uvicorn с помощью &lt;code&gt;pip&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e4e6d32ee1c0a89d36e6b394a7235b5e4d4c0977" translate="yes" xml:space="preserve">
          <source>You can iterate over each feature in the layer and extract information from both the feature&amp;rsquo;s geometry (accessed via the &lt;code&gt;geom&lt;/code&gt; attribute) as well as the feature&amp;rsquo;s attribute fields (whose &lt;strong&gt;values&lt;/strong&gt; are accessed via &lt;code&gt;get()&lt;/code&gt; method):</source>
          <target state="translated">Вы можете выполнять итерацию по каждому объекту в слое и извлекать информацию как из геометрии объекта (доступ через атрибут &lt;code&gt;geom&lt;/code&gt; ), так и из полей атрибута объекта ( &lt;strong&gt;значения&lt;/strong&gt; которого доступны через метод &lt;code&gt;get()&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="af948b7bb1614ab40380826ee1759eec1f009079" translate="yes" xml:space="preserve">
          <source>You can let Django serialize your own custom class instances by giving the class a &lt;code&gt;deconstruct()&lt;/code&gt; method. It takes no arguments, and should return a tuple of three things &lt;code&gt;(path, args, kwargs)&lt;/code&gt;:</source>
          <target state="translated">Вы можете позволить Django сериализовать ваши собственные экземпляры классов, предоставив классу метод &lt;code&gt;deconstruct()&lt;/code&gt; . Он не принимает аргументов и должен возвращать кортеж из трех вещей &lt;code&gt;(path, args, kwargs)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e19a618750a1bfdfaca84da0a4ed31ecc99e1d7e" translate="yes" xml:space="preserve">
          <source>You can limit the choices of a related model to the objects involved in that relation using &lt;code&gt;RelatedOnlyFieldListFilter&lt;/code&gt;:</source>
          <target state="translated">Вы можете ограничить выбор связанной модели для объектов, связанных с этим отношением, используя &lt;code&gt;RelatedOnlyFieldListFilter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5e26888aebe44ae43040f2f0ee6b1cea71855186" translate="yes" xml:space="preserve">
          <source>You can load data by calling &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;manage.py loaddata&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt; is the name of the fixture file you&amp;rsquo;ve created. Each time you run &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt;, the data will be read from the fixture and re-loaded into the database. Note this means that if you change one of the rows created by a fixture and then run &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; again, you&amp;rsquo;ll wipe out any changes you&amp;rsquo;ve made.</source>
          <target state="translated">Вы можете загрузить данные, вызвав &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;manage.py loaddata&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt; , где &lt;code&gt;&amp;lt;fixturename&amp;gt;&lt;/code&gt; - имя созданного вами файла Fixture . Каждый раз, когда вы запускаете &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt; , данные будут считываться из прибора и загружаться в базу данных. Обратите внимание, это означает, что если вы измените одну из строк, созданных &lt;a href=&quot;../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt; , а затем снова запустите loaddata , вы уничтожите все сделанные вами изменения.</target>
        </trans-unit>
        <trans-unit id="420a1320795aacabf4e4de6b076180923d6b7cf0" translate="yes" xml:space="preserve">
          <source>You can loop over a list in reverse by using &lt;code&gt;{% for obj in list reversed %}&lt;/code&gt;.</source>
          <target state="translated">Вы можете перебрать список в обратном порядке, используя &lt;code&gt;{% for obj in list reversed %}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f5cf279c4a4bf7339b672230bf9d06ccea15d42" translate="yes" xml:space="preserve">
          <source>You can make cached properties of methods. For example, if you had an expensive &lt;code&gt;get_friends()&lt;/code&gt; method and wanted to allow calling it without retrieving the cached value, you could write:</source>
          <target state="translated">Вы можете сделать кэшированные свойства методов. Например, если у вас был дорогой &lt;code&gt;get_friends()&lt;/code&gt; и вы хотите разрешить его вызов без извлечения кэшированного значения, вы можете написать:</target>
        </trans-unit>
        <trans-unit id="a3ff5361619ce05e3d87a3f55f22011f8578a826" translate="yes" xml:space="preserve">
          <source>You can make multiple calls to &lt;code&gt;defer()&lt;/code&gt;. Each call adds new fields to the deferred set:</source>
          <target state="translated">Вы можете сделать несколько вызовов &lt;code&gt;defer()&lt;/code&gt; . Каждый вызов добавляет новые поля в отложенный набор:</target>
        </trans-unit>
        <trans-unit id="cbfb8f4570c91455e3ae3834d574bfede153ffb2" translate="yes" xml:space="preserve">
          <source>You can make your application load this &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass by default as follows:</source>
          <target state="translated">Вы можете заставить свое приложение загружать этот подкласс &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; по умолчанию следующим образом:</target>
        </trans-unit>
        <trans-unit id="224e2acbf4aa7ffde6671659276aedd929e463bb" translate="yes" xml:space="preserve">
          <source>You can mark names of &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; relationship as translatable by using their &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; options:</source>
          <target state="translated">Вы можете пометить имена &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; как переводимые с помощью их параметров &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="613dab5dcda6b04d0f7b6d9fd5e14cedd25f0f0f" translate="yes" xml:space="preserve">
          <source>You can mix variables and strings:</source>
          <target state="translated">Вы можете смешивать переменные и строки:</target>
        </trans-unit>
        <trans-unit id="22edb8e58a24accde9832180b7aa1332d5b84538" translate="yes" xml:space="preserve">
          <source>You can modify variables for display by using &lt;strong&gt;filters&lt;/strong&gt;.</source>
          <target state="translated">Вы можете изменить переменные для отображения с помощью &lt;strong&gt;фильтров&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0f665266c7c2e31fa4886dc01a85ee285a5ce5f6" translate="yes" xml:space="preserve">
          <source>You can namespace static assets in &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt; by specifying &lt;a href=&quot;../../ref/settings#staticfiles-dirs-prefixes&quot;&gt;prefixes&lt;/a&gt;.</source>
          <target state="translated">Вы можете указать пространство статических ресурсов в &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt; , указав &lt;a href=&quot;../../ref/settings#staticfiles-dirs-prefixes&quot;&gt;префиксы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a590f6904fd512449629ea5b9a8ab9c65d5503a" translate="yes" xml:space="preserve">
          <source>You can obtain these in template code by using:</source>
          <target state="translated">Вы можете получить их в коде шаблона,используя его:</target>
        </trans-unit>
        <trans-unit id="4f51988e5c5475b42b6ab865943dac273a8ddf38" translate="yes" xml:space="preserve">
          <source>You can of course pass through keyword arguments to &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; in the same way you would in your URLconf, such as if you wanted the &lt;code&gt;AuthorInterest&lt;/code&gt; behavior to also appear at another URL but using a different template:</source>
          <target state="translated">Конечно, вы можете передавать аргументы ключевых слов в &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; же, как в URLconf, например, если вы хотите, &lt;code&gt;AuthorInterest&lt;/code&gt; поведение AuthorInterest также отображалось на другом URL, но с использованием другого шаблона:</target>
        </trans-unit>
        <trans-unit id="c70cc7d82849c2eb5eebc8b89af49e3f450e636e" translate="yes" xml:space="preserve">
          <source>You can often avoid using raw SQL to compute annotations by instead using a &lt;a href=&quot;../../ref/models/expressions#func-expressions&quot;&gt;Func() expression&lt;/a&gt;.</source>
          <target state="translated">Вы можете часто избегать использования необработанного SQL для вычисления аннотаций, вместо этого используя &lt;a href=&quot;../../ref/models/expressions#func-expressions&quot;&gt;выражение Func ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51213ada893073432329bdb30fdc9f0b199b7d62" translate="yes" xml:space="preserve">
          <source>You can only modify upload handlers &lt;em&gt;before&lt;/em&gt; accessing &lt;code&gt;request.POST&lt;/code&gt; or &lt;code&gt;request.FILES&lt;/code&gt; &amp;ndash; it doesn&amp;rsquo;t make sense to change upload handlers after upload handling has already started. If you try to modify &lt;code&gt;request.upload_handlers&lt;/code&gt; after reading from &lt;code&gt;request.POST&lt;/code&gt; or &lt;code&gt;request.FILES&lt;/code&gt; Django will throw an error.</source>
          <target state="translated">Вы можете изменять обработчики выгрузки только &lt;em&gt;до&lt;/em&gt; доступа к &lt;code&gt;request.POST&lt;/code&gt; или &lt;code&gt;request.FILES&lt;/code&gt; - менять обработчики выгрузки не имеет смысла после того, как обработка загрузки уже началась. Если вы попытаетесь изменить &lt;code&gt;request.upload_handlers&lt;/code&gt; после чтения из &lt;code&gt;request.POST&lt;/code&gt; или &lt;code&gt;request.FILES&lt;/code&gt; , Django выдаст ошибку.</target>
        </trans-unit>
        <trans-unit id="0d89a6ccbcbf552ebaa698cb09951780654c0abf" translate="yes" xml:space="preserve">
          <source>You can only set non-relation fields and &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; fields using this method. To update a non-relation field, provide the new value as a constant. To update &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; fields, set the new value to be the new model instance you want to point to. For example:</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; помощью этого метода вы можете устанавливать только не относящиеся к делу поля и поля ForeignKey . Чтобы обновить нереляционное поле, укажите новое значение как константу. Чтобы обновить поля &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , установите новое значение в качестве нового экземпляра модели, на который вы хотите указать. Например:</target>
        </trans-unit>
        <trans-unit id="59db4ce18104e7b407855d2ba1a84eec8fa33e1d" translate="yes" xml:space="preserve">
          <source>You can only use this technique to opt out from a field defined declaratively by a parent class; it won&amp;rsquo;t prevent the &lt;code&gt;ModelForm&lt;/code&gt; metaclass from generating a default field. To opt-out from default fields, see &lt;a href=&quot;#modelforms-selecting-fields&quot;&gt;Selecting the fields to use&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать эту технику только для отказа от поля, определенного декларативно родительским классом; это не помешает метаклассу &lt;code&gt;ModelForm&lt;/code&gt; генерировать поле по умолчанию. Чтобы отказаться от использования полей по умолчанию, см. &lt;a href=&quot;#modelforms-selecting-fields&quot;&gt;Выбор полей для использования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a0844d979b163332d72b1574f31bc03c690fd9e" translate="yes" xml:space="preserve">
          <source>You can optionally serialize managers into migrations and have them available in &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operations. This is done by defining a &lt;code&gt;use_in_migrations&lt;/code&gt; attribute on the manager class:</source>
          <target state="translated">При желании вы можете сериализовать менеджеры в миграцию и сделать их доступными в операциях &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; . Это делается путем определения атрибута &lt;code&gt;use_in_migrations&lt;/code&gt; в классе менеджера:</target>
        </trans-unit>
        <trans-unit id="15a184147a4d588e8e21c17a7686b96a3cc7684f" translate="yes" xml:space="preserve">
          <source>You can order by a field converted to lowercase with &lt;a href=&quot;database-functions#django.db.models.functions.Lower&quot;&gt;&lt;code&gt;Lower&lt;/code&gt;&lt;/a&gt; which will achieve case-consistent ordering:</source>
          <target state="translated">Вы можете упорядочить по полю, преобразованному в нижний регистр с помощью &lt;a href=&quot;database-functions#django.db.models.functions.Lower&quot;&gt; &lt;code&gt;Lower&lt;/code&gt; ,&lt;/a&gt; что обеспечит последовательное упорядочение:</target>
        </trans-unit>
        <trans-unit id="b66b1573d137a299dd06177068779747de5bf2c6" translate="yes" xml:space="preserve">
          <source>You can override a &lt;code&gt;Manager&lt;/code&gt;&amp;rsquo;s base &lt;code&gt;QuerySet&lt;/code&gt; by overriding the &lt;code&gt;Manager.get_queryset()&lt;/code&gt; method. &lt;code&gt;get_queryset()&lt;/code&gt; should return a &lt;code&gt;QuerySet&lt;/code&gt; with the properties you require.</source>
          <target state="translated">Вы можете переопределить базовый &lt;code&gt;QuerySet&lt;/code&gt; &lt;code&gt;Manager&lt;/code&gt; , переопределив метод &lt;code&gt;Manager.get_queryset()&lt;/code&gt; . &lt;code&gt;get_queryset()&lt;/code&gt; должен возвращать &lt;code&gt;QuerySet&lt;/code&gt; с требуемыми свойствами.</target>
        </trans-unit>
        <trans-unit id="774e634f057ed8b775fac695366c721f3f9c6525" translate="yes" xml:space="preserve">
          <source>You can override many of the templates which the admin module uses to generate the various pages of an admin site. You can even override a few of these templates for a specific app, or a specific model.</source>
          <target state="translated">Вы можете переопределить многие из шаблонов,которые модуль администрирования использует для генерации различных страниц сайта администратора.Вы даже можете переопределить некоторые из этих шаблонов для конкретного приложения или конкретной модели.</target>
        </trans-unit>
        <trans-unit id="63a27f70ce0617425edda98c2158399717afcac1" translate="yes" xml:space="preserve">
          <source>You can override that field by declaring your own &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt;&lt;code&gt;parent_link=True&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;Restaurant&lt;/code&gt;.</source>
          <target state="translated">Вы можете переопределить это поле, объявив свой собственный &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt; &lt;code&gt;parent_link=True&lt;/code&gt; &lt;/a&gt; в &lt;code&gt;Restaurant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57ea21375a48e21320717250461c64e73f3c91e6" translate="yes" xml:space="preserve">
          <source>You can override that in a subclass:</source>
          <target state="translated">Ты можешь отменить это в подклассе:</target>
        </trans-unit>
        <trans-unit id="e37300ab5cd8c3d829305fa943233de31550de77" translate="yes" xml:space="preserve">
          <source>You can override the &lt;code&gt;FOO_set&lt;/code&gt; name by setting the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; parameter in the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; definition. For example, if the &lt;code&gt;Entry&lt;/code&gt; model was altered to &lt;code&gt;blog = ForeignKey(Blog, on_delete=models.CASCADE,
related_name='entries')&lt;/code&gt;, the above example code would look like this:</source>
          <target state="translated">Вы можете переопределить &lt;code&gt;FOO_set&lt;/code&gt; имя, установив &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt; параметр в &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; определения. Например, если модель &lt;code&gt;Entry&lt;/code&gt; была изменена на &lt;code&gt;blog = ForeignKey(Blog, on_delete=models.CASCADE, related_name='entries')&lt;/code&gt; , приведенный выше пример кода будет выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="f8be738042bfdf451f6592d77fa6448d649e025d" translate="yes" xml:space="preserve">
          <source>You can override the &lt;code&gt;clean()&lt;/code&gt; method on a model form to provide additional validation in the same way you can on a normal form.</source>
          <target state="translated">Вы можете переопределить метод &lt;code&gt;clean()&lt;/code&gt; в форме модели, чтобы обеспечить дополнительную проверку так же, как и в обычной форме.</target>
        </trans-unit>
        <trans-unit id="982cb28ccc3520c7cc96e4b32a3866e196759fb2" translate="yes" xml:space="preserve">
          <source>You can override the default &lt;code&gt;django.contrib.admin.site&lt;/code&gt; by setting the &lt;a href=&quot;#django.contrib.admin.apps.SimpleAdminConfig.default_site&quot;&gt;&lt;code&gt;default_site&lt;/code&gt;&lt;/a&gt; attribute of a custom &lt;code&gt;AppConfig&lt;/code&gt; to the dotted import path of either a &lt;code&gt;AdminSite&lt;/code&gt; subclass or a callable that returns a site instance.</source>
          <target state="translated">Вы можете переопределить &lt;code&gt;django.contrib.admin.site&lt;/code&gt; по умолчанию , установив атрибут &lt;a href=&quot;#django.contrib.admin.apps.SimpleAdminConfig.default_site&quot;&gt; &lt;code&gt;default_site&lt;/code&gt; &lt;/a&gt; пользовательского &lt;code&gt;AppConfig&lt;/code&gt; в пунктирный путь импорта подкласса &lt;code&gt;AdminSite&lt;/code&gt; или вызываемого объекта, который возвращает экземпляр сайта.</target>
        </trans-unit>
        <trans-unit id="48efda1242365670d336d236b15a8da4caa644ab" translate="yes" xml:space="preserve">
          <source>You can override the error messages from &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; raised by model validation by adding the &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt;&lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt;&lt;/a&gt; key to the &lt;code&gt;error_messages&lt;/code&gt; dictionary of the &lt;code&gt;ModelForm&lt;/code&gt;&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class:</source>
          <target state="translated">Вы можете отменить сообщения об ошибках от &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; поднятого проверки модели пути добавления &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt; &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; &lt;/a&gt; ключа к &lt;code&gt;error_messages&lt;/code&gt; Словаря &lt;code&gt;ModelForm&lt;/code&gt; внутреннего &amp;laquo;s &lt;code&gt;Meta&lt;/code&gt; класса:</target>
        </trans-unit>
        <trans-unit id="dccb03bfb15ccac5a6bcfdb49eefcb6c9d88db33" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;named=True&lt;/code&gt; to get results as a &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы можете передать &lt;code&gt;named=True&lt;/code&gt; , чтобы получить результаты в виде &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="931e39961f290733a5369292c07bec95d65d8aef" translate="yes" xml:space="preserve">
          <source>You can pass a second callable to &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; to run whatever logic you want executed when migrating backwards. If this callable is omitted, migrating backwards will raise an exception.</source>
          <target state="translated">Вы можете передать второй вызываемый &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; в RunPython, чтобы запустить любую логику, которую вы хотите выполнить при миграции назад. Если этот вызываемый элемент пропущен, миграция в обратном направлении вызовет исключение.</target>
        </trans-unit>
        <trans-unit id="670e6640c54c0a96047b07fe15722e593447c0a2" translate="yes" xml:space="preserve">
          <source>You can pass additional context to the template using keyword arguments:</source>
          <target state="translated">Вы можете передать дополнительный контекст шаблону,используя аргументы ключевых слов:</target>
        </trans-unit>
        <trans-unit id="f6ba219abd6ddac3bfd5adc72addcf1efe76d284" translate="yes" xml:space="preserve">
          <source>You can pass as many tags to &lt;code&gt;register&lt;/code&gt; as you want in order to label your check. Tagging checks is useful since it allows you to run only a certain group of checks. For example, to register a compatibility check, you would make the following call:</source>
          <target state="translated">Вы можете передать столько тегов для &lt;code&gt;register&lt;/code&gt; сколько хотите, чтобы пометить свой чек. Проверка тегов полезна, поскольку позволяет выполнять только определенную группу проверок. Например, чтобы зарегистрировать проверку совместимости, вы должны сделать следующий вызов:</target>
        </trans-unit>
        <trans-unit id="17cee0b9238b611eecf7805f75927cfcc2150db6" translate="yes" xml:space="preserve">
          <source>You can pass in bytestrings when creating a model or populating a field, and Django will convert it to strings when it needs to.</source>
          <target state="translated">Вы можете передавать байтстринг при создании модели или заполнении поля,и при необходимости Django будет преобразовывать его в строки.</target>
        </trans-unit>
        <trans-unit id="34d28ab790c6f4c880e7c1c6bc008f6f83e00571" translate="yes" xml:space="preserve">
          <source>You can pass in either an integer or a string representation of an integer.</source>
          <target state="translated">Можно передавать как целое число,так и строковое представление целого числа.</target>
        </trans-unit>
        <trans-unit id="b9872a25b8b51c0012c0d49a1272ab262fd71b72" translate="yes" xml:space="preserve">
          <source>You can pass it a single argument that is a &lt;a href=&quot;https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; instance. This will be inserted directly into the resulting message.</source>
          <target state="translated">Вы можете передать ему один аргумент, который является экземпляром &lt;a href=&quot;https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt; . Это будет вставлено непосредственно в полученное сообщение.</target>
        </trans-unit>
        <trans-unit id="91c8a0f9176d92ec480ff94d40ce3c2bc7b067b9" translate="yes" xml:space="preserve">
          <source>You can pass multiple headers to &lt;code&gt;vary_on_headers()&lt;/code&gt;:</source>
          <target state="translated">Вы можете передать несколько заголовков в &lt;code&gt;vary_on_headers()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="23546d2c51be2774546341f5c24f0723e84a867d" translate="yes" xml:space="preserve">
          <source>You can pass the &lt;a href=&quot;../../ref/models/indexes#django.db.models.Index.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; option to an &lt;code&gt;Index&lt;/code&gt; constructor to specify the name of a tablespace to use for the index. For single field indexes, you can pass the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; option to a &lt;code&gt;Field&lt;/code&gt; constructor to specify an alternate tablespace for the field&amp;rsquo;s column index. If the column doesn&amp;rsquo;t have an index, the option is ignored.</source>
          <target state="translated">Вы можете передать параметр &lt;a href=&quot;../../ref/models/indexes#django.db.models.Index.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt; в конструктор &lt;code&gt;Index&lt;/code&gt; , чтобы указать имя табличного пространства, которое будет использоваться для индекса. Для индексов одного поля вы можете передать опцию &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt; в конструктор &lt;code&gt;Field&lt;/code&gt; , чтобы указать альтернативное табличное пространство для индекса столбца поля. Если столбец не имеет индекса, этот параметр игнорируется.</target>
        </trans-unit>
        <trans-unit id="92443aff0b39a25683edc59a3ce62d5f795c64f5" translate="yes" xml:space="preserve">
          <source>You can pass widget attributes in the same manner that for any other Django widget. For example:</source>
          <target state="translated">Атрибуты виджета можно передавать так же,как и для любого другого виджета Django.Например:</target>
        </trans-unit>
        <trans-unit id="965718ab3a2564492a95eef223ce3fe8d81449d5" translate="yes" xml:space="preserve">
          <source>You can prevent the test databases from being destroyed by using the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-keepdb&quot;&gt;&lt;code&gt;test --keepdb&lt;/code&gt;&lt;/a&gt; option. This will preserve the test database between runs. If the database does not exist, it will first be created. Any migrations will also be applied in order to keep it up to date.</source>
          <target state="translated">Вы можете предотвратить уничтожение тестовых баз данных с помощью параметра &lt;a href=&quot;../../ref/django-admin#cmdoption-test-keepdb&quot;&gt; &lt;code&gt;test --keepdb&lt;/code&gt; &lt;/a&gt; . Это сохранит тестовую базу данных между запусками. Если база данных не существует, она сначала будет создана. Любые миграции также будут применяться для того, чтобы поддерживать его в актуальном состоянии.</target>
        </trans-unit>
        <trans-unit id="3f960c83765c6fa258c621db47a733f1fe7326a6" translate="yes" xml:space="preserve">
          <source>You can provide a custom queryset with the optional &lt;code&gt;queryset&lt;/code&gt; argument. This can be used to change the default ordering of the queryset:</source>
          <target state="translated">Вы можете предоставить пользовательский набор запросов с необязательным аргументом &lt;code&gt;queryset&lt;/code&gt; . Это можно использовать для изменения порядка запросов по умолчанию:</target>
        </trans-unit>
        <trans-unit id="d403090539383aca8c29f118eb6e954db66e5cc5" translate="yes" xml:space="preserve">
          <source>You can provide an IPv6 address surrounded by brackets (e.g. &lt;code&gt;[200a::1]:8000&lt;/code&gt;). This will automatically enable IPv6 support.</source>
          <target state="translated">Вы можете указать адрес IPv6 в квадратных скобках (например, &lt;code&gt;[200a::1]:8000&lt;/code&gt; ). Это автоматически включит поддержку IPv6.</target>
        </trans-unit>
        <trans-unit id="28f785ebff11fac1bf22b546e08435462913a002" translate="yes" xml:space="preserve">
          <source>You can provide an arbitrary &lt;code&gt;filename&lt;/code&gt; parameter. It&amp;rsquo;ll be used by browsers in the &amp;ldquo;Save as&amp;hellip;&amp;rdquo; dialog.</source>
          <target state="translated">Вы можете указать произвольный параметр &lt;code&gt;filename&lt;/code&gt; . Он будет использоваться браузерами в диалоговом окне &amp;laquo;Сохранить как&amp;hellip;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9f8c5e86d2b05b60d3980730fa3cab0d534f0419" translate="yes" xml:space="preserve">
          <source>You can provide the &lt;code&gt;contents&lt;/code&gt; parameter which will replace the auto-generated label tag. An &lt;code&gt;attrs&lt;/code&gt; dictionary may contain additional attributes for the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Вы можете предоставить параметр &lt;code&gt;contents&lt;/code&gt; который заменит автоматически сгенерированный тег метки. &lt;code&gt;attrs&lt;/code&gt; словарь может содержать дополнительные атрибуты для &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; тега.</target>
        </trans-unit>
        <trans-unit id="8fd4dd6bc02fc2361f4a709f1a89880ada7b1249" translate="yes" xml:space="preserve">
          <source>You can put several Django forms inside one &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. To give each &lt;code&gt;Form&lt;/code&gt; its own namespace, use the &lt;code&gt;prefix&lt;/code&gt; keyword argument:</source>
          <target state="translated">Вы можете поместить несколько форм Django в один &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; . Чтобы дать каждой &lt;code&gt;Form&lt;/code&gt; свое собственное пространство имен, используйте аргумент &lt;code&gt;prefix&lt;/code&gt; ключевого слова:</target>
        </trans-unit>
        <trans-unit id="905c055ea0c0a8fac58caf477491c6c82816e40a" translate="yes" xml:space="preserve">
          <source>You can query the models using &lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;lookups across relationships&lt;/a&gt;:</source>
          <target state="translated">Вы можете запросить модели, используя &lt;a href=&quot;../queries#lookups-that-span-relationships&quot;&gt;поиск по взаимосвязям&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a6158165209b75aad2ecda3dd1359a11d208703c" translate="yes" xml:space="preserve">
          <source>You can query using &lt;code&gt;NOT EXISTS&lt;/code&gt; with &lt;code&gt;~Exists()&lt;/code&gt;.</source>
          <target state="translated">Вы можете сделать запрос, используя &lt;code&gt;NOT EXISTS&lt;/code&gt; с &lt;code&gt;~Exists()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b54949453b6875cdd12a7ff721e232c2d609c96c" translate="yes" xml:space="preserve">
          <source>You can read it and write to &lt;code&gt;request.session&lt;/code&gt; at any point in your view. You can edit it multiple times.</source>
          <target state="translated">Вы можете прочитать его и написать в &lt;code&gt;request.session&lt;/code&gt; в любой точке по вашему мнению. Вы можете редактировать его несколько раз.</target>
        </trans-unit>
        <trans-unit id="a4b76971af65f1c0e55092c8ed64537f556879a1" translate="yes" xml:space="preserve">
          <source>You can read more about how Django&amp;rsquo;s &lt;a href=&quot;../../topics/security#sql-injection-protection&quot;&gt;SQL injection protection&lt;/a&gt; works.</source>
          <target state="translated">Вы можете прочитать больше о том, как работает &lt;a href=&quot;../../topics/security#sql-injection-protection&quot;&gt;защита&lt;/a&gt; от SQL-инъекций Django .</target>
        </trans-unit>
        <trans-unit id="3b26134b83e870a522a8bc339238b2d4a3d69701" translate="yes" xml:space="preserve">
          <source>You can refer to any &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; relation in the list of fields passed to &lt;code&gt;select_related()&lt;/code&gt;.</source>
          <target state="translated">Вы можете ссылаться на любое отношение &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; в списке полей, переданных &lt;code&gt;select_related()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a33d9de60d4eb8f1f9de39af6345b2aec9fdf096" translate="yes" xml:space="preserve">
          <source>You can regenerate fixtures with &lt;a href=&quot;../../ref/django-admin#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; then &lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt;. Or, if they&amp;rsquo;re small enough, you can edit them to add the UTC offset that matches your &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; to each serialized datetime.</source>
          <target state="translated">Вы можете восстановить данные с помощью &lt;a href=&quot;../../ref/django-admin#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; ,&lt;/a&gt; затем &lt;a href=&quot;../../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; &lt;/a&gt; . Или, если они достаточно малы, вы можете отредактировать их, чтобы добавить смещение UTC, соответствующее вашему &lt;a href=&quot;../../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; ,&lt;/a&gt; к каждой сериализованной дате и времени.</target>
        </trans-unit>
        <trans-unit id="e2071fd90afaabab45286500be81adf02f6054ae" translate="yes" xml:space="preserve">
          <source>You can register &amp;ldquo;deployment checks&amp;rdquo; that are only relevant to a production settings file like this:</source>
          <target state="translated">Вы можете зарегистрировать &amp;laquo;проверки развертывания&amp;raquo;, которые относятся только к файлу производственных настроек, например:</target>
        </trans-unit>
        <trans-unit id="d70dadf64bde4a6bec05e260856f7199ba140d7f" translate="yes" xml:space="preserve">
          <source>You can relate another model to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; as a way of tying instances of it to particular model classes, and use these methods to get access to those model classes.</source>
          <target state="translated">Вы можете связать другую модель с &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; как способ связать ее экземпляры с конкретными классами модели и использовать эти методы для получения доступа к этим классам модели.</target>
        </trans-unit>
        <trans-unit id="036ff31d530dbdc9b869a1c7d8d0cce781e0803a" translate="yes" xml:space="preserve">
          <source>You can run as many concurrent servers as you want, as long as they&amp;rsquo;re on separate ports by executing &lt;code&gt;django-admin runserver&lt;/code&gt; more than once.</source>
          <target state="translated">Вы можете запустить столько одновременных серверов, сколько захотите, если они находятся на разных портах, выполняя &lt;code&gt;django-admin runserver&lt;/code&gt; более одного раза.</target>
        </trans-unit>
        <trans-unit id="12dab32ef6c022beed9b139b7353994de66572eb" translate="yes" xml:space="preserve">
          <source>You can run your test on &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.user&quot;&gt;&lt;code&gt;request.user&lt;/code&gt;&lt;/a&gt; in the view directly. For example, this view checks to make sure the user has an email in the desired domain and if not, redirects to the login page:</source>
          <target state="translated">Вы можете запустить свой тест на &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.user&quot;&gt; &lt;code&gt;request.user&lt;/code&gt; &lt;/a&gt; в представлении напрямую. Например, это представление проверяет, есть ли у пользователя электронная почта в желаемом домене, и если нет, перенаправляет на страницу входа:</target>
        </trans-unit>
        <trans-unit id="a39a539980e786758e98c063cad4b364be08f899" translate="yes" xml:space="preserve">
          <source>You can see the current list of database engines by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/db/backends&quot;&gt;django/db/backends&lt;/a&gt;.</source>
          <target state="translated">Вы можете увидеть текущий список баз данных, посмотрев в &lt;a href=&quot;https://github.com/django/django/blob/master/django/db/backends&quot;&gt;django / db / backends&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="309cec0ef3b9fd023f686aa4c8696480e1c8eddc" translate="yes" xml:space="preserve">
          <source>You can see the default logging configuration by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/log.py&quot;&gt;django/utils/log.py&lt;/a&gt;.</source>
          <target state="translated">Вы можете увидеть конфигурацию протоколирования по умолчанию, глядя в &lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/log.py&quot;&gt;Джанго / Utils / log.py&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87aced28eb8031ef87ae67afdabfb18afd642339" translate="yes" xml:space="preserve">
          <source>You can see the layer&amp;rsquo;s geometry type and how many features it contains:</source>
          <target state="translated">Вы можете увидеть тип геометрии слоя и сколько объектов он содержит:</target>
        </trans-unit>
        <trans-unit id="c9d02acb6089e872f7d78ab7c8a2b70cc653f87b" translate="yes" xml:space="preserve">
          <source>You can see the results of deconstruction by looking in migrations that include the field, and you can test deconstruction in unit tests by deconstructing and reconstructing the field:</source>
          <target state="translated">Вы можете увидеть результаты деконструкции,глядя в миграциях,которые включают в себя поле,и вы можете протестировать деконструкцию в модульных тестах,деконструируя и реконструируя поле:</target>
        </trans-unit>
        <trans-unit id="3cdc0fbf6631f0e54c0a04cf79589ae311bb4a50" translate="yes" xml:space="preserve">
          <source>You can select the database for a &lt;code&gt;QuerySet&lt;/code&gt; at any point in the &lt;code&gt;QuerySet&lt;/code&gt; &amp;ldquo;chain.&amp;rdquo; Call &lt;code&gt;using()&lt;/code&gt; on the &lt;code&gt;QuerySet&lt;/code&gt; to get another &lt;code&gt;QuerySet&lt;/code&gt; that uses the specified database.</source>
          <target state="translated">Вы можете выбрать базу данных для &lt;code&gt;QuerySet&lt;/code&gt; в любой точке &amp;laquo;цепочки&amp;raquo; &lt;code&gt;QuerySet&lt;/code&gt; . Вызовите &lt;code&gt;using()&lt;/code&gt; для &lt;code&gt;QuerySet&lt;/code&gt; , чтобы получить другой &lt;code&gt;QuerySet&lt;/code&gt; , который использует указанную базу данных.</target>
        </trans-unit>
        <trans-unit id="092cedc051fa6e8dcd5721a6dced9e638959ad6d" translate="yes" xml:space="preserve">
          <source>You can serialize other types by writing a custom serializer. For example, if Django didn&amp;rsquo;t serialize &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; by default, you could do this:</source>
          <target state="translated">Вы можете сериализовать другие типы, написав собственный сериализатор. Например, если Django не сериализует &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; по умолчанию, вы можете сделать это:</target>
        </trans-unit>
        <trans-unit id="3fd2259af408558ccbe6a2dee60269decfef26ee" translate="yes" xml:space="preserve">
          <source>You can set any of the parameters of &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt; to customize the handling of unauthorized users.</source>
          <target state="translated">Вы можете установить любой из параметров &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; ,&lt;/a&gt; чтобы настроить обработку неавторизованных пользователей.</target>
        </trans-unit>
        <trans-unit id="f07f689f5b53c5edccfb755d5a2d08e8904abb51" translate="yes" xml:space="preserve">
          <source>You can set any of the parameters of &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt; to customize the handling of unauthorized users:</source>
          <target state="translated">Вы можете установить любой из параметров &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; ,&lt;/a&gt; чтобы настроить обработку неавторизованных пользователей:</target>
        </trans-unit>
        <trans-unit id="95c0b6d75c49bab1e4f2a9276c13acaeed98b505" translate="yes" xml:space="preserve">
          <source>You can set this as a class attribute when declaring your form or use the &lt;code&gt;renderer&lt;/code&gt; argument to &lt;code&gt;Form.__init__()&lt;/code&gt;. For example:</source>
          <target state="translated">Вы можете установить это как атрибут класса при объявлении вашей формы или использовать аргумент &lt;code&gt;renderer&lt;/code&gt; для &lt;code&gt;Form.__init__()&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="a52fc98c7d55a8a33c57dae3137be34cfc014620" translate="yes" xml:space="preserve">
          <source>You can specify a custom default manager using &lt;a href=&quot;../../ref/models/options#django.db.models.Options.default_manager_name&quot;&gt;&lt;code&gt;Meta.default_manager_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете указать собственный менеджер по умолчанию, используя &lt;a href=&quot;../../ref/models/options#django.db.models.Options.default_manager_name&quot;&gt; &lt;code&gt;Meta.default_manager_name&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c8cddf4215c456f82bf6c72826a9411dc05acc9" translate="yes" xml:space="preserve">
          <source>You can specify a custom filename pattern match using the &lt;code&gt;-p&lt;/code&gt; (or &lt;code&gt;--pattern&lt;/code&gt;) option, if your test files are named differently from the &lt;code&gt;test*.py&lt;/code&gt; pattern:</source>
          <target state="translated">Вы можете указать произвольное соответствие шаблону имени файла, используя опцию &lt;code&gt;-p&lt;/code&gt; (или &lt;code&gt;--pattern&lt;/code&gt; ), если ваши тестовые файлы имеют имена, отличающиеся от шаблона &lt;code&gt;test*.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6c8063ce398794b8f44d5be5cf245b12ea6caa86" translate="yes" xml:space="preserve">
          <source>You can specify any other value as long as you implement a corresponding &lt;code&gt;has_&amp;lt;value&amp;gt;_permission(self, request)&lt;/code&gt; method on the &lt;code&gt;ModelAdmin&lt;/code&gt;.</source>
          <target state="translated">Вы можете указать любое другое значение, если вы реализуете соответствующий метод &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;code&gt;has_&amp;lt;value&amp;gt;_permission(self, request)&lt;/code&gt; в ModelAdmin .</target>
        </trans-unit>
        <trans-unit id="2b82ade4d1cd1cdd806b2e02c9598a91a60ba50c" translate="yes" xml:space="preserve">
          <source>You can specify more complex conditions for the retrieved object by chaining &lt;code&gt;get_or_create()&lt;/code&gt; with &lt;code&gt;filter()&lt;/code&gt; and using &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q objects&lt;/code&gt;&lt;/a&gt;. For example, to retrieve Robert or Bob Marley if either exists, and create the latter otherwise:</source>
          <target state="translated">Вы можете задать более сложные условия для извлеченного объекта, приковав &lt;code&gt;get_or_create()&lt;/code&gt; с &lt;code&gt;filter()&lt;/code&gt; и с помощью &lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q objects&lt;/code&gt; &lt;/a&gt; . Например, чтобы получить Роберта или Боба Марли, если таковой существует, и создать последний в противном случае:</target>
        </trans-unit>
        <trans-unit id="91391bf2eb7d951b7a6ee6506a2ba2d361001f7e" translate="yes" xml:space="preserve">
          <source>You can specify multiple windows in the same query which in Django ORM would be equivalent to including multiple expressions in a &lt;a href=&quot;../../topics/db/aggregation&quot;&gt;QuerySet.annotate()&lt;/a&gt; call. The ORM doesn&amp;rsquo;t make use of named windows, instead they are part of the selected columns.</source>
          <target state="translated">В одном запросе можно указать несколько окон, которые в Django ORM эквивалентны включению нескольких выражений в вызов &lt;a href=&quot;../../topics/db/aggregation&quot;&gt;QuerySet.annotate ()&lt;/a&gt; . ORM не использует именованные окна, вместо этого они являются частью выбранных столбцов.</target>
        </trans-unit>
        <trans-unit id="56d421f39dda0634f8e184beb7fb6f5d5f2ca348" translate="yes" xml:space="preserve">
          <source>You can specify one or many fields. As long as the fields appear in &lt;code&gt;list_display&lt;/code&gt;, Django doesn&amp;rsquo;t care how many (or how few) fields are linked. The only requirement is that if you want to use &lt;code&gt;list_display_links&lt;/code&gt; in this fashion, you must define &lt;code&gt;list_display&lt;/code&gt;.</source>
          <target state="translated">Вы можете указать одно или несколько полей. Пока поля отображаются в &lt;code&gt;list_display&lt;/code&gt; , Django не волнует, сколько (или сколько) полей связаны. Единственное требование заключается в том, что если вы хотите использовать &lt;code&gt;list_display_links&lt;/code&gt; таким образом, вы должны определить &lt;code&gt;list_display&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35ecf15f0771f201019bb5af3205df2f1b2d5102" translate="yes" xml:space="preserve">
          <source>You can specify particular tests to run by supplying any number of &amp;ldquo;test labels&amp;rdquo; to &lt;code&gt;./manage.py test&lt;/code&gt;. Each test label can be a full Python dotted path to a package, module, &lt;code&gt;TestCase&lt;/code&gt; subclass, or test method. For instance:</source>
          <target state="translated">Вы можете указать конкретные тесты для запуска, указав любое количество &amp;laquo;тестовых меток&amp;raquo; для &lt;code&gt;./manage.py test&lt;/code&gt; . Каждая метка теста может представлять собой полный Python пунктирный путь к пакету, модулю, подклассу &lt;code&gt;TestCase&lt;/code&gt; или методу теста. Например:</target>
        </trans-unit>
        <trans-unit id="b7b466a3fa9f0cb9cf1064b1a79c26e0119e6295" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;config&lt;/code&gt; attribute to a &lt;a href=&quot;#django.contrib.postgres.search.SearchVector&quot;&gt;&lt;code&gt;SearchVector&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.postgres.search.SearchQuery&quot;&gt;&lt;code&gt;SearchQuery&lt;/code&gt;&lt;/a&gt; to use a different search configuration. This allows using different language parsers and dictionaries as defined by the database:</source>
          <target state="translated">Вы можете указать атрибут &lt;code&gt;config&lt;/code&gt; для &lt;a href=&quot;#django.contrib.postgres.search.SearchVector&quot;&gt; &lt;code&gt;SearchVector&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.contrib.postgres.search.SearchQuery&quot;&gt; &lt;code&gt;SearchQuery&lt;/code&gt; ,&lt;/a&gt; чтобы использовать другую конфигурацию поиска. Это позволяет использовать разные языковые парсеры и словари, определенные в базе данных:</target>
        </trans-unit>
        <trans-unit id="6897d991898879286a043e5f7548985f2d21c3c8" translate="yes" xml:space="preserve">
          <source>You can speed up test execution times by &lt;a href=&quot;https://www.postgresql.org/docs/current/non-durability.html&quot;&gt;configuring PostgreSQL to be non-durable&lt;/a&gt;.</source>
          <target state="translated">Вы можете ускорить выполнение теста, &lt;a href=&quot;https://www.postgresql.org/docs/current/non-durability.html&quot;&gt;настроив PostgreSQL на недолговечный&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a05553a75f717b1588fdb95a7c94885e65761787" translate="yes" xml:space="preserve">
          <source>You can still access the unvalidated data directly from &lt;code&gt;request.POST&lt;/code&gt; at this point, but the validated data is better.</source>
          <target state="translated">На этом этапе вы все еще можете получить доступ к непроверенным данным непосредственно из &lt;code&gt;request.POST&lt;/code&gt; , но проверенные данные лучше.</target>
        </trans-unit>
        <trans-unit id="fdc9e7c72f624c15502ee7d57ee9395416ef3b35" translate="yes" xml:space="preserve">
          <source>You can subclass the management command and override &lt;code&gt;get_input_data()&lt;/code&gt; if you want to customize data input and validation. Consult the source code for details on the existing implementation and the method&amp;rsquo;s parameters. For example, it could be useful if you have a &lt;code&gt;ForeignKey&lt;/code&gt; in &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt; and want to allow creating an instance instead of entering the primary key of an existing instance.</source>
          <target state="translated">Вы можете &lt;code&gt;get_input_data()&lt;/code&gt; подкласс управляющей команды и переопределить get_input_data (), если хотите настроить ввод и проверку данных. Обратитесь к исходному коду за подробной информацией о существующей реализации и параметрах метода. Например, это может быть полезно , если у вас есть &lt;code&gt;ForeignKey&lt;/code&gt; в &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; &lt;/a&gt; и хотите , чтобы создать экземпляр вместо ввода первичного ключа существующего экземпляра.</target>
        </trans-unit>
        <trans-unit id="f907140bd8767e6daf8262b05e591364a914f18e" translate="yes" xml:space="preserve">
          <source>You can tag your tests so you can easily run a particular subset. For example, you might label fast or slow tests:</source>
          <target state="translated">Вы можете пометить свои тесты так,чтобы можно было легко запустить определенное подмножество.Например,Вы можете пометить быстрые или медленные тесты:</target>
        </trans-unit>
        <trans-unit id="812ccce0053a52db1e91a4fc74c29d2c5bf702e9" translate="yes" xml:space="preserve">
          <source>You can take this template and work from it, though we suggest looking at the built-in Django operations in &lt;code&gt;django.db.migrations.operations&lt;/code&gt; - they cover a lot of the example usage of semi-internal aspects of the migration framework like &lt;code&gt;ProjectState&lt;/code&gt; and the patterns used to get historical models, as well as &lt;code&gt;ModelState&lt;/code&gt; and the patterns used to mutate historical models in &lt;code&gt;state_forwards()&lt;/code&gt;.</source>
          <target state="translated">Вы можете воспользоваться этим шаблоном и поработать с ним, хотя мы предлагаем взглянуть на встроенные операции Django в &lt;code&gt;django.db.migrations.operations&lt;/code&gt; - они охватывают множество примеров использования полувнутренних аспектов инфраструктуры миграции, таких как &lt;code&gt;ProjectState&lt;/code&gt; и шаблоны, используемые для получения исторических моделей, а также &lt;code&gt;ModelState&lt;/code&gt; и шаблоны, используемые для изменения исторических моделей в &lt;code&gt;state_forwards()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de3756aa96fb6cbd680a56380165e102fecb105" translate="yes" xml:space="preserve">
          <source>You can tell Django to stop reporting particular 404s by tweaking the &lt;a href=&quot;../ref/settings#std:setting-IGNORABLE_404_URLS&quot;&gt;&lt;code&gt;IGNORABLE_404_URLS&lt;/code&gt;&lt;/a&gt; setting. It should be a list of compiled regular expression objects. For example:</source>
          <target state="translated">Вы можете указать Django прекратить сообщать о конкретных 404-х, &lt;a href=&quot;../ref/settings#std:setting-IGNORABLE_404_URLS&quot;&gt; &lt;code&gt;IGNORABLE_404_URLS&lt;/code&gt; &lt;/a&gt; параметр IGNORABLE_404_URLS . Это должен быть список скомпилированных объектов регулярных выражений. Например:</target>
        </trans-unit>
        <trans-unit id="0e3e303be9a4cd40124164cb34233e70806b99f3" translate="yes" xml:space="preserve">
          <source>You can tell if a query is ordered or not by checking the &lt;a href=&quot;#django.db.models.query.QuerySet.ordered&quot;&gt;&lt;code&gt;QuerySet.ordered&lt;/code&gt;&lt;/a&gt; attribute, which will be &lt;code&gt;True&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; has been ordered in any way.</source>
          <target state="translated">Вы можете определить, был ли запрос упорядочен или нет, проверив атрибут &lt;a href=&quot;#django.db.models.query.QuerySet.ordered&quot;&gt; &lt;code&gt;QuerySet.ordered&lt;/code&gt; &lt;/a&gt; , который будет иметь значение &lt;code&gt;True&lt;/code&gt; , если &lt;code&gt;QuerySet&lt;/code&gt; был упорядочен каким-либо образом.</target>
        </trans-unit>
        <trans-unit id="888768c5fd9cb9c3e096081e8cea51831286a338" translate="yes" xml:space="preserve">
          <source>You can tell them apart with &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt;, like so:</source>
          <target state="translated">Вы можете отличить их с помощью &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt; &lt;code&gt;is_authenticated&lt;/code&gt; &lt;/a&gt; , вот так:</target>
        </trans-unit>
        <trans-unit id="8c0835e3b02322a1decf64d4c2a47ca8f1477794" translate="yes" xml:space="preserve">
          <source>You can then access the information:</source>
          <target state="translated">Тогда вы можете получить доступ к информации:</target>
        </trans-unit>
        <trans-unit id="af8c07adb559066031e8cd600dff22f9b1dd1da2" translate="yes" xml:space="preserve">
          <source>You can then pass &lt;code&gt;cls=LazyEncoder&lt;/code&gt; to the &lt;code&gt;serializers.serialize()&lt;/code&gt; function:</source>
          <target state="translated">Затем вы можете передать &lt;code&gt;cls=LazyEncoder&lt;/code&gt; в функцию &lt;code&gt;serializers.serialize()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b81dc7998c894011f7c7a1d8246cd1c2f73155d4" translate="yes" xml:space="preserve">
          <source>You can then use this function to provide early detection of an unchanged page for your front page view:</source>
          <target state="translated">Затем вы можете использовать эту функцию,чтобы обеспечить раннее обнаружение неизмененной страницы для просмотра титульного листа:</target>
        </trans-unit>
        <trans-unit id="4fd6a1b4bcfb6335cfd76b7bb123defb85d6dffd" translate="yes" xml:space="preserve">
          <source>You can think of it like an onion: each middleware class is a &amp;ldquo;layer&amp;rdquo; that wraps the view, which is in the core of the onion. If the request passes through all the layers of the onion (each one calls &lt;code&gt;get_response&lt;/code&gt; to pass the request in to the next layer), all the way to the view at the core, the response will then pass through every layer (in reverse order) on the way back out.</source>
          <target state="translated">Вы можете думать об этом как о луке: каждый класс промежуточного программного обеспечения - это &amp;laquo;слой&amp;raquo;, который оборачивает представление, которое находится в ядре лука. Если запрос проходит через все слои лука (каждый вызывает &lt;code&gt;get_response&lt;/code&gt; для передачи запроса на следующий уровень), вплоть до представления в ядре, ответ будет проходить через каждый уровень (в обратном порядке) на обратном пути.</target>
        </trans-unit>
        <trans-unit id="9a835bd2da4e964a5f26fbbb0fd80ad01e4401a2" translate="yes" xml:space="preserve">
          <source>You can think of this as meaning &amp;ldquo;this filter is safe &amp;ndash; it doesn&amp;rsquo;t introduce any possibility of unsafe HTML.&amp;rdquo;</source>
          <target state="translated">Вы можете думать об этом как о значении &amp;laquo;этот фильтр безопасен - он не представляет никакой возможности небезопасного HTML&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6a161eae2808c94876b23f5f330fd094ee057243" translate="yes" xml:space="preserve">
          <source>You can totally disable Django&amp;rsquo;s transaction management for a given database by setting &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-AUTOCOMMIT&quot;&gt;&lt;code&gt;AUTOCOMMIT&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; in its configuration. If you do this, Django won&amp;rsquo;t enable autocommit, and won&amp;rsquo;t perform any commits. You&amp;rsquo;ll get the regular behavior of the underlying database library.</source>
          <target state="translated">Вы можете полностью отключить управление транзакциями Django для данной базы данных, установив для &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-AUTOCOMMIT&quot;&gt; &lt;code&gt;AUTOCOMMIT&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;False&lt;/code&gt; в своей конфигурации. Если вы сделаете это, Django не включит автокоммит и не выполнит никаких коммитов. Вы получите обычное поведение базовой библиотеки базы данных.</target>
        </trans-unit>
        <trans-unit id="eb6ebdab16edb84c1f844a6200be6f0fedbae645" translate="yes" xml:space="preserve">
          <source>You can translate string literals passed as arguments to tags and filters by using the familiar &lt;code&gt;_()&lt;/code&gt; syntax:</source>
          <target state="translated">Вы можете переводить строковые литералы, передаваемые в качестве аргументов, в теги и фильтры, используя знакомый синтаксис &lt;code&gt;_()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73410d6b42081a908a47095816e006320cfb1c77" translate="yes" xml:space="preserve">
          <source>You can update multiple fields &amp;mdash; there&amp;rsquo;s no limit on how many. For example, here we update the &lt;code&gt;comments_on&lt;/code&gt; and &lt;code&gt;headline&lt;/code&gt; fields:</source>
          <target state="translated">Вы можете обновить несколько полей - нет ограничений на их количество. Например, здесь мы обновляем поля &lt;code&gt;comments_on&lt;/code&gt; и &lt;code&gt;headline&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4403ba726940360705c2efa515fc3e84bbf483d5" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#django.template.loader.select_template&quot;&gt;&lt;code&gt;select_template()&lt;/code&gt;&lt;/a&gt; for flexible template loading. For example, if you&amp;rsquo;ve written a news story and want some stories to have custom templates, use something like &lt;code&gt;select_template(['story_%s_detail.html' % story.id,
'story_detail.html'])&lt;/code&gt;. That&amp;rsquo;ll allow you to use a custom template for an individual story, with a fallback template for stories that don&amp;rsquo;t have custom templates.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#django.template.loader.select_template&quot;&gt; &lt;code&gt;select_template()&lt;/code&gt; &lt;/a&gt; для гибкой загрузки шаблона. Например, если вы написали новость и хотите, чтобы у некоторых историй были собственные шаблоны, используйте что-то вроде &lt;code&gt;select_template(['story_%s_detail.html' % story.id, 'story_detail.html'])&lt;/code&gt; . Это позволит вам использовать пользовательский шаблон для отдельной истории с резервным шаблоном для историй, которые не имеют пользовательских шаблонов.</target>
        </trans-unit>
        <trans-unit id="f08498ffef56a3800e3cdec0ae335ebb912a8f60" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#topics-db-transactions-savepoints&quot;&gt;savepoints&lt;/a&gt; to control the extent of a rollback. Before performing a database operation that could fail, you can set or update the savepoint; that way, if the operation fails, you can roll back the single offending operation, rather than the entire transaction. For example:</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#topics-db-transactions-savepoints&quot;&gt;точки сохранения,&lt;/a&gt; чтобы контролировать степень отката. Перед выполнением операции с базой данных, которая может дать сбой, вы можете установить или обновить точку сохранения; таким образом, если операция завершится неудачно, вы можете откатить одну операцию, которая нарушает работу, а не всю транзакцию. Например:</target>
        </trans-unit>
        <trans-unit id="47d6d982e39d3d8fb4f1fffbfa17a318f4d336af" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersModelBackend&quot;&gt;&lt;code&gt;AllowAllUsersModelBackend&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend&quot;&gt;&lt;code&gt;AllowAllUsersRemoteUserBackend&lt;/code&gt;&lt;/a&gt; if you want to allow inactive users to authenticate.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersModelBackend&quot;&gt; &lt;code&gt;AllowAllUsersModelBackend&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend&quot;&gt; &lt;code&gt;AllowAllUsersRemoteUserBackend&lt;/code&gt; ,&lt;/a&gt; если вы хотите, чтобы неактивные пользователи проходили аутентификацию.</target>
        </trans-unit>
        <trans-unit id="b54d6695350a984925ddbd1de8aa40aea02c1d13" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt;&lt;code&gt;is_aware()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt;&lt;code&gt;is_naive()&lt;/code&gt;&lt;/a&gt; to determine whether datetimes are aware or naive.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt; &lt;code&gt;is_aware()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt; &lt;code&gt;is_naive()&lt;/code&gt; &lt;/a&gt; чтобы определить, являются ли datetime осведомленными или наивными.</target>
        </trans-unit>
        <trans-unit id="0c9affcab154d4ecc3ac443415274affb762e500" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;get_or_create()&lt;/code&gt; through &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; attributes and reverse relations. In that case you will restrict the queries inside the context of that relation. That could lead you to some integrity problems if you don&amp;rsquo;t use it consistently.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;get_or_create()&lt;/code&gt; через атрибуты &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; и обратные отношения. В этом случае вы будете ограничивать запросы в контексте этого отношения. Это может привести к некоторым проблемам с целостностью, если вы не используете его постоянно.</target>
        </trans-unit>
        <trans-unit id="b7fbbeded9db897d702094f94467d43da5fa6fde" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;get_or_create()&lt;/code&gt; through Book&amp;rsquo;s chapters field, but it only fetches inside the context of that book:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;get_or_create()&lt;/code&gt; через поле глав книги, но оно извлекается только в контексте этой книги:</target>
        </trans-unit>
        <trans-unit id="2bfa54faf2f4bce3b2e113765acb2507fc87e7c6" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;range&lt;/code&gt; anywhere you can use &lt;code&gt;BETWEEN&lt;/code&gt; in SQL &amp;mdash; for dates, numbers and even characters.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;range&lt;/code&gt; везде, где можете использовать &lt;code&gt;BETWEEN&lt;/code&gt; в SQL - для дат, чисел и даже символов.</target>
        </trans-unit>
        <trans-unit id="46e6f2287019cd1ebb69a5deba8817a6840aa214" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;register.filter()&lt;/code&gt; as a decorator instead:</source>
          <target state="translated">Вместо этого вы можете использовать &lt;code&gt;register.filter()&lt;/code&gt; в качестве декоратора:</target>
        </trans-unit>
        <trans-unit id="ec31e72a07e2e771a0fcf5d32bbdce14b2044f81" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;select_related()&lt;/code&gt; with any queryset of objects:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;select_related()&lt;/code&gt; с любым набором запросов объектов:</target>
        </trans-unit>
        <trans-unit id="8309b5dc9f338fe8fecdc812735f2c678e848f76" translate="yes" xml:space="preserve">
          <source>You can use a cache backend that doesn&amp;rsquo;t ship with Django by setting &lt;a href=&quot;#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to a fully-qualified path of a cache backend class (i.e. &lt;code&gt;mypackage.backends.whatever.WhateverCache&lt;/code&gt;).</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#std:setting-CACHES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt; кеша, которая не поставляется с Django, установив для BACKEND полный путь к классу серверной части кэша (т.е. &lt;code&gt;mypackage.backends.whatever.WhateverCache&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d9363603813a47ce689f417bbae24e5402db294f" translate="yes" xml:space="preserve">
          <source>You can use a custom &lt;code&gt;Manager&lt;/code&gt; in a particular model by extending the base &lt;code&gt;Manager&lt;/code&gt; class and instantiating your custom &lt;code&gt;Manager&lt;/code&gt; in your model.</source>
          <target state="translated">Вы можете использовать собственный &lt;code&gt;Manager&lt;/code&gt; в конкретной модели, расширив базовый класс &lt;code&gt;Manager&lt;/code&gt; и создав экземпляр своего собственного &lt;code&gt;Manager&lt;/code&gt; в своей модели.</target>
        </trans-unit>
        <trans-unit id="f1874bd4b0498de0ed45fe4c1de53bb5df5495d1" translate="yes" xml:space="preserve">
          <source>You can use a dash as the fixture name to load input from &lt;code&gt;sys.stdin&lt;/code&gt;. For example:</source>
          <target state="translated">Вы можете использовать тире в качестве имени прибора для загрузки ввода из &lt;code&gt;sys.stdin&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="8d66330598459b81e8cc893c5068340b91787a38" translate="yes" xml:space="preserve">
          <source>You can use a data migration to move data from one third-party application to another.</source>
          <target state="translated">Можно использовать миграцию данных для перемещения данных из одного приложения стороннего производителя в другое.</target>
        </trans-unit>
        <trans-unit id="dd10d3b7cb53ccb059f512ef65b6c3bf3e810f0c" translate="yes" xml:space="preserve">
          <source>You can use a database backend that doesn&amp;rsquo;t ship with Django by setting &lt;code&gt;ENGINE&lt;/code&gt; to a fully-qualified path (i.e. &lt;code&gt;mypackage.backends.whatever&lt;/code&gt;).</source>
          <target state="translated">Вы можете использовать серверную часть базы данных, которая не поставляется вместе с Django, &lt;code&gt;mypackage.backends.whatever&lt;/code&gt; &lt;code&gt;ENGINE&lt;/code&gt; полный путь (т.е. mypackage.backends.whothing ).</target>
        </trans-unit>
        <trans-unit id="92f7a4fec207fc65777e5b8f2da8d3495ae65736" translate="yes" xml:space="preserve">
          <source>You can use a template backend that doesn&amp;rsquo;t ship with Django by setting &lt;code&gt;BACKEND&lt;/code&gt; to a fully-qualified path (i.e. &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt;).</source>
          <target state="translated">Вы можете использовать шаблонный бэкэнд, который не поставляется вместе с Django, установив для &lt;code&gt;BACKEND&lt;/code&gt; полный путь (например, &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="92cba064a30e47fb09c650e1f175f126be54f156" translate="yes" xml:space="preserve">
          <source>You can use an optional first positional argument to a &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; to designate a human-readable name. That&amp;rsquo;s used in a couple of introspective parts of Django, and it doubles as documentation. If this field isn&amp;rsquo;t provided, Django will use the machine-readable name. In this example, we&amp;rsquo;ve only defined a human-readable name for &lt;code&gt;Question.pub_date&lt;/code&gt;. For all other fields in this model, the field&amp;rsquo;s machine-readable name will suffice as its human-readable name.</source>
          <target state="translated">Вы можете использовать необязательный первый позиционный аргумент для &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; чтобы назначить удобочитаемое имя. Это используется в паре интроспективных частей Django, и это удваивается как документация. Если это поле не указано, Django будет использовать машиночитаемое имя. В этом примере мы определили только удобочитаемое имя для &lt;code&gt;Question.pub_date&lt;/code&gt; . Для всех других полей в этой модели, машиночитаемое имя поля будет достаточно в качестве его удобочитаемого имени.</target>
        </trans-unit>
        <trans-unit id="16498e9acb4d62e77f98c34f264514c3d9399778" translate="yes" xml:space="preserve">
          <source>You can use any number of values in a &lt;code&gt;cycle&lt;/code&gt; tag, separated by spaces. Values enclosed in single quotes (&lt;code&gt;'&lt;/code&gt;) or double quotes (&lt;code&gt;&quot;&lt;/code&gt;) are treated as string literals, while values without quotes are treated as template variables.</source>
          <target state="translated">Вы можете использовать любое количество значений в теге &lt;code&gt;cycle&lt;/code&gt; , разделенных пробелами. Значения, заключенные в одинарные кавычки ( &lt;code&gt;'&lt;/code&gt; ) или двойные кавычки ( &lt;code&gt;&quot;&lt;/code&gt; ), обрабатываются как строковые литералы, а значения без кавычек - как переменные шаблона.</target>
        </trans-unit>
        <trans-unit id="7a510751e8de252935f1e10125bdb70fb8b2bc4d" translate="yes" xml:space="preserve">
          <source>You can use any query expression with &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, just like with &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; - again, see &lt;a href=&quot;#field-lookups&quot;&gt;Field lookups&lt;/a&gt; below.</source>
          <target state="translated">Вы можете использовать любое выражение запроса с &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; , точно так же как с &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; - опять же, смотрите &lt;a href=&quot;#field-lookups&quot;&gt;поиск полей&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="dc093be4c02d7dab18dd23a966a46095f254728c" translate="yes" xml:space="preserve">
          <source>You can use as many levels of inheritance as needed. One common way of using inheritance is the following three-level approach:</source>
          <target state="translated">Вы можете использовать столько уровней наследования,сколько необходимо.Одним из распространенных способов использования наследования является следующий трехуровневый подход:</target>
        </trans-unit>
        <trans-unit id="65ead1eb400f55082b5200b9418a0461a320acd1" translate="yes" xml:space="preserve">
          <source>You can use built-in and &lt;a href=&quot;../../howto/custom-lookups&quot;&gt;custom lookups&lt;/a&gt; in ordering. For example:</source>
          <target state="translated">Вы можете использовать встроенный и &lt;a href=&quot;../../howto/custom-lookups&quot;&gt;пользовательский поиск&lt;/a&gt; при заказе. Например:</target>
        </trans-unit>
        <trans-unit id="2c747bc94aa66ef2b8020c71d5ea1f11d1d42c7c" translate="yes" xml:space="preserve">
          <source>You can use multiple expressions inside a single &lt;code&gt;blocktrans&lt;/code&gt; tag:</source>
          <target state="translated">Вы можете использовать несколько выражений внутри одного тега &lt;code&gt;blocktrans&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="426890af953c8a409be95fb629f99d9331b23fb3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#django.db.models.Prefetch&quot;&gt;&lt;code&gt;Prefetch&lt;/code&gt;&lt;/a&gt; object to further control the prefetch operation.</source>
          <target state="translated">Вы можете использовать объект &lt;a href=&quot;#django.db.models.Prefetch&quot;&gt; &lt;code&gt;Prefetch&lt;/code&gt; &lt;/a&gt; для дальнейшего управления операцией предварительной выборки.</target>
        </trans-unit>
        <trans-unit id="2f28e11974e8d8a1c96ddaa4a7ec75ebbc4037d8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#django.shortcuts.redirect&quot;&gt;&lt;code&gt;redirect()&lt;/code&gt;&lt;/a&gt; function in a number of ways.</source>
          <target state="translated">Вы можете использовать функцию &lt;a href=&quot;#django.shortcuts.redirect&quot;&gt; &lt;code&gt;redirect()&lt;/code&gt; &lt;/a&gt; несколькими способами.</target>
        </trans-unit>
        <trans-unit id="6e2b78a4b391e2973b737fd00b1e1115c2a5f6c2" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#std:templatetag-resetcycle&quot;&gt;&lt;code&gt;resetcycle&lt;/code&gt;&lt;/a&gt; tag to make a &lt;code&gt;{% cycle %}&lt;/code&gt; tag restart from its first value when it&amp;rsquo;s next encountered.</source>
          <target state="translated">Вы можете использовать тег &lt;a href=&quot;#std:templatetag-resetcycle&quot;&gt; &lt;code&gt;resetcycle&lt;/code&gt; &lt;/a&gt; для повторного запуска тега &lt;code&gt;{% cycle %}&lt;/code&gt; с его первого значения при следующем обнаружении.</target>
        </trans-unit>
        <trans-unit id="1d0449373cf27dd818622e912858de34ba12fbf6" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_INDEX_TABLESPACE&quot;&gt;&lt;code&gt;DEFAULT_INDEX_TABLESPACE&lt;/code&gt;&lt;/a&gt; setting to specify a default value for &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать параметр &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_INDEX_TABLESPACE&quot;&gt; &lt;code&gt;DEFAULT_INDEX_TABLESPACE&lt;/code&gt; ,&lt;/a&gt; чтобы указать значение по умолчанию для &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08c89f5efb2d40fcad2a988500e78309972fc0d4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_TABLESPACE&quot;&gt;&lt;code&gt;DEFAULT_TABLESPACE&lt;/code&gt;&lt;/a&gt; setting to specify a default value for &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt;. This is useful for setting a tablespace for the built-in Django apps and other applications whose code you cannot control.</source>
          <target state="translated">Вы можете использовать параметр &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_TABLESPACE&quot;&gt; &lt;code&gt;DEFAULT_TABLESPACE&lt;/code&gt; ,&lt;/a&gt; чтобы указать значение по умолчанию для &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt; . Это полезно для установки табличного пространства для встроенных приложений Django и других приложений, кодом которых вы не можете управлять.</target>
        </trans-unit>
        <trans-unit id="72d328e099ddb36a6f5dc24d94c7cab7c045829f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;settings#std:setting-TEST_TEMPLATE&quot;&gt;&lt;code&gt;TEST['TEMPLATE']&lt;/code&gt;&lt;/a&gt; setting to specify a &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createdatabase.html&quot;&gt;template&lt;/a&gt; (e.g. &lt;code&gt;'template0'&lt;/code&gt;) from which to create a test database.</source>
          <target state="translated">Вы можете использовать настройку &lt;a href=&quot;settings#std:setting-TEST_TEMPLATE&quot;&gt; &lt;code&gt;TEST['TEMPLATE']&lt;/code&gt; &lt;/a&gt; чтобы указать &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createdatabase.html&quot;&gt;шаблон&lt;/a&gt; (например, &lt;code&gt;'template0'&lt;/code&gt; ), из которого нужно создать тестовую базу данных.</target>
        </trans-unit>
        <trans-unit id="95899140984bdaa5cae252354b88cc43e2e92f91" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;bulk=False&lt;/code&gt; argument to instead have the related manager perform the update by calling &lt;code&gt;e.save()&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать аргумент &lt;code&gt;bulk=False&lt;/code&gt; , чтобы вместо этого соответствующий менеджер выполнил обновление, вызвав &lt;code&gt;e.save()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="209e9c0d4a7c935b74e9fb9acec70104eb829bf8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;{% regroup %}&lt;/code&gt; tag to group the list of cities by country. The following snippet of template code would accomplish this:</source>
          <target state="translated">Вы можете использовать тег &lt;code&gt;{% regroup %}&lt;/code&gt; чтобы сгруппировать список городов по странам. Следующий фрагмент кода шаблона сделает это:</target>
        </trans-unit>
        <trans-unit id="f1b572a2a9ea7d5dd723326b29e0f83956f9f8cf" translate="yes" xml:space="preserve">
          <source>You can use the sites framework in your Django views to do particular things based on the site in which the view is being called. For example:</source>
          <target state="translated">Вы можете использовать фреймворк сайтов в ваших представлениях на Django,чтобы делать определенные вещи,основанные на сайте,в котором это представление называется.Например:</target>
        </trans-unit>
        <trans-unit id="251336f55968d8e025e0e36ec03bddb07ba457d7" translate="yes" xml:space="preserve">
          <source>You can use the syntax &lt;code&gt;{% firstof var1 var2 var3 as value %}&lt;/code&gt; to store the output inside a variable.</source>
          <target state="translated">Вы можете использовать синтаксис &lt;code&gt;{% firstof var1 var2 var3 as value %}&lt;/code&gt; чтобы сохранить выходные данные внутри переменной.</target>
        </trans-unit>
        <trans-unit id="9d325ffc1ec9a701c69a81ed10a8a4b4f68813eb" translate="yes" xml:space="preserve">
          <source>You can use this as a context manager in the same way as &lt;a href=&quot;#django.test.SimpleTestCase.assertTemplateUsed&quot;&gt;&lt;code&gt;assertTemplateUsed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать это как менеджер контекста так же, как &lt;a href=&quot;#django.test.SimpleTestCase.assertTemplateUsed&quot;&gt; &lt;code&gt;assertTemplateUsed()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca321ccfc124d908ed220e9eda36cad1dd4391b" translate="yes" xml:space="preserve">
          <source>You can use this as a context manager, like this:</source>
          <target state="translated">Вы можете использовать это в качестве контекстного менеджера,вот так:</target>
        </trans-unit>
        <trans-unit id="c267c6ba35e69caf89748cf4ad7e49b13d1da483" translate="yes" xml:space="preserve">
          <source>You can use this option in your local development environment, but since your local development settings module may not have many of your production settings, you will probably want to point the &lt;code&gt;check&lt;/code&gt; command at a different settings module, either by setting the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable, or by passing the &lt;code&gt;--settings&lt;/code&gt; option:</source>
          <target state="translated">Вы можете использовать эту опцию в своей локальной среде разработки, но, поскольку в вашем локальном модуле параметров разработки может не быть многих ваших производственных параметров, вы, вероятно, захотите указать команду &lt;code&gt;check&lt;/code&gt; в другом модуле настроек, либо установив переменную среды &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; , или передав опцию &lt;code&gt;--settings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ce2b3d34ed02acb1079c75e9f163e6de461c128b" translate="yes" xml:space="preserve">
          <source>You can use variables, too. For example, if you have two template variables, &lt;code&gt;rowvalue1&lt;/code&gt; and &lt;code&gt;rowvalue2&lt;/code&gt;, you can alternate between their values like this:</source>
          <target state="translated">Вы также можете использовать переменные. Например, если у вас есть две переменные шаблона, &lt;code&gt;rowvalue1&lt;/code&gt; и &lt;code&gt;rowvalue2&lt;/code&gt; , вы можете чередовать их значения следующим образом:</target>
        </trans-unit>
        <trans-unit id="02fdc517f3e5877e6f4c38ffa3c5d60dfb73b921" translate="yes" xml:space="preserve">
          <source>You can verify that Python is installed by typing &lt;code&gt;python&lt;/code&gt; from your shell; you should see something like:</source>
          <target state="translated">Вы можете проверить, установлен ли Python, набрав &lt;code&gt;python&lt;/code&gt; из вашей оболочки; вы должны увидеть что-то вроде:</target>
        </trans-unit>
        <trans-unit id="0e501e227fbc3a22ca04992047d93d3c82059d52" translate="yes" xml:space="preserve">
          <source>You can write code to perform validation for particular form fields (based on their name) or for the form as a whole (considering combinations of various fields). More information about this is in &lt;a href=&quot;validation&quot;&gt;Form and field validation&lt;/a&gt;.</source>
          <target state="translated">Вы можете написать код для проверки правильности для определенных полей формы (на основе их имени) или для формы в целом (с учетом комбинаций различных полей). Больше информации об этом в &lt;a href=&quot;validation&quot;&gt;форме и поле проверки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e47c817004954dc2f2abe011ef241182d9bad2" translate="yes" xml:space="preserve">
          <source>You can write custom handlers that customize how Django handles files. You could, for example, use custom handlers to enforce user-level quotas, compress data on the fly, render progress bars, and even send data to another storage location directly without storing it locally. See &lt;a href=&quot;../../ref/files/uploads#custom-upload-handlers&quot;&gt;Writing custom upload handlers&lt;/a&gt; for details on how you can customize or completely replace upload behavior.</source>
          <target state="translated">Вы можете написать собственные обработчики, которые настраивают, как Django обрабатывает файлы. Вы можете, например, использовать пользовательские обработчики для обеспечения квот на уровне пользователя, сжимать данные на лету, отображать индикаторы выполнения и даже отправлять данные в другое хранилище напрямую, не сохраняя их локально. См. &lt;a href=&quot;../../ref/files/uploads#custom-upload-handlers&quot;&gt;Написание пользовательских обработчиков загрузки&lt;/a&gt; для получения подробной информации о том, как вы можете настроить или полностью заменить поведение загрузки.</target>
        </trans-unit>
        <trans-unit id="6f37750faa7077c3292896a56ed8763d5e4e92aa" translate="yes" xml:space="preserve">
          <source>You can write your own query expression classes that use, and can integrate with, other query expressions. Let&amp;rsquo;s step through an example by writing an implementation of the &lt;code&gt;COALESCE&lt;/code&gt; SQL function, without using the built-in &lt;a href=&quot;#func-expressions&quot;&gt;Func() expressions&lt;/a&gt;.</source>
          <target state="translated">Вы можете написать свои собственные классы выражений запросов, которые используют и могут интегрироваться с другими выражениями запросов. Давайте рассмотрим пример, написав реализацию функции SQL &lt;code&gt;COALESCE&lt;/code&gt; , без использования встроенных &lt;a href=&quot;#func-expressions&quot;&gt;выражений Func ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a964ba2ad729c6a51ecce903c432ce1f04d0782" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t associate it with a &lt;code&gt;Publication&lt;/code&gt; until it&amp;rsquo;s been saved:</source>
          <target state="translated">Вы не можете связать его с &lt;code&gt;Publication&lt;/code&gt; пока он не будет сохранен:</target>
        </trans-unit>
        <trans-unit id="e8cd32dd116d4cd6d590d9d6b528ea0872397650" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t change the base class of a custom field because Django won&amp;rsquo;t detect the change and make a migration for it. For example, if you start with:</source>
          <target state="translated">Вы не можете изменить базовый класс настраиваемого поля, потому что Django не обнаружит это изменение и не выполнит его миграцию. Например, если вы начинаете с:</target>
        </trans-unit>
        <trans-unit id="261d136004c4760d61ed98f67aabd718fcfe476a" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t modify the number of positional arguments in an already migrated custom field without raising a &lt;code&gt;TypeError&lt;/code&gt;. The old migration will call the modified &lt;code&gt;__init__&lt;/code&gt; method with the old signature. So if you need a new argument, please create a keyword argument and add something like &lt;code&gt;assert 'argument_name' in kwargs&lt;/code&gt; in the constructor.</source>
          <target state="translated">Вы не можете изменить количество позиционных аргументов в уже перенесенном настраиваемом поле, не вызывая &lt;code&gt;TypeError&lt;/code&gt; . Старая миграция вызовет модифицированный метод &lt;code&gt;__init__&lt;/code&gt; со старой подписью. Поэтому, если вам нужен новый аргумент, создайте аргумент с ключевым словом и добавьте что-то вроде &lt;code&gt;assert 'argument_name' in kwargs&lt;/code&gt; в конструкторе.</target>
        </trans-unit>
        <trans-unit id="2f49fa07049c2554197c14f0ca88f806095de6f5" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t raise validation errors in &lt;code&gt;Model.clean()&lt;/code&gt; for fields that don&amp;rsquo;t appear in a model form (a form may limit its fields using &lt;code&gt;Meta.fields&lt;/code&gt; or &lt;code&gt;Meta.exclude&lt;/code&gt;). Doing so will raise a &lt;code&gt;ValueError&lt;/code&gt; because the validation error won&amp;rsquo;t be able to be associated with the excluded field.</source>
          <target state="translated">Вы не можете вызывать ошибки проверки в &lt;code&gt;Model.clean()&lt;/code&gt; для полей, которые не отображаются в форме модели (форма может ограничивать свои поля, используя &lt;code&gt;Meta.fields&lt;/code&gt; или &lt;code&gt;Meta.exclude&lt;/code&gt; ). Это вызовет &lt;code&gt;ValueError&lt;/code&gt; , потому что ошибка проверки не сможет быть связана с исключенным полем.</target>
        </trans-unit>
        <trans-unit id="f5409fd32a7a1f3c8cd7346620244124cab24880" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t share pickles between versions</source>
          <target state="translated">Вы не можете делить соленья между версиями</target>
        </trans-unit>
        <trans-unit id="51f44ae00b668fc97d295787bb60e31fd6f56dad" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use &lt;code&gt;select_for_update()&lt;/code&gt; on nullable relations:</source>
          <target state="translated">Вы не можете использовать &lt;code&gt;select_for_update()&lt;/code&gt; для обнуляемых отношений:</target>
        </trans-unit>
        <trans-unit id="54e00fe4e1e12c069a095ed7a158bac5fb7768a9" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use this decorator if you have to reference your model admin class in its &lt;code&gt;__init__()&lt;/code&gt; method, e.g. &lt;code&gt;super(PersonAdmin, self).__init__(*args, **kwargs)&lt;/code&gt;. You can use &lt;code&gt;super().__init__(*args, **kwargs)&lt;/code&gt;.</source>
          <target state="translated">Вы не можете использовать этот декоратор, если вам нужно сослаться на класс администратора вашей модели в его &lt;code&gt;__init__()&lt;/code&gt; , например, &lt;code&gt;super(PersonAdmin, self).__init__(*args, **kwargs)&lt;/code&gt; . Вы можете использовать &lt;code&gt;super().__init__(*args, **kwargs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f085bc2eb94c1604d080dae51c94a463c39b3239" translate="yes" xml:space="preserve">
          <source>You cannot access its content, except by iterating the response object itself. This should only occur when the response is returned to the client.</source>
          <target state="translated">Вы не можете получить доступ к его содержимому,кроме как путем итерации самого объекта ответа.Это должно происходить только тогда,когда ответ возвращается клиенту.</target>
        </trans-unit>
        <trans-unit id="3c8498e8f25a7f447e9929038228e4d96f246de6" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;update()&lt;/code&gt; on a &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; that has had a slice taken or can otherwise no longer be filtered.</source>
          <target state="translated">Вы не можете вызывать &lt;code&gt;update()&lt;/code&gt; для &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; , для которого был взят фрагмент, или в противном случае он больше не может быть отфильтрован.</target>
        </trans-unit>
        <trans-unit id="78bb94d409df824482a53bc7e81de3dfe9a3423f" translate="yes" xml:space="preserve">
          <source>You cannot change the AUTH_USER_MODEL setting during the lifetime of a project (i.e. once you have made and migrated models that depend on it) without serious effort. It is intended to be set at the project start, and the model it refers to must be available in the first migration of the app that it lives in. See &lt;a href=&quot;../topics/auth/customizing#auth-custom-user&quot;&gt;Substituting a custom User model&lt;/a&gt; for more details.</source>
          <target state="translated">Вы не можете изменить настройку AUTH_USER_MODEL в течение жизненного цикла проекта (т.е. после того, как вы создали и перенесли модели, которые зависят от него) без серьезных усилий. Он предназначен для установки в начале проекта, и модель, к которой он относится, должна быть доступна при первой миграции приложения, в котором оно живет. Дополнительные сведения см. В разделе &lt;a href=&quot;../topics/auth/customizing#auth-custom-user&quot;&gt;Замена пользовательской модели пользователя&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cba994d43826bcdb6ed9c4bfdd6f3950a34ee012" translate="yes" xml:space="preserve">
          <source>You cannot update the model&amp;rsquo;s primary key.</source>
          <target state="translated">Вы не можете обновить первичный ключ модели.</target>
        </trans-unit>
        <trans-unit id="8217a785da4a9dc66aee01efce1e6ce9c03b6982" translate="yes" xml:space="preserve">
          <source>You cannot use the file-like object &lt;code&gt;tell()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt; methods. Doing so will raise an exception.</source>
          <target state="translated">Вы не можете использовать подобный объекту метод &lt;code&gt;tell()&lt;/code&gt; или &lt;code&gt;write()&lt;/code&gt; . Это вызовет исключение.</target>
        </trans-unit>
        <trans-unit id="f45e6848161d20051f9a51c412b1ea42edae72e0" translate="yes" xml:space="preserve">
          <source>You compile template code into a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы компилируете код шаблона в &lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8728c7f0793ed0fa9268f8764d9434855704f172" translate="yes" xml:space="preserve">
          <source>You configure an &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы настраиваете &lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f470cc7bd442decd6abeaa6592829738482a1229" translate="yes" xml:space="preserve">
          <source>You configure the cached template loader with a list of other loaders that it should wrap. The wrapped loaders are used to locate unknown templates when they&amp;rsquo;re first encountered. The cached loader then stores the compiled &lt;code&gt;Template&lt;/code&gt; in memory. The cached &lt;code&gt;Template&lt;/code&gt; instance is returned for subsequent requests to load the same template.</source>
          <target state="translated">Вы настраиваете загрузчик кэшированных шаблонов со списком других загрузчиков, которые он должен обернуть. Упакованные загрузчики используются для поиска неизвестных шаблонов при их первом обнаружении. Затем кэшированный загрузчик сохраняет скомпилированный &lt;code&gt;Template&lt;/code&gt; в памяти. Кэшированный экземпляр &lt;code&gt;Template&lt;/code&gt; возвращается для последующих запросов на загрузку того же шаблона.</target>
        </trans-unit>
        <trans-unit id="c55858f293a03dd3465f279c7ceeda39fb6b1187" translate="yes" xml:space="preserve">
          <source>You could also replace the Django WSGI application with a custom WSGI application that later delegates to the Django WSGI application, if you want to combine a Django application with a WSGI application of another framework.</source>
          <target state="translated">Вы также можете заменить приложение Django WSGI на пользовательское приложение WSGI,которое позже будет делегировано приложению Django WSGI,если вы хотите объединить приложение Django с приложением WSGI другого фреймворка.</target>
        </trans-unit>
        <trans-unit id="3e53873100eef59aeaa65665224b03c0d96d9443" translate="yes" xml:space="preserve">
          <source>You could also use a proxy model to define a different default ordering on a model. You might not always want to order the &lt;code&gt;Person&lt;/code&gt; model, but regularly order by the &lt;code&gt;last_name&lt;/code&gt; attribute when you use the proxy:</source>
          <target state="translated">Вы также можете использовать прокси-модель для определения другого порядка по умолчанию для модели. Возможно, вы не всегда хотите упорядочивать модель &lt;code&gt;Person&lt;/code&gt; , но регулярно упорядочивайте по атрибуту &lt;code&gt;last_name&lt;/code&gt; при использовании прокси:</target>
        </trans-unit>
        <trans-unit id="0f892d8929adacf77c4968c7ca64bf7c76769036" translate="yes" xml:space="preserve">
          <source>You could also write a decorator to encapsulate this logic:</source>
          <target state="translated">Вы также можете написать декоратора,чтобы инкапсулировать эту логику:</target>
        </trans-unit>
        <trans-unit id="b6bc7cb9e336c1ee005f32cab8ef58a51a272e42" translate="yes" xml:space="preserve">
          <source>You could code this without using the alias. This example is identical to the previous one:</source>
          <target state="translated">Ты можешь закодировать это,не используя псевдоним.Этот пример идентичен предыдущему:</target>
        </trans-unit>
        <trans-unit id="74aac055ee7d1bffca12f28ed7344eaaeb81b9d3" translate="yes" xml:space="preserve">
          <source>You could then execute custom SQL like so:</source>
          <target state="translated">Затем вы можете выполнить пользовательский SQL таким образом:</target>
        </trans-unit>
        <trans-unit id="d54b22f73e1c12af3870583f3dcbc1fda80a9478" translate="yes" xml:space="preserve">
          <source>You couldn&amp;rsquo;t use the &lt;a href=&quot;#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filter directly in this case, as it would first convert the variable into a string, rather than working with the individual elements of the sequence.</source>
          <target state="translated">Вы не можете использовать &lt;a href=&quot;#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt; фильтр напрямую в этом случае, так как он сначала преобразует переменную в строку, а не работает с отдельными элементами последовательности.</target>
        </trans-unit>
        <trans-unit id="08e6af68ea58ba1bc89e0c1071a0c4608e557f5c" translate="yes" xml:space="preserve">
          <source>You create and update the message files the same way as the other Django message files &amp;ndash; with the &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt; tool. The only difference is you need to explicitly specify what in gettext parlance is known as a domain in this case the &lt;code&gt;djangojs&lt;/code&gt; domain, by providing a &lt;code&gt;-d
djangojs&lt;/code&gt; parameter, like this:</source>
          <target state="translated">Вы создаете и обновляете файлы сообщений так же, как и другие файлы сообщений Django - с &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;django-admin makemessages&lt;/code&gt; &lt;/a&gt; инструмента makemessages django-admin . Единственное отличие состоит в том, что вам нужно явно указать, что на языке gettext называется доменом в данном случае доменом &lt;code&gt;djangojs&lt;/code&gt; , предоставив параметр &lt;code&gt;-d djangojs&lt;/code&gt; , например так:</target>
        </trans-unit>
        <trans-unit id="f2b091b34ea7a9184c43a21e2e20961d81d439cf" translate="yes" xml:space="preserve">
          <source>You created &lt;code&gt;mysite/templates&lt;/code&gt; in &lt;a href=&quot;tutorial07&quot;&gt;Tutorial 7&lt;/a&gt;, and &lt;code&gt;polls/templates&lt;/code&gt; in &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;. Now perhaps it is clearer why we chose to have separate template directories for the project and application: everything that is part of the polls application is in &lt;code&gt;polls&lt;/code&gt;. It makes the application self-contained and easier to drop into a new project.</source>
          <target state="translated">Вы создали &lt;code&gt;mysite/templates&lt;/code&gt; в &lt;a href=&quot;tutorial07&quot;&gt;Tutorial 7&lt;/a&gt; и &lt;code&gt;polls/templates&lt;/code&gt; в &lt;a href=&quot;tutorial03&quot;&gt;Tutorial 3&lt;/a&gt; . Теперь, возможно, стало понятнее, почему мы выбрали отдельные каталоги шаблонов для проекта и приложения: все, что является частью приложения polls, находится в &lt;code&gt;polls&lt;/code&gt; . Это делает приложение самодостаточным и его легче внедрить в новый проект.</target>
        </trans-unit>
        <trans-unit id="f8a44d79854f96dfc976d73e8ed62a2ded1b15e8" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t even need to provide a &lt;code&gt;success_url&lt;/code&gt; for &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt; - they will use &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; on the model object if available.</source>
          <target state="translated">Вам даже не нужно предоставлять &lt;code&gt;success_url&lt;/code&gt; для &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../ref/class-based-views/generic-editing#django.views.generic.edit.UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt; - они будут использовать &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt; для объекта модели, если он доступен.</target>
        </trans-unit>
        <trans-unit id="4160cc196a512037d0beacbaa320a530aa20025f" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to do anything to activate the default routing scheme &amp;ndash; it is provided &amp;lsquo;out of the box&amp;rsquo; on every Django project. However, if you want to implement more interesting database allocation behaviors, you can define and install your own database routers.</source>
          <target state="translated">Вам не нужно ничего делать для активации схемы маршрутизации по умолчанию - она ​​предоставляется &amp;laquo;из коробки&amp;raquo; для каждого проекта Django. Однако, если вы хотите реализовать более интересные способы размещения базы данных, вы можете определить и установить свои собственные маршрутизаторы базы данных.</target>
        </trans-unit>
        <trans-unit id="e4c07a3cd038188df0776dea92c657f155d41211" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to define both &lt;code&gt;natural_key()&lt;/code&gt; and &lt;code&gt;get_by_natural_key()&lt;/code&gt;. If you don&amp;rsquo;t want Django to output natural keys during serialization, but you want to retain the ability to load natural keys, then you can opt to not implement the &lt;code&gt;natural_key()&lt;/code&gt; method.</source>
          <target state="translated">Вам не нужно определять и &lt;code&gt;natural_key()&lt;/code&gt; и &lt;code&gt;get_by_natural_key()&lt;/code&gt; . Если вы не хотите, чтобы Django выводил натуральные ключи во время сериализации, но вы хотите сохранить возможность загружать натуральные ключи, тогда вы можете отказаться от реализации &lt;code&gt;natural_key()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83eb1a4f6ac0c32ceb1abc635578c2cc75703a04" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to explicitly render responses &amp;ndash; responses will be automatically rendered once all template response middleware has been called.</source>
          <target state="translated">Вам не нужно явно отображать ответы - ответы будут автоматически отображаться после вызова всего промежуточного программного обеспечения для ответов на шаблоны.</target>
        </trans-unit>
        <trans-unit id="54630aef1ba79d8e3bbb2f9c8dfd20c2056e06e0" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to learn too much about &lt;code&gt;ProjectState&lt;/code&gt; to write migrations; just know that it has an &lt;code&gt;apps&lt;/code&gt; property that gives access to an app registry (which you can then call &lt;code&gt;get_model&lt;/code&gt; on).</source>
          <target state="translated">Вам не нужно слишком много изучать &lt;code&gt;ProjectState&lt;/code&gt; для написания миграций; просто знайте, что у него есть свойство &lt;code&gt;apps&lt;/code&gt; , которое дает доступ к реестру приложений (который вы затем можете вызвать &lt;code&gt;get_model&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="160dd44c01feea323b804baf3dd9f87e86d2b58f" translate="yes" xml:space="preserve">
          <source>You find many &lt;code&gt;TypeError&lt;/code&gt; or &lt;code&gt;AttributeError&lt;/code&gt; exceptions filling your Web server&amp;rsquo;s log files. This generally means that you are creating GEOS objects at the top level of some of your Python modules. Then, due to a race condition in the garbage collector, your module is garbage collected before the GEOS object. To prevent this, create &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects inside the local scope of your functions/methods.</source>
          <target state="translated">Вы найдете много исключений &lt;code&gt;TypeError&lt;/code&gt; или &lt;code&gt;AttributeError&lt;/code&gt; , заполняющих файлы журнала вашего веб-сервера. Обычно это означает, что вы создаете объекты GEOS на верхнем уровне некоторых из ваших модулей Python. Затем из-за состояния гонки в сборщике мусора ваш модуль собирается мусором перед объектом GEOS. Чтобы предотвратить это, создайте объекты &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; внутри локальной области ваших функций / методов.</target>
        </trans-unit>
        <trans-unit id="f7f87b8aba8eaa1962a0aac79270b5cad62722e0" translate="yes" xml:space="preserve">
          <source>You generally shouldn&amp;rsquo;t have to set or change that attribute which should be setup depending on the field class. It matches the OpenGIS standard geometry name.</source>
          <target state="translated">Как правило, вам не нужно устанавливать или изменять тот атрибут, который должен быть установлен в зависимости от класса поля. Он соответствует стандартному имени геометрии OpenGIS.</target>
        </trans-unit>
        <trans-unit id="15b3f03c81a824320c03807b92eb7044b21a3445" translate="yes" xml:space="preserve">
          <source>You get a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; by using your model&amp;rsquo;s &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;. Each model has at least one &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;, and it&amp;rsquo;s called &lt;a href=&quot;../../ref/models/class#django.db.models.Model.objects&quot;&gt;&lt;code&gt;objects&lt;/code&gt;&lt;/a&gt; by default. Access it directly via the model class, like so:</source>
          <target state="translated">Вы получаете &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; с помощью &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; вашей модели . В каждой модели есть хотя бы один &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; , и он называется &lt;a href=&quot;../../ref/models/class#django.db.models.Model.objects&quot;&gt; &lt;code&gt;objects&lt;/code&gt; &lt;/a&gt; по умолчанию. Доступ к нему напрямую через класс модели, например:</target>
        </trans-unit>
        <trans-unit id="a583c85f0934f0425292a79bacce3da9955d3da1" translate="yes" xml:space="preserve">
          <source>You have legacy data that is not valid.</source>
          <target state="translated">У вас есть старые данные,которые недействительны.</target>
        </trans-unit>
        <trans-unit id="77004c1ae190913508fc2d85735e470a24aadb04" translate="yes" xml:space="preserve">
          <source>You have not changed your models since you made their tables. For migrations to work, you must make the initial migration &lt;em&gt;first&lt;/em&gt; and then make changes, as Django compares changes against migration files, not the database.</source>
          <target state="translated">Вы не меняли свои модели с тех пор, как создали их таблицы. Чтобы миграция работала, вы должны &lt;em&gt;сначала&lt;/em&gt; выполнить первоначальную миграцию, а затем внести изменения, поскольку Django сравнивает изменения с файлами миграции, а не с базой данных.</target>
        </trans-unit>
        <trans-unit id="9f88ddf1dfc56d7ca15858fd4b410a107a196f7d" translate="yes" xml:space="preserve">
          <source>You have not manually edited your database - Django won&amp;rsquo;t be able to detect that your database doesn&amp;rsquo;t match your models, you&amp;rsquo;ll just get errors when migrations try to modify those tables.</source>
          <target state="translated">Вы не редактировали свою базу данных вручную - Django не сможет обнаружить, что ваша база данных не соответствует вашим моделям, вы просто получите ошибки, когда миграции попытаются изменить эти таблицы.</target>
        </trans-unit>
        <trans-unit id="67721fac704c1d5aba66d47dc56365c6ab845fe7" translate="yes" xml:space="preserve">
          <source>You have now wired an &lt;code&gt;index&lt;/code&gt; view into the URLconf. Verify it&amp;rsquo;s working with the following command:</source>
          <target state="translated">Теперь вы подключили &lt;code&gt;index&lt;/code&gt; представление к URLconf. Убедитесь, что он работает с помощью следующей команды:</target>
        </trans-unit>
        <trans-unit id="0e8060483f7d78af7b76ca8b043ee86d94236f1f" translate="yes" xml:space="preserve">
          <source>You have the choice of using &lt;code&gt;HORIZONTAL&lt;/code&gt; or &lt;code&gt;VERTICAL&lt;/code&gt; from the &lt;code&gt;django.contrib.admin&lt;/code&gt; module.</source>
          <target state="translated">У вас есть выбор использования &lt;code&gt;HORIZONTAL&lt;/code&gt; или &lt;code&gt;VERTICAL&lt;/code&gt; из &lt;code&gt;django.contrib.admin&lt;/code&gt; модуля.</target>
        </trans-unit>
        <trans-unit id="29c4d7420e828bca5f878283b9d9f51de0f3aa5c" translate="yes" xml:space="preserve">
          <source>You have to activate the virtual environment whenever you open a new terminal window. &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt; is a useful tool for making this more convenient.</source>
          <target state="translated">Вы должны активировать виртуальную среду всякий раз, когда вы открываете новое окно терминала. &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt; - полезный инструмент для более удобного использования.</target>
        </trans-unit>
        <trans-unit id="8f8f5299434f4ae865769ea1aeedc0ccfaede4d2" translate="yes" xml:space="preserve">
          <source>You have to override the &lt;code&gt;test_func()&lt;/code&gt; method of the class to provide the test that is performed. Furthermore, you can set any of the parameters of &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt;&lt;code&gt;AccessMixin&lt;/code&gt;&lt;/a&gt; to customize the handling of unauthorized users:</source>
          <target state="translated">Вы должны переопределить метод &lt;code&gt;test_func()&lt;/code&gt; класса, чтобы обеспечить выполнение теста. Кроме того, вы можете установить любой из параметров &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin&quot;&gt; &lt;code&gt;AccessMixin&lt;/code&gt; ,&lt;/a&gt; чтобы настроить обработку неавторизованных пользователей:</target>
        </trans-unit>
        <trans-unit id="a947145b5cc7e10486a8cd7eedd2aaea5b655937" translate="yes" xml:space="preserve">
          <source>You may also control in a more granular way which filter to use within any given view by setting the &lt;code&gt;HttpRequest&lt;/code&gt;&amp;rsquo;s &lt;code&gt;exception_reporter_filter&lt;/code&gt; attribute:</source>
          <target state="translated">Вы также можете более детально контролировать, какой фильтр использовать в любом заданном представлении, установив атрибут &lt;code&gt;HttpRequest&lt;/code&gt; 's &lt;code&gt;exception_reporter_filter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a40a0ae1dbcf6b762ab5005fd312e209c5e1fdb1" translate="yes" xml:space="preserve">
          <source>You may also find signing useful for the following:</source>
          <target state="translated">Подпись также может оказаться полезной для следующих целей:</target>
        </trans-unit>
        <trans-unit id="94bd9a9d908e28c73a16c2636ae8570b71b1faf2" translate="yes" xml:space="preserve">
          <source>You may also override these methods:</source>
          <target state="translated">Вы также можете отменить эти методы:</target>
        </trans-unit>
        <trans-unit id="7b686047278192f3cfbc95cb5941598d89e00285" translate="yes" xml:space="preserve">
          <source>You may also provide any file-like object (e.g., &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;) as a file handle. If you&amp;rsquo;re uploading to an &lt;a href=&quot;../../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt;, the object needs a &lt;code&gt;name&lt;/code&gt; attribute that passes the &lt;a href=&quot;../../ref/validators#django.core.validators.validate_image_file_extension&quot;&gt;&lt;code&gt;validate_image_file_extension&lt;/code&gt;&lt;/a&gt; validator. For example:</source>
          <target state="translated">Вы также можете предоставить любой файловый объект (например, &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt; ) в качестве дескриптора файла. Если вы загружаете в &lt;a href=&quot;../../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; , объекту нужен атрибут &lt;code&gt;name&lt;/code&gt; , который проходит валидатор &lt;a href=&quot;../../ref/validators#django.core.validators.validate_image_file_extension&quot;&gt; &lt;code&gt;validate_image_file_extension&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="cb6e68b44ecfc93bcb3f44a1a1bff9bbb3cd86d9" translate="yes" xml:space="preserve">
          <source>You may also return a custom &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; class directly.</source>
          <target state="translated">Вы также можете вернуть собственный класс &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; напрямую.</target>
        </trans-unit>
        <trans-unit id="8b48d7a6f28c9ccacc5b69a814f7420c27186a65" translate="yes" xml:space="preserve">
          <source>You may also store the generated class into a variable:</source>
          <target state="translated">Сгенерированный класс также можно сохранить в переменной:</target>
        </trans-unit>
        <trans-unit id="5a1fee0442ccfccabc73d150ec370338cad3d6f2" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;gettext&lt;/code&gt; binaries you have obtained elsewhere, so long as the &lt;code&gt;xgettext --version&lt;/code&gt; command works properly. Do not attempt to use Django translation utilities with a &lt;code&gt;gettext&lt;/code&gt; package if the command &lt;code&gt;xgettext
--version&lt;/code&gt; entered at a Windows command prompt causes a popup window saying &amp;ldquo;xgettext.exe has generated errors and will be closed by Windows&amp;rdquo;.</source>
          <target state="translated">Вы также можете использовать исполняемые файлы &lt;code&gt;gettext&lt;/code&gt; , полученные в других местах, при условии, что команда &lt;code&gt;xgettext --version&lt;/code&gt; работает правильно. Не пытайтесь использовать утилиты перевода Django с пакетом &lt;code&gt;gettext&lt;/code&gt; , если команда &lt;code&gt;xgettext --version&lt;/code&gt; введенная в командной строке Windows, вызывает всплывающее окно с сообщением &amp;laquo;xgettext.exe сгенерировал ошибки и будет закрыт Windows&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="7e24b5bf6616683461293274f379ea23fdf4f22a" translate="yes" xml:space="preserve">
          <source>You may also use the same name for multiple URL patterns if they differ in their arguments. In addition to the URL name, &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; matches the number of arguments and the names of the keyword arguments.</source>
          <target state="translated">Вы также можете использовать одно и то же имя для нескольких шаблонов URL, если они отличаются в своих аргументах. Помимо имени URL, &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; сопоставляет количество аргументов и имена аргументов ключевого слова.</target>
        </trans-unit>
        <trans-unit id="88b486a6c99f0c2bc027cf435e187f739b8540d6" translate="yes" xml:space="preserve">
          <source>You may also want to change the &lt;code&gt;Paginator&lt;/code&gt; on very large tables as the default paginator always performs a &lt;code&gt;count()&lt;/code&gt; query. For example, you could override the default implementation of the &lt;code&gt;Paginator.count&lt;/code&gt; property.</source>
          <target state="translated">Вы также можете изменить &lt;code&gt;Paginator&lt;/code&gt; для очень больших таблиц, поскольку paginator по умолчанию всегда выполняет запрос &lt;code&gt;count()&lt;/code&gt; . Например, вы можете переопределить реализацию по &lt;code&gt;Paginator.count&lt;/code&gt; свойства Paginator.count .</target>
        </trans-unit>
        <trans-unit id="3a71fafe1bfd3bf736955c25bbb5d468f6279867" translate="yes" xml:space="preserve">
          <source>You may be tempted to customize the model by overriding the &lt;code&gt;__init__&lt;/code&gt; method. If you do so, however, take care not to change the calling signature as any change may prevent the model instance from being saved. Rather than overriding &lt;code&gt;__init__&lt;/code&gt;, try using one of these approaches:</source>
          <target state="translated">Вы можете испытать желание настроить модель, переопределив метод &lt;code&gt;__init__&lt;/code&gt; . Однако, если вы это сделаете, позаботьтесь о том, чтобы не изменять подпись вызывающего абонента, поскольку любое изменение может помешать сохранению экземпляра модели. Вместо переопределения &lt;code&gt;__init__&lt;/code&gt; , попробуйте использовать один из следующих подходов:</target>
        </trans-unit>
        <trans-unit id="56eff54a746cee6e060c5420721b742dd6ab0815" translate="yes" xml:space="preserve">
          <source>You may be thinking, why not just pass a dictionary of the initial values as data when displaying the form? Well, if you do that, you&amp;rsquo;ll trigger validation, and the HTML output will include any validation errors:</source>
          <target state="translated">Вы можете подумать, почему бы просто не передать словарь начальных значений в качестве данных при отображении формы? Что ж, если вы сделаете это, вы активируете валидацию, и вывод HTML будет включать любые ошибки валидации:</target>
        </trans-unit>
        <trans-unit id="6854deb176977301dd2b21405dbe328a03e39f7b" translate="yes" xml:space="preserve">
          <source>You may choose what tables or views to inspect by passing their names as arguments. If no arguments are provided, models are created for views only if the &lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt;&lt;code&gt;--include-views&lt;/code&gt;&lt;/a&gt; option is used. Models for partition tables are created on PostgreSQL if the &lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt;&lt;code&gt;--include-partitions&lt;/code&gt;&lt;/a&gt; option is used.</source>
          <target state="translated">Вы можете выбрать, какие таблицы или представления проверять, передавая их имена в качестве аргументов. Если аргументы не предоставлены, модели создаются для представлений, только если используется параметр &lt;a href=&quot;#cmdoption-inspectdb-include-views&quot;&gt; &lt;code&gt;--include-views&lt;/code&gt; &lt;/a&gt; . Модели для таблиц разделов создаются в PostgreSQL, если используется параметр &lt;a href=&quot;#cmdoption-inspectdb-include-partitions&quot;&gt; &lt;code&gt;--include-partitions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02fa82ccb7c4019948f06cd8692babf59715288e" translate="yes" xml:space="preserve">
          <source>You may directly test the &lt;code&gt;get_context_data()&lt;/code&gt; method by first instantiating the view, then passing a &lt;code&gt;request&lt;/code&gt; to &lt;code&gt;setup()&lt;/code&gt;, before proceeding with your test&amp;rsquo;s code:</source>
          <target state="translated">Вы можете напрямую протестировать метод &lt;code&gt;get_context_data()&lt;/code&gt; , сначала создав экземпляр представления, затем передав &lt;code&gt;request&lt;/code&gt; в &lt;code&gt;setup()&lt;/code&gt; , прежде чем продолжить с кодом вашего теста:</target>
        </trans-unit>
        <trans-unit id="4cf1343190279ce14e2470605f5526d3e4a6f692" translate="yes" xml:space="preserve">
          <source>You may feel that you have quite enough on your plate just learning Python/Django, and having yet another thing to learn and do may seem overwhelming and perhaps unnecessary. After all, our polls application is working quite happily now; going through the trouble of creating automated tests is not going to make it work any better. If creating the polls application is the last bit of Django programming you will ever do, then true, you don&amp;rsquo;t need to know how to create automated tests. But, if that&amp;rsquo;s not the case, now is an excellent time to learn.</source>
          <target state="translated">Вы можете почувствовать, что у вас на тарелке достаточно просто изучения Python / Django, и иметь еще одну вещь для изучения и выполнения может показаться ошеломляющим и, возможно, ненужным. В конце концов, наше приложение для опросов работает довольно счастливо; Трудности создания автоматизированных тестов не улучшат его работу. Если создание приложения опросов является последним кусочком программирования на Django, которое вы когда-либо выполняете, то да, вам не нужно знать, как создавать автоматизированные тесты. Но, если это не так, сейчас самое время учиться.</target>
        </trans-unit>
        <trans-unit id="6af1665180aa409ea9406af6b9f5bcde4e3e9ba8" translate="yes" xml:space="preserve">
          <source>You may have another version of Django installed.</source>
          <target state="translated">Возможно,у вас установлена другая версия Django.</target>
        </trans-unit>
        <trans-unit id="3f4eb425b2d8c2399ac03cc2c14ed5206121733d" translate="yes" xml:space="preserve">
          <source>You may have noticed Django database objects use the same &lt;code&gt;save()&lt;/code&gt; method for creating and changing objects. Django abstracts the need to use &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt; SQL statements. Specifically, when you call &lt;code&gt;save()&lt;/code&gt; and the object&amp;rsquo;s primary key attribute does &lt;strong&gt;not&lt;/strong&gt; define a &lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;, Django follows this algorithm:</source>
          <target state="translated">Возможно, вы заметили, что объекты базы данных Django используют один и тот же метод &lt;code&gt;save()&lt;/code&gt; для создания и изменения объектов. Джанго абстрагируется от необходимости использовать операторы SQL &lt;code&gt;INSERT&lt;/code&gt; или &lt;code&gt;UPDATE&lt;/code&gt; . В частности, когда вы вызываете &lt;code&gt;save()&lt;/code&gt; а атрибут первичного ключа объекта &lt;strong&gt;не&lt;/strong&gt; определяет значение по &lt;a href=&quot;fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; , Django следует этому алгоритму:</target>
        </trans-unit>
        <trans-unit id="26336779b9015e557a947ead0b96e34fa1199d26" translate="yes" xml:space="preserve">
          <source>You may have noticed the additional data (&lt;code&gt;form-TOTAL_FORMS&lt;/code&gt;, &lt;code&gt;form-INITIAL_FORMS&lt;/code&gt; and &lt;code&gt;form-MAX_NUM_FORMS&lt;/code&gt;) that was required in the formset&amp;rsquo;s data above. This data is required for the &lt;code&gt;ManagementForm&lt;/code&gt;. This form is used by the formset to manage the collection of forms contained in the formset. If you don&amp;rsquo;t provide this management data, an exception will be raised:</source>
          <target state="translated">Возможно, вы заметили дополнительные данные ( &lt;code&gt;form-TOTAL_FORMS&lt;/code&gt; , &lt;code&gt;form-INITIAL_FORMS&lt;/code&gt; и &lt;code&gt;form-MAX_NUM_FORMS&lt;/code&gt; ), которые были необходимы в данных набора форм выше. Эти данные необходимы для &lt;code&gt;ManagementForm&lt;/code&gt; . Эта форма используется набором форм для управления коллекцией форм, содержащихся в наборе форм. Если вы не предоставите эти данные управления, возникнет исключение:</target>
        </trans-unit>
        <trans-unit id="b56ba5c574a3163b58704ec42ea7d47854f4c64b" translate="yes" xml:space="preserve">
          <source>You may have to manually add this if you change the model&amp;rsquo;s name and quite a few of its fields at once; to the autodetector, this will look like you deleted a model with the old name and added a new one with a different name, and the migration it creates will lose any data in the old table.</source>
          <target state="translated">Возможно, вам придется добавить это вручную, если вы измените название модели и несколько ее полей одновременно; для автоматического детектора это будет выглядеть так, как будто вы удалили модель со старым именем и добавили новую с другим именем, а созданная миграция потеряет все данные в старой таблице.</target>
        </trans-unit>
        <trans-unit id="a0d11f33feaf555c09fc5cacb314df6d9065c465" translate="yes" xml:space="preserve">
          <source>You may need this if authentication for your application takes place against an existing external source such as an LDAP directory.</source>
          <target state="translated">Это может понадобиться,если аутентификация для вашего приложения происходит по отношению к существующему внешнему источнику,такому как LDAP директория.</target>
        </trans-unit>
        <trans-unit id="f455f91efcc3a71eda279b9bf01d2cfa44960629" translate="yes" xml:space="preserve">
          <source>You may need to &lt;a href=&quot;../howto/static-files/index#serving-static-files-in-development&quot;&gt;configure these files to be served in development&lt;/a&gt; and will definitely need to do so &lt;a href=&quot;../howto/static-files/deployment&quot;&gt;in production&lt;/a&gt;.</source>
          <target state="translated">Возможно, вам придется &lt;a href=&quot;../howto/static-files/index#serving-static-files-in-development&quot;&gt;настроить эти файлы для обслуживания в процессе разработки,&lt;/a&gt; и вам определенно потребуется сделать это &lt;a href=&quot;../howto/static-files/deployment&quot;&gt;в производственной среде&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1bc6411b3a159e40ff132362b3f7dfe3b68d5b1d" translate="yes" xml:space="preserve">
          <source>You may need to manually revert model state when rolling back a transaction.</source>
          <target state="translated">При откате транзакции может понадобиться вручную вернуть состояние модели.</target>
        </trans-unit>
        <trans-unit id="339765a279aee9e12dfe832a485f655246d658ae" translate="yes" xml:space="preserve">
          <source>You may perform subtransactions using savepoints in your view code, typically with the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; context manager. However, at the end of the view, either all or none of the changes will be committed.</source>
          <target state="translated">Вы можете выполнять субтранзакции, используя точки сохранения в своем коде представления, обычно с помощью менеджера контекста &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; . Однако в конце представления будут зафиксированы все или никакие изменения.</target>
        </trans-unit>
        <trans-unit id="c04d0d9278d9640a6910e0d1c65f3d56f01ccc38" translate="yes" xml:space="preserve">
          <source>You may prefer to create instances of the intermediate model directly.</source>
          <target state="translated">Вы можете предпочесть создавать экземпляры промежуточной модели напрямую.</target>
        </trans-unit>
        <trans-unit id="11ba422a4dc98de7bc271b34faee2e4af605dcb7" translate="yes" xml:space="preserve">
          <source>You may rearrange the fields any time using &lt;code&gt;order_fields()&lt;/code&gt; with a list of field names as in &lt;a href=&quot;#django.forms.Form.field_order&quot;&gt;&lt;code&gt;field_order&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете изменить порядок полей в любое время, используя &lt;code&gt;order_fields()&lt;/code&gt; со списком имен полей, как в &lt;a href=&quot;#django.forms.Form.field_order&quot;&gt; &lt;code&gt;field_order&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="732b5282696edf868e2850f9998f369779079e92" translate="yes" xml:space="preserve">
          <source>You may reverse the execution order inside groups using the &lt;a href=&quot;../../ref/django-admin#cmdoption-test-reverse&quot;&gt;&lt;code&gt;test
--reverse&lt;/code&gt;&lt;/a&gt; option. This can help with ensuring your tests are independent from each other.</source>
          <target state="translated">Вы можете изменить порядок выполнения внутри групп, используя опцию &lt;a href=&quot;../../ref/django-admin#cmdoption-test-reverse&quot;&gt; &lt;code&gt;test --reverse&lt;/code&gt; &lt;/a&gt; . Это может помочь гарантировать, что ваши тесты независимы друг от друга.</target>
        </trans-unit>
        <trans-unit id="1b8ed97bd4374093c1f301126fd2d159aafa77f2" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;atomic&lt;/code&gt; when autocommit is turned off. It will only use savepoints, even for the outermost block.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;atomic&lt;/code&gt; когда автокоммит выключен. Он будет использовать только точки сохранения, даже для самого внешнего блока.</target>
        </trans-unit>
        <trans-unit id="7ff74a8b0986f1f4c6bc11ccb3a7e86715c25e14" translate="yes" xml:space="preserve">
          <source>You may use any key function you want, as long as it has the same argument signature.</source>
          <target state="translated">Вы можете использовать любую ключевую функцию,если она имеет ту же самую сигнатуру аргумента.</target>
        </trans-unit>
        <trans-unit id="f48aa6e947b9723448c0d95c2aecb5c115eb7de5" translate="yes" xml:space="preserve">
          <source>You may want to &amp;ldquo;ping&amp;rdquo; Google when your sitemap changes, to let it know to reindex your site. The sitemaps framework provides a function to do just that: &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;django.contrib.sitemaps.ping_google()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возможно, вы захотите &amp;laquo;пропинговать&amp;raquo; Google, когда ваша карта сайта изменится, чтобы дать ей знать, чтобы переиндексировать ваш сайт. Каркас &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt; &lt;code&gt;django.contrib.sitemaps.ping_google()&lt;/code&gt; &lt;/a&gt; предоставляет функцию для этого: django.contrib.sitemaps.ping_google () .</target>
        </trans-unit>
        <trans-unit id="801144c9dd9512d51ae3abec349303657effc771" translate="yes" xml:space="preserve">
          <source>You may want to apply multiple expressions over the same window, i.e., the same partition and frame. For example, you could modify the previous example to also include the best and worst rating in each movie&amp;rsquo;s group (same studio, genre, and release year) by using three window functions in the same query. The partition and ordering from the previous example is extracted into a dictionary to reduce repetition:</source>
          <target state="translated">Вы можете захотеть применить несколько выражений к одному и тому же окну, то есть к одному и тому же разделу и фрейму. Например, вы можете изменить предыдущий пример, включив в него также лучший и худший рейтинг в каждой группе фильма (та же студия, жанр и год выпуска), используя три оконные функции в одном запросе. Раздел и порядок из предыдущего примера извлекаются в словарь, чтобы уменьшить количество повторений:</target>
        </trans-unit>
        <trans-unit id="d609ea8c389a2367222c644e9fbaf629dc6aef52" translate="yes" xml:space="preserve">
          <source>You may want to execute some JavaScript when an inline form is added or removed in the admin change form. The &lt;code&gt;formset:added&lt;/code&gt; and &lt;code&gt;formset:removed&lt;/code&gt; jQuery events allow this. The event handler is passed three arguments:</source>
          <target state="translated">Вы можете захотеть выполнить некоторый JavaScript, когда встроенная форма добавляется или удаляется в форме изменения администратора. В &lt;code&gt;formset:added&lt;/code&gt; и &lt;code&gt;formset:removed&lt;/code&gt; JQuery события позволяют это. Обработчику события передаются три аргумента:</target>
        </trans-unit>
        <trans-unit id="e81c29eb387859fe0f013f1d69e1d67247e3253c" translate="yes" xml:space="preserve">
          <source>You may want to filter out null values:</source>
          <target state="translated">Возможно,вы захотите отфильтровать нулевые значения:</target>
        </trans-unit>
        <trans-unit id="41437276669e5e66b3eb938c491a5f93bcf47735" translate="yes" xml:space="preserve">
          <source>You may want to provide a view that allows a user to edit the related objects of a model. Here&amp;rsquo;s how you can do that:</source>
          <target state="translated">Вы можете захотеть предоставить представление, позволяющее пользователю редактировать связанные объекты модели. Вот как вы можете это сделать:</target>
        </trans-unit>
        <trans-unit id="c1fd17cc5bd3d8424dba4f577f339af234fef71e" translate="yes" xml:space="preserve">
          <source>You may want to set the active language for the current session explicitly. Perhaps a user&amp;rsquo;s language preference is retrieved from another system, for example. You&amp;rsquo;ve already been introduced to &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt;. That applies to the current thread only. To persist the language for the entire session in a cookie, set the &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; cookie on the response:</source>
          <target state="translated">Вы можете явно установить активный язык для текущего сеанса. Возможно, языковые предпочтения пользователя получены, например, из другой системы. Вы уже &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt; с django.utils.translation.activate () . Это относится только к текущей теме. Чтобы сохранить язык для всего сеанса в файле cookie, установите файл cookie &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt; &lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt; &lt;/a&gt; в ответе:</target>
        </trans-unit>
        <trans-unit id="4db55f6630189b7992bc7e0f151c09e44813b1d1" translate="yes" xml:space="preserve">
          <source>You might also think you should write your query like this (with quotes around &lt;code&gt;%s&lt;/code&gt;):</source>
          <target state="translated">Вы также можете подумать, что вы должны написать свой запрос так (с кавычками около &lt;code&gt;%s&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="4539068330413d036e679bf9032317886bb834f0" translate="yes" xml:space="preserve">
          <source>You might also want to set the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_FILE_PATH&quot;&gt;&lt;code&gt;SESSION_FILE_PATH&lt;/code&gt;&lt;/a&gt; setting (which defaults to output from &lt;code&gt;tempfile.gettempdir()&lt;/code&gt;, most likely &lt;code&gt;/tmp&lt;/code&gt;) to control where Django stores session files. Be sure to check that your Web server has permissions to read and write to this location.</source>
          <target state="translated">Возможно, вы также захотите установить параметр &lt;a href=&quot;../../ref/settings#std:setting-SESSION_FILE_PATH&quot;&gt; &lt;code&gt;SESSION_FILE_PATH&lt;/code&gt; &lt;/a&gt; (который по умолчанию выводится из &lt;code&gt;tempfile.gettempdir()&lt;/code&gt; , скорее всего &lt;code&gt;/tmp&lt;/code&gt; ), чтобы контролировать, где Django хранит файлы сессий. Убедитесь, что у вашего веб-сервера есть разрешения на чтение и запись в это местоположение.</target>
        </trans-unit>
        <trans-unit id="7ecc1d70193b6349c9ced0c5d841ca670276f28c" translate="yes" xml:space="preserve">
          <source>You might have created a brilliant piece of software, but you will find that many other developers will refuse to look at it because it lacks tests; without tests, they won&amp;rsquo;t trust it. Jacob Kaplan-Moss, one of Django&amp;rsquo;s original developers, says &amp;ldquo;Code without tests is broken by design.&amp;rdquo;</source>
          <target state="translated">Возможно, вы создали блестящее программное обеспечение, но вы обнаружите, что многие другие разработчики откажутся смотреть на него, потому что в нем нет тестов; без тестов они не будут доверять. Джейкоб Каплан-Мосс, один из первых разработчиков Django, говорит: &amp;laquo;Код без тестов нарушен дизайном&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="3d7354ee4a59c1b8ace60237987f021aaf045f11" translate="yes" xml:space="preserve">
          <source>You might have noticed that our sample publisher list template stores all the publishers in a variable named &lt;code&gt;object_list&lt;/code&gt;. While this works just fine, it isn&amp;rsquo;t all that &amp;ldquo;friendly&amp;rdquo; to template authors: they have to &amp;ldquo;just know&amp;rdquo; that they&amp;rsquo;re dealing with publishers here.</source>
          <target state="translated">Возможно, вы заметили, что в нашем примере шаблона списка издателей все издатели хранятся в переменной с именем &lt;code&gt;object_list&lt;/code&gt; . Хотя это работает просто отлично, это не так уж и &amp;laquo;дружелюбно&amp;raquo; к авторам шаблонов: им нужно &amp;laquo;просто знать&amp;raquo;, что они имеют здесь дело с издателями.</target>
        </trans-unit>
        <trans-unit id="9ccb114fa8900ae025e63f95c15867e74d28b2c9" translate="yes" xml:space="preserve">
          <source>You might only be wanting to take advantage of custom database column types and deal with the data as standard Python types in your models; strings, or floats, for example. This case is similar to our &lt;code&gt;Hand&lt;/code&gt; example and we&amp;rsquo;ll note any differences as we go along.</source>
          <target state="translated">Возможно, вы захотите воспользоваться преимуществами пользовательских типов столбцов базы данных и работать с данными как со стандартными типами Python в своих моделях; например, строки или числа с плавающей запятой. Этот случай аналогичен нашему примеру с &lt;code&gt;Hand&lt;/code&gt; , и мы заметим любые различия по мере продвижения.</target>
        </trans-unit>
        <trans-unit id="f1cd426938b8e4dee2615a64be51e7f4aeb72c6c" translate="yes" xml:space="preserve">
          <source>You might reasonably ask why Django doesn&amp;rsquo;t remove the extraneous columns for you. The main reason is consistency with &lt;code&gt;distinct()&lt;/code&gt; and other places: Django &lt;strong&gt;never&lt;/strong&gt; removes ordering constraints that you have specified (and we can&amp;rsquo;t change those other methods&amp;rsquo; behavior, as that would violate our &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/api-stability/&quot;&gt;API stability&lt;/a&gt; policy).</source>
          <target state="translated">Вы можете разумно спросить, почему Django не удаляет посторонние столбцы для вас. Основной причиной является согласованность с &lt;code&gt;distinct()&lt;/code&gt; и другими местами: Django &lt;strong&gt;никогда не&lt;/strong&gt; удаляет указанные вами ограничения на порядок (и мы не можем изменить поведение этих других методов, так как это нарушило бы нашу политику &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/api-stability/&quot;&gt;стабильности API&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="356e09fde192dd1d3f3155d4c1e5f816c83ab00d" translate="yes" xml:space="preserve">
          <source>You might see implementations of &lt;code&gt;references_model&lt;/code&gt; on the built-in operations; this is part of the autodetection code and does not matter for custom operations.</source>
          <target state="translated">Вы могли бы увидеть реализации &lt;code&gt;references_model&lt;/code&gt; для встроенных операций; это часть кода автоопределения и не имеет значения для пользовательских операций.</target>
        </trans-unit>
        <trans-unit id="b36c10c8a2f91500e757734fa74394d6dfbc7307" translate="yes" xml:space="preserve">
          <source>You might want to allow the user to create several articles at once. To create a formset out of an &lt;code&gt;ArticleForm&lt;/code&gt; you would do:</source>
          <target state="translated">Вы можете разрешить пользователю создавать несколько статей одновременно. Для того, чтобы создать formset из в &lt;code&gt;ArticleForm&lt;/code&gt; вы могли бы сделать:</target>
        </trans-unit>
        <trans-unit id="e42bf980dcf58ca5406f6fefb7866aa26e3b1a84" translate="yes" xml:space="preserve">
          <source>You must always specify a unique name for an index. As such, you cannot normally specify a partial index on an abstract base class, since the &lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt;&lt;code&gt;Meta.indexes&lt;/code&gt;&lt;/a&gt; option is inherited by subclasses, with exactly the same values for the attributes (including &lt;code&gt;name&lt;/code&gt;) each time. To work around name collisions, part of the name may contain &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(class)s'&lt;/code&gt;, which are replaced, respectively, by the lowercased app label and class name of the concrete model. For example &lt;code&gt;Index(fields=['title'],
name='%(app_label)s_%(class)s_title_index')&lt;/code&gt;.</source>
          <target state="translated">Вы должны всегда указывать уникальное имя для индекса. Таким образом, вы не можете обычно указывать частичный индекс для абстрактного базового класса, поскольку опция &lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt; &lt;code&gt;Meta.indexes&lt;/code&gt; &lt;/a&gt; наследуется подклассами, каждый раз с точно такими же значениями для атрибутов (включая &lt;code&gt;name&lt;/code&gt; ). Чтобы обойти коллизии имен, часть имени может содержать &lt;code&gt;'%(app_label)s'&lt;/code&gt; и &lt;code&gt;'%(class)s'&lt;/code&gt; , которые заменяются соответственно меткой приложения в нижнем регистре и именем класса конкретной модели. Например, &lt;code&gt;Index(fields=['title'], name='%(app_label)s_%(class)s_title_index')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b72aba4eb002de1688571ff9e5e66cefdacdda7" translate="yes" xml:space="preserve">
          <source>You must always specify a unique name for the constraint. As such, you cannot normally specify a constraint on an abstract base class, since the &lt;a href=&quot;options#django.db.models.Options.constraints&quot;&gt;&lt;code&gt;Meta.constraints&lt;/code&gt;&lt;/a&gt; option is inherited by subclasses, with exactly the same values for the attributes (including &lt;code&gt;name&lt;/code&gt;) each time. To work around name collisions, part of the name may contain &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(class)s'&lt;/code&gt;, which are replaced, respectively, by the lowercased app label and class name of the concrete model. For example &lt;code&gt;CheckConstraint(check=Q(age__gte=18),
name='%(app_label)s_%(class)s_is_adult')&lt;/code&gt;.</source>
          <target state="translated">Вы должны всегда указывать уникальное имя для ограничения. Таким образом, вы не можете обычно указывать ограничение на абстрактный базовый класс, так как опция &lt;a href=&quot;options#django.db.models.Options.constraints&quot;&gt; &lt;code&gt;Meta.constraints&lt;/code&gt; &lt;/a&gt; наследуется подклассами, каждый раз с точно такими же значениями для атрибутов (включая &lt;code&gt;name&lt;/code&gt; ). Чтобы обойти коллизии имен, часть имени может содержать &lt;code&gt;'%(app_label)s'&lt;/code&gt; и &lt;code&gt;'%(class)s'&lt;/code&gt; , которые заменяются соответственно меткой приложения в нижнем регистре и именем класса конкретной модели. Например, &lt;code&gt;CheckConstraint(check=Q(age__gte=18), name='%(app_label)s_%(class)s_is_adult')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91e875f84f2d8540fe9ce858804ecae6d3cdd02e" translate="yes" xml:space="preserve">
          <source>You must define &lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt;&lt;code&gt;search_fields&lt;/code&gt;&lt;/a&gt; on the related object&amp;rsquo;s &lt;code&gt;ModelAdmin&lt;/code&gt; because the autocomplete search uses it.</source>
          <target state="translated">Вы должны определить &lt;a href=&quot;#django.contrib.admin.ModelAdmin.search_fields&quot;&gt; &lt;code&gt;search_fields&lt;/code&gt; &lt;/a&gt; на соответствующий объект &lt;code&gt;ModelAdmin&lt;/code&gt; , поскольку поиск автозаполнения использует его.</target>
        </trans-unit>
        <trans-unit id="a6819eee635c61f85691485c55210495e639ff32" translate="yes" xml:space="preserve">
          <source>You must define or import all models in your application&amp;rsquo;s &lt;code&gt;models.py&lt;/code&gt; or &lt;code&gt;models/__init__.py&lt;/code&gt;. Otherwise, the application registry may not be fully populated at this point, which could cause the ORM to malfunction.</source>
          <target state="translated">Вы должны определить или импортировать все модели в файл &lt;code&gt;models.py&lt;/code&gt; или &lt;code&gt;models/__init__.py&lt;/code&gt; вашего приложения . В противном случае реестр приложений может быть не полностью заполнен на этом этапе, что может привести к неисправности ORM.</target>
        </trans-unit>
        <trans-unit id="abdb42ce69b1716b81d56e39d311a64ebe662e4a" translate="yes" xml:space="preserve">
          <source>You must ensure that no transaction is active, usually by issuing a &lt;a href=&quot;#django.db.transaction.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#django.db.transaction.rollback&quot;&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/a&gt;, before turning autocommit back on.</source>
          <target state="translated">Вы должны убедиться, что ни одна транзакция не активна, обычно выполняя &lt;a href=&quot;#django.db.transaction.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#django.db.transaction.rollback&quot;&gt; &lt;code&gt;rollback()&lt;/code&gt; &lt;/a&gt; , прежде чем снова включить автокоммит.</target>
        </trans-unit>
        <trans-unit id="99370f48affa6aeb3ef9ebe9faee5abc55b1b273" translate="yes" xml:space="preserve">
          <source>You must ensure that the type of the form field can be used to set the contents of the corresponding model field. When they are not compatible, you will get a &lt;code&gt;ValueError&lt;/code&gt; as no implicit conversion takes place.</source>
          <target state="translated">Вы должны убедиться, что тип поля формы может быть использован для установки содержимого соответствующего поля модели. Когда они несовместимы, вы получите &lt;code&gt;ValueError&lt;/code&gt; , поскольку неявное преобразование не происходит.</target>
        </trans-unit>
        <trans-unit id="396683b1621509589025dbdf03e7b223a05f1e10" translate="yes" xml:space="preserve">
          <source>You must include the &lt;a href=&quot;#django.apps.AppConfig.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute for Django to determine which application this configuration applies to. You can define any attributes documented in the &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; API reference.</source>
          <target state="translated">Вы должны включить атрибут &lt;a href=&quot;#django.apps.AppConfig.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; для Django, чтобы определить, к какому приложению применяется данная конфигурация. Вы можете определить любые атрибуты, документированные в справочнике API &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c97b1558be92350215d9c99da8da9338def3e801" translate="yes" xml:space="preserve">
          <source>You must pass the index as an integer rather than a string. The following produce empty output:</source>
          <target state="translated">Индекс должен передаваться как целое число,а не как строка.В результате будет получен пустой вывод:</target>
        </trans-unit>
        <trans-unit id="74be6804469b4bece07e97691a4610eb1e246449" translate="yes" xml:space="preserve">
          <source>You must provide &lt;code&gt;ct_field&lt;/code&gt; and &lt;code&gt;fk_field&lt;/code&gt; if they are different from the defaults, &lt;code&gt;content_type&lt;/code&gt; and &lt;code&gt;object_id&lt;/code&gt; respectively. Other parameters are similar to those documented in &lt;a href=&quot;../forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../forms/models#django.forms.models.inlineformset_factory&quot;&gt;&lt;code&gt;inlineformset_factory()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы должны предоставить &lt;code&gt;ct_field&lt;/code&gt; и &lt;code&gt;fk_field&lt;/code&gt; , если они отличаются от значений по умолчанию, &lt;code&gt;content_type&lt;/code&gt; и &lt;code&gt;object_id&lt;/code&gt; соответственно. Другие параметры аналогичны тем, которые описаны в &lt;a href=&quot;../forms/models#django.forms.models.modelformset_factory&quot;&gt; &lt;code&gt;modelformset_factory()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../forms/models#django.forms.models.inlineformset_factory&quot;&gt; &lt;code&gt;inlineformset_factory()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca86748665b7205d8fba09889c3de5da66f31711" translate="yes" xml:space="preserve">
          <source>You must provide the list of fields explicitly, either via keyword arguments &lt;code&gt;fields&lt;/code&gt; or &lt;code&gt;exclude&lt;/code&gt;, or the corresponding attributes on the form&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class. See &lt;a href=&quot;../../topics/forms/modelforms#modelforms-selecting-fields&quot;&gt;Selecting the fields to use&lt;/a&gt; for more information. Omitting any definition of the fields to use will result in an &lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">Вы должны предоставить список полей в явном виде, либо через ключевые &lt;code&gt;fields&lt;/code&gt; аргументов или &lt;code&gt;exclude&lt;/code&gt; , либо соответствующие атрибуты во внутреннем &lt;code&gt;Meta&lt;/code&gt; . См. &lt;a href=&quot;../../topics/forms/modelforms#modelforms-selecting-fields&quot;&gt;Выбор полей для использования&lt;/a&gt; для получения дополнительной информации. Пропуск любого определения используемых полей приведет к исключению &lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09a667795b3ba070e317c269028935f58ad387b0" translate="yes" xml:space="preserve">
          <source>You must then transition the squashed migration to a normal migration by:</source>
          <target state="translated">Затем вы должны перейти к нормальной миграции:</target>
        </trans-unit>
        <trans-unit id="a7a7855e18419aa39b294d712a5cbf8d4e1debec" translate="yes" xml:space="preserve">
          <source>You need a GDAL-supported data source, like a shapefile (here we&amp;rsquo;re using a simple polygon shapefile, &lt;code&gt;test_poly.shp&lt;/code&gt;, with three features):</source>
          <target state="translated">Вам нужен источник данных с поддержкой GDAL, например, шейп-файл (здесь мы используем простой шейп- &lt;code&gt;test_poly.shp&lt;/code&gt; полигона test_poly.shp с тремя функциями):</target>
        </trans-unit>
        <trans-unit id="bb7bb74d459e38d2e549dc9322d129b43eff3e65" translate="yes" xml:space="preserve">
          <source>You now have created a formset class named &lt;code&gt;ArticleFormSet&lt;/code&gt;. Instantiating the formset gives you the ability to iterate over the forms in the formset and display them as you would with a regular form:</source>
          <target state="translated">Теперь вы создали класс formset с именем &lt;code&gt;ArticleFormSet&lt;/code&gt; . Создание набора форм дает вам возможность перебирать формы в наборе форм и отображать их так же, как в обычной форме:</target>
        </trans-unit>
        <trans-unit id="ffbbcc55b8126a9465980c594aaba0de22656574" translate="yes" xml:space="preserve">
          <source>You only need the &lt;code&gt;name&lt;/code&gt; argument for Python &amp;lt; 3.6 support.</source>
          <target state="translated">Вам нужен только аргумент &lt;code&gt;name&lt;/code&gt; для поддержки Python &amp;lt;3.6.</target>
        </trans-unit>
        <trans-unit id="5d9121908c068a213622317909ad3ac9eee3cb80" translate="yes" xml:space="preserve">
          <source>You only want to override this to be &lt;code&gt;False&lt;/code&gt; if you are sure your model should always point towards the swapped-in model - for example, if it is a profile model designed specifically for your custom user model.</source>
          <target state="translated">Вы можете изменить это значение на &lt;code&gt;False&lt;/code&gt; , если уверены, что ваша модель всегда должна указывать на замененную модель, например, если это модель профиля, разработанная специально для вашей пользовательской модели.</target>
        </trans-unit>
        <trans-unit id="ce5fca793f625af0b0d00973e8fc7c514669c490" translate="yes" xml:space="preserve">
          <source>You probably won&amp;rsquo;t need to do this very often, but, when you do, it&amp;rsquo;s possible.</source>
          <target state="translated">Вероятно, вам не нужно будет делать это очень часто, но, когда вы это делаете, это возможно.</target>
        </trans-unit>
        <trans-unit id="247a1e09807317da3914713c9ae0485198b2d0fd" translate="yes" xml:space="preserve">
          <source>You render the template with a &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы визуализируете шаблон с &lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a280aeb4730ad2f7fcdf0636d8d1039c5c735ab6" translate="yes" xml:space="preserve">
          <source>You select a palette by setting a &lt;code&gt;DJANGO_COLORS&lt;/code&gt; environment variable to specify the palette you want to use. For example, to specify the &lt;code&gt;light&lt;/code&gt; palette under a Unix or OS/X BASH shell, you would run the following at a command prompt:</source>
          <target state="translated">Вы выбираете палитру, устанавливая &lt;code&gt;DJANGO_COLORS&lt;/code&gt; окружения DJANGO_COLORS, чтобы указать палитру, которую вы хотите использовать. Например, чтобы указать &lt;code&gt;light&lt;/code&gt; палитру в оболочке BASH Unix или OS / X, вы должны выполнить в командной строке следующее:</target>
        </trans-unit>
        <trans-unit id="c9c758e888791dae24206bee6c29b7afdbd2eddc" translate="yes" xml:space="preserve">
          <source>You should &lt;em&gt;only&lt;/em&gt; set this setting if you control your proxy or have some other guarantee that it sets/strips this header appropriately.</source>
          <target state="translated">Вы должны &lt;em&gt;только&lt;/em&gt; установить этот параметр , если вы контролируете свой прокси - сервер или иметь некоторую другую гарантию того, что она устанавливает / удаляет этот заголовок соответствующим образом .</target>
        </trans-unit>
        <trans-unit id="a8a4af02dd1016b3dd1c459c9754646e5d5340be" translate="yes" xml:space="preserve">
          <source>You should also be very careful when storing HTML in the database, especially when that HTML is retrieved and displayed.</source>
          <target state="translated">Вы также должны быть очень осторожны при хранении HTML в базе данных,особенно когда этот HTML извлекается и отображается.</target>
        </trans-unit>
        <trans-unit id="8b08c9398ae469447bdf5f66e2d40c1143366f89" translate="yes" xml:space="preserve">
          <source>You should also configure the Web server that sits in front of Django to validate the host. It should respond with a static error page or ignore requests for incorrect hosts instead of forwarding the request to Django. This way you&amp;rsquo;ll avoid spurious errors in your Django logs (or emails if you have error reporting configured that way). For example, on nginx you might setup a default server to return &amp;ldquo;444 No Response&amp;rdquo; on an unrecognized host:</source>
          <target state="translated">Вы также должны настроить веб-сервер, который находится перед Django, для проверки хоста. Он должен отвечать на страницу статической ошибкой или игнорировать запросы на неправильные хосты вместо того, чтобы пересылать запрос в Django. Таким образом вы избежите ложных ошибок в своих журналах Django (или в электронных письмах, если у вас настроены отчеты об ошибках). Например, в nginx вы можете настроить сервер по умолчанию для возврата &amp;laquo;444 No Response&amp;raquo; на нераспознанном хосте:</target>
        </trans-unit>
        <trans-unit id="028d34fd7c49670972cddf293ef8d8605bc04da4" translate="yes" xml:space="preserve">
          <source>You should also consider how you will handle &lt;a href=&quot;../static-files/deployment&quot;&gt;static files&lt;/a&gt; for your application, and how to handle &lt;a href=&quot;../error-reporting&quot;&gt;error reporting&lt;/a&gt;.</source>
          <target state="translated">Вам также следует подумать о том, как вы будете обрабатывать &lt;a href=&quot;../static-files/deployment&quot;&gt;статические файлы&lt;/a&gt; для своего приложения и как обрабатывать &lt;a href=&quot;../error-reporting&quot;&gt;отчеты об ошибках&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="932f5e4af8c5c6b827d2bf9d49584ad14c09c56e" translate="yes" xml:space="preserve">
          <source>You should also define a custom manager for your user model. If your user model defines &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;is_staff&lt;/code&gt;, &lt;code&gt;is_active&lt;/code&gt;, &lt;code&gt;is_superuser&lt;/code&gt;, &lt;code&gt;last_login&lt;/code&gt;, and &lt;code&gt;date_joined&lt;/code&gt; fields the same as Django&amp;rsquo;s default user, you can install Django&amp;rsquo;s &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager&quot;&gt;&lt;code&gt;UserManager&lt;/code&gt;&lt;/a&gt;; however, if your user model defines different fields, you&amp;rsquo;ll need to define a custom manager that extends &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager&quot;&gt;&lt;code&gt;BaseUserManager&lt;/code&gt;&lt;/a&gt; providing two additional methods:</source>
          <target state="translated">Вы также должны определить пользовательский менеджер для вашей модели пользователя. Если ваша модель пользователя определяет &lt;code&gt;is_staff&lt;/code&gt; &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;email&lt;/code&gt; , is_staff , &lt;code&gt;is_active&lt;/code&gt; , &lt;code&gt;is_superuser&lt;/code&gt; , &lt;code&gt;last_login&lt;/code&gt; и &lt;code&gt;date_joined&lt;/code&gt; так же, как и пользователь Django по умолчанию, вы можете установить &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager&quot;&gt; &lt;code&gt;UserManager&lt;/code&gt; &lt;/a&gt; Django ; однако, если ваша пользовательская модель определяет разные поля, вам нужно определить собственный менеджер, который расширяет &lt;a href=&quot;#django.contrib.auth.models.BaseUserManager&quot;&gt; &lt;code&gt;BaseUserManager&lt;/code&gt; ,&lt;/a&gt; предоставляя два дополнительных метода:</target>
        </trans-unit>
        <trans-unit id="72c0958ead6a84d572abd5f082464d659c497c77" translate="yes" xml:space="preserve">
          <source>You should also ensure that the file is opened in a way that allows the data to be read. If your file contains binary data such as an image, this means you will need to open the file in &lt;code&gt;rb&lt;/code&gt; (read binary) mode.</source>
          <target state="translated">Вы также должны убедиться, что файл открыт таким образом, что позволяет читать данные. Если ваш файл содержит двоичные данные, такие как изображение, это означает, что вам нужно открыть файл в режиме &lt;code&gt;rb&lt;/code&gt; (чтение в двоичном формате).</target>
        </trans-unit>
        <trans-unit id="c88f9c01e7b011ba85a3b5b2cc271e98bde146a9" translate="yes" xml:space="preserve">
          <source>You should also note that &lt;code&gt;average_rating&lt;/code&gt; has been explicitly included in the list of values to be returned. This is required because of the ordering of the &lt;code&gt;values()&lt;/code&gt; and &lt;code&gt;annotate()&lt;/code&gt; clause.</source>
          <target state="translated">Следует также отметить, что &lt;code&gt;average_rating&lt;/code&gt; была явно включена в список значений, которые будут возвращены. Это необходимо из-за упорядочения предложений &lt;code&gt;values()&lt;/code&gt; и &lt;code&gt;annotate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d48f669ffa23de1cab01074e761dd89ed8839667" translate="yes" xml:space="preserve">
          <source>You should always use &lt;code&gt;include()&lt;/code&gt; when you include other URL patterns. &lt;code&gt;admin.site.urls&lt;/code&gt; is the only exception to this.</source>
          <target state="translated">Вы всегда должны использовать &lt;code&gt;include()&lt;/code&gt; когда включаете другие шаблоны URL. &lt;code&gt;admin.site.urls&lt;/code&gt; - единственное исключение из этого.</target>
        </trans-unit>
        <trans-unit id="98e20224b08f868211c1c8c2a874b5dd3aa8de2e" translate="yes" xml:space="preserve">
          <source>You should avoid building the URL from unvalidated user input, in order to reduce possibilities of link or redirect poisoning:</source>
          <target state="translated">Вы должны избегать построения URL из непроверенного пользовательского ввода,чтобы уменьшить возможности отравления ссылкой или переадресации:</target>
        </trans-unit>
        <trans-unit id="142d7154c9f884082392a8ad9e44bf2573279596" translate="yes" xml:space="preserve">
          <source>You should be very careful whenever you use &lt;code&gt;extra()&lt;/code&gt;. Every time you use it, you should escape any parameters that the user can control by using &lt;code&gt;params&lt;/code&gt; in order to protect against SQL injection attacks.</source>
          <target state="translated">Вы должны быть очень осторожны при использовании &lt;code&gt;extra()&lt;/code&gt; . Каждый раз, когда вы используете его, вы должны избегать любых параметров, которыми пользователь может управлять с помощью &lt;code&gt;params&lt;/code&gt; , чтобы защитить от атак SQL-инъекций.</target>
        </trans-unit>
        <trans-unit id="3054fcb02edb64c0e0371f3702359f0f871a847f" translate="yes" xml:space="preserve">
          <source>You should be very careful whenever you write raw SQL. Every time you use it, you should properly escape any parameters that the user can control by using &lt;code&gt;params&lt;/code&gt; in order to protect against SQL injection attacks. Please read more about &lt;a href=&quot;../security#sql-injection-protection&quot;&gt;SQL injection protection&lt;/a&gt;.</source>
          <target state="translated">Вы должны быть очень осторожны, когда пишете сырой SQL. Каждый раз, когда вы используете его, вы должны правильно экранировать любые параметры, которыми пользователь может управлять с помощью &lt;code&gt;params&lt;/code&gt; , чтобы защитить от атак внедрения SQL. Пожалуйста, прочитайте больше о &lt;a href=&quot;../security#sql-injection-protection&quot;&gt;защите SQL-инъекций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4adde1f72f5edef86b43e4e42e48c42bd21074e5" translate="yes" xml:space="preserve">
          <source>You should choose the most appropriate tool for your particular problem here. If you have a way to compute ETags and modification times quickly and if some view takes a while to generate the content, you should consider using the &lt;code&gt;condition&lt;/code&gt; decorator described in this document. If everything already runs fairly quickly, stick to using the middleware and the amount of network traffic sent back to the clients will still be reduced if the view hasn&amp;rsquo;t changed.</source>
          <target state="translated">Вы должны выбрать наиболее подходящий инструмент для вашей конкретной проблемы здесь. Если у вас есть способ быстро вычислить ETag и время модификации, и если какое-то представление требует времени для генерации контента, вам следует рассмотреть возможность использования декоратора &lt;code&gt;condition&lt;/code&gt; описанного в этом документе. Если все уже работает довольно быстро, придерживайтесь промежуточного программного обеспечения, и объем сетевого трафика, отправляемого клиентам, все равно будет уменьшен, если представление не изменилось.</target>
        </trans-unit>
        <trans-unit id="34b552291a5d0af9f07252db673dc9c7dd031618" translate="yes" xml:space="preserve">
          <source>You should create an index file if one of your sitemaps has more than 50,000 URLs. In this case, Django will automatically paginate the sitemap, and the index will reflect that.</source>
          <target state="translated">Вы должны создать индексный файл,если одна из ваших карт сайта имеет более 50 000 URL.В этом случае Django автоматически раскладывает карту сайта по страницам,и индекс будет отражать это.</target>
        </trans-unit>
        <trans-unit id="897f71ba073fce09bd4a02735f44b8b013e4d945" translate="yes" xml:space="preserve">
          <source>You should either supply both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt;, or leave both as empty strings. Django will use a different connect descriptor depending on that choice.</source>
          <target state="translated">Вы должны либо предоставить &lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt; , либо оставить оба пустых строки. Django будет использовать другой дескриптор соединения в зависимости от этого выбора.</target>
        </trans-unit>
        <trans-unit id="cc8387d999dd301787736bf8136ae5f90a487f5c" translate="yes" xml:space="preserve">
          <source>You should instead use:</source>
          <target state="translated">Вместо этого тебе следует использовать:</target>
        </trans-unit>
        <trans-unit id="93a06c54ef456c8816145b06329aa3c85a3ee8b6" translate="yes" xml:space="preserve">
          <source>You should keep the field&amp;rsquo;s methods that are required for it to operate in database migrations such as &lt;code&gt;__init__()&lt;/code&gt;, &lt;code&gt;deconstruct()&lt;/code&gt;, and &lt;code&gt;get_internal_type()&lt;/code&gt;. Keep this stub field for as long as any migrations which reference the field exist. For example, after squashing migrations and removing the old ones, you should be able to remove the field completely.</source>
          <target state="translated">Вы должны иметь методы месторождения, которые необходимы для того , чтобы работать в миграции баз данных , таких как &lt;code&gt;__init__()&lt;/code&gt; , &lt;code&gt;deconstruct()&lt;/code&gt; и &lt;code&gt;get_internal_type()&lt;/code&gt; . Сохраняйте это поле-заглушку до тех пор, пока существуют любые миграции, которые ссылаются на это поле. Например, после завершения миграций и удаления старых, вы сможете полностью удалить поле.</target>
        </trans-unit>
        <trans-unit id="4db361a8283e8c02bcb4d5be59408e25e7dd7c0a" translate="yes" xml:space="preserve">
          <source>You should know basic math before you start using a calculator.</source>
          <target state="translated">Вы должны знать основы математики,прежде чем начать пользоваться калькулятором.</target>
        </trans-unit>
        <trans-unit id="c9d80ecf0aa88819e490c1abc6bceafda36f056d" translate="yes" xml:space="preserve">
          <source>You should make sure to read Django&amp;rsquo;s documentation on &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;claiming tickets and submitting patches&lt;/a&gt;. It covers Trac etiquette, how to claim tickets for yourself, expected coding style for patches, and many other important details.</source>
          <target state="translated">Обязательно прочитайте документацию Django по заявкам на &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/submitting-patches/&quot;&gt;билеты и отправке патчей&lt;/a&gt; . Он охватывает этикет Trac, как требовать билеты для себя, ожидаемый стиль кодирования патчей и многие другие важные детали.</target>
        </trans-unit>
        <trans-unit id="2919b3e1b4a33312738817a7fac30c1507afbced" translate="yes" xml:space="preserve">
          <source>You should never include automatically generated objects in a fixture or other serialized data. By chance, the primary keys in the fixture may match those in the database and loading the fixture will have no effect. In the more likely case that they don&amp;rsquo;t match, the fixture loading will fail with an &lt;a href=&quot;../ref/exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы никогда не должны включать автоматически сгенерированные объекты в осветитель или другие сериализованные данные. Случайно, первичные ключи в приборе могут совпадать с ключами в базе данных, и загрузка прибора не будет иметь никакого эффекта. В более вероятном случае, если они не совпадают, загрузка устройства не удастся с &lt;a href=&quot;../ref/exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20c617a6dd64ff60389b054f34e5b12969924a42" translate="yes" xml:space="preserve">
          <source>You should only use cache-based sessions if you&amp;rsquo;re using the Memcached cache backend. The local-memory cache backend doesn&amp;rsquo;t retain data long enough to be a good choice, and it&amp;rsquo;ll be faster to use file or database sessions directly instead of sending everything through the file or database cache backends. Additionally, the local-memory cache backend is NOT multi-process safe, therefore probably not a good choice for production environments.</source>
          <target state="translated">Вы должны использовать сеансы на основе кэша только в том случае, если вы используете серверную часть кэша Memcached. Серверная часть кэша локальной памяти не сохраняет данные достаточно долго, чтобы быть хорошим выбором, и будет быстрее использовать сеансы файла или базы данных напрямую, вместо того, чтобы отправлять все через сервер или базу данных кэша базы данных. Кроме того, серверная часть кэша локальной памяти НЕ является многопроцессорной безопасностью, поэтому, вероятно, не является хорошим выбором для производственных сред.</target>
        </trans-unit>
        <trans-unit id="ff765e60e4b2d673523c4bd60d97b3b4215bc67f" translate="yes" xml:space="preserve">
          <source>You should only use local time when you&amp;rsquo;re interacting with humans, and the template layer provides &lt;a href=&quot;#time-zones-in-templates&quot;&gt;filters and tags&lt;/a&gt; to convert datetimes to the time zone of your choice.</source>
          <target state="translated">Вам следует использовать только местное время, когда вы взаимодействуете с людьми, а слой шаблонов предоставляет &lt;a href=&quot;#time-zones-in-templates&quot;&gt;фильтры и теги&lt;/a&gt; для преобразования времени в выбранный вами часовой пояс.</target>
        </trans-unit>
        <trans-unit id="e90fc2b42738e102271084d767c08ccab07b6d9d" translate="yes" xml:space="preserve">
          <source>You should only use raw queries when you know exactly what you&amp;rsquo;re doing.</source>
          <target state="translated">Вы должны использовать необработанные запросы только тогда, когда точно знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="77f782c8b1b53cc179a71c4f886d3b89c6e33fe2" translate="yes" xml:space="preserve">
          <source>You should prefer the &lt;a href=&quot;#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag, but if you need more control over exactly where and how &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is injected into the template, you can use the &lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt;&lt;code&gt;get_static_prefix&lt;/code&gt;&lt;/a&gt; template tag:</source>
          <target state="translated">Вы должны предпочесть &lt;a href=&quot;#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt; тег шаблона, но если вам нужно больше контроля над тем, где и как &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; внедряется в шаблон, вы можете использовать &lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt; &lt;code&gt;get_static_prefix&lt;/code&gt; &lt;/a&gt; шаблона get_static_prefix :</target>
        </trans-unit>
        <trans-unit id="66c739ef64f70682d272bfd32af7a2a417a95db1" translate="yes" xml:space="preserve">
          <source>You should rarely, if ever, need to edit migration files by hand, but it&amp;rsquo;s entirely possible to write them manually if you need to. Some of the more complex operations are not autodetectable and are only available via a hand-written migration, so don&amp;rsquo;t be scared about editing them if you have to.</source>
          <target state="translated">Вам редко нужно, если вообще нужно, редактировать файлы миграции вручную, но при необходимости вы можете написать их вручную. Некоторые из более сложных операций не могут быть обнаружены автоматически и доступны только посредством рукописной миграции, поэтому не бойтесь их редактировать, если это необходимо.</target>
        </trans-unit>
        <trans-unit id="7b56cb42555ebd4ac554de601db3451197f28914" translate="yes" xml:space="preserve">
          <source>You should see a few types of editable content: groups and users. They are provided by &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;, the authentication framework shipped by Django.</source>
          <target state="translated">Вы должны увидеть несколько типов редактируемого контента: группы и пользователи. Они предоставляются &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt; , инфраструктурой аутентификации, поставляемой Django.</target>
        </trans-unit>
        <trans-unit id="aa1f94b82f29a4b8b6bac38f8cba3db86b543876" translate="yes" xml:space="preserve">
          <source>You should see a link to &amp;ldquo;Users&amp;rdquo; in the &amp;ldquo;Auth&amp;rdquo; section of the main admin index page. The &amp;ldquo;Add user&amp;rdquo; admin page is different than standard admin pages in that it requires you to choose a username and password before allowing you to edit the rest of the user&amp;rsquo;s fields.</source>
          <target state="translated">Вы должны увидеть ссылку &amp;laquo;Пользователи&amp;raquo; в разделе &amp;laquo;Auth&amp;raquo; главной страницы администратора. Страница администратора &amp;laquo;Добавить пользователя&amp;raquo; отличается от стандартных страниц администратора тем, что она требует от вас выбора имени пользователя и пароля, прежде чем вы сможете редактировать остальные поля пользователя.</target>
        </trans-unit>
        <trans-unit id="1691581fb43b72914b1f78777fc6b6ce6c8c700c" translate="yes" xml:space="preserve">
          <source>You should see something similar to the following (we&amp;rsquo;ve reformatted it for readability):</source>
          <target state="translated">Вы должны увидеть нечто похожее на следующее (мы переформатировали его для удобства чтения):</target>
        </trans-unit>
        <trans-unit id="454bdb9cf9fe423dc5c2124ae6f948a26d119378" translate="yes" xml:space="preserve">
          <source>You should see something similar to the following:</source>
          <target state="translated">Вы должны увидеть что-то похожее на следующее:</target>
        </trans-unit>
        <trans-unit id="a3b98e1b31ac088b373403181bc12f1cf5fea49a" translate="yes" xml:space="preserve">
          <source>You should set the current time zone to the end user&amp;rsquo;s actual time zone with &lt;a href=&quot;../../ref/utils#django.utils.timezone.activate&quot;&gt;&lt;code&gt;activate()&lt;/code&gt;&lt;/a&gt;. Otherwise, the default time zone is used.</source>
          <target state="translated">Вы должны установить текущий часовой пояс на фактический часовой пояс конечного пользователя с помощью &lt;a href=&quot;../../ref/utils#django.utils.timezone.activate&quot;&gt; &lt;code&gt;activate()&lt;/code&gt; &lt;/a&gt; . В противном случае используется часовой пояс по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5f8bd1c83ab80f9197fc83be402343a4d3f545f7" translate="yes" xml:space="preserve">
          <source>You should think of migrations as a version control system for your database schema. &lt;code&gt;makemigrations&lt;/code&gt; is responsible for packaging up your model changes into individual migration files - analogous to commits - and &lt;code&gt;migrate&lt;/code&gt; is responsible for applying those to your database.</source>
          <target state="translated">Вы должны думать о миграциях как о системе контроля версий для вашей схемы базы данных. &lt;code&gt;makemigrations&lt;/code&gt; отвечает за упаковку изменений модели в отдельные файлы миграции - аналогично фиксации - и &lt;code&gt;migrate&lt;/code&gt; отвечает за их применение к вашей базе данных.</target>
        </trans-unit>
        <trans-unit id="03820a1270244013582124a0643692bc25423dae" translate="yes" xml:space="preserve">
          <source>You shouldn&amp;rsquo;t alter settings in your applications at runtime. For example, don&amp;rsquo;t do this in a view:</source>
          <target state="translated">Вы не должны изменять настройки в своих приложениях во время выполнения. Например, не делайте этого в представлении:</target>
        </trans-unit>
        <trans-unit id="7500a54703d8bfeda02d7a220a1ade466104249c" translate="yes" xml:space="preserve">
          <source>You shouldn&amp;rsquo;t go over the top with string interpolation, though: this is still JavaScript, so the code has to make repeated regular-expression substitutions. This isn&amp;rsquo;t as fast as string interpolation in Python, so keep it to those cases where you really need it (for example, in conjunction with &lt;code&gt;ngettext&lt;/code&gt; to produce proper pluralizations).</source>
          <target state="translated">Вы не должны перебирать строковую интерполяцию, хотя: это все еще JavaScript, поэтому код должен делать повторные замены регулярных выражений. Это не так быстро, как строковая интерполяция в Python, поэтому держите ее в тех случаях, когда она вам действительно нужна (например, в сочетании с &lt;code&gt;ngettext&lt;/code&gt; для получения правильных множественных чисел).</target>
        </trans-unit>
        <trans-unit id="5f3b3ec814a2f1b1cb9acf2492341f6af1aa4422" translate="yes" xml:space="preserve">
          <source>You use this framework on your own, for lower-level feed generation. You can also create custom feed generator subclasses for use with the &lt;code&gt;feed_type&lt;/code&gt;&lt;code&gt;Feed&lt;/code&gt; option.</source>
          <target state="translated">Вы используете этот фреймворк самостоятельно для генерации корма более низкого уровня. Вы также можете создавать собственные подклассы генератора каналов для использования с параметром &lt;code&gt;feed_type&lt;/code&gt; &lt;code&gt;Feed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b12803007d5326f9ce249abaccf576d4ee6e370" translate="yes" xml:space="preserve">
          <source>You use two views in your URLconf: &lt;a href=&quot;#django.contrib.sitemaps.views.index&quot;&gt;&lt;code&gt;django.contrib.sitemaps.views.index()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt;&lt;code&gt;django.contrib.sitemaps.views.sitemap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В вашем URLconf используются два представления: &lt;a href=&quot;#django.contrib.sitemaps.views.index&quot;&gt; &lt;code&gt;django.contrib.sitemaps.views.index()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt; &lt;code&gt;django.contrib.sitemaps.views.sitemap()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99668dc339f9629f6b61dad3f7a3b2a87c621bea" translate="yes" xml:space="preserve">
          <source>You usually won&amp;rsquo;t construct &lt;code&gt;Page&lt;/code&gt; objects by hand &amp;ndash; you&amp;rsquo;ll get them using &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;Paginator.page()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обычно вы не будете создавать объекты &lt;code&gt;Page&lt;/code&gt; вручную - вы получите их с помощью &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt; &lt;code&gt;Paginator.page()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1aee42ad8de444f885e3a2ba328cd79b07bc1fdd" translate="yes" xml:space="preserve">
          <source>You want to prefetch only a subset of the related objects.</source>
          <target state="translated">Вы хотите предварительно получить только подмножество связанных объектов.</target>
        </trans-unit>
        <trans-unit id="64b0c7e6892abd7b9e75592d3cffbb0c82900a48" translate="yes" xml:space="preserve">
          <source>You want to use a &lt;code&gt;QuerySet&lt;/code&gt; that performs further prefetching on related models.</source>
          <target state="translated">Вы хотите использовать &lt;code&gt;QuerySet&lt;/code&gt; , который выполняет дальнейшую предварительную выборку для связанных моделей.</target>
        </trans-unit>
        <trans-unit id="3fa7e2731c526fe5bc633cacc40d27a99bb579eb" translate="yes" xml:space="preserve">
          <source>You want to use performance optimization techniques like &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;deferred fields&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы хотите использовать методы оптимизации производительности, такие как &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;deferred fields&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="95cc768d7b9938e3b0067137eb755b28e1489989" translate="yes" xml:space="preserve">
          <source>You will also have to modify the &lt;code&gt;PATH&lt;/code&gt; in your &lt;code&gt;.profile&lt;/code&gt; so that the MacPorts programs are accessible from the command-line:</source>
          <target state="translated">Вам также придется изменить &lt;code&gt;PATH&lt;/code&gt; в вашем &lt;code&gt;.profile&lt;/code&gt; , чтобы программы MacPorts были доступны из командной строки:</target>
        </trans-unit>
        <trans-unit id="bfb36d78d0e7d2f0faef2b1973b311ec1267aa94" translate="yes" xml:space="preserve">
          <source>You will also need to register your custom user model with the admin. If your custom user model extends &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt;, you can use Django&amp;rsquo;s existing &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; class. However, if your user model extends &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;ll need to define a custom &lt;code&gt;ModelAdmin&lt;/code&gt; class. It may be possible to subclass the default &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt;; however, you&amp;rsquo;ll need to override any of the definitions that refer to fields on &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; that aren&amp;rsquo;t on your custom user class.</source>
          <target state="translated">Вам также необходимо зарегистрировать свою пользовательскую модель у администратора. Если ваша пользовательская модель расширяет &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; , вы можете использовать существующий класс &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; в Django . Однако если ваша пользовательская модель расширяет &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt; , вам необходимо определить собственный класс &lt;code&gt;ModelAdmin&lt;/code&gt; . Может быть возможно создать подкласс по умолчанию &lt;code&gt;django.contrib.auth.admin.UserAdmin&lt;/code&gt; ; однако вам нужно переопределить любое из определений, которые ссылаются на поля в &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; , которые не входят в ваш пользовательский класс пользователя.</target>
        </trans-unit>
        <trans-unit id="5927c8a107c0310ccb1baa29bff741de5105d371" translate="yes" xml:space="preserve">
          <source>You will be prompted for a password. After you enter one, the user will be created immediately. If you leave off the &lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-username&quot;&gt;&lt;code&gt;--username&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-email&quot;&gt;&lt;code&gt;--email&lt;/code&gt;&lt;/a&gt; options, it will prompt you for those values.</source>
          <target state="translated">Вам будет предложено ввести пароль. После того, как вы введете один, пользователь будет создан сразу. Если вы &lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-email&quot;&gt; &lt;code&gt;--email&lt;/code&gt; &lt;/a&gt; опции &lt;a href=&quot;../../ref/django-admin#cmdoption-createsuperuser-username&quot;&gt; &lt;code&gt;--username&lt;/code&gt; &lt;/a&gt; или --email , вам будет предложено ввести эти значения.</target>
        </trans-unit>
        <trans-unit id="71d0cff2c2bedd5d4d20fb82cf2eca85b0f3367e" translate="yes" xml:space="preserve">
          <source>You will be prompted to enter your &lt;code&gt;postgres&lt;/code&gt; database superuser password in the &amp;lsquo;Database Connection Information&amp;rsquo; dialog.</source>
          <target state="translated">Вам будет предложено ввести пароль суперпользователя базы данных &lt;code&gt;postgres&lt;/code&gt; в диалоговом окне &amp;laquo;Информация о соединении с базой данных&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ee79800e9637ea75957aa1025048fd84c6b65cfa" translate="yes" xml:space="preserve">
          <source>You will need to modify the &lt;code&gt;PATH&lt;/code&gt; environment variable in your &lt;code&gt;.profile&lt;/code&gt; file so that the new version of Python is used when &lt;code&gt;python&lt;/code&gt; is entered at the command-line:</source>
          <target state="translated">Вам нужно будет изменить &lt;code&gt;PATH&lt;/code&gt; среды PATH в вашем файле &lt;code&gt;.profile&lt;/code&gt; , чтобы при вводе &lt;code&gt;python&lt;/code&gt; из командной строки использовалась новая версия Python :</target>
        </trans-unit>
        <trans-unit id="1ea91a496e4c0af9b478f843098ea31c5aaf0085" translate="yes" xml:space="preserve">
          <source>You will rarely need to use &lt;code&gt;Value()&lt;/code&gt; directly. When you write the expression &lt;code&gt;F('field') + 1&lt;/code&gt;, Django implicitly wraps the &lt;code&gt;1&lt;/code&gt; in a &lt;code&gt;Value()&lt;/code&gt;, allowing simple values to be used in more complex expressions. You will need to use &lt;code&gt;Value()&lt;/code&gt; when you want to pass a string to an expression. Most expressions interpret a string argument as the name of a field, like &lt;code&gt;Lower('name')&lt;/code&gt;.</source>
          <target state="translated">Вам редко понадобится использовать &lt;code&gt;Value()&lt;/code&gt; напрямую. Когда вы пишете выражение &lt;code&gt;F('field') + 1&lt;/code&gt; , Django неявно оборачивает &lt;code&gt;1&lt;/code&gt; в &lt;code&gt;Value()&lt;/code&gt; , позволяя использовать простые значения в более сложных выражениях. Вам нужно будет использовать &lt;code&gt;Value()&lt;/code&gt; когда вы хотите передать строку в выражение. Большинство выражений интерпретируют строковый аргумент как имя поля, например, &lt;code&gt;Lower('name')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8369816f2f4034f90fde135a121b80925a946899" translate="yes" xml:space="preserve">
          <source>You will then be prompted for your desired email address:</source>
          <target state="translated">Затем вам будет предложено ввести желаемый адрес электронной почты:</target>
        </trans-unit>
        <trans-unit id="27b63b6da10286dd6ec41b55d9e753ee0791e1fc" translate="yes" xml:space="preserve">
          <source>You won&amp;rsquo;t be able to run multiple versions of this package (or others with the same name).</source>
          <target state="translated">Вы не сможете запустить несколько версий этого пакета (или других с одинаковым именем).</target>
        </trans-unit>
        <trans-unit id="5115d78f94006e99038594089a118ec896264bf6" translate="yes" xml:space="preserve">
          <source>You would get an error when running &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin
compilemessages&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы получите сообщение об ошибке при запуске &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c6fcb1843b28d6f834a65c102a61edf14950b635" translate="yes" xml:space="preserve">
          <source>You would then define &lt;code&gt;get_coordinate_lookup&lt;/code&gt; appropriately to return a &lt;code&gt;Lookup&lt;/code&gt; subclass which handles the relevant value of &lt;code&gt;dimension&lt;/code&gt;.</source>
          <target state="translated">Затем вы должны соответствующим образом определить &lt;code&gt;get_coordinate_lookup&lt;/code&gt; для возврата подкласса &lt;code&gt;Lookup&lt;/code&gt; , который обрабатывает соответствующее значение &lt;code&gt;dimension&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="041f52de97c5661e544d025f1a45df0999c5e4d3" translate="yes" xml:space="preserve">
          <source>You would then render the formsets as normal. It is important to point out that you need to pass &lt;code&gt;prefix&lt;/code&gt; on both the POST and non-POST cases so that it is rendered and processed correctly.</source>
          <target state="translated">Затем вы должны отобразить формы как обычно. Важно отметить, что вам необходимо передать &lt;code&gt;prefix&lt;/code&gt; как в случае POST, так и в случае не POST, чтобы он правильно отображался и обрабатывался.</target>
        </trans-unit>
        <trans-unit id="5dbcb2becca7f99b77ed99fbf650e148770c5948" translate="yes" xml:space="preserve">
          <source>You would typically want to use both: &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt; changes the language for this thread, and setting the cookie makes this preference persist in future requests.</source>
          <target state="translated">Как правило, вы хотите использовать оба: &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt; изменяет язык для этой темы , а установка cookie позволяет сохранить это предпочтение в будущих запросах.</target>
        </trans-unit>
        <trans-unit id="3843f3177cea20b325a99a2ffc65a41305f1f27b" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;d probably want to use &lt;code&gt;list.insert()&lt;/code&gt; in this case (instead of &lt;code&gt;append()&lt;/code&gt;) because a progress bar handler would need to run &lt;em&gt;before&lt;/em&gt; any other handlers. Remember, the upload handlers are processed in order.</source>
          <target state="translated">Возможно, вы захотите использовать &lt;code&gt;list.insert()&lt;/code&gt; в этом случае (вместо &lt;code&gt;append()&lt;/code&gt; ), потому что обработчик индикатора выполнения должен запускаться &lt;em&gt;перед&lt;/em&gt; любыми другими обработчиками. Помните, что обработчики загрузки обрабатываются по порядку.</target>
        </trans-unit>
        <trans-unit id="4824fad39b41ec8f22e6d18f4beed583fc22b87a" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also usually want to use hooks specifically designed for custom storage objects. These are:</source>
          <target state="translated">Вы также обычно захотите использовать хуки, специально предназначенные для пользовательских объектов хранения. Эти:</target>
        </trans-unit>
        <trans-unit id="541244e521c3af06e699839c56026971312d328e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll always want to define this method; the default isn&amp;rsquo;t very helpful at all.</source>
          <target state="translated">Вы всегда будете хотеть определить этот метод; значение по умолчанию не очень полезно.</target>
        </trans-unit>
        <trans-unit id="27d2836d3a2911117c3d7fb103903b0f279eda21" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll follow this pattern &amp;ndash; create a model admin class, then pass it as the second argument to &lt;code&gt;admin.site.register()&lt;/code&gt; &amp;ndash; any time you need to change the admin options for a model.</source>
          <target state="translated">Вы будете следовать этому шаблону - создайте класс администратора модели, а затем передайте его в качестве второго аргумента в &lt;code&gt;admin.site.register()&lt;/code&gt; - каждый раз, когда вам нужно изменить параметры администратора для модели.</target>
        </trans-unit>
        <trans-unit id="7475bb89cd3aa1541f42be4a4618e61c815cd06b" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll get a validation error if either of these rules are broken.</source>
          <target state="translated">Вы получите ошибку проверки, если любое из этих правил нарушено.</target>
        </trans-unit>
        <trans-unit id="b96c1a56eac092b24930fb74ff268cf34965c69a" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need a view that renders the template containing the HTML form, and that can supply the &lt;code&gt;current_name&lt;/code&gt; field as appropriate.</source>
          <target state="translated">Вам понадобится представление, которое отображает шаблон, содержащий HTML-форму, и может предоставить поле &lt;code&gt;current_name&lt;/code&gt; в зависимости от ситуации.</target>
        </trans-unit>
        <trans-unit id="17f96d9d09bfced05906e6b83fbb545d0eac2647" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to avoid naming projects after built-in Python or Django components. In particular, this means you should avoid using names like &lt;code&gt;django&lt;/code&gt; (which will conflict with Django itself) or &lt;code&gt;test&lt;/code&gt; (which conflicts with a built-in Python package).</source>
          <target state="translated">Вам нужно избегать именования проектов после встроенных компонентов Python или Django. В частности, это означает, что вам следует избегать использования имен, таких как &lt;code&gt;django&lt;/code&gt; (которые будут конфликтовать с самим Django) или &lt;code&gt;test&lt;/code&gt; (которые конфликтуют со встроенным пакетом Python).</target>
        </trans-unit>
        <trans-unit id="777f94b648ca4ae77d9bff4a91246e29cb2d1180" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to tell Django what your database connection parameters are, and what the name of the database is. Do that by editing the &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting and assigning values to the following keys for the &lt;code&gt;'default'&lt;/code&gt; connection:</source>
          <target state="translated">Вам нужно сообщить Django, каковы параметры подключения к вашей базе данных и как называется база данных. Сделайте это, отредактировав настройку &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; и присвоив значения следующим клавишам для соединения по &lt;code&gt;'default'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5dfb0f2eaf3bfd77f71721e03c29d8dd9105f4e3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll probably want to automate this process, especially if you&amp;rsquo;ve got multiple web servers.</source>
          <target state="translated">Возможно, вы захотите автоматизировать этот процесс, особенно если у вас есть несколько веб-серверов.</target>
        </trans-unit>
        <trans-unit id="ca40649028be7ca4e24500574daec80581811fa7" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see an error like &lt;code&gt;can't adapt type 'dict'&lt;/code&gt; if you skip the first step, or &lt;code&gt;type &quot;hstore&quot; does not exist&lt;/code&gt; if you skip the second.</source>
          <target state="translated">Вы увидите ошибку, например, &lt;code&gt;can't adapt type 'dict'&lt;/code&gt; если пропустить первый шаг, или &lt;code&gt;type &quot;hstore&quot; does not exist&lt;/code&gt; если пропустить второй.</target>
        </trans-unit>
        <trans-unit id="ffde5f8a67008b861ca255755b9d695093b429a6" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see the following output on the command line:</source>
          <target state="translated">Вы увидите следующий вывод в командной строке:</target>
        </trans-unit>
        <trans-unit id="1bfd04696fa05a962f4b68788f6ea449edd84ecc" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll store this data in a &lt;code&gt;fixtures&lt;/code&gt; directory inside your app.</source>
          <target state="translated">Вы будете хранить эти данные в каталоге &lt;code&gt;fixtures&lt;/code&gt; внутри вашего приложения.</target>
        </trans-unit>
        <trans-unit id="4e336e8bd2a1256538f0a9ac1b425523455070ae" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re certainly developing your project with &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG = True&lt;/code&gt;&lt;/a&gt;, since this enables handy features like full tracebacks in your browser.</source>
          <target state="translated">Вы, безусловно, разрабатываете свой проект с &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG = True&lt;/code&gt; &lt;/a&gt; , так как это позволяет использовать удобные функции, такие как полная обратная связь в вашем браузере.</target>
        </trans-unit>
        <trans-unit id="ea5dd3c4a1ec2c486cf0580c10ea965890f53b95" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re free to override these methods (and any other model method) to alter behavior.</source>
          <target state="translated">Вы можете переопределить эти методы (и любой другой метод модели), чтобы изменить поведение.</target>
        </trans-unit>
        <trans-unit id="66b12535581a32d807a5914676d575f63e52c396" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re sharding your database.</source>
          <target state="translated">Вы шардируете свою базу данных.</target>
        </trans-unit>
        <trans-unit id="7a56f46d4f0adf7de976daee72a9819ce14ff3ac" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve got three options to install Django:</source>
          <target state="translated">У вас есть три варианта установки Django:</target>
        </trans-unit>
        <trans-unit id="642ebedbd999bf41d8d32d99363e9be1989a6bdd" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve started the Django development server, a lightweight Web server written purely in Python. We&amp;rsquo;ve included this with Django so you can develop things rapidly, without having to deal with configuring a production server &amp;ndash; such as Apache &amp;ndash; until you&amp;rsquo;re ready for production.</source>
          <target state="translated">Вы запустили сервер разработки Django, облегченный веб-сервер, написанный исключительно на Python. Мы включили это в Django, чтобы вы могли быстро разрабатывать вещи, не занимаясь настройкой производственного сервера, такого как Apache, до тех пор, пока вы не будете готовы к работе.</target>
        </trans-unit>
        <trans-unit id="521883294a770c020d24fc3530c31fab242abb45" translate="yes" xml:space="preserve">
          <source>Your &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting includes &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ваш &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; установка включает в себя &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt; &lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb5e96453c72d1c9b41ca1c58121ae43c36e82e3" translate="yes" xml:space="preserve">
          <source>Your Django app is behind a proxy.</source>
          <target state="translated">Ваше приложение &quot;Джанго&quot; находится за прокси-сервером.</target>
        </trans-unit>
        <trans-unit id="6ead75f50857d1ee21c78ff01b852953a340bd26" translate="yes" xml:space="preserve">
          <source>Your Django website may sit behind a &lt;em&gt;proxy cache&lt;/em&gt;, such as Squid Web Proxy Cache (&lt;a href=&quot;http://www.squid-cache.org/&quot;&gt;http://www.squid-cache.org/&lt;/a&gt;), that caches pages for performance. In this case, each request first would be handled by the proxy, and it would be passed to your application only if needed.</source>
          <target state="translated">Ваш сайт Django может находиться за &lt;em&gt;прокси-кешем&lt;/em&gt; , таким как Squid Web Proxy Cache ( &lt;a href=&quot;http://www.squid-cache.org/&quot;&gt;http://www.squid-cache.org/&lt;/a&gt; ), который кэширует страницы для повышения производительности. В этом случае каждый запрос сначала обрабатывается прокси-сервером, и он будет передан вашему приложению только в случае необходимости.</target>
        </trans-unit>
        <trans-unit id="154c03d98a50e7a79e2b93fa58dd088c6309421e" translate="yes" xml:space="preserve">
          <source>Your ISP may cache certain pages, so if you requested a page from &lt;a href=&quot;https://example.com/&quot;&gt;https://example.com/&lt;/a&gt;, your ISP would send you the page without having to access example.com directly. The maintainers of example.com have no knowledge of this caching; the ISP sits between example.com and your Web browser, handling all of the caching transparently.</source>
          <target state="translated">Ваш интернет-провайдер может кэшировать определенные страницы, поэтому, если вы запросили страницу с &lt;a href=&quot;https://example.com/&quot;&gt;https://example.com/&lt;/a&gt; , ваш интернет-провайдер отправит вам страницу без прямого доступа к example.com. Сопровождающие example.com не знают об этом кешировании; Интернет-провайдер находится между example.com и вашим веб-браузером, обеспечивая прозрачную обработку всего кэширования.</target>
        </trans-unit>
        <trans-unit id="7775de4ff87516298ac9f5966088472728cbc51e" translate="yes" xml:space="preserve">
          <source>Your Web browser caches pages, too. If a Web page sends out the appropriate headers, your browser will use the local cached copy for subsequent requests to that page, without even contacting the Web page again to see whether it has changed.</source>
          <target state="translated">Ваш веб-браузер тоже кэширует страницы.Если веб-страница посылает соответствующие заголовки,Ваш браузер будет использовать локальную кэшированную копию для последующих запросов к этой странице,даже не связываясь с веб-страницей снова,чтобы узнать,изменилась ли она.</target>
        </trans-unit>
        <trans-unit id="5b702ee97960a5da03d973d7daa7af569414e918" translate="yes" xml:space="preserve">
          <source>Your applications can take advantage of the signal infrastructure and provide its own signals.</source>
          <target state="translated">Ваши приложения могут воспользоваться преимуществами инфраструктуры сигналов и предоставлять свои собственные сигналы.</target>
        </trans-unit>
        <trans-unit id="3f228106f753fbca94aa295b0c67389e63164f55" translate="yes" xml:space="preserve">
          <source>Your apps can live anywhere on your &lt;a href=&quot;https://docs.python.org/3/tutorial/modules.html#tut-searchpath&quot;&gt;Python path&lt;/a&gt;. In this tutorial, we&amp;rsquo;ll create our poll app right next to your &lt;code&gt;manage.py&lt;/code&gt; file so that it can be imported as its own top-level module, rather than a submodule of &lt;code&gt;mysite&lt;/code&gt;.</source>
          <target state="translated">Ваши приложения могут жить где угодно на вашем &lt;a href=&quot;https://docs.python.org/3/tutorial/modules.html#tut-searchpath&quot;&gt;пути Python&lt;/a&gt; . В этом руководстве мы создадим наше приложение для опроса рядом с вашим файлом &lt;code&gt;manage.py&lt;/code&gt; , чтобы его можно было импортировать как собственный модуль верхнего уровня, а не как подмодуль &lt;code&gt;mysite&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e62349a6655168c01b0910450ddc722907db5cf" translate="yes" xml:space="preserve">
          <source>Your cache preference goes in the &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting in your settings file. Here&amp;rsquo;s an explanation of all available values for &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ваши настройки кэша &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt; настройках CACHES в вашем файле настроек. Вот объяснение всех доступных значений для &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7487082dfb3e807a80698d0970aa81b008596701" translate="yes" xml:space="preserve">
          <source>Your callbacks are executed &lt;em&gt;after&lt;/em&gt; a successful commit, so a failure in a callback will not cause the transaction to roll back. They are executed conditionally upon the success of the transaction, but they are not &lt;em&gt;part&lt;/em&gt; of the transaction. For the intended use cases (mail notifications, Celery tasks, etc.), this should be fine. If it&amp;rsquo;s not (if your follow-up action is so critical that its failure should mean the failure of the transaction itself), then you don&amp;rsquo;t want to use the &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; hook. Instead, you may want &lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;two-phase commit&lt;/a&gt; such as the &lt;a href=&quot;https://www.psycopg.org/docs/usage.html#tpc&quot;&gt;psycopg Two-Phase Commit protocol support&lt;/a&gt; and the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249/#optional-two-phase-commit-extensions&quot;&gt;optional Two-Phase Commit Extensions in the Python DB-API specification&lt;/a&gt;.</source>
          <target state="translated">Ваши обратные вызовы выполняются &lt;em&gt;после&lt;/em&gt; успешной фиксации, поэтому сбой в обратном вызове не приведет к откату транзакции. Они выполняются при условии успешной транзакции, но они не являются &lt;em&gt;частью&lt;/em&gt; транзакции. Для предполагаемых вариантов использования (почтовые уведомления, задачи Celery и т. Д.) Это должно подойти. Если это не так (если ваше последующее действие настолько критично, что его провал должен означать провал самой транзакции), то вы не хотите использовать &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt; . Вместо этого вам может потребоваться &lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;двухфазная фиксация,&lt;/a&gt; такая как &lt;a href=&quot;https://www.psycopg.org/docs/usage.html#tpc&quot;&gt;поддержка протокола psycopg Two-Phase Commit&lt;/a&gt; и &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249/#optional-two-phase-commit-extensions&quot;&gt;дополнительные расширения &lt;/a&gt;двухфазной фиксации в спецификации Python DB-API .</target>
        </trans-unit>
        <trans-unit id="c669b09b4f5cb93380760ab71ad8660dda0671fa" translate="yes" xml:space="preserve">
          <source>Your code should never access &lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; directly. Use &lt;a href=&quot;applications#django.apps.apps&quot;&gt;&lt;code&gt;django.apps.apps&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Ваш код никогда не должен обращаться к &lt;a href=&quot;#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; напрямую. &lt;a href=&quot;applications#django.apps.apps&quot;&gt; &lt;code&gt;django.apps.apps&lt;/code&gt; &lt;/a&gt; этого используйте django.apps.apps .</target>
        </trans-unit>
        <trans-unit id="2607be8e60ba91a580a043da9698fea2af0a30ed" translate="yes" xml:space="preserve">
          <source>Your custom filter class needs to inherit from &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt; and may override the following methods:</source>
          <target state="translated">Ваш пользовательский класс фильтра должен наследоваться от &lt;a href=&quot;#django.views.debug.SafeExceptionReporterFilter&quot;&gt; &lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt; &lt;/a&gt; и может переопределять следующие методы:</target>
        </trans-unit>
        <trans-unit id="4582372aa23126546d8043ee3f25fc9fd8855add" translate="yes" xml:space="preserve">
          <source>Your custom storage system must be a subclass of &lt;code&gt;django.core.files.storage.Storage&lt;/code&gt;:</source>
          <target state="translated">Ваша пользовательская система хранения должна быть подклассом &lt;code&gt;django.core.files.storage.Storage&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e3cefb807c878c56d1faf28965b78efdd7cd67af" translate="yes" xml:space="preserve">
          <source>Your custom tags and filters will live in a module inside the &lt;code&gt;templatetags&lt;/code&gt; directory. The name of the module file is the name you&amp;rsquo;ll use to load the tags later, so be careful to pick a name that won&amp;rsquo;t clash with custom tags and filters in another app.</source>
          <target state="translated">Ваши пользовательские теги и фильтры будут жить в модуле внутри каталога &lt;code&gt;templatetags&lt;/code&gt; . Имя файла модуля - это имя, которое вы будете использовать для загрузки тегов позже, поэтому будьте осторожны, чтобы выбрать имя, которое не будет конфликтовать с пользовательскими тегами и фильтрами в другом приложении.</target>
        </trans-unit>
        <trans-unit id="186f1cfbdfd23f7189b43603d10389fc99cdcce6" translate="yes" xml:space="preserve">
          <source>Your filter does not introduce any HTML-unsafe characters (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt;) into the result that were not already present. In this case, you can let Django take care of all the auto-escaping handling for you. All you need to do is set the &lt;code&gt;is_safe&lt;/code&gt; flag to &lt;code&gt;True&lt;/code&gt; when you register your filter function, like so:</source>
          <target state="translated">Ваш фильтр не вводит небезопасных символов HTML ( &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; , &lt;code&gt;&quot;&lt;/code&gt; или &lt;code&gt;&amp;amp;&lt;/code&gt; ) в результат, которого еще не было. В этом случае вы можете позволить Django позаботиться обо всей обработке авто-экранирования за вас. Все, что вам нужно сделать, это установить флаг &lt;code&gt;is_safe&lt;/code&gt; в &lt;code&gt;True&lt;/code&gt; , когда вы регистрируете свою функцию фильтра, вот так:</target>
        </trans-unit>
        <trans-unit id="82fca4d10504438a92b6d12cd6c6cadbfa863790" translate="yes" xml:space="preserve">
          <source>Your intermediate model must contain one - and &lt;em&gt;only&lt;/em&gt; one - foreign key to the source model (this would be &lt;code&gt;Group&lt;/code&gt; in our example), or you must explicitly specify the foreign keys Django should use for the relationship using &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through_fields&quot;&gt;&lt;code&gt;ManyToManyField.through_fields&lt;/code&gt;&lt;/a&gt;. If you have more than one foreign key and &lt;code&gt;through_fields&lt;/code&gt; is not specified, a validation error will be raised. A similar restriction applies to the foreign key to the target model (this would be &lt;code&gt;Person&lt;/code&gt; in our example).</source>
          <target state="translated">Ваша промежуточная модель должна содержать один - и &lt;em&gt;только&lt;/em&gt; один - внешний ключ к исходной модели ( в нашем примере это будет &lt;code&gt;Group&lt;/code&gt; ), или вы должны явно указать внешние ключи, которые Django должен использовать для отношений, используя &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through_fields&quot;&gt; &lt;code&gt;ManyToManyField.through_fields&lt;/code&gt; &lt;/a&gt; . Если у вас есть более одного внешнего ключа и не указано значение &lt;code&gt;through_fields&lt;/code&gt; ,возникнет ошибка проверки. Аналогичное ограничение применяется к внешнему ключу целевой модели ( в нашем примере это будет &lt;code&gt;Person&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e9d3fd950b3aba4145e99f59e8fa814afd44c6fe" translate="yes" xml:space="preserve">
          <source>Your models will be scanned and compared to the versions currently contained in your migration files, and then a new set of migrations will be written out. Make sure to read the output to see what &lt;code&gt;makemigrations&lt;/code&gt; thinks you have changed - it&amp;rsquo;s not perfect, and for complex changes it might not be detecting what you expect.</source>
          <target state="translated">Ваши модели будут отсканированы и сравнены с версиями, содержащимися в настоящее время в ваших файлах миграции, а затем будет записан новый набор миграций. Обязательно прочитайте вывод, чтобы увидеть, что &lt;code&gt;makemigrations&lt;/code&gt; думает, что вы изменились - он не идеален, и для сложных изменений он может не обнаружить то, что вы ожидаете.</target>
        </trans-unit>
        <trans-unit id="a2f909199452c8d0c9082e212b7c94f3eb525b1b" translate="yes" xml:space="preserve">
          <source>Your project and your reusable app</source>
          <target state="translated">Ваш проект и ваше многоразовое приложение</target>
        </trans-unit>
        <trans-unit id="0fe9affe7a6c59487fbb557ebc8a0bb7248a09d6" translate="yes" xml:space="preserve">
          <source>Your project will probably also have static assets that aren&amp;rsquo;t tied to a particular app. In addition to using a &lt;code&gt;static/&lt;/code&gt; directory inside your apps, you can define a list of directories (&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt;) in your settings file where Django will also look for static files. For example:</source>
          <target state="translated">Ваш проект, вероятно, также будет иметь статические активы, которые не привязаны к конкретному приложению. Помимо использования каталога &lt;code&gt;static/&lt;/code&gt; внутри ваших приложений, вы можете определить список каталогов ( &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt; ) в файле настроек, где Django также будет искать статические файлы. Например:</target>
        </trans-unit>
        <trans-unit id="d538712ca89c1fdbdb8ffa4ed96a85150b8d7af3" translate="yes" xml:space="preserve">
          <source>Your project&amp;rsquo;s &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting describes how Django will load and render templates. The default settings file configures a &lt;code&gt;DjangoTemplates&lt;/code&gt; backend whose &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; option is set to &lt;code&gt;True&lt;/code&gt;. By convention &lt;code&gt;DjangoTemplates&lt;/code&gt; looks for a &amp;ldquo;templates&amp;rdquo; subdirectory in each of the &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; вашего проекта описывает, как Django будет загружать и отображать шаблоны. Файл настроек по умолчанию настраивает &lt;code&gt;DjangoTemplates&lt;/code&gt; которой &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt; &lt;code&gt;APP_DIRS&lt;/code&gt; &lt;/a&gt; параметра APP_DIRS задано значение &lt;code&gt;True&lt;/code&gt; . По соглашению &lt;code&gt;DjangoTemplates&lt;/code&gt; ищет подкаталог &amp;laquo;templates&amp;raquo; в каждом из &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="342ece2a4ed462604b588597beab24c86478817c" translate="yes" xml:space="preserve">
          <source>Your proxy sets the &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; header and sends it to Django, but only for requests that originally come in via HTTPS.</source>
          <target state="translated">Ваш прокси устанавливает заголовок &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; и отправляет его в Django, но только для запросов, которые изначально приходят через HTTPS.</target>
        </trans-unit>
        <trans-unit id="d0181e47c5df19b41a87db9e5c9ab20af49f0bc5" translate="yes" xml:space="preserve">
          <source>Your proxy strips the &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; header from all incoming requests. In other words, if end users include that header in their requests, the proxy will discard it.</source>
          <target state="translated">Ваш прокси удаляет заголовок &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; из всех входящих запросов. Другими словами, если конечные пользователи включают этот заголовок в свои запросы, прокси-сервер его отбрасывает.</target>
        </trans-unit>
        <trans-unit id="ec6e8e0cc8d7aa25898348285aeeff877f0e0356" translate="yes" xml:space="preserve">
          <source>Your serializer class must implement two methods, &lt;code&gt;dumps(self, obj)&lt;/code&gt; and &lt;code&gt;loads(self, data)&lt;/code&gt;, to serialize and deserialize the dictionary of session data, respectively.</source>
          <target state="translated">Ваш класс сериализатора должен реализовать два метода, &lt;code&gt;dumps(self, obj)&lt;/code&gt; и &lt;code&gt;loads(self, data)&lt;/code&gt; , для сериализации и десериализации словаря данных сеанса соответственно.</target>
        </trans-unit>
        <trans-unit id="45336c5a09177d971594412e3b54a53bfa2ab040" translate="yes" xml:space="preserve">
          <source>Your storage class must be &lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;deconstructible&lt;/a&gt; so it can be serialized when it&amp;rsquo;s used on a field in a migration. As long as your field has arguments that are themselves &lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;serializable&lt;/a&gt;, you can use the &lt;code&gt;django.utils.deconstruct.deconstructible&lt;/code&gt; class decorator for this (that&amp;rsquo;s what Django uses on FileSystemStorage).</source>
          <target state="translated">Ваш класс хранения должен быть &lt;a href=&quot;../topics/migrations#custom-deconstruct-method&quot;&gt;деконструируемым,&lt;/a&gt; чтобы его можно было сериализовать при использовании в поле в миграции. Пока ваше поле имеет аргументы, которые сами по себе являются &lt;a href=&quot;../topics/migrations#migration-serializing&quot;&gt;сериализуемыми&lt;/a&gt; , вы можете использовать для этого декоратор класса &lt;code&gt;django.utils.deconstruct.deconstructible&lt;/code&gt; (именно это Django использует в FileSystemStorage).</target>
        </trans-unit>
        <trans-unit id="05e3770a2c4252cfa20bfa05b921289ab8ed460a" translate="yes" xml:space="preserve">
          <source>Your storage class must implement the &lt;a href=&quot;#django.core.files.storage._open&quot;&gt;&lt;code&gt;_open()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.core.files.storage._save&quot;&gt;&lt;code&gt;_save()&lt;/code&gt;&lt;/a&gt; methods, along with any other methods appropriate to your storage class. See below for more on these methods.</source>
          <target state="translated">Ваш класс хранения должен реализовывать &lt;a href=&quot;#django.core.files.storage._open&quot;&gt; &lt;code&gt;_open()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.core.files.storage._save&quot;&gt; &lt;code&gt;_save()&lt;/code&gt; &lt;/a&gt; , а также любые другие методы, соответствующие вашему классу хранения. Подробнее об этих методах см. Ниже.</target>
        </trans-unit>
        <trans-unit id="6446b2f31846a5dbac76ab4050077dd2c8544531" translate="yes" xml:space="preserve">
          <source>Your templates can go anywhere you want, as long as the directories and templates are readable by the Web server. They can have any extension you want, such as &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.txt&lt;/code&gt;, or they can have no extension at all.</source>
          <target state="translated">Ваши шаблоны могут идти куда угодно, если каталоги и шаблоны доступны для чтения веб-сервером. Они могут иметь любое желаемое расширение, например &lt;code&gt;.html&lt;/code&gt; или &lt;code&gt;.txt&lt;/code&gt; , или вообще не иметь расширения.</target>
        </trans-unit>
        <trans-unit id="126e0677cb0d036d94b7ece5ab0a1ba05b090425" translate="yes" xml:space="preserve">
          <source>Your test runner may also define additional command-line options. Create or override an &lt;code&gt;add_arguments(cls, parser)&lt;/code&gt; class method and add custom arguments by calling &lt;code&gt;parser.add_argument()&lt;/code&gt; inside the method, so that the &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; command will be able to use those arguments.</source>
          <target state="translated">Ваш тестовый участник может также определить дополнительные параметры командной строки. Создайте или переопределите метод класса &lt;code&gt;add_arguments(cls, parser)&lt;/code&gt; и добавьте пользовательские аргументы, вызвав &lt;code&gt;parser.add_argument()&lt;/code&gt; внутри метода, чтобы &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; команда могла использовать эти аргументы.</target>
        </trans-unit>
        <trans-unit id="66534fe28baecde291440d1601c256f394fe5c56" translate="yes" xml:space="preserve">
          <source>Your view can read records from a database, or not. It can use a template system such as Django&amp;rsquo;s &amp;ndash; or a third-party Python template system &amp;ndash; or not. It can generate a PDF file, output XML, create a ZIP file on the fly, anything you want, using whatever Python libraries you want.</source>
          <target state="translated">Ваш вид может читать записи из базы данных, или нет. Он может использовать систему шаблонов, такую ​​как Django - или стороннюю систему шаблонов Python - или нет. Он может генерировать PDF-файл, выводить XML, создавать ZIP-файл на лету, все, что угодно, используя любые библиотеки Python, которые вы хотите.</target>
        </trans-unit>
        <trans-unit id="4d15dd1a6eff3fe899f5f4a214e6329106f0b39d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; corresponding to the spatial data in the file</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; соответствующих пространственных данных в файле</target>
        </trans-unit>
        <trans-unit id="706650edfdad47d78e876ed3f60fac64b36a8968" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; corresponding to the spatial data in the string</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; соответствующих пространственных данных в строке</target>
        </trans-unit>
        <trans-unit id="f5633070c0d5605cf8d4bc901909b869eacdb78d" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;ContentType&lt;/code&gt; for each model (including those not stored in that database),</source>
          <target state="translated">&lt;code&gt;ContentType&lt;/code&gt; для каждой модели ( в том числе и те , которые не хранятся в этой базе данных),</target>
        </trans-unit>
        <trans-unit id="ae9f4a2aeedaaa5e2cbda832b26457c441627c8c" translate="yes" xml:space="preserve">
          <source>a class inheriting from &lt;code&gt;django.contrib.admin.SimpleListFilter&lt;/code&gt;, which you need to provide the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;parameter_name&lt;/code&gt; attributes to and override the &lt;code&gt;lookups&lt;/code&gt; and &lt;code&gt;queryset&lt;/code&gt; methods, e.g.:</source>
          <target state="translated">класс, унаследованный от &lt;code&gt;django.contrib.admin.SimpleListFilter&lt;/code&gt; , который необходим для предоставления атрибутов &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;parameter_name&lt;/code&gt; для и переопределения методов &lt;code&gt;lookups&lt;/code&gt; и &lt;code&gt;queryset&lt;/code&gt; запросов , например:</target>
        </trans-unit>
        <trans-unit id="632bfa546ff317df34edcd0952b1544a09e39344" translate="yes" xml:space="preserve">
          <source>a datetime generated by your code, which is naive (or you wouldn&amp;rsquo;t be reading this).</source>
          <target state="translated">дата-время, сгенерированное вашим кодом, что наивно (иначе вы бы этого не читали).</target>
        </trans-unit>
        <trans-unit id="61c1642991dc0c3d6e3a730407c02a242b02998d" translate="yes" xml:space="preserve">
          <source>a datetime provided by Django &amp;ndash; for instance, a value read from a form or a model field. Since you enabled time zone support, it&amp;rsquo;s aware.</source>
          <target state="translated">datetime, предоставляемый Django - например, значение, считанное из формы или поля модели. Так как вы включили поддержку часового пояса, это известно.</target>
        </trans-unit>
        <trans-unit id="3143bfabc9efee23e9b15bad9c023733030232c7" translate="yes" xml:space="preserve">
          <source>a default &lt;code&gt;Site&lt;/code&gt;,</source>
          <target state="translated">По умолчанию &lt;code&gt;Site&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="c92dd7d435daa8a71f5126218aba1db7bc754172" translate="yes" xml:space="preserve">
          <source>a field name, where the specified field should be either a &lt;code&gt;BooleanField&lt;/code&gt;, &lt;code&gt;CharField&lt;/code&gt;, &lt;code&gt;DateField&lt;/code&gt;, &lt;code&gt;DateTimeField&lt;/code&gt;, &lt;code&gt;IntegerField&lt;/code&gt;, &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;ManyToManyField&lt;/code&gt;, for example:</source>
          <target state="translated">имя поля, где указанное поле должно быть &lt;code&gt;BooleanField&lt;/code&gt; , &lt;code&gt;CharField&lt;/code&gt; , &lt;code&gt;DateField&lt;/code&gt; , &lt;code&gt;DateTimeField&lt;/code&gt; , &lt;code&gt;IntegerField&lt;/code&gt; , &lt;code&gt;ForeignKey&lt;/code&gt; или &lt;code&gt;ManyToManyField&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="12b23a7f139880ad78626b913255755c03939b98" translate="yes" xml:space="preserve">
          <source>a list of arguments accepted by the command. Arguments are passed to the argument parser, so you can use the same style as you would on the command line. For example, &lt;code&gt;call_command('flush', '--verbosity=0')&lt;/code&gt;.</source>
          <target state="translated">список аргументов, принятых командой. Аргументы передаются в анализатор аргументов, поэтому вы можете использовать тот же стиль, что и в командной строке. Например, &lt;code&gt;call_command('flush', '--verbosity=0')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a947b00f57c082ac65026a7ba785dfea20ba0951" translate="yes" xml:space="preserve">
          <source>a package containing an application.</source>
          <target state="translated">пакет,содержащий приложение.</target>
        </trans-unit>
        <trans-unit id="dc779a8e0fa7a22ab09f80b16f211c08efa09e39" translate="yes" xml:space="preserve">
          <source>a separate &lt;code&gt;TestClass&lt;/code&gt; for each model or view</source>
          <target state="translated">отдельный &lt;code&gt;TestClass&lt;/code&gt; для каждой модели или вида</target>
        </trans-unit>
        <trans-unit id="cb7aaf461c012dfd6c6abe570b9d0251b343aa07" translate="yes" xml:space="preserve">
          <source>a separate test method for each set of conditions you want to test</source>
          <target state="translated">отдельный метод тестирования для каждого набора условий,которые вы хотите проверить.</target>
        </trans-unit>
        <trans-unit id="9985eddf03a0c87890ba34473f141e960e6fd714" translate="yes" xml:space="preserve">
          <source>a tuple, where the first element is a field name and the second element is a class inheriting from &lt;code&gt;django.contrib.admin.FieldListFilter&lt;/code&gt;, for example:</source>
          <target state="translated">кортеж, где первый элемент - это имя поля, а второй - класс, унаследованный от &lt;code&gt;django.contrib.admin.FieldListFilter&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="d62b1a8a4a92a0a6044fc394d033aa89c8bdff1f" translate="yes" xml:space="preserve">
          <source>accounts/hashers.py</source>
          <target state="translated">accounts/hashers.py</target>
        </trans-unit>
        <trans-unit id="0f6d0b8c14dfbc6af3d140c22bf6ab39cc301b47" translate="yes" xml:space="preserve">
          <source>accounts/migrations/0002_migrate_sha1_passwords.py</source>
          <target state="translated">accounts/migrations/0002_migrate_sha1_passwords.py</target>
        </trans-unit>
        <trans-unit id="148d1dd378f1b8310115945d16bc362d942772b3" translate="yes" xml:space="preserve">
          <source>add: &lt;code&gt;user.has_perm('foo.add_bar')&lt;/code&gt;</source>
          <target state="translated">добавить: &lt;code&gt;user.has_perm('foo.add_bar')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19fa2a7ff76c1775861f064231fb10f04a5ec076" translate="yes" xml:space="preserve">
          <source>admin.AdminSite</source>
          <target state="translated">admin.AdminSite</target>
        </trans-unit>
        <trans-unit id="ef2a9b657f21dcbb281b4fec05ae4c5f0b64e595" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.add_action()</source>
          <target state="translated">admin.AdminSite.add_action()</target>
        </trans-unit>
        <trans-unit id="49638da466d2123fadc75b1d9e66c6a9076b7f41" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.app_index_template</source>
          <target state="translated">admin.AdminSite.app_index_template</target>
        </trans-unit>
        <trans-unit id="360dac1802004886fc4a55d07c86e42f633a2495" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.disable_action()</source>
          <target state="translated">admin.AdminSite.disable_action()</target>
        </trans-unit>
        <trans-unit id="72d2561bdb4c53dd5c93d2a684d148d343810fb5" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.each_context()</source>
          <target state="translated">admin.AdminSite.each_context()</target>
        </trans-unit>
        <trans-unit id="c5a495dadf76bbb29b5cb7eb3815e585316a85f3" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.empty_value_display</source>
          <target state="translated">admin.AdminSite.empty_value_display</target>
        </trans-unit>
        <trans-unit id="7997b6193a579ac159116c7e030689bc680b2f5c" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.has_permission()</source>
          <target state="translated">admin.AdminSite.has_permission()</target>
        </trans-unit>
        <trans-unit id="9571d6dc8f803b744b78c9d70765f6fbf922b4fb" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.index_template</source>
          <target state="translated">admin.AdminSite.index_template</target>
        </trans-unit>
        <trans-unit id="2bb3e78f7bd4b09dd287a00297f909239152cab7" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.index_title</source>
          <target state="translated">admin.AdminSite.index_title</target>
        </trans-unit>
        <trans-unit id="fe60d2e11713bbcf11f416f33249bbd7663419c0" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.login_form</source>
          <target state="translated">admin.AdminSite.login_form</target>
        </trans-unit>
        <trans-unit id="c4e554bea055f6125f332cf2543804ace8c1b26b" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.login_template</source>
          <target state="translated">admin.AdminSite.login_template</target>
        </trans-unit>
        <trans-unit id="2ab2c0c21faad4688648e631c62afb801d714955" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.logout_template</source>
          <target state="translated">admin.AdminSite.logout_template</target>
        </trans-unit>
        <trans-unit id="072afd9c3a2cf4447c4f481084eb12dca7b9f76a" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.password_change_done_template</source>
          <target state="translated">admin.AdminSite.password_change_done_template</target>
        </trans-unit>
        <trans-unit id="caf86d531bd116d68d54dd54d083405820ad5de4" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.password_change_template</source>
          <target state="translated">admin.AdminSite.password_change_template</target>
        </trans-unit>
        <trans-unit id="54fdb16644441a6b826870420d3fc4c054a3502a" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.register()</source>
          <target state="translated">admin.AdminSite.register()</target>
        </trans-unit>
        <trans-unit id="15bad84f33bda8fc958d17acc7f74b8b46131ef6" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.site_header</source>
          <target state="translated">admin.AdminSite.site_header</target>
        </trans-unit>
        <trans-unit id="d11942f8f704749aabb508b5afaa0974b6e8f4f7" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.site_title</source>
          <target state="translated">admin.AdminSite.site_title</target>
        </trans-unit>
        <trans-unit id="d8bb04f2165713048afb39051d10d9bdc2439e07" translate="yes" xml:space="preserve">
          <source>admin.AdminSite.site_url</source>
          <target state="translated">admin.AdminSite.site_url</target>
        </trans-unit>
        <trans-unit id="e8881f9f87c476f31787126a0ab9ddaf3c0c18d7" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin</source>
          <target state="translated">admin.InlineModelAdmin</target>
        </trans-unit>
        <trans-unit id="bd48ddfed7c30e9259f596149ed38d17c76d867f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.can_delete</source>
          <target state="translated">admin.InlineModelAdmin.can_delete</target>
        </trans-unit>
        <trans-unit id="e1efe950d9182c07e171ad00d5ff52421339a364" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.classes</source>
          <target state="translated">admin.InlineModelAdmin.classes</target>
        </trans-unit>
        <trans-unit id="1ecf8f7c25ed4b23bca35865ba776cfd9d665e1a" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.extra</source>
          <target state="translated">admin.InlineModelAdmin.extra</target>
        </trans-unit>
        <trans-unit id="560e520cd3d389dd65f5f3090d8855d26ca62783" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.fk_name</source>
          <target state="translated">admin.InlineModelAdmin.fk_name</target>
        </trans-unit>
        <trans-unit id="aefad253bdc78e3979db55a44046fcd5b943bb95" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.form</source>
          <target state="translated">admin.InlineModelAdmin.form</target>
        </trans-unit>
        <trans-unit id="f5f19a14481777158b3e37424f069c9ede29062f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.formset</source>
          <target state="translated">admin.InlineModelAdmin.formset</target>
        </trans-unit>
        <trans-unit id="82b366daf468a6ee7968e7dc51e7b495c4791de5" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_extra()</source>
          <target state="translated">admin.InlineModelAdmin.get_extra()</target>
        </trans-unit>
        <trans-unit id="58cc757cf49e5ff479a9d1a9dee11469f0a16ee3" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_formset()</source>
          <target state="translated">admin.InlineModelAdmin.get_formset()</target>
        </trans-unit>
        <trans-unit id="ecb5a8da149b9435a30039d3ad8d9c5ff25d601a" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_max_num()</source>
          <target state="translated">admin.InlineModelAdmin.get_max_num()</target>
        </trans-unit>
        <trans-unit id="7ed3bfa47dc235a15662ab70caf0bf71f6f10e7f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.get_min_num()</source>
          <target state="translated">admin.InlineModelAdmin.get_min_num()</target>
        </trans-unit>
        <trans-unit id="cb589b63bcc801924fc9d88a2636301dcb997fa2" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.has_add_permission()</source>
          <target state="translated">admin.InlineModelAdmin.has_add_permission()</target>
        </trans-unit>
        <trans-unit id="22fd9dc751d70fa2fe1c49032ce1a1e2a50b5357" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.has_change_permission()</source>
          <target state="translated">admin.InlineModelAdmin.has_change_permission()</target>
        </trans-unit>
        <trans-unit id="8e07194673ed772b8f05d7771beb15eea4a2a65f" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.has_delete_permission()</source>
          <target state="translated">admin.InlineModelAdmin.has_delete_permission()</target>
        </trans-unit>
        <trans-unit id="108695aa6e880b82dd6d2cfaddbdd1fd862c04a7" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.max_num</source>
          <target state="translated">admin.InlineModelAdmin.max_num</target>
        </trans-unit>
        <trans-unit id="7b42685f5c14f277bf0579e40c079855c9648a1a" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.min_num</source>
          <target state="translated">admin.InlineModelAdmin.min_num</target>
        </trans-unit>
        <trans-unit id="c96c19b374fce721771bf4130de27f5b154ceb59" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.model</source>
          <target state="translated">admin.InlineModelAdmin.model</target>
        </trans-unit>
        <trans-unit id="d4fd31d3248469636efcfff2d665a4b56f306163" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.raw_id_fields</source>
          <target state="translated">admin.InlineModelAdmin.raw_id_fields</target>
        </trans-unit>
        <trans-unit id="1f9dcce010cd84d40f7978b8ff8bd4e88b0d2b1c" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.show_change_link</source>
          <target state="translated">admin.InlineModelAdmin.show_change_link</target>
        </trans-unit>
        <trans-unit id="bf4e14ab1547849f0f2943851539514cdf88f5d2" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.template</source>
          <target state="translated">admin.InlineModelAdmin.template</target>
        </trans-unit>
        <trans-unit id="5dc63e6c56745af576bcdd3b6949fd6465e9b629" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.verbose_name</source>
          <target state="translated">admin.InlineModelAdmin.verbose_name</target>
        </trans-unit>
        <trans-unit id="bd96804de51eb11525b8403a53246d0b3ce0f087" translate="yes" xml:space="preserve">
          <source>admin.InlineModelAdmin.verbose_name_plural</source>
          <target state="translated">admin.InlineModelAdmin.verbose_name_plural</target>
        </trans-unit>
        <trans-unit id="515310c13f05a39b86038b17b500fc410e2ef1e9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin</source>
          <target state="translated">admin.ModelAdmin</target>
        </trans-unit>
        <trans-unit id="10323e8496304b7323da43a534cdcca4bbe40c3b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions</source>
          <target state="translated">admin.ModelAdmin.actions</target>
        </trans-unit>
        <trans-unit id="9a10793b7f7cd601e7d5f851bc02bd362afc8e6c" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions_on_bottom</source>
          <target state="translated">admin.ModelAdmin.actions_on_bottom</target>
        </trans-unit>
        <trans-unit id="8fb7d31136ce75d3ebfc53e59e64c82de89f35d3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions_on_top</source>
          <target state="translated">admin.ModelAdmin.actions_on_top</target>
        </trans-unit>
        <trans-unit id="98d00dbe24ec12505bc68c762de95369c0ab4eda" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.actions_selection_counter</source>
          <target state="translated">admin.ModelAdmin.actions_selection_counter</target>
        </trans-unit>
        <trans-unit id="28d07e42512a3df18184000d1492dc38a39ca02b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.add_form_template</source>
          <target state="translated">admin.ModelAdmin.add_form_template</target>
        </trans-unit>
        <trans-unit id="d7fd21730723f37895588d920f0d95ab6274d082" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.add_view()</source>
          <target state="translated">admin.ModelAdmin.add_view()</target>
        </trans-unit>
        <trans-unit id="9b73116862ae836a2df6173ae153384c15364301" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.autocomplete_fields</source>
          <target state="translated">admin.ModelAdmin.autocomplete_fields</target>
        </trans-unit>
        <trans-unit id="18736d73435877b62407e87aa1b476bfcf627212" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.change_form_template</source>
          <target state="translated">admin.ModelAdmin.change_form_template</target>
        </trans-unit>
        <trans-unit id="d9f0d4e3d0364a9f1dfeb307aac29ba50025f658" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.change_list_template</source>
          <target state="translated">admin.ModelAdmin.change_list_template</target>
        </trans-unit>
        <trans-unit id="e526d5f6094f9cdc4dd14885014289b10ec7b980" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.change_view()</source>
          <target state="translated">admin.ModelAdmin.change_view()</target>
        </trans-unit>
        <trans-unit id="d414e6406a983136e190dc7a07fd8a2c96750dfe" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.changelist_view()</source>
          <target state="translated">admin.ModelAdmin.changelist_view()</target>
        </trans-unit>
        <trans-unit id="3dc030c51fc765cfbd870017ad5d8b0b948f481b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.date_hierarchy</source>
          <target state="translated">admin.ModelAdmin.date_hierarchy</target>
        </trans-unit>
        <trans-unit id="386c160d160335a6ac2a7c49bdc8ca054519497a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_confirmation_template</source>
          <target state="translated">admin.ModelAdmin.delete_confirmation_template</target>
        </trans-unit>
        <trans-unit id="eeb04318e25a77a327e833cdd70b15e9b15e9cb9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_model()</source>
          <target state="translated">admin.ModelAdmin.delete_model()</target>
        </trans-unit>
        <trans-unit id="e821552354256eb083e101ac09e22eb68168a6b0" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_queryset()</source>
          <target state="translated">admin.ModelAdmin.delete_queryset()</target>
        </trans-unit>
        <trans-unit id="3d38b8122710752e32b9b1ea25ce515a232c6ef5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_selected_confirmation_template</source>
          <target state="translated">admin.ModelAdmin.delete_selected_confirmation_template</target>
        </trans-unit>
        <trans-unit id="f87ace7e2e6072486bf1035fc6ad811a0a500ca1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.delete_view()</source>
          <target state="translated">admin.ModelAdmin.delete_view()</target>
        </trans-unit>
        <trans-unit id="98c1074d8ce17190d374186911a3b2b54b07a8d3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.empty_value_display</source>
          <target state="translated">admin.ModelAdmin.empty_value_display</target>
        </trans-unit>
        <trans-unit id="70082f2170a9d52ded2284b628f5cbeacf92a3e5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.exclude</source>
          <target state="translated">admin.ModelAdmin.exclude</target>
        </trans-unit>
        <trans-unit id="a58601cd1779b989bd014aa80812123e23e20780" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.fields</source>
          <target state="translated">admin.ModelAdmin.fields</target>
        </trans-unit>
        <trans-unit id="6992c21f5dec76a6ca9ce3e0011d0fc88518e3e8" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.fieldsets</source>
          <target state="translated">admin.ModelAdmin.fieldsets</target>
        </trans-unit>
        <trans-unit id="8cfb9e69cf778b626d3d75e23e1227ff78ce5541" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.filter_horizontal</source>
          <target state="translated">admin.ModelAdmin.filter_horizontal</target>
        </trans-unit>
        <trans-unit id="677bca52a7e23db19b6a51e66f29d0343cfb1e8b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.filter_vertical</source>
          <target state="translated">admin.ModelAdmin.filter_vertical</target>
        </trans-unit>
        <trans-unit id="c31c650b761bf8666b77efa1b8e60aa9bcd9d1b7" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.form</source>
          <target state="translated">admin.ModelAdmin.form</target>
        </trans-unit>
        <trans-unit id="4d1bb828ed5ce95d580cccbb3f56ac14def14eb9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_for_choice_field()</source>
          <target state="translated">admin.ModelAdmin.formfield_for_choice_field()</target>
        </trans-unit>
        <trans-unit id="4127df903c77ee5a6d67efa526294009131ac26e" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_for_foreignkey()</source>
          <target state="translated">admin.ModelAdmin.formfield_for_foreignkey()</target>
        </trans-unit>
        <trans-unit id="360e9f010bfa61799a1a6b0b9064279f0462a8a1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_for_manytomany()</source>
          <target state="translated">admin.ModelAdmin.formfield_for_manytomany()</target>
        </trans-unit>
        <trans-unit id="c44d47564fdfd6332cab5587ed83c76f7880ba16" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.formfield_overrides</source>
          <target state="translated">admin.ModelAdmin.formfield_overrides</target>
        </trans-unit>
        <trans-unit id="dff578ba305d73fb43adf8644bc7436dd84e9d4f" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_actions()</source>
          <target state="translated">admin.ModelAdmin.get_actions()</target>
        </trans-unit>
        <trans-unit id="1748092081402aa0d7bd6c930ed5e489d18fc2ac" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_autocomplete_fields()</source>
          <target state="translated">admin.ModelAdmin.get_autocomplete_fields()</target>
        </trans-unit>
        <trans-unit id="11ec3f8638cb42eb1a132d9cdd347b82b24bb482" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changeform_initial_data()</source>
          <target state="translated">admin.ModelAdmin.get_changeform_initial_data()</target>
        </trans-unit>
        <trans-unit id="2d4004904c51185bb5386749923e35dd901a01cb" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changelist()</source>
          <target state="translated">admin.ModelAdmin.get_changelist()</target>
        </trans-unit>
        <trans-unit id="eeaf455162fc0dd56ff670a4fabf219c3182d42a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changelist_form()</source>
          <target state="translated">admin.ModelAdmin.get_changelist_form()</target>
        </trans-unit>
        <trans-unit id="4647a0dc2c8baaa7d98e2799fb46d3a7686b5404" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_changelist_formset()</source>
          <target state="translated">admin.ModelAdmin.get_changelist_formset()</target>
        </trans-unit>
        <trans-unit id="86091850517c4268b8f2f9b6f9f8a065bea53b79" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_deleted_objects()</source>
          <target state="translated">admin.ModelAdmin.get_deleted_objects()</target>
        </trans-unit>
        <trans-unit id="d0aa2c89b17f5717e8e1406e36d742f8d414b690" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_exclude()</source>
          <target state="translated">admin.ModelAdmin.get_exclude()</target>
        </trans-unit>
        <trans-unit id="65b8808f4d9bb3879739ee661bf3e8dc03dd333c" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_fields()</source>
          <target state="translated">admin.ModelAdmin.get_fields()</target>
        </trans-unit>
        <trans-unit id="e1f5ce78c0cb66c0a1a48a2a01f2c113e9781a0b" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_fieldsets()</source>
          <target state="translated">admin.ModelAdmin.get_fieldsets()</target>
        </trans-unit>
        <trans-unit id="682046f6acc2bbfb77bdc16c367aff4ca91d7e20" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_form()</source>
          <target state="translated">admin.ModelAdmin.get_form()</target>
        </trans-unit>
        <trans-unit id="9245dc2355ab9ef13f016b44260744abcd5cd03e" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_formsets_with_inlines()</source>
          <target state="translated">admin.ModelAdmin.get_formsets_with_inlines()</target>
        </trans-unit>
        <trans-unit id="8f61e73298655d043921243b68c475a50a8b4042" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_inline_instances()</source>
          <target state="translated">admin.ModelAdmin.get_inline_instances()</target>
        </trans-unit>
        <trans-unit id="c38f1afe2ba95edbde728474a8736fd6e01942ff" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_inlines()</source>
          <target state="translated">admin.ModelAdmin.get_inlines()</target>
        </trans-unit>
        <trans-unit id="371bd02049e6f885eb8fbf0ddfa7aa321219d8ad" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_display()</source>
          <target state="translated">admin.ModelAdmin.get_list_display()</target>
        </trans-unit>
        <trans-unit id="d8ec9e631a46958e96713597966551dbbc8a8f39" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_display_links()</source>
          <target state="translated">admin.ModelAdmin.get_list_display_links()</target>
        </trans-unit>
        <trans-unit id="b991670e4b39a4d4a94ace71ccac658b1c232729" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_filter()</source>
          <target state="translated">admin.ModelAdmin.get_list_filter()</target>
        </trans-unit>
        <trans-unit id="eaa5c8f3f07e534709f034e7d77c4bcd40423f23" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_list_select_related()</source>
          <target state="translated">admin.ModelAdmin.get_list_select_related()</target>
        </trans-unit>
        <trans-unit id="a2ba3e5cdf370daa54add2d4b04ae43eedf1c822" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_ordering()</source>
          <target state="translated">admin.ModelAdmin.get_ordering()</target>
        </trans-unit>
        <trans-unit id="4dffca8dfd4243e5724ba2986efd597a2e38f655" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_paginator()</source>
          <target state="translated">admin.ModelAdmin.get_paginator()</target>
        </trans-unit>
        <trans-unit id="cccb0f80ae24ac3168f4be1a4b6d1612b07b2382" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_prepopulated_fields()</source>
          <target state="translated">admin.ModelAdmin.get_prepopulated_fields()</target>
        </trans-unit>
        <trans-unit id="345bef5c3bf84ff54a129d273f253e769e03ffa2" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_queryset()</source>
          <target state="translated">admin.ModelAdmin.get_queryset()</target>
        </trans-unit>
        <trans-unit id="3e04fe886cafd3ab6212841c5c8f78c9f0aeef54" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_readonly_fields()</source>
          <target state="translated">admin.ModelAdmin.get_readonly_fields()</target>
        </trans-unit>
        <trans-unit id="36b3cb93f6e736e6291536eb0d8292f5553507e6" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_search_fields()</source>
          <target state="translated">admin.ModelAdmin.get_search_fields()</target>
        </trans-unit>
        <trans-unit id="27d024518e99ccc0d569dbe33017926dc6b280e3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_search_results()</source>
          <target state="translated">admin.ModelAdmin.get_search_results()</target>
        </trans-unit>
        <trans-unit id="f06d5595205a7abec0643102c0afa013f04259cb" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_sortable_by()</source>
          <target state="translated">admin.ModelAdmin.get_sortable_by()</target>
        </trans-unit>
        <trans-unit id="f4ae7ce666ecc325f47c4c7d3691cb9d1a82d8f6" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.get_urls()</source>
          <target state="translated">admin.ModelAdmin.get_urls()</target>
        </trans-unit>
        <trans-unit id="89b6fdba7c819621100541c215a96d613b8c8bf7" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_add_permission()</source>
          <target state="translated">admin.ModelAdmin.has_add_permission()</target>
        </trans-unit>
        <trans-unit id="87b15d6ce3ae58256c49f7abe7a050ae70839677" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_change_permission()</source>
          <target state="translated">admin.ModelAdmin.has_change_permission()</target>
        </trans-unit>
        <trans-unit id="6ac0d81e6437a0f35406d90b3795f636e43021d1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_delete_permission()</source>
          <target state="translated">admin.ModelAdmin.has_delete_permission()</target>
        </trans-unit>
        <trans-unit id="869f41467d7eb8062cd8c1dcbaa1acf8fd092dbf" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_module_permission()</source>
          <target state="translated">admin.ModelAdmin.has_module_permission()</target>
        </trans-unit>
        <trans-unit id="24ce86b27f112ca90f3cb4e63c612974277aa941" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.has_view_permission()</source>
          <target state="translated">admin.ModelAdmin.has_view_permission()</target>
        </trans-unit>
        <trans-unit id="3f7b9cc079d4bd512547e0aa9b9b1deecf54b1ff" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.history_view()</source>
          <target state="translated">admin.ModelAdmin.history_view()</target>
        </trans-unit>
        <trans-unit id="c1003b0dcf44f080df52f1ec08b2d3069d79fd34" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.inlines</source>
          <target state="translated">admin.ModelAdmin.inlines</target>
        </trans-unit>
        <trans-unit id="1363c662c09279fa048fd805fff686d2c43e26f6" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_display</source>
          <target state="translated">admin.ModelAdmin.list_display</target>
        </trans-unit>
        <trans-unit id="93d27480dcd686fe98b39b2331bf33bb7a0a914a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_display_links</source>
          <target state="translated">admin.ModelAdmin.list_display_links</target>
        </trans-unit>
        <trans-unit id="fe0124949cba95a344f701f984dda75b9469594f" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_editable</source>
          <target state="translated">admin.ModelAdmin.list_editable</target>
        </trans-unit>
        <trans-unit id="5d076473adc2f30b33d2007b750b7d8c6acc851d" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_filter</source>
          <target state="translated">admin.ModelAdmin.list_filter</target>
        </trans-unit>
        <trans-unit id="f87da645f148549fa2b441adf8579dda86a89f72" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_max_show_all</source>
          <target state="translated">admin.ModelAdmin.list_max_show_all</target>
        </trans-unit>
        <trans-unit id="4298648f0dc31076aa00e77403161a309f3ef266" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_per_page</source>
          <target state="translated">admin.ModelAdmin.list_per_page</target>
        </trans-unit>
        <trans-unit id="38a42d294ec00fbdf4c41dd9606e9387f93a838e" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.list_select_related</source>
          <target state="translated">admin.ModelAdmin.list_select_related</target>
        </trans-unit>
        <trans-unit id="baa4996c856956dad5c1cfd20e063b959b3f8f5a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.lookup_allowed()</source>
          <target state="translated">admin.ModelAdmin.lookup_allowed()</target>
        </trans-unit>
        <trans-unit id="c797ba34e0d0e8056d559734cffcd09267685b93" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.message_user()</source>
          <target state="translated">admin.ModelAdmin.message_user()</target>
        </trans-unit>
        <trans-unit id="0e06c32a838101bc4f492f2b86b9c11b3512c7d2" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.object_history_template</source>
          <target state="translated">admin.ModelAdmin.object_history_template</target>
        </trans-unit>
        <trans-unit id="9f214f2b5d52736c57222aeeb6e0979ec825c631" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.ordering</source>
          <target state="translated">admin.ModelAdmin.ordering</target>
        </trans-unit>
        <trans-unit id="8901524b611d9d8d8c9434ed1d37c196c44493a8" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.paginator</source>
          <target state="translated">admin.ModelAdmin.paginator</target>
        </trans-unit>
        <trans-unit id="32aeaeb297857d2c4eef4eb80921308fd46074c1" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.popup_response_template</source>
          <target state="translated">admin.ModelAdmin.popup_response_template</target>
        </trans-unit>
        <trans-unit id="7b26552a2d8776126fa2d25ca34f2d8e203ba913" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.prepopulated_fields</source>
          <target state="translated">admin.ModelAdmin.prepopulated_fields</target>
        </trans-unit>
        <trans-unit id="a770bc8457a0f65f6f8a3ddb41e33c686607a7e5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.preserve_filters</source>
          <target state="translated">admin.ModelAdmin.preserve_filters</target>
        </trans-unit>
        <trans-unit id="79d8e0c9eaee54190ae8de66afcdee05ba59a457" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.radio_fields</source>
          <target state="translated">admin.ModelAdmin.radio_fields</target>
        </trans-unit>
        <trans-unit id="c47f44d903c90a13f80df30199f6208d6bcd5303" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.raw_id_fields</source>
          <target state="translated">admin.ModelAdmin.raw_id_fields</target>
        </trans-unit>
        <trans-unit id="08ece98341e65cebd59a1fd42ea1579cc4236ef3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.readonly_fields</source>
          <target state="translated">admin.ModelAdmin.readonly_fields</target>
        </trans-unit>
        <trans-unit id="790ddcaeedb9a9cfc49345830f5f2ebb4d985175" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.response_add()</source>
          <target state="translated">admin.ModelAdmin.response_add()</target>
        </trans-unit>
        <trans-unit id="2091cff95e093e7091cf0aa61b3ea2fb960d0f90" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.response_change()</source>
          <target state="translated">admin.ModelAdmin.response_change()</target>
        </trans-unit>
        <trans-unit id="31cdf3d180a2ed2452fd6cd9483b8d3f83dec732" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.response_delete()</source>
          <target state="translated">admin.ModelAdmin.response_delete()</target>
        </trans-unit>
        <trans-unit id="cdec2a05a1e1335e02a7adc8699a5066932dea30" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_as</source>
          <target state="translated">admin.ModelAdmin.save_as</target>
        </trans-unit>
        <trans-unit id="59646490ffcb8c914e478450da955e151c9f58f9" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_as_continue</source>
          <target state="translated">admin.ModelAdmin.save_as_continue</target>
        </trans-unit>
        <trans-unit id="809f3c1003a169eda79828ee1df6308193106799" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_formset()</source>
          <target state="translated">admin.ModelAdmin.save_formset()</target>
        </trans-unit>
        <trans-unit id="6f55143c7a96f865f2ead83a0ec836e072eec535" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_model()</source>
          <target state="translated">admin.ModelAdmin.save_model()</target>
        </trans-unit>
        <trans-unit id="bff5a4660d94da7d29e26c14e5237549c5a71f1a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_on_top</source>
          <target state="translated">admin.ModelAdmin.save_on_top</target>
        </trans-unit>
        <trans-unit id="a392b186450c2c5fd5393dee4edb3469375d28b5" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.save_related()</source>
          <target state="translated">admin.ModelAdmin.save_related()</target>
        </trans-unit>
        <trans-unit id="f6dd364e52c424f7cf99fd585ae0c60f96f7c534" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.search_fields</source>
          <target state="translated">admin.ModelAdmin.search_fields</target>
        </trans-unit>
        <trans-unit id="0a14c787c79088856949b6016c48835714280cc3" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.show_full_result_count</source>
          <target state="translated">admin.ModelAdmin.show_full_result_count</target>
        </trans-unit>
        <trans-unit id="3c13c26fff9340b7e54741640674df28f02b4d3a" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.sortable_by</source>
          <target state="translated">admin.ModelAdmin.sortable_by</target>
        </trans-unit>
        <trans-unit id="ed03a983df511ecca511ec88536eba917556e78f" translate="yes" xml:space="preserve">
          <source>admin.ModelAdmin.view_on_site</source>
          <target state="translated">admin.ModelAdmin.view_on_site</target>
        </trans-unit>
        <trans-unit id="0a0d391b556ede5b504eae74ac97c7c541a9d6dc" translate="yes" xml:space="preserve">
          <source>admin.StackedInline</source>
          <target state="translated">admin.StackedInline</target>
        </trans-unit>
        <trans-unit id="fec5805bb823dde06c633bda8f82b1c3fa4bada4" translate="yes" xml:space="preserve">
          <source>admin.TabularInline</source>
          <target state="translated">admin.TabularInline</target>
        </trans-unit>
        <trans-unit id="7bdbb4a38c87e0b094dcd1b5dfe4949238c61733" translate="yes" xml:space="preserve">
          <source>admin.apps.AdminConfig</source>
          <target state="translated">admin.apps.AdminConfig</target>
        </trans-unit>
        <trans-unit id="5da053a4a99299870c68445bc1ffc0b7e0aa6ebf" translate="yes" xml:space="preserve">
          <source>admin.apps.SimpleAdminConfig</source>
          <target state="translated">admin.apps.SimpleAdminConfig</target>
        </trans-unit>
        <trans-unit id="cbfbf70b3ac4ee4e5d35575551173af11b7d54f9" translate="yes" xml:space="preserve">
          <source>admin.apps.SimpleAdminConfig.default_site</source>
          <target state="translated">admin.apps.SimpleAdminConfig.default_site</target>
        </trans-unit>
        <trans-unit id="31d560a2ea739d69c7fdad7ba9364b73e15d5d12" translate="yes" xml:space="preserve">
          <source>admin.autodiscover()</source>
          <target state="translated">admin.autodiscover()</target>
        </trans-unit>
        <trans-unit id="6d2edf5c981aa07e5744f3d70d8de280ba3d2121" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry</source>
          <target state="translated">admin.models.LogEntry</target>
        </trans-unit>
        <trans-unit id="eaa842dffce16859d100cc16147287f3ccaaa0a6" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.action_flag</source>
          <target state="translated">admin.models.LogEntry.action_flag</target>
        </trans-unit>
        <trans-unit id="9a1a5b3b7d45572296167f56d6aafca5710e59ff" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.action_time</source>
          <target state="translated">admin.models.LogEntry.action_time</target>
        </trans-unit>
        <trans-unit id="2f97562fb50c2314ad54d104f97cbfbd24707604" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.change_message</source>
          <target state="translated">admin.models.LogEntry.change_message</target>
        </trans-unit>
        <trans-unit id="296b0904f0a779b3447d07b2ddf024e55157821d" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.content_type</source>
          <target state="translated">admin.models.LogEntry.content_type</target>
        </trans-unit>
        <trans-unit id="28d4b4b6a8034e207eac434e21fa3fe85c4bf103" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.get_change_message()</source>
          <target state="translated">admin.models.LogEntry.get_change_message()</target>
        </trans-unit>
        <trans-unit id="93610534067ff3d7e629942da864c2ce580119ea" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.get_edited_object()</source>
          <target state="translated">admin.models.LogEntry.get_edited_object()</target>
        </trans-unit>
        <trans-unit id="fbd8516a3bc5512289552d93dd57b29537801236" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.object_id</source>
          <target state="translated">admin.models.LogEntry.object_id</target>
        </trans-unit>
        <trans-unit id="29d8b2e5019026534a3c3d1eba2138ff51ae72d4" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.object_repr</source>
          <target state="translated">admin.models.LogEntry.object_repr</target>
        </trans-unit>
        <trans-unit id="3b332cb4843d8fc63730e662f0a6551637b6b8f6" translate="yes" xml:space="preserve">
          <source>admin.models.LogEntry.user</source>
          <target state="translated">admin.models.LogEntry.user</target>
        </trans-unit>
        <trans-unit id="df719e48e7b8592821cee0721ad82e2e74955642" translate="yes" xml:space="preserve">
          <source>admin.register()</source>
          <target state="translated">admin.register()</target>
        </trans-unit>
        <trans-unit id="b1334d0174c894b2a2da59747831c8fbc80a5299" translate="yes" xml:space="preserve">
          <source>admin.views.decorators.staff_member_required()</source>
          <target state="translated">admin.views.decorators.staff_member_required()</target>
        </trans-unit>
        <trans-unit id="eada6c330e39eaa38e999e8bc4f9f23990d0b7b3" translate="yes" xml:space="preserve">
          <source>an application configuration class (preferred), or</source>
          <target state="translated">класс конфигурации приложения (предпочтительно),или</target>
        </trans-unit>
        <trans-unit id="8a7549e19903d19b07ae4daf508a8023b84b9aa3" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;NumericRange&lt;/code&gt;:</source>
          <target state="translated">и &lt;code&gt;NumericRange&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5146a95ec0b449286e8e3fbe21699dfff7d49725" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;first&lt;/code&gt; is &lt;code&gt;[1, 2, 3]&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; is &lt;code&gt;[4, 5, 6]&lt;/code&gt;, then the output will be &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt;.</source>
          <target state="translated">и &lt;code&gt;first&lt;/code&gt; - &lt;code&gt;[1, 2, 3]&lt;/code&gt; а &lt;code&gt;second&lt;/code&gt; - &lt;code&gt;[4, 5, 6]&lt;/code&gt; , затем выходной сигнал будет &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cfa2bc1b74e1644aec2ba9146cb116433d4aa25" translate="yes" xml:space="preserve">
          <source>and as a &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt;:</source>
          <target state="translated">и как &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-context-manager&quot;&gt;менеджер контекста&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c237451df30e0bf5b737e2ba68b4dfdfafcb4dbb" translate="yes" xml:space="preserve">
          <source>and in the template:</source>
          <target state="translated">и в шаблоне:</target>
        </trans-unit>
        <trans-unit id="e330d626c3205dcaf2d8691a74bc7707d2c2f112" translate="yes" xml:space="preserve">
          <source>and run the test again:</source>
          <target state="translated">и запустить тест еще раз:</target>
        </trans-unit>
        <trans-unit id="ff8d5da4de452dd86c28c3ad0b3c21015c483ee3" translate="yes" xml:space="preserve">
          <source>and run:</source>
          <target state="translated">и бежать:</target>
        </trans-unit>
        <trans-unit id="3f4f8cb99b447af280c73c7a94e50d83e0e8730d" translate="yes" xml:space="preserve">
          <source>and set the &lt;code&gt;'environment'&lt;/code&gt; option to &lt;code&gt;'myproject.jinja2.environment'&lt;/code&gt;.</source>
          <target state="translated">и установите для параметра &lt;code&gt;'environment'&lt;/code&gt; значение &lt;code&gt;'myproject.jinja2.environment'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57a9410f84114ae9a2c8f69401fa6bb699522f5b" translate="yes" xml:space="preserve">
          <source>and several subclasses:</source>
          <target state="translated">и несколько подклассов:</target>
        </trans-unit>
        <trans-unit id="473bc01d0b4ec979636438f45b437b19a3a59db6" translate="yes" xml:space="preserve">
          <source>and the settings file includes a list of the domains supported by the project:</source>
          <target state="translated">а файл настроек содержит список доменов,поддерживаемых проектом:</target>
        </trans-unit>
        <trans-unit id="89a8941fa222a4f815482fb1d1642a5b2a7d8441" translate="yes" xml:space="preserve">
          <source>and then add it to your logging config:</source>
          <target state="translated">а затем добавьте его в вашу конфигурацию записи:</target>
        </trans-unit>
        <trans-unit id="fc465fb48838c898c6c6a90f7ca858f1489fa769" translate="yes" xml:space="preserve">
          <source>and then decide that you want to use &lt;code&gt;TextField&lt;/code&gt; instead, you can&amp;rsquo;t change the subclass like this:</source>
          <target state="translated">и затем решите, что вместо этого вы хотите использовать &lt;code&gt;TextField&lt;/code&gt; , вы не можете изменить подкласс следующим образом:</target>
        </trans-unit>
        <trans-unit id="548cb6737f36f052297db887219e99957155a457" translate="yes" xml:space="preserve">
          <source>and then did something like this:</source>
          <target state="translated">а потом сделал что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="1578c5952706addd98d229e9890dfaf2a8535ecd" translate="yes" xml:space="preserve">
          <source>and then we must amend the &lt;code&gt;get_queryset&lt;/code&gt; method like so:</source>
          <target state="translated">а затем мы должны изменить метод &lt;code&gt;get_queryset&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="fa267738dee3a980032e6181739addc33d8c7fc6" translate="yes" xml:space="preserve">
          <source>and these items in your &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">и эти пункты в вашей настройке &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c88dd1843a27b6ff725e7a97906bc64d61059ddb" translate="yes" xml:space="preserve">
          <source>and using the template above, would render something like:</source>
          <target state="translated">и используя шаблон,приведенный выше,выведет на экран что-то вроде:</target>
        </trans-unit>
        <trans-unit id="81d5f03b0e2e9408628642e07cb4f5b92994a301" translate="yes" xml:space="preserve">
          <source>and we&amp;rsquo;ll create a shortcut function to create questions as well as a new test class:</source>
          <target state="translated">и мы создадим функцию ярлыка для создания вопросов, а также новый тестовый класс:</target>
        </trans-unit>
        <trans-unit id="c467f76566a0efffa8c5eaabfb0eafd296655b35" translate="yes" xml:space="preserve">
          <source>and you want to do some custom validation for &lt;code&gt;headline&lt;/code&gt;, while keeping the &lt;code&gt;blank&lt;/code&gt; and &lt;code&gt;help_text&lt;/code&gt; values as specified, you might define &lt;code&gt;ArticleForm&lt;/code&gt; like this:</source>
          <target state="translated">и вы хотите сделать некоторую пользовательскую проверку &lt;code&gt;headline&lt;/code&gt; , сохраняя &lt;code&gt;blank&lt;/code&gt; значения и значения &lt;code&gt;help_text&lt;/code&gt; , как указано, вы можете определить &lt;code&gt;ArticleForm&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="d7cdf5e19422782b9f71d4e417fe5cdca580769e" translate="yes" xml:space="preserve">
          <source>and you&amp;rsquo;ll see something like:</source>
          <target state="translated">и вы увидите что-то вроде:</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="4e28bbc16fb90604cad5f10f3d0a312c7f9d6bd4" translate="yes" xml:space="preserve">
          <source>app/static/app/formset_handlers.js</source>
          <target state="translated">app/static/app/formset_handlers.js</target>
        </trans-unit>
        <trans-unit id="836ea883e2888f94ff10c5060664f0069db27b99" translate="yes" xml:space="preserve">
          <source>app/static/app/unregistered_handlers.js</source>
          <target state="translated">app/static/app/unregistered_handlers.js</target>
        </trans-unit>
        <trans-unit id="186d8cfc16ac0f964ae62660f1bc2aea83ccb5b9" translate="yes" xml:space="preserve">
          <source>apps.AppConfig</source>
          <target state="translated">apps.AppConfig</target>
        </trans-unit>
        <trans-unit id="7b0ea27b3ea2050f9a693a4c47c5d9c2b18b75e1" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.get_model()</source>
          <target state="translated">apps.AppConfig.get_model()</target>
        </trans-unit>
        <trans-unit id="21aed2e32d7d541ba4dbebc9ec56110c07d52989" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.get_models()</source>
          <target state="translated">apps.AppConfig.get_models()</target>
        </trans-unit>
        <trans-unit id="4cc0bc30f4e3e35d0445176c706f34ccce008612" translate="yes" xml:space="preserve">
          <source>apps.AppConfig.label</source>
          <target state="translated">apps.AppConfig.label</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
