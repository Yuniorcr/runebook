<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="66c9ccae10ed2b23694f765b4228417a4924e330" translate="yes" xml:space="preserve">
          <source>Finally we combine the parts into an SQL expression with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, and supply all the parameters for the query. We then return a tuple containing the generated SQL string and the parameters.</source>
          <target state="translated">Наконец, мы объединяем части в выражение SQL с помощью &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; и предоставляем все параметры для запроса. Затем мы возвращаем кортеж, содержащий сгенерированную строку SQL и параметры.</target>
        </trans-unit>
        <trans-unit id="d2eb2a2b36ade57b93d5586d25a607a90abeb603" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;install Django&lt;/a&gt; on your system.</source>
          <target state="translated">Наконец, &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;установите Django&lt;/a&gt; в вашей системе.</target>
        </trans-unit>
        <trans-unit id="5484ec9866989dbfac8528bb6dd3db714dd1ddce" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;as_table()&lt;/code&gt; outputs the form as an HTML &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;. This is exactly the same as &lt;code&gt;print&lt;/code&gt;. In fact, when you &lt;code&gt;print&lt;/code&gt; a form object, it calls its &lt;code&gt;as_table()&lt;/code&gt; method behind the scenes:</source>
          <target state="translated">Наконец, &lt;code&gt;as_table()&lt;/code&gt; выводит форму в виде HTML &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; . Это точно так же, как &lt;code&gt;print&lt;/code&gt; . Фактически, когда вы &lt;code&gt;print&lt;/code&gt; объект формы, он вызывает его &lt;code&gt;as_table()&lt;/code&gt; за кулисами:</target>
        </trans-unit>
        <trans-unit id="f6603469a430fe7317c80ca09845bcdc21b75157" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;full_clean()&lt;/code&gt; will check any unique constraints on your model.</source>
          <target state="translated">Наконец, &lt;code&gt;full_clean()&lt;/code&gt; проверит любые уникальные ограничения на вашей модели.</target>
        </trans-unit>
        <trans-unit id="2019efad06892eaf93b5bf539df6adb0e0145d27" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;register.filter()&lt;/code&gt; also accepts three keyword arguments, &lt;code&gt;is_safe&lt;/code&gt;, &lt;code&gt;needs_autoescape&lt;/code&gt;, and &lt;code&gt;expects_localtime&lt;/code&gt;. These arguments are described in &lt;a href=&quot;#filters-auto-escaping&quot;&gt;filters and auto-escaping&lt;/a&gt; and &lt;a href=&quot;#filters-timezones&quot;&gt;filters and time zones&lt;/a&gt; below.</source>
          <target state="translated">Наконец, &lt;code&gt;register.filter()&lt;/code&gt; также принимает три ключевых аргумента: &lt;code&gt;is_safe&lt;/code&gt; , &lt;code&gt;needs_autoescape&lt;/code&gt; и &lt;code&gt;expects_localtime&lt;/code&gt; . Эти аргументы описаны в &lt;a href=&quot;#filters-auto-escaping&quot;&gt;фильтрах и авто-экранировании&lt;/a&gt; и &lt;a href=&quot;#filters-timezones&quot;&gt;фильтрах и часовых поясах&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="306b5cee8ba18e692cafa08cb4f14f745f2e0c11" translate="yes" xml:space="preserve">
          <source>Finally, Django comes with a &amp;ldquo;dummy&amp;rdquo; cache that doesn&amp;rsquo;t actually cache &amp;ndash; it just implements the cache interface without doing anything.</source>
          <target state="translated">Наконец, Django поставляется с &amp;laquo;фиктивным&amp;raquo; кешем, который фактически не кешируется - он просто реализует интерфейс кеша, ничего не делая.</target>
        </trans-unit>
        <trans-unit id="40267a26a72668706858d04af947447e24d778f6" translate="yes" xml:space="preserve">
          <source>Finally, Django uses the concept of &amp;ldquo;template inheritance&amp;rdquo;. That&amp;rsquo;s what the &lt;code&gt;{% extends &quot;base.html&quot; %}&lt;/code&gt; does. It means &amp;ldquo;First load the template called &amp;lsquo;base&amp;rsquo;, which has defined a bunch of blocks, and fill the blocks with the following blocks.&amp;rdquo; In short, that lets you dramatically cut down on redundancy in templates: each template has to define only what&amp;rsquo;s unique to that template.</source>
          <target state="translated">Наконец, Django использует концепцию &amp;laquo;наследования шаблонов&amp;raquo;. Вот что делает &lt;code&gt;{% extends &quot;base.html&quot; %}&lt;/code&gt; . Это означает: &amp;laquo;Сначала загрузите шаблон с именем&amp;laquo; base &amp;raquo;, который определил группу блоков, и заполните блоки следующими блоками&amp;raquo;. Короче говоря, это позволяет значительно сократить избыточность в шаблонах: каждый шаблон должен определять только то, что уникально для этого шаблона.</target>
        </trans-unit>
        <trans-unit id="82301c6099c024cf55f29af10873bbd58c163855" translate="yes" xml:space="preserve">
          <source>Finally, MySQL has relatively small limits on name lengths for columns, tables and indexes, as well as a limit on the combined size of all columns an index covers. This means that indexes that are possible on other backends will fail to be created under MySQL.</source>
          <target state="translated">Наконец,MySQL имеет относительно небольшие ограничения на длину имен для столбцов,таблиц и индексов,а также ограничение на комбинированный размер всех столбцов,охватываемых индексом.Это означает,что индексы,которые возможны на других бэкэндах,не будут созданы под MySQL.</target>
        </trans-unit>
        <trans-unit id="e1fe06beb5b184511b52b82db0d899291a197824" translate="yes" xml:space="preserve">
          <source>Finally, a word on using &lt;code&gt;get_or_create()&lt;/code&gt; in Django views. Please make sure to use it only in &lt;code&gt;POST&lt;/code&gt; requests unless you have a good reason not to. &lt;code&gt;GET&lt;/code&gt; requests shouldn&amp;rsquo;t have any effect on data. Instead, use &lt;code&gt;POST&lt;/code&gt; whenever a request to a page has a side effect on your data. For more, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;Safe methods&lt;/strong&gt;&lt;/a&gt; in the HTTP spec.</source>
          <target state="translated">Наконец, слово об использовании &lt;code&gt;get_or_create()&lt;/code&gt; в представлениях Django. Пожалуйста, убедитесь, что используете его только в запросах &lt;code&gt;POST&lt;/code&gt; , если у вас нет веских причин не делать этого. &lt;code&gt;GET&lt;/code&gt; - запросы не должны влиять на данные. Вместо этого используйте &lt;code&gt;POST&lt;/code&gt; всякий раз, когда запрос к странице оказывает побочный эффект на ваши данные. Для получения дополнительной информации см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;Безопасные методы&lt;/strong&gt;&lt;/a&gt; в спецификации HTTP.</target>
        </trans-unit>
        <trans-unit id="c40eaec225e59882f800eba203e6c05081d41e93" translate="yes" xml:space="preserve">
          <source>Finally, avoid aliasing your settings as module-level constants as &lt;code&gt;override_settings()&lt;/code&gt; won&amp;rsquo;t work on such values since they are only evaluated the first time the module is imported.</source>
          <target state="translated">Наконец, избегайте наложения ваших настроек на константы уровня модуля, так как &lt;code&gt;override_settings()&lt;/code&gt; не будет работать с такими значениями, поскольку они оцениваются только при первом импорте модуля.</target>
        </trans-unit>
        <trans-unit id="ff9baca2e992a0e98a104ea1b4ce704e7121cf14" translate="yes" xml:space="preserve">
          <source>Finally, before you deploy your application to production, you should run through our &lt;a href=&quot;checklist&quot;&gt;deployment checklist&lt;/a&gt; to ensure that your configurations are suitable.</source>
          <target state="translated">Наконец, прежде чем развертывать приложение в рабочей среде, вы должны выполнить наш &lt;a href=&quot;checklist&quot;&gt;контрольный список развертывания,&lt;/a&gt; чтобы убедиться, что ваши конфигурации подходят.</target>
        </trans-unit>
        <trans-unit id="12e5c631fd09eda57ca89fcce607cf3f3163a88e" translate="yes" xml:space="preserve">
          <source>Finally, browse to &lt;code&gt;http://localhost:8000/admin/&lt;/code&gt;, and log in with the user you just created. Browse to any of the &lt;code&gt;WorldBorder&lt;/code&gt; entries &amp;ndash; the borders may be edited by clicking on a polygon and dragging the vertices to the desired position.</source>
          <target state="translated">Наконец, перейдите по &lt;code&gt;http://localhost:8000/admin/&lt;/code&gt; и войдите в систему только что созданным пользователем. Перейдите к любой записи &lt;code&gt;WorldBorder&lt;/code&gt; - границы можно редактировать, нажав на многоугольник и перетащив вершины в нужное положение.</target>
        </trans-unit>
        <trans-unit id="75df61e6676393f69526cf860e9d09ffe21f5dcf" translate="yes" xml:space="preserve">
          <source>Finally, configure, make and install PROJ.4:</source>
          <target state="translated">Наконец,настройка,создание и установка PROJ.4:</target>
        </trans-unit>
        <trans-unit id="7a496304035024f7826ec5200acb03a7378bec7f" translate="yes" xml:space="preserve">
          <source>Finally, determine which of your application&amp;rsquo;s models should be editable in the admin interface. For each of those models, register them with the admin as described in &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Наконец, определите, какие из моделей вашего приложения должны редактироваться в интерфейсе администратора. Для каждой из этих моделей зарегистрируйте их у администратора, как описано в &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82548b98e5f57caa40011e280e83e68504a44c79" translate="yes" xml:space="preserve">
          <source>Finally, edit your WSGI script &lt;code&gt;mysite.wsgi&lt;/code&gt; to tie Apache&amp;rsquo;s authentication to your site&amp;rsquo;s authentication mechanisms by importing the &lt;code&gt;check_password&lt;/code&gt; function:</source>
          <target state="translated">Наконец, отредактируйте скрипт WSGI &lt;code&gt;mysite.wsgi&lt;/code&gt; , чтобы привязать аутентификацию Apache к механизмам аутентификации вашего сайта, импортировав функцию &lt;code&gt;check_password&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f4fbe23a0a4f1a1a7ad82d1bd5a261c78f914005" translate="yes" xml:space="preserve">
          <source>Finally, for GeoDjango to be able to find the KyngChaos SpatiaLite library, add the following to your &lt;code&gt;settings.py&lt;/code&gt;:</source>
          <target state="translated">Наконец, чтобы GeoDjango смог найти библиотеку KyngChaos SpatiaLite, добавьте в файл &lt;code&gt;settings.py&lt;/code&gt; следующее :</target>
        </trans-unit>
        <trans-unit id="cc4c9bcb1cd46b0188d3f07b8a9f37d4a11b76c8" translate="yes" xml:space="preserve">
          <source>Finally, for GeoDjango to be able to find the SpatiaLite library, add the following to your &lt;code&gt;settings.py&lt;/code&gt;:</source>
          <target state="translated">Наконец, чтобы GeoDjango смог найти библиотеку SpatiaLite, добавьте в файл &lt;code&gt;settings.py&lt;/code&gt; следующее :</target>
        </trans-unit>
        <trans-unit id="b144dd9ec36c070dc34d112ead2d5addb8133986" translate="yes" xml:space="preserve">
          <source>Finally, here&amp;rsquo;s an example of a fairly complex logging setup:</source>
          <target state="translated">Наконец, вот пример довольно сложной настройки ведения журнала:</target>
        </trans-unit>
        <trans-unit id="855b6d5f1ccab213dc5b32608617816a33cf5443" translate="yes" xml:space="preserve">
          <source>Finally, if &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, you also need to properly set the &lt;a href=&quot;#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting. Failing to do so will result in all requests being returned as &amp;ldquo;Bad Request (400)&amp;rdquo;.</source>
          <target state="translated">Наконец, если для параметра &lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;False&lt;/code&gt; , вам также необходимо правильно установить параметр &lt;a href=&quot;#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt; . В противном случае все запросы будут возвращены как &amp;laquo;Bad Request (400)&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d465d68a14cb885607a31e7005a4de85bcfdddcc" translate="yes" xml:space="preserve">
          <source>Finally, if you only need to have a simple syntax for your custom context-updating template tag, consider using the &lt;a href=&quot;#django.template.Library.simple_tag&quot;&gt;&lt;code&gt;simple_tag()&lt;/code&gt;&lt;/a&gt; shortcut, which supports assigning the tag results to a template variable.</source>
          <target state="translated">Наконец, если вам нужен только простой синтаксис для пользовательского тега шаблона обновления контекста, рассмотрите возможность использования &lt;a href=&quot;#django.template.Library.simple_tag&quot;&gt; &lt;code&gt;simple_tag()&lt;/code&gt; &lt;/a&gt; , который поддерживает присвоение результатов тега переменной шаблона.</target>
        </trans-unit>
        <trans-unit id="9fdd2ae212537eaacac0577eae9438d74381650f" translate="yes" xml:space="preserve">
          <source>Finally, if you only want to modify the Python-level behavior of a model, without changing the models fields in any way, you can use &lt;a href=&quot;#proxy-models&quot;&gt;Proxy models&lt;/a&gt;.</source>
          <target state="translated">Наконец, если вы хотите изменить только поведение модели на уровне Python, не изменяя поля моделей, вы можете использовать &lt;a href=&quot;#proxy-models&quot;&gt;прокси-модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd4ebdb64c40e31366b0e2c24cb39052f3a86668" translate="yes" xml:space="preserve">
          <source>Finally, if you want complete control over of a field &amp;ndash; including its type, validators, required, etc. &amp;ndash; you can do this by declaratively specifying fields like you would in a regular &lt;code&gt;Form&lt;/code&gt;.</source>
          <target state="translated">Наконец, если вы хотите получить полный контроль над полем - включая его тип, валидаторы, обязательные и т. Д. - вы можете сделать это, декларативно указав поля, как в обычной &lt;code&gt;Form&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfcbb1d9824d6d47858c41668312ca8ed762220a" translate="yes" xml:space="preserve">
          <source>Finally, if you want to delete all the keys in the cache, use &lt;code&gt;cache.clear()&lt;/code&gt;. Be careful with this; &lt;code&gt;clear()&lt;/code&gt; will remove &lt;em&gt;everything&lt;/em&gt; from the cache, not just the keys set by your application.</source>
          <target state="translated">Наконец, если вы хотите удалить все ключи в кэше, используйте &lt;code&gt;cache.clear()&lt;/code&gt; . Будьте осторожны с этим; &lt;code&gt;clear()&lt;/code&gt; удалит &lt;em&gt;все&lt;/em&gt; из кэша, а не только ключи , установленные приложения.</target>
        </trans-unit>
        <trans-unit id="c6f827384009b456965fe0958e5b184820f0454b" translate="yes" xml:space="preserve">
          <source>Finally, if your column requires truly complex SQL setup, return &lt;code&gt;None&lt;/code&gt; from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt;. This will cause Django&amp;rsquo;s SQL creation code to skip over this field. You are then responsible for creating the column in the right table in some other way, but this gives you a way to tell Django to get out of the way.</source>
          <target state="translated">Наконец, если ваш столбец требует действительно сложной настройки SQL, верните &lt;code&gt;None&lt;/code&gt; из &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt; . Это приведет к тому, что код создания SQL Django пропустит это поле. Затем вы отвечаете за создание столбца в правой таблице каким-либо другим способом, но это дает вам возможность сказать Django, чтобы он не мешал.</target>
        </trans-unit>
        <trans-unit id="4e79f320cb0240d33a245677392be00e0e634041" translate="yes" xml:space="preserve">
          <source>Finally, if your column requires truly complex SQL setup, return &lt;code&gt;None&lt;/code&gt; from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt;. This will cause Django&amp;rsquo;s SQL creation code to skip over this field. You are then responsible for creating the column in the right table in some other way, of course, but this gives you a way to tell Django to get out of the way.</source>
          <target state="translated">Наконец, если ваш столбец требует действительно сложной настройки SQL, верните &lt;code&gt;None&lt;/code&gt; из &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt; . Это заставит код создания SQL Django пропустить это поле. Тогда вы, конечно, отвечаете за создание столбца в нужной таблице каким-то другим способом, но это дает вам возможность сказать Django, чтобы он ушел.</target>
        </trans-unit>
        <trans-unit id="4b372199964e2fb24560340217adf39c6cb2e9b6" translate="yes" xml:space="preserve">
          <source>Finally, in order to help you locate code that needs upgrading, Django raises a warning when you attempt to save a naive datetime to the database:</source>
          <target state="translated">Наконец,чтобы помочь вам найти код,который нуждается в обновлении,Django выдает предупреждение,когда вы пытаетесь сохранить наивное время даты в базу данных:</target>
        </trans-unit>
        <trans-unit id="a8ceea170904d12a1b2a305076f5373f10971acf" translate="yes" xml:space="preserve">
          <source>Finally, in the above example, we remember to mark the result as safe so that our HTML is inserted directly into the template without further escaping.</source>
          <target state="translated">Наконец,в приведенном выше примере мы помним,что нужно пометить результат как безопасный,чтобы наш HTML вставлялся непосредственно в шаблон без дальнейшего выхода.</target>
        </trans-unit>
        <trans-unit id="3b58b4fc0d37b0500904ca859d6f665a75001b2b" translate="yes" xml:space="preserve">
          <source>Finally, in the settings file, we add the following (substituting &lt;code&gt;path.to.&lt;/code&gt; with the actual Python path to the module(s) where the routers are defined):</source>
          <target state="translated">Наконец, в файле настроек мы добавляем следующее (заменяя &lt;code&gt;path.to.&lt;/code&gt; фактическим путем Python к модулю (ам), где определены маршрутизаторы):</target>
        </trans-unit>
        <trans-unit id="18faf076ef353dea3341f0a68404cd92fe6d44d6" translate="yes" xml:space="preserve">
          <source>Finally, it&amp;rsquo;s important to call &lt;code&gt;showPage()&lt;/code&gt; and &lt;code&gt;save()&lt;/code&gt; on the PDF file.</source>
          <target state="translated">Наконец, важно вызвать &lt;code&gt;showPage()&lt;/code&gt; и &lt;code&gt;save()&lt;/code&gt; для файла PDF.</target>
        </trans-unit>
        <trans-unit id="d710d1ce0f9f49d4bfebd253087693a7db1b18cf" translate="yes" xml:space="preserve">
          <source>Finally, it&amp;rsquo;s important to note that the Django database layer is merely an interface to your database. You can access your database via other tools, programming languages or database frameworks; there&amp;rsquo;s nothing Django-specific about your database.</source>
          <target state="translated">Наконец, важно отметить, что уровень базы данных Django - это просто интерфейс к вашей базе данных. Вы можете получить доступ к своей базе данных с помощью других инструментов, языков программирования или каркасов баз данных; нет ничего специфичного для Django в вашей базе данных.</target>
        </trans-unit>
        <trans-unit id="855182574bd0f55fdd45d0ca39998798d4c219a1" translate="yes" xml:space="preserve">
          <source>Finally, note a relationship is defined, using &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;. That tells Django each &lt;code&gt;Choice&lt;/code&gt; is related to a single &lt;code&gt;Question&lt;/code&gt;. Django supports all the common database relationships: many-to-one, many-to-many, and one-to-one.</source>
          <target state="translated">Наконец, обратите внимание, что связь определена с использованием &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; . Это говорит Джанго, что каждый &lt;code&gt;Choice&lt;/code&gt; связан с одним &lt;code&gt;Question&lt;/code&gt; . Django поддерживает все общие отношения с базой данных: многие-к-одному, многие-ко-многим и один-к-одному.</target>
        </trans-unit>
        <trans-unit id="6314e42c3f9470281aa2864e7c7681c40b8c6ccf" translate="yes" xml:space="preserve">
          <source>Finally, note that you can call &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;order_by()&lt;/code&gt;, etc. after the &lt;code&gt;values()&lt;/code&gt; call, that means that these two calls are identical:</source>
          <target state="translated">Наконец, обратите внимание, что вы можете вызывать &lt;code&gt;filter()&lt;/code&gt; , &lt;code&gt;order_by()&lt;/code&gt; и т. Д. После вызова &lt;code&gt;values()&lt;/code&gt; , это означает, что эти два вызова идентичны:</target>
        </trans-unit>
        <trans-unit id="e9e0c432d4c1c0f324717c7c1003e36a61fecea4" translate="yes" xml:space="preserve">
          <source>Finally, note that you can override the form field used for a given model field. See &lt;a href=&quot;#overriding-the-default-fields&quot;&gt;Overriding the default fields&lt;/a&gt; below.</source>
          <target state="translated">Наконец, обратите внимание, что вы можете переопределить поле формы, используемое для данного поля модели. См. &lt;a href=&quot;#overriding-the-default-fields&quot;&gt;Переопределение полей по умолчанию&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="9743b898367474965ebf376aa3504c5be173f876" translate="yes" xml:space="preserve">
          <source>Finally, note that you can&amp;rsquo;t define multiple &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags with the same name in the same template. This limitation exists because a block tag works in &amp;ldquo;both&amp;rdquo; directions. That is, a block tag doesn&amp;rsquo;t just provide a hole to fill &amp;ndash; it also defines the content that fills the hole in the &lt;em&gt;parent&lt;/em&gt;. If there were two similarly-named &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags in a template, that template&amp;rsquo;s parent wouldn&amp;rsquo;t know which one of the blocks&amp;rsquo; content to use.</source>
          <target state="translated">Наконец, обратите внимание, что вы не можете определить несколько тегов &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; с одинаковыми именами в одном шаблоне. Это ограничение существует, потому что тег блока работает в &amp;laquo;обоих&amp;raquo; направлениях. Таким образом, тег блока не только обеспечивает отверстие для заполнения, но также определяет содержимое, которое заполняет отверстие в &lt;em&gt;родительском элементе&lt;/em&gt; . Если бы в шаблоне было два тега &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; одинаковыми именами , родитель этого шаблона не знал бы, какой из блоков использовать.</target>
        </trans-unit>
        <trans-unit id="09b7888ce3860953a8e97b5c6c5cb529ccb8ba65" translate="yes" xml:space="preserve">
          <source>Finally, note that you&amp;rsquo;ll probably want to keep a normal (non-site-specific) &lt;code&gt;Manager&lt;/code&gt; on your model, even if you use &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt;. As explained in the &lt;a href=&quot;../../topics/db/managers&quot;&gt;manager documentation&lt;/a&gt;, if you define a manager manually, then Django won&amp;rsquo;t create the automatic &lt;code&gt;objects = models.Manager()&lt;/code&gt; manager for you. Also note that certain parts of Django &amp;ndash; namely, the Django admin site and generic views &amp;ndash; use whichever manager is defined &lt;em&gt;first&lt;/em&gt; in the model, so if you want your admin site to have access to all objects (not just site-specific ones), put &lt;code&gt;objects = models.Manager()&lt;/code&gt; in your model, before you define &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Наконец, обратите внимание, что вы, вероятно, захотите сохранить нормальный (не специфичный для сайта) &lt;code&gt;Manager&lt;/code&gt; в своей модели, даже если вы используете &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt; . Как объясняется в &lt;a href=&quot;../../topics/db/managers&quot;&gt;документации менеджера&lt;/a&gt; , если вы определяете менеджера вручную, Django не будет создавать для вас автоматический менеджер &lt;code&gt;objects = models.Manager()&lt;/code&gt; . Также обратите внимание, что некоторые части Django, а именно, сайт администратора Django и общие представления, используют тот менеджер, который определен &lt;em&gt;первым&lt;/em&gt; в модели, поэтому, если вы хотите, чтобы ваш сайт администратора имел доступ ко всем объектам (не только к сайт-специфическим), поместите &lt;code&gt;objects = models.Manager()&lt;/code&gt; в вашу модель, прежде чем вы определите &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="534f475f8e6621717cc2fd78375e942df9b8fef4" translate="yes" xml:space="preserve">
          <source>Finally, our calendar system contains interesting edge cases. For example, you can&amp;rsquo;t always subtract one year directly from a given date:</source>
          <target state="translated">Наконец, наша календарная система содержит интересные крайние случаи. Например, вы не всегда можете вычесть один год непосредственно из заданной даты:</target>
        </trans-unit>
        <trans-unit id="597d26c9a6435c4d3d729d8b833ba9daedca211d" translate="yes" xml:space="preserve">
          <source>Finally, our calendar system contains interesting traps for computers:</source>
          <target state="translated">Наконец,наша календарная система содержит интересные ловушки для компьютеров:</target>
        </trans-unit>
        <trans-unit id="5c2802a46ddcce0d4a717df48b205688d98ef322" translate="yes" xml:space="preserve">
          <source>Finally, realize that &lt;code&gt;update()&lt;/code&gt; does an update at the SQL level and, thus, does not call any &lt;code&gt;save()&lt;/code&gt; methods on your models, nor does it emit the &lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt;&lt;code&gt;post_save&lt;/code&gt;&lt;/a&gt; signals (which are a consequence of calling &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;Model.save()&lt;/code&gt;&lt;/a&gt;). If you want to update a bunch of records for a model that has a custom &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method, loop over them and call &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, like this:</source>
          <target state="translated">Наконец, осознайте, что &lt;code&gt;update()&lt;/code&gt; выполняет обновление на уровне SQL и, следовательно, не вызывает никаких методов &lt;code&gt;save()&lt;/code&gt; в ваших моделях и не испускает сигналы &lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;pre_save&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt; &lt;code&gt;post_save&lt;/code&gt; &lt;/a&gt; (которые являются следствием вызова &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;Model.save()&lt;/code&gt; &lt;/a&gt; ). Если вы хотите обновить группу записей для модели, имеющей пользовательский метод &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; , зациклите их и вызовите &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; , например:</target>
        </trans-unit>
        <trans-unit id="cef327d837a6ebcf77f58945fc7da002005d28f4" translate="yes" xml:space="preserve">
          <source>Finally, register the tag with your module&amp;rsquo;s &lt;code&gt;Library&lt;/code&gt; instance, as explained in &lt;a href=&quot;#howto-writing-custom-template-tags&quot;&gt;writing custom template tags&lt;/a&gt; above. Example:</source>
          <target state="translated">Наконец, зарегистрируйте тег в экземпляре &lt;code&gt;Library&lt;/code&gt; вашего модуля , как описано выше при &lt;a href=&quot;#howto-writing-custom-template-tags&quot;&gt;написании пользовательских тегов шаблона&lt;/a&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="8b84b5ca6b61dd7ec3e13cb87b04368b16c3e016" translate="yes" xml:space="preserve">
          <source>Finally, register your &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Group&lt;/code&gt; models with the admin site:</source>
          <target state="translated">Наконец, зарегистрируйте свои модели &lt;code&gt;Person&lt;/code&gt; и &lt;code&gt;Group&lt;/code&gt; на сайте администратора:</target>
        </trans-unit>
        <trans-unit id="9ae59f1cd4f96cc1501fbd570f2103e93dd7c909" translate="yes" xml:space="preserve">
          <source>Finally, specify the custom model as the default user model for your project using the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting in your &lt;code&gt;settings.py&lt;/code&gt;:</source>
          <target state="translated">Наконец, укажите пользовательскую модель в качестве пользовательской модели по умолчанию для вашего проекта, используя параметр &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt; в вашем &lt;code&gt;settings.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1de580b6192d9e344a15d96680c32ba2b8d2caae" translate="yes" xml:space="preserve">
          <source>Finally, the Django-provided base translation in &lt;code&gt;django/conf/locale&lt;/code&gt; is used as a fallback.</source>
          <target state="translated">Наконец, предоставляемый Django базовый перевод в &lt;code&gt;django/conf/locale&lt;/code&gt; используется как запасной вариант.</target>
        </trans-unit>
        <trans-unit id="c63e577d01012c7cf8876a70c793515073c96915" translate="yes" xml:space="preserve">
          <source>Finally, the following forms are tied to &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and need to be rewritten or extended to work with a custom user model:</source>
          <target state="translated">Наконец, следующие формы привязаны к &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; и должны быть переписаны или расширены для работы с пользовательской моделью пользователя:</target>
        </trans-unit>
        <trans-unit id="329cb001d49bddce33496c86e763e7caf7228133" translate="yes" xml:space="preserve">
          <source>Finally, the size of a cookie can have an impact on the &lt;a href=&quot;https://yuiblog.com/blog/2007/03/01/performance-research-part-3/&quot;&gt;speed of your site&lt;/a&gt;.</source>
          <target state="translated">Наконец, размер файла cookie может повлиять на &lt;a href=&quot;https://yuiblog.com/blog/2007/03/01/performance-research-part-3/&quot;&gt;скорость вашего сайта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a9fb92891ed9e384c8c066d50ed2e6aa79110ed" translate="yes" xml:space="preserve">
          <source>Finally, there is the &lt;a href=&quot;#django.contrib.gis.geos.fromfile&quot;&gt;&lt;code&gt;fromfile()&lt;/code&gt;&lt;/a&gt; factory method which returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object from a file:</source>
          <target state="translated">Наконец, есть фабричный метод &lt;a href=&quot;#django.contrib.gis.geos.fromfile&quot;&gt; &lt;code&gt;fromfile()&lt;/code&gt; &lt;/a&gt; который возвращает объект &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; из файла:</target>
        </trans-unit>
        <trans-unit id="4e4bdea9995161777366d8c1c03e09daac66d940" translate="yes" xml:space="preserve">
          <source>Finally, to avoid repetitive fallback code, the framework provides a &lt;a href=&quot;#django.contrib.sites.shortcuts.get_current_site&quot;&gt;&lt;code&gt;django.contrib.sites.shortcuts.get_current_site()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Наконец, чтобы избежать повторяющегося резервного кода, платформа предоставляет функцию &lt;a href=&quot;#django.contrib.sites.shortcuts.get_current_site&quot;&gt; &lt;code&gt;django.contrib.sites.shortcuts.get_current_site()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea48d70c9f2a1aeff3913cc638d5e4f3d64cde28" translate="yes" xml:space="preserve">
          <source>Finally, we hook these new views into the URLconf:</source>
          <target state="translated">Наконец,мы подключаем эти новые виды в URLconf:</target>
        </trans-unit>
        <trans-unit id="554f9eb64d754ccae5e2a1ca7de1048bc404dc95" translate="yes" xml:space="preserve">
          <source>Finally, we implement the rest of the methods that allow our query expression to play nice with other query expressions:</source>
          <target state="translated">Наконец,мы реализуем остальные методы,которые позволяют нашему выражению запроса хорошо играть с другими выражениями запроса:</target>
        </trans-unit>
        <trans-unit id="f96555ce97c75bd6adcf9e62917e490f288ab96b" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ll add a &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">Наконец, мы добавим параметр &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a88fe2f705ab58ff5303b4a2b755e83de2f7b0ff" translate="yes" xml:space="preserve">
          <source>Finally, you can also use a &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;. This is useful for example if you have a &lt;a href=&quot;../db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt;:</source>
          <target state="translated">Наконец, вы также можете использовать &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; . Это полезно, например, если у вас есть &lt;a href=&quot;../db/managers#custom-managers&quot;&gt;собственный менеджер&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c2a581eaa73c38481020b614fe636e3f569653d5" translate="yes" xml:space="preserve">
          <source>Finally, you can conditionally enable or disable actions on a per-request (and hence per-user basis) by overriding &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_actions&quot;&gt;&lt;code&gt;ModelAdmin.get_actions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Наконец, вы можете условно включить или отключить действия для каждого запроса (и, следовательно, для каждого пользователя), переопределив &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_actions&quot;&gt; &lt;code&gt;ModelAdmin.get_actions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64e614e36dff5fc2ddcd15c0ac50da2771ffe25d" translate="yes" xml:space="preserve">
          <source>Finally, you can pass &lt;code&gt;HttpResponse&lt;/code&gt; an iterator rather than strings. &lt;code&gt;HttpResponse&lt;/code&gt; will consume the iterator immediately, store its content as a string, and discard it. Objects with a &lt;code&gt;close()&lt;/code&gt; method such as files and generators are immediately closed.</source>
          <target state="translated">Наконец, вы можете передать &lt;code&gt;HttpResponse&lt;/code&gt; итератор, а не строки. &lt;code&gt;HttpResponse&lt;/code&gt; немедленно использует итератор, сохраняет его содержимое в виде строки и удаляет его. Объекты с методом &lt;code&gt;close()&lt;/code&gt; такие как файлы и генераторы, немедленно закрываются.</target>
        </trans-unit>
        <trans-unit id="24082142a7bee0d7266eae78b1faddd1c1cc9fa6" translate="yes" xml:space="preserve">
          <source>Finally, you can use configured engines directly:</source>
          <target state="translated">Наконец,вы можете использовать настроенные двигатели напрямую:</target>
        </trans-unit>
        <trans-unit id="e37d4b35a277a40229c7c1b83fd098e99922b7fa" translate="yes" xml:space="preserve">
          <source>Finally, you may run the test as follows:</source>
          <target state="translated">Наконец,вы можете провести тест следующим образом:</target>
        </trans-unit>
        <trans-unit id="ef950eb0217067af3f081ee9a17610cab8bc677b" translate="yes" xml:space="preserve">
          <source>Finally, you must specify a &lt;a href=&quot;settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;DATABASE-ENGINE&lt;/code&gt;&lt;/a&gt; in your &lt;code&gt;settings.py&lt;/code&gt; file:</source>
          <target state="translated">Наконец, вы должны указать &lt;a href=&quot;settings#std:setting-DATABASE-ENGINE&quot;&gt; &lt;code&gt;DATABASE-ENGINE&lt;/code&gt; &lt;/a&gt; в вашем файле &lt;code&gt;settings.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a832465bbf151d241d327e71e691160848f2552" translate="yes" xml:space="preserve">
          <source>Finally, you&amp;rsquo;ll have to actually set the header on your AJAX request, while protecting the CSRF token from being sent to other domains using &lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;settings.crossDomain&lt;/a&gt; in jQuery 1.5.1 and newer:</source>
          <target state="translated">Наконец, вам нужно будет установить заголовок в вашем AJAX-запросе, защищая токен CSRF от отправки в другие домены с помощью &lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;settings.crossDomain&lt;/a&gt; в jQuery 1.5.1 и новее:</target>
        </trans-unit>
        <trans-unit id="ef7c278ab8519615bb5ecd8737b7187faccc3ca3" translate="yes" xml:space="preserve">
          <source>Finally, you&amp;rsquo;ll need to remember to create user accounts before you can use this method. As we explained above, the test runner is executed using a test database, which contains no users by default. As a result, user accounts that are valid on your production site will not work under test conditions. You&amp;rsquo;ll need to create users as part of the test suite &amp;ndash; either manually (using the Django model API) or with a test fixture. Remember that if you want your test user to have a password, you can&amp;rsquo;t set the user&amp;rsquo;s password by setting the password attribute directly &amp;ndash; you must use the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt; function to store a correctly hashed password. Alternatively, you can use the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager.create_user&quot;&gt;&lt;code&gt;create_user()&lt;/code&gt;&lt;/a&gt; helper method to create a new user with a correctly hashed password.</source>
          <target state="translated">Наконец, вам нужно помнить о создании учетных записей пользователей, прежде чем использовать этот метод. Как мы объяснили выше, тестовый прогон выполняется с использованием тестовой базы данных, которая по умолчанию не содержит пользователей. В результате учетные записи пользователей, действительные на вашем производственном сайте, не будут работать в условиях тестирования. Вам нужно будет создавать пользователей как часть набора тестов - либо вручную (с помощью API модели Django), либо с помощью тестового набора. Помните, что если вы хотите, чтобы ваш тестовый пользователь имел пароль, вы не можете установить пароль пользователя, установив атрибут пароля напрямую - вы должны использовать &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt; для хранения правильно хешированного пароля. Кроме того, вы можете использовать вспомогательный метод &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager.create_user&quot;&gt; &lt;code&gt;create_user()&lt;/code&gt; &lt;/a&gt; для создания нового пользователя с правильно хешированным паролем.</target>
        </trans-unit>
        <trans-unit id="a5592a50ac2b6ac4bb6dd2632a366dc7d1aac5b7" translate="yes" xml:space="preserve">
          <source>Finally, you&amp;rsquo;ll need to set the header on your AJAX request. Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;fetch()&lt;/a&gt; API:</source>
          <target state="translated">Наконец, вам нужно установить заголовок для вашего запроса AJAX. Используя API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;fetch ()&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ca2f376257418ebbe42c6bba7c397875f4d0b018" translate="yes" xml:space="preserve">
          <source>Find all you need to know about the automated admin interface, one of Django&amp;rsquo;s most popular features:</source>
          <target state="translated">Найдите все, что вам нужно знать об автоматизированном интерфейсе администратора, одной из самых популярных функций Django:</target>
        </trans-unit>
        <trans-unit id="83be5a14f83b93bd2f267cd5495799f028c405bd" translate="yes" xml:space="preserve">
          <source>Finders Module</source>
          <target state="translated">Модуль поиска</target>
        </trans-unit>
        <trans-unit id="10038fb951c11f2f94be750c35ea01b826bd98ad" translate="yes" xml:space="preserve">
          <source>Finding data from your production database when running tests?</source>
          <target state="translated">Находите данные из вашей производственной базы данных при проведении испытаний?</target>
        </trans-unit>
        <trans-unit id="c719c26326806dda05be19d8dcf178818036ad21" translate="yes" xml:space="preserve">
          <source>Finding your first real ticket</source>
          <target state="translated">Найти свой первый реальный билет</target>
        </trans-unit>
        <trans-unit id="1f9e8d29ca99e765d9e5e9965a3b638f47f8c831" translate="yes" xml:space="preserve">
          <source>Fink</source>
          <target state="translated">Fink</target>
        </trans-unit>
        <trans-unit id="e427d7820cf1b8e5b50925cc386518036005e42d" translate="yes" xml:space="preserve">
          <source>Firebird</source>
          <target state="translated">Firebird</target>
        </trans-unit>
        <trans-unit id="6571073e23c4fa6e884ba21f0900816b1dbee48f" translate="yes" xml:space="preserve">
          <source>Firefox 3.6.9+</source>
          <target state="translated">Firefox 3.6.9+</target>
        </trans-unit>
        <trans-unit id="4dcec4af22f6f720c7f8f4e9497fe78324b1246c" translate="yes" xml:space="preserve">
          <source>First Django imports each item in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сначала Django импортирует каждый элемент в &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ee7d23eafc97724f82981c3dc7c888430666917" translate="yes" xml:space="preserve">
          <source>First download the latest GDAL release version and untar the archive:</source>
          <target state="translated">Сначала скачайте последнюю версию GDAL и распечатайте архив:</target>
        </trans-unit>
        <trans-unit id="c88843d149751ca2a972950ccc6152817e00f53b" translate="yes" xml:space="preserve">
          <source>First is a question shortcut function, &lt;code&gt;create_question&lt;/code&gt;, to take some repetition out of the process of creating questions.</source>
          <target state="translated">Во-первых, это функция ярлыка вопроса, &lt;code&gt;create_question&lt;/code&gt; , чтобы вывести некоторые повторения из процесса создания вопросов.</target>
        </trans-unit>
        <trans-unit id="43035eab990cc69bcd9f23d2944f973548270b12" translate="yes" xml:space="preserve">
          <source>First of all, &lt;code&gt;headline&lt;/code&gt; is not indexed, which will make the underlying database fetch slower.</source>
          <target state="translated">Прежде всего, &lt;code&gt;headline&lt;/code&gt; не индексируется, что замедляет выборку базы данных.</target>
        </trans-unit>
        <trans-unit id="99290d59716a55c82e8b063db8bf7f05e1a4b00b" translate="yes" xml:space="preserve">
          <source>First steps</source>
          <target state="translated">Первые шаги</target>
        </trans-unit>
        <trans-unit id="20699b2a5803a6e614a59a724943eb463171c0f3" translate="yes" xml:space="preserve">
          <source>First time contributors should also read Django&amp;rsquo;s &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/new-contributors/&quot;&gt;documentation for first time contributors&lt;/a&gt;. It has lots of good advice for those of us who are new to helping out with Django.</source>
          <target state="translated">Участники, &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/new-contributors/&quot;&gt;впервые участвующие в&lt;/a&gt; проекте, должны также прочитать документацию Django для участников, впервые создавших документ . У этого есть много хороших советов для тех из нас, кто плохо знаком с Django.</target>
        </trans-unit>
        <trans-unit id="fe9b57599c86c951e4a7e1b5f1284430d8021d77" translate="yes" xml:space="preserve">
          <source>First time contributors should also read Django&amp;rsquo;s &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/new-contributors/&quot;&gt;documentation for first time contributors&lt;/a&gt;. It has lots of good advice for those of us who are new to helping out with Django.</source>
          <target state="translated">Новички также должны прочитать &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/new-contributors/&quot;&gt;документацию&lt;/a&gt; Django для новых участников . В нем есть много хороших советов для тех из нас, кто впервые помогает с Django.</target>
        </trans-unit>
        <trans-unit id="77213d5813b86668ea11f1f10608d43f8d41acba" translate="yes" xml:space="preserve">
          <source>First we need to add &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; to our &lt;code&gt;Author&lt;/code&gt; class:</source>
          <target state="translated">Сначала нам нужно добавить &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt; в наш класс &lt;code&gt;Author&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bc39948ba4573e7943c3bf60f22272eb1d430136" translate="yes" xml:space="preserve">
          <source>First we&amp;rsquo;ll need to create a user who can login to the admin site. Run the following command:</source>
          <target state="translated">Сначала нам нужно создать пользователя, который сможет войти на сайт администратора. Запустите следующую команду:</target>
        </trans-unit>
        <trans-unit id="b8fec17a2b622381f0a4b41161e6bbe4d8bdb609" translate="yes" xml:space="preserve">
          <source>First, Django looks for a matching &lt;a href=&quot;#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; (in this example, &lt;code&gt;'polls'&lt;/code&gt;). This will yield a list of instances of that application.</source>
          <target state="translated">Во-первых, Django ищет подходящее &lt;a href=&quot;#term-application-namespace&quot;&gt;пространство имен приложения&lt;/a&gt; (в этом примере &lt;code&gt;'polls'&lt;/code&gt; ). Это даст список экземпляров этого приложения.</target>
        </trans-unit>
        <trans-unit id="ef70a6cfb1e8f430c465869e59c076034923c444" translate="yes" xml:space="preserve">
          <source>First, check if you can install SpatiaLite from system packages or binaries.</source>
          <target state="translated">Во-первых,проверьте,можете ли вы установить SpatiaLite из системных пакетов или двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="95251784875a5e4d20dd8450c9b80410ac635a7f" translate="yes" xml:space="preserve">
          <source>First, create a directory called &lt;code&gt;static&lt;/code&gt; in your &lt;code&gt;polls&lt;/code&gt; directory. Django will look for static files there, similarly to how Django finds templates inside &lt;code&gt;polls/templates/&lt;/code&gt;.</source>
          <target state="translated">Во-первых, создайте каталог с именем &lt;code&gt;static&lt;/code&gt; в вашем каталоге &lt;code&gt;polls&lt;/code&gt; . Django будет искать статические файлы там, подобно тому, как Django находит шаблоны в &lt;code&gt;polls/templates/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f96e5da4a1149d193b2bdcddd8b25aef2a1fc28b" translate="yes" xml:space="preserve">
          <source>First, create a directory called &lt;code&gt;templates&lt;/code&gt; in your &lt;code&gt;polls&lt;/code&gt; directory. Django will look for templates in there.</source>
          <target state="translated">Сначала создайте каталог с именем &lt;code&gt;templates&lt;/code&gt; в вашем каталоге &lt;code&gt;polls&lt;/code&gt; . Джанго будет искать там шаблоны.</target>
        </trans-unit>
        <trans-unit id="1f90c2c681abf881963f9d053d00ec47ee328d19" translate="yes" xml:space="preserve">
          <source>First, create a parent directory for &lt;code&gt;polls&lt;/code&gt;, outside of your Django project. Call this directory &lt;code&gt;django-polls&lt;/code&gt;.</source>
          <target state="translated">Сначала создайте родительский каталог для &lt;code&gt;polls&lt;/code&gt; вне вашего проекта Django. Назовите этот каталог &lt;code&gt;django-polls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07c0c655fdb6b481e371840e5383fd9133c1a098" translate="yes" xml:space="preserve">
          <source>First, define the function that takes the argument and produces a dictionary of data for the result. The important point here is we only need to return a dictionary, not anything more complex. This will be used as a template context for the template fragment. Example:</source>
          <target state="translated">Сначала определите функцию,которая принимает аргумент и создает словарь данных для результата.Важный момент здесь заключается в том,что нужно только вернуть словарь,а не что-то более сложное.Он будет использоваться в качестве контекста шаблона для фрагмента шаблона.Пример:</target>
        </trans-unit>
        <trans-unit id="40a6ca6ac1151f0eec3cdc666ba2d0dcfb692276" translate="yes" xml:space="preserve">
          <source>First, download GEOS from the GEOS website and untar the source archive:</source>
          <target state="translated">Сначала загрузите GEOS с веб-сайта GEOS и распечатайте архив с исходными текстами:</target>
        </trans-unit>
        <trans-unit id="05ac470b0f07720d2a10c844d43976a668aacc11" translate="yes" xml:space="preserve">
          <source>First, download the PROJ.4 source code and datum shifting files &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;:</source>
          <target state="translated">Сначала загрузите исходный код PROJ.4 и файлы смещения данных &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4e268d6f08ea9c850920ac60f90e7a12aac80aa6" translate="yes" xml:space="preserve">
          <source>First, download the latest &lt;a href=&quot;https://www.enterprisedb.com/downloads/postgres-postgresql-downloads&quot;&gt;PostgreSQL 9.x installer&lt;/a&gt; from the &lt;a href=&quot;https://www.enterprisedb.com&quot;&gt;EnterpriseDB&lt;/a&gt; website. After downloading, run the installer, follow the on-screen directions, and keep the default options unless you know the consequences of changing them.</source>
          <target state="translated">Сначала загрузите последнюю версию &lt;a href=&quot;https://www.enterprisedb.com/downloads/postgres-postgresql-downloads&quot;&gt;установщика PostgreSQL 9.x&lt;/a&gt; с веб-сайта &lt;a href=&quot;https://www.enterprisedb.com&quot;&gt;EnterpriseDB&lt;/a&gt; . После загрузки запустите программу установки, следуйте инструкциям на экране и оставьте параметры по умолчанию, если не знаете последствий их изменения.</target>
        </trans-unit>
        <trans-unit id="da3b0283ec00b2d4fdd63bac9b59bf3e759edc72" translate="yes" xml:space="preserve">
          <source>First, follow the instructions in the &lt;a href=&quot;index#kyngchaos&quot;&gt;KyngChaos packages&lt;/a&gt; section.</source>
          <target state="translated">Сначала следуйте инструкциям в &lt;a href=&quot;index#kyngchaos&quot;&gt;разделе пакетов KyngChaos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64c0574de613a5a5d855304b6002948bbfb18e08" translate="yes" xml:space="preserve">
          <source>First, here&amp;rsquo;s a configuration which writes all logging from the &lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt; logger to a local file:</source>
          <target state="translated">Во-первых, вот конфигурация, которая записывает всю запись в журнал &lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt; в локальный файл:</target>
        </trans-unit>
        <trans-unit id="4065a170cb0a7fcfc755d6ce0c9d5d28c68c14e5" translate="yes" xml:space="preserve">
          <source>First, invoke the Django shell:</source>
          <target state="translated">Сначала вызовите оболочку &quot;Джанго&quot;:</target>
        </trans-unit>
        <trans-unit id="72e9467116dd2961d61a735a8c47c0bc77e85890" translate="yes" xml:space="preserve">
          <source>First, it looks for the language prefix in the requested URL. This is only performed when you are using the &lt;code&gt;i18n_patterns&lt;/code&gt; function in your root URLconf. See &lt;a href=&quot;#url-internationalization&quot;&gt;Internationalization: in URL patterns&lt;/a&gt; for more information about the language prefix and how to internationalize URL patterns.</source>
          <target state="translated">Сначала он ищет языковой префикс в запрошенном URL. Это выполняется только тогда, когда вы используете функцию &lt;code&gt;i18n_patterns&lt;/code&gt; в своем корневом URLconf. См. &lt;a href=&quot;#url-internationalization&quot;&gt;Интернационализация: в шаблонах URL&lt;/a&gt; для получения дополнительной информации о префиксе языка и о том, как интернационализировать шаблоны URL.</target>
        </trans-unit>
        <trans-unit id="f6bfabb8d777bbdb47935b9c331aa5bdea0d0a3c" translate="yes" xml:space="preserve">
          <source>First, it tries to call a method, passing the &lt;code&gt;obj&lt;/code&gt; argument, where &lt;code&gt;obj&lt;/code&gt; is the object returned by &lt;code&gt;get_object()&lt;/code&gt;.</source>
          <target state="translated">Сначала он пытается вызвать метод, передавая аргумент &lt;code&gt;obj&lt;/code&gt; , где &lt;code&gt;obj&lt;/code&gt; - это объект, возвращаемый &lt;code&gt;get_object()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1c355f311bddfd7d6f814d29cbf65fae7c521e3" translate="yes" xml:space="preserve">
          <source>First, make sure your template settings are checking inside app directories:</source>
          <target state="translated">Во-первых,убедитесь,что ваши настройки шаблонов проверяются в каталогах приложений:</target>
        </trans-unit>
        <trans-unit id="4bbd700df3056ac3723d7fcd139048bbfde7bbcc" translate="yes" xml:space="preserve">
          <source>First, open the &lt;code&gt;polls/urls.py&lt;/code&gt; URLconf and change it like so:</source>
          <target state="translated">Во-первых, откройте &lt;code&gt;polls/urls.py&lt;/code&gt; адрес polls / urls.py и измените его следующим образом:</target>
        </trans-unit>
        <trans-unit id="43dd5d61895190dc15dd5b6148805d46a692e3ef" translate="yes" xml:space="preserve">
          <source>First, we import the class &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&quot;../../ref/request-response#module-django.http&quot;&gt;&lt;code&gt;django.http&lt;/code&gt;&lt;/a&gt; module, along with Python&amp;rsquo;s &lt;code&gt;datetime&lt;/code&gt; library.</source>
          <target state="translated">Сначала мы импортируем класс &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; из модуля &lt;a href=&quot;../../ref/request-response#module-django.http&quot;&gt; &lt;code&gt;django.http&lt;/code&gt; &lt;/a&gt; вместе с библиотекой &lt;code&gt;datetime&lt;/code&gt; в Python .</target>
        </trans-unit>
        <trans-unit id="145a1430fd08e0dbf0cb33c1604421f8f2437c3d" translate="yes" xml:space="preserve">
          <source>First, we need to define a receiver function. A receiver can be any Python function or method:</source>
          <target state="translated">Сначала нам нужно определить функцию приемника.Приемником может быть любая функция или метод питона:</target>
        </trans-unit>
        <trans-unit id="13baffa2f5f7de1c46ad5da632df46aaaa24a8de" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;d need to add an author detail bit in the URLconf to point to a custom view:</source>
          <target state="translated">Во-первых, нам нужно добавить бит сведений об авторе в URLconf, чтобы указать на пользовательское представление:</target>
        </trans-unit>
        <trans-unit id="8454a5ec130fde2ddf69d758a0b9cacddf54e6f8" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll add the custom hasher:</source>
          <target state="translated">Сначала мы добавим пользовательский хеш:</target>
        </trans-unit>
        <trans-unit id="c2a03644e55ef699e43555777f47af59c4cf407e" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll explore overriding templates by creating replacement templates in your project&amp;rsquo;s templates directory.</source>
          <target state="translated">Сначала мы рассмотрим переопределение шаблонов путем создания шаблонов замены в каталоге шаблонов вашего проекта.</target>
        </trans-unit>
        <trans-unit id="fdf45d6a678bfbb18d68f2f58940017b92430b08" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll need to write a function that gets called when the action is triggered from the admin. Action functions are regular functions that take three arguments:</source>
          <target state="translated">Во-первых, нам нужно написать функцию, которая вызывается, когда действие запускается администратором. Функции действий - это обычные функции, которые принимают три аргумента:</target>
        </trans-unit>
        <trans-unit id="4e7eccbd6c4b76c9e1f9ca2b9a2f55acb81f48d2" translate="yes" xml:space="preserve">
          <source>First, you can let the formset do most of the work:</source>
          <target state="translated">Во-первых,вы можете позволить формам делать большую часть работы:</target>
        </trans-unit>
        <trans-unit id="5bf556882e52bc156e88cba7a5467001923ad11e" translate="yes" xml:space="preserve">
          <source>First, you must add the &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.RemoteUserMiddleware&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting &lt;strong&gt;after&lt;/strong&gt; the &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Во- первых, вы должны добавить &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.RemoteUserMiddleware&lt;/code&gt; &lt;/a&gt; к &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; настройки &lt;strong&gt;после&lt;/strong&gt; в &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="73abbbb12778e4c863b4cfddcc6f67ea55cc0130" translate="yes" xml:space="preserve">
          <source>First, you must get the CSRF token. How to do that depends on whether or not the &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; settings are enabled.</source>
          <target state="translated">Во-первых, вы должны получить токен CSRF. Как это сделать, зависит от того, &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; параметры CSRF_USE_SESSIONS и CSRF_COOKIE_HTTPONLY .</target>
        </trans-unit>
        <trans-unit id="3436659d0b5e771764d4e0fb1222b0bbb9e16717" translate="yes" xml:space="preserve">
          <source>Firstly - the &lt;code&gt;MembershipInline&lt;/code&gt; class references &lt;code&gt;Group.members.through&lt;/code&gt;. The &lt;code&gt;through&lt;/code&gt; attribute is a reference to the model that manages the many-to-many relation. This model is automatically created by Django when you define a many-to-many field.</source>
          <target state="translated">Во-первых, класс &lt;code&gt;MembershipInline&lt;/code&gt; ссылается на &lt;code&gt;Group.members.through&lt;/code&gt; . &lt;code&gt;through&lt;/code&gt; атрибут является ссылкой на модель , которая управляет многие-ко-многим. Эта модель автоматически создается Django, когда вы определяете поле &amp;laquo;многие ко многим&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="47a2156582e62c3760eb7ba24dc66644c3150981" translate="yes" xml:space="preserve">
          <source>Firstly, in a real-life case you need to consider what is happening before and after your count to work out what&amp;rsquo;s an optimal way of doing it &lt;em&gt;in that particular context&lt;/em&gt;. The database optimization documents describes &lt;a href=&quot;db/optimization#overuse-of-count-and-exists&quot;&gt;a case where counting in the template would be better&lt;/a&gt;.</source>
          <target state="translated">Во-первых, в случае реальной жизни вам необходимо рассмотреть, что происходит до и после подсчета, чтобы определить, какой оптимальный способ сделать это &lt;em&gt;в данном конкретном контексте&lt;/em&gt; . Документы по оптимизации базы данных описывают &lt;a href=&quot;db/optimization#overuse-of-count-and-exists&quot;&gt;случай, когда счет в шаблоне будет лучше&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="654babb9ef1f86c0cc82cbdc43ce71dd33c0363f" translate="yes" xml:space="preserve">
          <source>Firstly, in order to upload files, you&amp;rsquo;ll need to make sure that your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element correctly defines the &lt;code&gt;enctype&lt;/code&gt; as &lt;code&gt;&quot;multipart/form-data&quot;&lt;/code&gt;:</source>
          <target state="translated">Во-первых, чтобы загрузить файлы, вам нужно убедиться, что ваш элемент &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; правильно определяет &lt;code&gt;enctype&lt;/code&gt; как &lt;code&gt;&quot;multipart/form-data&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ceb459ef79103d51bc85693c0b6aa6118973366d" translate="yes" xml:space="preserve">
          <source>Firstly, you can set an &lt;code&gt;app_name&lt;/code&gt; attribute in the included URLconf module, at the same level as the &lt;code&gt;urlpatterns&lt;/code&gt; attribute. You have to pass the actual module, or a string reference to the module, to &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt;, not the list of &lt;code&gt;urlpatterns&lt;/code&gt; itself.</source>
          <target state="translated">Во-первых, вы можете установить атрибут &lt;code&gt;app_name&lt;/code&gt; во включенном модуле URLconf на том же уровне, что и атрибут &lt;code&gt;urlpatterns&lt;/code&gt; . Вы должны передать фактический модуль или строковую ссылку на модуль, чтобы &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; , а не сам список &lt;code&gt;urlpatterns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="952d6d50050346e8e9fde3f473baa28e0cf1643d" translate="yes" xml:space="preserve">
          <source>Firstly, you can use the &lt;code&gt;send_messages()&lt;/code&gt; method. &lt;code&gt;send_messages()&lt;/code&gt; takes a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances (or subclasses), and sends them all using a single connection.</source>
          <target state="translated">Во-первых, вы можете использовать метод &lt;code&gt;send_messages()&lt;/code&gt; . &lt;code&gt;send_messages()&lt;/code&gt; берет список экземпляров &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; (или подклассов) и отправляет их все, используя одно соединение.</target>
        </trans-unit>
        <trans-unit id="ddd5f3c43d46d2dd84100e4b9202c1e150515732" translate="yes" xml:space="preserve">
          <source>Firstly, your tests must be &lt;code&gt;async def&lt;/code&gt; methods on the test class (in order to give them an asynchronous context). Django will automatically detect any &lt;code&gt;async def&lt;/code&gt; tests and wrap them so they run in their own event loop.</source>
          <target state="translated">Во-первых, ваши тесты должны быть &lt;code&gt;async def&lt;/code&gt; методами def в тестовом классе (чтобы дать им асинхронный контекст). Django автоматически обнаружит любые тесты &lt;code&gt;async def&lt;/code&gt; и обернет их, чтобы они запускались в собственном цикле событий.</target>
        </trans-unit>
        <trans-unit id="1d0e1d4e72315bbc94817bd7e1994f363c26f394" translate="yes" xml:space="preserve">
          <source>Fixing &lt;code&gt;UnicodeEncodeError&lt;/code&gt; for file uploads</source>
          <target state="translated">Исправление &lt;code&gt;UnicodeEncodeError&lt;/code&gt; для загрузки файлов</target>
        </trans-unit>
        <trans-unit id="8975443fcef2a9c2e02d4a2b02c41dba5c20d6fe" translate="yes" xml:space="preserve">
          <source>Fixing the bug</source>
          <target state="translated">Исправление ошибки</target>
        </trans-unit>
        <trans-unit id="d580141077874f18b73dcfdda86434ddde71ab28" translate="yes" xml:space="preserve">
          <source>Fixture loading</source>
          <target state="translated">Загрузка приспособления</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="649f72a93abda9c49a9ca63c86342bb63ae6a485" translate="yes" xml:space="preserve">
          <source>Fixtures are also used by the &lt;a href=&quot;../topics/testing/tools#topics-testing-fixtures&quot;&gt;testing framework&lt;/a&gt; to help set up a consistent test environment.</source>
          <target state="translated">Приспособления также используются средой &lt;a href=&quot;../topics/testing/tools#topics-testing-fixtures&quot;&gt;тестирования,&lt;/a&gt; чтобы помочь установить согласованную среду тестирования.</target>
        </trans-unit>
        <trans-unit id="cc1b2f853c73dd2ef4af83d5cc672056528796fb" translate="yes" xml:space="preserve">
          <source>Fixtures generated with &lt;code&gt;USE_TZ = False&lt;/code&gt;, or before Django 1.4, use the &amp;ldquo;naive&amp;rdquo; format. If your project contains such fixtures, after you enable time zone support, you&amp;rsquo;ll see &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt;s when you load them. To get rid of the warnings, you must convert your fixtures to the &amp;ldquo;aware&amp;rdquo; format.</source>
          <target state="translated">Светильники, сгенерированные с &lt;code&gt;USE_TZ = False&lt;/code&gt; или до Django 1.4, используют &amp;laquo;наивный&amp;raquo; формат. Если ваш проект содержит такие приборы, после включения поддержки часовых поясов вы увидите &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#RuntimeWarning&quot;&gt; &lt;code&gt;RuntimeWarning&lt;/code&gt; &lt;/a&gt; при их загрузке. Чтобы избавиться от предупреждений, вы должны преобразовать свои приборы в &amp;laquo;осведомленный&amp;raquo; формат.</target>
        </trans-unit>
        <trans-unit id="31f4fad7b21527024016324c7145b53c88b4f070" translate="yes" xml:space="preserve">
          <source>Fixtures may be compressed in &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;gz&lt;/code&gt;, or &lt;code&gt;bz2&lt;/code&gt; format. For example:</source>
          <target state="translated">Светильники могут быть сжаты в формате &lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;gz&lt;/code&gt; или &lt;code&gt;bz2&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="0c5b989c2d6e6bdd59d22e11ad3c1993e41d8ac8" translate="yes" xml:space="preserve">
          <source>Flatpage templates</source>
          <target state="translated">Плоскостные шаблоны</target>
        </trans-unit>
        <trans-unit id="ca8db34dc5820ff17af7ddc9a31f107d898dc72a" translate="yes" xml:space="preserve">
          <source>Flatpage templates are passed a single context variable, &lt;code&gt;flatpage&lt;/code&gt;, which is the flatpage object.</source>
          <target state="translated">Шаблоны плоских страниц передаются одной контекстной переменной &lt;code&gt;flatpage&lt;/code&gt; , которая является объектом flatpage.</target>
        </trans-unit>
        <trans-unit id="7de6b24fcf1c2acb2cf38c3564995c617c021e83" translate="yes" xml:space="preserve">
          <source>Flatpages</source>
          <target state="translated">Flatpages</target>
        </trans-unit>
        <trans-unit id="1805c01f84a571eb39718db2b5c9de479ccb1b0b" translate="yes" xml:space="preserve">
          <source>Flatpages are represented by a standard &lt;a href=&quot;../../topics/db/models&quot;&gt;Django model&lt;/a&gt;, which lives in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/flatpages/models.py&quot;&gt;django/contrib/flatpages/models.py&lt;/a&gt;. You can access flatpage objects via the &lt;a href=&quot;../../topics/db/queries&quot;&gt;Django database API&lt;/a&gt;.</source>
          <target state="translated">Плоские страницы представлены стандартной &lt;a href=&quot;../../topics/db/models&quot;&gt;моделью Django&lt;/a&gt; , которая находится в &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/flatpages/models.py&quot;&gt;django / contrib / flatpages / models.py&lt;/a&gt; . Вы можете получить доступ к объектам плоских страниц через &lt;a href=&quot;../../topics/db/queries&quot;&gt;API базы данных Django&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76bac1a4adf8a73eecc7c5cd6ace5a3ef38fbb8e" translate="yes" xml:space="preserve">
          <source>Flatpages will not apply view middleware</source>
          <target state="translated">Плоские страницы не будут применять промежуточное программное обеспечение для просмотра.</target>
        </trans-unit>
        <trans-unit id="be50bf019784d62df9e76ade29eac060efd356c2" translate="yes" xml:space="preserve">
          <source>Following relationships &amp;ldquo;backward&amp;rdquo;</source>
          <target state="translated">Следующие отношения &amp;laquo;назад&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="72a2f7f3de2f03aa6bed21060ae26fa0ec8ee75a" translate="yes" xml:space="preserve">
          <source>Following relationships backwards</source>
          <target state="translated">Следующие отношения наоборот</target>
        </trans-unit>
        <trans-unit id="2962af366a6a17e326ab4f60b0fbf6a0f052eefd" translate="yes" xml:space="preserve">
          <source>Following these guidelines is particularly necessary if you write reusable forms, form fields, and model fields.</source>
          <target state="translated">Соблюдение этих рекомендаций особенно необходимо,если Вы пишете формы многоразового использования,поля форм и поля моделей.</target>
        </trans-unit>
        <trans-unit id="8799db14a19349173c508b9e0760c066a41322c9" translate="yes" xml:space="preserve">
          <source>Follows symlinks to directories when looking for new translation strings.</source>
          <target state="translated">Следит за сим-ссылками на каталоги при поиске новых строк перевода.</target>
        </trans-unit>
        <trans-unit id="4c9800d93f6eb82531c506a8502d3a682cbf8592" translate="yes" xml:space="preserve">
          <source>Foot, Foot (International)</source>
          <target state="translated">Нога,нога (международный)</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="8778e38c267b25f48a4d77bf61008d34682f3180" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;default=date.today&lt;/code&gt; - from &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date.today&quot;&gt;&lt;code&gt;datetime.date.today()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Для &lt;a href=&quot;#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;default=date.today&lt;/code&gt; - от &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date.today&quot;&gt; &lt;code&gt;datetime.date.today()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="110b4938ed9062f37b2508210c9e670f18a44565" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;default=timezone.now&lt;/code&gt; - from &lt;a href=&quot;../utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Для &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;default=timezone.now&lt;/code&gt; - из &lt;a href=&quot;../utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="741319df59ed93ce505c7c02877f25b3ed1aaea2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;bulk&lt;/code&gt; argument is passed on to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для объектов &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; &lt;code&gt;bulk&lt;/code&gt; аргумент передается в &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9651ca2921e2480cd0c28bb2f088f3b4e6a026c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; objects, this method accepts a &lt;code&gt;bulk&lt;/code&gt; argument to control how to perform the operation. If &lt;code&gt;True&lt;/code&gt; (the default), &lt;code&gt;QuerySet.update()&lt;/code&gt; is used. If &lt;code&gt;bulk=False&lt;/code&gt;, the &lt;code&gt;save()&lt;/code&gt; method of each individual model instance is called instead. This triggers the &lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt;&lt;code&gt;post_save&lt;/code&gt;&lt;/a&gt; signals and comes at the expense of performance.</source>
          <target state="translated">Для объектов &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; этот метод принимает &lt;code&gt;bulk&lt;/code&gt; аргумент для управления выполнением операции. Если &lt;code&gt;True&lt;/code&gt; (по умолчанию), используется &lt;code&gt;QuerySet.update()&lt;/code&gt; . Если &lt;code&gt;bulk=False&lt;/code&gt; , вместо этого вызывается метод &lt;code&gt;save()&lt;/code&gt; каждого отдельного экземпляра модели. Это вызывает сигналы &lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;pre_save&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt; &lt;code&gt;post_save&lt;/code&gt; &lt;/a&gt; и происходит за счет производительности.</target>
        </trans-unit>
        <trans-unit id="7b7f862e3c2a20b574e8eef35fee476492f18603" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; objects, this method only exists if &lt;code&gt;null=True&lt;/code&gt;. If the related field can&amp;rsquo;t be set to &lt;code&gt;None&lt;/code&gt; (&lt;code&gt;NULL&lt;/code&gt;), then an object can&amp;rsquo;t be removed from a relation without being added to another. In the above example, removing &lt;code&gt;e&lt;/code&gt; from &lt;code&gt;b.entry_set()&lt;/code&gt; is equivalent to doing &lt;code&gt;e.blog = None&lt;/code&gt;, and because the &lt;code&gt;blog&lt;/code&gt;&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t have &lt;code&gt;null=True&lt;/code&gt;, this is invalid.</source>
          <target state="translated">Для объектов &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; этот метод существует, только если &lt;code&gt;null=True&lt;/code&gt; . Если связанное поле не может быть установлено в &lt;code&gt;None&lt;/code&gt; ( &lt;code&gt;NULL&lt;/code&gt; ), то объект не может быть удален из отношения без добавления в другое. В приведенном выше примере удаление &lt;code&gt;e&lt;/code&gt; из &lt;code&gt;b.entry_set()&lt;/code&gt; эквивалентно выполнению &lt;code&gt;e.blog = None&lt;/code&gt; , а поскольку у &lt;code&gt;blog&lt;/code&gt; &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; нет &lt;code&gt;null=True&lt;/code&gt; , это недопустимо.</target>
        </trans-unit>
        <trans-unit id="7ec8fef3dc57b8e1919c123ac5e02c80e887f7f1" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;UserAttributeSimilarityValidator&lt;/code&gt; and &lt;code&gt;CommonPasswordValidator&lt;/code&gt;, we&amp;rsquo;re using the default settings in this example. &lt;code&gt;NumericPasswordValidator&lt;/code&gt; has no settings.</source>
          <target state="translated">Для &lt;code&gt;UserAttributeSimilarityValidator&lt;/code&gt; и &lt;code&gt;CommonPasswordValidator&lt;/code&gt; мы используем настройки по умолчанию в этом примере. &lt;code&gt;NumericPasswordValidator&lt;/code&gt; не имеет настроек.</target>
        </trans-unit>
        <trans-unit id="cbe7a4654f6563b054d500267f83512db264635c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;to_python()&lt;/code&gt;, if anything goes wrong during value conversion, you should raise a &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">Для &lt;code&gt;to_python()&lt;/code&gt; , если что-то пойдет не так во время преобразования значения, вы должны вызвать исключение &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c6a88e5cfef39cc8e6590be619ddb6e98c6c41d" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;measuring&lt;/em&gt;, rather than querying on distances, use the &lt;a href=&quot;functions#django.contrib.gis.db.models.functions.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Для &lt;em&gt;измерения&lt;/em&gt; вместо запроса расстояний используйте функцию &amp;laquo; &lt;a href=&quot;functions#django.contrib.gis.db.models.functions.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea0876de4dccf03bdae9009efcce83719085e5c0" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;text/*&lt;/em&gt; content-types, the character set (i.e. &lt;code&gt;utf8&lt;/code&gt;) supplied by the browser. Again, &amp;ldquo;trust but verify&amp;rdquo; is the best policy here.</source>
          <target state="translated">Для &lt;em&gt;text / *&lt;/em&gt; content-types - набор символов (то есть &lt;code&gt;utf8&lt;/code&gt; ), предоставляемый браузером. Опять же, &amp;laquo;доверяй, но проверяй&amp;raquo; - лучшая политика.</target>
        </trans-unit>
        <trans-unit id="32b317d6f38f95199b66a362e3f52af6e0ffa8d9" translate="yes" xml:space="preserve">
          <source>For AJAX requests, the fallback will be performed only if the &lt;code&gt;next&lt;/code&gt; parameter was set. Otherwise a 204 status code (No Content) will be returned.</source>
          <target state="translated">Для запросов AJAX откат будет выполняться, только если был задан &lt;code&gt;next&lt;/code&gt; параметр. В противном случае будет возвращен код состояния 204 (без содержимого).</target>
        </trans-unit>
        <trans-unit id="fd8d1898b2475523fa3b4c8d7e783aaa6ca7a841" translate="yes" xml:space="preserve">
          <source>For MIME types starting with &lt;code&gt;text/&lt;/code&gt;, binary data is handled as in &lt;code&gt;attach()&lt;/code&gt;.</source>
          <target state="translated">Для типов MIME, начинающихся с &lt;code&gt;text/&lt;/code&gt; , двоичные данные обрабатываются как в &lt;code&gt;attach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c398c7d9b66e5e9d90421bc591bb2afebb6ef8" translate="yes" xml:space="preserve">
          <source>For MIME types starting with &lt;em&gt;text/&lt;/em&gt;, binary data is handled as in &lt;code&gt;attach()&lt;/code&gt;.</source>
          <target state="translated">Для типов MIME, начинающихся с &lt;em&gt;text /&lt;/em&gt; , двоичные данные обрабатываются как в &lt;code&gt;attach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb31c5f02b352bb580243f60983f2e82fd5cdc95" translate="yes" xml:space="preserve">
          <source>For MyISAM tables, &lt;code&gt;SPATIAL INDEX&lt;/code&gt; creates an R-tree index. For storage engines that support nonspatial indexing of spatial columns, the engine creates a B-tree index. A B-tree index on spatial values will be useful for exact-value lookups, but not for range scans.</source>
          <target state="translated">Для таблиц MyISAM &lt;code&gt;SPATIAL INDEX&lt;/code&gt; создает индекс R-дерева. Для механизмов хранения, которые поддерживают непространственную индексацию пространственных столбцов, механизм создает индекс B-дерева. Индекс B-дерева для пространственных значений будет полезен для поиска с точным значением, но не для сканирования диапазона.</target>
        </trans-unit>
        <trans-unit id="114241fe165523586156c3d9b8b72468673e5a4e" translate="yes" xml:space="preserve">
          <source>For MySQL, this runs the &lt;code&gt;mysql&lt;/code&gt; command-line client.</source>
          <target state="translated">Для MySQL это запускает клиент командной строки &lt;code&gt;mysql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01e48f4df2874fe3eaa026122b760ee523ebd8e5" translate="yes" xml:space="preserve">
          <source>For OpenSolaris users, the system library path may be modified using the &lt;code&gt;crle&lt;/code&gt; utility. Run &lt;code&gt;crle&lt;/code&gt; with no options to see the current configuration and use &lt;code&gt;crle -l&lt;/code&gt; to set with the new library path. Be &lt;em&gt;very&lt;/em&gt; careful when modifying the system library path:</source>
          <target state="translated">Для пользователей OpenSolaris путь к системной библиотеке можно изменить с &lt;code&gt;crle&lt;/code&gt; утилиты crle . Запустите &lt;code&gt;crle&lt;/code&gt; без параметров, чтобы увидеть текущую конфигурацию, и используйте &lt;code&gt;crle -l&lt;/code&gt; , чтобы установить новый путь к библиотеке. Будьте &lt;em&gt;очень&lt;/em&gt; осторожны при изменении пути к системной библиотеке:</target>
        </trans-unit>
        <trans-unit id="3eeded676ad457b8d591af8ff3281ca437900ed1" translate="yes" xml:space="preserve">
          <source>For Oracle, this runs the &lt;code&gt;sqlplus&lt;/code&gt; command-line client.</source>
          <target state="translated">Для Oracle это запускает клиент командной строки &lt;code&gt;sqlplus&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a982ff9d1e3163260b354c31d72394140bbcb2f3" translate="yes" xml:space="preserve">
          <source>For PostgreSQL, this runs the &lt;code&gt;psql&lt;/code&gt; command-line client.</source>
          <target state="translated">Для PostgreSQL это запускает клиент командной строки &lt;code&gt;psql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd417a019713a6904e3b18dff92248c76cc5011c" translate="yes" xml:space="preserve">
          <source>For SQLite, this runs the &lt;code&gt;sqlite3&lt;/code&gt; command-line client.</source>
          <target state="translated">Для SQLite это работает &lt;code&gt;sqlite3&lt;/code&gt; клиент командной строки.</target>
        </trans-unit>
        <trans-unit id="fd5567ff92e75db4f3301c5a20e84775b7c0a7eb" translate="yes" xml:space="preserve">
          <source>For Windows users</source>
          <target state="translated">Для пользователей Windows</target>
        </trans-unit>
        <trans-unit id="cd102962a99ab92625c89315dc500f0b617135ca" translate="yes" xml:space="preserve">
          <source>For Windows users, who do not have symlinking functionality available, you can copy &lt;code&gt;django-admin.exe&lt;/code&gt; to a location on your existing path or edit the &lt;code&gt;PATH&lt;/code&gt; settings (under &lt;code&gt;Settings - Control Panel - System - Advanced -
Environment...&lt;/code&gt;) to point to its installed location.</source>
          <target state="translated">Для пользователей Windows, у которых нет доступных функций символьных ссылок, вы можете скопировать &lt;code&gt;django-admin.exe&lt;/code&gt; в папку на вашем существующем пути или изменить настройки &lt;code&gt;PATH&lt;/code&gt; (в разделе &amp;laquo; &lt;code&gt;Settings - Control Panel - System - Advanced - Environment...&lt;/code&gt; ), чтобы указать в установленном месте.</target>
        </trans-unit>
        <trans-unit id="d15786dfcbe8be325214a68d56dd2416df64952e" translate="yes" xml:space="preserve">
          <source>For Windows, you may find binaries on the &lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/&quot;&gt;Gaia-SINS&lt;/a&gt; home page.</source>
          <target state="translated">Для Windows вы можете найти двоичные файлы на домашней странице &lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/&quot;&gt;Gaia-SINS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0e34ff26a96c16c70436cafdd6406725c407716" translate="yes" xml:space="preserve">
          <source>For a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt;&lt;code&gt;USERNAME_FIELD&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt;, these methods receive the value of the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.to_field&quot;&gt;&lt;code&gt;to_field&lt;/code&gt;&lt;/a&gt; (the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key&lt;/code&gt;&lt;/a&gt; by default) of an existing instance.</source>
          <target state="translated">Для &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt; &lt;code&gt;USERNAME_FIELD&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; &lt;/a&gt; , эти способы получить значение &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.to_field&quot;&gt; &lt;code&gt;to_field&lt;/code&gt; &lt;/a&gt; (The &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key&lt;/code&gt; &lt;/a&gt; по умолчанию) существующего экземпляра.</target>
        </trans-unit>
        <trans-unit id="a7695186a713f16de82312fa1c5040b7c4108194" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;OneToOneField&lt;/code&gt;, you must duplicate the related object and assign it to the new object&amp;rsquo;s field to avoid violating the one-to-one unique constraint. For example, assuming &lt;code&gt;entry&lt;/code&gt; is already duplicated as above:</source>
          <target state="translated">Для &lt;code&gt;OneToOneField&lt;/code&gt; вы должны продублировать связанный объект и назначить его полю нового объекта, чтобы избежать нарушения однозначного уникального ограничения. Например, предполагая, что &lt;code&gt;entry&lt;/code&gt; уже дублирована, как указано выше:</target>
        </trans-unit>
        <trans-unit id="9cc905172b60f8825495c9572f3c39b3a30f5ebc" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;mimetype&lt;/code&gt; starting with &lt;code&gt;text/&lt;/code&gt;, content is expected to be a string. Binary data will be decoded using UTF-8, and if that fails, the MIME type will be changed to &lt;code&gt;application/octet-stream&lt;/code&gt; and the data will be attached unchanged.</source>
          <target state="translated">Для &lt;code&gt;mimetype&lt;/code&gt; , начинающегося с &lt;code&gt;text/&lt;/code&gt; , ожидается, что content будет строкой. Двоичные данные будут декодированы с использованием UTF-8, и, если это не удастся, тип MIME будет изменен на &lt;code&gt;application/octet-stream&lt;/code&gt; , и данные будут присоединены без изменений.</target>
        </trans-unit>
        <trans-unit id="4005e99c87e962d0a2b4d387ab79eadd80869dc8" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;mimetype&lt;/code&gt; starting with &lt;em&gt;text/&lt;/em&gt;, content is expected to be a string. Binary data will be decoded using UTF-8, and if that fails, the MIME type will be changed to &lt;em&gt;application/octet-stream&lt;/em&gt; and the data will be attached unchanged.</source>
          <target state="translated">Для &lt;code&gt;mimetype&lt;/code&gt; , начинающегося с &lt;em&gt;text /&lt;/em&gt; , ожидается, что содержимое будет строкой. Двоичные данные будут декодированы с использованием UTF-8, и если это не удастся, тип MIME будет изменен на &lt;em&gt;application / octet-stream,&lt;/em&gt; и данные будут прикреплены без изменений.</target>
        </trans-unit>
        <trans-unit id="aa5aa7c50d88712d846e66564756210e95dfb768" translate="yes" xml:space="preserve">
          <source>For a class to be a lookup, it must follow the &lt;a href=&quot;#query-expression&quot;&gt;Query Expression API&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; naturally follow this API.</source>
          <target state="translated">Чтобы класс был поиском, он должен следовать &lt;a href=&quot;#query-expression&quot;&gt;API выражения запроса&lt;/a&gt; . &lt;a href=&quot;#django.db.models.Lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.Transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; естественно следуют этому API.</target>
        </trans-unit>
        <trans-unit id="82837fb615d6fc0b73c8eb4b55c29471490a59c4" translate="yes" xml:space="preserve">
          <source>For a complete discussion on the usage of the following see the &lt;a href=&quot;../topics/i18n/translation&quot;&gt;translation documentation&lt;/a&gt;.</source>
          <target state="translated">Для полного обсуждения использования следующего см. &lt;a href=&quot;../topics/i18n/translation&quot;&gt;Документацию перевода&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf48592cadcf03f73184b0bc732d907e2a1368ac" translate="yes" xml:space="preserve">
          <source>For a complete list of attributes and methods, see &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Полный список атрибутов и методов см . В разделе &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="011f4946a4eac47d187c0cf11d388cc5cd400310" translate="yes" xml:space="preserve">
          <source>For a detailed description of how to create rasters using dictionary input, see &lt;a href=&quot;#gdal-raster-ds-input&quot;&gt;Creating rasters from data&lt;/a&gt;. For a detailed description of how to create rasters in the virtual filesystem, see &lt;a href=&quot;#gdal-raster-vsimem&quot;&gt;Using GDAL&amp;rsquo;s Virtual Filesystem&lt;/a&gt;.</source>
          <target state="translated">Подробное описание создания растров с использованием словарного ввода см. В разделе &amp;laquo; &lt;a href=&quot;#gdal-raster-ds-input&quot;&gt;Создание растров из данных&amp;raquo;&lt;/a&gt; . Подробное описание создания растров в виртуальной файловой системе см. В разделе &amp;laquo; &lt;a href=&quot;#gdal-raster-vsimem&quot;&gt;Использование виртуальной файловой системы GDAL&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0f2ca82bf7e80689578e1ccca6faf93f53a9e5f" translate="yes" xml:space="preserve">
          <source>For a full list of available settings, see the &lt;a href=&quot;../ref/settings&quot;&gt;settings reference&lt;/a&gt;.</source>
          <target state="translated">Полный список доступных настроек см. В &lt;a href=&quot;../ref/settings&quot;&gt;справочнике настроек&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2bc5ac4a588fc66b6d4b867455953ec02cdd543" translate="yes" xml:space="preserve">
          <source>For a full list of options, refer to the commands own help by running:</source>
          <target state="translated">Для получения полного списка опций,обратитесь к командам собственной справки при запуске:</target>
        </trans-unit>
        <trans-unit id="25df3eb01267dee01663d3ac00097ce51467a7f3" translate="yes" xml:space="preserve">
          <source>For a high-level overview of searching, see the &lt;a href=&quot;../../../topics/db/search&quot;&gt;topic documentation&lt;/a&gt;.</source>
          <target state="translated">Общий обзор поиска см. В &lt;a href=&quot;../../../topics/db/search&quot;&gt;документации&lt;/a&gt; по теме .</target>
        </trans-unit>
        <trans-unit id="c9dd739b05280b0b463ac62a5aa753bebf48ca31" translate="yes" xml:space="preserve">
          <source>For a list of PostgreSQL-specific indexes, see &lt;a href=&quot;../contrib/postgres/indexes#module-django.contrib.postgres.indexes&quot;&gt;&lt;code&gt;django.contrib.postgres.indexes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Список индексов для PostgreSQL см . В разделе &lt;a href=&quot;../contrib/postgres/indexes#module-django.contrib.postgres.indexes&quot;&gt; &lt;code&gt;django.contrib.postgres.indexes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4891edfe9764d3a86746a95b02d8917cc69f1971" translate="yes" xml:space="preserve">
          <source>For a model which has a many-to-many relationship to itself through an intermediary model, two foreign keys to the same model are permitted, but they will be treated as the two (different) sides of the many-to-many relationship. If there are &lt;em&gt;more&lt;/em&gt; than two foreign keys though, you must also specify &lt;code&gt;through_fields&lt;/code&gt; as above, or a validation error will be raised.</source>
          <target state="translated">Для модели, имеющей отношение &amp;laquo;многие ко многим&amp;raquo; к себе через посредническую модель, допускается два внешних ключа к одной и той же модели, но они будут рассматриваться как две (разные) стороны отношения &amp;laquo;многие ко многим&amp;raquo;. Однако, если существует &lt;em&gt;более&lt;/em&gt; двух внешних ключей, вы также должны указать &lt;code&gt;through_fields&lt;/code&gt; , как указано выше, иначе возникнет ошибка проверки.</target>
        </trans-unit>
        <trans-unit id="d4589e3c17ea70bbb0bb53aa9f87352a326c8e0e" translate="yes" xml:space="preserve">
          <source>For a more complete example, a query logger could look like this:</source>
          <target state="translated">Для более полного примера,регистратор запросов может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="c2705e09efedad5461b1eac01061451c6e4e8c3b" translate="yes" xml:space="preserve">
          <source>For a production environment, though, this is a really bad idea, because it leaks lots of information about your project: excerpts of your source code, local variables, settings, libraries used, etc.</source>
          <target state="translated">Для производственной среды,однако,это действительно плохая идея,так как утечка большого количества информации о вашем проекте:выдержки из исходных текстов,локальные переменные,настройки,используемые библиотеки и т.д..</target>
        </trans-unit>
        <trans-unit id="f9e4028e7889232ea20ffa255e19e88ae4589784" translate="yes" xml:space="preserve">
          <source>For a ton of examples, read the source code for Django&amp;rsquo;s default filters and tags. They&amp;rsquo;re in &lt;code&gt;django/template/defaultfilters.py&lt;/code&gt; and &lt;code&gt;django/template/defaulttags.py&lt;/code&gt;, respectively.</source>
          <target state="translated">Для множества примеров прочитайте исходный код фильтров и тегов Django по умолчанию. Они находятся в &lt;code&gt;django/template/defaultfilters.py&lt;/code&gt; и &lt;code&gt;django/template/defaulttags.py&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="245c192c3f0ca7c1f6c78ffc80a037f82e16bd32" translate="yes" xml:space="preserve">
          <source>For a typical Django project, invoking Daphne would look like:</source>
          <target state="translated">Для типичного проекта Django обращение к Дафне выглядело бы так:</target>
        </trans-unit>
        <trans-unit id="e9d03faed3bbf8f265eeb82e5681ec644ec4f4c7" translate="yes" xml:space="preserve">
          <source>For a typical Django project, invoking Hypercorn would look like:</source>
          <target state="translated">Для типичного проекта Django ссылка на &quot;Гиперкорн&quot; выглядела бы так:</target>
        </trans-unit>
        <trans-unit id="c59fdc8b86b62e3b1b65f5e777983d4f7cbaa527" translate="yes" xml:space="preserve">
          <source>For a typical Django project, invoking Uvicorn would look like:</source>
          <target state="translated">Для типичного проекта Django ссылка на Увикорн выглядела бы так:</target>
        </trans-unit>
        <trans-unit id="497b37841c09436a3f988aae8b8beb478ba72f8d" translate="yes" xml:space="preserve">
          <source>For a window frame, you can choose either a range-based sequence of rows or an ordinary sequence of rows.</source>
          <target state="translated">Для оконной рамы можно выбрать как диапазонную последовательность рядов,так и обычную последовательность рядов.</target>
        </trans-unit>
        <trans-unit id="01530861bb300440f6bf560ef6b0beca305c2166" translate="yes" xml:space="preserve">
          <source>For advanced usage you might want both a custom &lt;code&gt;Manager&lt;/code&gt; and a custom &lt;code&gt;QuerySet&lt;/code&gt;. You can do that by calling &lt;code&gt;Manager.from_queryset()&lt;/code&gt; which returns a &lt;em&gt;subclass&lt;/em&gt; of your base &lt;code&gt;Manager&lt;/code&gt; with a copy of the custom &lt;code&gt;QuerySet&lt;/code&gt; methods:</source>
          <target state="translated">Для расширенного использования вам может потребоваться как собственный &lt;code&gt;Manager&lt;/code&gt; и пользовательский набор &lt;code&gt;QuerySet&lt;/code&gt; . Вы можете сделать это, вызвав &lt;code&gt;Manager.from_queryset()&lt;/code&gt; который возвращает &lt;em&gt;подкласс&lt;/em&gt; вашего базового &lt;code&gt;Manager&lt;/code&gt; с копией пользовательских методов &lt;code&gt;QuerySet&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="114718eb9675b5c8dfa5883eba3eeb3ec318f68e" translate="yes" xml:space="preserve">
          <source>For all SQLite versions, there is some slightly counter-intuitive behavior when attempting to match some types of strings. These are triggered when using the &lt;a href=&quot;models/querysets#std:fieldlookup-iexact&quot;&gt;&lt;code&gt;iexact&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;models/querysets#std:fieldlookup-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; filters in Querysets. The behavior splits into two cases:</source>
          <target state="translated">Для всех версий SQLite при попытке сопоставления некоторых типов строк есть немного нелогичное поведение. Они запускаются при использовании &lt;a href=&quot;models/querysets#std:fieldlookup-iexact&quot;&gt; &lt;code&gt;iexact&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;models/querysets#std:fieldlookup-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt; фильтры в наборах запросов. Поведение делится на два случая:</target>
        </trans-unit>
        <trans-unit id="7091b793897c8691205b09008506e6f08af46e43" translate="yes" xml:space="preserve">
          <source>For all incoming requests that are not using HTTP GET, HEAD, OPTIONS or TRACE, a CSRF cookie must be present, and the &amp;lsquo;csrfmiddlewaretoken&amp;rsquo; field must be present and correct. If it isn&amp;rsquo;t, the user will get a 403 error.</source>
          <target state="translated">Для всех входящих запросов, которые не используют HTTP GET, HEAD, OPTIONS или TRACE, должен присутствовать файл cookie CSRF, и поле 'csrfmiddlewaretoken' должно присутствовать и быть корректным. Если это не так, пользователь получит ошибку 403.</target>
        </trans-unit>
        <trans-unit id="e0536ba6b20984cd0e9e8b8216082fb8626aab8d" translate="yes" xml:space="preserve">
          <source>For an example see the section &lt;a href=&quot;#admin-custom-validation&quot;&gt;Adding custom validation to the admin&lt;/a&gt;.</source>
          <target state="translated">Для примера смотрите раздел &lt;a href=&quot;#admin-custom-validation&quot;&gt;Добавление пользовательской проверки администратору&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="433cfd366cb054017995f20d84b57630a94b2ff7" translate="yes" xml:space="preserve">
          <source>For an example using &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;, see &lt;a href=&quot;../howto/writing-migrations#changing-a-manytomanyfield-to-use-a-through-model&quot;&gt;Changing a ManyToManyField to use a through model&lt;/a&gt;.</source>
          <target state="translated">Пример использования &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; см. В разделе &lt;a href=&quot;../howto/writing-migrations#changing-a-manytomanyfield-to-use-a-through-model&quot;&gt;Изменение ManyToManyField для использования сквозной модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbd2efdcd0a5182eb99fe1c3c5af8e661cbb3c3b" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;Serving static files from a cloud service or CDN&lt;/a&gt;.</source>
          <target state="translated">Например, см. &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;Обслуживание статических файлов из облачной службы или CDN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e877fbbeaae4ebb5d6aaa8f8b9c8ab1b4e07bde" translate="yes" xml:space="preserve">
          <source>For an in-depth discussion of aggregation, see &lt;a href=&quot;../../topics/db/aggregation&quot;&gt;the topic guide on Aggregation&lt;/a&gt;.</source>
          <target state="translated">Подробное обсуждение агрегации см. &lt;a href=&quot;../../topics/db/aggregation&quot;&gt;В руководстве по теме Агрегация&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57ec81e3704c6febf6a79630fa1ee31a957b3292" translate="yes" xml:space="preserve">
          <source>For an introduction to the static files app and some usage examples, see &lt;a href=&quot;../../howto/static-files/index&quot;&gt;Managing static files (e.g. images, JavaScript, CSS)&lt;/a&gt;. For guidelines on deploying static files, see &lt;a href=&quot;../../howto/static-files/deployment&quot;&gt;Deploying static files&lt;/a&gt;.</source>
          <target state="translated">Для ознакомления с приложением статических файлов и некоторыми примерами использования см. &lt;a href=&quot;../../howto/static-files/index&quot;&gt;Управление статическими файлами (например, изображения, JavaScript, CSS)&lt;/a&gt; . Инструкции по развертыванию статических файлов см. В разделе &lt;a href=&quot;../../howto/static-files/deployment&quot;&gt;Развертывание статических файлов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b6e366f307e30cbc012445b0d5d8194205dfaf5" translate="yes" xml:space="preserve">
          <source>For an introduction to the use of &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;index&quot;&gt;Managing static files (e.g. images, JavaScript, CSS)&lt;/a&gt;.</source>
          <target state="translated">Для ознакомления с использованием &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt; см. &lt;a href=&quot;index&quot;&gt;Управление статическими файлами (например, изображения, JavaScript, CSS)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff33af586de20dcc9dc963235e63d160e339357a" translate="yes" xml:space="preserve">
          <source>For an introduction, see &lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;models and database queries documentation&lt;/a&gt;.</source>
          <target state="translated">Введение см. В документации по &lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;моделям и запросам к базе данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91f45c0b4fdd79cf441093caaf95e3a639c7bf7e" translate="yes" xml:space="preserve">
          <source>For an introduction, see the &lt;a href=&quot;db-api#spatial-lookups-intro&quot;&gt;spatial lookups introduction&lt;/a&gt;. For an overview of what lookups are compatible with a particular spatial backend, refer to the &lt;a href=&quot;db-api#spatial-lookup-compatibility&quot;&gt;spatial lookup compatibility table&lt;/a&gt;.</source>
          <target state="translated">Для ознакомления см. Введение в &lt;a href=&quot;db-api#spatial-lookups-intro&quot;&gt;пространственный поиск&lt;/a&gt; . Для обзора того, какие поиски совместимы с конкретным пространственным бэкэндом, обратитесь к &lt;a href=&quot;db-api#spatial-lookup-compatibility&quot;&gt;таблице совместимости пространственного поиска&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e566430cd1a2affb5f5c262cc70d975407c98c38" translate="yes" xml:space="preserve">
          <source>For an overview on performing distance queries, please refer to the &lt;a href=&quot;db-api#distance-queries&quot;&gt;distance queries introduction&lt;/a&gt;.</source>
          <target state="translated">Для обзора выполнения дистанционных запросов, пожалуйста, обратитесь к &lt;a href=&quot;db-api#distance-queries&quot;&gt;введению дистанционных запросов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="032e1a321d9ffc6c2146932f576a128a8e65fa68" translate="yes" xml:space="preserve">
          <source>For any other case where you would like to delay the translation, but have to pass the translatable string as argument to another function, you can wrap this function inside a lazy call yourself. For example:</source>
          <target state="translated">В любом другом случае,когда вы хотите задержать перевод,но должны передать переводимую строку в качестве аргумента в другую функцию,вы можете обернуть эту функцию внутри ленивого вызова себя.Например:</target>
        </trans-unit>
        <trans-unit id="085ed960d0740bd94ea40506cfce694cfddc0a2f" translate="yes" xml:space="preserve">
          <source>For application authors</source>
          <target state="translated">Для авторов заявки</target>
        </trans-unit>
        <trans-unit id="7cec9e84482bc35d6c78faa794917c557d1e76eb" translate="yes" xml:space="preserve">
          <source>For application users</source>
          <target state="translated">Для пользователей приложения</target>
        </trans-unit>
        <trans-unit id="73f138ffe9108c4f660de4277273d1ef1b89e005" translate="yes" xml:space="preserve">
          <source>For backends that use cookies, the settings for the cookie are taken from the session cookie settings:</source>
          <target state="translated">Для бэкэндов,использующих cookie-файлы,настройки cookie-файлов берутся из настроек сессионных cookie-файлов:</target>
        </trans-unit>
        <trans-unit id="57ad3cfd168ba96bdfced612c26a2ee2a767e407" translate="yes" xml:space="preserve">
          <source>For better performance, you may want to use a cache-based session backend.</source>
          <target state="translated">Для лучшей производительности,возможно,вы захотите использовать кэш-бэкэнд сеанса.</target>
        </trans-unit>
        <trans-unit id="91bce32b94c71f60016d6667344912312df9c907" translate="yes" xml:space="preserve">
          <source>For both string-based and non-string-based fields, you will also need to set &lt;code&gt;blank=True&lt;/code&gt; if you wish to permit empty values in forms, as the &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; parameter only affects database storage (see &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Как для строковых, так и для нестроковых полей вам также потребуется установить &lt;code&gt;blank=True&lt;/code&gt; , если вы хотите разрешить пустые значения в формах, поскольку &lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; параметр влияет только на хранилище базы данных (см. &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b0ab1dd7f1f1a3114560cdef94eeb046fe6b282" translate="yes" xml:space="preserve">
          <source>For building up fragments of HTML, you should normally be using &lt;a href=&quot;#django.utils.html.format_html&quot;&gt;&lt;code&gt;django.utils.html.format_html()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Для создания фрагментов HTML обычно следует использовать &lt;a href=&quot;#django.utils.html.format_html&quot;&gt; &lt;code&gt;django.utils.html.format_html()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd8eb4334d88a862d55ca5bac3a26a9a7a016bf0" translate="yes" xml:space="preserve">
          <source>For caches that don&amp;rsquo;t implement &lt;code&gt;close&lt;/code&gt; methods it is a no-op.</source>
          <target state="translated">Для кешей, которые не реализуют методы &lt;code&gt;close&lt;/code&gt; , это неоперация.</target>
        </trans-unit>
        <trans-unit id="79ba2e8a0fe994e51d4c92f58e97e335cd098d33" translate="yes" xml:space="preserve">
          <source>For cases like this, Django exposes a low-level cache API. You can use this API to store objects in the cache with any level of granularity you like. You can cache any Python object that can be pickled safely: strings, dictionaries, lists of model objects, and so forth. (Most common Python objects can be pickled; refer to the Python documentation for more information about pickling.)</source>
          <target state="translated">В таких случаях Django предоставляет низкоуровневый API для кэширования.Вы можете использовать этот API для хранения объектов в кэше с любым уровнем детализации.Вы можете кэшировать любой Python-объект,который можно безопасно мариновать:строки,словари,списки модельных объектов и так далее.(Наиболее распространенные объекты на Python могут быть замаринованы;подробнее о замариновании смотрите документацию по Python).</target>
        </trans-unit>
        <trans-unit id="1fb48d8079dbe45b84226c3cadf04b90ce81a61a" translate="yes" xml:space="preserve">
          <source>For cases like this, use the &lt;code&gt;django.utils.functional.keep_lazy()&lt;/code&gt; decorator. It modifies the function so that &lt;em&gt;if&lt;/em&gt; it&amp;rsquo;s called with a lazy translation as one of its arguments, the function evaluation is delayed until it needs to be converted to a string.</source>
          <target state="translated">В таких случаях используйте декоратор &lt;code&gt;django.utils.functional.keep_lazy()&lt;/code&gt; . Он модифицирует функцию так, что &lt;em&gt;если&lt;/em&gt; она вызывается с ленивым переводом в качестве одного из аргументов, оценка функции откладывается до тех пор, пока она не должна быть преобразована в строку.</target>
        </trans-unit>
        <trans-unit id="994ead3f1356d2b1dba54966dd67fa94889eed63" translate="yes" xml:space="preserve">
          <source>For common setups with multiple databases, it isn&amp;rsquo;t useful to have these objects in more than one database. Common setups include primary/replica and connecting to external databases. Therefore, it&amp;rsquo;s recommended to write a &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;database router&lt;/a&gt; that allows synchronizing these three models to only one database. Use the same approach for contrib and third-party apps that don&amp;rsquo;t need their tables in multiple databases.</source>
          <target state="translated">Для общих установок с несколькими базами данных нецелесообразно иметь эти объекты в более чем одной базе данных. Общие настройки включают первичную / реплику и подключение к внешним базам данных. Поэтому рекомендуется написать &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;маршрутизатор базы данных,&lt;/a&gt; который позволит синхронизировать эти три модели только с одной базой данных. Используйте один и тот же подход для сторонних и сторонних приложений, которым не нужны таблицы в нескольких базах данных.</target>
        </trans-unit>
        <trans-unit id="9008520a23cc5398ce6e6e03cb58a6c8452a5ef0" translate="yes" xml:space="preserve">
          <source>For complete details on all the settings, commands, template tags, and other pieces included in &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;../../ref/contrib/staticfiles&quot;&gt;the staticfiles reference&lt;/a&gt;.</source>
          <target state="translated">Для получения полной информации обо всех настройках, командах, тегах шаблонов и других элементах, включенных в &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt; , см. &lt;a href=&quot;../../ref/contrib/staticfiles&quot;&gt;Ссылку на staticfiles&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ab98fe2e9e6c5b8dac81734119f6a96694f9705" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; provides a &lt;code&gt;send()&lt;/code&gt; method for sending a single email. If you need to send multiple messages, the email backend API &lt;a href=&quot;#topics-sending-multiple-emails&quot;&gt;provides an alternative&lt;/a&gt;.</source>
          <target state="translated">Для удобства &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; предоставляет метод &lt;code&gt;send()&lt;/code&gt; для отправки одного письма. Если вам нужно отправить несколько сообщений, API-интерфейс почтового сервера &lt;a href=&quot;#topics-sending-multiple-emails&quot;&gt;предоставляет альтернативу&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd6bc939b24142ba0e1fff49a7e3dd24af2f2dbe" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;index_together&lt;/code&gt; can be a single list when dealing with a single set of fields:</source>
          <target state="translated">Для удобства &lt;code&gt;index_together&lt;/code&gt; может быть одним списком при работе с одним набором полей:</target>
        </trans-unit>
        <trans-unit id="ce4cdf927e9d3f5bcc2a4d900ae3b68bcd958626" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;unique_together&lt;/code&gt; can be a single list when dealing with a single set of fields:</source>
          <target state="translated">Для удобства &lt;code&gt;unique_together&lt;/code&gt; может быть одним списком при работе с одним набором полей:</target>
        </trans-unit>
        <trans-unit id="07080c385504623c0179d481408b47986bcaa26b" translate="yes" xml:space="preserve">
          <source>For convenience, Django offers different levels of cache granularity: you can cache the output of specific views, or only the pieces that are difficult to produce, or even an entire site.</source>
          <target state="translated">Для удобства Django предлагает различные уровни детализации кэша:можно кэшировать вывод определенных представлений,или только тех частей,которые трудно производить,или даже целый сайт.</target>
        </trans-unit>
        <trans-unit id="a33658bc26b48121cd01e6c62ea8102f8c745111" translate="yes" xml:space="preserve">
          <source>For convenience, Django provides a &lt;code&gt;pk&lt;/code&gt; lookup shortcut, which stands for &amp;ldquo;primary key&amp;rdquo;.</source>
          <target state="translated">Для удобства Django предоставляет ярлык поиска &lt;code&gt;pk&lt;/code&gt; , который обозначает &amp;laquo;первичный ключ&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8ba2fecb762785a1f98e5db46660c8f03323d035" translate="yes" xml:space="preserve">
          <source>For convenience, and because it&amp;rsquo;s a good idea to have a consistent 404 error page across your site, Django provides an &lt;code&gt;Http404&lt;/code&gt; exception. If you raise &lt;code&gt;Http404&lt;/code&gt; at any point in a view function, Django will catch it and return the standard error page for your application, along with an HTTP error code 404.</source>
          <target state="translated">Для удобства, а также потому, что на вашем сайте должна быть согласованная страница с ошибкой 404, Django предоставляет исключение &lt;code&gt;Http404&lt;/code&gt; . Если вы поднимаете &lt;code&gt;Http404&lt;/code&gt; в любой точке функции представления, Django перехватит его и вернет стандартную страницу ошибок для вашего приложения вместе с кодом ошибки HTTP 404.</target>
        </trans-unit>
        <trans-unit id="6f355d7307dc13d50c50cd78d6a431ad52fb3a16" translate="yes" xml:space="preserve">
          <source>For convenience, each model has an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;id&lt;/code&gt; by default unless you explicitly specify &lt;code&gt;primary_key=True&lt;/code&gt; on a field in your model. See the documentation for &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Для удобства каждая модель имеет &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt; именем &lt;code&gt;id&lt;/code&gt; по умолчанию, если вы явно не укажете &lt;code&gt;primary_key=True&lt;/code&gt; для поля в вашей модели. Смотрите документацию для &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="00b6f399568caf034f2bd9baf36652b9633df6c5" translate="yes" xml:space="preserve">
          <source>For conversions, access the preferred unit attribute to get a converted distance quantity:</source>
          <target state="translated">Для пересчета,доступ к атрибуту предпочтительной единицы измерения,чтобы получить количество пересчета расстояния:</target>
        </trans-unit>
        <trans-unit id="17f5ab1e933cc3767d56d79b5fda1bc30762cc06" translate="yes" xml:space="preserve">
          <source>For creating bar charts and such, this tag calculates the ratio of a given value to a maximum value, and then applies that ratio to a constant.</source>
          <target state="translated">Для создания гистограммы и т.п.данный тег вычисляет отношение заданного значения к максимальному,а затем применяет это отношение к константе.</target>
        </trans-unit>
        <trans-unit id="9d659ee2de0bfab758a3c6297904c71bd25ed4d2" translate="yes" xml:space="preserve">
          <source>For databases other than SQLite</source>
          <target state="translated">Для баз данных,отличных от SQLite</target>
        </trans-unit>
        <trans-unit id="26b228b856ac1e345526c8b4f3d28d81b09acc58" translate="yes" xml:space="preserve">
          <source>For date and date/time fields, you can add or subtract a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object. The following would return all entries that were modified more than 3 days after they were published:</source>
          <target state="translated">Для полей даты и даты / времени вы можете добавить или вычесть объект &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; . Следующее вернет все записи, которые были изменены более чем через 3 дня после их публикации:</target>
        </trans-unit>
        <trans-unit id="c3ea98e4b4088a980b262038c9f53cd940a2574a" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, a &amp;lsquo;day of the week&amp;rsquo; match. Allows chaining additional field lookups.</source>
          <target state="translated">Для полей даты и даты и времени соответствует день недели. Позволяет цепочки дополнительных полевых поисков.</target>
        </trans-unit>
        <trans-unit id="a59621a4297e6672557ed775eda5c37a1765e762" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, a &amp;lsquo;quarter of the year&amp;rsquo; match. Allows chaining additional field lookups. Takes an integer value between 1 and 4 representing the quarter of the year.</source>
          <target state="translated">Для полей даты и даты и времени соответствует квартал года. Позволяет цепочки дополнительных полевых поисков. Принимает целое значение от 1 до 4, представляющее квартал года.</target>
        </trans-unit>
        <trans-unit id="4202de970fe3340c6206e01e77e543ef6f13cc12" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact ISO 8601 day of the week match. Allows chaining additional field lookups.</source>
          <target state="translated">Для полей даты и времени,точный ISO 8601 день недели матча.Позволяет осуществлять поиск по дополнительным полям с помощью цепочки.</target>
        </trans-unit>
        <trans-unit id="42dd2feb45b5f660ff3b9a6d4074634986a29ee0" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact ISO 8601 week-numbering year match. Allows chaining additional field lookups. Takes an integer year.</source>
          <target state="translated">Для полей даты и времени-точный матч по году с номером недели по ISO 8601.Позволяет осуществлять поиск по дополнительным полям с помощью цепочки.Берет целочисленный год.</target>
        </trans-unit>
        <trans-unit id="1593cffc96d622049ccdc42f7bb0f2a1ae8036b1" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact day match. Allows chaining additional field lookups. Takes an integer day.</source>
          <target state="translated">Для полей даты и времени точное совпадение дня.Позволяет привязывать дополнительные поля поиска.Берет целочисленный день.</target>
        </trans-unit>
        <trans-unit id="49d38ad7fe93c4540c3f229ec62ec695a94c44d4" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact month match. Allows chaining additional field lookups. Takes an integer 1 (January) through 12 (December).</source>
          <target state="translated">Для полей даты и времени точное совпадение по месяцам.Позволяет привязывать дополнительные поля поиска.Берется целое число от 1 (Январь)до 12 (Декабрь).</target>
        </trans-unit>
        <trans-unit id="606db62e280330ab2e78af535232722c97f0ff10" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact year match. Allows chaining additional field lookups. Takes an integer year.</source>
          <target state="translated">Для полей даты и времени точное совпадение по годам.Позволяет привязывать дополнительные поля поиска.Берет целочисленный год.</target>
        </trans-unit>
        <trans-unit id="5e7ddbc21aec55ccdb748d213426101dce95eb9c" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, return the week number (1-52 or 53) according to &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8601&quot;&gt;ISO-8601&lt;/a&gt;, i.e., weeks start on a Monday and the first week contains the year&amp;rsquo;s first Thursday.</source>
          <target state="translated">Для полей даты и даты и времени верните номер недели (1-52 или 53) в соответствии с &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8601&quot;&gt;ISO-8601&lt;/a&gt; , т. Е. Недели начинаются с понедельника, а первая неделя содержит первый четверг года.</target>
        </trans-unit>
        <trans-unit id="dcf2e4875fa50e3add0a11dd7c345c91e31164aa" translate="yes" xml:space="preserve">
          <source>For dates that are the current day or within one day, return &amp;ldquo;today&amp;rdquo;, &amp;ldquo;tomorrow&amp;rdquo; or &amp;ldquo;yesterday&amp;rdquo;, as appropriate. Otherwise, format the date using the passed in format string.</source>
          <target state="translated">Для дат, которые являются текущим днем ​​или в течение одного дня, верните &amp;laquo;сегодня&amp;raquo;, &amp;laquo;завтра&amp;raquo; или &amp;laquo;вчера&amp;raquo;, в зависимости от ситуации. В противном случае отформатируйте дату, используя переданную строку формата.</target>
        </trans-unit>
        <trans-unit id="522a331d5225fa66def9fc3bd2e8fac66fc5b772" translate="yes" xml:space="preserve">
          <source>For datetime and time fields, an exact hour match. Allows chaining additional field lookups. Takes an integer between 0 and 23.</source>
          <target state="translated">Для полей даты и времени точное совпадение часов.Позволяет прицеплять дополнительные поля поиска.Берет целое число от 0 до 23.</target>
        </trans-unit>
        <trans-unit id="ac89f2c106463643fd9699cf90f5e9127b0da47c" translate="yes" xml:space="preserve">
          <source>For datetime and time fields, an exact minute match. Allows chaining additional field lookups. Takes an integer between 0 and 59.</source>
          <target state="translated">Для полей даты и времени-точное совпадение по минутам.Позволяет прицеплять дополнительные поля поиска.Берет целое число от 0 до 59.</target>
        </trans-unit>
        <trans-unit id="cb253c63a93a7f34a17bfff1bcace0dc8609b145" translate="yes" xml:space="preserve">
          <source>For datetime and time fields, an exact second match. Allows chaining additional field lookups. Takes an integer between 0 and 59.</source>
          <target state="translated">Для полей даты и времени,точный второй матч.Позволяет прицеплять дополнительные поля поиска.Берет целое число от 0 до 59.</target>
        </trans-unit>
        <trans-unit id="065ccdbf361bd445a3ea9b16f5af4220346cf69e" translate="yes" xml:space="preserve">
          <source>For datetime fields, casts the value as date. Allows chaining additional field lookups. Takes a date value.</source>
          <target state="translated">Для полей даты присваивает значение как дату.Позволяет привязывать дополнительные поля поиска.Берет значение даты.</target>
        </trans-unit>
        <trans-unit id="5cb754f1dcc8bef12a5572feace62cc16ce3e1ad" translate="yes" xml:space="preserve">
          <source>For datetime fields, casts the value as time. Allows chaining additional field lookups. Takes a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;datetime.time&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">Для полей даты и времени преобразует значение как время. Позволяет цепочки дополнительных полевых поисков. Принимает значение &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;datetime.time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="287a99b6d2ccfdfa613eb3ea97b6c9626d6505b7" translate="yes" xml:space="preserve">
          <source>For datetime values, returns a string representing how many seconds, minutes or hours ago it was &amp;ndash; falling back to the &lt;a href=&quot;../templates/builtins#std:templatefilter-timesince&quot;&gt;&lt;code&gt;timesince&lt;/code&gt;&lt;/a&gt; format if the value is more than a day old. In case the datetime value is in the future the return value will automatically use an appropriate phrase.</source>
          <target state="translated">Для значений даты и времени возвращает строку, представляющую, сколько секунд, минут или часов назад было - возвращаясь к формату &lt;a href=&quot;../templates/builtins#std:templatefilter-timesince&quot;&gt; &lt;code&gt;timesince&lt;/code&gt; &lt;/a&gt; , если значение больше дня. В случае, если значение datetime находится в будущем, возвращаемое значение автоматически будет использовать соответствующую фразу.</target>
        </trans-unit>
        <trans-unit id="ce8b44858ceebee50a15dccd632d32f06ba831f7" translate="yes" xml:space="preserve">
          <source>For debug purposes only!</source>
          <target state="translated">Только в целях отладки!</target>
        </trans-unit>
        <trans-unit id="1e5e8cc6373625d6ede780576c6909b6713e5dda" translate="yes" xml:space="preserve">
          <source>For definitions of the different versions of RSS, see: &lt;a href=&quot;https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss&quot;&gt;https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss&lt;/a&gt;</source>
          <target state="translated">Определения различных версий RSS см. По &lt;a href=&quot;https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss&quot;&gt;адресу&lt;/a&gt; : https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss.</target>
        </trans-unit>
        <trans-unit id="0dc5d40b5d2ee131a558d783f74733735bef205e" translate="yes" xml:space="preserve">
          <source>For detailed description how names passed in &lt;code&gt;kwargs&lt;/code&gt; are resolved see &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt;&lt;code&gt;get_or_create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для подробного описания того, как разрешаются имена, переданные в &lt;code&gt;kwargs&lt;/code&gt; , смотрите &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt; &lt;code&gt;get_or_create()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f6c3c45c81cb288d50532a438e4c2e1de010cf9" translate="yes" xml:space="preserve">
          <source>For details on accessing backwards-related objects, see the &lt;a href=&quot;queries#backwards-related-objects&quot;&gt;Following relationships backward example&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о доступе назад связанные объекты, см &lt;a href=&quot;queries#backwards-related-objects&quot;&gt;следующих соотношений отсталого пример&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="163379e03ba2cf1b5d26dfdc8ca39d2b4c17c2a4" translate="yes" xml:space="preserve">
          <source>For details on how to add your own checks and integrate them with Django&amp;rsquo;s system checks, see the &lt;a href=&quot;../topics/checks&quot;&gt;System check topic guide&lt;/a&gt;.</source>
          <target state="translated">Для получения подробной информации о том, как добавить свои собственные проверки и интегрировать их с проверками системы Django, см. &lt;a href=&quot;../topics/checks&quot;&gt;Руководство по темам Проверка системы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5dc195be6c74605240dd1d253de36726e6d6d316" translate="yes" xml:space="preserve">
          <source>For details on how you&amp;rsquo;d write one of these backends, see &lt;a href=&quot;../custom-file-storage&quot;&gt;Writing a custom storage system&lt;/a&gt;. There are 3rd party apps available that provide storage backends for many common file storage APIs. A good starting point is the &lt;a href=&quot;https://djangopackages.org/grids/g/storage-backends/&quot;&gt;overview at djangopackages.org&lt;/a&gt;.</source>
          <target state="translated">Подробную информацию о том, как написать один из этих бэкэндов, смотрите в разделе &lt;a href=&quot;../custom-file-storage&quot;&gt;Создание пользовательской системы хранения&lt;/a&gt; . Доступны сторонние приложения, которые предоставляют хранилища для многих распространенных API-интерфейсов хранения файлов. Хорошей отправной точкой является &lt;a href=&quot;https://djangopackages.org/grids/g/storage-backends/&quot;&gt;обзор на djangopackages.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52957ba84f98b1d5cee6b3fcf986ebb5e0aeef4b" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;#playing-with-context&quot;&gt;Playing with Context objects&lt;/a&gt; below.</source>
          <target state="translated">Подробнее см. В разделе &amp;laquo; &lt;a href=&quot;#playing-with-context&quot;&gt;Игра с объектами контекста&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="8ca13a30dff65815da18fa43605645bf867c1ee7" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend in the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting, Django instantiates an &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; wraps &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; and adapts it to the common template backend API.</source>
          <target state="translated">Для каждого бэкэнда &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; в настройке &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; Django создает &lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; оборачивает &lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt; и адаптирует его к общему API-интерфейсу шаблона.</target>
        </trans-unit>
        <trans-unit id="091dadf61f9a776beb554812fdfed65ad59f5923" translate="yes" xml:space="preserve">
          <source>For each action, you can supply either a list of values or a string. When the value already exists in the list, &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;prepend&lt;/code&gt; have no effect; neither does &lt;code&gt;remove&lt;/code&gt; when the value doesn&amp;rsquo;t exist.</source>
          <target state="translated">Для каждого действия вы можете указать либо список значений, либо строку. Когда значение уже существует в списке, &lt;code&gt;append&lt;/code&gt; и &lt;code&gt;prepend&lt;/code&gt; не имеет никакого эффекта; ни один не &lt;code&gt;remove&lt;/code&gt; когда значение не существует.</target>
        </trans-unit>
        <trans-unit id="eb987d0190d5c3530e37b746933ad08afcfcfcbc" translate="yes" xml:space="preserve">
          <source>For each field, we describe the default widget used if you don&amp;rsquo;t specify &lt;code&gt;widget&lt;/code&gt;. We also specify the value returned when you provide an empty value (see the section on &lt;code&gt;required&lt;/code&gt; above to understand what that means).</source>
          <target state="translated">Для каждого поля мы опишем используемый виджет по умолчанию, если вы не укажете &lt;code&gt;widget&lt;/code&gt; . Мы также указать возвращаемое значение , когда вы предоставляете пустое значение (смотрите раздел по &lt;code&gt;required&lt;/code&gt; выше , чтобы понять , что это значит).</target>
        </trans-unit>
        <trans-unit id="d87202ef729a6cdd9bbc8a5b5c66e91ce34e02ed" translate="yes" xml:space="preserve">
          <source>For each model field that has &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; set, Django will add a method to retrieve the human-readable name for the field&amp;rsquo;s current value. See &lt;a href=&quot;instances#django.db.models.Model.get_FOO_display&quot;&gt;&lt;code&gt;get_FOO_display()&lt;/code&gt;&lt;/a&gt; in the database API documentation.</source>
          <target state="translated">Для каждого поля модели, для которого установлен &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt; , Django добавит метод для извлечения понятного человеку имени для текущего значения поля. Смотрите &lt;a href=&quot;instances#django.db.models.Model.get_FOO_display&quot;&gt; &lt;code&gt;get_FOO_display()&lt;/code&gt; &lt;/a&gt; в документации по API базы данных.</target>
        </trans-unit>
        <trans-unit id="b819f24d3cbd85ac1143152ab6d80ae072da700c" translate="yes" xml:space="preserve">
          <source>For each page (response) that Django sends back from a view, it might provide two HTTP headers: the &lt;code&gt;ETag&lt;/code&gt; header and the &lt;code&gt;Last-Modified&lt;/code&gt; header. These headers are optional on HTTP responses. They can be set by your view function, or you can rely on the &lt;a href=&quot;../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt;&lt;code&gt;ConditionalGetMiddleware&lt;/code&gt;&lt;/a&gt; middleware to set the &lt;code&gt;ETag&lt;/code&gt; header.</source>
          <target state="translated">Для каждой страницы (ответа), которую Django отправляет обратно из представления, он может предоставить два заголовка HTTP: заголовок &lt;code&gt;ETag&lt;/code&gt; и заголовок &lt;code&gt;Last-Modified&lt;/code&gt; . Эти заголовки являются необязательными в ответах HTTP. Они могут быть установлены вашей функцией просмотра, или вы можете положиться на промежуточное ПО &lt;a href=&quot;../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt; &lt;code&gt;ConditionalGetMiddleware&lt;/code&gt; &lt;/a&gt; для установки заголовка &lt;code&gt;ETag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56f104ebb00413a98694e90de1856d9319998a8a" translate="yes" xml:space="preserve">
          <source>For each row in your CSV file, call &lt;code&gt;writer.writerow&lt;/code&gt;, passing it an &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;.</source>
          <target state="translated">Для каждой строки в вашем CSV-файле вызовите &lt;code&gt;writer.writerow&lt;/code&gt; , передавая его &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-iterable&quot;&gt;итеративно&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3cab83a5a714010f9187f9c6425c8314cf762fc1" translate="yes" xml:space="preserve">
          <source>For each template tag the template parser encounters, it calls a Python function with the tag contents and the parser object itself. This function is responsible for returning a &lt;code&gt;Node&lt;/code&gt; instance based on the contents of the tag.</source>
          <target state="translated">Для каждого тега шаблона, с которым сталкивается анализатор шаблонов, он вызывает функцию Python с содержимым тега и самим объектом анализатора. Эта функция отвечает за возврат экземпляра &lt;code&gt;Node&lt;/code&gt; на основе содержимого тега.</target>
        </trans-unit>
        <trans-unit id="ca1d72c8182315b714de1b3cc74b5c3db54b95aa" translate="yes" xml:space="preserve">
          <source>For empty bands (where all pixel values are &amp;ldquo;no data&amp;rdquo;), all statistics are returned as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Для пустых полос (где все значения пикселей равны &amp;laquo;нет данных&amp;raquo;), вся статистика возвращается как &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86553258332baa0d4dd5dd4328d0faa7deb87755" translate="yes" xml:space="preserve">
          <source>For every &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; that does not have &lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null=True&lt;/code&gt;&lt;/a&gt;, the object will have &lt;code&gt;get_next_by_FOO()&lt;/code&gt; and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; methods, where &lt;code&gt;FOO&lt;/code&gt; is the name of the field. This returns the next and previous object with respect to the date field, raising a &lt;a href=&quot;#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception when appropriate.</source>
          <target state="translated">Для каждого &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; , у которого нет &lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null=True&lt;/code&gt; &lt;/a&gt; , объект будет иметь методы &lt;code&gt;get_next_by_FOO()&lt;/code&gt; и &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; , где &lt;code&gt;FOO&lt;/code&gt; - это имя поля. Это возвращает следующий и предыдущий объект по отношению к полю даты, в случае необходимости &lt;a href=&quot;#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt; исключение DoesNotExist .</target>
        </trans-unit>
        <trans-unit id="9772414f603012496ae23f0ba07a156e697088ca" translate="yes" xml:space="preserve">
          <source>For every &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; that does not have &lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null=True&lt;/code&gt;&lt;/a&gt;, the object will have &lt;code&gt;get_next_by_FOO()&lt;/code&gt; and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; methods, where &lt;code&gt;FOO&lt;/code&gt; is the name of the field. This returns the next and previous object with respect to the date field, raising a &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception when appropriate.</source>
          <target state="translated">Для каждого &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; , у которых нет &lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null=True&lt;/code&gt; &lt;/a&gt; , объект будет иметь методы &lt;code&gt;get_next_by_FOO()&lt;/code&gt; и &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; , где &lt;code&gt;FOO&lt;/code&gt; - это имя поля. Это возвращает следующий и предыдущий объекты относительно поля даты, вызывая при &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt; исключение DoesNotExist .</target>
        </trans-unit>
        <trans-unit id="c6af115638455b1658d0ace819b2ffe32487193f" translate="yes" xml:space="preserve">
          <source>For every field that has &lt;a href=&quot;fields#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; set, the object will have a &lt;code&gt;get_FOO_display()&lt;/code&gt; method, where &lt;code&gt;FOO&lt;/code&gt; is the name of the field. This method returns the &amp;ldquo;human-readable&amp;rdquo; value of the field.</source>
          <target state="translated">Для каждого поля, для которого установлен &lt;a href=&quot;fields#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt; , у объекта будет метод &lt;code&gt;get_FOO_display()&lt;/code&gt; , где &lt;code&gt;FOO&lt;/code&gt; - имя поля. Этот метод возвращает &amp;laquo;удобочитаемое&amp;raquo; значение поля.</target>
        </trans-unit>
        <trans-unit id="a9d8934a0281dff5b47483effb2b261b49b28dd4" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;Index(fields=['headline', '-pub_date'])&lt;/code&gt; would create SQL with &lt;code&gt;(headline, pub_date DESC)&lt;/code&gt;. Index ordering isn&amp;rsquo;t supported on MySQL. In that case, a descending index is created as a normal index.</source>
          <target state="translated">Например, &lt;code&gt;Index(fields=['headline', '-pub_date'])&lt;/code&gt; создаст SQL с &lt;code&gt;(headline, pub_date DESC)&lt;/code&gt; . Порядок индекса не поддерживается в MySQL. В этом случае нисходящий индекс создается как обычный индекс.</target>
        </trans-unit>
        <trans-unit id="a28eb7a67fa4fb46ad0e0b99179060eb9054ee2d" translate="yes" xml:space="preserve">
          <source>For example if you have &lt;code&gt;first_name&lt;/code&gt; as a model field and as a &lt;code&gt;ModelAdmin&lt;/code&gt; attribute, the model field will be used.</source>
          <target state="translated">Например , если у вас есть &lt;code&gt;first_name&lt;/code&gt; как поле модели и как &lt;code&gt;ModelAdmin&lt;/code&gt; атрибут, будет использоваться поле модели.</target>
        </trans-unit>
        <trans-unit id="06db7318354368de96f4145dda37303d15869be2" translate="yes" xml:space="preserve">
          <source>For example if you wanted to customize the wording of all user facing strings for the &lt;code&gt;name&lt;/code&gt; field:</source>
          <target state="translated">Например, если вы хотите настроить формулировку всех строк, обращенных к пользователю, для поля &lt;code&gt;name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7cdc6afd51e180f7d936e985484811415dc36686" translate="yes" xml:space="preserve">
          <source>For example if you wanted to display a particular inline only in the change view, you could override &lt;code&gt;get_formsets_with_inlines&lt;/code&gt; as follows:</source>
          <target state="translated">Например, если вы хотите отобразить конкретную строку только в представлении изменений, вы можете переопределить &lt;code&gt;get_formsets_with_inlines&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="f77c456b474676c048010c32ab9b46790e583436" translate="yes" xml:space="preserve">
          <source>For example to attach &lt;code&gt;request.user&lt;/code&gt; to the object prior to saving:</source>
          <target state="translated">Например, чтобы прикрепить &lt;code&gt;request.user&lt;/code&gt; к объекту перед сохранением:</target>
        </trans-unit>
        <trans-unit id="9ad3936c55afd72b17f1bad1033bbc892e0fb5f4" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;../topics/i18n/index&quot;&gt;internationalization&lt;/a&gt; middleware would need to distinguish caches by the &lt;code&gt;Accept-language&lt;/code&gt; header.</source>
          <target state="translated">Например, промежуточное программное обеспечение &lt;a href=&quot;../topics/i18n/index&quot;&gt;интернационализации&lt;/a&gt; должно было бы различать кэши по заголовку &lt;code&gt;Accept-language&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f50938580412245d851907183f7cbae1c995a73" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; fields use a Python &lt;code&gt;datetime&lt;/code&gt; object to store data. Databases don&amp;rsquo;t store &lt;code&gt;datetime&lt;/code&gt; objects, so the field value must be converted into an ISO-compliant date string for insertion into the database.</source>
          <target state="translated">Например, поля &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; используют объект &lt;code&gt;datetime&lt;/code&gt; Python для хранения данных. Базы данных не хранят объекты &lt;code&gt;datetime&lt;/code&gt; , поэтому значение поля должно быть преобразовано в ISO-совместимую строку даты для вставки в базу данных.</target>
        </trans-unit>
        <trans-unit id="3a27bf38226ab7ff07f5623795efbd9cac29bd85" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; normalizes input into a Python &lt;code&gt;datetime.date&lt;/code&gt; object. Regardless of whether you pass it a string in the format &lt;code&gt;'1994-07-15'&lt;/code&gt;, a &lt;code&gt;datetime.date&lt;/code&gt; object, or a number of other formats, &lt;code&gt;DateField&lt;/code&gt; will always normalize it to a &lt;code&gt;datetime.date&lt;/code&gt; object as long as it&amp;rsquo;s valid.</source>
          <target state="translated">Например, &lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; нормализует ввод в объект Python &lt;code&gt;datetime.date&lt;/code&gt; . Независимо от того, передаете ли вы ей строку в формате &lt;code&gt;'1994-07-15'&lt;/code&gt; , объект &lt;code&gt;datetime.date&lt;/code&gt; или ряд других форматов, &lt;code&gt;DateField&lt;/code&gt; всегда нормализует его до объекта &lt;code&gt;datetime.date&lt;/code&gt; , пока он действителен.</target>
        </trans-unit>
        <trans-unit id="a7d3d035b67f52b99c390681f0df8036d9d1284d" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;i18n/translation#lazy-translations&quot;&gt;lazy translation&lt;/a&gt; can be used before the target language is even known, because it doesn&amp;rsquo;t take place until the translated string is actually required, such as in a rendered template.</source>
          <target state="translated">Например, &lt;a href=&quot;i18n/translation#lazy-translations&quot;&gt;ленивый перевод&lt;/a&gt; можно использовать еще до того, как целевой язык станет известен, потому что он не выполняется до тех пор, пока фактически не потребуется переведенная строка, например, в визуализированном шаблоне.</target>
        </trans-unit>
        <trans-unit id="65626bcffc97252495c52e838ec35256fdf62bcb" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; uses the app registry to look up translation catalogs in applications. To translate at import time, you need &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; instead. (Using &lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; would be a bug, because the translation would happen at import time, rather than at each request depending on the active language.)</source>
          <target state="translated">Например, &lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; использует реестр приложений для поиска каталогов переводов в приложениях. Чтобы перевести во время импорта, вам нужно использовать &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt; . (Использование &lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; было бы ошибкой, потому что перевод происходил бы во время импорта, а не при каждом запросе в зависимости от активного языка.)</target>
        </trans-unit>
        <trans-unit id="f5be2fd2ea1a9ec8e596aeedb6d085b373362255" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;CheckConstraint(check=Q(age__gte=18), name='age_gte_18')&lt;/code&gt; ensures the age field is never less than 18.</source>
          <target state="translated">Например, &lt;code&gt;CheckConstraint(check=Q(age__gte=18), name='age_gte_18')&lt;/code&gt; гарантирует, что поле возраста никогда не будет меньше 18.</target>
        </trans-unit>
        <trans-unit id="12d159ad663a37fc7486d7d61ec051e5cf1aeeac" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;GinIndex(name='json_index', fields=['jsonfield'],
opclasses=['jsonb_path_ops'])&lt;/code&gt; creates a gin index on &lt;code&gt;jsonfield&lt;/code&gt; using &lt;code&gt;jsonb_path_ops&lt;/code&gt;.</source>
          <target state="translated">Например, &lt;code&gt;GinIndex(name='json_index', fields=['jsonfield'], opclasses=['jsonb_path_ops'])&lt;/code&gt; создает индекс джина для &lt;code&gt;jsonfield&lt;/code&gt; с использованием &lt;code&gt;jsonb_path_ops&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8529ce07a1126b744d3c5ea07ee62908bb7f707a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;SELECT DISTINCT ON (a)&lt;/code&gt; gives you the first row for each value in column &lt;code&gt;a&lt;/code&gt;. If you don&amp;rsquo;t specify an order, you&amp;rsquo;ll get some arbitrary row.</source>
          <target state="translated">Например, &lt;code&gt;SELECT DISTINCT ON (a)&lt;/code&gt; дает вам первую строку для каждого значения в столбце &lt;code&gt;a&lt;/code&gt; . Если вы не укажете порядок, вы получите произвольную строку.</target>
        </trans-unit>
        <trans-unit id="390b16cd2cf8e734568d834589997b24d4d5756d" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;UniqueConstraint(fields=['room', 'date'],
name='unique_booking')&lt;/code&gt; ensures each room can only be booked once for each date.</source>
          <target state="translated">Например, &lt;code&gt;UniqueConstraint(fields=['room', 'date'], name='unique_booking')&lt;/code&gt; гарантирует, что каждую комнату можно забронировать только один раз для каждой даты.</target>
        </trans-unit>
        <trans-unit id="daa52bee5674e99acfc849dbcff198f33e258e7e" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;foo.com/bar&lt;/code&gt; will be redirected to &lt;code&gt;foo.com/bar/&lt;/code&gt; if you don&amp;rsquo;t have a valid URL pattern for &lt;code&gt;foo.com/bar&lt;/code&gt; but &lt;em&gt;do&lt;/em&gt; have a valid pattern for &lt;code&gt;foo.com/bar/&lt;/code&gt;.</source>
          <target state="translated">Например, &lt;code&gt;foo.com/bar&lt;/code&gt; будет перенаправлен на &lt;code&gt;foo.com/bar/&lt;/code&gt; , если у вас нет действительного шаблона URL для &lt;code&gt;foo.com/bar&lt;/code&gt; , но &lt;em&gt;у&lt;/em&gt; вас есть действительный шаблон для &lt;code&gt;foo.com/bar/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acda421e62fa57606e2437699da05abac72b152b" translate="yes" xml:space="preserve">
          <source>For example, Django uses the following method for its &lt;a href=&quot;../ref/models/fields#django.db.models.BinaryField&quot;&gt;&lt;code&gt;BinaryField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Например, Django использует следующий метод для своего &lt;a href=&quot;../ref/models/fields#django.db.models.BinaryField&quot;&gt; &lt;code&gt;BinaryField&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8e172ef87663d0b86cc887111ff1dc787b57de3f" translate="yes" xml:space="preserve">
          <source>For example, Django was used at &lt;a href=&quot;http://www.kusports.com/&quot;&gt;kusports.com&lt;/a&gt; to generate customized, printer-friendly NCAA tournament brackets, as PDF files, for people participating in a March Madness contest.</source>
          <target state="translated">Например, Django использовался на &lt;a href=&quot;http://www.kusports.com/&quot;&gt;kusports.com&lt;/a&gt; для создания персонализированных, пригодных для печати скобок турнира NCAA в виде файлов PDF для людей, участвующих в конкурсе March Madness.</target>
        </trans-unit>
        <trans-unit id="80943883f7d984a6641475f505bdfdd86703d93d" translate="yes" xml:space="preserve">
          <source>For example, a JSON mixin might look something like this:</source>
          <target state="translated">Например,смесь JSON может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="d622b054a138b10227a9f803d572d5e5a50d59f0" translate="yes" xml:space="preserve">
          <source>For example, a website could offer an RSS feed of recent crimes for every police beat in a city. It&amp;rsquo;d be silly to create a separate &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class for each police beat; that would violate the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#dry&quot;&gt;DRY principle&lt;/a&gt; and would couple data to programming logic. Instead, the syndication framework lets you access the arguments passed from your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; so feeds can output items based on information in the feed&amp;rsquo;s URL.</source>
          <target state="translated">Например, веб-сайт может предлагать RSS-ленту о последних преступлениях для каждого полицейского избиения в городе. Было бы глупо создавать отдельный класс &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt; для каждого полицейского удара; это нарушило бы &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#dry&quot;&gt;принцип СУХОЙ&lt;/a&gt; и связало бы данные с логикой программирования. Вместо этого структура синдикации позволяет получить доступ к аргументам, переданным из &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf,&lt;/a&gt; чтобы каналы могли выводить элементы на основе информации в URL-адресе канала.</target>
        </trans-unit>
        <trans-unit id="0570efa58b3d49a98020b20aef23d877304adeaa" translate="yes" xml:space="preserve">
          <source>For example, a website could offer an RSS feed of recent crimes for every police beat in a city. It&amp;rsquo;d be silly to create a separate &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class for each police beat; that would violate the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/design-philosophies/#dry&quot;&gt;DRY principle&lt;/a&gt; and would couple data to programming logic. Instead, the syndication framework lets you access the arguments passed from your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; so feeds can output items based on information in the feed&amp;rsquo;s URL.</source>
          <target state="translated">Например, веб-сайт может предлагать RSS-канал о недавних преступлениях для каждого полицейского избиения в городе. Было бы глупо создавать отдельный класс &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt; для каждого полицейского удара; это нарушит &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/design-philosophies/#dry&quot;&gt;принцип DRY&lt;/a&gt; и приведет к связыванию данных с логикой программирования. Вместо этого структура синдикации позволяет вам получить доступ к аргументам, переданным из вашей &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf,&lt;/a&gt; чтобы каналы могли выводить элементы на основе информации в URL-адресе канала.</target>
        </trans-unit>
        <trans-unit id="32c09ab0d99cab3d599659013ef2ae359d32fd04" translate="yes" xml:space="preserve">
          <source>For example, an attacker could log into &lt;code&gt;good.example.com&lt;/code&gt; and get a valid session for their account. If the attacker has control over &lt;code&gt;bad.example.com&lt;/code&gt;, they can use it to send their session key to you since a subdomain is permitted to set cookies on &lt;code&gt;*.example.com&lt;/code&gt;. When you visit &lt;code&gt;good.example.com&lt;/code&gt;, you&amp;rsquo;ll be logged in as the attacker and might inadvertently enter your sensitive personal data (e.g. credit card info) into the attacker&amp;rsquo;s account.</source>
          <target state="translated">Например, злоумышленник может войти на &lt;code&gt;good.example.com&lt;/code&gt; и получить действительный сеанс для своей учетной записи. Если злоумышленник контролирует &lt;code&gt;bad.example.com&lt;/code&gt; , он может использовать его для отправки вам своего сеансового ключа, поскольку субдомену разрешено устанавливать файлы cookie на &lt;code&gt;*.example.com&lt;/code&gt; . Когда вы посещаете &lt;code&gt;good.example.com&lt;/code&gt; , вы входите в систему как злоумышленник и можете случайно ввести ваши конфиденциальные личные данные (например, данные кредитной карты) в учетную запись злоумышленника.</target>
        </trans-unit>
        <trans-unit id="a246838b4dded87ebc8eaa300c816133a80d83cb" translate="yes" xml:space="preserve">
          <source>For example, assuming an Email model that has a &lt;code&gt;body&lt;/code&gt; attribute and a many-to-many relation to User, the following template code is optimal:</source>
          <target state="translated">Например, если предположить модель Email, которая имеет атрибут &lt;code&gt;body&lt;/code&gt; и отношение &amp;laquo;многие ко многим&amp;raquo; для пользователя, следующий код шаблона является оптимальным:</target>
        </trans-unit>
        <trans-unit id="1d722e1124a3a5f8ff5fb6e2d47961555ceb8107" translate="yes" xml:space="preserve">
          <source>For example, assuming the following class-based view:</source>
          <target state="translated">Например,предполагая следующее представление на основе классов:</target>
        </trans-unit>
        <trans-unit id="f24493d60cc4ff3745f2d26d5246cb69bda1d13d" translate="yes" xml:space="preserve">
          <source>For example, assuming you have &lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;'/static/'&lt;/code&gt;, the &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command would collect the &amp;ldquo;stats&amp;rdquo; files in a &lt;code&gt;'downloads'&lt;/code&gt; subdirectory of &lt;a href=&quot;#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Например, предполагая, что &lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; установлен в &lt;code&gt;'/static/'&lt;/code&gt; , команда &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt; management будет собирать файлы &amp;laquo;stats&amp;raquo; в подкаталоге &lt;code&gt;'downloads'&lt;/code&gt; &lt;a href=&quot;#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b76b34053dc515346add887966fae4b47621b177" translate="yes" xml:space="preserve">
          <source>For example, both of these models use the same underlying database table:</source>
          <target state="translated">Например,обе эти модели используют одну и ту же основную таблицу базы данных:</target>
        </trans-unit>
        <trans-unit id="be04b24d7f1f643fa63e9892d175c3cc722c423b" translate="yes" xml:space="preserve">
          <source>For example, consider an author query that attempts to find out the average rating of books written by each author:</source>
          <target state="translated">Например,рассмотрим авторский запрос,который пытается выяснить средний рейтинг книг,написанных каждым автором:</target>
        </trans-unit>
        <trans-unit id="4d41e3a123d0a71ac27a375044995f1535e74d7c" translate="yes" xml:space="preserve">
          <source>For example, consider the case of an application tracking the musical groups which musicians belong to. There is a many-to-many relationship between a person and the groups of which they are a member, so you could use a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to represent this relationship. However, there is a lot of detail about the membership that you might want to collect, such as the date at which the person joined the group.</source>
          <target state="translated">Например, рассмотрим случай, когда приложение отслеживает музыкальные группы, к которым принадлежат музыканты. Между человеком и группами, членами которых он является, существует отношение &amp;laquo;многие ко многим&amp;raquo;, поэтому вы можете использовать &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; для представления этого отношения. Тем не менее, есть много подробностей о членстве, которые вы, возможно, захотите получить, например, дата, когда человек присоединился к группе.</target>
        </trans-unit>
        <trans-unit id="1ee6868d72ee360f060d928e04a60f0b6da77184" translate="yes" xml:space="preserve">
          <source>For example, consider the following exchange between the client and server:</source>
          <target state="translated">Например,рассмотрим следующий обмен между клиентом и сервером:</target>
        </trans-unit>
        <trans-unit id="fefa82ba367cd0c4e495f81beae9f409ac13e437" translate="yes" xml:space="preserve">
          <source>For example, consider the following models:</source>
          <target state="translated">Например,рассмотрим следующие модели:</target>
        </trans-unit>
        <trans-unit id="50dfca05afb0b864e6e367b2f5b53711b365f279" translate="yes" xml:space="preserve">
          <source>For example, for a GitHub-like website this would mean that if a logged-in user follows a link to a private GitHub project posted on a corporate discussion forum or email, GitHub will not receive the session cookie and the user won&amp;rsquo;t be able to access the project. A bank website, however, most likely doesn&amp;rsquo;t want to allow any transactional pages to be linked from external sites so the &lt;code&gt;'Strict'&lt;/code&gt; flag would be appropriate.</source>
          <target state="translated">Например, для GitHub-подобного веб-сайта это будет означать, что если вошедший в систему пользователь перейдет по ссылке на частный проект GitHub, размещенный на корпоративном дискуссионном форуме или по электронной почте, GitHub не получит файл cookie сеанса, а пользователь не будет возможность получить доступ к проекту. Однако веб-сайт банка, скорее всего, не хочет, чтобы какие-либо транзакционные страницы были связаны с внешними сайтами, поэтому будет уместен флаг &lt;code&gt;'Strict'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b8d15a169d7dd783fadfe82b49729567dc09a23" translate="yes" xml:space="preserve">
          <source>For example, for this setting:</source>
          <target state="translated">Например,для этой настройки:</target>
        </trans-unit>
        <trans-unit id="30bca72fc5eb012eefb4e2af9f75a79bc0ea52c8" translate="yes" xml:space="preserve">
          <source>For example, given &lt;code&gt;MyModel&lt;/code&gt; with an &lt;code&gt;active&lt;/code&gt; field, this snippet ensures that the &lt;code&gt;if obj.active&lt;/code&gt; check at the end uses the correct value if updating &lt;code&gt;active&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; fails in the transaction:</source>
          <target state="translated">Например, учитывая &lt;code&gt;MyModel&lt;/code&gt; с &lt;code&gt;active&lt;/code&gt; полем, этот фрагмент гарантирует, что проверка &lt;code&gt;if obj.active&lt;/code&gt; в конце использует правильное значение, если в транзакции происходит сбой при обновлении &lt;code&gt;active&lt;/code&gt; до &lt;code&gt;True&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8fca2e153a6817b31175cf122ed1bf76d7dbff22" translate="yes" xml:space="preserve">
          <source>For example, given an app &lt;code&gt;common/models.py&lt;/code&gt;:</source>
          <target state="translated">Например, с учетом приложения &lt;code&gt;common/models.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="82c068a3348e9335855de4571fd3358289bf5be2" translate="yes" xml:space="preserve">
          <source>For example, given this stored procedure in an Oracle database:</source>
          <target state="translated">Например,учитывая эту хранимую процедуру в базе данных Oracle:</target>
        </trans-unit>
        <trans-unit id="5e0f6022b0d932e3ce9cc4127fab69a392204cda" translate="yes" xml:space="preserve">
          <source>For example, here is the partial definition for a user model that defines two required fields - a date of birth and height:</source>
          <target state="translated">Например,здесь приведено частичное определение для пользовательской модели,которое определяет два требуемых поля-дата рождения и высота:</target>
        </trans-unit>
        <trans-unit id="f080380cc91321db18be0ed5e5b2815307b9d0ca" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s a custom template tag, &lt;code&gt;{% upper %}&lt;/code&gt;, that capitalizes everything between itself and &lt;code&gt;{% endupper %}&lt;/code&gt;.</source>
          <target state="translated">Например, вот пользовательский шаблонный тег &lt;code&gt;{% upper %}&lt;/code&gt; , который использует заглавные буквы между собой и &lt;code&gt;{% endupper %}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b9d735b9c5b8d870234e558bacbf34dd9c85bd5" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s a validator that only allows even numbers:</source>
          <target state="translated">Например, вот валидатор, который допускает только четные числа:</target>
        </trans-unit>
        <trans-unit id="cd701cbfd16d3186e327aaf9b1f84400d53c091b" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s an attack scenario if you use &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; to serialize session data. If you&amp;rsquo;re using the &lt;a href=&quot;#cookie-session-backend&quot;&gt;signed cookie session backend&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; is known by an attacker (there isn&amp;rsquo;t an inherent vulnerability in Django that would cause it to leak), the attacker could insert a string into their session which, when unpickled, executes arbitrary code on the server. The technique for doing so is simple and easily available on the internet. Although the cookie session storage signs the cookie-stored data to prevent tampering, a &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; leak immediately escalates to a remote code execution vulnerability.</source>
          <target state="translated">Например, вот сценарий атаки, если вы используете &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; для сериализации данных сеанса. Если вы используете &lt;a href=&quot;#cookie-session-backend&quot;&gt;подписанный серверный сеанс cookie&lt;/a&gt; и &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; (в Django нет внутренней уязвимости, которая могла бы привести к его утечке), злоумышленник может вставить в свой сеанс строку, которая, если она не выбрана, выполняется произвольный код на сервере. Техника для этого проста и легко доступна в Интернете. Хотя хранилище сеансов cookie подписывает данные, хранящиеся в cookie, для предотвращения взлома, утечка &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; немедленно перерастает в уязвимость удаленного выполнения кода.</target>
        </trans-unit>
        <trans-unit id="a9b99d628c1b69952232a27efb8b776dffa490e3" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s an excerpt of the URLconf for the &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django website&lt;/a&gt; itself. It includes a number of other URLconfs:</source>
          <target state="translated">Например, вот выдержка из URLconf для самого &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;сайта Django&lt;/a&gt; . Он включает в себя ряд других URLconfs:</target>
        </trans-unit>
        <trans-unit id="e64d241ee6301d9415a0df7e9b9bd01aead3c6f9" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s how sending our &lt;code&gt;pizza_done&lt;/code&gt; signal might look:</source>
          <target state="translated">Например, вот как может выглядеть отправка нашего сигнала &lt;code&gt;pizza_done&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d11541a9d468d4cd46d6175644e9833e8b842148" translate="yes" xml:space="preserve">
          <source>For example, if &lt;a href=&quot;#std:setting-FORMAT_MODULE_PATH&quot;&gt;&lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;mysite.formats&lt;/code&gt;, and current language is &lt;code&gt;en&lt;/code&gt; (English), Django will expect a directory tree like:</source>
          <target state="translated">Например, если &lt;a href=&quot;#std:setting-FORMAT_MODULE_PATH&quot;&gt; &lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt; &lt;/a&gt; установлен в &lt;code&gt;mysite.formats&lt;/code&gt; , и текущий язык &lt;code&gt;en&lt;/code&gt; (английский), Django будет ожидать дерева каталогов , как:</target>
        </trans-unit>
        <trans-unit id="6a2c4dfd529a15047ff27aa7ebeab7fae04103b1" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;path('users/&amp;lt;id&amp;gt;/', ...)&lt;/code&gt; is the matching pattern, &lt;code&gt;route&lt;/code&gt; will contain &lt;code&gt;'users/&amp;lt;id&amp;gt;/'&lt;/code&gt;.</source>
          <target state="translated">Например, если &lt;code&gt;path('users/&amp;lt;id&amp;gt;/', ...)&lt;/code&gt; соответствует шаблону, &lt;code&gt;route&lt;/code&gt; будет содержать &lt;code&gt;'users/&amp;lt;id&amp;gt;/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19d132541d20fc7bb2eb3a1a61268013dfbd96b2" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;substring&lt;/code&gt; is user-provided, this function is vulnerable to SQL injection:</source>
          <target state="translated">Например, если &lt;code&gt;substring&lt;/code&gt; предоставлена ​​пользователем, эта функция уязвима для внедрения SQL:</target>
        </trans-unit>
        <trans-unit id="7160212d78e297bff74fb80841aa3967df415bb3" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;Car&lt;/code&gt; model has a &lt;code&gt;Manufacturer&lt;/code&gt; &amp;ndash; that is, a &lt;code&gt;Manufacturer&lt;/code&gt; makes multiple cars but each &lt;code&gt;Car&lt;/code&gt; only has one &lt;code&gt;Manufacturer&lt;/code&gt; &amp;ndash; use the following definitions:</source>
          <target state="translated">Например, если модель &lt;code&gt;Car&lt;/code&gt; имеет &lt;code&gt;Manufacturer&lt;/code&gt; то есть &lt;code&gt;Manufacturer&lt;/code&gt; производит несколько автомобилей, но у каждого &lt;code&gt;Car&lt;/code&gt; есть только один &lt;code&gt;Manufacturer&lt;/code&gt; используйте следующие определения:</target>
        </trans-unit>
        <trans-unit id="497cc39ebcbf9a72f2dc078c2f7c50e504273f18" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;Pizza&lt;/code&gt; can have multiple &lt;code&gt;Topping&lt;/code&gt; objects, modeled like this:</source>
          <target state="translated">Например, если &lt;code&gt;Pizza&lt;/code&gt; может иметь несколько объектов &lt;code&gt;Topping&lt;/code&gt; , смоделированных так:</target>
        </trans-unit>
        <trans-unit id="88a926ad96f67f15047715985b0884ddf137184c" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;Pizza&lt;/code&gt; has multiple &lt;code&gt;Topping&lt;/code&gt; objects &amp;ndash; that is, a &lt;code&gt;Topping&lt;/code&gt; can be on multiple pizzas and each &lt;code&gt;Pizza&lt;/code&gt; has multiple toppings &amp;ndash; here&amp;rsquo;s how you&amp;rsquo;d represent that:</source>
          <target state="translated">Например, если &lt;code&gt;Pizza&lt;/code&gt; имеет несколько объектов &lt;code&gt;Topping&lt;/code&gt; то есть &lt;code&gt;Topping&lt;/code&gt; может быть на нескольких пиццах, а каждая &lt;code&gt;Pizza&lt;/code&gt; имеет несколько топингов - вот как вы это представляете:</target>
        </trans-unit>
        <trans-unit id="959fca095f33dfcfecd28d18457fa30c5abdbc45" translate="yes" xml:space="preserve">
          <source>For example, if a template &lt;code&gt;foo.html&lt;/code&gt; has &lt;code&gt;{% load humanize %}&lt;/code&gt;, a child template (e.g., one that has &lt;code&gt;{% extends &quot;foo.html&quot; %}&lt;/code&gt;) will &lt;em&gt;not&lt;/em&gt; have access to the humanize template tags and filters. The child template is responsible for its own &lt;code&gt;{% load humanize %}&lt;/code&gt;.</source>
          <target state="translated">Например, если шаблон &lt;code&gt;foo.html&lt;/code&gt; имеет &lt;code&gt;{% load humanize %}&lt;/code&gt; , дочерний шаблон (например, шаблон с &lt;code&gt;{% extends &quot;foo.html&quot; %}&lt;/code&gt; ) &lt;em&gt;не&lt;/em&gt; будет иметь доступа к тегам и фильтрам гуманизированного шаблона. Дочерний шаблон отвечает за собственный &lt;code&gt;{% load humanize %}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0e16779d42e07a7aabddc148bbb9f4e659913c" translate="yes" xml:space="preserve">
          <source>For example, if a user requested the URL &amp;ldquo;/articles/2005/05/39323/&amp;rdquo;, Django would call the function &lt;code&gt;news.views.article_detail(request,
year=2005, month=5, pk=39323)&lt;/code&gt;.</source>
          <target state="translated">Например, если пользователь запросил URL &amp;laquo;/ Articles / 2005/05/39323 /&amp;raquo;, Django вызовет функцию &lt;code&gt;news.views.article_detail(request, year=2005, month=5, pk=39323)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ad997f20e49acf7a66e8c036a9a971fcba2d02b" translate="yes" xml:space="preserve">
          <source>For example, if an article is only allowed on a single site, you&amp;rsquo;d use a model like this:</source>
          <target state="translated">Например, если статья разрешена только на одном сайте, вы должны использовать такую ​​модель:</target>
        </trans-unit>
        <trans-unit id="73ec1fd7ebab8cecdff688bce69fda29e88b07f3" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;Article&lt;/code&gt; model looks like this:</source>
          <target state="translated">Например, если модель &lt;code&gt;Article&lt;/code&gt; выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="7644c6b385544646926cd0a3a90e3256cdd6c0dd" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;WSGIScriptAlias&lt;/code&gt; for your application is set to &lt;code&gt;&quot;/minfo&quot;&lt;/code&gt;, then &lt;code&gt;path&lt;/code&gt; might be &lt;code&gt;&quot;/minfo/music/bands/the_beatles/&quot;&lt;/code&gt; and &lt;code&gt;path_info&lt;/code&gt; would be &lt;code&gt;&quot;/music/bands/the_beatles/&quot;&lt;/code&gt;.</source>
          <target state="translated">Например, если &lt;code&gt;WSGIScriptAlias&lt;/code&gt; для вашего приложения установлен на &lt;code&gt;&quot;/minfo&quot;&lt;/code&gt; , то &lt;code&gt;path&lt;/code&gt; может быть &lt;code&gt;&quot;/minfo/music/bands/the_beatles/&quot;&lt;/code&gt; а &lt;code&gt;path_info&lt;/code&gt; будет &lt;code&gt;&quot;/music/bands/the_beatles/&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77e90f3bf3275646db6a9c846ad34e0a66e6d861" translate="yes" xml:space="preserve">
          <source>For example, if the default ordering is by a non-unique &lt;code&gt;name&lt;/code&gt; field, then the changelist is sorted by &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;pk&lt;/code&gt;. This could perform poorly if you have a lot of rows and don&amp;rsquo;t have an index on &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;pk&lt;/code&gt;.</source>
          <target state="translated">Например, если по умолчанию используется неуникальное поле &lt;code&gt;name&lt;/code&gt; , список изменений сортируется по &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;pk&lt;/code&gt; . Это может плохо работать, если у вас много строк и у вас нет индекса для &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;pk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4e149bd799a81643324e12a0b823ee09731d37e" translate="yes" xml:space="preserve">
          <source>For example, if the models for your application live in the module &lt;code&gt;myapp.models&lt;/code&gt; (the package structure that is created for an application by the &lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt;&lt;code&gt;manage.py startapp&lt;/code&gt;&lt;/a&gt; script), &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; should read, in part:</source>
          <target state="translated">Например, если модели для вашего приложения &lt;code&gt;myapp.models&lt;/code&gt; в модуле myapp.models (структура пакета, которая создается для приложения сценарием &lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt; &lt;code&gt;manage.py startapp&lt;/code&gt; &lt;/a&gt; ), &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; следует прочитать частично:</target>
        </trans-unit>
        <trans-unit id="b0c347e5fa8a57d3a7946043b8e71f27df336b80" translate="yes" xml:space="preserve">
          <source>For example, if we had a &lt;code&gt;Book&lt;/code&gt; model with a &lt;code&gt;ManyToManyField&lt;/code&gt; linking to &lt;code&gt;Author&lt;/code&gt;, we could add a through model &lt;code&gt;AuthorBook&lt;/code&gt; with a new field &lt;code&gt;is_primary&lt;/code&gt;, like so:</source>
          <target state="translated">Например, если бы у нас была модель &lt;code&gt;Book&lt;/code&gt; со &lt;code&gt;ManyToManyField&lt;/code&gt; на &lt;code&gt;Author&lt;/code&gt; , мы могли бы добавить сквозную модель &lt;code&gt;AuthorBook&lt;/code&gt; с новым полем &lt;code&gt;is_primary&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="a575ad3908796268e9301813f7ae313228b6b010" translate="yes" xml:space="preserve">
          <source>For example, if we have:</source>
          <target state="translated">Например,если бы мы это сделали:</target>
        </trans-unit>
        <trans-unit id="37ed5ab15784ebdc941be2c5c6bcc94f7a13da2b" translate="yes" xml:space="preserve">
          <source>For example, if we reverse the order of the &lt;code&gt;values()&lt;/code&gt; and &lt;code&gt;annotate()&lt;/code&gt; clause from our previous example:</source>
          <target state="translated">Например, если мы изменим порядок предложений &lt;code&gt;values()&lt;/code&gt; и &lt;code&gt;annotate()&lt;/code&gt; из нашего предыдущего примера:</target>
        </trans-unit>
        <trans-unit id="aaa31c7d83e5e9be08f7ea4cf3e1d382a5057f9c" translate="yes" xml:space="preserve">
          <source>For example, if we wanted to add a tool to the change list view for all the models in an app named &lt;code&gt;my_app&lt;/code&gt;, we would copy &lt;code&gt;contrib/admin/templates/admin/change_list.html&lt;/code&gt; to the &lt;code&gt;templates/admin/my_app/&lt;/code&gt; directory of our project, and make any necessary changes.</source>
          <target state="translated">Например, если мы хотим добавить инструмент в представление списка изменений для всех моделей в приложении с именем &lt;code&gt;my_app&lt;/code&gt; , мы скопируем &lt;code&gt;contrib/admin/templates/admin/change_list.html&lt;/code&gt; в каталог &lt;code&gt;templates/admin/my_app/&lt;/code&gt; нашего проект и внесите необходимые изменения.</target>
        </trans-unit>
        <trans-unit id="5206cd2a79a8ce28494c927b4f754f4f6ab560c0" translate="yes" xml:space="preserve">
          <source>For example, if you had &lt;code&gt;organic.py&lt;/code&gt; and &lt;code&gt;synthetic.py&lt;/code&gt; in the &lt;code&gt;models&lt;/code&gt; directory:</source>
          <target state="translated">Например, если у вас в каталоге &lt;code&gt;models&lt;/code&gt; были &lt;code&gt;organic.py&lt;/code&gt; и &lt;code&gt;synthetic.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ec78701bb6d07ca8380a8fb2def8939d712743f8" translate="yes" xml:space="preserve">
          <source>For example, if you have a Blog object &lt;code&gt;b&lt;/code&gt; with &lt;code&gt;id=5&lt;/code&gt;, the following three queries would be identical:</source>
          <target state="translated">Например, если у вас есть объект Blog &lt;code&gt;b&lt;/code&gt; с &lt;code&gt;id=5&lt;/code&gt; , следующие три запроса будут идентичны:</target>
        </trans-unit>
        <trans-unit id="7c53aafc3c0c25befc980a17c0988fd3884989b3" translate="yes" xml:space="preserve">
          <source>For example, if you have a blog entry with an author, the following definition would enable searching blog entries by the email address of the author:</source>
          <target state="translated">Например,если у вас есть запись в блоге с автором,следующее определение позволит искать записи в блоге по адресу электронной почты автора:</target>
        </trans-unit>
        <trans-unit id="95a33ccea96a9b29633c8c3693475d86bc4201f8" translate="yes" xml:space="preserve">
          <source>For example, if you have a field &lt;code&gt;title&lt;/code&gt; that has &lt;code&gt;unique_for_date=&quot;pub_date&quot;&lt;/code&gt;, then Django wouldn&amp;rsquo;t allow the entry of two records with the same &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;pub_date&lt;/code&gt;.</source>
          <target state="translated">Например, если у вас есть &lt;code&gt;title&lt;/code&gt; поля, который имеет &lt;code&gt;unique_for_date=&quot;pub_date&quot;&lt;/code&gt; , тогда Django не разрешит ввод двух записей с одинаковым &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;pub_date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a451065bc00e41b11f720e0f717367308b091faf" translate="yes" xml:space="preserve">
          <source>For example, if you have a function called &lt;code&gt;get_notification_email()&lt;/code&gt; that returns a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects representing some periodic email you wish to send out, you could send these emails using a single call to send_messages:</source>
          <target state="translated">Например, если у вас есть функция &lt;code&gt;get_notification_email()&lt;/code&gt; которая возвращает список объектов &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; ,&lt;/a&gt; представляющих некоторые периодические электронные письма, которые вы хотите отправить, вы можете отправить эти электронные письма, используя один вызов send_messages:</target>
        </trans-unit>
        <trans-unit id="17eafc2b5422a055d91b931d67499186a4200fbf" translate="yes" xml:space="preserve">
          <source>For example, if you have an app &lt;code&gt;bookstore&lt;/code&gt; (as created by &lt;code&gt;manage.py startapp bookstore&lt;/code&gt;), a model defined as &lt;code&gt;class Book&lt;/code&gt; will have a database table named &lt;code&gt;bookstore_book&lt;/code&gt;.</source>
          <target state="translated">Например, если у вас есть &lt;code&gt;bookstore&lt;/code&gt; приложений (созданный &lt;code&gt;manage.py startapp bookstore&lt;/code&gt; ), модель, определенная как &lt;code&gt;class Book&lt;/code&gt; будет иметь таблицу базы данных с именем &lt;code&gt;bookstore_book&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63fbca3270dc92aa2768b890a6cb1d33f7c76b6d" translate="yes" xml:space="preserve">
          <source>For example, if you only want users whose names begin with &amp;lsquo;J&amp;rsquo; to be able to delete objects in bulk:</source>
          <target state="translated">Например, если вы хотите, чтобы пользователи, чьи имена начинаются с 'J', могли массово удалять объекты:</target>
        </trans-unit>
        <trans-unit id="dffc16ac6f5a1235e2ff5c1c9590e976974355a8" translate="yes" xml:space="preserve">
          <source>For example, if you operate a Web email system, then the contents of the &amp;ldquo;inbox&amp;rdquo; page depend on which user is logged in. If an ISP blindly cached your site, then the first user who logged in through that ISP would have their user-specific inbox page cached for subsequent visitors to the site. That&amp;rsquo;s not cool.</source>
          <target state="translated">Например, если вы используете систему электронной почты в Интернете, то содержимое страницы &amp;laquo;Входящие&amp;raquo; зависит от того, какой пользователь вошел в систему. Если провайдер слепо кэшировал ваш сайт, то у первого пользователя, который вошел в систему через этого провайдера, будет свой пользователь. -специфическая страница входящих сообщений, кэшированная для последующих посетителей сайта. Это не круто.</target>
        </trans-unit>
        <trans-unit id="0318688c9cbfbc9a1af11ad338883da37e732245" translate="yes" xml:space="preserve">
          <source>For example, if you want the &lt;code&gt;CharField&lt;/code&gt; for the &lt;code&gt;name&lt;/code&gt; attribute of &lt;code&gt;Author&lt;/code&gt; to be represented by a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; instead of its default &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt;, you can override the field&amp;rsquo;s widget:</source>
          <target state="translated">Например, если вы хотите, чтобы &lt;code&gt;CharField&lt;/code&gt; для &lt;code&gt;name&lt;/code&gt; атрибута &lt;code&gt;Author&lt;/code&gt; , чтобы быть представленным &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; вместо его по умолчанию &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; , вы можете изменить виджет данного поля:</target>
        </trans-unit>
        <trans-unit id="d3c8260ce0cd8a75ee9020cf48382605726d0d9d" translate="yes" xml:space="preserve">
          <source>For example, if you want to allow generic relations to models with either &lt;a href=&quot;../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; primary key fields, you can use &lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; for the &amp;ldquo;object_id&amp;rdquo; field on your model since integers can be coerced to strings by &lt;a href=&quot;../models/fields#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Например, если вы хотите разрешить родовые отношения для моделей с &lt;a href=&quot;../models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; первичного ключа IntegerField или &lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; , вы можете использовать &lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; для поля &amp;laquo;object_id&amp;raquo; в вашей модели, поскольку целые числа можно привести к строкам с помощью &lt;a href=&quot;../models/fields#django.db.models.Field.get_db_prep_value&quot;&gt; &lt;code&gt;get_db_prep_value()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0412d92da41464198926ae62a16c47b911add00" translate="yes" xml:space="preserve">
          <source>For example, if you want to catch the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; HTML elements created by the &lt;a href=&quot;#std:templatefilter-linebreaks&quot;&gt;&lt;code&gt;linebreaks&lt;/code&gt;&lt;/a&gt; filter:</source>
          <target state="translated">Например, если вы хотите перехватить HTML-элементы &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; , созданные фильтром &lt;a href=&quot;#std:templatefilter-linebreaks&quot;&gt; &lt;code&gt;linebreaks&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="287184b56a2079bc77936a467ffcb12bb2b8886c" translate="yes" xml:space="preserve">
          <source>For example, if you want to override &lt;code&gt;clean()&lt;/code&gt;:</source>
          <target state="translated">Например, если вы хотите переопределить &lt;code&gt;clean()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3efb9b9ef08765dd8e6f0b121687a407972caf70" translate="yes" xml:space="preserve">
          <source>For example, if you want to return a custom &lt;code&gt;QuerySet&lt;/code&gt; class from the &lt;code&gt;get_queryset&lt;/code&gt; method, you could do this:</source>
          <target state="translated">Например, если вы хотите вернуть пользовательский класс &lt;code&gt;QuerySet&lt;/code&gt; из метода &lt;code&gt;get_queryset&lt;/code&gt; , вы можете сделать это:</target>
        </trans-unit>
        <trans-unit id="063ebc3924841e6968434234faec07eb5ca9e33b" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to calculate the average number of authors per book you first annotate the set of books with the author count, then aggregate that author count, referencing the annotation field:</source>
          <target state="translated">Например,если вы хотите вычислить среднее число авторов на книгу,то сначала аннотируйте набор книг со значением автора,а затем суммируйте это значение со значением автора,ссылаясь на поле аннотации:</target>
        </trans-unit>
        <trans-unit id="bfc09bcbb025c7c07130736bf333d3d02ac80e5f" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to use &lt;code&gt;MySlugFormField&lt;/code&gt; for the &lt;code&gt;slug&lt;/code&gt; field, you could do the following:</source>
          <target state="translated">Например, если вы хотите использовать &lt;code&gt;MySlugFormField&lt;/code&gt; для поля &lt;code&gt;slug&lt;/code&gt; , вы можете сделать следующее:</target>
        </trans-unit>
        <trans-unit id="c7aa460ec5e420ac634048bfa3fc527ceb63585d" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to validate that the contents of a &lt;code&gt;CharField&lt;/code&gt; called &lt;code&gt;serialnumber&lt;/code&gt; was unique, &lt;code&gt;clean_serialnumber()&lt;/code&gt; would be the right place to do this. You don&amp;rsquo;t need a specific field (it&amp;rsquo;s a &lt;code&gt;CharField&lt;/code&gt;), but you want a formfield-specific piece of validation and, possibly, cleaning/normalizing the data.</source>
          <target state="translated">Например, если вы хотите проверить, что содержимое &lt;code&gt;CharField&lt;/code&gt; с именем &lt;code&gt;serialnumber&lt;/code&gt; уникально, &lt;code&gt;clean_serialnumber()&lt;/code&gt; будет правильным местом для этого. Вам не нужно определенное поле (это &lt;code&gt;CharField&lt;/code&gt; ), но вы хотите специфическую для формы поля часть проверки и, возможно, очистки / нормализации данных.</target>
        </trans-unit>
        <trans-unit id="812e0ac86e0af9354376f7614bdda8d6eaf87eef" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to write a custom filter called &lt;code&gt;urlize_and_linebreaks&lt;/code&gt; that combined the &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-urlize&quot;&gt;&lt;code&gt;urlize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-linebreaksbr&quot;&gt;&lt;code&gt;linebreaksbr&lt;/code&gt;&lt;/a&gt; filters, the filter would look like:</source>
          <target state="translated">Например, если вы хотите написать собственный фильтр под названием &lt;code&gt;urlize_and_linebreaks&lt;/code&gt; , что в сочетании с &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-urlize&quot;&gt; &lt;code&gt;urlize&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-linebreaksbr&quot;&gt; &lt;code&gt;linebreaksbr&lt;/code&gt; &lt;/a&gt; фильтров, фильтр будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="62aa2739230ebf126047b21a8ee5eb70e0f6ad83" translate="yes" xml:space="preserve">
          <source>For example, if you were building a database of &amp;ldquo;places&amp;rdquo;, you would build pretty standard stuff such as address, phone number, etc. in the database. Then, if you wanted to build a database of restaurants on top of the places, instead of repeating yourself and replicating those fields in the &lt;code&gt;Restaurant&lt;/code&gt; model, you could make &lt;code&gt;Restaurant&lt;/code&gt; have a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;Place&lt;/code&gt; (because a restaurant &amp;ldquo;is a&amp;rdquo; place; in fact, to handle this you&amp;rsquo;d typically use &lt;a href=&quot;#model-inheritance&quot;&gt;inheritance&lt;/a&gt;, which involves an implicit one-to-one relation).</source>
          <target state="translated">Например, если бы вы строили базу данных &amp;laquo;мест&amp;raquo;, вы бы в нее встроили довольно стандартные вещи, такие как адрес, номер телефона и т. Д. Затем, если вы хотите создать базу данных ресторанов на вершине мест, вместо того , чтобы повторять себя и тиражирование этих полей в &lt;code&gt;Restaurant&lt;/code&gt; модели, можно сделать &lt;code&gt;Restaurant&lt;/code&gt; имеет &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; к &lt;code&gt;Place&lt;/code&gt; (потому что ресторан &amp;laquo;является&amp;raquo; местом, в Фактически, чтобы справиться с этим, вы обычно используете &lt;a href=&quot;#model-inheritance&quot;&gt;наследование&lt;/a&gt; , которое включает в себя неявное отношение один к одному).</target>
        </trans-unit>
        <trans-unit id="ac564798e14976b158868774b55c30a2ce8047f9" translate="yes" xml:space="preserve">
          <source>For example, if you were manipulating a list of blogs, you may want to determine how many entries have been made in each blog:</source>
          <target state="translated">Например,если вы манипулировали списком блогов,вы можете определить,сколько записей было сделано в каждом блоге:</target>
        </trans-unit>
        <trans-unit id="48b33e9a548fb4951086a93d4cccbb51cee21337" translate="yes" xml:space="preserve">
          <source>For example, if you&amp;rsquo;re migrating a user from the &lt;code&gt;legacy_users&lt;/code&gt; database to the &lt;code&gt;new_users&lt;/code&gt; database, you might use these commands:</source>
          <target state="translated">Например, если вы &lt;code&gt;legacy_users&lt;/code&gt; пользователя из базы данных &lt;code&gt;new_users&lt;/code&gt; базу данных new_users , вы можете использовать эти команды:</target>
        </trans-unit>
        <trans-unit id="25f618583a6cd0fc97af3000d8f1c63e4d2ec20e" translate="yes" xml:space="preserve">
          <source>For example, if you&amp;rsquo;ve written an S3 storage backend in &lt;code&gt;myproject.storage.S3Storage&lt;/code&gt; you could use it with:</source>
          <target state="translated">Например, если вы написали серверную часть хранилища S3 в &lt;code&gt;myproject.storage.S3Storage&lt;/code&gt; , вы можете использовать ее с:</target>
        </trans-unit>
        <trans-unit id="c7dec5e7f20c3fb00b261664622da3f6bfce814b" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;a href=&quot;../../ref/settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; is defined as &lt;code&gt;/media/&lt;/code&gt;, you can do this by adding the following snippet to your urls.py:</source>
          <target state="translated">Например, если ваш &lt;a href=&quot;../../ref/settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt; определен как &lt;code&gt;/media/&lt;/code&gt; , вы можете сделать это, добавив следующий фрагмент в ваш urls.py:</target>
        </trans-unit>
        <trans-unit id="573973612596761249845c2b92e7229999296031" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is defined as &lt;code&gt;/static/&lt;/code&gt;, you can do this by adding the following snippet to your urls.py:</source>
          <target state="translated">Например, если ваш &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; определен как &lt;code&gt;/static/&lt;/code&gt; , вы можете сделать это, добавив следующий фрагмент в ваш urls.py:</target>
        </trans-unit>
        <trans-unit id="382da25e234ff543ced0d60c81998fd1b64dec8a" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting has a &amp;lsquo;master&amp;rsquo; database defined, name the fixture &lt;code&gt;mydata.master.json&lt;/code&gt; or &lt;code&gt;mydata.master.json.gz&lt;/code&gt; and the fixture will only be loaded when you specify you want to load data into the &lt;code&gt;master&lt;/code&gt; database.</source>
          <target state="translated">Например, если в настройке &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; определена база данных &amp;laquo;master&amp;raquo;, назовите &amp;laquo;fixture &lt;code&gt;mydata.master.json&lt;/code&gt; &amp;raquo; или &amp;laquo; &lt;code&gt;mydata.master.json.gz&lt;/code&gt; &amp;raquo;, и &amp;laquo;fixture&amp;raquo; будет загружен, только если вы укажете, что хотите загрузить данные в базу данных &lt;code&gt;master&lt;/code&gt; . ,</target>
        </trans-unit>
        <trans-unit id="b38b053424f30ca9abf3de537773f7fbaf83bc53" translate="yes" xml:space="preserve">
          <source>For example, if your Django app contained a translation string for the text &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt;, like so:</source>
          <target state="translated">Например, если ваше приложение Django содержало строку перевода для текста &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt; , вот так:</target>
        </trans-unit>
        <trans-unit id="ba64113bb54dcbe956d54f2cdb1242079b313974" translate="yes" xml:space="preserve">
          <source>For example, if your custom tags/filters are in a file called &lt;code&gt;poll_extras.py&lt;/code&gt;, your app layout might look like this:</source>
          <target state="translated">Например, если ваши пользовательские теги / фильтры находятся в файле с именем &lt;code&gt;poll_extras.py&lt;/code&gt; , макет вашего приложения может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="3ce9954afa977e8d25528c0d4c5d3e44545946e0" translate="yes" xml:space="preserve">
          <source>For example, if your test requires a particular optional library in order to succeed, you could decorate the test case with &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.skipIf&quot;&gt;&lt;code&gt;@skipIf&lt;/code&gt;&lt;/a&gt;. Then, the test runner will report that the test wasn&amp;rsquo;t executed and why, instead of failing the test or omitting the test altogether.</source>
          <target state="translated">Например, если для успешного выполнения теста требуется определенная дополнительная библиотека, вы можете украсить контрольный пример с помощью &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.skipIf&quot;&gt; &lt;code&gt;@skipIf&lt;/code&gt; &lt;/a&gt; . Затем организатор теста сообщит, что тест не был выполнен и почему, вместо того, чтобы не пройти тест или вообще пропустить тест.</target>
        </trans-unit>
        <trans-unit id="d89c6f1f9c3485c512a5c12dbc88ece425a8d0a9" translate="yes" xml:space="preserve">
          <source>For example, in a request to &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">Например, в запросе к &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt; URLconf будет искать &lt;code&gt;myapp/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c01bd511b40c972c539e07cb7adec6680d41f2c" translate="yes" xml:space="preserve">
          <source>For example, in our &lt;code&gt;HandField&lt;/code&gt; class we&amp;rsquo;re always forcibly setting max_length in &lt;code&gt;__init__()&lt;/code&gt;. The &lt;code&gt;deconstruct()&lt;/code&gt; method on the base &lt;code&gt;Field&lt;/code&gt; class will see this and try to return it in the keyword arguments; thus, we can drop it from the keyword arguments for readability:</source>
          <target state="translated">Например, в нашем классе &lt;code&gt;HandField&lt;/code&gt; мы всегда принудительно устанавливаем max_length в &lt;code&gt;__init__()&lt;/code&gt; . Метод &lt;code&gt;deconstruct()&lt;/code&gt; в базовом классе &lt;code&gt;Field&lt;/code&gt; увидит это и попытается вернуть его в аргументах ключевого слова; таким образом, мы можем отбросить его из аргументов ключевого слова для удобства чтения:</target>
        </trans-unit>
        <trans-unit id="3982a7f971cb56decef776cf27f6c9f258416465" translate="yes" xml:space="preserve">
          <source>For example, in the default case, you might see:</source>
          <target state="translated">Например,в случае по умолчанию,вы можете увидеть:</target>
        </trans-unit>
        <trans-unit id="be8dcf1e5a2d50703a2c513aadf6082398124606" translate="yes" xml:space="preserve">
          <source>For example, in the filter &lt;code&gt;{{ var|foo:&quot;bar&quot; }}&lt;/code&gt;, the filter &lt;code&gt;foo&lt;/code&gt; would be passed the variable &lt;code&gt;var&lt;/code&gt; and the argument &lt;code&gt;&quot;bar&quot;&lt;/code&gt;.</source>
          <target state="translated">Например, в фильтре &lt;code&gt;{{ var|foo:&quot;bar&quot; }}&lt;/code&gt; фильтру &lt;code&gt;foo&lt;/code&gt; будет передана переменная &lt;code&gt;var&lt;/code&gt; и аргумент &lt;code&gt;&quot;bar&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bfaf4d814db0b662c240dee53377b51532d7b2c" translate="yes" xml:space="preserve">
          <source>For example, in the generic class-based views there is a mixin called &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt; whose primary purpose is to define the method &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt;. When combined with the behavior of the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; base class, the result is a &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.TemplateView&quot;&gt;&lt;code&gt;TemplateView&lt;/code&gt;&lt;/a&gt; class that will dispatch requests to the appropriate matching methods (a behavior defined in the &lt;code&gt;View&lt;/code&gt; base class), and that has a &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt; method that uses a &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; attribute to return a &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; object (a behavior defined in the &lt;code&gt;TemplateResponseMixin&lt;/code&gt;).</source>
          <target state="translated">Например, в общих представлениях на основе классов есть миксины &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt; , основная цель которых - определить метод &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt; . В сочетании с поведением базового класса &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , в результате получается класс &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.TemplateView&quot;&gt; &lt;code&gt;TemplateView&lt;/code&gt; ,&lt;/a&gt; который будет отправлять запросы в соответствующие методы сопоставления (поведение, определенное в базовом классе &lt;code&gt;View&lt;/code&gt; ), и который имеет метод &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt; который использует атрибут &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt; вернуть объект &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; (поведение, определенное в &lt;code&gt;TemplateResponseMixin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bee7838323c7513cb8f79ec775b4a84e3faed67e" translate="yes" xml:space="preserve">
          <source>For example, it could be used for a tagging system like so:</source>
          <target state="translated">Например,она может быть использована для такой системы тегов:</target>
        </trans-unit>
        <trans-unit id="6f017e4860d5bdcebab0f0fb119e76168400ff70" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s add a natural key to the &lt;code&gt;Book&lt;/code&gt; model from the example above:</source>
          <target state="translated">Например, давайте добавим естественный ключ к модели &lt;code&gt;Book&lt;/code&gt; из примера выше:</target>
        </trans-unit>
        <trans-unit id="981e0acc47eeefb4090a6114b26b34b9a8900b87" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s consider the following model:</source>
          <target state="translated">Например, давайте рассмотрим следующую модель:</target>
        </trans-unit>
        <trans-unit id="3f7ab8aab4e41f4721a9deee7d51f3b5b448fb6c" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say we have a &lt;code&gt;SouthTexasCity&lt;/code&gt; model (from the &lt;a href=&quot;https://github.com/django/django/blob/master/tests/gis_tests/distapp/models.py&quot;&gt;GeoDjango distance tests&lt;/a&gt; ) on a &lt;em&gt;projected&lt;/em&gt; coordinate system valid for cities in southern Texas:</source>
          <target state="translated">Например, предположим, у нас есть модель &lt;code&gt;SouthTexasCity&lt;/code&gt; (из &lt;a href=&quot;https://github.com/django/django/blob/master/tests/gis_tests/distapp/models.py&quot;&gt;дистанционных тестов GeoDjango&lt;/a&gt; ) в &lt;em&gt;проекционной&lt;/em&gt; системе координат, действительной для городов на юге Техаса:</target>
        </trans-unit>
        <trans-unit id="6632db7f2d16495f99973c14b8ca361212c07908" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s write a filter that emphasizes the first character of a string:</source>
          <target state="translated">Например, давайте напишем фильтр, который подчеркивает первый символ строки:</target>
        </trans-unit>
        <trans-unit id="fd27f1d7a84788999d8f9705306d16767267018a" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s write a full implementation of our template tag, &lt;code&gt;{% current_time %}&lt;/code&gt;, that displays the current date/time, formatted according to a parameter given in the tag, in &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; syntax. It&amp;rsquo;s a good idea to decide the tag syntax before anything else. In our case, let&amp;rsquo;s say the tag should be used like this:</source>
          <target state="translated">Например, давайте напишем полную реализацию нашего тега шаблона &lt;code&gt;{% current_time %}&lt;/code&gt; , который отображает текущую дату / время, отформатированный в соответствии с параметром, заданным в теге, в синтаксисе &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; . Хорошая идея - определить синтаксис тега прежде всего. В нашем случае, скажем, тег должен использоваться следующим образом:</target>
        </trans-unit>
        <trans-unit id="faa7baeec61827390806b1f3bb4cccabe076d811" translate="yes" xml:space="preserve">
          <source>For example, notice the behavior when querying across a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Например, обратите внимание на поведение при запросе через &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ac6f5569362b9037e98acf2f0c9ebe5969f083c9" translate="yes" xml:space="preserve">
          <source>For example, on Debian-based distributions that package SpatiaLite 4.2+, try to install the &lt;code&gt;libsqlite3-mod-spatialite&lt;/code&gt; package. For older releases install &lt;code&gt;spatialite-bin&lt;/code&gt;.</source>
          <target state="translated">Например, в дистрибутивах на основе Debian, в которые входит пакет SpatiaLite 4.2+, попробуйте установить &lt;code&gt;libsqlite3-mod-spatialite&lt;/code&gt; . Для более старых выпусков установите &lt;code&gt;spatialite-bin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfd8c872d8f2916e92e073391899fa52d0e6b5c4" translate="yes" xml:space="preserve">
          <source>For example, repeatedly getting a certain index in a queryset object will query the database each time:</source>
          <target state="translated">Например,многократное получение определенного индекса в объекте квартета будет каждый раз опрашивать базу данных:</target>
        </trans-unit>
        <trans-unit id="e8ada1817d3c3e6aea32546f2fc1f0f5b452cf40" translate="yes" xml:space="preserve">
          <source>For example, say you have a custom manager method that touches the database &amp;ndash; &lt;code&gt;User.objects.create_user()&lt;/code&gt;. Because &lt;code&gt;create_user()&lt;/code&gt; is a manager method, not a &lt;code&gt;QuerySet&lt;/code&gt; method, you can&amp;rsquo;t do &lt;code&gt;User.objects.using('new_users').create_user()&lt;/code&gt;. (The &lt;code&gt;create_user()&lt;/code&gt; method is only available on &lt;code&gt;User.objects&lt;/code&gt;, the manager, not on &lt;code&gt;QuerySet&lt;/code&gt; objects derived from the manager.) The solution is to use &lt;code&gt;db_manager()&lt;/code&gt;, like this:</source>
          <target state="translated">Например, скажем, у вас есть собственный метод менеджера, который касается базы данных - &lt;code&gt;User.objects.create_user()&lt;/code&gt; . Поскольку &lt;code&gt;create_user()&lt;/code&gt; является методом менеджера, а не методом &lt;code&gt;QuerySet&lt;/code&gt; , вы не можете выполнить &lt;code&gt;User.objects.using('new_users').create_user()&lt;/code&gt; . (Метод &lt;code&gt;create_user()&lt;/code&gt; доступен только для &lt;code&gt;User.objects&lt;/code&gt; , менеджера, но не для объектов &lt;code&gt;QuerySet&lt;/code&gt; , полученных из менеджера.) Решение состоит в том, чтобы использовать &lt;code&gt;db_manager()&lt;/code&gt; , например так:</target>
        </trans-unit>
        <trans-unit id="b12427337defaf610be79af10716c83a674c8723" translate="yes" xml:space="preserve">
          <source>For example, say you&amp;rsquo;re writing an inclusion tag that will always be used in a context that contains &lt;code&gt;home_link&lt;/code&gt; and &lt;code&gt;home_title&lt;/code&gt; variables that point back to the main page. Here&amp;rsquo;s what the Python function would look like:</source>
          <target state="translated">Например, допустим, вы пишете тег включения, который всегда будет использоваться в контексте, который содержит переменные &lt;code&gt;home_link&lt;/code&gt; и &lt;code&gt;home_title&lt;/code&gt; , которые указывают на главную страницу. Вот как будет выглядеть функция Python:</target>
        </trans-unit>
        <trans-unit id="837db34e268679acb26d08abc40f8ec66566edea" translate="yes" xml:space="preserve">
          <source>For example, say your &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'/home/media'&lt;/code&gt;, and &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'photos/%Y/%m/%d'&lt;/code&gt;. The &lt;code&gt;'%Y/%m/%d'&lt;/code&gt; part of &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; formatting; &lt;code&gt;'%Y'&lt;/code&gt; is the four-digit year, &lt;code&gt;'%m'&lt;/code&gt; is the two-digit month and &lt;code&gt;'%d'&lt;/code&gt; is the two-digit day. If you upload a file on Jan. 15, 2007, it will be saved in the directory &lt;code&gt;/home/media/photos/2007/01/15&lt;/code&gt;.</source>
          <target state="translated">Например, допустим, что для &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;'/home/media'&lt;/code&gt; , а для &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;'photos/%Y/%m/%d'&lt;/code&gt; . Часть &lt;code&gt;'%Y/%m/%d'&lt;/code&gt; в &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt; представляет собой форматирование &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; ; &lt;code&gt;'%Y'&lt;/code&gt; - год из четырех цифр, &lt;code&gt;'%m'&lt;/code&gt; - месяц из двух цифр, а &lt;code&gt;'%d'&lt;/code&gt; - день из двух цифр. Если вы загрузите файл 15 января 2007 года, он будет сохранен в каталоге &lt;code&gt;/home/media/photos/2007/01/15&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efd483a59754f0aaac0b780515e3d32175b4ce1a" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a filter that adds the string &lt;code&gt;xx&lt;/code&gt; to the end of any input. Since this introduces no dangerous HTML characters to the result (aside from any that were already present), you should mark your filter with &lt;code&gt;is_safe&lt;/code&gt;:</source>
          <target state="translated">Например, предположим, что у вас есть фильтр, который добавляет строку &lt;code&gt;xx&lt;/code&gt; в конец любого ввода. Поскольку это не приводит к появлению опасных HTML-символов в результате (кроме тех, которые уже присутствовали), вы должны пометить ваш фильтр &lt;code&gt;is_safe&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f0b46b2ac3f51513f40f2ba0e075ad6daaca6f59" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a view, &lt;code&gt;app_views.client&lt;/code&gt;, whose URLconf takes a client ID (here, &lt;code&gt;client()&lt;/code&gt; is a method inside the views file &lt;code&gt;app_views.py&lt;/code&gt;). The URLconf line might look like this:</source>
          <target state="translated">Например, предположим, что у вас есть представление &lt;code&gt;app_views.client&lt;/code&gt; , URLconf которого принимает идентификатор клиента (здесь &lt;code&gt;client()&lt;/code&gt; - это метод внутри файла представлений &lt;code&gt;app_views.py&lt;/code&gt; ). Строка URLconf может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="75689940cb99e5a3c78be96bc95b910bb9da78b2" translate="yes" xml:space="preserve">
          <source>For example, suppose you have these models:</source>
          <target state="translated">Например,предположим,что у вас есть эти модели:</target>
        </trans-unit>
        <trans-unit id="adb68cda65641acffb5513c00ebc8792adf26e87" translate="yes" xml:space="preserve">
          <source>For example, suppose you want to add a method to the &lt;code&gt;Person&lt;/code&gt; model. You can do it like this:</source>
          <target state="translated">Например, предположим, что вы хотите добавить метод в модель &lt;code&gt;Person&lt;/code&gt; . Вы можете сделать это так:</target>
        </trans-unit>
        <trans-unit id="66b36bd8f3d737b326cd36b2698766934c40eb1b" translate="yes" xml:space="preserve">
          <source>For example, take the following form:</source>
          <target state="translated">Например,примите следующую форму:</target>
        </trans-unit>
        <trans-unit id="4deafec385d3e444a3bb56c6350f690c558fa83f" translate="yes" xml:space="preserve">
          <source>For example, taking advantage of GitHub&amp;rsquo;s feature to expose repositories as zip files, you can use a URL like:</source>
          <target state="translated">Например, используя функцию GitHub для представления репозиториев в виде zip-файлов, вы можете использовать URL-адрес, например:</target>
        </trans-unit>
        <trans-unit id="2cee46bd342b10491add882e66c9a5b078ff05c4" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;../intro/tutorial02&quot;&gt;tutorial&lt;/a&gt; has this line:</source>
          <target state="translated">Например, у &lt;a href=&quot;../intro/tutorial02&quot;&gt;руководства&lt;/a&gt; есть эта строка:</target>
        </trans-unit>
        <trans-unit id="5b4e2e42e3429923389b83d267729df072153c91" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; app only prompts to create a superuser when &lt;code&gt;interactive&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Например, приложение &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt; предлагает создать суперпользователя только в том случае, если &lt;code&gt;interactive&lt;/code&gt; режим имеет значение &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd52e2391a1ffb005e89afe37be49919c4cc5f22" translate="yes" xml:space="preserve">
          <source>For example, the filesystem loader may receive &lt;code&gt;'index.html'&lt;/code&gt; as a &lt;code&gt;template_name&lt;/code&gt; argument. This method would yield origins for the full path of &lt;code&gt;index.html&lt;/code&gt; as it appears in each template directory the loader looks at.</source>
          <target state="translated">Например, загрузчик файловой системы может получить &lt;code&gt;'index.html'&lt;/code&gt; в качестве аргумента &lt;code&gt;template_name&lt;/code&gt; . Этот метод даст начало для полного пути &lt;code&gt;index.html&lt;/code&gt; , поскольку он появляется в каждом каталоге шаблонов, на который смотрит загрузчик.</target>
        </trans-unit>
        <trans-unit id="c18b9843bc411dfbfe818e01049b0042cdba398b" translate="yes" xml:space="preserve">
          <source>For example, the following code tests that an &lt;code&gt;EmailField&lt;/code&gt; accepts &lt;code&gt;a@a.com&lt;/code&gt; as a valid email address, but rejects &lt;code&gt;aaa&lt;/code&gt; with a reasonable error message:</source>
          <target state="translated">Например, следующий код проверяет, что &lt;code&gt;EmailField&lt;/code&gt; принимает &lt;code&gt;a@a.com&lt;/code&gt; в качестве действительного адреса электронной почты, но отклоняет &lt;code&gt;aaa&lt;/code&gt; с разумным сообщением об ошибке:</target>
        </trans-unit>
        <trans-unit id="f1cda75052ecec1422a69248d4438e2fd36432d8" translate="yes" xml:space="preserve">
          <source>For example, the following code will store uploaded files under &lt;code&gt;/media/photos&lt;/code&gt; regardless of what your &lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; setting is:</source>
          <target state="translated">Например, следующий код будет хранить загруженные файлы в &lt;code&gt;/media/photos&lt;/code&gt; независимо от того, какой у вас параметр &lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1575f645e5e256b758956ea48109588be928308b" translate="yes" xml:space="preserve">
          <source>For example, the following code would send two different messages to two different sets of recipients; however, only one connection to the mail server would be opened:</source>
          <target state="translated">Например,следующий код будет посылать два разных сообщения двум разным наборам получателей;однако,будет открыто только одно соединение с почтовым сервером:</target>
        </trans-unit>
        <trans-unit id="0ea55980f6c3f2fe0c5f5dd2dbe9c6bb45a52f5d" translate="yes" xml:space="preserve">
          <source>For example, the following command nearly reproduces the &lt;code&gt;WorldBorder&lt;/code&gt; model and mapping dictionary created above, automatically:</source>
          <target state="translated">Например, следующая команда почти &lt;code&gt;WorldBorder&lt;/code&gt; воспроизводит созданную выше модель WorldBorder и словарь сопоставлений:</target>
        </trans-unit>
        <trans-unit id="0a4537dba183f7d976e59f5b36b50b496ec563e0" translate="yes" xml:space="preserve">
          <source>For example, the following model has &lt;em&gt;two&lt;/em&gt;&lt;code&gt;Manager&lt;/code&gt;s &amp;ndash; one that returns all objects, and one that returns only the books by Roald Dahl:</source>
          <target state="translated">Например, в следующей модели есть &lt;em&gt;два &lt;/em&gt; &lt;code&gt;Manager&lt;/code&gt; - один, который возвращает все объекты, и другой, который возвращает только книги Роальда Даля:</target>
        </trans-unit>
        <trans-unit id="3f437de90816066d29eda0f176414d20e8975eda" translate="yes" xml:space="preserve">
          <source>For example, the following query would exclude blogs that contain &lt;em&gt;both&lt;/em&gt; entries with &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline &lt;em&gt;and&lt;/em&gt; entries published in 2008:</source>
          <target state="translated">Например, следующий запрос будет исключать блоги , которые содержат &lt;em&gt;как&lt;/em&gt; записи с &lt;em&gt;&amp;laquo;Lennon&amp;raquo;&lt;/em&gt; в заголовке &lt;em&gt;и&lt;/em&gt; записи , опубликованной в 2008 году:</target>
        </trans-unit>
        <trans-unit id="b5b1287469ae2ba4c652334e4068fe83b853d8c8" translate="yes" xml:space="preserve">
          <source>For example, the following router would direct all cache read operations to &lt;code&gt;cache_replica&lt;/code&gt;, and all write operations to &lt;code&gt;cache_primary&lt;/code&gt;. The cache table will only be synchronized onto &lt;code&gt;cache_primary&lt;/code&gt;:</source>
          <target state="translated">Например, следующий маршрутизатор направит все операции чтения из кэша в &lt;code&gt;cache_replica&lt;/code&gt; , а все операции записи - в &lt;code&gt;cache_primary&lt;/code&gt; . Таблица кеша будет синхронизирована только с &lt;code&gt;cache_primary&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="79e1b1c393dd6f3b661e294aa780e92c0b3536fe" translate="yes" xml:space="preserve">
          <source>For example, the following template would load all the tags and filters registered in &lt;code&gt;somelibrary&lt;/code&gt; and &lt;code&gt;otherlibrary&lt;/code&gt; located in package &lt;code&gt;package&lt;/code&gt;:</source>
          <target state="translated">Например, следующий шаблон будет загружать все теги и фильтры, зарегистрированные в некоторых &lt;code&gt;somelibrary&lt;/code&gt; и других &lt;code&gt;otherlibrary&lt;/code&gt; расположенных в пакете &lt;code&gt;package&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e254385271ce9642568030d0572bce1569f1c2bf" translate="yes" xml:space="preserve">
          <source>For example, the following test will not be executed if the database supports transactions (e.g., it would &lt;em&gt;not&lt;/em&gt; run under PostgreSQL, but it would under MySQL with MyISAM tables):</source>
          <target state="translated">Например, следующий тест не будет выполнен, если база данных поддерживает транзакции (например, она &lt;em&gt;не&lt;/em&gt; будет работать в PostgreSQL, но будет работать в MySQL с таблицами MyISAM):</target>
        </trans-unit>
        <trans-unit id="238a0a8d4bd6a5c30b094db9458da443a0c092e2" translate="yes" xml:space="preserve">
          <source>For example, the following test will only be executed if the database supports transactions (e.g., it would run under PostgreSQL, but &lt;em&gt;not&lt;/em&gt; under MySQL with MyISAM tables):</source>
          <target state="translated">Например, следующий тест будет выполняться только в том случае, если база данных поддерживает транзакции (например, она будет работать в PostgreSQL, но &lt;em&gt;не&lt;/em&gt; в MySQL с таблицами MyISAM):</target>
        </trans-unit>
        <trans-unit id="cf6d07ae81bf27d1e709cd3bef81b142bddcc252" translate="yes" xml:space="preserve">
          <source>For example, the following two statements are equivalent:</source>
          <target state="translated">Например,следующие два утверждения эквивалентны:</target>
        </trans-unit>
        <trans-unit id="93dca967df9ba0db777acab0729765113692924a" translate="yes" xml:space="preserve">
          <source>For example, the following view returns a &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; with a template and a context containing a queryset:</source>
          <target state="translated">Например, следующее представление возвращает &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; с шаблоном и контекстом, содержащим набор запросов:</target>
        </trans-unit>
        <trans-unit id="c47df139280495e8df269df3e1b4e74bf5801cba" translate="yes" xml:space="preserve">
          <source>For example, the static definition for our Calendar Widget could also be defined in a dynamic fashion:</source>
          <target state="translated">Например,статическое определение для нашего виджета календаря также может быть определено динамически:</target>
        </trans-unit>
        <trans-unit id="0b0b8d26aca41acf8d85f36e90f98e284157926f" translate="yes" xml:space="preserve">
          <source>For example, the warp function can be used for aggregating a raster to the double of its original pixel scale:</source>
          <target state="translated">Например,функция деформации может быть использована для агрегации растра до удвоения его исходной шкалы пикселей:</target>
        </trans-unit>
        <trans-unit id="0c0b7b65cb4d16a3499472ddb5c49cea05342068" translate="yes" xml:space="preserve">
          <source>For example, these two URLconf sets are functionally identical:</source>
          <target state="translated">Например,эти два набора URLconf функционально идентичны:</target>
        </trans-unit>
        <trans-unit id="198ddfca24c57bcb8381f0fb15818ed1720ccca5" translate="yes" xml:space="preserve">
          <source>For example, this &lt;code&gt;Q&lt;/code&gt; object encapsulates a single &lt;code&gt;LIKE&lt;/code&gt; query:</source>
          <target state="translated">Например, этот объект &lt;code&gt;Q&lt;/code&gt; инкапсулирует один запрос &lt;code&gt;LIKE&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0057a8ee0bb64c68400ed8799f51b27a995f23f2" translate="yes" xml:space="preserve">
          <source>For example, this command:</source>
          <target state="translated">Например,эта команда:</target>
        </trans-unit>
        <trans-unit id="89ae811713dbf8bd975a1e4c77bf78d1767f40c5" translate="yes" xml:space="preserve">
          <source>For example, this custom &lt;code&gt;Manager&lt;/code&gt; offers a method &lt;code&gt;with_counts()&lt;/code&gt;, which returns a list of all &lt;code&gt;OpinionPoll&lt;/code&gt; objects, each with an extra &lt;code&gt;num_responses&lt;/code&gt; attribute that is the result of an aggregate query:</source>
          <target state="translated">Например, этот пользовательский &lt;code&gt;Manager&lt;/code&gt; предлагает метод &lt;code&gt;with_counts()&lt;/code&gt; , который возвращает список всех объектов &lt;code&gt;OpinionPoll&lt;/code&gt; , каждый с дополнительным атрибутом &lt;code&gt;num_responses&lt;/code&gt; , который является результатом агрегированного запроса:</target>
        </trans-unit>
        <trans-unit id="f22f2bd76f33b6561d7fa95bb448809cc02b2670" translate="yes" xml:space="preserve">
          <source>For example, this deletes all &lt;code&gt;Entry&lt;/code&gt; objects with a &lt;code&gt;pub_date&lt;/code&gt; year of 2005:</source>
          <target state="translated">Например, при этом удаляются все объекты &lt;code&gt;Entry&lt;/code&gt; с годом &lt;code&gt;pub_date&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ffac3d5fcc4ac7fdba32bd4d758cba661acc1241" translate="yes" xml:space="preserve">
          <source>For example, this model has a few custom methods:</source>
          <target state="translated">Например,в этой модели есть несколько пользовательских методов:</target>
        </trans-unit>
        <trans-unit id="b60ea9d897ff291cb7e66bcae7ca48541f5d15f3" translate="yes" xml:space="preserve">
          <source>For example, this returns the first 5 objects (&lt;code&gt;LIMIT 5&lt;/code&gt;):</source>
          <target state="translated">Например, это возвращает первые 5 объектов ( &lt;code&gt;LIMIT 5&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="aa80cca3b9f5bf179795210ec6b98d06892e51ee" translate="yes" xml:space="preserve">
          <source>For example, this statement yields a single &lt;code&gt;Q&lt;/code&gt; object that represents the &amp;ldquo;OR&amp;rdquo; of two &lt;code&gt;&quot;question__startswith&quot;&lt;/code&gt; queries:</source>
          <target state="translated">Например, этот оператор выдает один объект &lt;code&gt;Q&lt;/code&gt; , который представляет &amp;laquo;ИЛИ&amp;raquo; двух запросов &lt;code&gt;&quot;question__startswith&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4c1552c9853a63c8045ed1aecebca09d2f2bf272" translate="yes" xml:space="preserve">
          <source>For example, this template would render as &lt;code&gt;'hello'&lt;/code&gt;:</source>
          <target state="translated">Например, этот шаблон будет отображаться как &lt;code&gt;'hello'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9f1954b9d586a8adf777426824138b87bc609b37" translate="yes" xml:space="preserve">
          <source>For example, this use of &lt;code&gt;extra()&lt;/code&gt;:</source>
          <target state="translated">Например, это использование &lt;code&gt;extra()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88fdaec3ea4b5e8da4ebc2790122624ba0f7e20c" translate="yes" xml:space="preserve">
          <source>For example, this would look for an app template in the given directory when creating the &lt;code&gt;myapp&lt;/code&gt; app:</source>
          <target state="translated">Например, при &lt;code&gt;myapp&lt;/code&gt; приложения myapp будет выглядеть шаблон приложения в указанном каталоге :</target>
        </trans-unit>
        <trans-unit id="730023e6712c636f1e717e67432aca53f7486feb" translate="yes" xml:space="preserve">
          <source>For example, to allow all users to log in regardless of &amp;ldquo;active&amp;rdquo; status:</source>
          <target state="translated">Например, чтобы разрешить всем пользователям входить в систему независимо от статуса &amp;laquo;активный&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="812ff44f9b0e37743f53c2bda9e76d7b8d794761" translate="yes" xml:space="preserve">
          <source>For example, to annotate each movie with the average rating for the movies by the same studio in the same genre and release year:</source>
          <target state="translated">Например,аннотировать каждый фильм со средним рейтингом для фильмов одной и той же студии в одном жанре и годом выпуска:</target>
        </trans-unit>
        <trans-unit id="23c6e960f3c8f0a5c0df18b368143eaf3d0cabb1" translate="yes" xml:space="preserve">
          <source>For example, to annotate each post with the email address of the author of the newest comment on that post:</source>
          <target state="translated">Например,аннотировать каждое сообщение электронным адресом автора последнего комментария к этому сообщению:</target>
        </trans-unit>
        <trans-unit id="279e76a8911e6175d2b1e0fca7ce722f066e2ec0" translate="yes" xml:space="preserve">
          <source>For example, to annotate each post with whether or not it has a comment from within the last day:</source>
          <target state="translated">Например,аннотировать каждое сообщение с указанием того,есть ли в нем комментарий за последний день или нет:</target>
        </trans-unit>
        <trans-unit id="d8c72125990ce7483e08fa3c125e87d8e1d668ef" translate="yes" xml:space="preserve">
          <source>For example, to attach &lt;code&gt;request.user&lt;/code&gt; to each changed formset model instance:</source>
          <target state="translated">Например, чтобы прикрепить &lt;code&gt;request.user&lt;/code&gt; к каждому измененному экземпляру модели formset:</target>
        </trans-unit>
        <trans-unit id="d48e4fdd0eb7ee0386a0d07a5b840f298a471364" translate="yes" xml:space="preserve">
          <source>For example, to create an Atom 1.0 feed and print it to standard output:</source>
          <target state="translated">Например,создать подачу Atom 1.0 и распечатать ее на стандартный вывод:</target>
        </trans-unit>
        <trans-unit id="fcfc47c401527a89154f8bea99232797453a3cb4" translate="yes" xml:space="preserve">
          <source>For example, to delete all the entries in a particular blog:</source>
          <target state="translated">Например,удалить все записи в определенном блоге:</target>
        </trans-unit>
        <trans-unit id="dd56ffbb096671a8ae0f457750a49dd814c8b644" translate="yes" xml:space="preserve">
          <source>For example, to find a list of all blog entries that have had more comments than pingbacks, we construct an &lt;code&gt;F()&lt;/code&gt; object to reference the pingback count, and use that &lt;code&gt;F()&lt;/code&gt; object in the query:</source>
          <target state="translated">Например, чтобы найти список всех записей блога, у которых было больше комментариев, чем у пингбэков, мы создаем объект &lt;code&gt;F()&lt;/code&gt; для ссылки на количество пингбэков и используем этот объект &lt;code&gt;F()&lt;/code&gt; в запросе:</target>
        </trans-unit>
        <trans-unit id="8a79fb62038f478d20c970117065d25594b022ff" translate="yes" xml:space="preserve">
          <source>For example, to find restaurants that have vegetarian pizzas with &lt;code&gt;'mozzarella'&lt;/code&gt; in the name:</source>
          <target state="translated">Например, чтобы найти рестораны, в которых есть вегетарианская пицца с &lt;code&gt;'mozzarella'&lt;/code&gt; в названии:</target>
        </trans-unit>
        <trans-unit id="fa7ff9eaf20a9e7fd98ea20afd6e746161bd4331" translate="yes" xml:space="preserve">
          <source>For example, to find the price range of books offered in each store, you could use the annotation:</source>
          <target state="translated">Например,чтобы найти ценовой диапазон книг,предлагаемых в каждом магазине,можно воспользоваться аннотацией:</target>
        </trans-unit>
        <trans-unit id="767eb3d833b80709509cdaba33aea5c3576ef163" translate="yes" xml:space="preserve">
          <source>For example, to generate a list of books that have more than one author, you can issue the query:</source>
          <target state="translated">Например,чтобы сгенерировать список книг,имеющих более одного автора,можно задать запрос:</target>
        </trans-unit>
        <trans-unit id="da85008b78879c5f2b184ab4252fe398f7632ac5" translate="yes" xml:space="preserve">
          <source>For example, to get a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; of blog entries from the year 2006, use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; like so:</source>
          <target state="translated">Например, чтобы получить &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; записей блога за 2006 год, используйте &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="2665b2f708b263f2e02ca156cd6a0c538de8c726" translate="yes" xml:space="preserve">
          <source>For example, to get a list of all additions done through the admin:</source>
          <target state="translated">Например,чтобы получить список всех дополнений,сделанных через администратора:</target>
        </trans-unit>
        <trans-unit id="b779ba41bdf093e3d6f0563f98ce89940d5ed6a9" translate="yes" xml:space="preserve">
          <source>For example, to order a &lt;code&gt;QuerySet&lt;/code&gt; of books by the number of authors that have contributed to the book, you could use the following query:</source>
          <target state="translated">Например, чтобы упорядочить набор &lt;code&gt;QuerySet&lt;/code&gt; по количеству авторов, внесших вклад в книгу, вы можете использовать следующий запрос:</target>
        </trans-unit>
        <trans-unit id="4432ed9491c6479c00d2785b98e20507109078c5" translate="yes" xml:space="preserve">
          <source>For example, to order by a &lt;code&gt;pub_date&lt;/code&gt; field ascending, use this:</source>
          <target state="translated">Например, чтобы упорядочить по &lt;code&gt;pub_date&lt;/code&gt; поля pub_date , используйте это:</target>
        </trans-unit>
        <trans-unit id="e6b6b30b3df788764cc7082971ff432b4a48a992" translate="yes" xml:space="preserve">
          <source>For example, to prevent one or more columns from being sortable:</source>
          <target state="translated">Например,чтобы предотвратить сортировку одной или нескольких колонок:</target>
        </trans-unit>
        <trans-unit id="502100f7079ee748e529025258845a1b3a4df3cc" translate="yes" xml:space="preserve">
          <source>For example, to save an object to the &lt;code&gt;legacy_users&lt;/code&gt; database, you&amp;rsquo;d use this:</source>
          <target state="translated">Например, чтобы сохранить объект в &lt;code&gt;legacy_users&lt;/code&gt; данных legacy_users , вы должны использовать это:</target>
        </trans-unit>
        <trans-unit id="2acf27ec57eb17ce1701c1357eaded68de2d5ad5" translate="yes" xml:space="preserve">
          <source>For example, to search by &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;, you could use:</source>
          <target state="translated">Например, для поиска по &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;age&lt;/code&gt; вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="ddbd8cfaa0374b8b12582f667e5c4260e74a59ba" translate="yes" xml:space="preserve">
          <source>For example, to sort companies that haven&amp;rsquo;t been contacted (&lt;code&gt;last_contacted&lt;/code&gt; is null) after companies that have been contacted:</source>
          <target state="translated">Например, чтобы отсортировать компании, с которыми еще не связались ( &lt;code&gt;last_contacted&lt;/code&gt; имеет значение null) после компаний, с которыми были установлены контакты:</target>
        </trans-unit>
        <trans-unit id="e7831aac7ce3cb060fd800aebb9b85cee2d01e5e" translate="yes" xml:space="preserve">
          <source>For example, to store numbers up to &lt;code&gt;999&lt;/code&gt; with a resolution of 2 decimal places, you&amp;rsquo;d use:</source>
          <target state="translated">Например, чтобы хранить числа до &lt;code&gt;999&lt;/code&gt; с разрешением 2 десятичных знака, вы должны использовать:</target>
        </trans-unit>
        <trans-unit id="ac20e728f2f0f25bbef7107d0e2e92c0ef03c159" translate="yes" xml:space="preserve">
          <source>For example, to test that an &lt;code&gt;update()&lt;/code&gt; call resulted in the expected update, you could write a test similar to this:</source>
          <target state="translated">Например, чтобы проверить, что вызов &lt;code&gt;update()&lt;/code&gt; привел к ожидаемому обновлению, вы можете написать тест, подобный следующему:</target>
        </trans-unit>
        <trans-unit id="b0197611ee48c7b267a7d6568cecc45562e3a8bb" translate="yes" xml:space="preserve">
          <source>For example, to translate the help text of the &lt;em&gt;name&lt;/em&gt; field in the following model, do the following:</source>
          <target state="translated">Например, чтобы перевести текст справки для поля &lt;em&gt;имени&lt;/em&gt; в следующей модели, выполните следующие действия:</target>
        </trans-unit>
        <trans-unit id="54c4b8ee2f7b75c7d52fae5c72cbcf7c30ccfdc3" translate="yes" xml:space="preserve">
          <source>For example, to turn comments off for all blog entries published in 2010, you could do this:</source>
          <target state="translated">Например,чтобы отключить комментарии для всех записей в блоге,опубликованных в 2010 году,можно сделать это:</target>
        </trans-unit>
        <trans-unit id="f0b380f65a8622ee9c808ca11e22ef9b611130ca" translate="yes" xml:space="preserve">
          <source>For example, using the above &lt;code&gt;Place&lt;/code&gt; class again, let&amp;rsquo;s create another subclass with a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Например, снова используя приведенный выше класс &lt;code&gt;Place&lt;/code&gt; , давайте создадим еще один подкласс с &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="72f9b449e9e58bbd051ef1654ab12abf83f7812b" translate="yes" xml:space="preserve">
          <source>For example, we can ask for all publishers, annotated with their respective total book stock counters (note how we use &lt;code&gt;'book'&lt;/code&gt; to specify the &lt;code&gt;Publisher&lt;/code&gt; -&amp;gt; &lt;code&gt;Book&lt;/code&gt; reverse foreign key hop):</source>
          <target state="translated">Например, мы можем запросить всех издателей, помеченных их соответствующими счетчиками общего количества книжных запасов (обратите внимание, как мы используем &lt;code&gt;'book'&lt;/code&gt; , чтобы указать переход внешнего ключа &lt;code&gt;Publisher&lt;/code&gt; -&amp;gt; &lt;code&gt;Book&lt;/code&gt; reverse):</target>
        </trans-unit>
        <trans-unit id="eea4002354c2c1b943b967909d300e907d4041a2" translate="yes" xml:space="preserve">
          <source>For example, we can use &lt;code&gt;self&lt;/code&gt; to flash a message to the user informing her that the action was successful:</source>
          <target state="translated">Например, мы можем использовать &lt;code&gt;self&lt;/code&gt; для отправки пользователю сообщения о том, что действие было успешным:</target>
        </trans-unit>
        <trans-unit id="dab03fdfe322eab9059b2f86a4724cd280a2574b" translate="yes" xml:space="preserve">
          <source>For example, we can use &lt;code&gt;self&lt;/code&gt; to flash a message to the user informing them that the action was successful:</source>
          <target state="translated">Например, мы можем использовать &lt;code&gt;self&lt;/code&gt; , чтобы отправить пользователю сообщение, информирующее его об успешном выполнении действия:</target>
        </trans-unit>
        <trans-unit id="1acd4d7ad1ed66dba1c0cefd87c20a2d7472d4db" translate="yes" xml:space="preserve">
          <source>For example, we could look up the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model:</source>
          <target state="translated">Например, мы могли бы найти &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; для модели &lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1a8b1692e49384722e8905fb2cbb4fa05d20ef09" translate="yes" xml:space="preserve">
          <source>For example, when a Django admin change-list page is being filtered by a date drilldown, the header for a given day displays the day and month. Different locales have different formats. For example, U.S. English would say &amp;ldquo;January 1,&amp;rdquo; whereas Spanish might say &amp;ldquo;1 Enero.&amp;rdquo;</source>
          <target state="translated">Например, когда страница списка изменений администратора Django фильтруется с помощью детализации по дате, в заголовке данного дня отображаются день и месяц. Разные локали имеют разные форматы. Например, американский английский сказал бы &amp;laquo;1 января&amp;raquo;, а испанский мог бы сказать &amp;laquo;1 Enero&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f8dc18b9983c5e73e9a4d6fb5ebe694cc177e142" translate="yes" xml:space="preserve">
          <source>For example, when a Django admin change-list page is being filtered by a date drilldown, the header for a given month displays the month and the year. Different locales have different formats. For example, U.S. English would say &amp;ldquo;January 2006,&amp;rdquo; whereas another locale might say &amp;ldquo;2006/January.&amp;rdquo;</source>
          <target state="translated">Например, когда страница списка изменений администратора Django фильтруется с помощью детализации по дате, заголовок для данного месяца отображает месяц и год. Разные локали имеют разные форматы. Например, в американском английском будет написано &amp;laquo;январь 2006&amp;raquo;, тогда как в другой локали может быть сказано &amp;laquo;2006 / январь&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="2e328d173ac5ec7f169e494ddd47a73938cf810d" translate="yes" xml:space="preserve">
          <source>For example, when configuring your application with &lt;code&gt;mod_wsgi&lt;/code&gt;, set the &lt;code&gt;WSGIDaemonProcess&lt;/code&gt; attribute &lt;code&gt;threads&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;, unless Apache may crash when running your GeoDjango application. Increase the number of &lt;code&gt;processes&lt;/code&gt; instead.</source>
          <target state="translated">Например, при настройке приложения с &lt;code&gt;mod_wsgi&lt;/code&gt; установите &lt;code&gt;WSGIDaemonProcess&lt;/code&gt; атрибуты &lt;code&gt;threads&lt;/code&gt; на &lt;code&gt;1&lt;/code&gt; , если Apache не может произойти сбой при запуске приложения GeoDjango. Вместо этого увеличьте количество &lt;code&gt;processes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f39be411ce21100d9f857b6a4f43b2db6d1961b7" translate="yes" xml:space="preserve">
          <source>For example, when using PostgreSQL:</source>
          <target state="translated">Например,при использовании PostgreSQL:</target>
        </trans-unit>
        <trans-unit id="d801ed460f9666b79fe2663b1c3338bf1f54313b" translate="yes" xml:space="preserve">
          <source>For example, when you are working with blog entries, you may want to know the number of authors that have contributed blog entries:</source>
          <target state="translated">Например,когда вы работаете с записями блога,вы можете захотеть узнать количество авторов,которые внесли записи в блог:</target>
        </trans-unit>
        <trans-unit id="2b79f03ac8c03a283c065d9796342d378859d632" translate="yes" xml:space="preserve">
          <source>For example, while our tests here have covered some of the internal logic of a model and the way our views publish information, you can use an &amp;ldquo;in-browser&amp;rdquo; framework such as &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; to test the way your HTML actually renders in a browser. These tools allow you to check not just the behavior of your Django code, but also, for example, of your JavaScript. It&amp;rsquo;s quite something to see the tests launch a browser, and start interacting with your site, as if a human being were driving it! Django includes &lt;a href=&quot;../topics/testing/tools#django.test.LiveServerTestCase&quot;&gt;&lt;code&gt;LiveServerTestCase&lt;/code&gt;&lt;/a&gt; to facilitate integration with tools like Selenium.</source>
          <target state="translated">Например, в то время как наши тесты здесь охватили некоторую внутреннюю логику модели и то, как наши представления публикуют информацию, вы можете использовать среду &amp;laquo;в браузере&amp;raquo;, такую ​​как &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium,&lt;/a&gt; чтобы проверить, как ваш HTML действительно отображается в браузере. Эти инструменты позволяют вам проверять не только поведение вашего кода Django, но и, например, ваш JavaScript. Совершенно очевидно, что тесты запускают браузер и начинают взаимодействовать с вашим сайтом, как если бы его управлял человек! Django включает &lt;a href=&quot;../topics/testing/tools#django.test.LiveServerTestCase&quot;&gt; &lt;code&gt;LiveServerTestCase&lt;/code&gt; &lt;/a&gt; для облегчения интеграции с такими инструментами, как Selenium.</target>
        </trans-unit>
        <trans-unit id="2a8d5ade2984d816b5ba35345366f0f5cdb5aed6" translate="yes" xml:space="preserve">
          <source>For example, you can apply &lt;code&gt;escape&lt;/code&gt; to fields when &lt;a href=&quot;#std:templatetag-autoescape&quot;&gt;&lt;code&gt;autoescape&lt;/code&gt;&lt;/a&gt; is off:</source>
          <target state="translated">Например, вы можете применить &lt;code&gt;escape&lt;/code&gt; к полям, когда &lt;a href=&quot;#std:templatetag-autoescape&quot;&gt; &lt;code&gt;autoescape&lt;/code&gt; &lt;/a&gt; выключен:</target>
        </trans-unit>
        <trans-unit id="8bc687cb81bdb45486d590586550de931ed0c5e2" translate="yes" xml:space="preserve">
          <source>For example, you can change the file name by setting the file&amp;rsquo;s &lt;a href=&quot;../ref/files/file#django.core.files.File.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; to a path relative to the file storage&amp;rsquo;s location (&lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; if you are using the default &lt;a href=&quot;../ref/files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;FileSystemStorage&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Например, вы можете изменить имя файла с помощью установки файла &lt;a href=&quot;../ref/files/file#django.core.files.File.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; на пути относительно места хранения файлов ( в &lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; , если вы используете по умолчанию &lt;a href=&quot;../ref/files/storage#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;FileSystemStorage&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="a64b2eae0f2e3122826d90162479de6db7d3a972" translate="yes" xml:space="preserve">
          <source>For example, you can create &lt;code&gt;myproject/jinja2.py&lt;/code&gt; with this content:</source>
          <target state="translated">Например, вы можете создать &lt;code&gt;myproject/jinja2.py&lt;/code&gt; с этим содержимым:</target>
        </trans-unit>
        <trans-unit id="653060a437deca46c9784c2247d45d68a7488a98" translate="yes" xml:space="preserve">
          <source>For example, you can use &lt;code&gt;__file__&lt;/code&gt; to determine that all test classes in the same file that inherit from &lt;code&gt;SerializeMixin&lt;/code&gt; will run sequentially:</source>
          <target state="translated">Например, вы можете использовать &lt;code&gt;__file__&lt;/code&gt; , чтобы определить, что все тестовые классы в одном и том же файле, которые наследуются от &lt;code&gt;SerializeMixin&lt;/code&gt; , будут выполняться последовательно:</target>
        </trans-unit>
        <trans-unit id="fce9e67559c456c24bd95eaa2912a8a62168b7d6" translate="yes" xml:space="preserve">
          <source>For example, you can use this method to remove the built-in &amp;ldquo;delete selected objects&amp;rdquo; action:</source>
          <target state="translated">Например, вы можете использовать этот метод для удаления встроенного действия &amp;laquo;удалить выбранные объекты&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="d3c0833db9722f2012f8859bc587b79daf4a5f2b" translate="yes" xml:space="preserve">
          <source>For example, you can use this technique to add a custom logo to the &lt;code&gt;admin/base_site.html&lt;/code&gt; template:</source>
          <target state="translated">Например, вы можете использовать этот прием для добавления собственного логотипа в шаблон &lt;code&gt;admin/base_site.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="66f7438bda04c7668c447a88a582dfeaace04a30" translate="yes" xml:space="preserve">
          <source>For example, you could register a callback in an &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">Например, вы можете зарегистрировать обратный вызов в &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="d8c30e71ee2cc2a2bb4c4f8504db692a7e61d7cc" translate="yes" xml:space="preserve">
          <source>For example, you might start implementing an iTunes RSS feed generator like so:</source>
          <target state="translated">Например,вы можете начать внедрение генератора RSS-каналов iTunes:</target>
        </trans-unit>
        <trans-unit id="46c746d6fcc46e0acd37d896e4c4f63b43c64144" translate="yes" xml:space="preserve">
          <source>For example, your &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; might look like this:</source>
          <target state="translated">Например, ваш &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="dd639e78a671d339c67b021cf0995153fafb1e13" translate="yes" xml:space="preserve">
          <source>For example, your company may already have an LDAP setup that stores a username and password for every employee. It&amp;rsquo;d be a hassle for both the network administrator and the users themselves if users had separate accounts in LDAP and the Django-based applications.</source>
          <target state="translated">Например, в вашей компании уже может быть настройка LDAP, в которой хранится имя пользователя и пароль для каждого сотрудника. Было бы хлопот как для сетевого администратора, так и для самих пользователей, если бы у пользователей были отдельные учетные записи в LDAP и приложениях на основе Django.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="2ae3dc38163522a8032cf18284668e2d51924570" translate="yes" xml:space="preserve">
          <source>For examples, read the &lt;a href=&quot;https://github.com/django/django/blob/master/django/template/loaders&quot;&gt;source code for Django&amp;rsquo;s built-in loaders&lt;/a&gt;.</source>
          <target state="translated">Для примера, прочитайте &lt;a href=&quot;https://github.com/django/django/blob/master/django/template/loaders&quot;&gt;исходный код встроенных загрузчиков Django&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="272a0b24158a86fc7beae49b7557b362b5df31da" translate="yes" xml:space="preserve">
          <source>For extra readability, you can optionally give a &lt;em&gt;name&lt;/em&gt; to your &lt;code&gt;{% endblock %}&lt;/code&gt; tag. For example:</source>
          <target state="translated">Для дополнительного удобства чтения можно при желании дать &lt;em&gt;имя&lt;/em&gt; вашего &lt;code&gt;{% endblock %}&lt;/code&gt; тега. Например:</target>
        </trans-unit>
        <trans-unit id="30a4ee71ab009210385b0f7253fc8e8296d807be" translate="yes" xml:space="preserve">
          <source>For fields like &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; that map to model instances, defaults should be the value of the field they reference (&lt;code&gt;pk&lt;/code&gt; unless &lt;a href=&quot;#django.db.models.ForeignKey.to_field&quot;&gt;&lt;code&gt;to_field&lt;/code&gt;&lt;/a&gt; is set) instead of model instances.</source>
          <target state="translated">Для таких полей, как &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; ,&lt;/a&gt; которые отображаются на экземпляры модели, значения по умолчанию должны быть значением поля, на которое они ссылаются ( &lt;code&gt;pk&lt;/code&gt; , если не &lt;a href=&quot;#django.db.models.ForeignKey.to_field&quot;&gt; &lt;code&gt;to_field&lt;/code&gt; &lt;/a&gt; ), а не экземплярами модели.</target>
        </trans-unit>
        <trans-unit id="f78db508803596606e73e0d0a98b1dfa781a1d8a" translate="yes" xml:space="preserve">
          <source>For fine-grained control over the character encoding of your test database, use the &lt;a href=&quot;../../ref/settings#std:setting-TEST_CHARSET&quot;&gt;&lt;code&gt;CHARSET&lt;/code&gt;&lt;/a&gt; TEST option. If you&amp;rsquo;re using MySQL, you can also use the &lt;a href=&quot;../../ref/settings#std:setting-TEST_COLLATION&quot;&gt;&lt;code&gt;COLLATION&lt;/code&gt;&lt;/a&gt; option to control the particular collation used by the test database. See the &lt;a href=&quot;../../ref/settings&quot;&gt;settings documentation&lt;/a&gt; for details of these and other advanced settings.</source>
          <target state="translated">Для детального контроля над кодировкой символов вашей тестовой базы данных используйте &lt;a href=&quot;../../ref/settings#std:setting-TEST_CHARSET&quot;&gt; &lt;code&gt;CHARSET&lt;/code&gt; &lt;/a&gt; TEST. Если вы используете MySQL, вы также можете использовать опцию &lt;a href=&quot;../../ref/settings#std:setting-TEST_COLLATION&quot;&gt; &lt;code&gt;COLLATION&lt;/code&gt; &lt;/a&gt; для управления определенным сопоставлением, используемым тестовой базой данных. См. &lt;a href=&quot;../../ref/settings&quot;&gt;Документацию&lt;/a&gt; по настройкам для получения подробной информации об этих и других дополнительных настройках.</target>
        </trans-unit>
        <trans-unit id="36474a55d2c1798e1a7007aeb9803aa08abc73bf" translate="yes" xml:space="preserve">
          <source>For flexibility, the output does &lt;em&gt;not&lt;/em&gt; include the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/table&amp;gt;&lt;/code&gt; tags, nor does it include the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/form&amp;gt;&lt;/code&gt; tags or an &lt;code&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt; tag. It&amp;rsquo;s your job to do that.</source>
          <target state="translated">Для большей гибкости вывод &lt;em&gt;не&lt;/em&gt; включает теги &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;/table&amp;gt;&lt;/code&gt; , а также не включает теги &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;/form&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt; . Это ваша работа, чтобы сделать это.</target>
        </trans-unit>
        <trans-unit id="307bc0d9062e63004232297eb9326c743bf8ea6d" translate="yes" xml:space="preserve">
          <source>For full details on generic views, see the &lt;a href=&quot;../topics/class-based-views/index&quot;&gt;generic views documentation&lt;/a&gt;.</source>
          <target state="translated">Для получения полной информации об общих представлениях см. &lt;a href=&quot;../topics/class-based-views/index&quot;&gt;Документацию общих представлений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cbdabb024a73903c71e4869d4c1a7e7454e9e0b" translate="yes" xml:space="preserve">
          <source>For full details on testing, see &lt;a href=&quot;../topics/testing/index&quot;&gt;Testing in Django&lt;/a&gt;.</source>
          <target state="translated">Для получения полной информации о тестировании см. &lt;a href=&quot;../topics/testing/index&quot;&gt;Тестирование в Django&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc370485be81f4d5b9dc6275e4bf8fd187d0db71" translate="yes" xml:space="preserve">
          <source>For good measure, let&amp;rsquo;s also include the &lt;code&gt;was_published_recently()&lt;/code&gt; method from &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;:</source>
          <target state="translated">Для правильной оценки давайте также &lt;code&gt;was_published_recently()&lt;/code&gt; метод was_published_recently () из учебника &lt;a href=&quot;tutorial02&quot;&gt;2&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="45dc7c8b265d368652d0fd88b7904da9a61cc95a" translate="yes" xml:space="preserve">
          <source>For historical reasons, both the generic support for template engines and the implementation of the Django template language live in the &lt;code&gt;django.template&lt;/code&gt; namespace.</source>
          <target state="translated">По историческим причинам как общая поддержка механизмов шаблонов, так и реализация языка шаблонов Django &lt;code&gt;django.template&lt;/code&gt; пространстве имен django.template .</target>
        </trans-unit>
        <trans-unit id="de99d7f373c7b60840c2ac2264755119e7847202" translate="yes" xml:space="preserve">
          <source>For individual variables</source>
          <target state="translated">Для отдельных переменных</target>
        </trans-unit>
        <trans-unit id="234b2463d3262fe6585942096c146c09c2ffdabb" translate="yes" xml:space="preserve">
          <source>For information about serving the static files (images, JavaScript, and CSS) associated with the admin in production, see &lt;a href=&quot;../../../howto/deployment/wsgi/modwsgi#serving-files&quot;&gt;Serving files&lt;/a&gt;.</source>
          <target state="translated">Для получения информации об обслуживании статических файлов (изображений, JavaScript и CSS), связанных с администратором, в рабочей &lt;a href=&quot;../../../howto/deployment/wsgi/modwsgi#serving-files&quot;&gt;среде&lt;/a&gt; см. Раздел Обслуживание файлов .</target>
        </trans-unit>
        <trans-unit id="3b99bcaecd02955383d58cab1f164fc0e3d49fe3" translate="yes" xml:space="preserve">
          <source>For information about unit-testing the sending of emails in your application, see the &lt;a href=&quot;testing/tools#topics-testing-email&quot;&gt;Email services&lt;/a&gt; section of the testing documentation.</source>
          <target state="translated">Информацию о модульном тестировании отправки электронных писем в вашем приложении см. В разделе &amp;laquo; &lt;a href=&quot;testing/tools#topics-testing-email&quot;&gt;Сервисы электронной почты&lt;/a&gt; &amp;raquo; документации по тестированию.</target>
        </trans-unit>
        <trans-unit id="cd54b3b047434d8162788e4a6a248fdd5819fd87" translate="yes" xml:space="preserve">
          <source>For information on the &lt;code&gt;Vary&lt;/code&gt; header, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.4&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения информации о заголовке &lt;code&gt;Vary&lt;/code&gt; см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7231 # section-7.1.4&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="290116039acf1bacd476abe3a958e4a6fb6ea6e9" translate="yes" xml:space="preserve">
          <source>For information on writing your own custom tags and filters, see &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt;.</source>
          <target state="translated">Для получения информации о написании собственных пользовательских тегов и фильтров см. &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Пользовательские теги и фильтры шаблонов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6424a9f5f542b33588d1226b07acb7eead968504" translate="yes" xml:space="preserve">
          <source>For instance, if your database connection is dropped because your process was killed without a chance to shut down gracefully, your rollback hook will never run.</source>
          <target state="translated">Например,если подключение к базе данных было прервано из-за того,что ваш процесс был убит без возможности изящно завершить работу,ваш откатный крюк никогда не запустится.</target>
        </trans-unit>
        <trans-unit id="68e3a5785f60b6a48e4ba13601647820dd287426" translate="yes" xml:space="preserve">
          <source>For instance, suppose you have the following objects in your fixture:</source>
          <target state="translated">Например,предположим,что в вашем приспособлении есть следующие объекты:</target>
        </trans-unit>
        <trans-unit id="26552709d9c194254fefe31b1351503fbe45c30a" translate="yes" xml:space="preserve">
          <source>For instance, suppose you&amp;rsquo;ve written a &lt;code&gt;ProgressBarUploadHandler&lt;/code&gt; that provides feedback on upload progress to some sort of AJAX widget. You&amp;rsquo;d add this handler to your upload handlers like this:</source>
          <target state="translated">Например, предположим, что вы написали &lt;code&gt;ProgressBarUploadHandler&lt;/code&gt; , который обеспечивает обратную связь о ходе загрузки в некоторый виджет AJAX. Вы бы добавили этот обработчик в свои обработчики загрузки следующим образом:</target>
        </trans-unit>
        <trans-unit id="414de469af9e6bdec3a4931a955f107e92261403" translate="yes" xml:space="preserve">
          <source>For instance, the following &lt;code&gt;{% blocktrans %}&lt;/code&gt; tag:</source>
          <target state="translated">Например, следующий тег &lt;code&gt;{% blocktrans %}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dec22b9c84ee09af26eb5a650408fd484c6166d3" translate="yes" xml:space="preserve">
          <source>For instance, the following &lt;code&gt;{% blocktranslate %}&lt;/code&gt; tag:</source>
          <target state="translated">Например, следующий тег &lt;code&gt;{% blocktranslate %}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b46d91dc6ffcc21985af173f6cc4f1f0a426295" translate="yes" xml:space="preserve">
          <source>For instance, to filter out &lt;a href=&quot;../ref/exceptions#django.http.UnreadablePostError&quot;&gt;&lt;code&gt;UnreadablePostError&lt;/code&gt;&lt;/a&gt; (raised when a user cancels an upload) from the admin emails, you would create a filter function:</source>
          <target state="translated">Например, чтобы отфильтровать &lt;a href=&quot;../ref/exceptions#django.http.UnreadablePostError&quot;&gt; &lt;code&gt;UnreadablePostError&lt;/code&gt; &lt;/a&gt; (возникает, когда пользователь отменяет загрузку) из электронных писем администратора, вы должны создать функцию фильтра:</target>
        </trans-unit>
        <trans-unit id="ba2af6015ca6f46f35561fed445489f2b6c6f7aa" translate="yes" xml:space="preserve">
          <source>For instance, you can fetch all the messages to return them in a &lt;a href=&quot;../../topics/class-based-views/mixins#jsonresponsemixin-example&quot;&gt;JSONResponseMixin&lt;/a&gt; instead of a &lt;a href=&quot;../class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Например, вы можете получить все сообщения, чтобы вернуть их в &lt;a href=&quot;../../topics/class-based-views/mixins#jsonresponsemixin-example&quot;&gt;JSONResponseMixin&lt;/a&gt; вместо &lt;a href=&quot;../class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="cc39ed624666c7f7da40e46bbe2e48992146ded6" translate="yes" xml:space="preserve">
          <source>For introductory material, see the &lt;a href=&quot;../topics/migrations&quot;&gt;migrations topic guide&lt;/a&gt;.</source>
          <target state="translated">Вводный материал см. В &lt;a href=&quot;../topics/migrations&quot;&gt;руководстве по теме миграции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6e8a914b4cd4754faff872acedddbbbebed6ac3" translate="yes" xml:space="preserve">
          <source>For large amounts of text, use &lt;a href=&quot;#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для больших объемов текста используйте &lt;a href=&quot;#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="887fa8d25ac98e1581cec62efb96cab221abb0ed" translate="yes" xml:space="preserve">
          <source>For macOS users building from source, the SpatiaLite library &lt;em&gt;and&lt;/em&gt; tools need to have their &lt;code&gt;target&lt;/code&gt; configured:</source>
          <target state="translated">Для пользователей macOS, строящих из исходного кода, библиотеке &lt;em&gt;и&lt;/em&gt; инструментам SpatiaLite необходимо настроить свою &lt;code&gt;target&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="646e8054ab0fca896879a33d04bc31e6303c296d" translate="yes" xml:space="preserve">
          <source>For macOS, follow the &lt;a href=&quot;#spatialite-macos&quot;&gt;instructions below&lt;/a&gt;.</source>
          <target state="translated">Для macOS следуйте &lt;a href=&quot;#spatialite-macos&quot;&gt;инструкциям ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7981bb262d83ddad7517a39735875c26f39042b6" translate="yes" xml:space="preserve">
          <source>For many uses, this type of model inheritance will be exactly what you want. It provides a way to factor out common information at the Python level, while still only creating one database table per child model at the database level.</source>
          <target state="translated">Для многих применений,этот тип наследования модели будет именно тем,что вы хотите.Он обеспечивает способ учета общей информации на уровне Python,в то же время создавая только одну таблицу базы данных на каждую дочернюю модель на уровне базы данных.</target>
        </trans-unit>
        <trans-unit id="720bd383fa98e00a3046b39acb659ac78e231328" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships &lt;code&gt;add()&lt;/code&gt; accepts either model instances or field values, normally primary keys, as the &lt;code&gt;*objs&lt;/code&gt; argument.</source>
          <target state="translated">Для отношений &amp;laquo;многие ко многим&amp;raquo; &lt;code&gt;add()&lt;/code&gt; принимает в &lt;code&gt;*objs&lt;/code&gt; аргумента * objs либо экземпляры модели, либо значения полей, обычно первичные ключи .</target>
        </trans-unit>
        <trans-unit id="dd9b78eede0a52b208932db0d75cc4ad68210818" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships &lt;code&gt;remove()&lt;/code&gt; accepts either model instances or field values, normally primary keys, as the &lt;code&gt;*objs&lt;/code&gt; argument.</source>
          <target state="translated">Для отношений &amp;laquo;многие ко многим&amp;raquo; &lt;code&gt;remove()&lt;/code&gt; принимает в &lt;code&gt;*objs&lt;/code&gt; аргумента * objs либо экземпляры модели, либо значения полей, обычно первичные ключи .</target>
        </trans-unit>
        <trans-unit id="7a8e463fb707934251ce68533845c259e15171ad" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships &lt;code&gt;set()&lt;/code&gt; accepts a list of either model instances or field values, normally primary keys, as the &lt;code&gt;objs&lt;/code&gt; argument.</source>
          <target state="translated">Для отношений &amp;laquo;многие ко многим&amp;raquo; &lt;code&gt;set()&lt;/code&gt; принимает в качестве аргумента &lt;code&gt;objs&lt;/code&gt; список экземпляров модели или значений полей, обычно первичных ключей .</target>
        </trans-unit>
        <trans-unit id="90c3793798204d7ec9cd509aa73f1dad9d1ba931" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships, the &lt;code&gt;bulk&lt;/code&gt; keyword argument doesn&amp;rsquo;t exist.</source>
          <target state="translated">Для отношений &amp;laquo;многие ко многим&amp;raquo; аргумент &lt;code&gt;bulk&lt;/code&gt; ключевого слова не существует.</target>
        </trans-unit>
        <trans-unit id="1bdb3d660cc3d32d0750ff6b772aa62cda1fcc57" translate="yes" xml:space="preserve">
          <source>For maximum flexibility you can use a &lt;a href=&quot;../models/fields#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt; which doesn&amp;rsquo;t have a maximum length defined, however this may incur significant performance penalties depending on your database backend.</source>
          <target state="translated">Для максимальной гибкости вы можете использовать &lt;a href=&quot;../models/fields#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; ,для&lt;/a&gt; которого не определена максимальная длина, однако это может привести к значительным потерям производительности в зависимости от вашей базы данных.</target>
        </trans-unit>
        <trans-unit id="7df13100159bd891985f8503c5cf4765d9c91a6d" translate="yes" xml:space="preserve">
          <source>For maximum performance the chunk sizes should be divisible by &lt;code&gt;4&lt;/code&gt; and should not exceed 2 GB (2&lt;sup&gt;31&lt;/sup&gt; bytes) in size. When there are multiple chunk sizes provided by multiple handlers, Django will use the smallest chunk size defined by any handler.</source>
          <target state="translated">Для максимальной производительности размеры чанка должны делиться на &lt;code&gt;4&lt;/code&gt; и не должны превышать 2 ГБ (2 &lt;sup&gt;31&lt;/sup&gt; байт). Когда существует несколько размеров чанка, предоставляемых несколькими обработчиками, Django будет использовать наименьший размер чанка, определенный любым обработчиком.</target>
        </trans-unit>
        <trans-unit id="d61a6fa699444c95bc1a164ecde97b8625d9aecb" translate="yes" xml:space="preserve">
          <source>For maximum security, make sure database servers only accept connections from your application servers.</source>
          <target state="translated">Для обеспечения максимальной безопасности убедитесь,что серверы баз данных принимают подключения только от серверов приложений.</target>
        </trans-unit>
        <trans-unit id="e72d3d0d1fc526db06a844c569e485c559459803" translate="yes" xml:space="preserve">
          <source>For model methods, you can provide translations to Django and the admin site with the &lt;code&gt;short_description&lt;/code&gt; attribute:</source>
          <target state="translated">Для методов модели вы можете предоставить переводы для Django и сайта администратора с атрибутом &lt;code&gt;short_description&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92461d6b7569ceb9d592fdcda46397f4b4800918" translate="yes" xml:space="preserve">
          <source>For models with &lt;a href=&quot;../../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;s, this difference makes it impossible to write a fixture that works both with and without time zone support.</source>
          <target state="translated">Для моделей с &lt;a href=&quot;../../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt; s это различие делает невозможным написание прибора, который работает как с поддержкой часовых поясов, так и без нее.</target>
        </trans-unit>
        <trans-unit id="e582c3e06094fca676d29ee1ac180c26b5ee5489" translate="yes" xml:space="preserve">
          <source>For more advanced usage you may subclass &lt;code&gt;ModelChoiceIterator&lt;/code&gt; in order to customize the yielded 2-tuple choices.</source>
          <target state="translated">Для более продвинутого использования вы можете &lt;code&gt;ModelChoiceIterator&lt;/code&gt; подкласс ModelChoiceIterator , чтобы настроить полученные варианты выбора из двух кортежей.</target>
        </trans-unit>
        <trans-unit id="c80e936be1f3c57e6fba12262a4187f0496b81c5" translate="yes" xml:space="preserve">
          <source>For more advanced usage, please read the &lt;a href=&quot;https://pgjones.gitlab.io/hypercorn/&quot;&gt;Hypercorn documentation&lt;/a&gt;.</source>
          <target state="translated">Для более продвинутого использования, пожалуйста, прочтите &lt;a href=&quot;https://pgjones.gitlab.io/hypercorn/&quot;&gt;документацию Hypercorn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49b3de7edbebd211dd7ff278502ceb70044dbf4e" translate="yes" xml:space="preserve">
          <source>For more advanced usage, please read the &lt;a href=&quot;https://www.uvicorn.org/&quot;&gt;Uvicorn documentation&lt;/a&gt;.</source>
          <target state="translated">Для более продвинутого использования, пожалуйста, прочитайте &lt;a href=&quot;https://www.uvicorn.org/&quot;&gt;документацию Uvicorn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b80fa68cea99b15fffbc89201e3c467cd1b053fb" translate="yes" xml:space="preserve">
          <source>For more background on bulk deletion, see the documentation on &lt;a href=&quot;../../../topics/db/queries#topics-db-queries-delete&quot;&gt;object deletion&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о массовом удалении см. Документацию по &lt;a href=&quot;../../../topics/db/queries#topics-db-queries-delete&quot;&gt;удалению объектов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f69284f465eb1fba3979d3ff0d3c525b4a3ea0e3" translate="yes" xml:space="preserve">
          <source>For more complex filters, you can use &lt;code&gt;ModelForm.__init__()&lt;/code&gt; method to filter based on an &lt;code&gt;instance&lt;/code&gt; of your model (see &lt;a href=&quot;../../forms/fields#fields-which-handle-relationships&quot;&gt;Fields which handle relationships&lt;/a&gt;). For example:</source>
          <target state="translated">Для более сложных фильтров вы можете использовать метод &lt;code&gt;ModelForm.__init__()&lt;/code&gt; для фильтрации на основе &lt;code&gt;instance&lt;/code&gt; вашей модели (см. &lt;a href=&quot;../../forms/fields#fields-which-handle-relationships&quot;&gt;Поля, которые обрабатывают отношения&lt;/a&gt; ). Например:</target>
        </trans-unit>
        <trans-unit id="0a1adcc239169ef12814a275fc30399f1c85dd83" translate="yes" xml:space="preserve">
          <source>For more complex layout needs, see the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;fieldsets&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">Для более сложных макетов см. &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;fieldsets&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="32b5d1ffea64854e5dc114b7011626d822147b6b" translate="yes" xml:space="preserve">
          <source>For more complex matching requirements, you can define your own path converters.</source>
          <target state="translated">Для более сложных требований по соответствию,вы можете определить свои собственные преобразователи траекторий.</target>
        </trans-unit>
        <trans-unit id="927662c7cc1246dd8074042eda95f7d27a71dae2" translate="yes" xml:space="preserve">
          <source>For more complex uses, you can specify &lt;code&gt;queryset=None&lt;/code&gt; when declaring the form field and then populate the &lt;code&gt;queryset&lt;/code&gt; in the form&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method:</source>
          <target state="translated">Для более сложных применений вы можете указать &lt;code&gt;queryset=None&lt;/code&gt; при объявлении поля формы, а затем заполнить &lt;code&gt;queryset&lt;/code&gt; в &lt;code&gt;__init__()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c7a561c755b8b99014a324afed6b156256f214f" translate="yes" xml:space="preserve">
          <source>For more detail on email services during tests, see &lt;a href=&quot;#email-services&quot;&gt;Email services&lt;/a&gt; below.</source>
          <target state="translated">Для получения более подробной информации об услугах электронной почты во время тестов см. &lt;a href=&quot;#email-services&quot;&gt;Раздел &amp;laquo;Службы электронной почты&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="58d93ccb14220145a2c6fca50940bafc44dcc747" translate="yes" xml:space="preserve">
          <source>For more details about &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;, see the Python documentation.</source>
          <target state="translated">Более подробную информацию о &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; смотрите в документации по Python.</target>
        </trans-unit>
        <trans-unit id="279c403bd9877b581693f60194f2a97a5ba59890" translate="yes" xml:space="preserve">
          <source>For more details about lazy translation objects, refer to the &lt;a href=&quot;../topics/i18n/index&quot;&gt;internationalization&lt;/a&gt; documentation.</source>
          <target state="translated">Для получения более подробной информации о ленивых объектах перевода, обратитесь к документации по &lt;a href=&quot;../topics/i18n/index&quot;&gt;интернационализации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c91404f6c889c489cf3d003955f19ee00a527e9b" translate="yes" xml:space="preserve">
          <source>For more details check out the documentation for the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option, which also lets you manually set the database table name.</source>
          <target state="translated">Для получения более подробной информации ознакомьтесь с документацией по параметру &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt; , который также позволяет вручную задавать имя таблицы базы данных.</target>
        </trans-unit>
        <trans-unit id="d4d38d949517b0545a046291c4a15a26813a9aef" translate="yes" xml:space="preserve">
          <source>For more details on model managers see &lt;a href=&quot;../../topics/db/managers&quot;&gt;Managers&lt;/a&gt; and &lt;a href=&quot;../../topics/db/queries#retrieving-objects&quot;&gt;Retrieving objects&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о менеджерах моделей см. &lt;a href=&quot;../../topics/db/managers&quot;&gt;Менеджеры&lt;/a&gt; и &lt;a href=&quot;../../topics/db/queries#retrieving-objects&quot;&gt;Получение объектов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4bc77db85f86d3d6fec4931aa2ff1b8ffdf631d6" translate="yes" xml:space="preserve">
          <source>For more details see the full &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">Для более подробной информации смотрите полную документацию &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06b27c392cc30c92586b791b3ec5b50aecc9db68" translate="yes" xml:space="preserve">
          <source>For more details, including how to delete objects in bulk, see &lt;a href=&quot;../../topics/db/queries#topics-db-queries-delete&quot;&gt;Deleting objects&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации, в том числе о том, как массово удалять объекты, см. &lt;a href=&quot;../../topics/db/queries#topics-db-queries-delete&quot;&gt;Удаление объектов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58944a24a7ff7566b422852003d421341ec97e61" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;https://docs.python.org/3/using/windows.html&quot;&gt;Using Python on Windows&lt;/a&gt; documentation.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;https://docs.python.org/3/using/windows.html&quot;&gt;Использование Python в&lt;/a&gt; документации Windows .</target>
        </trans-unit>
        <trans-unit id="37b106025ca0fc4e4f97a3dfdac7754b69b6a287" translate="yes" xml:space="preserve">
          <source>For more details, see the documentation on &lt;a href=&quot;../../../topics/http/urls#topics-http-reversing-url-namespaces&quot;&gt;reversing namespaced URLs&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. Документацию об &lt;a href=&quot;../../../topics/http/urls#topics-http-reversing-url-namespaces&quot;&gt;изменении URL-адресов в пространстве имен&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ea938600e698e46c90b0b325211f0c2d855ff0d" translate="yes" xml:space="preserve">
          <source>For more details, see the documentation on &lt;a href=&quot;expressions#django.db.models.F&quot;&gt;&lt;code&gt;F expressions&lt;/code&gt;&lt;/a&gt; and their &lt;a href=&quot;../../topics/db/queries#topics-db-queries-update&quot;&gt;use in update queries&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. Документацию по &lt;a href=&quot;expressions#django.db.models.F&quot;&gt; &lt;code&gt;F expressions&lt;/code&gt; &lt;/a&gt; и их &lt;a href=&quot;../../topics/db/queries#topics-db-queries-update&quot;&gt;использованию в запросах на обновление&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a621660b9ffadb4df494ab924cbcdfcef1860d1" translate="yes" xml:space="preserve">
          <source>For more direct control over message tags, you can optionally provide a string containing extra tags to any of the add methods:</source>
          <target state="translated">Для более прямого контроля над тегами сообщений,вы можете дополнительно предоставить строку,содержащую дополнительные теги,любому из методов добавления:</target>
        </trans-unit>
        <trans-unit id="141974db682fbfc34db800660186aada5cbcbc3d" translate="yes" xml:space="preserve">
          <source>For more examples of complex rendering, see the source code of &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;{% for %}&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;django/template/defaulttags.py&lt;/code&gt; and &lt;a href=&quot;../ref/templates/builtins#std:templatetag-if&quot;&gt;&lt;code&gt;{% if %}&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;django/template/smartif.py&lt;/code&gt;.</source>
          <target state="translated">Дополнительные примеры сложного рендеринга см. В исходном коде &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;{% for %}&lt;/code&gt; &lt;/a&gt; в &lt;code&gt;django/template/defaulttags.py&lt;/code&gt; и &lt;a href=&quot;../ref/templates/builtins#std:templatetag-if&quot;&gt; &lt;code&gt;{% if %}&lt;/code&gt; &lt;/a&gt; в &lt;code&gt;django/template/smartif.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c4063c11b1c88b2cb8977a2db5a6f85a2224915" translate="yes" xml:space="preserve">
          <source>For more granular control over the generated markup, you can loop over the radio buttons in the template. Assuming a form &lt;code&gt;myform&lt;/code&gt; with a field &lt;code&gt;beatles&lt;/code&gt; that uses a &lt;code&gt;RadioSelect&lt;/code&gt; as its widget:</source>
          <target state="translated">Для более детального управления сгенерированной разметкой вы можете переключаться между переключателями в шаблоне. Предполагая форму &lt;code&gt;myform&lt;/code&gt; с полем &lt;code&gt;beatles&lt;/code&gt; , которое использует &lt;code&gt;RadioSelect&lt;/code&gt; в качестве виджета:</target>
        </trans-unit>
        <trans-unit id="9b494e2fa30daa12b2bd73081b7a08f5f69a79a3" translate="yes" xml:space="preserve">
          <source>For more information about the differences between the &lt;a href=&quot;#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt; classes, please see &lt;a href=&quot;#floatfield-vs-decimalfield&quot;&gt;FloatField vs. DecimalField&lt;/a&gt;. You should also be aware of &lt;a href=&quot;../databases#sqlite-decimal-handling&quot;&gt;SQLite limitations&lt;/a&gt; of decimal fields.</source>
          <target state="translated">Для получения дополнительной информации о различиях между классами &lt;a href=&quot;#django.db.models.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; &lt;/a&gt; см. &lt;a href=&quot;#floatfield-vs-decimalfield&quot;&gt;Раздел FloatField и DecimalField&lt;/a&gt; . Вы также должны знать об &lt;a href=&quot;../databases#sqlite-decimal-handling&quot;&gt;ограничениях SQLite&lt;/a&gt; десятичных полей.</target>
        </trans-unit>
        <trans-unit id="2a1e4b92c4b1299cae94418ff1f466ba63e1902f" translate="yes" xml:space="preserve">
          <source>For more information creating &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects, refer to the &lt;a href=&quot;geos#geos-tutorial&quot;&gt;GEOS tutorial&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о создании объектов &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; обратитесь к руководству &lt;a href=&quot;geos#geos-tutorial&quot;&gt;GEOS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bee8a00911e8ae017f5711d9b8ada409c9899e9" translate="yes" xml:space="preserve">
          <source>For more information on how the &lt;code&gt;takes_context&lt;/code&gt; option works, see the section on &lt;a href=&quot;#howto-custom-template-tags-inclusion-tags&quot;&gt;inclusion tags&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о том, как &lt;code&gt;takes_context&lt;/code&gt; опция take_context , см. Раздел о &lt;a href=&quot;#howto-custom-template-tags-inclusion-tags&quot;&gt;тегах включения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4792337d74fb41aff8fd3fe24b774ed7a7075b39" translate="yes" xml:space="preserve">
          <source>For more information on how the minimum recorded level functions, see &lt;a href=&quot;#message-levels&quot;&gt;Message levels&lt;/a&gt; above.</source>
          <target state="translated">Для получения дополнительной информации о том, как функционирует минимальный записанный уровень, см. &lt;a href=&quot;#message-levels&quot;&gt;Уровни сообщений&lt;/a&gt; выше.</target>
        </trans-unit>
        <trans-unit id="64b1e8bbb3b4a7db0536ac5a57afad76d21f96bc" translate="yes" xml:space="preserve">
          <source>For more information on how to use the built in generic views, consult the next topic on &lt;a href=&quot;generic-display&quot;&gt;generic class-based views&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о том, как использовать встроенные общие представления, обратитесь к следующей теме об &lt;a href=&quot;generic-display&quot;&gt;общих представлениях на основе классов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad2faa17c504056bb79721f41478b5cf93ee8f17" translate="yes" xml:space="preserve">
          <source>For more information on model relations, see &lt;a href=&quot;../ref/models/relations&quot;&gt;Accessing related objects&lt;/a&gt;. For more on how to use double underscores to perform field lookups via the API, see &lt;a href=&quot;../topics/db/queries#field-lookups-intro&quot;&gt;Field lookups&lt;/a&gt;. For full details on the database API, see our &lt;a href=&quot;../topics/db/queries&quot;&gt;Database API reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об отношениях модели см. &lt;a href=&quot;../ref/models/relations&quot;&gt;Доступ к связанным объектам&lt;/a&gt; . Для получения дополнительной информации о том, как использовать двойные подчеркивания для выполнения поиска по полю через API, см. &lt;a href=&quot;../topics/db/queries#field-lookups-intro&quot;&gt;Поиск по полю&lt;/a&gt; . Для получения полной информации об API базы данных, смотрите нашу &lt;a href=&quot;../topics/db/queries&quot;&gt;ссылку на API базы данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47742209ee4799ec64202e500131a5f0d472ae00" translate="yes" xml:space="preserve">
          <source>For more information on packaging, see Python&amp;rsquo;s &lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/&quot;&gt;Tutorial on Packaging and Distributing Projects&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об упаковке, см. &lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/&quot;&gt;Учебник&lt;/a&gt; Python по Упаковке и Распространению Проектов .</target>
        </trans-unit>
        <trans-unit id="b76778341e9f02ca90fe2cf2d88dfefa40bcc8d4" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag, read its documentation.</source>
          <target state="translated">Для получения дополнительной информации о теге &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt; , прочитайте его документацию.</target>
        </trans-unit>
        <trans-unit id="d49e90b5333ff6e7b10e9aa6b8723a99b2576658" translate="yes" xml:space="preserve">
          <source>For more information on these method properties, see &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этих свойствах метода см. &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ff6a17e4f7b67e13f5fdfcf8eaa8d0bded74b48" translate="yes" xml:space="preserve">
          <source>For more information on writing documentation, including an explanation of what the &lt;code&gt;versionadded&lt;/code&gt; bit is all about, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-documentation/&quot;&gt;Writing documentation&lt;/a&gt;. That page also includes an explanation of how to build a copy of the documentation locally, so you can preview the HTML that will be generated.</source>
          <target state="translated">Для получения дополнительной информации о написании документации, в том числе объяснения того, что &lt;code&gt;versionadded&lt;/code&gt; бит добавленной версии , см. &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-documentation/&quot;&gt;Написание документации&lt;/a&gt; . На этой странице также содержится объяснение того, как создать копию документации локально, чтобы вы могли просмотреть HTML-код, который будет сгенерирован.</target>
        </trans-unit>
        <trans-unit id="c08415d0d9256a449f5322a806321695e2a65e97" translate="yes" xml:space="preserve">
          <source>For more information on writing documentation, including an explanation of what the &lt;code&gt;versionadded&lt;/code&gt; bit is all about, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-documentation/&quot;&gt;Writing documentation&lt;/a&gt;. That page also includes an explanation of how to build a copy of the documentation locally, so you can preview the HTML that will be generated.</source>
          <target state="translated">Для получения дополнительной информации о написании документации, включая объяснение того, что &lt;code&gt;versionadded&lt;/code&gt; бит версии , см. &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-documentation/&quot;&gt;Написание документации&lt;/a&gt; . Эта страница также включает объяснение того, как создать копию документации локально, чтобы вы могли предварительно просмотреть HTML-код, который будет сгенерирован.</target>
        </trans-unit>
        <trans-unit id="45eeaf25d42cc3ec94406a92208edd5d8c956951" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../../topics/files&quot;&gt;Managing files&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;../../topics/files&quot;&gt;Управление файлами&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="507910ab48efd1e93e0e343542bffdc9600bdabb" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../topics/i18n/translation#contextual-markers&quot;&gt;Contextual markers&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;../topics/i18n/translation#contextual-markers&quot;&gt;Контекстные маркеры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7819aec51ef804e62612079347d58584eacfda" translate="yes" xml:space="preserve">
          <source>For more information, the PostGIS documentation contains a helpful section on determining &lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_GeographyVSGeometry&quot;&gt;when to use geography data type over geometry data type&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации документация PostGIS содержит полезный раздел, посвященный определению того, &lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_GeographyVSGeometry&quot;&gt;когда использовать тип данных географии над типом данных геометрии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e11836e7ccec0efc67c0aecc25c8cf7c68e9aee0" translate="yes" xml:space="preserve">
          <source>For more on Vary headers, see the &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;official Vary spec&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Подробнее о заголовках Vary смотрите в &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;официальной спецификации Vary&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f98a38a01f75e7ab202c7bd8b9f2425154d8e515" translate="yes" xml:space="preserve">
          <source>For more on middleware, read the &lt;a href=&quot;../../topics/http/middleware&quot;&gt;middleware docs&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о промежуточном программном обеспечении прочитайте &lt;a href=&quot;../../topics/http/middleware&quot;&gt;документы&lt;/a&gt; по промежуточному программному обеспечению .</target>
        </trans-unit>
        <trans-unit id="b267b1a01114ee31ea6d8b05c668877f539be841" translate="yes" xml:space="preserve">
          <source>For more on pagination, read the &lt;a href=&quot;../../topics/pagination&quot;&gt;pagination documentation&lt;/a&gt;.</source>
          <target state="translated">Чтобы узнать больше о нумерации страниц, прочтите &lt;a href=&quot;../../topics/pagination&quot;&gt;документацию&lt;/a&gt; по нумерации страниц .</target>
        </trans-unit>
        <trans-unit id="2c64c486c65888eb52c7539f1424def530e76016" translate="yes" xml:space="preserve">
          <source>For more on sending email from Django, see &lt;a href=&quot;../email&quot;&gt;Sending email&lt;/a&gt;.</source>
          <target state="translated">Подробнее об отправке электронной почты из Django см. В разделе &lt;a href=&quot;../email&quot;&gt;Отправка электронной почты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c84dff282ea6b93fe47d293a1e314b08fecbd81" translate="yes" xml:space="preserve">
          <source>For more options like annotated HTML listings detailing missed lines, see the &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt; docs.</source>
          <target state="translated">Для получения дополнительных возможностей , таких как аннотированных HTML списков детализирующих пропущенных строк, см &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt; документов.</target>
        </trans-unit>
        <trans-unit id="6192f961c1d3c6a9a50f39fae25b2121f6bd5f5e" translate="yes" xml:space="preserve">
          <source>For more, see the &lt;a href=&quot;../ref/django-admin#django-admin-diffsettings&quot;&gt;&lt;code&gt;diffsettings&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">Для получения дополнительной информации см. Документацию по &lt;a href=&quot;../ref/django-admin#django-admin-diffsettings&quot;&gt; &lt;code&gt;diffsettings&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a80d5abe99712d4e4d9829a7ea208844f71d27f" translate="yes" xml:space="preserve">
          <source>For more, see the section &amp;ldquo;The database API&amp;rdquo; below.</source>
          <target state="translated">Для получения дополнительной информации см. Раздел &amp;laquo;API базы данных&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="1b54050c09bf8dd84ccee5cc3f84ec8431f97bae" translate="yes" xml:space="preserve">
          <source>For most Web applications, this overhead isn&amp;rsquo;t a big deal. Most Web applications aren&amp;rsquo;t &lt;code&gt;washingtonpost.com&lt;/code&gt; or &lt;code&gt;slashdot.org&lt;/code&gt;; they&amp;rsquo;re small- to medium-sized sites with so-so traffic. But for medium- to high-traffic sites, it&amp;rsquo;s essential to cut as much overhead as possible.</source>
          <target state="translated">Для большинства веб-приложений эти издержки не имеют большого значения. Большинство веб-приложений не являются &lt;code&gt;washingtonpost.com&lt;/code&gt; или &lt;code&gt;slashdot.org&lt;/code&gt; ; это небольшие и средние сайты с таким трафиком. Но для сайтов со средним и высоким трафиком важно сократить как можно больше накладных расходов.</target>
        </trans-unit>
        <trans-unit id="237201716598097e525fd6c1250b48cbeab9d611" translate="yes" xml:space="preserve">
          <source>For most aggregates, there is no way to avoid this problem, however, the &lt;a href=&quot;../../ref/models/querysets#django.db.models.Count&quot;&gt;&lt;code&gt;Count&lt;/code&gt;&lt;/a&gt; aggregate has a &lt;code&gt;distinct&lt;/code&gt; parameter that may help:</source>
          <target state="translated">Для большинства агрегатов не существует способа избежать этой проблемы, однако агрегат &lt;a href=&quot;../../ref/models/querysets#django.db.models.Count&quot;&gt; &lt;code&gt;Count&lt;/code&gt; &lt;/a&gt; имеет &lt;code&gt;distinct&lt;/code&gt; параметр, который может помочь:</target>
        </trans-unit>
        <trans-unit id="2003ca8d7dc771b03d7546f025676603513b8695" translate="yes" xml:space="preserve">
          <source>For most backends, raw queries (&lt;code&gt;Manager.raw()&lt;/code&gt; or &lt;code&gt;cursor.execute()&lt;/code&gt;) can use the &amp;ldquo;pyformat&amp;rdquo; parameter style, where placeholders in the query are given as &lt;code&gt;'%(name)s'&lt;/code&gt; and the parameters are passed as a dictionary rather than a list. SQLite does not support this.</source>
          <target state="translated">Для большинства бэкэндов необработанные запросы ( &lt;code&gt;Manager.raw()&lt;/code&gt; или &lt;code&gt;cursor.execute()&lt;/code&gt; ) могут использовать стиль параметра &amp;laquo;pyformat&amp;raquo;, где заполнители в запросе задаются как &lt;code&gt;'%(name)s'&lt;/code&gt; а параметры передаются как словарь, а не список. SQLite не поддерживает это.</target>
        </trans-unit>
        <trans-unit id="a9b961caae7339af9470bdb6ccaef50eae9ac7d1" translate="yes" xml:space="preserve">
          <source>For most extensions, this requires a database user with superuser privileges. If the Django database user doesn&amp;rsquo;t have the appropriate privileges, you&amp;rsquo;ll have to create the extension outside of Django migrations with a user that has them. In that case, connect to your Django database and run the query &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt;.</source>
          <target state="translated">Для большинства расширений для этого требуется пользователь базы данных с привилегиями суперпользователя. Если пользователь базы данных Django не имеет соответствующих прав, вам придется создать расширение вне миграций Django с пользователем, у которого они есть. В этом случае подключитесь к базе данных Django и выполните запрос &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c24ff4760969777f23c45dfeee5f192e54f490c" translate="yes" xml:space="preserve">
          <source>For most of these add-ons &amp;ndash; specifically, the add-ons that include either models or template tags &amp;ndash; you&amp;rsquo;ll need to add the package name (e.g., &lt;code&gt;'django.contrib.redirects'&lt;/code&gt;) to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and re-run &lt;code&gt;manage.py migrate&lt;/code&gt;.</source>
          <target state="translated">Для большинства этих надстроек, в частности надстроек, которые включают либо модели, либо теги шаблонов, вам необходимо добавить имя пакета (например, &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; ) в настройку &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; и перезапустить &lt;code&gt;manage.py migrate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5773200065e50b8ffe12fb94d74fc2c7ae73b54b" translate="yes" xml:space="preserve">
          <source>For much better performance on WGS84 distance queries, consider using &lt;a href=&quot;model-api#geography-type&quot;&gt;geography columns&lt;/a&gt; in your database instead because they are able to use their spatial index in distance queries. You can tell GeoDjango to use a geography column by setting &lt;code&gt;geography=True&lt;/code&gt; in your field definition.</source>
          <target state="translated">Для повышения производительности при выполнении удаленных запросов WGS84 рассмотрите возможность использования &lt;a href=&quot;model-api#geography-type&quot;&gt;столбцов географии&lt;/a&gt; в вашей базе данных, поскольку они могут использовать свой пространственный индекс в удаленных запросах. Вы можете указать GeoDjango использовать столбец географии, установив &lt;code&gt;geography=True&lt;/code&gt; в определении поля.</target>
        </trans-unit>
        <trans-unit id="b6b394a2c0488d27e61669101145e755c23a05b0" translate="yes" xml:space="preserve">
          <source>For nearly all cases, Django&amp;rsquo;s built-in template language is perfectly adequate. However, if the bottlenecks in your Django project seem to lie in the template system and you have exhausted other opportunities to remedy this, a third-party alternative may be the answer.</source>
          <target state="translated">Практически во всех случаях встроенный язык шаблонов Django вполне подходит. Однако, если узкие места в вашем проекте Django, похоже, лежат в системе шаблонов, и вы исчерпали другие возможности исправить это, альтернативой может быть сторонняя альтернатива.</target>
        </trans-unit>
        <trans-unit id="9e4c6979b5930dafd8445167fefb3b15671217be" translate="yes" xml:space="preserve">
          <source>For nested loops, this is the loop surrounding the current one</source>
          <target state="translated">Для вложенных петель это петля,окружающая текущую.</target>
        </trans-unit>
        <trans-unit id="e7fb3dd6ecf24e63b43dbe6b3f6682455af38f1f" translate="yes" xml:space="preserve">
          <source>For non-AJAX requests, the fallback will always be performed.</source>
          <target state="translated">Для не-AJAX запросов,падение всегда будет выполняться.</target>
        </trans-unit>
        <trans-unit id="7e79ed355486bc2713b8435fdfa927d098abc733" translate="yes" xml:space="preserve">
          <source>For numbers 1-9, returns the number spelled out. Otherwise, returns the number. This follows Associated Press style.</source>
          <target state="translated">Для номеров 1-9 возвращает прописанное число.В противном случае возвращает номер.Это соответствует стилю Ассошиэйтед Пресс.</target>
        </trans-unit>
        <trans-unit id="e7dad50022091ec1e5f0adb635e178d5aa50e5ee" translate="yes" xml:space="preserve">
          <source>For our &lt;code&gt;Hand&lt;/code&gt; example, we could convert the card data to a string of 104 characters by concatenating all the cards together in a pre-determined order &amp;ndash; say, all the &lt;em&gt;north&lt;/em&gt; cards first, then the &lt;em&gt;east&lt;/em&gt;, &lt;em&gt;south&lt;/em&gt; and &lt;em&gt;west&lt;/em&gt; cards. So &lt;code&gt;Hand&lt;/code&gt; objects can be saved to text or character columns in the database.</source>
          <target state="translated">В нашем примере с &lt;code&gt;Hand&lt;/code&gt; мы могли бы преобразовать данные карты в строку из 104 символов, объединив все карты вместе в заранее определенном порядке - скажем, сначала все &lt;em&gt;северные&lt;/em&gt; карты, затем &lt;em&gt;восточная&lt;/em&gt; , &lt;em&gt;южная&lt;/em&gt; и &lt;em&gt;западная&lt;/em&gt; карты. Таким образом, объекты &lt;code&gt;Hand&lt;/code&gt; могут быть сохранены в текстовые или символьные столбцы в базе данных.</target>
        </trans-unit>
        <trans-unit id="c129b37c8b665fe90f9785807f4f5c5f296c1d9b" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; loads fixtures once for the entire test class, before &lt;a href=&quot;#django.test.TestCase.setUpTestData&quot;&gt;&lt;code&gt;setUpTestData()&lt;/code&gt;&lt;/a&gt;, instead of before each test, and it uses transactions to clean the database before each test. In any case, you can be certain that the outcome of a test will not be affected by another test or by the order of test execution.</source>
          <target state="translated">Из соображений производительности &lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; загружает осветительные приборы один раз для всего класса теста, перед &lt;a href=&quot;#django.test.TestCase.setUpTestData&quot;&gt; &lt;code&gt;setUpTestData()&lt;/code&gt; &lt;/a&gt; , а не перед каждым тестом, и использует транзакции для очистки базы данных перед каждым тестом. В любом случае вы можете быть уверены, что результат теста не будет зависеть от другого теста или порядка выполнения теста.</target>
        </trans-unit>
        <trans-unit id="2a4912a8f2e478cd373c6834ff23b62b982b832c" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;code&gt;from_db_value&lt;/code&gt; is not implemented as a no-op on fields which do not require it (all Django fields). Consequently you may not call &lt;code&gt;super&lt;/code&gt; in your definition.</source>
          <target state="translated">Из соображений производительности &lt;code&gt;from_db_value&lt;/code&gt; не реализовано как запрет на поля, которые не требуют этого (все поля Django). Следовательно, вы не можете называть &lt;code&gt;super&lt;/code&gt; в вашем определении.</target>
        </trans-unit>
        <trans-unit id="424ca8cab98f356a00ae4490061803f50b6ec450" translate="yes" xml:space="preserve">
          <source>For performance reasons, SQL logging is only enabled when &lt;code&gt;settings.DEBUG&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, regardless of the logging level or handlers that are installed.</source>
          <target state="translated">Из соображений производительности ведение журнала SQL включается только тогда, когда для &lt;code&gt;settings.DEBUG&lt;/code&gt; задано значение &lt;code&gt;True&lt;/code&gt; , независимо от уровня ведения журнала или установленных обработчиков.</target>
        </trans-unit>
        <trans-unit id="42bb783ba8a3b6a8a71df6de2ff3296859069b89" translate="yes" xml:space="preserve">
          <source>For performance reasons, it&amp;rsquo;s preferable to do these redirects outside of Django, in a front-end load balancer or reverse-proxy server such as &lt;a href=&quot;https://nginx.org&quot;&gt;nginx&lt;/a&gt;. &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; is intended for the deployment situations where this isn&amp;rsquo;t an option.</source>
          <target state="translated">Из соображений производительности предпочтительно выполнять эти перенаправления вне Django, во внешнем балансировщике нагрузки или обратном прокси-сервере, таком как &lt;a href=&quot;https://nginx.org&quot;&gt;nginx&lt;/a&gt; . &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt; предназначен для ситуаций развертывания, где это не вариант.</target>
        </trans-unit>
        <trans-unit id="d9e63810971473602af5d7b1f5a81aa41157752d" translate="yes" xml:space="preserve">
          <source>For performance reasons, the &lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instances in &lt;code&gt;ModelState.fields&lt;/code&gt; are reused across migrations. You must never change the attributes on these instances. If you need to mutate a field in &lt;code&gt;state_forwards()&lt;/code&gt;, you must remove the old instance from &lt;code&gt;ModelState.fields&lt;/code&gt; and add a new instance in its place. The same is true for the &lt;a href=&quot;../topics/db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; instances in &lt;code&gt;ModelState.managers&lt;/code&gt;.</source>
          <target state="translated">По соображениям производительности экземпляры &lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; в &lt;code&gt;ModelState.fields&lt;/code&gt; повторно используются при миграциях. Вы никогда не должны изменять атрибуты в этих случаях. Если вам нужно &lt;code&gt;state_forwards()&lt;/code&gt; поле в state_forwards () , вы должны удалить старый экземпляр из &lt;code&gt;ModelState.fields&lt;/code&gt; и добавить новый экземпляр на его место. То же самое верно для экземпляров &lt;a href=&quot;../topics/db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; в &lt;code&gt;ModelState.managers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a14665e6a70026da7b331f9bb19684d58424a07" translate="yes" xml:space="preserve">
          <source>For performance reasons, you shouldn&amp;rsquo;t perform queries in receivers of &lt;code&gt;pre_init&lt;/code&gt; or &lt;code&gt;post_init&lt;/code&gt; signals because they would be executed for each instance returned during queryset iteration.</source>
          <target state="translated">Из соображений производительности не следует выполнять запросы в приемниках сигналов &lt;code&gt;pre_init&lt;/code&gt; или &lt;code&gt;post_init&lt;/code&gt; , поскольку они будут выполняться для каждого экземпляра, возвращаемого во время итерации набора запросов .</target>
        </trans-unit>
        <trans-unit id="38a5583dc5a79edcb838768762f15c7d4aaba0f4" translate="yes" xml:space="preserve">
          <source>For persistent, cached data, set &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt;&lt;code&gt;SESSION_ENGINE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;django.contrib.sessions.backends.cached_db&quot;&lt;/code&gt;. This uses a write-through cache &amp;ndash; every write to the cache will also be written to the database. Session reads only use the database if the data is not already in the cache.</source>
          <target state="translated">Для постоянных кэшированных данных установите &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt; &lt;code&gt;SESSION_ENGINE&lt;/code&gt; &lt;/a&gt; в значение &lt;code&gt;&quot;django.contrib.sessions.backends.cached_db&quot;&lt;/code&gt; . При этом используется сквозной кэш - каждая запись в кеш также будет записываться в базу данных. Сеансовые чтения используют базу данных только в том случае, если данные еще не находятся в кэше.</target>
        </trans-unit>
        <trans-unit id="c7b8cf00020c5d1fb45cd748de93524d6d79b7bb" translate="yes" xml:space="preserve">
          <source>For raster data there is no difference between a raster instance and its data source. Unlike for the Geometry objects, &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; objects are always a data source. Temporary rasters can be instantiated in memory using the corresponding driver, but they will be of the same class as file-based raster sources.</source>
          <target state="translated">Для растровых данных нет разницы между экземпляром растра и его источником данных. В отличие от объектов Geometry, объекты &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt; всегда являются источником данных. Временные растры могут быть созданы в памяти с использованием соответствующего драйвера, но они будут того же класса, что и исходные растровые источники.</target>
        </trans-unit>
        <trans-unit id="d75c22989ab8a302b73b82bc433278f518a6e000" translate="yes" xml:space="preserve">
          <source>For sample code, see the &lt;a href=&quot;examples/many_to_one&quot;&gt;Many-to-one relationship model example&lt;/a&gt;.</source>
          <target state="translated">Для примера кода см. &lt;a href=&quot;examples/many_to_one&quot;&gt;Пример модели отношения&lt;/a&gt; &amp;laquo; многие к одному&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="eb1ef97607904bce2dc6f3c32cc662efa95452e0" translate="yes" xml:space="preserve">
          <source>For security reasons, CSRF tokens are rotated each time a user logs in. Any page with a form generated before a login will have an old, invalid CSRF token and need to be reloaded. This might happen if a user uses the back button after a login or if they log in a different browser tab.</source>
          <target state="translated">По соображениям безопасности маркеры CSRF поворачиваются каждый раз,когда пользователь входит в систему.Любая страница с формой,сгенерированной перед входом в систему,будет иметь старый,недействительный CSRF-токен и должна быть перезагружена.Это может произойти,если пользователь после входа в систему использует кнопку &quot;Назад&quot;,или если он входит в систему на другой вкладке браузера.</target>
        </trans-unit>
        <trans-unit id="ae97a0fe5932f690f89f83cec189c6b17b10fb0f" translate="yes" xml:space="preserve">
          <source>For security reasons, the value of the secret is changed each time a user logs in.</source>
          <target state="translated">В целях безопасности значение секрета меняется каждый раз,когда пользователь входит в систему.</target>
        </trans-unit>
        <trans-unit id="c6ff78cacaaf23691d024d9a0c7b10a2a87d6fbc" translate="yes" xml:space="preserve">
          <source>For security reasons, these permissions aren&amp;rsquo;t applied to the temporary files that are stored in &lt;a href=&quot;#std:setting-FILE_UPLOAD_TEMP_DIR&quot;&gt;&lt;code&gt;FILE_UPLOAD_TEMP_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">По соображениям безопасности эти разрешения не применяются к временным файлам, которые хранятся в &lt;a href=&quot;#std:setting-FILE_UPLOAD_TEMP_DIR&quot;&gt; &lt;code&gt;FILE_UPLOAD_TEMP_DIR&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ec9f02dce1101622a275e4df9d73b74bea9b32" translate="yes" xml:space="preserve">
          <source>For setting the &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;Vary&lt;/code&gt; header fields, it is recommended to use the &lt;a href=&quot;utils#django.utils.cache.patch_cache_control&quot;&gt;&lt;code&gt;patch_cache_control()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;utils#django.utils.cache.patch_vary_headers&quot;&gt;&lt;code&gt;patch_vary_headers()&lt;/code&gt;&lt;/a&gt; methods from &lt;a href=&quot;utils#module-django.utils.cache&quot;&gt;&lt;code&gt;django.utils.cache&lt;/code&gt;&lt;/a&gt;, since these fields can have multiple, comma-separated values. The &amp;ldquo;patch&amp;rdquo; methods ensure that other values, e.g. added by a middleware, are not removed.</source>
          <target state="translated">Для установки полей заголовка &lt;code&gt;Cache-Control&lt;/code&gt; и &lt;code&gt;Vary&lt;/code&gt; рекомендуется использовать &lt;a href=&quot;utils#django.utils.cache.patch_cache_control&quot;&gt; &lt;code&gt;patch_cache_control()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;utils#django.utils.cache.patch_vary_headers&quot;&gt; &lt;code&gt;patch_vary_headers()&lt;/code&gt; &lt;/a&gt; из &lt;a href=&quot;utils#module-django.utils.cache&quot;&gt; &lt;code&gt;django.utils.cache&lt;/code&gt; &lt;/a&gt; , поскольку эти поля могут иметь несколько значений, разделенных запятыми. Методы &amp;laquo;patch&amp;raquo; гарантируют, что другие значения, например, добавленные промежуточным программным обеспечением, не будут удалены.</target>
        </trans-unit>
        <trans-unit id="db395fce05fd519b1a5fb650233cfd3a114f39b6" translate="yes" xml:space="preserve">
          <source>For settings that are sequences, Django itself uses lists, but this is only a convention.</source>
          <target state="translated">Для настроек,которые являются последовательностями,сам Django использует списки,но это всего лишь соглашение.</target>
        </trans-unit>
        <trans-unit id="83441c6a3b1b803a2a49949c9de44602cd36d751" translate="yes" xml:space="preserve">
          <source>For simplifying the selection of a generator use &lt;code&gt;feedgenerator.DefaultFeed&lt;/code&gt; which is currently &lt;code&gt;Rss201rev2Feed&lt;/code&gt;</source>
          <target state="translated">Для упрощения выбора генератора используйте &lt;code&gt;feedgenerator.DefaultFeed&lt;/code&gt; , который в данный момент является &lt;code&gt;Rss201rev2Feed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8ceee4f01a0611046492d3c5b9cf5e18c66b04e" translate="yes" xml:space="preserve">
          <source>For sites running on a subpath, the &lt;a href=&quot;#django.contrib.admin.AdminSite.each_context&quot;&gt;&lt;code&gt;each_context()&lt;/code&gt;&lt;/a&gt; method checks if the current request has &lt;code&gt;request.META['SCRIPT_NAME']&lt;/code&gt; set and uses that value if &lt;code&gt;site_url&lt;/code&gt; isn&amp;rsquo;t set to something other than &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Для сайтов, работающих на подпуть, метод &lt;a href=&quot;#django.contrib.admin.AdminSite.each_context&quot;&gt; &lt;code&gt;each_context()&lt;/code&gt; &lt;/a&gt; проверяет, установлен ли в текущем запросе &lt;code&gt;request.META['SCRIPT_NAME']&lt;/code&gt; и использует это значение, если для &lt;code&gt;site_url&lt;/code&gt; не установлено значение, отличное от &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d88e7dbe5892b15588501cbdb78f954dbe55235a" translate="yes" xml:space="preserve">
          <source>For sites that should only be accessed over HTTPS, you can instruct modern browsers to refuse to connect to your domain name via an insecure connection (for a given period of time) by setting the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security&quot;&gt;&amp;ldquo;Strict-Transport-Security&amp;rdquo; header&lt;/a&gt;. This reduces your exposure to some SSL-stripping man-in-the-middle (MITM) attacks.</source>
          <target state="translated">Для сайтов, доступ к которым возможен только через HTTPS, вы можете указать современным браузерам отказаться от подключения к вашему доменному имени через небезопасное соединение (на определенный период времени), установив &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security&quot;&gt;заголовок &amp;laquo;Strict-Transport-Security&amp;raquo;&lt;/a&gt; . Это уменьшает вашу подверженность некоторым атакам по методу SSL (MITM).</target>
        </trans-unit>
        <trans-unit id="060b3b6339590923baf49d02d89a5fd13364954d" translate="yes" xml:space="preserve">
          <source>For small projects, this isn&amp;rsquo;t a big deal, because you can keep the static files somewhere your web server can find it. However, in bigger projects &amp;ndash; especially those comprised of multiple apps &amp;ndash; dealing with the multiple sets of static files provided by each application starts to get tricky.</source>
          <target state="translated">Для небольших проектов это не имеет большого значения, потому что вы можете хранить статические файлы там, где их может найти ваш веб-сервер. Однако в более крупных проектах, особенно в тех, которые состоят из нескольких приложений, работа с несколькими наборами статических файлов, предоставляемых каждым приложением, начинает усложняться.</target>
        </trans-unit>
        <trans-unit id="98244e053dd849bb49cb94789a244fc850fca33d" translate="yes" xml:space="preserve">
          <source>For subclasses of &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;, the password field will be marked as &amp;ldquo;dirty&amp;rdquo; when calling &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt; which triggers a call to &lt;code&gt;password_changed()&lt;/code&gt; after the user is saved.</source>
          <target state="translated">Для подклассов &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt; поле пароля будет помечено как &amp;laquo;грязное&amp;raquo; при вызове &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt; который инициирует вызов &lt;code&gt;password_changed()&lt;/code&gt; после сохранения пользователя.</target>
        </trans-unit>
        <trans-unit id="7d318e407a6068120e838ea61855cc437bf86be2" translate="yes" xml:space="preserve">
          <source>For template blocks</source>
          <target state="translated">Для блоков шаблонов</target>
        </trans-unit>
        <trans-unit id="e232fed1b6bcfa5d4b03f84ef89534f5bc33dc67" translate="yes" xml:space="preserve">
          <source>For testing purposes it&amp;rsquo;s often useful to change a setting temporarily and revert to the original value after running the testing code. For this use case Django provides a standard Python context manager (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt;) called &lt;a href=&quot;#django.test.SimpleTestCase.settings&quot;&gt;&lt;code&gt;settings()&lt;/code&gt;&lt;/a&gt;, which can be used like this:</source>
          <target state="translated">В целях тестирования часто полезно временно изменить настройку и вернуться к исходному значению после выполнения кода тестирования. Для этого &lt;a href=&quot;#django.test.SimpleTestCase.settings&quot;&gt; &lt;code&gt;settings()&lt;/code&gt; &lt;/a&gt; использования Django предоставляет стандартный менеджер контекста Python (см. &lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt; ), называемый settings () , который можно использовать следующим образом:</target>
        </trans-unit>
        <trans-unit id="9a3f172015e88c657224148a415ba18aa223013e" translate="yes" xml:space="preserve">
          <source>For tests involving models with &lt;code&gt;managed=False&lt;/code&gt;, it&amp;rsquo;s up to you to ensure the correct tables are created as part of the test setup.</source>
          <target state="translated">Для тестов, в которых используются модели с параметром &lt;code&gt;managed=False&lt;/code&gt; , вам необходимо убедиться, что в рамках настройки теста созданы правильные таблицы.</target>
        </trans-unit>
        <trans-unit id="2f9c0332095ab8a71d4aec460d84e568f37e8252" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pre_add&lt;/code&gt; and &lt;code&gt;post_add&lt;/code&gt; actions, this is a set of primary key values that will be, or have been, added to the relation. This may be a subset of the values submitted to be added, since inserts must filter existing values in order to avoid a database &lt;code&gt;IntegrityError&lt;/code&gt;.</source>
          <target state="translated">Для действий &lt;code&gt;pre_add&lt;/code&gt; и &lt;code&gt;post_add&lt;/code&gt; это набор значений первичного ключа, которые будут или были добавлены в отношение. Это может быть подмножество значений, представленных для добавления, так как вставки должны фильтровать существующие значения, чтобы избежать ошибки &lt;code&gt;IntegrityError&lt;/code&gt; базы данных .</target>
        </trans-unit>
        <trans-unit id="1a84d3af82f5a18d83c42438eac1f3056429345b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pre_clear&lt;/code&gt; and &lt;code&gt;post_clear&lt;/code&gt; actions, this is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Для действий &lt;code&gt;pre_clear&lt;/code&gt; и &lt;code&gt;post_clear&lt;/code&gt; это &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="329abb7b505a558db32777a7ff6f0809b6e12296" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pre_remove&lt;/code&gt; and &lt;code&gt;post_remove&lt;/code&gt; actions, this is a set of primary key values that was submitted to be removed from the relation. This is not dependent on whether the values actually will be, or have been, removed. In particular, non-existent values may be submitted, and will appear in &lt;code&gt;pk_set&lt;/code&gt;, even though they have no effect on the database.</source>
          <target state="translated">Для действий &lt;code&gt;pre_remove&lt;/code&gt; и &lt;code&gt;post_remove&lt;/code&gt; это набор значений первичного ключа, который был отправлен для удаления из отношения. Это не зависит от того, будут ли значения фактически удалены или были удалены. В частности, могут быть переданы несуществующие значения, которые будут отображаться в &lt;code&gt;pk_set&lt;/code&gt; , даже если они не влияют на базу данных.</target>
        </trans-unit>
        <trans-unit id="74408406b60615d45743eab1ddfc47c602695214" translate="yes" xml:space="preserve">
          <source>For the GeoJSON format, the SRID is set based on the &lt;code&gt;crs&lt;/code&gt; member. If &lt;code&gt;crs&lt;/code&gt; isn&amp;rsquo;t provided, the SRID defaults to 4326.</source>
          <target state="translated">Для формата GeoJSON SRID устанавливается на основе члена &lt;code&gt;crs&lt;/code&gt; . Если &lt;code&gt;crs&lt;/code&gt; не указан, по умолчанию SRID равен 4326.</target>
        </trans-unit>
        <trans-unit id="9f111011b98ce2f688d0ddb4f6a33b857e6e115a" translate="yes" xml:space="preserve">
          <source>For the best performance, we&amp;rsquo;re using the queryset&amp;rsquo;s &lt;a href=&quot;../../../topics/db/queries#topics-db-queries-update&quot;&gt;update method&lt;/a&gt;. Other types of actions might need to deal with each object individually; in these cases we&amp;rsquo;d iterate over the queryset:</source>
          <target state="translated">Для лучшей производительности мы используем &lt;a href=&quot;../../../topics/db/queries#topics-db-queries-update&quot;&gt;метод обновления&lt;/a&gt; набора запросов . Другие типы действий могут потребоваться для каждого объекта в отдельности; в этих случаях мы перебираем набор запросов:</target>
        </trans-unit>
        <trans-unit id="4c23379d68f25c8a9acdf7f3ba3f8e6d99a624b7" translate="yes" xml:space="preserve">
          <source>For the case of building up small HTML fragments, this function is to be preferred over string interpolation using &lt;code&gt;%&lt;/code&gt; or &lt;code&gt;str.format()&lt;/code&gt; directly, because it applies escaping to all arguments - just like the template system applies escaping by default.</source>
          <target state="translated">В случае создания небольших фрагментов HTML эта функция предпочтительнее интерполяции строк с использованием &lt;code&gt;%&lt;/code&gt; или &lt;code&gt;str.format()&lt;/code&gt; напрямую, потому что она применяется для экранирования всех аргументов - так же, как система шаблонов использует экранирование по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f78e1588dfac1ec79444a4df142e4e4efb203d49" translate="yes" xml:space="preserve">
          <source>For the contents of &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;, Django tries calling the methods &lt;code&gt;item_title()&lt;/code&gt; and &lt;code&gt;item_description()&lt;/code&gt; on the &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class. They are passed a single parameter, &lt;code&gt;item&lt;/code&gt;, which is the object itself. These are optional; by default, the string representation of the object is used for both.</source>
          <target state="translated">За содержание &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; , Django пытается вызова методов &lt;code&gt;item_title()&lt;/code&gt; и &lt;code&gt;item_description()&lt;/code&gt; на &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt; класса. Им передается единственный параметр &lt;code&gt;item&lt;/code&gt; , который является самим объектом. Это необязательно; по умолчанию строковое представление объекта используется для обоих.</target>
        </trans-unit>
        <trans-unit id="3a100b67f88e203f9dcb6a68b5070534af27c2cc" translate="yes" xml:space="preserve">
          <source>For the examples in this document, we&amp;rsquo;ll use the models defined in &lt;a href=&quot;../../../topics/db/queries&quot;&gt;Making queries&lt;/a&gt;.</source>
          <target state="translated">Для примеров в этом документе мы будем использовать модели, определенные в разделе &lt;a href=&quot;../../../topics/db/queries&quot;&gt;Создание запросов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0de8894d683bc582fefb2e2661e012c06af647e2" translate="yes" xml:space="preserve">
          <source>For the minimalists</source>
          <target state="translated">Для минималистов</target>
        </trans-unit>
        <trans-unit id="cef7fefd5112f5c97b053b255b193024fa56f694" translate="yes" xml:space="preserve">
          <source>For the most part though, this tutorial tries to explain as much as possible, so that it can be of use to the widest audience.</source>
          <target state="translated">Однако,по большей части,в этом учебнике делается попытка объяснить как можно больше,чтобы он мог быть полезен для самой широкой аудитории.</target>
        </trans-unit>
        <trans-unit id="4eda37e1e901383da0e9bcd8f2f89429a892e9c5" translate="yes" xml:space="preserve">
          <source>For the related lookup you can supply a primary key value or pass the related object explicitly:</source>
          <target state="translated">Для соответствующего поиска можно задать значение первичного ключа или передать связанный объект явно:</target>
        </trans-unit>
        <trans-unit id="b1c32504b6eeb2becd5604bc65d36c6e055e0d02" translate="yes" xml:space="preserve">
          <source>For the sake of clarity, this example contains only the bare minimum necessary to use the Django test runner. You may want to add command-line options for controlling verbosity, passing in specific test labels to run, etc.</source>
          <target state="translated">Для наглядности в этом примере содержится только необходимый минимум для использования тестового бегунка Django.Возможно,вы захотите добавить опции командной строки для контроля глаголов,прохождения определенных тестовых меток для запуска и т.д.</target>
        </trans-unit>
        <trans-unit id="5f11d49a6aae49822b402265acef00a873377414" translate="yes" xml:space="preserve">
          <source>For the sake of completeness, though, if you really want the local time in the current time zone, here&amp;rsquo;s how you can obtain it:</source>
          <target state="translated">Однако для полноты картины, если вы действительно хотите указать местное время в текущем часовом поясе, вот как вы можете его получить:</target>
        </trans-unit>
        <trans-unit id="da486ab20d9f226af43411c6fd7ef259674537fc" translate="yes" xml:space="preserve">
          <source>For the treatment of microseconds, see &lt;a href=&quot;#django.forms.DateTimeInput&quot;&gt;&lt;code&gt;DateTimeInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для обработки микросекунд, см. &lt;a href=&quot;#django.forms.DateTimeInput&quot;&gt; &lt;code&gt;DateTimeInput&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5dbe5bec942d606e0b22e5c8723738bfa4f7ae50" translate="yes" xml:space="preserve">
          <source>For these reasons, time zone support is enabled by default in new projects, and you should keep it unless you have a very good reason not to.</source>
          <target state="translated">По этим причинам,поддержка часовых поясов включена по умолчанию в новых проектах,и вы должны сохранять ее,если у вас нет очень веских причин не делать этого.</target>
        </trans-unit>
        <trans-unit id="6bfb383b014941483feb63040fddc8352fc62beb" translate="yes" xml:space="preserve">
          <source>For these situations, Django allows you to specify the model that will be used to govern the many-to-many relationship. You can then put extra fields on the intermediate model. The intermediate model is associated with the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; using the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through&quot;&gt;&lt;code&gt;through&lt;/code&gt;&lt;/a&gt; argument to point to the model that will act as an intermediary. For our musician example, the code would look something like this:</source>
          <target state="translated">В этих ситуациях Django позволяет вам указать модель, которая будет использоваться для управления отношением &amp;laquo;многие ко многим&amp;raquo;. Затем вы можете поместить дополнительные поля в промежуточную модель. Промежуточная модель связана с &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; ,&lt;/a&gt; использующей аргумент &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through&quot;&gt; &lt;code&gt;through&lt;/code&gt; ,&lt;/a&gt; указывающий на модель, которая будет выступать в качестве посредника. Для нашего примера музыканта код будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="1e718289bca18a5cf08106be68227bdbbc0cff38" translate="yes" xml:space="preserve">
          <source>For this example, we&amp;rsquo;ll migrate a collection of SHA1 hashes to use PBKDF2(SHA1(password)) and add the corresponding password hasher for checking if a user entered the correct password on login. We assume we&amp;rsquo;re using the built-in &lt;code&gt;User&lt;/code&gt; model and that our project has an &lt;code&gt;accounts&lt;/code&gt; app. You can modify the pattern to work with any algorithm or with a custom user model.</source>
          <target state="translated">В этом примере мы перенесем коллекцию хэшей SHA1 для использования PBKDF2 (SHA1 (пароль)) и добавим соответствующий хэш пароля для проверки, введен ли пользователем правильный пароль при входе в систему. Мы предполагаем, что используем встроенную модель &lt;code&gt;User&lt;/code&gt; и что в нашем проекте есть приложение для &lt;code&gt;accounts&lt;/code&gt; . Вы можете изменить шаблон для работы с любым алгоритмом или с пользовательской моделью пользователя.</target>
        </trans-unit>
        <trans-unit id="4c82d36cbfcfb825dad80c2b48699e4cff79ce4f" translate="yes" xml:space="preserve">
          <source>For this reason, Django also provides a number of mixins that provide more discrete functionality. Template rendering, for instance, is encapsulated in the &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt;. The Django reference documentation contains &lt;a href=&quot;../../ref/class-based-views/mixins&quot;&gt;full documentation of all the mixins&lt;/a&gt;.</source>
          <target state="translated">По этой причине Django также предоставляет несколько миксинов, которые обеспечивают более дискретную функциональность. Рендеринг шаблона, например, инкапсулирован в &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt; . Справочная документация Django содержит &lt;a href=&quot;../../ref/class-based-views/mixins&quot;&gt;полную документацию обо всех миксинах&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f36392b7c3c203f49f6a436c5f3171e9150a05e" translate="yes" xml:space="preserve">
          <source>For this reason, Django provides a helper class that lets you create a &lt;code&gt;Form&lt;/code&gt; class from a Django model.</source>
          <target state="translated">По этой причине Django предоставляет вспомогательный класс, который позволяет создавать класс &lt;code&gt;Form&lt;/code&gt; из модели Django.</target>
        </trans-unit>
        <trans-unit id="5892445e676a151c2605ebc83042a842018720fc" translate="yes" xml:space="preserve">
          <source>For this reason, it&amp;rsquo;s particularly important that all the models you&amp;rsquo;re using be defined in applications listed in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. Otherwise, backwards relations may not work properly.</source>
          <target state="translated">По этой причине особенно важно, чтобы все используемые вами модели были определены в приложениях, перечисленных в &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; . В противном случае обратные отношения могут не работать должным образом.</target>
        </trans-unit>
        <trans-unit id="03b8a2a8f9a2165b5055263ab7201d440c952bd7" translate="yes" xml:space="preserve">
          <source>For this reason, you should use named-string interpolation (e.g., &lt;code&gt;%(day)s&lt;/code&gt;) instead of positional interpolation (e.g., &lt;code&gt;%s&lt;/code&gt; or &lt;code&gt;%d&lt;/code&gt;) whenever you have more than a single parameter. If you used positional interpolation, translations wouldn&amp;rsquo;t be able to reorder placeholder text.</source>
          <target state="translated">По этой причине вы должны использовать интерполяцию именованных строк (например, &lt;code&gt;%(day)s&lt;/code&gt; ) вместо позиционной интерполяции (например, &lt;code&gt;%s&lt;/code&gt; или &lt;code&gt;%d&lt;/code&gt; ), если у вас есть более одного параметра. Если бы вы использовали позиционную интерполяцию, переводы не смогли бы переупорядочить текст заполнителя.</target>
        </trans-unit>
        <trans-unit id="58b0059d8e2444811f86ebb88bfabb7ef1ee4a71" translate="yes" xml:space="preserve">
          <source>For this to work, the &lt;code&gt;ForeignKey&lt;/code&gt; on the referencing model must have &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="translated">Чтобы это работало, &lt;code&gt;ForeignKey&lt;/code&gt; в модели ссылок должен иметь значение &lt;code&gt;null=True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8f825ebd874543d22305c1bc6781ad3c861ff54" translate="yes" xml:space="preserve">
          <source>For this tutorial and the ticket we&amp;rsquo;re working on, testing against SQLite is sufficient, however, it&amp;rsquo;s possible (and sometimes necessary) to &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;run the tests using a different database&lt;/a&gt;.</source>
          <target state="translated">Для этого урока и тикета, над которым мы работаем, достаточно &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;провести&lt;/a&gt; тестирование на SQLite, однако возможно (и иногда необходимо) выполнить тесты с использованием другой базы данных .</target>
        </trans-unit>
        <trans-unit id="19c61fad811ab178452b311f893f15851eed93a4" translate="yes" xml:space="preserve">
          <source>For this tutorial and the ticket we&amp;rsquo;re working on, testing against SQLite is sufficient, however, it&amp;rsquo;s possible (and sometimes necessary) to &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;run the tests using a different database&lt;/a&gt;.</source>
          <target state="translated">Для этого руководства и заявки, над которой мы работаем, достаточно тестирования SQLite, однако можно (а иногда и необходимо) &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;запускать тесты с использованием другой базы данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc5dc82579cf1e38bf802400f5653a407a69212" translate="yes" xml:space="preserve">
          <source>For this tutorial, we expect that you have at least a basic understanding of how Django works. This means you should be comfortable going through the existing tutorials on &lt;a href=&quot;tutorial01&quot;&gt;writing your first Django app&lt;/a&gt;. In addition, you should have a good understanding of Python itself. But if you don&amp;rsquo;t, &lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt; is a fantastic (and free) online book for beginning Python programmers.</source>
          <target state="translated">В этом уроке мы ожидаем, что у вас есть хотя бы базовое понимание того, как работает Django. Это означает, что вам должно быть удобно просматривать существующие учебники по &lt;a href=&quot;tutorial01&quot;&gt;написанию вашего первого приложения на Django&lt;/a&gt; . Кроме того, вы должны хорошо понимать сам Python. Но если вы этого не сделаете, &lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt; - фантастическая (и бесплатная) онлайн-книга для начинающих программистов на Python.</target>
        </trans-unit>
        <trans-unit id="e3383d2cd67e4a5fda4c38dfc0426ba59217d3de" translate="yes" xml:space="preserve">
          <source>For this tutorial, we&amp;rsquo;ll work on a &amp;ldquo;fake ticket&amp;rdquo; as a case study. Here are the imaginary details:</source>
          <target state="translated">Для этого урока мы будем работать над &amp;laquo;поддельным билетом&amp;raquo; в качестве примера. Вот мнимые детали:</target>
        </trans-unit>
        <trans-unit id="003691caf4ec5210cc2d137f90809630e129ddc7" translate="yes" xml:space="preserve">
          <source>For this tutorial, you&amp;rsquo;ll need Git installed to download the current development version of Django and to generate patch files for the changes you make.</source>
          <target state="translated">Для этого руководства вам понадобится установить Git, чтобы загрузить текущую версию Django для разработки и сгенерировать файлы исправлений для внесенных вами изменений.</target>
        </trans-unit>
        <trans-unit id="3ba7541a55fc9940dde992c1f6782e4722e85bb9" translate="yes" xml:space="preserve">
          <source>For this, Django provides full support for cookie- and session-based messaging, for both anonymous and authenticated users. The messages framework allows you to temporarily store messages in one request and retrieve them for display in a subsequent request (usually the next one). Every message is tagged with a specific &lt;code&gt;level&lt;/code&gt; that determines its priority (e.g., &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt;).</source>
          <target state="translated">Для этого Django обеспечивает полную поддержку обмена сообщениями на основе файлов cookie и сеансов как для анонимных, так и для аутентифицированных пользователей. Структура сообщений позволяет временно хранить сообщения в одном запросе и извлекать их для отображения в следующем запросе (обычно в следующем). Каждое сообщение помечается определенным &lt;code&gt;level&lt;/code&gt; который определяет его приоритет (например, &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;warning&lt;/code&gt; или &lt;code&gt;error&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0f6759276797b410a8844e478a10070c4aed5dcb" translate="yes" xml:space="preserve">
          <source>For those cases, it&amp;rsquo;s a good idea to write your own &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt;&lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt;&lt;/a&gt; implementation using a full-text indexed search.</source>
          <target state="translated">В этих случаях рекомендуется написать собственную реализацию &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt; &lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt; &lt;/a&gt; с использованием полнотекстового индексированного поиска.</target>
        </trans-unit>
        <trans-unit id="e0744e2ccd9373d4212b6ab0b38e803815456b58" translate="yes" xml:space="preserve">
          <source>For those templates that cannot be overridden in this way, you may still override them for your entire project by placing the new version in your &lt;code&gt;templates/admin&lt;/code&gt; directory. This is particularly useful to create custom 404 and 500 pages.</source>
          <target state="translated">Для тех шаблонов, которые не могут быть переопределены таким образом, вы все равно можете переопределить их для всего вашего проекта, поместив новую версию в каталог &lt;code&gt;templates/admin&lt;/code&gt; . Это особенно полезно для создания пользовательских 404 и 500 страниц.</target>
        </trans-unit>
        <trans-unit id="b208ce4d25990e2997ea3d38b9396df0cf665967" translate="yes" xml:space="preserve">
          <source>For use in, for example, Django templates, headers can also be looked up using underscores in place of hyphens:</source>
          <target state="translated">Для использования,например,в шаблонах Django,заголовки также можно искать с помощью подчёркиваний вместо дефисов:</target>
        </trans-unit>
        <trans-unit id="ab0a4460c2bfb4fb22cd663d783472b3f97d3b37" translate="yes" xml:space="preserve">
          <source>For user projects wishing to patch the backend that they&amp;rsquo;re using, this code should live in an &lt;a href=&quot;../applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Для пользовательских проектов, желающих исправлять используемый серверный код, этот код должен &lt;a href=&quot;../applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;AppConfig.ready()&lt;/code&gt; &lt;/a&gt; методе AppConfig.ready () .</target>
        </trans-unit>
        <trans-unit id="07063566677ca47cd9924e995ca5ba3cec95b3ab" translate="yes" xml:space="preserve">
          <source>For users familiar with &lt;code&gt;GDAL&lt;/code&gt;, this function has a similar functionality to the &lt;code&gt;gdalwarp&lt;/code&gt; command-line utility.</source>
          <target state="translated">Для пользователей, знакомых с &lt;code&gt;GDAL&lt;/code&gt; , эта функция аналогична &lt;code&gt;gdalwarp&lt;/code&gt; командной строки gdalwarp .</target>
        </trans-unit>
        <trans-unit id="06bdcf31ea0ff04912d506e7f82bc13ec5bb5e22" translate="yes" xml:space="preserve">
          <source>For users with JavaScript-enabled browsers, an &amp;ldquo;Add another&amp;rdquo; link is provided to enable any number of additional inlines to be added in addition to those provided as a result of the &lt;code&gt;extra&lt;/code&gt; argument.</source>
          <target state="translated">Для пользователей с браузерами с поддержкой JavaScript предоставляется ссылка &amp;laquo;Добавить еще&amp;raquo;, которая позволяет добавлять любое количество дополнительных строк в дополнение к тем, которые были предоставлены в результате &lt;code&gt;extra&lt;/code&gt; аргумента.</target>
        </trans-unit>
        <trans-unit id="ada8b1c0c7e4762ecd02cc10e6d34c709fb7333c" translate="yes" xml:space="preserve">
          <source>For words that don&amp;rsquo;t pluralize by simple suffix, you can specify both a singular and plural suffix, separated by a comma.</source>
          <target state="translated">Для слов, которые не используют множественное число с помощью простого суффикса, вы можете указать как суффикс единственного, так и множественного числа, разделенный запятой.</target>
        </trans-unit>
        <trans-unit id="9189cf15c77477aa96788ff42bdc189cfdeeae3d" translate="yes" xml:space="preserve">
          <source>For words that require a suffix other than &lt;code&gt;'s'&lt;/code&gt;, you can provide an alternate suffix as a parameter to the filter.</source>
          <target state="translated">Для слов, которые требуют суффикса, отличного от &lt;code&gt;'s'&lt;/code&gt; , вы можете указать альтернативный суффикс в качестве параметра фильтра.</target>
        </trans-unit>
        <trans-unit id="b98fa36f3c1fac6c6c9fb6936769d4049b9c86d9" translate="yes" xml:space="preserve">
          <source>Forbids access to user agents in the &lt;a href=&quot;settings#std:setting-DISALLOWED_USER_AGENTS&quot;&gt;&lt;code&gt;DISALLOWED_USER_AGENTS&lt;/code&gt;&lt;/a&gt; setting, which should be a list of compiled regular expression objects.</source>
          <target state="translated">Запрещает доступ к пользовательским агентам в параметре &lt;a href=&quot;settings#std:setting-DISALLOWED_USER_AGENTS&quot;&gt; &lt;code&gt;DISALLOWED_USER_AGENTS&lt;/code&gt; &lt;/a&gt; , который должен быть списком скомпилированных объектов регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="e9bb65c5b1c2c41fc169fe3b9894145c1c5118d6" translate="yes" xml:space="preserve">
          <source>Forces a single value to be printed without localization.</source>
          <target state="translated">заставляет печатать одно значение без локализации.</target>
        </trans-unit>
        <trans-unit id="3f04aae7964fff0403812c7d9880f99e05da0dca" translate="yes" xml:space="preserve">
          <source>Forces colorization of the command output if it would otherwise be disabled as discussed in &lt;a href=&quot;#syntax-coloring&quot;&gt;Syntax coloring&lt;/a&gt;. For example, you may want to pipe colored output to another command.</source>
          <target state="translated">Принудительно раскрашивает вывод команды, если в противном случае она будет отключена, как описано в &lt;a href=&quot;#syntax-coloring&quot;&gt;разделе Синтаксическая раскраска&lt;/a&gt; . Например, вы можете передать цветной вывод другой команде.</target>
        </trans-unit>
        <trans-unit id="822e3ae3ae56ada85c883e445685735f0bbbcec4" translate="yes" xml:space="preserve">
          <source>Forces conversion of a single value to UTC.</source>
          <target state="translated">Преобразование силы одного значения в UTC.</target>
        </trans-unit>
        <trans-unit id="5caa08849dd0053ad328db7f9b3ff99f454470ea" translate="yes" xml:space="preserve">
          <source>Forces conversion of a single value to an arbitrary timezone.</source>
          <target state="translated">Силы преобразуют одно значение в произвольный часовой пояс.</target>
        </trans-unit>
        <trans-unit id="e426af8da5cef513c96ebd4f7c9bfa88a37b7b60" translate="yes" xml:space="preserve">
          <source>Forces conversion of a single value to the current time zone.</source>
          <target state="translated">Преобразование силы одного значения в текущий часовой пояс.</target>
        </trans-unit>
        <trans-unit id="a07ffdebe3aa947ee8237843fa13c48509367e20" translate="yes" xml:space="preserve">
          <source>Forces localization of a single value.</source>
          <target state="translated">Локализация сил одной величины.</target>
        </trans-unit>
        <trans-unit id="9e0dd243e1a006f16098fbe2024ebd28fadc865e" translate="yes" xml:space="preserve">
          <source>Forces the result type of &lt;code&gt;expression&lt;/code&gt; to be the one from &lt;code&gt;output_field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output_field&lt;/code&gt; тип результата &lt;code&gt;expression&lt;/code&gt; быть из поля output_field .</target>
        </trans-unit>
        <trans-unit id="f2b3c637d3f8c4c084704e12352f97315c5d4107" translate="yes" xml:space="preserve">
          <source>Forcing an INSERT or UPDATE</source>
          <target state="translated">Принуждение к выдаче разрешения или отсрочки.</target>
        </trans-unit>
        <trans-unit id="530998ad30299518dd632fa0a637000def19dde4" translate="yes" xml:space="preserve">
          <source>Foreign keys and other relational fields are treated a little bit differently:</source>
          <target state="translated">Иностранные ключи и другие поля отношений обрабатываются немного по-другому:</target>
        </trans-unit>
        <trans-unit id="04c75ed6126142c00cbf64860dcf32223aa3747e" translate="yes" xml:space="preserve">
          <source>Foreign keys have the PK of the linked object as property value. ManyToMany-relations are serialized for the model that defines them and are represented as a list of PKs.</source>
          <target state="translated">Иностранные ключи имеют PK связанного объекта в качестве значения свойства.МногиеТоМани-отношения сериализуются для модели,которая их определяет,и представляются в виде списка PK.</target>
        </trans-unit>
        <trans-unit id="745daba0e4002e3d54aa9d6b189f69ba7c4cc16a" translate="yes" xml:space="preserve">
          <source>ForeignKeys which are set to &lt;a href=&quot;fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;on_delete&lt;/code&gt;&lt;/a&gt;&lt;code&gt;DO_NOTHING&lt;/code&gt; do not prevent taking the fast-path in deletion.</source>
          <target state="translated">ForeignKeys, для которых установлено значение &lt;a href=&quot;fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;on_delete&lt;/code&gt; &lt;/a&gt; &lt;code&gt;DO_NOTHING&lt;/code&gt; , не мешают использовать быстрый путь при удалении.</target>
        </trans-unit>
        <trans-unit id="2489b02dae69de015f9de7cb4db5c89918c8cd7d" translate="yes" xml:space="preserve">
          <source>Form Assets (the &lt;code&gt;Media&lt;/code&gt; class)</source>
          <target state="translated">Форма Активы ( &lt;code&gt;Media&lt;/code&gt; класс)</target>
        </trans-unit>
        <trans-unit id="01a5a80fc4c5200a64766a92d4a28630919a7770" translate="yes" xml:space="preserve">
          <source>Form Assets (the Media class)</source>
          <target state="translated">Форма Активы (класс носителя)</target>
        </trans-unit>
        <trans-unit id="ec53fec3838c580c1606daf2ba913c19e7f397ef" translate="yes" xml:space="preserve">
          <source>Form and field validation</source>
          <target state="translated">Проверка формы и поля</target>
        </trans-unit>
        <trans-unit id="09f0d1b7d7b094ba60d98ec9c162680471e8fcdb" translate="yes" xml:space="preserve">
          <source>Form data sent back to a Django website is processed by a view, generally the same view which published the form. This allows us to reuse some of the same logic.</source>
          <target state="translated">Данные формы,отправленные обратно на сайт Django,обрабатываются просмотром,как правило,тем же просмотром,который был опубликован в форме.Это позволяет нам использовать одну и ту же логику.</target>
        </trans-unit>
        <trans-unit id="132a07dcd88034f7872ce5ce9eeba14f9347a298" translate="yes" xml:space="preserve">
          <source>Form field</source>
          <target state="translated">Поле формы</target>
        </trans-unit>
        <trans-unit id="ca3178e6c90e7443b1f4979a04f5a830118e6a98" translate="yes" xml:space="preserve">
          <source>Form field classes</source>
          <target state="translated">Классы поля формы</target>
        </trans-unit>
        <trans-unit id="9b22fafbf6163cf73da647f5d6f7de7e69bb5b01" translate="yes" xml:space="preserve">
          <source>Form field default cleaning</source>
          <target state="translated">Очистка полей формы по умолчанию</target>
        </trans-unit>
        <trans-unit id="1f6db618e80ce9357df221435126e47594b4defe" translate="yes" xml:space="preserve">
          <source>Form fields</source>
          <target state="translated">Поля формы</target>
        </trans-unit>
        <trans-unit id="06186bd1d81c2e104f10dd5dc873f3af209bd827" translate="yes" xml:space="preserve">
          <source>Form handling with class-based views</source>
          <target state="translated">Обработка форм с помощью представлений на основе классов</target>
        </trans-unit>
        <trans-unit id="8b7e8e44aecc63eea58ade5e9e8e168e11c4b85f" translate="yes" xml:space="preserve">
          <source>Form inheritance</source>
          <target state="translated">Форма наследования</target>
        </trans-unit>
        <trans-unit id="8b5ca657a23a71cab768e9a3681b5b2d4ab7ea4e" translate="yes" xml:space="preserve">
          <source>Form processing generally has 3 paths:</source>
          <target state="translated">Обработка форм обычно имеет 3 пути:</target>
        </trans-unit>
        <trans-unit id="d23233f6cbe877e4c4d726618ca650d72fcebb80" translate="yes" xml:space="preserve">
          <source>Form rendering options</source>
          <target state="translated">Параметры рендеринга формы</target>
        </trans-unit>
        <trans-unit id="5f9b2b4c718c49d0b300d0a87b4e55a27a7053f3" translate="yes" xml:space="preserve">
          <source>Form submission</source>
          <target state="translated">Представление формы</target>
        </trans-unit>
        <trans-unit id="25e11f455fdefcd79d2329575ecb3c7c9746d479" translate="yes" xml:space="preserve">
          <source>Form validation happens when the data is cleaned. If you want to customize this process, there are various places to make changes, each one serving a different purpose. Three types of cleaning methods are run during form processing. These are normally executed when you call the &lt;code&gt;is_valid()&lt;/code&gt; method on a form. There are other things that can also trigger cleaning and validation (accessing the &lt;code&gt;errors&lt;/code&gt; attribute or calling &lt;code&gt;full_clean()&lt;/code&gt; directly), but normally they won&amp;rsquo;t be needed.</source>
          <target state="translated">Проверка формы происходит при очистке данных. Если вы хотите настроить этот процесс, существуют различные места для внесения изменений, каждое из которых служит своей цели. Во время обработки формы запускаются три типа очистки. Обычно они выполняются, когда вы вызываете метод &lt;code&gt;is_valid()&lt;/code&gt; в форме. Есть и другие вещи, которые также могут инициировать очистку и проверку (доступ к атрибуту &lt;code&gt;errors&lt;/code&gt; или &lt;code&gt;full_clean()&lt;/code&gt; вызов full_clean () ), но обычно они не нужны.</target>
        </trans-unit>
        <trans-unit id="18ff0c843b5c4606dfbf89086c0062c96a51ee51" translate="yes" xml:space="preserve">
          <source>Form widgets</source>
          <target state="translated">Форма виджетов</target>
        </trans-unit>
        <trans-unit id="69b17d1e5286bd4a97be2e001b1a1ed61189d9d0" translate="yes" xml:space="preserve">
          <source>FormView inherits &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt; so &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; can be used here.</source>
          <target state="translated">FormView наследует &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; ,&lt;/a&gt; поэтому здесь можно использовать &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="f761dac6d61c3dab28b3202e4de799514d3abe49" translate="yes" xml:space="preserve">
          <source>Format character</source>
          <target state="translated">Символ формата</target>
        </trans-unit>
        <trans-unit id="2783ae4db40a146cdb58fa9a0e4c57e3159ff9f2" translate="yes" xml:space="preserve">
          <source>Format localization</source>
          <target state="translated">Локализация формата</target>
        </trans-unit>
        <trans-unit id="db9ee596ec25be3f524ab362d52ac677a6533537" translate="yes" xml:space="preserve">
          <source>Formats a date according to the given format.</source>
          <target state="translated">Форматирует дату в соответствии с заданным форматом.</target>
        </trans-unit>
        <trans-unit id="28c9a03c31eaadefb25c3d8a7eddaff4dda4cbfa" translate="yes" xml:space="preserve">
          <source>Formats a date as the time since that date (e.g., &amp;ldquo;4 days, 6 hours&amp;rdquo;).</source>
          <target state="translated">Форматирует дату как время с этой даты (например, &amp;laquo;4 дня, 6 часов&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="6a86188cd1a56d88dcdc7bb13c27bc8b1c0b3dd0" translate="yes" xml:space="preserve">
          <source>Formats a time according to the given format.</source>
          <target state="translated">Форматирует время в соответствии с заданным форматом.</target>
        </trans-unit>
        <trans-unit id="93dc7127a492726376ff651ba9b34d2497d31b92" translate="yes" xml:space="preserve">
          <source>Formats and translates &lt;a href=&quot;#django.contrib.admin.models.LogEntry.change_message&quot;&gt;&lt;code&gt;change_message&lt;/code&gt;&lt;/a&gt; into the current user language. Messages created before Django 1.10 will always be displayed in the language in which they were logged.</source>
          <target state="translated">Форматирует и переводит &lt;a href=&quot;#django.contrib.admin.models.LogEntry.change_message&quot;&gt; &lt;code&gt;change_message&lt;/code&gt; &lt;/a&gt; на текущий язык пользователя. Сообщения, созданные до Django 1.10, всегда будут отображаться на том языке, на котором они были зарегистрированы.</target>
        </trans-unit>
        <trans-unit id="953c2178bd89fc436574c8caeaf590cdaa172ee1" translate="yes" xml:space="preserve">
          <source>Formats the time to match the &lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1123#section-5.2.14&lt;/strong&gt;&lt;/a&gt; date format as specified by HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.1.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Форматирует время для соответствия &lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;формату&lt;/strong&gt;&lt;/a&gt; даты &lt;strong&gt;RFC 1123 # section-5.2.14&lt;/strong&gt; , как указано в HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231 # section-7.1.1.1&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28ba1c123ca93374d5c3f871a89409c3a8a7b027" translate="yes" xml:space="preserve">
          <source>Formats the time to match the &lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1123#section-5.2.14&lt;/strong&gt;&lt;/a&gt; date format as specified by HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.1.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Форматирует время в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;форматом&lt;/strong&gt;&lt;/a&gt; даты &lt;strong&gt;RFC 1123 # section-5.2.14&lt;/strong&gt; , как указано в HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231 # section-7.1.1.1&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6fd4bf74432ce4e2ddad669c637aa42be7e4983" translate="yes" xml:space="preserve">
          <source>Formats the value like a &amp;ldquo;human-readable&amp;rdquo; file size (i.e. &lt;code&gt;'13 KB'&lt;/code&gt;, &lt;code&gt;'4.1 MB'&lt;/code&gt;, &lt;code&gt;'102 bytes'&lt;/code&gt;, etc.). For example:</source>
          <target state="translated">Форматирует значение, например, &amp;laquo;читаемый человеком&amp;raquo; размер файла (т. &lt;code&gt;'13 KB'&lt;/code&gt; , &lt;code&gt;'4.1 MB'&lt;/code&gt; , &lt;code&gt;'102 bytes'&lt;/code&gt; и т. Д.). Например:</target>
        </trans-unit>
        <trans-unit id="5d20ce17b112270cc159f79b2633904b994c0e40" translate="yes" xml:space="preserve">
          <source>Formats the value like a &amp;lsquo;human-readable&amp;rsquo; file size (i.e. &lt;code&gt;'13 KB'&lt;/code&gt;, &lt;code&gt;'4.1 MB'&lt;/code&gt;, &lt;code&gt;'102 bytes'&lt;/code&gt;, etc.).</source>
          <target state="translated">Форматирует значение, например, &amp;laquo;читаемый человеком&amp;raquo; размер файла (т. &lt;code&gt;'13 KB'&lt;/code&gt; , &lt;code&gt;'4.1 MB'&lt;/code&gt; , &lt;code&gt;'102 bytes'&lt;/code&gt; и т. Д.).</target>
        </trans-unit>
        <trans-unit id="cc8ade43c35d4aa9d67e1a79527ff8a39de50a5f" translate="yes" xml:space="preserve">
          <source>Formats the variable according to the argument, a string formatting specifier. This specifier uses the &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;printf-style String Formatting&lt;/a&gt; syntax, with the exception that the leading &amp;ldquo;%&amp;rdquo; is dropped.</source>
          <target state="translated">Форматирует переменную в соответствии с аргументом, спецификатором форматирования строки. Этот спецификатор использует синтаксис &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;String Formatting в стиле printf&lt;/a&gt; , за исключением того, что ведущий &amp;laquo;%&amp;raquo; удаляется.</target>
        </trans-unit>
        <trans-unit id="e235045d3159d9680e6b2ca8af0bb926f4f21e79" translate="yes" xml:space="preserve">
          <source>Formatters</source>
          <target state="translated">Formatters</target>
        </trans-unit>
        <trans-unit id="ae08568bf3e0252178af230ef89a5c406780c364" translate="yes" xml:space="preserve">
          <source>Formatting strings: &lt;code&gt;format_lazy()&lt;/code&gt;</source>
          <target state="translated">Форматирование строк: &lt;code&gt;format_lazy()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="d89f0c64a4949e7005972d47aa88597204d94d1b" translate="yes" xml:space="preserve">
          <source>Forms and Cross Site Request Forgery protection</source>
          <target state="translated">Защита форм и межсайтовых запросов Формы и межсайтовые запросы Подделка</target>
        </trans-unit>
        <trans-unit id="1a78423c2585a7306a030f845b72b53407d6a3d9" translate="yes" xml:space="preserve">
          <source>Forms and view tools for logging in users, or restricting content</source>
          <target state="translated">Формы и инструменты просмотра для входа в систему пользователей или ограничения контента</target>
        </trans-unit>
        <trans-unit id="abebd9a2b41a12ca79e7f50192b53b0dd9e36099" translate="yes" xml:space="preserve">
          <source>Forms and widgets can specify custom renderer classes.</source>
          <target state="translated">Формы и виджеты могут задавать пользовательские классы рендеринга.</target>
        </trans-unit>
        <trans-unit id="b3b9595e1333e8d116512ac45e4fceb8697fcd3f" translate="yes" xml:space="preserve">
          <source>Forms in Django</source>
          <target state="translated">Формы в Django</target>
        </trans-unit>
        <trans-unit id="3924338526abac54edb63488cd56ed8868605157" translate="yes" xml:space="preserve">
          <source>Formset API reference. For introductory material about formsets, see the &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;Formsets&lt;/a&gt; topic guide.</source>
          <target state="translated">Справочник по API Formset. Вводный материал о наборах форм см. В &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;руководстве по&lt;/a&gt; темам &amp;laquo; Наборы форм&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="5d33d2153056db97a572c779e328f56f62c0e59b" translate="yes" xml:space="preserve">
          <source>Formset Functions</source>
          <target state="translated">Форменные функции</target>
        </trans-unit>
        <trans-unit id="70c7c64d1100244a0311cbea1b3c65a2aa139032" translate="yes" xml:space="preserve">
          <source>Formset validation</source>
          <target state="translated">Проверка форм</target>
        </trans-unit>
        <trans-unit id="010e393a05ca880fc34de07a101163e70e23785d" translate="yes" xml:space="preserve">
          <source>Formsets</source>
          <target state="translated">Formsets</target>
        </trans-unit>
        <trans-unit id="f0a26bc3be8c85f51f36bd53b9f5be44b92cc34b" translate="yes" xml:space="preserve">
          <source>Formsets can also be indexed into, which returns the corresponding form. If you override &lt;code&gt;__iter__&lt;/code&gt;, you will need to also override &lt;code&gt;__getitem__&lt;/code&gt; to have matching behavior.</source>
          <target state="translated">Formsets также могут быть проиндексированы, что возвращает соответствующую форму. Если вы переопределяете &lt;code&gt;__iter__&lt;/code&gt; , вам также нужно переопределить &lt;code&gt;__getitem__&lt;/code&gt; , чтобы иметь соответствующее поведение.</target>
        </trans-unit>
        <trans-unit id="c1c960670c1e56575f03efb06db7b42a1a10af69" translate="yes" xml:space="preserve">
          <source>Formtools</source>
          <target state="translated">Formtools</target>
        </trans-unit>
        <trans-unit id="36ca1cdf4b812de1cd2a6206ed54566f2f58a310" translate="yes" xml:space="preserve">
          <source>Fortunately, HTTP provides a solution to this problem. A number of HTTP headers exist to instruct downstream caches to differ their cache contents depending on designated variables, and to tell caching mechanisms not to cache particular pages. We&amp;rsquo;ll look at some of these headers in the sections that follow.</source>
          <target state="translated">К счастью, HTTP обеспечивает решение этой проблемы. Существует несколько заголовков HTTP, которые дают указание нижестоящим кешам различать содержимое кеша в зависимости от назначенных переменных и сообщают механизмам кеширования не кешировать определенные страницы. Мы рассмотрим некоторые из этих заголовков в следующих разделах.</target>
        </trans-unit>
        <trans-unit id="da0de0fd7e1486d9a80baf7eaf4087001415bfa1" translate="yes" xml:space="preserve">
          <source>Fortunately, there&amp;rsquo;s a little bug in the &lt;code&gt;polls&lt;/code&gt; application for us to fix right away: the &lt;code&gt;Question.was_published_recently()&lt;/code&gt; method returns &lt;code&gt;True&lt;/code&gt; if the &lt;code&gt;Question&lt;/code&gt; was published within the last day (which is correct) but also if the &lt;code&gt;Question&lt;/code&gt;&amp;rsquo;s &lt;code&gt;pub_date&lt;/code&gt; field is in the future (which certainly isn&amp;rsquo;t).</source>
          <target state="translated">К счастью, есть небольшая ошибка в &lt;code&gt;polls&lt;/code&gt; приложение для нас , чтобы исправить сразу: в &lt;code&gt;Question.was_published_recently()&lt;/code&gt; метод возвращает &lt;code&gt;True&lt;/code&gt; , если &lt;code&gt;Question&lt;/code&gt; был опубликован в последний день (что правильно) , но и , если &lt;code&gt;Question&lt;/code&gt; &amp;laquo;s &lt;code&gt;pub_date&lt;/code&gt; поле в будущем (что, конечно, нет).</target>
        </trans-unit>
        <trans-unit id="ba4e72261283258434788542ba397135c10f39d8" translate="yes" xml:space="preserve">
          <source>Forward</source>
          <target state="translated">Forward</target>
        </trans-unit>
        <trans-unit id="e425397879f8bd866baafbd76513bb7fcb6a1d82" translate="yes" xml:space="preserve">
          <source>Forward access to one-to-many relationships is cached the first time the related object is accessed. Subsequent accesses to the foreign key on the same object instance are cached. Example:</source>
          <target state="translated">Прямой доступ к отношениям &quot;один-ко-многим&quot; кэшируется при первом доступе к связанному объекту.Последующий доступ к инородному ключу на том же экземпляре объекта кэшируется.Пример:</target>
        </trans-unit>
        <trans-unit id="cfd2f8e5ac40daa45638695e2abc70d1935d60f3" translate="yes" xml:space="preserve">
          <source>Fractional seconds support for Time and DateTime fields</source>
          <target state="translated">Поддержка полей Time и DateTime (Время и дата)в считанные секунды.</target>
        </trans-unit>
        <trans-unit id="e3e7a3833d19706ebf33b2c3baf8e05deeed7bca" translate="yes" xml:space="preserve">
          <source>Frames</source>
          <target state="translated">Frames</target>
        </trans-unit>
        <trans-unit id="2b70ec7fe162c7688570e8b7b07c45bad5b45c6a" translate="yes" xml:space="preserve">
          <source>Frames narrow the rows that are used for computing the result. They shift from some start point to some specified end point. Frames can be used with and without partitions, but it&amp;rsquo;s often a good idea to specify an ordering of the window to ensure a deterministic result. In a frame, a peer in a frame is a row with an equivalent value, or all rows if an ordering clause isn&amp;rsquo;t present.</source>
          <target state="translated">Кадры сужают строки, которые используются для вычисления результата. Они сдвигаются от некоторой начальной точки к некоторой указанной конечной точке. Кадры можно использовать как с разделителями, так и без них, но часто рекомендуется указывать порядок окна для обеспечения детерминированного результата. Во фрейме одноранговый элемент во фрейме - это строка с эквивалентным значением или все строки, если отсутствует условие упорядочения.</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">Часто задаваемые вопросы</target>
        </trans-unit>
        <trans-unit id="fcc787d7a7793eefb7e8d97ed3e0b42646c5a64e" translate="yes" xml:space="preserve">
          <source>From MySQL 5.7 onwards and on fresh installs of MySQL 5.6, the default value of the &lt;code&gt;sql_mode&lt;/code&gt; option contains &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt;. That option escalates warnings into errors when data are truncated upon insertion, so Django highly recommends activating a &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-mode.html#sql-mode-strict&quot;&gt;strict mode&lt;/a&gt; for MySQL to prevent data loss (either &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt; or &lt;code&gt;STRICT_ALL_TABLES&lt;/code&gt;).</source>
          <target state="translated">Начиная с MySQL 5.7 и более &lt;code&gt;sql_mode&lt;/code&gt; &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt; MySQL 5.6, значение по умолчанию для опции sql_mode содержит STRICT_TRANS_TABLES . Эта опция преобразует предупреждения в ошибки, когда данные обрезаются при вставке, поэтому Django настоятельно рекомендует активировать &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-mode.html#sql-mode-strict&quot;&gt;строгий режим&lt;/a&gt; для MySQL, чтобы предотвратить потерю данных (либо &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt; , либо &lt;code&gt;STRICT_ALL_TABLES&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bc66434aa730a1acc6949077414a98d4f5a85ee6" translate="yes" xml:space="preserve">
          <source>From outward appearances, this looks like the query has retrieved both the first name and last name. However, this example actually issued 3 queries. Only the first names were retrieved by the raw() query &amp;ndash; the last names were both retrieved on demand when they were printed.</source>
          <target state="translated">По внешнему виду это выглядит так, как будто запрос получил имя и фамилию. Однако этот пример фактически выдал 3 запроса. По запросу raw () были получены только первые имена - оба имени были получены по требованию при печати.</target>
        </trans-unit>
        <trans-unit id="a5490de1ed84545df48870ebcb4ef860e0011f37" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt;: An instance of &lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; representing the currently logged-in user. If the user isn&amp;rsquo;t currently logged in, &lt;code&gt;user&lt;/code&gt; will be set to an instance of &lt;a href=&quot;contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt;. You can tell them apart with &lt;a href=&quot;contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt;, like so:</source>
          <target state="translated">Из &lt;a href=&quot;middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt; : экземпляр &lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; ,&lt;/a&gt; представляющий текущего пользователя, вошедшего в систему. Если пользователь не вошел в систему, для &lt;code&gt;user&lt;/code&gt; будет установлен экземпляр &lt;a href=&quot;contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt; . Вы можете отличить их с помощью &lt;a href=&quot;contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt; &lt;code&gt;is_authenticated&lt;/code&gt; &lt;/a&gt; , вот так:</target>
        </trans-unit>
        <trans-unit id="e4390d233b552a299b710cead7d140cf5b140794" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;SessionMiddleware&lt;/code&gt;&lt;/a&gt;: A readable and writable, dictionary-like object that represents the current session.</source>
          <target state="translated">Из &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt; &lt;code&gt;SessionMiddleware&lt;/code&gt; &lt;/a&gt; : доступный для чтения и записи словарь-объект, представляющий текущий сеанс.</target>
        </trans-unit>
        <trans-unit id="01c2533dcbf8d501ec5fbb5318b65a5832021da3" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;middleware#django.contrib.sites.middleware.CurrentSiteMiddleware&quot;&gt;&lt;code&gt;CurrentSiteMiddleware&lt;/code&gt;&lt;/a&gt;: An instance of &lt;a href=&quot;contrib/sites#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;contrib/sites#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;RequestSite&lt;/code&gt;&lt;/a&gt; as returned by &lt;a href=&quot;contrib/sites#django.contrib.sites.shortcuts.get_current_site&quot;&gt;&lt;code&gt;get_current_site()&lt;/code&gt;&lt;/a&gt; representing the current site.</source>
          <target state="translated">Из &lt;a href=&quot;middleware#django.contrib.sites.middleware.CurrentSiteMiddleware&quot;&gt; &lt;code&gt;CurrentSiteMiddleware&lt;/code&gt; &lt;/a&gt; : экземпляр &lt;a href=&quot;contrib/sites#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;contrib/sites#django.contrib.sites.requests.RequestSite&quot;&gt; &lt;code&gt;RequestSite&lt;/code&gt; ,&lt;/a&gt; возвращаемый &lt;a href=&quot;contrib/sites#django.contrib.sites.shortcuts.get_current_site&quot;&gt; &lt;code&gt;get_current_site()&lt;/code&gt; &lt;/a&gt; представляющим текущий сайт.</target>
        </trans-unit>
        <trans-unit id="28206f22cdc49d67262192e2ec75592be29e1e10" translate="yes" xml:space="preserve">
          <source>From the command line, &lt;code&gt;cd&lt;/code&gt; into a directory where you&amp;rsquo;d like to store your code, then run the following command:</source>
          <target state="translated">В командной строке &lt;code&gt;cd&lt;/code&gt; в каталог, в котором вы хотите сохранить свой код, а затем выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="e4203645cf245f13a9b5b7eef7c6236f37d97062" translate="yes" xml:space="preserve">
          <source>From then on, you can insert the current value of the cycle wherever you&amp;rsquo;d like in your template by referencing the cycle name as a context variable. If you want to move the cycle to the next value independently of the original &lt;code&gt;cycle&lt;/code&gt; tag, you can use another &lt;code&gt;cycle&lt;/code&gt; tag and specify the name of the variable. So, the following template:</source>
          <target state="translated">С этого момента вы можете вставлять текущее значение цикла в любое место вашего шаблона, ссылаясь на имя цикла как переменную контекста. Если вы хотите переместить цикл к следующему значению независимо от исходного тега &lt;code&gt;cycle&lt;/code&gt; , вы можете использовать другой тег &lt;code&gt;cycle&lt;/code&gt; и указать имя переменной. Итак, следующий шаблон:</target>
        </trans-unit>
        <trans-unit id="abd4b62bdfa157a8de63903b441ea96244832915" translate="yes" xml:space="preserve">
          <source>From within the Application Stack Builder (to run outside of the installer, Start ‣ Programs ‣ PostgreSQL 9.x), select PostgreSQL Database Server 9.x on port 5432 from the drop down menu. Next, expand the Categories ‣ Spatial Extensions menu tree and select PostGIS X.Y for PostgreSQL 9.x.</source>
          <target state="translated">В Конструкторе Стека Приложений (для запуска вне инсталлятора запустите ‣ Programs ‣ PostgreSQL 9.x),в выпадающем меню выберите PostgreSQL Database Server 9.x на порту 5432.Далее разверните дерево меню Categories ‣ Spatial Extensions (Пространственные расширения)и выберите PostGIS X.Y для PostgreSQL 9.x.</target>
        </trans-unit>
        <trans-unit id="82e8ee228f3b66a73db0fd74571edb0fe23f9a95" translate="yes" xml:space="preserve">
          <source>From within the Stack Builder (to run outside of the installer, Start ‣ PostgreSQL 12 ‣ Application Stack Builder), select PostgreSQL 12 (x64) on port 5432 from the drop down menu and click next. Expand the Categories ‣ Spatial Extensions menu tree and select PostGIS X.Y for PostgreSQL 12.</source>
          <target state="translated">В Конструкторе Стеков (для запуска вне программы установки,запустите ‣ PostgreSQL 12 ‣ Application Stack Builder),в выпадающем меню выберите PostgreSQL 12 (x64)на порту 5432 и нажмите далее.Разверните дерево меню Categories ‣ Spatial Extensions (Пространственные расширения)и выберите PostGIS X.Y для PostgreSQL 12.</target>
        </trans-unit>
        <trans-unit id="1e91c62a82f35fb349a4fdae32a9501dc3b57fbe" translate="yes" xml:space="preserve">
          <source>Full DSN and Easy Connect</source>
          <target state="translated">Полный DSN и Easy Connect</target>
        </trans-unit>
        <trans-unit id="e86b3e585198c95bce6aef7747541d9f96bbd00d" translate="yes" xml:space="preserve">
          <source>Full Python path to the application, e.g. &lt;code&gt;'django.contrib.admin'&lt;/code&gt;.</source>
          <target state="translated">Полный путь Python к приложению, например, &lt;code&gt;'django.contrib.admin'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd23939c002b10cde0a26228db88f6c8b97d3213" translate="yes" xml:space="preserve">
          <source>Full URL: send the entire URL in the &lt;code&gt;Referer&lt;/code&gt; header. For example, if the user is visiting &lt;code&gt;https://example.com/page.html&lt;/code&gt;, the &lt;code&gt;Referer&lt;/code&gt; header would contain &lt;code&gt;&quot;https://example.com/page.html&quot;&lt;/code&gt;.</source>
          <target state="translated">Полный URL: отправьте весь URL в заголовке &lt;code&gt;Referer&lt;/code&gt; . Например, если пользователь посещает &lt;code&gt;https://example.com/page.html&lt;/code&gt; , заголовок &lt;code&gt;Referer&lt;/code&gt; будет содержать &lt;code&gt;&quot;https://example.com/page.html&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d57d832e96db7330b107b719df41920ebb9f9602" translate="yes" xml:space="preserve">
          <source>Full import path of a serializer class to use for serializing session data. Included serializers are:</source>
          <target state="translated">Полный путь импорта класса сериализатора для использования для сериализации данных сеанса.Сериализаторы включены в комплект поставки:</target>
        </trans-unit>
        <trans-unit id="8ec461c73e449e432c7752507d77fd5cb2f69a4c" translate="yes" xml:space="preserve">
          <source>Full name or alias(es)</source>
          <target state="translated">Полное имя или псевдоним</target>
        </trans-unit>
        <trans-unit id="24eafd34f2c5835ead6dd64dc0e0e76590fef7aa" translate="yes" xml:space="preserve">
          <source>Full text search</source>
          <target state="translated">Полнотекстовый поиск</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="ef8fc408c280b6c40a19f17f903d961ae3051464" translate="yes" xml:space="preserve">
          <source>Function&amp;rsquo;s summary:</source>
          <target state="translated">Краткое описание функции:</target>
        </trans-unit>
        <trans-unit id="157df04ee53dd9c987d0ba9575b50f982531a951" translate="yes" xml:space="preserve">
          <source>Functions and classes for working with &amp;ldquo;safe strings&amp;rdquo;: strings that can be displayed safely without further escaping in HTML. Marking something as a &amp;ldquo;safe string&amp;rdquo; means that the producer of the string has already turned characters that should not be interpreted by the HTML engine (e.g. &amp;lsquo;&amp;lt;&amp;rsquo;) into the appropriate entities.</source>
          <target state="translated">Функции и классы для работы с &amp;laquo;безопасными строками&amp;raquo;: строки, которые могут отображаться безопасно, без последующего перехода в HTML. Пометка чего-либо как &amp;laquo;безопасной строки&amp;raquo; означает, что производитель строки уже превратил символы, которые не должны интерпретироваться механизмом HTML (например, &amp;laquo;&amp;lt;&amp;raquo;), в соответствующие объекты.</target>
        </trans-unit>
        <trans-unit id="9bd77944f3068c168ecfbb2db948688c50c766c3" translate="yes" xml:space="preserve">
          <source>Functions for working with Python modules.</source>
          <target state="translated">Функции для работы с модулями Python.</target>
        </trans-unit>
        <trans-unit id="2c588fee9a38a1178c2a3f53d498d3e8b92c5c75" translate="yes" xml:space="preserve">
          <source>Functions of particular interest are &lt;a href=&quot;../../ref/utils#django.utils.translation.get_language&quot;&gt;&lt;code&gt;django.utils.translation.get_language()&lt;/code&gt;&lt;/a&gt; which returns the language used in the current thread, &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt; which activates a translation catalog for the current thread, and &lt;a href=&quot;../../ref/utils#django.utils.translation.check_for_language&quot;&gt;&lt;code&gt;django.utils.translation.check_for_language()&lt;/code&gt;&lt;/a&gt; which checks if the given language is supported by Django.</source>
          <target state="translated">Особый интерес представляют функции &lt;a href=&quot;../../ref/utils#django.utils.translation.get_language&quot;&gt; &lt;code&gt;django.utils.translation.get_language()&lt;/code&gt; &lt;/a&gt; которая возвращает язык, используемый в текущем потоке, &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt; который активирует каталог перевода для текущего потока, и &lt;a href=&quot;../../ref/utils#django.utils.translation.check_for_language&quot;&gt; &lt;code&gt;django.utils.translation.check_for_language()&lt;/code&gt; &lt;/a&gt; который проверяет, поддерживается ли данный язык Django.</target>
        </trans-unit>
        <trans-unit id="fe29fa848ab0fa934dbf60165599b48d69a06c00" translate="yes" xml:space="preserve">
          <source>Functions which listen for &lt;a href=&quot;#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; should adjust what they output to the screen based on the value of this argument.</source>
          <target state="translated">Функции, которые слушают &lt;a href=&quot;#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; ,&lt;/a&gt; должны корректировать то, что они выводят на экран, основываясь на значении этого аргумента.</target>
        </trans-unit>
        <trans-unit id="58b8fc1c1c71c5176694d664f30ad4935c95c9a6" translate="yes" xml:space="preserve">
          <source>Functions which listen for &lt;a href=&quot;#django.db.models.signals.pre_migrate&quot;&gt;&lt;code&gt;pre_migrate&lt;/code&gt;&lt;/a&gt; should adjust what they output to the screen based on the value of this argument.</source>
          <target state="translated">Функции, которые прослушивают &lt;a href=&quot;#django.db.models.signals.pre_migrate&quot;&gt; &lt;code&gt;pre_migrate&lt;/code&gt; ,&lt;/a&gt; должны корректировать то, что они выводят на экран, основываясь на значении этого аргумента.</target>
        </trans-unit>
        <trans-unit id="347a2262f212625c348b335159dc10ebbb03ab9d" translate="yes" xml:space="preserve">
          <source>Furlong, Furrow Long</source>
          <target state="translated">Ферлонг,Ферроу Длинный</target>
        </trans-unit>
        <trans-unit id="4dc8b1c8149842f459402434eeff439ceb9a7810" translate="yes" xml:space="preserve">
          <source>Further examples are available in the &lt;a href=&quot;../../ref/models/fields#field-choices&quot;&gt;model field reference&lt;/a&gt;.</source>
          <target state="translated">Дополнительные примеры доступны в &lt;a href=&quot;../../ref/models/fields#field-choices&quot;&gt;справочной модели поля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a30ede85430e26aa72ae0d45e1884ea49e582ee" translate="yes" xml:space="preserve">
          <source>Further filtering or ordering of a sliced queryset is prohibited due to the ambiguous nature of how that might work.</source>
          <target state="translated">Дальнейшая фильтрация или заказ нарезанного квартета запрещены в связи с неоднозначным характером его работы.</target>
        </trans-unit>
        <trans-unit id="cd7c6cb8f1b994293e0fffa5e0469c1773e35f5c" translate="yes" xml:space="preserve">
          <source>Further testing</source>
          <target state="translated">Дальнейшее тестирование</target>
        </trans-unit>
        <trans-unit id="52ee768531207c58276c00530d02f15c716ccdcd" translate="yes" xml:space="preserve">
          <source>Further topics</source>
          <target state="translated">Дальнейшие темы</target>
        </trans-unit>
        <trans-unit id="e8b4f5234311830cfdfba453e178fa09d0bfe9a3" translate="yes" xml:space="preserve">
          <source>Furthermore, Python knows how to compare aware datetimes, taking into account UTC offsets when necessary. It&amp;rsquo;s much easier (and possibly faster) to write all your model and view code in UTC. So, in most circumstances, the datetime in UTC returned by &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt; will be sufficient.</source>
          <target state="translated">Кроме того, Python знает, как сравнивать осведомленные даты и время, принимая во внимание смещения UTC, когда это необходимо. Намного проще (и, возможно, быстрее) написать всю модель и просмотреть код в формате UTC. Таким образом, в большинстве случаев даты и времени в формате UTC, возвращаемые &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt; будет достаточно.</target>
        </trans-unit>
        <trans-unit id="d3e8ced1a91ca1c95a75c48dbffda0726e15cbf4" translate="yes" xml:space="preserve">
          <source>Fuzzy entries</source>
          <target state="translated">Нечеткие записи</target>
        </trans-unit>
        <trans-unit id="8ea6d0ffdbdb6cea2b28d73945ccdfef0ae19531" translate="yes" xml:space="preserve">
          <source>GDAL</source>
          <target state="translated">GDAL</target>
        </trans-unit>
        <trans-unit id="2a26a644d47f1906e2de640e10ff9907286d34cd" translate="yes" xml:space="preserve">
          <source>GDAL API</source>
          <target state="translated">GDAL API</target>
        </trans-unit>
        <trans-unit id="02e0585320eb827c9ffabe229b79e4b65616c704" translate="yes" xml:space="preserve">
          <source>GDAL Interface</source>
          <target state="translated">GDAL-интерфейс</target>
        </trans-unit>
        <trans-unit id="cbec0c3b910411cfed3eedecc010ca9269f20bee" translate="yes" xml:space="preserve">
          <source>GDAL Pixel Type</source>
          <target state="translated">Тип пикселя GDAL</target>
        </trans-unit>
        <trans-unit id="d39fe0a7c9d90595546f63f3c02dec03095f3dc6" translate="yes" xml:space="preserve">
          <source>GDAL has an internal memory-based filesystem, which allows treating blocks of memory as files. It can be used to read and write &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; objects to and from binary file buffers.</source>
          <target state="translated">GDAL имеет внутреннюю файловую систему на основе памяти, которая позволяет обрабатывать блоки памяти как файлы. Он может использоваться для чтения и записи объектов &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt; в буферы двоичных файлов и из них.</target>
        </trans-unit>
        <trans-unit id="1a9e794e2a979d5ba51533c108c06370dda08dde" translate="yes" xml:space="preserve">
          <source>GDT_Byte</source>
          <target state="translated">GDT_Byte</target>
        </trans-unit>
        <trans-unit id="124018333259823826d7cc111b4e0db2f7bc432f" translate="yes" xml:space="preserve">
          <source>GDT_Float32</source>
          <target state="translated">GDT_Float32</target>
        </trans-unit>
        <trans-unit id="00b98fc1bfd4aeb9ba37d5df113e3c40a369e8a9" translate="yes" xml:space="preserve">
          <source>GDT_Float64</source>
          <target state="translated">GDT_Float64</target>
        </trans-unit>
        <trans-unit id="0d00d4c137a19ecaa4f3bac851c7ea6c269fba00" translate="yes" xml:space="preserve">
          <source>GDT_Int16</source>
          <target state="translated">GDT_Int16</target>
        </trans-unit>
        <trans-unit id="bf4d610facd6e53aaadc48ed9351cca991b8266e" translate="yes" xml:space="preserve">
          <source>GDT_Int32</source>
          <target state="translated">GDT_Int32</target>
        </trans-unit>
        <trans-unit id="516d94f6f5e0777618ed61925b04c1640fd44690" translate="yes" xml:space="preserve">
          <source>GDT_UInt16</source>
          <target state="translated">GDT_UInt16</target>
        </trans-unit>
        <trans-unit id="1cc4d769f36ea1593d2e67458b1811587e6436b4" translate="yes" xml:space="preserve">
          <source>GDT_UInt32</source>
          <target state="translated">GDT_UInt32</target>
        </trans-unit>
        <trans-unit id="57549eddbbf46dfb920987eb38ac173931fba057" translate="yes" xml:space="preserve">
          <source>GEOS</source>
          <target state="translated">GEOS</target>
        </trans-unit>
        <trans-unit id="cf2921f1e8089a4fc3bf09367ef75c069782c7b8" translate="yes" xml:space="preserve">
          <source>GEOS API</source>
          <target state="translated">GEOS API</target>
        </trans-unit>
        <trans-unit id="9ba8d42dfcc9df2e351bca785d3dbcbb20d3cb86" translate="yes" xml:space="preserve">
          <source>GEOS distance calculations are linear &amp;ndash; in other words, GEOS does not perform a spherical calculation even if the SRID specifies a geographic coordinate system.</source>
          <target state="translated">Расчеты расстояния GEOS являются линейными - другими словами, GEOS не выполняет сферическое вычисление, даже если SRID указывает географическую систему координат.</target>
        </trans-unit>
        <trans-unit id="c104de6f391701c2366e299c7023455bf19608de" translate="yes" xml:space="preserve">
          <source>GEOS is a C++ library for performing geometric operations, and is the default internal geometry representation used by GeoDjango (it&amp;rsquo;s behind the &amp;ldquo;lazy&amp;rdquo; geometries). Specifically, the C API library is called (e.g., &lt;code&gt;libgeos_c.so&lt;/code&gt;) directly from Python using ctypes.</source>
          <target state="translated">GEOS - это библиотека C ++ для выполнения геометрических операций, и это внутреннее представление геометрии по умолчанию, используемое GeoDjango (оно стоит за &amp;laquo;ленивыми&amp;raquo; геометриями). В частности, библиотека C API вызывается (например, &lt;code&gt;libgeos_c.so&lt;/code&gt; ) напрямую из Python с использованием ctypes.</target>
        </trans-unit>
        <trans-unit id="f552a71a8afc751655c25583e1e0ff952365b5eb" translate="yes" xml:space="preserve">
          <source>GEOS, GDAL</source>
          <target state="translated">GEOS,GDAL</target>
        </trans-unit>
        <trans-unit id="67290db3486d847e5ecd1c83416a1bde2331c192" translate="yes" xml:space="preserve">
          <source>GEOS, GDAL, PROJ.4, PostGIS</source>
          <target state="translated">GEOS,GDAL,PROJ.4,PostGIS</target>
        </trans-unit>
        <trans-unit id="d54bb8615abfeaabf733c3a517bde1df52c7ae10" translate="yes" xml:space="preserve">
          <source>GEOS, GDAL, PROJ.4, SpatiaLite</source>
          <target state="translated">GEOS,GDAL,PROJ.4,SpatiaLite</target>
        </trans-unit>
        <trans-unit id="32df026aca6e37208988e80143a9f0fdbc8a748a" translate="yes" xml:space="preserve">
          <source>GIS QuerySet API Reference</source>
          <target state="translated">Ссылка на API GIS QuerySet</target>
        </trans-unit>
        <trans-unit id="dc4060a6fe947895e29cdab9b844c92647dcdf2c" translate="yes" xml:space="preserve">
          <source>GIS data sources, like shapefiles, may be very large. If you find that &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; is using too much memory, set &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; in your settings. When &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;automatically logs&lt;/a&gt;&lt;em&gt;every&lt;/em&gt; SQL query &amp;ndash; and when SQL statements contain geometries, this may consume more memory than is typical.</source>
          <target state="translated">Источники данных ГИС, такие как шейп-файлы, могут быть очень большими. Если вы обнаружите, что &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt; использует слишком много памяти, установите в настройках &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;False&lt;/code&gt; . Когда для &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; задано значение &lt;code&gt;True&lt;/code&gt; , Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;автоматически регистрирует &lt;/a&gt;&lt;em&gt;каждый&lt;/em&gt; запрос SQL - и когда операторы SQL содержат геометрии, это может потреблять больше памяти, чем обычно.</target>
        </trans-unit>
        <trans-unit id="0219dc6d205e4e9202852bb76fb50fb5ad3368c3" translate="yes" xml:space="preserve">
          <source>GIS data sources, like shapefiles, may be very large. If you find that &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; is using too much memory, set &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; in your settings. When &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;automatically logs&lt;/a&gt;&lt;em&gt;every&lt;/em&gt; SQL query &amp;ndash; and when SQL statements contain geometries, this may consume more memory than is typical.</source>
          <target state="translated">Источники данных ГИС, такие как шейп-файлы, могут быть очень большими. Если вы обнаружите, что &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt; использует слишком много памяти, установите для &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;False&lt;/code&gt; в своих настройках. Если для &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; задано значение &lt;code&gt;True&lt;/code&gt; , Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;автоматически регистрирует &lt;/a&gt;&lt;em&gt;каждый&lt;/em&gt; SQL-запрос, а когда операторы SQL содержат геометрию, это может потреблять больше памяти, чем обычно.</target>
        </trans-unit>
        <trans-unit id="f153081e8e18a0ac0dd3d4a18216a72f195ef4a7" translate="yes" xml:space="preserve">
          <source>GZip compression</source>
          <target state="translated">сжатие GZip</target>
        </trans-unit>
        <trans-unit id="88756fa7a5403ed08666c0f7d1544a052a8a7758" translate="yes" xml:space="preserve">
          <source>GZip middleware</source>
          <target state="translated">промежуточное программное обеспечение GZip</target>
        </trans-unit>
        <trans-unit id="200410f62b44123ec4e7adbf21839d4447d18a4f" translate="yes" xml:space="preserve">
          <source>General approaches</source>
          <target state="translated">Общие подходы</target>
        </trans-unit>
        <trans-unit id="cc009d63c70477332d3b26a216df733ea65feb8d" translate="yes" xml:space="preserve">
          <source>General notes</source>
          <target state="translated">Общие примечания</target>
        </trans-unit>
        <trans-unit id="9d25e59f9fe525c291ea22ff97d3ee08d153e3f5" translate="yes" xml:space="preserve">
          <source>General string handling</source>
          <target state="translated">Общая обработка строк</target>
        </trans-unit>
        <trans-unit id="d5f448f0e52e9bd53410694159c4305fef042b26" translate="yes" xml:space="preserve">
          <source>General-purpose aggregation functions</source>
          <target state="translated">Функции агрегации общего назначения</target>
        </trans-unit>
        <trans-unit id="6d6f1be7da3659b77585286c84135bee6dca31ad" translate="yes" xml:space="preserve">
          <source>Generally one&amp;rsquo;s first concern is to write code that &lt;em&gt;works&lt;/em&gt;, whose logic functions as required to produce the expected output. Sometimes, however, this will not be enough to make the code work as &lt;em&gt;efficiently&lt;/em&gt; as one would like.</source>
          <target state="translated">Как правило, первая задача - написать &lt;em&gt;работающий&lt;/em&gt; код , логика которого функционирует так, как требуется для получения ожидаемого результата. Однако иногда этого недостаточно, чтобы заставить код работать так &lt;em&gt;эффективно,&lt;/em&gt; как хотелось бы.</target>
        </trans-unit>
        <trans-unit id="2dc5a4b1cc3b7351074b95b062373b0aba4cd150" translate="yes" xml:space="preserve">
          <source>Generally speaking, it isn&amp;rsquo;t advisable to write to the database while generating a streaming response, since there&amp;rsquo;s no sensible way to handle errors after starting to send the response.</source>
          <target state="translated">Вообще говоря, при создании потокового ответа не рекомендуется выполнять запись в базу данных, поскольку нет разумного способа обработки ошибок после начала отправки ответа.</target>
        </trans-unit>
        <trans-unit id="24f6155965c97a61b3e2ca7acf1734368fae7c53" translate="yes" xml:space="preserve">
          <source>Generally speaking, it&amp;rsquo;s easiest to refer to the user model with the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting in code that&amp;rsquo;s executed at import time, however, it&amp;rsquo;s also possible to call &lt;code&gt;get_user_model()&lt;/code&gt; while Django is importing models, so you could use &lt;code&gt;models.ForeignKey(get_user_model(), ...)&lt;/code&gt;.</source>
          <target state="translated">Вообще говоря, проще всего ссылаться на пользовательскую модель с параметром &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt; в коде, который выполняется во время импорта, однако также возможно вызвать &lt;code&gt;get_user_model()&lt;/code&gt; когда Django импортирует модели, поэтому вы можете использовать &lt;code&gt;models.ForeignKey(get_user_model(), ...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cce2ca7c7d11755b7d8fc24c859449f56b8fef65" translate="yes" xml:space="preserve">
          <source>Generally speaking, the most appropriate level for the job is the lowest-level one that it is comfortable to code for.</source>
          <target state="translated">Вообще говоря,наиболее подходящим уровнем для работы является самый низкий уровень,который удобно кодировать.</target>
        </trans-unit>
        <trans-unit id="41b1e6b41a8481cab01f2d9475db7f4cc68d9fff" translate="yes" xml:space="preserve">
          <source>Generally speaking, you can&amp;rsquo;t mix dates and datetimes.</source>
          <target state="translated">Вообще говоря, вы не можете смешивать даты и время.</target>
        </trans-unit>
        <trans-unit id="647ad5d5d9c98ce9c898d46505ef79c17373c595" translate="yes" xml:space="preserve">
          <source>Generally speaking, you should perform expensive tasks outside of the request-response cycle, rather than resorting to a streamed response.</source>
          <target state="translated">Вообще говоря,следует выполнять дорогостоящие задачи вне цикла запросов-ответов,а не прибегать к потоковому ответу.</target>
        </trans-unit>
        <trans-unit id="9572adc989f39eaa9b2ba90d481456a7ec0a77df" translate="yes" xml:space="preserve">
          <source>Generally you can use &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; when you need their functionality. As shown above, with a bit of care you can even combine &lt;code&gt;SingleObjectMixin&lt;/code&gt; with &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;. However things get increasingly complex as you try to do so, and a good rule of thumb is:</source>
          <target state="translated">Обычно вы можете использовать &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; ,&lt;/a&gt; когда вам нужна их функциональность. Как показано выше, с некоторой осторожностью вы можете даже комбинировать &lt;code&gt;SingleObjectMixin&lt;/code&gt; с &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; . Однако, когда вы пытаетесь это сделать, все становится все сложнее, и хорошее правило:</target>
        </trans-unit>
        <trans-unit id="527756bcb892560130d98a9a313a05a11a3d384e" translate="yes" xml:space="preserve">
          <source>Generally, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; instances should go in the object that&amp;rsquo;s going to be edited on a form. In the above example, &lt;code&gt;toppings&lt;/code&gt; is in &lt;code&gt;Pizza&lt;/code&gt; (rather than &lt;code&gt;Topping&lt;/code&gt; having a &lt;code&gt;pizzas&lt;/code&gt;&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; ) because it&amp;rsquo;s more natural to think about a pizza having toppings than a topping being on multiple pizzas. The way it&amp;rsquo;s set up above, the &lt;code&gt;Pizza&lt;/code&gt; form would let users select the toppings.</source>
          <target state="translated">Как правило, экземпляры &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; должны помещаться в объект, который будет редактироваться в форме. В приведенном выше примере, &lt;code&gt;toppings&lt;/code&gt; находятся в &lt;code&gt;Pizza&lt;/code&gt; (а не &lt;code&gt;Topping&lt;/code&gt; с &lt;code&gt;pizzas&lt;/code&gt; &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; ), потому что более естественно думать о пицце, имеющей начинки, чем верх, находящийся на нескольких пиццах. Как указано выше, форма &lt;code&gt;Pizza&lt;/code&gt; позволит пользователям выбирать начинки.</target>
        </trans-unit>
        <trans-unit id="c75c67a262a34c0f2e38d35a45a89fab845848f8" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;get_context_data&lt;/code&gt; will merge the context data of all parent classes with those of the current class. To preserve this behavior in your own classes where you want to alter the context, you should be sure to call &lt;code&gt;get_context_data&lt;/code&gt; on the super class. When no two classes try to define the same key, this will give the expected results. However if any class attempts to override a key after parent classes have set it (after the call to super), any children of that class will also need to explicitly set it after super if they want to be sure to override all parents. If you&amp;rsquo;re having trouble, review the method resolution order of your view.</source>
          <target state="translated">Обычно &lt;code&gt;get_context_data&lt;/code&gt; объединяет данные контекста всех родительских классов с данными текущего класса. Чтобы сохранить это поведение в ваших собственных классах, где вы хотите изменить контекст, вы должны обязательно вызвать &lt;code&gt;get_context_data&lt;/code&gt; для суперкласса. Когда нет двух классов, пытающихся определить один и тот же ключ, это даст ожидаемые результаты. Однако, если какой-либо класс пытается переопределить ключ после того, как родительские классы установили его (после вызова super), любые дочерние элементы этого класса также должны будут явно установить его после super, если они хотят быть уверенными в переопределении всех родителей. Если у вас возникли проблемы, просмотрите порядок разрешения методов вашего представления.</target>
        </trans-unit>
        <trans-unit id="c3d5b0cf1a6be796edc01b1a5da01e9211d76d6a" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;string_if_invalid&lt;/code&gt; should only be enabled in order to debug a specific template problem, then cleared once debugging is complete.</source>
          <target state="translated">Как правило, &lt;code&gt;string_if_invalid&lt;/code&gt; должен быть включен только для отладки определенной проблемы шаблона, а затем очищен после завершения отладки.</target>
        </trans-unit>
        <trans-unit id="443c04d1837565ab4b87d181a52fd743f9cae91a" translate="yes" xml:space="preserve">
          <source>Generally, a view retrieves data according to the parameters, loads a template and renders the template with the retrieved data. Here&amp;rsquo;s an example view for &lt;code&gt;year_archive&lt;/code&gt; from above:</source>
          <target state="translated">Как правило, представление извлекает данные в соответствии с параметрами, загружает шаблон и отображает шаблон с полученными данными. Вот пример представления для &lt;code&gt;year_archive&lt;/code&gt; сверху:</target>
        </trans-unit>
        <trans-unit id="0c77575814a624548a0f1612bf97578af76953c9" translate="yes" xml:space="preserve">
          <source>Generally, if a variable doesn&amp;rsquo;t exist, the template system inserts the value of the engine&amp;rsquo;s &lt;code&gt;string_if_invalid&lt;/code&gt; configuration option, which is set to &lt;code&gt;''&lt;/code&gt; (the empty string) by default.</source>
          <target state="translated">Как правило, если переменная не существует, система шаблонов вставляет значение &lt;code&gt;string_if_invalid&lt;/code&gt; конфигурации двигателя string_if_invalid , для которого по умолчанию установлено значение &lt;code&gt;''&lt;/code&gt; (пустая строка).</target>
        </trans-unit>
        <trans-unit id="92a32cd2b90c5fd5f36cf2640c5f30799c071ce2" translate="yes" xml:space="preserve">
          <source>Generally, it&amp;rsquo;s best to define choices inside a model class, and to define a suitably-named constant for each value:</source>
          <target state="translated">Как правило, лучше определить варианты внутри класса модели и определить константу с подходящим именем для каждого значения:</target>
        </trans-unit>
        <trans-unit id="7e4d313447d91008ef41337c3ee0b186df1484bc" translate="yes" xml:space="preserve">
          <source>Generally, slicing a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; returns a new &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; &amp;ndash; it doesn&amp;rsquo;t evaluate the query. An exception is if you use the &amp;ldquo;step&amp;rdquo; parameter of Python slice syntax. For example, this would actually execute the query in order to return a list of every &lt;em&gt;second&lt;/em&gt; object of the first 10:</source>
          <target state="translated">Как правило, нарезка &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; возвращает новый &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; - он не оценивает запрос. Исключением является использование параметра &amp;laquo;step&amp;raquo; в синтаксисе фрагментов Python. Например, это фактически выполнит запрос, чтобы вернуть список каждого &lt;em&gt;второго&lt;/em&gt; объекта из первых 10:</target>
        </trans-unit>
        <trans-unit id="7bfc57bad218eacb80f36721cb04e3614e67e865" translate="yes" xml:space="preserve">
          <source>Generally, something like the above isn&amp;rsquo;t considered a great idea. Most of the time, the best practice will be to return an &lt;a href=&quot;../../request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; and redirect the user to a view you&amp;rsquo;ve written, passing the list of selected objects in the GET query string. This allows you to provide complex interaction logic on the intermediary pages. For example, if you wanted to provide a more complete export function, you&amp;rsquo;d want to let the user choose a format, and possibly a list of fields to include in the export. The best thing to do would be to write a small action that redirects to your custom export view:</source>
          <target state="translated">Как правило, что-то подобное выше не считается отличной идеей. В большинстве случаев рекомендуется возвращать &lt;a href=&quot;../../request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt; и перенаправлять пользователя к написанному вами представлению, передавая список выбранных объектов в строке запроса GET. Это позволяет обеспечить сложную логику взаимодействия на промежуточных страницах. Например, если вы хотите предоставить более полную функцию экспорта, вам нужно позволить пользователю выбрать формат и, возможно, список полей для включения в экспорт. Лучше всего было бы написать небольшое действие, которое перенаправляет в ваше пользовательское представление экспорта:</target>
        </trans-unit>
        <trans-unit id="56be6c441bd144d493f92171e1bc7712fc16427c" translate="yes" xml:space="preserve">
          <source>Generally, template authors don&amp;rsquo;t need to worry about auto-escaping very much. Developers on the Python side (people writing views and custom filters) need to think about the cases in which data shouldn&amp;rsquo;t be escaped, and mark data appropriately, so things Just Work in the template.</source>
          <target state="translated">Как правило, авторам шаблонов не нужно сильно беспокоиться об автоэкранировании. Разработчики на стороне Python (люди, пишущие представления и настраиваемые фильтры) должны подумать о случаях, когда данные не должны быть экранированы, и соответствующим образом пометить данные, так что все просто работает в шаблоне.</target>
        </trans-unit>
        <trans-unit id="27ed1f3562f09d7b3deaadb1e45e59d35ebcea77" translate="yes" xml:space="preserve">
          <source>Generally, the correct solution is to change your code to use an aware datetime instead.</source>
          <target state="translated">Как правило,правильным решением является изменение кода,чтобы вместо него использовалось известное время.</target>
        </trans-unit>
        <trans-unit id="eb47639ff76881dfa64a9d2bdd365dbcf0e3fe65" translate="yes" xml:space="preserve">
          <source>Generally, the default value should suffice. Only set this setting if you want to restrict language selection to a subset of the Django-provided languages.</source>
          <target state="translated">Обычно,значения по умолчанию должно быть достаточно.Устанавливайте эту настройку только в том случае,если хотите ограничить выбор языка подмножеством языков,предоставляемых Django.</target>
        </trans-unit>
        <trans-unit id="6cef6ee0893a2489e91dd154fc9e7ee5cc0e3005" translate="yes" xml:space="preserve">
          <source>Generally, the default value should suffice. Only set this setting if you want to restrict language selection to a subset of the Django-provided languages. If you define a custom &lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, the list of bidirectional languages may contain language codes which are not enabled on a given site.</source>
          <target state="translated">Как правило, значение по умолчанию должно быть достаточно. Установите этот параметр, только если вы хотите ограничить выбор языка подмножеством языков, предоставляемых Django. Если вы определяете пользовательский параметр &lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt; , список двунаправленных языков может содержать коды языков, которые не включены на данном сайте.</target>
        </trans-unit>
        <trans-unit id="319c714cbc952fc158b189c40cb203831d68b6c9" translate="yes" xml:space="preserve">
          <source>Generally, when working on a single Django project, it&amp;rsquo;s easier to use &lt;code&gt;manage.py&lt;/code&gt; than &lt;code&gt;django-admin&lt;/code&gt;. If you need to switch between multiple Django settings files, use &lt;code&gt;django-admin&lt;/code&gt; with &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-1&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#cmdoption-settings&quot;&gt;&lt;code&gt;--settings&lt;/code&gt;&lt;/a&gt; command line option.</source>
          <target state="translated">Как правило, при работе с одним проектом Django проще использовать &lt;code&gt;manage.py&lt;/code&gt; , чем &lt;code&gt;django-admin&lt;/code&gt; . Если вам нужно переключаться между несколькими файлами настроек Django, используйте &lt;code&gt;django-admin&lt;/code&gt; с &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-1&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#cmdoption-settings&quot;&gt; &lt;code&gt;--settings&lt;/code&gt; &lt;/a&gt; командной строки --settings .</target>
        </trans-unit>
        <trans-unit id="f887d501c8d01a35b48d29631cb2040eeb658701" translate="yes" xml:space="preserve">
          <source>Generally, when writing a Django app, you&amp;rsquo;ll evaluate whether generic views are a good fit for your problem, and you&amp;rsquo;ll use them from the beginning, rather than refactoring your code halfway through. But this tutorial intentionally has focused on writing the views &amp;ldquo;the hard way&amp;rdquo; until now, to focus on core concepts.</source>
          <target state="translated">Как правило, при написании приложения Django вы будете оценивать, подходят ли общие представления для вашей проблемы, и будете использовать их с самого начала, а не рефакторинг своего кода на полпути. Но этот урок намеренно сфокусирован на написании взглядов &amp;laquo;трудным путем&amp;raquo; до сих пор, чтобы сосредоточиться на основных понятиях.</target>
        </trans-unit>
        <trans-unit id="d2cabdf30edfb04025f5c5d082a12b4e021f8810" translate="yes" xml:space="preserve">
          <source>Generally, you should avoid converting a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;. For instance, you can use the &lt;a href=&quot;../../ref/templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter to only show the date part of a datetime. This filter will convert the datetime into the current time zone before formatting it, ensuring the results appear correctly.</source>
          <target state="translated">Как правило, вам следует избегать преобразования &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; . Например, вы можете использовать фильтр шаблона &lt;a href=&quot;../../ref/templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; чтобы отображать только часть даты datetime. Этот фильтр преобразует дату и время в текущий часовой пояс перед его форматированием, обеспечивая правильное отображение результатов.</target>
        </trans-unit>
        <trans-unit id="0990f513d5c0effdf4a377d7f04ce84086b2d68d" translate="yes" xml:space="preserve">
          <source>Generally, you won&amp;rsquo;t need to inherit from multiple parents. The main use-case where this is useful is for &amp;ldquo;mix-in&amp;rdquo; classes: adding a particular extra field or method to every class that inherits the mix-in. Try to keep your inheritance hierarchies as simple and straightforward as possible so that you won&amp;rsquo;t have to struggle to work out where a particular piece of information is coming from.</source>
          <target state="translated">Как правило, вам не нужно наследовать от нескольких родителей. Основной вариант использования, в котором это полезно, - для классов &amp;laquo;смешивания&amp;raquo;: добавление определенного дополнительного поля или метода к каждому классу, который наследует добавление. Постарайтесь, чтобы иерархии наследования были как можно более простыми и понятными, чтобы вам не приходилось изо всех сил выяснять, откуда поступает конкретная часть информации.</target>
        </trans-unit>
        <trans-unit id="002ec76556b82bbbbcb60321162dcb04354ff2b8" translate="yes" xml:space="preserve">
          <source>Generally, you&amp;rsquo;ll store templates in files on your filesystem rather than using the low-level &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; API yourself. Save templates in a directory specified as a &lt;strong&gt;template directory&lt;/strong&gt;.</source>
          <target state="translated">Как правило, вы будете хранить шаблоны в файлах вашей файловой системы, а не будете использовать низкоуровневый &lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; API самостоятельно. Сохраните шаблоны в каталоге, указанном как &lt;strong&gt;каталог шаблонов&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="64c3678f265c4b6f9178283fbd7fc418e2ad8790" translate="yes" xml:space="preserve">
          <source>Generate migration files without Django version and timestamp header.</source>
          <target state="translated">Сгенерировать файлы миграции без версии Django и заголовка временной метки.</target>
        </trans-unit>
        <trans-unit id="c5825daab40bbc561a3ed313a76db995a0d8af36" translate="yes" xml:space="preserve">
          <source>Generate squashed migration file without Django version and timestamp header.</source>
          <target state="translated">Сгенерируйте файл миграции squashed без версии Django и заголовка временной метки.</target>
        </trans-unit>
        <trans-unit id="37b0ace3843507d7ca5e2a84b3831e29036c762c" translate="yes" xml:space="preserve">
          <source>Generate two empty migration files for the same app by running &lt;code&gt;makemigrations myapp --empty&lt;/code&gt; twice. We&amp;rsquo;ve renamed the migration files to give them meaningful names in the examples below.</source>
          <target state="translated">Создайте два пустых файла миграции для одного и того же приложения, дважды выполнив &lt;code&gt;makemigrations myapp --empty&lt;/code&gt; . Мы переименовали файлы миграции, чтобы дать им значимые имена в примерах ниже.</target>
        </trans-unit>
        <trans-unit id="6ecdf7dadc0bc7b684b3bcd576a037fd41031280" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;__str__()&lt;/code&gt; method on the model that returns the given field name.</source>
          <target state="translated">Создает в &lt;code&gt;__str__()&lt;/code&gt; метод __str __ (), который возвращает заданное имя поля.</target>
        </trans-unit>
        <trans-unit id="a9a0484765197eb2305b98f6cd9fc6e71d1f3034" translate="yes" xml:space="preserve">
          <source>Generates the SQL for the database function.</source>
          <target state="translated">Генерирует SQL для функции БД.</target>
        </trans-unit>
        <trans-unit id="97469305be1d987a5209d9a384da92ab8de38e60" translate="yes" xml:space="preserve">
          <source>Generates the SQL for unapplying the migration. By default, the SQL created is for running the migration in the forwards direction.</source>
          <target state="translated">Генерирует SQL для неприменения миграции.По умолчанию созданный SQL предназначен для выполнения миграции в направлении вперед.</target>
        </trans-unit>
        <trans-unit id="cdecb6b6aa19a312faa26c88a687d99f1eadaac3" translate="yes" xml:space="preserve">
          <source>Generates the SQL fragment for the database function. Returns a tuple &lt;code&gt;(sql, params)&lt;/code&gt;, where &lt;code&gt;sql&lt;/code&gt; is the SQL string, and &lt;code&gt;params&lt;/code&gt; is the list or tuple of query parameters.</source>
          <target state="translated">Создает фрагмент SQL для функции базы данных. Возвращает кортеж &lt;code&gt;(sql, params)&lt;/code&gt; , где &lt;code&gt;sql&lt;/code&gt; - это строка SQL, а &lt;code&gt;params&lt;/code&gt; - это список или кортеж параметров запроса.</target>
        </trans-unit>
        <trans-unit id="caa0bcfdd5f9f4eb83783b1b5f46b80525e05350" translate="yes" xml:space="preserve">
          <source>Generates the SQL fragment for the expression. Returns a tuple &lt;code&gt;(sql, params)&lt;/code&gt;, where &lt;code&gt;sql&lt;/code&gt; is the SQL string, and &lt;code&gt;params&lt;/code&gt; is the list or tuple of query parameters. The &lt;code&gt;compiler&lt;/code&gt; is an &lt;code&gt;SQLCompiler&lt;/code&gt; object, which has a &lt;code&gt;compile()&lt;/code&gt; method that can be used to compile other expressions. The &lt;code&gt;connection&lt;/code&gt; is the connection used to execute the query.</source>
          <target state="translated">Создает фрагмент SQL для выражения. Возвращает кортеж &lt;code&gt;(sql, params)&lt;/code&gt; , где &lt;code&gt;sql&lt;/code&gt; - это строка SQL, а &lt;code&gt;params&lt;/code&gt; - это список или кортеж параметров запроса. &lt;code&gt;compiler&lt;/code&gt; является &lt;code&gt;SQLCompiler&lt;/code&gt; объект, который имеет &lt;code&gt;compile()&lt;/code&gt; метод , который может быть использован для компиляции других выражений. &lt;code&gt;connection&lt;/code&gt; является соединением , используемым для выполнения запроса.</target>
        </trans-unit>
        <trans-unit id="63982e5335ffb2308b26af6c005f638092b3ea09" translate="yes" xml:space="preserve">
          <source>Generating &amp;ldquo;recover my account&amp;rdquo; URLs for sending to users who have lost their password.</source>
          <target state="translated">Создание URL-адресов &amp;laquo;восстановить мою учетную запись&amp;raquo; для отправки пользователям, которые потеряли свой пароль.</target>
        </trans-unit>
        <trans-unit id="7479ec37b32ba74fe2dad06103dd686c2a02418a" translate="yes" xml:space="preserve">
          <source>Generating admin sites for your staff or clients to add, change, and delete content is tedious work that doesn&amp;rsquo;t require much creativity. For that reason, Django entirely automates creation of admin interfaces for models.</source>
          <target state="translated">Создание сайтов администратора для ваших сотрудников или клиентов для добавления, изменения и удаления контента - утомительная работа, которая не требует большого творческого подхода. По этой причине Django полностью автоматизирует создание интерфейсов администратора для моделей.</target>
        </trans-unit>
        <trans-unit id="c188d3cb4928f6d0b6873ba0fe2f329a09ad77a4" translate="yes" xml:space="preserve">
          <source>Generating aggregates for each item in a &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">Генерация агрегатов для каждого элемента в &lt;code&gt;QuerySet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="249a34757e80bf41675fd5092f7d9d1cafd85921" translate="yes" xml:space="preserve">
          <source>Generating aggregates over a &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">Генерация агрегатов по &lt;code&gt;QuerySet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9c0b669418b95568aebff998fd28475a3840373" translate="yes" xml:space="preserve">
          <source>Generating one-time secret URLs for allowing temporary access to a protected resource, for example a downloadable file that a user has paid for.</source>
          <target state="translated">Генерация одноразовых секретных URL для предоставления временного доступа к защищенному ресурсу,например,к загружаемому файлу,за который пользователь заплатил.</target>
        </trans-unit>
        <trans-unit id="57a711145988aff1f4c5baf8a2a956889bb3e41c" translate="yes" xml:space="preserve">
          <source>Generic date views</source>
          <target state="translated">Общие представления о дате</target>
        </trans-unit>
        <trans-unit id="1a969e34061b2510afad161402a65f214f5ce9c7" translate="yes" xml:space="preserve">
          <source>Generic display views</source>
          <target state="translated">Общий вид дисплея</target>
        </trans-unit>
        <trans-unit id="82e089b93305d3c5e37400a98008314ffb3a857f" translate="yes" xml:space="preserve">
          <source>Generic editing views</source>
          <target state="translated">Общие представления при редактировании</target>
        </trans-unit>
        <trans-unit id="c1472da43eb9fb9463431ec699f3ea11115b8c35" translate="yes" xml:space="preserve">
          <source>Generic relation in forms</source>
          <target state="translated">Общее отношение в формах</target>
        </trans-unit>
        <trans-unit id="7e709568eb3d50865428def64345bd0c2f85ed41" translate="yes" xml:space="preserve">
          <source>Generic relations</source>
          <target state="translated">Общие отношения</target>
        </trans-unit>
        <trans-unit id="8b7efda9768e9d595d8fd92272959ad354f99b4e" translate="yes" xml:space="preserve">
          <source>Generic relations and aggregation</source>
          <target state="translated">Общие отношения и агрегация</target>
        </trans-unit>
        <trans-unit id="2bd47084ada78ba1518e4110743b0bafb569f442" translate="yes" xml:space="preserve">
          <source>Generic relations in admin</source>
          <target state="translated">Общие отношения в администрировании</target>
        </trans-unit>
        <trans-unit id="5501abd5185b3c6248d23e02a1ce2bfbd96f81c6" translate="yes" xml:space="preserve">
          <source>Generic views</source>
          <target state="translated">Общие взгляды</target>
        </trans-unit>
        <trans-unit id="15919fc89293c3e5202f8b37a376f8b03e8dab06" translate="yes" xml:space="preserve">
          <source>Generic views abstract common patterns to the point where you don&amp;rsquo;t even need to write Python code to write an app.</source>
          <target state="translated">Общие представления абстрагируют общие шаблоны до такой степени, что вам даже не нужно писать код Python для написания приложения.</target>
        </trans-unit>
        <trans-unit id="df3e431d9c3a0b2572058f247141a08fa73367eb" translate="yes" xml:space="preserve">
          <source>Generic views of objects</source>
          <target state="translated">Общие виды объектов</target>
        </trans-unit>
        <trans-unit id="f884a81c2e23678106660b59e835282a2b0244e7" translate="yes" xml:space="preserve">
          <source>Generic views really shine when working with models. These generic views will automatically create a &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, so long as they can work out which model class to use:</source>
          <target state="translated">Общие представления действительно сияют при работе с моделями. Эти общие представления автоматически создают &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; , если они могут определить, какой класс модели использовать:</target>
        </trans-unit>
        <trans-unit id="76b44973a843d3bcdd7b8f1a980cd4b03a025fb9" translate="yes" xml:space="preserve">
          <source>GeoDjango</source>
          <target state="translated">GeoDjango</target>
        </trans-unit>
        <trans-unit id="fb8d70b0b197a9acece10c07e4c7fdd557f1be8e" translate="yes" xml:space="preserve">
          <source>GeoDjango Database API</source>
          <target state="translated">API базы данных GeoDjango</target>
        </trans-unit>
        <trans-unit id="e8b7a06075e0a1b414b6c69d16be262829e002f4" translate="yes" xml:space="preserve">
          <source>GeoDjango Forms API</source>
          <target state="translated">GeoDjango Forms API</target>
        </trans-unit>
        <trans-unit id="bfae1f1236df0250ad2ce27a6481102c026c4cdd" translate="yes" xml:space="preserve">
          <source>GeoDjango Installation</source>
          <target state="translated">установка GeoDjango</target>
        </trans-unit>
        <trans-unit id="94028033177f0a25ff8cb38b0aa2bbb9f98c96f5" translate="yes" xml:space="preserve">
          <source>GeoDjango Management Commands</source>
          <target state="translated">Команды управления GeoDjango</target>
        </trans-unit>
        <trans-unit id="877a1bb2c6226b98095871dfb623f83abe458ba7" translate="yes" xml:space="preserve">
          <source>GeoDjango Model API</source>
          <target state="translated">API модели GeoDjango</target>
        </trans-unit>
        <trans-unit id="a20664c0b4bdfe6af8891c490a1ffdb9c5c615f6" translate="yes" xml:space="preserve">
          <source>GeoDjango Tutorial</source>
          <target state="translated">учебник Геоджанго</target>
        </trans-unit>
        <trans-unit id="4de4647b8b51ad2ab3a1c065a89ba222dd9856dc" translate="yes" xml:space="preserve">
          <source>GeoDjango Utilities</source>
          <target state="translated">GeoDjango Utilities</target>
        </trans-unit>
        <trans-unit id="71c062fc8ed04aae09d37692b07d1224332f91ae" translate="yes" xml:space="preserve">
          <source>GeoDjango adds spatial lookups to the Django ORM. For example, you can find the country in the &lt;code&gt;WorldBorder&lt;/code&gt; table that contains a particular point. First, fire up the management shell:</source>
          <target state="translated">GeoDjango добавляет пространственный поиск в Django ORM. Например, вы можете найти страну в таблице &lt;code&gt;WorldBorder&lt;/code&gt; , которая содержит конкретную точку. Сначала запустите оболочку управления:</target>
        </trans-unit>
        <trans-unit id="1749a1cb1bb9c2f6ff6dd7bcf0cd20f0a7abeb48" translate="yes" xml:space="preserve">
          <source>GeoDjango also offers a set of geographic annotations to compute distances and several other operations (intersection, difference, etc.). See the &lt;a href=&quot;functions&quot;&gt;Geographic Database Functions&lt;/a&gt; documentation.</source>
          <target state="translated">GeoDjango также предлагает набор географических аннотаций для вычисления расстояний и некоторых других операций (пересечение, разность и т. Д.). Смотрите документацию по &lt;a href=&quot;functions&quot;&gt;функциям географической базы данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc82cd8e43f8819ca610e94617381d8c61b6275" translate="yes" xml:space="preserve">
          <source>GeoDjango also supplements the Django admin by allowing users to create and modify geometries on a JavaScript slippy map (powered by &lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;).</source>
          <target state="translated">GeoDjango также дополняет администратора Django, позволяя пользователям создавать и изменять геометрии на скользкой карте JavaScript (на основе &lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3e011aaadd25f116aa5b636795a71dae045f10ff" translate="yes" xml:space="preserve">
          <source>GeoDjango basic apps was written by Dane Springmeyer, Josh Livni, and Christopher Schmidt.</source>
          <target state="translated">Основные приложения GeoDjango были написаны Даном Спрингмайером,Джошем Ливни и Кристофером Шмидтом.</target>
        </trans-unit>
        <trans-unit id="abd937d2340abf6ba15de6356c4aacb77d4b2142" translate="yes" xml:space="preserve">
          <source>GeoDjango currently provides the following spatial database backends:</source>
          <target state="translated">В настоящее время GeoDjango предоставляет следующие пространственные бэкэнды базы данных:</target>
        </trans-unit>
        <trans-unit id="193f1930c783c95f77007577bf72364906fe021a" translate="yes" xml:space="preserve">
          <source>GeoDjango does not currently leverage any &lt;a href=&quot;https://postgis.net/docs/Topology.html&quot;&gt;PostGIS topology functionality&lt;/a&gt;. If you plan to use those features at some point, you can also install the &lt;code&gt;postgis_topology&lt;/code&gt; extension by issuing &lt;code&gt;CREATE EXTENSION
postgis_topology;&lt;/code&gt;.</source>
          <target state="translated">GeoDjango в настоящее время не использует никаких &lt;a href=&quot;https://postgis.net/docs/Topology.html&quot;&gt;функций топологии PostGIS&lt;/a&gt; . Если вы планируете использовать эти функции в какой-то момент, вы также можете установить расширение &lt;code&gt;postgis_topology&lt;/code&gt; ,выполнив &lt;code&gt;CREATE EXTENSION postgis_topology;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="1682f728f18526e820eaadb4fadcdae630e84a84" translate="yes" xml:space="preserve">
          <source>GeoDjango extends &lt;a href=&quot;../admin/index&quot;&gt;Django&amp;rsquo;s admin application&lt;/a&gt; with support for editing geometry fields.</source>
          <target state="translated">GeoDjango расширяет &lt;a href=&quot;../admin/index&quot;&gt;приложение администратора Django&lt;/a&gt; с поддержкой редактирования геометрических полей.</target>
        </trans-unit>
        <trans-unit id="e16764ce538d1743a7883a90a8a47d871b7df216" translate="yes" xml:space="preserve">
          <source>GeoDjango form widgets allow you to display and edit geographic data on a visual map. Note that none of the currently available widgets supports 3D geometries, hence geometry fields will fallback using a &lt;code&gt;Textarea&lt;/code&gt; widget for such data.</source>
          <target state="translated">Виджеты формы GeoDjango позволяют отображать и редактировать географические данные на визуальной карте. Обратите внимание, что ни один из доступных в настоящее время виджетов не поддерживает трехмерные геометрии, поэтому геометрические поля будут иметь запасной вид с использованием виджета &lt;code&gt;Textarea&lt;/code&gt; для таких данных.</target>
        </trans-unit>
        <trans-unit id="891d521a99f30d373b9dbd444935c8ffc39cb360" translate="yes" xml:space="preserve">
          <source>GeoDjango has additional requirements beyond what Django requires &amp;ndash; please consult the &lt;a href=&quot;install/index&quot;&gt;installation documentation&lt;/a&gt; for more details.</source>
          <target state="translated">К GeoDjango предъявляются дополнительные требования, помимо требований Django - для получения более подробной информации обратитесь к &lt;a href=&quot;install/index&quot;&gt;документации&lt;/a&gt; по установке .</target>
        </trans-unit>
        <trans-unit id="8980cfb9c1e99c6e3e7db0a490d95a1d8c44b809" translate="yes" xml:space="preserve">
          <source>GeoDjango has its own &lt;a href=&quot;#django.contrib.gis.feeds.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; subclass that may embed location information in RSS/Atom feeds formatted according to either the &lt;a href=&quot;http://georss.org/simple.html&quot;&gt;Simple GeoRSS&lt;/a&gt; or &lt;a href=&quot;https://www.w3.org/2003/01/geo/&quot;&gt;W3C Geo&lt;/a&gt; standards. Because GeoDjango&amp;rsquo;s syndication API is a superset of Django&amp;rsquo;s, please consult &lt;a href=&quot;../syndication&quot;&gt;Django&amp;rsquo;s syndication documentation&lt;/a&gt; for details on general usage.</source>
          <target state="translated">GeoDjango имеет свой собственный подкласс &lt;a href=&quot;#django.contrib.gis.feeds.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; ,&lt;/a&gt; который может встраивать информацию о местоположении в RSS / Atom-каналы, отформатированные в соответствии со стандартами &lt;a href=&quot;http://georss.org/simple.html&quot;&gt;Simple GeoRSS&lt;/a&gt; или &lt;a href=&quot;https://www.w3.org/2003/01/geo/&quot;&gt;W3C Geo&lt;/a&gt; . Поскольку API синдикации GeoDjango является расширенным набором Django, пожалуйста, обратитесь &lt;a href=&quot;../syndication&quot;&gt;к документации&lt;/a&gt; по синдикации Django для получения подробной информации об общем использовании.</target>
        </trans-unit>
        <trans-unit id="ac4759afcd67a7889efe287968c488637e7e4154" translate="yes" xml:space="preserve">
          <source>GeoDjango implements a high-level Python wrapper for the GEOS library, its features include:</source>
          <target state="translated">GeoDjango реализует высокоуровневую обертку Python для библиотеки GEOS,в том числе и по своим возможностям:</target>
        </trans-unit>
        <trans-unit id="8691a07ec4db590c21d008e1c7f51f869c746078" translate="yes" xml:space="preserve">
          <source>GeoDjango intends to be a world-class geographic Web framework. Its goal is to make it as easy as possible to build GIS Web applications and harness the power of spatially enabled data.</source>
          <target state="translated">GeoDjango намерен стать географическим веб-фреймворком мирового класса.Его цель-максимально упростить построение веб-приложений для ГИС и использовать возможности пространственно привязанных данных.</target>
        </trans-unit>
        <trans-unit id="dc3067870d1f5805bbf4b0ad3a4048675cf2e61a" translate="yes" xml:space="preserve">
          <source>GeoDjango is an included contrib module for Django that turns it into a world-class geographic Web framework. GeoDjango strives to make it as simple as possible to create geographic Web applications, like location-based services. Its features include:</source>
          <target state="translated">GeoDjango-это входящий в комплект поставки модуль для Django,который превращает его в географический веб-фреймворк мирового класса.GeoDjango стремится максимально упростить создание географических веб-приложений,например,сервисов,основанных на определении местоположения.Его возможности включают в себя:</target>
        </trans-unit>
        <trans-unit id="f79e051bc0b9bb1a9bb29e9666937dde2f48eaa1" translate="yes" xml:space="preserve">
          <source>GeoDjango loads geometries in a standardized textual representation. When the geometry field is first accessed, GeoDjango creates a &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object, exposing powerful functionality, such as serialization properties for popular geospatial formats:</source>
          <target state="translated">GeoDjango загружает геометрии в стандартизированном текстовом представлении. При первом обращении к полю геометрии GeoDjango создает объект &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; , предоставляя мощные функциональные возможности, такие как свойства сериализации для популярных геопространственных форматов:</target>
        </trans-unit>
        <trans-unit id="cddbaf21c073b2a21bf62f706b2d1a36600503f4" translate="yes" xml:space="preserve">
          <source>GeoDjango provides a high-level Python interface for some of the capabilities of OGR, including the reading and coordinate transformation of vector spatial data and minimal support for GDAL&amp;rsquo;s features with respect to raster (image) data.</source>
          <target state="translated">GeoDjango предоставляет высокоуровневый интерфейс Python для некоторых возможностей OGR, включая считывание и преобразование координат векторных пространственных данных и минимальную поддержку функций GDAL в отношении растровых данных (изображений).</target>
        </trans-unit>
        <trans-unit id="8ab177579f297197692478183f417ff98d86a3b9" translate="yes" xml:space="preserve">
          <source>GeoDjango provides a specific serializer for the &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; format. See &lt;a href=&quot;../../../topics/serialization&quot;&gt;Serializing Django objects&lt;/a&gt; for more information on serialization.</source>
          <target state="translated">GeoDjango предоставляет специальный сериализатор для формата &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; . См. &lt;a href=&quot;../../../topics/serialization&quot;&gt;Сериализация объектов Django&lt;/a&gt; для получения дополнительной информации о сериализации.</target>
        </trans-unit>
        <trans-unit id="c6f946f97cdb6a58a41890ac734eee51f28851ab" translate="yes" xml:space="preserve">
          <source>GeoDjango provides some specialized form fields and widgets in order to visually display and edit geolocalized data on a map. By default, they use &lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;-powered maps, with a base WMS layer provided by &lt;a href=&quot;https://earthdata.nasa.gov/&quot;&gt;NASA&lt;/a&gt;.</source>
          <target state="translated">GeoDjango предоставляет некоторые специализированные поля формы и виджеты для визуального отображения и редактирования геолокализованных данных на карте. По умолчанию они используют карты &lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt; с базовым слоем WMS, предоставленным &lt;a href=&quot;https://earthdata.nasa.gov/&quot;&gt;НАСА&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98075c705db0a9e3c5b3b71dc6c87a9bcbadfa67" translate="yes" xml:space="preserve">
          <source>GeoDjango tests</source>
          <target state="translated">тесты GeoDjango</target>
        </trans-unit>
        <trans-unit id="9c538087cb08785ef5d39189792a0d2ae13b7b4e" translate="yes" xml:space="preserve">
          <source>GeoDjango uses and/or provides interfaces for the following open source geospatial libraries:</source>
          <target state="translated">GeoDjango использует и/или предоставляет интерфейсы для следующих геопространственных библиотек с открытым исходным кодом:</target>
        </trans-unit>
        <trans-unit id="e7fc3d592fa359935e1ebdcd77cec13e8dffc4dc" translate="yes" xml:space="preserve">
          <source>GeoDjango uses the &lt;a href=&quot;https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; routine from &lt;code&gt;ctypes.util&lt;/code&gt; to locate shared libraries.</source>
          <target state="translated">GeoDjango использует процедуру &lt;a href=&quot;https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; из &lt;code&gt;ctypes.util&lt;/code&gt; для поиска общих библиотек.</target>
        </trans-unit>
        <trans-unit id="0a0924509e0f06a4da5f90bc04f536663113ff96" translate="yes" xml:space="preserve">
          <source>GeoDjango uses the &lt;code&gt;find_library&lt;/code&gt; function (from the &lt;code&gt;ctypes.util&lt;/code&gt; Python module) to discover libraries. The &lt;code&gt;find_library&lt;/code&gt; routine uses a program called &lt;code&gt;objdump&lt;/code&gt; (part of the &lt;code&gt;binutils&lt;/code&gt; package) to verify a shared library on GNU/Linux systems. Thus, if &lt;code&gt;binutils&lt;/code&gt; is not installed on your Linux system then Python&amp;rsquo;s ctypes may not be able to find your library even if your library path is set correctly and geospatial libraries were built perfectly.</source>
          <target state="translated">GeoDjango использует функцию &lt;code&gt;find_library&lt;/code&gt; (из &lt;code&gt;ctypes.util&lt;/code&gt; Python ctypes.util ) для обнаружения библиотек. Процедура &lt;code&gt;find_library&lt;/code&gt; использует программу &lt;code&gt;objdump&lt;/code&gt; (часть пакета &lt;code&gt;binutils&lt;/code&gt; ) для проверки общей библиотеки в системах GNU / Linux. Таким образом, если &lt;code&gt;binutils&lt;/code&gt; не установлен в вашей системе Linux, тогда Python ctypes не сможет найти вашу библиотеку, даже если ваш путь к библиотеке задан правильно и геопространственные библиотеки были построены идеально.</target>
        </trans-unit>
        <trans-unit id="b01014a3c4d84619b154a68ffd6fdcb1cf93cf08" translate="yes" xml:space="preserve">
          <source>GeoDjango uses the GDAL geospatial library which is not thread safe at this time. Thus, it is &lt;em&gt;highly&lt;/em&gt; recommended to not use threading when deploying &amp;ndash; in other words, use an appropriate configuration of Apache.</source>
          <target state="translated">GeoDjango использует геопространственную библиотеку GDAL, которая в настоящее время не является поточно-ориентированной. Таким образом, &lt;em&gt;настоятельно&lt;/em&gt; рекомендуется не использовать многопоточность при развертывании - другими словами, используйте соответствующую конфигурацию Apache.</target>
        </trans-unit>
        <trans-unit id="16ae67bb3fc772005f084defbf2e6db1d92d5719" translate="yes" xml:space="preserve">
          <source>GeoDjango widgets are template-based, so their attributes are mostly different from other Django widget attributes.</source>
          <target state="translated">Виджеты GeoDjango основаны на шаблонах,поэтому их атрибуты в основном отличаются от других атрибутов виджетов Django.</target>
        </trans-unit>
        <trans-unit id="9d8e7e09cdd6b3e40cc49012bdb226fb60c1266a" translate="yes" xml:space="preserve">
          <source>GeoDjango&amp;rsquo;s ORM will automatically wrap geometry values in transformation SQL, allowing the developer to work at a higher level of abstraction:</source>
          <target state="translated">ORM GeoDjango автоматически обернет значения геометрии в преобразование SQL, что позволит разработчику работать на более высоком уровне абстракции:</target>
        </trans-unit>
        <trans-unit id="136545a4948e28df9a4cfd41baae8bdacfa95501" translate="yes" xml:space="preserve">
          <source>GeoDjango&amp;rsquo;s admin site</source>
          <target state="translated">Административный сайт GeoDjango</target>
        </trans-unit>
        <trans-unit id="1cbe465617fb128d99a40591f1695db47635c221" translate="yes" xml:space="preserve">
          <source>GeoDjango&amp;rsquo;s lookup types may be used with any manager method like &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;exclude()&lt;/code&gt;, etc. However, the lookup types unique to GeoDjango are only available on spatial fields.</source>
          <target state="translated">Типы поиска GeoDjango могут использоваться с любым методом менеджера, таким как &lt;code&gt;filter()&lt;/code&gt; , &lt;code&gt;exclude()&lt;/code&gt; и т. Д. Однако типы поиска, уникальные для GeoDjango, доступны только для пространственных полей.</target>
        </trans-unit>
        <trans-unit id="e930c77fc593e1a3057029af0150f200e578a5f8" translate="yes" xml:space="preserve">
          <source>GeoDjango’s admin site</source>
          <target state="translated">сайт администратора GeoDjango</target>
        </trans-unit>
        <trans-unit id="98ee0730fa1ecffb4446df2cf10fd043d3f3523c" translate="yes" xml:space="preserve">
          <source>GeoIP</source>
          <target state="translated">GeoIP</target>
        </trans-unit>
        <trans-unit id="39ee39af2d2e3bf7b46140abbb7f4371a399a37f" translate="yes" xml:space="preserve">
          <source>GeoIP(R) is a registered trademark of MaxMind, Inc.</source>
          <target state="translated">GeoIP(R)является зарегистрированной торговой маркой компании MaxMind,Inc.</target>
        </trans-unit>
        <trans-unit id="97eeda258d4d0c87a81a7741038e625eda23a2a6" translate="yes" xml:space="preserve">
          <source>GeoJSON</source>
          <target state="translated">GeoJSON</target>
        </trans-unit>
        <trans-unit id="34040826ec22e3299cf157468d8b0814d292c197" translate="yes" xml:space="preserve">
          <source>GeoJSON Serializer</source>
          <target state="translated">сериализатор ГеоЖсона</target>
        </trans-unit>
        <trans-unit id="4c3f8a1884337450687146c8287b49e38ea44373" translate="yes" xml:space="preserve">
          <source>Geographic Admin</source>
          <target state="translated">Географический администратор</target>
        </trans-unit>
        <trans-unit id="08a11adebd76ce7a843b8dca89cdaf9b00bb0144" translate="yes" xml:space="preserve">
          <source>Geographic Data</source>
          <target state="translated">Географические данные</target>
        </trans-unit>
        <trans-unit id="0eda40b0a849adbdecdc0f612b3bd4d836c6e254" translate="yes" xml:space="preserve">
          <source>Geographic Database Functions</source>
          <target state="translated">Функции географической базы данных</target>
        </trans-unit>
        <trans-unit id="a703edbf6881dafb5316d88af33048e916592325" translate="yes" xml:space="preserve">
          <source>Geographic Feeds</source>
          <target state="translated">Географические Потоки</target>
        </trans-unit>
        <trans-unit id="190944449613afbd7f9bd321a28222ea15fa1f9b" translate="yes" xml:space="preserve">
          <source>Geographic Models</source>
          <target state="translated">Географические модели</target>
        </trans-unit>
        <trans-unit id="7a861886b376799d062ab3c6823b4d1c938a1308" translate="yes" xml:space="preserve">
          <source>Geographic Sitemaps</source>
          <target state="translated">Географические карты</target>
        </trans-unit>
        <trans-unit id="021a323d2229cf60dd8130ccafa9464d9f895101" translate="yes" xml:space="preserve">
          <source>Geographic annotations</source>
          <target state="translated">Географические аннотации</target>
        </trans-unit>
        <trans-unit id="2e8c2b4df8eeaac4252c5331e04802c9b86ab936" translate="yes" xml:space="preserve">
          <source>Geographic framework</source>
          <target state="translated">Географические рамки</target>
        </trans-unit>
        <trans-unit id="0079ff114abc2ccabd5e955bd2f167e7889a1687" translate="yes" xml:space="preserve">
          <source>Geographic queries with geometries take the following general form (assuming the &lt;code&gt;Zipcode&lt;/code&gt; model used in the &lt;a href=&quot;model-api&quot;&gt;GeoDjango Model API&lt;/a&gt;):</source>
          <target state="translated">Географические запросы с геометриями принимают следующую общую форму (при условии, что модель &lt;code&gt;Zipcode&lt;/code&gt; используется в &lt;a href=&quot;model-api&quot;&gt;API модели GeoDjango&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="0c0fac69cdfabd05c7df2017c1e01ab5627a45ab" translate="yes" xml:space="preserve">
          <source>Geography Type</source>
          <target state="translated">Тип географии</target>
        </trans-unit>
        <trans-unit id="fbe47565ebdb262717c7861ebf58e31b12c1414d" translate="yes" xml:space="preserve">
          <source>Geography support is limited to PostGIS and will force the SRID to be 4326.</source>
          <target state="translated">Географическая поддержка ограничена PostGIS и будет вынуждать SRID быть 4326.</target>
        </trans-unit>
        <trans-unit id="46250ca0dfb01ec701cd710565523f12ab685b09" translate="yes" xml:space="preserve">
          <source>Geolocation with GeoIP2</source>
          <target state="translated">Геолокация с GeoIP2</target>
        </trans-unit>
        <trans-unit id="35171d7fc44e44bbd149d79f68793a5f09307bb0" translate="yes" xml:space="preserve">
          <source>Geometries are Pythonic</source>
          <target state="translated">Геометрия-питоническая</target>
        </trans-unit>
        <trans-unit id="9a9e67d4b853d4bb48d8ab51f08cb7351bf0a8ff" translate="yes" xml:space="preserve">
          <source>Geometries support set-like operators:</source>
          <target state="translated">Геометрия поддерживает операторов,похожих на наборы:</target>
        </trans-unit>
        <trans-unit id="9d1226717c2fc305626512b0a1ae618fddfee0b9" translate="yes" xml:space="preserve">
          <source>Geometry</source>
          <target state="translated">Geometry</target>
        </trans-unit>
        <trans-unit id="6bf68521ba1b36c0e30717dcc5416290c2bd195a" translate="yes" xml:space="preserve">
          <source>Geometry Collections</source>
          <target state="translated">Геометрия Коллекции</target>
        </trans-unit>
        <trans-unit id="634de25ba228f9fe855e233d1a73bb1e3624e2b2" translate="yes" xml:space="preserve">
          <source>Geometry Engine Open Source</source>
          <target state="translated">Двигатель геометрии с открытым исходным кодом</target>
        </trans-unit>
        <trans-unit id="d3262bc1ec3d4cb7ac4532f23997b4f04e17ee63" translate="yes" xml:space="preserve">
          <source>Geometry Factories</source>
          <target state="translated">Геометрические заводы</target>
        </trans-unit>
        <trans-unit id="7bd508896b5eca1c3e3ad0712513d474a8a12299" translate="yes" xml:space="preserve">
          <source>Geometry Field Options</source>
          <target state="translated">Опции поля геометрии</target>
        </trans-unit>
        <trans-unit id="a5d5114f7a773f987eb673d642d7f9de4967fe5d" translate="yes" xml:space="preserve">
          <source>Geometry Lookups</source>
          <target state="translated">Геометрические Искания</target>
        </trans-unit>
        <trans-unit id="0c966cf1201e4037c0f25b2d0ce4de2ba27b4d5a" translate="yes" xml:space="preserve">
          <source>Geometry Objects</source>
          <target state="translated">Объекты геометрии</target>
        </trans-unit>
        <trans-unit id="7c0ba0c8b987af42bc684ac9ce4f146c583a5ebc" translate="yes" xml:space="preserve">
          <source>Geometry conversion support &lt;code&gt;C&lt;/code&gt;. The lookup does not have native raster support, all raster data is automatically converted to geometries.</source>
          <target state="translated">Геометрия преобразования Поддержка &lt;code&gt;C&lt;/code&gt; . Поиск не имеет встроенной поддержки растров, все растровые данные автоматически конвертируются в геометрию.</target>
        </trans-unit>
        <trans-unit id="08c06c630a3754e6edc49ddc9cd070ec64b0b09d" translate="yes" xml:space="preserve">
          <source>Geometry example:</source>
          <target state="translated">Пример геометрии:</target>
        </trans-unit>
        <trans-unit id="7a62c2c9bf321ceff5fae325eafc6d04db4cc6ff" translate="yes" xml:space="preserve">
          <source>Geospatial Data Abstraction Library</source>
          <target state="translated">Библиотека аннотаций геопространственных данных</target>
        </trans-unit>
        <trans-unit id="0dc2e5954c12f037f940d57ec5c9b7afe01ce77f" translate="yes" xml:space="preserve">
          <source>Geospatial libraries</source>
          <target state="translated">Геопространственные библиотеки</target>
        </trans-unit>
        <trans-unit id="99ed2c09261dfab0ea3ab6d07aae9b6d75fa093d" translate="yes" xml:space="preserve">
          <source>German legal metre</source>
          <target state="translated">немецкий юридический метр</target>
        </trans-unit>
        <trans-unit id="69e57c40eaf705eec95814bf280b26be032b7fce" translate="yes" xml:space="preserve">
          <source>Get the latest SpatiaLite library source bundle from the &lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/libspatialite-sources/&quot;&gt;download page&lt;/a&gt;:</source>
          <target state="translated">Загрузите последнюю версию пакета исходных текстов библиотеки SpatiaLite со &lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/libspatialite-sources/&quot;&gt;страницы загрузки&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f8219b39fc78d276a3e9eee050eeafc262ee63bc" translate="yes" xml:space="preserve">
          <source>Get the latest version of Python at &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; or with your operating system&amp;rsquo;s package manager.</source>
          <target state="translated">Загрузите последнюю версию Python по адресу &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; или с помощью менеджера пакетов вашей операционной системы.</target>
        </trans-unit>
        <trans-unit id="349ffb96bafdf031de5166a9a6d08020c5ebd1ec" translate="yes" xml:space="preserve">
          <source>Get the list of items for this view. This must be an iterable and may be a queryset (in which queryset-specific behavior will be enabled).</source>
          <target state="translated">Получить список пунктов для этого вида.Он должен быть итерабельным и может быть кварсетом (в котором будет включено поведение,специфичное для данного кварсета).</target>
        </trans-unit>
        <trans-unit id="c595045ec25964be60d78faa85d89371211ec4b1" translate="yes" xml:space="preserve">
          <source>Get things right from the start</source>
          <target state="translated">С самого начала.</target>
        </trans-unit>
        <trans-unit id="ddf2045ef69c7a12fcf93ada7af9c40769a94785" translate="yes" xml:space="preserve">
          <source>Get your database running</source>
          <target state="translated">Запустите свою базу данных</target>
        </trans-unit>
        <trans-unit id="3cd928230f05d523f41f71e6df4e087feb93a4dd" translate="yes" xml:space="preserve">
          <source>Gettext utilities</source>
          <target state="translated">утилиты Gettext</target>
        </trans-unit>
        <trans-unit id="16bf3406ad6ebe10ef028b5b1dc22df2a8c7a781" translate="yes" xml:space="preserve">
          <source>Getting a copy of Django&amp;rsquo;s development version</source>
          <target state="translated">Получение копии разрабатываемой версии Django</target>
        </trans-unit>
        <trans-unit id="3752376ac856de4d9f6ea65db547f68c6031974e" translate="yes" xml:space="preserve">
          <source>Getting a list of FlatPage objects in your templates</source>
          <target state="translated">Получение списка объектов FlatPage в ваших шаблонах.</target>
        </trans-unit>
        <trans-unit id="060f712c74598ce01e86d56802d9344d8ed68bb7" translate="yes" xml:space="preserve">
          <source>Getting help</source>
          <target state="translated">Получить помощь</target>
        </trans-unit>
        <trans-unit id="095e7a3db06b22c5a52190502caa36691be8935e" translate="yes" xml:space="preserve">
          <source>Getting runtime help</source>
          <target state="translated">Получение справки о прогоне</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">Начало работы</target>
        </trans-unit>
        <trans-unit id="85846ce2a297da86bf6e7a51470a230994164cad" translate="yes" xml:space="preserve">
          <source>Getting the current domain for display</source>
          <target state="translated">Получение текущего домена для отображения</target>
        </trans-unit>
        <trans-unit id="d5783cf876d18d2878f81129550d5945ce0679bf" translate="yes" xml:space="preserve">
          <source>Getting the current domain for full URLs</source>
          <target state="translated">Получение текущего домена для полных URL-адресов</target>
        </trans-unit>
        <trans-unit id="03fb97db904d87ad00dad0da6fa0440ea4978bb4" translate="yes" xml:space="preserve">
          <source>Getting the current storage class</source>
          <target state="translated">Получение текущего класса хранения</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="a379f1c31915bf948dceb7774f0d0b06315610cf" translate="yes" xml:space="preserve">
          <source>Give &lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt;&lt;code&gt;Paginator&lt;/code&gt;&lt;/a&gt; a list of objects, plus the number of items you&amp;rsquo;d like to have on each page, and it gives you methods for accessing the items for each page:</source>
          <target state="translated">Дайте &lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt; &lt;code&gt;Paginator&lt;/code&gt; &lt;/a&gt; список объектов, а также количество элементов, которые вы хотели бы иметь на каждой странице, и он дает вам способы доступа к элементам для каждой страницы:</target>
        </trans-unit>
        <trans-unit id="2d98907f33fa5c7e1fd2266881356efab899491c" translate="yes" xml:space="preserve">
          <source>Give Django your database parameters</source>
          <target state="translated">Дайте Django параметры вашей базы данных</target>
        </trans-unit>
        <trans-unit id="6681947b2c88d7800dc6eec380b6e38b3d17b132" translate="yes" xml:space="preserve">
          <source>Give your model a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt;, and pass it the names of the two fields described above. If these fields are named &amp;ldquo;content_type&amp;rdquo; and &amp;ldquo;object_id&amp;rdquo;, you can omit this &amp;ndash; those are the default field names &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; will look for.</source>
          <target state="translated">Дайте вашей модели &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; и передайте ей имена двух полей, описанных выше. Если эти поля названы &amp;laquo;content_type&amp;raquo; и &amp;laquo;object_id&amp;raquo;, вы можете опустить это - это имена &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; по умолчанию, которые будет искать GenericForeignKey .</target>
        </trans-unit>
        <trans-unit id="942bc2871d4842b9f270c2479b3dd36378a861ad" translate="yes" xml:space="preserve">
          <source>Give your model a &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;. The usual name for this field is &amp;ldquo;content_type&amp;rdquo;.</source>
          <target state="translated">Дайте вашей модели в &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; к &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; . Обычное имя для этого поля - &amp;laquo;content_type&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="68438852373dfcf41a28180c2297d1cc31651229" translate="yes" xml:space="preserve">
          <source>Give your model a field that can store primary key values from the models you&amp;rsquo;ll be relating to. For most models, this means a &lt;a href=&quot;../models/fields#django.db.models.PositiveIntegerField&quot;&gt;&lt;code&gt;PositiveIntegerField&lt;/code&gt;&lt;/a&gt;. The usual name for this field is &amp;ldquo;object_id&amp;rdquo;.</source>
          <target state="translated">Дайте вашей модели поле, в котором можно хранить значения первичного ключа из моделей, к которым вы будете относиться. Для большинства моделей это означает &lt;a href=&quot;../models/fields#django.db.models.PositiveIntegerField&quot;&gt; &lt;code&gt;PositiveIntegerField&lt;/code&gt; &lt;/a&gt; . Обычное имя для этого поля - &amp;laquo;object_id&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d83ce53d6e4a13ff9f676afe3335baa6383a5f2e" translate="yes" xml:space="preserve">
          <source>Give your model metadata by using an inner &lt;code&gt;class Meta&lt;/code&gt;, like so:</source>
          <target state="translated">Передайте метаданные вашей модели, используя внутренний &lt;code&gt;class Meta&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="ec0d34e7da73bbe49b892f918897ee31576ecbf5" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;files&lt;/code&gt; dictionaries and this widget&amp;rsquo;s name, returns whether or not there&amp;rsquo;s data or files for the widget.</source>
          <target state="translated">Заданные словари &lt;code&gt;data&lt;/code&gt; и &lt;code&gt;files&lt;/code&gt; и имя этого виджета, возвращает, есть ли данные или файлы для виджета.</target>
        </trans-unit>
        <trans-unit id="0c2297fdd50dfa2cb53228dc47c397f2594f114b" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;Blog&lt;/code&gt; instance &lt;code&gt;b5&lt;/code&gt; that has already been saved to the database, this example changes its name and updates its record in the database:</source>
          <target state="translated">Учитывая экземпляр &lt;code&gt;Blog&lt;/code&gt; &lt;code&gt;b5&lt;/code&gt; , который уже был сохранен в базе данных, этот пример меняет свое имя и обновляет свою запись в базе данных:</target>
        </trans-unit>
        <trans-unit id="7517c0cbad9c754ae327298f888dae38e0a51a05" translate="yes" xml:space="preserve">
          <source>Given a contact form:</source>
          <target state="translated">При наличии контактной формы:</target>
        </trans-unit>
        <trans-unit id="8b44975103a4bb30c311396e36118463fdf07d71" translate="yes" xml:space="preserve">
          <source>Given a dictionary of data and this widget&amp;rsquo;s name, returns the value of this widget. &lt;code&gt;files&lt;/code&gt; may contain data coming from &lt;a href=&quot;../request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt;. Returns &lt;code&gt;None&lt;/code&gt; if a value wasn&amp;rsquo;t provided. Note also that &lt;code&gt;value_from_datadict&lt;/code&gt; may be called more than once during handling of form data, so if you customize it and add expensive processing, you should implement some caching mechanism yourself.</source>
          <target state="translated">Учитывая словарь данных и имя этого виджета, возвращает значение этого виджета. &lt;code&gt;files&lt;/code&gt; могут содержать данные, поступающие из &lt;a href=&quot;../request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt; . Возвращает &lt;code&gt;None&lt;/code&gt; , если значение не было предоставлено. Также обратите внимание, что значение &lt;code&gt;value_from_datadict&lt;/code&gt; может вызываться более одного раза во время обработки данных формы, поэтому, если вы настраиваете его и добавляете дорогостоящую обработку, вам следует самостоятельно внедрить некоторый механизм кэширования.</target>
        </trans-unit>
        <trans-unit id="119e6f39993a5ece4c0066d470355c216ce3f6c9" translate="yes" xml:space="preserve">
          <source>Given a distance (float), returns the point (or closest point) within the geometry (&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.gis.geos.MultiLineString&quot;&gt;&lt;code&gt;MultiLineString&lt;/code&gt;&lt;/a&gt;) at that distance. The normalized version takes the distance as a float between 0 (origin) and 1 (endpoint).</source>
          <target state="translated">При заданном расстоянии (с плавающей точкой) возвращает точку (или ближайшую точку) в геометрии ( &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#django.contrib.gis.geos.MultiLineString&quot;&gt; &lt;code&gt;MultiLineString&lt;/code&gt; &lt;/a&gt; ) на этом расстоянии. Нормализованная версия принимает расстояние как плавающее между 0 (начало координат) и 1 (конечная точка).</target>
        </trans-unit>
        <trans-unit id="a0116de099366db2ec64edadc7d21c2a59efd76d" translate="yes" xml:space="preserve">
          <source>Given a form field&amp;rsquo;s &lt;code&gt;initial&lt;/code&gt; value, returns whether or not the widget can be rendered with the &lt;code&gt;required&lt;/code&gt; HTML attribute. Forms use this method along with &lt;a href=&quot;fields#django.forms.Field.required&quot;&gt;&lt;code&gt;Field.required&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt;&lt;code&gt;Form.use_required_attribute&lt;/code&gt;&lt;/a&gt; to determine whether or not to display the &lt;code&gt;required&lt;/code&gt; attribute for each field.</source>
          <target state="translated">При заданном &lt;code&gt;initial&lt;/code&gt; значении поля формы возвращает, может ли виджет отображаться с &lt;code&gt;required&lt;/code&gt; атрибутом HTML. Формы используют этот метод вместе с &lt;a href=&quot;fields#django.forms.Field.required&quot;&gt; &lt;code&gt;Field.required&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt; &lt;code&gt;Form.use_required_attribute&lt;/code&gt; ,&lt;/a&gt; чтобы определить, отображать или нет &lt;code&gt;required&lt;/code&gt; атрибут для каждого поля.</target>
        </trans-unit>
        <trans-unit id="25ce09b71e61c136d2d9c17228b7872efdce4f9e" translate="yes" xml:space="preserve">
          <source>Given a middleware class, returns a view decorator. This lets you use middleware functionality on a per-view basis. The middleware is created with no params passed.</source>
          <target state="translated">Учитывая промежуточный класс,возвращает декоратора вида.Это позволяет использовать функциональность промежуточного программного обеспечения для каждого вида.Промежуточное ПО создается без передачи параметров.</target>
        </trans-unit>
        <trans-unit id="365439c148a642d6a442b1b041f1b802323a613e" translate="yes" xml:space="preserve">
          <source>Given a model instance, the display value for a field with &lt;code&gt;choices&lt;/code&gt; can be accessed using the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_FOO_display&quot;&gt;&lt;code&gt;get_FOO_display()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">Для данного экземпляра модели доступ к отображаемому значению поля с &lt;code&gt;choices&lt;/code&gt; можно получить с помощью &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_FOO_display&quot;&gt; &lt;code&gt;get_FOO_display()&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="1b1e3dc1152220b4ff60c94af1d5193dc75aa0d2" translate="yes" xml:space="preserve">
          <source>Given a whole number, returns the requested digit, where 1 is the right-most digit, 2 is the second-right-most digit, etc. Returns the original value for invalid input (if input or argument is not an integer, or if argument is less than 1). Otherwise, output is always an integer.</source>
          <target state="translated">Учитывая целое число,возвращает запрашиваемую цифру,где 1-крайняя правая цифра,2-крайняя вторая правая цифра и т.д.Возвращает исходное значение для неправильного ввода (если ввод или аргумент не является целым числом,или если аргумент меньше 1).В противном случае вывод всегда является целым числом.</target>
        </trans-unit>
        <trans-unit id="3a24cd0b9164167b8eb5ad888792e3a7b90dd361" translate="yes" xml:space="preserve">
          <source>Given format can be the predefined one &lt;a href=&quot;../settings#std:setting-TIME_FORMAT&quot;&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt;&lt;/a&gt;, or a custom format, same as the &lt;a href=&quot;#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; filter. Note that the predefined format is locale-dependent.</source>
          <target state="translated">Данный формат может быть предопределенным &lt;a href=&quot;../settings#std:setting-TIME_FORMAT&quot;&gt; &lt;code&gt;TIME_FORMAT&lt;/code&gt; &lt;/a&gt; или пользовательским форматом, таким же, как фильтр &lt;a href=&quot;#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; . Обратите внимание, что предопределенный формат зависит от локали.</target>
        </trans-unit>
        <trans-unit id="5ba0b76f9d8c9781c32b85d824833b69cc244a80" translate="yes" xml:space="preserve">
          <source>Given the above &lt;code&gt;'Cheddar Talk'&lt;/code&gt; blog example, this example would override the previous record in the database:</source>
          <target state="translated">Учитывая приведенный выше пример блога &lt;code&gt;'Cheddar Talk'&lt;/code&gt; , этот пример переопределит предыдущую запись в базе данных:</target>
        </trans-unit>
        <trans-unit id="d37c78d85d3a7273f3922e688e66c694ac20f4ef" translate="yes" xml:space="preserve">
          <source>Given the above template error, &lt;code&gt;template_debug&lt;/code&gt; would look like:</source>
          <target state="translated">Учитывая вышеприведенную ошибку &lt;code&gt;template_debug&lt;/code&gt; , template_debug будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="3714bdc37d70180c2c462d1df29b61921d28b425" translate="yes" xml:space="preserve">
          <source>Given the datetime &lt;code&gt;2015-06-15 14:30:50.000321+00:00&lt;/code&gt;, the built-in &lt;code&gt;kind&lt;/code&gt;s return:</source>
          <target state="translated">Учитывая &lt;code&gt;2015-06-15 14:30:50.000321+00:00&lt;/code&gt; время 2015-06-15 14: 30: 50.000321 + 00: 00 , возврат встроенного &lt;code&gt;kind&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a29688721ee0be91dd38356c46ff2c8ad421e5f" translate="yes" xml:space="preserve">
          <source>Given the datetime &lt;code&gt;2015-06-15 23:30:01.000321+00:00&lt;/code&gt;, the built-in &lt;code&gt;lookup_name&lt;/code&gt;s return:</source>
          <target state="translated">Учитывая &lt;code&gt;2015-06-15 23:30:01.000321+00:00&lt;/code&gt; время 2015-06-15 23: 30: 01.000321 + 00: 00 , возвращаемое встроенное имя- &lt;code&gt;lookup_name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88b00b26884e185bb263dd1c872db086f631c7b3" translate="yes" xml:space="preserve">
          <source>Given this standard interface, an &lt;code&gt;HttpRequest&lt;/code&gt; instance can be passed directly to an XML parser such as &lt;a href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Учитывая этот стандартный интерфейс, экземпляр &lt;code&gt;HttpRequest&lt;/code&gt; может быть передан непосредственно в синтаксический анализатор XML, такой как &lt;a href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4975cd64a92e88880758085eef7772db2bdb4f4d" translate="yes" xml:space="preserve">
          <source>Given:</source>
          <target state="translated">Given:</target>
        </trans-unit>
        <trans-unit id="9d05ac7a7d5e5cd76d141b9fe988215dfd520a74" translate="yes" xml:space="preserve">
          <source>Globalization (&lt;code&gt;i18n&lt;/code&gt;/&lt;code&gt;l10n&lt;/code&gt;)</source>
          <target state="translated">Глобализация ( &lt;code&gt;i18n&lt;/code&gt; / &lt;code&gt;l10n&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ba172508be68719fa9795c5f2138b1035ec574a1" translate="yes" xml:space="preserve">
          <source>Go ahead and install the previously cloned copy of Django:</source>
          <target state="translated">Установите ранее клонированную копию Django:</target>
        </trans-unit>
        <trans-unit id="739cebceefdb523d7e9f5a9b6a934e37e2d1de98" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http://localhost:8000/polls/&lt;/a&gt; in your browser, and you should see the text &amp;ldquo;&lt;em&gt;Hello, world. You&amp;rsquo;re at the polls index.&lt;/em&gt;&amp;rdquo;, which you defined in the &lt;code&gt;index&lt;/code&gt; view.</source>
          <target state="translated">Перейдите по &lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;адресу http: // localhost: 8000 / polls /&lt;/a&gt; в вашем браузере, и вы должны увидеть текст &amp;laquo; &lt;em&gt;Hello, world. Вы в индексе опросов. &lt;/em&gt;&amp;rdquo;, Который вы определили в представлении &lt;code&gt;index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e865850e7567ce4f66ee6883bb54c84fff0e9193" translate="yes" xml:space="preserve">
          <source>Gold Coast foot</source>
          <target state="translated">Подножие Золотого Побережья</target>
        </trans-unit>
        <trans-unit id="f179b6f36465b5aac2f67605586252775def9c70" translate="yes" xml:space="preserve">
          <source>Good:</source>
          <target state="translated">Good:</target>
        </trans-unit>
        <trans-unit id="77903aaddab038102d4549b08d4a2e68bdafb921" translate="yes" xml:space="preserve">
          <source>Good: &lt;code&gt;'/foo/bar/'&lt;/code&gt;</source>
          <target state="translated">Хорошо: &lt;code&gt;'/foo/bar/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84cc7d32930e72c5b9fc5a877106db98126eb15c" translate="yes" xml:space="preserve">
          <source>Google PageSpeed</source>
          <target state="translated">Google PageSpeed</target>
        </trans-unit>
        <trans-unit id="e391eebe3da38bf188122fbc620ac8276e058db8" translate="yes" xml:space="preserve">
          <source>Greater than or equal to.</source>
          <target state="translated">Больше или равно.</target>
        </trans-unit>
        <trans-unit id="1a0cf2334e157e041cd80ecac674aacbdace7685" translate="yes" xml:space="preserve">
          <source>Greater than or equal to. Example:</source>
          <target state="translated">Больше или равно.Пример:</target>
        </trans-unit>
        <trans-unit id="0bb5b098cc8f14ae1d23ed0bdc731dd64c4176ef" translate="yes" xml:space="preserve">
          <source>Greater than.</source>
          <target state="translated">Больше чем.</target>
        </trans-unit>
        <trans-unit id="d65a7235faec5e7686d204089dc0b355a23e4154" translate="yes" xml:space="preserve">
          <source>Greater than. Example:</source>
          <target state="translated">Больше чем.Пример:</target>
        </trans-unit>
        <trans-unit id="4858407f7012787457799245e5f0bd3b83a5adc2" translate="yes" xml:space="preserve">
          <source>Grouping on other properties</source>
          <target state="translated">Группировка по прочим свойствам</target>
        </trans-unit>
        <trans-unit id="ae9629f4ebb82c6331c0809fa9a0e54b00e578e6" translate="yes" xml:space="preserve">
          <source>Groups</source>
          <target state="translated">Groups</target>
        </trans-unit>
        <trans-unit id="7dd43e46b89810a494974c2ea0f7a7775e008522" translate="yes" xml:space="preserve">
          <source>Groups: A generic way of applying labels and permissions to more than one user.</source>
          <target state="translated">Группы:Общий способ применения меток и разрешений к нескольким пользователям.</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="f88767387128fd81f27474f40a7e375537269897" translate="yes" xml:space="preserve">
          <source>Guides: How-tos</source>
          <target state="translated">Путеводители:How-tos</target>
        </trans-unit>
        <trans-unit id="70cd7eb95746087d1d1f0e4c0e095606fcd9f55b" translate="yes" xml:space="preserve">
          <source>Guides: Intro</source>
          <target state="translated">Путеводители:Введение</target>
        </trans-unit>
        <trans-unit id="550b6c2e449f5e1e62c195eae6c4b6fca172b664" translate="yes" xml:space="preserve">
          <source>HEX / HEXEWKB</source>
          <target state="translated">ГЕКС/ГЕКСЭВКБ</target>
        </trans-unit>
        <trans-unit id="c2f470b5eb2e1406be38abd6762532b112bbb2fd" translate="yes" xml:space="preserve">
          <source>HSTS is an HTTP header that informs a browser that all future connections to a particular site should always use HTTPS. Combined with redirecting requests over HTTP to HTTPS, this will ensure that connections always enjoy the added security of SSL provided one successful connection has occurred. HSTS may either be configured with &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt;&lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt;&lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt;&lt;/a&gt;, or on the Web server.</source>
          <target state="translated">HSTS - это HTTP-заголовок, который сообщает браузеру, что все будущие подключения к определенному сайту всегда должны использовать HTTPS. В сочетании с перенаправлением запросов через HTTP на HTTPS, это гарантирует, что соединения всегда будут пользоваться дополнительной безопасностью SSL при наличии одного успешного соединения. HSTS может быть настроен с &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt; &lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt; &lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt; &lt;/a&gt; или на веб-сервере.</target>
        </trans-unit>
        <trans-unit id="a307b98224835cb2929f0a670d5d37725809e298" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;id&lt;/code&gt; attributes on the form elements.</source>
          <target state="translated">Атрибуты HTML &lt;code&gt;id&lt;/code&gt; в элементах формы.</target>
        </trans-unit>
        <trans-unit id="7803fb9ad97a390e5a19c56907c38525501a3225" translate="yes" xml:space="preserve">
          <source>HTML form submission is a tricky area. There&amp;rsquo;s no guarantee that the submission will include encoding information, which means the framework might have to guess at the encoding of submitted data.</source>
          <target state="translated">Отправка HTML-формы - сложная задача. Нет никакой гарантии, что отправка будет включать информацию о кодировке, что означает, что платформе, возможно, придется угадывать кодировку представленных данных.</target>
        </trans-unit>
        <trans-unit id="b06b171ed438d64895564aa6fdbd928c4e3f83e8" translate="yes" xml:space="preserve">
          <source>HTML forms</source>
          <target state="translated">HTML-формы</target>
        </trans-unit>
        <trans-unit id="b98947084aa9e08a220c89b11ad0490ed9829cdd" translate="yes" xml:space="preserve">
          <source>HTML5 input types and browser validation</source>
          <target state="translated">типы ввода HTML5 и проверка браузера</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="dc5818160f0a79f1d8b7b37801c4d5d5f5e71152" translate="yes" xml:space="preserve">
          <source>HTTP Strict Transport Security</source>
          <target state="translated">HTTP Строгая транспортная безопасность</target>
        </trans-unit>
        <trans-unit id="01fc6d102bf6376f0642cb6ab27bbd9ce1c99daf" translate="yes" xml:space="preserve">
          <source>HTTP clients can send a number of headers to tell the server about copies of a resource that they have already seen. This is commonly used when retrieving a Web page (using an HTTP &lt;code&gt;GET&lt;/code&gt; request) to avoid sending all the data for something the client has already retrieved. However, the same headers can be used for all HTTP methods (&lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, etc.).</source>
          <target state="translated">HTTP-клиенты могут отправлять несколько заголовков, чтобы сообщить серверу о копиях ресурса, который они уже видели. Это обычно используется при извлечении веб-страницы (с использованием HTTP- запроса &lt;code&gt;GET&lt;/code&gt; ), чтобы избежать отправки всех данных для чего-то, что клиент уже извлек. Однако одни и те же заголовки могут использоваться для всех методов HTTP ( &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; и т. Д.).</target>
        </trans-unit>
        <trans-unit id="766e6a6a6850f67b45994afcaa0fd166411b93fb" translate="yes" xml:space="preserve">
          <source>HTTP header fields cannot contain newlines. An attempt to set a header field containing a newline character (CR or LF) will raise &lt;code&gt;BadHeaderError&lt;/code&gt;</source>
          <target state="translated">Поля заголовка HTTP не могут содержать новые строки. Попытка установить поле заголовка, содержащее символ новой строки (CR или LF), вызовет &lt;code&gt;BadHeaderError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a7d6d24789915f29d0b4286e7264bdfafeb3eb9" translate="yes" xml:space="preserve">
          <source>HTTP performance</source>
          <target state="translated">производительность HTTP</target>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="775bc82c4bfbe164f204d0e6798621f0a7d5acfa" translate="yes" xml:space="preserve">
          <source>Handily, the &lt;code&gt;ListView&lt;/code&gt; has a &lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.get_queryset&quot;&gt;&lt;code&gt;get_queryset()&lt;/code&gt;&lt;/a&gt; method we can override. By default, it returns the value of the &lt;code&gt;queryset&lt;/code&gt; attribute, but we can use it to add more logic.</source>
          <target state="translated">Удобно, &lt;code&gt;ListView&lt;/code&gt; имеет метод &lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.get_queryset&quot;&gt; &lt;code&gt;get_queryset()&lt;/code&gt; &lt;/a&gt; который мы можем переопределить. По умолчанию он возвращает значение атрибута &lt;code&gt;queryset&lt;/code&gt; , но мы можем использовать его, чтобы добавить больше логики.</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="05ba8572a9a6792e3475e4e0412dc1a107795a7e" translate="yes" xml:space="preserve">
          <source>Handlers of this signal must not perform database schema alterations as doing so may cause the &lt;a href=&quot;django-admin#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; command to fail if it runs during the &lt;a href=&quot;django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Обработчики этого сигнала не должны выполнять изменения схемы базы данных, так как это может привести к сбою команды &lt;a href=&quot;django-admin#django-admin-flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; ,&lt;/a&gt; если она выполняется во время команды &lt;a href=&quot;django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="323e84376fdf3f635c78168388a0818a6dcc35a7" translate="yes" xml:space="preserve">
          <source>Handles conditional GET operations. If the response doesn&amp;rsquo;t have an &lt;code&gt;ETag&lt;/code&gt; header, the middleware adds one if needed. If the response has an &lt;code&gt;ETag&lt;/code&gt; or &lt;code&gt;Last-Modified&lt;/code&gt; header, and the request has &lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt;, the response is replaced by an &lt;a href=&quot;request-response#django.http.HttpResponseNotModified&quot;&gt;&lt;code&gt;HttpResponseNotModified&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обрабатывает условные операции GET. Если в ответе нет заголовка &lt;code&gt;ETag&lt;/code&gt; , промежуточное программное обеспечение добавляет его в случае необходимости. Если ответ имеет &lt;code&gt;ETag&lt;/code&gt; или &lt;code&gt;Last-Modified&lt;/code&gt; , а запрос имеет &lt;code&gt;If-None-Match&lt;/code&gt; или &lt;code&gt;If-Modified-Since&lt;/code&gt; , ответ заменяется &lt;a href=&quot;request-response#django.http.HttpResponseNotModified&quot;&gt; &lt;code&gt;HttpResponseNotModified&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b9f50ab5ace4fb669d21d51fe819de6624952c7" translate="yes" xml:space="preserve">
          <source>Handles responding to requests for the OPTIONS HTTP verb. Returns a response with the &lt;code&gt;Allow&lt;/code&gt; header containing a list of the view&amp;rsquo;s allowed HTTP method names.</source>
          <target state="translated">Обрабатывает ответы на запросы для HTTP-глагола OPTIONS. Возвращает ответ с заголовком &lt;code&gt;Allow&lt;/code&gt; , содержащим список разрешенных представлений HTTP-методов.</target>
        </trans-unit>
        <trans-unit id="64e2085c860648c646aefde6c507cdb08da718af" translate="yes" xml:space="preserve">
          <source>Handling HTTP requests</source>
          <target state="translated">Обработка HTTP-запросов</target>
        </trans-unit>
        <trans-unit id="554f39c415dd6dfb6fd370063343bb301dbfb1c2" translate="yes" xml:space="preserve">
          <source>Handling an asterisk &lt;code&gt;'*'&lt;/code&gt; according to &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.4&lt;/strong&gt;&lt;/a&gt; was added.</source>
          <target state="translated">Добавлена обработка звездочки &lt;code&gt;'*'&lt;/code&gt; в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231 # section-7.1.4&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45c281fdcfaa935eff5cdec670aec151d0248a56" translate="yes" xml:space="preserve">
          <source>Handling authorization in custom backends</source>
          <target state="translated">Обработка авторизации в пользовательских бэкэндов</target>
        </trans-unit>
        <trans-unit id="3f40bbcec32f150b1bf8b1b36828c6bcec2184c9" translate="yes" xml:space="preserve">
          <source>Handling errors in actions</source>
          <target state="translated">Обработка ошибок в действиях</target>
        </trans-unit>
        <trans-unit id="7549e355ea2bfbfff3483014ede4f6852fd36ec7" translate="yes" xml:space="preserve">
          <source>Handling exceptions within PostgreSQL transactions</source>
          <target state="translated">Обработка исключений внутри PostgreSQL-транзакций</target>
        </trans-unit>
        <trans-unit id="f4a45a24846f6ece0779cd7a39f0d28a6c76f7d1" translate="yes" xml:space="preserve">
          <source>Handling forms is a complex business. Consider Django&amp;rsquo;s admin, where numerous items of data of several different types may need to be prepared for display in a form, rendered as HTML, edited using a convenient interface, returned to the server, validated and cleaned up, and then saved or passed on for further processing.</source>
          <target state="translated">Обработка форм - сложное дело. Рассмотрим администратора Django, где может потребоваться подготовка множества элементов данных нескольких различных типов для отображения в форме, визуализации в формате HTML, редактирования с использованием удобного интерфейса, возврата на сервер, проверки и очистки, а затем сохранения или передачи для дальнейшей обработки.</target>
        </trans-unit>
        <trans-unit id="3556e4954f0ecaba30959568393e81f7c9148616" translate="yes" xml:space="preserve">
          <source>Handling forms with class-based views</source>
          <target state="translated">Обработка форм с классовыми представлениями</target>
        </trans-unit>
        <trans-unit id="c1c6055ec082f25b7c66ca247f1cdb50238e6a11" translate="yes" xml:space="preserve">
          <source>Handling object permissions</source>
          <target state="translated">Разрешения на обработку объектов</target>
        </trans-unit>
        <trans-unit id="5ecb35af693985a1c2688a53f9e642c39666465a" translate="yes" xml:space="preserve">
          <source>Handling uploaded files with a model</source>
          <target state="translated">Обработка загруженных файлов с моделью</target>
        </trans-unit>
        <trans-unit id="a5f397bd570e7e5ed6bb33e21e7f0f7f5a71a354" translate="yes" xml:space="preserve">
          <source>Has four optional arguments for validation:</source>
          <target state="translated">Имеет четыре необязательных аргумента для проверки:</target>
        </trans-unit>
        <trans-unit id="997e11fdb14bb8cc6b524263af1ed4c4a87a9091" translate="yes" xml:space="preserve">
          <source>Has one optional argument:</source>
          <target state="translated">Есть один необязательный аргумент:</target>
        </trans-unit>
        <trans-unit id="90377fb788aaf30a9be110475bdb9a11af154e2e" translate="yes" xml:space="preserve">
          <source>Has three optional arguments &lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;min_length&lt;/code&gt;, and &lt;code&gt;empty_value&lt;/code&gt; which work just as they do for &lt;a href=&quot;#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Имеет три необязательных аргумента &lt;code&gt;max_length&lt;/code&gt; , &lt;code&gt;min_length&lt;/code&gt; и &lt;code&gt;empty_value&lt;/code&gt; , которые работают так же, как и для &lt;a href=&quot;#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3459f341331aa6f9d40b4d60725d7b3624f0c602" translate="yes" xml:space="preserve">
          <source>Has three optional arguments for validation:</source>
          <target state="translated">Имеет три необязательных аргумента для проверки:</target>
        </trans-unit>
        <trans-unit id="9e020aad4feb9970fc6c0f84fb8135cbe7c10dc0" translate="yes" xml:space="preserve">
          <source>Has two &lt;strong&gt;required&lt;/strong&gt; arguments:</source>
          <target state="translated">Имеет два &lt;strong&gt;обязательных&lt;/strong&gt; аргумента:</target>
        </trans-unit>
        <trans-unit id="484c6880d03286f63a0d66e2e46613865e425dee" translate="yes" xml:space="preserve">
          <source>Has two optional arguments for validation, &lt;code&gt;max_length&lt;/code&gt; and &lt;code&gt;allow_empty_file&lt;/code&gt;. If provided, these ensure that the file name is at most the given length, and that validation will succeed even if the file content is empty.</source>
          <target state="translated">Имеет два необязательных аргумента для проверки: &lt;code&gt;max_length&lt;/code&gt; и &lt;code&gt;allow_empty_file&lt;/code&gt; . Если они предоставлены, они гарантируют, что имя файла будет иметь максимальную заданную длину, и что проверка пройдет успешно, даже если содержимое файла пустое.</target>
        </trans-unit>
        <trans-unit id="469a8ef52e3ab3e9a6514812244c507d7ec05ea2" translate="yes" xml:space="preserve">
          <source>Has two optional arguments for validation, &lt;code&gt;max_length&lt;/code&gt; and &lt;code&gt;min_length&lt;/code&gt;. If provided, these arguments ensure that the string is at most or at least the given length.</source>
          <target state="translated">Имеет два необязательных аргумента для проверки: &lt;code&gt;max_length&lt;/code&gt; и &lt;code&gt;min_length&lt;/code&gt; . Если они предоставлены, эти аргументы гарантируют, что длина строки не превышает или равна заданной.</target>
        </trans-unit>
        <trans-unit id="264a3599b3ad29f1d297113f7cd4afaced3b7737" translate="yes" xml:space="preserve">
          <source>Has two optional arguments:</source>
          <target state="translated">Имеет два необязательных аргумента:</target>
        </trans-unit>
        <trans-unit id="b41e2d6f603d2a71571bd9d692b4f8d60a8366a0" translate="yes" xml:space="preserve">
          <source>Hash indexes have been available in PostgreSQL for a long time, but they suffer from a number of data integrity issues in older versions.</source>
          <target state="translated">Хэш-индексы уже давно доступны в PostgreSQL,но в более старых версиях они страдают от ряда проблем с целостностью данных.</target>
        </trans-unit>
        <trans-unit id="91890d73e80c785369a7ea02ab0ddba7e19304b9" translate="yes" xml:space="preserve">
          <source>Having problems? Try &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/admin/&quot;&gt;FAQ: The admin&lt;/a&gt;.</source>
          <target state="translated">Возникли проблемы? Попробуйте &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/admin/&quot;&gt;FAQ: Админ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9720e639d765b87766827fab98468369b0574f5a" translate="yes" xml:space="preserve">
          <source>Having problems? Try &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/admin/&quot;&gt;FAQ: The admin&lt;/a&gt;.</source>
          <target state="translated">Возникли проблемы? Попробуйте &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/admin/&quot;&gt;FAQ: Админ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45a4bc095d0bc733108374317fb5064e125a7b9b" translate="yes" xml:space="preserve">
          <source>Having trouble? We&amp;rsquo;d like to help!</source>
          <target state="translated">Возникли проблемы? Мы хотели бы помочь!</target>
        </trans-unit>
        <trans-unit id="51420c171b426fb3ca4149bcb1b000b6403b074b" translate="yes" xml:space="preserve">
          <source>Headers passed as &lt;code&gt;extra&lt;/code&gt; keyword arguments should not have the &lt;code&gt;HTTP_&lt;/code&gt; prefix required by the synchronous client (see &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;). For example, here is how to set an HTTP &lt;code&gt;Accept&lt;/code&gt; header:</source>
          <target state="translated">Заголовки, передаваемые как &lt;code&gt;extra&lt;/code&gt; аргументы ключевого слова, не должны иметь префикса &lt;code&gt;HTTP_&lt;/code&gt; , требуемого синхронным клиентом (см. &lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; &lt;/a&gt; ). Например, вот как установить заголовок HTTP &lt;code&gt;Accept&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="144948321283311d1f121d6131d01f3e1df2bbe3" translate="yes" xml:space="preserve">
          <source>Height and width of the widget map (default is 400x600).</source>
          <target state="translated">Высота и ширина карты виджета (по умолчанию 400x600).</target>
        </trans-unit>
        <trans-unit id="8a44990599fcb9b9ef1bde7d5b2e841ad8fe50c8" translate="yes" xml:space="preserve">
          <source>Height of the image in pixels.</source>
          <target state="translated">Высота изображения в пикселях.</target>
        </trans-unit>
        <trans-unit id="b87edbcbb5930772761d79031cd848eb2d7af371" translate="yes" xml:space="preserve">
          <source>Height of the map, in pixels. Defaults to 400.</source>
          <target state="translated">Высота карты,в пикселях.По умолчанию 400.</target>
        </trans-unit>
        <trans-unit id="3ee07283650a0cb4b44aa4947760d241c8e6f3cc" translate="yes" xml:space="preserve">
          <source>Helper function to return a URL pattern for serving files in debug mode:</source>
          <target state="translated">Функция помощи для возврата шаблона URL для обслуживания файлов в отладочном режиме:</target>
        </trans-unit>
        <trans-unit id="934835a36e88b263f02948e4dbd8c5dd04401bc0" translate="yes" xml:space="preserve">
          <source>Helper functions</source>
          <target state="translated">Функции помощника</target>
        </trans-unit>
        <trans-unit id="e7e0ee4596bdf912596870e61bb537af15f86d4b" translate="yes" xml:space="preserve">
          <source>Here are a couple of example settings:</source>
          <target state="translated">Вот пара примеров настроек:</target>
        </trans-unit>
        <trans-unit id="af2aab3ca1b544361f8802696567f67d6d16451c" translate="yes" xml:space="preserve">
          <source>Here are a few examples of downstream caches:</source>
          <target state="translated">Вот несколько примеров кэширования ниже по течению:</target>
        </trans-unit>
        <trans-unit id="d6aaec63498fe45f8cd3ab0e87af9c76badc8226" translate="yes" xml:space="preserve">
          <source>Here are some common problems that you may encounter during initialization:</source>
          <target state="translated">Вот некоторые общие проблемы,с которыми вы можете столкнуться во время инициализации:</target>
        </trans-unit>
        <trans-unit id="f64ce4c75eb407df6aa68084739c0f1f18021f47" translate="yes" xml:space="preserve">
          <source>Here are some examples of other actions that will result in the entire queryset being evaluated and therefore populate the cache:</source>
          <target state="translated">Вот некоторые примеры других действий,которые приведут к тому,что весь квартет будет оценен и,следовательно,заполнит кэш:</target>
        </trans-unit>
        <trans-unit id="491ee7352f4f9f29ec839a5598c81d428a1ed6b8" translate="yes" xml:space="preserve">
          <source>Here are some hints about the ordering of various Django middleware classes:</source>
          <target state="translated">Вот несколько подсказок о порядке заказа различных классов промежуточного программного обеспечения Django:</target>
        </trans-unit>
        <trans-unit id="ba2e175dd531846eba4a04e3c9181479ab418b86" translate="yes" xml:space="preserve">
          <source>Here are some other terms that will help us to handle a common language:</source>
          <target state="translated">Вот некоторые другие термины,которые помогут нам справиться с общим языком:</target>
        </trans-unit>
        <trans-unit id="279b401428b4665e30ae96bd57aa0062346328af" translate="yes" xml:space="preserve">
          <source>Here are some things to consider to help make your upgrade process as smooth as possible.</source>
          <target state="translated">Вот некоторые вещи,чтобы помочь сделать процесс обновления как можно более гладким.</target>
        </trans-unit>
        <trans-unit id="3082dc8a1f8a09d52854dc7df60d7f8d0596f804" translate="yes" xml:space="preserve">
          <source>Here are some tips for working with inheritance:</source>
          <target state="translated">Вот несколько советов по работе с наследством:</target>
        </trans-unit>
        <trans-unit id="d2e5c296dccce718bbac6d5246520ffb4ddd0e8b" translate="yes" xml:space="preserve">
          <source>Here are some useful attributes of &lt;code&gt;UploadedFile&lt;/code&gt;:</source>
          <target state="translated">Вот некоторые полезные атрибуты &lt;code&gt;UploadedFile&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1121c2c786c30e498bed91da9475a4eb43a435a7" translate="yes" xml:space="preserve">
          <source>Here is an example of an admin-compliant custom user app. This user model uses an email address as the username, and has a required date of birth; it provides no permission checking beyond an &lt;code&gt;admin&lt;/code&gt; flag on the user account. This model would be compatible with all the built-in auth forms and views, except for the user creation forms. This example illustrates how most of the components work together, but is not intended to be copied directly into projects for production use.</source>
          <target state="translated">Вот пример совместимого с администратором пользовательского приложения. Эта модель пользователя использует адрес электронной почты в качестве имени пользователя и имеет требуемую дату рождения; он не обеспечивает проверку разрешений за пределами флага &lt;code&gt;admin&lt;/code&gt; для учетной записи пользователя. Эта модель будет совместима со всеми встроенными формами и представлениями авторизации, кроме форм создания пользователя. Этот пример иллюстрирует, как большинство компонентов работают вместе, но не предназначен для непосредственного копирования в проекты для производственного использования.</target>
        </trans-unit>
        <trans-unit id="faaf1f6ee70707befd7a6e1a47bdca0f7676f029" translate="yes" xml:space="preserve">
          <source>Here is an example of how to create a geometry object (assuming the &lt;code&gt;Zipcode&lt;/code&gt; model):</source>
          <target state="translated">Вот пример того, как создать геометрический объект (в предположении модели &lt;code&gt;Zipcode&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="680da33b32f3a235dc2ff1bf6ad9bc64c3b92144" translate="yes" xml:space="preserve">
          <source>Here is an example of how to create a raster object from a raster file &lt;code&gt;volcano.tif&lt;/code&gt; (assuming the &lt;code&gt;Elevation&lt;/code&gt; model):</source>
          <target state="translated">Вот пример того, как создать растровый объект из растрового файла &lt;code&gt;volcano.tif&lt;/code&gt; (в предположении модели &lt;code&gt;Elevation&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="271c67b646ba7ecbbb35f338144e45dcbe4ea62a" translate="yes" xml:space="preserve">
          <source>Here is an example of its usage:</source>
          <target state="translated">Приведем пример его использования:</target>
        </trans-unit>
        <trans-unit id="3f850bd99c6b6acb8b69bd061bcf9ba1698401b7" translate="yes" xml:space="preserve">
          <source>Here is an example of the difference between the three:</source>
          <target state="translated">Вот пример разницы между тремя:</target>
        </trans-unit>
        <trans-unit id="45863e4b7b474b663617efdf3777d740bb33a54d" translate="yes" xml:space="preserve">
          <source>Here is an example showing how you might go about implementing a form that works for AJAX requests as well as &amp;lsquo;normal&amp;rsquo; form POSTs:</source>
          <target state="translated">Вот пример, показывающий, как вы можете реализовать форму, которая работает как для запросов AJAX, так и для &amp;laquo;обычных&amp;raquo; форм POST:</target>
        </trans-unit>
        <trans-unit id="a86ee081359fd84dc5091ed8b284f2f2bc6150f3" translate="yes" xml:space="preserve">
          <source>Here is an example showing how you might go about implementing a form that works with an API-based workflow as well as &amp;lsquo;normal&amp;rsquo; form POSTs:</source>
          <target state="translated">Вот пример, показывающий, как вы могли бы реализовать форму, которая работает с рабочим процессом на основе API, а также с &amp;laquo;обычными&amp;raquo; формами POST:</target>
        </trans-unit>
        <trans-unit id="67c3eea2bb5e1e5cc88e879e133f03209c76575f" translate="yes" xml:space="preserve">
          <source>Here is an example which subclasses from &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt;, which is a subclass of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; that runs each test inside a transaction to provide isolation:</source>
          <target state="translated">Вот пример подклассов из &lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt; , который является подклассом &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; ,&lt;/a&gt; который выполняет каждый тест внутри транзакции для обеспечения изоляции:</target>
        </trans-unit>
        <trans-unit id="be68f2f69f34764a921ed1578865dea88e621f01" translate="yes" xml:space="preserve">
          <source>Here the relation pattern is comprised of at least one of the nine relation strings: &lt;code&gt;TOUCH&lt;/code&gt;, &lt;code&gt;OVERLAPBDYDISJOINT&lt;/code&gt;, &lt;code&gt;OVERLAPBDYINTERSECT&lt;/code&gt;, &lt;code&gt;EQUAL&lt;/code&gt;, &lt;code&gt;INSIDE&lt;/code&gt;, &lt;code&gt;COVEREDBY&lt;/code&gt;, &lt;code&gt;CONTAINS&lt;/code&gt;, &lt;code&gt;COVERS&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, and &lt;code&gt;ANYINTERACT&lt;/code&gt;. Multiple strings may be combined with the logical Boolean operator OR, for example, &lt;code&gt;'inside+touch'&lt;/code&gt;. &lt;a href=&quot;#fnsdorelate&quot; id=&quot;id5&quot;&gt;[2]&lt;/a&gt; The relation strings are case-insensitive.</source>
          <target state="translated">Здесь шаблон отношения состоит по меньшей мере из одной из девяти строк отношения: &lt;code&gt;TOUCH&lt;/code&gt; , &lt;code&gt;OVERLAPBDYDISJOINT&lt;/code&gt; , &lt;code&gt;OVERLAPBDYINTERSECT&lt;/code&gt; , &lt;code&gt;EQUAL&lt;/code&gt; , &lt;code&gt;INSIDE&lt;/code&gt; , &lt;code&gt;COVEREDBY&lt;/code&gt; , &lt;code&gt;CONTAINS&lt;/code&gt; , &lt;code&gt;COVERS&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; и &lt;code&gt;ANYINTERACT&lt;/code&gt; . Несколько строк могут быть объединены с логическим логическим оператором ИЛИ, например, &lt;code&gt;'inside+touch'&lt;/code&gt; . &lt;a href=&quot;#fnsdorelate&quot; id=&quot;id5&quot;&gt;[2]&lt;/a&gt; Строки отношения нечувствительны к регистру.</target>
        </trans-unit>
        <trans-unit id="cc9581120f126cad803e3aef1f13e74d034abada" translate="yes" xml:space="preserve">
          <source>Here we have created a &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; subclass with a method that creates a &lt;code&gt;Question&lt;/code&gt; instance with a &lt;code&gt;pub_date&lt;/code&gt; in the future. We then check the output of &lt;code&gt;was_published_recently()&lt;/code&gt; - which &lt;em&gt;ought&lt;/em&gt; to be False.</source>
          <target state="translated">Здесь мы создали подкласс &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt; с методом, который в будущем создает экземпляр &lt;code&gt;Question&lt;/code&gt; с &lt;code&gt;pub_date&lt;/code&gt; . Затем мы проверяем вывод &lt;code&gt;was_published_recently()&lt;/code&gt; который &lt;em&gt;должен&lt;/em&gt; быть False.</target>
        </trans-unit>
        <trans-unit id="5f4789b90295bd5341c33ecad3b51a92734a1532" translate="yes" xml:space="preserve">
          <source>Here you&amp;rsquo;ll find short answers to &amp;ldquo;How do I&amp;hellip;.?&amp;rdquo; types of questions. These how-to guides don&amp;rsquo;t cover topics in depth &amp;ndash; you&amp;rsquo;ll find that material in the &lt;a href=&quot;../topics/index&quot;&gt;Using Django&lt;/a&gt; and the &lt;a href=&quot;../ref/index&quot;&gt;API Reference&lt;/a&gt;. However, these guides will help you quickly accomplish common tasks.</source>
          <target state="translated">Здесь вы найдете короткие ответы на вопрос &amp;laquo;Как я&amp;hellip;?&amp;raquo; типы вопросов. Эти практические руководства не охватывают темы подробно - вы найдете этот материал в &lt;a href=&quot;../topics/index&quot;&gt;Использовании Django&lt;/a&gt; и &lt;a href=&quot;../ref/index&quot;&gt;Справочнике&lt;/a&gt; по API . Тем не менее, эти руководства помогут вам быстро выполнить общие задачи.</target>
        </trans-unit>
        <trans-unit id="57abf4f6b26bfe37ae2b52796838f9dad7f76581" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a &amp;ldquo;Hello World&amp;rdquo; example:</source>
          <target state="translated">Вот пример &amp;laquo;Hello World&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="6af217d2ecf2c889005dc55adc483fc40bea37cf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a basic example of a validator, with one optional setting:</source>
          <target state="translated">Вот базовый пример валидатора с одним необязательным параметром:</target>
        </trans-unit>
        <trans-unit id="a7f2fb4ff05edbaaffa6c5b64c495c91809c5df5" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a common way you might handle an uploaded file:</source>
          <target state="translated">Вот общий способ обработки загруженного файла:</target>
        </trans-unit>
        <trans-unit id="6089abc2bdc4617ff68adaabb9f38bec622baa70" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a corrected rewrite:</source>
          <target state="translated">Вот исправленное переписывание:</target>
        </trans-unit>
        <trans-unit id="9a31abed80562773eced4639f5fa9797392c6b50" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example &lt;code&gt;Form&lt;/code&gt; that implements &lt;code&gt;help_text&lt;/code&gt; for two of its fields. We&amp;rsquo;ve specified &lt;code&gt;auto_id=False&lt;/code&gt; to simplify the output:</source>
          <target state="translated">Вот полный пример &lt;code&gt;Form&lt;/code&gt; которая реализует &lt;code&gt;help_text&lt;/code&gt; для двух своих полей. Мы указали &lt;code&gt;auto_id=False&lt;/code&gt; , чтобы упростить вывод:</target>
        </trans-unit>
        <trans-unit id="7f272870b019ad9bddc4996166ecbc9a519ba9f2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example &lt;code&gt;Form&lt;/code&gt; that implements &lt;code&gt;label&lt;/code&gt; for two of its fields. We&amp;rsquo;ve specified &lt;code&gt;auto_id=False&lt;/code&gt; to simplify the output:</source>
          <target state="translated">Вот полный пример &lt;code&gt;Form&lt;/code&gt; которая реализует &lt;code&gt;label&lt;/code&gt; для двух своих полей. Мы указали &lt;code&gt;auto_id=False&lt;/code&gt; , чтобы упростить вывод:</target>
        </trans-unit>
        <trans-unit id="f50392c6b32afa62059d8c67b2c6c9d277cae558" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example model:</source>
          <target state="translated">Вот полный пример модели:</target>
        </trans-unit>
        <trans-unit id="781008e5531c092c2f7f0d7b934ff37d338b4e30" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example:</source>
          <target state="translated">Вот полный пример:</target>
        </trans-unit>
        <trans-unit id="06006db081b927a18b6c979513a3d400cf03b050" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of all possible &lt;code&gt;Media&lt;/code&gt; options. There are no required options.</source>
          <target state="translated">Вот список всех возможных вариантов &lt;code&gt;Media&lt;/code&gt; . Там нет обязательных опций.</target>
        </trans-unit>
        <trans-unit id="1ca8264392471fa610baec4797392c75fff75e91" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of settings available in Django core and their default values. Settings provided by contrib apps are listed below, followed by a topical index of the core settings. For introductory material, see the &lt;a href=&quot;../topics/settings&quot;&gt;settings topic guide&lt;/a&gt;.</source>
          <target state="translated">Вот список настроек, доступных в ядре Django, и их значения по умолчанию. Ниже перечислены параметры, предоставляемые приложениями contrib, а также тематический указатель основных настроек. Вводный материал см. В руководстве по &lt;a href=&quot;../topics/settings&quot;&gt;настройкам&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86a3a0b1484511f938867feb013e0f2d51c5df2e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more complete example of checking permissions in a template:</source>
          <target state="translated">Вот более полный пример проверки прав доступа в шаблоне:</target>
        </trans-unit>
        <trans-unit id="2c698643dc874b748f012ddb3ea0313bfbfd2803" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample &lt;code&gt;flatpages/default.html&lt;/code&gt; template:</source>
          <target state="translated">Вот пример &lt;code&gt;flatpages/default.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ab1a707518b8dd479d3d6838c5928f7148dd6367" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample &lt;code&gt;registration/login.html&lt;/code&gt; template you can use as a starting point. It assumes you have a &lt;code&gt;base.html&lt;/code&gt; template that defines a &lt;code&gt;content&lt;/code&gt; block:</source>
          <target state="translated">Вот пример шаблона &lt;code&gt;registration/login.html&lt;/code&gt; , который вы можете использовать в качестве отправной точки. Предполагается, что у вас есть шаблон &lt;code&gt;base.html&lt;/code&gt; , который определяет блок &lt;code&gt;content&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0ae30bf679595ef7533cdd63b407f83f5f8f674a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample URLconf:</source>
          <target state="translated">Вот пример URLconf:</target>
        </trans-unit>
        <trans-unit id="fa6ae3e7aabdf62e419781fb8ac91fef7e4efcbc" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample configuration which uses a MySQL option file:</source>
          <target state="translated">Вот пример конфигурации, в которой используется файл параметров MySQL:</target>
        </trans-unit>
        <trans-unit id="1cb8cc1f47e98bd6b8bca615e0c892d2101a324e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample migration:</source>
          <target state="translated">Вот пример миграции:</target>
        </trans-unit>
        <trans-unit id="ae6541653add727b9d1b714886c5cb294eb66157" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample settings file:</source>
          <target state="translated">Вот пример файла настроек:</target>
        </trans-unit>
        <trans-unit id="0a35ae241d211aecdcc854051ae6190c4718464a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a setup that tells the Django template engine to load templates from the &lt;code&gt;templates&lt;/code&gt; subdirectory inside each installed application:</source>
          <target state="translated">Вот настройка, которая сообщает движку шаблонов Django загружать шаблоны из подкаталога &lt;code&gt;templates&lt;/code&gt; внутри каждого установленного приложения:</target>
        </trans-unit>
        <trans-unit id="ef7c5cda6c9f776cf07508872a931615e59130bb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a typical usage example:</source>
          <target state="translated">Вот типичный пример использования:</target>
        </trans-unit>
        <trans-unit id="1427d30cb4b280307f9c35fdcbbec639fc3c1999" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a view that returns the current date and time, as an HTML document:</source>
          <target state="translated">Вот представление, которое возвращает текущую дату и время в виде HTML-документа:</target>
        </trans-unit>
        <trans-unit id="d3e2bddf8c963051b7303f539a2fd185abce31a7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example &lt;code&gt;babel.cfg&lt;/code&gt; configuration file:</source>
          <target state="translated">Вот пример &lt;code&gt;babel.cfg&lt;/code&gt; конфигурации babel.cfg :</target>
        </trans-unit>
        <trans-unit id="8aebe75987c46c90f1d219df0277567b236e3afb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example backend that authenticates against a username and password variable defined in your &lt;code&gt;settings.py&lt;/code&gt; file and creates a Django &lt;code&gt;User&lt;/code&gt; object the first time a user authenticates:</source>
          <target state="translated">Вот пример серверной части, которая аутентифицируется с помощью переменной имени пользователя и пароля, определенной в вашем файле &lt;code&gt;settings.py&lt;/code&gt; , и создает объект &lt;code&gt;User&lt;/code&gt; Django при первой аутентификации пользователя:</target>
        </trans-unit>
        <trans-unit id="cff630704065ec7b5de978b86e7c6b74b5e56dc7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example command to start a uWSGI server:</source>
          <target state="translated">Вот пример команды для запуска сервера uWSGI:</target>
        </trans-unit>
        <trans-unit id="102ce3104838011837efe205bdd80f68de4dae95" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example configuration for a &lt;code&gt;pylibmc&lt;/code&gt; based backend that enables the binary protocol, SASL authentication, and the &lt;code&gt;ketama&lt;/code&gt; behavior mode:</source>
          <target state="translated">Вот пример конфигурации для основанного на &lt;code&gt;pylibmc&lt;/code&gt; бэкэнда, который включает двоичный протокол, аутентификацию SASL и &lt;code&gt;ketama&lt;/code&gt; поведения ketama :</target>
        </trans-unit>
        <trans-unit id="1b421c4f95aa496406a2e84c2f627a954ab2836f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example configuration for a &lt;code&gt;python-memcached&lt;/code&gt; based backend with an object size limit of 2MB:</source>
          <target state="translated">Вот пример конфигурации для бэкэнда на основе &lt;code&gt;python-memcached&lt;/code&gt; с ограничением размера объекта 2 МБ:</target>
        </trans-unit>
        <trans-unit id="3a2a1317feb0953774732005f170e31c4c8a4bc7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example filter definition:</source>
          <target state="translated">Вот пример определения фильтра:</target>
        </trans-unit>
        <trans-unit id="80f83222987a04b9ecf23f2ea890140f555d567d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; using &lt;a href=&quot;#django.contrib.sitemaps.GenericSitemap&quot;&gt;&lt;code&gt;GenericSitemap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вот пример &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; с использованием &lt;a href=&quot;#django.contrib.sitemaps.GenericSitemap&quot;&gt; &lt;code&gt;GenericSitemap&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ae6ef8ee4290c13f117dcdc7e703f627625867c0" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a URLconf using &lt;a href=&quot;#django.contrib.flatpages.sitemaps.FlatPageSitemap&quot;&gt;&lt;code&gt;FlatPageSitemap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вот пример URLconf с использованием &lt;a href=&quot;#django.contrib.flatpages.sitemaps.FlatPageSitemap&quot;&gt; &lt;code&gt;FlatPageSitemap&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3845b1b6e90ab1ee471ab4f454dadade8a8b37f6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a non-atomic data migration that updates a large table in smaller batches:</source>
          <target state="translated">Вот пример неатомарного переноса данных, который обновляет большую таблицу небольшими партиями:</target>
        </trans-unit>
        <trans-unit id="c1f9fb4911b88e50f96986953fce6ec7f1657b9d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of an async view:</source>
          <target state="translated">Вот пример асинхронного представления:</target>
        </trans-unit>
        <trans-unit id="2521f38c8dd57ccdb01aff93ad8b20bb89778958" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to create a middleware function that supports both:</source>
          <target state="translated">Вот пример того, как создать функцию промежуточного программного обеспечения, которая поддерживает оба:</target>
        </trans-unit>
        <trans-unit id="e800a41196ea2c952c6cc78bf4125ea18f3b697e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how you might use this in a template:</source>
          <target state="translated">Вот пример того, как вы можете использовать это в шаблоне:</target>
        </trans-unit>
        <trans-unit id="6e261dac3e73be10b1f310f633c7e43bef1f8cbe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of the search algorithm. For this example the &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting is:</source>
          <target state="translated">Вот пример алгоритма поиска. Для этого примера настройка &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3d265334afc2a3a5deaa825a3e8d0c1dbc637509" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of what the form-handling view looks like:</source>
          <target state="translated">Вот пример того, как выглядит представление обработки форм:</target>
        </trans-unit>
        <trans-unit id="cab637454e1c6c1a9aee365744daf4493bf04463" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example test that examines &lt;code&gt;django.core.mail.outbox&lt;/code&gt; for length and contents:</source>
          <target state="translated">Вот пример теста, который проверяет &lt;code&gt;django.core.mail.outbox&lt;/code&gt; на длину и содержание:</target>
        </trans-unit>
        <trans-unit id="aa48b04caa6f3240fde92f90c0ac9c55d609c649" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that disables Django&amp;rsquo;s logging configuration and then manually configures logging:</source>
          <target state="translated">Вот пример, который отключает конфигурацию ведения журнала Django, а затем вручную настраивает ведение журнала:</target>
        </trans-unit>
        <trans-unit id="c77b97bfa6d759f92c704a63a66d8c15a6409803" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that stores the current timezone in the session. (It skips error handling entirely for the sake of simplicity.)</source>
          <target state="translated">Вот пример, который хранит текущий часовой пояс в сеансе. (Это просто пропускает обработку ошибок ради простоты.)</target>
        </trans-unit>
        <trans-unit id="d8255f47bfef2f67ea1dd701782d89362832ca71" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using &lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt;&lt;code&gt;Paginator&lt;/code&gt;&lt;/a&gt; in a view function to paginate a queryset:</source>
          <target state="translated">Вот пример использования &lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt; &lt;code&gt;Paginator&lt;/code&gt; &lt;/a&gt; в функции представления для разбивки набора запросов :</target>
        </trans-unit>
        <trans-unit id="864913de9e058af94181a7cf98e2330576120b66" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example view that takes a &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;from_email&lt;/code&gt; from the request&amp;rsquo;s POST data, sends that to &lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt; and redirects to &amp;ldquo;/contact/thanks/&amp;rdquo; when it&amp;rsquo;s done:</source>
          <target state="translated">Вот примерное представление, которое берет &lt;code&gt;subject&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt; и &lt;code&gt;from_email&lt;/code&gt; из POST-данных запроса, отправляет их на &lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt; и перенаправляет на &amp;laquo;/ contact / спасибо /&amp;raquo;, когда это будет сделано:</target>
        </trans-unit>
        <trans-unit id="34ffdaa4404e3fe833bd23cc3839e586225ae798" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example widget which subclasses &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; to display a date with the day, month, and year in different select boxes. This widget is intended to be used with a &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; rather than a &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt;, thus we have implemented &lt;a href=&quot;#django.forms.Widget.value_from_datadict&quot;&gt;&lt;code&gt;value_from_datadict()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вот пример виджета, который подклассов &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt; для отображения даты с днем, месяцем и годом в разных полях выбора. Этот виджет предназначен для использования с &lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; ,&lt;/a&gt; а не с &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt; , поэтому мы реализовали &lt;a href=&quot;#django.forms.Widget.value_from_datadict&quot;&gt; &lt;code&gt;value_from_datadict()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="bac37e9710dc9d2c74d9c1ed00e5b17d08cd6fb3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example with a test database configuration:</source>
          <target state="translated">Вот пример с тестовой конфигурацией базы данных:</target>
        </trans-unit>
        <trans-unit id="c288c1a6f737cba4e4dfe94d9e407d5ce00f2fe3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example with the &lt;code&gt;Count&lt;/code&gt; aggregate:</source>
          <target state="translated">Вот пример с агрегатом &lt;code&gt;Count&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="992e957c839d3d8d2abc225d337198ce96cd7ccb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example, which generates the same CSV file as above:</source>
          <target state="translated">Вот пример, который генерирует тот же CSV-файл, что и выше:</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">Вот пример:</target>
        </trans-unit>
        <trans-unit id="cc4ac14d2e7d339c7464837b69d59c85f014a9b2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s another example with the &lt;code&gt;Avg&lt;/code&gt; aggregate:</source>
          <target state="translated">Вот еще один пример с агрегатом &lt;code&gt;Avg&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5621dab2b1d22484b8fe971ff0acb8dea33dd71f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s example HTML template code:</source>
          <target state="translated">Вот пример кода шаблона HTML:</target>
        </trans-unit>
        <trans-unit id="9f9ad4a804c6ae4e272e944aaeea2d0deed1f424" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how Django handles custom managers and &lt;a href=&quot;models#model-inheritance&quot;&gt;model inheritance&lt;/a&gt;:</source>
          <target state="translated">Вот как Django обрабатывает собственные менеджеры и &lt;a href=&quot;models#model-inheritance&quot;&gt;наследование моделей&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="982d8786f08335dca1f604bcf8f2fbe3797a6051" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how Django uses the sites framework:</source>
          <target state="translated">Вот как Django использует структуру сайтов:</target>
        </trans-unit>
        <trans-unit id="1aad681f3092909b52d4dd368c95d8a6868db25b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how a simplified &lt;code&gt;{% comment %}&lt;/code&gt; tag might be implemented:</source>
          <target state="translated">Вот как может быть реализован упрощенный тег &lt;code&gt;{% comment %}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d91d9e4962a8b0536d1b0745beac3f3e808bc67a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how the form data could be processed in the view that handles this form:</source>
          <target state="translated">Вот как данные формы могут быть обработаны в представлении, которое обрабатывает эту форму:</target>
        </trans-unit>
        <trans-unit id="0e26c415b5e7fc6d2eaf6e0f623530bfce47a883" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to create a raster and return it as a file in an &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вот как создать растр и вернуть его в виде файла в &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="af034e2b096c2303b99e1d44bd431bd0330becae" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to implement a custom template backend in order to use another template system. A template backend is a class that inherits &lt;code&gt;django.template.backends.base.BaseEngine&lt;/code&gt;. It must implement &lt;code&gt;get_template()&lt;/code&gt; and optionally &lt;code&gt;from_string()&lt;/code&gt;. Here&amp;rsquo;s an example for a fictional &lt;code&gt;foobar&lt;/code&gt; template library:</source>
          <target state="translated">Вот как реализовать пользовательский шаблонный бэкэнд для использования другой системы шаблонов. &lt;code&gt;django.template.backends.base.BaseEngine&lt;/code&gt; шаблона - это класс, который наследует django.template.backends.base.BaseEngine . Он должен реализовывать &lt;code&gt;get_template()&lt;/code&gt; и, опционально, &lt;code&gt;from_string()&lt;/code&gt; . Вот пример для вымышленной библиотеки шаблонов &lt;code&gt;foobar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8d36be0384837a6370f1ba02759b5af0d0f2c187" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to migrate a project that was started before Django supported time zones.</source>
          <target state="translated">Вот как перенести проект, который был запущен до того, как Django поддерживал часовые пояса.</target>
        </trans-unit>
        <trans-unit id="66ec10b2a136d2c823468ba95c64eaaab44cdd82" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how you connect with the decorator:</source>
          <target state="translated">Вот как вы можете связаться с декоратором:</target>
        </trans-unit>
        <trans-unit id="327bfd0c7d625202f1966273d60d8493e343ab93" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how you&amp;rsquo;d use this new version of the tag:</source>
          <target state="translated">Вот как бы вы использовали эту новую версию тега:</target>
        </trans-unit>
        <trans-unit id="1a2bfaf566979ed7aedf0f669c54fbc0f46145bf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s some examples of some of the general-purpose aggregation functions:</source>
          <target state="translated">Вот несколько примеров некоторых функций агрегирования общего назначения:</target>
        </trans-unit>
        <trans-unit id="da0a2fbae58195202e76fcd70bf31b97096b8406" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s specifically what will happen:</source>
          <target state="translated">Вот что конкретно произойдет:</target>
        </trans-unit>
        <trans-unit id="90cc1fba379d3079d864b75ec9a282dc9dd9df53" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the algorithm Django uses in compiling settings:</source>
          <target state="translated">Вот алгоритм, который Django использует при настройке компиляции:</target>
        </trans-unit>
        <trans-unit id="4f6925d2fd7c87eb1fdea33977d87762ce059a90" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the code for these beat-specific feeds:</source>
          <target state="translated">Вот код для этих фидов, специфичных для ударов:</target>
        </trans-unit>
        <trans-unit id="fee44b1e3d0f774cdd2a8c542296b97438ffc668" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the example URLconf from earlier, rewritten using regular expressions:</source>
          <target state="translated">Вот пример URLconf из ранее, переписанный с использованием регулярных выражений:</target>
        </trans-unit>
        <trans-unit id="e4c0b7baa1526900d2e4f4456095dc0e9ce72d6a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the formal declaration of a &lt;code&gt;QuerySet&lt;/code&gt;:</source>
          <target state="translated">Вот формальное объявление &lt;code&gt;QuerySet&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1165f9724f1430ed525846674f31020cff0308a8" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the output of &lt;code&gt;{{ form.as_p }}&lt;/code&gt; for our &lt;code&gt;ContactForm&lt;/code&gt; instance:</source>
          <target state="translated">Вот вывод &lt;code&gt;{{ form.as_p }}&lt;/code&gt; для нашего экземпляра &lt;code&gt;ContactForm&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="29c90eaa3b7ceff1a2a2ba24fcb3bda64c8c52b3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the same thing, with &lt;code&gt;my_view&lt;/code&gt; wrapped in &lt;code&gt;cache_page&lt;/code&gt;:</source>
          <target state="translated">Вот то же самое, с &lt;code&gt;my_view&lt;/code&gt; , обернутым в &lt;code&gt;cache_page&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="abcc0e54e5809432215e2f0949566ceb948498ed" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what &lt;code&gt;LoginView&lt;/code&gt; does:</source>
          <target state="translated">Вот что делает &lt;code&gt;LoginView&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7283b0cf7a571c7215c8f2bb4d8140cd4ffd2ed4" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what a URLconf might look like for the &lt;code&gt;Reporter&lt;/code&gt;/&lt;code&gt;Article&lt;/code&gt; example above:</source>
          <target state="translated">Вот как может выглядеть URLconf для примера &lt;code&gt;Reporter&lt;/code&gt; / &lt;code&gt;Article&lt;/code&gt; выше:</target>
        </trans-unit>
        <trans-unit id="bb1565e42c236a7f2831e8cfa57af03ea646f01a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what each of the built-in processors does:</source>
          <target state="translated">Вот что делает каждый из встроенных процессоров:</target>
        </trans-unit>
        <trans-unit id="6d5f00c1bab080be00911ca379dda11db29ab82a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what it looks like at this point:</source>
          <target state="translated">Вот как это выглядит на данный момент:</target>
        </trans-unit>
        <trans-unit id="2b749a2a594c50741b94f0db598a875d6be8a1e8" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the &amp;ldquo;base.html&amp;rdquo; template, including the use of &lt;a href=&quot;../howto/static-files/index&quot;&gt;static files&lt;/a&gt;, might look like:</source>
          <target state="translated">Вот как может выглядеть шаблон &amp;laquo;base.html&amp;raquo;, включая использование &lt;a href=&quot;../howto/static-files/index&quot;&gt;статических файлов&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c16d5101a0891c5cbab072e90a5af67e887f73ba" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the relevant URLconf lines would look like for the example above:</source>
          <target state="translated">Вот как будут выглядеть соответствующие строки URLconf для приведенного выше примера:</target>
        </trans-unit>
        <trans-unit id="1539f3d44308e23c6984798d63f494196479b7da" translate="yes" xml:space="preserve">
          <source>Here, &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; transformed the three geometries from the shapefile in their original spatial reference system (WGS84) to the spatial reference system of the GeoDjango model (NAD83). If no spatial reference system is defined for the layer, use the &lt;code&gt;source_srs&lt;/code&gt; keyword with a &lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; object to specify one.</source>
          <target state="translated">Здесь &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt; преобразовал три геометрии из шейп- файла в их исходной системе пространственной привязки (WGS84) в систему пространственной привязки модели GeoDjango (NAD83). Если никакой пространственной системы не определен для слоя, использовать &lt;code&gt;source_srs&lt;/code&gt; ключевое слово с &lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt; &lt;code&gt;SpatialReference&lt;/code&gt; &lt;/a&gt; объекта , чтобы указать один.</target>
        </trans-unit>
        <trans-unit id="3e093c29faaea57896f80485222e377673d07e69" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;default_manager&lt;/code&gt; is the default. The &lt;code&gt;objects&lt;/code&gt; manager is still available, since it&amp;rsquo;s inherited, but isn&amp;rsquo;t used as the default.</source>
          <target state="translated">Здесь &lt;code&gt;default_manager&lt;/code&gt; является значением по умолчанию. Менеджер &lt;code&gt;objects&lt;/code&gt; все еще доступен, так как он наследуется, но не используется по умолчанию.</target>
        </trans-unit>
        <trans-unit id="bec468010f20ce37ac755447a7cacf1a6965b612" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;friends()&lt;/code&gt; will be called twice. Since the instance &lt;code&gt;person&lt;/code&gt; in the view and the template are the same, decorating the &lt;code&gt;friends()&lt;/code&gt; method with &lt;code&gt;@cached_property&lt;/code&gt; can avoid that:</source>
          <target state="translated">Здесь &lt;code&gt;friends()&lt;/code&gt; будет вызван дважды. Поскольку экземпляр &lt;code&gt;person&lt;/code&gt; в представлении и шаблоне одинаковы, декорирование метода &lt;code&gt;friends()&lt;/code&gt; с помощью &lt;code&gt;@cached_property&lt;/code&gt; позволяет избежать этого:</target>
        </trans-unit>
        <trans-unit id="d0e804ebd96c0af9eec8dbdab01a73bdcc48afa7" translate="yes" xml:space="preserve">
          <source>Here, each model is represented by a class that subclasses &lt;a href=&quot;../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;django.db.models.Model&lt;/code&gt;&lt;/a&gt;. Each model has a number of class variables, each of which represents a database field in the model.</source>
          <target state="translated">Здесь каждая модель представлена ​​классом, который является подклассом &lt;a href=&quot;../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;django.db.models.Model&lt;/code&gt; &lt;/a&gt; . Каждая модель имеет несколько переменных класса, каждая из которых представляет поле базы данных в модели.</target>
        </trans-unit>
        <trans-unit id="4d45cf61a6b273da8aee30ada7de9c9f80157840" translate="yes" xml:space="preserve">
          <source>Here, there could potentially be multiple ordering data for each &lt;code&gt;Event&lt;/code&gt;; each &lt;code&gt;Event&lt;/code&gt; with multiple &lt;code&gt;children&lt;/code&gt; will be returned multiple times into the new &lt;code&gt;QuerySet&lt;/code&gt; that &lt;code&gt;order_by()&lt;/code&gt; creates. In other words, using &lt;code&gt;order_by()&lt;/code&gt; on the &lt;code&gt;QuerySet&lt;/code&gt; could return more items than you were working on to begin with - which is probably neither expected nor useful.</source>
          <target state="translated">Здесь потенциально может быть несколько данных для каждого &lt;code&gt;Event&lt;/code&gt; ; каждое &lt;code&gt;Event&lt;/code&gt; с несколькими &lt;code&gt;children&lt;/code&gt; будет возвращены несколько раз в новый &lt;code&gt;QuerySet&lt;/code&gt; что &lt;code&gt;order_by()&lt;/code&gt; создает. Другими словами, использование &lt;code&gt;order_by()&lt;/code&gt; в &lt;code&gt;QuerySet&lt;/code&gt; может вернуть больше элементов, чем вы работали с самого начала, что, вероятно, ни ожидаемо, ни полезно.</target>
        </trans-unit>
        <trans-unit id="437ecb11cc4454ac0c7bcfeb26ef7fc4a9a9ab04" translate="yes" xml:space="preserve">
          <source>Here, we have a URLconf with a single captured group:</source>
          <target state="translated">Здесь у нас есть URLconf с одной захваченной группой:</target>
        </trans-unit>
        <trans-unit id="59650799f9105f6fd46738d8d71c0649251d8fa3" translate="yes" xml:space="preserve">
          <source>Here, we have pulled the value of &lt;code&gt;reporter.stories_filed&lt;/code&gt; from the database into memory and manipulated it using familiar Python operators, and then saved the object back to the database. But instead we could also have done:</source>
          <target state="translated">Здесь мы извлекли значение &lt;code&gt;reporter.stories_filed&lt;/code&gt; из базы данных в память и манипулировали им, используя знакомые операторы Python, а затем сохранили объект обратно в базу данных. Но вместо этого мы могли бы также сделать:</target>
        </trans-unit>
        <trans-unit id="82c135d3966be0eb9476ca12305ddc85cdd98f0d" translate="yes" xml:space="preserve">
          <source>Here, with concurrent requests, multiple attempts to save a &lt;code&gt;Person&lt;/code&gt; with the same parameters may be made. To avoid this race condition, the above example can be rewritten using &lt;code&gt;get_or_create()&lt;/code&gt; like so:</source>
          <target state="translated">Здесь, при одновременных запросах, могут быть сделаны многочисленные попытки сохранить &lt;code&gt;Person&lt;/code&gt; с одинаковыми параметрами. Чтобы избежать этого состояния гонки, приведенный выше пример можно переписать с помощью &lt;code&gt;get_or_create()&lt;/code&gt; например так:</target>
        </trans-unit>
        <trans-unit id="6e1c1bebb97b3fac0f84e08c91f2ac346f29f05c" translate="yes" xml:space="preserve">
          <source>Here, you retrieved a &lt;code&gt;QuerySet&lt;/code&gt; with only one model: the border of the United States (exactly what you would expect).</source>
          <target state="translated">Здесь вы &lt;code&gt;QuerySet&lt;/code&gt; только с одной моделью: границей Соединенных Штатов (именно то, что вы ожидаете).</target>
        </trans-unit>
        <trans-unit id="26d877995327d903f9c9c849285e27201361d8cd" translate="yes" xml:space="preserve">
          <source>Hierarchy of Django unit testing classes</source>
          <target state="translated">Иерархия классов тестирования модулей Django</target>
        </trans-unit>
        <trans-unit id="2284d040f5091f510de37a154536196310f9c02d" translate="yes" xml:space="preserve">
          <source>Hint</source>
          <target state="translated">Hint</target>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="translated">Hints</target>
        </trans-unit>
        <trans-unit id="01d2f9ecc0290276e414180f8fb91eaf80ea98c6" translate="yes" xml:space="preserve">
          <source>Historical models</source>
          <target state="translated">Исторические модели</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="3668d9fae13111a1cdd1c411a004c1830fac5d25" translate="yes" xml:space="preserve">
          <source>History consistency</source>
          <target state="translated">Историческая последовательность</target>
        </trans-unit>
        <trans-unit id="2db3c5543ab9e474cea4204fa6f705e4a5357492" translate="yes" xml:space="preserve">
          <source>Hitting the database multiple times for different parts of a single &amp;lsquo;set&amp;rsquo; of data that you will need all parts of is, in general, less efficient than retrieving it all in one query. This is particularly important if you have a query that is executed in a loop, and could therefore end up doing many database queries, when only one was needed. So:</source>
          <target state="translated">Многократное попадание в базу данных для разных частей одного &amp;laquo;набора&amp;raquo; данных, для которого вам понадобятся все части, в целом менее эффективно, чем получение всего этого в одном запросе. Это особенно важно, если у вас есть запрос, который выполняется в цикле и, следовательно, может выполнить много запросов к базе данных, когда требуется только один. Так:</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="3db3ff2b4f95ac9d06bb8a36b004442519e2377c" translate="yes" xml:space="preserve">
          <source>Hooking &lt;code&gt;AdminSite&lt;/code&gt; instances into your URLconf</source>
          <target state="translated">Подключаем &lt;code&gt;AdminSite&lt;/code&gt; экземпляры в ваш привязок</target>
        </trans-unit>
        <trans-unit id="377b52a12a2942982a776073a4c6fef720ab9361" translate="yes" xml:space="preserve">
          <source>Hooking into the current site from views</source>
          <target state="translated">Заход на текущий сайт с видом</target>
        </trans-unit>
        <trans-unit id="a035ae36c0c60bda73442b7d15b2e8cbdae93b94" translate="yes" xml:space="preserve">
          <source>Host header validation</source>
          <target state="translated">Проверка заголовка хоста</target>
        </trans-unit>
        <trans-unit id="7f9ea4fcf4a81bbcd92432dccf078570d76b403b" translate="yes" xml:space="preserve">
          <source>Hour, 12-hour format without leading zeros.</source>
          <target state="translated">Часовой,12-часовой формат без лидирующих нулей.</target>
        </trans-unit>
        <trans-unit id="3691f2c8d14a93defea1b98c76da99f673f7cc0b" translate="yes" xml:space="preserve">
          <source>Hour, 12-hour format.</source>
          <target state="translated">Часовой,12-часовой формат.</target>
        </trans-unit>
        <trans-unit id="05050dcb2cc031117aeab33205f5f0ebb56643f4" translate="yes" xml:space="preserve">
          <source>Hour, 24-hour format without leading zeros.</source>
          <target state="translated">Часовой,24-часовой формат без лидирующих нулей.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
