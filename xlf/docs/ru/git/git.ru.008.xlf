<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="a1528f0aff1e31c1f36c8998ca335269e9595dd6" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;root&amp;gt; to all filenames. If a &quot;-p&quot; argument was also passed, it is applied before prepending the new root.</source>
          <target state="translated">Добавьте &amp;lt;root&amp;gt; ко всем именам файлов. Если также был передан аргумент &amp;laquo;-p&amp;raquo;, он применяется перед добавлением нового корня.</target>
        </trans-unit>
        <trans-unit id="04fbe49467d421955780154f308daccbf9dcf57a" translate="yes" xml:space="preserve">
          <source>Prepend &lt;code&gt;path&lt;/code&gt; to requested CVSROOT</source>
          <target state="translated">Добавить &lt;code&gt;path&lt;/code&gt; к запрошенному CVSROOT</target>
        </trans-unit>
        <trans-unit id="0347b26685846c1b1d2b4efcd87239056762e453" translate="yes" xml:space="preserve">
          <source>Prepend an additional prefix to every line of output.</source>
          <target state="translated">Подготовьте дополнительный префикс к каждой строке вывода.</target>
        </trans-unit>
        <trans-unit id="965630002ec8181b6c5811ecd432fedf5278178d" translate="yes" xml:space="preserve">
          <source>Prepend comment character and blank to each line. Lines will automatically be terminated with a newline. On empty lines, only the comment character will be prepended.</source>
          <target state="translated">Подготовьте символ комментария и пустую строку к каждой строке.Строки будут автоматически завершаться новой строкой.На пустых строках будет готовиться только символ комментария.</target>
        </trans-unit>
        <trans-unit id="f16c17f5481a4b7eaab0eba6f32fe3b9bdb77e0a" translate="yes" xml:space="preserve">
          <source>Prepend the commit message with the provided prefix. Useful for patch series and the like.</source>
          <target state="translated">Подготовьте сообщение о фиксации с предоставленным префиксом.Полезно для серии патчей и тому подобного.</target>
        </trans-unit>
        <trans-unit id="1cb847e80ec2973659a3bc43c24ba721cccfc0b9" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned as ref tips of alternate repositories were listed on the command line. An alternate repository is any repository whose object directory is specified in &lt;code&gt;objects/info/alternates&lt;/code&gt;. The set of included objects may be modified by &lt;code&gt;core.alternateRefsCommand&lt;/code&gt;, etc. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Представьте, что все объекты, упомянутые как ссылки на альтернативные репозитории, перечислены в командной строке. Альтернативный репозиторий - это любой репозиторий, каталог объектов которого указан в &lt;code&gt;objects/info/alternates&lt;/code&gt; . Набор включенных объектов можно изменить с помощью &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; и т. Д. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8790db7464ad43dc2580493a3a2b7fe9009b3b8" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned by reflogs are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Представьте, что все объекты, упомянутые в журналах reflogs, перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bc40db9cd0077507e159c30d2cc8ff273e4cf52" translate="yes" xml:space="preserve">
          <source>Pretend as if all the branches (tags, remote branches, resp.) are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit refs to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ветки (теги, удаленные ветки и т.д.) указаны в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничьте ссылки до тех, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="a40d3b9ce3a70471c04394220cc5bbfab2baa7f5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/&lt;/code&gt;, along with &lt;code&gt;HEAD&lt;/code&gt;, are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/&lt;/code&gt; вместе с &lt;code&gt;HEAD&lt;/code&gt; указаны в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1435ebeededb24db5ecef4374cafc152c655d0c5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/heads&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/heads&lt;/code&gt; указаны в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничить ветвления теми, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="873bc395593997376453ce378c315180f9e8037d" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/remotes&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit remote-tracking branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/remotes&lt;/code&gt; перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничьте ветки удаленного отслеживания теми, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="779811bec709e50bc3c2986dda8163a1984c59e0" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/tags&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit tags to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/tags&lt;/code&gt; перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничьте теги теми, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="fd8bdbdeb72b98a3e7d8a71774e4228e25fd4361" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs matching shell glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. Leading &lt;code&gt;refs/&lt;/code&gt;, is automatically prepended if missing. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки, соответствующие оболочке glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; , перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Ведущие &lt;code&gt;refs/&lt;/code&gt; добавляются автоматически, если они отсутствуют. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="46b1cc7966c168f121c45715956556d8413ae7ad" translate="yes" xml:space="preserve">
          <source>Pretend as if all trees and blobs used by the index are listed on the command line. Note that you probably want to use &lt;code&gt;--objects&lt;/code&gt;, too.</source>
          <target state="translated">Представьте, что все деревья и капли, используемые индексом, перечислены в командной строке. Обратите внимание, что вы, вероятно , тоже захотите использовать &lt;code&gt;--objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="909e45224d87696c85b1407d2ca55f9401b9de95" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc70d02297620c66f8bef755f564908a1a4698d8" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line. Cannot be combined with --first-parent.</source>
          <target state="translated">Притворитесь, как если бы в командной строке были указаны плохие ссылки &lt;code&gt;refs/bisect/bad&lt;/code&gt; за которыми следовали &lt;code&gt;--not&lt;/code&gt; , а за хорошими бисекциями refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; . Не может сочетаться с --first-parent.</target>
        </trans-unit>
        <trans-unit id="0a3604cb0b2f73cd8456355c098a4f83f14d6060" translate="yes" xml:space="preserve">
          <source>Pretty formats</source>
          <target state="translated">Симпатичные форматы</target>
        </trans-unit>
        <trans-unit id="1b76ed128a23a5286f4a7e2538cc00e5737e0416" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of &amp;lt;object&amp;gt; based on its type.</source>
          <target state="translated">Распечатайте содержимое &amp;lt;object&amp;gt; в зависимости от его типа.</target>
        </trans-unit>
        <trans-unit id="a741501b13f29bc4f4975a183857a345cfe33bda" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of the commit logs in a given format, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;oneline&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;fuller&lt;/code&gt;, &lt;code&gt;reference&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; and &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt;. When &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is none of the above, and has &lt;code&gt;%placeholder&lt;/code&gt; in it, it acts as if &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; were given.</source>
          <target state="translated">Довольно-печать, содержание фиксации бревен в заданном формате, где &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; может быть один из &lt;code&gt;oneline&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; , &lt;code&gt;full&lt;/code&gt; , &lt;code&gt;fuller&lt;/code&gt; , &lt;code&gt;reference&lt;/code&gt; , &lt;code&gt;email&lt;/code&gt; , &lt;code&gt;raw&lt;/code&gt; , &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; и &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt; . Когда &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; не соответствует ни одному из вышеперечисленных и содержит &lt;code&gt;%placeholder&lt;/code&gt; , он действует так, как если бы был &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bd89feebefa381d47a4005ee3e7a70495146fc2" translate="yes" xml:space="preserve">
          <source>Print a list of diff tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">Распечатайте список инструментов сравнения, которые можно использовать с &lt;code&gt;--tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4427ae28c9b6c7b34bdd7b24aed9e7c7d30f57b8" translate="yes" xml:space="preserve">
          <source>Print a list of merge tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">Распечатайте список инструментов слияния, которые можно использовать с &lt;code&gt;--tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66756bdfb6c604999780ed06815c6e483a2bcdd8" translate="yes" xml:space="preserve">
          <source>Print a log message describing a merge of the &quot;master&quot; branch from the &quot;origin&quot; remote.</source>
          <target state="translated">Вывести на печать лог-сообщение,описывающее слияние &quot;ведущей&quot; ветки с удаленного &quot;исходного&quot;.</target>
        </trans-unit>
        <trans-unit id="e170a2249107ead5e4f805939d3f7ece45fff682" translate="yes" xml:space="preserve">
          <source>Print a message to the terminal whenever Git is waiting for editor input from the user.</source>
          <target state="translated">Распечатывайте сообщение в терминал всякий раз,когда Git ждёт от пользователя ввода редактора.</target>
        </trans-unit>
        <trans-unit id="8080962c8d32b2cabab8eb19868e6e497af4f4fb" translate="yes" xml:space="preserve">
          <source>Print a number stating how many commits would have been listed, and suppress all other output. When used together with &lt;code&gt;--left-right&lt;/code&gt;, instead print the counts for left and right commits, separated by a tab. When used together with &lt;code&gt;--cherry-mark&lt;/code&gt;, omit patch equivalent commits from these counts and print the count for equivalent commits separated by a tab.</source>
          <target state="translated">Выведите число, указывающее, сколько коммитов было бы указано в списке, и подавите весь другой вывод. При использовании вместе с &lt;code&gt;--left-right&lt;/code&gt; вместо этого выводить счетчики для левых и правых коммитов, разделенных табуляцией. При использовании вместе с &lt;code&gt;--cherry-mark&lt;/code&gt; опускает эквивалентные исправления коммитов из этих счетчиков и выводит счетчик эквивалентных фиксаций, разделенных табуляцией.</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">Распечатайте короткое сообщение об использовании и выйдите.</target>
        </trans-unit>
        <trans-unit id="1605c83b597410df01a57b6af3b5c08c7935c987" translate="yes" xml:space="preserve">
          <source>Print all commits to the standard output in mbox format, instead of creating a file for each one.</source>
          <target state="translated">Распечатайте все фиксации в стандартный выходной файл в формате mbox,вместо того,чтобы создавать файл для каждого из них.</target>
        </trans-unit>
        <trans-unit id="bb80930a87afbf3e0cd1b6dbc46ac66a79700ef9" translate="yes" xml:space="preserve">
          <source>Print also the children of the commit (in the form &quot;commit child&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">Выведите также дочерние элементы фиксации (в форме &amp;laquo;commit child&amp;hellip;&amp;raquo;). Также включает родительскую перезапись, см. &lt;code&gt;History Simplification&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="cd486c8f7fa4f0862a9438df255d9ef58e4cce2f" translate="yes" xml:space="preserve">
          <source>Print also the parents of the commit (in the form &quot;commit parent&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">Выведите также родителей фиксации (в форме &amp;laquo;родитель фиксации&amp;hellip;&amp;raquo;). Также включает родительскую перезапись, см. &lt;code&gt;History Simplification&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="f770a9ba11cec50c667f92df6a9581699d1c849f" translate="yes" xml:space="preserve">
          <source>Print an empty line between matches from different files.</source>
          <target state="translated">Выведите пустую строку между совпадениями из разных файлов.</target>
        </trans-unit>
        <trans-unit id="dc6bbcf836701f45b1b031bc09ccba6ceff978b1" translate="yes" xml:space="preserve">
          <source>Print extra information on screen.</source>
          <target state="translated">Печать дополнительной информации на экране.</target>
        </trans-unit>
        <trans-unit id="f77fc6854808124fa4634165848ea2138881c54f" translate="yes" xml:space="preserve">
          <source>Print lines matching a pattern</source>
          <target state="translated">Линии печати,соответствующие рисунку</target>
        </trans-unit>
        <trans-unit id="6fe4856d75dfab579fe9349a68cc2bed1d0dadcc" translate="yes" xml:space="preserve">
          <source>Print object information and contents for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">Печатать информацию об объекте и содержимое для каждого объекта, представленного на стандартном вводе. Не может сочетаться с любыми другими параметрами или аргументами, кроме &lt;code&gt;--textconv&lt;/code&gt; или &lt;code&gt;--filters&lt;/code&gt; , в этом случае в строках ввода также необходимо указать путь, разделенный пробелами. Подробности см. В разделе &amp;laquo; &lt;code&gt;BATCH OUTPUT&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="ca4d7c5adc217a6aa2342c6778492ad7113796ff" translate="yes" xml:space="preserve">
          <source>Print object information for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">Вывести информацию об объекте для каждого объекта, указанного на стандартном вводе. Не может сочетаться с любыми другими параметрами или аргументами, кроме &lt;code&gt;--textconv&lt;/code&gt; или &lt;code&gt;--filters&lt;/code&gt; , в этом случае в строках ввода также необходимо указать путь, разделенный пробелами. Подробности см. В разделе &amp;laquo; &lt;code&gt;BATCH OUTPUT&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="355c9197a67577b10c87d266b1fadda4f338ce43" translate="yes" xml:space="preserve">
          <source>Print objects that exist but that are never &lt;code&gt;directly&lt;/code&gt; used (default). &lt;code&gt;--no-dangling&lt;/code&gt; can be used to omit this information from the output.</source>
          <target state="translated">Печатать объекты, которые существуют, но никогда не используются &lt;code&gt;directly&lt;/code&gt; (по умолчанию). &lt;code&gt;--no-dangling&lt;/code&gt; можно использовать для исключения этой информации из вывода.</target>
        </trans-unit>
        <trans-unit id="2b45348ee53d58a25f5424ead463a255068c26a3" translate="yes" xml:space="preserve">
          <source>Print only merge commits. This is exactly the same as &lt;code&gt;--min-parents=2&lt;/code&gt;.</source>
          <target state="translated">Печатать только коммиты слияния. Это в точности то же самое, что и &lt;code&gt;--min-parents=2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fba7bfcdde0d986db48ca498619d9372ecc7d2c2" translate="yes" xml:space="preserve">
          <source>Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.</source>
          <target state="translated">Выведите на печать только совпадающие (непустые)части совпадающей линии,причем каждая такая часть должна быть на отдельной выходной линии.</target>
        </trans-unit>
        <trans-unit id="a0fc3f1d0d97da65e736eae410fad9ae12d5c7be" translate="yes" xml:space="preserve">
          <source>Print out objects that exist but that aren&amp;rsquo;t reachable from any of the reference nodes.</source>
          <target state="translated">Распечатайте объекты, которые существуют, но недоступны ни для одного из ссылочных узлов.</target>
        </trans-unit>
        <trans-unit id="e099bc42258fcb131e0b9e1b48df8c89349bb7b8" translate="yes" xml:space="preserve">
          <source>Print out the ref name given on the command line by which each commit was reached.</source>
          <target state="translated">Выведите имя ссылки,указанное в командной строке,с помощью которой был достигнут каждый коммит.</target>
        </trans-unit>
        <trans-unit id="dcb3dcb3ba78d15754773caa5f744c3c4effdf42" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown by the log command. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. This is the same as the &lt;code&gt;--decorate&lt;/code&gt; option of the &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">Распечатайте ссылочные имена любых коммитов, отображаемых командой log. Если указано &lt;code&gt;short&lt;/code&gt; , префиксы &lt;code&gt;refs/heads/&lt;/code&gt; , &lt;code&gt;refs/tags/&lt;/code&gt; и &lt;code&gt;refs/remotes/&lt;/code&gt; не будут напечатаны. Если &lt;code&gt;full&lt;/code&gt; указан, то полное имя исх (включая префикс) будет напечатан. Если задано &lt;code&gt;auto&lt;/code&gt; , то если вывод идет на терминал, имена ссылок отображаются так, как если бы были заданы &lt;code&gt;short&lt;/code&gt; , в противном случае имена ссылок не отображаются. Это то же самое, что и опция &lt;code&gt;--decorate&lt;/code&gt; в &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53ce43f1821ebff917f188f20f204c3e06f211d4" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. The default option is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">Распечатайте ссылочные имена всех показанных коммитов. Если указано &lt;code&gt;short&lt;/code&gt; , префиксы &lt;code&gt;refs/heads/&lt;/code&gt; , &lt;code&gt;refs/tags/&lt;/code&gt; и &lt;code&gt;refs/remotes/&lt;/code&gt; не будут напечатаны. Если &lt;code&gt;full&lt;/code&gt; указан, то полное имя исх (включая префикс) будет напечатан. Если задано &lt;code&gt;auto&lt;/code&gt; , то если вывод идет на терминал, имена ссылок отображаются так, как если бы были заданы &lt;code&gt;short&lt;/code&gt; , в противном случае имена ссылок не отображаются. Вариант по умолчанию - &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2011b0d7f946e8a76de0461151323ce8a5c0f935" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts that have not been autoresolved by rerere. This includes paths whose resolutions cannot be tracked by rerere, such as conflicting submodules.</source>
          <target state="translated">Печатать пути с конфликтами,которые не были решены повторно.Сюда входят пути,решения которых не могут быть отслежены rerere,например,конфликтующие субмодули.</target>
        </trans-unit>
        <trans-unit id="2cba919653a32310570084639bfa9ccc09fb9fa2" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts whose merge resolution rerere will record.</source>
          <target state="translated">Печатать пути с конфликтами,чье разрешение слияния будет записываться.</target>
        </trans-unit>
        <trans-unit id="71b60883716e5c9ed5e8d89999bad00a8a7a60a2" translate="yes" xml:space="preserve">
          <source>Print sizes in human readable format</source>
          <target state="translated">Размеры печати в удобочитаемом для человека формате</target>
        </trans-unit>
        <trans-unit id="7acdcc1d8a4a904a279ce2f15ace2f46f09a0e30" translate="yes" xml:space="preserve">
          <source>Print the commit object name from the revision in the $REV shell variable:</source>
          <target state="translated">Выведите имя объекта фиксации из ревизии в переменной оболочки $REV:</target>
        </trans-unit>
        <trans-unit id="395b30ff424b495b247b1df9486e5529542c8ab4" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit in raw-format; each record is separated with a NUL character.</source>
          <target state="translated">Выведите содержимое коммита в необработанном формате;каждая запись отделяется символом NUL.</target>
        </trans-unit>
        <trans-unit id="a77cbdea967e7bc1835e082ef3a9add5606ab710" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit object before validating it.</source>
          <target state="translated">Распечатайте содержимое объекта коммита перед его проверкой.</target>
        </trans-unit>
        <trans-unit id="31d513cdd4715b4e34b1efb48c41837ed2726bf9" translate="yes" xml:space="preserve">
          <source>Print the contents of the tag object before validating it.</source>
          <target state="translated">Распечатайте содержимое объекта тега перед его проверкой.</target>
        </trans-unit>
        <trans-unit id="87753483ea6cbbd041325490c8537b3b3cada35c" translate="yes" xml:space="preserve">
          <source>Print the current notes ref. This provides an easy way to retrieve the current notes ref (e.g. from scripts).</source>
          <target state="translated">Распечатать текущие примечания см.Это позволяет легко извлечь текущую ссылку на заметку (например,из сценария).</target>
        </trans-unit>
        <trans-unit id="e336397774a866fc04e04e67418c962536311ce3" translate="yes" xml:space="preserve">
          <source>Print the manpath (see &lt;code&gt;man(1)&lt;/code&gt;) for the man pages for this version of Git and exit.</source>
          <target state="translated">Распечатайте путь к руководству (см. &lt;code&gt;man(1)&lt;/code&gt; ) для получения справочных страниц для этой версии Git и выйдите.</target>
        </trans-unit>
        <trans-unit id="390fcf6665394474a4208236397a723ae5bbd841" translate="yes" xml:space="preserve">
          <source>Print the name of the current branch. In detached HEAD state, nothing is printed.</source>
          <target state="translated">Выведите имя текущей ветки.В отдельном состоянии HEAD ничего не печатается.</target>
        </trans-unit>
        <trans-unit id="727d2c972108087f617ca9a52e1404312cb08db7" translate="yes" xml:space="preserve">
          <source>Print the name of the previous thing checked out:</source>
          <target state="translated">Распечатайте имя предыдущей проверенной вещи:</target>
        </trans-unit>
        <trans-unit id="3642aa2b7cf9b2dae48578e1bdc6f3fea172cd09" translate="yes" xml:space="preserve">
          <source>Print the object IDs of any object referenced by the listed commits. &lt;code&gt;--objects foo ^bar&lt;/code&gt; thus means &amp;ldquo;send me all object IDs which I need to download if I have the commit object &lt;code&gt;bar&lt;/code&gt; but not &lt;code&gt;foo&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">Распечатайте идентификаторы объектов любого объекта, на который ссылаются перечисленные коммиты. &lt;code&gt;--objects foo ^bar&lt;/code&gt; образом, --objects foo ^ bar означает &amp;laquo;отправить мне все идентификаторы объектов, которые мне нужно загрузить, если у меня есть &lt;code&gt;bar&lt;/code&gt; объекта фиксации, но нет &lt;code&gt;foo&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="38fa474c9535276a4f6e33490b7ff8dcbbdc81f4" translate="yes" xml:space="preserve">
          <source>Print the object name of the current commit:</source>
          <target state="translated">Выведите имя объекта текущей фиксации:</target>
        </trans-unit>
        <trans-unit id="ee021a7e92899d06aae374f43dcf779c8609f3ff" translate="yes" xml:space="preserve">
          <source>Print the path where the Info files documenting this version of Git are installed and exit.</source>
          <target state="translated">Распечатайте путь,по которому установлены Info-файлы,документирующие данную версию Git'а,и выйдите из неё.</target>
        </trans-unit>
        <trans-unit id="f91d6d93e8468421a09b4a14a734bbd616d1eaec" translate="yes" xml:space="preserve">
          <source>Print the path, without trailing slash, where Git&amp;rsquo;s HTML documentation is installed and exit.</source>
          <target state="translated">Выведите путь без косой черты, где установлена ​​документация Git HTML, и выйдите.</target>
        </trans-unit>
        <trans-unit id="c416409aca85a3200dcaeb96638cdf0bb7fd9f1e" translate="yes" xml:space="preserve">
          <source>Print the raw commit timestamp.</source>
          <target state="translated">Распечатайте сырую временную метку коммита.</target>
        </trans-unit>
        <trans-unit id="a639de23ccd7b17d5228ed28b0950d8dd10397fd" translate="yes" xml:space="preserve">
          <source>Print the raw gpg status output to standard error instead of the normal human-readable output.</source>
          <target state="translated">Распечатайте исходное состояние gpg со стандартной ошибкой вместо обычного вывода,считываемого человеком.</target>
        </trans-unit>
        <trans-unit id="99ac22b00f0c79de0ff529dde835b6047cf02100" translate="yes" xml:space="preserve">
          <source>Print tree and blob ids in order of the commits. The tree and blob ids are printed after they are first referenced by a commit.</source>
          <target state="translated">Распечатайте древовидные и блобовые идентификаторы в порядке выполнения коммитов.Дерево и blob ids печатаются после того,как на них сделана первая ссылка в коммите.</target>
        </trans-unit>
        <trans-unit id="3b22396fd69e4727d40157cf2f987d6e09d1fcff" translate="yes" xml:space="preserve">
          <source>Print usage information and exit</source>
          <target state="translated">Информация об использовании для печати и выходе</target>
        </trans-unit>
        <trans-unit id="8b0271d848c59df8398c3108bdeba41e38e8636a" translate="yes" xml:space="preserve">
          <source>Print version information and exit</source>
          <target state="translated">Информация о версии для печати и выход</target>
        </trans-unit>
        <trans-unit id="85ec1b3fb97897b6ced8a489e132839db30e011a" translate="yes" xml:space="preserve">
          <source>Prints a Git logical variable.</source>
          <target state="translated">Печатает логическую переменную Git.</target>
        </trans-unit>
        <trans-unit id="913b5e2d55fda904bfce1ecac182bc7aaa60acd0" translate="yes" xml:space="preserve">
          <source>Prints a list of the Git concept guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401d02aaba20f08ba2e39483d254996af7aae137" translate="yes" xml:space="preserve">
          <source>Prints a list of useful guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">Печатает список полезных руководств на стандартном выходе.Этот параметр отменяет любую данную команду или название руководства.</target>
        </trans-unit>
        <trans-unit id="fb51737d6bf1a9b6afa9ffc69b82cbde8918bef7" translate="yes" xml:space="preserve">
          <source>Prints all the available commands on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">Печатает все доступные команды на стандартном выходе.Этот параметр отменяет любую данную команду или имя руководства.</target>
        </trans-unit>
        <trans-unit id="f5aac771b999435096d722ba3e59e6103d7d4c50" translate="yes" xml:space="preserve">
          <source>Prints information about the object at a path to a file descriptor previously arranged with the &lt;code&gt;--cat-blob-fd&lt;/code&gt; argument. This allows printing a blob from the active commit (with &lt;code&gt;cat-blob&lt;/code&gt;) or copying a blob or tree from a previous commit for use in the current one (with &lt;code&gt;filemodify&lt;/code&gt;).</source>
          <target state="translated">Печатает информацию об объекте по пути к файловому дескриптору, предварительно указанному с &lt;code&gt;--cat-blob-fd&lt;/code&gt; . Это позволяет распечатать большой двоичный объект из активной фиксации (с помощью &lt;code&gt;cat-blob&lt;/code&gt; ) или скопировать большой двоичный объект или дерево из предыдущей фиксации для использования в текущей (с помощью &lt;code&gt;filemodify&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="67f72d83deebf87ad84204db25d15bef66391fa1" translate="yes" xml:space="preserve">
          <source>Prints the Git suite version that the &lt;code&gt;git&lt;/code&gt; program came from.</source>
          <target state="translated">Печатает версию пакета Git, из которой пришла программа &lt;code&gt;git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31cffb4ffe2a30a3dd8ff5b977f393cbba618dfd" translate="yes" xml:space="preserve">
          <source>Prints the synopsis and a list of the most commonly used commands. If the option &lt;code&gt;--all&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt; is given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command.</source>
          <target state="translated">Печатает синопсис и список наиболее часто используемых команд. Если указан параметр &lt;code&gt;--all&lt;/code&gt; или &lt;code&gt;-a&lt;/code&gt; , то выводятся все доступные команды. Если команда Git названа, эта опция вызовет страницу руководства для этой команды.</target>
        </trans-unit>
        <trans-unit id="866254572e1e21a744b0d521a136d91326c823cd" translate="yes" xml:space="preserve">
          <source>Problems related to branches:</source>
          <target state="translated">Проблемы,связанные с филиалами:</target>
        </trans-unit>
        <trans-unit id="ca677c6e0873752e051f5b6dc5cfbc5f3713a96f" translate="yes" xml:space="preserve">
          <source>Problems related to tags:</source>
          <target state="translated">Проблемы,связанные с тегами:</target>
        </trans-unit>
        <trans-unit id="704eb4f9500e5abbbd40e21ecae0dbc6632f17d7" translate="yes" xml:space="preserve">
          <source>Problems related to timestamps:</source>
          <target state="translated">Проблемы,связанные с временными метками:</target>
        </trans-unit>
        <trans-unit id="face2a8f1265d0d2162b3bb8d6cc8c2e4f00bd1a" translate="yes" xml:space="preserve">
          <source>Problems with rewriting history</source>
          <target state="translated">Проблемы с переписыванием истории</target>
        </trans-unit>
        <trans-unit id="cb8ad1a0606d68ac22c37138a82e9dcd94bd7b47" translate="yes" xml:space="preserve">
          <source>Proceed even if the index or the working tree differs from &lt;code&gt;HEAD&lt;/code&gt;. Both the index and working tree are restored to match the switching target. If &lt;code&gt;--recurse-submodules&lt;/code&gt; is specified, submodule content is also restored to match the switching target. This is used to throw away local changes.</source>
          <target state="translated">Продолжайте, даже если индекс или рабочее дерево отличается от &lt;code&gt;HEAD&lt;/code&gt; . И индекс, и рабочее дерево восстанавливаются в соответствии с целью переключения. Если указан &lt;code&gt;--recurse-submodules&lt;/code&gt; , содержимое подмодуля также восстанавливается в соответствии с целью переключения. Это используется для отбрасывания локальных изменений.</target>
        </trans-unit>
        <trans-unit id="81635a56ae860db0a8d1fccf460faed330395977" translate="yes" xml:space="preserve">
          <source>Process binary files as if they were text.</source>
          <target state="translated">Обрабатывайте бинарные файлы так,как будто они текстовые.</target>
        </trans-unit>
        <trans-unit id="c13073a8e5c76f53a6790b53a64799c267eda4e9" translate="yes" xml:space="preserve">
          <source>Process files in the order specified in the &amp;lt;orderfile&amp;gt;, which has one shell glob pattern per line. This overrides the &lt;code&gt;diff.orderFile&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). To cancel &lt;code&gt;diff.orderFile&lt;/code&gt;, use &lt;code&gt;-O/dev/null&lt;/code&gt;.</source>
          <target state="translated">Обработайте файлы в порядке, указанном в &amp;lt;orderfile&amp;gt;, который имеет один шаблон глобуса оболочки на строку. Это переопределяет &lt;code&gt;diff.orderFile&lt;/code&gt; конфигурации diff.orderFile (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Чтобы отменить &lt;code&gt;diff.orderFile&lt;/code&gt; , используйте &lt;code&gt;-O/dev/null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efe0d70966f95f77c3e86b43812298f2ec9b000a" translate="yes" xml:space="preserve">
          <source>Process the reflogs of all references.</source>
          <target state="translated">Обрабатывать рефлоги всех ссылок.</target>
        </trans-unit>
        <trans-unit id="0782c5b7801790281dc0fb4b01651b8bfdcbc4f5" translate="yes" xml:space="preserve">
          <source>Processes all packs. Any filenames on the command line are ignored.</source>
          <target state="translated">Обрабатывает все пакеты.Любые имена файлов в командной строке игнорируются.</target>
        </trans-unit>
        <trans-unit id="3c46a3f16a2a32b7eba71a8379b8360472d65d8d" translate="yes" xml:space="preserve">
          <source>Processes the specified option so that git fast-import behaves in a way that suits the frontend&amp;rsquo;s needs. Note that options specified by the frontend are overridden by any options the user may specify to git fast-import itself.</source>
          <target state="translated">Обрабатывает указанную опцию, чтобы git fast-import вел себя так, как это нужно для внешнего интерфейса. Обратите внимание, что параметры, указанные в интерфейсе, переопределяются любыми параметрами, которые пользователь может указать для самого git fast-import.</target>
        </trans-unit>
        <trans-unit id="2de3013c8cd324e1d7d27384810d30bdbff48678" translate="yes" xml:space="preserve">
          <source>Produce a merge commit message</source>
          <target state="translated">Создать сообщение о фиксации слияния</target>
        </trans-unit>
        <trans-unit id="221bd606329bfae672e0ecc9594988658e144e37" translate="yes" xml:space="preserve">
          <source>Produce machine-readable output. The output status line for each ref will be tab-separated and sent to stdout instead of stderr. The full symbolic names of the refs will be given.</source>
          <target state="translated">Производить машиночитаемую продукцию.Строка состояния вывода для каждой ссылки будет разделена на вкладки и отправлена в stdout вместо stderr.Будут даны полные символьные имена ссылок.</target>
        </trans-unit>
        <trans-unit id="fa20429458d99d060783732e4d2e8bf497560d29" translate="yes" xml:space="preserve">
          <source>Produce output in the same format as &lt;code&gt;git blame&lt;/code&gt;, but with SVN revision numbers instead of Git commit hashes. In this mode, changes that haven&amp;rsquo;t been committed to SVN (including local working-copy edits) are shown as revision 0.</source>
          <target state="translated">Производить вывод в том же формате, что и &lt;code&gt;git blame&lt;/code&gt; , но с номерами ревизий SVN вместо хэшей коммитов Git. В этом режиме изменения, которые не были зафиксированы в SVN (включая правки локальной рабочей копии), отображаются как версия 0.</target>
        </trans-unit>
        <trans-unit id="cb195c53f13c5c90951762ba09047296d46995e9" translate="yes" xml:space="preserve">
          <source>Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the &lt;code&gt;HEAD&lt;/code&gt;, or record &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; (to cause the next &lt;code&gt;git commit&lt;/code&gt; command to create a merge commit). This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus).</source>
          <target state="translated">Создайте рабочее дерево и состояние индекса, как если бы произошло настоящее слияние (за исключением информации о слиянии), но на самом деле не выполняйте фиксацию, не перемещайте &lt;code&gt;HEAD&lt;/code&gt; или не записывайте &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; (чтобы следующая команда &lt;code&gt;git commit&lt;/code&gt; создала объединить фиксацию). Это позволяет вам создать одну фиксацию поверх текущей ветки, эффект которой такой же, как и слияние другой ветки (или больше в случае осьминога).</target>
        </trans-unit>
        <trans-unit id="465a8ba2d1fbe9de5dbb0d6da6e9b4fc2bd5f63f" translate="yes" xml:space="preserve">
          <source>Produces a fast-import stream which imports the current value of the named ref. It may additionally import other refs as needed to construct the history efficiently. The script writes to a helper-specific private namespace. The value of the named ref should be written to a location in this namespace derived by applying the refspecs from the &quot;refspec&quot; capability to the name of the ref.</source>
          <target state="translated">Производит быстро импортируемый поток,который импортирует текущую стоимость по названному реф.Он может дополнительно импортировать другие ссылки по мере необходимости для эффективного построения истории.Скрипт записывает в личное пространство имён,специфическое для помощника.Значение именованного ссылки должно быть записано в место в этом пространстве имён,полученное путём применения к имени ссылки refspecs из возможности &quot;refspec&quot;.</target>
        </trans-unit>
        <trans-unit id="c940155095e7923b03e52693b949145b33288361" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless --no-progress or --verbose is specified. --progress forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Состояние прогресса сообщается в стандартном потоке ошибок по умолчанию,когда он подключен к терминалу,если только не указано --no-progress или --verbose.--progress принуждает к отображению состояния прогресса,даже если стандартный поток ошибок не направлен на терминал.</target>
        </trans-unit>
        <trans-unit id="2dcc9cf9e59b81f490159a20a52344236fd5a3dc" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Состояние прогресса сообщается в стандартном потоке ошибок по умолчанию при его подключении к терминалу,если не указано -q.Этот флаг вызывает состояние прогресса,даже если стандартный поток ошибок не направляется в терминал.</target>
        </trans-unit>
        <trans-unit id="e5cc82042c92eacaa55f040bd35ecdec7afbf1c3" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag enables progress reporting even if not attached to a terminal, regardless of &lt;code&gt;--quiet&lt;/code&gt;.</source>
          <target state="translated">Состояние выполнения сообщается в стандартном потоке ошибок по умолчанию, когда он подключен к терминалу, если не указан параметр &lt;code&gt;--quiet&lt;/code&gt; . Этот флаг включает отчет о ходе выполнения, даже если он не подключен к терминалу, независимо от &lt;code&gt;--quiet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84082a3e9b3738ac2cad5de1d40208e556f0b5a9" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Состояние выполнения сообщается в стандартном потоке ошибок по умолчанию, когда он подключен к терминалу, если не указан параметр &lt;code&gt;--quiet&lt;/code&gt; . Этот флаг принудительно устанавливает статус выполнения, даже если стандартный поток ошибок не направлен на терминал.</target>
        </trans-unit>
        <trans-unit id="8942c3e281f4b4272bf2fa19690b7dbfeb0da954" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal. This flag enables progress reporting even if not attached to a terminal. Can&amp;rsquo;t use &lt;code&gt;--progress&lt;/code&gt; together with &lt;code&gt;--porcelain&lt;/code&gt; or &lt;code&gt;--incremental&lt;/code&gt;.</source>
          <target state="translated">Состояние выполнения сообщается в стандартном потоке ошибок по умолчанию, когда он подключен к терминалу. Этот флаг включает отчет о ходе выполнения, даже если он не подключен к терминалу. Нельзя использовать &lt;code&gt;--progress&lt;/code&gt; вместе с &lt;code&gt;--porcelain&lt;/code&gt; или &lt;code&gt;--incremental&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3394ad842c4e27aba66aa2ba1a5a4056f7fb9719" translate="yes" xml:space="preserve">
          <source>Progress, informational, and error messages: The two backends provide slightly different progress and informational messages. Also, the apply backend writes error messages (such as &quot;Your files would be overwritten&amp;hellip;​&quot;) to stdout, while the merge backend writes them to stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a80ecee0b21f76717158fcc872d2fe8c9f70c9" translate="yes" xml:space="preserve">
          <source>Project list files should list one project per line, with each line having the following format</source>
          <target state="translated">Файлы списка проектов должны содержать по одному проекту в каждой строке,причем каждая строка имеет следующий формат</target>
        </trans-unit>
        <trans-unit id="64ddeaf66879746d77d52edba9fc6b51c3b5494f" translate="yes" xml:space="preserve">
          <source>Project specific override is not supported.</source>
          <target state="translated">Переопределение по конкретному проекту не поддерживается.</target>
        </trans-unit>
        <trans-unit id="38cb6b6f38fc49666443f39245952417f433b632" translate="yes" xml:space="preserve">
          <source>Projects list file format</source>
          <target state="translated">Формат файла списка проектов</target>
        </trans-unit>
        <trans-unit id="99a6cf116ac91087c7f440f3f894b1353453be3c" translate="yes" xml:space="preserve">
          <source>Promisor packfiles are repacked separately: if there are packfiles that have an associated &quot;.promisor&quot; file, these packfiles will be repacked into another separate pack, and an empty &quot;.promisor&quot; file corresponding to the new separate pack will be written.</source>
          <target state="translated">Пакеты Promisor переупаковываются отдельно:если есть пакеты,имеющие связанный с ними файл &quot;.promisor&quot;,то эти пакеты будут переупаковываться в другой отдельный пакет,и будет записан пустой файл &quot;.promisor&quot;,соответствующий новому отдельному пакету.</target>
        </trans-unit>
        <trans-unit id="1e3e6d8a5678027c372d639c7caa1ae762739111" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool.</source>
          <target state="translated">Незамедлительно перед каждым вызовом диф-инструмента.</target>
        </trans-unit>
        <trans-unit id="011847e8f4535310d3585f3561b850f5eaa68bd2" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool. This is the default behaviour; the option is provided to override any configuration settings.</source>
          <target state="translated">Незамедлительно перед каждым вызовом диф-инструмента.Это поведение по умолчанию;предусмотрена опция переопределения любых конфигурационных настроек.</target>
        </trans-unit>
        <trans-unit id="60f48217749656a50ce363c78d14fe3fba58b27e" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program to give the user a chance to skip the path.</source>
          <target state="translated">Запрашивать перед каждым вызовом программы разрешения слияния,чтобы дать пользователю возможность пропустить путь.</target>
        </trans-unit>
        <trans-unit id="1bd1cfd1155b4114e14d09a7c37c4a191ca7ac30" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program.</source>
          <target state="translated">Запрашивать перед каждым вызовом программы разрешения слияния.</target>
        </trans-unit>
        <trans-unit id="353a353b6eb50b67e795967c32fb24f9eeb5d549" translate="yes" xml:space="preserve">
          <source>Protocol notes: If you are using anonymous access via pserver, just select that. Those using SSH access should choose the &lt;code&gt;ext&lt;/code&gt; protocol, and configure &lt;code&gt;ext&lt;/code&gt; access on the Preferences&amp;rarr;Team&amp;rarr;CVS&amp;rarr;ExtConnection pane. Set CVS_SERVER to &quot;&lt;code&gt;git cvsserver&lt;/code&gt;&quot;. Note that password support is not good when using &lt;code&gt;ext&lt;/code&gt;, you will definitely want to have SSH keys setup.</source>
          <target state="translated">Примечания к протоколу: если вы используете анонимный доступ через pserver, просто выберите его. Те, кто использует доступ по SSH, должны выбрать протокол &lt;code&gt;ext&lt;/code&gt; и настроить доступ к &lt;code&gt;ext&lt;/code&gt; в Preferences &amp;rarr; Team &amp;rarr; CVS &amp;rarr; ExtConnection pane. Установите CVS_SERVER на &quot; &lt;code&gt;git cvsserver&lt;/code&gt; &quot;. Обратите внимание, что поддержка паролей не очень хороша при использовании &lt;code&gt;ext&lt;/code&gt; , вам обязательно нужно настроить ключи SSH.</target>
        </trans-unit>
        <trans-unit id="4e8bf93a6f67bf7687593a7faf3fef64759fa4d3" translate="yes" xml:space="preserve">
          <source>Protocol version 2 is stateless by default. This means that all commands must only last a single round and be stateless from the perspective of the server side, unless the client has requested a capability indicating that state should be maintained by the server. Clients MUST NOT require state management on the server side in order to function correctly. This permits simple round-robin load-balancing on the server side, without needing to worry about state management.</source>
          <target state="translated">Версия протокола 2 по умолчанию не имеет гражданства.Это означает,что все команды должны длиться только один раунд и быть бездействующими с точки зрения сервера,если только клиент не запросил возможность,указывающую на то,что состояние должно поддерживаться сервером.Клиенты НЕ ДОЛЖНЫ требовать управления состоянием на стороне сервера для корректной работы.Это позволяет легко балансировать нагрузку на стороне сервера,не беспокоясь об управлении состоянием.</target>
        </trans-unit>
        <trans-unit id="a457f44dce93162338e37dcadcb5a7e148a161e8" translate="yes" xml:space="preserve">
          <source>Provide content or type and size information for repository objects</source>
          <target state="translated">Предоставлять информацию о содержании или типе и размере объектов репозитория.</target>
        </trans-unit>
        <trans-unit id="ce1130d2639274732ace3560e1b161a1f25e1593" translate="yes" xml:space="preserve">
          <source>Provide more progress information.</source>
          <target state="translated">Предоставьте больше информации о прогрессе.</target>
        </trans-unit>
        <trans-unit id="e90e088e3482417a8a9d0a613e03789c858721a1" translate="yes" xml:space="preserve">
          <source>Provides a default value for unspecified object filters (see: the below configuration variable). Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd6c4f93ce8e6500d931f94e6b50cb8556ece89" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--from&lt;/code&gt; option to format-patch. Accepts a boolean value, or a name and email address. If false, format-patch defaults to &lt;code&gt;--no-from&lt;/code&gt;, using commit authors directly in the &quot;From:&quot; field of patch mails. If true, format-patch defaults to &lt;code&gt;--from&lt;/code&gt;, using your committer identity in the &quot;From:&quot; field of patch mails and including a &quot;From:&quot; field in the body of the patch mail if different. If set to a non-boolean value, format-patch uses that value instead of your committer identity. Defaults to false.</source>
          <target state="translated">Предоставляет значение по умолчанию для параметра &lt;code&gt;--from&lt;/code&gt; для format-patch. Принимает логическое значение или имя и адрес электронной почты. Если false, format-patch по умолчанию имеет значение &lt;code&gt;--no-from&lt;/code&gt; , с указанием авторов коммитов непосредственно в поле &amp;laquo;From:&amp;raquo; писем с исправлениями. Если true, по умолчанию format-patch принимает значение &lt;code&gt;--from&lt;/code&gt; , используя ваш идентификатор коммиттера в поле &amp;laquo;От:&amp;raquo; сообщений с исправлениями и включая поле &amp;laquo;От:&amp;raquo; в теле письма с исправлением, если оно отличается. Если установлено не-логическое значение, format-patch использует это значение вместо вашего идентификатора коммиттера. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="07e705dc3eb04b1cd0e9d868ce2fbabc5a7b23e9" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--notes&lt;/code&gt; option to format-patch. Accepts a boolean value, or a ref which specifies where to get notes. If false, format-patch defaults to &lt;code&gt;--no-notes&lt;/code&gt;. If true, format-patch defaults to &lt;code&gt;--notes&lt;/code&gt;. If set to a non-boolean value, format-patch defaults to &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt;, where &lt;code&gt;ref&lt;/code&gt; is the non-boolean value. Defaults to false.</source>
          <target state="translated">Предоставляет значение по умолчанию для параметра &lt;code&gt;--notes&lt;/code&gt; для format-patch. Принимает логическое значение или ссылку, указывающую, где брать заметки. Если false, format-patch по умолчанию &lt;code&gt;--no-notes&lt;/code&gt; . Если это правда, формат-патч по умолчанию &lt;code&gt;--notes&lt;/code&gt; . Если установлено не-логическое значение, по умолчанию format-patch &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt; значение --notes = &amp;lt;ref&amp;gt; , где &lt;code&gt;ref&lt;/code&gt; - не-логическое значение. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="dae8413448109f25f13d1230fdfd21a6427a0a34" translate="yes" xml:space="preserve">
          <source>Provides the name of the object in the original source control system. fast-import will simply ignore this directive, but filter processes which operate on and modify the stream before feeding to fast-import may have uses for this information</source>
          <target state="translated">Предоставляет имя объекта в оригинальной системе управления исходным кодом.fast-import просто игнорирует эту директиву,но процессы фильтрации,которые работают и изменяют поток перед подачей на fast-import,могут использовать эту информацию</target>
        </trans-unit>
        <trans-unit id="354f719eac7091e1c38104be699d2a68f56df045" translate="yes" xml:space="preserve">
          <source>Providing cvs access to a git repository</source>
          <target state="translated">Предоставление cvs доступа к git-репозиторию</target>
        </trans-unit>
        <trans-unit id="9a84f98b698c9d5bcdfa443dee138e79368665d7" translate="yes" xml:space="preserve">
          <source>Providing usernames and passwords to Git</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a28ca41ca8e50984ed01529e7df3e3335567dc" translate="yes" xml:space="preserve">
          <source>Prune all unreachable objects from the object database</source>
          <target state="translated">Удалить все недоступные объекты из объектной базы данных.</target>
        </trans-unit>
        <trans-unit id="347c95991436ac84fd290ccf1ebe7a72eadc41e7" translate="yes" xml:space="preserve">
          <source>Prune any reflog entries that point to &quot;broken commits&quot;. A broken commit is a commit that is not reachable from any of the reference tips and that refers, directly or indirectly, to a missing commit, tree, or blob object.</source>
          <target state="translated">Удалять все записи в рефлоге,указывающие на &quot;сломанные коммиты&quot;.Сломанный коммит-это коммит,который недоступен из справочных материалов и ссылается,прямо или косвенно,на отсутствующий коммит,дерево или блок-объект.</target>
        </trans-unit>
        <trans-unit id="a7eae2a7a6ec9df449cef235306188bcb1fafe15" translate="yes" xml:space="preserve">
          <source>Prune entries older than &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; that are not reachable from the current tip of the branch. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt;, which in turn defaults to 30 days. &lt;code&gt;--expire-unreachable=all&lt;/code&gt; prunes unreachable entries regardless of their age; &lt;code&gt;--expire-unreachable=never&lt;/code&gt; turns off early pruning of unreachable entries (but see &lt;code&gt;--expire&lt;/code&gt;).</source>
          <target state="translated">Удалите записи старше &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; , которые недоступны из текущего конца ветки. Если этот параметр не указан, время истечения срока берется из параметра конфигурации &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt; , который, в свою очередь, по умолчанию равен 30 дням. &lt;code&gt;--expire-unreachable=all&lt;/code&gt; недостижимые записи удаляются независимо от их возраста; &lt;code&gt;--expire-unreachable=never&lt;/code&gt; отключает раннее &lt;code&gt;--expire&lt;/code&gt; недоступных записей (но см. --expire ).</target>
        </trans-unit>
        <trans-unit id="f510204b241f9f833d70b40e365b78ba855d5d73" translate="yes" xml:space="preserve">
          <source>Prune entries older than the specified time. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpire&lt;/code&gt;, which in turn defaults to 90 days. &lt;code&gt;--expire=all&lt;/code&gt; prunes entries regardless of their age; &lt;code&gt;--expire=never&lt;/code&gt; turns off pruning of reachable entries (but see &lt;code&gt;--expire-unreachable&lt;/code&gt;).</source>
          <target state="translated">Удалять записи старше указанного времени. Если этот параметр не указан, срок действия берется из параметра конфигурации &lt;code&gt;gc.reflogExpire&lt;/code&gt; , который, в свою очередь, по умолчанию равен 90 дням. &lt;code&gt;--expire=all&lt;/code&gt; записи чернослива независимо от их возраста; &lt;code&gt;--expire=never&lt;/code&gt; отключает сокращение доступных записей (но см. &lt;code&gt;--expire-unreachable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ca76117e69104a0e4e81d319f878c7014bb3c8a" translate="yes" xml:space="preserve">
          <source>Prune loose objects older than date (default is 2 weeks ago, overridable by the config variable &lt;code&gt;gc.pruneExpire&lt;/code&gt;). --prune=now prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently; see &quot;NOTES&quot; below. --prune is on by default.</source>
          <target state="translated">Удалите незакрепленные объекты старше даты (по умолчанию - 2 недели назад, это можно изменить с помощью переменной конфигурации &lt;code&gt;gc.pruneExpire&lt;/code&gt; ). --prune = теперь удаляет незакрепленные объекты независимо от их возраста и увеличивает риск повреждения, если другой процесс одновременно выполняет запись в репозиторий; см. &amp;laquo;ПРИМЕЧАНИЯ&amp;raquo; ниже. --prune по умолчанию включен.</target>
        </trans-unit>
        <trans-unit id="ad1903147c3980cb00334e6e57ade6c895b0d197" translate="yes" xml:space="preserve">
          <source>Prune records of conflicted merges that occurred a long time ago. By default, unresolved conflicts older than 15 days and resolved conflicts older than 60 days are pruned. These defaults are controlled via the &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; and &lt;code&gt;gc.rerereResolved&lt;/code&gt; configuration variables respectively.</source>
          <target state="translated">Удалите записи о конфликтующих слияниях, произошедших давным-давно. По умолчанию неурегулированные конфликты старше 15 дней и разрешенные конфликты старше 60 дней удаляются. Эти значения по умолчанию управляются с помощью переменных конфигурации &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; и &lt;code&gt;gc.rerereResolved&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="9ae5dc95253bd1047251fe2f0130ef53d935cb16" translate="yes" xml:space="preserve">
          <source>Prune working tree information in $GIT_DIR/worktrees.</source>
          <target state="translated">Обработайте информацию о рабочем дереве в $GIT_DIR/рабочих деревьях.</target>
        </trans-unit>
        <trans-unit id="b6aa433344bec7e7c38aefc927d7aa60d687c035" translate="yes" xml:space="preserve">
          <source>Prune working tree information in &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daa62e08ce5be741f0f9512af6fe6aea569309c" translate="yes" xml:space="preserve">
          <source>Pruning</source>
          <target state="translated">Pruning</target>
        </trans-unit>
        <trans-unit id="9780740ad9404eab5bef283300816b2d37b6c371" translate="yes" xml:space="preserve">
          <source>Pruning tags with &lt;code&gt;--prune-tags&lt;/code&gt; also works when fetching a URL instead of a named remote. These will all prune tags not found on origin:</source>
          <target state="translated">&lt;code&gt;--prune-tags&lt;/code&gt; тегов с помощью --prune-tags также работает при получении URL-адреса вместо именованного пульта. Все они будут сокращать теги, не найденные в источнике:</target>
        </trans-unit>
        <trans-unit id="5d67c6362cb385f7b2fd7440df4474229e4ced1c" translate="yes" xml:space="preserve">
          <source>Pseudorefs are a class of files under &lt;code&gt;$GIT_DIR&lt;/code&gt; which behave like refs for the purposes of rev-parse, but which are treated specially by git. Pseudorefs both have names that are all-caps, and always start with a line consisting of a &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; followed by whitespace. So, HEAD is not a pseudoref, because it is sometimes a symbolic ref. They might optionally contain some additional data. &lt;code&gt;MERGE_HEAD&lt;/code&gt; and &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; are examples. Unlike &lt;a href=&quot;#def_per_worktree_ref&quot;&gt;per-worktree refs&lt;/a&gt;, these files cannot be symbolic refs, and never have reflogs. They also cannot be updated through the normal ref update machinery. Instead, they are updated by directly writing to the files. However, they can be read as if they were refs, so &lt;code&gt;git rev-parse
MERGE_HEAD&lt;/code&gt; will work.</source>
          <target state="translated">Псевдорефы - это класс файлов в &lt;code&gt;$GIT_DIR&lt;/code&gt; которые ведут себя как ссылки для целей rev-parse, но которые обрабатываются git специально. Оба псевдорефа имеют имена, состоящие из заглавных букв, и всегда начинаются со строки, состоящей из &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1,&lt;/a&gt; за которым следует пробел. Итак, HEAD - это не псевдореф, потому что иногда это символическая ссылка. Они могут дополнительно содержать некоторые дополнительные данные. &lt;code&gt;MERGE_HEAD&lt;/code&gt; и &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; являются примерами. В отличие от &lt;a href=&quot;#def_per_worktree_ref&quot;&gt;ссылок на каждое рабочее дерево&lt;/a&gt; , эти файлы не могут быть символическими ссылками и никогда не иметь журналов повторения. Они также не могут быть обновлены с помощью обычного механизма обновления ссылок. Вместо этого они обновляются путем прямой записи в файлы. Однако их можно читать так, как если бы они были рефери, поэтому &lt;code&gt;git rev-parse MERGE_HEAD&lt;/code&gt; будет работать.</target>
        </trans-unit>
        <trans-unit id="b7a4dc2e6290047f1f86721c32ae669785e9b742" translate="yes" xml:space="preserve">
          <source>Public Git repositories</source>
          <target state="translated">Общедоступные Git-репозитории</target>
        </trans-unit>
        <trans-unit id="8f3f20e99361b4469a543cafe71c660d905701e0" translate="yes" xml:space="preserve">
          <source>Public api</source>
          <target state="translated">Публичный апинефрин</target>
        </trans-unit>
        <trans-unit id="661a1caa924e6377c910ab84f021b879aa1f3688" translate="yes" xml:space="preserve">
          <source>Public key of the https service. It may either be the filename of a PEM or DER encoded public key file or a string starting with &lt;code&gt;sha256//&lt;/code&gt; followed by the base64 encoded sha256 hash of the public key. See also libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt;. git will exit with an error if this option is set but not supported by cURL.</source>
          <target state="translated">Публичный ключ сервиса https. Это может быть либо имя файла открытого ключа в кодировке PEM или DER, либо строка, начинающаяся с &lt;code&gt;sha256//&lt;/code&gt; за которой следует хеш открытого ключа sha256 в кодировке base64. См. Также libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt; . git выйдет с ошибкой, если этот параметр установлен, но не поддерживается cURL.</target>
        </trans-unit>
        <trans-unit id="fcd79d77a075207d5bb03627d6390daac4adccdf" translate="yes" xml:space="preserve">
          <source>Publishing the changes from your local (private) repository to your remote (public) repository requires a write privilege on the remote machine. You need to have an SSH account there to run a single command, &lt;code&gt;git-receive-pack&lt;/code&gt;.</source>
          <target state="translated">Для публикации изменений из локального (частного) репозитория в удаленный (общедоступный) репозиторий требуется право записи на удаленном компьютере. У вас должна быть учетная запись SSH для выполнения одной команды &lt;code&gt;git-receive-pack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5654eba7f3fb26678d0b33453ea83f3704835b" translate="yes" xml:space="preserve">
          <source>Publishing your work</source>
          <target state="translated">Публикация вашей работы</target>
        </trans-unit>
        <trans-unit id="5225d106493e2d5cee97f92acd212fcbe8379cc8" translate="yes" xml:space="preserve">
          <source>Pulling a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to &lt;a href=&quot;#def_fetch&quot;&gt;fetch&lt;/a&gt; it and &lt;a href=&quot;#def_merge&quot;&gt;merge&lt;/a&gt; it. See also &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt;.</source>
          <target state="translated">Вытащить &lt;a href=&quot;#def_branch&quot;&gt;ветку&lt;/a&gt; означает &lt;a href=&quot;#def_fetch&quot;&gt;получить&lt;/a&gt; ее и &lt;a href=&quot;#def_merge&quot;&gt;объединить&lt;/a&gt; . См. Также &lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ba996099ee22cf557dfd858fcdfe9998a7d87a8" translate="yes" xml:space="preserve">
          <source>Pulling down the submodules is a two-step process. First run &lt;code&gt;git submodule
init&lt;/code&gt; to add the submodule repository URLs to &lt;code&gt;.git/config&lt;/code&gt;:</source>
          <target state="translated">Удаление субмодулей - это двухэтапный процесс. Сначала запустите &lt;code&gt;git submodule init&lt;/code&gt; чтобы добавить URL-адреса репозитория подмодулей в &lt;code&gt;.git/config&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="67689e297cd4fdd92ebe641f7b6ed9bc63361f6b" translate="yes" xml:space="preserve">
          <source>Pulling into a dirty tree</source>
          <target state="translated">Втягивание в грязное дерево</target>
        </trans-unit>
        <trans-unit id="678a9bfb35ce5da855b86526d846cbdc7583b760" translate="yes" xml:space="preserve">
          <source>Push &quot;matching&quot; branches to &lt;code&gt;origin&lt;/code&gt;. See &amp;lt;refspec&amp;gt; in the &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt; section above for a description of &quot;matching&quot; branches.</source>
          <target state="translated">Переместите &amp;laquo;соответствующие&amp;raquo; ветви в &lt;code&gt;origin&lt;/code&gt; . См. &amp;lt;refspec&amp;gt; в разделе &lt;a href=&quot;#OPTIONS&quot;&gt;ОПЦИИ&lt;/a&gt; выше для описания &amp;laquo;соответствующих&amp;raquo; ветвей.</target>
        </trans-unit>
        <trans-unit id="e3d386bb2b306b430b8f1443632bcddb41f7fbbb" translate="yes" xml:space="preserve">
          <source>Push all branches (i.e. refs under &lt;code&gt;refs/heads/&lt;/code&gt;); cannot be used with other &amp;lt;refspec&amp;gt;.</source>
          <target state="translated">Протолкните все ветки (т.е. ссылки в &lt;code&gt;refs/heads/&lt;/code&gt; ); не может использоваться с другими &amp;lt;refspec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="7ed05cac5fbf2fe13d768ad8d52cf3e6b3326c39" translate="yes" xml:space="preserve">
          <source>Push all the refs that would be pushed without this option, and also push annotated tags in &lt;code&gt;refs/tags&lt;/code&gt; that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed. This can also be specified with configuration variable &lt;code&gt;push.followTags&lt;/code&gt;. For more information, see &lt;code&gt;push.followTags&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Отправьте все ссылки, которые будут отправлены без этой опции, а также разместите аннотированные теги в &lt;code&gt;refs/tags&lt;/code&gt; , которые отсутствуют на пульте дистанционного управления, но указывают на фиксацию, доступную из отправляемых ссылок. Это также можно указать с помощью переменной конфигурации &lt;code&gt;push.followTags&lt;/code&gt; . Для получения дополнительной информации см. &lt;code&gt;push.followTags&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="640e91962e4a94024fb44763555198cb451cbb5d" translate="yes" xml:space="preserve">
          <source>Push into another repository.</source>
          <target state="translated">Затолкайте в другое хранилище.</target>
        </trans-unit>
        <trans-unit id="fc1129a549e46f5ee09d052c0e625db078207268" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository.</source>
          <target state="translated">Вставьте в публичный репозиторий из вашего основного репозитория.</target>
        </trans-unit>
        <trans-unit id="a011ac29541d686365501a5376539fc2a54082f8" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository. Run &lt;code&gt;git repack&lt;/code&gt;, and possibly &lt;code&gt;git prune&lt;/code&gt; if the transport used for pulling from your repository supports packed repositories.</source>
          <target state="translated">Загрузите в публичный репозиторий из вашего основного репозитория. Запустите &lt;code&gt;git repack&lt;/code&gt; и, возможно, &lt;code&gt;git prune&lt;/code&gt; , если транспорт, используемый для извлечения из вашего репозитория, поддерживает упакованные репозитории.</target>
        </trans-unit>
        <trans-unit id="a8251f9563aa908db5da52a9527e9f939a118d16" translate="yes" xml:space="preserve">
          <source>Push master, using file descriptor #7 to read data from git-receive-pack and file descriptor #8 to write data to same service.</source>
          <target state="translated">Push master,используя файловый дескриптор #7 для чтения данных из git-приёмника и файловый дескриптор #8 для записи данных в тот же сервис.</target>
        </trans-unit>
        <trans-unit id="db6a77b6524cf46e0155fc78cb84e6ef6e8d26d4" translate="yes" xml:space="preserve">
          <source>Push objects over Git protocol to another repository</source>
          <target state="translated">Перемещайте объекты по Git-протоколу в другой репозиторий.</target>
        </trans-unit>
        <trans-unit id="e328f2dc0a129ee52c24984713b8e3e05193f873" translate="yes" xml:space="preserve">
          <source>Push objects over HTTP/DAV to another repository</source>
          <target state="translated">Перенос объектов по HTTP/DAV в другой репозиторий</target>
        </trans-unit>
        <trans-unit id="93e6fc3901865e79bc1dfa6c467266c7822bf760" translate="yes" xml:space="preserve">
          <source>Push the current branch to the remote ref matching &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;origin&lt;/code&gt; repository. This form is convenient to push the current branch without thinking about its local name.</source>
          <target state="translated">Отправьте текущую ветвь на удаленный &lt;code&gt;master&lt;/code&gt; сопоставления ссылок в &lt;code&gt;origin&lt;/code&gt; репозитории. Эта форма удобна для проталкивания текущей ветки, не думая о ее локальном имени.</target>
        </trans-unit>
        <trans-unit id="7221b3bad2db1abe78fb6e7112e947ec9066c484" translate="yes" xml:space="preserve">
          <source>Push your changes to the public repository, and announce it to the public.</source>
          <target state="translated">Вставьте свои изменения в публичный репозиторий и объявите о них.</target>
        </trans-unit>
        <trans-unit id="44e2374abe889d292378278a32f8732ae3d0723a" translate="yes" xml:space="preserve">
          <source>Push your changes to your public repository, and ask your &quot;project lead&quot; and possibly your &quot;sub-subsystem maintainers&quot; to pull from it.</source>
          <target state="translated">Вставьте ваши изменения в ваше публичное хранилище и попросите вашего &quot;руководителя проекта&quot; и,возможно,ваших &quot;мейнтейнеров подсистемы&quot; извлечь из него.</target>
        </trans-unit>
        <trans-unit id="64c3ecd283374b8e31c77b37f0b37ed07f7e3e67" translate="yes" xml:space="preserve">
          <source>Pushes the given local &amp;lt;src&amp;gt; commit or branch to the remote branch described by &amp;lt;dst&amp;gt;. A batch sequence of one or more &lt;code&gt;push&lt;/code&gt; commands is terminated with a blank line (if there is only one reference to push, a single &lt;code&gt;push&lt;/code&gt; command is followed by a blank line). For example, the following would be two batches of &lt;code&gt;push&lt;/code&gt;, the first asking the remote-helper to push the local ref &lt;code&gt;master&lt;/code&gt; to the remote ref &lt;code&gt;master&lt;/code&gt; and the local &lt;code&gt;HEAD&lt;/code&gt; to the remote &lt;code&gt;branch&lt;/code&gt;, and the second asking to push ref &lt;code&gt;foo&lt;/code&gt; to ref &lt;code&gt;bar&lt;/code&gt; (forced update requested by the &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">Отправляет заданный локальный коммит или ветвь &amp;lt;src&amp;gt; в удаленную ветвь, описанную &amp;lt;dst&amp;gt;. Пакетная последовательность из одной или нескольких &lt;code&gt;push&lt;/code&gt; - команд заканчивается пустой строкой (если есть только одна ссылка для push, за одиночной командой &lt;code&gt;push&lt;/code&gt; следует пустая строка). Например, следующие будут двумя пакетами &lt;code&gt;push&lt;/code&gt; , первая просит удаленного помощника подтолкнуть локальный &lt;code&gt;master&lt;/code&gt; к удаленному &lt;code&gt;master&lt;/code&gt; а локальный &lt;code&gt;HEAD&lt;/code&gt; - в удаленную &lt;code&gt;branch&lt;/code&gt; , а второй просит нажать ref &lt;code&gt;foo&lt;/code&gt; на ref &lt;code&gt;bar&lt;/code&gt; (принудительное обновление запрошено знаком &lt;code&gt;+&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca5456a5df7b11e9ef0d22090b33d4f3bd62ba82" translate="yes" xml:space="preserve">
          <source>Pushes which fail due to problems with the incoming pack, missing objects, or due to the &lt;code&gt;pre-receive&lt;/code&gt; hook will not leave any on-disk data. This is usually helpful to prevent repeated failed pushes from filling up your disk, but can make debugging more challenging.</source>
          <target state="translated">Пуши, которые завершаются ошибкой из-за проблем с входящим пакетом, отсутствующих объектов или из &lt;code&gt;pre-receive&lt;/code&gt; перехвата предварительного приема , не оставляют никаких данных на диске. Обычно это помогает предотвратить заполнение диска повторяющимися неудачными нажатиями, но может усложнить отладку.</target>
        </trans-unit>
        <trans-unit id="bd3f47195169191b06e6fb59aa660030c03d8082" translate="yes" xml:space="preserve">
          <source>Pushing a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to get the branch&amp;rsquo;s &lt;a href=&quot;#def_head_ref&quot;&gt;head ref&lt;/a&gt; from a remote &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt;, find out if it is an ancestor to the branch&amp;rsquo;s local head ref, and in that case, putting all objects, which are &lt;a href=&quot;#def_reachable&quot;&gt;reachable&lt;/a&gt; from the local head ref, and which are missing from the remote repository, into the remote &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt;, and updating the remote head ref. If the remote &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; is not an ancestor to the local head, the push fails.</source>
          <target state="translated">Нажатие &lt;a href=&quot;#def_branch&quot;&gt;ветки&lt;/a&gt; означает получение &lt;a href=&quot;#def_head_ref&quot;&gt;ссылки&lt;/a&gt; на голову ветки из удаленного &lt;a href=&quot;#def_repository&quot;&gt;репозитория&lt;/a&gt; , выяснение, является ли она предком локальной ссылки на голову ветки, и в этом случае размещение всех объектов, которые &lt;a href=&quot;#def_reachable&quot;&gt;доступны&lt;/a&gt; из локальной ссылки головы и которые являются отсутствует в удаленном репозитории, в &lt;a href=&quot;#def_object_database&quot;&gt;базу данных&lt;/a&gt; удаленных объектов и обновляет удаленную головку ref. Если удаленная &lt;a href=&quot;#def_head&quot;&gt;головка&lt;/a&gt; не является предком локальной головки, отправка не выполняется.</target>
        </trans-unit>
        <trans-unit id="a1b201ad98b52436e58805968e041862b0e44b88" translate="yes" xml:space="preserve">
          <source>Pushing an empty &amp;lt;src&amp;gt; allows you to delete the &amp;lt;dst&amp;gt; ref from the remote repository. Deletions are always accepted without a leading &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;), except when forbidden by configuration or hooks. See &lt;code&gt;receive.denyDeletes&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; and &lt;code&gt;pre-receive&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; in &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Нажатие пустого &amp;lt;src&amp;gt; позволяет удалить &amp;lt;dst&amp;gt; ref из удаленного репозитория. Делеции всегда принимаются без ведущего &lt;code&gt;+&lt;/code&gt; в refspec (или &lt;code&gt;--force&lt;/code&gt; ), кроме случаев , когда запрещено конфигурации или крючков. См. &lt;code&gt;receive.denyDeletes&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; и &lt;code&gt;pre-receive&lt;/code&gt; и &lt;code&gt;update&lt;/code&gt; в &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b554604b5dbdc966cb242c709d8d9564fd3f48c" translate="yes" xml:space="preserve">
          <source>Pushing changes to a public repository</source>
          <target state="translated">Перенос изменений в публичный репозиторий</target>
        </trans-unit>
        <trans-unit id="eedfa4fe862b4ad2f2d3d15f8505bb4e78d4fc1a" translate="yes" xml:space="preserve">
          <source>Put all the committers in the same group, and make the repository writable by that group:</source>
          <target state="translated">Поместите все коммиттеры в одну группу и сделайте репозиторий доступным для записи этой группой:</target>
        </trans-unit>
        <trans-unit id="c26397c67704ec958580d89b3087bf7a34700351" translate="yes" xml:space="preserve">
          <source>Put everything in the current head&amp;rsquo;s Documentation/ directory into &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt;, with the prefix &lt;code&gt;git-docs/&lt;/code&gt;.</source>
          <target state="translated">Поместите все из каталога Documentation / текущей головы в &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt; с префиксом &lt;code&gt;git-docs/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea705b3a47d1cdf9261daf67230a93968f6edd0b" translate="yes" xml:space="preserve">
          <source>QUERY_STRING</source>
          <target state="translated">QUERY_STRING</target>
        </trans-unit>
        <trans-unit id="c3149be9220a8ce116523f671437212f69f45ea5" translate="yes" xml:space="preserve">
          <source>Quarantine environment</source>
          <target state="translated">карантинная среда</target>
        </trans-unit>
        <trans-unit id="ec85d37cf9d9f3d10289231d732a03bb25cc011c" translate="yes" xml:space="preserve">
          <source>Query p4 for labels associated with the depot paths, and add them as tags in Git. Limited usefulness as only imports labels associated with new changelists. Deprecated.</source>
          <target state="translated">Запрос p4 для меток,связанных с путями депо,и добавление их как тегов в Git.Ограниченная полезность в качестве только импортных этикеток,связанных с новыми списками изменений.Исключено.</target>
        </trans-unit>
        <trans-unit id="cb46658e95579ef7659db1b1de8bbb537b0fac1e" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/&quot;&gt;GitHub Cheat Sheet&lt;/a&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8d2336bc85bc6e5b624295904c32b955dda594" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;GitHub Cheat Sheet&lt;/a&gt;&lt;small&gt;(PDF)&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;&lt;small&gt;(SVG | PNG)&lt;/small&gt;</source>
          <target state="translated">Краткие справочные руководства: &lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;Памятка по GitHub &lt;/a&gt;&lt;small&gt;(PDF)&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Шпаргалка по Visual Git &lt;/a&gt;&lt;small&gt;(SVG | PNG)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3a11ac4a816649c90b2a876b8ed365a4f747816e" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages.</source>
          <target state="translated">Тихо,подавите сообщения обратной связи.</target>
        </trans-unit>
        <trans-unit id="2ac9102b0a2f3eb9abc09cf4e1c41ec0575ff1e1" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages. Implies &lt;code&gt;--no-progress&lt;/code&gt;.</source>
          <target state="translated">Тихо, подавить сообщения обратной связи. Подразумевает &lt;code&gt;--no-progress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de1dab6bd571badbfbb3ddaa6f495be909332129" translate="yes" xml:space="preserve">
          <source>Quiet. If --refresh finds that the index needs an update, the default behavior is to error out. This option makes &lt;code&gt;git update-index&lt;/code&gt; continue anyway.</source>
          <target state="translated">Тихо. Если --refresh обнаруживает, что индекс нуждается в обновлении, поведение по умолчанию - ошибка. Этот параметр в любом случае продолжает работу с &lt;code&gt;git update-index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1baedfd2936afaf34298be8c53a6f3520c17d3e" translate="yes" xml:space="preserve">
          <source>Quiet; do not warn about conflicts.</source>
          <target state="translated">Тихо,не предупреждайте о конфликтах.</target>
        </trans-unit>
        <trans-unit id="e9770de83f70890562d92f9477d5315581d69261" translate="yes" xml:space="preserve">
          <source>Quite similarly, if &lt;code&gt;core.symlinks&lt;/code&gt; configuration variable is set to &lt;code&gt;false&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), symbolic links are checked out as plain files, and this command does not modify a recorded file mode from symbolic link to regular file.</source>
          <target state="translated">Точно так же, если для переменной конфигурации &lt;code&gt;core.symlinks&lt;/code&gt; задано значение &lt;code&gt;false&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ), символические ссылки проверяются как простые файлы, и эта команда не изменяет режим записанного файла с символической ссылки на обычный файл.</target>
        </trans-unit>
        <trans-unit id="f0f61d9660842b035df0296041289cbf85b3ae28" translate="yes" xml:space="preserve">
          <source>Quote fields containing whitespace as if they were strings in C source code; i.e., surrounded by double-quotes and with backslash escapes. Use 40 &quot;0&quot; characters or the empty string to specify a zero value. To specify a missing value, omit the value and its preceding SP entirely.</source>
          <target state="translated">Поля кавычек,содержащие пробелы,как если бы они были строками в исходном коде на языке Си;т.е.окруженные двойными кавычками и с экранированием обратным слешем.Используйте 40 символов &quot;0&quot; или пустую строку для указания нулевого значения.Чтобы указать пропущенное значение,опустите значение и его предшествующий ПВ целиком.</target>
        </trans-unit>
        <trans-unit id="0550aeb8801a3ad8332244f3d277c748ecb56080" translate="yes" xml:space="preserve">
          <source>Quoted aliases and quoted addresses are not supported: lines that contain a &lt;code&gt;&quot;&lt;/code&gt; symbol are ignored.</source>
          <target state="translated">Цитируемые псевдонимы и цитируемые адреса не поддерживаются: строки, содержащие &lt;code&gt;&quot;&lt;/code&gt; символ игнорируются.</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="38354f3564dc690008158ec27147b7718eef20da" translate="yes" xml:space="preserve">
          <source>R: renaming of a file</source>
          <target state="translated">R:переименование файла</target>
        </trans-unit>
        <trans-unit id="73ff05a9f629bff633fa7a0499495556f0f1a07f" translate="yes" xml:space="preserve">
          <source>README.html</source>
          <target state="translated">README.html</target>
        </trans-unit>
        <trans-unit id="986c96108f4514e08f8de60c616ff1d0727fd986" translate="yes" xml:space="preserve">
          <source>REMOTE_ADDR</source>
          <target state="translated">REMOTE_ADDR</target>
        </trans-unit>
        <trans-unit id="613cec3f00ac4a24def4b10bec39e10198b8d82e" translate="yes" xml:space="preserve">
          <source>REMOTE_USER</source>
          <target state="translated">REMOTE_USER</target>
        </trans-unit>
        <trans-unit id="a16e10b928e7c21c5b4ae3d47f9db3c0b6c782c3" translate="yes" xml:space="preserve">
          <source>REQUEST_METHOD</source>
          <target state="translated">REQUEST_METHOD</target>
        </trans-unit>
        <trans-unit id="697070f17a70b2490138caae401415ac7b401fbd" translate="yes" xml:space="preserve">
          <source>RFC 2822</source>
          <target state="translated">RFC 2822</target>
        </trans-unit>
        <trans-unit id="b34db1f303fd91c6e7039f452d5097c789b26cf1" translate="yes" xml:space="preserve">
          <source>Rather than checking out a branch to work on it, check out a commit for inspection and discardable experiments. This is the default behavior of &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; when &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; is not a branch name. See the &quot;DETACHED HEAD&quot; section below for details.</source>
          <target state="translated">Вместо того, чтобы проверять ветку для работы над ней, проверьте фиксацию для проверки и отклоняемых экспериментов. Это поведение по умолчанию для &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; , когда &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; не является именем ветки. См. Раздел &amp;laquo;ОТДЕЛЕННАЯ ГОЛОВКА&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="4e4bfd7d1a0190903bc19000a40525c987ff7008" translate="yes" xml:space="preserve">
          <source>Raw output format</source>
          <target state="translated">Формат исходного вывода</target>
        </trans-unit>
        <trans-unit id="7b0a88cf0ceef9e929b45fca40ecfa70b119395a" translate="yes" xml:space="preserve">
          <source>Re-author p4 changes before submitting to p4. This option requires p4 admin privileges.</source>
          <target state="translated">Переиздайте изменения в p4 перед отправкой в p4.Эта опция требует привилегий администратора p4.</target>
        </trans-unit>
        <trans-unit id="a3d5287f4feb36f53be9e482bea0b4f69488906a" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more details about each hook.</source>
          <target state="translated">Прочтите &lt;a href=&quot;githooks&quot;&gt;githooks [5],&lt;/a&gt; чтобы узнать больше о каждом хуке.</target>
        </trans-unit>
        <trans-unit id="3c99ae2389e194940d6e9dae44358b0f59db22c3" translate="yes" xml:space="preserve">
          <source>Read a list of commits from stdin and commit them in reverse order. Only the leading sha1 is read from each line, so &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; output can be used.</source>
          <target state="translated">Прочтите список коммитов со стандартного ввода и зафиксируйте их в обратном порядке. Из каждой строки читается только начальный sha1, поэтому можно использовать вывод &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a81bd113ea455376c0709dc2b5dec2fbcc3eae4" translate="yes" xml:space="preserve">
          <source>Read a packed archive (.pack) from the standard input, expanding the objects contained within and writing them into the repository in &quot;loose&quot; (one object per file) format.</source>
          <target state="translated">Читайте упакованный архив (.pack)со стандартного входа,расширяя содержащиеся в нем объекты и записывая их в хранилище в &quot;свободном&quot; формате (по одному объекту на файл).</target>
        </trans-unit>
        <trans-unit id="cf4f210605880935e907e739e930d70c6c05f393" translate="yes" xml:space="preserve">
          <source>Read a patch from the standard input and compute the patch ID for it.</source>
          <target state="translated">Считайте патч со стандартного входа и вычислите для него идентификатор патча.</target>
        </trans-unit>
        <trans-unit id="118b284f547f2475f4692a5a06eacb1fa689da5d" translate="yes" xml:space="preserve">
          <source>Read a tar archive created by &lt;code&gt;git archive&lt;/code&gt; from the standard input and extract the commit ID stored in it. It reads only the first 1024 bytes of input, thus its runtime is not influenced by the size of the tar archive very much.</source>
          <target state="translated">Прочтите tar-архив, созданный &lt;code&gt;git archive&lt;/code&gt; , со стандартного ввода и извлеките хранящийся в нем идентификатор фиксации. Он читает только первые 1024 байта ввода, поэтому время его выполнения не сильно зависит от размера tar-архива.</target>
        </trans-unit>
        <trans-unit id="8323be41a83f5e8edd45cebf33794d8211b9a65a" translate="yes" xml:space="preserve">
          <source>Read additional exclude patterns that apply only to the directory and its subdirectories in &amp;lt;file&amp;gt;.</source>
          <target state="translated">Прочтите дополнительные шаблоны исключения, которые применяются только к каталогу и его подкаталогам в &amp;lt;file&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ec538abd0ecb84f4afa31116a9fde4a7bfbfc841" translate="yes" xml:space="preserve">
          <source>Read contacts, one per line, from the standard input after exhausting contacts provided on the command-line.</source>
          <target state="translated">Считывание контактов,по одному на строку,со стандартного входа после исчерпания контактов,предоставленных в командной строке.</target>
        </trans-unit>
        <trans-unit id="cc8be265c5565879cb19acef5a95bb650b329807" translate="yes" xml:space="preserve">
          <source>Read description of &lt;code&gt;%feature&lt;/code&gt; hash for detailed list, and descriptions. See also &quot;Configuring gitweb features&quot; section in &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;</source>
          <target state="translated">Прочтите описание хеш- &lt;code&gt;%feature&lt;/code&gt; для подробного списка и описаний. См. Также раздел &amp;laquo;Настройка функций gitweb&amp;raquo; в &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15ad57eb2da16d3087f86e421c960f711d5a7f97" translate="yes" xml:space="preserve">
          <source>Read exclude patterns from &amp;lt;file&amp;gt;; 1 per line.</source>
          <target state="translated">Прочитать шаблоны исключения из &amp;lt;file&amp;gt;; 1 на строку.</target>
        </trans-unit>
        <trans-unit id="f6c76b424f91b25c9b13ee14e1604c5d3fa96f28" translate="yes" xml:space="preserve">
          <source>Read file names from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">Читайте имена файлов со стандартного входа,по одному на строку,а не из командной строки.</target>
        </trans-unit>
        <trans-unit id="d0b5b313182b086a1f9af39ecd4467e46faca9cf" translate="yes" xml:space="preserve">
          <source>Read index information from stdin.</source>
          <target state="translated">Читайте информацию об индексах из stdin.</target>
        </trans-unit>
        <trans-unit id="80670c79001d8f8c9a5be5d38404bf833dac649e" translate="yes" xml:space="preserve">
          <source>Read its description.</source>
          <target state="translated">Прочитайте его описание.</target>
        </trans-unit>
        <trans-unit id="46ab10e675175e0e453c98d42b078fb4b46c2856" translate="yes" xml:space="preserve">
          <source>Read pathnames from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">Читайте патнамы со стандартного входа,по одному на строку,а не из командной строки.</target>
        </trans-unit>
        <trans-unit id="e51b79a68429169e8d905bac10a875d5d0bc0bbc" translate="yes" xml:space="preserve">
          <source>Read patterns from &amp;lt;file&amp;gt;, one per line.</source>
          <target state="translated">Считайте шаблоны из &amp;lt;file&amp;gt;, по одному в каждой строке.</target>
        </trans-unit>
        <trans-unit id="742eb52188cd86d4cd26b3ac213de9e008afe01b" translate="yes" xml:space="preserve">
          <source>Read refspecs, one per line, from stdin in addition to those provided as arguments. The &quot;tag &amp;lt;name&amp;gt;&quot; format is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed49b353bd2e8ef2071f098ea90e8175a16e2cc" translate="yes" xml:space="preserve">
          <source>Read text, such as commit messages, notes, tags and branch descriptions, from the standard input and clean it in the manner used by Git.</source>
          <target state="translated">Читайте текст,такой как сообщения о фиксации,заметки,теги и описания ветвей,из стандартного ввода и очищайте его так,как это используется в Git'е.</target>
        </trans-unit>
        <trans-unit id="eceb0ad0aa215d85bc1cfa0886bd096a3daed30d" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;.idx&lt;/code&gt; file for a Git packfile (created with &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; or &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt;) from the standard input, and dump its contents. The output consists of one object per line, with each line containing two or three space-separated columns:</source>
          <target state="translated">Прочтите файл &lt;code&gt;.idx&lt;/code&gt; для файла пакета Git (созданного с помощью &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; или &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack [1]&lt;/a&gt; ) из стандартного ввода и выгрузите его содержимое. Вывод состоит из одного объекта в строке, каждая строка содержит два или три столбца, разделенных пробелами:</target>
        </trans-unit>
        <trans-unit id="ddd6a34883963a795d5ebc22563eef2cf30acd2b" translate="yes" xml:space="preserve">
          <source>Read the NUL-terminated &lt;code&gt;ls-tree -z&lt;/code&gt; output instead.</source>
          <target state="translated">Вместо этого прочтите вывод &lt;code&gt;ls-tree -z&lt;/code&gt; с завершающим NUL .</target>
        </trans-unit>
        <trans-unit id="3ea8fc0021add956f340de030bf6e8165a69896f" translate="yes" xml:space="preserve">
          <source>Read the commit log message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read from the standard input. This can be given more than once and the content of each file becomes its own paragraph.</source>
          <target state="translated">Прочтите сообщение журнала фиксации из данного файла. Используйте &lt;code&gt;-&lt;/code&gt; для чтения из стандартного ввода. Это может быть дано более одного раза, и содержание каждого файла становится отдельным абзацем.</target>
        </trans-unit>
        <trans-unit id="507fdedba9f69c5efbd0e8cf829abe30d4a7a120" translate="yes" xml:space="preserve">
          <source>Read the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">Прочтите сообщение о фиксации,которое будет использоваться для фиксации слияния (в случае,если оно создано).</target>
        </trans-unit>
        <trans-unit id="9362ea89cc38e10989edc212ebc0bf489cc001f5" translate="yes" xml:space="preserve">
          <source>Read the commit-graph file and verify its contents against the object database. Used to check for corrupted data.</source>
          <target state="translated">Прочитайте файл коммит-графика и сверьте его содержимое с базой данных объектов.Используется для проверки на наличие поврежденных данных.</target>
        </trans-unit>
        <trans-unit id="9e4092c6ffe69dbb6a8bf7641feea7e173111c93" translate="yes" xml:space="preserve">
          <source>Read the object from standard input instead of from a file.</source>
          <target state="translated">Читайте объект со стандартного входа,а не из файла.</target>
        </trans-unit>
        <trans-unit id="16a5e93c91809d39b015e5b24abf65dd6438e038" translate="yes" xml:space="preserve">
          <source>Read the revision arguments from the standard input, instead of individual object names. The revision arguments are processed the same way as &lt;code&gt;git rev-list&lt;/code&gt; with the &lt;code&gt;--objects&lt;/code&gt; flag uses its &lt;code&gt;commit&lt;/code&gt; arguments to build the list of objects it outputs. The objects on the resulting list are packed. Besides revisions, &lt;code&gt;--not&lt;/code&gt; or &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; lines are also accepted.</source>
          <target state="translated">Считайте аргументы ревизии из стандартного ввода вместо имен отдельных объектов. Аргументы ревизии обрабатываются так же, как &lt;code&gt;git rev-list&lt;/code&gt; с флагом &lt;code&gt;--objects&lt;/code&gt; использует свои аргументы &lt;code&gt;commit&lt;/code&gt; для создания списка объектов, которые он выводит. Объекты в результирующем списке упакованы. Помимо исправлений, также принимаются строки &lt;code&gt;--not&lt;/code&gt; или &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f840070f6a18eee1c3de888e1eec475edd1cfa4" translate="yes" xml:space="preserve">
          <source>Read, modify and delete symbolic refs</source>
          <target state="translated">Чтение,изменение и удаление символических ссылок</target>
        </trans-unit>
        <trans-unit id="356b6782c6512845fae8c2da14d692d4da174e8d" translate="yes" xml:space="preserve">
          <source>Reading from a named tree</source>
          <target state="translated">Чтение с названного дерева</target>
        </trans-unit>
        <trans-unit id="7405316147ea4906cae4c658957705537066053b" translate="yes" xml:space="preserve">
          <source>Reading from the active commit</source>
          <target state="translated">Считывание с активного коммита</target>
        </trans-unit>
        <trans-unit id="d5df5dafb2331c4e6af80c2f8a0c26176a288dab" translate="yes" xml:space="preserve">
          <source>Reads a packed archive (.pack) from the specified file, and builds a pack index file (.idx) for it. The packed archive together with the pack index can then be placed in the objects/pack/ directory of a Git repository.</source>
          <target state="translated">Читает упакованный архив (.pack)из указанного файла и строит для него индексный файл пакета (.idx).Упакованный архив вместе с индексом пакета может быть помещён в каталог объектов/пакетов/репозитория Git'а.</target>
        </trans-unit>
        <trans-unit id="db9526754c129c75f60022c8e34e8db9d6855fac" translate="yes" xml:space="preserve">
          <source>Reads a single e-mail message from the standard input, and writes the commit log message in &amp;lt;msg&amp;gt; file, and the patches in &amp;lt;patch&amp;gt; file. The author name, e-mail and e-mail subject are written out to the standard output to be used by &lt;code&gt;git am&lt;/code&gt; to create a commit. It is usually not necessary to use this command directly. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; instead.</source>
          <target state="translated">Читает одно сообщение электронной почты из стандартного ввода и записывает сообщение журнала фиксации в файл &amp;lt;msg&amp;gt;, а исправления - в файл &amp;lt;patch&amp;gt;. Имя автора, адрес электронной почты и тема электронной почты записываются в стандартный вывод, который используется &lt;code&gt;git am&lt;/code&gt; для создания фиксации. Обычно нет необходимости использовать эту команду напрямую. См. Вместо этого &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91a54b1043f609f02e31617fc1ed3b549e2a4394" translate="yes" xml:space="preserve">
          <source>Reads a tag contents on standard input and creates a tag object that can also be used to sign other objects.</source>
          <target state="translated">Читает содержимое тега на стандартном входе и создает объект тега,который также может быть использован для подписи других объектов.</target>
        </trans-unit>
        <trans-unit id="1988117fbbba1a52186c7874f472ad690b235ffc" translate="yes" xml:space="preserve">
          <source>Reads given idx file for packed Git archive created with the &lt;code&gt;git pack-objects&lt;/code&gt; command and verifies idx file and the corresponding pack file.</source>
          <target state="translated">Читает указанный файл idx для упакованного архива Git, созданного с помощью команды &lt;code&gt;git pack-objects&lt;/code&gt; , и проверяет файл idx и соответствующий файл пакета.</target>
        </trans-unit>
        <trans-unit id="befcf9896fcbea450fd9bee257995fb96286ee5a" translate="yes" xml:space="preserve">
          <source>Reads list of objects from the standard input, and writes either one or more packed archives with the specified base-name to disk, or a packed archive to the standard output.</source>
          <target state="translated">Читает список объектов со стандартного входа и записывает либо один или несколько упакованных архивов с указанным базовым именем на диск,либо упакованный архив на стандартный выход.</target>
        </trans-unit>
        <trans-unit id="d7a9d36099b1ff6ac5bd15dd14e16c269b0389b8" translate="yes" xml:space="preserve">
          <source>Reads standard input in non-recursive &lt;code&gt;ls-tree&lt;/code&gt; output format, and creates a tree object. The order of the tree entries is normalized by mktree so pre-sorting the input is not required. The object name of the tree object built is written to the standard output.</source>
          <target state="translated">Читает стандартный ввод в нерекурсивном формате вывода &lt;code&gt;ls-tree&lt;/code&gt; и создает объект дерева. Порядок записей в дереве нормализуется mktree, поэтому предварительная сортировка входных данных не требуется. Имя объекта построенного древовидного объекта выводится на стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="768de97d393241af581368bdb5b60add6bc4daa9" translate="yes" xml:space="preserve">
          <source>Reads the supplied diff output (i.e. &quot;a patch&quot;) and applies it to files. When running from a subdirectory in a repository, patched paths outside the directory are ignored. With the &lt;code&gt;--index&lt;/code&gt; option the patch is also applied to the index, and with the &lt;code&gt;--cached&lt;/code&gt; option the patch is only applied to the index. Without these options, the command applies the patch only to files, and does not require them to be in a Git repository.</source>
          <target state="translated">Читает предоставленный вывод diff (то есть &amp;laquo;патч&amp;raquo;) и применяет его к файлам. При запуске из подкаталога в репозитории пропатченные пути за пределами каталога игнорируются. С параметром &lt;code&gt;--index&lt;/code&gt; патч также применяется к индексу, а с параметром &lt;code&gt;--cached&lt;/code&gt; патч применяется только к индексу. Без этих параметров команда применяет исправление только к файлам и не требует, чтобы они находились в репозитории Git.</target>
        </trans-unit>
        <trans-unit id="e5173f184d3064943fb31ef4b9c751d1119e1685" translate="yes" xml:space="preserve">
          <source>Reads the tree information given by &amp;lt;tree-ish&amp;gt; into the index, but does not actually &lt;strong&gt;update&lt;/strong&gt; any of the files it &quot;caches&quot;. (see: &lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index[1]&lt;/a&gt;)</source>
          <target state="translated">Считывает информацию о дереве, указанную &amp;lt;tree-ish&amp;gt;, в индекс, но фактически не &lt;strong&gt;обновляет&lt;/strong&gt; ни один из файлов, которые он &amp;laquo;кэширует&amp;raquo;. (см .: &lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index [1]&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e432986c9c0bf1c0563c54e4546289b72e2b8f05" translate="yes" xml:space="preserve">
          <source>Reads three tree-ish, and output trivial merge results and conflicting stages to the standard output. This is similar to what three-way &lt;code&gt;git read-tree -m&lt;/code&gt; does, but instead of storing the results in the index, the command outputs the entries to the standard output.</source>
          <target state="translated">Считывает три вида дерева и выводит на стандартный вывод тривиальные результаты слияния и конфликтующие этапы. Это похоже на то, что делает трехсторонний &lt;code&gt;git read-tree -m&lt;/code&gt; , но вместо сохранения результатов в индексе команда выводит записи в стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="47a594db00e7ab66962cb542d6f07d66a982ad3f" translate="yes" xml:space="preserve">
          <source>Reads tree information into the index</source>
          <target state="translated">Читает информацию о дереве в индекс</target>
        </trans-unit>
        <trans-unit id="cd01faf1694de2fbbfa60db859fa0d8c2fb7a091" translate="yes" xml:space="preserve">
          <source>Reapply all clean cherry-picks of any upstream commit instead of preemptively dropping them. (If these commits then become empty after rebasing, because they contain a subset of already upstream changes, the behavior towards them is controlled by the &lt;code&gt;--empty&lt;/code&gt; flag.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209b43abaea4b5ac5dbb8b759ed99ebfaf6f9172" translate="yes" xml:space="preserve">
          <source>Reapply commits on top of another base tip</source>
          <target state="translated">Повторное совершение обязательств поверх другого базового наконечника.</target>
        </trans-unit>
        <trans-unit id="b5f89f19a4f1bfbd626812410183459baf015069" translate="yes" xml:space="preserve">
          <source>Reapply the sparsity pattern rules to paths in the working tree. Commands like merge or rebase can materialize paths to do their work (e.g. in order to show you a conflict), and other sparse-checkout commands might fail to sparsify an individual file (e.g. because it has unstaged changes or conflicts). In such cases, it can make sense to run &lt;code&gt;git sparse-checkout reapply&lt;/code&gt; later after cleaning up affected paths (e.g. resolving conflicts, undoing or committing changes, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95695a29b19740f8f73c24fedd25acfa8a46012d" translate="yes" xml:space="preserve">
          <source>Rebase</source>
          <target state="translated">Rebase</target>
        </trans-unit>
        <trans-unit id="f805426f874c522ca8e3397a261d025324269dce" translate="yes" xml:space="preserve">
          <source>Rebase all commits reachable from &amp;lt;branch&amp;gt;, instead of limiting them with an &amp;lt;upstream&amp;gt;. This allows you to rebase the root commit(s) on a branch. When used with --onto, it will skip changes already contained in &amp;lt;newbase&amp;gt; (instead of &amp;lt;upstream&amp;gt;) whereas without --onto it will operate on every change. When used together with both --onto and --preserve-merges, &lt;code&gt;all&lt;/code&gt; root commits will be rewritten to have &amp;lt;newbase&amp;gt; as parent instead.</source>
          <target state="translated">Перебазируйте все коммиты, доступные из &amp;lt;branch&amp;gt;, вместо того, чтобы ограничивать их &amp;lt;upstream&amp;gt;. Это позволяет вам перенастроить корневые коммиты в ветке. При использовании с --onto он будет пропускать изменения, уже содержащиеся в &amp;lt;newbase&amp;gt; (вместо &amp;lt;upstream&amp;gt;), тогда как без --onto он будет работать с каждым изменением. При использовании вместе с --onto и --preserve-merges &lt;code&gt;all&lt;/code&gt; корневые коммиты будут переписаны так, чтобы вместо этого родительский элемент имел &amp;lt;newbase&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="e5565e2c078bf46f769d916c78f2140677ea9bef" translate="yes" xml:space="preserve">
          <source>Rebase options</source>
          <target state="translated">Варианты переоснащения</target>
        </trans-unit>
        <trans-unit id="716069514beaa612afd8a844f284c8d0a6aabce4" translate="yes" xml:space="preserve">
          <source>Rebase vs. pull/merge</source>
          <target state="translated">Перезагрузка против притяжения/погружения</target>
        </trans-unit>
        <trans-unit id="5e20f7eeaec14e3dc573b7394eb6cd8341f1bca1" translate="yes" xml:space="preserve">
          <source>Rebase your current HEAD on the last commit you want to retain as-is. For example, if you want to reorder the last 5 commits, use:</source>
          <target state="translated">Перезагрузите ваш текущий HEAD на последний коммит,который вы хотите сохранить как есть.Например,если вы хотите переупорядочить последние 5 коммитов,используйте:</target>
        </trans-unit>
        <trans-unit id="7170c51391b558eaee43fbe3f7e40861483475fb" translate="yes" xml:space="preserve">
          <source>Rebasing (or any other form of rewriting) a branch that others have based work on is a bad idea: anyone downstream of it is forced to manually fix their history. This section explains how to do the fix from the downstream&amp;rsquo;s point of view. The real fix, however, would be to avoid rebasing the upstream in the first place.</source>
          <target state="translated">Перебазирование (или любая другая форма переписывания) ветки, над которой работают другие, - плохая идея: любой, кто находится ниже по течению, вынужден вручную исправлять свою историю. В этом разделе объясняется, как сделать исправление с точки зрения нижестоящих. Реальное решение, однако, состоит в том, чтобы в первую очередь избежать перебазирования восходящего потока.</target>
        </trans-unit>
        <trans-unit id="8f0767f1f4e33ddf301ed23c7f2cab0332acde8d" translate="yes" xml:space="preserve">
          <source>Rebasing interactively means that you have a chance to edit the commits which are rebased. You can reorder the commits, and you can remove them (weeding out bad or otherwise unwanted patches).</source>
          <target state="translated">Интерактивный перебазинг означает,что у вас есть возможность редактировать коммиты,которые перебазируются.Вы можете переупорядочить коммиты и удалить их (прополка плохих или других нежелательных патчей).</target>
        </trans-unit>
        <trans-unit id="451ba45ef5ba504d79efe1ccb8ef4e6b541d4b90" translate="yes" xml:space="preserve">
          <source>Rebasing merges</source>
          <target state="translated">Пересмотр слияний</target>
        </trans-unit>
        <trans-unit id="f41810dd94a2ab482398f10cf85665624d62733a" translate="yes" xml:space="preserve">
          <source>Recall that merge commits may have more than one parent; by default, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; follow the first parent listed in the commit, but you can also choose:</source>
          <target state="translated">Напомним, что у коммитов слияния может быть более одного родителя; по умолчанию &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;~&lt;/code&gt; следуют за первым родителем, указанным в коммите, но вы также можете выбрать:</target>
        </trans-unit>
        <trans-unit id="b37c74948935714b7fd73afa3de16cd064ee51d6" translate="yes" xml:space="preserve">
          <source>Recall that the commit which will be committed after we resolve this conflict will have two parents instead of the usual one: one parent will be HEAD, the tip of the current branch; the other will be the tip of the other branch, which is stored temporarily in MERGE_HEAD.</source>
          <target state="translated">Напомним,что коммит,который будет зафиксирован после разрешения конфликта,будет иметь двух родителей вместо обычного:один родитель будет HEAD,кончик текущей ветки;другой-кончик другой ветки,которая временно хранится в MERGE_HEAD.</target>
        </trans-unit>
        <trans-unit id="9f6cd666ff59558e35fc1e4987f55228a4aa839c" translate="yes" xml:space="preserve">
          <source>Receive missing objects from another repository</source>
          <target state="translated">Получить недостающие объекты из другого хранилища</target>
        </trans-unit>
        <trans-unit id="3a1414f04e5ec5736bdcd32788841a475c616871" translate="yes" xml:space="preserve">
          <source>Receive what is pushed into the repository</source>
          <target state="translated">Получить то,что затолкано в репозиторий.</target>
        </trans-unit>
        <trans-unit id="ca8f48326e259b3e6bb0b952b7bb30d324f93b41" translate="yes" xml:space="preserve">
          <source>Recipe: Copy maint</source>
          <target state="translated">Рецептура:Копировать мейнстрит</target>
        </trans-unit>
        <trans-unit id="53d4283d5e8f18dd173ab180112f372c62ec5838" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Merging remote topics</source>
          <target state="translated">Рецептура:Толкай/тяни:Объединение удаленных тем</target>
        </trans-unit>
        <trans-unit id="1f8640f7861cc46b56a1e4b42e9ca596b559f6db" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Publishing branches/topics</source>
          <target state="translated">Рецептура:Толкай/тяни:Ветви/темы публикаций</target>
        </trans-unit>
        <trans-unit id="3a17d2c389fe13fb57af10dbacfb6b3db024c7c4" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Staying up to date</source>
          <target state="translated">Рецептура:Толкай/тяни:Оставаясь в курсе</target>
        </trans-unit>
        <trans-unit id="02b6d43b8510b59229854c014a4620861f29d737" translate="yes" xml:space="preserve">
          <source>Recipe: Release tagging</source>
          <target state="translated">Рецептура:Освобождающая метка</target>
        </trans-unit>
        <trans-unit id="9d28e02794d321eb00b6d5b97832a596837552b2" translate="yes" xml:space="preserve">
          <source>Recipe: Rewind and rebuild next</source>
          <target state="translated">Рецептура:Перемотка и перестройка в следующий раз</target>
        </trans-unit>
        <trans-unit id="f8152ab6d8ec6437faa103dde674cb065aa68613" translate="yes" xml:space="preserve">
          <source>Recipe: Update maint to new release</source>
          <target state="translated">Рецептура:Обновление maint до нового релиза</target>
        </trans-unit>
        <trans-unit id="29ee8bda8dd5e0f017624c7f75aa875a53804d32" translate="yes" xml:space="preserve">
          <source>Recipe: Verify &lt;em&gt;master&lt;/em&gt; is a superset of &lt;em&gt;maint&lt;/em&gt;</source>
          <target state="translated">Рецепт: Проверка &lt;em&gt;хозяина&lt;/em&gt; является надстройкой &lt;em&gt;MAINT&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffd09f97e74a882a55504c37b0826f564e6b1346" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Importing patches</source>
          <target state="translated">Рецептура:Формат-патч/ам:Импортируя патчи</target>
        </trans-unit>
        <trans-unit id="363c9c30e4fafba7e8fc9192a52c83213c41b8ac" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Keeping topics up to date</source>
          <target state="translated">Рецептура:Формат-патч/ам:Поддержание актуальности тем</target>
        </trans-unit>
        <trans-unit id="677a69c96c088fbfbe55531cae388f0a94e79290" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Publishing branches/topics</source>
          <target state="translated">Рецептура:Формат-патч/ам:Ветви/темы публикаций</target>
        </trans-unit>
        <trans-unit id="7c405acad54185184a3b50d9aee58d7a13bab6ed" translate="yes" xml:space="preserve">
          <source>Recompress, remove unused cruft:</source>
          <target state="translated">Перекомпрессируйте,удалите неиспользуемый круфт:</target>
        </trans-unit>
        <trans-unit id="257831ab2bd13a64966a7f962a9574ea39ef3108" translate="yes" xml:space="preserve">
          <source>Record changes to the repository</source>
          <target state="translated">Записывать изменения в репозиторий</target>
        </trans-unit>
        <trans-unit id="13168b3a0cbb28fba7cf06c3c640480d4de874bc" translate="yes" xml:space="preserve">
          <source>Record only the fact that the path will be added later. An entry for the path is placed in the index with no content. This is useful for, among other things, showing the unstaged content of such files with &lt;code&gt;git diff&lt;/code&gt; and committing them with &lt;code&gt;git commit
-a&lt;/code&gt;.</source>
          <target state="translated">Запишите только тот факт, что путь будет добавлен позже. Запись для пути помещается в указатель без содержимого. Это полезно, среди прочего, для отображения неустановленного содержимого таких файлов с помощью &lt;code&gt;git diff&lt;/code&gt; и их &lt;code&gt;git commit -a&lt;/code&gt; с помощью git commit -a .</target>
        </trans-unit>
        <trans-unit id="908f8c6524a9d1fb52d4fa427c4917cc570c6355" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object.</source>
          <target state="translated">Запишите,что пометка относится к данному объекту без предварительного создания нового объекта.</target>
        </trans-unit>
        <trans-unit id="59ee078874bbbc459021c0c530f38bc7aaf471b2" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object. Using --import-marks and referring to missing marks will cause fast-import to fail, so aliases can provide a way to set otherwise pruned commits to a valid value (e.g. the nearest non-pruned ancestor).</source>
          <target state="translated">Запишите,что пометка относится к данному объекту без предварительного создания нового объекта.Использование --import-mark и ссылка на пропущенные метки приведет к тому,что быстрый импорт будет неудачным,поэтому псевдонимы могут предоставить способ установить иначе обрезанные коммиты на действительное значение (например,ближайший не обрезанный предок).</target>
        </trans-unit>
        <trans-unit id="d6adcb873ab9c7cd434052b29bbda78059575713" translate="yes" xml:space="preserve">
          <source>Record the base tree information to identify the state the patch series applies to. See the BASE TREE INFORMATION section below for details. If &amp;lt;commit&amp;gt; is &quot;auto&quot;, a base commit is automatically chosen. The &lt;code&gt;--no-base&lt;/code&gt; option overrides a &lt;code&gt;format.useAutoBase&lt;/code&gt; configuration.</source>
          <target state="translated">Запишите информацию о базовом дереве, чтобы определить состояние, к которому применяется серия исправлений. Подробности см. В разделе ИНФОРМАЦИЯ О БАЗОВОМ ДЕРЕВЕ ниже. Если &amp;lt;commit&amp;gt; - &amp;laquo;auto&amp;raquo;, автоматически выбирается базовая фиксация. Параметр &lt;code&gt;--no-base&lt;/code&gt; переопределяет конфигурацию &lt;code&gt;format.useAutoBase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1df60f45066883b70333fa04c8ca0ea0ac9a963e" translate="yes" xml:space="preserve">
          <source>Record the pristine state as the first commit in the history.</source>
          <target state="translated">Зафиксируйте первозданное состояние,как первое в истории.</target>
        </trans-unit>
        <trans-unit id="2779532bfc36fb35edea59aae8e6a7c58766f0fd" translate="yes" xml:space="preserve">
          <source>Records all changes made to the branch tip named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Записывает все изменения, внесенные в конец ветки с именем &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e26cb9a4392a1984a3c8c89ac8ba4d1939bfa972" translate="yes" xml:space="preserve">
          <source>Records all changes made to the tag named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Записывает все изменения, внесенные в тег с именем &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4426300ccfff51ab94cf09d14eb70cb666bb2d4" translate="yes" xml:space="preserve">
          <source>Records of changes made to refs are stored in this directory. See &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; for more information. This directory is ignored (except logs/HEAD) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/logs&quot; will be used instead.</source>
          <target state="translated">В этом каталоге хранятся записи об изменениях, внесенных в ссылки. См. &lt;a href=&quot;git-update-ref&quot;&gt;Git-update-ref [1]&lt;/a&gt; для получения дополнительной информации. Этот каталог игнорируется (кроме logs / HEAD), если установлен $ GIT_COMMON_DIR и вместо него будет использоваться &quot;$ GIT_COMMON_DIR / logs&quot;.</target>
        </trans-unit>
        <trans-unit id="4dfb1dccefe8c5960e96ace8700ff3694a2adfa8" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you have not resolved are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 15 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">Записи о конфликтующих слияниях, которые вы не разрешили, хранятся в течение этого количества дней при запуске &lt;code&gt;git rerere gc&lt;/code&gt; . Вы также можете использовать более удобочитаемый &quot;1.month.ago&quot; и т. Д. По умолчанию 15 дней. См. &lt;a href=&quot;git-rerere&quot;&gt;Git-rerere [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0041a23358783dc658fb86af817bd1e3c4818754" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you resolved earlier are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 60 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">Записи о конфликтующем слиянии, которое вы разрешили ранее, хранятся в течение этого количества дней, когда запускается &lt;code&gt;git rerere gc&lt;/code&gt; . Вы также можете использовать более удобочитаемый &quot;1.month.ago&quot; и т. Д. По умолчанию 60 дней. См. &lt;a href=&quot;git-rerere&quot;&gt;Git-rerere [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f27ef1289a3377cd529d96e1d59f394c9d2e51b" translate="yes" xml:space="preserve">
          <source>Recovering from repository corruption</source>
          <target state="translated">Восстановление после повреждения репозитория</target>
        </trans-unit>
        <trans-unit id="45b084fa0ec2bcf4d8887dcc1ed74808ce39dd65" translate="yes" xml:space="preserve">
          <source>Recovering from upstream rebase</source>
          <target state="translated">Восстановление после восстановления восходящего потока</target>
        </trans-unit>
        <trans-unit id="a2b2e17c2700a078248ea4a8793fdeb963f1e774" translate="yes" xml:space="preserve">
          <source>Recovering lost changes</source>
          <target state="translated">Восстановление утраченных изменений</target>
        </trans-unit>
        <trans-unit id="c9f9ed2d4080ff53397fc95e602ba0c0a8018150" translate="yes" xml:space="preserve">
          <source>Recovering stash entries that were cleared/dropped erroneously</source>
          <target state="translated">Восстановление тайников,которые были очищены/удалены ошибочно.</target>
        </trans-unit>
        <trans-unit id="07417b29bf5742eeb9def793a7c341803a4ae6cf" translate="yes" xml:space="preserve">
          <source>Recurse into sub-trees.</source>
          <target state="translated">В поддеревья.</target>
        </trans-unit>
        <trans-unit id="a6bbb82b51ea9a73ca0b0838d88a88a52f49ad15" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each active submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71ca4a78b12182052bd243bd7fb2b5a8710c342" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="translated">Рекурсивный вызов ls-файлов на каждом подмодуле в репозитории.На данный момент существует поддержка только режима --cached.</target>
        </trans-unit>
        <trans-unit id="9594ad54e61dba1e097011c1262a0e12523ac73c" translate="yes" xml:space="preserve">
          <source>Recursively copies an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be completely replaced by the content copied from the source.</source>
          <target state="translated">Рекурсивно копирует существующий файл или подкаталог в другое место в ветке.Существующий файл или подкаталог должен существовать.Если место назначения существует,то оно будет полностью заменено содержимым,скопированным из источника.</target>
        </trans-unit>
        <trans-unit id="784c487e0b0ebf6146a806df2269e12c1733d014" translate="yes" xml:space="preserve">
          <source>Recursively finds and lists the svn:ignore property on directories. The output is suitable for appending to the $GIT_DIR/info/exclude file.</source>
          <target state="translated">Рекурсивно находит и перечисляет свойство svn:ignore в каталогах.Вывод подходит для добавления в файл $GIT_DIR/info/exclude.</target>
        </trans-unit>
        <trans-unit id="8a1182cccab09515529f5c8d920459a7ff2c3ff2" translate="yes" xml:space="preserve">
          <source>Recursively finds the svn:ignore property on directories and creates matching .gitignore files. The resulting files are staged to be committed, but are not committed. Use -r/--revision to refer to a specific revision.</source>
          <target state="translated">Рекурсивно находит свойство svn:ignore в каталогах и создает соответствующие файлы .gitignore.Полученные файлы инсценируются для фиксации,но не фиксируются.Используйте -r/--re-revision для ссылки на конкретную ревизию.</target>
        </trans-unit>
        <trans-unit id="8cf2dd32a75d92cd5c31b8e357091014ef76d06b" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that has been initialized and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object.</source>
          <target state="translated">Рекурсивный поиск в каждом подмодуле, который был инициализирован и зарегистрирован в репозитории. При использовании в сочетании с опцией &amp;lt;дерево&amp;gt; префиксом всех выходных данных подмодуля будет имя объекта &amp;lt;дерево&amp;gt; родительского проекта.</target>
        </trans-unit>
        <trans-unit id="c91703d456763a97cd487b639be20f9ff2ca1d31" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that is active and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object. This option has no effect if &lt;code&gt;--no-index&lt;/code&gt; is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70c81b356beafd0eeca89b16d9fdcb5f7371848" translate="yes" xml:space="preserve">
          <source>Redirection to a file (&lt;code&gt;/path/name&lt;/code&gt;) or pipe (&lt;code&gt;|command&lt;/code&gt;) is not supported.</source>
          <target state="translated">Перенаправление к файлу ( &lt;code&gt;/path/name&lt;/code&gt; ) или каналу ( &lt;code&gt;|command&lt;/code&gt; ) не поддерживается.</target>
        </trans-unit>
        <trans-unit id="89381280eddd66ed8601a4438d83804ded19d6ef" translate="yes" xml:space="preserve">
          <source>Reencoding content requires resources that might slow down certain Git operations (e.g &lt;code&gt;git checkout&lt;/code&gt; or &lt;code&gt;git add&lt;/code&gt;).</source>
          <target state="translated">Для повторного кодирования контента требуются ресурсы, которые могут замедлить определенные операции Git (например, &lt;code&gt;git checkout&lt;/code&gt; или &lt;code&gt;git add&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4d5f4726578da60b5802012abfa0452d24f12476" translate="yes" xml:space="preserve">
          <source>Reencoding content to non-UTF encodings can cause errors as the conversion might not be UTF-8 round trip safe. If you suspect your encoding to not be round trip safe, then add it to &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; to make Git check the round trip encoding (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). SHIFT-JIS (Japanese character set) is known to have round trip issues with UTF-8 and is checked by default.</source>
          <target state="translated">Повторное кодирование содержимого в кодировки, отличные от UTF, может вызвать ошибки, поскольку преобразование может быть небезопасным для UTF-8. Если вы подозреваете, что ваша кодировка небезопасна, добавьте ее в &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; , чтобы Git проверил кодировку туда и обратно (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). SHIFT-JIS (набор японских символов), как известно, имеет проблемы с двусторонним обращением с UTF-8 и по умолчанию отмечен.</target>
        </trans-unit>
        <trans-unit id="f60624f9fc2a82abf8497341d9d81b9d0824e3d8" translate="yes" xml:space="preserve">
          <source>Ref list attributes</source>
          <target state="translated">Атрибуты списка ссылок</target>
        </trans-unit>
        <trans-unit id="b5e499a4b81055b1593e4e8b58d802dd0804b18d" translate="yes" xml:space="preserve">
          <source>Ref list keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042501eba486c2a8fe3dfeebed7e6a526acc65b2" translate="yes" xml:space="preserve">
          <source>Refer to trace2.h for details about all trace2 functions.</source>
          <target state="translated">Обратитесь к trace2.h для получения подробной информации обо всех функциях trace2.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="8189e74b00341c8128de1c9b04b6630dfed40f88" translate="yes" xml:space="preserve">
          <source>Reference advertisement will be omitted unless explicitly requested</source>
          <target state="translated">Ссылочное объявление будет опущено,если только оно не будет запрошено в явном виде.</target>
        </trans-unit>
        <trans-unit id="219616f872f3c1f3f7c63db96c4bad5707f937ab" translate="yes" xml:space="preserve">
          <source>Reference logs, or &quot;reflogs&quot;, record when the tips of branches and other references were updated in the local repository. Reflogs are useful in various Git commands, to specify the old value of a reference. For example, &lt;code&gt;HEAD@{2}&lt;/code&gt; means &quot;where HEAD used to be two moves ago&quot;, &lt;code&gt;master@{one.week.ago}&lt;/code&gt; means &quot;where master used to point to one week ago in this local repository&quot;, and so on. See &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for more details.</source>
          <target state="translated">Журналы ссылок, или &amp;laquo;журналы рефлогов&amp;raquo;, записывают, когда кончики веток и другие ссылки были обновлены в локальном репозитории. Рефлоги полезны в различных командах Git, чтобы указать старое значение ссылки. Например, &lt;code&gt;HEAD@{2}&lt;/code&gt; означает &amp;laquo;где HEAD раньше был два &lt;code&gt;master@{one.week.ago}&lt;/code&gt; назад&amp;raquo;, master@{one.week.ago} означает &amp;laquo;где мастер указывал на неделю назад в этом локальном репозитории&amp;raquo; и т. Д. См. &lt;a href=&quot;gitrevisions&quot;&gt;Gitrevisions [7]&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="fdc0add895cb5f66656ac926ee760b1a52ebfc92" translate="yes" xml:space="preserve">
          <source>References are stored in subdirectories of this directory. The &lt;code&gt;git prune&lt;/code&gt; command knows to preserve objects reachable from refs found in this directory and its subdirectories. This directory is ignored (except refs/bisect, refs/rewritten and refs/worktree) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/refs&quot; will be used instead.</source>
          <target state="translated">Ссылки хранятся в подкаталогах этого каталога. Команда &lt;code&gt;git prune&lt;/code&gt; знает, как сохранять объекты, доступные из ссылок, найденных в этом каталоге и его подкаталогах. Этот каталог игнорируется (кроме refs / bisect, refs / rewritten и refs / worktree), если установлен $ GIT_COMMON_DIR, и вместо него будет использоваться &quot;$ GIT_COMMON_DIR / refs&quot;.</target>
        </trans-unit>
        <trans-unit id="a774e5bc9f4a8942d74474f466fea367c3f9fc07" translate="yes" xml:space="preserve">
          <source>References to commit objects at the head of each branch are stored in files under .git/refs/heads/.</source>
          <target state="translated">Ссылки на объекты фиксации в заголовке каждой ветви хранятся в файлах под .git/refs/heads/.</target>
        </trans-unit>
        <trans-unit id="e8597d82d33701c292294d665408182c1ffb7098" translate="yes" xml:space="preserve">
          <source>Reflog: The two backends will use different wording when describing the changes made in the reflog, though both will make use of the word &quot;rebase&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586454a22a42afbc6e2564872cf76fa552b4a1a3" translate="yes" xml:space="preserve">
          <source>Reflogs</source>
          <target state="translated">Reflogs</target>
        </trans-unit>
        <trans-unit id="701486a68f3896a8a5368aead277807a6847151f" translate="yes" xml:space="preserve">
          <source>Refs</source>
          <target state="translated">Refs</target>
        </trans-unit>
        <trans-unit id="80074f188ddb96f7955691b6a7210a31a672772d" translate="yes" xml:space="preserve">
          <source>Refs are grouped into islands based on their &quot;names&quot;, and two regexes that produce the same name are considered to be in the same island. The names are computed from the regexes by concatenating any capture groups from the regex, with a &lt;code&gt;-&lt;/code&gt; dash in between. (And if there are no capture groups, then the name is the empty string, as in the above example.) This allows you to create arbitrary numbers of islands. Only up to 14 such capture groups are supported though.</source>
          <target state="translated">Ссылки сгруппированы в острова на основе их &amp;laquo;имен&amp;raquo;, и два регулярных выражения с одинаковым именем считаются находящимися на одном острове. Имена вычисляются из регулярных выражений путем конкатенации любых групп захвата из регулярных выражений, с &lt;code&gt;-&lt;/code&gt; тиром между ними. (И если нет групп захвата, тогда имя - пустая строка, как в приведенном выше примере.) Это позволяет вам создавать произвольное количество островов. Однако поддерживаются только до 14 таких групп захвата.</target>
        </trans-unit>
        <trans-unit id="f06a362739f816b768319f27e61eb1dd6b36faf2" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, &lt;code&gt;main-worktree&lt;/code&gt; and &lt;code&gt;worktrees&lt;/code&gt;. The former gives access to per-working tree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb2083cc2f447acfd0f5d16022129235ca5b2cc" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, main-worktree and worktrees. The former gives access to per-worktree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="translated">Ссылки на каждое рабочее дерево все еще могут быть доступны с другого рабочего дерева по двум специальным путям,главному и рабочему дереву.Первый предоставляет доступ к ссылкам на каждое рабочее дерево главного дерева,а второй-ко всем связанным рабочим деревьям.</target>
        </trans-unit>
        <trans-unit id="05e5994fa9181b6fad85ee509538c0ad6a6bc5c4" translate="yes" xml:space="preserve">
          <source>Refs that are per-&lt;a href=&quot;#def_working_tree&quot;&gt;worktree&lt;/a&gt;, rather than global. This is presently only &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; and any refs that start with &lt;code&gt;refs/bisect/&lt;/code&gt;, but might later include other unusual refs.</source>
          <target state="translated">&lt;a href=&quot;#def_working_tree&quot;&gt;Ссылки&lt;/a&gt; , которые являются деревом выполнения , а не глобальными. В настоящее время это только &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; и любые ссылки, которые начинаются с &lt;code&gt;refs/bisect/&lt;/code&gt; , но позже могут включать другие необычные ссылки.</target>
        </trans-unit>
        <trans-unit id="338d2a0e12d851337309cef01e7fe887153b0f55" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt; 'file' does not match the object name for 'file'.</source>
          <target state="translated">Независимо от типа объекта, все объекты имеют следующие характеристики: все они дефлированы с помощью zlib и имеют заголовок, который не только указывает их тип, но также предоставляет информацию о размере данных в объекте. Стоит отметить, что хэш SHA-1, который используется для имени объекта, является хешем исходных данных плюс этот заголовок, поэтому &lt;code&gt;sha1sum&lt;/code&gt; 'file' не соответствует имени объекта для 'file'.</target>
        </trans-unit>
        <trans-unit id="8f29e38b3ae41c972d05bd6fbd77326fc2768fcf" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt;&lt;code&gt;file&lt;/code&gt; does not match the object name for &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710a95e624a3349545888a56ed2557d883a0ebee" translate="yes" xml:space="preserve">
          <source>Region and Data Messages</source>
          <target state="translated">Регион и сообщения данных</target>
        </trans-unit>
        <trans-unit id="039711232507cd9753ddba093da2350b27e67dca" translate="yes" xml:space="preserve">
          <source>Regions</source>
          <target state="translated">Regions</target>
        </trans-unit>
        <trans-unit id="f60734f6521040c876486255fe253adea3ef4364" translate="yes" xml:space="preserve">
          <source>Regions can be use to time an interesting section of code.</source>
          <target state="translated">Регионы могут быть использованы для времени интересный участок кода.</target>
        </trans-unit>
        <trans-unit id="e6931aebd376c6a517eae391382acbc891d72f65" translate="yes" xml:space="preserve">
          <source>Regions may be nested. This causes messages to be indented in the PERF target, for example. Elapsed times are relative to the start of the corresponding nesting level as expected. For example, if we add region message to:</source>
          <target state="translated">Регионы могут быть вложены.Это приводит к тому,что сообщения,например,будут вставлены в отступ от цели PERF.Прошедшее время соответствует началу соответствующего уровня вложенности,как и ожидалось.Например,если мы добавим сообщение региона:</target>
        </trans-unit>
        <trans-unit id="1595f1bb6d790a7a3e5eb6fb03765aabf279806d" translate="yes" xml:space="preserve">
          <source>Register file contents in the working tree to the index</source>
          <target state="translated">Содержимое файла в рабочем дереве зарегистрировать в индексе</target>
        </trans-unit>
        <trans-unit id="8a6eb409adc691aa11f00dc05c7a129c2f833328" translate="yes" xml:space="preserve">
          <source>Regressions are a big problem in the software industry. But it&amp;rsquo;s difficult to put some real numbers behind that claim.</source>
          <target state="translated">Регрессия - большая проблема в индустрии программного обеспечения. Но это утверждение сложно назвать реальными цифрами.</target>
        </trans-unit>
        <trans-unit id="4ab9d6c175961a8739069a73845c7f8b21150d86" translate="yes" xml:space="preserve">
          <source>Regressions: a big problem</source>
          <target state="translated">Регрессии:большая проблема</target>
        </trans-unit>
        <trans-unit id="2256cc6ee2a5d077491a8a63ef76ac743c25d2d2" translate="yes" xml:space="preserve">
          <source>Related links</source>
          <target state="translated">Связанные ссылки</target>
        </trans-unit>
        <trans-unit id="b61e20d1d031c57060b03654349b1ab448029094" translate="yes" xml:space="preserve">
          <source>Relationship to the Existing Trace Api (api-trace.txt)</source>
          <target state="translated">Связь с существующим следом Api (api-trace.txt)</target>
        </trans-unit>
        <trans-unit id="a5807b40eca9f80054603fbc4a7d22e009d2c415" translate="yes" xml:space="preserve">
          <source>Relative and non-relative marks may be combined by interweaving --(no-)-relative-marks with the --(import|export)-marks= options.</source>
          <target state="translated">Относительные и нереляционные знаки можно комбинировать путем переплетения --(no-)-относительных знаков с опциями --(import|export)-mark=.</target>
        </trans-unit>
        <trans-unit id="31bc43768c6a353840de5e162fcf9b5cce4d9437" translate="yes" xml:space="preserve">
          <source>Relative to the tip of &lt;code&gt;topic&lt;/code&gt;: knowing that your &lt;code&gt;topic&lt;/code&gt; has three commits, the old tip of &lt;code&gt;subsystem&lt;/code&gt; must be &lt;code&gt;topic~3&lt;/code&gt;.</source>
          <target state="translated">Относительно верхушки &lt;code&gt;topic&lt;/code&gt; : зная, что в вашей &lt;code&gt;topic&lt;/code&gt; есть три коммита, старая верхушка &lt;code&gt;subsystem&lt;/code&gt; должна быть &lt;code&gt;topic~3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98786341673b229d09cd6bac6df5f38262cac094" translate="yes" xml:space="preserve">
          <source>Remain silent even on nonexistent files</source>
          <target state="translated">Сохранять молчание даже на несуществующих файлах</target>
        </trans-unit>
        <trans-unit id="cad2c2939c304ff819eff58f792783f6747c93cf" translate="yes" xml:space="preserve">
          <source>Remap all the path requests as relative to the given path. This is sort of &quot;Git root&quot; - if you run &lt;code&gt;git daemon&lt;/code&gt; with &lt;code&gt;--base-path=/srv/git&lt;/code&gt; on example.com, then if you later try to pull &lt;code&gt;git://example.com/hello.git&lt;/code&gt;, &lt;code&gt;git daemon&lt;/code&gt; will interpret the path as &lt;code&gt;/srv/git/hello.git&lt;/code&gt;.</source>
          <target state="translated">Переназначить все запросы пути относительно данного пути. Это своего рода &amp;laquo;корень Git&amp;raquo; - если вы запустите &lt;code&gt;git daemon&lt;/code&gt; с &lt;code&gt;--base-path=/srv/git&lt;/code&gt; на example.com, то, если позже вы попытаетесь вытащить &lt;code&gt;git://example.com/hello.git&lt;/code&gt; , &lt;code&gt;git daemon&lt;/code&gt; интерпретирует путь как &lt;code&gt;/srv/git/hello.git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a5c393fce9fb8dc0d691f13288d22c0e7f1b235" translate="yes" xml:space="preserve">
          <source>Remap to ancestor</source>
          <target state="translated">Возвращайся к предку</target>
        </trans-unit>
        <trans-unit id="8d0121936c456fcf3d222b828ee9077e2cc34843" translate="yes" xml:space="preserve">
          <source>Remember how we did the &lt;code&gt;git update-index&lt;/code&gt; on file &lt;code&gt;hello&lt;/code&gt; and then we changed &lt;code&gt;hello&lt;/code&gt; afterward, and could compare the new state of &lt;code&gt;hello&lt;/code&gt; with the state we saved in the index file?</source>
          <target state="translated">Помните, как мы сделали &lt;code&gt;git update-index&lt;/code&gt; для файла &lt;code&gt;hello&lt;/code&gt; , а затем изменили &lt;code&gt;hello&lt;/code&gt; после этого и могли сравнить новое состояние &lt;code&gt;hello&lt;/code&gt; с состоянием, которое мы сохранили в индексном файле?</target>
        </trans-unit>
        <trans-unit id="2cc52de1f31f7df8236151d526db4f676cdfb905" translate="yes" xml:space="preserve">
          <source>Remember, before running &lt;code&gt;git merge&lt;/code&gt;, our &lt;code&gt;master&lt;/code&gt; head was at &quot;Some fun.&quot; commit, while our &lt;code&gt;mybranch&lt;/code&gt; head was at &quot;Some work.&quot; commit.</source>
          <target state="translated">Помните, что перед запуском &lt;code&gt;git merge&lt;/code&gt; наша &lt;code&gt;master&lt;/code&gt; голова была на &amp;laquo;Немного веселья&amp;raquo;. commit, в то время как наша голова &lt;code&gt;mybranch&lt;/code&gt; была на &amp;laquo;Некоторая работа&amp;raquo;. совершить.</target>
        </trans-unit>
        <trans-unit id="3e534e3639a4dd02297fd7fd07ede8a71c71535e" translate="yes" xml:space="preserve">
          <source>Remote HEAD must resolve to an object that exists locally</source>
          <target state="translated">Удаленная HEAD должна преобразовываться в объект,который существует локально.</target>
        </trans-unit>
        <trans-unit id="2033891925fe29daa47f6c451af0f18a87529563" translate="yes" xml:space="preserve">
          <source>Remote helper programs are invoked with one or (optionally) two arguments. The first argument specifies a remote repository as in Git; it is either the name of a configured remote or a URL. The second argument specifies a URL; it is usually of the form &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt;, but any arbitrary string is possible. The &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable is set up for the remote helper and can be used to determine where to store additional data or from which directory to invoke auxiliary Git commands.</source>
          <target state="translated">Удаленные вспомогательные программы вызываются с одним или (необязательно) двумя аргументами. Первый аргумент указывает удаленный репозиторий, как в Git; это либо имя настроенного пульта дистанционного управления, либо URL-адрес. Второй аргумент указывает URL-адрес; Обычно он имеет вид &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt; , но возможна любая произвольная строка. &lt;code&gt;GIT_DIR&lt;/code&gt; переменная среды создана для удаленного помощника и может быть использован , чтобы определить , где хранить дополнительные данные или из которого каталога для вызова вспомогательных команд Git.</target>
        </trans-unit>
        <trans-unit id="8ee4f73d380c3c99d59209a069206bbd667c2977" translate="yes" xml:space="preserve">
          <source>Remote helper programs are normally not used directly by end users, but they are invoked by Git when it needs to interact with remote repositories Git does not support natively. A given helper will implement a subset of the capabilities documented here. When Git needs to interact with a repository using a remote helper, it spawns the helper as an independent process, sends commands to the helper&amp;rsquo;s standard input, and expects results from the helper&amp;rsquo;s standard output. Because a remote helper runs as an independent process from Git, there is no need to re-link Git to add a new helper, nor any need to link the helper with the implementation of Git.</source>
          <target state="translated">Удаленные вспомогательные программы обычно не используются конечными пользователями напрямую, но они вызываются Git, когда ему нужно взаимодействовать с удаленными репозиториями, которые Git изначально не поддерживает. Данный помощник будет реализовывать подмножество описанных здесь возможностей. Когда Git необходимо взаимодействовать с репозиторием с помощью удаленного помощника, он порождает помощника как независимый процесс, отправляет команды на стандартный ввод помощника и ожидает результатов из стандартного вывода помощника. Поскольку удаленный помощник работает как независимый от Git процесс, нет необходимости повторно связывать Git для добавления нового помощника или связывать помощник с реализацией Git.</target>
        </trans-unit>
        <trans-unit id="7f9d958435b39dd5e8519bc9a5ca0b414455c52e" translate="yes" xml:space="preserve">
          <source>Remotes</source>
          <target state="translated">Remotes</target>
        </trans-unit>
        <trans-unit id="1d36d5e98f5289fdb40f6238091d921b16cd3d1b" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;n&amp;gt; leading path components (separated by slashes) from traditional diff paths. E.g., with &lt;code&gt;-p2&lt;/code&gt;, a patch against &lt;code&gt;a/dir/file&lt;/code&gt; will be applied directly to &lt;code&gt;file&lt;/code&gt;. The default is 1.</source>
          <target state="translated">Удалите компоненты ведущего пути &amp;lt;n&amp;gt; (разделенные косой чертой) из традиционных путей различий. Например, с &lt;code&gt;-p2&lt;/code&gt; патч &lt;code&gt;a/dir/file&lt;/code&gt; будет применен непосредственно к &lt;code&gt;file&lt;/code&gt; . По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="536f22b2b28f4e056331357f5ffb90610418f296" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;ref&amp;gt; from remote repository. The specified branch cannot be the remote HEAD. If -d is specified the following other conditions must also be met:</source>
          <target state="translated">Удалите &amp;lt;ref&amp;gt; из удаленного репозитория. Указанная ветвь не может быть удаленной HEAD. Если указан параметр -d, должны быть выполнены и другие условия:</target>
        </trans-unit>
        <trans-unit id="1d92b551b14c7ff24c92341cea4922fcb2c6e7df" translate="yes" xml:space="preserve">
          <source>Remove a matching credential, if any, from the helper&amp;rsquo;s storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cc16ae24cf52b436071d42d9516387a59ce74f" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a577cbb08edd5d9773523cfc5cfe43dc9b03f45" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it removes the latest one. i.e. &lt;code&gt;stash@{0}&lt;/code&gt;, otherwise &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; must be a valid stash log reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">Удалите одну запись тайника из списка записей тайника. Если &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; не указан, удаляется последний. т.е. &lt;code&gt;stash@{0}&lt;/code&gt; , в противном случае &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; должен быть действительной ссылкой на журнал хранения в форме &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="729e5fd8775c30c358fedf9e611fd4f6f670b5e7" translate="yes" xml:space="preserve">
          <source>Remove a single stashed state from the stash list and apply it on top of the current working tree state, i.e., do the inverse operation of &lt;code&gt;git stash push&lt;/code&gt;. The working directory must match the index.</source>
          <target state="translated">Удалите одно сохраненное состояние из списка тайников и примените его поверх текущего рабочего состояния дерева, то есть выполните операцию, обратную &lt;code&gt;git stash push&lt;/code&gt; . Рабочий каталог должен соответствовать индексу.</target>
        </trans-unit>
        <trans-unit id="d34ae9e19d54c7604c479f4c5964ccef00bd4a98" translate="yes" xml:space="preserve">
          <source>Remove a working tree. Only clean working trees (no untracked files and no modification in tracked files) can be removed. Unclean working trees or ones with submodules can be removed with &lt;code&gt;--force&lt;/code&gt;. The main working tree cannot be removed.</source>
          <target state="translated">Снимаем рабочее дерево. Можно удалить только чистые рабочие деревья (без неотслеживаемых файлов и без изменений в отслеживаемых файлах). Нечистые рабочие деревья или деревья с подмодулями можно удалить с помощью &lt;code&gt;--force&lt;/code&gt; . Основное рабочее дерево удалить нельзя.</target>
        </trans-unit>
        <trans-unit id="df5a8d70d2380181bdc059d7c2ddc0a78e9d1412" translate="yes" xml:space="preserve">
          <source>Remove all lines matching the key from config file.</source>
          <target state="translated">Удалите все строки,соответствующие ключу,из конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="9fc0230ddf082dc45699878be1634350de11665f" translate="yes" xml:space="preserve">
          <source>Remove all notes for non-existing/unreachable objects.</source>
          <target state="translated">Удалите все примечания для несуществующих/недоступных объектов.</target>
        </trans-unit>
        <trans-unit id="fc1b4600e49f3115828b9f3463a6567fd85094fb" translate="yes" xml:space="preserve">
          <source>Remove all the stash entries. Note that those entries will then be subject to pruning, and may be impossible to recover (see &lt;code&gt;Examples&lt;/code&gt; below for a possible strategy).</source>
          <target state="translated">Удалите все записи тайника. Обратите внимание, что эти записи затем будут удалены, и их невозможно будет восстановить (см. &lt;code&gt;Examples&lt;/code&gt; ниже, где представлена ​​возможная стратегия).</target>
        </trans-unit>
        <trans-unit id="353e52e76ff6a9350e8485da73b547859aa497ce" translate="yes" xml:space="preserve">
          <source>Remove any whitespace-continuation in trailers, so that each trailer appears on a line by itself with its full content.</source>
          <target state="translated">Удалите любые пробелы в прицепах,так чтобы каждый прицеп появлялся на линии сам по себе с полным содержанием.</target>
        </trans-unit>
        <trans-unit id="de112945ec414c57cddaca5199f29ee2fc05a979" translate="yes" xml:space="preserve">
          <source>Remove directories from the SVN tree if there are no files left behind. SVN can version empty directories, and they are not removed by default if there are no files left in them. Git cannot version empty directories. Enabling this flag will make the commit to SVN act like Git.</source>
          <target state="translated">Удалите каталоги из SVN-дерева,если не осталось файлов.SVN может версовать пустые каталоги,и они не удаляются по умолчанию,если в них не осталось файлов.Git не может версировать пустые каталоги.Включение этого флага заставит коммит в SVN действовать как Git.</target>
        </trans-unit>
        <trans-unit id="cc02753459be831dfea1cd243efcfb50db2a59d3" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (e.g. &quot;-- &amp;gt;8 --&quot;). The line represents scissors and perforation marks, and is used to request the reader to cut the message at that line. If that line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6c07487aafd5a1b8bbc132d0eb9f70eb39a580" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). Can be activated by default using the &lt;code&gt;mailinfo.scissors&lt;/code&gt; configuration variable.</source>
          <target state="translated">Удалите все в теле до линии ножниц (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ). Может быть активирован по умолчанию с помощью переменной конфигурации &lt;code&gt;mailinfo.scissors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="399fc61abd5e53e0ff9fe12417324d78f931368d" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line. A line that mainly consists of scissors (either &quot;&amp;gt;8&quot; or &quot;8&amp;lt;&quot;) and perforation (dash &quot;-&quot;) marks is called a scissors line, and is used to request the reader to cut the message at that line. If such a line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="translated">Удалите все с тела до линии ножниц. Линия, которая в основном состоит из ножниц (&amp;laquo;&amp;gt; 8&amp;raquo; или &amp;laquo;8 &amp;lt;&amp;raquo;) и отметок перфорации (тире &amp;laquo;-&amp;raquo;), называется линией ножниц и используется для того, чтобы читатель мог вырезать сообщение на этой строке. Если такая линия появляется в теле сообщения перед патчем, все, что перед ней (включая саму линию ножниц), игнорируется при использовании этой опции.</target>
        </trans-unit>
        <trans-unit id="3b6a842b7003d3eacad12733ce8974d4d54219eb" translate="yes" xml:space="preserve">
          <source>Remove extra objects that are already in pack files</source>
          <target state="translated">Удаление дополнительных объектов,которые уже находятся в пакетных файлах</target>
        </trans-unit>
        <trans-unit id="17839ee8fd6b46f8390b41c3ab4800fda5ea86c3" translate="yes" xml:space="preserve">
          <source>Remove files from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="translated">Удалите файлы из индекса или из рабочего дерева и индекса. &lt;code&gt;git rm&lt;/code&gt; не удалит файл только из вашего рабочего каталога. (Невозможно удалить файл только из рабочего дерева и при этом сохранить его в индексе; используйте &lt;code&gt;/bin/rm&lt;/code&gt; , если вы хотите это сделать.) Удаляемые файлы должны быть идентичны кончику ветки, и никакие обновления их содержимого не могут быть помещены в индекс, хотя это поведение по умолчанию можно переопределить с помощью опции &lt;code&gt;-f&lt;/code&gt; . Когда &lt;code&gt;--cached&lt;/code&gt; , поэтапное содержимое должно соответствовать либо кончику ветви, либо файлу на диске, что позволяет удалить файл только из индекса.</target>
        </trans-unit>
        <trans-unit id="3cb238ca5adf89378484ddf4d733eeac1d7298bc" translate="yes" xml:space="preserve">
          <source>Remove files from the working tree and from the index</source>
          <target state="translated">Удаление файлов из рабочего дерева и из индекса</target>
        </trans-unit>
        <trans-unit id="43b38708b726858c7f29029b5ed632fd4a969782" translate="yes" xml:space="preserve">
          <source>Remove files matching pathspec from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">Удаляйте только файлы,проигнорированные Git'ом.Это может быть полезно для восстановления всего с нуля,но сохраняйте файлы,созданные вручную.</target>
        </trans-unit>
        <trans-unit id="db3de663ed677f594653d0d9e2ee65cde68df92e" translate="yes" xml:space="preserve">
          <source>Remove remote branches that don&amp;rsquo;t have a local counterpart. For example a remote branch &lt;code&gt;tmp&lt;/code&gt; will be removed if a local branch with the same name doesn&amp;rsquo;t exist any more. This also respects refspecs, e.g. &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; would make sure that remote &lt;code&gt;refs/tmp/foo&lt;/code&gt; will be removed if &lt;code&gt;refs/heads/foo&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="translated">Удалите удаленные ветки, у которых нет локального аналога. Например, удаленная ветка &lt;code&gt;tmp&lt;/code&gt; будет удалена, если локальная ветка с таким же именем больше не существует. Это также относится к refspecs, например, &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; будет гарантировать, что удаленные &lt;code&gt;refs/tmp/foo&lt;/code&gt; будут удалены, если &lt;code&gt;refs/heads/foo&lt;/code&gt; не существует.</target>
        </trans-unit>
        <trans-unit id="2919c677f0cd57d3ef223926e7768e681a692562" translate="yes" xml:space="preserve">
          <source>Remove the file from the index even when the working directory still has such a file. (Implies --remove.)</source>
          <target state="translated">Удалить файл из индекса даже в том случае,если в рабочей директории еще есть такой файл.(Подразумевает --remove.)</target>
        </trans-unit>
        <trans-unit id="164a03cc0aa02b0fdd552e7429c1ea851b7d7d46" translate="yes" xml:space="preserve">
          <source>Remove the given section from the configuration file.</source>
          <target state="translated">Удалите данный раздел из конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="499242d7995d63aad1acd16a991a3d6fcb048be8" translate="yes" xml:space="preserve">
          <source>Remove the line matching the key from config file.</source>
          <target state="translated">Удалите строку,соответствующую ключу из конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="9012d0fb42a36221745fbb3295fa2024a72211df" translate="yes" xml:space="preserve">
          <source>Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the &lt;code&gt;edit&lt;/code&gt; subcommand.</source>
          <target state="translated">Удалить примечания для данных объектов (по умолчанию HEAD). При указании нуля или одного объекта из командной строки это эквивалентно указанию пустого сообщения примечания для подкоманды &lt;code&gt;edit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b516eb38e36b7b4419cbc8b6cb246b5741dd75c3" translate="yes" xml:space="preserve">
          <source>Remove the original refs backed up by git-filter-branch: say &lt;code&gt;git
for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git
update-ref -d&lt;/code&gt;.</source>
          <target state="translated">Удалите исходные ссылки, зарезервированные с помощью git-filter-branch: скажем, &lt;code&gt;git for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git update-ref -d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5271d5dabe5bf4126a68baa1d1f5cc6eedea4a6" translate="yes" xml:space="preserve">
          <source>Remove the remote named &amp;lt;name&amp;gt;. All remote-tracking branches and configuration settings for the remote are removed.</source>
          <target state="translated">Удалите пульт с именем &amp;lt;имя&amp;gt;. Все ветви удаленного отслеживания и параметры конфигурации для удаленного устройства удалены.</target>
        </trans-unit>
        <trans-unit id="55f1c43ced88c466a9b48b12744508e7df191628" translate="yes" xml:space="preserve">
          <source>Remove the upstream information for &amp;lt;branchname&amp;gt;. If no branch is specified it defaults to the current branch.</source>
          <target state="translated">Удалите исходную информацию для &amp;lt;branchname&amp;gt;. Если ветка не указана, по умолчанию используется текущая ветка.</target>
        </trans-unit>
        <trans-unit id="7dd660439147162be4964d5d4a2d3c419e5791f0" translate="yes" xml:space="preserve">
          <source>Remove unnecessary whitespace</source>
          <target state="translated">Удалить ненужные пробелы</target>
        </trans-unit>
        <trans-unit id="d76bb29e1084aa7b85896360764953783a4152de" translate="yes" xml:space="preserve">
          <source>Remove untracked files from the working tree</source>
          <target state="translated">Удалить неотслеживаемые файлы из рабочего дерева</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">Удаленное содержимое представлено строками,начинающимися с буквы &quot;-&quot;.Вы можете предотвратить инсценировку их удаления,преобразовав &quot;-&quot; в &quot; &quot; (пробел).</target>
        </trans-unit>
        <trans-unit id="078d2cf1e943764a2f97b429a98d1c54fe3fc4b4" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;*.txt&lt;/code&gt; files from the index that are under the &lt;code&gt;Documentation&lt;/code&gt; directory and any of its subdirectories.</source>
          <target state="translated">Удаляет все файлы &lt;code&gt;*.txt&lt;/code&gt; из индекса, которые находятся в каталоге &lt;code&gt;Documentation&lt;/code&gt; и любых его подкаталогах.</target>
        </trans-unit>
        <trans-unit id="b7b4dacce459fd9e247be7781aa6ab7a83d66ed0" translate="yes" xml:space="preserve">
          <source>Removing files that have disappeared from the filesystem</source>
          <target state="translated">Удаление файлов,которые исчезли из файловой системы.</target>
        </trans-unit>
        <trans-unit id="3225190bfc565c2a8dc8b2fcac1b38dcbf9dd0d7" translate="yes" xml:space="preserve">
          <source>Rename detection options for git-diff and git-diff-tree. The default is ('-M'); set it to ('-C') or ('-C', '-C') to also detect copies, or set it to () i.e. empty list if you don&amp;rsquo;t want to have renames detection.</source>
          <target state="translated">Переименуйте параметры обнаружения для git-diff и git-diff-tree. По умолчанию ('-M'); установите его в ('-C') или ('-C', '-C'), чтобы также обнаруживать копии, или установите его в (), т.е. пустой список, если вы не хотите, чтобы обнаружение переименований.</target>
        </trans-unit>
        <trans-unit id="8ccf039fc07f889e68756c36ea6201967b32f105" translate="yes" xml:space="preserve">
          <source>Rename the given section to a new name.</source>
          <target state="translated">Переименуйте данный раздел на новое имя.</target>
        </trans-unit>
        <trans-unit id="141bf3674e223333500e19c5eb60f38f2c848a7a" translate="yes" xml:space="preserve">
          <source>Rename the remote named &amp;lt;old&amp;gt; to &amp;lt;new&amp;gt;. All remote-tracking branches and configuration settings for the remote are updated.</source>
          <target state="translated">Переименуйте пульт с именем &amp;lt;старый&amp;gt; в &amp;lt;новый&amp;gt;. Все ветки удаленного отслеживания и параметры конфигурации для удаленного обновляются.</target>
        </trans-unit>
        <trans-unit id="3dc385accd1a9a34d691dc85a7cf993a198b2f01" translate="yes" xml:space="preserve">
          <source>Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN. I do not plan on adding support for this as it&amp;rsquo;s quite difficult and time-consuming to get working for all the possible corner cases (Git doesn&amp;rsquo;t do it, either). Committing renamed and copied files is fully supported if they&amp;rsquo;re similar enough for Git to detect them.</source>
          <target state="translated">Переименованные и скопированные каталоги не обнаруживаются Git и, следовательно, не отслеживаются при фиксации в SVN. Я не планирую добавлять поддержку для этого, так как это довольно сложно и требует много времени, чтобы работать во всех возможных угловых случаях (Git тоже этого не делает). Фиксация переименованных и скопированных файлов полностью поддерживается, если они достаточно похожи, чтобы Git мог их обнаружить.</target>
        </trans-unit>
        <trans-unit id="4a51a71032e050546d92c69d4de0167dd63ce59a" translate="yes" xml:space="preserve">
          <source>Renamed or copied entries have the following format:</source>
          <target state="translated">Переименованные или скопированные записи имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="226701a0627a0c80ce4e0de29a5f8995d1cc94ec" translate="yes" xml:space="preserve">
          <source>Renames an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be replaced by the source directory.</source>
          <target state="translated">Переименовывает существующий файл или подкаталог в другое место в ветке.Существующий файл или подкаталог должен существовать.Если место назначения существует,то оно будет заменено на исходный каталог.</target>
        </trans-unit>
        <trans-unit id="7f74fd002fd53242d75fe672215f240c564dd1ec" translate="yes" xml:space="preserve">
          <source>Reordering and editing commits usually creates untested intermediate steps. You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may do so by creating a todo list like this one:</source>
          <target state="translated">Переупорядочивание и редактирование коммитов обычно создает непроверенные промежуточные шаги.Вы можете проверить,что редактирование истории ничего не нарушило,запустив тест или,по крайней мере,перекомпилировавшись в промежуточных точках истории с помощью команды &quot;выполнить&quot; (ярлык &quot;x&quot;).Вы можете сделать это,создав список todo,подобный этому:</target>
        </trans-unit>
        <trans-unit id="e58cc3e9504477ac39c3fae4556406d9e87fe8d4" translate="yes" xml:space="preserve">
          <source>Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for &quot;-O&amp;lt;orderfile&amp;gt;&quot; result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;</source>
          <target state="translated">Изменение порядка файлов различий, составляющих патч, не влияет на идентификатор. В частности, два патча, полученные путем сравнения одних и тех же двух деревьев с двумя разными настройками для &amp;laquo;-O &amp;lt;orderfile&amp;gt;&amp;raquo;, приводят к одной и той же сигнатуре идентификатора патча, что позволяет использовать вычисленный результат в качестве ключа для индексации некоторой метаинформации о изменение между двумя деревьями;</target>
        </trans-unit>
        <trans-unit id="5727ab28a85a139867f62da8126eb9354b33a57a" translate="yes" xml:space="preserve">
          <source>Reordering or selecting from a patch series</source>
          <target state="translated">Переупорядочивание или выбор из серии патчей</target>
        </trans-unit>
        <trans-unit id="25df8871189ca5637ebc8cd7aea9cae824ef4545" translate="yes" xml:space="preserve">
          <source>Repacking Historical Data</source>
          <target state="translated">Переупаковка исторических данных</target>
        </trans-unit>
        <trans-unit id="456c003d09a0693bc8c7cb3458bf2ad8bbfc033f" translate="yes" xml:space="preserve">
          <source>Repair working tree administrative files, if possible, if they have become corrupted or outdated due to external factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9421c86863fd32deff3fd89fb282f96023d8e85d" translate="yes" xml:space="preserve">
          <source>Repeat the last two steps until your working tree is clean.</source>
          <target state="translated">Повторяйте последние два шага до тех пор,пока ваше рабочее дерево не станет чистым.</target>
        </trans-unit>
        <trans-unit id="834462c9f22bc02c77a9880295a7368517cb2349" translate="yes" xml:space="preserve">
          <source>Replace an existing tag with the given name (instead of failing)</source>
          <target state="translated">Заменить существующий тег на заданное имя (вместо неудачного).</target>
        </trans-unit>
        <trans-unit id="7cf4729941401b21c05e226cfd4468a69f10bdc9" translate="yes" xml:space="preserve">
          <source>Replace each parent &lt;code&gt;P&lt;/code&gt; of &lt;code&gt;C'&lt;/code&gt; with its simplification &lt;code&gt;P'&lt;/code&gt;. In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to.</source>
          <target state="translated">Заменим каждый родитель &lt;code&gt;P&lt;/code&gt; элемента &lt;code&gt;C'&lt;/code&gt; его упрощением &lt;code&gt;P'&lt;/code&gt; . В процессе отбрасывание родителей, которые являются предками других родителей или которые являются корневыми, фиксирует TREESAME в пустом дереве и удаляет дубликаты, но никогда не удаляйте всех родителей, которым мы являемся TREESAME.</target>
        </trans-unit>
        <trans-unit id="2f9605c49f9b2a3f616b81433e85ca64645d76b1" translate="yes" xml:space="preserve">
          <source>Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the &lt;code&gt;-i&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, etc. The new commit has the same parents and author as the current one (the &lt;code&gt;--reset-author&lt;/code&gt; option can countermand this).</source>
          <target state="translated">Замените верхушку текущей ветки, создав новую фиксацию. Записанное дерево подготавливается как обычно (включая эффект опций &lt;code&gt;-i&lt;/code&gt; и &lt;code&gt;-o&lt;/code&gt; и явного указания пути), а сообщение из исходной фиксации используется в качестве отправной точки вместо пустого сообщения, когда не указано другое сообщение из командной строки с помощью таких параметров, как &lt;code&gt;-m&lt;/code&gt; , &lt;code&gt;-F&lt;/code&gt; , &lt;code&gt;-c&lt;/code&gt; и т. д. Новый коммит имеет тех же родителей и автора, что и текущий (параметр &lt;code&gt;--reset-author&lt;/code&gt; может отменить это).</target>
        </trans-unit>
        <trans-unit id="f3cb9be6e266f94b26ae77ef70ae8b6ef0aebb1e" translate="yes" xml:space="preserve">
          <source>Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Заменено длинным именем (git-receive-pack,git-upload-pack или git-upload-архив)сервиса,который Git хочет вызвать.</target>
        </trans-unit>
        <trans-unit id="bb8b07a94b19262ae05804fd3dbbad7507b398f9" translate="yes" xml:space="preserve">
          <source>Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Замененоено именем (прием-пакет,загрузка-пакет,или загрузка-архив)сервиса,который Git хочет вызвать.</target>
        </trans-unit>
        <trans-unit id="daa118b2fa4fcb83d5d989f3e2085ec4ffc46e78" translate="yes" xml:space="preserve">
          <source>Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck).</source>
          <target state="translated">Ссылки на замену будут использоваться по умолчанию всеми командами Git'а,кроме тех,которые выполняют обход доступности (prune,pack transfer и fsck).</target>
        </trans-unit>
        <trans-unit id="1c7de5212a432b2bb1d31f5a918c389962b1d1aa" translate="yes" xml:space="preserve">
          <source>Report all removed objects.</source>
          <target state="translated">Сообщите обо всех удаленных объектах.</target>
        </trans-unit>
        <trans-unit id="7cf59cb5c9b7cd37a64d08b6f1df2d863445c6dc" translate="yes" xml:space="preserve">
          <source>Report bugs to the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; for previous bug reports and other discussions.</source>
          <target state="translated">Сообщайте об ошибках в список рассылки Git &amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt;, где в основном выполняются разработка и сопровождение. Вам не нужно быть подписанным на список, чтобы отправлять туда сообщения. См. Архив списка на &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; для предыдущих отчетов об ошибках и других обсуждений.</target>
        </trans-unit>
        <trans-unit id="9c34aa6a8d095f4c3d50ca22d6cbaa490bb7d9e6" translate="yes" xml:space="preserve">
          <source>Report in more detail:</source>
          <target state="translated">Сообщите более подробно:</target>
        </trans-unit>
        <trans-unit id="00d1a1b2ba790dc8a5d0ef6f48b27324107dfa43" translate="yes" xml:space="preserve">
          <source>Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an &quot;approve&quot; action to tell &lt;code&gt;git
credential&lt;/code&gt; to reuse it in its next invocation. If the credential was rejected during the operation, use the &quot;reject&quot; action so that &lt;code&gt;git credential&lt;/code&gt; will ask for a new password in its next invocation. In either case, &lt;code&gt;git credential&lt;/code&gt; should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1)).</source>
          <target state="translated">Сообщите об успешном или неудачном вводе пароля. Если учетные данные позволяют успешно завершить операцию, то они могут быть помечены действием &amp;laquo;одобрить&amp;raquo;, чтобы сообщить &lt;code&gt;git credential&lt;/code&gt; данным git, чтобы они повторно использовали их при следующем вызове. Если учетные данные были отклонены во время операции, используйте действие &amp;laquo;отклонить&amp;raquo;, чтобы &lt;code&gt;git credential&lt;/code&gt; запрашивали новый пароль при следующем вызове. В любом случае &lt;code&gt;git credential&lt;/code&gt; должны сопровождаться описанием учетных данных, полученным на шаге (2) (которое также содержит те, которые предоставлены на шаге (1)).</target>
        </trans-unit>
        <trans-unit id="d2999561ae6989540b2fd61f56808ce48ec59875" translate="yes" xml:space="preserve">
          <source>Report progress to stderr.</source>
          <target state="translated">Сообщите о прогрессе Стдерру.</target>
        </trans-unit>
        <trans-unit id="23ca6237e7b4d09b8d3d4523a8b69c6b949c38b4" translate="yes" xml:space="preserve">
          <source>Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported.</source>
          <target state="translated">Сообщите о прогрессе Стдерру.По умолчанию будет напечатано только сообщение о текущем патче.Эта опция приведет к сообщению дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="40a5b594b81a1c53f8bc61470ed2acd9caeb657d" translate="yes" xml:space="preserve">
          <source>Report root nodes.</source>
          <target state="translated">Сообщить о корневых узлах.</target>
        </trans-unit>
        <trans-unit id="f3f7b1acaa97f30c6a4351eea727e4482f68baad" translate="yes" xml:space="preserve">
          <source>Report tags.</source>
          <target state="translated">Тэги отчетов.</target>
        </trans-unit>
        <trans-unit id="ca0ca9c619773e28411f3305d3cdb605dc8f7d58" translate="yes" xml:space="preserve">
          <source>Report the list of objects being walked locally and the list of objects successfully sent to the remote repository.</source>
          <target state="translated">Сообщите список объектов,проходящих локально,и список объектов,успешно отправленных в удаленное хранилище.</target>
        </trans-unit>
        <trans-unit id="b0782f7c4e5f1bf3ea56caef9403677659089e74" translate="yes" xml:space="preserve">
          <source>Report the names of files as they are moved.</source>
          <target state="translated">Сообщайте имена файлов при их перемещении.</target>
        </trans-unit>
        <trans-unit id="3f95107453bf160f40698d26a88098aaa480cce8" translate="yes" xml:space="preserve">
          <source>Report what is being added and removed from index.</source>
          <target state="translated">Сообщайте о том,что добавляется и удаляется из индекса.</target>
        </trans-unit>
        <trans-unit id="d567f68fa956f7f96b358a6cc234fa317f99710f" translate="yes" xml:space="preserve">
          <source>Report what is downloaded.</source>
          <target state="translated">Сообщите,что скачано.</target>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="translated">Сообщение об ошибках</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="cc18a74ca85a5fe1dba71937009d7cf5c036f7f7" translate="yes" xml:space="preserve">
          <source>Repositories and branches</source>
          <target state="translated">Репозитории и филиалы</target>
        </trans-unit>
        <trans-unit id="3fb88b595be10aadddb6789d4ff575757e80830d" translate="yes" xml:space="preserve">
          <source>Repository administration</source>
          <target state="translated">Администрация репозитория</target>
        </trans-unit>
        <trans-unit id="df92bd52a2917a26c9495edc89977fc3eba4e3de" translate="yes" xml:space="preserve">
          <source>Repository maintenance</source>
          <target state="translated">Обслуживание репозитория</target>
        </trans-unit>
        <trans-unit id="9b33ca61629f451364a09b37b4533d1a6f2f1429" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file.</source>
          <target state="translated">Конфигурационный файл,специфичный для репозитория.</target>
        </trans-unit>
        <trans-unit id="c748d884d06ef27fef856a77e77414daf14ef261" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/config&quot; will be used instead.</source>
          <target state="translated">Конфигурационный файл,специфичный для репозитория.Этот файл игнорируется,если установлен $GIT_COMMON_DIR и вместо него будет использоваться &quot;$GIT_COMMON_DIR/config&quot;.</target>
        </trans-unit>
        <trans-unit id="7394e3ce9096d2546e81d264f6ebc4e2faebef57" translate="yes" xml:space="preserve">
          <source>Represents a repository accessed using the helper program &quot;git-ssl foo.example /bar&quot;. The type of request can be determined by the helper using environment variables (see above).</source>
          <target state="translated">Представляет собой репозиторий,доступ к которому осуществляется с помощью справочной программы &quot;git-ssl foo.example /bar&quot;.Тип запроса может быть определен помощником с помощью переменных окружения (см.выше).</target>
        </trans-unit>
        <trans-unit id="9c983b3418b85a3f9b204dd1418f6237fbf7bdab" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">Представляет собой репозиторий с доступом по пути /repo с помощью вспомогательной программы &quot;git-server-alias foo&quot;.Имя хоста для удалённого сервера,передаваемого в потоке протоколов,будет &quot;foo&quot; (это позволяет нескольким виртуальным Git-серверам совместно использовать адрес на уровне ссылок).</target>
        </trans-unit>
        <trans-unit id="1362aa2b16d7c974af6da4e16e1f2f2e57cebac0" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol.</source>
          <target state="translated">Представляет собой репозиторий с доступом по пути /repo с помощью вспомогательной программы &quot;git-server-alias foo&quot;.Путь к репозиторию и тип запроса передаются не в командной строке,а в потоке протоколов,как обычно с помощью git://протокола.</target>
        </trans-unit>
        <trans-unit id="d09e808fea175aed6c0426870e406a54311c7cc5" translate="yes" xml:space="preserve">
          <source>Represents a repository with path &lt;code&gt;/repo with spaces&lt;/code&gt; accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">Представляет репозиторий с путем &lt;code&gt;/repo with spaces&lt;/code&gt; репозиторием с пробелами, доступ к которым осуществляется с помощью вспомогательной программы &amp;laquo;git-server-alias foo&amp;raquo;. Имя хоста для удаленного сервера, передаваемое в потоке протокола, будет &amp;laquo;foo&amp;raquo; (это позволяет нескольким виртуальным серверам Git совместно использовать адрес на уровне ссылок).</target>
        </trans-unit>
        <trans-unit id="2efb065a9a5c22367444476c2d3425647648ecad" translate="yes" xml:space="preserve">
          <source>Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server.</source>
          <target state="translated">Представляет репозиторий с путём /somerepo,доступным через git-протокол по адресу абстрактного пространства имён /git-сервера.</target>
        </trans-unit>
        <trans-unit id="c8f4d396d0343dc3cd250d626642ac1b291769ac" translate="yes" xml:space="preserve">
          <source>Reproducing some bugs may require referencing particular commits or paths, which becomes challenging after refnames and paths have been anonymized. You can ask for a particular token to be left as-is or mapped to a new value. For example, if you have a bug which reproduces with &lt;code&gt;git rev-list sensitive -- secret.c&lt;/code&gt;, you can run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e1ed64e856e6f12f5bac77f5299cded049014e" translate="yes" xml:space="preserve">
          <source>Request a single valid revision from the user, and set the &lt;code&gt;REVISION&lt;/code&gt; environment variable. In other aspects this option is similar to &lt;code&gt;argPrompt&lt;/code&gt;, and can be used together with it.</source>
          <target state="translated">Запросите у пользователя единственную действительную ревизию и установите переменную среды &lt;code&gt;REVISION&lt;/code&gt; . В остальном эта опция похожа на &lt;code&gt;argPrompt&lt;/code&gt; и может использоваться вместе с ней.</target>
        </trans-unit>
        <trans-unit id="197fbdc9cd47b824a513f297f7a38d2715e6a37f" translate="yes" xml:space="preserve">
          <source>Request a string argument from the user, and pass it to the tool through the &lt;code&gt;ARGS&lt;/code&gt; environment variable. Since requesting an argument implies confirmation, the &lt;code&gt;confirm&lt;/code&gt; option has no effect if this is enabled. If the option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.</source>
          <target state="translated">Запросите у пользователя строковый аргумент и передайте его инструменту через переменную среды &lt;code&gt;ARGS&lt;/code&gt; . Поскольку запрос аргумента подразумевает подтверждение, опция &lt;code&gt;confirm&lt;/code&gt; не действует, если она включена. Если для параметра установлено значение &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;yes&lt;/code&gt; или &lt;code&gt;1&lt;/code&gt; , в диалоговом окне используется встроенная общая подсказка; в противном случае используется точное значение переменной.</target>
        </trans-unit>
        <trans-unit id="af76b31829a8dd5cf3635494d51216915adc4665" translate="yes" xml:space="preserve">
          <source>Request the helper to check connectivity of a clone.</source>
          <target state="translated">Попросите помощника проверить связь клона.</target>
        </trans-unit>
        <trans-unit id="c38d97d1cdb590002eb1b4ddac901b5b9f2b5245" translate="yes" xml:space="preserve">
          <source>Request the helper to perform a force update. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Попросите помощника выполнить принудительное обновление. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca0eaa75282457b7cf284de87b05023d92c795d5" translate="yes" xml:space="preserve">
          <source>Requesting credentials</source>
          <target state="translated">Запрос учётных данных</target>
        </trans-unit>
        <trans-unit id="c253c74295e6d26ab1e36992edc46329d8f4d039" translate="yes" xml:space="preserve">
          <source>Requests writing one file revision to the packfile. The revision is not connected to any commit; this connection must be formed in a subsequent &lt;code&gt;commit&lt;/code&gt; command by referencing the blob through an assigned mark.</source>
          <target state="translated">Запрашивает запись одной версии файла в packfile. Ревизия не связана ни с каким коммитом; это соединение должно быть сформировано в последующей команде &lt;code&gt;commit&lt;/code&gt; путем ссылки на большой двоичный объект через назначенную метку.</target>
        </trans-unit>
        <trans-unit id="f1bfe97ddeff74e34e5c2b1e166cee78ba2487b9" translate="yes" xml:space="preserve">
          <source>Require that fast-import supports the specified feature, or abort if it does not.</source>
          <target state="translated">Требовать,чтобы быстрый импорт поддерживал указанную функцию,или отменить,если это не так.</target>
        </trans-unit>
        <trans-unit id="6316856b66b77d95afc0c3453708e583c5e94170" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, or &lt;code&gt;ls&lt;/code&gt; command respectively. Versions of fast-import not supporting the specified command will exit with a message indicating so. This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected.</source>
          <target state="translated">Требовать, чтобы серверная часть поддерживала команды &lt;code&gt;get-mark&lt;/code&gt; , &lt;code&gt;cat-blob&lt;/code&gt; или &lt;code&gt;ls&lt;/code&gt; соответственно. Версии быстрого импорта, не поддерживающие указанную команду, выйдут с сообщением об этом. Это позволяет своевременно устранить ошибку импорта с четким сообщением, вместо того, чтобы тратить время на начальную часть импорта до обнаружения неподдерживаемой команды.</target>
        </trans-unit>
        <trans-unit id="237f6cde559246995a9ad3fe3a19f1f678ef3d45" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;notemodify&lt;/code&gt; (N) subcommand to the &lt;code&gt;commit&lt;/code&gt; command. Versions of fast-import not supporting notes will exit with a message indicating so.</source>
          <target state="translated">Требовать, чтобы &lt;code&gt;notemodify&lt;/code&gt; поддерживала подкоманду notemodify (N) для команды &lt;code&gt;commit&lt;/code&gt; . Версии быстрого импорта, не поддерживающие заметки, будут закрыты с сообщением об этом.</target>
        </trans-unit>
        <trans-unit id="2bdd979f5fb070ff3c7f85169894f3f721c9ebce" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;--stdout&lt;/code&gt;. Omits certain objects (usually blobs) from the resulting packfile. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for valid &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; forms.</source>
          <target state="translated">Требуется &lt;code&gt;--stdout&lt;/code&gt; . Исключает определенные объекты (обычно капли) из результирующего файла пакета. См. &lt;a href=&quot;git-rev-list&quot;&gt;Git-rev-list [1]&lt;/a&gt; для допустимых форм &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc9ece81e668f48ca0c9284b17719cfe0a863c67" translate="yes" xml:space="preserve">
          <source>Reserved characters are: &quot;%&quot; (used for encoding), &quot;+&quot; (can be used to encode SPACE), all whitespace characters as defined in Perl, including SP, TAB and LF, (used to separate fields in a record).</source>
          <target state="translated">Зарезервированные символы:&quot;%&quot; (используется для кодирования),&quot;+&quot; (может использоваться для кодирования SPACE),все символы пробела,как определено в Perl,включая SP,TAB и LF (используется для разделения полей в записи).</target>
        </trans-unit>
        <trans-unit id="b42218495bd708d0856afd1fabb98c3577f4ad60" translate="yes" xml:space="preserve">
          <source>Reserved instruction</source>
          <target state="translated">Зарезервированная инструкция</target>
        </trans-unit>
        <trans-unit id="ade58d6ef106ac4468b520e2f9f718942ef96589" translate="yes" xml:space="preserve">
          <source>Reset &amp;lt;branchname&amp;gt; to &amp;lt;startpoint&amp;gt;, even if &amp;lt;branchname&amp;gt; exists already. Without &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; refuses to change an existing branch. In combination with &lt;code&gt;-d&lt;/code&gt; (or &lt;code&gt;--delete&lt;/code&gt;), allow deleting the branch irrespective of its merged status. In combination with &lt;code&gt;-m&lt;/code&gt; (or &lt;code&gt;--move&lt;/code&gt;), allow renaming the branch even if the new branch name already exists, the same applies for &lt;code&gt;-c&lt;/code&gt; (or &lt;code&gt;--copy&lt;/code&gt;).</source>
          <target state="translated">Сбросьте &amp;lt;branchname&amp;gt; на &amp;lt;startpoint&amp;gt;, даже если &amp;lt;branchname&amp;gt; уже существует. Без &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;git branch&lt;/code&gt; отказывается изменить существующую ветку. В сочетании с &lt;code&gt;-d&lt;/code&gt; (или &lt;code&gt;--delete&lt;/code&gt; ) разрешить удаление ветки независимо от ее объединенного статуса. В сочетании с &lt;code&gt;-m&lt;/code&gt; (или &lt;code&gt;--move&lt;/code&gt; ) разрешить переименование ветки, даже если новое имя ветки уже существует, то же самое относится к &lt;code&gt;-c&lt;/code&gt; (или &lt;code&gt;--copy&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c000dded32d603bd2d66f7de30922c3049331d8" translate="yes" xml:space="preserve">
          <source>Reset a single file in the index</source>
          <target state="translated">Сброс одного файла в индексе</target>
        </trans-unit>
        <trans-unit id="b199a41a6acc73bab0e76970a8b89b9149933695" translate="yes" xml:space="preserve">
          <source>Reset an existing branch (or a new branch) to a specific revision. This command must be used to change a branch to a specific revision without making a commit on it.</source>
          <target state="translated">Сброс существующей (или новой)ветки до определенной ревизии.Эта команда должна быть использована для изменения ответвления на определённую ревизию без фиксации.</target>
        </trans-unit>
        <trans-unit id="3caab3d6f602d251b347bcf8cb43ce25777589d7" translate="yes" xml:space="preserve">
          <source>Reset current HEAD to the specified state</source>
          <target state="translated">Сброс текущего состояния ГОЛОВКИ в заданное состояние</target>
        </trans-unit>
        <trans-unit id="7000155564e143a5ed7b021bd65e423555a02d6b" translate="yes" xml:space="preserve">
          <source>Reset the conflict resolutions which rerere has recorded for the current conflict in &amp;lt;pathspec&amp;gt;.</source>
          <target state="translated">Сбросьте разрешения конфликтов, которые rerere записал для текущего конфликта в &amp;lt;pathspec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="4a789604fce06a1f57b66b342300476ce0a41423" translate="yes" xml:space="preserve">
          <source>Reset the metadata used by rerere if a merge resolution is to be aborted. Calling &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; or &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; will automatically invoke this command.</source>
          <target state="translated">Сбросьте метаданные, используемые rerere, если разрешение слияния должно быть прервано. Вызов &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; или &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; автоматически вызовет эту команду.</target>
        </trans-unit>
        <trans-unit id="e58c6724a36573568d9a717f014941c665fe0e5c" translate="yes" xml:space="preserve">
          <source>Reset, restore and revert</source>
          <target state="translated">Сброс,восстановление и возврат</target>
        </trans-unit>
        <trans-unit id="cfb6b4d825df9b6e5392392c169da218cc9ebb7e" translate="yes" xml:space="preserve">
          <source>Resets index entries and updates files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; has local changes, reset is aborted.</source>
          <target state="translated">Сбрасывает записи индекса и обновляет файлы в рабочем дереве, которые различаются между &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; и &lt;code&gt;HEAD&lt;/code&gt; . Если файл, который отличается от &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; и &lt;code&gt;HEAD&lt;/code&gt; , содержит локальные изменения, сброс прерывается.</target>
        </trans-unit>
        <trans-unit id="37918ef314fe9073b027113123d9b71065a3aa0b" translate="yes" xml:space="preserve">
          <source>Resets the index and updates the files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and the index has unstaged changes, reset is aborted.</source>
          <target state="translated">Сбрасывает индекс и обновляет файлы в рабочем дереве, которые различаются между &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; и &lt;code&gt;HEAD&lt;/code&gt; , но сохраняет те, которые различаются между индексом и рабочим деревом (т. Е. Имеют изменения, которые не были добавлены). Если файл, который отличается от &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; и индекса, содержит неустановленные изменения, сброс прерывается.</target>
        </trans-unit>
        <trans-unit id="66814a725afb76705c792c5c5bff2effba54bba2" translate="yes" xml:space="preserve">
          <source>Resets the index and working tree. Any changes to tracked files in the working tree since &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; are discarded.</source>
          <target state="translated">Сбрасывает индекс и рабочее дерево. Любые изменения в отслеживаемых файлах в рабочем дереве после &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; отменяются.</target>
        </trans-unit>
        <trans-unit id="018c5d5ee267c3048a66b8317e0b378d380cebd3" translate="yes" xml:space="preserve">
          <source>Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.</source>
          <target state="translated">Сбрасывает индекс,но не рабочее дерево (т.е.измененные файлы сохраняются,но не помечены для фиксации)и сообщает о том,что не было обновлено.Это действие является действием по умолчанию.</target>
        </trans-unit>
        <trans-unit id="367477f47d978611bcd2955ee4ebc351a609da8a" translate="yes" xml:space="preserve">
          <source>Resolve &quot;$GIT_DIR/&amp;lt;path&amp;gt;&quot; and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE&amp;hellip;​ into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then &quot;git rev-parse --git-path objects/abc&quot; returns /foo/bar/abc.</source>
          <target state="translated">Разрешить &quot;$ GIT_DIR / &amp;lt;path&amp;gt;&quot; и принять во внимание другие переменные перемещения пути, такие как $ GIT_OBJECT_DIRECTORY, $ GIT_INDEX_FILE&amp;hellip;. Например, если для $ GIT_OBJECT_DIRECTORY установлено значение / foo / bar, то &quot;git rev-parse --git-path objects / abc&quot; вернет / foo / bar / abc.</target>
        </trans-unit>
        <trans-unit id="c8bb6fc86c763639a02a3bc6b6e1886e0912fa99" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git merge --continue&lt;/code&gt; to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">Разрешите конфликты. Git отметит конфликты в рабочем дереве. Отредактируйте файлы в форме и &lt;code&gt;git add&lt;/code&gt; их в индекс. Используйте &lt;code&gt;git commit&lt;/code&gt; или &lt;code&gt;git merge --continue&lt;/code&gt; чтобы заключить сделку. Последняя команда проверяет, выполняется ли (прерванное) слияние, перед вызовом &lt;code&gt;git commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40be4fe30543d88c430c41f2a76b60f305a6a06a" translate="yes" xml:space="preserve">
          <source>Resolving a merge</source>
          <target state="translated">Решение о слиянии</target>
        </trans-unit>
        <trans-unit id="3aa5d718d6655d399867529b5e479166f7b70223" translate="yes" xml:space="preserve">
          <source>Respect &lt;code&gt;include.*&lt;/code&gt; directives in config files when looking up values. Defaults to &lt;code&gt;off&lt;/code&gt; when a specific file is given (e.g., using &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, etc) and &lt;code&gt;on&lt;/code&gt; when searching all config files.</source>
          <target state="translated">Уважайте &lt;code&gt;include.*&lt;/code&gt; Директиву в конфигурационных файлах при поиске значения. Значения по умолчанию для &lt;code&gt;off&lt;/code&gt; , когда конкретный файл дан (например, с использованием &lt;code&gt;--file&lt;/code&gt; , &lt;code&gt;--global&lt;/code&gt; и т.д.) и &lt;code&gt;on&lt;/code&gt; при поиске всех конфигурационных файлов.</target>
        </trans-unit>
        <trans-unit id="3821457277b56f085d69d5b77c2d88808f6181de" translate="yes" xml:space="preserve">
          <source>Respect any colors specified in the &lt;code&gt;--format&lt;/code&gt; option. The &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; field must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; (if &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; is absent, behave as if &lt;code&gt;always&lt;/code&gt; was given).</source>
          <target state="translated">Учитывайте любые цвета, указанные в параметре &lt;code&gt;--format&lt;/code&gt; . Поле &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; должно иметь одно из значений &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; или &lt;code&gt;auto&lt;/code&gt; (если &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; отсутствует, вести себя так, как если бы он был задан &lt;code&gt;always&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="19c837ff313a7ba1f889a299cee54a40a7c6f84b" translate="yes" xml:space="preserve">
          <source>Responses to commands</source>
          <target state="translated">Ответы на команды</target>
        </trans-unit>
        <trans-unit id="cc0464b7666785d6a76e9f773de6c54d764f7865" translate="yes" xml:space="preserve">
          <source>Restart the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">Перезапустите экземпляр httpd и выйдите.Регенерировать конфигурационные файлы по мере необходимости для порождения нового экземпляра.</target>
        </trans-unit>
        <trans-unit id="8887a5fdf01dac377097b251a845eb9047ab1106" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process after having resolved a merge conflict.</source>
          <target state="translated">Перезапустите процесс перезагрузки после разрешения конфликта слияния.</target>
        </trans-unit>
        <trans-unit id="d21d225ced39acf1075b76301dc02cbf10edbb3b" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process by skipping the current patch.</source>
          <target state="translated">Перезапустите процесс восстановления,пропустив текущую заплатку.</target>
        </trans-unit>
        <trans-unit id="c1f6ec05a9a6600d16e6b449eaa642ea5102eab3" translate="yes" xml:space="preserve">
          <source>Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source.</source>
          <target state="translated">Восстановление заданных путей в рабочем дереве с некоторым содержимым из восстанавливаемого источника.Если путь отслеживается,но не существует в восстанавливаемом источнике,он будет удален,чтобы соответствовать источнику.</target>
        </trans-unit>
        <trans-unit id="264c55416cc1f357f0822f338666c6b7bdbad148" translate="yes" xml:space="preserve">
          <source>Restore the original branch and abort the patching operation.</source>
          <target state="translated">Восстановите оригинальное ответвление и прервите операцию латания.</target>
        </trans-unit>
        <trans-unit id="96e0fd08d6591454dd62291fbfc1b15a5b3e040c" translate="yes" xml:space="preserve">
          <source>Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it.</source>
          <target state="translated">Восстановление файлов рабочего дерева с содержанием из данного дерева.Обычно дерево исходных текстов задается именем коммита,ветви или тега,связанного с ним.</target>
        </trans-unit>
        <trans-unit id="37dff9bce765051722ec36426d7fa455df094071" translate="yes" xml:space="preserve">
          <source>Restore working tree files</source>
          <target state="translated">Восстановление файлов рабочего дерева</target>
        </trans-unit>
        <trans-unit id="69b489de455beab1530c19815d63b57591075bcd" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state of a file during a merge if it was cleared by accident.</source>
          <target state="translated">Восстанавливает &lt;code&gt;unmerged&lt;/code&gt; или &lt;code&gt;needs updating&lt;/code&gt; состояния файла во время слияния , если он был очищен от несчастного случая.</target>
        </trans-unit>
        <trans-unit id="9851dc086eda7e8d693a5cc6867fc0671874ff9d" translate="yes" xml:space="preserve">
          <source>Restrict delta matches based on &quot;islands&quot;. See DELTA ISLANDS below.</source>
          <target state="translated">Ограничить дельта-мачты на основе &quot;островов&quot;.См.раздел &quot;ОСТРОЙСТВА ДЕЛЬТЫ&quot; ниже.</target>
        </trans-unit>
        <trans-unit id="8b8a383fd6388c6ea73ba5d43ff2fb9ca48cf7d7" translate="yes" xml:space="preserve">
          <source>Restrict three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index.</source>
          <target state="translated">Ограничьте трехстороннее слияние с помощью &lt;code&gt;git read-tree&lt;/code&gt; только в том случае, если слияние на уровне файлов не требуется, вместо разрешения слияния для тривиальных случаев и оставления конфликтующих файлов неразрешенными в индексе.</target>
        </trans-unit>
        <trans-unit id="3872426d236e98107658a5fa4ce3ec35943effaa" translate="yes" xml:space="preserve">
          <source>Restricted login shell for Git-only SSH access</source>
          <target state="translated">Ограниченная оболочка входа для SSH-доступа только для Git'а.</target>
        </trans-unit>
        <trans-unit id="8aededfb12d70887c4524cf03227b8b417c18d04" translate="yes" xml:space="preserve">
          <source>Result is different from the value produced by git 1.9 and older or produced when an &quot;unstable&quot; hash (see --unstable below) is configured - even when used on a diff output taken without any use of &quot;-O&amp;lt;orderfile&amp;gt;&quot;, thereby making existing databases storing such &quot;unstable&quot; or historical patch-ids unusable.</source>
          <target state="translated">Результат отличается от значения, созданного git 1.9 и старше или созданного при настройке &quot;нестабильного&quot; хэша (см. --Unstable ниже) - даже при использовании в выводе diff, взятом без использования &quot;-O &amp;lt;orderfile&amp;gt;&quot;, тем самым делая непригодными для использования существующие базы данных, хранящие такие &amp;laquo;нестабильные&amp;raquo; или исторические идентификаторы исправлений.</target>
        </trans-unit>
        <trans-unit id="dd0be3ab949b7f61e7a99aac2ba7a208d6ea3a63" translate="yes" xml:space="preserve">
          <source>Retrieve and store user credentials</source>
          <target state="translated">Восстановление и хранение учетных данных пользователей</target>
        </trans-unit>
        <trans-unit id="5a212fd6a296588049eb570292b8fddf3b170728" translate="yes" xml:space="preserve">
          <source>Retrieves the URLs for a remote. Configurations for &lt;code&gt;insteadOf&lt;/code&gt; and &lt;code&gt;pushInsteadOf&lt;/code&gt; are expanded here. By default, only the first URL is listed.</source>
          <target state="translated">Получает URL-адреса для удаленного. &lt;code&gt;insteadOf&lt;/code&gt; &lt;code&gt;pushInsteadOf&lt;/code&gt; конфигурации для replaceOf и pushInsteadOf . По умолчанию отображается только первый URL.</target>
        </trans-unit>
        <trans-unit id="9396c18e702afc19006375ff866bd100e0e10678" translate="yes" xml:space="preserve">
          <source>Return a matching credential, if any exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f444cb29e88624498c6ae42d5b37c68efa3bab0" translate="yes" xml:space="preserve">
          <source>Returns the commit in plain text mail format, suitable for applying with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">Возвращает фиксацию в обычном текстовом почтовом формате, подходящем для применения с помощью &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9253efc397e5de345aa951a00d2c23f86bf7df99" translate="yes" xml:space="preserve">
          <source>Returns the raw data for the file in given repository, at given path and revision. Links to this action are marked &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">Возвращает необработанные данные для файла в указанном репозитории по заданному пути и версии. Ссылки на это действие помечены как &lt;code&gt;raw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5df164550e4b46ec040a3d56bf7256552cf4621c" translate="yes" xml:space="preserve">
          <source>Reuse recorded resolution of conflicted merges</source>
          <target state="translated">Повторное использование записанного разрешения конфликтных слияний</target>
        </trans-unit>
        <trans-unit id="8616b41a55b6598a78826f975dbbf7f7f8695b39" translate="yes" xml:space="preserve">
          <source>Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch.</source>
          <target state="translated">Обратное расширение ключевых слов CVS (например,$Revision:1.2.3.4$ становится $Revision$)в работающем CVS-выгрузке перед применением патча.</target>
        </trans-unit>
        <trans-unit id="09d255659c37629cf7ad5a71d93e459ba7907206" translate="yes" xml:space="preserve">
          <source>Reverses the meaning of the &lt;code&gt;^&lt;/code&gt; prefix (or lack thereof) for all following revision specifiers, up to the next &lt;code&gt;--not&lt;/code&gt;.</source>
          <target state="translated">Изменяет значение префикса &lt;code&gt;^&lt;/code&gt; (или его отсутствия) на &lt;code&gt;--not&lt;/code&gt; для всех следующих спецификаторов ревизии, вплоть до следующего --not .</target>
        </trans-unit>
        <trans-unit id="f5ecc3a2c0ef8c576038e5331d800290aa1dbb34" translate="yes" xml:space="preserve">
          <source>Revert some existing commits</source>
          <target state="translated">Перевернуть некоторые из существующих коммитов</target>
        </trans-unit>
        <trans-unit id="2d05a07b19af8782049520b85fa598b5aae8245a" translate="yes" xml:space="preserve">
          <source>Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.</source>
          <target state="translated">Перенос изменений,сделанных коммитами,с пятого последнего коммита в мастере (включительно)на третий последний коммит в мастере (включительно),но не создавайте никаких коммитов с перенаправленными изменениями.Обратный возврат изменяет только дерево работы и индекс.</target>
        </trans-unit>
        <trans-unit id="d36b73a7d31ce14514491b7bd667f4a3a39a76f3" translate="yes" xml:space="preserve">
          <source>Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.</source>
          <target state="translated">Переверните изменения,указанные четвертым последним коммитом в HEAD и создайте новый коммит с перевернутыми изменениями.</target>
        </trans-unit>
        <trans-unit id="7816a94047b619334a2511ddb1fb3870ada25153" translate="yes" xml:space="preserve">
          <source>Reverting a merge commit declares that you will never want the tree changes brought in by the merge. As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge. This may or may not be what you want.</source>
          <target state="translated">Обратный ход коммита слияния объявляет,что вы никогда не захотите,чтобы изменения в дереве произошли в результате слияния.В результате,более поздние слияния приведут только к изменениям в дереве,внесённым коммитами,которые не являются предками ранее возвращённого слияния.Это может быть то,что вам нужно,а может и нет.</target>
        </trans-unit>
        <trans-unit id="e1541e4f3b28e3bf9bf5cd6cdf1c6fa7c5066ac0" translate="yes" xml:space="preserve">
          <source>Review and edit each patch you&amp;rsquo;re about to send. Default is the value of &lt;code&gt;sendemail.annotate&lt;/code&gt;. See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">Просмотрите и отредактируйте каждый патч, который вы собираетесь отправить. По умолчанию используется значение &lt;code&gt;sendemail.annotate&lt;/code&gt; . См. Раздел &amp;laquo;КОНФИГУРАЦИЯ&amp;raquo; для &lt;code&gt;sendemail.multiEdit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b78ae7131226d816b60a3640c70615147c2668fc" translate="yes" xml:space="preserve">
          <source>Revision range summary</source>
          <target state="translated">Краткое описание диапазона изменений</target>
        </trans-unit>
        <trans-unit id="0e507d58daf108f33aa81c2ab9d974a6ce0836d6" translate="yes" xml:space="preserve">
          <source>Revision shown. Defaults to HEAD.</source>
          <target state="translated">Показана редакция.По умолчанию-HEAD.</target>
        </trans-unit>
        <trans-unit id="2dba79611a64646631612329658c566246fbc9f0" translate="yes" xml:space="preserve">
          <source>Revisions</source>
          <target state="translated">Revisions</target>
        </trans-unit>
        <trans-unit id="0b4be1f6169f38f3814188ca6321f0baef4e8d0e" translate="yes" xml:space="preserve">
          <source>Revisions come first and then paths. E.g. in &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt;, &lt;code&gt;v1.0&lt;/code&gt; and &lt;code&gt;v2.0&lt;/code&gt; are revisions and &lt;code&gt;arch/x86&lt;/code&gt; and &lt;code&gt;include/asm-x86&lt;/code&gt; are paths.</source>
          <target state="translated">Сначала идут исправления, а затем - пути. Например, в &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt; , &lt;code&gt;v1.0&lt;/code&gt; и &lt;code&gt;v2.0&lt;/code&gt; являются ревизиями, а &lt;code&gt;arch/x86&lt;/code&gt; и &lt;code&gt;include/asm-x86&lt;/code&gt; - путями.</target>
        </trans-unit>
        <trans-unit id="7becdbbb2a8732024f87ab2931981f680230ef94" translate="yes" xml:space="preserve">
          <source>Rewind the master branch to get rid of those three commits.</source>
          <target state="translated">Перемотайте главную ветвь,чтобы избавиться от этих трёх коммитов.</target>
        </trans-unit>
        <trans-unit id="23707433283a99c49d086ac3b852fb7dc5a49bd7" translate="yes" xml:space="preserve">
          <source>Rewrite branches</source>
          <target state="translated">Переписать ветки</target>
        </trans-unit>
        <trans-unit id="1f772054df9f197c59794505debe5263bced78f0" translate="yes" xml:space="preserve">
          <source>Rewrite the object IDs for the submodule specified by &amp;lt;name&amp;gt; from the values used in the from &amp;lt;file&amp;gt; to those used in the to &amp;lt;file&amp;gt;. The from marks should have been created by &lt;code&gt;git fast-export&lt;/code&gt;, and the to marks should have been created by &lt;code&gt;git fast-import&lt;/code&gt; when importing that same submodule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c6d6dea3e502e9d6305607675f5d9cfa096787" translate="yes" xml:space="preserve">
          <source>Rewriting a single commit</source>
          <target state="translated">Переписание одного коммита</target>
        </trans-unit>
        <trans-unit id="f0b0b0c2a8ee1155d88307c80fb06e1df9172561" translate="yes" xml:space="preserve">
          <source>Rewriting history and maintaining patch series</source>
          <target state="translated">Переписывание истории и поддержание серии патчей</target>
        </trans-unit>
        <trans-unit id="b4a0f73cd12119000c1f6312d5dd619dd0ae5fda" translate="yes" xml:space="preserve">
          <source>Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories.</source>
          <target state="translated">Корень мейлдира раскололся.Этот каталог должен содержать подкаталоги cur,tmp и new.</target>
        </trans-unit>
        <trans-unit id="afeb98169e5519ad4e553da5035454587d62f649" translate="yes" xml:space="preserve">
          <source>Roughly speaking, there are two important workflows: merge and patch. The important difference is that the merge workflow can propagate full history, including merges, while patches cannot. Both workflows can be used in parallel: in &lt;code&gt;git.git&lt;/code&gt;, only subsystem maintainers use the merge workflow, while everyone else sends patches.</source>
          <target state="translated">Грубо говоря, есть два важных рабочих процесса: слияние и патч. Важное отличие состоит в том, что рабочий процесс слияния может распространять полную историю, включая слияния, в то время как исправления не могут. Оба рабочих процесса могут использоваться параллельно: в &lt;code&gt;git.git&lt;/code&gt; только сопровождающие подсистемы используют рабочий процесс слияния, в то время как все остальные отправляют исправления.</target>
        </trans-unit>
        <trans-unit id="4ad3e9112d465fbfd17a48a5928f94fb9df2be8b" translate="yes" xml:space="preserve">
          <source>Routines to help parsing remote repository access parameters</source>
          <target state="translated">Маршруты для помощи в разборе параметров доступа к удаленному репозиторию</target>
        </trans-unit>
        <trans-unit id="3495f8aaa83c51339b8e8d234a997810c199e605" translate="yes" xml:space="preserve">
          <source>Rule: Merge to downstream only at well-defined points</source>
          <target state="translated">Правило:Слияние с нисходящим потоком только в четко определенных точках.</target>
        </trans-unit>
        <trans-unit id="09660bd61221506e477e31f1dd27fab9f41227cb" translate="yes" xml:space="preserve">
          <source>Rule: Merge upwards</source>
          <target state="translated">Правило:Слияние вверх</target>
        </trans-unit>
        <trans-unit id="54160ff726068ad54950593ff8fc01c56330b6b4" translate="yes" xml:space="preserve">
          <source>Rule: Throw-away integration branches</source>
          <target state="translated">Правило:Отборочные интеграционные филиалы</target>
        </trans-unit>
        <trans-unit id="2f47e21adb2d5e1ec4b0ccaaeca3d73a008017d2" translate="yes" xml:space="preserve">
          <source>Rule: Topic branches</source>
          <target state="translated">Правило:Тематические ветки</target>
        </trans-unit>
        <trans-unit id="fda6b71ba420bf88a3b35fd7a8c9d96c7d2ca360" translate="yes" xml:space="preserve">
          <source>Run 3-way file level merge for text files, but take lines from both versions, instead of leaving conflict markers. This tends to leave the added lines in the resulting file in random order and the user should verify the result. Do not use this if you do not understand the implications.</source>
          <target state="translated">Запустите 3-полосное объединение на уровне файлов для текстовых файлов,но возьмите строки из обеих версий,вместо того,чтобы оставлять маркеры конфликтов.Это имеет тенденцию оставлять добавленные строки в результирующем файле в случайном порядке,и пользователь должен проверить результат.Не используйте это,если не понимаете последствий.</target>
        </trans-unit>
        <trans-unit id="a160fe3e32ea42046eaaac9053e680c14caafda7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git fetch origin&lt;/code&gt; from the public repository of your upstream every once in a while. This does only the first half of &lt;code&gt;git pull&lt;/code&gt; but does not merge. The head of the public repository is stored in &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt;.</source>
          <target state="translated">Run &lt;code&gt;git fetch origin&lt;/code&gt; из общественного хранилища вышестоящем каждый раз в то время. Это делает только первую половину &lt;code&gt;git pull&lt;/code&gt; , но не объединяется. Голова публичного репозитория хранится в &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5df7e2d67065569be056bdfd06fe71034940306" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git gc --auto&lt;/code&gt; at the end to perform garbage collection if needed. This is enabled by default.</source>
          <target state="translated">В конце запустите &lt;code&gt;git gc --auto&lt;/code&gt; ,чтобы при необходимости выполнить сборку мусора. По умолчанию это включено.</target>
        </trans-unit>
        <trans-unit id="6039403ffea6ab0903949880e74c464732db7a11" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git maintenance run --auto&lt;/code&gt; at the end to perform automatic repository maintenance if needed. (&lt;code&gt;--[no-]auto-gc&lt;/code&gt; is a synonym.) This is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6f5eee3c049cb1a6dcee0979306b460610b633" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-p4 submit --help&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c2111aa7a129dccec5c5c0fa7a3c629e6b4b60" translate="yes" xml:space="preserve">
          <source>Run a merge for files needing merging</source>
          <target state="translated">Запустите слияние для файлов,нуждающихся в слиянии.</target>
        </trans-unit>
        <trans-unit id="56deae0bf4d8ef1e2306db4544bba762fbe034dc" translate="yes" xml:space="preserve">
          <source>Run a three-way file merge</source>
          <target state="translated">Выполнить трехстороннее объединение файлов</target>
        </trans-unit>
        <trans-unit id="454ceea0bbe28544bd004a32b164a804513700b9" translate="yes" xml:space="preserve">
          <source>Run as if git was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the current working directory. When multiple &lt;code&gt;-C&lt;/code&gt; options are given, each subsequent non-absolute &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; is interpreted relative to the preceding &lt;code&gt;-C
&amp;lt;path&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present but empty, e.g. &lt;code&gt;-C &quot;&quot;&lt;/code&gt;, then the current working directory is left unchanged.</source>
          <target state="translated">Запускать так, как если бы git был запущен в &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; вместо текущего рабочего каталога. Когда задано несколько параметров &lt;code&gt;-C&lt;/code&gt; , каждый последующий неабсолютный &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; интерпретируется относительно предыдущего &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; . Если &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; присутствует, но пуст, например &lt;code&gt;-C &quot;&quot;&lt;/code&gt; , то текущий рабочий каталог остается неизменным.</target>
        </trans-unit>
        <trans-unit id="3a57bdd6deda30e0d464ee7ac9f51bb6cd990f64" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from inetd.</source>
          <target state="translated">Запустите git-daemon для обслуживания /pub/scm от inetd.</target>
        </trans-unit>
        <trans-unit id="2b3f7399788c5a94c105f34c23c2a49d757c1096" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from xinetd.</source>
          <target state="translated">Запустите git-daemon для обслуживания /pub/scm от xinetd.</target>
        </trans-unit>
        <trans-unit id="29a03b5fc4e803018eee3893eddf1e9108c87d3d" translate="yes" xml:space="preserve">
          <source>Run interactively.</source>
          <target state="translated">Бегите интерактивно.</target>
        </trans-unit>
        <trans-unit id="f367a056462dd8b9f00355ca4ea04e6dfae0f7a4" translate="yes" xml:space="preserve">
          <source>Run merge against all files in the index that need merging.</source>
          <target state="translated">Запустите слияние со всеми файлами в индексе,которые нуждаются в слиянии.</target>
        </trans-unit>
        <trans-unit id="234f84747fbb8e336dcf4106732f26a4c98fccdf" translate="yes" xml:space="preserve">
          <source>Run merge conflict resolution tools to resolve merge conflicts</source>
          <target state="translated">Запустите инструменты разрешения конфликтов слияния для разрешения конфликтов слияния</target>
        </trans-unit>
        <trans-unit id="297b88341d487657ac7bfaea2e82d26521a04a34" translate="yes" xml:space="preserve">
          <source>Run tasks to optimize Git repository data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4bd94ff5f1951786b4d70e32a9fd3f734eea92" translate="yes" xml:space="preserve">
          <source>Run the command silently, without creating a window to display its output.</source>
          <target state="translated">Выполните команду тихо,не создавая окна для отображения ее результатов.</target>
        </trans-unit>
        <trans-unit id="1bc8f86a1473f5767bf3c60c210d9437103d96b3" translate="yes" xml:space="preserve">
          <source>Run the tool only if a diff is selected in the GUI. It guarantees that &lt;code&gt;FILENAME&lt;/code&gt; is not empty.</source>
          <target state="translated">Запускайте инструмент, только если в графическом интерфейсе выбрано различие. Это гарантирует, что &lt;code&gt;FILENAME&lt;/code&gt; не пуст.</target>
        </trans-unit>
        <trans-unit id="6a6c6a22304c9bf76fa5e2f3f8dca8cd7bf5e3ac" translate="yes" xml:space="preserve">
          <source>Run this script and save its output to a file. This file could then be used as projects list file, which means that you can set &lt;code&gt;$projects_list&lt;/code&gt; to its filename.</source>
          <target state="translated">Запустите этот сценарий и сохраните его вывод в файл. Затем этот файл можно использовать как файл списка проектов, что означает, что вы можете установить &lt;code&gt;$projects_list&lt;/code&gt; в качестве его имени файла.</target>
        </trans-unit>
        <trans-unit id="e4350cd9be7c2a6a88a109bf8474f97ce8036333" translate="yes" xml:space="preserve">
          <source>Run verbosely.</source>
          <target state="translated">Бегите многословно.</target>
        </trans-unit>
        <trans-unit id="0580e4cb5c8782966251586e9fca0c52971499d2" translate="yes" xml:space="preserve">
          <source>Run verbosely. Does not affect the reporting of progress status to the standard error stream.</source>
          <target state="translated">Бегите многословно.Не влияет на отчет о состоянии выполнения в стандартном потоке ошибок.</target>
        </trans-unit>
        <trans-unit id="e6c2918d91700995262364e3455a1fa1e70615ff" translate="yes" xml:space="preserve">
          <source>Running &quot;git tag&quot; without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown.</source>
          <target state="translated">Запуск &quot;git-тега&quot; без аргументов также перечисляет все теги.Шаблон представляет собой подстановочный символ оболочки (т.е.совпадает с помощью fnmatch(3)).Могут быть заданы несколько шаблонов;если любой из них совпадет,то будет показан тег.</target>
        </trans-unit>
        <trans-unit id="a2ee2445637d31b2b0a87c4075e11372cbe6d8cc" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables (see &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803264f53d0e1d9dc0bb4982e51be37a05b958fa" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables.</source>
          <target state="translated">Запуск &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; , &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; , &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index [1]&lt;/a&gt; , &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree [1]&lt;/a&gt; или &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files [1]&lt;/a&gt; с &lt;code&gt;-p&lt;/code&gt; опция создает текст патча. Вы можете настроить создание текста патча с помощью переменных среды &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; и &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79747aa96d21887b0b235c733b1bf62702e5f734" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git gc&lt;/code&gt; manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the &quot;PACKFILE OPTIMIZATION&quot; section in &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; for more details on the import case.</source>
          <target state="translated">Запуск &lt;code&gt;git gc&lt;/code&gt; вручную может потребоваться только при добавлении объектов в репозиторий без регулярного выполнения таких фарфоровых команд, для разовой оптимизации репозитория или, например, для очистки неоптимального массового импорта. См. Раздел &amp;laquo;ОПТИМИЗАЦИЯ ПАКЕТОВ&amp;raquo; в &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]&lt;/a&gt; для получения более подробной информации о случае импорта.</target>
        </trans-unit>
        <trans-unit id="5e2a5725ee1a3773dc9d930811a085d107277efd" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git init&lt;/code&gt; in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning &lt;code&gt;git init&lt;/code&gt; is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given).</source>
          <target state="translated">Запуск &lt;code&gt;git init&lt;/code&gt; в существующем репозитории безопасен. Он не будет перезаписывать то, что уже есть. Основная причина для повторного &lt;code&gt;git init&lt;/code&gt; - выбрать недавно добавленные шаблоны (или переместить репозиторий в другое место, если задано --separate-git-dir).</target>
        </trans-unit>
        <trans-unit id="4a12225be5b345f509b740239e0b23dc61c4c69e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; is NOT recommended on a branch you plan to &lt;code&gt;dcommit&lt;/code&gt; from because Subversion users cannot see any merges you&amp;rsquo;ve made. Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, &lt;code&gt;dcommit&lt;/code&gt; may commit to the wrong branch.</source>
          <target state="translated">Запускать &lt;code&gt;git merge&lt;/code&gt; или &lt;code&gt;git pull&lt;/code&gt; НЕ рекомендуется для ветки, из которой вы планируете &lt;code&gt;dcommit&lt;/code&gt; , потому что пользователи Subversion не могут видеть какие-либо сделанные вами слияния. Более того, если вы &lt;code&gt;dcommit&lt;/code&gt; слияние или загрузку из ветки Git, которая является зеркалом ветки SVN, dcommit может выполнить фиксацию в неправильную ветку.</target>
        </trans-unit>
        <trans-unit id="4e5d95b0a65fda26d5c70bb844d87c3f30d59d6d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git pack-refs&lt;/code&gt; in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such as HTTP. This variable determines whether &lt;code&gt;git gc&lt;/code&gt; runs &lt;code&gt;git pack-refs&lt;/code&gt;. This can be set to &lt;code&gt;notbare&lt;/code&gt; to enable it within all non-bare repos or it can be set to a boolean value. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Выполнение &lt;code&gt;git pack-refs&lt;/code&gt; в репозитории делает его неклонируемым в версиях Git до 1.5.1.2 через &amp;laquo;глупые&amp;raquo; транспорты, такие как HTTP. Эта переменная определяет, запускает ли &lt;code&gt;git gc&lt;/code&gt; &lt;code&gt;git pack-refs&lt;/code&gt; . Для него можно установить значение &lt;code&gt;notbare&lt;/code&gt; , чтобы включить его во всех репозиториях, отличных от голого, или можно установить логическое значение. По умолчанию это &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e986747909ca421bbba8ffb613702a034d33901" translate="yes" xml:space="preserve">
          <source>Running git-filter-branch with either --tags or --all in your &amp;lt;rev-list options&amp;gt;. In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite).</source>
          <target state="translated">Запуск git-filter-branch с помощью --tags или --all в вашем &amp;lt;rev-list options&amp;gt;. Чтобы сохранить аннотированные теги как аннотированные, вы должны использовать --tag-name-filter (и не должны восстанавливаться из refs / original / в ранее неудачной перезаписи).</target>
        </trans-unit>
        <trans-unit id="48b168cafbabe8dd5092d4e93800a7944e72448e" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;git rerere&lt;/code&gt; command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; in them. Later, after you are done resolving the conflicts, running &lt;code&gt;git rerere&lt;/code&gt; again will record the resolved state of these files. Suppose you did this when you created the test merge of master into the topic branch.</source>
          <target state="translated">Выполнение команды &lt;code&gt;git rerere&lt;/code&gt; сразу после конфликтующего автослияния записывает конфликтующие файлы рабочего дерева с обычными маркерами конфликта &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;=======&lt;/code&gt; и &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; . Позже, после того как вы закончите разрешать конфликты, снова запустите &lt;code&gt;git rerere&lt;/code&gt; , чтобы записать разрешенное состояние этих файлов. Предположим, вы сделали это, когда создали тестовое слияние мастера в ветку темы.</target>
        </trans-unit>
        <trans-unit id="59dc4b3f413e4c03677af110697445ae971ad5c3" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;git update-index&lt;/code&gt; itself on the paths whose index entries are different from those from the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">Сам запускает &lt;code&gt;git update-index&lt;/code&gt; по путям, записи индекса которых отличаются от записей из фиксации &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22e727ddf0d0e8f34303d3a3ff629cb6f10d1775" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;. It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that. It accepts all arguments that the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; commands accept; with the exception of &lt;code&gt;--fetch-all&lt;/code&gt; and &lt;code&gt;--parent&lt;/code&gt;. After a repository is cloned, the &lt;code&gt;fetch&lt;/code&gt; command will be able to update revisions without affecting the working tree; and the &lt;code&gt;rebase&lt;/code&gt; command will be able to update the working tree with the latest changes.</source>
          <target state="translated">Запускает &lt;code&gt;init&lt;/code&gt; и &lt;code&gt;fetch&lt;/code&gt; . Он автоматически создаст каталог на основе базового имени переданного ему URL-адреса; или если передан второй аргумент; он создаст каталог и будет работать в нем. Он принимает все аргументы, которые принимают команды &lt;code&gt;init&lt;/code&gt; и &lt;code&gt;fetch&lt;/code&gt; ; за исключением &lt;code&gt;--fetch-all&lt;/code&gt; и &lt;code&gt;--parent&lt;/code&gt; . После клонирования репозитория команда &lt;code&gt;fetch&lt;/code&gt; сможет обновлять ревизии, не затрагивая рабочее дерево; и команда &lt;code&gt;rebase&lt;/code&gt; сможет обновить рабочее дерево с последними изменениями.</target>
        </trans-unit>
        <trans-unit id="271b9f4ffa51b4716f220d02767212c2cbc90133" translate="yes" xml:space="preserve">
          <source>Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of &lt;code&gt;git add&lt;/code&gt;, packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.</source>
          <target state="translated">Выполняет ряд служебных задач в текущем репозитории, таких как сжатие ревизий файлов (для уменьшения дискового пространства и повышения производительности), удаление недоступных объектов, которые могли быть созданы в результате предыдущих вызовов &lt;code&gt;git add&lt;/code&gt; , упаковки ссылок, обрезки рефлога, повторного перезапуска метаданных или несвежие рабочие деревья. Может также обновлять вспомогательные индексы, такие как график фиксации.</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="9aa5449df2c27f8c453076898c93afa895c00117" translate="yes" xml:space="preserve">
          <source>SCM</source>
          <target state="translated">SCM</target>
        </trans-unit>
        <trans-unit id="c571b86549e49bf223cf648388c46288c2241b5a" translate="yes" xml:space="preserve">
          <source>SHA-1</source>
          <target state="translated">SHA-1</target>
        </trans-unit>
        <trans-unit id="312e98fedb54c7d53ac4e72bc404817b90ff078b" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git commit objects.</source>
          <target state="translated">SHA-1 идентификаторы объектов Git-комитов.</target>
        </trans-unit>
        <trans-unit id="202b86696ac3129113c6d6b6693f7f6dc827b3d3" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git tag objects.</source>
          <target state="translated">SHA-1 идентификаторы объектов Git-тегов.</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="1685ffa85727a883f0235855ad4fe17b10829246" translate="yes" xml:space="preserve">
          <source>SSH and File Transport</source>
          <target state="translated">SSH и транспортировка файлов</target>
        </trans-unit>
        <trans-unit id="88179dba2afcc4bab1f73ecdf7a5b0b3ec852b33" translate="yes" xml:space="preserve">
          <source>SSH:</source>
          <target state="translated">SSH:</target>
        </trans-unit>
        <trans-unit id="4d1ffce8cc78d20fc8a69ac29d5637ff598777a6" translate="yes" xml:space="preserve">
          <source>SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour.</source>
          <target state="translated">Сама SVN хранит время только по UTC и больше ничего.Обычный клиент svn конвертирует UTC-время в местное (или основанное на среде TZ=).Эта команда имеет такое же поведение.</target>
        </trans-unit>
        <trans-unit id="e2462783325d1946b85fa4d6ac9becc9ddef189e" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can 'NOT' be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">К сожалению, многие слияния нетривиальны. Если есть файлы, которые были добавлены, перемещены или удалены, или если обе ветви изменили один и тот же файл, у вас останется дерево индексов, которое содержит в себе &amp;laquo;элементы слияния&amp;raquo;. Такое дерево индексов нельзя записать в объект дерева, и вам придется разрешать любые такие конфликты слияния с помощью других инструментов, прежде чем вы сможете записать результат.</target>
        </trans-unit>
        <trans-unit id="a29b0686374a954376cc620b8979b45dec7b936c" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can &lt;code&gt;NOT&lt;/code&gt; be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c65f36deb58ec8692004d5f340eea1de5007232b" translate="yes" xml:space="preserve">
          <source>Salvage your data out of another SCM people love to hate</source>
          <target state="translated">Спасти свои данные из другого СКМ,который люди любят ненавидеть.</target>
        </trans-unit>
        <trans-unit id="7da4c768ec454f900a2b009758758bcc4c497617" translate="yes" xml:space="preserve">
          <source>Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode.</source>
          <target state="translated">То же самое,что и в --режиме,но принимайте режим,закодированный в виде числа.В основном это используется другими командами,которые уже разобрали режим компоновки.</target>
        </trans-unit>
        <trans-unit id="2542706528d734cb50feb9bca7bdca378a008047" translate="yes" xml:space="preserve">
          <source>Same as --receive-pack=&amp;lt;git-receive-pack&amp;gt;.</source>
          <target state="translated">То же, что и --receive-pack = &amp;lt;git-receive-pack&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="70cac94413c3847bbe37b2e76044db02ae24aecd" translate="yes" xml:space="preserve">
          <source>Same as --upload-pack=&amp;lt;git-upload-pack&amp;gt;.</source>
          <target state="translated">То же, что и --upload-pack = &amp;lt;git-upload-pack&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="11461b23fcbc2ba6f710e4af2d4a469477579e7e" translate="yes" xml:space="preserve">
          <source>Same as -m, except that unmerged entries are discarded instead of failing. When used with &lt;code&gt;-u&lt;/code&gt;, updates leading to loss of working tree changes will not abort the operation.</source>
          <target state="translated">То же, что и -m, за исключением того, что несоединенные записи удаляются вместо сбоя. При использовании с &lt;code&gt;-u&lt;/code&gt; обновления, приводящие к потере изменений рабочего дерева, не прерывают операцию.</target>
        </trans-unit>
        <trans-unit id="e08595bc7c109d0c181056c12a1b3a6619cb3279" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=-1&lt;/code&gt;; this is the default.</source>
          <target state="translated">То же, что &lt;code&gt;--max-depth=-1&lt;/code&gt; ; это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="fca1bc99780bb8b21bf845d99b40ff5d1d2ac6f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=0&lt;/code&gt;.</source>
          <target state="translated">То же, что &lt;code&gt;--max-depth=0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96a9581032de7bee365152ab2d305df909cefe47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--untracked-cache&lt;/code&gt;. Provided for backwards compatibility with older versions of Git where &lt;code&gt;--untracked-cache&lt;/code&gt; used to imply &lt;code&gt;--test-untracked-cache&lt;/code&gt; but this option would enable the extension unconditionally.</source>
          <target state="translated">То же, что и &lt;code&gt;--untracked-cache&lt;/code&gt; . Обеспечивается обратная совместимость со старыми версиями Git, где &lt;code&gt;--untracked-cache&lt;/code&gt; использовалось для обозначения &lt;code&gt;--test-untracked-cache&lt;/code&gt; , но этот параметр безоговорочно включал бы расширение.</target>
        </trans-unit>
        <trans-unit id="a5a8ba00c3dc1ba60d32f039cdc49baa9cb59855" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--verify&lt;/code&gt; but shortens the object name to a unique prefix with at least &lt;code&gt;length&lt;/code&gt; characters. The minimum length is 4, the default is the effective value of the &lt;code&gt;core.abbrev&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">То же, что и &lt;code&gt;--verify&lt;/code&gt; , но сокращает имя объекта до уникального префикса, содержащего не менее &lt;code&gt;length&lt;/code&gt; символов. Минимальная длина - 4, по умолчанию - действующее значение конфигурационной переменной &lt;code&gt;core.abbrev&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="beb85fd3b6ce0903e1b1188af0e814b86495c278" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;, unless &lt;code&gt;-d&lt;/code&gt; is used. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack. Unreachable objects are never intentionally added to a pack, even when repacking. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next &lt;code&gt;git gc&lt;/code&gt; invocation. See &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">То же, что и &lt;code&gt;-a&lt;/code&gt; , если не используется &lt;code&gt;-d&lt;/code&gt; . Тогда любые недостижимые объекты в предыдущем пакете становятся свободными, неупакованными объектами, а не остаются в старой упаковке. Недостижимые объекты никогда намеренно не добавляются в пакет, даже при переупаковке. Эта опция предотвращает немедленное удаление недостижимых объектов путем их оставления в старом пакете и последующего удаления. Вместо этого свободные недостижимые объекты будут удалены в соответствии с обычными правилами истечения срока действия при следующем вызове &lt;code&gt;git gc&lt;/code&gt; . См. &lt;a href=&quot;git-gc&quot;&gt;Git-gc [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff89956ed03482de99fb1d76b0d3426c3c4d4dbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;git gui citool&lt;/code&gt; (above).</source>
          <target state="translated">То же, что и &lt;code&gt;git gui citool&lt;/code&gt; (см. Выше).</target>
        </trans-unit>
        <trans-unit id="7f884bfa0e72398b065720ac608779bf0b3372aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;group&lt;/code&gt;, but make the repository readable by all users.</source>
          <target state="translated">То же, что и &lt;code&gt;group&lt;/code&gt; , но сделать репозиторий доступным для чтения всем пользователям.</target>
        </trans-unit>
        <trans-unit id="205ac751a2a286c261ce1f6df5fb256a7d0ade8e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; except #commentary is not removed.</source>
          <target state="translated">То же, что и &lt;code&gt;strip&lt;/code&gt; за исключением того, что # комментарий не удаляется.</target>
        </trans-unit>
        <trans-unit id="0f92cc3366a36ceb57ccdcea56b7f1a8684ec893" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; if the message is to be edited. Otherwise &lt;code&gt;whitespace&lt;/code&gt;.</source>
          <target state="translated">То же, что и &lt;code&gt;strip&lt;/code&gt; если сообщение редактируется. В противном случае &lt;code&gt;whitespace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e2d0cf73dc026e93d34c61a101205dcf767e79" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;whitespace&lt;/code&gt; except that everything from (and including) the line found below is truncated, if the message is to be edited. &quot;&lt;code&gt;#&lt;/code&gt;&quot; can be customized with core.commentChar.</source>
          <target state="translated">То же, что и &lt;code&gt;whitespace&lt;/code&gt; за исключением того, что все, что находится в строке ниже (включая ее), обрезается, если сообщение подлежит редактированию. &quot; &lt;code&gt;#&lt;/code&gt; &quot; можно настроить с помощью core.commentChar.</target>
        </trans-unit>
        <trans-unit id="fe1030b7b6d63ee2bb092f0de364ad5810d90270" translate="yes" xml:space="preserve">
          <source>Same as above, but the format is inferred from the output file.</source>
          <target state="translated">То же самое,что и выше,но формат выводится из выходного файла.</target>
        </trans-unit>
        <trans-unit id="a3268177cdd166695f9afb4cfbb0a75c5f082adf" translate="yes" xml:space="preserve">
          <source>Same as above, but using the builtin tar.gz handling.</source>
          <target state="translated">То же самое,что и выше,но с использованием встроенного tar.gz.</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">То же самое,что и выше.</target>
        </trans-unit>
        <trans-unit id="eceeb52d76c39f830be2caa3098c992d4c73cfa3" translate="yes" xml:space="preserve">
          <source>Same as the default mode, but does not prune some history.</source>
          <target state="translated">Такой же,как и в режиме по умолчанию,но не подрезает некоторую историю.</target>
        </trans-unit>
        <trans-unit id="db6a81d8b3d32523ab23e52ba20bfc5ab9af3c20" translate="yes" xml:space="preserve">
          <source>Save that patch to a file in UNIX mailbox format. Call it a.patch, say.</source>
          <target state="translated">Сохраните этот патч в файл в формате почтового ящика UNIX.Назовите это a.patch,скажем.</target>
        </trans-unit>
        <trans-unit id="17bbcc9ad074be63eea942d50d7cda88e930f8d2" translate="yes" xml:space="preserve">
          <source>Save the process id in &lt;code&gt;file&lt;/code&gt;. Ignored when the daemon is run under &lt;code&gt;--inetd&lt;/code&gt;.</source>
          <target state="translated">Сохраните идентификатор процесса в &lt;code&gt;file&lt;/code&gt; . Игнорируется, когда демон запускается под &lt;code&gt;--inetd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15259adada7ee3df28dbdafd2e3ca8076b5f4a15" translate="yes" xml:space="preserve">
          <source>Save your local modifications to a new &lt;code&gt;stash entry&lt;/code&gt; and roll them back to HEAD (in the working tree and in the index). The &amp;lt;message&amp;gt; part is optional and gives the description along with the stashed state.</source>
          <target state="translated">Сохраните локальные изменения в новой &lt;code&gt;stash entry&lt;/code&gt; и откатите их обратно в HEAD (в рабочем дереве и в индексе). Часть &amp;lt;message&amp;gt; является необязательной и дает описание вместе с сохраненным состоянием.</target>
        </trans-unit>
        <trans-unit id="ea6661dbb08a609142e04fb33fe9864a0d55a0fb" translate="yes" xml:space="preserve">
          <source>Saving a log and replaying it</source>
          <target state="translated">Сохранение журнала и его воспроизведение</target>
        </trans-unit>
        <trans-unit id="256f734933def8151aae2c73ad04adbfd2f5710e" translate="yes" xml:space="preserve">
          <source>Say you modify a branch with &lt;a href=&quot;#fixing-mistakes&quot;&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;/a&gt;, and then realize that the branch was the only reference you had to that point in history.</source>
          <target state="translated">Допустим, вы изменяете ветку с помощью &lt;a href=&quot;#fixing-mistakes&quot;&gt; &lt;code&gt;git reset --hard&lt;/code&gt; &lt;/a&gt; , а затем понимаете, что эта ветка была единственной ссылкой на этот момент в истории.</target>
        </trans-unit>
        <trans-unit id="8f7159e28d007390950b554c8900463bad34bfe1" translate="yes" xml:space="preserve">
          <source>Scan &lt;code&gt;Documentation/&lt;/code&gt; for other stuff left out; in particular:</source>
          <target state="translated">Отсканируйте &lt;code&gt;Documentation/&lt;/code&gt; предмет отсутствия других вещей; в частности:</target>
        </trans-unit>
        <trans-unit id="deb6721d53898cf2febea6ade63b57224507999f" translate="yes" xml:space="preserve">
          <source>Scan email archives for other stuff left out</source>
          <target state="translated">Сканируйте архивы электронной почты на наличие других вещей,оставленных без внимания</target>
        </trans-unit>
        <trans-unit id="b53f30bf6406e325a3dfac40a2ba03843362a3a9" translate="yes" xml:space="preserve">
          <source>Scan man pages to see if any assume more background than this manual provides.</source>
          <target state="translated">Сканируйте man-страницы,чтобы посмотреть,нет ли предположений о большем фоне,чем указано в данном руководстве.</target>
        </trans-unit>
        <trans-unit id="d1e8a9a092bccee1d0d707e7539fd2ea1ed01f5c" translate="yes" xml:space="preserve">
          <source>Scheme (e.g., &lt;code&gt;https&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match exactly between the config key and the URL.</source>
          <target state="translated">Схема (например, &lt;code&gt;https&lt;/code&gt; в &lt;code&gt;https://example.com/&lt;/code&gt; ). Это поле должно точно совпадать между ключом конфигурации и URL-адресом.</target>
        </trans-unit>
        <trans-unit id="1e05e395ff307d005e7e52d5a8d5532c4a364bbf" translate="yes" xml:space="preserve">
          <source>Search files in the current directory that is not managed by Git.</source>
          <target state="translated">Поиск файлов в текущем каталоге,который не управляется Git'ом.</target>
        </trans-unit>
        <trans-unit id="b73a02f095e861ccf3246948d40c910baf6a01fe" translate="yes" xml:space="preserve">
          <source>Search for regressions:</source>
          <target state="translated">Поиск регрессий:</target>
        </trans-unit>
        <trans-unit id="f6032042d4f48d36194af91f9c0f4e8546fac517" translate="yes" xml:space="preserve">
          <source>Search strategy</source>
          <target state="translated">стратегия поиска</target>
        </trans-unit>
        <trans-unit id="a28ca13aea7d9b0267664d0e0585dd1effd660f3" translate="yes" xml:space="preserve">
          <source>Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; will be used. Any single-valued variable set in this file will be overwritten by whatever is in &lt;code&gt;~/.gitconfig&lt;/code&gt;. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.</source>
          <target state="translated">Второй файл конфигурации для конкретного пользователя. Если $ XDG_CONFIG_HOME не задан или пуст, будет использоваться &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; . Любая однозначная переменная, установленная в этом файле, будет перезаписана тем, что находится в &lt;code&gt;~/.gitconfig&lt;/code&gt; . Не создавайте этот файл, если вы иногда используете старые версии Git, поскольку поддержка этого файла была добавлена ​​сравнительно недавно.</target>
        </trans-unit>
        <trans-unit id="08bcebdee7825304638fc52fdc68926c0d85826a" translate="yes" xml:space="preserve">
          <source>Second user-specific credentials file. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set or empty, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; will be used. Any credentials stored in this file will not be used if &lt;code&gt;~/.git-credentials&lt;/code&gt; has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</source>
          <target state="translated">Второй файл учетных данных для конкретного пользователя. Если &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; не задан или пуст, будет использоваться &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; . Любые учетные данные, хранящиеся в этом файле, не будут использоваться, если &lt;code&gt;~/.git-credentials&lt;/code&gt; также имеет соответствующие учетные данные. Не создавайте этот файл, если вы иногда используете старые версии Git, которые его не поддерживают.</target>
        </trans-unit>
        <trans-unit id="b5c3361c98212e9d042aaaa5b0c10d9a1a465d8b" translate="yes" xml:space="preserve">
          <source>Second, repositories found in &lt;code&gt;/pub/scm/&lt;/code&gt; and &lt;code&gt;/var/git/&lt;/code&gt; will be accessible through &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; and &lt;code&gt;http://git.example.org/var/&lt;/code&gt;. You can add as many project roots as you want by adding rewrite rules like the third and the fourth.</source>
          <target state="translated">Во-вторых, репозитории, находящиеся в &lt;code&gt;/pub/scm/&lt;/code&gt; и &lt;code&gt;/var/git/&lt;/code&gt; будут доступны через &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; и &lt;code&gt;http://git.example.org/var/&lt;/code&gt; . Вы можете добавить столько корней проекта, сколько захотите, добавив такие правила перезаписи, как третий и четвертый.</target>
        </trans-unit>
        <trans-unit id="0d5abfbb7006b1c4a1d7df3783d45b48d9d41d48" translate="yes" xml:space="preserve">
          <source>Seconds wait before reconnecting to smtp server. See also the &lt;code&gt;--relogin-delay&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">Секунды ждут перед повторным подключением к SMTP-серверу. См. Также параметр &lt;code&gt;--relogin-delay&lt;/code&gt; в &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16adbe8ae2ec1d5ce021aca603249932e4af29cb" translate="yes" xml:space="preserve">
          <source>Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:</source>
          <target state="translated">Разделы могут быть далее разделены на подразделы.Для начала подраздела заключите его имя в двойные кавычки,отделенные пробелом от названия секции,в заголовок секции,как в примере ниже:</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="cb670e82b44c131414fdd62cec2e2271a0c3e1ce" translate="yes" xml:space="preserve">
          <source>See &quot;Reset, restore and revert&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for the differences between the three commands.</source>
          <target state="translated">См. &amp;laquo;Сброс, восстановление и возврат&amp;raquo; в &lt;a href=&quot;git&quot;&gt;git [1],&lt;/a&gt; чтобы узнать о различиях между этими тремя командами.</target>
        </trans-unit>
        <trans-unit id="449a31d4b9b49095d0b90df41f056d43c8512f47" translate="yes" xml:space="preserve">
          <source>See &amp;ldquo;Responses To Commands&amp;rdquo; below for details about how to read this output safely.</source>
          <target state="translated">См. &amp;laquo;Ответы на команды&amp;raquo; ниже для получения подробной информации о том, как безопасно читать этот вывод.</target>
        </trans-unit>
        <trans-unit id="814949d103c65b43b61081c8789235b00c3553fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">См. &lt;a href=&quot;api-trace2&quot;&gt;Подробную информацию в документации Trace2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b53c26f4c249563ab9682d7689da982420c04631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;git-add&quot;&gt;Git-add [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa55cebc3f97b3ec5f8f25b42d230a3ac0a7871d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="927ac170ac73e3dd929a2427d80cab2492ff1deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for core variables and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for settings related to diff generation.</source>
          <target state="translated">См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; для основных переменных и &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; для настроек, связанных с генерацией различий.</target>
        </trans-unit>
        <trans-unit id="29e0897ca1f4dba055ef02d2ee4ea34bca59c450" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details on the configuration options mentioned above and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for more details on the refspec syntax.</source>
          <target state="translated">См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; для получения дополнительных сведений о параметрах конфигурации, упомянутых выше, и &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; для получения дополнительных сведений о синтаксисе refspec.</target>
        </trans-unit>
        <trans-unit id="c85dd3188b261218c6ce78dddb7cf27f02c4e498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for the full list of supported options.</source>
          <target state="translated">См. &lt;a href=&quot;git-diff&quot;&gt;Git-diff [1]&lt;/a&gt; для получения полного списка поддерживаемых опций.</target>
        </trans-unit>
        <trans-unit id="873eafed92c6d143cde4cdd22e9f2f62fb8eab44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details, including how conflicts are presented and handled.</source>
          <target state="translated">См. &lt;a href=&quot;git-merge&quot;&gt;Git-merge [1]&lt;/a&gt; для получения подробной информации, в том числе о том, как отображаются и обрабатываются конфликты.</target>
        </trans-unit>
        <trans-unit id="a1dbf552c05185bb952ce9cddaaca48b3f486c1e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for some hints on resolving such conflicts.</source>
          <target state="translated">См. &lt;a href=&quot;git-merge&quot;&gt;Git-merge [1]&lt;/a&gt; для некоторых советов по разрешению таких конфликтов.</target>
        </trans-unit>
        <trans-unit id="750a5c09f00fba2da655305aeb20c963fba7eb6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for options to generate new packs and replace existing ones.</source>
          <target state="translated">См. &lt;a href=&quot;git-repack&quot;&gt;Git-repack [1]&lt;/a&gt; , чтобы узнать о вариантах создания новых пакетов и замены существующих.</target>
        </trans-unit>
        <trans-unit id="f51d5b8b3fb6117dc301434a5ecd4dd13bfc3fc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description.</source>
          <target state="translated">См. Описание в &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55b7b7d87b2ef94a0c0800814d27411d440df3c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description. Note that this setting is not subject to the &lt;code&gt;identity&lt;/code&gt; mechanism.</source>
          <target state="translated">См. Описание в &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; . Обратите внимание, что этот параметр не зависит от механизма &lt;code&gt;identity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="356db06bc40009203665e547b41d48a6fe47dfb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;git-shortlog&quot;&gt;Git-shortlog [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="816c081fd3a62310db506118ba38e561a6d69e40" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for the details.</source>
          <target state="translated">Подробнее см. &lt;a href=&quot;gitcvs-migration&quot;&gt;Gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a58028451af0f9f542d0d8f8d9f591126508cad5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more general info on hook execution.</source>
          <target state="translated">См. &lt;a href=&quot;githooks&quot;&gt;Githooks [5]&lt;/a&gt; для получения более общей информации о выполнении хуков.</target>
        </trans-unit>
        <trans-unit id="ba609b5467f233e457aa9eddbdd4e4c279fc02c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for a detailed explanation of the syntax. You can also place .gitignore files in other directories in your working tree, and they will apply to those directories and their subdirectories. The &lt;code&gt;.gitignore&lt;/code&gt; files can be added to your repository like any other files (just run &lt;code&gt;git add
.gitignore&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;, as usual), which is convenient when the exclude patterns (such as patterns matching build output files) would also make sense for other users who clone your repository.</source>
          <target state="translated">См. &lt;a href=&quot;gitignore&quot;&gt;Gitignore [5]&lt;/a&gt; для подробного объяснения синтаксиса. Вы также можете размещать файлы .gitignore в других каталогах вашего рабочего дерева, и они будут применяться к этим каталогам и их подкаталогам. В &lt;code&gt;.gitignore&lt;/code&gt; файлы могут быть добавлены в хранилище , как и любые другие файлы (просто запустить &lt;code&gt;git add .gitignore&lt;/code&gt; и &lt;code&gt;git commit&lt;/code&gt; , как обычно), что удобно , когда шаблоны исключаемых (например, шаблоны , соответствующих выходных файлов сборки) также имеет смысл для другие пользователи, которые клонируют ваш репозиторий.</target>
        </trans-unit>
        <trans-unit id="6c08679dcde5f574a046d2c372d4d13c77c14f09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to $GIT_DIR or $GIT_COMMON_DIR when you need to directly access something inside $GIT_DIR. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">См. &lt;a href=&quot;gitrepository-layout&quot;&gt;Gitrepository-layout [5]&lt;/a&gt; для получения дополнительной информации. Практическое правило - не делать никаких предположений о том, принадлежит ли путь к $ GIT_DIR или $ GIT_COMMON_DIR, когда вам нужно получить прямой доступ к чему-либо внутри $ GIT_DIR. Используйте &lt;code&gt;git rev-parse --git-path&lt;/code&gt; , чтобы получить окончательный путь.</target>
        </trans-unit>
        <trans-unit id="68978af0c4229a0c7ad3871d3bd5d420a7abb9f0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; when you need to directly access something inside &lt;code&gt;$GIT_DIR&lt;/code&gt;. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0cffbb9b88d8945c0266619dda8f84ab7a60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; to get started, then see &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt; for a useful minimum set of commands. The &lt;a href=&quot;user-manual&quot;&gt;Git User&amp;rsquo;s Manual&lt;/a&gt; has a more in-depth introduction.</source>
          <target state="translated">См. &lt;a href=&quot;gittutorial&quot;&gt;Gittutorial [7],&lt;/a&gt; чтобы начать работу, затем см. &lt;a href=&quot;giteveryday&quot;&gt;Giteveryday [7]&lt;/a&gt; для получения полезного минимального набора команд. Руководство &lt;a href=&quot;user-manual&quot;&gt;пользователя Git&lt;/a&gt; содержит более подробное введение.</target>
        </trans-unit>
        <trans-unit id="edb8fa06792cc06c9610f82e7507e11aaf0b3a79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for description.</source>
          <target state="translated">См. &lt;a href=&quot;gitweb&quot;&gt;Описание в gitweb [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="551344f7c6d18aeed126c268a4887b60ea41a732" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for description.</source>
          <target state="translated">См. &lt;a href=&quot;gitweb.conf&quot;&gt;Описание в gitweb.conf [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b24fd2d7766898a78228977078b6f143b9eddd17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows[7]&lt;/a&gt; for an overview of recommended workflows.</source>
          <target state="translated">См. &lt;a href=&quot;gitworkflows&quot;&gt;Gitworkflows [7]&lt;/a&gt; для обзора рекомендуемых рабочих процессов.</target>
        </trans-unit>
        <trans-unit id="c5aaf5106e04565ca03205c2325b61134a265836" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; for gitweb source code, browsed using gitweb itself.</source>
          <target state="translated">См &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; для исходного кода GitWeb, просматриваться с помощью самого GitWeb.</target>
        </trans-unit>
        <trans-unit id="cf4e44a1f9a750a558dfae089d3110695a154f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi-pack-index&quot;&gt;The Multi-Pack-Index Design Document&lt;/a&gt; and &lt;a href=&quot;pack-format&quot;&gt;The Multi-Pack-Index Format&lt;/a&gt; for more information on the multi-pack-index feature.</source>
          <target state="translated">См &lt;a href=&quot;multi-pack-index&quot;&gt;Multi-Pack-Index Design Document&lt;/a&gt; и &lt;a href=&quot;pack-format&quot;&gt;Формат Multi-Pack-Index&lt;/a&gt; для получения дополнительной информации о функции мульти-пак-индекса.</target>
        </trans-unit>
        <trans-unit id="119e1af35250f977a84e7e9b44e17bab322217d6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;filemodify&lt;/code&gt; above for a detailed description of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">См. &lt;code&gt;filemodify&lt;/code&gt; выше для подробного описания &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5e5425cc0264ed1e0714353419a5218265f25cb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;p4 help revisions&lt;/code&gt; for the full syntax of p4 revision specifiers.</source>
          <target state="translated">Полный синтаксис спецификаторов ревизий &lt;code&gt;p4 help revisions&lt;/code&gt; см. В справке по версии p4.</target>
        </trans-unit>
        <trans-unit id="349e8ba30a5911b964eb56ddd5398d0c455fca71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;pull.rebase&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; and &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; if you want to make &lt;code&gt;git pull&lt;/code&gt; always use &lt;code&gt;--rebase&lt;/code&gt; instead of merging.</source>
          <target state="translated">См. &lt;code&gt;pull.rebase&lt;/code&gt; , &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; и &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1],&lt;/a&gt; если вы хотите, чтобы &lt;code&gt;git pull&lt;/code&gt; всегда использовал &lt;code&gt;--rebase&lt;/code&gt; вместо слияния.</target>
        </trans-unit>
        <trans-unit id="6821589cea1a5f5eeaa157482f5875c8dd6c83e8" translate="yes" xml:space="preserve">
          <source>See OPTIONS for a list of currently defined options.</source>
          <target state="translated">См.раздел ВАРИАНТЫ,где приведен список определенных в настоящее время опций.</target>
        </trans-unit>
        <trans-unit id="a7e489653a4ac322711d151924724bebeaab7578" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes.</source>
          <target state="translated">Список атрибутов,определенных в настоящее время,см.в разделе REF LIST ATTRIBUTES.</target>
        </trans-unit>
        <trans-unit id="3f21653c235501bb7bff551e983de8d0a4c4aca2" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes. See REF LIST KEYWORDS for a list of currently defined keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="ed7577b94e1ee464c75f81cac37b66a6926c7436" translate="yes" xml:space="preserve">
          <source>See also &quot;Repositories&quot; and later subsections in &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">См. Также &amp;laquo;Репозитории&amp;raquo; и последующие подразделы &lt;a href=&quot;gitweb&quot;&gt;справочной страницы gitweb [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52af4d47e0ed6dc8c81958e8938b6aa167c96389" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;#FILES&quot;&gt;ФАЙЛЫ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcd469ab484a6e7e06726ac525a02976b65d3216" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#git-quick-start&quot;&gt;Git Quick Reference&lt;/a&gt; for a brief overview of Git commands, without any explanation.</source>
          <target state="translated">См. Также &lt;a href=&quot;#git-quick-start&quot;&gt;Краткий справочник Git&lt;/a&gt; для краткого обзора команд Git без каких-либо объяснений.</target>
        </trans-unit>
        <trans-unit id="776296c90f2638f4facdccd84ed267d15501958e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for a more user-friendly way to do some of the most common operations on the index.</source>
          <target state="translated">См. Также &lt;a href=&quot;git-add&quot;&gt;git-add [1],&lt;/a&gt; где описан более удобный способ выполнения некоторых из наиболее распространенных операций с индексом.</target>
        </trans-unit>
        <trans-unit id="7d2d6e7dcb0c9c7bc63cd26813647bc47c39be07" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07d3f2d4e9abbb86fc4947deaf4abd1a8839b08a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; and &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&lt;/a&gt; for further information.</source>
          <target state="translated">См. Также &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; и &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns .org /&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="1c13efbf0ce0a3c500629d1824fbdc470face67d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;%avatar_size&lt;/code&gt; with pixel sizes for icons and avatars (&quot;default&quot; is used for one-line like &quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot; is used for two-line like &quot;commit&quot;, &quot;commitdiff&quot; or &quot;tag&quot;). If the default font sizes or lineheights are changed (e.g. via adding extra CSS stylesheet in &lt;code&gt;@stylesheets&lt;/code&gt;), it may be appropriate to change these values.</source>
          <target state="translated">См. Также &lt;code&gt;%avatar_size&lt;/code&gt; с размерами пикселей для значков и аватаров (&amp;laquo;default&amp;raquo; используется для однострочных, таких как &amp;laquo;log&amp;raquo; и &amp;laquo;shortlog&amp;raquo;, &amp;laquo;double&amp;raquo; используется для двухстрочных, таких как &amp;laquo;commit&amp;raquo;, &amp;laquo;commitdiff&amp;raquo; или &amp;laquo;tag&amp;raquo; &amp;laquo;). Если размеры шрифта по умолчанию или высота строк изменены (например, путем добавления дополнительной таблицы стилей CSS в &lt;code&gt;@stylesheets&lt;/code&gt; ), может оказаться целесообразным изменить эти значения.</target>
        </trans-unit>
        <trans-unit id="ef4059c160d59845887bc762e1d3b94b36ac9cb5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; и раздел PRUNING в &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97a52221a6fcfc08e94858dbbd32d431c7460334" translate="yes" xml:space="preserve">
          <source>See also INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">См.также ПРИМЕЧАНИЕ ВНИМАНИЙ ниже.</target>
        </trans-unit>
        <trans-unit id="da70e539ebd47fc0666afc11774bbce890e2d57d" translate="yes" xml:space="preserve">
          <source>See also REBASING MERGES and INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">См.также РЕБАЗИРОВАНИЕ РЕЗУЛЬТАТОВ и НЕОБХОДИМОЙСТВЕННЫЕ ВАРИАНТЫ,приведенные ниже.</target>
        </trans-unit>
        <trans-unit id="e1cfc7a6ae7eb249f6af4e953ed0aa13e7a9f32c" translate="yes" xml:space="preserve">
          <source>See also more involved example in &quot;Controlling access to Git repositories&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">См. Также более &lt;a href=&quot;gitweb&quot;&gt;подробный&lt;/a&gt; пример в подразделе &amp;laquo;Управление доступом к репозиториям Git&amp;raquo; на странице руководства gitweb [1] .</target>
        </trans-unit>
        <trans-unit id="a90b35f1bca4c9661af072a420272419d14c9fa7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt; documents for some useful examples.</source>
          <target state="translated">См. Также полезные примеры в документации с &lt;a href=&quot;howto-index&quot;&gt;инструкциями&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6727f96125b7533ade941bf6b96be91f1faec003" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--amend&lt;/code&gt; option to &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">См. Также параметр &lt;code&gt;--amend&lt;/code&gt; для &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d4e5e0e34b4d53289a1425851b494735221ec25" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--negotiation-tip&lt;/code&gt; option for &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">См. Также параметр &lt;code&gt;--negotiation-tip&lt;/code&gt; для &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="393dae9d9c5b724b3e92a8007628ecdf490bf229" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; configuration variable documented in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; конфигурации fetch.negotiationAlgorithm, задокументированную в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b34c3a53a35e7fde45b0dcf380dd07a6f67e09b3" translate="yes" xml:space="preserve">
          <source>See below for a detailed description of the &lt;code&gt;data&lt;/code&gt; command.</source>
          <target state="translated">См. Ниже подробное описание команды &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b157460c4f4c3bf67bdbeab995004fb808185e8" translate="yes" xml:space="preserve">
          <source>See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details on the configuration file. The file is plain text, so you can also edit it with your favorite editor.</source>
          <target state="translated">См. Раздел &amp;laquo;ФАЙЛ КОНФИГУРАЦИИ&amp;raquo; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; для получения подробной информации о файле конфигурации. Это обычный текстовый файл, поэтому вы также можете редактировать его в своем любимом редакторе.</target>
        </trans-unit>
        <trans-unit id="1149bacaf9085ecc4180307d6ae05e8d61573cee" translate="yes" xml:space="preserve">
          <source>See the &quot;PRETTY FORMATS&quot; section for some additional details for each format. When &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; part is omitted, it defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">См. Раздел &amp;laquo;СОВЕРШЕННЫЕ ФОРМАТЫ&amp;raquo; для получения дополнительной информации о каждом формате. Если часть &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; опущена, по умолчанию используется &lt;code&gt;medium&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16b5734b1a38c0fca2aa75fc8f5afb5e38171b76" translate="yes" xml:space="preserve">
          <source>See the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; configuration for a way to carry notes across commands that rewrite commits.</source>
          <target state="translated">См. Конфигурацию &quot;notes.rewrite. &amp;lt;command&amp;gt;&quot;, чтобы узнать, как переносить примечания к командам, которые перезаписывают коммиты.</target>
        </trans-unit>
        <trans-unit id="37c9890c0abc7db617d319f8c623b95994d12d01" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; manpages for further usage notes.</source>
          <target state="translated">См. Справочные страницы &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; и &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; для дальнейших примечаний по использованию.</target>
        </trans-unit>
        <trans-unit id="664aa71d1d2c6ad85c41bdce7b1df31a05aeb0c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command to learn how to create and verify tag objects. (Note that &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; can also be used to create &quot;lightweight tags&quot;, which are not tag objects at all, but just simple references whose names begin with &lt;code&gt;refs/tags/&lt;/code&gt;).</source>
          <target state="translated">См. &lt;a href=&quot;git-tag&quot;&gt;Команду git-tag [1],&lt;/a&gt; чтобы узнать, как создавать и проверять объекты тегов. (Обратите внимание, что &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; также может использоваться для создания &amp;laquo;легких тегов&amp;raquo;, которые вообще не являются объектами тегов, а просто простыми ссылками, имена которых начинаются с &lt;code&gt;refs/tags/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d438ee28fcc5eac2c57090871716c0835edb3fb6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for more details.</source>
          <target state="translated">См. Дополнительные сведения в &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;инструкции&lt;/a&gt; по восстановлению ошибочного слияния .</target>
        </trans-unit>
        <trans-unit id="36ef80def8fdcd62acbd00beaaea20020f8c5e10" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--pretty&lt;/code&gt; option in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; man page for more display options.</source>
          <target state="translated">См. &lt;code&gt;--pretty&lt;/code&gt; на странице руководства &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; для получения дополнительных параметров отображения.</target>
        </trans-unit>
        <trans-unit id="4059094394364c65c4e256eefa4143bc85285e53" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; option above for more details.</source>
          <target state="translated">Подробнее см. &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="cdbbd93582a076d15bd34c470fc66d5137cf3c4d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--trust-exit-code&lt;/code&gt; option above for more details.</source>
          <target state="translated">См. &lt;code&gt;--trust-exit-code&lt;/code&gt; выше для получения дополнительных сведений.</target>
        </trans-unit>
        <trans-unit id="b8e91773464e68ddb68c67818ddc930117958012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.auto&lt;/code&gt; option in the &quot;CONFIGURATION&quot; section below for how this heuristic works.</source>
          <target state="translated">См. &lt;code&gt;gc.auto&lt;/code&gt; в разделе &amp;laquo;КОНФИГУРАЦИЯ&amp;raquo; ниже, чтобы узнать, как работает эта эвристика.</target>
        </trans-unit>
        <trans-unit id="3aa11a07b044aa013b3901191823f51922a8ff20" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; configuration variable below. When in use, it&amp;rsquo;ll affect how the auto pack limit works.</source>
          <target state="translated">См. &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; конфигурации gc.bigPackThreshold ниже. При использовании это повлияет на работу ограничения автоматической упаковки.</target>
        </trans-unit>
        <trans-unit id="3053c5245151cb0daaf5d132e8a14e630a595774" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">См. Запись &lt;code&gt;pathspec&lt;/code&gt; в &lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75fe9e67c24619f5763d970fe2b63e0643ff0b35" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pickaxe&lt;/code&gt; entry in &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt; for more information.</source>
          <target state="translated">См. Запись о &lt;code&gt;pickaxe&lt;/code&gt; в &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="83948d6384607ede7321a1e18da150f9a73d4146" translate="yes" xml:space="preserve">
          <source>See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">См. Раздел &amp;laquo;КОНФИГУРАЦИЯ&amp;raquo; для &lt;code&gt;sendemail.multiEdit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7f0c85a1fe22d7a44e2019c11a92087c61176c9" translate="yes" xml:space="preserve">
          <source>See the PRUNING section below for more details.</source>
          <target state="translated">Более подробную информацию см.в разделе РАЗМЕЩЕНИЕ.</target>
        </trans-unit>
        <trans-unit id="642ced677c18bf15d387f97024a58b4d20d0707e" translate="yes" xml:space="preserve">
          <source>See the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for what it&amp;rsquo;ll prune depending on various configuration.</source>
          <target state="translated">См. Раздел ОБРАБОТКА &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1],&lt;/a&gt; чтобы узнать, что он будет сокращать в зависимости от конфигурации.</target>
        </trans-unit>
        <trans-unit id="8b23758c15811b8a84155a82ad559efc97bcaf83" translate="yes" xml:space="preserve">
          <source>See the add subcommand for the definition of default remote.</source>
          <target state="translated">См.подкоманду добавления для определения удаленного по умолчанию.</target>
        </trans-unit>
        <trans-unit id="7b02d435af668a3154c5db21e5216702c6ccada1" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--depth&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">Дополнительную информацию смотрите в документации по опции &lt;code&gt;--depth&lt;/code&gt; в &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a5c36fc0819626b74533177ce4ae892455a3785" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--window&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">См. Документацию по параметру &lt;code&gt;--window&lt;/code&gt; в &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; для получения дополнительных сведений.</target>
        </trans-unit>
        <trans-unit id="3fcb475ca761c4788b65bc17cc61cddb7ffeaae1" translate="yes" xml:space="preserve">
          <source>See the explanations of the &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;, and &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">См &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt; параметров remote. &amp;lt;name&amp;gt; .url , &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; и &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f33051f0ff2a32371d05cfc9580039d116c83c4" translate="yes" xml:space="preserve">
          <source>See the file gitweb/INSTALL in the Git source tree and &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for instructions on details setting up a permanent installation with a CGI or Perl capable server.</source>
          <target state="translated">См. Файл gitweb / INSTALL в дереве исходных кодов Git и &lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt; для получения инструкций по настройке постоянной установки с сервером с поддержкой CGI или Perl.</target>
        </trans-unit>
        <trans-unit id="7471ce55c909897f892e3510360e845c3a8c6f7d" translate="yes" xml:space="preserve">
          <source>See the notes on the quarantine environment below.</source>
          <target state="translated">См.примечания по карантину ниже.</target>
        </trans-unit>
        <trans-unit id="38b41ff72286b874a0f3db64c92581ef765256ff" translate="yes" xml:space="preserve">
          <source>See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user.</source>
          <target state="translated">Для начала работы с Git'ом ознакомьтесь со ссылками в разделе &quot;Описание&quot;.Нижеследующее,вероятно,более подробно,чем это необходимо для начинающего пользователя.</target>
        </trans-unit>
        <trans-unit id="3a308d2b2b8eed03e46d2f6cf143cfa2acb546c2" translate="yes" xml:space="preserve">
          <source>See the section describing &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; above for a discussion of the matching semantics.</source>
          <target state="translated">См. Раздел, описывающий &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; выше для обсуждения семантики соответствия.</target>
        </trans-unit>
        <trans-unit id="ff8a65e5a8b50b2cd32960f644c92d05159f0bd7" translate="yes" xml:space="preserve">
          <source>See the section on &quot;Quarantine Environment&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for some caveats.</source>
          <target state="translated">См. Раздел &amp;laquo;Среда карантина&amp;raquo; в &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]&lt;/a&gt; для некоторых предостережений.</target>
        </trans-unit>
        <trans-unit id="f11ef173da292966d44f74e581bfe70f66e03523" translate="yes" xml:space="preserve">
          <source>See what files &lt;code&gt;git submodule&lt;/code&gt; created:</source>
          <target state="translated">Посмотрите, какие файлы созданы &lt;code&gt;git submodule&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9cf656c9a09d4ac0135f6d95a0f9e062689ebbd6" translate="yes" xml:space="preserve">
          <source>Select &quot;Create a new project &amp;rarr; From CVS checkout&quot;</source>
          <target state="translated">Выберите &amp;laquo;Создать новый проект &amp;rarr; Из оформления CVS&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4295d4906e2ecc1e09bb3b7dd2f7bb2e8c0aa11e" translate="yes" xml:space="preserve">
          <source>Select file contents to include in the next commit, then make the commit:</source>
          <target state="translated">Выберите содержимое файла для включения в следующий коммит,затем выполните коммит:</target>
        </trans-unit>
        <trans-unit id="5458b52d7bc655d716d7b187eb088a80fdb02862" translate="yes" xml:space="preserve">
          <source>Select non-matching lines.</source>
          <target state="translated">Выберите несовпадающие линии.</target>
        </trans-unit>
        <trans-unit id="8cb11cd07f748f144ab7c53fba5e088fa9457785" translate="yes" xml:space="preserve">
          <source>Select only files that are Added (&lt;code&gt;A&lt;/code&gt;), Copied (&lt;code&gt;C&lt;/code&gt;), Deleted (&lt;code&gt;D&lt;/code&gt;), Modified (&lt;code&gt;M&lt;/code&gt;), Renamed (&lt;code&gt;R&lt;/code&gt;), have their type (i.e. regular file, symlink, submodule, &amp;hellip;​) changed (&lt;code&gt;T&lt;/code&gt;), are Unmerged (&lt;code&gt;U&lt;/code&gt;), are Unknown (&lt;code&gt;X&lt;/code&gt;), or have had their pairing Broken (&lt;code&gt;B&lt;/code&gt;). Any combination of the filter characters (including none) can be used. When &lt;code&gt;*&lt;/code&gt; (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</source>
          <target state="translated">Выберите только файлы, которые были добавлены ( &lt;code&gt;A&lt;/code&gt; ), скопированы ( &lt;code&gt;C&lt;/code&gt; ), удалены ( &lt;code&gt;D&lt;/code&gt; ), изменены ( &lt;code&gt;M&lt;/code&gt; ), переименованы ( &lt;code&gt;R&lt;/code&gt; ), их тип (например, обычный файл, символическая ссылка, подмодуль и т. Д.) Изменен ( &lt;code&gt;T&lt;/code&gt; ), Не объединены ( &lt;code&gt;U&lt;/code&gt; ), Неизвестны ( &lt;code&gt;X&lt;/code&gt; ) или их пара Сломана ( &lt;code&gt;B&lt;/code&gt; ). Можно использовать любую комбинацию символов фильтра (включая отсутствие). Когда &lt;code&gt;*&lt;/code&gt; (Все или ничего) добавляется к комбинации, все пути выбираются, если есть какой-либо файл, который соответствует другим критериям в сравнении; если нет файла, соответствующего другим критериям, ничего не выбирается.</target>
        </trans-unit>
        <trans-unit id="9d25b5bb0ae1f31c2bf194221afe3b7c5ccd5c79" translate="yes" xml:space="preserve">
          <source>Select the specified commit after loading the graph. Default behavior is equivalent to specifying &lt;code&gt;--select-commit=HEAD&lt;/code&gt;.</source>
          <target state="translated">После загрузки графика выберите указанную фиксацию. Поведение по умолчанию эквивалентно указанию &lt;code&gt;--select-commit=HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57773e54b07c6d2a3694e83fd05fece4b0d947e7" translate="yes" xml:space="preserve">
          <source>Send a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">Отправить &quot;тонкий&quot; пакет,который записывает объекты в расслоенном виде на основе объектов,не входящих в пакет,чтобы уменьшить сетевой трафик.</target>
        </trans-unit>
        <trans-unit id="dba975b50e1dab9f5a9242dc7eff168b3f3c3097" translate="yes" xml:space="preserve">
          <source>Send a collection of patches as emails</source>
          <target state="translated">Отправить коллекцию патчей по электронной почте</target>
        </trans-unit>
        <trans-unit id="68bbb0e77605fda568edfbf41010fd23ca67e845" translate="yes" xml:space="preserve">
          <source>Send a collection of patches from stdin to an IMAP folder</source>
          <target state="translated">Отправка коллекции патчей из stdin в папку IMAP</target>
        </trans-unit>
        <trans-unit id="9e60bdff05a0f017374a45f7533dd42ce19f567b" translate="yes" xml:space="preserve">
          <source>Send archive back to git-archive</source>
          <target state="translated">Отправить архив обратно в git-архив</target>
        </trans-unit>
        <trans-unit id="06c77ce9ef53aee9301f7f13788f25846ac20a8c" translate="yes" xml:space="preserve">
          <source>Send emails even if safety checks would prevent it.</source>
          <target state="translated">Отправляйте электронные письма,даже если проверка безопасности предотвратит это.</target>
        </trans-unit>
        <trans-unit id="be63d2739b30ca972f203afdf956fffed1109d64" translate="yes" xml:space="preserve">
          <source>Send log messages to the specified destination. Note that this option does not imply --verbose, thus by default only error conditions will be logged. The &amp;lt;destination&amp;gt; must be one of:</source>
          <target state="translated">Отправлять сообщения журнала в указанное место назначения. Обратите внимание, что эта опция не подразумевает --verbose, поэтому по умолчанию будут регистрироваться только ошибки. &amp;lt;Назначение&amp;gt; должно быть одним из:</target>
        </trans-unit>
        <trans-unit id="251405e1d50dced2d303a34b1887abbae618fd89" translate="yes" xml:space="preserve">
          <source>Send objects packed back to git-fetch-pack</source>
          <target state="translated">Отправка объектов,упакованных обратно в git-fetch-пакет</target>
        </trans-unit>
        <trans-unit id="30587fd7018a9775c3e41757ae3e2ad3d70bd2fe" translate="yes" xml:space="preserve">
          <source>Send results to standard output instead of overwriting &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Отправлять результаты на стандартный вывод вместо перезаписи &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d06a389aa194b4adb3bdedb6cd48b760831d80a" translate="yes" xml:space="preserve">
          <source>Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address.</source>
          <target state="translated">Отправьте патч самому себе,именно так,как вы бы хотели,за исключением строк To:и Cc:,которые не содержат списка и адреса сопровождающего.</target>
        </trans-unit>
        <trans-unit id="ceafde86d6c97e1f3a1eee505d203dadbe2732aa" translate="yes" xml:space="preserve">
          <source>Sending</source>
          <target state="translated">Sending</target>
        </trans-unit>
        <trans-unit id="bbde4ea1647345dcea60ec05d6e174947edc5729" translate="yes" xml:space="preserve">
          <source>Sending &lt;strong&gt;SIGUSR1&lt;/strong&gt; to the &lt;code&gt;git fast-import&lt;/code&gt; process ends the current packfile early, simulating a &lt;code&gt;checkpoint&lt;/code&gt; command. The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression.</source>
          <target state="translated">Отправка &lt;strong&gt;SIGUSR1&lt;/strong&gt; в процесс &lt;code&gt;git fast-import&lt;/code&gt; завершает текущий пакетный файл раньше, имитируя команду &lt;code&gt;checkpoint&lt;/code&gt; . Нетерпеливый оператор может использовать эту возможность для просмотра объектов и ссылок из выполняемого импорта за счет некоторого дополнительного времени выполнения и худшего сжатия.</target>
        </trans-unit>
        <trans-unit id="69d9f7cb6992812d3ae67c5832e95e51eb94b31e" translate="yes" xml:space="preserve">
          <source>Sends missing objects to remote repository, and updates the remote branch.</source>
          <target state="translated">Отправляет недостающие объекты в удаленное хранилище и обновляет удаленную ветку.</target>
        </trans-unit>
        <trans-unit id="23bbe7eedad5f66236da6f21a05fbf3a6d0c4e2b" translate="yes" xml:space="preserve">
          <source>Separate changes</source>
          <target state="translated">Отдельные изменения</target>
        </trans-unit>
        <trans-unit id="eff8ac5c6bf46b60a389d5ad12d1eb060f7f80df" translate="yes" xml:space="preserve">
          <source>Separate out other information hidden behind NUL bytes (e.g. agent string as a capability and symrefs can be requested using &lt;code&gt;ls-refs&lt;/code&gt;)</source>
          <target state="translated">Отделите другую информацию, скрытую за байтами NUL (например, строка агента как возможность, а ссылки на символы могут быть запрошены с помощью &lt;code&gt;ls-refs&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ece352ef8327b4eb0b177147a24a8ec2f1418b4f" translate="yes" xml:space="preserve">
          <source>Separate the commits with NULs instead of with new newlines.</source>
          <target state="translated">Разделите коммиты с помощью NUL,а не с помощью новых строк.</target>
        </trans-unit>
        <trans-unit id="fbdab030c0f541b63a6720cb36f79b58a8a8ddb3" translate="yes" xml:space="preserve">
          <source>Separates pathspec from options for disambiguation purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e497aff8340b70a81417c3e01a367bc04c018c" translate="yes" xml:space="preserve">
          <source>Separating argument from the option</source>
          <target state="translated">Отделение аргумента от опции</target>
        </trans-unit>
        <trans-unit id="ad1ff98d9455414907920436d0228d1f33b8b9d5" translate="yes" xml:space="preserve">
          <source>Sequence &quot;%f&quot; on the filter command line is replaced with the name of the file the filter is working on. A filter might use this in keyword substitution. For example:</source>
          <target state="translated">Последовательность &quot;%f&quot; в командной строке фильтра заменяется на имя файла,над которым работает фильтр.Фильтр может использовать это при подстановке ключевого слова.Например:</target>
        </trans-unit>
        <trans-unit id="0eabff0639877f6ba301a816aebe732d4b82d7eb" translate="yes" xml:space="preserve">
          <source>Sequencer subcommands</source>
          <target state="translated">Секвенсорные подкоманды</target>
        </trans-unit>
        <trans-unit id="4f86f0b14605788e8e970dd961527f669911f656" translate="yes" xml:space="preserve">
          <source>Server Admin</source>
          <target state="translated">Администратор сервера</target>
        </trans-unit>
        <trans-unit id="bf86016aaef42ea05ae67a04c37100e13cf311bf" translate="yes" xml:space="preserve">
          <source>Server side implementation of Git over HTTP</source>
          <target state="translated">Внедрение Git over HTTP на стороне сервера</target>
        </trans-unit>
        <trans-unit id="448833463540a7335612a7134526ca62a325b6eb" translate="yes" xml:space="preserve">
          <source>Server-side syntax highlight support in &quot;blob&quot; view. It requires &lt;code&gt;$highlight_bin&lt;/code&gt; program to be available (see the description of this variable in the &quot;Configuration variables&quot; section above), and therefore is disabled by default.</source>
          <target state="translated">Поддержка подсветки синтаксиса на стороне сервера в представлении &amp;laquo;blob&amp;raquo;. Для этого требуется, чтобы была доступна программа &lt;code&gt;$highlight_bin&lt;/code&gt; (см. Описание этой переменной в разделе &amp;laquo;Переменные конфигурации&amp;raquo; выше), поэтому по умолчанию она отключена.</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="3c9afc64e385fe9ff937f49ef33cea7eda6d2e43" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;ref&amp;gt; to &amp;lt;newvalue&amp;gt; after verifying &amp;lt;oldvalue&amp;gt;, if given. Specify a zero &amp;lt;newvalue&amp;gt; to ensure the ref does not exist after the update and/or a zero &amp;lt;oldvalue&amp;gt; to make sure the ref does not exist before the update.</source>
          <target state="translated">Установите для &amp;lt;ref&amp;gt; значение &amp;lt;newvalue&amp;gt; после проверки &amp;lt;oldvalue&amp;gt;, если указано. Задайте нулевое значение &amp;lt;newvalue&amp;gt;, чтобы гарантировать, что ссылка не существует после обновления, и / или нулевое значение &amp;lt;oldvalue&amp;gt;, чтобы убедиться, что ссылка не существует до обновления.</target>
        </trans-unit>
        <trans-unit id="ab50837f4221ee62152d0a56b00aa01e36d1c0b1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;$maxload&lt;/code&gt; to undefined value (&lt;code&gt;undef&lt;/code&gt;) to turn this feature off. The default value is 300.</source>
          <target state="translated">Установите для &lt;code&gt;$maxload&lt;/code&gt; значение undefined ( &lt;code&gt;undef&lt;/code&gt; ), чтобы отключить эту функцию. Значение по умолчанию - 300.</target>
        </trans-unit>
        <trans-unit id="b447103879e346ae5dca39d0e8955736e891677f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;C'&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">Набор &lt;code&gt;C'&lt;/code&gt; для &lt;code&gt;C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c1de92d3e849c9a6ed15961e4d9552291b7de46" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a &lt;code&gt;git&lt;/code&gt; command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.</source>
          <target state="translated">Задайте &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; среды GIT_REFLOG_ACTION заданную строку (обычно имя программы), если она еще не установлена. Каждый раз, когда скрипт запускает команду &lt;code&gt;git&lt;/code&gt; , которая обновляет ссылки, создается запись журнала ссылок с использованием значения этой строки, чтобы оставить запись о том, какая команда обновила ссылку.</target>
        </trans-unit>
        <trans-unit id="38478f04f07d7922d4b7c7c155fa10a2d176d8aa" translate="yes" xml:space="preserve">
          <source>Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out. The key is in the same format as expected by &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; (e.g., &lt;code&gt;core.eol=true&lt;/code&gt;). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote.</source>
          <target state="translated">Установите переменную конфигурации во вновь созданном репозитории; это вступает в силу сразу после инициализации репозитория, но до извлечения удаленной истории или каких-либо файлов. Ключ находится в том же формате, что и &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; (например, &lt;code&gt;core.eol=true&lt;/code&gt; ). Если для одного и того же ключа задано несколько значений, каждое значение будет записано в файл конфигурации. Это делает безопасным, например, добавление дополнительных ссылок на выборку в исходный пульт.</target>
        </trans-unit>
        <trans-unit id="467cb3791c7eb0e6e17b468939871379585bf0d6" translate="yes" xml:space="preserve">
          <source>Set a custom directory to store the resulting files instead of the current working directory. All directory components will be created.</source>
          <target state="translated">Установите пользовательский каталог для хранения результирующих файлов вместо текущего рабочего каталога.Все компоненты каталога будут созданы.</target>
        </trans-unit>
        <trans-unit id="d443ac1fac5648ce0c972e61ba93f9dfa28cd774" translate="yes" xml:space="preserve">
          <source>Set a policy to be used by protocol &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with clone/fetch/push commands. See &lt;code&gt;protocol.allow&lt;/code&gt; above for the available policies.</source>
          <target state="translated">Установите политику, которая будет использоваться протоколом &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; с помощью команд clone / fetch / push. См. &lt;code&gt;protocol.allow&lt;/code&gt; доступных политик в protocol.allow выше.</target>
        </trans-unit>
        <trans-unit id="ffb09a5018db72662a7a10ef6bf79bb4e8417501" translate="yes" xml:space="preserve">
          <source>Set an alternative CVSROOT to use. This corresponds to the CVS -d parameter. Usually users will not want to set this, except if using CVS in an asymmetric fashion.</source>
          <target state="translated">Установите альтернативный CVSROOT для использования.Это соответствует параметру CVS -d.Обычно пользователи не хотят устанавливать это,за исключением случаев,когда CVS используется асимметрично.</target>
        </trans-unit>
        <trans-unit id="eb6b278f7896d8837cef70de53516ad86e9dbdad" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">Установите переменную среды &lt;code&gt;GIT_DIR&lt;/code&gt; . См. &lt;a href=&quot;git&quot;&gt;Git [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca1b08676b4e36a73ebf5696b8b5a7e5e3fbf70c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;noMetadata&lt;/code&gt; option in the [svn-remote] config. This option is not recommended, please read the &lt;code&gt;svn.noMetadata&lt;/code&gt; section of this manpage before using this option.</source>
          <target state="translated">Установите параметр &lt;code&gt;noMetadata&lt;/code&gt; в конфигурации [svn-remote]. Этот параметр не рекомендуется, пожалуйста, прочтите раздел &lt;code&gt;svn.noMetadata&lt;/code&gt; на этой странице руководства перед использованием этого параметра.</target>
        </trans-unit>
        <trans-unit id="29075e63ef31a9df87f17de44d7d1a90528328cf" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteRoot&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">Установите параметр &lt;code&gt;rewriteRoot&lt;/code&gt; в конфигурации [svn-remote].</target>
        </trans-unit>
        <trans-unit id="c2f253f2802c51ea11c741dbafd4f8bda616e672" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteUUID&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">Установите параметр &lt;code&gt;rewriteUUID&lt;/code&gt; в конфигурации [svn-remote].</target>
        </trans-unit>
        <trans-unit id="b54b27dbc703e4c4c112e37e3cc708e31cfd5c62" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvmProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">Установите параметр &lt;code&gt;useSvmProps&lt;/code&gt; в конфигурации [svn-remote].</target>
        </trans-unit>
        <trans-unit id="b1c79663eb36a223e3246a6761c3527b1fcb1cd9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvnsyncProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">Установите параметр &lt;code&gt;useSvnsyncProps&lt;/code&gt; в конфигурации [svn-remote].</target>
        </trans-unit>
        <trans-unit id="96cb52718c720acae8e359f2c3854a795081e029" translate="yes" xml:space="preserve">
          <source>Set the Git namespace. See &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for more details. Equivalent to setting the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable.</source>
          <target state="translated">Задайте пространство имен Git. См. &lt;a href=&quot;gitnamespaces&quot;&gt;Gitnamespaces [7]&lt;/a&gt; для получения более подробной информации. Эквивалентно установке переменной среды &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cb0d29338f1ad7db15e18be0474164e1bc21a46" translate="yes" xml:space="preserve">
          <source>Set the Git namespace; see &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for details. The &lt;code&gt;--namespace&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">Установите пространство имен Git; подробности см. в &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt; . &lt;code&gt;--namespace&lt;/code&gt; параметр командной строки также устанавливает это значение.</target>
        </trans-unit>
        <trans-unit id="ce505bfde263ccf76db605c3871e55681201849e" translate="yes" xml:space="preserve">
          <source>Set the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">Установите сообщение о фиксации,которое будет использоваться для фиксации слияния (в случае,если оно создано).</target>
        </trans-unit>
        <trans-unit id="60dd95cbd8809da88fe2e4f3deab8c8cfda23f9c" translate="yes" xml:space="preserve">
          <source>Set the creation/deletion cost fudge factor to &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt;. Defaults to 60. Try a larger value if &lt;code&gt;git range-diff&lt;/code&gt; erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case. See the ``Algorithm`` section below for an explanation why this is needed.</source>
          <target state="translated">Установите коэффициент подделки стоимости создания / удаления на &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt; . По умолчанию 60. Попробуйте увеличить значение, если &lt;code&gt;git range-diff&lt;/code&gt; ошибочно считает большое изменение полной перезаписью (удаление одной фиксации и добавление другой), а меньшее - в обратном случае. См. Раздел `` Алгоритм '' ниже для объяснения, почему это необходимо.</target>
        </trans-unit>
        <trans-unit id="e4867b6a9e4fdc121bda203b5824a86f390dc42c" translate="yes" xml:space="preserve">
          <source>Set the default date-time mode for the &lt;code&gt;log&lt;/code&gt; command. Setting a value for log.date is similar to using &lt;code&gt;git log&lt;/code&gt;'s &lt;code&gt;--date&lt;/code&gt; option. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for details.</source>
          <target state="translated">Установите режим даты и времени по умолчанию для команды &lt;code&gt;log&lt;/code&gt; . Установка значения для log.date аналогично использования &lt;code&gt;git log&lt;/code&gt; &amp;laquo;s &lt;code&gt;--date&lt;/code&gt; варианта. Подробнее см. &lt;a href=&quot;git-log&quot;&gt;Git-log [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="452331e44dbf8a551529f8aab3eb063db65f0f80" translate="yes" xml:space="preserve">
          <source>Set the default matching behavior. Using a value of &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;perl&lt;/code&gt; will enable the &lt;code&gt;--basic-regexp&lt;/code&gt;, &lt;code&gt;--extended-regexp&lt;/code&gt;, &lt;code&gt;--fixed-strings&lt;/code&gt;, or &lt;code&gt;--perl-regexp&lt;/code&gt; option accordingly, while the value &lt;code&gt;default&lt;/code&gt; will return to the default matching behavior.</source>
          <target state="translated">Установите поведение сопоставления по умолчанию. Использование значения &lt;code&gt;basic&lt;/code&gt; , &lt;code&gt;extended&lt;/code&gt; , &lt;code&gt;fixed&lt;/code&gt; или &lt;code&gt;perl&lt;/code&gt; включит параметр &lt;code&gt;--basic-regexp&lt;/code&gt; , &lt;code&gt;--extended-regexp&lt;/code&gt; , &lt;code&gt;--fixed-strings&lt;/code&gt; или &lt;code&gt;--perl-regexp&lt;/code&gt; соответственно, в то время как значение по &lt;code&gt;default&lt;/code&gt; вернется к поведение сопоставления по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0fa4faa1629ef6ce85f03023fc833f41e1dcd3a2" translate="yes" xml:space="preserve">
          <source>Set the execute permissions on the updated files.</source>
          <target state="translated">Установите права на выполнение для обновленных файлов.</target>
        </trans-unit>
        <trans-unit id="8fcbe8639628c30552376de3870da0a1897ef81f" translate="yes" xml:space="preserve">
          <source>Set the length object names are abbreviated to. If unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time. The minimum length is 4.</source>
          <target state="translated">Установите имена объектов длины в сокращенном виде.Если не указано или установлено значение &quot;auto&quot;,соответствующее значение вычисляется на основе приблизительного количества упакованных объектов в вашем хранилище,что,как мы надеемся,будет достаточно для того,чтобы сокращенные имена объектов оставались уникальными в течение некоторого времени.Минимальная длина составляет 4.</target>
        </trans-unit>
        <trans-unit id="1c984f4d67f4b1c5f797e0985cdc839cd8173298" translate="yes" xml:space="preserve">
          <source>Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy string contains a user name part (i.e. is of the form &lt;code&gt;user@host&lt;/code&gt; or &lt;code&gt;user@host:port&lt;/code&gt;). This can be overridden on a per-remote basis; see &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt;. Both can be overridden by the &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; environment variable. Possible values are:</source>
          <target state="translated">Установите метод аутентификации на прокси-сервере HTTP. Это вступает в силу только в том случае, если настроенная строка прокси содержит часть имени пользователя (т. &lt;code&gt;user@host&lt;/code&gt; форму пользователь @ хост или &lt;code&gt;user@host:port&lt;/code&gt; ). Это может быть отменено на удаленной основе; см. &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt; . Оба могут быть переопределены переменной среды &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; . Возможные значения:</target>
        </trans-unit>
        <trans-unit id="4531ba21b83c7504310183413d920d4e527a579c" translate="yes" xml:space="preserve">
          <source>Set the name of placeholder files created by --preserve-empty-dirs. Default: &quot;.gitignore&quot;</source>
          <target state="translated">Установите имя файлов-заполнителей,созданных по --preserve-empty-dirs.По умолчанию:&quot;.gitignore&quot;.</target>
        </trans-unit>
        <trans-unit id="9f6240dcaa583bb3021b3aca773ea9ba6bc9afa0" translate="yes" xml:space="preserve">
          <source>Set the path to the repository (&quot;.git&quot; directory). This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31570b84b8684acde4e9da43dbd6e7e3871cdd6e" translate="yes" xml:space="preserve">
          <source>Set the path to the repository. This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">Задайте путь к репозиторию. Этим также можно управлять, установив переменную среды &lt;code&gt;GIT_DIR&lt;/code&gt; . Это может быть абсолютный или относительный путь к текущему рабочему каталогу.</target>
        </trans-unit>
        <trans-unit id="400ea02361b1fdf84359f8c82c5dbc03e0cfd801" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. If &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; environment variable is set, core.worktree is ignored and not used for determining the root of working tree. This can be overridden by the &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; environment variable and the &lt;code&gt;--work-tree&lt;/code&gt; command-line option. The value can be an absolute path or relative to the path to the .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working directory is regarded as the top level of your working tree.</source>
          <target state="translated">Задайте путь к корню рабочего дерева. Если &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; переменная среды GIT_COMMON_DIR , core.worktree игнорируется и не используется для определения корня рабочего дерева. Это можно &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; переменной среды GIT_WORK_TREE и &lt;code&gt;--work-tree&lt;/code&gt; командной строки --work-tree . Значение может быть абсолютным путем или относительно пути к каталогу .git, который либо указан --git-dir или GIT_DIR, либо обнаруживается автоматически. Если --git-dir или GIT_DIR указаны, но не указаны --work-tree, GIT_WORK_TREE и core.worktree, текущий рабочий каталог считается верхним уровнем вашего рабочего дерева.</target>
        </trans-unit>
        <trans-unit id="e77cf9dbfa8bb073ac521b0115fcf267d700de96" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. This can also be controlled by the &lt;code&gt;--work-tree&lt;/code&gt; command-line option and the core.worktree configuration variable.</source>
          <target state="translated">Задайте путь к корню рабочего дерева. Это также можно контролировать с помощью &lt;code&gt;--work-tree&lt;/code&gt; командной строки --work-tree и переменной конфигурации core.worktree.</target>
        </trans-unit>
        <trans-unit id="3d76dd27e6c2a8b0058c2a945baf951d7f68aa28" translate="yes" xml:space="preserve">
          <source>Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a more detailed discussion).</source>
          <target state="translated">Задайте путь к рабочему дереву. Это может быть абсолютный путь или путь относительно текущего рабочего каталога. Этим также можно управлять, задав переменную среды GIT_WORK_TREE и переменную конфигурации core.worktree (см. Core.worktree в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; для более подробного обсуждения).</target>
        </trans-unit>
        <trans-unit id="ed921cb30a3554abcb258c374cc8879de4b6e735" translate="yes" xml:space="preserve">
          <source>Set the starting point at which to create the new commits to the merge base of &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Running &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; is equivalent to running &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Задайте начальную точку для создания новых коммитов на базе слияния &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Запуск &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; эквивалентен запуску &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6b13ff409b582dcf430b9ece41f38914d244e47" translate="yes" xml:space="preserve">
          <source>Set this option to &lt;code&gt;false&lt;/code&gt; to disable the default heuristics that shift diff hunk boundaries to make patches easier to read.</source>
          <target state="translated">Установите для этого параметра значение &lt;code&gt;false&lt;/code&gt; , чтобы отключить эвристику по умолчанию, которая смещает границы фрагментов различий для облегчения чтения исправлений.</target>
        </trans-unit>
        <trans-unit id="006b55776506e3606ed55b1bbce55137d0106c81" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver cache the text conversion outputs. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Установите для этого параметра значение true, чтобы драйвер diff кэшировал выходные данные преобразования текста. Подробнее см. &lt;a href=&quot;gitattributes&quot;&gt;Gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef5fd1abf8d8364854389e921b837341fb77c76d" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver treat files as binary. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Установите для этого параметра значение true, чтобы драйвер diff обрабатывал файлы как двоичные. Подробнее см. &lt;a href=&quot;gitattributes&quot;&gt;Gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef3e5c6a12efe8e7150b1e7869bbdde3d0dce7a8" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, and &lt;code&gt;pushNeedsForce&lt;/code&gt; simultaneously.</source>
          <target state="translated">Установите для этой переменной значение &lt;code&gt;false&lt;/code&gt; , если вы хотите одновременно отключить &lt;code&gt;pushNonFFCurrent&lt;/code&gt; , &lt;code&gt;pushNonFFMatching&lt;/code&gt; , &lt;code&gt;pushAlreadyExists&lt;/code&gt; , &lt;code&gt;pushFetchFirst&lt;/code&gt; и &lt;code&gt;pushNeedsForce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3942f1a8d8fbbbd45defb8fdf1e1532d95e95175" translate="yes" xml:space="preserve">
          <source>Set to 0 to prevent protocols used by fetch/push/clone which are configured to the &lt;code&gt;user&lt;/code&gt; state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">Установите значение 0, чтобы запретить использование протоколов fetch / push / clone, которые настроены на состояние &lt;code&gt;user&lt;/code&gt; . Это полезно для ограничения рекурсивной инициализации подмодуля из ненадежного репозитория или для программ, которые передают потенциально ненадежные URL-адреса командам git. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="b65b88faf09ed3e78aacba5ecd3c0b74f296551e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;change&lt;/code&gt; if you want changes in whitespace to be ignored by default. Set to one of: no, none, never, false if you want changes in whitespace to be significant.</source>
          <target state="translated">Установите для &lt;code&gt;change&lt;/code&gt; если вы хотите, чтобы изменения в пробелах игнорировались по умолчанию. Установите одно из: no, none, never, false, если вы хотите, чтобы изменения в пробелах были значительными.</target>
        </trans-unit>
        <trans-unit id="5365106003c727ad2992b276959d7e28e3f5d488" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to use the legacy shell script implementation of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Is &lt;code&gt;true&lt;/code&gt; by default, which means use the built-in rewrite of it in C.</source>
          <target state="translated">Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы использовать устаревшую реализацию сценария оболочки &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; . Есть &lt;code&gt;true&lt;/code&gt; , по умолчанию, которые используют средства встроенного переписывание его в C.</target>
        </trans-unit>
        <trans-unit id="55c516b6a3b5abf93c689c87b62d882f67783e93" translate="yes" xml:space="preserve">
          <source>Set to a value</source>
          <target state="translated">Установить значение</target>
        </trans-unit>
        <trans-unit id="126c88db7f15369f3dbc6085e635b28af0c85793" translate="yes" xml:space="preserve">
          <source>Set to false to enable &lt;code&gt;--no-show-forced-updates&lt;/code&gt; in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; and &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; commands. Defaults to true.</source>
          <target state="translated">Установите значение false, чтобы включить &lt;code&gt;--no-show-forced-updates&lt;/code&gt; в командах &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; и &lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt; . По умолчанию true.</target>
        </trans-unit>
        <trans-unit id="361b59fb11064babad5acb39754e365b2c18e181" translate="yes" xml:space="preserve">
          <source>Set to long name (git-upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">Установите длинное имя (git-upload-pack и т. Д.) Вспомогательного сервиса, который необходимо вызвать.</target>
        </trans-unit>
        <trans-unit id="4bc0f158fa5fccd4891458dbb2fe87fd0c2639c2" translate="yes" xml:space="preserve">
          <source>Set to long name (upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">Задайте длинное имя (пакет загрузки и т. Д.) Вспомогательной службы, которую необходимо вызвать.</target>
        </trans-unit>
        <trans-unit id="e57cc917cd5904e6e25fccb477e015eebd2cea7f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;auto&quot;</source>
          <target state="translated">Установить значение строки &quot;auto&quot;</target>
        </trans-unit>
        <trans-unit id="f9270f5e7d6f6a107dd8727f8e03989aa7e1e07f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;crlf&quot;</source>
          <target state="translated">Установить значение строки &quot;crlf&quot;</target>
        </trans-unit>
        <trans-unit id="a22b46e67f1294009226c3e99f53a466328184f5" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;lf&quot;</source>
          <target state="translated">Установить значение строки &quot;lf&quot;</target>
        </trans-unit>
        <trans-unit id="7f3636e90ee07f52b1799adf7d20919a4160ef67" translate="yes" xml:space="preserve">
          <source>Set to true to enable --branch by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-branch takes precedence over this variable.</source>
          <target state="translated">Установите значение true, чтобы включить --branch по умолчанию в &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; . Параметр --no-branch имеет приоритет перед этой переменной.</target>
        </trans-unit>
        <trans-unit id="01828a4204064cca5b2e88b220546dc5742bc0f1" translate="yes" xml:space="preserve">
          <source>Set to true to enable --short by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-short takes precedence over this variable.</source>
          <target state="translated">Установите значение true, чтобы включить --short по умолчанию в &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; . Параметр --no-short имеет приоритет перед этой переменной.</target>
        </trans-unit>
        <trans-unit id="a2f50541fbb43557b6973a5064eb81647dcf94e2" translate="yes" xml:space="preserve">
          <source>Set to true to enable &lt;code&gt;--ahead-behind&lt;/code&gt; and false to enable &lt;code&gt;--no-ahead-behind&lt;/code&gt; by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for non-porcelain status formats. Defaults to true.</source>
          <target state="translated">Установите в истинно для включения &lt;code&gt;--ahead-behind&lt;/code&gt; и ложные , чтобы включить &lt;code&gt;--no-ahead-behind&lt;/code&gt; по умолчанию в &lt;a href=&quot;git-status&quot;&gt;GIT-статусе [1]&lt;/a&gt; для не фарфоровых форматов статус. По умолчанию true.</target>
        </trans-unit>
        <trans-unit id="96f0b77e868eff9d4ad63451b6702c714a9e3c67" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false, unless &lt;code&gt;feature.experimental&lt;/code&gt; is true.</source>
          <target state="translated">Установите значение true, чтобы записывать граф фиксации после каждой команды &lt;code&gt;git fetch&lt;/code&gt; , которая загружает файл пакета с удаленного компьютера. Используя параметр &lt;code&gt;--split&lt;/code&gt; , большинство выполнений создаст очень маленький файл графика фиксации поверх существующих файлов графа фиксации. Иногда эти файлы объединяются, и запись может занять больше времени. Наличие обновленного файла графика фиксации помогает выполнять многие команды Git, включая &lt;code&gt;git merge-base&lt;/code&gt; , &lt;code&gt;git push -f&lt;/code&gt; и &lt;code&gt;git log --graph&lt;/code&gt; . По умолчанию false, если &lt;code&gt;feature.experimental&lt;/code&gt; не истинно.</target>
        </trans-unit>
        <trans-unit id="8209e9f5d9f75f909ebb340ce07c0375e1a57b1b" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6596cd35135fea85976308a2f017fa88ea4c3f97" translate="yes" xml:space="preserve">
          <source>Set up &amp;lt;branchname&amp;gt;'s tracking information so &amp;lt;upstream&amp;gt; is considered &amp;lt;branchname&amp;gt;'s upstream branch. If no &amp;lt;branchname&amp;gt; is specified, then it defaults to the current branch.</source>
          <target state="translated">Настройте информацию отслеживания &amp;lt;branchname&amp;gt; так, чтобы &amp;lt;upstream&amp;gt; считался восходящей ветвью &amp;lt;branchname&amp;gt;. Если &amp;lt;branchname&amp;gt; не указан, то по умолчанию используется текущая ветка.</target>
        </trans-unit>
        <trans-unit id="a7d9f42de7103c698b8b04159cb04db5a6d63650" translate="yes" xml:space="preserve">
          <source>Set up a mirror of the source repository. This implies &lt;code&gt;--bare&lt;/code&gt;. Compared to &lt;code&gt;--bare&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt; not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a &lt;code&gt;git remote update&lt;/code&gt; in the target repository.</source>
          <target state="translated">Настройте зеркало исходного репозитория. Это подразумевает &lt;code&gt;--bare&lt;/code&gt; . По сравнению с &lt;code&gt;--bare&lt;/code&gt; , &lt;code&gt;--mirror&lt;/code&gt; не только сопоставляет локальные ветки источника с локальными ветвями цели, но и сопоставляет все ссылки (включая ветки удаленного отслеживания, заметки и т. Д.) И настраивает конфигурацию refspec таким образом, чтобы все эти ссылки перезаписываются &lt;code&gt;git remote update&lt;/code&gt; в целевом репозитории.</target>
        </trans-unit>
        <trans-unit id="7e96219d093661439598475221c87d2588db74a2" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">Устанавливает параметры по умолчанию для слияния с веткой &amp;lt;name&amp;gt;. Синтаксис и поддерживаемые параметры такие же, как и у &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; , но значения параметров, содержащие символы пробела, в настоящее время не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="ae1bdc4ada17600e4b52aa414b8e4fd8124c824c" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;code&gt;git merge&lt;/code&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">Устанавливает параметры по умолчанию для слияния с веткой &amp;lt;name&amp;gt;. Синтаксис и поддерживаемые параметры такие же, как и у &lt;code&gt;git merge&lt;/code&gt; , но значения параметров, содержащие символы пробела, в настоящее время не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="d284647c4bbe7eed170d8bbd06667eb66997a29f" translate="yes" xml:space="preserve">
          <source>Sets location of common system-wide configuration file.</source>
          <target state="translated">Устанавливает местонахождение общего общесистемного конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="b2395ce7c9c6f7832c2a162201b3e7779e8713ae" translate="yes" xml:space="preserve">
          <source>Sets location of fallback system-wide configuration file. This file is read only if per-instance one does not exist.</source>
          <target state="translated">Устанавливает местоположение резервного файла общесистемной конфигурации.Этот файл считывается только в том случае,если он не существует в каждом экземпляре.</target>
        </trans-unit>
        <trans-unit id="80c7084a9261d496ded6a154cb1d21190935c2fb" translate="yes" xml:space="preserve">
          <source>Sets location of per-instance configuration file.</source>
          <target state="translated">Устанавливает местоположение файла конфигурации каждой инстанции.</target>
        </trans-unit>
        <trans-unit id="e0e9d645e60e4880815c1beb8a485ff180b9df6b" translate="yes" xml:space="preserve">
          <source>Sets or deletes the default branch (i.e. the target of the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt;) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for &lt;code&gt;origin&lt;/code&gt; is set to &lt;code&gt;master&lt;/code&gt;, then &lt;code&gt;origin&lt;/code&gt; may be specified wherever you would normally specify &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">Устанавливает или удаляет ветвь по умолчанию (т. Е. Цель символической ссылки &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; ) для названного пульта. Наличие ветки по умолчанию для удаленного устройства не требуется, но позволяет указать имя удаленного устройства вместо конкретной ветки. Например, если в качестве ветки по умолчанию для &lt;code&gt;origin&lt;/code&gt; установлено значение &lt;code&gt;master&lt;/code&gt; , тогда &lt;code&gt;origin&lt;/code&gt; может быть указан везде, где вы обычно указываете &lt;code&gt;origin/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2e044e154b8bedcebccbb47c9cffea4e43f05f2" translate="yes" xml:space="preserve">
          <source>Sets service path (--upload-pack, --receive-pack etc.) for next connect. Remote helper may support this option, but must not rely on this option being set before connect request occurs.</source>
          <target state="translated">Устанавливает путь к сервису (-загрузить-пакет,-принять-пакет и т.д.)для следующего подключения.Удаленный помощник может поддерживать эту опцию,но не должен полагаться на то,что эта опция будет установлена до того,как произойдет запрос на соединение.</target>
        </trans-unit>
        <trans-unit id="4daf5e09ce23fccb50e846fa35fe9d7420d00620" translate="yes" xml:space="preserve">
          <source>Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument.</source>
          <target state="translated">Устанавливает свойство Subversion,заданное в качестве первого аргумента,в значение,заданное в качестве второго аргумента для файла,заданного в качестве третьего аргумента.</target>
        </trans-unit>
        <trans-unit id="7bdcb303e2640fa11b5be793f726d7f4d39f5dcd" translate="yes" xml:space="preserve">
          <source>Sets the URL of the specified submodule to &amp;lt;newurl&amp;gt;. Then, it will automatically synchronize the submodule&amp;rsquo;s new remote URL configuration.</source>
          <target state="translated">Устанавливает URL-адрес указанного подмодуля на &amp;lt;newurl&amp;gt;. Затем он автоматически синхронизирует новую конфигурацию удаленного URL-адреса подмодуля.</target>
        </trans-unit>
        <trans-unit id="81149e7775b257084aed4c2f69389cf77384d49e" translate="yes" xml:space="preserve">
          <source>Sets the default for whether to confirm before sending. Must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;compose&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. See &lt;code&gt;--confirm&lt;/code&gt; in the previous section for the meaning of these values.</source>
          <target state="translated">Устанавливает значение по умолчанию для подтверждения перед отправкой. Должен быть один из &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; , &lt;code&gt;cc&lt;/code&gt; , &lt;code&gt;compose&lt;/code&gt; или &lt;code&gt;auto&lt;/code&gt; . См. &lt;code&gt;--confirm&lt;/code&gt; в предыдущем разделе, чтобы узнать значение этих значений.</target>
        </trans-unit>
        <trans-unit id="ae96977bcaf8246e51bbdd562c9442e5f847dd67" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">Устанавливает ветвь удаленного отслеживания по умолчанию для подмодуля. Параметр &lt;code&gt;--branch&lt;/code&gt; позволяет указать удаленную ветку. Параметр &lt;code&gt;--default&lt;/code&gt; удаляет конфигурационный ключ submodule. &amp;lt;name&amp;gt; .branch, в результате чего ветвь отслеживания по умолчанию становится &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd403722db4f3bcc819e0b7e2bed5d2da744942" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to the remote &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebd0697d4e9cc9507469a589b214100fff93c18" translate="yes" xml:space="preserve">
          <source>Sets the default value of --ignore-submodules. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;. &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt; also honor this setting when reporting uncommitted changes. Setting it to &lt;code&gt;all&lt;/code&gt; disables the submodule summary normally shown by &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; when &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set unless it is overridden by using the --ignore-submodules command-line option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">Устанавливает значение по умолчанию --ignore-submodules. Обратите внимание, что это влияет только на &lt;code&gt;git diff&lt;/code&gt; Porcelain, но не на команды &lt;code&gt;diff&lt;/code&gt; нижнего уровня, такие как &lt;code&gt;git diff-files&lt;/code&gt; . &lt;code&gt;git checkout&lt;/code&gt; и &lt;code&gt;git switch&lt;/code&gt; также учитывают этот параметр при сообщении о незафиксированных изменениях. Установка его на &lt;code&gt;all&lt;/code&gt; отключает сводку подмодулей, обычно отображаемую &lt;code&gt;git commit&lt;/code&gt; и &lt;code&gt;git status&lt;/code&gt; , когда установлен &lt;code&gt;status.submoduleSummary&lt;/code&gt; , если только он не переопределен с помощью параметра командной строки --ignore-submodules. Этот параметр не влияет на команды &lt;code&gt;git submodule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="223bc7be9fc4d628a9979e3c0b82abe9a693f525" translate="yes" xml:space="preserve">
          <source>Sets the git refspec against which the shelved P4 changelist is compared. Defaults to p4/master.</source>
          <target state="translated">Устанавливает git refspec,с которым сравнивается полочный сменный список P4.По умолчанию p4/master.</target>
        </trans-unit>
        <trans-unit id="b66175dc0e90d1aff6b86be51b6554732d676a1f" translate="yes" xml:space="preserve">
          <source>Sets the line ending type to use in the working directory for files that are marked as text (either by having the &lt;code&gt;text&lt;/code&gt; attribute set, or by having &lt;code&gt;text=auto&lt;/code&gt; and Git auto-detecting the contents as text). Alternatives are &lt;code&gt;lf&lt;/code&gt;, &lt;code&gt;crlf&lt;/code&gt; and &lt;code&gt;native&lt;/code&gt;, which uses the platform&amp;rsquo;s native line ending. The default value is &lt;code&gt;native&lt;/code&gt;. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information on end-of-line conversion. Note that this value is ignored if &lt;code&gt;core.autocrlf&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">Устанавливает тип окончания строки для использования в рабочем каталоге для файлов, помеченных как текст (либо с помощью установленного атрибута &lt;code&gt;text&lt;/code&gt; , либо с помощью &lt;code&gt;text=auto&lt;/code&gt; и Git, автоматически определяющих содержимое как текст). Альтернативными &lt;code&gt;crlf&lt;/code&gt; являются &lt;code&gt;lf&lt;/code&gt; , crlf и &lt;code&gt;native&lt;/code&gt; , в которых используется окончание собственной строки платформы. Значение по умолчанию - &lt;code&gt;native&lt;/code&gt; . См. &lt;a href=&quot;gitattributes&quot;&gt;Gitattributes [5]&lt;/a&gt; для получения дополнительной информации о преобразовании конца строки. Обратите внимание, что это значение игнорируется, если для &lt;code&gt;core.autocrlf&lt;/code&gt; задано значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767fb38cee626faf4bebc702c67f21f5034dd689" translate="yes" xml:space="preserve">
          <source>Sets the transport helper option &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Outputs a single line containing one of &lt;code&gt;ok&lt;/code&gt; (option successfully set), &lt;code&gt;unsupported&lt;/code&gt; (option not recognized) or &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (option &amp;lt;name&amp;gt; is supported but &amp;lt;value&amp;gt; is not valid for it). Options should be set before other commands, and may influence the behavior of those commands.</source>
          <target state="translated">Устанавливает для вспомогательной функции транспорта &amp;lt;имя&amp;gt; значение &amp;lt;значение&amp;gt;. Выводит одну строку, содержащую одно из значений &lt;code&gt;ok&lt;/code&gt; (опция успешно установлена), &lt;code&gt;unsupported&lt;/code&gt; (опция не распознана) или &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (опция &amp;lt;name&amp;gt; поддерживается, но &amp;lt;value&amp;gt; для нее недопустима). Параметры должны быть установлены перед другими командами и могут влиять на поведение этих команд.</target>
        </trans-unit>
        <trans-unit id="4361fe164802c15484e2158a7e066e93e95aef1a" translate="yes" xml:space="preserve">
          <source>Sets the version of hook that is to be used when calling fsmonitor. There are currently versions 1 and 2. When this is not set, version 2 will be tried first and if it fails then version 1 will be tried. Version 1 uses a timestamp as input to determine which files have changes since that time but some monitors like watchman have race conditions when used with a timestamp. Version 2 uses an opaque string so that the monitor can return something that can be used to determine what files have changed without race conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38552fb2c7ab669744831fa34346e5ff34c9ae00" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will be picked up by &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;, but to accept pushes of such data set &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; instead, or to clone or fetch it set &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Установка &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; будет подхвачена &lt;a href=&quot;git-fsck&quot;&gt;git-fsck [1]&lt;/a&gt; , но вместо этого принимать &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; таким набором данных receive.fsck. &amp;lt;msg-id&amp;gt; или клонировать или &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; его, установив fetch.fsck. &amp;lt;msg-id&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="f8d5bb1f4cfa6fbc6e58411c45908a4ed9f34950" translate="yes" xml:space="preserve">
          <source>Setting an unknown &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; value will cause fsck to die, but doing the same for &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will only cause git to warn.</source>
          <target state="translated">Установка неизвестного значения &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; приведет к &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; fsck, но то же самое для receive.fsck. &amp;lt;msg-id&amp;gt; и &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; вызовет только предупреждение git.</target>
        </trans-unit>
        <trans-unit id="ec7eb0199cb3dbce5770abe0a0c2186f2bc8c0a6" translate="yes" xml:space="preserve">
          <source>Setting the &quot;binary&quot; attribute also unsets the &quot;text&quot; and &quot;diff&quot; attributes as above. Note that macro attributes can only be &quot;Set&quot;, though setting one might have the effect of setting or unsetting other attributes or even returning other attributes to the &quot;Unspecified&quot; state.</source>
          <target state="translated">Установка &quot;двоичного&quot; атрибута также отменяет атрибуты &quot;текстовый&quot; и &quot;дифференциальный&quot;,как описано выше.Обратите внимание,что макроатрибуты могут быть только &quot;Установленными&quot;,хотя установка одного из них может привести к установке или снятию других атрибутов или даже возвращению других атрибутов в состояние &quot;Не определено&quot;.</target>
        </trans-unit>
        <trans-unit id="c0809d7ae8979681e24885ec19091ca517e2431a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;mergetool.keepBackup&lt;/code&gt; configuration variable to &lt;code&gt;false&lt;/code&gt; causes &lt;code&gt;git mergetool&lt;/code&gt; to automatically remove the backup as files are successfully merged.</source>
          <target state="translated">Установка для переменной конфигурации &lt;code&gt;mergetool.keepBackup&lt;/code&gt; значения &lt;code&gt;false&lt;/code&gt; приводит к тому, что &lt;code&gt;git mergetool&lt;/code&gt; автоматически удаляет резервную копию при успешном слиянии файлов.</target>
        </trans-unit>
        <trans-unit id="6f0c93315d42b41cf980b4419425789cdaac4058" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;text&lt;/code&gt; attribute on a path enables end-of-line normalization and marks the path as a text file. End-of-line conversion takes place without guessing the content type.</source>
          <target state="translated">Установка &lt;code&gt;text&lt;/code&gt; атрибута на пути включает нормализацию конца строки и отмечает путь как текстовый файл. Конечное преобразование происходит без угадывания типа содержимого.</target>
        </trans-unit>
        <trans-unit id="3d1285aa205a15a3a5aafcd8d0c8d4ab4efd4f97" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; will tell gitweb to use the named file (i.e. in this example &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) as a configuration for gitweb. You don&amp;rsquo;t really need it in above example; it is required only if your configuration file is in different place than built-in (during compiling gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details, especially information about precedence rules.</source>
          <target state="translated">Установка переменной окружения &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; укажет gitweb использовать указанный файл (т.е. в этом примере &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ) в качестве конфигурации для gitweb. В приведенном выше примере вам это действительно не нужно; он требуется только в том случае, если ваш файл конфигурации находится в другом месте, чем встроенный (во время компиляции gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; или &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; . См. &lt;a href=&quot;gitweb.conf&quot;&gt;Gitweb.conf [5]&lt;/a&gt; для получения подробной информации, особенно информации о правилах приоритета.</target>
        </trans-unit>
        <trans-unit id="3d285efb6da308c8dd90713d0979acc9d8958228" translate="yes" xml:space="preserve">
          <source>Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic &lt;code&gt;git gc --auto&lt;/code&gt; will otherwise use to determine if there&amp;rsquo;s work to do, such as &lt;code&gt;gc.autoPackLimit&lt;/code&gt;.</source>
          <target state="translated">Установка этого значения в 0 отключает не только автоматическую упаковку на основе количества незакрепленных объектов, но и любой другой эвристический &lt;code&gt;git gc --auto&lt;/code&gt; который в противном случае будет использовать для определения наличия работы, например &lt;code&gt;gc.autoPackLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab556d3ed86f8d66a38201c818a74d5378c14e11" translate="yes" xml:space="preserve">
          <source>Setting this to a value &amp;lt;vcs&amp;gt; will cause Git to interact with the remote with the git-remote-&amp;lt;vcs&amp;gt; helper.</source>
          <target state="translated">Установка для этого значения &amp;lt;vcs&amp;gt; заставит Git взаимодействовать с удаленным устройством с помощью помощника git-remote- &amp;lt;vcs&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a78325706284f4930016d288e2c051f8a8fd0d2b" translate="yes" xml:space="preserve">
          <source>Setting this value to --no-tags disables automatic tag following when fetching from remote &amp;lt;name&amp;gt;. Setting it to --tags will fetch every tag from remote &amp;lt;name&amp;gt;, even if they are not reachable from remote branch heads. Passing these flags directly to &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; can override this setting. See options --tags and --no-tags of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Установка этого значения в --no-tags отключает автоматическое отслеживание тегов при выборке с удаленного &amp;lt;name&amp;gt;. Установка для него --tags будет извлекать каждый тег из удаленного &amp;lt;name&amp;gt;, даже если они недоступны из удаленных головок веток. Передача этих флагов непосредственно в &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; может переопределить этот параметр. См. Параметры --tags и --no-tags в &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="842c183b9c42b0c2525b9292639925b0e5a22ce0" translate="yes" xml:space="preserve">
          <source>Setting this variable to &quot;true&quot; is the same as setting the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; on all files and core.eol to &quot;crlf&quot;. Set to true if you want to have &lt;code&gt;CRLF&lt;/code&gt; line endings in your working directory and the repository has LF line endings. This variable can be set to &lt;code&gt;input&lt;/code&gt;, in which case no output conversion is performed.</source>
          <target state="translated">Установка для этой переменной значения &amp;laquo;true&amp;raquo; то же самое, что установка для &lt;code&gt;text&lt;/code&gt; атрибута значения &amp;laquo;auto&amp;raquo; для всех файлов и для core.eol значения &amp;laquo;crlf&amp;raquo;. Установите значение true, если вы хотите, чтобы в рабочем каталоге были окончания строк &lt;code&gt;CRLF&lt;/code&gt; , а в репозитории были окончания строк LF. Эта переменная может быть установлена ​​на &lt;code&gt;input&lt;/code&gt; , и в этом случае преобразование вывода не выполняется.</target>
        </trans-unit>
        <trans-unit id="f2485239ca9db9231d9dc605e4c20a0278342cb8" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as case-insensitive.</source>
          <target state="translated">Установка этой переменной в &lt;code&gt;1&lt;/code&gt; приведет к тому, что Git будет обрабатывать все пути без учета регистра.</target>
        </trans-unit>
        <trans-unit id="1ca46b471bd9797687c8acd1761125db08a21576" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic).</source>
          <target state="translated">Установка этой переменной в &lt;code&gt;1&lt;/code&gt; приведет к тому, что Git будет обрабатывать все пути как глобальные шаблоны (также известные как &amp;laquo;глобальная магия&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="d6f6c7a0196e6bb7bea48f89270c29c4b30ce796" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic).</source>
          <target state="translated">Установка этой переменной в &lt;code&gt;1&lt;/code&gt; приведет к тому, что Git будет обрабатывать все пути как буквальные (так называемое &amp;laquo;буквальное&amp;raquo; волшебство).</target>
        </trans-unit>
        <trans-unit id="5ca9aa98c8773f3ffdcfb04129c5f9a059aea952" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; will search for commits that touch the path &lt;code&gt;*.c&lt;/code&gt;, not any paths that the glob &lt;code&gt;*.c&lt;/code&gt; matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by &lt;code&gt;git ls-tree&lt;/code&gt;, &lt;code&gt;--raw&lt;/code&gt; diff output, etc).</source>
          <target state="translated">Установка этой переменной в &lt;code&gt;1&lt;/code&gt; приведет к тому, что Git будет рассматривать все спецификации путей буквально, а не как глобальные шаблоны. Например, запуск &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; будет искать коммиты, которые касаются пути &lt;code&gt;*.c&lt;/code&gt; , а не любых путей, которым соответствует glob &lt;code&gt;*.c&lt;/code&gt; . Вам может понадобиться это, если вы передаете Git буквальные пути (например, пути, ранее указанные вам с помощью &lt;code&gt;git ls-tree&lt;/code&gt; , &lt;code&gt;--raw&lt;/code&gt; diff output и т. Д.).</target>
        </trans-unit>
        <trans-unit id="d2a80c691de90ce5c2f5bcae0ddb71cd520d2404" translate="yes" xml:space="preserve">
          <source>Setting up a public repository</source>
          <target state="translated">Создание публичного репозитория</target>
        </trans-unit>
        <trans-unit id="3d54bc92ce527cc2dc9817e011bfea7d52def59f" translate="yes" xml:space="preserve">
          <source>Setting up a shared repository</source>
          <target state="translated">Настройка общего репозитория</target>
        </trans-unit>
        <trans-unit id="85d7095bad4cc89bf24fcc23e9812d88b70300be" translate="yes" xml:space="preserve">
          <source>Setup and Config</source>
          <target state="translated">Установка и настройка</target>
        </trans-unit>
        <trans-unit id="42bf423e8b49af69779df6afbd52c08e60ab95d8" translate="yes" xml:space="preserve">
          <source>Sharing and Updating Projects</source>
          <target state="translated">Совместное использование и обновление проектов</target>
        </trans-unit>
        <trans-unit id="5bd75d5b2b55f503aa568f15ed9baa9da5d8844b" translate="yes" xml:space="preserve">
          <source>Sharing development with others</source>
          <target state="translated">Разделение развития с другими</target>
        </trans-unit>
        <trans-unit id="7a899aac208ff2bb86fe5c7bc28489c4a1362bac" translate="yes" xml:space="preserve">
          <source>Sharing your changes</source>
          <target state="translated">Поделиться своими изменениями</target>
        </trans-unit>
        <trans-unit id="bc5ae6560f23ddf791959b3443d3c0070e504dbd" translate="yes" xml:space="preserve">
          <source>Short (shortened to &lt;code&gt;$projects_list_description_width&lt;/code&gt; in the projects list page, which is 25 characters by default; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) single line description of a project (of a repository). Plain text file; HTML will be escaped. By default set to</source>
          <target state="translated">Краткое (сокращенно до &lt;code&gt;$projects_list_description_width&lt;/code&gt; на странице списка проектов, которая по умолчанию составляет 25 символов; см. &lt;a href=&quot;gitweb.conf&quot;&gt;Gitweb.conf [5]&lt;/a&gt; ) однострочное описание проекта (репозитория). Обычный текстовый файл; HTML будет экранирован. По умолчанию установлено на</target>
        </trans-unit>
        <trans-unit id="5d86956f14bde9ab427b7b6c31b677817dd478ab" translate="yes" xml:space="preserve">
          <source>Short Format</source>
          <target state="translated">Краткий формат</target>
        </trans-unit>
        <trans-unit id="838e7194f933ef4cd0297d8b96a9d80cda6328ea" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;--log-destination=syslog&lt;/code&gt;.</source>
          <target state="translated">Сокращенно от &lt;code&gt;--log-destination=syslog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c9f02f4be5538f5a655964a6f76417ed0e96f8f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--copy --force&lt;/code&gt;.</source>
          <target state="translated">Ярлык для &lt;code&gt;--copy --force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56f96ad104be0e60414a9d6fef2d8f4255f1054e" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--delete --force&lt;/code&gt;.</source>
          <target state="translated">Ярлык для &lt;code&gt;--delete --force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae41f0ca95cbe8106d76bc74825f096a7f244ce" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--move --force&lt;/code&gt;.</source>
          <target state="translated">Ярлык для &lt;code&gt;--move --force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48b1cb87c7e9a2d1ef18425956f9eed09b368016" translate="yes" xml:space="preserve">
          <source>Shortcut version for a frequently used remote repository:</source>
          <target state="translated">Короткая версия для часто используемого удаленного репозитория:</target>
        </trans-unit>
        <trans-unit id="e715fc3eabd70149ca3b2a0c4ae7d6c328c54848" translate="yes" xml:space="preserve">
          <source>Shortlog will attempt to parse each trailer value as a &lt;code&gt;name &amp;lt;email&amp;gt;&lt;/code&gt; identity. If successful, the mailmap is applied and the email is omitted unless the &lt;code&gt;--email&lt;/code&gt; option is specified. If the value cannot be parsed as an identity, it will be taken literally and completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6460a14591c54e9d0ad48cc5a6224ee494fca842" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;eolinfo&amp;gt; and &amp;lt;eolattr&amp;gt; of files. &amp;lt;eolinfo&amp;gt; is the file content identification used by Git when the &quot;text&quot; attribute is &quot;auto&quot; (or not set and core.autocrlf is not false). &amp;lt;eolinfo&amp;gt; is either &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot; or &quot;&quot;.</source>
          <target state="translated">Показать &amp;lt;eolinfo&amp;gt; и &amp;lt;eolattr&amp;gt; файлов. &amp;lt;eolinfo&amp;gt; - это идентификатор содержимого файла, используемый Git, когда атрибут &amp;laquo;text&amp;raquo; имеет значение &amp;laquo;auto&amp;raquo; (или не установлено, а core.autocrlf не является ложным). &amp;lt;eolinfo&amp;gt; может быть &amp;laquo;-text&amp;raquo;, &amp;laquo;none&amp;raquo;, &amp;laquo;lf&amp;raquo;, &amp;laquo;crlf&amp;raquo;, &amp;laquo;mixed&amp;raquo; или &amp;laquo;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6a8bdc54a2349a127936d3843203ecd6d2eac153" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading and trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">Показывать &amp;lt;num&amp;gt; начальную и конечную строки и помещать строку, содержащую &lt;code&gt;--&lt;/code&gt; между смежными группами совпадений.</target>
        </trans-unit>
        <trans-unit id="f867e00ffafd6cd49c4546fd923f10e52f747e26" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">Показать &amp;lt;количество&amp;gt; ведущих строк и поместить строку, содержащую &lt;code&gt;--&lt;/code&gt; между смежными группами совпадений.</target>
        </trans-unit>
        <trans-unit id="a761d1fc7e4500bf5753e3c7e973fa02308ed552" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">Показывать завершающие строки &amp;lt;num&amp;gt; и помещать строку, содержащую &lt;code&gt;--&lt;/code&gt; между смежными группами совпадений.</target>
        </trans-unit>
        <trans-unit id="ec26d3779318f9118ffbcaac500e06b8c03b82aa" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; if defined, else &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">Показать &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; если он определен, иначе &lt;code&gt;$GIT_DIR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7091c2825a946a2f8e36c69c5a82c708d938854f" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_DIR&lt;/code&gt; if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory.</source>
          <target state="translated">Показать &lt;code&gt;$GIT_DIR&lt;/code&gt; если он определен. В противном случае покажите путь к каталогу .git. Показанный путь, если он относительный, относится к текущему рабочему каталогу.</target>
        </trans-unit>
        <trans-unit id="92bc441ca5dd76e30902fc3cfc432e05960c64fb" translate="yes" xml:space="preserve">
          <source>Show a Git logical variable</source>
          <target state="translated">Показать логическую переменную Git</target>
        </trans-unit>
        <trans-unit id="59a5fc6a75e992fe3955834b9f589f3efdf7f45b" translate="yes" xml:space="preserve">
          <source>Show a browser for the tree of the &lt;code&gt;maint&lt;/code&gt; branch. Files selected in the browser can be viewed with the internal blame viewer.</source>
          <target state="translated">Покажите браузер для дерева &lt;code&gt;maint&lt;/code&gt; ветви. Файлы, выбранные в браузере, можно просмотреть с помощью встроенной программы просмотра обвинений.</target>
        </trans-unit>
        <trans-unit id="51464c06cc3ed971f0047721a669b06e6f8dc753" translate="yes" xml:space="preserve">
          <source>Show a confirmation dialog before actually running the tool.</source>
          <target state="translated">Покажите диалоговое окно подтверждения перед фактическим запуском инструмента.</target>
        </trans-unit>
        <trans-unit id="6f525616d2d7c1f4fb302645f1046a33897806da" translate="yes" xml:space="preserve">
          <source>Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat.</source>
          <target state="translated">Покажите дифстат в конце слияния.Дифстат также управляется опцией конфигурации merge.stat.</target>
        </trans-unit>
        <trans-unit id="328b16c9977fc386d8875a1c0557b3f9bae42a58" translate="yes" xml:space="preserve">
          <source>Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat.</source>
          <target state="translated">Покажите дифстату того,что изменилось вверх по течению с момента последнего отскока.Дифстат также управляется опцией конфигурации rebase.stat.</target>
        </trans-unit>
        <trans-unit id="89145a6b6d57b54925b2a014779bdd41b63aab6d" translate="yes" xml:space="preserve">
          <source>Show a word diff, using the &amp;lt;mode&amp;gt; to delimit changed words. By default, words are delimited by whitespace; see &lt;code&gt;--word-diff-regex&lt;/code&gt; below. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;plain&lt;/code&gt;, and must be one of:</source>
          <target state="translated">Показать разницу слов, используя &amp;lt;режим&amp;gt; для разделения измененных слов. По умолчанию слова разделяются пробелами; см. &lt;code&gt;--word-diff-regex&lt;/code&gt; ниже. &amp;lt;Режим&amp;gt; по умолчанию равняется &lt;code&gt;plain&lt;/code&gt; и должен быть одним из:</target>
        </trans-unit>
        <trans-unit id="2104f8f059827e60ca6f3a921f9a667c9ac35df8" translate="yes" xml:space="preserve">
          <source>Show all available formats.</source>
          <target state="translated">Показать все доступные форматы.</target>
        </trans-unit>
        <trans-unit id="995122a1c6abd2724409485dae28721d5cc2418d" translate="yes" xml:space="preserve">
          <source>Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, or &lt;code&gt;refs/remotes&lt;/code&gt;, respectively).</source>
          <target state="translated">Показать все ветки, теги или ветки удаленного отслеживания, соответственно (т.е. ссылки, найденные в &lt;code&gt;refs/heads&lt;/code&gt; , &lt;code&gt;refs/tags&lt;/code&gt; или &lt;code&gt;refs/remotes&lt;/code&gt; , соответственно).</target>
        </trans-unit>
        <trans-unit id="321f7678ea19c696fd3fd95db6c787353e8f0a5f" translate="yes" xml:space="preserve">
          <source>Show all commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the &lt;code&gt;include/scsi&lt;/code&gt; or &lt;code&gt;drivers/scsi&lt;/code&gt; subdirectories</source>
          <target state="translated">Показать все коммиты, начиная с версии &lt;code&gt;v2.6.12&lt;/code&gt; , которая изменила любой файл в подкаталогах &lt;code&gt;include/scsi&lt;/code&gt; или &lt;code&gt;drivers/scsi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d180629218690191e783f9ea37e5d26feab056b5" translate="yes" xml:space="preserve">
          <source>Show all refs (branches, tags, etc.).</source>
          <target state="translated">Показать все ссылки (ветки,теги и т.д.).</target>
        </trans-unit>
        <trans-unit id="3e7cf0b7d79082307562ec61629e132b2c74285c" translate="yes" xml:space="preserve">
          <source>Show all refs found in &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">Показать все ссылки, найденные в &lt;code&gt;refs/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05ca74609707b569a39bc5511a1daaae1bd87257" translate="yes" xml:space="preserve">
          <source>Show all refs matching the shell glob pattern &lt;code&gt;pattern&lt;/code&gt;. If the pattern does not start with &lt;code&gt;refs/&lt;/code&gt;, this is automatically prepended. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">Показать все ссылки, соответствующие шаблону &lt;code&gt;pattern&lt;/code&gt; оболочки . Если шаблон не начинается с &lt;code&gt;refs/&lt;/code&gt; , он добавляется автоматически. Если в шаблоне нет символа подстановки ( &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; Или &lt;code&gt;[&lt;/code&gt; ), он преобразуется в совпадение по префиксу путем добавления &lt;code&gt;/*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fa56b2fc9907d1086b87e5377bf4476cff2c390" translate="yes" xml:space="preserve">
          <source>Show as patches the commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">Показывать как исправления коммиты, начиная с версии &lt;code&gt;v2.6.12&lt;/code&gt; , которая изменила любой файл в подкаталогах include / scsi или drivers / scsi</target>
        </trans-unit>
        <trans-unit id="276551039d5a6f576b01b648390b28318eb26dab" translate="yes" xml:space="preserve">
          <source>Show at most 100 changes made to the file &lt;code&gt;Makefile&lt;/code&gt;. Instead of only looking for changes in the current branch look in all branches.</source>
          <target state="translated">Показать не более 100 изменений, внесенных в файл &lt;code&gt;Makefile&lt;/code&gt; . Вместо того, чтобы искать изменения только в текущей ветке, посмотрите все ветки.</target>
        </trans-unit>
        <trans-unit id="cc93fcf462d3cdf3d2aeea5e45651f27c396f5a0" translate="yes" xml:space="preserve">
          <source>Show blank SHA-1 for boundary commits. This can also be controlled via the &lt;code&gt;blame.blankboundary&lt;/code&gt; config option.</source>
          <target state="translated">Показывать пустой SHA-1 для фиксации границ. Этим также можно управлять с помощью &lt;code&gt;blame.blankboundary&lt;/code&gt; конфигурации blame.blankboundary .</target>
        </trans-unit>
        <trans-unit id="eaa41db61e1f1bab3111c0b0f717c116280f3b36" translate="yes" xml:space="preserve">
          <source>Show blank commit object name for boundary commits in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">Показывать пустое имя объекта фиксации для фиксации границ в &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; . По умолчанию этот параметр равен false.</target>
        </trans-unit>
        <trans-unit id="d4cb9ae41338f332d90c61100df1a02ed4371d7a" translate="yes" xml:space="preserve">
          <source>Show both remote-tracking branches and local branches.</source>
          <target state="translated">Покажите как дистанционно отслеживаемые ветки,так и локальные.</target>
        </trans-unit>
        <trans-unit id="c2301bc581a2d36c1e5747eb8ae04fffb9591539" translate="yes" xml:space="preserve">
          <source>Show branches and their commits</source>
          <target state="translated">Показать филиалы и их обязательства</target>
        </trans-unit>
        <trans-unit id="d55feca71232703b0c06113161bcc96210d9bd44" translate="yes" xml:space="preserve">
          <source>Show brief usage of interactive git-clean.</source>
          <target state="translated">Показать краткое использование интерактивного git-clean.</target>
        </trans-unit>
        <trans-unit id="233374b02c6c18c443fd85da32c678488395ad01" translate="yes" xml:space="preserve">
          <source>Show cached files in the output (default)</source>
          <target state="translated">Показывать кэшированные файлы на выходе (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="ea36f7bdbf7d288541a5d87f6a09bd8649bf7e54" translate="yes" xml:space="preserve">
          <source>Show canonical names and email addresses of contacts</source>
          <target state="translated">Показывать канонические имена и адреса электронной почты контактов</target>
        </trans-unit>
        <trans-unit id="cfb0dd7a634282eef7f2e441b5e77786240e4318" translate="yes" xml:space="preserve">
          <source>Show changes between commits, commit and working tree, etc</source>
          <target state="translated">Показать изменения между коммитами,коммитами и рабочим деревом и т.д.</target>
        </trans-unit>
        <trans-unit id="5a1290ea3e3483a3f5ab5d9ff576cc5a9304f139" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">Показать изменения между рабочим деревом и индексом или деревом,изменения между индексом и деревом,изменения между двумя деревьями,изменения между двумя блочными объектами или изменения между двумя файлами на диске.</target>
        </trans-unit>
        <trans-unit id="6189a1046129b02814c474d03dabcd8ea53d41e7" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes resulting from a merge, changes between two blob objects, or changes between two files on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29297be7cb8a5068699eafedd98e29f9ce3b8ef6" translate="yes" xml:space="preserve">
          <source>Show changes using common diff tools</source>
          <target state="translated">Показывать изменения с помощью общих инструментов сравнения</target>
        </trans-unit>
        <trans-unit id="e6231251cf44dee07a16dc6977218fd9c6ce32a0" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">Показать цветной diff. &lt;code&gt;--color&lt;/code&gt; (т.е. без &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; ) совпадает с &lt;code&gt;--color=always&lt;/code&gt; . &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; может быть одним из &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; или &lt;code&gt;auto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f57a0260693cc114a660b9cc49bd9ca37b9d97bc" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. It can be changed by the &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;color.diff&lt;/code&gt; configuration settings.</source>
          <target state="translated">Показать цветной diff. &lt;code&gt;--color&lt;/code&gt; (т.е. без &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; ) совпадает с &lt;code&gt;--color=always&lt;/code&gt; . &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; может быть одним из &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; или &lt;code&gt;auto&lt;/code&gt; . Его можно изменить в &lt;code&gt;color.diff&lt;/code&gt; конфигурации &lt;code&gt;color.ui&lt;/code&gt; и color.diff .</target>
        </trans-unit>
        <trans-unit id="f1325c8ee6526284b9e19b2d177df5189d833f9f" translate="yes" xml:space="preserve">
          <source>Show colored matches. The value must be always (the default), never, or auto.</source>
          <target state="translated">Показывать цветные спички.Значение должно быть всегда (по умолчанию),никогда или автоматически.</target>
        </trans-unit>
        <trans-unit id="ae1799387849e3f0fc844a1cc566a09160bccbf5" translate="yes" xml:space="preserve">
          <source>Show commit logs</source>
          <target state="translated">Показывать журналы коммитов</target>
        </trans-unit>
        <trans-unit id="091e7ae4df5348623adddab90ca75314d19e3c27" translate="yes" xml:space="preserve">
          <source>Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by &lt;code&gt;--cached&lt;/code&gt;) are shown. If the option &lt;code&gt;--files&lt;/code&gt; is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn&amp;rsquo;t allow to use the &lt;code&gt;--cached&lt;/code&gt; option or to provide an explicit commit).</source>
          <target state="translated">Показать сводку фиксации между данной фиксацией (по умолчанию HEAD) и рабочим деревом / индексом. Для рассматриваемого подмодуля показана серия коммитов в подмодуле между данным коммитом суперпроекта и индексом или рабочим деревом (переключается с помощью &lt;code&gt;--cached&lt;/code&gt; ). Если &lt;code&gt;--files&lt;/code&gt; опция --files , показывать серию коммитов в подмодуле между индексом суперпроекта и рабочим деревом подмодуля (эта опция не позволяет использовать опцию &lt;code&gt;--cached&lt;/code&gt; или предоставлять явный фиксации).</target>
        </trans-unit>
        <trans-unit id="895d627a1559b0f7b8ffb93987e2fbd111bfab2e" translate="yes" xml:space="preserve">
          <source>Show commits more recent than a specific date.</source>
          <target state="translated">Показывать фиксации более свежие,чем определенная дата.</target>
        </trans-unit>
        <trans-unit id="10992a126510a25dfd1dd64a15502560e4eb97fe" translate="yes" xml:space="preserve">
          <source>Show commits older than a specific date.</source>
          <target state="translated">Показать обязательства старше определенной даты.</target>
        </trans-unit>
        <trans-unit id="65509170881e19fa232abfecd80c1044bc1bc01b" translate="yes" xml:space="preserve">
          <source>Show conflicts in &quot;diff3&quot; style.</source>
          <target state="translated">Показывать конфликты в стиле &quot;diff3&quot;.</target>
        </trans-unit>
        <trans-unit id="a627c4be174c8a5ee15f7fc10aa836495b1089c5" translate="yes" xml:space="preserve">
          <source>Show deleted files in the output</source>
          <target state="translated">Показать удаленные файлы на выходе</target>
        </trans-unit>
        <trans-unit id="84454ab6d9a5866ee531cd5f7e98a88b4117a393" translate="yes" xml:space="preserve">
          <source>Show directions on how to proceed from the current state in the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;, in the template shown when writing commit messages in &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and in the help message shown by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; or &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when switching branch.</source>
          <target state="translated">Показать инструкции о том, как действовать из текущего состояния, в выводе &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; , в шаблоне, показанном при написании сообщений о фиксации в &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; , и в справочном сообщении, отображаемом &lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt; или &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; при переключении ветки.</target>
        </trans-unit>
        <trans-unit id="5fc1f3cf9452e6039731a7a1df5dffca4ae78ea2" translate="yes" xml:space="preserve">
          <source>Show every object whose name begins with the given prefix. The &amp;lt;prefix&amp;gt; must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake.</source>
          <target state="translated">Показать каждый объект, имя которого начинается с данного префикса. &amp;lt;Префикс&amp;gt; должен состоять как минимум из 4 шестнадцатеричных цифр, чтобы избежать ошибочного перечисления всех без исключения объектов в репозитории.</target>
        </trans-unit>
        <trans-unit id="0d94de8daf12eebfa732214b2af1b9a367d2d94d" translate="yes" xml:space="preserve">
          <source>Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed.</source>
          <target state="translated">Показывать файлы на файловой системе,которые необходимо удалить из-за конфликтов файлов/директорий,чтобы проверка index прошла успешно.</target>
        </trans-unit>
        <trans-unit id="ad0ababacc675e26eaf1a0889c9c6ef14ce3769a" translate="yes" xml:space="preserve">
          <source>Show given paths which don&amp;rsquo;t match any pattern. This only makes sense when &lt;code&gt;--verbose&lt;/code&gt; is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don&amp;rsquo;t.</source>
          <target state="translated">Показать заданные пути, которые не соответствуют ни одному шаблону. Это имеет смысл только при включенной &lt;code&gt;--verbose&lt;/code&gt; , в противном случае было бы невозможно отличить пути, соответствующие шаблону, от путей, которые не соответствуют.</target>
        </trans-unit>
        <trans-unit id="762aaa5ab5565ca8e2b3774059028eb53b59477c" translate="yes" xml:space="preserve">
          <source>Show help message.</source>
          <target state="translated">Покажите сообщение о помощи.</target>
        </trans-unit>
        <trans-unit id="838b52958b292fca61c3a5108dd4ee2a3a75c971" translate="yes" xml:space="preserve">
          <source>Show ignored files as well.</source>
          <target state="translated">Покажите также проигнорированные файлы.</target>
        </trans-unit>
        <trans-unit id="e68b8eea48173094c49e93c786ee56fa7184a0b7" translate="yes" xml:space="preserve">
          <source>Show in a format designed for machine consumption.</source>
          <target state="translated">Показать в формате,предназначенном для потребления машины.</target>
        </trans-unit>
        <trans-unit id="db93b492cc402222428883561395c8e5b81cce1c" translate="yes" xml:space="preserve">
          <source>Show information about files in the index and the working tree</source>
          <target state="translated">Показывать информацию о файлах в индексе и рабочем дереве</target>
        </trans-unit>
        <trans-unit id="d2d64dc76cbd792285e7b6cfa7570beea5afa702" translate="yes" xml:space="preserve">
          <source>Show just what commits would be submitted to p4; do not change state in Git or p4.</source>
          <target state="translated">Показывать,какие коммиты будут отправлены в p4;не изменять состояние в Git'е или p4.</target>
        </trans-unit>
        <trans-unit id="76fafda4935f99c8dd9af522c6c8e19e60857b59" translate="yes" xml:space="preserve">
          <source>Show logs with difference each commit introduces</source>
          <target state="translated">Показывать лог-файлы с разницей,которую вводит каждый коммит</target>
        </trans-unit>
        <trans-unit id="aa7fe52bb648501db2c178df84cc787b4333ba17" translate="yes" xml:space="preserve">
          <source>Show long rev (Default: off).</source>
          <target state="translated">Показывать длинные обороты (по умолчанию:выключен).</target>
        </trans-unit>
        <trans-unit id="5e7221f97ed7eacfd8cdc162cdb28622dbce9b38" translate="yes" xml:space="preserve">
          <source>Show modified files in the output</source>
          <target state="translated">Показать измененные файлы на выходе</target>
        </trans-unit>
        <trans-unit id="68201a6a34d181c9493b1441e79fe99724faace5" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed.</source>
          <target state="translated">Не показывать родителей до того,как будут показаны все его дети,и избегать показа коммитов на нескольких строках истории перемешанных.</target>
        </trans-unit>
        <trans-unit id="8b60cbbf5a70ba9636b88509153ae8ade5e1cc90" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order.</source>
          <target state="translated">Не показывать родителей до того,как все его дети будут показаны,но в противном случае показывать коммиты в порядке авторов временных меток.</target>
        </trans-unit>
        <trans-unit id="fc0432ce52689cf9d25cd4a23e5fba4317479073" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order.</source>
          <target state="translated">Не показывать родителей до того,как будут показаны все его дети,но в противном случае показывать коммиты в порядке отметки времени коммита.</target>
        </trans-unit>
        <trans-unit id="f771bb437a0a632ca38fbb772c5f1f11e2687b42" translate="yes" xml:space="preserve">
          <source>Show object size of blob (file) entries.</source>
          <target state="translated">Показывать размер объекта записи блоба (файла).</target>
        </trans-unit>
        <trans-unit id="8ab164ff8a8b9e0dee1e1b73990f42cea75d4c17" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &quot;Specifying Ranges&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">Показать только коммиты в указанном диапазоне ревизий. Если &amp;lt;диапазон ревизий&amp;gt; не указан, по умолчанию используется &lt;code&gt;HEAD&lt;/code&gt; (т.е. вся история до текущего коммита). &lt;code&gt;origin..HEAD&lt;/code&gt; определяет все коммиты, доступные из текущего коммита (т.е. &lt;code&gt;HEAD&lt;/code&gt; ), но не из &lt;code&gt;origin&lt;/code&gt; . Полный список способов написания &amp;lt;диапазон ревизий&amp;gt; см. В разделе &amp;laquo;Определение диапазонов&amp;raquo; в &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="329dbdc2afc2b5cab87309e7fc9f29edaec58da0" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &lt;code&gt;Specifying Ranges&lt;/code&gt; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">Показать только коммиты в указанном диапазоне ревизий. Если &amp;lt;диапазон ревизий&amp;gt; не указан, по умолчанию используется &lt;code&gt;HEAD&lt;/code&gt; (т.е. вся история до текущего коммита). &lt;code&gt;origin..HEAD&lt;/code&gt; определяет все коммиты, доступные из текущего коммита (т.е. &lt;code&gt;HEAD&lt;/code&gt; ), но не из &lt;code&gt;origin&lt;/code&gt; . Полный список способов написания &amp;lt;диапазон ревизий&amp;gt; см. В разделе &amp;laquo; &lt;code&gt;Specifying Ranges&lt;/code&gt; &amp;raquo; в &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c46a13d2904f8d6c610a867599fe01f9862dd57c" translate="yes" xml:space="preserve">
          <source>Show only commits that are enough to explain how the files that match the specified paths came to be. See &lt;code&gt;History Simplification&lt;/code&gt; below for details and other simplification modes.</source>
          <target state="translated">Показывать только те коммиты, которых достаточно, чтобы объяснить, как появились файлы, соответствующие указанным путям. См. &amp;laquo; &lt;code&gt;History Simplification&lt;/code&gt; ниже для получения подробной информации и других режимов упрощения.</target>
        </trans-unit>
        <trans-unit id="66430bcd7753c6221125437192d0fae1e7031a91" translate="yes" xml:space="preserve">
          <source>Show only commits which have at least (or at most) that many parent commits. In particular, &lt;code&gt;--max-parents=1&lt;/code&gt; is the same as &lt;code&gt;--no-merges&lt;/code&gt;, &lt;code&gt;--min-parents=2&lt;/code&gt; is the same as &lt;code&gt;--merges&lt;/code&gt;. &lt;code&gt;--max-parents=0&lt;/code&gt; gives all root commits and &lt;code&gt;--min-parents=3&lt;/code&gt; all octopus merges.</source>
          <target state="translated">Показывать только те коммиты, у которых есть хотя бы (или максимум) столько же родительских коммитов. В частности, &lt;code&gt;--max-parents=1&lt;/code&gt; такими же , как &lt;code&gt;--no-merges&lt;/code&gt; , &lt;code&gt;--min-parents=2&lt;/code&gt; таких же , как &lt;code&gt;--merges&lt;/code&gt; . &lt;code&gt;--max-parents=0&lt;/code&gt; дает все корневые коммиты, а &lt;code&gt;--min-parents=3&lt;/code&gt; объединяет все осьминоги.</target>
        </trans-unit>
        <trans-unit id="af5969993dd03043080efc38142a1ed4316038eb" translate="yes" xml:space="preserve">
          <source>Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing &quot;other&quot; files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the &lt;code&gt;--exclude*&lt;/code&gt; options is required.</source>
          <target state="translated">Показывать в выводе только проигнорированные файлы. При отображении файлов в индексе печатайте только те, которые соответствуют шаблону исключения. При отображении &amp;laquo;других&amp;raquo; файлов показывать только те, которые соответствуют шаблону исключения. Стандартные правила игнорирования не активируются автоматически, поэтому требуется хотя бы один из параметров &lt;code&gt;--exclude*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="002b0d2d59d3dcff4e51f5a87881355bfa57f547" translate="yes" xml:space="preserve">
          <source>Show only modification, rename, and copy, but not addition or deletion.</source>
          <target state="translated">Показывать только модификацию,переименование и копирование,но не добавление или удаление.</target>
        </trans-unit>
        <trans-unit id="9c49ead1d682188547c7f67234f6eb73a64f21cf" translate="yes" xml:space="preserve">
          <source>Show only names and status of changed files. See the description of the &lt;code&gt;--diff-filter&lt;/code&gt; option on what the status letters mean.</source>
          <target state="translated">Показывать только имена и статус измененных файлов. См. Описание параметра &lt;code&gt;--diff-filter&lt;/code&gt; ,чтобы узнать, что означают буквы статуса.</target>
        </trans-unit>
        <trans-unit id="0ce605c7552a8aba98345c842476a27b2a9c28e4" translate="yes" xml:space="preserve">
          <source>Show only names and the nature of change, but not actual diff output.</source>
          <target state="translated">Показывать только имена и характер изменения,но не фактический diff вывод.</target>
        </trans-unit>
        <trans-unit id="835669256cac48c4e209f28cd6e5b641f9186e51" translate="yes" xml:space="preserve">
          <source>Show only names of changed files.</source>
          <target state="translated">Показывать только имена измененных файлов.</target>
        </trans-unit>
        <trans-unit id="be1dc5236687c9842a30e8f5499d3363ce72f159" translate="yes" xml:space="preserve">
          <source>Show only the named tree entry itself, not its children.</source>
          <target state="translated">Покажите только само название дерева,а не его детей.</target>
        </trans-unit>
        <trans-unit id="8c61ca2fb81ac3434e9edecd88dadef66a32e9a7" translate="yes" xml:space="preserve">
          <source>Show only unmerged branches in the &lt;code&gt;revPrompt&lt;/code&gt; subdialog. This is useful for tools similar to merge or rebase, but not for things like checkout or reset.</source>
          <target state="translated">Показывать только не объединенные ветки в &lt;code&gt;revPrompt&lt;/code&gt; revPrompt. Это полезно для инструментов, подобных слиянию или перемещению, но не для таких вещей, как проверка или сброс.</target>
        </trans-unit>
        <trans-unit id="bcce9ca1424c944de6ae0083c8d4fdfea35ee963" translate="yes" xml:space="preserve">
          <source>Show other (i.e. untracked) files in the output</source>
          <target state="translated">Показывать другие (т.е.неотслеживаемые)файлы в выходных данных</target>
        </trans-unit>
        <trans-unit id="b66aeda059663e06293f23a26a8d9280cb01bb39" translate="yes" xml:space="preserve">
          <source>Show packed archive index</source>
          <target state="translated">Показывать индекс упакованных архивов</target>
        </trans-unit>
        <trans-unit id="867eafced11331f75ab644a43b8e1a6c8a1b09e5" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as objects are considered. The &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; text will be printed with each progress update.</source>
          <target state="translated">Показывать отчеты о проделанной работе на stderr по мере рассмотрения объектов. Текст &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; будет печататься при каждом обновлении хода выполнения.</target>
        </trans-unit>
        <trans-unit id="f20a140b8853bef6c5df99f49ec5adde7b92f174" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as patches are generated.</source>
          <target state="translated">Показывать отчеты о прогрессе по stderr по мере генерации патчей.</target>
        </trans-unit>
        <trans-unit id="873f06beb8dcdfdf113f3a3696210210ae4585eb" translate="yes" xml:space="preserve">
          <source>Show progress.</source>
          <target state="translated">Покажите прогресс.</target>
        </trans-unit>
        <trans-unit id="0aa1726b9011fcb05b9b5a738460be2bb61ef6af" translate="yes" xml:space="preserve">
          <source>Show raw timestamp (Default: off).</source>
          <target state="translated">Показывать сырую метку времени (по умолчанию:выключена).</target>
        </trans-unit>
        <trans-unit id="7167725b750724d1668f3392932bcc3766402e73" translate="yes" xml:space="preserve">
          <source>Show recursive diffs.</source>
          <target state="translated">Показать рекурсивные различия.</target>
        </trans-unit>
        <trans-unit id="4a21113a85b9e00a6d43c59bc8a68e2e1734a7de" translate="yes" xml:space="preserve">
          <source>Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g. &lt;code&gt;master&lt;/code&gt; matches &lt;code&gt;refs/heads/master&lt;/code&gt;, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;, &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; but not &lt;code&gt;refs/heads/mymaster&lt;/code&gt; or &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt;.</source>
          <target state="translated">Показать ссылки, соответствующие одному или нескольким шаблонам. Шаблоны сопоставляются с конца полного имени, и сопоставляются только полные части, например, &lt;code&gt;master&lt;/code&gt; соответствует &lt;code&gt;refs/heads/master&lt;/code&gt; , &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; , &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; , но не &lt;code&gt;refs/heads/mymaster&lt;/code&gt; или &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5256f8d763cc4d210c603b98ae747ed57f6b9b37" translate="yes" xml:space="preserve">
          <source>Show repository only if this file exists (in repository). Only effective if this variable evaluates to true. Can be set when building gitweb by setting &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt;. This path is relative to &lt;code&gt;GIT_DIR&lt;/code&gt;. git-daemon[1] uses &lt;code&gt;git-daemon-export-ok&lt;/code&gt;, unless started with &lt;code&gt;--export-all&lt;/code&gt;. By default this variable is not set, which means that this feature is turned off.</source>
          <target state="translated">Показывать репозиторий, только если этот файл существует (в репозитории). Действует только в том случае, если значение этой переменной истинно. Можно установить при сборке gitweb, установив &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt; . Этот путь относительно &lt;code&gt;GIT_DIR&lt;/code&gt; . git-daemon [1] использует &lt;code&gt;git-daemon-export-ok&lt;/code&gt; , если он не запущен с &lt;code&gt;--export-all&lt;/code&gt; . По умолчанию эта переменная не установлена, что означает, что эта функция отключена.</target>
        </trans-unit>
        <trans-unit id="61630b8887fba0c6ae1f6471c93d4b1ac2d78421" translate="yes" xml:space="preserve">
          <source>Show staged contents' mode bits, object name and stage number in the output.</source>
          <target state="translated">Показывать биты режима ступенчатого содержимого,имя объекта и номер каскада в выводе.</target>
        </trans-unit>
        <trans-unit id="146391550f639861a0610768d29eef80cf7e2b56" translate="yes" xml:space="preserve">
          <source>Show the HEAD reference, even if it would normally be filtered out.</source>
          <target state="translated">Покажите ссылку HEAD,даже если она обычно отфильтровывается.</target>
        </trans-unit>
        <trans-unit id="fea0b0dc87e518d09c89e0b3cebe67d85f5ef7a7" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the root of the superproject&amp;rsquo;s working tree (if exists) that uses the current repository as its submodule. Outputs nothing if the current repository is not used as a submodule by any project.</source>
          <target state="translated">Показать абсолютный путь к корню рабочего дерева суперпроекта (если существует), который использует текущий репозиторий в качестве своего подмодуля. Ничего не выводит, если текущий репозиторий не используется в качестве подмодуля каким-либо проектом.</target>
        </trans-unit>
        <trans-unit id="81d568ac49f075957202365490a4c231f9c1f3ac" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the top-level directory of the working tree. If there is no working tree, report an error.</source>
          <target state="translated">Показывать абсолютный путь к директории верхнего уровня рабочего дерева.Если нет рабочего дерева,сообщите об ошибке.</target>
        </trans-unit>
        <trans-unit id="d58575cff5ae50bf5388e0984f120c24ef0b57bb" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name (Default: off). This can also be controlled via the &lt;code&gt;blame.showEmail&lt;/code&gt; config option.</source>
          <target state="translated">Показывать адрес электронной почты автора вместо имени автора (по умолчанию: выключено). Это также можно контролировать с помощью &lt;code&gt;blame.showEmail&lt;/code&gt; конфигурации blame.showEmail .</target>
        </trans-unit>
        <trans-unit id="2ecb96a53849cc4ea467a6d904be25f5e345a592" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">Показывать адрес электронной почты автора вместо имени автора в &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; . По умолчанию этот параметр равен false.</target>
        </trans-unit>
        <trans-unit id="4bcbe1ac6c4bdbbf9ea91698126aa20a057ccc2c" translate="yes" xml:space="preserve">
          <source>Show the branch and tracking info even in short-format.</source>
          <target state="translated">Показывать ветку и информацию об отслеживании даже в коротком формате.</target>
        </trans-unit>
        <trans-unit id="a7915b46ed412ee27d561c779d7568440c30d97c" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &quot;--&quot; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">Показать изменения за последние две недели в файле &lt;code&gt;gitk&lt;/code&gt; . &amp;laquo;-&amp;raquo; необходимо , чтобы избежать путаницы с &lt;strong&gt;филиала&lt;/strong&gt; по имени &lt;code&gt;gitk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8fc389f3fa0446576124b8d36bfb677216cd040" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &lt;code&gt;--&lt;/code&gt; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">Показать изменения за последние две недели в файле &lt;code&gt;gitk&lt;/code&gt; . &lt;code&gt;--&lt;/code&gt; необходимо , чтобы избежать путаницы с &lt;strong&gt;филиала&lt;/strong&gt; по имени &lt;code&gt;gitk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9eebb0dfcba472cb083099fa0a98ec8bef90962a" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877bab942fc51a3086fcc16e754d1712669dc82e" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it shows the latest one. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">Отобразите изменения, записанные в записи тайника, как разницу между сохраненным содержимым и фиксацией назад, когда запись тайника была впервые создана. Если &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; не указан, отображается последний. По умолчанию команда показывает diffstat, но принимает любой формат, известный для &lt;code&gt;git diff&lt;/code&gt; (например, &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; для просмотра второй самой последней записи в форме патча). Вы можете использовать переменные конфигурации stash.showStat и / или stash.showPatch, чтобы изменить поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="6dc3c2578e3a9fa987c1a16be4e18cd8d21ed499" translate="yes" xml:space="preserve">
          <source>Show the changes since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">Показать изменения по &lt;code&gt;v2.6.12&lt;/code&gt; с версией v2.6.12, которая изменила любой файл в подкаталогах include / scsi или drivers / scsi</target>
        </trans-unit>
        <trans-unit id="59882bbc15f62948be114af14833ad7f6dee5f50" translate="yes" xml:space="preserve">
          <source>Show the commit itself and the commit log message even if the diff itself is empty.</source>
          <target state="translated">Показывать сам коммит и сообщение журнала коммитов,даже если само различие пустое.</target>
        </trans-unit>
        <trans-unit id="8a1797e0ff002e85bbdedc5376243381a92ddebf" translate="yes" xml:space="preserve">
          <source>Show the commit subjects next to the SHA1s.</source>
          <target state="translated">Покажите субъектов коммита рядом с SHA1.</target>
        </trans-unit>
        <trans-unit id="13a02f2303b4ed4a2167fcf812fcf1ac53740ea9" translate="yes" xml:space="preserve">
          <source>Show the commits that are in the &quot;test&quot; branch but not yet in the &quot;release&quot; branch, along with the list of paths each commit modifies.</source>
          <target state="translated">Показывать коммиты,которые находятся в ветке &quot;test&quot;,но ещё не находятся в ветке &quot;release&quot;,вместе со списком путей,по которым каждый коммит изменяет.</target>
        </trans-unit>
        <trans-unit id="724ae33ae952d72a471b3d97f22a84d58cfd2176" translate="yes" xml:space="preserve">
          <source>Show the content as converted by the filters configured in the current working tree for the given &amp;lt;path&amp;gt; (i.e. smudge filters, end-of-line conversion, etc). In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt;.</source>
          <target state="translated">Показывать содержимое, преобразованное фильтрами, настроенными в текущем рабочем дереве для данного &amp;lt;path&amp;gt; (например, фильтры смазывания, преобразование конца строки и т. Д.). В этом случае &amp;lt;объект&amp;gt; должен иметь форму &amp;lt;дерево-дерево&amp;gt;: &amp;lt;путь&amp;gt; или: &amp;lt;путь&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="be70371f28252f06cf6503a94132408841f759d7" translate="yes" xml:space="preserve">
          <source>Show the content as transformed by a textconv filter. In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt; in order to apply the filter to the content recorded in the index at &amp;lt;path&amp;gt;.</source>
          <target state="translated">Показывать содержимое, преобразованное фильтром textconv. В этом случае &amp;lt;объект&amp;gt; должен иметь форму &amp;lt;дерево-дерево&amp;gt;: &amp;lt;путь&amp;gt; или: &amp;lt;путь&amp;gt;, чтобы применить фильтр к содержимому, записанному в индексе в &amp;lt;путь&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="78813d71262485f1cc698929fd8f6ed3ab93eba8" translate="yes" xml:space="preserve">
          <source>Show the contents of &lt;code&gt;Makefile&lt;/code&gt; in revision &lt;code&gt;v0.99.8&lt;/code&gt; and provide annotations for each line. Unlike the above example the file is read from the object database and not the working directory.</source>
          <target state="translated">Покажите содержимое &lt;code&gt;Makefile&lt;/code&gt; в версии &lt;code&gt;v0.99.8&lt;/code&gt; и предоставьте аннотации для каждой строки. В отличие от приведенного выше примера файл считывается из базы данных объектов, а не из рабочего каталога.</target>
        </trans-unit>
        <trans-unit id="5c3c76e526574e694470512f190e4502f8d279a5" translate="yes" xml:space="preserve">
          <source>Show the contents of the file &lt;code&gt;Makefile&lt;/code&gt; in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location. The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to &lt;code&gt;Not Yet Committed&lt;/code&gt;.</source>
          <target state="translated">Показать содержимое файла &lt;code&gt;Makefile&lt;/code&gt; в текущем рабочем каталоге и предоставить аннотации как для исходного автора каждой строки, так и для того, кто переместил строку в ее текущее местоположение. Незавершенный файл аннотируется, а незафиксированные изменения (если таковые имеются) явно относятся к &amp;laquo; &lt;code&gt;Not Yet Committed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e218b59d83785be7915643dfc5b6a7b490def489" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other. Defaults to &lt;code&gt;diff.interHunkContext&lt;/code&gt; or 0 if the config option is unset.</source>
          <target state="translated">Показать контекст между блоками различий, вплоть до указанного количества строк, тем самым объединяя блоки, расположенные близко друг к другу. По умолчанию - &lt;code&gt;diff.interHunkContext&lt;/code&gt; или 0, если параметр конфигурации не установлен.</target>
        </trans-unit>
        <trans-unit id="738d68d4dedc5068c7659d3b55ae573e291dd6e6" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to each other. This value serves as the default for the &lt;code&gt;--inter-hunk-context&lt;/code&gt; command line option.</source>
          <target state="translated">Показать контекст между блоками различий, вплоть до указанного количества строк, тем самым объединяя блоки, расположенные близко друг к другу. Это значение используется по умолчанию для &lt;code&gt;--inter-hunk-context&lt;/code&gt; командной строки --inter-hunk-context .</target>
        </trans-unit>
        <trans-unit id="4f70107eeb8997652e58a1d8572c279efb177133" translate="yes" xml:space="preserve">
          <source>Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of &lt;code&gt;git show REBASE_HEAD&lt;/code&gt;.</source>
          <target state="translated">Показывать текущий патч при интерактивном перемещении или когда перемещение остановлено из-за конфликтов. Это эквивалент &lt;code&gt;git show REBASE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70f379614ad3c3f540d932681a54d5c082f0dab9" translate="yes" xml:space="preserve">
          <source>Show the email address of each author.</source>
          <target state="translated">Показать адрес электронной почты каждого автора.</target>
        </trans-unit>
        <trans-unit id="7d75f0f1d94f4cb5fb2f3f4826ebeee8b6bd4db1" translate="yes" xml:space="preserve">
          <source>Show the entire e-mail message &quot;git am&quot; has stopped at, because of conflicts.</source>
          <target state="translated">Показывать весь e-mail сообщение &quot;git am&quot; остановился,из-за конфликтов.</target>
        </trans-unit>
        <trans-unit id="172de3da6fec23b745b3f7495e42b18d6ff2e3d5" translate="yes" xml:space="preserve">
          <source>Show the filename above the matches in that file instead of at the start of each shown line.</source>
          <target state="translated">Покажите имя файла над совпадениями в этом файле,а не в начале каждой показанной строки.</target>
        </trans-unit>
        <trans-unit id="f95469ae696b3f00df813ab275db8edbf948a14b" translate="yes" xml:space="preserve">
          <source>Show the filename in the original commit. By default the filename is shown if there is any line that came from a file with a different name, due to rename detection.</source>
          <target state="translated">Покажите имя файла в оригинальном коммите.По умолчанию имя файла показывается,если есть строка,которая пришла из файла с другим именем,в связи с обнаружением переименования.</target>
        </trans-unit>
        <trans-unit id="3e3d59b4bf16e3f56b771d2e4d942efd80dd4d82" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt; and those options which imply it such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">Показать полное 40-байтовое шестнадцатеричное имя объекта фиксации. Это отменяет &lt;code&gt;--abbrev-commit&lt;/code&gt; и те параметры, которые его подразумевают, такие как &quot;--oneline&quot;. Он также переопределяет переменную &lt;code&gt;log.abbrevCommit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61ee0a84eb604c1f8a4a6a6caa87ed9b0aa485c5" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt;, either explicit or implied by other options such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a9f3cf0d88f67dc0a2f911b2a17556553b49ba" translate="yes" xml:space="preserve">
          <source>Show the given destination prefix instead of &quot;b/&quot;.</source>
          <target state="translated">Показывать данный префикс назначения вместо &quot;b/&quot;.</target>
        </trans-unit>
        <trans-unit id="4a610521917af2112009fac9ef83beff567eff6c" translate="yes" xml:space="preserve">
          <source>Show the given source prefix instead of &quot;a/&quot;.</source>
          <target state="translated">Показывать данный исходный префикс вместо &quot;a/&quot;.</target>
        </trans-unit>
        <trans-unit id="77be67edff03e9adcf5b9f00110ef7e89bbf43f4" translate="yes" xml:space="preserve">
          <source>Show the line number in the original commit (Default: off).</source>
          <target state="translated">Показывать номер строки в исходном коммите (по умолчанию:выключен).</target>
        </trans-unit>
        <trans-unit id="edc37494876d892fcb3f9e5ed21ef2bd5105c12c" translate="yes" xml:space="preserve">
          <source>Show the message at which &lt;code&gt;git am&lt;/code&gt; has stopped due to conflicts. If &lt;code&gt;raw&lt;/code&gt; is specified, show the raw contents of the e-mail message; if &lt;code&gt;diff&lt;/code&gt;, show the diff portion only. Defaults to &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc90bd9d374d0e136811a02e380e22be094fea9" translate="yes" xml:space="preserve">
          <source>Show the notes (see &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;) that annotate the commit, when showing the commit log message. This is the default for &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt; and &lt;code&gt;git whatchanged&lt;/code&gt; commands when there is no &lt;code&gt;--pretty&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, or &lt;code&gt;--oneline&lt;/code&gt; option given on the command line.</source>
          <target state="translated">Показывать примечания (см. &lt;a href=&quot;git-notes&quot;&gt;Git-notes [1]&lt;/a&gt; ), которые аннотируют фиксацию, при отображении сообщения журнала фиксации. Это значение по умолчанию для команд &lt;code&gt;git log&lt;/code&gt; , &lt;code&gt;git show&lt;/code&gt; и &lt;code&gt;git whatchanged&lt;/code&gt; , когда в командной строке не &lt;code&gt;--oneline&lt;/code&gt; параметры &lt;code&gt;--pretty&lt;/code&gt; , &lt;code&gt;--format&lt;/code&gt; или --oneline .</target>
        </trans-unit>
        <trans-unit id="5d9c16ddef53da23b241c4981fec0a65a72c29ca" translate="yes" xml:space="preserve">
          <source>Show the notes for a given object (defaults to HEAD).</source>
          <target state="translated">Показывать примечания для данного объекта (по умолчанию HEAD).</target>
        </trans-unit>
        <trans-unit id="f0bfdb6e91a5688fc1141d3407d575275f304926" translate="yes" xml:space="preserve">
          <source>Show the number of entries currently stashed away.</source>
          <target state="translated">Покажите количество записей,спрятанных в данный момент.</target>
        </trans-unit>
        <trans-unit id="3c9a6685a00f511f81c04581bd599d8474c49f6d" translate="yes" xml:space="preserve">
          <source>Show the object format (hash algorithm) used for the repository for storage inside the &lt;code&gt;.git&lt;/code&gt; directory, input, or output. For input, multiple algorithms may be printed, space-separated. If not specified, the default is &quot;storage&quot;.</source>
          <target state="translated">Покажите формат объекта (алгоритм хеширования), используемый репозиторием для хранения внутри каталога &lt;code&gt;.git&lt;/code&gt; , ввода или вывода. Для ввода можно напечатать несколько алгоритмов, разделенных пробелами. Если не указано, по умолчанию используется &amp;laquo;хранилище&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2065145a8ccf699cb187c308bae854443dde9e61" translate="yes" xml:space="preserve">
          <source>Show the path to the shared index file in split index mode, or empty if not in split-index mode.</source>
          <target state="translated">Показывать путь к файлу с общим индексом в режиме разделенного индекса,или пустой,если не в режиме разделенного индекса.</target>
        </trans-unit>
        <trans-unit id="fc95b34844d65ed902bda405925620eb3e5a1983" translate="yes" xml:space="preserve">
          <source>Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced. Implies --porcelain.</source>
          <target state="translated">Показывать фарфоровый формат,но выводить информацию о фиксации для каждой строки,а не только в первый раз,когда на фиксацию делается ссылка.Подразумевается-фарфор.</target>
        </trans-unit>
        <trans-unit id="c81496056d90f54bdff08b7b7019335227bad0b2" translate="yes" xml:space="preserve">
          <source>Show the preceding line that contains the function name of the match, unless the matching line is a function name itself. The name is determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">Покажите предыдущую строку, содержащую имя функции соответствия, если строка соответствия не является самим именем функции. Имя определяется так же, как &lt;code&gt;git diff&lt;/code&gt; &lt;a href=&quot;gitattributes&quot;&gt;обрабатывает &lt;/a&gt; &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; фрагментов исправлений (см. Определение настраиваемого заголовка фрагментов в gitattributes [5] ).</target>
        </trans-unit>
        <trans-unit id="114a9aa417c57ec620d43a64c520abeb8e1f3f29" translate="yes" xml:space="preserve">
          <source>Show the progress of checking files out.</source>
          <target state="translated">Показывать ход проверки файлов.</target>
        </trans-unit>
        <trans-unit id="e5e665e21c64d0029d8257ef6e137aa1376a6118" translate="yes" xml:space="preserve">
          <source>Show the remote-tracking branches.</source>
          <target state="translated">Покажите дистанционно отслеживаемые ветки.</target>
        </trans-unit>
        <trans-unit id="b9c5b299181f4d64f3ea6e8b9c13b148fff537b5" translate="yes" xml:space="preserve">
          <source>Show the result incrementally in a format designed for machine consumption.</source>
          <target state="translated">Показывать результат постепенно в формате,рассчитанном на потребление машины.</target>
        </trans-unit>
        <trans-unit id="c999f8cbf6fa5c24fdf8b2b9b5596b445f624a80" translate="yes" xml:space="preserve">
          <source>Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of &lt;code&gt;git describe&lt;/code&gt; for the SHA-1. Each SHA-1 will possibly be prefixed with &lt;code&gt;-&lt;/code&gt; if the submodule is not initialized, &lt;code&gt;+&lt;/code&gt; if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and &lt;code&gt;U&lt;/code&gt; if the submodule has merge conflicts.</source>
          <target state="translated">Показать статус субмодулей. Это напечатает SHA-1 текущего извлеченного коммита для каждого подмодуля, а также путь к подмодулю и вывод &lt;code&gt;git describe&lt;/code&gt; для SHA-1. Каждый SHA-1, возможно, будет иметь префикс &lt;code&gt;-&lt;/code&gt; если подмодуль не инициализирован, &lt;code&gt;+&lt;/code&gt; если текущий извлеченный подмодуль фиксации не соответствует SHA-1, найденному в индексе содержащего репозитория, и &lt;code&gt;U&lt;/code&gt; , если подмодуль имеет конфликты слияния.</target>
        </trans-unit>
        <trans-unit id="32335b1eb1c0a4fbecaf630b0ab1df57722da3d3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found.</source>
          <target state="translated">Показывать окружающий текст из предыдущей строки,содержащий имя функции вплоть до следующего имени функции,фактически показывая всю функцию,в которой было найдено совпадение.</target>
        </trans-unit>
        <trans-unit id="9511319e5f4aea9984dc4693f8341e94527b78d9" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3926cd6bade9ce34cbcecec5eb956d896d053e" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output. This implies &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">Показать объекты дерева в выводе diff. Это подразумевает &lt;code&gt;-r&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="984ffa4d6fa814707b9db0fd0df1de10038cb7e9" translate="yes" xml:space="preserve">
          <source>Show the whole commit history, but skip any merges</source>
          <target state="translated">Покажите всю историю коммитов,но пропустите любые слияния.</target>
        </trans-unit>
        <trans-unit id="41ba3127797e7497aaa54b06768281c0f54c0178" translate="yes" xml:space="preserve">
          <source>Show the working tree status</source>
          <target state="translated">Показать статус рабочего дерева</target>
        </trans-unit>
        <trans-unit id="4be15cef7828db991e29f252f2096ac52eaa87a1" translate="yes" xml:space="preserve">
          <source>Show three-way merge without touching index</source>
          <target state="translated">Показать трехходовое слияние без касания индекса</target>
        </trans-unit>
        <trans-unit id="c011e03eeb56d943a760cc013e6f2e4eb1d425c0" translate="yes" xml:space="preserve">
          <source>Show tree entries even when going to recurse them. Has no effect if &lt;code&gt;-r&lt;/code&gt; was not passed. &lt;code&gt;-d&lt;/code&gt; implies &lt;code&gt;-t&lt;/code&gt;.</source>
          <target state="translated">Показывать записи в дереве, даже если собираетесь их рекурсировать. Не действует, если не было &lt;code&gt;-r&lt;/code&gt; . &lt;code&gt;-d&lt;/code&gt; подразумевает &lt;code&gt;-t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ebf2c3da3729666fcca774c5c0088e26b46bc94" translate="yes" xml:space="preserve">
          <source>Show unified diff between the HEAD commit and what would be committed at the bottom of the commit message template to help the user describe the commit by reminding what changes the commit has. Note that this diff output doesn&amp;rsquo;t have its lines prefixed with &lt;code&gt;#&lt;/code&gt;. This diff will not be a part of the commit message. See the &lt;code&gt;commit.verbose&lt;/code&gt; configuration variable in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Показать унифицированное различие между фиксацией HEAD и тем, что будет зафиксировано в нижней части шаблона сообщения фиксации, чтобы помочь пользователю описать фиксацию, напомнив, какие изменения есть в фиксации. Обратите внимание, что в этом выводе diff нет строк с префиксом &lt;code&gt;#&lt;/code&gt; . Эта разница не будет частью сообщения о фиксации. См. &lt;code&gt;commit.verbose&lt;/code&gt; конфигурации commit.verbose в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec5cbecb883dc178104f40a9f6290a06e20fc1c" translate="yes" xml:space="preserve">
          <source>Show uniquely abbreviated commit object as fallback.</source>
          <target state="translated">Показать уникальный сокращенный объект коммита как запасной вариант.</target>
        </trans-unit>
        <trans-unit id="10c7ca24c353332c5b887c6b6a1d6dd7a457b5d5" translate="yes" xml:space="preserve">
          <source>Show unmerged files in the output (forces --stage)</source>
          <target state="translated">Показывать неупорядоченные файлы на выходе (силы-этап)</target>
        </trans-unit>
        <trans-unit id="b5d593f0c18fdb91296748ca1fac373587b954d6" translate="yes" xml:space="preserve">
          <source>Show untracked files.</source>
          <target state="translated">Покажите неотслеживаемые файлы.</target>
        </trans-unit>
        <trans-unit id="26b08d61663ae392b69c5a69245f4edf21293755" translate="yes" xml:space="preserve">
          <source>Show various types of objects</source>
          <target state="translated">Показать различные типы объектов</target>
        </trans-unit>
        <trans-unit id="21c5bff92d5285947c85ec0c1484f22db009a919" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file</source>
          <target state="translated">Показать,какая ревизия и автор в последний раз изменяли каждую строку файла.</target>
        </trans-unit>
        <trans-unit id="966d3662ec6148441d1b868ba18110f8156c9e7e" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file. The output of this mode is format-compatible with the output of &amp;lsquo;svn blame&amp;rsquo; by default. Like the SVN blame command, local uncommitted changes in the working tree are ignored; the version of the file in the HEAD revision is annotated. Unknown arguments are passed directly to &lt;code&gt;git blame&lt;/code&gt;.</source>
          <target state="translated">Показывает, какая редакция и автор последний раз изменяли каждую строку файла. Выходные данные этого режима по умолчанию совместимы с выходом svn blame. Как и команда SVN blame, локальные незафиксированные изменения в рабочем дереве игнорируются; аннотируется версия файла в ревизии HEAD. Неизвестные аргументы передаются непосредственно &lt;code&gt;git blame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf9833b3864a606f143f671880d0d7c492524c3a" translate="yes" xml:space="preserve">
          <source>Show what would be done and clean files interactively. See &amp;ldquo;Interactive mode&amp;rdquo; for details.</source>
          <target state="translated">Покажите, что будет сделано, и очистите файлы в интерактивном режиме. Подробнее см. &amp;laquo;Интерактивный режим&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="df9413d989d45b2c0aaf57aba32e9c05293cab52" translate="yes" xml:space="preserve">
          <source>Show what would be done, without making any changes.</source>
          <target state="translated">Покажите,что будет сделано,без изменений.</target>
        </trans-unit>
        <trans-unit id="be4ca0a0825cd627301347d0b898edf805764f04" translate="yes" xml:space="preserve">
          <source>Show whole surrounding functions of changes.</source>
          <target state="translated">Показать все окружающие функции изменений.</target>
        </trans-unit>
        <trans-unit id="468ba140a3b94d2f9cd6ef93cfa9cab1327c9537" translate="yes" xml:space="preserve">
          <source>Show words as &lt;code&gt;[-removed-]&lt;/code&gt; and &lt;code&gt;{+added+}&lt;/code&gt;. Makes no attempts to escape the delimiters if they appear in the input, so the output may be ambiguous.</source>
          <target state="translated">Показывать слова как &lt;code&gt;[-removed-]&lt;/code&gt; и &lt;code&gt;{+added+}&lt;/code&gt; . Не предпринимает попыток обойти разделители, если они появляются во входных данных, поэтому выходные данные могут быть неоднозначными.</target>
        </trans-unit>
        <trans-unit id="853a8e226495d515cddaf8f8812833ecd070bbe7" translate="yes" xml:space="preserve">
          <source>Showing commits unique to a given branch</source>
          <target state="translated">Показывать коммиты,уникальные для данной ветви.</target>
        </trans-unit>
        <trans-unit id="96ca3a302ef6077a82014da5f00857782e6cb86a" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; gives up trying to guess based on the source and destination refs what remote ref namespace the source belongs in, but where we can still suggest that the user push to either refs/heads/* or refs/tags/* based on the type of the source object.</source>
          <target state="translated">Показывается, когда &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; отказывается от попыток угадать на основе исходных и целевых ссылок, к какому пространству имен удаленных ссылок принадлежит источник, но при этом мы все еще можем предложить пользователю нажать на ссылки / ссылки / * или ссылки / теги / * в зависимости от типа исходного объекта.</target>
        </trans-unit>
        <trans-unit id="75d7e8b680f4e534527cb3c486bef0af3659328c" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that does not qualify for fast-forwarding (e.g., a tag.)</source>
          <target state="translated">Отображается, когда &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; отклоняет обновление, которое не соответствует требованиям для быстрой перемотки (например, тег).</target>
        </trans-unit>
        <trans-unit id="3a0a872703503f071b91634941e8be2dc5533cd1" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object that is not a commit-ish, or make the remote ref point at an object that is not a commit-ish.</source>
          <target state="translated">Отображается, когда &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; отклоняет обновление, которое пытается перезаписать удаленную ссылку, которая указывает на объект, который не является фиктивным, или делает удаленную ссылку на объект, который не является фиктивным.</target>
        </trans-unit>
        <trans-unit id="3b4c04c7663321c0bb15512a5590b839a243ed3d" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object we do not have.</source>
          <target state="translated">Отображается, когда &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; отклоняет обновление, которое пытается перезаписать удаленную ссылку, указывающую на объект, которого у нас нет.</target>
        </trans-unit>
        <trans-unit id="78b784f23e7ef12a1020b996b898b9ff902a30e8" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; computes the ahead/behind counts for a local ref compared to its remote tracking ref, and that calculation takes longer than expected. Will not appear if &lt;code&gt;status.aheadBehind&lt;/code&gt; is false or the option &lt;code&gt;--no-ahead-behind&lt;/code&gt; is given.</source>
          <target state="translated">Отображается, когда &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; вычисляет счетчики вперед / назад для локальной ссылки по сравнению с ее удаленной ссылкой отслеживания, и это вычисление занимает больше времени, чем ожидалось. Не появится, если для &lt;code&gt;status.aheadBehind&lt;/code&gt; установлено значение false или задана опция --no-forward &lt;code&gt;--no-ahead-behind&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d338c5b596db1d1f3b4bc876559fe0665e8ac5fb" translate="yes" xml:space="preserve">
          <source>Shows &amp;lt;n&amp;gt; most recent ref-log entries for the given ref. If &amp;lt;base&amp;gt; is given, &amp;lt;n&amp;gt; entries going back from that entry. &amp;lt;base&amp;gt; can be specified as count or date. When no explicit &amp;lt;ref&amp;gt; parameter is given, it defaults to the current branch (or &lt;code&gt;HEAD&lt;/code&gt; if it is detached).</source>
          <target state="translated">Показывает &amp;lt;n&amp;gt; последних записей журнала ссылок для данной ссылки. Если задано &amp;lt;base&amp;gt;, &amp;lt;n&amp;gt; записей возвращается из этой записи. &amp;lt;база&amp;gt; может быть указана как количество или дата. Если явный параметр &amp;lt;ref&amp;gt; не указан, по умолчанию используется текущая ветвь (или &lt;code&gt;HEAD&lt;/code&gt; , если она отсоединена).</target>
        </trans-unit>
        <trans-unit id="145d28125d096ddf08f1e26c4d9787f99dd5cc7e" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in any of local branches but not in any of remote-tracking branches for &lt;code&gt;origin&lt;/code&gt; (what you have that origin doesn&amp;rsquo;t).</source>
          <target state="translated">Показывает все коммиты, которые находятся в любой из локальных веток, но не в любой из веток удаленного отслеживания для &lt;code&gt;origin&lt;/code&gt; (то, что у вас есть, этого источника нет).</target>
        </trans-unit>
        <trans-unit id="c51c52f011be107f5e19468bb7f02daf26af2024" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in local master but not in any remote repository master branches.</source>
          <target state="translated">Показывает все коммиты,которые находятся в локальной мастер-ветке,но не в любой удаленной мастер-ветке репозитория.</target>
        </trans-unit>
        <trans-unit id="10371d1293071dacd448b9fdd202c3afd277b14e" translate="yes" xml:space="preserve">
          <source>Shows commit logs and diff output each commit introduces.</source>
          <target state="translated">Показывает лог-файлы коммитов и вывод различий при каждом вводе коммита.</target>
        </trans-unit>
        <trans-unit id="476dac31e594be06f217fa896bee0115d58f6b4c" translate="yes" xml:space="preserve">
          <source>Shows history of the file or directory in a given repository path, starting from given revision (defaults to HEAD, i.e. default branch).</source>
          <target state="translated">Показывает историю файла или директории в заданном пути хранилища,начиная с заданной ревизии (по умолчанию HEAD,т.е.ветвь по умолчанию).</target>
        </trans-unit>
        <trans-unit id="952b827e77460f64206eeaa3be7cd6994665a085" translate="yes" xml:space="preserve">
          <source>Shows how the function &lt;code&gt;main()&lt;/code&gt; in the file &lt;code&gt;main.c&lt;/code&gt; evolved over time.</source>
          <target state="translated">Показывает, как функция &lt;code&gt;main()&lt;/code&gt; в файле &lt;code&gt;main.c&lt;/code&gt; развивалась с течением времени.</target>
        </trans-unit>
        <trans-unit id="ce9fdc182e7532561a25c9e84afbf603141702a1" translate="yes" xml:space="preserve">
          <source>Shows information about a file or directory similar to what &amp;lsquo;svn info&amp;rsquo; provides. Does not currently support a -r/--revision argument. Use the --url option to output only the value of the &lt;code&gt;URL:&lt;/code&gt; field.</source>
          <target state="translated">Показывает информацию о файле или каталоге, аналогичную той, что предоставляет svn info. В настоящее время не поддерживает аргумент версии -r / -. Используйте параметр --url, чтобы вывести только значение поля &lt;code&gt;URL:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca1b824d0d56099189f69630ad24bacce78fa10f" translate="yes" xml:space="preserve">
          <source>Shows information about a specific commit in a repository. The &lt;code&gt;commit&lt;/code&gt; view shows information about commit in more detail, the &lt;code&gt;commitdiff&lt;/code&gt; action shows changeset for given commit.</source>
          <target state="translated">Показывает информацию о конкретном коммите в репозитории. В представлении &lt;code&gt;commit&lt;/code&gt; отображается более подробная информация о фиксации, действие &lt;code&gt;commitdiff&lt;/code&gt; показывает набор изменений для данной фиксации.</target>
        </trans-unit>
        <trans-unit id="ab228fa7c7d65eb09f46d0e73fe8d72b79bc229a" translate="yes" xml:space="preserve">
          <source>Shows log information (commit message or just commit subject) for a given branch (starting from given revision).</source>
          <target state="translated">Показывает информацию журнала (сообщение о фиксации или просто тему фиксации)для данной ветки (начиная с данной ревизии).</target>
        </trans-unit>
        <trans-unit id="a3433f3c29ab88ea9167add81dd6a17e06d4de7e" translate="yes" xml:space="preserve">
          <source>Shows one or more objects (blobs, trees, tags and commits).</source>
          <target state="translated">Показывает один или несколько объектов (пятна,деревья,теги и коммиты).</target>
        </trans-unit>
        <trans-unit id="c89f1cda347c61bcda5c7bb78673af53b8dae0ad" translate="yes" xml:space="preserve">
          <source>Shows only commits that are NOT on the first branch given. This helps track topic branches by hiding any commit that is already in the main line of development. When given &quot;git show-branch --topics master topic1 topic2&quot;, this will show the revisions given by &quot;git rev-list ^master topic1 topic2&quot;</source>
          <target state="translated">Показывает только те коммиты,которые НЕ находятся в первой заданной ветке.Это помогает отслеживать тематические ветки,скрывая любой коммит,который уже находится в основной разработке.При задании &quot;git show-branch --topics master topic1 topic2&quot; будут показаны ревизии,заданные &quot;git rev-list ^master topic1 topic2&quot;.</target>
        </trans-unit>
        <trans-unit id="ad855617a566df1f282b86f94f82b5d862a150d3" translate="yes" xml:space="preserve">
          <source>Shows the Subversion externals. Use -r/--revision to specify a specific revision.</source>
          <target state="translated">Показывает внешние элементы Subversion.Использовать -r/-пересмотр для указания конкретной ревизии.</target>
        </trans-unit>
        <trans-unit id="71ee8b01832959c514dd0597fe4e33b8eee16c88" translate="yes" xml:space="preserve">
          <source>Shows the blame (also called annotation) information for a file. On a per line basis it shows the revision in which that line was last changed and the user that committed the change. The incremental version (which if configured is used automatically when JavaScript is enabled) uses Ajax to incrementally add blame info to the contents of given file.</source>
          <target state="translated">Показывает информацию об авторстве (также называемую аннотацией)файла.Показывает по каждой строке ревизию,в которой эта строка была изменена в последний раз,и пользователя,зафиксировавшего изменение.Инкрементная версия (если она настроена автоматически при включении JavaScript)использует Ajax для инкрементного добавления информации об авторстве в содержимое данного файла.</target>
        </trans-unit>
        <trans-unit id="048347ade13621e5b8c85cb1ac7da77939e1ffa9" translate="yes" xml:space="preserve">
          <source>Shows the commit ancestry graph starting from the commits named with &amp;lt;rev&amp;gt;s or &amp;lt;glob&amp;gt;s (or all refs under refs/heads and/or refs/tags) semi-visually.</source>
          <target state="translated">Полувизуально показывает граф предков коммитов, начиная с коммитов, названных с помощью &amp;lt;rev&amp;gt; s или &amp;lt;glob&amp;gt; s (или всех ссылок в разделах refs / Head и / или refs / tags).</target>
        </trans-unit>
        <trans-unit id="d974b70c2c30c4540e25d821a52ee3e8a89faf35" translate="yes" xml:space="preserve">
          <source>Shows the commit logs.</source>
          <target state="translated">Показывает журналы коммитов.</target>
        </trans-unit>
        <trans-unit id="afa4aeeb0e59c57a072646fb612e51228d9e8ce5" translate="yes" xml:space="preserve">
          <source>Shows the commits that changed &lt;code&gt;builtin/rev-list.c&lt;/code&gt;, including those commits that occurred before the file was given its present name.</source>
          <target state="translated">Показывает коммиты, которые изменили файл &lt;code&gt;builtin/rev-list.c&lt;/code&gt; , включая те коммиты, которые произошли до того, как файлу было присвоено его настоящее имя.</target>
        </trans-unit>
        <trans-unit id="0d2116a149d849234c7b09c554d651b4894474fc" translate="yes" xml:space="preserve">
          <source>Shows the contents of the file &lt;code&gt;Documentation/README&lt;/code&gt; as they were current in the 10th last commit of the branch &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">Показывает содержимое файла &lt;code&gt;Documentation/README&lt;/code&gt; в том виде, в каком оно было текущим в 10-м последнем коммите &lt;code&gt;next&lt;/code&gt; ветви .</target>
        </trans-unit>
        <trans-unit id="ccc9b587b1ac64f4516513aa59159ddedbb8a45f" translate="yes" xml:space="preserve">
          <source>Shows the difference between two revisions of the same file.</source>
          <target state="translated">Показывает разницу между двумя ревизиями одного и того же файла.</target>
        </trans-unit>
        <trans-unit id="8c5916992e873dd9df6491dab9446ed99d2ca43b" translate="yes" xml:space="preserve">
          <source>Shows the files and directories in a given repository path, at given revision. This is default command if no action is specified in the URL, and path is given.</source>
          <target state="translated">Показывает файлы и каталоги в заданном пути хранилища,с заданной ревизией.Это команда по умолчанию,если в URL не указано ни одного действия и указан путь.</target>
        </trans-unit>
        <trans-unit id="890a038d1a0efbf86457550ddb0f94462d132854" translate="yes" xml:space="preserve">
          <source>Shows the history including change diffs, but only from the &amp;ldquo;main branch&amp;rdquo; perspective, skipping commits that come from merged branches, and showing full diffs of changes introduced by the merges. This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch.</source>
          <target state="translated">Показывает историю, включая различия изменений, но только с точки зрения &amp;laquo;основной ветви&amp;raquo;, пропуская коммиты, исходящие из объединенных ветвей, и показывает полные различия изменений, внесенных в результате слияния. Это имеет смысл только при соблюдении строгой политики слияния всех тематических веток, оставаясь в одной ветви интеграции.</target>
        </trans-unit>
        <trans-unit id="a6e093f4d97154b146a36fee068be195950aadfd" translate="yes" xml:space="preserve">
          <source>Shows the subject of the commit pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">Показывает тему фиксации, на которую указывает тег &lt;code&gt;v1.0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b44c59ff3bc267fd7a4cbc7d7224ea23d69056e" translate="yes" xml:space="preserve">
          <source>Shows the tag &lt;code&gt;v1.0.0&lt;/code&gt;, along with the object the tags points at.</source>
          <target state="translated">Показывает тег &lt;code&gt;v1.0.0&lt;/code&gt; вместе с объектом, на который указывают теги.</target>
        </trans-unit>
        <trans-unit id="092526538596a5fe7b0994948947cb6672086546" translate="yes" xml:space="preserve">
          <source>Shows the tree pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">Показывает дерево, на которое указывает тег &lt;code&gt;v1.0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="436f07afaaab4f38cb1e7cf08118570b5794b7ea" translate="yes" xml:space="preserve">
          <source>Side note: Unfortunately, people tend to fixate on the written-in-shell aspect and periodically ask if git-filter-branch could be rewritten in another language to fix the performance issues. Not only does that ignore the bigger intrinsic problems with the design, it&amp;rsquo;d help less than you&amp;rsquo;d expect: if git-filter-branch itself were not shell, then the convenience functions (map(), skip_commit(), etc) and the &lt;code&gt;--setup&lt;/code&gt; argument could no longer be executed once at the beginning of the program but would instead need to be prepended to every user filter (and thus re-executed with every commit).</source>
          <target state="translated">Боковое примечание: к сожалению, люди, как правило, зацикливаются на аспекте написания в оболочке и периодически спрашивают, можно ли переписать git-filter-branch на другом языке, чтобы исправить проблемы с производительностью. Это не только игнорирует более серьезные внутренние проблемы с дизайном, но и помогает меньше, чем вы ожидаете: если бы сама git-filter-branch не была оболочкой, то вспомогательные функции (map (), skip_commit () и т. Д.) а аргумент &lt;code&gt;--setup&lt;/code&gt; больше не может выполняться один раз в начале программы, а вместо этого должен быть добавлен к каждому пользовательскому фильтру (и, таким образом, повторно выполняться при каждой фиксации).</target>
        </trans-unit>
        <trans-unit id="5a31cdd9cba3408afdcd7a253a0ac442839b0979" translate="yes" xml:space="preserve">
          <source>Side note: it may be possible to do step 2 with about:config and the following settings but no one&amp;rsquo;s tried yet.</source>
          <target state="translated">Боковое примечание: шаг 2 можно выполнить с about: config и следующими настройками, но никто еще не пробовал.</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="ff3ca843a6395cdc7d40686539d66fc535a8aaed" translate="yes" xml:space="preserve">
          <source>Signals the end of options; the rest of the parameters are &amp;lt;pathspec&amp;gt; limiters.</source>
          <target state="translated">Сигнализирует об окончании опций; остальные параметры являются ограничителями &amp;lt;pathspec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="221dd464fe44b38e2417a0ae6570e07534a3d7ea" translate="yes" xml:space="preserve">
          <source>Signing annotated tags during import from within fast-import is not supported. Trying to include your own PGP/GPG signature is not recommended, as the frontend does not (easily) have access to the complete set of bytes which normally goes into such a signature. If signing is required, create lightweight tags from within fast-import with &lt;code&gt;reset&lt;/code&gt;, then create the annotated versions of those tags offline with the standard &lt;code&gt;git tag&lt;/code&gt; process.</source>
          <target state="translated">Подписывание аннотированных тегов во время импорта из быстрого импорта не поддерживается. Пытаться включить свою собственную подпись PGP / GPG не рекомендуется, так как интерфейс (легко) не имеет доступа к полному набору байтов, который обычно входит в такую ​​подпись. Если требуется подпись, создайте легкие теги из быстрого импорта со &lt;code&gt;reset&lt;/code&gt; , а затем создайте аннотированные версии этих тегов в автономном режиме с помощью стандартного процесса &lt;code&gt;git tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e73ba37a846fd05171a6c58829f1ab0aa4e069d7" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files from the merge result. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort.</source>
          <target state="translated">Тихо перезаписывать проигнорированные файлы из результата слияния. Это поведение по умолчанию. Для &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; используйте --no-overwrite-ignore .</target>
        </trans-unit>
        <trans-unit id="a7ca941070a3e177fd03230132f7162630714492" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files when switching branches. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort the operation when the new branch contains ignored files.</source>
          <target state="translated">Тихая перезапись игнорируемых файлов при переключении ветвей. Это поведение по умолчанию. Используйте &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; , чтобы прервать операцию, когда новая ветвь содержит игнорируемые файлы.</target>
        </trans-unit>
        <trans-unit id="ffd6334e8fa69c33df5ff56f9d3009483e17a61e" translate="yes" xml:space="preserve">
          <source>Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history.</source>
          <target state="translated">Аналогично-глубина,за исключением того,что она определяет количество коммитов из текущей мелкой границы,а не из кончика истории каждой удаленной ветки.</target>
        </trans-unit>
        <trans-unit id="16434785e2f2781f48016d9fab6f521e71729a0f" translate="yes" xml:space="preserve">
          <source>Similar to -u. But when re-coding, the charset specified here is used instead of the one specified by i18n.commitencoding or UTF-8.</source>
          <target state="translated">Аналогично -u.Но при перекодировании используется кодовая страница,указанная здесь,а не та,что указана в i18n.commitencoding или UTF-8.</target>
        </trans-unit>
        <trans-unit id="35df8b1f29f7a7b94cf0adfb128190781a631c4c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--create&lt;/code&gt; except that if &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; already exists, it will be reset to &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt;. This is a convenient shortcut for:</source>
          <target state="translated">Аналогично &lt;code&gt;--create&lt;/code&gt; , за исключением того, что если &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; уже существует, она будет сброшена на &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt; . Это удобный ярлык для:</target>
        </trans-unit>
        <trans-unit id="a329dc4873c426988eca07322671d0e252450f5a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--file&lt;/code&gt; but use the given blob instead of a file. E.g. you can use &lt;code&gt;master:.gitmodules&lt;/code&gt; to read values from the file &lt;code&gt;.gitmodules&lt;/code&gt; in the master branch. See &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for a more complete list of ways to spell blob names.</source>
          <target state="translated">Аналогично &lt;code&gt;--file&lt;/code&gt; , но использует данный blob вместо файла. Например, вы можете использовать &lt;code&gt;master:.gitmodules&lt;/code&gt; для чтения значений из файла &lt;code&gt;.gitmodules&lt;/code&gt; в ветке master. См. Раздел &amp;laquo;УКАЗАНИЕ ИЗМЕНЕНИЙ&amp;raquo; в &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; для более полного списка способов написания имен blob.</target>
        </trans-unit>
        <trans-unit id="96ae9e148f9a848728ba835436ff9b06a051bf18" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--local&lt;/code&gt; except that &lt;code&gt;.git/config.worktree&lt;/code&gt; is read from or written to if &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; is present. If not it&amp;rsquo;s the same as &lt;code&gt;--local&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;--local&lt;/code&gt; , за исключением того, что &lt;code&gt;.git/config.worktree&lt;/code&gt; читается или записывается, если присутствует &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; . В противном случае это то же самое, что и &lt;code&gt;--local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9921875dc5f741363cc389c12f0a866da77aa3f9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects-edge&lt;/code&gt;, but it tries harder to find excluded commits at the cost of increased time. This is used instead of &lt;code&gt;--objects-edge&lt;/code&gt; to build &amp;ldquo;thin&amp;rdquo; packs for shallow repositories.</source>
          <target state="translated">Подобно &lt;code&gt;--objects-edge&lt;/code&gt; , но пытается найти исключенные коммиты за счет увеличения времени. Используется вместо &lt;code&gt;--objects-edge&lt;/code&gt; для создания &amp;laquo;тонких&amp;raquo; пакетов для неглубоких репозиториев.</target>
        </trans-unit>
        <trans-unit id="827a1dc116e1ce95f15ed3122df77ff565d151ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects&lt;/code&gt;, but also print the IDs of excluded commits prefixed with a &amp;ldquo;-&amp;rdquo; character. This is used by &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; to build a &amp;ldquo;thin&amp;rdquo; pack, which records objects in deltified form based on objects contained in these excluded commits to reduce network traffic.</source>
          <target state="translated">Аналогично &lt;code&gt;--objects&lt;/code&gt; , но также выводит идентификаторы исключенных коммитов с префиксом &amp;laquo;-&amp;raquo;. Это используется &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; для создания &amp;laquo;тонкого&amp;raquo; пакета, который записывает объекты в разделенной форме на основе объектов, содержащихся в этих исключенных коммитах, для уменьшения сетевого трафика.</target>
        </trans-unit>
        <trans-unit id="92613f50c8128533a943f904d4fab448ede98701" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--show-origin&lt;/code&gt; in that it augments the output of all queried config options with the scope of that value (local, global, system, command).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4263bd2603c01331f2d853a8cad6132476aed7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;--stat&lt;/code&gt; , но показывает количество добавленных и удаленных строк в десятичной системе счисления и путь без сокращений, чтобы сделать его более удобным для машины. Для двоичных файлов выводит два &lt;code&gt;-&lt;/code&gt; вместо &lt;code&gt;0 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507e19add19af137dd267ca439cffb2e494aaec7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows the number of added and deleted lines in decimal notation and the pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;. Turns off &quot;apply&quot;.</source>
          <target state="translated">Аналогично &lt;code&gt;--stat&lt;/code&gt; , но показывает количество добавленных и удаленных строк в десятичной системе счисления и путь без сокращений, чтобы сделать его более удобным для машины. Для двоичных файлов выводит два &lt;code&gt;-&lt;/code&gt; вместо &lt;code&gt;0 0&lt;/code&gt; . Отключает &quot;применять&quot;.</target>
        </trans-unit>
        <trans-unit id="cebb3f179c2f7afdfbf89dc9db3668db1b27ceee" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;assume unchanged&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">Аналогично &lt;code&gt;-t&lt;/code&gt; , но для файлов, помеченных как &lt;code&gt;assume unchanged&lt;/code&gt; , используются строчные буквы (см. &lt;a href=&quot;git-update-index&quot;&gt;Git-update-index [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c8a85313dff4970a1ca58c4ac403a9e5f1e1fd26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;fsmonitor valid&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">Аналогично &lt;code&gt;-t&lt;/code&gt; , но используйте строчные буквы для файлов, которые помечены как &lt;code&gt;fsmonitor valid&lt;/code&gt; (см. &lt;a href=&quot;git-update-index&quot;&gt;Git-update-index [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d753bc37a0732c319a3b637b8b9f6c853acf890c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt;, except that it is used if and only if the caller wants to the resulting ref list to prepare push commands. A helper supporting both push and fetch can use this to distinguish for which operation the output of &lt;code&gt;list&lt;/code&gt; is going to be used, possibly reducing the amount of work that needs to be performed.</source>
          <target state="translated">Подобно &lt;code&gt;list&lt;/code&gt; , за исключением того, что он используется тогда и только тогда, когда вызывающий хочет получить результирующий список ссылок для подготовки команд push. Помощник, поддерживающий как push, так и выборку, может использовать это, чтобы различать, для какой операции будет использоваться вывод &lt;code&gt;list&lt;/code&gt; , возможно, уменьшая объем работы, которую необходимо выполнить.</target>
        </trans-unit>
        <trans-unit id="d877d80bc2ddec8772b0999fdcc01984ec807892" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;zebra&lt;/code&gt;, but additional dimming of uninteresting parts of moved code is performed. The bordering lines of two adjacent blocks are considered interesting, the rest is uninteresting. &lt;code&gt;dimmed_zebra&lt;/code&gt; is a deprecated synonym.</source>
          <target state="translated">Аналогично &lt;code&gt;zebra&lt;/code&gt; , но выполняется дополнительное затемнение неинтересных частей перемещаемого кода. Границы двух соседних кварталов считаются интересными, остальное - неинтересным. &lt;code&gt;dimmed_zebra&lt;/code&gt; - устаревший синоним.</target>
        </trans-unit>
        <trans-unit id="bf8bcfbd909889dac33d6d2f89b63bfd39d6ccea" translate="yes" xml:space="preserve">
          <source>Similar to Git&amp;rsquo;s &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt;, this key is designed to be used in cases where &lt;code&gt;url&lt;/code&gt; points to an SVN repository via a read-only transport, to provide an alternate read/write transport. It is assumed that both keys point to the same repository. Unlike &lt;code&gt;commiturl&lt;/code&gt;, &lt;code&gt;pushurl&lt;/code&gt; is a base path. If either &lt;code&gt;commiturl&lt;/code&gt; or &lt;code&gt;pushurl&lt;/code&gt; could be used, &lt;code&gt;commiturl&lt;/code&gt; takes precedence.</source>
          <target state="translated">Подобно Git &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt; , этот ключ предназначен для использования в случаях, когда &lt;code&gt;url&lt;/code&gt; указывает на репозиторий SVN через транспортный доступ только для чтения, чтобы обеспечить альтернативный транспорт для чтения / записи. Предполагается, что оба ключа указывают на один и тот же репозиторий. В отличие от &lt;code&gt;commiturl&lt;/code&gt; , &lt;code&gt;pushurl&lt;/code&gt; - это базовый путь. Если можно использовать &lt;code&gt;commiturl&lt;/code&gt; или &lt;code&gt;pushurl&lt;/code&gt; , то &lt;code&gt;commiturl&lt;/code&gt; имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="91682fd49c343f959bbb6403f6f6863feba84482" translate="yes" xml:space="preserve">
          <source>Similar to above:</source>
          <target state="translated">Аналогично вышеуказанному:</target>
        </trans-unit>
        <trans-unit id="e5c2486b9a7763634d7231fd9214964f9084de7d" translate="yes" xml:space="preserve">
          <source>Similar to the above, but Apache can be used to return static files that are stored on disk. On many systems this may be more efficient as Apache can ask the kernel to copy the file contents from the file system directly to the network:</source>
          <target state="translated">Аналогично вышеописанному,но Apache может быть использован для возврата статических файлов,которые хранятся на диске.На многих системах это может быть более эффективно,так как Apache может попросить ядро скопировать содержимое файла из файловой системы непосредственно в сеть:</target>
        </trans-unit>
        <trans-unit id="e5d7cb2c6d73b9150cefdf2e64e945bbe4a78cee" translate="yes" xml:space="preserve">
          <source>Similar to the apply backend, by default the merge backend drops commits that become empty unless -i/--interactive is specified (in which case it stops and asks the user what to do). The merge backend also has an --empty={drop,keep,ask} option for changing the behavior of handling commits that become empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d010174e63754716183c2af28e1291061e29078" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users of the svnsync(1) command distributed with SVN 1.4.x and later.</source>
          <target state="translated">Аналогично опции useSvmProps;это для пользователей команды svnsync(1),распространяемой с SVN 1.4.x и более поздними версиями.</target>
        </trans-unit>
        <trans-unit id="742718eb04c74d19e18742babbe16ee5d5955f76" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users who need to remap the UUID manually. This may be useful in situations where the original UUID is not available via either useSvmProps or useSvnsyncProps.</source>
          <target state="translated">Аналогично опции useSvmProps;это для пользователей,которым необходимо восстановить UUID вручную.Это может быть полезно в ситуациях,когда оригинальный UUID недоступен либо через useSvmProps,либо через useSvnsyncProps.</target>
        </trans-unit>
        <trans-unit id="2b4ceb453e6bfcacc89ab013230d146d7c2efc84" translate="yes" xml:space="preserve">
          <source>Similar to two-line header for traditional &lt;code&gt;unified&lt;/code&gt; diff format, &lt;code&gt;/dev/null&lt;/code&gt; is used to signal created or deleted files.</source>
          <target state="translated">Подобно двухстрочному заголовку для традиционного &lt;code&gt;unified&lt;/code&gt; формата сравнения, &lt;code&gt;/dev/null&lt;/code&gt; используется для обозначения созданных или удаленных файлов.</target>
        </trans-unit>
        <trans-unit id="9acea96e7cbe682e6caa9d2b57eedce27f5ebab4" translate="yes" xml:space="preserve">
          <source>Similarly, for a maintenance release, &lt;code&gt;maint&lt;/code&gt; is tracking the commits to be released. Therefore, in the steps above simply tag and push &lt;code&gt;maint&lt;/code&gt; rather than &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">Точно так же для отладочного релиза &lt;code&gt;maint&lt;/code&gt; отслеживает выпускаемые коммиты. Поэтому на описанных выше шагах просто пометьте и нажмите &lt;code&gt;maint&lt;/code&gt; , а не &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8638660115fa0755b6d41e0f65af85c161534425" translate="yes" xml:space="preserve">
          <source>Similarly, if a linked working tree is moved without using &lt;code&gt;git worktree
move&lt;/code&gt;, the main working tree (or bare repository) will be unable to locate it. Running &lt;code&gt;repair&lt;/code&gt; within the recently-moved working tree will reestablish the connection. If multiple linked working trees are moved, running &lt;code&gt;repair&lt;/code&gt; from any working tree with each tree&amp;rsquo;s new &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; as an argument, will reestablish the connection to all the specified paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4a6323889bb06df07efb39ac02d863fb790808" translate="yes" xml:space="preserve">
          <source>Similarly, no more helpers will be consulted once both username and password had been provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cf6e3fc26d2562fdbc09f3e09e2deb878c7a85" translate="yes" xml:space="preserve">
          <source>Similarly, when moving files around, one can find that filenames with non-ascii or special characters end up in a different directory, one that includes a double quote character. (This is technically the same issue as above with quoting, but perhaps an interesting different way that it can and has manifested as a problem.)</source>
          <target state="translated">Аналогичным образом,при перемещении файлов можно обнаружить,что имена файлов с не-ascii или специальными символами попадают в другой каталог,в котором присутствует символ двойной кавычки.(Технически это та же самая проблема,что и выше с кавычками,но,возможно,интересный другой способ,который может и проявился в виде проблемы).</target>
        </trans-unit>
        <trans-unit id="47fa1a83138cf11ea34d19a92cc77db11eb4b97c" translate="yes" xml:space="preserve">
          <source>Similarly, when the &quot;recursive&quot; merge strategy runs, and finds that there are criss-cross merges and thus more than one merge base (which is fairly unusual, but it does happen), it will generate one temporary midway tree (or possibly even more, if you had lots of criss-crossing merges and more than two merge bases) as a temporary internal merge base, and again, those are real objects, but the end result will not end up pointing to them, so they end up &quot;dangling&quot; in your repository.</source>
          <target state="translated">Аналогично,когда запущена стратегия &quot;рекурсивного&quot; слияния,и вы обнаружите,что существуют перекрестные слияния и,таким образом,более одной базы слияния (что довольно необычно,но такое случается),она сгенерирует одно временное дерево посередине (или,возможно,даже больше,если у вас было много перекрестных слияний и более двух баз слияний)в качестве временной базы внутренних слияний,и опять же,это реальные объекты,но конечный результат не будет указывать на них,так что они окажутся &quot;висящими&quot; в вашем репозитории.</target>
        </trans-unit>
        <trans-unit id="50765cb4cf598285ffabcacb2eda47bdf85bbc67" translate="yes" xml:space="preserve">
          <source>Similarly, you need only trust the SHA-1 name of a top-level tree object to trust the contents of the entire directory that it refers to, and if you receive the SHA-1 name of a commit from a trusted source, then you can easily verify the entire history of commits reachable through parents of that commit, and all of those contents of the trees referred to by those commits.</source>
          <target state="translated">Аналогично,вам нужно доверять только SHA-1 имени объекта дерева верхнего уровня,чтобы доверять содержимому всего каталога,на который он ссылается,а если вы получаете SHA-1 имя коммита из доверенного источника,то вы можете легко проверить всю историю коммитов,доступных через родителей этого коммита,и все содержимое деревьев,на которые ссылаются эти коммиты.</target>
        </trans-unit>
        <trans-unit id="35267477ddadd32e54d2580eaf5f6347904aefaa" translate="yes" xml:space="preserve">
          <source>Simple UNIX mbox splitter program</source>
          <target state="translated">Простая программа разветвителя UNIX mbox</target>
        </trans-unit>
        <trans-unit id="e6081dd40a736a561294c958c5f476bf808af40b" translate="yes" xml:space="preserve">
          <source>Simplifies the history to the simplest history explaining the final state of the tree. Simplest because it prunes some side branches if the end result is the same (i.e. merging branches with the same content)</source>
          <target state="translated">Упрощает историю до самой простой истории,объясняющей конечное состояние дерева.Простейший,потому что он обрезает некоторые боковые ветви,если конечный результат одинаков (т.е.слияние ветвей с одинаковым содержанием).</target>
        </trans-unit>
        <trans-unit id="7d47a55c52a010c445880763e4c0c53ec8d956ef" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;dcommit&lt;/code&gt; uses rebase internally, any Git branches you &lt;code&gt;git push&lt;/code&gt; to before &lt;code&gt;dcommit&lt;/code&gt; on will require forcing an overwrite of the existing ref on the remote repository. This is generally considered bad practice, see the &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; documentation for details.</source>
          <target state="translated">Поскольку &lt;code&gt;dcommit&lt;/code&gt; использует внутреннюю перестановку , любые ветки Git, которые вы &lt;code&gt;git push&lt;/code&gt; перед &lt;code&gt;dcommit&lt;/code&gt; , потребуют принудительной перезаписи существующей ссылки в удаленном репозитории. Обычно это считается плохой практикой, подробности см. В документации &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3cbf9539838f097e44d7366548fff10dd5a4bb6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;git fast-import&lt;/code&gt; cannot tag trees, you will not be able to export the linux.git repository completely, as it contains a tag referencing a tree instead of a commit.</source>
          <target state="translated">Поскольку &lt;code&gt;git fast-import&lt;/code&gt; не может тегировать деревья, вы не сможете полностью экспортировать репозиторий linux.git, поскольку он содержит тег, ссылающийся на дерево, а не на фиксацию.</target>
        </trans-unit>
        <trans-unit id="e8a0aceddf81ac41c98d5a8bdbe00960df868272" translate="yes" xml:space="preserve">
          <source>Since every developer&amp;rsquo;s repository has the same complete copy of the project history, no repository is special, and it is trivial for another developer to take over maintenance of a project, either by mutual agreement, or because a maintainer becomes unresponsive or difficult to work with.</source>
          <target state="translated">Поскольку репозиторий каждого разработчика имеет одну и ту же полную копию истории проекта, ни один репозиторий не является особенным, и для другого разработчика тривиально взять на себя сопровождение проекта либо по взаимному соглашению, либо потому, что сопровождающий перестает отвечать или с ним трудно работать. ,</target>
        </trans-unit>
        <trans-unit id="ff45ae2cc9973e736a0612a33b064d4efb949c7a" translate="yes" xml:space="preserve">
          <source>Since keeping up-to-date with both branches and tags on the remote is a common use-case the &lt;code&gt;--prune-tags&lt;/code&gt; option can be supplied along with &lt;code&gt;--prune&lt;/code&gt; to prune local tags that don&amp;rsquo;t exist on the remote, and force-update those tags that differ. Tag pruning can also be enabled with &lt;code&gt;fetch.pruneTags&lt;/code&gt; or &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; in the config. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Поскольку поддержание актуальности как веток, так и тегов на удаленном компьютере является обычным вариантом использования, опция &lt;code&gt;--prune-tags&lt;/code&gt; может быть предоставлена ​​вместе с &lt;code&gt;--prune&lt;/code&gt; для удаления локальных тегов, которые не существуют на удаленном компьютере, и принудительно обновить те теги, которые отличаются. &lt;code&gt;fetch.pruneTags&lt;/code&gt; тегов также можно включить с помощью fetch.pruneTags или &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; в конфигурации. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0932a869e1657064106036f8682ab82f7b34c539" translate="yes" xml:space="preserve">
          <source>Since object names are computed the same way in every repository, the same content stored in two repositories will always be stored under the same name.</source>
          <target state="translated">Поскольку имена объектов вычисляются одинаково в каждом репозитории,одно и то же содержимое,хранящееся в двух репозиториях,всегда будет храниться под одним и тем же именем.</target>
        </trans-unit>
        <trans-unit id="bea459735363a6dcc4076e4ad600cb49ce5e1876" translate="yes" xml:space="preserve">
          <source>Since submodules may have unpushed changes or untracked files, removing them could result in data loss. Thus, changing sparse inclusion/exclusion rules will not cause an already checked out submodule to be removed from the working copy. Said another way, just as &lt;code&gt;checkout&lt;/code&gt; will not cause submodules to be automatically removed or initialized even when switching between branches that remove or add submodules, using &lt;code&gt;sparse-checkout&lt;/code&gt; to reduce or expand the scope of &quot;interesting&quot; files will not cause submodules to be automatically deinitialized or initialized either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6783a475fdc4e2463b00ffd216c9d8a1b41c5ce" translate="yes" xml:space="preserve">
          <source>Since the blob is entirely defined by its data, if two files in a directory tree (or in multiple different versions of the repository) have the same contents, they will share the same blob object. The object is totally independent of its location in the directory tree, and renaming a file does not change the object that file is associated with.</source>
          <target state="translated">Так как блок полностью определяется его данными,если два файла в дереве каталогов (или в нескольких разных версиях репозитория)имеют одно и то же содержимое,то они будут совместно использовать один и тот же объект блоба.Объект полностью не зависит от его расположения в дереве каталогов,и переименование файла не изменяет объект,с которым связан этот файл.</target>
        </trans-unit>
        <trans-unit id="a3fb22d6e6da288d244e8acdd9955bf43f0ad8d0" translate="yes" xml:space="preserve">
          <source>Since the current state of closing.txt is cached in the index file, it is listed as &quot;Changes to be committed&quot;. Since file.txt has changes in the working directory that aren&amp;rsquo;t reflected in the index, it is marked &quot;changed but not updated&quot;. At this point, running &quot;git commit&quot; would create a commit that added closing.txt (with its new contents), but that didn&amp;rsquo;t modify file.txt.</source>
          <target state="translated">Поскольку текущее состояние close.txt кэшируется в индексном файле, оно указано как &amp;laquo;Изменения, которые необходимо зафиксировать&amp;raquo;. Поскольку в файле file.txt есть изменения в рабочем каталоге, которые не отражаются в индексе, он помечен как &amp;laquo;изменено, но не обновлено&amp;raquo;. На этом этапе запуск &amp;laquo;git commit&amp;raquo; создаст фиксацию, которая добавит close.txt (с его новым содержимым), но не изменит file.txt.</target>
        </trans-unit>
        <trans-unit id="78b19ba60aba5b2f618c3990a75d2fca7411595a" translate="yes" xml:space="preserve">
          <source>Since the noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps and useSvmProps options all affect the metadata generated and used by &lt;code&gt;git svn&lt;/code&gt;; they &lt;strong&gt;must&lt;/strong&gt; be set in the configuration file before any history is imported and these settings should never be changed once they are set.</source>
          <target state="translated">Поскольку параметры noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps и useSvmProps влияют на метаданные, генерируемые и используемые &lt;code&gt;git svn&lt;/code&gt; ; они &lt;strong&gt;должны&lt;/strong&gt; быть установлены в файле конфигурации перед импортом любой истории, и эти настройки никогда не должны изменяться после их установки.</target>
        </trans-unit>
        <trans-unit id="6c0fcca9337c1cb048efaf57760c6fdc1a7b6b6f" translate="yes" xml:space="preserve">
          <source>Singe line category of a project, used to group projects if &lt;code&gt;$projects_list_group_categories&lt;/code&gt; is enabled. By default (file and configuration variable absent), uncategorized projects are put in the &lt;code&gt;$project_list_default_category&lt;/code&gt; category. You can use the &lt;code&gt;gitweb.category&lt;/code&gt; repo configuration variable, but the file takes precedence.</source>
          <target state="translated">Однострочная категория проекта, используемая для группировки проектов, если включен &lt;code&gt;$projects_list_group_categories&lt;/code&gt; . По умолчанию (файл и переменная конфигурации отсутствуют) проекты без категорий помещаются в категорию &lt;code&gt;$project_list_default_category&lt;/code&gt; . Вы можете использовать переменную конфигурации &lt;code&gt;gitweb.category&lt;/code&gt; , но файл имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="1622ee3a3548a98ace63f4a1f20c802cbd3d6865" translate="yes" xml:space="preserve">
          <source>Single Tree Merge</source>
          <target state="translated">Слияние одного дерева</target>
        </trans-unit>
        <trans-unit id="68fe6fe857d1a576bbea2c5ba543ec91391124bd" translate="yes" xml:space="preserve">
          <source>Single URL for gitweb and for fetching</source>
          <target state="translated">Одиночный URL для gitweb и для получения</target>
        </trans-unit>
        <trans-unit id="c63aa67778ae9fde52963fd98eabefccd9f535ba" translate="yes" xml:space="preserve">
          <source>Size of the Git repository: In its current form Git scales up poorly for large repositories containing content that is not compressed by delta computation between trees. For example, you can use submodules to hold large binary assets and these repositories can be shallowly cloned such that you do not have a large history locally.</source>
          <target state="translated">Размер Git-репозитория:В своём нынешнем виде Git плохо масштабируется для больших репозиториев,содержащих контент,который не сжимается при вычислении дельты между деревьями.Например,вы можете использовать субмодули для хранения больших бинарных активов,и эти репозитории могут быть клонированы неглубоко,так что у вас не будет большой истории локально.</target>
        </trans-unit>
        <trans-unit id="109e0b1e1d08be0f664fabdbefc14a841a52fd41" translate="yes" xml:space="preserve">
          <source>Skip &quot;branches&quot; and &quot;tags&quot; of first level directories</source>
          <target state="translated">Пропустить &quot;ветки&quot; и &quot;теги&quot; каталогов первого уровня</target>
        </trans-unit>
        <trans-unit id="89ac85d0525bb0b20e17b8b50eb25e661e2c2664" translate="yes" xml:space="preserve">
          <source>Skip &quot;doc*&quot; directory for every fetch</source>
          <target state="translated">Пропустить директорию &quot;doc*&quot; для каждой выборки.</target>
        </trans-unit>
        <trans-unit id="160b3d2c26cf27627f75b323f1f2f273b38eb0f3" translate="yes" xml:space="preserve">
          <source>Skip &lt;code&gt;number&lt;/code&gt; commits before starting to show the commit output.</source>
          <target state="translated">Пропустить &lt;code&gt;number&lt;/code&gt; коммитов перед тем, как начать показывать результат фиксации.</target>
        </trans-unit>
        <trans-unit id="143f0d9f0b5891b48ad38fad90174c475ab3d608" translate="yes" xml:space="preserve">
          <source>Skip algorithm</source>
          <target state="translated">Алгоритм пропуска</target>
        </trans-unit>
        <trans-unit id="fd9da89bf39cfad867f423a79c66781ba5934141" translate="yes" xml:space="preserve">
          <source>Skip algorithm discussed</source>
          <target state="translated">Обсуждался алгоритм пропуска</target>
        </trans-unit>
        <trans-unit id="e6458f822412c73c4c309bd3d568b1a062547077" translate="yes" xml:space="preserve">
          <source>Skip and remove all lines starting with comment character (default &lt;code&gt;#&lt;/code&gt;).</source>
          <target state="translated">Пропустить и удалить все строки, начинающиеся с символа комментария (по умолчанию &lt;code&gt;#&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d0905b7d9c2aadf471da8a0572104f192b6463b" translate="yes" xml:space="preserve">
          <source>Skip move or rename actions which would lead to an error condition. An error happens when a source is neither existing nor controlled by Git, or when it would overwrite an existing file unless &lt;code&gt;-f&lt;/code&gt; is given.</source>
          <target state="translated">Пропустите действия по перемещению или переименованию, которые могут привести к возникновению ошибки. Ошибка возникает, когда источник не существует и не контролируется Git, или когда он перезаписывает существующий файл, если не указан &lt;code&gt;-f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93791f01919fc21e7203f6ad13249cb4adbabc2c" translate="yes" xml:space="preserve">
          <source>Skip output of blob objects and instead refer to blobs via their original SHA-1 hash. This is useful when rewriting the directory structure or history of a repository without touching the contents of individual files. Note that the resulting stream can only be used by a repository which already contains the necessary objects.</source>
          <target state="translated">Пропустите вывод блоб-объектов и вместо этого обратитесь к блобам через их оригинальный SHA-1 хэш.Это полезно при переписывании структуры каталогов или истории репозитория,не затрагивая содержимое отдельных файлов.Обратите внимание,что результирующий поток может быть использован только тем репозиторием,который уже содержит необходимые объекты.</target>
        </trans-unit>
        <trans-unit id="3704502c09a46589e3fc638d0b7431bdbfb4de69" translate="yes" xml:space="preserve">
          <source>Skip paths matching the regex.</source>
          <target state="translated">Пропустить пути,совпадающие с регексом.</target>
        </trans-unit>
        <trans-unit id="8024d787464bdc42cf9e1692fcecd2225427e388" translate="yes" xml:space="preserve">
          <source>Skip the current commit and continue with the rest of the sequence.</source>
          <target state="translated">Пропустите текущий коммит и продолжайте с оставшейся частью последовательности.</target>
        </trans-unit>
        <trans-unit id="8b89cae0a7a7a1a500c597f44f79f240ec0b9f01" translate="yes" xml:space="preserve">
          <source>Skip the current patch. This is only meaningful when restarting an aborted patch.</source>
          <target state="translated">Пропустите текущую заплатку.Это имеет смысл только при перезапуске прерванного патча.</target>
        </trans-unit>
        <trans-unit id="37f2142ef251b529e2961f797b73a85bc8215244" translate="yes" xml:space="preserve">
          <source>Skip the first &amp;lt;nn&amp;gt; numbers, for example if -f3 is specified, start the numbering with 0004.</source>
          <target state="translated">Пропустите первые числа &amp;lt;nn&amp;gt;, например, если указан -f3, начните нумерацию с 0004.</target>
        </trans-unit>
        <trans-unit id="53b34cae8fb29a9d928b4eaf4c1d1171200a7cd2" translate="yes" xml:space="preserve">
          <source>Skip untracked files matching pattern. Note that pattern is a shell wildcard pattern. See EXCLUDE PATTERNS below for more information.</source>
          <target state="translated">Пропустить шаблон совпадения неотслеживаемых файлов.Обратите внимание,что шаблон-это шаблон подстановочного знака оболочки.Дополнительную информацию смотрите в разделе ЭКСКЛЮДНЫЕ ШАБЛОНЫ ниже.</target>
        </trans-unit>
        <trans-unit id="5c514bc7b54c5d446f341bd390aa604bcfe7a779" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit</source>
          <target state="translated">Skip-worktree bit</target>
        </trans-unit>
        <trans-unit id="1c6f4418b45f18f2276258a670ff4fb3ee82370c" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit can be defined in one (long) sentence: When reading an entry, if it is marked as skip-worktree, then Git pretends its working directory version is up to date and read the index version instead.</source>
          <target state="translated">Бит пропуска рабочего стола может быть определен в одном (длинном)предложении:При чтении записи,если она помечена как skip-worktree,Git делает вид,что его версия рабочего каталога обновлена,и вместо этого читает версию индекса.</target>
        </trans-unit>
        <trans-unit id="497781ce21708a17d4e26d12bd089a723d673b06" translate="yes" xml:space="preserve">
          <source>So &quot;git bisect&quot; is designed to help find a &quot;first bad commit&quot;. And to be as efficient as possible, it tries to perform a binary search.</source>
          <target state="translated">Так что &quot;гит-бисект&quot; создан,чтобы помочь найти &quot;первый плохой коммит&quot;.И чтобы быть как можно более эффективным,он пытается выполнить бинарный поиск.</target>
        </trans-unit>
        <trans-unit id="2f63b69e28337cf529c035b03d9daaf28859996c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;git diff&lt;/code&gt; is comparing against something other than the head. The thing that it&amp;rsquo;s comparing against is actually the index file, which is stored in .git/index in a binary format, but whose contents we can examine with ls-files:</source>
          <target state="translated">Итак, &lt;code&gt;git diff&lt;/code&gt; сравнивает с чем-то другим, кроме головы. То, с чем он сравнивает, на самом деле является индексным файлом, который хранится в .git / index в двоичном формате, но содержимое которого мы можем изучить с помощью ls-файлов:</target>
        </trans-unit>
        <trans-unit id="87fbbf25154de6df0238ad0568533ed6007a8d44" translate="yes" xml:space="preserve">
          <source>So a good work-flow should be designed around the above points. That is making bisecting easier, more useful and standard.</source>
          <target state="translated">Поэтому хороший рабочий поток должен быть рассчитан вокруг вышеуказанных точек.Это делает биссектрису более легкой,полезной и стандартной.</target>
        </trans-unit>
        <trans-unit id="fe9010d034fcf65a3dd663b44598da34c322ed58" translate="yes" xml:space="preserve">
          <source>So be careful when using this with a refspec like &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt;, or any other refspec which might map references from multiple remotes to the same local namespace.</source>
          <target state="translated">Поэтому будьте осторожны при использовании этого с refspec, например &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; , или с любым другим refspec, который может отображать ссылки с нескольких пультов дистанционного управления в одно и то же локальное пространство имен.</target>
        </trans-unit>
        <trans-unit id="2b170fc73b3dfabca43a4cde5eef61bd350b47e1" translate="yes" xml:space="preserve">
          <source>So by default &lt;code&gt;git commit&lt;/code&gt; uses the index to create the commit, not the working tree; the &quot;-a&quot; option to commit tells it to first update the index with all changes in the working tree.</source>
          <target state="translated">Таким образом, по умолчанию &lt;code&gt;git commit&lt;/code&gt; использует индекс для создания фиксации, а не рабочее дерево; параметр &quot;-a&quot; для фиксации указывает ему сначала обновить индекс со всеми изменениями в рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="f86c14eb732dcf1c0bad37f2fc6a2cc528890e0c" translate="yes" xml:space="preserve">
          <source>So doing a &lt;code&gt;git diff-index --cached&lt;/code&gt; is basically very useful when you are asking yourself &quot;what have I already marked for being committed, and what&amp;rsquo;s the difference to a previous tree&quot;.</source>
          <target state="translated">Таким образом, выполнение &lt;code&gt;git diff-index --cached&lt;/code&gt; в основном очень полезно, когда вы спрашиваете себя &amp;laquo;что я уже отмечал для фиксации , и в чем разница с предыдущим деревом&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d45f632df019622532eb259f26fdc9a9f2411148" translate="yes" xml:space="preserve">
          <source>So for example when &lt;code&gt;--thread&lt;/code&gt; and &lt;code&gt;--no-chain-reply-to&lt;/code&gt; are specified, the second and subsequent patches will be replies to the first one like in the illustration below where &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; is in reply to &lt;code&gt;[PATCH 0/2]&lt;/code&gt;:</source>
          <target state="translated">Так, например, когда &lt;code&gt;--thread&lt;/code&gt; и --no &lt;code&gt;--no-chain-reply-to&lt;/code&gt; , второй и последующие патчи будут ответами на первый, как на иллюстрации ниже, где &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; отвечает на &lt;code&gt;[PATCH 0/2]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8dac83a478835c1820a1dc8da47f73a69f302106" translate="yes" xml:space="preserve">
          <source>So git bisect is unconditional goodness - and feel free to quote that ;-)</source>
          <target state="translated">Таким образом,гит-бисект-это безусловная доброта-и не стесняйтесь процитировать это ;-)</target>
        </trans-unit>
        <trans-unit id="9a21b5de38126daf9f68802ae918237cb622de11" translate="yes" xml:space="preserve">
          <source>So if there is no bad merge base, the bisection process continues as usual after this step.</source>
          <target state="translated">Таким образом,если нет плохой базы для слияния,то процесс биссекции продолжается как обычно после этого шага.</target>
        </trans-unit>
        <trans-unit id="d61ad44b1ad1935830d69abe827279c6ac721854" translate="yes" xml:space="preserve">
          <source>So if we could just &quot;replace&quot; Z by Z' when we bisect, then we would not need to add anything to a script. It would just work for anyone in the project sharing the special branches and the replacements.</source>
          <target state="translated">Так что если бы мы могли просто &quot;заменить&quot; Z на Z,когда мы бисектируем,тогда нам не нужно было бы ничего добавлять в скрипт.Это просто сработало бы для любого в проекте,кто разделяет специальные ветки и замены.</target>
        </trans-unit>
        <trans-unit id="6be137f4b3e3bebc88bcbf9a9fd9420c4009228f" translate="yes" xml:space="preserve">
          <source>So if you know how to create test cases and how to bisect, you will be subject to a virtuous circle:</source>
          <target state="translated">Так что,если вы знаете,как создавать тестовые кейсы и как бисектировать,вы будете подвержены добродетельному кругу:</target>
        </trans-unit>
        <trans-unit id="b28d1446f9340641647b1bfa92704042d040df77" translate="yes" xml:space="preserve">
          <source>So if you used &quot;git bisect skip&quot; (or the run script exited with special code 125) you could get a result like this:</source>
          <target state="translated">Таким образом,если вы использовали &quot;git-бисектный пропуск&quot; (или скрипт run exited со специальным кодом 125),вы можете получить результат,подобный этому:</target>
        </trans-unit>
        <trans-unit id="edcb1ada2530409c42369421497ba8e78619bff1" translate="yes" xml:space="preserve">
          <source>So in the above example the best bisection point is commit C.</source>
          <target state="translated">Поэтому в приведенном выше примере лучшим пунктом биссекции является коммит C.</target>
        </trans-unit>
        <trans-unit id="6fdeecf50af4098d1933aa89ebcede0a8177561f" translate="yes" xml:space="preserve">
          <source>So in the end this means that to find the best bisection commits we should maximize the function:</source>
          <target state="translated">Таким образом,в конце концов,это означает,что для того,чтобы найти лучшие бисекционные коммиты,мы должны максимизировать функцию:</target>
        </trans-unit>
        <trans-unit id="58a2f1d134fdcd7a3743e88aa224e9253e6fbd42" translate="yes" xml:space="preserve">
          <source>So it is a fact that commits near an untestable commit have a high probability of being untestable themselves. And the best bisection commits are often found together too (due to the bisection algorithm).</source>
          <target state="translated">Таким образом,факт,что коммиты рядом с непроверяемым коммитом имеют высокую вероятность быть непроверяемыми сами по себе.И лучшие биссекционные коммиты часто встречаются и вместе (благодаря биссекционному алгоритму).</target>
        </trans-unit>
        <trans-unit id="aa016e179ca75d2a0eb71de197505264fa3225e9" translate="yes" xml:space="preserve">
          <source>So now we know how Git uses the object database to represent a project&amp;rsquo;s history:</source>
          <target state="translated">Итак, теперь мы знаем, как Git использует объектную базу данных для представления истории проекта:</target>
        </trans-unit>
        <trans-unit id="ce2a816c8c6bc197cebf7da353940391ec82e2e3" translate="yes" xml:space="preserve">
          <source>So now you know that the missing blob was the data for a file named &lt;code&gt;myfile&lt;/code&gt;. And chances are you can also identify the directory&amp;mdash;​let&amp;rsquo;s say it&amp;rsquo;s in &lt;code&gt;somedirectory&lt;/code&gt;. If you&amp;rsquo;re lucky the missing copy might be the same as the copy you have checked out in your working tree at &lt;code&gt;somedirectory/myfile&lt;/code&gt;; you can test whether that&amp;rsquo;s right with &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object[1]&lt;/a&gt;:</source>
          <target state="translated">Итак, теперь вы знаете, что отсутствующий большой двоичный объект был данными для файла с именем &lt;code&gt;myfile&lt;/code&gt; . И есть вероятность, что вы также можете идентифицировать каталог - скажем, он находится в &lt;code&gt;somedirectory&lt;/code&gt; . Если вам повезет, отсутствующая копия может быть такой же, как и копия, которую вы &lt;code&gt;somedirectory/myfile&lt;/code&gt; в своем рабочем дереве в somedirectory / myfile ; вы можете проверить, правильно ли это, с помощью &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="02795e1f800cead1112ee5200f5eaf14f8868f55" translate="yes" xml:space="preserve">
          <source>So of course it&amp;rsquo;s much better as it&amp;rsquo;s O(N * T) vs O(N * T * M) if you would test everything after each commit.</source>
          <target state="translated">Так что, конечно, намного лучше, поскольку это O (N * T) против O (N * T * M), если вы будете тестировать все после каждой фиксации.</target>
        </trans-unit>
        <trans-unit id="bf839044c5c4761411ba28111f62e6182a819140" translate="yes" xml:space="preserve">
          <source>So only the W and B commits will be kept. Because commits X and Y will have been removed by rules a) and b) respectively, and because commits G are removed by rule b) too.</source>
          <target state="translated">Так что только W и B будут сохранены.Потому что коммиты X и Y будут удалены по правилам a)и b)соответственно,а также потому,что коммиты G также будут удалены по правилу b).</target>
        </trans-unit>
        <trans-unit id="2adeb678ade18152fba70f98a363a63cf540c6c1" translate="yes" xml:space="preserve">
          <source>So regressions are fought all the time by developers, and indeed it is well known that bugs should be fixed as soon as possible, so as soon as they are found. That&amp;rsquo;s why it is interesting to have good tools for this purpose.</source>
          <target state="translated">Поэтому разработчики постоянно борются с регрессами, и действительно хорошо известно, что ошибки следует исправлять как можно скорее, как только они будут обнаружены. Поэтому интересно иметь для этого хорошие инструменты.</target>
        </trans-unit>
        <trans-unit id="e3329398bcdff474dec989568418215901207762" translate="yes" xml:space="preserve">
          <source>So test suites and &quot;git bisect&quot; are complementary tools that are very powerful and efficient when used together.</source>
          <target state="translated">Поэтому тестовые наборы и &quot;git-бисект&quot; являются дополнительными инструментами,которые очень мощны и эффективны при совместном использовании.</target>
        </trans-unit>
        <trans-unit id="af6a5f3f7d1b778946d7ea3d80d407ba283ecbfd" translate="yes" xml:space="preserve">
          <source>So the algorithm used by &quot;git bisect&quot; to find the best bisection commit when there are no skipped commits is the following:</source>
          <target state="translated">Итак,алгоритм,используемый &quot;git-бисектом&quot; для поиска лучшего бисексуального коммита,когда нет пропущенных коммитов,следующий:</target>
        </trans-unit>
        <trans-unit id="d52372a3732a9693c38928f4af80ece55caba390" translate="yes" xml:space="preserve">
          <source>So the current algorithm seems to be the best possible given what we initially supposed.</source>
          <target state="translated">Таким образом,текущий алгоритм кажется лучшим из возможных,учитывая то,что мы изначально предполагали.</target>
        </trans-unit>
        <trans-unit id="ff070bb5b96ce6bdea0ee7e21e6149356aab622c" translate="yes" xml:space="preserve">
          <source>So the ideal is usually to produce a series of patches such that:</source>
          <target state="translated">Так что идеальным вариантом,как правило,является производство серии таких патчей:</target>
        </trans-unit>
        <trans-unit id="a9929fd0a7cc637ffed9aa6825e45ac8df015448" translate="yes" xml:space="preserve">
          <source>So to help people find commits that introduce a &quot;bad&quot; behavior, the &quot;git bisect&quot; set of commands was invented. And it follows of course that in &quot;git bisect&quot; parlance, commits where the &quot;interesting behavior&quot; is present are called &quot;bad&quot; commits, while other commits are called &quot;good&quot; commits. And a commit that introduce the behavior we are interested in is called a &quot;first bad commit&quot;. Note that there could be more than one &quot;first bad commit&quot; in the commit space we are searching.</source>
          <target state="translated">Чтобы помочь людям найти коммиты,которые вводят &quot;плохое&quot; поведение,был придуман набор команд &quot;git-бисект&quot;.И конечно же,из этого следует,что в языке &quot;git-бисектов&quot; коммиты,в которых присутствует &quot;интересное поведение&quot;,называются &quot;плохими&quot; коммитами,в то время как другие коммиты называются &quot;хорошими&quot; коммитами.А коммит,представляющий интересное нам поведение,называется &quot;первым плохим коммитом&quot;.Обратите внимание,что в области коммитов,которую мы ищем,может быть более одного &quot;первого плохого коммита&quot;.</target>
        </trans-unit>
        <trans-unit id="15c2cfea7209fe12c9a7f928eefdf57e7efd00f9" translate="yes" xml:space="preserve">
          <source>So to introduce some real trust in the system, the only thing you need to do is to digitally sign just 'one' special note, which includes the name of a top-level commit. Your digital signature shows others that you trust that commit, and the immutability of the history of commits tells others that they can trust the whole history.</source>
          <target state="translated">Поэтому,чтобы ввести в систему реальное доверие,единственное,что вам нужно сделать,это подписать в цифровом виде только &quot;одну&quot; специальную заметку,которая включает в себя имя коммита верхнего уровня.Ваша цифровая подпись показывает другим,что вы доверяете этому коммиту,а неизменность истории коммитов говорит другим,что они могут доверять всей истории.</target>
        </trans-unit>
        <trans-unit id="30ae77f4affa991e80efc3f102be0a94e3ede52f" translate="yes" xml:space="preserve">
          <source>So to introduce some real trust in the system, the only thing you need to do is to digitally sign just &lt;code&gt;one&lt;/code&gt; special note, which includes the name of a top-level commit. Your digital signature shows others that you trust that commit, and the immutability of the history of commits tells others that they can trust the whole history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909741d50394835646e0e74eaab338b4f855de2e" translate="yes" xml:space="preserve">
          <source>So to populate the index with the two files you just created, you can do</source>
          <target state="translated">Итак,чтобы заполнить индекс двумя файлами,которые вы только что создали,вы можете сделать...</target>
        </trans-unit>
        <trans-unit id="f597f374b45ae15a5bbfbd431d1e5af284187139" translate="yes" xml:space="preserve">
          <source>So using a PRNG with a bias to favor commits away from the good and bad commits looked like a good choice.</source>
          <target state="translated">Таким образом,использование PRNG с предвзятостью в пользу коммитов в сторону от хороших и плохих коммитов выглядело хорошим выбором.</target>
        </trans-unit>
        <trans-unit id="1d3965fc903eee9b8f55d2c4363ff10ff9b5318f" translate="yes" xml:space="preserve">
          <source>So very soon it will not be possible to completely test everything.</source>
          <target state="translated">Так что очень скоро не удастся полностью протестировать все.</target>
        </trans-unit>
        <trans-unit id="c734302804af13b8fb3578fee7c8a382eab7f492" translate="yes" xml:space="preserve">
          <source>So we chose G, H, K or L as the best bisection point, which is better than F. Because if for example L is bad, then we will know not only that L, M and N are bad but also that G, H, I and J are not the first bad commit (since we suppose that there is only one first bad commit and it must be an ancestor of L).</source>
          <target state="translated">Поэтому мы выбрали G,H,K или L в качестве лучшего бисексуального пункта,что лучше,чем F.Потому что если,например,L плохой,то мы будем знать не только,что L,M и N плохие,но и что G,H,I и J не первый плохой коммит (так как мы предполагаем,что есть только один первый плохой коммит,и он должен быть предком L).</target>
        </trans-unit>
        <trans-unit id="52135537297d21de1e1bab64c3c62387485ffd7b" translate="yes" xml:space="preserve">
          <source>So we would be left with only:</source>
          <target state="translated">Так что у нас останется только одно:</target>
        </trans-unit>
        <trans-unit id="9a854aba22b6e93e9800490c72e201394edc5390" translate="yes" xml:space="preserve">
          <source>So what are the tools used to fight regressions? They are nearly the same as those used to fight regular bugs. The only specific tools are test suites and tools similar as &quot;git bisect&quot;.</source>
          <target state="translated">Так какие инструменты используются для борьбы с регрессиями? Они почти такие же,как и те,что используются для борьбы с обычными ошибками.Единственные специфические инструменты-это наборы тестов и инструменты,похожие на &quot;git-бисект&quot;.</target>
        </trans-unit>
        <trans-unit id="17175b38ddc3adc987023ab7708e71618fdb213f" translate="yes" xml:space="preserve">
          <source>So what our &lt;code&gt;git add&lt;/code&gt; did was store a new blob and then put a reference to it in the index file. If we modify the file again, we&amp;rsquo;ll see that the new modifications are reflected in the &lt;code&gt;git diff&lt;/code&gt; output:</source>
          <target state="translated">Итак, наш &lt;code&gt;git add&lt;/code&gt; сохранил новый BLOB-объект, а затем поместил на него ссылку в индексном файле. Если мы снова изменим файл, мы увидим, что новые изменения отражены в выводе &lt;code&gt;git diff&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c52a5d49814c75f968644da3c05f28677f66e5d9" translate="yes" xml:space="preserve">
          <source>So when a commit is marked as &quot;bad&quot; we know we can remove all the commits in the graph except those that are ancestors of the new &quot;bad&quot; commit. This means that:</source>
          <target state="translated">Поэтому,когда коммит помечен как &quot;плохой&quot;,мы знаем,что можем удалить все коммиты на графе,кроме тех,которые являются предками нового &quot;плохого&quot; коммита.Это означает,что:</target>
        </trans-unit>
        <trans-unit id="2ab9a98e063e3527611545f584f2c39a22096906" translate="yes" xml:space="preserve">
          <source>So, look into &lt;code&gt;builtin/cat-file.c&lt;/code&gt;, search for &lt;code&gt;cmd_cat_file()&lt;/code&gt; and look what it does.</source>
          <target state="translated">Итак, загляните в &lt;code&gt;builtin/cat-file.c&lt;/code&gt; , найдите &lt;code&gt;cmd_cat_file()&lt;/code&gt; и посмотрите, что он делает.</target>
        </trans-unit>
        <trans-unit id="190b1ee6ab5b81f82f0d76cf355df1a21f43d2e3" translate="yes" xml:space="preserve">
          <source>So, think about something which you are interested in, say, &quot;how can I access a blob just knowing the object name of it?&quot;. The first step is to find a Git command with which you can do it. In this example, it is either &lt;code&gt;git show&lt;/code&gt; or &lt;code&gt;git cat-file&lt;/code&gt;.</source>
          <target state="translated">Итак, подумайте о чем-то, что вас интересует, например, &amp;laquo;как я могу получить доступ к BLOB-объекту, просто зная его имя объекта?&amp;raquo;. Первый шаг - найти команду Git, с помощью которой вы сможете это сделать. В этом примере это либо &lt;code&gt;git show&lt;/code&gt; , либо &lt;code&gt;git cat-file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1efaef427fd5b515b3e304fc27457e91eec84a25" translate="yes" xml:space="preserve">
          <source>So, we can use somebody else&amp;rsquo;s work from a remote repository, but how can &lt;strong&gt;you&lt;/strong&gt; prepare a repository to let other people pull from it?</source>
          <target state="translated">Итак, мы можем использовать чужую работу из удаленного репозитория, но как &lt;strong&gt;вы&lt;/strong&gt; можете подготовить репозиторий, чтобы другие люди могли извлекать из него?</target>
        </trans-unit>
        <trans-unit id="1d69dd0a510947edc4fb12eee97c080f4a377f68" translate="yes" xml:space="preserve">
          <source>Software bugs, or errors, are so prevalent and so detrimental that they cost the U.S. economy an estimated $59.5 billion annually, or about 0.6 percent of the gross domestic product, according to a newly released study commissioned by the Department of Commerce&amp;rsquo;s National Institute of Standards and Technology (NIST). At the national level, over half of the costs are borne by software users and the remainder by software developers/vendors. The study also found that, although all errors cannot be removed, more than a third of these costs, or an estimated $22.2 billion, could be eliminated by an improved testing infrastructure that enables earlier and more effective identification and removal of software defects. These are the savings associated with finding an increased percentage (but not 100 percent) of errors closer to the development stages in which they are introduced. Currently, over half of all errors are not found until &quot;downstream&quot; in the development process or during post-sale software use.</source>
          <target state="translated">По данным недавно опубликованного исследования, проведенного по заказу Национального института стандартов Министерства торговли США, программные ошибки или ошибки настолько распространены и настолько пагубны, что ежегодно обходятся экономике США примерно в 59,5 миллиардов долларов, или примерно в 0,6 процента валового внутреннего продукта. и технологии (NIST). На национальном уровне более половины расходов несут пользователи программного обеспечения, а оставшаяся часть - разработчики / поставщики программного обеспечения. Исследование также показало, что, хотя все ошибки не могут быть устранены, более трети этих затрат или, по оценкам, 22,2 миллиарда долларов США, можно устранить за счет улучшенной инфраструктуры тестирования, которая позволяет раньше и более эффективно выявлять и устранять дефекты программного обеспечения.Это экономия, связанная с обнаружением повышенного процента (но не 100 процентов) ошибок ближе к этапам разработки, на которых они появляются. В настоящее время более половины всех ошибок не обнаруживаются до тех пор, пока они не начнутся в процессе разработки или во время постпродажного использования программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="f90a777e081dbed9d193d82399cc2e3159bf44a3" translate="yes" xml:space="preserve">
          <source>Software developers already spend approximately 80 percent of development costs on identifying and correcting defects, and yet few products of any type other than software are shipped with such high levels of errors.</source>
          <target state="translated">Разработчики программного обеспечения уже тратят около 80 процентов затрат на выявление и исправление дефектов,и,тем не менее,лишь немногие продукты любого типа,кроме программного обеспечения,поставляются с таким большим количеством ошибок.</target>
        </trans-unit>
        <trans-unit id="b27e803e858c897a720eecea15e5bd37677e07bf" translate="yes" xml:space="preserve">
          <source>Some Git commands take options that are only used for plumbing or that are deprecated, and such options are hidden from the default usage. This option gives the full list of options.</source>
          <target state="translated">Некоторые команды Git'а принимают опции,используемые только для водопровода или устаревшие,и такие опции скрыты от использования по умолчанию.Эта опция даёт полный список опций.</target>
        </trans-unit>
        <trans-unit id="987ad55498ef51019e6595f32f9ee9a10fb74d21" translate="yes" xml:space="preserve">
          <source>Some actions require or allow to specify two revisions, and sometimes even two pathnames. In most general form such path_info (component) based gitweb URL looks like this:</source>
          <target state="translated">Некоторые действия требуют или позволяют указать две ревизии,а иногда даже два пути.В наиболее общем виде такой gitweb URL,основанный на path_info (компоненте),выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="4e1994dd201b175192ea5080be05071ba824a420" translate="yes" xml:space="preserve">
          <source>Some atoms like %(align) and %(if) always require a matching %(end). We call them &quot;opening atoms&quot; and sometimes denote them as %($open).</source>
          <target state="translated">Некоторые атомы,такие как %(align)и %(if)всегда требуют совпадения %(end).Мы называем их &quot;открывающими атомами&quot; и иногда обозначаем их как %($open).</target>
        </trans-unit>
        <trans-unit id="b05a87bd0e5e1c61140759ab02c7e9f3bf4a2773" translate="yes" xml:space="preserve">
          <source>Some basic familiarity with Git is required. Having gone through &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; and &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt; should be sufficient.</source>
          <target state="translated">Требуется некоторое базовое знакомство с Git. &lt;a href=&quot;gittutorial&quot;&gt;Достаточно&lt;/a&gt; пройти через gittutorial [7] и &lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61fa4c6dc6ae1d559b0a8be1b0de50848c850d66" translate="yes" xml:space="preserve">
          <source>Some changes are so trivial that it is not necessary to create a separate branch and then merge into each of the test and release branches. For these changes, just apply directly to the &lt;code&gt;release&lt;/code&gt; branch, and then merge that into the &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">Некоторые изменения настолько тривиальны, что нет необходимости создавать отдельную ветку, а затем объединять ее в каждую из веток тестирования и выпуска. Для этих изменений просто примените непосредственно к ветке &lt;code&gt;release&lt;/code&gt; , а затем объедините это с ветвью &lt;code&gt;test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59b18808ec08d9ea8408e805bbd7fa2f7edcfa73" translate="yes" xml:space="preserve">
          <source>Some commands (e.g. svn and http interfaces) that interactively ask for a password can be told to use an external program given via the value of this variable. Can be overridden by the &lt;code&gt;GIT_ASKPASS&lt;/code&gt; environment variable. If not set, fall back to the value of the &lt;code&gt;SSH_ASKPASS&lt;/code&gt; environment variable or, failing that, a simple password prompt. The external program shall be given a suitable prompt as command-line argument and write the password on its STDOUT.</source>
          <target state="translated">Некоторым командам (например, svn и http-интерфейсам), которые интерактивно запрашивают пароль, можно указать использовать внешнюю программу, заданную через значение этой переменной. Может быть переопределено переменной окружения &lt;code&gt;GIT_ASKPASS&lt;/code&gt; . Если не установлен, вернитесь к значению переменной среды &lt;code&gt;SSH_ASKPASS&lt;/code&gt; или, если это не удается, к простому запросу пароля. Внешняя программа должна получить подходящую подсказку в качестве аргумента командной строки и записать пароль в ее STDOUT.</target>
        </trans-unit>
        <trans-unit id="c2234711ff3c27c62e0fc4ab53a0833622d8f13d" translate="yes" xml:space="preserve">
          <source>Some configuration variables control the way the &lt;code&gt;--trailer&lt;/code&gt; arguments are applied to each commit message and the way any existing trailer in the commit message is changed. They also make it possible to automatically add some trailers.</source>
          <target state="translated">Некоторые переменные конфигурации управляют способом &lt;code&gt;--trailer&lt;/code&gt; аргументов --trailer к каждому сообщению фиксации и способом изменения любого существующего трейлера в сообщении фиксации. Они также позволяют автоматически добавлять трейлеры.</target>
        </trans-unit>
        <trans-unit id="938be1fd3d7f894aaa8fcd897f4e95cd6aacc1b6" translate="yes" xml:space="preserve">
          <source>Some configuration variables have their default values (embedded in the CGI script) set during building gitweb &amp;mdash; if that is the case, this fact is put in their description. See gitweb&amp;rsquo;s &lt;code&gt;INSTALL&lt;/code&gt; file for instructions on building and installing gitweb.</source>
          <target state="translated">Некоторые переменные конфигурации имеют свои значения по умолчанию (встроенные в сценарий CGI), установленные во время сборки gitweb - если это так, этот факт указывается в их описании. Инструкции по созданию и установке gitweb см. В файле &lt;code&gt;INSTALL&lt;/code&gt; от gitweb.</target>
        </trans-unit>
        <trans-unit id="0d66e22fd5f2bbbc188c5b064782bc9e186f6b28" translate="yes" xml:space="preserve">
          <source>Some email servers (e.g. smtp.163.com) limit the number emails to be sent per session (connection) and this will lead to a failure when sending many messages. With this option, send-email will disconnect after sending $&amp;lt;num&amp;gt; messages and wait for a few seconds (see --relogin-delay) and reconnect, to work around such a limit. You may want to use some form of credential helper to avoid having to retype your password every time this happens. Defaults to the &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; configuration variable.</source>
          <target state="translated">Некоторые почтовые серверы (например, smtp.163.com) ограничивают количество писем, отправляемых за сеанс (соединение), и это приведет к сбою при отправке большого количества сообщений. С этой опцией send-email отключится после отправки сообщений $ &amp;lt;num&amp;gt;, подождет несколько секунд (см. --Relogin-delay) и снова подключится, чтобы обойти такое ограничение. Возможно, вы захотите использовать какую-либо форму помощника по учетным данным, чтобы избежать повторного ввода пароля каждый раз, когда это происходит. По умолчанию &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; конфигурационная переменная sendemail.smtpBatchSize .</target>
        </trans-unit>
        <trans-unit id="92168eb294cb53195c326d7cdc472c76b820a62e" translate="yes" xml:space="preserve">
          <source>Some features cannot be overridden per project. For those features the structure of appropriate &lt;code&gt;%feature&lt;/code&gt; hash element has a simpler form:</source>
          <target state="translated">Некоторые функции нельзя переопределить для каждого проекта. Для этих функций структура соответствующего хеш-элемента &lt;code&gt;%feature&lt;/code&gt; имеет более простую форму:</target>
        </trans-unit>
        <trans-unit id="7345fdef7f54471f79d673ac02c80817717e5d21" translate="yes" xml:space="preserve">
          <source>Some filesystems lose the executable bit when a file that is marked as executable is checked out, or checks out a non-executable file with executable bit on. &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt; probe the filesystem to see if it handles the executable bit correctly and this variable is automatically set as necessary.</source>
          <target state="translated">Некоторые файловые системы теряют исполняемый бит, когда файл, помеченный как исполняемый, извлекается, или извлекается неисполняемый файл с исполняемым битом. &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; или &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; проверяют файловую систему, чтобы увидеть, правильно ли она обрабатывает исполняемый бит, и эта переменная автоматически устанавливается по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="1c65f795a263fd4e4ffc8fd7edc082e1bb01009b" translate="yes" xml:space="preserve">
          <source>Some filters will generate empty commits that leave the tree untouched. This option instructs git-filter-branch to remove such commits if they have exactly one or zero non-pruned parents; merge commits will therefore remain intact. This option cannot be used together with &lt;code&gt;--commit-filter&lt;/code&gt;, though the same effect can be achieved by using the provided &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; function in a commit filter.</source>
          <target state="translated">Некоторые фильтры будут генерировать пустые коммиты, которые оставляют дерево нетронутым. Этот параметр указывает git-filter-branch удалять такие коммиты, если у них ровно один или ноль неотрезанных родителей; поэтому коммиты слияния останутся нетронутыми. Этот параметр нельзя использовать вместе с &lt;code&gt;--commit-filter&lt;/code&gt; , хотя того же эффекта можно достичь, используя предоставленную функцию &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; в фильтре фиксации.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
