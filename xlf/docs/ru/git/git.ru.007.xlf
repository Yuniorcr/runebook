<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="6da92828bff93237c525d505f61963005fa8aa9b" translate="yes" xml:space="preserve">
          <source>Merges can be also made simpler by using smaller branches or by using many topic branches instead of only long version related branches.</source>
          <target state="translated">Слияния также можно упростить,используя более мелкие ветки или используя множество тематических ветвей вместо длинных ветвей,связанных с версиями.</target>
        </trans-unit>
        <trans-unit id="18462046f484e3565df5821cdce8eadab95f1224" translate="yes" xml:space="preserve">
          <source>Merges have many advantages, so we try to solve as many problems as possible with merges alone. Cherry-picking is still occasionally useful; see &quot;Merging upwards&quot; below for an example.</source>
          <target state="translated">Слияния имеют много преимуществ,поэтому мы стараемся решить как можно больше проблем только слияниями.Время от времени полезно выбирать вишню;см.ниже пример &quot;Слияние вверх&quot;.</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="f2204607f23628214b6d42add29d21c7f2e29b95" translate="yes" xml:space="preserve">
          <source>Merging branches with differing checkin/checkout attributes</source>
          <target state="translated">Слияние ветвей с различными атрибутами проверки/отправки</target>
        </trans-unit>
        <trans-unit id="c535f2db054f922c7b696495f8b89a913e2a11c4" translate="yes" xml:space="preserve">
          <source>Merging external work</source>
          <target state="translated">Слияние внешней работы</target>
        </trans-unit>
        <trans-unit id="603157d894d36cb77fbe21d75b0d20a12dc01779" translate="yes" xml:space="preserve">
          <source>Merging inside a &lt;a href=&quot;#def_shallow_clone&quot;&gt;shallow clone&lt;/a&gt; will work as long as a merge base is in the recent history. Otherwise, it will be like merging unrelated histories and may have to result in huge conflicts. This limitation may make such a repository unsuitable to be used in merge based workflows.</source>
          <target state="translated">Слияние внутри &lt;a href=&quot;#def_shallow_clone&quot;&gt;мелкого клона&lt;/a&gt; будет работать, пока база слияния находится в недавней истории. В противном случае это будет похоже на слияние несвязанных историй и может привести к огромным конфликтам. Это ограничение может сделать такой репозиторий непригодным для использования в рабочих процессах на основе слияния.</target>
        </trans-unit>
        <trans-unit id="ab26fbd41a8ed9c39ebd7d129433578a03343e81" translate="yes" xml:space="preserve">
          <source>Merging multiple trees</source>
          <target state="translated">Слияние нескольких деревьев</target>
        </trans-unit>
        <trans-unit id="f73ac93115d3cdadc50aebe7fa9b08f89899740b" translate="yes" xml:space="preserve">
          <source>Merging multiple trees, continued</source>
          <target state="translated">Слияние нескольких деревьев,продолжение</target>
        </trans-unit>
        <trans-unit id="98b404243306169adb88696dc4ad2165a137c1ac" translate="yes" xml:space="preserve">
          <source>Merging tag</source>
          <target state="translated">Соединительная бирка</target>
        </trans-unit>
        <trans-unit id="1af53d3a2af732fec14191525698059a5e40b8d4" translate="yes" xml:space="preserve">
          <source>Merging two branches</source>
          <target state="translated">Слияние двух филиалов</target>
        </trans-unit>
        <trans-unit id="6153c9c2afc2b444427af54ff710f1f84e9dda45" translate="yes" xml:space="preserve">
          <source>Merging upwards</source>
          <target state="translated">Слияние вверх</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ede02150d3611f561b342e50cd978f7d1c7b1d2a" translate="yes" xml:space="preserve">
          <source>Miscellaneous capabilities</source>
          <target state="translated">Различный потенциал</target>
        </trans-unit>
        <trans-unit id="68e2e957e53389b060cb16e85d086c46b6c88151" translate="yes" xml:space="preserve">
          <source>Missing From or In-Reply-To headers will be prompted for.</source>
          <target state="translated">Будут запрошены заголовки &quot;Пропущено из&quot; или &quot;В ответ&quot;.</target>
        </trans-unit>
        <trans-unit id="00b61542d0211972bc61982931e3e8c50577c383" translate="yes" xml:space="preserve">
          <source>Modified content is represented by &quot;-&quot; lines (removing the old content) followed by &quot;+&quot; lines (adding the replacement content). You can prevent staging the modification by converting &quot;-&quot; lines to &quot; &quot;, and removing &quot;+&quot; lines. Beware that modifying only half of the pair is likely to introduce confusing changes to the index.</source>
          <target state="translated">Модифицированное содержимое представлено строками &quot;-&quot; (удаление старого содержимого),за которыми следуют строки &quot;+&quot; (добавление заменяющего содержимого).Вы можете предотвратить инсценировку изменения,конвертировав строки &quot;-&quot; в &quot; &quot;,а также удалив строки с символом &quot;+&quot;.Остерегайтесь,что модификация только половины пары,скорее всего,приведет к путанице в индексе.</target>
        </trans-unit>
        <trans-unit id="6e5a153f7d9724480c99f8d43544411a606a03ba" translate="yes" xml:space="preserve">
          <source>Modifies the index or directory cache. Each file mentioned is updated into the index and any &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state is cleared.</source>
          <target state="translated">Изменяет кеш индекса или каталога. Каждый упомянутый файл обновляется в индексе, и все не &lt;code&gt;unmerged&lt;/code&gt; или &lt;code&gt;needs updating&lt;/code&gt; состояния очищаются.</target>
        </trans-unit>
        <trans-unit id="f87d4010c94238df04ebfd441b3a0111f33d7a25" translate="yes" xml:space="preserve">
          <source>Modify behavior of the next command naming a &amp;lt;ref&amp;gt;. The only valid option is &lt;code&gt;no-deref&lt;/code&gt; to avoid dereferencing a symbolic ref.</source>
          <target state="translated">Измените поведение следующей команды, назвав &amp;lt;ref&amp;gt;. Единственная допустимая опция - &lt;code&gt;no-deref&lt;/code&gt; , чтобы избежать разыменования символической ссылки.</target>
        </trans-unit>
        <trans-unit id="eeb79095663bd56bf370bd2096cd4a5ecc99b3a1" translate="yes" xml:space="preserve">
          <source>Modify some files, then add their updated contents to the index:</source>
          <target state="translated">Измените некоторые файлы,затем добавьте их обновленное содержимое в индекс:</target>
        </trans-unit>
        <trans-unit id="19db1a3cc38a1c275e20ba3eb14f5761050f2bac" translate="yes" xml:space="preserve">
          <source>Modifying the index is easy:</source>
          <target state="translated">Изменить индекс легко:</target>
        </trans-unit>
        <trans-unit id="3d6095a82dcd262f6e6b119640e8d9b20bcf7da2" translate="yes" xml:space="preserve">
          <source>More detail on the following is available from the &lt;a href=&quot;user-manual#git-concepts&quot;&gt;Git concepts chapter of the user-manual&lt;/a&gt; and &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial[7]&lt;/a&gt;.</source>
          <target state="translated">Более подробная информация о следующем доступна в &lt;a href=&quot;user-manual#git-concepts&quot;&gt;главе о концепциях Git руководства пользователя&lt;/a&gt; и в руководстве по &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06099ebf3c1fb2d228710b5b862871e1eab3c063" translate="yes" xml:space="preserve">
          <source>More generally, a branch that is created from a remote-tracking branch will pull by default from that branch. See the descriptions of the &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;, and the discussion of the &lt;code&gt;--track&lt;/code&gt; option in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;, to learn how to control these defaults.</source>
          <target state="translated">В более общем смысле ветка, созданная из ветки удаленного отслеживания, по умолчанию будет извлекать из этой ветки. Смотрите описание в &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; и &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; опции в &lt;a href=&quot;git-config&quot;&gt;GIT-конфигурации [1]&lt;/a&gt; , а также при обсуждении &lt;code&gt;--track&lt;/code&gt; опции в &lt;a href=&quot;git-checkout&quot;&gt;GIT-кассе [1]&lt;/a&gt; , чтобы узнать , как контролировать эти значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="415ceff2cb011b2c5375c0d469dab2cba200eaed" translate="yes" xml:space="preserve">
          <source>More generally, among the two commits to compute the merge base from, one is specified by the first commit argument on the command line; the other commit is a (possibly hypothetical) commit that is a merge across all the remaining commits on the command line.</source>
          <target state="translated">В более общем плане,среди двух коммитов для вычисления базы слияния,один указан первым аргументом коммита в командной строке;другой-(возможно,гипотетический)коммит,который представляет собой слияние всех оставшихся коммитов в командной строке.</target>
        </trans-unit>
        <trans-unit id="816cda5b46035bd1542e1775969151ec4a09cada" translate="yes" xml:space="preserve">
          <source>More importantly, it allows the update of a ref file to follow these symbolic pointers, whether they are symlinks or these &quot;regular file symbolic refs&quot;. It follows &lt;strong&gt;real&lt;/strong&gt; symlinks only if they start with &quot;refs/&quot;: otherwise it will just try to read them and update them as a regular file (i.e. it will allow the filesystem to follow them, but will overwrite such a symlink to somewhere else with a regular filename).</source>
          <target state="translated">Что еще более важно, он позволяет обновлению файла ссылок следовать этим символическим указателям, независимо от того, являются ли они символическими ссылками или этими &amp;laquo;символическими ссылками на обычные файлы&amp;raquo;. Он следует за &lt;strong&gt;настоящими&lt;/strong&gt; символическими ссылками, только если они начинаются с &quot;refs /&quot;: в противном случае он просто попытается прочитать их и обновить как обычный файл (т.е. он позволит файловой системе следовать за ними, но перезапишет такую ​​символическую ссылку на другое место с помощью обычное имя файла).</target>
        </trans-unit>
        <trans-unit id="2be26ffe68463b96abc5601cef9bdbafbf2f631d" translate="yes" xml:space="preserve">
          <source>More interestingly, you can also give &lt;code&gt;git diff-tree&lt;/code&gt; the &lt;code&gt;--pretty&lt;/code&gt; flag, which tells it to also show the commit message and author and date of the commit, and you can tell it to show a whole series of diffs. Alternatively, you can tell it to be &quot;silent&quot;, and not show the diffs at all, but just show the actual commit message.</source>
          <target state="translated">Более интересно, вы также можете дать &lt;code&gt;git diff-tree&lt;/code&gt; &lt;code&gt;--pretty&lt;/code&gt; флаг, который говорит , что это также показывает сообщение фиксации и автора и дату фиксации, и вы можете сказать ему , чтобы показать целый ряд файлов изменений. В качестве альтернативы вы можете указать ему, чтобы он был &quot;тихим&quot; и вообще не показывал различия, а просто отображал фактическое сообщение фиксации.</target>
        </trans-unit>
        <trans-unit id="854ef0fd2eba012b7c2e6ecb33388db153e60f9a" translate="yes" xml:space="preserve">
          <source>More on recovery from repository corruption. See: &lt;a href=&quot;https://lore.kernel.org/git/Pine.LNX.4.64.0702272039540.12485@woody.linux-foundation.org/&quot;&gt;https://lore.kernel.org/git/Pine.LNX.4.64.0702272039540.12485@woody.linux-foundation.org/&lt;/a&gt;&lt;a href=&quot;https://lore.kernel.org/git/Pine.LNX.4.64.0702141033400.3604@woody.linux-foundation.org/&quot;&gt;https://lore.kernel.org/git/Pine.LNX.4.64.0702141033400.3604@woody.linux-foundation.org/&lt;/a&gt;</source>
          <target state="translated">Подробнее о восстановлении после повреждения репозитория. См .: &lt;a href=&quot;https://lore.kernel.org/git/Pine.LNX.4.64.0702272039540.12485@woody.linux-foundation.org/&quot;&gt;https://lore.kernel.org/git/Pine.LNX.4.64.0702272039540.12485@woody.linux-foundation.org/ &lt;/a&gt;&lt;a href=&quot;https://lore.kernel.org/git/Pine.LNX.4.64.0702141033400.3604@woody.linux-foundation.org/&quot;&gt;https://lore.kernel.org/git/Pine.LNX.4.64.0702141033400.3604@ woody.linux-foundation.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1784c94f3b7a373b03c0ae45229574de43eee20" translate="yes" xml:space="preserve">
          <source>More precisely, &lt;code&gt;git pull&lt;/code&gt; runs &lt;code&gt;git fetch&lt;/code&gt; with the given parameters and calls &lt;code&gt;git merge&lt;/code&gt; to merge the retrieved branch heads into the current branch. With &lt;code&gt;--rebase&lt;/code&gt;, it runs &lt;code&gt;git rebase&lt;/code&gt; instead of &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Точнее, &lt;code&gt;git pull&lt;/code&gt; запускает &lt;code&gt;git fetch&lt;/code&gt; с заданными параметрами и вызывает &lt;code&gt;git merge&lt;/code&gt; , чтобы объединить полученные заголовки веток в текущую ветку. С &lt;code&gt;--rebase&lt;/code&gt; запускается &lt;code&gt;git rebase&lt;/code&gt; вместо &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17f51f170751975b2cc4764665c6e712fb67447f" translate="yes" xml:space="preserve">
          <source>Most CVS command arguments that read CVS tags or revision numbers (typically -r) work, and also support any git refspec (tag, branch, commit ID, etc). However, CVS revision numbers for non-default branches are not well emulated, and cvs log does not show tags or branches at all. (Non-main-branch CVS revision numbers superficially resemble CVS revision numbers, but they actually encode a git commit ID directly, rather than represent the number of revisions since the branch point.)</source>
          <target state="translated">Большинство аргументов команд CVS,которые читают CVS тэги или номера ревизий (обычно -r),работают,а также поддерживают любой git refspec (тэг,ветка,идентификатор коммита и т.д.).Однако,номера ревизий CVS для ветвей не по умолчанию эмулируются плохо,и журнал cvs не показывает теги или ветки вообще.(Неосновные номера ревизий CVS поверхностно напоминают номера ревизий CVS,но на самом деле они непосредственно кодируют идентификатор фиксации git'а,а не представляют количество ревизий с точки ответвления).</target>
        </trans-unit>
        <trans-unit id="880f481ef12ec663b5ff4186eb50766022add75f" translate="yes" xml:space="preserve">
          <source>Most bottlenecks appear to be in foreign source data access (the source just cannot extract revisions fast enough) or disk IO (fast-import writes as fast as the disk will take the data). Imports will run faster if the source data is stored on a different drive than the destination Git repository (due to less IO contention).</source>
          <target state="translated">Большинство узких мест,по-видимому,связано с доступом к данным иностранного источника (источник просто не может извлечь ревизии достаточно быстро)или с дисковым вводом данных (быстрый импорт записывается так же быстро,как диск заберет данные).Импорт выполняется быстрее,если исходные данные хранятся на диске,отличном от целевого Git-репозитория (из-за меньшего количества запросов ввода-вывода).</target>
        </trans-unit>
        <trans-unit id="b1a743b45e6efbd5b49b8c3c8d73ad9b477276e1" translate="yes" xml:space="preserve">
          <source>Most commits have only one parent, but it is also common for a commit to have multiple parents. In that case the commit represents a merge, with the parent references pointing to the heads of the merged branches.</source>
          <target state="translated">Большинство коммитов имеют только одного родителя,но для коммитов с несколькими родителями это также обычное явление.В этом случае коммит представляет собой слияние,при котором родительские ссылки указывают на головы объединённых ветвей.</target>
        </trans-unit>
        <trans-unit id="4d50eced4caaa6d0cca3ee6a1e2e2e07d0d5849b" translate="yes" xml:space="preserve">
          <source>Most importantly, merging works at the branch level, while cherry-picking works at the commit level. This means that a merge can carry over the changes from 1, 10, or 1000 commits with equal ease, which in turn means the workflow scales much better to a large number of contributors (and contributions). Merges are also easier to understand because a merge commit is a &quot;promise&quot; that all changes from all its parents are now included.</source>
          <target state="translated">Самое главное,слияние работает на уровне ветки,в то время как сбор вишни работает на уровне коммита.Это означает,что слияние может с такой же лёгкостью перенести изменения из 1,10 или 1000 коммитов,что,в свою очередь,означает,что рабочий процесс масштабируется гораздо лучше для большого количества вкладчиков (и вкладов).Слияния также проще понять,потому что коммит слияния-это &quot;обещание&quot;,что все изменения от всех его родителей теперь включены.</target>
        </trans-unit>
        <trans-unit id="2e130c2e2dd2a16594642aa625e1fc3c4df26608" translate="yes" xml:space="preserve">
          <source>Most of features are configured via &lt;code&gt;%feature&lt;/code&gt; hash; however some of extra gitweb features can be turned on and configured using variables described below. This list beside configuration variables that control how gitweb looks does contain variables configuring administrative side of gitweb (e.g. cross-site scripting prevention; admittedly this as side effect affects how &quot;summary&quot; pages look like, or load limiting).</source>
          <target state="translated">Большинство функций настраивается через &lt;code&gt;%feature&lt;/code&gt; hash; однако некоторые из дополнительных функций gitweb можно включить и настроить с помощью переменных, описанных ниже. Этот список, помимо переменных конфигурации, которые контролируют внешний вид gitweb, действительно содержит переменные, настраивающие административную часть gitweb (например, предотвращение межсайтового скриптинга; по общему признанию, это как побочный эффект влияет на то, как выглядят &amp;laquo;сводные&amp;raquo; страницы, или ограничение нагрузки).</target>
        </trans-unit>
        <trans-unit id="12c479c9b5f1b05779ca1427f8469c4d0c8e41b4" translate="yes" xml:space="preserve">
          <source>Most of what &lt;code&gt;git rev-list&lt;/code&gt; did is contained in &lt;code&gt;revision.c&lt;/code&gt; and &lt;code&gt;revision.h&lt;/code&gt;. It wraps the options in a struct named &lt;code&gt;rev_info&lt;/code&gt;, which controls how and what revisions are walked, and more.</source>
          <target state="translated">Большая часть того, что сделал &lt;code&gt;git rev-list&lt;/code&gt; , содержится в &lt;code&gt;revision.c&lt;/code&gt; и &lt;code&gt;revision.h&lt;/code&gt; . Он оборачивает параметры в структуру с именем &lt;code&gt;rev_info&lt;/code&gt; , которая контролирует, как и какие ревизии проходят, и многое другое.</target>
        </trans-unit>
        <trans-unit id="9ceb817bd0e340cfd6e3a665612ec974c7873cd6" translate="yes" xml:space="preserve">
          <source>Most operations that add an object to the database update the modification time of the object if it is already present so that #1 applies.</source>
          <target state="translated">Большинство операций,которые добавляют объект в базу данных,обновляют время модификации объекта,если он уже присутствует,так что #1 применяется.</target>
        </trans-unit>
        <trans-unit id="ed4a3f36c4746567049b5d83d49f91438e7cd1fa" translate="yes" xml:space="preserve">
          <source>Most projects also use &lt;a href=&quot;#def_tag&quot;&gt;tags&lt;/a&gt;. Tags, like heads, are references into the project&amp;rsquo;s history, and can be listed using the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command:</source>
          <target state="translated">В большинстве проектов также используются &lt;a href=&quot;#def_tag&quot;&gt;теги&lt;/a&gt; . Теги, как и заголовки, являются ссылками на историю проекта и могут быть перечислены с помощью команды &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="6e9a1bc6364ad2c889e7f09c69628c8251c67662" translate="yes" xml:space="preserve">
          <source>Most projects with multiple contributors (such as the Linux kernel, or Git itself) have frequent merges, and &lt;code&gt;gitk&lt;/code&gt; does a better job of visualizing their history. For example,</source>
          <target state="translated">Большинство проектов с несколькими участниками (такими как ядро ​​Linux или сам Git) часто сливаются, и &lt;code&gt;gitk&lt;/code&gt; лучше справляется с визуализацией их истории. Например,</target>
        </trans-unit>
        <trans-unit id="b110af03cd46bd74e1684a2cb53fb12fe52de561" translate="yes" xml:space="preserve">
          <source>Mostly a synonym to &lt;a href=&quot;#def_shallow_repository&quot;&gt;shallow repository&lt;/a&gt; but the phrase makes it more explicit that it was created by running &lt;code&gt;git clone --depth=&amp;hellip;​&lt;/code&gt; command.</source>
          <target state="translated">В основном синоним &lt;a href=&quot;#def_shallow_repository&quot;&gt;хранилища неглубокого&lt;/a&gt; , но фраза делает его более явным , что он был создан, запустив &lt;code&gt;git clone --depth=&amp;hellip;​&lt;/code&gt; команду.</target>
        </trans-unit>
        <trans-unit id="0a0252ca3dca0dd6561eccb6a1ba0495bf433801" translate="yes" xml:space="preserve">
          <source>Mostly a synonym to &lt;a href=&quot;#def_shallow_repository&quot;&gt;shallow repository&lt;/a&gt; but the phrase makes it more explicit that it was created by running &lt;code&gt;git clone --depth=...&lt;/code&gt; command.</source>
          <target state="translated">В основном синоним &lt;a href=&quot;#def_shallow_repository&quot;&gt;хранилища неглубокого&lt;/a&gt; , но фраза делает его более явным , что он был создан, запустив &lt;code&gt;git clone --depth=...&lt;/code&gt; команду.</target>
        </trans-unit>
        <trans-unit id="437db9b7f03fcf9c59c19e8599b81a4181786550" translate="yes" xml:space="preserve">
          <source>Move a working tree to a new location. Note that the main working tree or linked working trees containing submodules cannot be moved.</source>
          <target state="translated">Переместите рабочее дерево на новое место.Обратите внимание,что основное рабочее дерево или связанные рабочие деревья,содержащие субмодули,не могут быть перемещены.</target>
        </trans-unit>
        <trans-unit id="00451deb449902283a1a1b09ee616f563047050b" translate="yes" xml:space="preserve">
          <source>Move objects and refs by archive</source>
          <target state="translated">Перемещение объектов и ссылок по архиву</target>
        </trans-unit>
        <trans-unit id="0a2aa584391bc2ed097c1ace071233493faa0978" translate="yes" xml:space="preserve">
          <source>Move or rename a file, a directory, or a symlink</source>
          <target state="translated">Переместить или переименовать файл,каталог или сим-ссылку</target>
        </trans-unit>
        <trans-unit id="4bc0abe3ae87a3007e76abb67d150957939b61b8" translate="yes" xml:space="preserve">
          <source>Move or rename a file, directory or symlink.</source>
          <target state="translated">Переместить или переименовать файл,каталог или сим-ссылку.</target>
        </trans-unit>
        <trans-unit id="24cb8f062e449dc4167b50460e2e7341fe4e0aa6" translate="yes" xml:space="preserve">
          <source>Move/rename a branch and the corresponding reflog.</source>
          <target state="translated">Переместить/переименовать ветку и соответствующий рефлог.</target>
        </trans-unit>
        <trans-unit id="86a2fcc8fa8d4ad8c3c46b9d3e5182feb14f1b60" translate="yes" xml:space="preserve">
          <source>Moved lines are not highlighted.</source>
          <target state="translated">Перемещенные строки не выделяются.</target>
        </trans-unit>
        <trans-unit id="e5cbd47a10df638d21a9258d79ed6bd371f01027" translate="yes" xml:space="preserve">
          <source>Moved lines of code are colored differently. It can be changed by the &lt;code&gt;diff.colorMoved&lt;/code&gt; configuration setting. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;no&lt;/code&gt; if the option is not given and to &lt;code&gt;zebra&lt;/code&gt; if the option with no mode is given. The mode must be one of:</source>
          <target state="translated">Перемещенные строки кода окрашены по-разному. Его можно изменить с помощью &lt;code&gt;diff.colorMoved&lt;/code&gt; конфигурации diff.colorMoved . Для &amp;lt;режим&amp;gt; по умолчанию установлено значение &amp;laquo; &lt;code&gt;no&lt;/code&gt; если параметр не задан, и &amp;laquo; &lt;code&gt;zebra&lt;/code&gt; если задан параметр без режима. Режим должен быть одним из:</target>
        </trans-unit>
        <trans-unit id="b99084289befcccb3b6f25bb5a902159aaa2283b" translate="yes" xml:space="preserve">
          <source>Moved lines of code are colored differently. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;no&lt;/code&gt; if the option is not given and to &lt;code&gt;zebra&lt;/code&gt; if the option with no mode is given. The mode must be one of:</source>
          <target state="translated">Перемещенные строки кода окрашены по-разному. Для &amp;lt;режим&amp;gt; по умолчанию установлено значение &amp;laquo; &lt;code&gt;no&lt;/code&gt; если параметр не задан, и &amp;laquo; &lt;code&gt;zebra&lt;/code&gt; если задан параметр без режима. Режим должен быть одним из:</target>
        </trans-unit>
        <trans-unit id="b9c1e9c13eb039f68657e5a15bbd12085ba143c2" translate="yes" xml:space="preserve">
          <source>Moving a submodule using a gitfile (which means they were cloned with a Git version 1.7.8 or newer) will update the gitfile and core.worktree setting to make the submodule work in the new location. It also will attempt to update the submodule.&amp;lt;name&amp;gt;.path setting in the &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; file and stage that file (unless -n is used).</source>
          <target state="translated">Перемещение подмодуля с использованием gitfile (что означает, что они были клонированы с Git версии 1.7.8 или новее) обновит настройки gitfile и core.worktree, чтобы подмодуль работал в новом месте. Он также попытается обновить параметр submodule. &amp;lt;name&amp;gt; .path в &lt;a href=&quot;gitmodules&quot;&gt;файле gitmodules [5]&lt;/a&gt; и обработать этот файл (если не используется -n).</target>
        </trans-unit>
        <trans-unit id="64f4589d8b3cd6346365a117e7caa3c7d877c770" translate="yes" xml:space="preserve">
          <source>Mua-specific hints</source>
          <target state="translated">специфические намёки Муа</target>
        </trans-unit>
        <trans-unit id="c811c6583f834ffbc46d39586b81b1cb3e49b3e5" translate="yes" xml:space="preserve">
          <source>Multi-pack-index (midx) files have the following format:</source>
          <target state="translated">Мульти-пакет-индекс (midx)файлы имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="53148ea4bd03c54715064a8f67e0cc8cc140f85c" translate="yes" xml:space="preserve">
          <source>Multiple --notes options can be combined to control which notes are being displayed. Examples: &quot;--notes=foo&quot; will show only notes from &quot;refs/notes/foo&quot;; &quot;--notes=foo --notes&quot; will show both notes from &quot;refs/notes/foo&quot; and from the default notes ref(s).</source>
          <target state="translated">Для управления отображением заметок можно комбинировать несколько опций -notes.Примеры:&quot;--notes=foo&quot; будет показывать только ноты из &quot;refs/notes/foo&quot;;&quot;--notes=foo --notes&quot; будет показывать как ноты из &quot;refs/notes/foo&quot;,так и ноты из &quot;refs/notes/foo&quot; по умолчанию.</target>
        </trans-unit>
        <trans-unit id="63667e9cd419f9751274dd2f16bda1512b373262" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;--filter=&lt;/code&gt; flags can be specified to combine filters. Only objects which are accepted by every filter are included.</source>
          <target state="translated">&lt;code&gt;--filter=&lt;/code&gt; несколько флагов --filter = для объединения фильтров. Включены только объекты, которые принимаются каждым фильтром.</target>
        </trans-unit>
        <trans-unit id="dc96f8ef1ccc109ff4dae28503fa1d96c62fb1de" translate="yes" xml:space="preserve">
          <source>Multiple checkout in general is still experimental, and the support for submodules is incomplete. It is NOT recommended to make multiple checkouts of a superproject.</source>
          <target state="translated">Многократная проверка в целом все еще экспериментальная,а поддержка субмодулей неполная.НЕ рекомендуется производить многократные проверки суперпроекта.</target>
        </trans-unit>
        <trans-unit id="5a07b93df04fb253e2e899a192e36f3454a882cd" translate="yes" xml:space="preserve">
          <source>Multiple fetch, branches, and tags keys are supported:</source>
          <target state="translated">Поддерживаются несколько клавиш извлечения,веток и тегов:</target>
        </trans-unit>
        <trans-unit id="b46275ca6ba0af124488d22d1e877279bfe2e6c0" translate="yes" xml:space="preserve">
          <source>Multiple lines can be added to an option by using the &lt;code&gt;--add&lt;/code&gt; option. If you want to update or unset an option which can occur on multiple lines, a POSIX regexp &lt;code&gt;value_regex&lt;/code&gt; needs to be given. Only the existing values that match the regexp are updated or unset. If you want to handle the lines that do &lt;strong&gt;not&lt;/strong&gt; match the regex, just prepend a single exclamation mark in front (see also &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt;).</source>
          <target state="translated">К параметру можно добавить несколько строк с помощью параметра &lt;code&gt;--add&lt;/code&gt; . Если вы хотите обновить или отменить параметр, который может встречаться в нескольких строках, необходимо &lt;code&gt;value_regex&lt;/code&gt; POSIX regexp value_regex . Только существующие значения, соответствующие регулярному выражению, обновляются или сбрасываются. Если вы хотите обработать строки, которые &lt;strong&gt;не&lt;/strong&gt; соответствуют регулярному выражению, просто поставьте перед ним один восклицательный знак (см. Также &lt;a href=&quot;#EXAMPLES&quot;&gt;ПРИМЕРЫ&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="77c43675935243a813626f8da7cb046544167112" translate="yes" xml:space="preserve">
          <source>Multiple tags on the same revision are not imported.</source>
          <target state="translated">Несколько тегов в одной и той же ревизии не импортируются.</target>
        </trans-unit>
        <trans-unit id="f2beb5df6d3d8f2a372e3411ba76c2a81700ed4b" translate="yes" xml:space="preserve">
          <source>Multiple values may be given to the &lt;code&gt;man.viewer&lt;/code&gt; configuration variable. Their corresponding programs will be tried in the order listed in the configuration file.</source>
          <target state="translated">&lt;code&gt;man.viewer&lt;/code&gt; конфигурации man.viewer можно задать несколько значений . Соответствующие программы будут проверены в порядке, указанном в файле конфигурации.</target>
        </trans-unit>
        <trans-unit id="ee6ae3f9558f190018d900b972ec0dd86c3ef0ee" translate="yes" xml:space="preserve">
          <source>Munging the diff output</source>
          <target state="translated">Мюнжирование диффузионного выхода</target>
        </trans-unit>
        <trans-unit id="31284f7dc1d9489b6ba33462518d05bce29455ee" translate="yes" xml:space="preserve">
          <source>Must be a blob id</source>
          <target state="translated">Должно быть,капля в руке</target>
        </trans-unit>
        <trans-unit id="bab4c6d734b3b13c2268e7fc81c79c9b99eef1dd" translate="yes" xml:space="preserve">
          <source>NORMAL Format</source>
          <target state="translated">НОРМАЛЬНЫЙ Формат</target>
        </trans-unit>
        <trans-unit id="4b5d099fcd6efcc01a4251de7ab2ddb7c47dd96b" translate="yes" xml:space="preserve">
          <source>NOTE! &lt;code&gt;git checkout-index&lt;/code&gt; normally refuses to overwrite old files, so if you have an old version of the tree already checked out, you will need to use the &lt;code&gt;-f&lt;/code&gt; flag ('before' the &lt;code&gt;-a&lt;/code&gt; flag or the filename) to 'force' the checkout.</source>
          <target state="translated">НОТА! &lt;code&gt;git checkout-index&lt;/code&gt; обычно отказывается перезаписывать старые файлы, поэтому, если у вас есть старая версия дерева, уже извлеченная, вам нужно будет использовать флаг &lt;code&gt;-f&lt;/code&gt; ('перед' флагом &lt;code&gt;-a&lt;/code&gt; или именем файла) для 'принудительного' кассу.</target>
        </trans-unit>
        <trans-unit id="1264e842b1d5e884b1bcd9c56e546555c80966fe" translate="yes" xml:space="preserve">
          <source>NOTE! A &lt;code&gt;--remove&lt;/code&gt; flag does 'not' mean that subsequent filenames will necessarily be removed: if the files still exist in your directory structure, the index will be updated with their new status, not removed. The only thing &lt;code&gt;--remove&lt;/code&gt; means is that update-index will be considering a removed file to be a valid thing, and if the file really does not exist any more, it will update the index accordingly.</source>
          <target state="translated">НОТА! &lt;code&gt;--remove&lt;/code&gt; флаг означает &amp;laquo;не&amp;raquo; означает , что последующие имена файлов обязательно будут удалены: если файлы по- прежнему существуют в вашей структуре каталогов, индекс будет обновляться с их новым статусом, не удаляются. Единственное, что означает &lt;code&gt;--remove&lt;/code&gt; , это то, что update-index будет рассматривать удаленный файл как допустимый, и если файл действительно больше не существует, он соответственно обновит индекс.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="cab1b18ac6c645752b07db74b58a821d43db7033" translate="yes" xml:space="preserve">
          <source>Name for the new branch.</source>
          <target state="translated">Название для нового филиала.</target>
        </trans-unit>
        <trans-unit id="ae3aefe579fe0e7749a842bc31610ab7a07dfe4c" translate="yes" xml:space="preserve">
          <source>Name of a HTML file which, if it exists, is included on the gitweb projects overview page (&quot;projects_list&quot; view). Relative to the directory containing the gitweb.cgi script. Default value can be adjusted during build time using &lt;code&gt;GITWEB_HOMETEXT&lt;/code&gt; variable. By default set to &lt;code&gt;indextext.html&lt;/code&gt;.</source>
          <target state="translated">Имя HTML-файла, который, если он существует, включен на страницу обзора проектов gitweb (представление &amp;laquo;список_проектов&amp;raquo;). Относительно каталога, содержащего скрипт gitweb.cgi. Значение по умолчанию можно изменить во время сборки с &lt;code&gt;GITWEB_HOMETEXT&lt;/code&gt; переменной GITWEB_HOMETEXT . По умолчанию установлен &lt;code&gt;indextext.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b26ce2bab88403572eb261078ddb7db93d3d704e" translate="yes" xml:space="preserve">
          <source>Name of a file with HTML to be included at the bottom of each page. Relative to the directory containing the &lt;code&gt;gitweb.cgi&lt;/code&gt; script. Can be set using &lt;code&gt;GITWEB_SITE_FOOTER&lt;/code&gt; at build time. No default value.</source>
          <target state="translated">Имя файла с HTML, которое будет включено внизу каждой страницы. Относительно каталога, содержащего скрипт &lt;code&gt;gitweb.cgi&lt;/code&gt; . Можно установить с помощью &lt;code&gt;GITWEB_SITE_FOOTER&lt;/code&gt; во время сборки. Нет значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="cb37057e9d095a173db9c241ef8419b86a202d02" translate="yes" xml:space="preserve">
          <source>Name of a file with HTML to be included at the top of each page. Relative to the directory containing the &lt;code&gt;gitweb.cgi&lt;/code&gt; script. Can be set using &lt;code&gt;GITWEB_SITE_HEADER&lt;/code&gt; at build time. No default value.</source>
          <target state="translated">Имя файла с HTML, которое будет отображаться вверху каждой страницы. Относительно каталога, содержащего скрипт &lt;code&gt;gitweb.cgi&lt;/code&gt; . Можно установить с помощью &lt;code&gt;GITWEB_SITE_HEADER&lt;/code&gt; во время сборки. Нет значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="389075bf1328d95e30f257d38d278dd3a0c94121" translate="yes" xml:space="preserve">
          <source>Name of a plain text file listing projects, or a name of directory to be scanned for projects.</source>
          <target state="translated">Имя простого текстового файла,содержащего список проектов,или имя каталога,который будет сканироваться для проектов.</target>
        </trans-unit>
        <trans-unit id="c0afa4635407444ed041e335278cc30cd2a11b14" translate="yes" xml:space="preserve">
          <source>Name of the SSL backend to use (e.g. &quot;openssl&quot; or &quot;schannel&quot;). This option is ignored if cURL lacks support for choosing the SSL backend at runtime.</source>
          <target state="translated">Имя используемого бэкэнда SSL (например,&quot;openssl&quot; или &quot;schannel&quot;).Эта опция игнорируется,если cURL не поддерживает выбор бэкэнда SSL во время выполнения.</target>
        </trans-unit>
        <trans-unit id="4d338fcbbcef71a5bde9a77e37abcbca835f1d4a" translate="yes" xml:space="preserve">
          <source>Name of the user running &lt;code&gt;git-cvsserver&lt;/code&gt;. If no name can be determined, the numeric uid is used.</source>
          <target state="translated">Имя пользователя, запустившего &lt;code&gt;git-cvsserver&lt;/code&gt; . Если имя не может быть определено, используется числовой uid.</target>
        </trans-unit>
        <trans-unit id="33a3a9f4baab999f10555d77c61fc17ad7a2e690" translate="yes" xml:space="preserve">
          <source>Name of your site or organization, to appear in page titles. Set it to something descriptive for clearer bookmarks etc. If this variable is not set or is, then gitweb uses the value of the &lt;code&gt;SERVER_NAME&lt;/code&gt;&lt;code&gt;CGI&lt;/code&gt; environment variable, setting site name to &quot;$SERVER_NAME Git&quot;, or &quot;Untitled Git&quot; if this variable is not set (e.g. if running gitweb as standalone script).</source>
          <target state="translated">Название вашего сайта или организации, которое будет отображаться в заголовках страниц. Установите для него что-то описательное для более четких закладок и т. Д. Если эта переменная не установлена ​​или не установлена, то gitweb использует значение переменной среды &lt;code&gt;CGI&lt;/code&gt; &lt;code&gt;SERVER_NAME&lt;/code&gt; , задав для имени сайта значение &quot;$ SERVER_NAME Git&quot; или &quot;Untitled Git&quot;, если эта переменная не установлен (например, если gitweb запущен как автономный скрипт).</target>
        </trans-unit>
        <trans-unit id="ac84f0f88b7824faf06c4b53397972bcd09b01be" translate="yes" xml:space="preserve">
          <source>Name output in &lt;code&gt;[PATCH n/m]&lt;/code&gt; format, even with a single patch.</source>
          <target state="translated">Вывод имени в формате &lt;code&gt;[PATCH n/m]&lt;/code&gt; , даже с одним патчем.</target>
        </trans-unit>
        <trans-unit id="ffd008dca3705155e76303827e2a4d3059068c9a" translate="yes" xml:space="preserve">
          <source>Name output in &lt;code&gt;[PATCH]&lt;/code&gt; format.</source>
          <target state="translated">Вывод имени в формате &lt;code&gt;[PATCH]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe45d9f50e3991235a5aaf79d20ba4e50638c193" translate="yes" xml:space="preserve">
          <source>Named file in &lt;code&gt;$GIT_DIR/branches&lt;/code&gt;</source>
          <target state="translated">Именованный файл в &lt;code&gt;$GIT_DIR/branches&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e694d096f60594b306ed977a1cb3bf7e40731642" translate="yes" xml:space="preserve">
          <source>Named file in &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt;</source>
          <target state="translated">Именованный файл в &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d0059ee6bf7ca65460797daae6395c800b562c5" translate="yes" xml:space="preserve">
          <source>Named pointers called refs mark interesting points in history. A ref may contain the SHA-1 name of an object or the name of another ref. Refs with names beginning &lt;code&gt;ref/head/&lt;/code&gt; contain the SHA-1 name of the most recent commit (or &quot;head&quot;) of a branch under development. SHA-1 names of tags of interest are stored under &lt;code&gt;ref/tags/&lt;/code&gt;. A special ref named &lt;code&gt;HEAD&lt;/code&gt; contains the name of the currently checked-out branch.</source>
          <target state="translated">Именованные указатели, называемые refs, отмечают интересные моменты в истории. Ссылка может содержать имя SHA-1 объекта или имя другой ссылки. Ссылки с именами, начинающимися с &lt;code&gt;ref/head/&lt;/code&gt; содержат имя SHA-1 самого последнего коммита (или &amp;laquo;голову&amp;raquo;) разрабатываемой ветки. Имена SHA-1 интересующих тегов хранятся в &lt;code&gt;ref/tags/&lt;/code&gt; . Специальная ссылка с именем &lt;code&gt;HEAD&lt;/code&gt; содержит имя текущей извлеченной ветки.</target>
        </trans-unit>
        <trans-unit id="afc8b12ea961269025f67734b3112ac3163fa044" translate="yes" xml:space="preserve">
          <source>Named remote in configuration file</source>
          <target state="translated">Имя удалённого в файле конфигурации</target>
        </trans-unit>
        <trans-unit id="60da66dd4d339a94ae12e8c7a620ab333cdfa554" translate="yes" xml:space="preserve">
          <source>Names a low-level merge driver to be used when performing an internal merge between common ancestors. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Называет низкоуровневый драйвер слияния, который будет использоваться при выполнении внутреннего слияния между общими предками. Подробнее см. &lt;a href=&quot;gitattributes&quot;&gt;Gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7238264e2238da432cea4cee3e4e4ec456281760" translate="yes" xml:space="preserve">
          <source>Naming branches, tags, and other references</source>
          <target state="translated">Наименование ветвей,тегов и других ссылок</target>
        </trans-unit>
        <trans-unit id="a8a795a40591e9038f52c089f34245ee06ab71bc" translate="yes" xml:space="preserve">
          <source>Naming commits</source>
          <target state="translated">Обязательства по наименованию</target>
        </trans-unit>
        <trans-unit id="7b635b48de06412b114cd8e91f1912aac5470b03" translate="yes" xml:space="preserve">
          <source>Nearly proper rewriting of tag objects is supported. If the tag has a message attached, a new tag object will be created with the same message, author, and timestamp. If the tag has a signature attached, the signature will be stripped. It is by definition impossible to preserve signatures. The reason this is &quot;nearly&quot; proper, is because ideally if the tag did not change (points to the same object, has the same name, etc.) it should retain any signature. That is not the case, signatures will always be removed, buyer beware. There is also no support for changing the author or timestamp (or the tag message for that matter). Tags which point to other tags will be rewritten to point to the underlying commit.</source>
          <target state="translated">Поддерживается практически корректное переписывание объектов тегов.Если к тегу прикреплено сообщение,то будет создан новый объект тега с тем же сообщением,автором и меткой времени.Если тег имеет вложенную подпись,то подпись будет удалена.Сохранение подписей по определению невозможно.Причина,по которой это &quot;почти&quot; верно,заключается в том,что в идеале,если тег не изменился (указывает на один и тот же объект,имеет одно и то же имя и т.д.),он должен сохранить любую подпись.Это не так,подписи всегда будут удалены,остерегайтесь покупателя.Также отсутствует поддержка смены автора или метки времени (или сообщения тега по этому поводу).Тэги,указывающие на другие теги,будут переписаны,чтобы указать на базовый коммит.</target>
        </trans-unit>
        <trans-unit id="ec8ce921b28e9d3cf6cf20eaf08287c17f378d35" translate="yes" xml:space="preserve">
          <source>Negating options</source>
          <target state="translated">Отрицательные варианты</target>
        </trans-unit>
        <trans-unit id="781db1e57c260d141571a81cbcc3db723749ad7f" translate="yes" xml:space="preserve">
          <source>Nevertheless, the code at C is broken, because the callers added on the lower line of development have not been converted to the new semantics introduced on the upper line of development. So if all you know is that D is bad, that Z is good, and that &lt;a href=&quot;git-bisect&quot;&gt;git-bisect[1]&lt;/a&gt; identifies C as the culprit, how will you figure out that the problem is due to this change in semantics?</source>
          <target state="translated">Тем не менее, код на C не работает, потому что вызывающие объекты, добавленные на нижней строке разработки, не были преобразованы в новую семантику, введенную на верхней строке разработки. Итак, если все, что вы знаете, это то, что D - это плохо, что Z - хорошо, и что &lt;a href=&quot;git-bisect&quot;&gt;git-bisect [1]&lt;/a&gt; идентифицирует C как виновника, как вы поймете, что проблема связана с этим изменением семантики?</target>
        </trans-unit>
        <trans-unit id="a6160e254f396c410b853d5ee2bc722e35ccb61c" translate="yes" xml:space="preserve">
          <source>Nevertheless, this is a common practice for people that need a simple way to publish a work-in-progress patch series, and it is an acceptable compromise as long as you warn other developers that this is how you intend to manage the branch.</source>
          <target state="translated">Тем не менее,это обычная практика для людей,которым нужен простой способ опубликовать серию исправлений,и это приемлемый компромисс до тех пор,пока вы предупреждаете других разработчиков о том,что именно так вы собираетесь управлять веткой.</target>
        </trans-unit>
        <trans-unit id="208a508aabbf19798034826f77ed481ec28e90cc" translate="yes" xml:space="preserve">
          <source>New features:</source>
          <target state="translated">Новые возможности:</target>
        </trans-unit>
        <trans-unit id="c191eda851b2a021b1ece3943d51bb10c7c6e4eb" translate="yes" xml:space="preserve">
          <source>New marks are created automatically. Existing marks can be moved to another object simply by reusing the same &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; in another &lt;code&gt;mark&lt;/code&gt; command.</source>
          <target state="translated">Новые отметки создаются автоматически. Существующие метки можно переместить в другой объект, просто повторно используя тот же &lt;code&gt;&amp;lt;idnum&amp;gt;&lt;/code&gt; в другой команде &lt;code&gt;mark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34f293962e034aa3adab30d6ce7bb006c129576e" translate="yes" xml:space="preserve">
          <source>New objects written by fast-import are not available immediately. Most fast-import commands have no visible effect until the next checkpoint (or completion). The frontend can send commands to fill fast-import&amp;rsquo;s input pipe without worrying about how quickly they will take effect, which improves performance by simplifying scheduling.</source>
          <target state="translated">Новые объекты, написанные с помощью быстрого импорта, доступны не сразу. Большинство команд быстрого импорта не имеют видимого эффекта до следующей контрольной точки (или завершения). Интерфейс может отправлять команды для заполнения входного канала быстрого импорта, не беспокоясь о том, как быстро они вступят в силу, что повышает производительность за счет упрощения планирования.</target>
        </trans-unit>
        <trans-unit id="bd5d84635e8045ac3e97cdc31b8e7c57fb2006ba" translate="yes" xml:space="preserve">
          <source>New remote-tracking branches will be stored under the shorthand name that you gave &lt;code&gt;git remote add&lt;/code&gt;, in this case &lt;code&gt;staging&lt;/code&gt;:</source>
          <target state="translated">Новые ветки удаленного отслеживания будут храниться под сокращенным именем, которое вы дали &lt;code&gt;git remote add&lt;/code&gt; , в данном случае &lt;code&gt;staging&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="408210d4e2e7bc9a95a98e6b1bf8a3bd1ff14459" translate="yes" xml:space="preserve">
          <source>New users are encouraged to use &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; instead. The &lt;code&gt;whatchanged&lt;/code&gt; command is essentially the same as &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; but defaults to show the raw format diff output and to skip merges.</source>
          <target state="translated">Новым пользователям рекомендуется использовать вместо этого &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; . Команда &lt;code&gt;whatchanged&lt;/code&gt; по сути такая же, как &lt;a href=&quot;git-log&quot;&gt;git-log [1],&lt;/a&gt; но по умолчанию показывает вывод различий в исходном формате и пропускает слияния.</target>
        </trans-unit>
        <trans-unit id="04e09d741912def77b41c31c7fd7bada0af8f8f2" translate="yes" xml:space="preserve">
          <source>Newer &lt;code&gt;git diff&lt;/code&gt; output has embedded &lt;code&gt;index information&lt;/code&gt; for each blob to help identify the original version that the patch applies to. When this flag is given, and if the original versions of the blobs are available locally, builds a temporary index containing those blobs.</source>
          <target state="translated">Более &lt;code&gt;git diff&lt;/code&gt; вывод git diff содержит встроенную &lt;code&gt;index information&lt;/code&gt; для каждого большого двоичного объекта, чтобы помочь определить исходную версию, к которой применяется исправление. Если установлен этот флаг, и если исходные версии больших двоичных объектов доступны локально, создается временный индекс, содержащий эти большие двоичные объекты.</target>
        </trans-unit>
        <trans-unit id="7f94af506f4cd517718453425d685ea35e84d4c7" translate="yes" xml:space="preserve">
          <source>Newly created objects are initially created in a file named after the object&amp;rsquo;s SHA-1 hash (stored in &lt;code&gt;.git/objects&lt;/code&gt;).</source>
          <target state="translated">Вновь созданные объекты изначально создаются в файле, названном в честь хэша SHA-1 объекта (хранящегося в &lt;code&gt;.git/objects&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5efdf7f0d1fca004c74269609acfa25723d86160" translate="yes" xml:space="preserve">
          <source>Next step: get familiar with the object naming. Read &lt;a href=&quot;#naming-commits&quot;&gt;Naming commits&lt;/a&gt;. There are quite a few ways to name an object (and not only revisions!). All of these are handled in &lt;code&gt;sha1_name.c&lt;/code&gt;. Just have a quick look at the function &lt;code&gt;get_sha1()&lt;/code&gt;. A lot of the special handling is done by functions like &lt;code&gt;get_sha1_basic()&lt;/code&gt; or the likes.</source>
          <target state="translated">Следующий шаг: познакомимся с именованием объекта. Прочтите &lt;a href=&quot;#naming-commits&quot;&gt;коммиты по именованию&lt;/a&gt; . Существует довольно много способов дать объекту имя (и не только ревизии!). Все это обрабатывается в &lt;code&gt;sha1_name.c&lt;/code&gt; . Взгляните на функцию &lt;code&gt;get_sha1()&lt;/code&gt; . Большая часть специальной обработки выполняется такими функциями, как &lt;code&gt;get_sha1_basic()&lt;/code&gt; или подобными.</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">Следующие шаги</target>
        </trans-unit>
        <trans-unit id="817a91571b93a177740989ad9e63a1941cffb303" translate="yes" xml:space="preserve">
          <source>Next time, after seeing the same conflicted automerge, running &lt;code&gt;git rerere&lt;/code&gt; will perform a three-way merge between the earlier conflicted automerge, the earlier manual resolution, and the current conflicted automerge. If this three-way merge resolves cleanly, the result is written out to your working tree file, so you do not have to manually resolve it. Note that &lt;code&gt;git rerere&lt;/code&gt; leaves the index file alone, so you still need to do the final sanity checks with &lt;code&gt;git diff&lt;/code&gt; (or &lt;code&gt;git diff -c&lt;/code&gt;) and &lt;code&gt;git add&lt;/code&gt; when you are satisfied.</source>
          <target state="translated">В следующий раз, увидев такое же конфликтующее автоматическое объединение, запуск &lt;code&gt;git rerere&lt;/code&gt; выполнит трехстороннее слияние между ранее конфликтующим автоматическим объединением, более ранним ручным разрешением и текущим конфликтующим автоматическим объединением. Если это трехстороннее слияние разрешается чисто, результат записывается в ваш рабочий файл дерева, поэтому вам не нужно вручную разрешать его. Обратите внимание, что &lt;code&gt;git rerere&lt;/code&gt; оставляет индексный файл в покое, поэтому вам все равно нужно выполнить окончательную проверку &lt;code&gt;git diff&lt;/code&gt; с помощью git diff (или &lt;code&gt;git diff -c&lt;/code&gt; ) и &lt;code&gt;git add&lt;/code&gt; , когда вы будете удовлетворены.</target>
        </trans-unit>
        <trans-unit id="74ccc5b41472ca3ff8486dd211ddfe0cae9246c3" translate="yes" xml:space="preserve">
          <source>Next, commit the changes stored in the index. The &lt;code&gt;-c&lt;/code&gt; option specifies to pre-populate the commit message from the original message that you started with in the first commit. This is helpful to avoid retyping it. The &lt;code&gt;HEAD@{1}&lt;/code&gt; is a special notation for the commit that &lt;code&gt;HEAD&lt;/code&gt; used to be at prior to the original reset commit (1 change ago). See &lt;a href=&quot;git-reflog&quot;&gt;git-reflog[1]&lt;/a&gt; for more details. You may also use any other valid commit reference.</source>
          <target state="translated">Затем зафиксируйте изменения, хранящиеся в индексе. Параметр &lt;code&gt;-c&lt;/code&gt; указывает предварительное заполнение сообщения фиксации из исходного сообщения, с которого вы начали в первой фиксации. Это поможет избежать его повторного ввода. &lt;code&gt;HEAD@{1}&lt;/code&gt; является специальным обозначением для фиксации , что &lt;code&gt;HEAD&lt;/code&gt; используется для быть до первоначального сброса фиксации (1 изменить назад). См. &lt;a href=&quot;git-reflog&quot;&gt;Git-reflog [1]&lt;/a&gt; для получения более подробной информации. Вы также можете использовать любую другую действительную ссылку на фиксацию.</target>
        </trans-unit>
        <trans-unit id="d481150e66b12915d203137377672c89781fe045" translate="yes" xml:space="preserve">
          <source>Next, copy &lt;code&gt;proj.git&lt;/code&gt; to the server where you plan to host the public repository. You can use scp, rsync, or whatever is most convenient.</source>
          <target state="translated">Затем скопируйте &lt;code&gt;proj.git&lt;/code&gt; на сервер, на котором вы планируете разместить публичный репозиторий. Вы можете использовать scp, rsync или что угодно, что вам удобнее.</target>
        </trans-unit>
        <trans-unit id="04e0b9feb1c4a494995ed09ad261d2d4e9ce11c5" translate="yes" xml:space="preserve">
          <source>Next, give every team member read/write access to this repository. One easy way to do this is to give all the team members ssh access to the machine where the repository is hosted. If you don&amp;rsquo;t want to give them a full shell on the machine, there is a restricted shell which only allows users to do Git pushes and pulls; see &lt;a href=&quot;git-shell&quot;&gt;git-shell[1]&lt;/a&gt;.</source>
          <target state="translated">Затем предоставьте каждому члену команды доступ для чтения / записи в этот репозиторий. Один из простых способов сделать это - предоставить всем участникам команды ssh-доступ к машине, на которой размещен репозиторий. Если вы не хотите предоставлять им полную оболочку на машине, существует ограниченная оболочка, которая позволяет пользователям выполнять только нажатия и извлечения Git; см. &lt;a href=&quot;git-shell&quot;&gt;git-shell [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28d55d870524553fca2220c18e5b9bb0de3dcbdb" translate="yes" xml:space="preserve">
          <source>Next, tell Git to take a snapshot of the contents of all files under the current directory (note the &lt;code&gt;.&lt;/code&gt;), with &lt;code&gt;git add&lt;/code&gt;:</source>
          <target state="translated">Затем скажите Git сделать снимок содержимого всех файлов в текущем каталоге (обратите внимание на &lt;code&gt;.&lt;/code&gt; ) С помощью &lt;code&gt;git add&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="596419ac8ea3393898cb55dbbde5c3613a819bd1" translate="yes" xml:space="preserve">
          <source>Next, we interactively select diff hunks to add using the &lt;code&gt;git add -p&lt;/code&gt; facility. This will ask you about each diff hunk in sequence and you can use simple commands such as &quot;yes, include this&quot;, &quot;No don&amp;rsquo;t include this&quot; or even the very powerful &quot;edit&quot; facility.</source>
          <target state="translated">Затем мы интерактивно выбираем блоки diff для добавления с помощью средства &lt;code&gt;git add -p&lt;/code&gt; . Вам будет задан вопрос о каждом блоке различий по порядку, и вы сможете использовать простые команды, такие как &amp;laquo;да, включить это&amp;raquo;, &amp;laquo;Нет, не включать это&amp;raquo; или даже очень мощное средство &amp;laquo;редактирования&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8951da293ad0f99492d7f4956f721a58ac3b7ff1" translate="yes" xml:space="preserve">
          <source>No checkout of HEAD is performed after the clone is complete.</source>
          <target state="translated">После завершения клона проверка ГОЛОВА не проводится.</target>
        </trans-unit>
        <trans-unit id="cfeba19b6e040607769791cbfbefd83c894b180c" translate="yes" xml:space="preserve">
          <source>No modifications to submodules are ignored, all of committed differences, and modifications to tracked and untracked files are shown. This is the default option.</source>
          <target state="translated">Никакие модификации подмодулей не игнорируются,отображаются все зафиксированные различия,а также модификации отслеживаемых и неотслеживаемых файлов.Это опция по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e2a67085604f2eb59fb72fa11fe30ca6d6e00a34" translate="yes" xml:space="preserve">
          <source>No other changes are made. In particular, the local modifications you had before you started merge will stay the same and the index entries for them stay as they were, i.e. matching &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Никаких других изменений не вносится. В частности, локальные изменения, которые вы сделали до начала слияния, останутся такими же, а записи индекса для них останутся такими, какими они были, то есть совпадающими с &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c967d0b967e1e36091e8958a5454d9ea9951dded" translate="yes" xml:space="preserve">
          <source>No other modifications are made.</source>
          <target state="translated">Никаких других изменений не производится.</target>
        </trans-unit>
        <trans-unit id="57658df76cf3f4fecaffea0a60cae0068e21e278" translate="yes" xml:space="preserve">
          <source>No patch introduces a regression: after applying any initial part of the series, the resulting project still compiles and works, and has no bugs that it didn&amp;rsquo;t have before.</source>
          <target state="translated">Никакой патч не приводит к регрессу: после применения любой начальной части серии результирующий проект по-прежнему компилируется и работает, и в нем нет ошибок, которых не было раньше.</target>
        </trans-unit>
        <trans-unit id="0d39633312554b0ea8cb734d680c4698c57a7afd" translate="yes" xml:space="preserve">
          <source>No pattern matches the path, and nothing says if the path has or does not have the attribute, the attribute for the path is said to be Unspecified.</source>
          <target state="translated">Ни один шаблон не совпадает с путём,и ничто не говорит,что если путь имеет или не имеет атрибут,то атрибут для пути считается Уточнённым.</target>
        </trans-unit>
        <trans-unit id="c90ed1cbdf989952fffa921b682ee1beb354558a" translate="yes" xml:space="preserve">
          <source>No special setup is needed for SSH access, other than having Git tools in the PATH. If you have clients that do not accept the CVS_SERVER environment variable, you can rename &lt;code&gt;git-cvsserver&lt;/code&gt; to &lt;code&gt;cvs&lt;/code&gt;.</source>
          <target state="translated">Для доступа по SSH не требуется никаких специальных настроек, кроме наличия инструментов Git в PATH. Если у вас есть клиенты, которые не принимают переменную среды CVS_SERVER, вы можете переименовать &lt;code&gt;git-cvsserver&lt;/code&gt; в &lt;code&gt;cvs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5febeaff9fb6579d7fb9744e50b3994bde6d8e3" translate="yes" xml:space="preserve">
          <source>Non-ascii filenames can be silently removed despite being in a desired directory. Keeping only wanted paths is often done using pipelines like &lt;code&gt;git ls-files | grep -v ^WANTED_DIR/ | xargs git rm&lt;/code&gt;. ls-files will only quote filenames if needed, so folks may not notice that one of the files didn&amp;rsquo;t match the regex (at least not until it&amp;rsquo;s much too late). Yes, someone who knows about core.quotePath can avoid this (unless they have other special characters like \t, \n, or &quot;), and people who use ls-files -z with something other than grep can avoid this, but that doesn&amp;rsquo;t mean they will.</source>
          <target state="translated">Имена файлов в формате, отличном от ascii, могут быть удалены без уведомления, несмотря на то, что они находятся в желаемом каталоге. Сохранение только желаемых путей часто выполняется с помощью конвейеров, таких как &lt;code&gt;git ls-files | grep -v ^WANTED_DIR/ | xargs git rm&lt;/code&gt; . ls-files будут указывать имена файлов только при необходимости, поэтому люди могут не заметить, что один из файлов не соответствует регулярному выражению (по крайней мере, пока не станет слишком поздно). Да, тот, кто знает о core.quotePath, может этого избежать (если у него нет других специальных символов, таких как \ t, \ n или &quot;), и люди, которые используют ls-files -z с чем-то другим, кроме grep, могут этого избежать, но не значит, что они будут.</target>
        </trans-unit>
        <trans-unit id="e2858812ab58a3c85b7437528709a46037dcfba6" translate="yes" xml:space="preserve">
          <source>Non-cached mode</source>
          <target state="translated">Не кэшированный режим</target>
        </trans-unit>
        <trans-unit id="28592521357265f4a182551c4308e7cea911b93e" translate="yes" xml:space="preserve">
          <source>Non-empty context lines that have one extra whitespace at the beginning.</source>
          <target state="translated">Непустые строки контекста с одним дополнительным белым пробелом в начале.</target>
        </trans-unit>
        <trans-unit id="54b4652d3bd254c89ec712af1b81619180dc7f11" translate="yes" xml:space="preserve">
          <source>None of the provided paths are ignored.</source>
          <target state="translated">Ни один из предложенных путей не игнорируется.</target>
        </trans-unit>
        <trans-unit id="53d641d85a09ede95cefeac02aadaca1a7fcd396" translate="yes" xml:space="preserve">
          <source>Normalize &lt;code&gt;refname&lt;/code&gt; by removing any leading slash (&lt;code&gt;/&lt;/code&gt;) characters and collapsing runs of adjacent slashes between name components into a single slash. If the normalized refname is valid then print it to standard output and exit with a status of 0, otherwise exit with a non-zero status. (&lt;code&gt;--print&lt;/code&gt; is a deprecated way to spell &lt;code&gt;--normalize&lt;/code&gt;.)</source>
          <target state="translated">Нормализуйте &lt;code&gt;refname&lt;/code&gt; , удалив все начальные символы косой черты ( &lt;code&gt;/&lt;/code&gt; ) и свернув ряды соседних косых черт между компонентами имени в одну косую черту. Если нормализованное имя ссылки является допустимым, выведите его на стандартный вывод и выйдите со статусом 0, в противном случае выйдите с ненулевым статусом. ( &lt;code&gt;--print&lt;/code&gt; - устаревший способ &lt;code&gt;--normalize&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="cd7a46a34b030b4fa7a1f4c298bb470454f5bdc6" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;git write-tree&lt;/code&gt; ensures that the objects referenced by the directory exist in the object database. This option disables this check.</source>
          <target state="translated">Обычно &lt;code&gt;git write-tree&lt;/code&gt; гарантирует, что объекты, на которые ссылается каталог, существуют в базе данных объектов. Эта опция отключает эту проверку.</target>
        </trans-unit>
        <trans-unit id="88fcf17b3fc3a47614adb1a8f9a3b0161d3a2185" translate="yes" xml:space="preserve">
          <source>Normally a &quot;commit&quot; has one parent: the previous state of the tree before a certain change was made. However, sometimes it can have two or more parent commits, in which case we call it a &quot;merge&quot;, due to the fact that such a commit brings together (&quot;merges&quot;) two or more previous states represented by other commits.</source>
          <target state="translated">Обычно &quot;коммит&quot; имеет одного родителя:предыдущее состояние дерева до того,как было сделано определенное изменение.Однако,иногда у него может быть два или более родительских коммита,в этом случае мы называем его &quot;слиянием&quot;,из-за того,что такой коммит объединяет (&quot;слияние&quot;)два или более предыдущих состояния,представленных другими коммитами.</target>
        </trans-unit>
        <trans-unit id="a69474e938cf33a616aeca615fe9997480c7c945" translate="yes" xml:space="preserve">
          <source>Normally a commit would identify a new &quot;HEAD&quot; state, and while Git doesn&amp;rsquo;t care where you save the note about that state, in practice we tend to just write the result to the file that is pointed at by &lt;code&gt;.git/HEAD&lt;/code&gt;, so that we can always see what the last committed state was.</source>
          <target state="translated">Обычно фиксация определяет новое состояние &amp;laquo;HEAD&amp;raquo;, и хотя Git не заботится о том, где вы сохраняете заметку об этом состоянии, на практике мы просто записываем результат в файл, на который указывает &lt;code&gt;.git/HEAD&lt;/code&gt; , так что мы всегда можем видеть, каким было последнее зафиксированное состояние.</target>
        </trans-unit>
        <trans-unit id="de60fcb388acbd1518bd224ad2216b3a990124fa" translate="yes" xml:space="preserve">
          <source>Normally batch output is flushed after each object is output, so that a process can interactively read and write from &lt;code&gt;cat-file&lt;/code&gt;. With this option, the output uses normal stdio buffering; this is much more efficient when invoking &lt;code&gt;--batch-check&lt;/code&gt; on a large number of objects.</source>
          <target state="translated">Обычно пакетный вывод сбрасывается после вывода каждого объекта, так что процесс может интерактивно читать и писать из &lt;code&gt;cat-file&lt;/code&gt; . С этой опцией вывод использует обычную буферизацию stdio; это намного эффективнее при вызове &lt;code&gt;--batch-check&lt;/code&gt; для большого количества объектов.</target>
        </trans-unit>
        <trans-unit id="38e091b35be2fc0762233a3d599b506f3b643fb1" translate="yes" xml:space="preserve">
          <source>Normally commits are only added to a project, never taken away or replaced. Git is designed with this assumption, and violating it will cause Git&amp;rsquo;s merge machinery (for example) to do the wrong thing.</source>
          <target state="translated">Обычно коммиты только добавляются в проект, никогда не удаляются и не заменяются. Git разработан с учетом этого предположения, и его нарушение приведет к тому, что механизм слияния Git (например) будет делать неправильные вещи.</target>
        </trans-unit>
        <trans-unit id="9122c3565585fe79768943dc25f1cf167ffbd58d" translate="yes" xml:space="preserve">
          <source>Normally the &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; stores the name of a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt;, and commands that operate on the history HEAD represents operate on the history leading to the tip of the branch the HEAD points at. However, Git also allows you to &lt;a href=&quot;#def_checkout&quot;&gt;check out&lt;/a&gt; an arbitrary &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; that isn&amp;rsquo;t necessarily the tip of any particular branch. The HEAD in such a state is called &quot;detached&quot;.</source>
          <target state="translated">Обычно &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; хранит имя &lt;a href=&quot;#def_branch&quot;&gt;ветки&lt;/a&gt; , а команды, которые работают с историей, которую представляет HEAD, работают с историей, ведущей к вершине ветки, на которую указывает HEAD. Однако Git также позволяет вам &lt;a href=&quot;#def_checkout&quot;&gt;проверить&lt;/a&gt; произвольную &lt;a href=&quot;#def_commit&quot;&gt;фиксацию,&lt;/a&gt; которая не обязательно является вершиной какой-либо конкретной ветки. ГОЛОВА в таком состоянии называется &amp;laquo;отсоединенной&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="cc5f74671cf296af564ff0627cbd1c153eed7819" translate="yes" xml:space="preserve">
          <source>Normally the branch merged in is the HEAD of the remote repository, but the choice is determined by the branch.&amp;lt;name&amp;gt;.remote and branch.&amp;lt;name&amp;gt;.merge options; see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">Обычно объединенная ветка является HEAD удаленного репозитория, но выбор определяется параметрами branch. &amp;lt;name&amp;gt; .remote и branch. &amp;lt;name&amp;gt; .merge; подробнее см. &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f22467859cfedb6f904df5424dcd9afb82c226b1" translate="yes" xml:space="preserve">
          <source>Normally whenever a branch head in a public repository is modified, it is modified to point to a descendant of the commit that it pointed to before. By forcing a push in this situation, you break that convention. (See &lt;a href=&quot;#problems-With-rewriting-history&quot;&gt;Problems with rewriting history&lt;/a&gt;.)</source>
          <target state="translated">Обычно всякий раз, когда изменяется заголовок ветки в общедоступном репозитории, он изменяется так, чтобы указывать на потомка коммита, на который он указывал ранее. Форсируя толчок в этой ситуации, вы нарушаете это соглашение. (См. &lt;a href=&quot;#problems-With-rewriting-history&quot;&gt;Проблемы с перезаписью истории&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="43244e83cbae6a59cf653d315de1a56015589247" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;git rerere&lt;/code&gt; is run without arguments or user-intervention. However, it has several commands that allow it to interact with its working state.</source>
          <target state="translated">Обычно &lt;code&gt;git rerere&lt;/code&gt; запускается без аргументов или вмешательства пользователя. Однако у него есть несколько команд, которые позволяют ему взаимодействовать с его рабочим состоянием.</target>
        </trans-unit>
        <trans-unit id="d7d70adae9e248dcbf5927b7eeba22fdf79a73fb" translate="yes" xml:space="preserve">
          <source>Normally, only files unknown to Git are removed, but if the &lt;code&gt;-x&lt;/code&gt; option is specified, ignored files are also removed. This can, for example, be useful to remove all build products.</source>
          <target state="translated">Обычно удаляются только файлы, неизвестные Git, но если указана опция &lt;code&gt;-x&lt;/code&gt; , игнорируемые файлы также удаляются. Это может быть полезно, например, для удаления всех продуктов сборки.</target>
        </trans-unit>
        <trans-unit id="ea1a90319260338e8b5ddefd985427f3690ce910" translate="yes" xml:space="preserve">
          <source>Normally, the &quot;git svn clone&quot; and &quot;git svn rebase&quot; commands attempt to recreate empty directories that are in the Subversion repository. If this option is set to &quot;false&quot;, then empty directories will only be created if the &quot;git svn mkdirs&quot; command is run explicitly. If unset, &lt;code&gt;git svn&lt;/code&gt; assumes this option to be &quot;true&quot;.</source>
          <target state="translated">Обычно команды &amp;laquo;git svn clone&amp;raquo; и &amp;laquo;git svn rebase&amp;raquo; пытаются воссоздать пустые каталоги, которые находятся в репозитории Subversion. Если для этого параметра установлено значение &amp;laquo;false&amp;raquo;, тогда пустые каталоги будут созданы только в том случае, если команда &amp;laquo;git svn mkdirs&amp;raquo; запускается явно. Если не задано, &lt;code&gt;git svn&lt;/code&gt; предполагает, что этот параметр установлен как &quot;true&quot;.</target>
        </trans-unit>
        <trans-unit id="cbab35b86acdc7c387af4e06856d3dc90a27828f" translate="yes" xml:space="preserve">
          <source>Normally, the &quot;name&quot; field contains the canonical name of the command. When a canonical name is not available, one of these special values are used:</source>
          <target state="translated">Обычно поле &quot;имя&quot; содержит каноническое название команды.При отсутствии канонического имени используется одно из этих специальных значений:</target>
        </trans-unit>
        <trans-unit id="a72159c3df537e6c1eeaac201666cb67a55dea2c" translate="yes" xml:space="preserve">
          <source>Normally, the first commit in an SVN branch consists of a copy operation. &lt;code&gt;git svn&lt;/code&gt; will read this commit to get the SVN revision the branch was created from. It will then try to find the Git commit that corresponds to this SVN revision, and use that as the parent of the branch. However, it is possible that there is no suitable Git commit to serve as parent. This will happen, among other reasons, if the SVN branch is a copy of a revision that was not fetched by &lt;code&gt;git svn&lt;/code&gt; (e.g. because it is an old revision that was skipped with &lt;code&gt;--revision&lt;/code&gt;), or if in SVN a directory was copied that is not tracked by &lt;code&gt;git svn&lt;/code&gt; (such as a branch that is not tracked at all, or a subdirectory of a tracked branch). In these cases, &lt;code&gt;git svn&lt;/code&gt; will still create a Git branch, but instead of using an existing Git commit as the parent of the branch, it will read the SVN history of the directory the branch was copied from and create appropriate Git commits. This is indicated by the message &quot;Initializing parent: &amp;lt;branchname&amp;gt;&quot;.</source>
          <target state="translated">Обычно первая фиксация в ветке SVN состоит из операции копирования. &lt;code&gt;git svn&lt;/code&gt; прочитает этот коммит, чтобы получить версию SVN, из которой была создана ветка. Затем он попытается найти коммит Git, соответствующий этой версии SVN, и использовать его в качестве родителя ветки. Однако возможно, что нет подходящего коммита Git, который мог бы служить родительским. Это произойдет, среди прочего, если ветвь SVN является копией ревизии, которая не была получена с помощью &lt;code&gt;git svn&lt;/code&gt; (например, потому что это старая ревизия, которая была пропущена с помощью &lt;code&gt;--revision&lt;/code&gt; ), или если в SVN был скопирован каталог который не отслеживается &lt;code&gt;git svn&lt;/code&gt; (например, ветвь, которая не отслеживается вообще, или подкаталог отслеживаемой ветки). В этих случаях &lt;code&gt;git svn&lt;/code&gt; по-прежнему будет создавать ветку Git, но вместо использования существующей фиксации Git в качестве родительской для ветки он будет читать историю SVN каталога, из которого была скопирована ветка, и создавать соответствующие фиксации Git. На это указывает сообщение &amp;laquo;Инициализация родителя: &amp;lt;имя-ветки&amp;gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4d54b3aadfbad6c493d83bcb2428d0cb9e46992e" translate="yes" xml:space="preserve">
          <source>Normally, when no &amp;lt;path&amp;gt; is specified, git clean will not recurse into untracked directories to avoid removing too much. Specify -d to have it recurse into such directories as well. If any paths are specified, -d is irrelevant; all untracked files matching the specified paths (with exceptions for nested git directories mentioned under &lt;code&gt;--force&lt;/code&gt;) will be removed.</source>
          <target state="translated">Обычно, когда &amp;lt;path&amp;gt; не указан, git clean не будет рекурсивно переходить в неотслеживаемые каталоги, чтобы избежать слишком большого удаления. Укажите -d, чтобы он также рекурсивно перемещался в такие каталоги. Если указаны какие-либо пути, -d не имеет значения; все неотслеживаемые файлы, соответствующие указанным путям (за исключением вложенных каталогов git, указанных в параметре &lt;code&gt;--force&lt;/code&gt; ), будут удалены.</target>
        </trans-unit>
        <trans-unit id="429c7c6d611a6b06377c7694b2f456c87ba75047" translate="yes" xml:space="preserve">
          <source>Not all pattern types support patterns containing \0. Git will error out if a given pattern type can&amp;rsquo;t support such a pattern. The &lt;code&gt;--perl-regexp&lt;/code&gt; pattern type when compiled against the PCRE v2 backend has the widest support for these types of patterns.</source>
          <target state="translated">Не все типы шаблонов поддерживают шаблоны, содержащие \ 0. Git выдаст ошибку, если данный тип шаблона не может поддерживать такой шаблон. Тип &lt;code&gt;--perl-regexp&lt;/code&gt; при компиляции с серверной частью PCRE v2 имеет самую широкую поддержку для этих типов шаблонов.</target>
        </trans-unit>
        <trans-unit id="fc85aa9ed9f2a57ce72e656178cf6fe66c794d02" translate="yes" xml:space="preserve">
          <source>Not all values are equally unambiguous:</source>
          <target state="translated">Не все значения одинаково однозначны:</target>
        </trans-unit>
        <trans-unit id="8394b0fb9c23c1116919b0832addc200fe1387df" translate="yes" xml:space="preserve">
          <source>Not to worry. It left the (trivial) conflict in &lt;code&gt;hello&lt;/code&gt; in the same form you should already be well used to if you&amp;rsquo;ve ever used CVS, so let&amp;rsquo;s just open &lt;code&gt;hello&lt;/code&gt; in our editor (whatever that may be), and fix it up somehow. I&amp;rsquo;d suggest just making it so that &lt;code&gt;hello&lt;/code&gt; contains all four lines:</source>
          <target state="translated">Не беспокоиться. Он оставил (тривиальный) конфликт в &lt;code&gt;hello&lt;/code&gt; в той же форме, к которой вы уже должны были хорошо привыкнуть, если когда-либо использовали CVS, поэтому давайте просто откроем &lt;code&gt;hello&lt;/code&gt; в нашем редакторе (что бы это ни было) и как-нибудь исправим его. Я предлагаю просто сделать так, чтобы &lt;code&gt;hello&lt;/code&gt; содержал все четыре строки:</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="b7ed8e5f5bf09b0c843d3af582307ddfb588c4c6" translate="yes" xml:space="preserve">
          <source>Note about fast-forwards</source>
          <target state="translated">Обратите внимание на перемотки вперед</target>
        </trans-unit>
        <trans-unit id="318ccd302e94c5b26153ff4314826ba81af60a67" translate="yes" xml:space="preserve">
          <source>Note about git config --global</source>
          <target state="translated">Обратите внимание на git-конфигурацию --global</target>
        </trans-unit>
        <trans-unit id="a858b9b8c7722185661603839f0881f8c7f88318" translate="yes" xml:space="preserve">
          <source>Note about konqueror</source>
          <target state="translated">Заметка о завоевателе</target>
        </trans-unit>
        <trans-unit id="01b5dd07775875ee6aa9a8a3da76365c637f9b1a" translate="yes" xml:space="preserve">
          <source>Note also that multiple copies of an object may be present in the object database; in this case, it is undefined which copy&amp;rsquo;s size or delta base will be reported.</source>
          <target state="translated">Также обратите внимание, что в базе данных объектов может быть несколько копий объекта; в этом случае не определено, какой размер копии или дельта-база будет сообщаться.</target>
        </trans-unit>
        <trans-unit id="e92cbc9ca374ec932eab116752367c5739918c53" translate="yes" xml:space="preserve">
          <source>Note for Git users, that it is equivalent as keeping only the commit given by:</source>
          <target state="translated">Обратите внимание пользователей Git'а,что это эквивалентно сохранению только заданного коммита:</target>
        </trans-unit>
        <trans-unit id="9cd066f98a94620416bd40171030f2cd3deb4780" translate="yes" xml:space="preserve">
          <source>Note how the rule to only follow the TREESAME parent, if one is available, removed &lt;code&gt;B&lt;/code&gt; from consideration entirely. &lt;code&gt;C&lt;/code&gt; was considered via &lt;code&gt;N&lt;/code&gt;, but is TREESAME. Root commits are compared to an empty tree, so &lt;code&gt;I&lt;/code&gt; is !TREESAME.</source>
          <target state="translated">Обратите внимание, как правило следовать только родительскому элементу TREESAME, если таковой имеется, полностью исключило &lt;code&gt;B&lt;/code&gt; из рассмотрения. &lt;code&gt;C&lt;/code&gt; рассматривался через &lt;code&gt;N&lt;/code&gt; , но это TREESAME. Корневые коммиты сравниваются с пустым деревом, поэтому &lt;code&gt;I&lt;/code&gt; ! TREESAME.</target>
        </trans-unit>
        <trans-unit id="8bfd2da46a110f046c6975fde1a8b82933cacdc7" translate="yes" xml:space="preserve">
          <source>Note how there is no need for an entry for &lt;code&gt;&amp;lt;jane@laptop.(none)&amp;gt;&lt;/code&gt;, because the real name of that author is already correct.</source>
          <target state="translated">Обратите внимание, что запись для &lt;code&gt;&amp;lt;jane@laptop.(none)&amp;gt;&lt;/code&gt; не требуется , потому что настоящее имя этого автора уже верно.</target>
        </trans-unit>
        <trans-unit id="a357a7dbcbc2a41b2d3445e7cfb8ae38a48bfe09" translate="yes" xml:space="preserve">
          <source>Note in the example that we set up a triangular workflow, where we pull from one location and push to another. In a non-triangular workflow, &lt;code&gt;@{push}&lt;/code&gt; is the same as &lt;code&gt;@{upstream}&lt;/code&gt;, and there is no need for it.</source>
          <target state="translated">Обратите внимание, что в этом примере мы настраиваем треугольный рабочий процесс, в котором мы тянем из одного места и отправляем в другое. В нетреугольном рабочем процессе &lt;code&gt;@{push}&lt;/code&gt; совпадает с &lt;code&gt;@{upstream}&lt;/code&gt; , и в этом нет необходимости.</target>
        </trans-unit>
        <trans-unit id="01660f89f7c458ce6428d6e0df0b322692b74596" translate="yes" xml:space="preserve">
          <source>Note that &quot;%f&quot; is the name of the path that is being worked on. Depending on the version that is being filtered, the corresponding file on disk may not exist, or may have different contents. So, smudge and clean commands should not try to access the file on disk, but only act as filters on the content provided to them on standard input.</source>
          <target state="translated">Обратите внимание,что &quot;%f&quot;-это имя пути,над которым ведется работа.В зависимости от версии,которая фильтруется,соответствующий файл на диске может не существовать или иметь разное содержимое.Поэтому команды &quot;размазывания&quot; и &quot;очистки&quot; не должны пытаться получить доступ к файлу на диске,а только действовать в качестве фильтров по содержимому,предоставляемому им на стандартном входе.</target>
        </trans-unit>
        <trans-unit id="014f6a8d43d7b297d024fa501c939621bed28154" translate="yes" xml:space="preserve">
          <source>Note that &quot;../&quot; is not special and will match literally, which is unlikely what you want.</source>
          <target state="translated">Обратите внимание,что &quot;.../&quot; не является особенным и будет соответствовать буквально,что вряд ли то,что вы хотите.</target>
        </trans-unit>
        <trans-unit id="8b91ded5c4fad4671b25fb8bfeab09bc89a0acef" translate="yes" xml:space="preserve">
          <source>Note that (3) is a historical artefact and will be ignored if the (1) and (2) specify that the submodule is not active. In other words, if we have a &lt;code&gt;submodule.&amp;lt;name&amp;gt;.active&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt; or if the submodule&amp;rsquo;s path is excluded in the pathspec in &lt;code&gt;submodule.active&lt;/code&gt;, the url doesn&amp;rsquo;t matter whether it is present or not. This is illustrated in the example that follows.</source>
          <target state="translated">Обратите внимание, что (3) является историческим артефактом и будет проигнорирован, если (1) и (2) указывают, что подмодуль не активен. Другими словами, если у нас есть &lt;code&gt;submodule.&amp;lt;name&amp;gt;.active&lt;/code&gt; набор в &lt;code&gt;false&lt;/code&gt; или если путь Подмодуль исключен в в pathspec в &lt;code&gt;submodule.active&lt;/code&gt; , URL - адрес не имеет значения , является ли он присутствует или нет. Это проиллюстрировано в следующем примере.</target>
        </trans-unit>
        <trans-unit id="6fec9940a0e0728d1bf92151624eb87584d6019f" translate="yes" xml:space="preserve">
          <source>Note that --more, --list, --independent and --merge-base options are mutually exclusive.</source>
          <target state="translated">Обратите внимание,что опции --more,--list,--ependent и --merge-base являются взаимоисключающими.</target>
        </trans-unit>
        <trans-unit id="9b9a74f48dd77c7cda36904d8ae57495c22af6f7" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;--force&lt;/code&gt; applies to all the refs that are pushed, hence using it with &lt;code&gt;push.default&lt;/code&gt; set to &lt;code&gt;matching&lt;/code&gt; or with multiple push destinations configured with &lt;code&gt;remote.*.push&lt;/code&gt; may overwrite refs other than the current branch (including local refs that are strictly behind their remote counterpart). To force a push to only one branch, use a &lt;code&gt;+&lt;/code&gt; in front of the refspec to push (e.g &lt;code&gt;git push
origin +master&lt;/code&gt; to force a push to the &lt;code&gt;master&lt;/code&gt; branch). See the &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; section above for details.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;--force&lt;/code&gt; применяется ко всем &lt;code&gt;push.default&lt;/code&gt; , следовательно, используя его с push.default, установленным на &lt;code&gt;matching&lt;/code&gt; или с несколькими назначениями push, настроенными с помощью &lt;code&gt;remote.*.push&lt;/code&gt; может перезаписать ссылки, отличные от текущей ветки (включая локальные ссылки, которые строго за своим удаленным аналогом). Чтобы принудительно отправить только одну ветку, используйте &lt;code&gt;+&lt;/code&gt; перед refspec для push (например, &lt;code&gt;git push origin +master&lt;/code&gt; для принудительной отправки в &lt;code&gt;master&lt;/code&gt; ветку). Подробнее см. Раздел &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="f71426a1d6dfa55d8e5b4bb3bb7ddab1eba41559" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;--patch&lt;/code&gt; can accept no pathspec and will prompt to restore all modified paths.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;--patch&lt;/code&gt; не может принимать никакие пути и предложит восстановить все измененные пути.</target>
        </trans-unit>
        <trans-unit id="788dab85e40bdd496cc4b3d8bdc2f5695fd79580" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;combined diff&lt;/code&gt; lists only files which were modified from all parents.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;combined diff&lt;/code&gt; список различий перечисляет только файлы, которые были изменены всеми родительскими файлами.</target>
        </trans-unit>
        <trans-unit id="e64bae554ef50a53010f144d204d2601ed2388af" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;git --help ...&lt;/code&gt; is identical to &lt;code&gt;git help ...&lt;/code&gt; because the former is internally converted into the latter.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;git --help ...&lt;/code&gt; идентичен &lt;code&gt;git help ...&lt;/code&gt; потому что первое внутренне преобразовано во второе.</target>
        </trans-unit>
        <trans-unit id="0f050e4f28b585b64021f162ba65306d71b16a1c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;git add&lt;/code&gt; always adds just the current contents of a file to the index; further changes to the same file will be ignored unless you run &lt;code&gt;git add&lt;/code&gt; on the file again.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;git add&lt;/code&gt; всегда добавляет в индекс только текущее содержимое файла; дальнейшие изменения в том же файле будут проигнорированы, если вы снова не запустите &lt;code&gt;git add&lt;/code&gt; для файла.</target>
        </trans-unit>
        <trans-unit id="a75d3b6c972faf4b238fb20e64f0ae5ba4c5e6f0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;git diff-tree&lt;/code&gt; can use the tree encapsulated in a commit object.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;git diff-tree&lt;/code&gt; может использовать дерево, инкапсулированное в объект фиксации.</target>
        </trans-unit>
        <trans-unit id="c22023840a6edf8cbd10c5905bf1fe0b2598253c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;trailers&lt;/code&gt; do not follow and are not intended to follow many rules for RFC 822 headers. For example they do not follow the encoding rules and probably many other rules.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;trailers&lt;/code&gt; не следуют и не предназначены для выполнения многих правил для заголовков RFC 822. Например, они не соблюдают правила кодирования и, вероятно, многие другие правила.</target>
        </trans-unit>
        <trans-unit id="99d4b644b5be625d6423f4cb1035eccb3ada0dfe" translate="yes" xml:space="preserve">
          <source>Note that Git at the core level treats path names simply as sequences of non-NUL bytes, there are no path name encoding conversions (except on Mac and Windows). Therefore, using non-ASCII path names will mostly work even on platforms and file systems that use legacy extended ASCII encodings. However, repositories created on such systems will not work properly on UTF-8-based systems (e.g. Linux, Mac, Windows) and vice versa. Additionally, many Git-based tools simply assume path names to be UTF-8 and will fail to display other encodings correctly.</source>
          <target state="translated">Обратите внимание,что Git на уровне ядра воспринимает имена путей просто как последовательности не нулевых байт,конвертации кодировок имен путей не происходит (за исключением Mac и Windows).Поэтому использование не-ASCII имен путей в основном будет работать даже на платформах и файловых системах,которые используют старые расширенные кодировки ASCII.Однако,репозитории,созданные на таких системах,не будут корректно работать на системах на базе UTF-8 (например,Linux,Mac,Windows)и наоборот.Кроме того,многие инструменты,основанные на Git'е,просто предполагают имена путей в UTF-8 и не будут корректно отображать другие кодировки.</target>
        </trans-unit>
        <trans-unit id="9883f1d7503e774a80aca1b5641976f5b274bd93" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;filerename&lt;/code&gt; is the same as a &lt;code&gt;filecopy&lt;/code&gt; followed by a &lt;code&gt;filedelete&lt;/code&gt; of the source location. There is a slight performance advantage to using &lt;code&gt;filerename&lt;/code&gt;, but the advantage is so small that it is never worth trying to convert a delete/add pair in source material into a rename for fast-import. This &lt;code&gt;filerename&lt;/code&gt; command is provided just to simplify frontends that already have rename information and don&amp;rsquo;t want bother with decomposing it into a &lt;code&gt;filecopy&lt;/code&gt; followed by a &lt;code&gt;filedelete&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;filerename&lt;/code&gt; совпадает с &lt;code&gt;filecopy&lt;/code&gt; за которой следует &lt;code&gt;filedelete&lt;/code&gt; исходного местоположения. Использование &lt;code&gt;filerename&lt;/code&gt; дает небольшое преимущество в производительности , но это преимущество настолько мало, что никогда не стоит пытаться преобразовать пару удаления / добавления в исходном материале в переименование для быстрого импорта. Эта команда &lt;code&gt;filerename&lt;/code&gt; предназначена только для упрощения внешних интерфейсов, которые уже имеют информацию о переименовании, и не хотят беспокоиться о ее разложении на &lt;code&gt;filecopy&lt;/code&gt; последующим &lt;code&gt;filedelete&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f7296e0d288c1c6e4ca2a5e972f6c90872dfac0" translate="yes" xml:space="preserve">
          <source>Note that a commit does not itself contain any information about what actually changed; all changes are calculated by comparing the contents of the tree referred to by this commit with the trees associated with its parents. In particular, Git does not attempt to record file renames explicitly, though it can identify cases where the existence of the same file data at changing paths suggests a rename. (See, for example, the &lt;code&gt;-M&lt;/code&gt; option to &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;).</source>
          <target state="translated">Обратите внимание, что фиксация сама по себе не содержит никакой информации о том, что на самом деле изменилось; все изменения рассчитываются путем сравнения содержимого дерева, на которое ссылается этот коммит, с деревьями, связанными с его родителями. В частности, Git не пытается явно записывать переименования файлов, хотя может выявить случаи, когда наличие одних и тех же данных файла при изменении путей предполагает переименование. (См., Например, параметр &lt;code&gt;-M&lt;/code&gt; в &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="54977b94f7c8617e07e8f365a31b9faa2fc062c5" translate="yes" xml:space="preserve">
          <source>Note that a more compact instruction does not change offset and size encoding. For example, if only offset2 is omitted like below, offset3 still contains bits 16-23. It does not become offset2 and contains bits 8-15 even if it&amp;rsquo;s right next to offset1.</source>
          <target state="translated">Обратите внимание, что более компактная инструкция не меняет кодировку смещения и размера. Например, если опущено только смещение 2, как показано ниже, смещение 3 все еще содержит биты 16-23. Он не становится смещением2 и содержит биты 8-15, даже если он находится рядом с смещением1.</target>
        </trans-unit>
        <trans-unit id="2599b1548726c0979f146506e9008608bae9db4a" translate="yes" xml:space="preserve">
          <source>Note that a rebase merge works by replaying each commit from the working branch on top of the &amp;lt;upstream&amp;gt; branch. Because of this, when a merge conflict happens, the side reported as &lt;code&gt;ours&lt;/code&gt; is the so-far rebased series, starting with &amp;lt;upstream&amp;gt;, and &lt;code&gt;theirs&lt;/code&gt; is the working branch. In other words, the sides are swapped.</source>
          <target state="translated">Обратите внимание, что слияние с перебазированием работает путем воспроизведения каждой фиксации из рабочей ветки поверх ветки &amp;lt;upstream&amp;gt;. Из-за этого, когда происходит конфликт слияния, сторона, о которой сообщается, как &lt;code&gt;ours&lt;/code&gt; является перебазированной на данный момент серией, начиная с &amp;lt;upstream&amp;gt;, а &lt;code&gt;theirs&lt;/code&gt; сторона является рабочей веткой. Другими словами, стороны меняются местами.</target>
        </trans-unit>
        <trans-unit id="8523c23f527cd324df8d4075c34f666be6f6f3b7" translate="yes" xml:space="preserve">
          <source>Note that all forms other than &lt;code&gt;--force-with-lease=&amp;lt;refname&amp;gt;:&amp;lt;expect&amp;gt;&lt;/code&gt; that specifies the expected current value of the ref explicitly are still experimental and their semantics may change as we gain experience with this feature.</source>
          <target state="translated">Обратите внимание, что все формы, кроме &lt;code&gt;--force-with-lease=&amp;lt;refname&amp;gt;:&amp;lt;expect&amp;gt;&lt;/code&gt; , которые явно указывают ожидаемое текущее значение ссылки, все еще являются экспериментальными, и их семантика может измениться по мере того, как мы приобретаем опыт работы с этой функцией.</target>
        </trans-unit>
        <trans-unit id="4c01852cae3ff7462ff1404dd165465e299075b3" translate="yes" xml:space="preserve">
          <source>Note that all these configuration variables should probably be set using the &lt;code&gt;--global&lt;/code&gt; flag, for example like this:</source>
          <target state="translated">Обратите внимание, что все эти переменные конфигурации, вероятно, должны быть установлены с &lt;code&gt;--global&lt;/code&gt; флага --global , например, следующим образом:</target>
        </trans-unit>
        <trans-unit id="11bfa085b8a4e40f2da0245c59f1751f600a1ada" translate="yes" xml:space="preserve">
          <source>Note that any of the &lt;code&gt;refs/*&lt;/code&gt; cases above may come either from the &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory or from the &lt;code&gt;$GIT_DIR/packed-refs&lt;/code&gt; file. While the ref name encoding is unspecified, UTF-8 is preferred as some output processing may assume ref names in UTF-8.</source>
          <target state="translated">Обратите внимание, что любой из приведенных выше случаев &lt;code&gt;refs/*&lt;/code&gt; может поступать либо из &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; либо из &lt;code&gt;$GIT_DIR/packed-refs&lt;/code&gt; . Хотя кодировка имени ссылки не указана, предпочтительнее UTF-8, поскольку некоторая обработка вывода может принимать имена ссылок в UTF-8.</target>
        </trans-unit>
        <trans-unit id="508d8a380e829238fc278b6ce7f900eddc6afba3" translate="yes" xml:space="preserve">
          <source>Note that any protocol restrictions will be applied to the rewritten URL. If the rewrite changes the URL to use a custom protocol or remote helper, you may need to adjust the &lt;code&gt;protocol.*.allow&lt;/code&gt; config to permit the request. In particular, protocols you expect to use for submodules must be set to &lt;code&gt;always&lt;/code&gt; rather than the default of &lt;code&gt;user&lt;/code&gt;. See the description of &lt;code&gt;protocol.allow&lt;/code&gt; above.</source>
          <target state="translated">Обратите внимание, что любые ограничения протокола будут применены к перезаписанному URL-адресу. Если при переписывании URL-адрес изменяется на использование настраиваемого протокола или удаленного помощника, вам может потребоваться настроить &lt;code&gt;protocol.*.allow&lt;/code&gt; config, чтобы разрешить запрос. В частности, протоколы, которые вы планируете использовать для подмодулей, должны быть установлены &lt;code&gt;always&lt;/code&gt; а не по умолчанию для &lt;code&gt;user&lt;/code&gt; . См. Описание &lt;code&gt;protocol.allow&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="85755e8e95f86917d98f865efeaea006efa16988" translate="yes" xml:space="preserve">
          <source>Note that any tree or blob object can be examined using &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt; with the &amp;lt;revision&amp;gt;:&amp;lt;path&amp;gt; syntax. This can sometimes be useful for browsing the contents of a tree that is not currently checked out.</source>
          <target state="translated">Обратите внимание, что любое дерево или большой двоичный объект можно исследовать с помощью &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; с синтаксисом &amp;lt;revision&amp;gt;: &amp;lt;path&amp;gt;. Иногда это может быть полезно для просмотра содержимого дерева, которое в настоящее время не извлечено.</target>
        </trans-unit>
        <trans-unit id="fbb379f0a0fd79434d80db46f9a2b53054c72c7c" translate="yes" xml:space="preserve">
          <source>Note that attributes are by default taken from the &lt;code&gt;.gitattributes&lt;/code&gt; files in the tree that is being archived. If you want to tweak the way the output is generated after the fact (e.g. you committed without adding an appropriate export-ignore in its &lt;code&gt;.gitattributes&lt;/code&gt;), adjust the checked out &lt;code&gt;.gitattributes&lt;/code&gt; file as necessary and use &lt;code&gt;--worktree-attributes&lt;/code&gt; option. Alternatively you can keep necessary attributes that should apply while archiving any tree in your &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; file.</source>
          <target state="translated">Обратите внимание, что атрибуты по умолчанию берутся из файлов &lt;code&gt;.gitattributes&lt;/code&gt; в архивируемом дереве. Если вы хотите настроить способ создания вывода постфактум (например, вы совершили &lt;code&gt;.gitattributes&lt;/code&gt; без добавления соответствующего игнорирования экспорта в его .gitattributes ), при необходимости измените &lt;code&gt;.gitattributes&lt;/code&gt; файл .gitattributes и используйте параметр &lt;code&gt;--worktree-attributes&lt;/code&gt; . В качестве альтернативы вы можете сохранить необходимые атрибуты, которые должны применяться при архивировании любого дерева в вашем &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cff58353f0553493321de729107a5ed939f5819e" translate="yes" xml:space="preserve">
          <source>Note that changing the compression level will not automatically recompress all existing objects. You can force recompression by passing the -F option to &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что изменение уровня сжатия не приведет к автоматическому повторному сжатию всех существующих объектов. Вы можете принудительно выполнить повторное сжатие, передав параметр -F команде &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64e3311b0fc4c31b0c8a5b69594b7b0fffce6672" translate="yes" xml:space="preserve">
          <source>Note that commands that operate on the history of the current branch (e.g. &lt;code&gt;git commit&lt;/code&gt; to build a new history on top of it) still work while the HEAD is detached. They update the HEAD to point at the tip of the updated history without affecting any branch. Commands that update or inquire information &lt;code&gt;about&lt;/code&gt; the current branch (e.g. &lt;code&gt;git
branch --set-upstream-to&lt;/code&gt; that sets what remote-tracking branch the current branch integrates with) obviously do not work, as there is no (real) current branch to ask about in this state.</source>
          <target state="translated">Обратите внимание, что команды, которые работают с историей текущей ветки (например, &lt;code&gt;git commit&lt;/code&gt; для создания новой истории поверх нее), все еще работают, пока HEAD отключен. Они обновляют HEAD, чтобы указать на верхушку обновленной истории, не затрагивая ни одну ветку. Команды, которые обновляют или запрашивают информацию &lt;code&gt;about&lt;/code&gt; текущей ветке (например, &lt;code&gt;git branch --set-upstream-to&lt;/code&gt; которая устанавливает, с какой веткой удаленного отслеживания интегрируется текущая ветка), очевидно, не работают, поскольку нет (реальной) текущей ветки, которую можно было бы запросить примерно в этом состоянии.</target>
        </trans-unit>
        <trans-unit id="c16e502657efa32285522830eee76fe68f8a2daa" translate="yes" xml:space="preserve">
          <source>Note that despite the name of the first mode, color is used to highlight the changed parts in all modes if enabled.</source>
          <target state="translated">Обратите внимание,что,несмотря на название первого режима,цвет используется для подсветки измененных деталей во всех режимах,если он включен.</target>
        </trans-unit>
        <trans-unit id="53b666711e62d15ce074196074eb30f8dac41460" translate="yes" xml:space="preserve">
          <source>Note that diff options passed to the command affect how the primary product of &lt;code&gt;format-patch&lt;/code&gt; is generated, and they are not passed to the underlying &lt;code&gt;range-diff&lt;/code&gt; machinery used to generate the cover-letter material (this may change in the future).</source>
          <target state="translated">Обратите внимание, что параметры diff, передаваемые команде, влияют на то, как генерируется основной продукт &lt;code&gt;format-patch&lt;/code&gt; , и они не передаются в базовый механизм &lt;code&gt;range-diff&lt;/code&gt; , используемый для генерации материала сопроводительного письма (это может измениться в будущем).</target>
        </trans-unit>
        <trans-unit id="e0e05126bbcc50063c2790c39405469ee70a21a8" translate="yes" xml:space="preserve">
          <source>Note that during &lt;code&gt;git rebase&lt;/code&gt; and &lt;code&gt;git pull --rebase&lt;/code&gt;, &lt;code&gt;ours&lt;/code&gt; and &lt;code&gt;theirs&lt;/code&gt; may appear swapped. See the explanation of the same options in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; for details.</source>
          <target state="translated">Обратите внимание , что во время &lt;code&gt;git rebase&lt;/code&gt; и &lt;code&gt;git pull --rebase&lt;/code&gt; , &lt;code&gt;ours&lt;/code&gt; и &lt;code&gt;theirs&lt;/code&gt; могут появиться местами. Подробнее см. Объяснение тех же параметров в &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1af7aa20d72debc79fb9171e27e72669f87bd742" translate="yes" xml:space="preserve">
          <source>Note that during &lt;code&gt;git rebase&lt;/code&gt; and &lt;code&gt;git pull --rebase&lt;/code&gt;, &lt;code&gt;ours&lt;/code&gt; and &lt;code&gt;theirs&lt;/code&gt; may appear swapped; &lt;code&gt;--ours&lt;/code&gt; gives the version from the branch the changes are rebased onto, while &lt;code&gt;--theirs&lt;/code&gt; gives the version from the branch that holds your work that is being rebased.</source>
          <target state="translated">Обратите внимание , что во время &lt;code&gt;git rebase&lt;/code&gt; и &lt;code&gt;git pull --rebase&lt;/code&gt; , &lt;code&gt;ours&lt;/code&gt; и &lt;code&gt;theirs&lt;/code&gt; может показаться местами; &lt;code&gt;--ours&lt;/code&gt; дает версию из ветки, на которую выполняется перебазирование изменений, а &lt;code&gt;--theirs&lt;/code&gt; дает версию из ветки, в которой хранится ваша работа, которая перебазируется.</target>
        </trans-unit>
        <trans-unit id="c0c3e4b221eecb8ab2fd8007bde41fbeccbc289b" translate="yes" xml:space="preserve">
          <source>Note that earlier implementation left a broken pair as a separate creation and deletion patches. This was an unnecessary hack and the latest implementation always merges all the broken pairs back into modifications, but the resulting patch output is formatted differently for easier review in case of such a complete rewrite by showing the entire contents of old version prefixed with &lt;code&gt;-&lt;/code&gt;, followed by the entire contents of new version prefixed with &lt;code&gt;+&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что более ранняя реализация оставляла неработающую пару как отдельные патчи создания и удаления. Это был ненужный взлом, и последняя реализация всегда объединяет все сломанные пары обратно в модификации, но результирующий вывод патча отформатирован по-другому для облегчения просмотра в случае такой полной перезаписи, показывая все содержимое старой версии с префиксом &lt;code&gt;-&lt;/code&gt; , за которым следует всем содержимым новой версии с префиксом &lt;code&gt;+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e94eb3093be7f837a0c2027288d60b6c3b52e2c" translate="yes" xml:space="preserve">
          <source>Note that earlier versions of this command did not complain and produced incorrect results if you gave these options.</source>
          <target state="translated">Обратите внимание,что более ранние версии этой команды не жаловались и давали неверные результаты,если вы давали такие опции.</target>
        </trans-unit>
        <trans-unit id="5d58dd5b84f29e01b510ca03eab20796ad3c7cbe" translate="yes" xml:space="preserve">
          <source>Note that extra commits can be shown to give a meaningful history.</source>
          <target state="translated">Обратите внимание,что дополнительные коммиты могут быть показаны,чтобы дать осмысленную историю.</target>
        </trans-unit>
        <trans-unit id="5d8bcfac8a1a61a9e4be4013c3b0af7c68e4f7e1" translate="yes" xml:space="preserve">
          <source>Note that fast-forward updates do not create a merge commit and therefore there is no way to stop those merges with --no-commit. Thus, if you want to ensure your branch is not changed or updated by the merge command, use --no-ff with --no-commit.</source>
          <target state="translated">Обратите внимание,что быстрая переадресация обновлений не создает фиксации слияния и,следовательно,нет способа остановить слияние с помощью --no-commit.Таким образом,если вы хотите гарантировать,что ваше ответвление не будет изменено или обновлено командой слияния,используйте --no-o-ff с помощью команды --no-commit.</target>
        </trans-unit>
        <trans-unit id="f0d1c52e1eb6b4521a19e733ce553d5995206cf5" translate="yes" xml:space="preserve">
          <source>Note that fast-import automatically switches packfiles when the current packfile reaches --max-pack-size, or 4 GiB, whichever limit is smaller. During an automatic packfile switch fast-import does not update the branch refs, tags or marks.</source>
          <target state="translated">Обратите внимание,что быстрый импорт автоматически переключает пакетные файлы,когда текущий пакетный файл достигает размера --max-пакета,или 4 Гб,в зависимости от того,какой из лимитов меньше.Во время автоматического переключения пакетов fast-import не обновляет ссылки на ветки,теги или метки.</target>
        </trans-unit>
        <trans-unit id="6615d1d4a8cbe8f9f5da36594407e26f3b365d70" translate="yes" xml:space="preserve">
          <source>Note that git log starts with the most recent commit and works backwards through the parents; however, since Git history can contain multiple independent lines of development, the particular order that commits are listed in may be somewhat arbitrary.</source>
          <target state="translated">Обратите внимание,что git'овский журнал начинается с самого последнего коммита и работает в обратном порядке через родителей;однако,поскольку история Git'а может содержать несколько независимых строк разработки,то конкретный порядок перечисления коммитов может быть несколько произвольным.</target>
        </trans-unit>
        <trans-unit id="b6e44338fe1bf08aabf78cd81639eb77b1309fea" translate="yes" xml:space="preserve">
          <source>Note that git pull always merges into the current branch, regardless of what else is given on the command line.</source>
          <target state="translated">Обратите внимание,что git pull всегда сливается с текущей веткой,независимо от того,что ещё указано в командной строке.</target>
        </trans-unit>
        <trans-unit id="bcdb8efaa60d12b40472e9e7be3ed7ef20fcfd01" translate="yes" xml:space="preserve">
          <source>Note that git-svn keeps track of the highest revision in which a branch or tag has appeared. If the subset of branches or tags is changed after fetching, then $GIT_DIR/svn/.metadata must be manually edited to remove (or reset) branches-maxRev and/or tags-maxRev as appropriate.</source>
          <target state="translated">Обратите внимание,что git-svn отслеживает наивысшую ревизию,в которой появилось ответвление или метка.Если подмножество веток или тегов изменяется после извлечения,то $GIT_DIR/svn/.metadata должны быть вручную отредактированы,чтобы удалить (или сбросить)ветви-maxRev и/или теги-maxRev соответственно.</target>
        </trans-unit>
        <trans-unit id="9d6b14c8954c11ebf9dc491ca128004d883ac7cd" translate="yes" xml:space="preserve">
          <source>Note that he doesn&amp;rsquo;t need to give the path to Alice&amp;rsquo;s repository; when Bob cloned Alice&amp;rsquo;s repository, Git stored the location of her repository in the repository configuration, and that location is used for pulls:</source>
          <target state="translated">Обратите внимание, что ему не нужно указывать путь к репозиторию Алисы; когда Боб клонировал репозиторий Алисы, Git сохранил местоположение ее репозитория в конфигурации репозитория, и это местоположение используется для извлечения:</target>
        </trans-unit>
        <trans-unit id="d033887586c63461935e98a544790f02b6895719" translate="yes" xml:space="preserve">
          <source>Note that if no extensions are specified in the config file, then &lt;code&gt;core.repositoryformatversion&lt;/code&gt; SHOULD be set to &lt;code&gt;0&lt;/code&gt; (setting it to &lt;code&gt;1&lt;/code&gt; provides no benefit, and makes the repository incompatible with older implementations of git).</source>
          <target state="translated">Обратите внимание: если в конфигурационном файле не указаны расширения, то для &lt;code&gt;core.repositoryformatversion&lt;/code&gt; СЛЕДУЕТ установить значение &lt;code&gt;0&lt;/code&gt; (установка значения &lt;code&gt;1&lt;/code&gt; не дает никаких преимуществ и делает репозиторий несовместимым со старыми реализациями git).</target>
        </trans-unit>
        <trans-unit id="855e515073658cd86a49dd1065464c65266acbcf" translate="yes" xml:space="preserve">
          <source>Note that if the &lt;code&gt;bidi-import&lt;/code&gt; capability is used the complete batch sequence has to be buffered before starting to send data to fast-import to prevent mixing of commands and fast-import responses on the helper&amp;rsquo;s stdin.</source>
          <target state="translated">Обратите внимание, что если используется возможность &lt;code&gt;bidi-import&lt;/code&gt; перед отправкой данных в быстрый импорт необходимо буферизовать полную последовательность пакетов, чтобы предотвратить смешивание команд и ответов быстрого импорта на вспомогательном вводе.</target>
        </trans-unit>
        <trans-unit id="b689c65aa31e82a2dbc37c89c0ac3187b41716e6" translate="yes" xml:space="preserve">
          <source>Note that if the current branch head was your only reference to a particular point in history, then resetting that branch may leave you with no way to find the history it used to point to; so use this command carefully.</source>
          <target state="translated">Обратите внимание,что если текущий заголовок ответвления был вашей единственной ссылкой на определённую точку в истории,то сброс этого заголовка может не оставить вам возможности найти историю,на которую он указывал;поэтому используйте эту команду внимательно.</target>
        </trans-unit>
        <trans-unit id="e6c226fbc041b7aed3f8d988d110ae660c99fecc" translate="yes" xml:space="preserve">
          <source>Note that if the number of kept packs is more than gc.autoPackLimit, this configuration variable is ignored, all packs except the base pack will be repacked. After this the number of packs should go below gc.autoPackLimit and gc.bigPackThreshold should be respected again.</source>
          <target state="translated">Обратите внимание,что если количество хранимых пакетов больше,чем gc.autoPackLimit,эта конфигурационная переменная игнорируется,все пакеты,кроме базового,будут переупаковываться.После этого количество пакетов должно опуститься ниже gc.autoPackLimit,а gc.bigPackThreshold снова должен соблюдаться.</target>
        </trans-unit>
        <trans-unit id="876a2eaaf30082c69c38a89b274fd268226ca0ba" translate="yes" xml:space="preserve">
          <source>Note that if you also want to skip the first commit of the range you would issue the command:</source>
          <target state="translated">Обратите внимание,что если вы также хотите пропустить первый коммит диапазона,вы должны выпустить команду:</target>
        </trans-unit>
        <trans-unit id="102fd7adeeb68915f128c7eebf4ae04f1c363d22" translate="yes" xml:space="preserve">
          <source>Note that in general, Alice would want her local changes committed before initiating this &quot;pull&quot;. If Bob&amp;rsquo;s work conflicts with what Alice did since their histories forked, Alice will use her working tree and the index to resolve conflicts, and existing local changes will interfere with the conflict resolution process (Git will still perform the fetch but will refuse to merge --- Alice will have to get rid of her local changes in some way and pull again when this happens).</source>
          <target state="translated">Обратите внимание, что в целом Алиса хотела бы, чтобы ее локальные изменения были зафиксированы до начала этого &amp;laquo;извлечения&amp;raquo;. Если работа Боба противоречит тому, что делала Алиса с момента разветвления их историй, Алиса будет использовать свое рабочее дерево и индекс для разрешения конфликтов, а существующие локальные изменения будут мешать процессу разрешения конфликтов (Git по-прежнему будет выполнять выборку, но откажется от слияния - - Алисе придется как-то избавиться от своих локальных изменений и вытащить снова, когда это произойдет).</target>
        </trans-unit>
        <trans-unit id="51fccf4fe2d201a349cf25a2b82190079f387e94" translate="yes" xml:space="preserve">
          <source>Note that in older documentation you may see the index called the &quot;current directory cache&quot; or just the &quot;cache&quot;. It has three important properties:</source>
          <target state="translated">Обратите внимание,что в старой документации вы можете увидеть индекс,называемый &quot;кэш текущего каталога&quot; или просто &quot;кэш&quot;.Он имеет три важных свойства:</target>
        </trans-unit>
        <trans-unit id="33bb6a06b88e89af07ea98fc22445ba64a91b75d" translate="yes" xml:space="preserve">
          <source>Note that in this file, the exception for &lt;code&gt;core.bare&lt;/code&gt; and &lt;code&gt;core.worktree&lt;/code&gt; is gone. If you have them in $GIT_DIR/config before, you must move them to the &lt;code&gt;config.worktree&lt;/code&gt; of the main working tree. You may also take this opportunity to review and move other configuration that you do not want to share to all working trees:</source>
          <target state="translated">Обратите внимание, что в этом файле &lt;code&gt;core.bare&lt;/code&gt; исключение для core.bare и &lt;code&gt;core.worktree&lt;/code&gt; . Если они у вас есть в $ GIT_DIR / config раньше, вы должны переместить их в &lt;code&gt;config.worktree&lt;/code&gt; основного рабочего дерева. Вы также можете воспользоваться этой возможностью, чтобы просмотреть и переместить другую конфигурацию, которую вы не хотите передавать всем рабочим деревьям:</target>
        </trans-unit>
        <trans-unit id="f62684e2b0c86eaa1fac93a58127ba986d09144a" translate="yes" xml:space="preserve">
          <source>Note that it is currently &lt;strong&gt;always&lt;/strong&gt; an array reference, even if feature doesn&amp;rsquo;t accept any configuration parameters, and 'default' is used only to turn it on or off. In such case you turn feature on by setting this element to &lt;code&gt;[1]&lt;/code&gt;, and torn it off by setting it to &lt;code&gt;[0]&lt;/code&gt;. See also the passage about the &quot;blame&quot; feature in the &quot;Examples&quot; section.</source>
          <target state="translated">Обратите внимание, что в настоящее время это &lt;strong&gt;всегда&lt;/strong&gt; ссылка на массив, даже если функция не принимает никаких параметров конфигурации, а &amp;laquo;по умолчанию&amp;raquo; используется только для ее включения или выключения. В таком случае вы включаете функцию, задав для этого элемента значение &lt;code&gt;[1]&lt;/code&gt; , и отключаете его, задав для него значение &lt;code&gt;[0]&lt;/code&gt; . См. Также отрывок о функции &amp;laquo;обвинения&amp;raquo; в разделе &amp;laquo;Примеры&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c6d71837c5b2acf93d8b7a746fdb13a8f313316a" translate="yes" xml:space="preserve">
          <source>Note that it is possible for refname to not have sha1-new when this hook runs. This can easily occur if another user modifies the ref after it was updated by &lt;code&gt;git-receive-pack&lt;/code&gt;, but before the hook was able to evaluate it. It is recommended that hooks rely on sha1-new rather than the current value of refname.</source>
          <target state="translated">Обратите внимание, что для refname может не быть sha1-new при запуске этой ловушки. Это может легко произойти, если другой пользователь изменит ссылку после ее обновления с помощью &lt;code&gt;git-receive-pack&lt;/code&gt; , но до того, как ловушка сможет ее оценить. Рекомендуется, чтобы хуки полагались на sha1-new, а не на текущее значение refname.</target>
        </trans-unit>
        <trans-unit id="288f25c901caafda3b52f9e96d7bc31178f41bbc" translate="yes" xml:space="preserve">
          <source>Note that merge commits may have more than one parent:</source>
          <target state="translated">Обратите внимание,что коммиты слияния могут иметь более одного родителя:</target>
        </trans-unit>
        <trans-unit id="b4bd4c01bcc139c9e086b4c697c46e8ed5645dbb" translate="yes" xml:space="preserve">
          <source>Note that namespaces which include a &lt;code&gt;/&lt;/code&gt; will expand to a hierarchy of namespaces; for example, &lt;code&gt;GIT_NAMESPACE=foo/bar&lt;/code&gt; will store refs under &lt;code&gt;refs/namespaces/foo/refs/namespaces/bar/&lt;/code&gt;. This makes paths in &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; behave hierarchically, so that cloning with &lt;code&gt;GIT_NAMESPACE=foo/bar&lt;/code&gt; produces the same result as cloning with &lt;code&gt;GIT_NAMESPACE=foo&lt;/code&gt; and cloning from that repo with &lt;code&gt;GIT_NAMESPACE=bar&lt;/code&gt;. It also avoids ambiguity with strange namespace paths such as &lt;code&gt;foo/refs/heads/&lt;/code&gt;, which could otherwise generate directory/file conflicts within the &lt;code&gt;refs&lt;/code&gt; directory.</source>
          <target state="translated">Обратите внимание, что пространства имен, которые включают &lt;code&gt;/&lt;/code&gt; , будут расширяться до иерархии пространств имен; например, &lt;code&gt;GIT_NAMESPACE=foo/bar&lt;/code&gt; будет хранить ссылки в &lt;code&gt;refs/namespaces/foo/refs/namespaces/bar/&lt;/code&gt; . Это заставляет пути в &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; вести себя иерархически, так что клонирование с &lt;code&gt;GIT_NAMESPACE=foo/bar&lt;/code&gt; дает тот же результат, что и клонирование с &lt;code&gt;GIT_NAMESPACE=foo&lt;/code&gt; и клонирование из этого репо с &lt;code&gt;GIT_NAMESPACE=bar&lt;/code&gt; . Это также позволяет избежать двусмысленности со странными путями пространства имен, такими как &lt;code&gt;foo/refs/heads/&lt;/code&gt; , которые в противном случае могли бы вызвать конфликты каталогов / файлов в каталоге &lt;code&gt;refs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5960cd2f6a18c56540790aa3e8525ad5bfd7623b" translate="yes" xml:space="preserve">
          <source>Note that no attempts whatsoever are made to validate the encoding.</source>
          <target state="translated">Обратите внимание,что для проверки кодировки не предпринимается никаких попыток.</target>
        </trans-unit>
        <trans-unit id="a90bb6c9021795be1cb1c05d155b4badc4462ac4" translate="yes" xml:space="preserve">
          <source>Note that not all diffs can feature all types. For instance, diffs from the index to the working tree can never have Added entries (because the set of paths included in the diff is limited by what is in the index). Similarly, copied and renamed entries cannot appear if detection for those types is disabled.</source>
          <target state="translated">Обратите внимание,что не все различия могут иметь все типы.Например,для отличий от индекса к рабочему дереву никогда не могут быть добавлены записи (так как набор путей,включенных в отличительный признак,ограничен тем,что находится в индексе).Аналогично,скопированные и переименованные записи не могут появиться,если для этих типов отключено обнаружение.</target>
        </trans-unit>
        <trans-unit id="b214bd38041e6a3ecd59f0a8d74547fecd3e66a2" translate="yes" xml:space="preserve">
          <source>Note that omitting the &lt;code&gt;=&lt;/code&gt; in &lt;code&gt;git -c foo.bar ...&lt;/code&gt; is allowed and sets &lt;code&gt;foo.bar&lt;/code&gt; to the boolean true value (just like &lt;code&gt;[foo]bar&lt;/code&gt; would in a config file). Including the equals but with an empty value (like &lt;code&gt;git -c
foo.bar= ...&lt;/code&gt;) sets &lt;code&gt;foo.bar&lt;/code&gt; to the empty string which &lt;code&gt;git config
--type=bool&lt;/code&gt; will convert to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что опускание &lt;code&gt;=&lt;/code&gt; в &lt;code&gt;git -c foo.bar ...&lt;/code&gt; разрешено и устанавливает для &lt;code&gt;foo.bar&lt;/code&gt; логическое истинное значение (точно так же, как &lt;code&gt;[foo]bar&lt;/code&gt; в файле конфигурации). Включение равенства, но с пустым значением (например, &lt;code&gt;git -c foo.bar= ...&lt;/code&gt; ) устанавливает &lt;code&gt;foo.bar&lt;/code&gt; в пустую строку, которую &lt;code&gt;git config --type=bool&lt;/code&gt; преобразует в &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d893e89ed900e1f0840df95a39350717d32e84c" translate="yes" xml:space="preserve">
          <source>Note that per repository configuration can be set in &lt;code&gt;$GIT_DIR/cloneurl&lt;/code&gt; file, or as values of multi-value &lt;code&gt;gitweb.url&lt;/code&gt; configuration variable in project config. Per-repository configuration takes precedence over value composed from &lt;code&gt;@git_base_url_list&lt;/code&gt; elements and project name.</source>
          <target state="translated">Обратите внимание, что конфигурация репозитория может быть установлена ​​в &lt;code&gt;$GIT_DIR/cloneurl&lt;/code&gt; или как значения &lt;code&gt;gitweb.url&lt;/code&gt; переменной конфигурации gitweb.url в конфигурации проекта. Конфигурация для &lt;code&gt;@git_base_url_list&lt;/code&gt; репозитория имеет приоритет над значением, составленным из элементов @git_base_url_list и имени проекта.</target>
        </trans-unit>
        <trans-unit id="fccadef8ff02c3c7b5e8091c077ff771f4d090ed" translate="yes" xml:space="preserve">
          <source>Note that rule 3 disallows many cases that do not have any privacy implications. These rules are subject to change in future versions of git, and the server accessed by &lt;code&gt;git archive --remote&lt;/code&gt; may or may not follow these exact rules.</source>
          <target state="translated">Обратите внимание, что правило 3 запрещает многие случаи, которые не влияют на конфиденциальность. Эти правила могут быть изменены в будущих версиях git, и сервер, к которому обращается &lt;code&gt;git archive --remote&lt;/code&gt; , может или не может следовать этим точным правилам.</target>
        </trans-unit>
        <trans-unit id="6b2cd45b5672bcfb50850c37a2d3873eae0b00dc" translate="yes" xml:space="preserve">
          <source>Note that running &lt;code&gt;git repack&lt;/code&gt; without the &lt;code&gt;--local&lt;/code&gt; option in a repository cloned with &lt;code&gt;--shared&lt;/code&gt; will copy objects from the source repository into a pack in the cloned repository, removing the disk space savings of &lt;code&gt;clone --shared&lt;/code&gt;. It is safe, however, to run &lt;code&gt;git gc&lt;/code&gt;, which uses the &lt;code&gt;--local&lt;/code&gt; option by default.</source>
          <target state="translated">Обратите внимание, что запуск &lt;code&gt;git repack&lt;/code&gt; без параметра &lt;code&gt;--local&lt;/code&gt; в репозитории, клонированном с помощью &lt;code&gt;--shared&lt;/code&gt; , будет копировать объекты из исходного репозитория в пакет в клонированном репозитории, удаляя экономию дискового пространства при использовании &lt;code&gt;clone --shared&lt;/code&gt; . Однако безопасно запускать &lt;code&gt;git gc&lt;/code&gt; , который по умолчанию использует параметр &lt;code&gt;--local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="140dadc93eb0ab3b9abb37d56f2b3ec8284a753b" translate="yes" xml:space="preserve">
          <source>Note that since this operation is very I/O expensive, it might be a good idea to redirect the temporary directory off-disk with the &lt;code&gt;-d&lt;/code&gt; option, e.g. on tmpfs. Reportedly the speedup is very noticeable.</source>
          <target state="translated">Обратите внимание: поскольку эта операция требует больших затрат на ввод-вывод, было бы неплохо перенаправить временный каталог за пределы диска с помощью опции &lt;code&gt;-d&lt;/code&gt; , например, в tmpfs. Как сообщается, ускорение очень заметно.</target>
        </trans-unit>
        <trans-unit id="406b2d499d377ca290ed5b4924c72cd2cd51a43f" translate="yes" xml:space="preserve">
          <source>Note that some configuration can be controlled on per-repository rather than gitweb-wide basis: see &quot;Per-repository gitweb configuration&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">Обратите внимание, что некоторая конфигурация может контролироваться для каждого репозитория, а не для всего gitweb: см. Подраздел &amp;laquo;Конфигурация gitweb для каждого репозитория&amp;raquo; на &lt;a href=&quot;gitweb&quot;&gt;странице руководства gitweb [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d8f5c59efaf04f91fb17771a5f9956f75377d81" translate="yes" xml:space="preserve">
          <source>Note that terminology has changed since that revision. For example, the README in that revision uses the word &quot;changeset&quot; to describe what we now call a &lt;a href=&quot;#def_commit_object&quot;&gt;commit&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что после этой редакции терминология изменилась. Например, README в этой версии использует слово &amp;laquo;набор изменений&amp;raquo; для описания того, что мы теперь называем &lt;a href=&quot;#def_commit_object&quot;&gt;фиксацией&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1162a2144d0b881d5670bbd9b0805334b2b73beb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;t_rel&lt;/code&gt; field contains the observed run time in seconds for the child process (starting before the fork/exec/spawn and stopping after the waitpid() and includes OS process creation overhead). So this time will be slightly larger than the atexit time reported by the child process itself.</source>
          <target state="translated">Обратите внимание, что поле &lt;code&gt;t_rel&lt;/code&gt; содержит наблюдаемое время выполнения в секундах для дочернего процесса (запускается перед fork / exec / spawn и останавливается после waitpid () и включает накладные расходы на создание процесса ОС). Таким образом, это время будет немного больше, чем время atexit, сообщаемое самим дочерним процессом.</target>
        </trans-unit>
        <trans-unit id="b7757b33b688da6e41f6e15271bd961d7647767a" translate="yes" xml:space="preserve">
          <source>Note that the SVN URL of the commiturl config key includes the SVN branch. If you rather want to set the commit URL for an entire SVN repository use svn-remote.&amp;lt;name&amp;gt;.pushurl instead.</source>
          <target state="translated">Обратите внимание, что URL-адрес SVN ключа конфигурации commiturl включает ветвь SVN. Если вы предпочитаете установить URL-адрес фиксации для всего репозитория SVN, используйте вместо этого svn-remote. &amp;lt;name&amp;gt; .pushurl.</target>
        </trans-unit>
        <trans-unit id="cb5d63c2ce1d70a7eb8e0b6357957166a5a229f7" translate="yes" xml:space="preserve">
          <source>Note that the asterisk &lt;code&gt;*&lt;/code&gt; is quoted from the shell in this example; this lets Git, and not the shell, expand the pathnames of files and subdirectories under the &lt;code&gt;Documentation/&lt;/code&gt; directory.</source>
          <target state="translated">Обратите внимание, что в этом примере звездочка &lt;code&gt;*&lt;/code&gt; цитируется в оболочке; это позволяет Git, а не оболочке, расширять пути к файлам и подкаталогам в каталоге &lt;code&gt;Documentation/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce32bdb056375627c69f9422ed26926b9107752d" translate="yes" xml:space="preserve">
          <source>Note that the asterisk &lt;code&gt;*&lt;/code&gt; is quoted from the shell in this example; this lets the command include the files from subdirectories of &lt;code&gt;Documentation/&lt;/code&gt; directory.</source>
          <target state="translated">Обратите внимание, что в этом примере звездочка &lt;code&gt;*&lt;/code&gt; цитируется в оболочке; это позволяет команде включать файлы из подкаталогов каталога &lt;code&gt;Documentation/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8938c6c44864ae040ef79f140140b8a3da4caab5" translate="yes" xml:space="preserve">
          <source>Note that the commit message will already be filled in for you with some information about the merge. Normally you can just use this default message unchanged, but you may add additional commentary of your own if desired.</source>
          <target state="translated">Обратите внимание,что сообщение о фиксации уже будет заполнено для вас некоторой информацией о слиянии.Обычно вы можете просто использовать это сообщение по умолчанию без изменений,но при желании вы можете добавить дополнительные комментарии.</target>
        </trans-unit>
        <trans-unit id="131272668a67eaa5ac9294087a9ff4488c82c210" translate="yes" xml:space="preserve">
          <source>Note that the example that we will use is really a toy example, we will be looking for the first commit that has a version like &quot;2.6.26-something&quot;, that is the commit that has a &quot;SUBLEVEL = 26&quot; line in the top level Makefile. This is a toy example because there are better ways to find this commit with Git than using &quot;git bisect&quot; (for example &quot;git blame&quot; or &quot;git log -S&amp;lt;string&amp;gt;&quot;).</source>
          <target state="translated">Обратите внимание, что пример, который мы будем использовать, на самом деле является игрушечным. Мы будем искать первую фиксацию, имеющую версию вроде &amp;laquo;2.6.26-something&amp;raquo;, то есть фиксацию со строкой &amp;laquo;SUBLEVEL = 26&amp;raquo; в Makefile верхнего уровня. Это игрушечный пример, потому что есть более эффективные способы найти эту фиксацию с помощью Git, чем использование &amp;laquo;git bisect&amp;raquo; (например, &amp;laquo;git blame&amp;raquo; или &amp;laquo;git log -S &amp;lt;string&amp;gt;&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="5e386156a3e0996458a30d74f4a22474e7420343" translate="yes" xml:space="preserve">
          <source>Note that the files all have mode 644 or 755: Git actually only pays attention to the executable bit.</source>
          <target state="translated">Обратите внимание,что все файлы имеют режим 644 или 755:Git фактически обращает внимание только на исполняемый бит.</target>
        </trans-unit>
        <trans-unit id="d2e57a867612d1ae307185458bab810ae89e20a5" translate="yes" xml:space="preserve">
          <source>Note that the first word of an alias does not necessarily have to be a command. It can be a command-line option that will be passed into the invocation of &lt;code&gt;git&lt;/code&gt;. In particular, this is useful when used with &lt;code&gt;-c&lt;/code&gt; to pass in one-time configurations or &lt;code&gt;-p&lt;/code&gt; to force pagination. For example, &lt;code&gt;loud-rebase = -c commit.verbose=true rebase&lt;/code&gt; can be defined such that running &lt;code&gt;git loud-rebase&lt;/code&gt; would be equivalent to &lt;code&gt;git -c commit.verbose=true rebase&lt;/code&gt;. Also, &lt;code&gt;ps = -p status&lt;/code&gt; would be a helpful alias since &lt;code&gt;git ps&lt;/code&gt; would paginate the output of &lt;code&gt;git status&lt;/code&gt; where the original command does not.</source>
          <target state="translated">Обратите внимание, что первое слово псевдонима не обязательно должно быть командой. Это может быть параметр командной строки, который будет передан при вызове &lt;code&gt;git&lt;/code&gt; . В частности, это полезно при использовании с &lt;code&gt;-c&lt;/code&gt; для передачи одноразовых конфигураций или &lt;code&gt;-p&lt;/code&gt; для принудительной разбивки на страницы. Например, &lt;code&gt;loud-rebase = -c commit.verbose=true rebase&lt;/code&gt; может быть определена таким образом, что запуск &lt;code&gt;git loud-rebase&lt;/code&gt; было бы эквивалентно &lt;code&gt;git -c commit.verbose=true rebase&lt;/code&gt; . Кроме того, &lt;code&gt;ps = -p status&lt;/code&gt; может быть полезным псевдонимом, поскольку &lt;code&gt;git ps&lt;/code&gt; будет разбивать на страницы вывод &lt;code&gt;git status&lt;/code&gt; , где исходная команда этого не делает.</target>
        </trans-unit>
        <trans-unit id="650b87912cfe39dc5747fbba67473a3822f86ab9" translate="yes" xml:space="preserve">
          <source>Note that the form &lt;code&gt;--filter=sparse:path=&amp;lt;path&amp;gt;&lt;/code&gt; that wants to read from an arbitrary path on the filesystem has been dropped for security reasons.</source>
          <target state="translated">Обратите внимание, что форма &lt;code&gt;--filter=sparse:path=&amp;lt;path&amp;gt;&lt;/code&gt; , которая хочет читать с произвольного пути в файловой системе, была удалена из соображений безопасности.</target>
        </trans-unit>
        <trans-unit id="d8075e043d9a3ca9826ff1989c66c1905d9648ca" translate="yes" xml:space="preserve">
          <source>Note that the grafts mechanism is outdated and can lead to problems transferring objects between repositories; see &lt;a href=&quot;git-replace&quot;&gt;git-replace[1]&lt;/a&gt; for a more flexible and robust system to do the same thing.</source>
          <target state="translated">Обратите внимание, что механизм пересадки устарел и может привести к проблемам при переносе объектов между репозиториями; см. &lt;a href=&quot;git-replace&quot;&gt;git-replace [1],&lt;/a&gt; чтобы узнать о более гибкой и надежной системе, делающей то же самое.</target>
        </trans-unit>
        <trans-unit id="0b0bdd8828d416a94597b15ce8aefc2c0b976fde" translate="yes" xml:space="preserve">
          <source>Note that the last point clashes with the other two: a topic that has been merged elsewhere should not be rebased. See the section on RECOVERING FROM UPSTREAM REBASE in &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что последний пункт конфликтует с двумя другими: тема, которая была объединена в другом месте, не должна быть перебазирована. См. Раздел ВОССТАНОВЛЕНИЕ ИЗ UPSTREAM REBASE в &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd4901c4d1f08f37f3106399dbc26a76568f48fe" translate="yes" xml:space="preserve">
          <source>Note that the leading character does not have to be a dot; for example, you can use &lt;code&gt;--suffix=-patch&lt;/code&gt; to get &lt;code&gt;0001-description-of-my-change-patch&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что ведущий символ не обязательно должен быть точкой; например, вы можете использовать &lt;code&gt;--suffix=-patch&lt;/code&gt; , чтобы получить &lt;code&gt;0001-description-of-my-change-patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="833f1e85ef857dfcde43c87fdacaaa1075b0d6b3" translate="yes" xml:space="preserve">
          <source>Note that the maintainer(s) may impose restrictions, such as &quot;Signed-off-by&quot; requirements, that all commits/patches submitted for inclusion must adhere to. Consult your project&amp;rsquo;s documentation for more information.</source>
          <target state="translated">Обратите внимание, что сопровождающий может наложить ограничения, такие как требования &amp;laquo;Подписано&amp;raquo;, которым должны соответствовать все коммиты / исправления, представленные для включения. Обратитесь к документации вашего проекта для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="50f092ab1e91fa0de2c9ed05785c4a967888dc6a" translate="yes" xml:space="preserve">
          <source>Note that the name &quot;origin&quot; is just the name that Git uses by default to refer to the repository that you cloned from.</source>
          <target state="translated">Обратите внимание,что имя &quot;origin&quot; (происхождение)-это просто имя,которое Git использует по умолчанию для ссылки на репозиторий,из которого вы клонировали.</target>
        </trans-unit>
        <trans-unit id="22728656f144a546aef50a70cd21a26fce3a8c1d" translate="yes" xml:space="preserve">
          <source>Note that the patch is always used as-is without charset conversion, even with this flag.</source>
          <target state="translated">Обратите внимание,что патч всегда используется as-is без преобразования кодовых таблиц,даже с этим флагом.</target>
        </trans-unit>
        <trans-unit id="9bea9d7e3f1393135579965b1439ff9a7baaf238" translate="yes" xml:space="preserve">
          <source>Note that the push URL and the fetch URL, even though they can be set differently, must still refer to the same place. What you pushed to the push URL should be what you would see if you immediately fetched from the fetch URL. If you are trying to fetch from one place (e.g. your upstream) and push to another (e.g. your publishing repository), use two separate remotes.</source>
          <target state="translated">Обратите внимание,что URL-адрес нажатия и URL-адрес извлечения,даже если они могут быть установлены по-другому,все равно должны относиться к одному и тому же месту.То,что вы нажимаете на URL,должно быть тем,что вы увидите,если сразу же получите URL.Если вы пытаетесь получить URL из одного места (например,из вашего восходящего потока)и переместить его в другое (например,из репозитория вашей публикации),используйте два отдельных пульта дистанционного управления.</target>
        </trans-unit>
        <trans-unit id="f8efe69c6940942131795b6ce6c48d7e64d9560b" translate="yes" xml:space="preserve">
          <source>Note that the reflog history is very different from normal Git history. While normal history is shared by every repository that works on the same project, the reflog history is not shared: it tells you only about how the branches in your local repository have changed over time.</source>
          <target state="translated">Обратите внимание,что история рефлогов сильно отличается от обычной истории Git'а.В то время как обычная история разделяется каждым репозиторием,который работает над одним и тем же проектом,история рефлога не разделяется:она рассказывает только о том,как изменялись ветки в локальном репозитории с течением времени.</target>
        </trans-unit>
        <trans-unit id="9a9c3b4049e20efd5a28033d7014008a8c2ac264" translate="yes" xml:space="preserve">
          <source>Note that the script (&lt;code&gt;my_script&lt;/code&gt; in the above example) should exit with code 0 if the current source code is good/old, and exit with a code between 1 and 127 (inclusive), except 125, if the current source code is bad/new.</source>
          <target state="translated">Обратите внимание, что сценарий ( &lt;code&gt;my_script&lt;/code&gt; в приведенном выше примере) должен завершиться с кодом 0, если текущий исходный код хороший / старый, и выйти с кодом от 1 до 127 (включительно), кроме 125, если текущий исходный код плохой / новый.</target>
        </trans-unit>
        <trans-unit id="5586aefc0f8bd69c9dcf3cf3294d72d0db17f0fc" translate="yes" xml:space="preserve">
          <source>Note that the second point is true even across machines. You can duplicate a remote Git repository with &lt;strong&gt;any&lt;/strong&gt; regular copy mechanism, be it &lt;code&gt;scp&lt;/code&gt;, &lt;code&gt;rsync&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что второй пункт верен даже для компьютеров. Вы можете дублировать удаленный репозиторий Git с помощью &lt;strong&gt;любого&lt;/strong&gt; обычного механизма копирования, будь то &lt;code&gt;scp&lt;/code&gt; , &lt;code&gt;rsync&lt;/code&gt; или &lt;code&gt;wget&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e6bb5468c99a3a334f80fab3dbb52fc16223c6" translate="yes" xml:space="preserve">
          <source>Note that the session-id of the child process is not available to the current/spawning process, so the child&amp;rsquo;s PID is reported here as a hint for post-processing. (But it is only a hint because the child process may be a shell script which doesn&amp;rsquo;t have a session-id.)</source>
          <target state="translated">Обратите внимание, что идентификатор сеанса дочернего процесса недоступен для текущего / порождающего процесса, поэтому PID дочернего процесса указывается здесь как подсказка для постобработки. (Но это только подсказка, потому что дочерний процесс может быть сценарием оболочки, у которого нет идентификатора сеанса.)</target>
        </trans-unit>
        <trans-unit id="e98f559f39ce7645bbbb14c50cc4f9c4dc239749" translate="yes" xml:space="preserve">
          <source>Note that the sizes of objects on disk are reported accurately, but care should be taken in drawing conclusions about which refs or objects are responsible for disk usage. The size of a packed non-delta object may be much larger than the size of objects which delta against it, but the choice of which object is the base and which is the delta is arbitrary and is subject to change during a repack.</source>
          <target state="translated">Обратите внимание,что размеры объектов на диске сообщаются точно,но следует позаботиться о том,чтобы сделать выводы о том,какие ссылки или объекты отвечают за использование диска.Размер упакованного не дельта-объекта может быть значительно больше,чем размер объектов,дельта которых против него,но выбор того,какой объект является базовым,а какой-дельтой,является произвольным и может изменяться при переупаковке.</target>
        </trans-unit>
        <trans-unit id="47fc7cad6a527b522ab5e266e3e278a07a579735" translate="yes" xml:space="preserve">
          <source>Note that the suffix you get if you type these commands today may be longer than what Linus saw above when he ran these commands, as your Git repository may have new commits whose object names begin with 975b that did not exist back then, and &quot;-g975b&quot; suffix alone may not be sufficient to disambiguate these commits.</source>
          <target state="translated">Обратите внимание,что суффикс,который вы получите,если наберете эти команды сегодня,может быть длиннее,чем Линус видел выше,когда запускал эти команды,поскольку в вашем Git-репозитории могут быть новые коммиты,имена объектов которых начинаются с 975b,не существовавших в то время,а одного суффикса &quot;-g975b&quot; может быть недостаточно для дезактивирования этих коммитов.</target>
        </trans-unit>
        <trans-unit id="7eeba5803dc504042af48f9504a175baa6f39016" translate="yes" xml:space="preserve">
          <source>Note that the target of a &lt;code&gt;push&lt;/code&gt; is normally a &lt;a href=&quot;#def_bare_repository&quot;&gt;bare&lt;/a&gt; repository. You can also push to a repository that has a checked-out working tree, but a push to update the currently checked-out branch is denied by default to prevent confusion. See the description of the receive.denyCurrentBranch option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">Обратите внимание, что целью &lt;code&gt;push&lt;/code&gt; обычно является &lt;a href=&quot;#def_bare_repository&quot;&gt;пустой&lt;/a&gt; репозиторий. Вы также можете отправить в репозиторий, в котором есть извлеченное рабочее дерево, но принудительное обновление текущей извлеченной ветви запрещено по умолчанию, чтобы избежать путаницы. Подробнее см. Описание параметра receive.denyCurrentBranch в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="110e365a18d2e41e53b11ff50c7bbd9d01eae2f0" translate="yes" xml:space="preserve">
          <source>Note that the two techniques outlined above (exporting via &lt;a href=&quot;#exporting-via-http&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;#exporting-via-git&quot;&gt;git&lt;/a&gt;) allow other maintainers to fetch your latest changes, but they do not allow write access, which you will need to update the public repository with the latest changes created in your private repository.</source>
          <target state="translated">Обратите внимание, что два описанных выше метода (экспорт через &lt;a href=&quot;#exporting-via-http&quot;&gt;http&lt;/a&gt; или &lt;a href=&quot;#exporting-via-git&quot;&gt;git&lt;/a&gt; ) позволяют другим разработчикам получать ваши последние изменения, но они не разрешают доступ на запись, что вам необходимо для обновления общедоступного репозитория с последними изменениями, созданными в вашем частном репозитории.</target>
        </trans-unit>
        <trans-unit id="ae8ea7d3546a16ede3faa6039563fb0d737e4467" translate="yes" xml:space="preserve">
          <source>Note that the version which &lt;code&gt;git bisect&lt;/code&gt; checks out for you at each point is just a suggestion, and you&amp;rsquo;re free to try a different version if you think it would be a good idea. For example, occasionally you may land on a commit that broke something unrelated; run</source>
          <target state="translated">Обратите внимание, что версия, которую &lt;code&gt;git bisect&lt;/code&gt; проверяет для вас на каждом этапе, является просто предложением, и вы можете попробовать другую версию, если считаете, что это будет хорошей идеей. Например, иногда вы можете попасть в коммит, который сломал что-то несвязанное; бегать</target>
        </trans-unit>
        <trans-unit id="1000c60b0f402f5d9e4c69088fd79818a06e5e98" translate="yes" xml:space="preserve">
          <source>Note that there are two ways to checkout a particular branch. As described elsewhere on this page, the &quot;module&quot; parameter of cvs checkout is interpreted as a branch name, and it becomes the main branch. It remains the main branch for a given sandbox even if you temporarily make another branch sticky with cvs update -r. Alternatively, the -r argument can indicate some other branch to actually checkout, even though the module is still the &quot;main&quot; branch. Tradeoffs (as currently implemented): Each new &quot;module&quot; creates a new database on disk with a history for the given module, and after the database is created, operations against that main branch are fast. Or alternatively, -r doesn&amp;rsquo;t take any extra disk space, but may be significantly slower for many operations, like cvs update.</source>
          <target state="translated">Обратите внимание, что есть два способа проверить конкретную ветку. Как описано в другом месте на этой странице, параметр &quot;модуль&quot; cvs checkout интерпретируется как имя ветки, и он становится главной ветвью. Она остается основной веткой для данной песочницы, даже если вы временно закрепите другую ветку с помощью cvs update -r. В качестве альтернативы аргумент -r может указывать на какую-то другую ветвь для фактической проверки, даже если модуль все еще является &amp;laquo;основной&amp;raquo; ветвью. Компромиссы (как сейчас реализовано): каждый новый &amp;laquo;модуль&amp;raquo; создает новую базу данных на диске с историей для данного модуля, и после создания базы данных операции с этой основной ветвью выполняются быстро. Или же -r не занимает лишнего дискового пространства, но может быть значительно медленнее для многих операций, таких как обновление cvs.</target>
        </trans-unit>
        <trans-unit id="4fe39a3f8a6c98b987fad41f0865478fee4d146d" translate="yes" xml:space="preserve">
          <source>Note that these are applied before commit ordering and formatting options, such as &lt;code&gt;--reverse&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что они применяются перед параметрами упорядочивания и форматирования фиксации, такими как &lt;code&gt;--reverse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccb8cdc33c08512e4436bbf3b8db5bc9921ae58d" translate="yes" xml:space="preserve">
          <source>Note that this affects all diff-based output types, e.g. those produced by &lt;code&gt;--stat&lt;/code&gt;, etc.</source>
          <target state="translated">Обратите внимание, что это влияет на все типы вывода, основанные на &lt;code&gt;--stat&lt;/code&gt; , например, созданные с помощью --stat и т. Д.</target>
        </trans-unit>
        <trans-unit id="0691624d8498eccd40578875388b7f8bab2a7b6c" translate="yes" xml:space="preserve">
          <source>Note that this applies only to accessing the repository&amp;rsquo;s disk contents directly. An older client which understands only format &lt;code&gt;0&lt;/code&gt; may still connect via &lt;code&gt;git://&lt;/code&gt; to a repository using format &lt;code&gt;1&lt;/code&gt;, as long as the server process understands format &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что это относится только к прямому доступу к содержимому диска репозитория. Более старый клиент, который понимает только формат &lt;code&gt;0&lt;/code&gt; , может по-прежнему подключаться через &lt;code&gt;git://&lt;/code&gt; к репозиторию с использованием формата &lt;code&gt;1&lt;/code&gt; , если серверный процесс понимает формат &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3528bf60e5e55bcec2b34b4efbb66a2e2ad0ca9" translate="yes" xml:space="preserve">
          <source>Note that this assumes that none of the blobs and commit messages referenced by that revision range contains the string &lt;code&gt;refs/heads/master&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что это предполагает, что ни один из BLOB-объектов и сообщений фиксации, на которые ссылается этот диапазон ревизий, не содержит строку &lt;code&gt;refs/heads/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2c1b09dd03782a35574f4220ce1860b1a59abed" translate="yes" xml:space="preserve">
          <source>Note that this configuration variable is ignored if it is seen in the repository-level config (this is a safety measure against fetching from untrusted repositories).</source>
          <target state="translated">Обратите внимание,что данная конфигурационная переменная игнорируется,если она видна в конфигурации на уровне репозитория (это мера предосторожности от извлечения из недоверенных репозиториев).</target>
        </trans-unit>
        <trans-unit id="8243e24ce26ee48638bea5b267bba5916eee07a8" translate="yes" xml:space="preserve">
          <source>Note that this is currently only implemented for the client side of clones and fetches.</source>
          <target state="translated">Обратите внимание,что в настоящее время это реализовано только для клиентской стороны клонов и фетчеров.</target>
        </trans-unit>
        <trans-unit id="7278e2ca069b871494710e49f702957a299741e8" translate="yes" xml:space="preserve">
          <source>Note that this is the old file data; so the object that Git named in its response to the initial tree was a tree with a snapshot of the directory state that was recorded by the first commit.</source>
          <target state="translated">Обратите внимание,что это данные старого файла;таким образом,объект,названный Git'ом в своём ответе на исходное дерево,представлял собой дерево со снимком состояния каталога,который был записан первым коммитом.</target>
        </trans-unit>
        <trans-unit id="8524e2a4579b70a19e36821a3f8f1b43bac12c4a" translate="yes" xml:space="preserve">
          <source>Note that this list is non-comprehensive and not necessarily complete. For command-specific variables, you will find a more detailed description in the appropriate manual page.</source>
          <target state="translated">Обратите внимание,что этот список не является исчерпывающим и не обязательно полным.Более подробное описание переменных,специфичных для команд,вы найдете на соответствующей странице руководства.</target>
        </trans-unit>
        <trans-unit id="a06dd344c0e0f4252ac8d0d18c1815e7f413d617" translate="yes" xml:space="preserve">
          <source>Note that this may contain embedded LF or CRLF characters that are not escaped, so the event may spill across multiple lines.</source>
          <target state="translated">Обратите внимание,что он может содержать встроенные символы LF или CRLF,которые не экранируются,поэтому событие может пролиться на несколько строк.</target>
        </trans-unit>
        <trans-unit id="954610f540e4dda45ac67b28e742adb370b9dd1c" translate="yes" xml:space="preserve">
          <source>Note that this may mean that multiple Git commits are created for a single SVN revision.</source>
          <target state="translated">Обратите внимание,что это может означать,что для одной ревизии SVN создаётся несколько фиксаций в Git'е.</target>
        </trans-unit>
        <trans-unit id="69a24fcf6b082a94d6b3e16af2197fed496268e4" translate="yes" xml:space="preserve">
          <source>Note that this option is only useful if you are actually sending the emails and want to identify yourself as the sender, but retain the original author (and &lt;code&gt;git am&lt;/code&gt; will correctly pick up the in-body header). Note also that &lt;code&gt;git send-email&lt;/code&gt; already handles this transformation for you, and this option should not be used if you are feeding the result to &lt;code&gt;git send-email&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что этот параметр полезен только в том случае, если вы действительно отправляете электронные письма и хотите идентифицировать себя как отправителя, но сохраняете исходного автора (и &lt;code&gt;git am&lt;/code&gt; правильно подберет заголовок в теле). Также обратите внимание, что &lt;code&gt;git send-email&lt;/code&gt; уже выполняет это преобразование за вас, и этот параметр не следует использовать, если вы отправляете результат в &lt;code&gt;git send-email&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0a34c500aa8e9fdf22f16d59ae03a1a8711ff64" translate="yes" xml:space="preserve">
          <source>Note that this option uses the no overlay mode by default (see also &lt;code&gt;--overlay&lt;/code&gt;), and currently doesn&amp;rsquo;t support overlay mode.</source>
          <target state="translated">Обратите внимание, что этот параметр по умолчанию использует режим без наложения (см. Также &lt;code&gt;--overlay&lt;/code&gt; ) и в настоящее время не поддерживает режим наложения.</target>
        </trans-unit>
        <trans-unit id="e3aa2cd05420cf442d246cf6450d49e1768c842c" translate="yes" xml:space="preserve">
          <source>Note that this variable is honored even when set in a configuration file in a &quot;.git&quot; subdirectory of a directory and its value differs from the latter directory (e.g. &quot;/path/to/.git/config&quot; has core.worktree set to &quot;/different/path&quot;), which is most likely a misconfiguration. Running Git commands in the &quot;/path/to&quot; directory will still use &quot;/different/path&quot; as the root of the work tree and can cause confusion unless you know what you are doing (e.g. you are creating a read-only snapshot of the same index to a location different from the repository&amp;rsquo;s usual working tree).</source>
          <target state="translated">Обратите внимание, что эта переменная учитывается, даже если она установлена ​​в файле конфигурации в подкаталоге &amp;laquo;.git&amp;raquo; каталога, и ее значение отличается от последнего каталога (например, для &amp;laquo;/path/to/.git/config&amp;raquo; установлено значение core.worktree &quot;/ другой / путь&quot;), что, скорее всего, является неправильной конфигурацией. Запуск команд Git в каталоге &amp;laquo;/ path / to&amp;raquo; по-прежнему будет использовать &amp;laquo;/ different / path&amp;raquo; в качестве корня рабочего дерева и может вызвать путаницу, если вы не знаете, что делаете (например, вы создаете снимок состояния только для чтения тот же индекс в месте, отличном от обычного рабочего дерева репозитория).</target>
        </trans-unit>
        <trans-unit id="f66853802a66e4aff14a38d5843516f4164ff5ba" translate="yes" xml:space="preserve">
          <source>Note that this will create the new branch, but it will not switch the working tree to it; use &quot;git switch &amp;lt;newbranch&amp;gt;&quot; to switch to the new branch.</source>
          <target state="translated">Обратите внимание, что это создаст новую ветвь, но не переключит на нее рабочее дерево; используйте &quot;git switch &amp;lt;newbranch&amp;gt;&quot;, чтобы переключиться на новую ветку.</target>
        </trans-unit>
        <trans-unit id="48c8adea213e6ac01f80c59a6b72ca8bc5d0c4be" translate="yes" xml:space="preserve">
          <source>Note that unreachable, packed objects will remain. If this is not desired, see &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что недоступные упакованные объекты останутся. Если это нежелательно, см. &lt;a href=&quot;git-repack&quot;&gt;Git-repack [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9c873a19166627d45cbe06c1e92f0fc64675a0f" translate="yes" xml:space="preserve">
          <source>Note that users fetching over dumb protocols will have to fetch the whole new pack in order to get any contained object, no matter how many other objects in that pack they already have locally.</source>
          <target state="translated">Обратите внимание,что пользователи,получающие немые протоколы,должны будут получить весь новый пакет,чтобы получить любой содержащийся в нем объект,независимо от того,сколько других объектов в этом пакете у них уже есть локально.</target>
        </trans-unit>
        <trans-unit id="511b177ad0f4f309a1f22f8d5a0729bb57a27072" translate="yes" xml:space="preserve">
          <source>Note that we deliberately chose not to re-code the commit log message when a commit is made to force UTF-8 at the commit object level, because re-coding to UTF-8 is not necessarily a reversible operation.</source>
          <target state="translated">Обратите внимание,что мы сознательно решили не перекодировать сообщение журнала коммитов при коммите,чтобы заставить UTF-8 на уровне объекта коммита,потому что перекодирование в UTF-8 не обязательно является обратимой операцией.</target>
        </trans-unit>
        <trans-unit id="352feed71993cca2768c0de80ab4efdfef627645" translate="yes" xml:space="preserve">
          <source>Note that we pick a single island for each regex to go into, using &quot;last one wins&quot; ordering (which allows repo-specific config to take precedence over user-wide config, and so forth).</source>
          <target state="translated">Обратите внимание,что мы выбираем один остров для каждого регекса,используя порядок &quot;последний выигрывает&quot; (который позволяет репо-конфигурации иметь приоритет над конфигурацией в масштабе всего пользователя,и т.д.).</target>
        </trans-unit>
        <trans-unit id="0f413678af329d8b352f68927252d8a326f2b212" translate="yes" xml:space="preserve">
          <source>Note that when matching against a tree object, attributes are still obtained from working tree, not from the given tree object.</source>
          <target state="translated">Обратите внимание,что при совпадении с объектом дерева,атрибуты все равно получаются из рабочего дерева,а не из данного объекта дерева.</target>
        </trans-unit>
        <trans-unit id="6f16ff14e66ecdeaed0888755a04ec80e3903de7" translate="yes" xml:space="preserve">
          <source>Note that when providing a &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt;, you must use &lt;code&gt;--list&lt;/code&gt;; otherwise the command may be interpreted as branch creation.</source>
          <target state="translated">Обратите внимание, что при предоставлении &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; вы должны использовать &lt;code&gt;--list&lt;/code&gt; ; в противном случае команду можно интерпретировать как создание ветки.</target>
        </trans-unit>
        <trans-unit id="2e31fbecbd095ab339f753f545ee8ad3cdcfd7be" translate="yes" xml:space="preserve">
          <source>Note that when you&amp;rsquo;ve moved or copied a Git repository, your Git index file (which caches various information, notably some of the &quot;stat&quot; information for the files involved) will likely need to be refreshed. So after you do a &lt;code&gt;cp -a&lt;/code&gt; to create a new copy, you&amp;rsquo;ll want to do</source>
          <target state="translated">Обратите внимание, что когда вы переместили или скопировали репозиторий Git, ваш индексный файл Git (который кэширует различную информацию, в частности, некоторую &amp;laquo;статистическую&amp;raquo; информацию для задействованных файлов), вероятно, потребуется обновить. Итак, после того, как вы выполните &lt;code&gt;cp -a&lt;/code&gt; для создания новой копии, вы захотите сделать</target>
        </trans-unit>
        <trans-unit id="b6e7add23d70ae9c79a92003e95b0646493f7240" translate="yes" xml:space="preserve">
          <source>Note that without &lt;code&gt;--full-history&lt;/code&gt;, this still simplifies merges: if one of the parents is TREESAME, we follow only that one, so the other sides of the merge are never walked.</source>
          <target state="translated">Обратите внимание, что без &lt;code&gt;--full-history&lt;/code&gt; это все еще упрощает слияние: если один из родителей - TREESAME, мы следуем только за ним, поэтому другие стороны слияния никогда не проходят.</target>
        </trans-unit>
        <trans-unit id="26c6b6e45f05961054f9762544f517daa6e3a44f" translate="yes" xml:space="preserve">
          <source>Note that without parent rewriting, it is not really possible to talk about the parent/child relationships between the commits, so we show them disconnected.</source>
          <target state="translated">Обратите внимание,что без переписывания родителя невозможно говорить об отношениях родитель/ребенок между коммитами,поэтому мы показываем их отключёнными.</target>
        </trans-unit>
        <trans-unit id="40996350a13d178ee15ae3215e9ae292d6702c1c" translate="yes" xml:space="preserve">
          <source>Note that you can get more information on a packfile by calling &lt;a href=&quot;git-verify-pack&quot;&gt;git-verify-pack[1]&lt;/a&gt;. However, as this command considers only the index file itself, it&amp;rsquo;s both faster and more flexible.</source>
          <target state="translated">Обратите внимание, что вы можете получить больше информации о пак-файле, вызвав &lt;a href=&quot;git-verify-pack&quot;&gt;git-&lt;/a&gt; verify -pack [1] . Однако, поскольку эта команда учитывает только сам индексный файл, она быстрее и гибче.</target>
        </trans-unit>
        <trans-unit id="191247c1388c3f45dfe82bf6b2f0384fea86edc8" translate="yes" xml:space="preserve">
          <source>Note that you cannot generally put &lt;code&gt;git for-each-ref&lt;/code&gt; directly into the config value, as it does not take a repository path as an argument (but you can wrap the command above in a shell script).</source>
          <target state="translated">Обратите внимание, что вы не можете обычно помещать &lt;code&gt;git for-each-ref&lt;/code&gt; непосредственно в значение конфигурации, поскольку он не принимает в качестве аргумента путь к репозиторию (но вы можете заключить приведенную выше команду в сценарий оболочки).</target>
        </trans-unit>
        <trans-unit id="0fb44a035d4df6f6306133b267ae1546e220d2ba" translate="yes" xml:space="preserve">
          <source>Note that you should not do Octopus just because you can. An octopus is a valid thing to do and often makes it easier to view the commit history if you are merging more than two independent changes at the same time. However, if you have merge conflicts with any of the branches you are merging in and need to hand resolve, that is an indication that the development happened in those branches were not independent after all, and you should merge two at a time, documenting how you resolved the conflicts, and the reason why you preferred changes made in one side over the other. Otherwise it would make the project history harder to follow, not easier.</source>
          <target state="translated">Обратите внимание,что вы не должны делать Octopus только потому,что вы можете.Осьминог-это правильная вещь,которая часто облегчает просмотр истории коммитов,если вы объединяете более двух независимых изменений одновременно.Однако,если у вас есть конфликты слияния с любой из ветвей,в которую вы сливаетесь,и вам нужно разрешить их вручную,это говорит о том,что разработка,произошедшая в этих ветвях,все-таки не была независимой,и вы должны сливать по две за раз,документируя то,как вы разрешили конфликты,и причину,по которой вы предпочли,чтобы изменения,сделанные в одной из сторон,были разрешены в другой.Иначе история проекта будет сложнее прослеживаться,а не легче.</target>
        </trans-unit>
        <trans-unit id="482be6a864fbdcc5f9a936e9708b6d9c3eb14ff5" translate="yes" xml:space="preserve">
          <source>Note the addition of the &lt;code&gt;+&lt;/code&gt; sign. Alternatively, you can use the &lt;code&gt;-f&lt;/code&gt; flag to force the remote update, as in:</source>
          <target state="translated">Обратите внимание на добавление знака &lt;code&gt;+&lt;/code&gt; . В качестве альтернативы вы можете использовать флаг &lt;code&gt;-f&lt;/code&gt; для принудительного удаленного обновления, как в:</target>
        </trans-unit>
        <trans-unit id="c14d9654c43dfc38c5ce0e390578cf211f8eb175" translate="yes" xml:space="preserve">
          <source>Note the addition of the &lt;code&gt;+&lt;/code&gt; sign. Alternatively, you can use the &lt;code&gt;-f&lt;/code&gt; flag to force updates of all the fetched branches, as in:</source>
          <target state="translated">Обратите внимание на добавление знака &lt;code&gt;+&lt;/code&gt; . В качестве альтернативы вы можете использовать флаг &lt;code&gt;-f&lt;/code&gt; для принудительного обновления всех выбранных веток, как в:</target>
        </trans-unit>
        <trans-unit id="2261964ad436001973909975a060cb501a98c780" translate="yes" xml:space="preserve">
          <source>Note the last point. Do &lt;code&gt;not&lt;/code&gt; use &lt;code&gt;git pull&lt;/code&gt; unless you actually want to merge the remote branch.</source>
          <target state="translated">Обратите внимание на последний момент. Как &lt;code&gt;not&lt;/code&gt; использовать &lt;code&gt;git pull&lt;/code&gt; , если вы на самом деле хотите , чтобы объединить удаленный филиал.</target>
        </trans-unit>
        <trans-unit id="b5d534f9876445dbbed162e13c3b9e1bade912b4" translate="yes" xml:space="preserve">
          <source>Note the major differences in &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;, and &lt;code&gt;Q&lt;/code&gt; over &lt;code&gt;--full-history&lt;/code&gt;:</source>
          <target state="translated">Обратите внимание на основные различия в &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;P&lt;/code&gt; и &lt;code&gt;Q&lt;/code&gt; в &lt;code&gt;--full-history&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="592ed4ba86d62c504859114fd8d03df0827a06fa" translate="yes" xml:space="preserve">
          <source>Note the quotes around &lt;code&gt;*.c&lt;/code&gt;. The file &lt;code&gt;hello.c&lt;/code&gt; will also be checked out, even though it is no longer in the working tree, because the file globbing is used to match entries in the index (not in the working tree by the shell).</source>
          <target state="translated">Обратите внимание на кавычки вокруг &lt;code&gt;*.c&lt;/code&gt; . Файл &lt;code&gt;hello.c&lt;/code&gt; также будет извлечен, даже если его больше нет в рабочем дереве, потому что подстановка файлов используется для сопоставления записей в индексе (а не в рабочем дереве оболочки).</target>
        </trans-unit>
        <trans-unit id="d840183324e7e2c4b1d9b149ae89bf837a67da9c" translate="yes" xml:space="preserve">
          <source>Note the quotes around &lt;code&gt;*.c&lt;/code&gt;. The file &lt;code&gt;hello.c&lt;/code&gt; will also be restored, even though it is no longer in the working tree, because the file globbing is used to match entries in the index (not in the working tree by the shell).</source>
          <target state="translated">Обратите внимание на кавычки вокруг &lt;code&gt;*.c&lt;/code&gt; . Файл &lt;code&gt;hello.c&lt;/code&gt; также будет восстановлен, даже если его больше нет в рабочем дереве, потому что подстановка файлов используется для сопоставления записей в индексе (а не в рабочем дереве оболочки).</target>
        </trans-unit>
        <trans-unit id="86811ec658abf1645177c2f89c78cd1610e7ea04" translate="yes" xml:space="preserve">
          <source>Note what happens to the different &lt;code&gt;git diff-*&lt;/code&gt; versions here. After we&amp;rsquo;ve updated &lt;code&gt;hello&lt;/code&gt; in the index, &lt;code&gt;git diff-files -p&lt;/code&gt; now shows no differences, but &lt;code&gt;git diff-index -p HEAD&lt;/code&gt; still &lt;strong&gt;does&lt;/strong&gt; show that the current state is different from the state we committed. In fact, now &lt;code&gt;git diff-index&lt;/code&gt; shows the same difference whether we use the &lt;code&gt;--cached&lt;/code&gt; flag or not, since now the index is coherent with the working tree.</source>
          <target state="translated">Обратите внимание, что здесь происходит с различными &lt;code&gt;git diff-*&lt;/code&gt; . После того, как мы обновили &lt;code&gt;hello&lt;/code&gt; в индексе, &lt;code&gt;git diff-files -p&lt;/code&gt; Теперь не показывают какие - либо различий, но &lt;code&gt;git diff-index -p HEAD&lt;/code&gt; еще &lt;strong&gt;делает&lt;/strong&gt; показывает , что текущее состояние отличается от состояния мы совершили. Фактически, теперь &lt;code&gt;git diff-index&lt;/code&gt; показывает ту же разницу, используем ли мы флаг &lt;code&gt;--cached&lt;/code&gt; или нет, поскольку теперь индекс согласован с рабочим деревом.</target>
        </trans-unit>
        <trans-unit id="c96f5bf9205aae211cb148d5f8bcf4fb9ebed15b" translate="yes" xml:space="preserve">
          <source>Note, by the way, that lots of commands take a tree as an argument. But as we can see above, a tree can be referred to in many different ways&amp;mdash;​by the SHA-1 name for that tree, by the name of a commit that refers to the tree, by the name of a branch whose head refers to that tree, etc.--and most such commands can accept any of these names.</source>
          <target state="translated">Обратите внимание, кстати, что многие команды принимают в качестве аргумента дерево. Но, как мы видим выше, на дерево можно ссылаться по-разному - по имени SHA-1 для этого дерева, по имени коммита, который ссылается на дерево, по имени ветви, чья голова относится к к этому дереву и т. д. - и большинство таких команд могут принимать любое из этих имен.</target>
        </trans-unit>
        <trans-unit id="ba28d9bd22f696c9f9b774765c5cbeba6fcd1342" translate="yes" xml:space="preserve">
          <source>Note, for the reasons stated above usage of context-free patches is discouraged.</source>
          <target state="translated">Обратите внимание,что по указанным выше причинам использование бесконтекстных патчей не поощряется.</target>
        </trans-unit>
        <trans-unit id="22eddd855ac86c24360d06b5276ff8c7e192d879" translate="yes" xml:space="preserve">
          <source>Note, this safety check does not mean that a checkout will generate a file identical to the original file for a different setting of &lt;code&gt;core.eol&lt;/code&gt; and &lt;code&gt;core.autocrlf&lt;/code&gt;, but only for the current one. For example, a text file with &lt;code&gt;LF&lt;/code&gt; would be accepted with &lt;code&gt;core.eol=lf&lt;/code&gt; and could later be checked out with &lt;code&gt;core.eol=crlf&lt;/code&gt;, in which case the resulting file would contain &lt;code&gt;CRLF&lt;/code&gt;, although the original file contained &lt;code&gt;LF&lt;/code&gt;. However, in both work trees the line endings would be consistent, that is either all &lt;code&gt;LF&lt;/code&gt; or all &lt;code&gt;CRLF&lt;/code&gt;, but never mixed. A file with mixed line endings would be reported by the &lt;code&gt;core.safecrlf&lt;/code&gt; mechanism.</source>
          <target state="translated">Обратите внимание, что эта проверка безопасности не означает, что при оформлении заказа будет создан файл, идентичный исходному, для других настроек &lt;code&gt;core.eol&lt;/code&gt; и &lt;code&gt;core.autocrlf&lt;/code&gt; , но только для текущего. Например, текстовый файл с &lt;code&gt;LF&lt;/code&gt; будет принят с &lt;code&gt;core.eol=lf&lt;/code&gt; и позже может быть извлечен с помощью &lt;code&gt;core.eol=crlf&lt;/code&gt; , и в этом случае результирующий файл будет содержать &lt;code&gt;CRLF&lt;/code&gt; , хотя исходный файл содержал &lt;code&gt;LF&lt;/code&gt; . Однако в обоих рабочих деревьях окончания строк будут согласованными, то есть либо все &lt;code&gt;LF&lt;/code&gt; , либо все &lt;code&gt;CRLF&lt;/code&gt; , но никогда не смешиваются. Файл со смешанными окончаниями строк будет сообщаться &lt;code&gt;core.safecrlf&lt;/code&gt; механизм.</target>
        </trans-unit>
        <trans-unit id="955b317bd13857ee21eddce08c9664927a950a2e" translate="yes" xml:space="preserve">
          <source>Note. A single level of backslashes are eaten by the configuration file parser, so you would need to double the backslashes; the pattern above picks a line that begins with a backslash, and zero or more occurrences of &lt;code&gt;sub&lt;/code&gt; followed by &lt;code&gt;section&lt;/code&gt; followed by open brace, to the end of line.</source>
          <target state="translated">Заметка. Синтаксический анализатор файла конфигурации съедает один уровень обратной косой черты, поэтому вам придется удвоить обратную косую черту; шаблон выше выбирает строку, которая начинается с обратной косой черты, и ноль или более вхождений &lt;code&gt;sub&lt;/code&gt; , за которыми следует &lt;code&gt;section&lt;/code&gt; за которым следует открытая фигурная скобка, до конца строки.</target>
        </trans-unit>
        <trans-unit id="c3a8d5b6840faaf677f5d3f6a79125e45b041b0b" translate="yes" xml:space="preserve">
          <source>Note. When the &quot;-C&quot; option is used with &lt;code&gt;--find-copies-harder&lt;/code&gt; option, &lt;code&gt;git diff-*&lt;/code&gt; commands feed unmodified filepairs to diffcore mechanism as well as modified ones. This lets the copy detector consider unmodified files as copy source candidates at the expense of making it slower. Without &lt;code&gt;--find-copies-harder&lt;/code&gt;, &lt;code&gt;git diff-*&lt;/code&gt; commands can detect copies only if the file that was copied happened to have been modified in the same changeset.</source>
          <target state="translated">Заметка. Когда параметр &quot;-C&quot; используется с параметром &lt;code&gt;--find-copies-harder&lt;/code&gt; , команды &lt;code&gt;git diff-*&lt;/code&gt; передают как неизмененные пары файлов механизму diffcore, так и модифицированные. Это позволяет детектору копирования рассматривать немодифицированные файлы как кандидаты в источники копирования за счет замедления его работы. Без &lt;code&gt;--find-copies-harder&lt;/code&gt; , &lt;code&gt;git diff-*&lt;/code&gt; команды могут обнаружить копии , только если файл , который был скопирован случайно была изменены в том же ревизии.</target>
        </trans-unit>
        <trans-unit id="9ed1ac27dff5378ed96f590f4322050a04cabf6d" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;git revert&lt;/code&gt; is used to record some new commits to reverse the effect of some earlier commits (often only a faulty one). If you want to throw away all uncommitted changes in your working directory, you should see &lt;a href=&quot;git-reset&quot;&gt;git-reset[1]&lt;/a&gt;, particularly the &lt;code&gt;--hard&lt;/code&gt; option. If you want to extract specific files as they were in another commit, you should see &lt;a href=&quot;git-restore&quot;&gt;git-restore[1]&lt;/a&gt;, specifically the &lt;code&gt;--source&lt;/code&gt; option. Take care with these alternatives as both will discard uncommitted changes in your working directory.</source>
          <target state="translated">Примечание: &lt;code&gt;git revert&lt;/code&gt; используется для записи некоторых новых коммитов, чтобы отменить эффект некоторых более ранних коммитов (часто только ошибочных). Если вы хотите отбросить все незафиксированные изменения в вашем рабочем каталоге, вы должны увидеть &lt;a href=&quot;git-reset&quot;&gt;git-reset [1]&lt;/a&gt; , особенно параметр &lt;code&gt;--hard&lt;/code&gt; . Если вы хотите извлечь определенные файлы, как они были в другом коммите, вы должны увидеть &lt;a href=&quot;git-restore&quot;&gt;git-restore [1]&lt;/a&gt; , особенно параметр &lt;code&gt;--source&lt;/code&gt; . Будьте осторожны с этими альтернативами, так как оба будут отменять незафиксированные изменения в вашем рабочем каталоге.</target>
        </trans-unit>
        <trans-unit id="6007883f602581f1393822506c41cbfbfd02c805" translate="yes" xml:space="preserve">
          <source>Note: A thin pack violates the packed archive format by omitting required objects and is thus unusable by Git without making it self-contained. Use &lt;code&gt;git index-pack --fix-thin&lt;/code&gt; (see &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt;) to restore the self-contained property.</source>
          <target state="translated">Примечание. Тонкий пакет нарушает формат упакованного архива, опуская требуемые объекты, и поэтому Git не может использовать его, не делая его самодостаточным. Используйте &lt;code&gt;git index-pack --fix-thin&lt;/code&gt; (см. &lt;a href=&quot;git-index-pack&quot;&gt;Git-index-pack [1]&lt;/a&gt; ), чтобы восстановить автономное свойство.</target>
        </trans-unit>
        <trans-unit id="1f8f5701942fbb7ebefa9dee3f4f37f4528c7cfd" translate="yes" xml:space="preserve">
          <source>Note: Make sure you quote the result when passing it to &lt;code&gt;eval&lt;/code&gt;. See below for an example.</source>
          <target state="translated">Примечание. Убедитесь, что вы цитируете результат при передаче его в &lt;code&gt;eval&lt;/code&gt; . См. Пример ниже.</target>
        </trans-unit>
        <trans-unit id="b0f0e4e61a2bb004cf3ec68d5169e8ba972a47ee" translate="yes" xml:space="preserve">
          <source>Note: Newer CVS versions (&amp;gt;= 1.12.11) also support specifying CVS_SERVER directly in CVSROOT like</source>
          <target state="translated">Примечание: более новые версии CVS (&amp;gt; = 1.12.11) также поддерживают указание CVS_SERVER непосредственно в CVSROOT, например</target>
        </trans-unit>
        <trans-unit id="b833243d544e1089f2767ea8843cab2eed5526b2" translate="yes" xml:space="preserve">
          <source>Note: Porcelain commands such as &lt;code&gt;git gc&lt;/code&gt; (see &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;), &lt;code&gt;git repack&lt;/code&gt; (see &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt;) pass this option by default in modern Git when they put objects in your repository into pack files. So does &lt;code&gt;git bundle&lt;/code&gt; (see &lt;a href=&quot;git-bundle&quot;&gt;git-bundle[1]&lt;/a&gt;) when it creates a bundle.</source>
          <target state="translated">Примечание. Команды Porcelain, такие как &lt;code&gt;git gc&lt;/code&gt; (см. &lt;a href=&quot;git-gc&quot;&gt;Git-gc [1]&lt;/a&gt; ), &lt;code&gt;git repack&lt;/code&gt; (см. &lt;a href=&quot;git-repack&quot;&gt;Git-repack [1]&lt;/a&gt; ), передают этот параметр по умолчанию в современном Git, когда они помещают объекты из вашего репозитория в файлы пакетов. То же &lt;code&gt;git bundle&lt;/code&gt; делает git bundle (см. &lt;a href=&quot;git-bundle&quot;&gt;Git-bundle [1]&lt;/a&gt; ), когда он создает пакет.</target>
        </trans-unit>
        <trans-unit id="7a04bc9af081bc88d648e6675a2308737bd31c23" translate="yes" xml:space="preserve">
          <source>Note: Some inetd servers let you specify the name of the executable independently of the value of argv[0] (i.e. the name the program assumes it was executed with). In this case the correct line in /etc/inetd.conf looks like</source>
          <target state="translated">Замечание:некоторые inetd-серверы позволяют указать имя исполняемого файла независимо от значения параметра argv[0](т.е.имя,с которым программа предполагает,что он был выполнен).В этом случае правильная строка в файле /etc/inetd.conf имеет вид</target>
        </trans-unit>
        <trans-unit id="722ccad077353010f3a3bf5b634c417679782a2c" translate="yes" xml:space="preserve">
          <source>Note: Whenever the clean filter is changed, the repo should be renormalized: $ git add --renormalize .</source>
          <target state="translated">Примечание:Всякий раз,когда изменяется чистый фильтр,репо должно быть перенормировано:$ git добавляет --renormalize .</target>
        </trans-unit>
        <trans-unit id="e979029bca285fbda95b190d7e0a6ad42b034f7b" translate="yes" xml:space="preserve">
          <source>Note: the first command (&lt;code&gt;label onto&lt;/code&gt;) labels the revision onto which the commits are rebased; The name &lt;code&gt;onto&lt;/code&gt; is just a convention, as a nod to the &lt;code&gt;--onto&lt;/code&gt; option.</source>
          <target state="translated">Примечание: первая команда ( &lt;code&gt;label onto&lt;/code&gt; ) помечает ревизию, на которую перебазируются коммиты; Имя &lt;code&gt;onto&lt;/code&gt; - это просто соглашение, как &lt;code&gt;--onto&lt;/code&gt; параметру --onto .</target>
        </trans-unit>
        <trans-unit id="c1bc321618eb470344ec0a0359d287ae90474ae5" translate="yes" xml:space="preserve">
          <source>Note: the following core Perl modules that may be installed with your distribution of Perl are required: MIME::Base64, MIME::QuotedPrint, Net::Domain and Net::SMTP. These additional Perl modules are also required: Authen::SASL and Mail::Address.</source>
          <target state="translated">Примечание:необходимы следующие основные модули Perl,которые могут быть установлены вместе с вашим дистрибутивом Perl:MIME::Base64,MIME::QuotedPrint,Net::Domain и Net::SMTP.Эти дополнительные модули на Perl также необходимы:Authen::SASL и Mail::Address.</target>
        </trans-unit>
        <trans-unit id="9ca0395056bb808a73d2de7297fac7a555e73c25" translate="yes" xml:space="preserve">
          <source>Note: you can specify the default pretty format in the repository configuration (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Примечание: вы можете указать красивый формат по умолчанию в конфигурации репозитория (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="399df4ce8f932f9b96c0fdefbfc88e37bceafef0" translate="yes" xml:space="preserve">
          <source>Note: you need to ensure each user that is going to invoke &lt;code&gt;git-cvsserver&lt;/code&gt; has write access to the log file and to the database (see &lt;a href=&quot;#dbbackend&quot;&gt;Database Backend&lt;/a&gt;. If you want to offer write access over SSH, the users of course also need write access to the Git repository itself.</source>
          <target state="translated">Примечание: вам необходимо убедиться, что каждый пользователь, который собирается вызвать &lt;code&gt;git-cvsserver&lt;/code&gt; , имеет доступ на запись в файл журнала и в базу данных (см. &lt;a href=&quot;#dbbackend&quot;&gt;База данных Backend&lt;/a&gt; . Если вы хотите предложить доступ для записи через SSH, пользователям, конечно, также потребуется доступ для записи. в сам репозиторий Git.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="803fb7d2ab5d83b44291b7856ec7ac09a4ad4990" translate="yes" xml:space="preserve">
          <source>Notes can also be added to patches prepared with &lt;code&gt;git format-patch&lt;/code&gt; by using the &lt;code&gt;--notes&lt;/code&gt; option. Such notes are added as a patch commentary after a three dash separator line.</source>
          <target state="translated">Примечания также могут быть добавлены к исправлениям, подготовленным с помощью &lt;code&gt;git format-patch&lt;/code&gt; , с помощью параметра &lt;code&gt;--notes&lt;/code&gt; . Такие примечания добавляются как комментарий к патчу после разделительной линии из трех тире.</target>
        </trans-unit>
        <trans-unit id="680f18d9848c14869bd7dca451d5f596480f4677" translate="yes" xml:space="preserve">
          <source>Notes merge strategies</source>
          <target state="translated">Стратегии слияния нот</target>
        </trans-unit>
        <trans-unit id="abd4e292c73314f22de94f0e2806350a1ebe4452" translate="yes" xml:space="preserve">
          <source>Notes on frequently confused options</source>
          <target state="translated">Примечания к часто путаным опциям</target>
        </trans-unit>
        <trans-unit id="f5aa58376045f00b2abde3758c9ee9232861fade" translate="yes" xml:space="preserve">
          <source>Notes ref to read and manipulate instead of &lt;code&gt;refs/notes/commits&lt;/code&gt;. Must be an unabbreviated ref name. This setting can be overridden through the environment and command line.</source>
          <target state="translated">Примечания ссылаются на чтение и манипулирование, а не на &lt;code&gt;refs/notes/commits&lt;/code&gt; . Имя должно быть несокращенным. Этот параметр можно изменить через среду и командную строку.</target>
        </trans-unit>
        <trans-unit id="27c7345a105341e9d7ed2a9f6b06c674d31c0796" translate="yes" xml:space="preserve">
          <source>Notice all types of potential whitespace errors known to Git. The tab width is taken from the value of the &lt;code&gt;core.whitespace&lt;/code&gt; configuration variable.</source>
          <target state="translated">Обратите внимание на все типы потенциальных ошибок пробелов, известные Git. Ширина табуляции берется из значения переменной конфигурации &lt;code&gt;core.whitespace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1fa74b0ca5d38d82ab602be416ab241bc186864" translate="yes" xml:space="preserve">
          <source>Notice that regardless of which checkout command we use, &lt;code&gt;HEAD&lt;/code&gt; now refers directly to commit &lt;code&gt;b&lt;/code&gt;. This is known as being in detached &lt;code&gt;HEAD&lt;/code&gt; state. It means simply that &lt;code&gt;HEAD&lt;/code&gt; refers to a specific commit, as opposed to referring to a named branch. Let&amp;rsquo;s see what happens when we create a commit:</source>
          <target state="translated">Обратите внимание, что независимо от того, какую команду checkout мы используем, &lt;code&gt;HEAD&lt;/code&gt; теперь напрямую ссылается на фиксацию &lt;code&gt;b&lt;/code&gt; . Это называется отключенным состоянием &lt;code&gt;HEAD&lt;/code&gt; . Это просто означает, что &lt;code&gt;HEAD&lt;/code&gt; ссылается на конкретный коммит, а не на указанную ветку. Посмотрим, что произойдет, когда мы создадим коммит:</target>
        </trans-unit>
        <trans-unit id="223ae08c12689ce4cda40425ac912a2b7bc15955" translate="yes" xml:space="preserve">
          <source>Notify the helper this is a clone request (i.e. the current repository is guaranteed empty).</source>
          <target state="translated">Сообщите помощнику,что это запрос на клон (т.е.текущий репозиторий гарантированно пуст).</target>
        </trans-unit>
        <trans-unit id="4abfc187ad76ac88063d3dc9dd98a5854ac68fcf" translate="yes" xml:space="preserve">
          <source>Now add the changes to the index that you want to have in the first commit. You can use &lt;code&gt;git add&lt;/code&gt; (possibly interactively) or &lt;code&gt;git gui&lt;/code&gt; (or both) to do that.</source>
          <target state="translated">Теперь добавьте изменения в индекс, которые вы хотите иметь при первом коммите. Для этого вы можете использовать &lt;code&gt;git add&lt;/code&gt; (возможно, в интерактивном режиме) или &lt;code&gt;git gui&lt;/code&gt; (или оба).</target>
        </trans-unit>
        <trans-unit id="f89d262ba51a934099d56714cbb679d531203dd2" translate="yes" xml:space="preserve">
          <source>Now clone the superproject:</source>
          <target state="translated">Теперь клонируй суперпроект:</target>
        </trans-unit>
        <trans-unit id="ba793c9ae00cb4d237b36de220bcaff0d64b7a28" translate="yes" xml:space="preserve">
          <source>Now create the branches in which you are going to work; these start out at the current tip of origin/master branch, and should be set up (using the &lt;code&gt;--track&lt;/code&gt; option to &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt;) to merge changes in from Linus by default.</source>
          <target state="translated">Теперь создайте ветки, в которых вы собираетесь работать; они начинаются с текущего конца ветки origin / master и должны быть настроены (с помощью параметра &lt;code&gt;--track&lt;/code&gt; в &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; ) для слияния изменений из Linus по умолчанию.</target>
        </trans-unit>
        <trans-unit id="b3aa6a5493fd6ad1a98101f846b1686abf42b2c1" translate="yes" xml:space="preserve">
          <source>Now create the superproject and add all the submodules:</source>
          <target state="translated">Теперь создайте суперпроект и добавьте все субмодули:</target>
        </trans-unit>
        <trans-unit id="aec2ee2ebf7f0a1017c29bcb872a25ae6bf7b23d" translate="yes" xml:space="preserve">
          <source>Now is a good point to take a break to let this information sink in.</source>
          <target state="translated">Хорошее замечание-сделать перерыв,чтобы позволить этой информации погрузиться внутрь.</target>
        </trans-unit>
        <trans-unit id="8125d3bd8f5c390de8746d2ef58ce50b7de72c0b" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s suppose that commit J is bad and commit G is good and that we apply the bisection algorithm like it has been previously described.</source>
          <target state="translated">Теперь предположим, что фиксация J - это плохо, а фиксация G - хорошая, и что мы применяем алгоритм деления пополам, как это было описано ранее.</target>
        </trans-unit>
        <trans-unit id="880aeec71bcb81a6f397f1be442543fc2e21cab4" translate="yes" xml:space="preserve">
          <source>Now suppose that Joe wants his middle name initial used, and Jane prefers her family name fully spelled out. A proper &lt;code&gt;.mailmap&lt;/code&gt; file would look like:</source>
          <target state="translated">Теперь предположим, что Джо хочет использовать инициалы своего второго имени, а Джейн предпочитает, чтобы ее фамилия была полностью записана. Правильный файл &lt;code&gt;.mailmap&lt;/code&gt; будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="3e7c06961fbf7a9468c5f87e472b9bdf95e1fa5a" translate="yes" xml:space="preserve">
          <source>Now to apply some patches from the community. Think of a short snappy name for a branch to hold this patch (or related group of patches), and create a new branch from a recent stable tag of Linus&amp;rsquo;s branch. Picking a stable base for your branch will: 1) help you: by avoiding inclusion of unrelated and perhaps lightly tested changes 2) help future bug hunters that use &lt;code&gt;git bisect&lt;/code&gt; to find problems</source>
          <target state="translated">Теперь применим патчи от сообщества. Подумайте о коротком и быстром названии ветки, которая будет содержать этот патч (или связанную группу патчей), и создайте новую ветку из недавнего стабильного тега ветки Линуса. Выбор стабильной базы для вашей ветки: 1) поможет вам: избегая включения несвязанных и, возможно, слегка протестированных изменений 2) поможет будущим охотникам за ошибками, которые используют &lt;code&gt;git bisect&lt;/code&gt; для поиска проблем</target>
        </trans-unit>
        <trans-unit id="31a13e21421ef92e8ef4a0a89bea77231f7d36fb" translate="yes" xml:space="preserve">
          <source>Now use &lt;code&gt;git submodule update&lt;/code&gt; to clone the repositories and check out the commits specified in the superproject:</source>
          <target state="translated">Теперь используйте &lt;code&gt;git submodule update&lt;/code&gt; , чтобы клонировать репозитории и проверить коммиты, указанные в суперпроекте:</target>
        </trans-unit>
        <trans-unit id="93f7a0302cd464e3e88673ccf5b8a8b034507a50" translate="yes" xml:space="preserve">
          <source>Now we are ready to experiment with the merge by hand.</source>
          <target state="translated">Теперь мы готовы экспериментировать со слиянием вручную.</target>
        </trans-unit>
        <trans-unit id="0479e792f6adb8abb7cacffe33ca0f7a5b48ab2f" translate="yes" xml:space="preserve">
          <source>Now we will suppose that there is only one &quot;first bad commit&quot;. This means that all its descendants are &quot;bad&quot; and all the other commits are &quot;good&quot;. And we will suppose that all commits have an equal probability of being good or bad, or of being the first bad commit, so knowing the state of c commits gives always the same amount of information wherever these c commits are on the graph and whatever c is. (So we suppose that these commits being for example on a branch or near a good or a bad commit does not give more or less information).</source>
          <target state="translated">Теперь мы предположим,что есть только один &quot;первый плохой коммит&quot;.Это означает,что все его потомки-&quot;плохие&quot;,а все остальные-&quot;хорошие&quot;.И мы предположим,что все коммиты имеют равную вероятность быть хорошими или плохими,или быть первым плохим коммитом,так что знание состояния коммитов на c дает всегда одинаковое количество информации,где бы эти коммиты на c не находились на графике и что бы там ни было на c.(Таким образом,мы предполагаем,что эти коммиты,например,находятся в ветке или рядом с хорошим или плохим коммитом,не дают больше или меньше информации).</target>
        </trans-unit>
        <trans-unit id="16cb16561e679da512d88420e76326b5c722ec8f" translate="yes" xml:space="preserve">
          <source>Now when the background process runs &lt;code&gt;git fetch origin&lt;/code&gt; the references on &lt;code&gt;origin-push&lt;/code&gt; won&amp;rsquo;t be updated, and thus commands like:</source>
          <target state="translated">Теперь, когда фоновый процесс запускает &lt;code&gt;git fetch origin&lt;/code&gt; , ссылки на &lt;code&gt;origin-push&lt;/code&gt; не будут обновляться, и, следовательно, такие команды, как:</target>
        </trans-unit>
        <trans-unit id="3ecf9739a1d0abf420c43be7ddca1b7fc46c48f7" translate="yes" xml:space="preserve">
          <source>Now you apply the patch(es), run some tests, and commit the change(s). If the patch is a multi-part series, then you should apply each as a separate commit to this branch.</source>
          <target state="translated">Теперь вы применяете патч(ы),выполняете некоторые тесты и фиксируете изменения.Если патч состоит из нескольких частей,то вы должны применить каждую из них как отдельный коммит к этой ветке.</target>
        </trans-unit>
        <trans-unit id="ac8b110d69f8df7d9503ad0a18549a8731f4daf9" translate="yes" xml:space="preserve">
          <source>Now you are wiser, because you know that it happened 940 revisions before v0.99.</source>
          <target state="translated">Теперь ты мудрее,потому что знаешь,что это случилось с 940 ревизиями до v0.99.</target>
        </trans-unit>
        <trans-unit id="54796c29834d872153c55921bf00540d7c6165a5" translate="yes" xml:space="preserve">
          <source>Now you can proceed with the creation of the feature release. Apply a tag to the tip of &lt;code&gt;master&lt;/code&gt; indicating the release version:</source>
          <target state="translated">Теперь вы можете приступить к созданию выпуска функции. Прикрепите к наконечнику &lt;code&gt;master&lt;/code&gt; тег с указанием версии выпуска:</target>
        </trans-unit>
        <trans-unit id="d60447094204d4dec9840c772eacade572f28205" translate="yes" xml:space="preserve">
          <source>Now you know that blob 4b9458b3 is missing, and that the tree 2d9263c6 points to it. If you could find just one copy of that missing blob object, possibly in some other repository, you could move it into &lt;code&gt;.git/objects/4b/9458b3&amp;hellip;​&lt;/code&gt; and be done. Suppose you can&amp;rsquo;t. You can still examine the tree that pointed to it with &lt;a href=&quot;git-ls-tree&quot;&gt;git-ls-tree[1]&lt;/a&gt;, which might output something like:</source>
          <target state="translated">Теперь вы знаете, что blob 4b9458b3 отсутствует, и что дерево 2d9263c6 указывает на него. Если бы вы могли найти только один экземпляр этого недостающего объекта BLOB, возможно , в каком - то другом хранилище, вы можете переместить его в &lt;code&gt;.git/objects/4b/9458b3&amp;hellip;​&lt;/code&gt; и будет сделано. Предположим, вы не можете. Вы все еще можете изучить дерево, которое указывало на него, с помощью &lt;a href=&quot;git-ls-tree&quot;&gt;git-ls-tree [1]&lt;/a&gt; , который может вывести что-то вроде:</target>
        </trans-unit>
        <trans-unit id="c93b9bdc902ddf8466cfefc51dc1f28429545152" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ve split out many of the changes into their own commits, and might no longer use the patch mode of &lt;code&gt;git add&lt;/code&gt;, in order to select all remaining uncommitted changes.</source>
          <target state="translated">Теперь вы разделили многие изменения на отдельные коммиты и, возможно, больше не можете использовать режим исправления &lt;code&gt;git add&lt;/code&gt; , чтобы выбрать все оставшиеся незафиксированные изменения.</target>
        </trans-unit>
        <trans-unit id="69b6ae43249b3d4c8e61d7b20084413cd49e5e3e" translate="yes" xml:space="preserve">
          <source>Now, for the meat:</source>
          <target state="translated">А теперь,за мясо:</target>
        </trans-unit>
        <trans-unit id="4449e60d3fdd6703a4970ef116187e4c17d80dc4" translate="yes" xml:space="preserve">
          <source>Now, in this case we&amp;rsquo;ve intentionally created a situation where the merge will need to be fixed up by hand, though, so Git will do as much of it as it can automatically (which in this case is just merge the &lt;code&gt;example&lt;/code&gt; file, which had no differences in the &lt;code&gt;mybranch&lt;/code&gt; branch), and say:</source>
          <target state="translated">Теперь, в этом случае мы намеренно создали ситуацию, когда слияние нужно будет исправить вручную, поэтому Git будет делать столько, сколько может автоматически (что в данном случае просто слияние файла &lt;code&gt;example&lt;/code&gt; , который не имел различий в ветви &lt;code&gt;mybranch&lt;/code&gt; ), и скажем:</target>
        </trans-unit>
        <trans-unit id="93036e7630aadf8fab80b9b1079ffb3d1ea1e18f" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s pretend you are the one who did all the work in &lt;code&gt;mybranch&lt;/code&gt;, and the fruit of your hard work has finally been merged to the &lt;code&gt;master&lt;/code&gt; branch. Let&amp;rsquo;s go back to &lt;code&gt;mybranch&lt;/code&gt;, and run &lt;code&gt;git merge&lt;/code&gt; to get the &quot;upstream changes&quot; back to your branch.</source>
          <target state="translated">А теперь давайте представим, что вы - тот, кто проделал всю работу в &lt;code&gt;mybranch&lt;/code&gt; , и плод вашей тяжелой работы, наконец, был объединен с &lt;code&gt;master&lt;/code&gt; веткой. Вернемся к &lt;code&gt;mybranch&lt;/code&gt; и запустим &lt;code&gt;git merge&lt;/code&gt; , чтобы вернуть &amp;laquo; исходящие изменения&amp;raquo; в вашу ветку.</target>
        </trans-unit>
        <trans-unit id="7c23965b9cba90dec960d959f0eea85b60ea2b28" translate="yes" xml:space="preserve">
          <source>Now, since we&amp;rsquo;ve updated &lt;code&gt;hello&lt;/code&gt; in the index, we can commit the new version. We could do it by writing the tree by hand again, and committing the tree (this time we&amp;rsquo;d have to use the &lt;code&gt;-p HEAD&lt;/code&gt; flag to tell commit that the HEAD was the &lt;strong&gt;parent&lt;/strong&gt; of the new commit, and that this wasn&amp;rsquo;t an initial commit any more), but you&amp;rsquo;ve done that once already, so let&amp;rsquo;s just use the helpful script this time:</source>
          <target state="translated">Теперь, когда мы обновили &lt;code&gt;hello&lt;/code&gt; в индексе, мы можем зафиксировать новую версию. Мы могли бы сделать это, снова написав дерево вручную и зафиксировав дерево (на этот раз нам нужно было бы использовать флаг &lt;code&gt;-p HEAD&lt;/code&gt; , чтобы сообщить коммиту, что HEAD был &lt;strong&gt;родительским&lt;/strong&gt; для нового коммита, а это не начальная фиксация больше), но вы уже сделали это один раз, поэтому на этот раз давайте просто воспользуемся полезным скриптом:</target>
        </trans-unit>
        <trans-unit id="dfab069f398c1bff7a8b8aa3dadd95d2ce84088a" translate="yes" xml:space="preserve">
          <source>Now, to make it a bit more interesting, let&amp;rsquo;s assume that somebody else does some work in the original branch, and simulate that by going back to the master branch, and editing the same file differently there:</source>
          <target state="translated">Теперь, чтобы сделать его немного интереснее, давайте предположим, что кто-то другой выполняет некоторую работу в исходной ветке, и смоделируем это, вернувшись в главную ветку и отредактировав тот же файл по-другому:</target>
        </trans-unit>
        <trans-unit id="83bf1df5f5028baeb9804ff8b012e2bfb43363e7" translate="yes" xml:space="preserve">
          <source>Now, we want to go to the next stage in Git, which is to take the files that Git knows about in the index, and commit them as a real tree. We do that in two phases: creating a &lt;code&gt;tree&lt;/code&gt; object, and committing that &lt;code&gt;tree&lt;/code&gt; object as a &lt;code&gt;commit&lt;/code&gt; object together with an explanation of what the tree was all about, along with information of how we came to that state.</source>
          <target state="translated">Теперь мы хотим перейти к следующему этапу в Git, который должен взять файлы, о которых знает Git, в индекс и зафиксировать их как реальное дерево. Мы делаем это в два этапа: создаем объект- &lt;code&gt;tree&lt;/code&gt; и фиксируем этот объект- &lt;code&gt;tree&lt;/code&gt; как объект &lt;code&gt;commit&lt;/code&gt; вместе с объяснением того, что такое дерево, вместе с информацией о том, как мы пришли к этому состоянию.</target>
        </trans-unit>
        <trans-unit id="4b50314ab323fb71cb3292dbd2b0326c17673414" translate="yes" xml:space="preserve">
          <source>Now, you will get the rewritten history saved in HEAD.</source>
          <target state="translated">Теперь вы получите переписанную историю,сохраненную в HEAD.</target>
        </trans-unit>
        <trans-unit id="575836ebc8e262c11aa86a9dd4e0c52f7d072bcd" translate="yes" xml:space="preserve">
          <source>Now, you&amp;rsquo;ve got two branches, and you decide that you want to merge the work done. Before we do that, let&amp;rsquo;s introduce a cool graphical tool that helps you view what&amp;rsquo;s going on:</source>
          <target state="translated">Теперь у вас есть две ветки, и вы решаете объединить проделанную работу. Прежде чем мы это сделаем, давайте представим отличный графический инструмент, который поможет вам увидеть, что происходит:</target>
        </trans-unit>
        <trans-unit id="910f1e558e60364937a941e26d7def6b701f836e" translate="yes" xml:space="preserve">
          <source>Nowadays though gitweb should create HTML base tag when needed (to set base URI for relative links), so it should work automatically.</source>
          <target state="translated">В настоящее время,хотя gitweb при необходимости должен создавать базовый тег HTML (для установки базового URI для относительных ссылок),он должен работать автоматически.</target>
        </trans-unit>
        <trans-unit id="9a11d4479b92e7b2c9a9fc979b41f6f7eb2a1edf" translate="yes" xml:space="preserve">
          <source>Nowadays, &lt;code&gt;git log&lt;/code&gt; is a builtin, which means that it is &lt;code&gt;contained&lt;/code&gt; in the command &lt;code&gt;git&lt;/code&gt;. The source side of a builtin is</source>
          <target state="translated">В настоящее время &lt;code&gt;git log&lt;/code&gt; является встроенным, что означает, что он &lt;code&gt;contained&lt;/code&gt; в команде &lt;code&gt;git&lt;/code&gt; . Исходная сторона встроенной функции</target>
        </trans-unit>
        <trans-unit id="33e31083ab9551e7141ee8a3ee7a0a4d045c20a2" translate="yes" xml:space="preserve">
          <source>Number of bytes of a pack file to map into memory in a single mapping operation. Larger window sizes may allow your system to process a smaller number of large pack files more quickly. Smaller window sizes will negatively affect performance due to increased calls to the operating system&amp;rsquo;s memory manager, but may improve performance when accessing a large number of large pack files.</source>
          <target state="translated">Количество байтов файла пакета, отображаемого в память за одну операцию отображения. Большие размеры окна могут позволить вашей системе быстрее обрабатывать меньшее количество больших файлов пакетов. Меньшие размеры окна будут отрицательно влиять на производительность из-за увеличения количества обращений к диспетчеру памяти операционной системы, но могут улучшить производительность при доступе к большому количеству файлов больших пакетов.</target>
        </trans-unit>
        <trans-unit id="782270330831f0728fbf1b39424dcd7ac04c3bcf" translate="yes" xml:space="preserve">
          <source>Number of grep worker threads to use. If unset (or set to 0), 8 threads are used by default (for now).</source>
          <target state="translated">Количество рабочих резьбовых прокладок для смазки.При неустановке (или установке в 0)по умолчанию (на данный момент)используется 8 потоков.</target>
        </trans-unit>
        <trans-unit id="b3f7cd4c72eff1cd06e6ea960c75592f7883408d" translate="yes" xml:space="preserve">
          <source>Number of grep worker threads to use. See &lt;code&gt;grep.threads&lt;/code&gt; in &lt;a href=&quot;git-grep&quot;&gt;git-grep[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Количество используемых рабочих потоков grep. См. &lt;code&gt;grep.threads&lt;/code&gt; в &lt;a href=&quot;git-grep&quot;&gt;git-grep [1]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="340883bf973e4a0a0a15928c3b44200ef6d0edac" translate="yes" xml:space="preserve">
          <source>Number of grep worker threads to use. See &lt;code&gt;grep.threads&lt;/code&gt; in &lt;code&gt;CONFIGURATION&lt;/code&gt; for more information.</source>
          <target state="translated">Количество используемых рабочих потоков grep. См. &lt;code&gt;grep.threads&lt;/code&gt; в &lt;code&gt;CONFIGURATION&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="4a06461d5cac364fcad71d6e428b30d7321d874b" translate="yes" xml:space="preserve">
          <source>Number of messages to be sent per connection, after that a relogin will happen. If the value is 0 or undefined, send all messages in one connection. See also the &lt;code&gt;--batch-size&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">Количество сообщений, отправляемых за одно соединение, после чего произойдет повторный вход. Если значение равно 0 или не определено, отправляйте все сообщения в одном соединении. См. Также параметр &lt;code&gt;--batch-size&lt;/code&gt; в &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="263d5a12c4d7938e6b1945ed2d424a531e8ffd37" translate="yes" xml:space="preserve">
          <source>Number of parallel children to be used for all forms of fetching.</source>
          <target state="translated">Количество параллельных детей,которые будут использоваться для всех форм забора.</target>
        </trans-unit>
        <trans-unit id="5f124a70076360d6cdb202a3452dac6608d9c87a" translate="yes" xml:space="preserve">
          <source>Number of seconds to cache credentials (default: 900).</source>
          <target state="translated">Количество секунд для кэширования учетных данных (по умолчанию:900).</target>
        </trans-unit>
        <trans-unit id="0600a433ee142590b5ed0795ec15517899403cc1" translate="yes" xml:space="preserve">
          <source>OBJ_BLOB (3)</source>
          <target state="translated">OBJ_BLOB (3)</target>
        </trans-unit>
        <trans-unit id="20a9deedd57091e656a9ceb8afe723fea4c8ae28" translate="yes" xml:space="preserve">
          <source>OBJ_COMMIT (1)</source>
          <target state="translated">OBJ_COMMIT (1)</target>
        </trans-unit>
        <trans-unit id="33b36795cfe9033fd325f2c4f57ccf4bbcdb1c8c" translate="yes" xml:space="preserve">
          <source>OBJ_OFS_DELTA (6)</source>
          <target state="translated">OBJ_OFS_DELTA (6)</target>
        </trans-unit>
        <trans-unit id="ad63d6a2f7a5f774df4b60dc52ffc40dc66ab330" translate="yes" xml:space="preserve">
          <source>OBJ_REF_DELTA (7)</source>
          <target state="translated">OBJ_REF_DELTA (7)</target>
        </trans-unit>
        <trans-unit id="bf0dce0da3b6ff387e755df6e790a1cac5898dd7" translate="yes" xml:space="preserve">
          <source>OBJ_TAG (4)</source>
          <target state="translated">OBJ_TAG (4)</target>
        </trans-unit>
        <trans-unit id="2f77abc6705f39815a181a261b98c26e748660a6" translate="yes" xml:space="preserve">
          <source>OBJ_TREE (2)</source>
          <target state="translated">OBJ_TREE (2)</target>
        </trans-unit>
        <trans-unit id="bcb75e6bd3e418ec921606a22f47e84ce889c09d" translate="yes" xml:space="preserve">
          <source>OK, still with me? To give us an example to look at, let&amp;rsquo;s go back to the earlier repository with &quot;hello&quot; and &quot;example&quot; file, and bring ourselves back to the pre-merge state:</source>
          <target state="translated">Хорошо, все еще со мной? Чтобы дать нам пример для рассмотрения, давайте вернемся в предыдущий репозиторий с файлом &amp;laquo;hello&amp;raquo; и &amp;laquo;example&amp;raquo; и вернемся в состояние до слияния:</target>
        </trans-unit>
        <trans-unit id="6477da6d91ea639e6e30c40f69d7500177d55603" translate="yes" xml:space="preserve">
          <source>OK, this all sounds like a collection of totally nonsensical rules, but it&amp;rsquo;s actually exactly what you want in order to do a fast merge. The different stages represent the &quot;result tree&quot; (stage 0, aka &quot;merged&quot;), the original tree (stage 1, aka &quot;orig&quot;), and the two trees you are trying to merge (stage 2 and 3 respectively).</source>
          <target state="translated">Хорошо, все это звучит как набор совершенно бессмысленных правил, но на самом деле это именно то, что вам нужно для быстрого слияния. Различные этапы представляют собой &amp;laquo;результирующее дерево&amp;raquo; (этап 0, также известное как &amp;laquo;объединенное&amp;raquo;), исходное дерево (этап 1, также известное как &amp;laquo;ориг&amp;raquo;) и два дерева, которые вы пытаетесь объединить (этап 2 и 3 соответственно).</target>
        </trans-unit>
        <trans-unit id="30c34ea4528b5e99d721b2ada273c08402f70a1d" translate="yes" xml:space="preserve">
          <source>Object Traversal</source>
          <target state="translated">Обход объекта</target>
        </trans-unit>
        <trans-unit id="e07348665c9e3f452362a58c36e1f55665279269" translate="yes" xml:space="preserve">
          <source>Object access and manipulation</source>
          <target state="translated">Доступ к объекту и манипуляции с ним</target>
        </trans-unit>
        <trans-unit id="d963c54afefdbe29bbc1f0380d42869afd8a753b" translate="yes" xml:space="preserve">
          <source>Object size identified by &amp;lt;object&amp;gt; is given in bytes, and right-justified with minimum width of 7 characters. Object size is given only for blobs (file) entries; for other entries &lt;code&gt;-&lt;/code&gt; character is used in place of size.</source>
          <target state="translated">Размер объекта, определяемый &amp;lt;object&amp;gt;, указывается в байтах и ​​выравнивается по правому краю с минимальной шириной 7 символов. Размер объекта указан только для записей blobs (file); для других записей &lt;code&gt;-&lt;/code&gt; вместо размера используется символ.</target>
        </trans-unit>
        <trans-unit id="5a755e02f9fddc8d9863cff303858fc5c0963f4b" translate="yes" xml:space="preserve">
          <source>Object storage format</source>
          <target state="translated">Формат хранения объекта</target>
        </trans-unit>
        <trans-unit id="4410a56144704dcadb0adeabc1f66b086332a778" translate="yes" xml:space="preserve">
          <source>Object store associated with this repository. Usually an object store is self sufficient (i.e. all the objects that are referred to by an object found in it are also found in it), but there are a few ways to violate it.</source>
          <target state="translated">Хранилище объектов,связанное с этим хранилищем.Обычно хранилище объектов является самодостаточным (т.е.все объекты,на которые ссылается найденный в нем объект,также находятся в нем),но есть несколько способов его нарушить.</target>
        </trans-unit>
        <trans-unit id="66c888d10ab6a46198fcec7325df97ad7688050e" translate="yes" xml:space="preserve">
          <source>Object types</source>
          <target state="translated">Типы объектов</target>
        </trans-unit>
        <trans-unit id="397880af9235fafbc028a684c78f613458679a72" translate="yes" xml:space="preserve">
          <source>Objects that already exist in the repository will &lt;strong&gt;not&lt;/strong&gt; be unpacked from the packfile. Therefore, nothing will be unpacked if you use this command on a packfile that exists within the target repository.</source>
          <target state="translated">Объекты, которые уже существуют в репозитории, &lt;strong&gt;не&lt;/strong&gt; будут распакованы из файла пакета. Следовательно, ничего не будет распаковано, если вы воспользуетесь этой командой для файла пакета, который существует в целевом репозитории.</target>
        </trans-unit>
        <trans-unit id="f90e1faea66f4ee07afc15b9cfbe6b37aebe1076" translate="yes" xml:space="preserve">
          <source>Objects unreachable from the refs in packs named with --unpacked= option are added to the resulting pack, in addition to the reachable objects that are not in packs marked with *.keep files. This implies &lt;code&gt;--revs&lt;/code&gt;.</source>
          <target state="translated">Объекты, недоступные из ссылок в пакетах, названных с параметром --unpacked =, добавляются в результирующий пакет в дополнение к достижимым объектам, которые не находятся в пакетах, помеченных * .keep файлами. Это означает &lt;code&gt;--revs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b47085e458e48bb4b0605ca6d2f6a3cc7755c2" translate="yes" xml:space="preserve">
          <source>Obsolete for: &lt;a href=&quot;#def_index&quot;&gt;index&lt;/a&gt;.</source>
          <target state="translated">Устарело для: &lt;a href=&quot;#def_index&quot;&gt;index&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d42a49317326d6b79f20beebf76935d065ccac7f" translate="yes" xml:space="preserve">
          <source>Obviously, endless variations are possible; for example, to see all commits reachable from some head but not from any tag in the repository:</source>
          <target state="translated">Очевидно,что возможны бесконечные вариации;например,видеть все коммиты,доступные из какой-то головы,но не из любой метки в репозитории:</target>
        </trans-unit>
        <trans-unit id="80e98962116f1f595b28a3f430e4b1f9c4dbde82" translate="yes" xml:space="preserve">
          <source>Occasionally, the maintainer may get merge conflicts when they try to pull changes from downstream. In this case, they can ask downstream to do the merge and resolve the conflicts themselves (perhaps they will know better how to resolve them). It is one of the rare cases where downstream &lt;code&gt;should&lt;/code&gt; merge from upstream.</source>
          <target state="translated">Иногда у сопровождающего могут возникать конфликты слияния, когда он пытается получить изменения из нижестоящего потока. В этом случае они могут попросить нижестоящую часть выполнить слияние и разрешить конфликты самостоятельно (возможно, они лучше знают, как их разрешать). Это один из редких случаев, когда нисходящий поток &lt;code&gt;should&lt;/code&gt; объединяться с восходящим.</target>
        </trans-unit>
        <trans-unit id="7c4df738049a7589e8637595f08e890f6ad9d98e" translate="yes" xml:space="preserve">
          <source>Of course some kind of software is developed, then used during some time without being improved on much, and then finally thrown away. In this case, of course, regressions may not be a big problem. But on the other hand, there is a lot of big software that is continually developed and maintained during years or even tens of years by a lot of people. And as there are often many people who depend (sometimes critically) on such software, regressions are a really big problem.</source>
          <target state="translated">Конечно,какое-то программное обеспечение разрабатывается,затем используется в течение некоторого времени без особых улучшений,а затем окончательно выбрасывается.В этом случае,конечно,регрессии могут не представлять большой проблемы.Но с другой стороны,есть много большого программного обеспечения,которое постоянно разрабатывается и поддерживается в течение многих лет или даже десятков лет многими людьми.И так как часто многие люди зависят (иногда критически)от такого программного обеспечения,регрессии-это действительно большая проблема.</target>
        </trans-unit>
        <trans-unit id="19fce424b8331b64c65b8a6acafb03304b015bfc" translate="yes" xml:space="preserve">
          <source>Of course the &quot;bad&quot; commit cannot be an ancestor of a &quot;good&quot; commit, because the ancestors of the good commits are supposed to be &quot;good&quot;. And all the &quot;good&quot; commits must be related to the bad commit. They cannot be on a branch that has no link with the branch of the &quot;bad&quot; commit. But it is possible for a good commit to be related to a bad commit and yet not be neither one of its ancestor nor one of its descendants.</source>
          <target state="translated">Конечно,&quot;плохой&quot; коммит не может быть предком &quot;хорошего&quot; коммита,потому что предки хороших коммитов должны быть &quot;хорошими&quot;.И все &quot;хорошие&quot; коммиты должны быть связаны с плохим коммитом.Они не могут находиться на ветке,не имеющей связи с веткой &quot;плохого&quot; коммита.Однако хороший коммит может быть связан с плохим коммитом и при этом не быть ни одним из его предков,ни одним из его потомков.</target>
        </trans-unit>
        <trans-unit id="7c78c10d5c75907a546f96553e9802bb23f4c982" translate="yes" xml:space="preserve">
          <source>Of course, there may be more than one answer&amp;mdash;​if the history branched after commit e05db0fd, then there could be multiple &quot;earliest&quot; tagged releases.</source>
          <target state="translated">Конечно, ответов может быть несколько - если история разветвляется после коммита e05db0fd, то может быть несколько &amp;laquo;самых ранних&amp;raquo; помеченных релизов.</target>
        </trans-unit>
        <trans-unit id="bc73231ef0df798acd7604c5e90f5ea460992bab" translate="yes" xml:space="preserve">
          <source>Often people use &lt;code&gt;git pull&lt;/code&gt; without giving any parameter. Traditionally, this has been equivalent to saying &lt;code&gt;git pull
origin&lt;/code&gt;. However, when configuration &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; is present while on branch &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, that value is used instead of &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">Часто люди используют &lt;code&gt;git pull&lt;/code&gt; без указания каких-либо параметров. Традиционно это было эквивалентно запросу &lt;code&gt;git pull origin&lt;/code&gt; . Однако, когда конфигурация &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; присутствует в ветке &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; , это значение используется вместо &lt;code&gt;origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="813c6a487fc92be3bf23c6677bbfade25d37be89" translate="yes" xml:space="preserve">
          <source>Often the current branch head is an ancestor of the named commit. This is the most common case especially when invoked from &lt;code&gt;git pull&lt;/code&gt;: you are tracking an upstream repository, you have committed no local changes, and now you want to update to a newer upstream revision. In this case, a new commit is not needed to store the combined history; instead, the &lt;code&gt;HEAD&lt;/code&gt; (along with the index) is updated to point at the named commit, without creating an extra merge commit.</source>
          <target state="translated">Часто текущая глава ветки является предком указанного коммита. Это наиболее распространенный случай, особенно при вызове из &lt;code&gt;git pull&lt;/code&gt; : вы отслеживаете вышестоящий репозиторий, вы не вносили никаких локальных изменений, и теперь вы хотите выполнить обновление до более новой исходной ревизии. В этом случае новая фиксация не требуется для хранения объединенной истории; вместо этого &lt;code&gt;HEAD&lt;/code&gt; (вместе с индексом) обновляется, чтобы указывать на названный коммит, без создания дополнительной фиксации слияния.</target>
        </trans-unit>
        <trans-unit id="bc22c639538c04ca7d5608268e4dc9b34f324581" translate="yes" xml:space="preserve">
          <source>Often the overview of the change is useful to get a feel of each step</source>
          <target state="translated">Часто обзор изменений полезен для того,чтобы получить представление о каждом шаге.</target>
        </trans-unit>
        <trans-unit id="a0ef5be0d5f74372c2549cc7906cdb110a910654" translate="yes" xml:space="preserve">
          <source>Often, &quot;please pull&quot; messages on the mailing list just provide two pieces of information: a repo URL and a branch name; this is designed to be easily cut&amp;amp;pasted at the end of a &lt;code&gt;git fetch&lt;/code&gt; command line:</source>
          <target state="translated">Часто сообщения &amp;laquo;пожалуйста, потяните&amp;raquo; в списке рассылки просто предоставляют две части информации: URL-адрес репо и имя ветки; его можно легко вырезать и вставить в конец командной строки &lt;code&gt;git fetch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b90f5f996d698883902ffd1dba32d6eea369ef9a" translate="yes" xml:space="preserve">
          <source>Older documentation written before the packed-refs mechanism was introduced may still say things like &quot;.git/refs/heads/&amp;lt;branch&amp;gt; file exists&quot; when it means &quot;branch &amp;lt;branch&amp;gt; exists&quot;.</source>
          <target state="translated">В более старой документации, написанной до того, как был введен механизм упакованных ссылок, все еще может быть сказано что-то вроде &amp;laquo;.git / refs / Heads / &amp;lt;branch&amp;gt; file exists&amp;raquo;, когда это означает &amp;laquo;ветка &amp;lt;branch&amp;gt; существует&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a148aab8f38b980de65dd5f412fc336ae5d855f6" translate="yes" xml:space="preserve">
          <source>Older scripts may depend on the historical behaviour of not allowing the user to edit the merge log message. They will see an editor opened when they run &lt;code&gt;git merge&lt;/code&gt;. To make it easier to adjust such scripts to the updated behaviour, the environment variable &lt;code&gt;GIT_MERGE_AUTOEDIT&lt;/code&gt; can be set to &lt;code&gt;no&lt;/code&gt; at the beginning of them.</source>
          <target state="translated">Старые сценарии могут зависеть от исторического поведения, не позволяющего пользователю редактировать сообщение журнала слияния. Когда они запустят &lt;code&gt;git merge&lt;/code&gt; , они увидят открытый редактор . Чтобы упростить адаптацию таких сценариев к обновленному поведению, для переменной среды &lt;code&gt;GIT_MERGE_AUTOEDIT&lt;/code&gt; можно установить значение &lt;code&gt;no&lt;/code&gt; в начале сценария .</target>
        </trans-unit>
        <trans-unit id="3a027c8ab6aede7960dbe3d141d016ee3e6589ef" translate="yes" xml:space="preserve">
          <source>Older versions of &lt;code&gt;meld&lt;/code&gt; do not support the &lt;code&gt;--output&lt;/code&gt; option. Git will attempt to detect whether &lt;code&gt;meld&lt;/code&gt; supports &lt;code&gt;--output&lt;/code&gt; by inspecting the output of &lt;code&gt;meld --help&lt;/code&gt;. Configuring &lt;code&gt;mergetool.meld.hasOutput&lt;/code&gt; will make Git skip these checks and use the configured value instead. Setting &lt;code&gt;mergetool.meld.hasOutput&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; tells Git to unconditionally use the &lt;code&gt;--output&lt;/code&gt; option, and &lt;code&gt;false&lt;/code&gt; avoids using &lt;code&gt;--output&lt;/code&gt;.</source>
          <target state="translated">Старые версии &lt;code&gt;meld&lt;/code&gt; не поддерживают параметр &lt;code&gt;--output&lt;/code&gt; . Git попытается определить, поддерживает ли &lt;code&gt;meld&lt;/code&gt; &lt;code&gt;--output&lt;/code&gt; ,проверив вывод &lt;code&gt;meld --help&lt;/code&gt; . Настройка &lt;code&gt;mergetool.meld.hasOutput&lt;/code&gt; заставит Git пропустить эти проверки и вместо этого использовать настроенное значение. Установка &lt;code&gt;mergetool.meld.hasOutput&lt;/code&gt; в &lt;code&gt;true&lt;/code&gt; говорит Git безоговорочно использовать &lt;code&gt;--output&lt;/code&gt; вариант, и &lt;code&gt;false&lt;/code&gt; избегает использования &lt;code&gt;--output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8511fe9d48b84ff3883d162d35ccd3dcba224454" translate="yes" xml:space="preserve">
          <source>Older versions of Git (before 2.20) documented that the object names list should be sorted. This was never a requirement, the object names could appear in any order, but when reading the list we tracked whether the list was sorted for the purposes of an internal binary search implementation, which could save itself some work with an already sorted list. Unless you had a humongous list there was no reason to go out of your way to pre-sort the list. After Git version 2.20 a hash implementation is used instead, so there&amp;rsquo;s now no reason to pre-sort the list.</source>
          <target state="translated">В более старых версиях Git (до 2.20) указывалось, что список имен объектов должен быть отсортирован. Это никогда не было обязательным требованием, имена объектов могли появляться в любом порядке, но при чтении списка мы отслеживали, был ли список отсортирован для целей реализации внутреннего двоичного поиска, что могло сэкономить некоторую работу с уже отсортированным списком. Если у вас не было огромного списка, не было причин стараться изо всех сил, чтобы предварительно отсортировать список. После Git версии 2.20 вместо него используется хеш-реализация, поэтому теперь нет причин для предварительной сортировки списка.</target>
        </trans-unit>
        <trans-unit id="c51aaa3680fede028efcceee261b4919c277f552" translate="yes" xml:space="preserve">
          <source>Omit any commit that introduces the same change as another commit on the &amp;ldquo;other side&amp;rdquo; when the set of commits are limited with symmetric difference.</source>
          <target state="translated">Пропустите любую фиксацию, которая вводит те же изменения, что и другая фиксация на &amp;laquo;другой стороне&amp;raquo;, когда набор коммитов ограничен симметричной разницей.</target>
        </trans-unit>
        <trans-unit id="e35d3ce0c9ea9ff6d661fcb1cbc8e08ffef97df6" translate="yes" xml:space="preserve">
          <source>Omit diff output for unmerged entries and just show &quot;Unmerged&quot;. Can be used only when comparing the working tree with the index.</source>
          <target state="translated">Опустите выход diff для неупорядоченных записей и просто покажите &quot;Неупорядоченные&quot;.Может использоваться только при сравнении рабочего дерева с индексом.</target>
        </trans-unit>
        <trans-unit id="3138b0b10501de06a44e08d0de4b10a83646644b" translate="yes" xml:space="preserve">
          <source>Omit objects that are known to be in the promisor remote. (This option has the purpose of operating only on locally created objects, so that when we repack, we still maintain a distinction between locally created objects [without .promisor] and objects from the promisor remote [with .promisor].) This is used with partial clone.</source>
          <target state="translated">Опустите объекты,которые,как известно,находятся в удаленном промусоре.(Эта опция предназначена для работы только с объектами,созданными локально,так что когда мы переупаковываем,мы все равно сохраняем различие между объектами,созданными локально [без .promisor]и объектами,созданными удаленным [с .promisor]Promisor).Это используется при частичном клонировании.</target>
        </trans-unit>
        <trans-unit id="fcfe3e3e988e33991f3ebb33b70ee9c58a79e5d0" translate="yes" xml:space="preserve">
          <source>Omit the preimage for deletes, i.e. print only the header but not the diff between the preimage and &lt;code&gt;/dev/null&lt;/code&gt;. The resulting patch is not meant to be applied with &lt;code&gt;patch&lt;/code&gt; or &lt;code&gt;git apply&lt;/code&gt;; this is solely for people who want to just concentrate on reviewing the text after the change. In addition, the output obviously lacks enough information to apply such a patch in reverse, even manually, hence the name of the option.</source>
          <target state="translated">Пропускайте прообраз при удалении, т.е. печатайте только заголовок, но не разницу между прообразом и &lt;code&gt;/dev/null&lt;/code&gt; . Полученный патч не предназначен для применения с помощью &lt;code&gt;patch&lt;/code&gt; или &lt;code&gt;git apply&lt;/code&gt; ; это предназначено исключительно для людей, которые хотят просто сосредоточиться на просмотре текста после изменения. Кроме того, в выходных данных явно не хватает информации, чтобы применить такой патч в обратном порядке, даже вручную, отсюда и название опции.</target>
        </trans-unit>
        <trans-unit id="2c239b325c52048ed0e0df682e63161da794c522" translate="yes" xml:space="preserve">
          <source>Omitting &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; detaches &lt;code&gt;HEAD&lt;/code&gt; at the tip of the current branch.</source>
          <target state="translated">Отсутствие &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; отделяет &lt;code&gt;HEAD&lt;/code&gt; от конца текущей ветви.</target>
        </trans-unit>
        <trans-unit id="6f08ea1a85b441d7cdb4b9da4840e51d4a63074c" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;from&lt;/code&gt; command in the first commit of a new branch will cause fast-import to create that commit with no ancestor. This tends to be desired only for the initial commit of a project. If the frontend creates all files from scratch when making a new branch, a &lt;code&gt;merge&lt;/code&gt; command may be used instead of &lt;code&gt;from&lt;/code&gt; to start the commit with an empty tree. Omitting the &lt;code&gt;from&lt;/code&gt; command on existing branches is usually desired, as the current commit on that branch is automatically assumed to be the first ancestor of the new commit.</source>
          <target state="translated">Пропуск команды &lt;code&gt;from&lt;/code&gt; в первом коммите новой ветки приведет к тому, что быстрый импорт создаст этот коммит без предка. Обычно это желательно только для первоначальной фиксации проекта. Если интерфейс создает все файлы с нуля при создании новой ветки, вместо команды &lt;code&gt;from&lt;/code&gt; можно использовать команду &lt;code&gt;merge&lt;/code&gt; чтобы начать фиксацию с пустым деревом. Опуская &lt;code&gt;from&lt;/code&gt; команды на существующих ветвей, как правило , желательно, так как ток фиксации на этой ветви автоматически считается первым предком новой фиксации.</target>
        </trans-unit>
        <trans-unit id="2e6ae0a1101e66bbdd1aff8c2583b81c23208b83" translate="yes" xml:space="preserve">
          <source>On Automatic following</source>
          <target state="translated">На Автоматическом слежении</target>
        </trans-unit>
        <trans-unit id="82b4aa90bf6690a7ed8e3558248667b070567fb7" translate="yes" xml:space="preserve">
          <source>On Backdating Tags</source>
          <target state="translated">На бэкдайтинговых метках</target>
        </trans-unit>
        <trans-unit id="52c1ff7f8dbe6e1f6639547a437fb78c51994ab9" translate="yes" xml:space="preserve">
          <source>On Re-tagging</source>
          <target state="translated">На перемаркировке</target>
        </trans-unit>
        <trans-unit id="a3e5a575b7ca5dced5a48ec2289cb57e77edaa64" translate="yes" xml:space="preserve">
          <source>On an inefficient filesystem with &lt;code&gt;core.ignorestat&lt;/code&gt; set</source>
          <target state="translated">На неэффективной файловой системе с установленным &lt;code&gt;core.ignorestat&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccf984a0700972bcd62e51c87e569c1158e56007" translate="yes" xml:space="preserve">
          <source>On large repositories, Git depends on compression to keep the history information from taking up too much space on disk or in memory. Some Git commands may automatically run &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;, so you don&amp;rsquo;t have to worry about running it manually. However, compressing a large repository may take a while, so you may want to call &lt;code&gt;gc&lt;/code&gt; explicitly to avoid automatic compression kicking in when it is not convenient.</source>
          <target state="translated">В больших репозиториях Git зависит от сжатия, чтобы информация истории не занимала слишком много места на диске или в памяти. Некоторые команды Git могут автоматически запускать &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt; , поэтому вам не нужно беспокоиться о его запуске вручную. Однако сжатие большого репозитория может занять некоторое время, поэтому вы можете явно вызвать &lt;code&gt;gc&lt;/code&gt; , чтобы избежать автоматического сжатия, когда это неудобно.</target>
        </trans-unit>
        <trans-unit id="d4d8aed3bf55796608219c0adac254008695a3f9" translate="yes" xml:space="preserve">
          <source>On some file system/operating system combinations, this is unreliable. Set this config setting to &lt;code&gt;rename&lt;/code&gt; there; However, This will remove the check that makes sure that existing object files will not get overwritten.</source>
          <target state="translated">В некоторых комбинациях файловая система / операционная система это ненадежно. Установите этот параметр конфигурации, чтобы &lt;code&gt;rename&lt;/code&gt; его; Однако при этом будет снята проверка, гарантирующая, что существующие объектные файлы не будут перезаписаны.</target>
        </trans-unit>
        <trans-unit id="5895edccc183158d9e3740d2cebb6ada4fc33444" translate="yes" xml:space="preserve">
          <source>On submit, re-author changes to reflect the Git author, regardless of who invokes &lt;code&gt;git p4 submit&lt;/code&gt;.</source>
          <target state="translated">При отправке повторно отредактируйте изменения, чтобы отразить автора Git, независимо от того, кто вызывает &lt;code&gt;git p4 submit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="625dc8e72565a5aa6c893e4054fd5a7bd4cd4c77" translate="yes" xml:space="preserve">
          <source>On success, the command returns the exit code 0.</source>
          <target state="translated">При успешном выполнении команда возвращает код выхода 0.</target>
        </trans-unit>
        <trans-unit id="990e4d4ec388fa2b56426ae37da6b01c179599b8" translate="yes" xml:space="preserve">
          <source>On success, the exit status is &lt;code&gt;0&lt;/code&gt;. If the filter can&amp;rsquo;t find any commits to rewrite, the exit status is &lt;code&gt;2&lt;/code&gt;. On any other error, the exit status may be any other non-zero value.</source>
          <target state="translated">В случае успеха статус выхода равен &lt;code&gt;0&lt;/code&gt; . Если фильтр не может найти никаких коммитов для перезаписи, статус выхода равен &lt;code&gt;2&lt;/code&gt; . При любой другой ошибке статус выхода может быть любым другим ненулевым значением.</target>
        </trans-unit>
        <trans-unit id="9b26f7834b511fe2fcda898a4f6a6ea24bf02deb" translate="yes" xml:space="preserve">
          <source>On the filesystem, a submodule usually (but not always - see FORMS below) consists of (i) a Git directory located under the &lt;code&gt;$GIT_DIR/modules/&lt;/code&gt; directory of its superproject, (ii) a working directory inside the superproject&amp;rsquo;s working directory, and a &lt;code&gt;.git&lt;/code&gt; file at the root of the submodule&amp;rsquo;s working directory pointing to (i).</source>
          <target state="translated">В файловой системе подмодуль обычно (но не всегда - см. ФОРМЫ ниже) состоит из (i) каталога Git, расположенного в &lt;code&gt;$GIT_DIR/modules/&lt;/code&gt; его суперпроекта, (ii) рабочего каталога внутри рабочего каталога суперпроекта и &lt;code&gt;.git&lt;/code&gt; файл в корневом каталоге рабочего каталога , указывающий подмодуль , чтобы (я).</target>
        </trans-unit>
        <trans-unit id="4db9025909f7f5bf5e13acbeaf805aa54cd01729" translate="yes" xml:space="preserve">
          <source>On the other hand if you do this often, then it can be worth having scripts to avoid too much typing.</source>
          <target state="translated">С другой стороны,если вы делаете это часто,то,возможно,стоит иметь скрипты,чтобы избежать слишком большого набора текста.</target>
        </trans-unit>
        <trans-unit id="683649c177c2041eda8a2d9bcca87e40a04a531c" translate="yes" xml:space="preserve">
          <source>On the other hand, if instead of merging at C you had rebased the history between Z to B on top of A, you would have gotten this linear history:</source>
          <target state="translated">С другой стороны,если бы вместо слияния в C вы перестроили историю между Z и B на вершине A,вы бы получили эту линейную историю:</target>
        </trans-unit>
        <trans-unit id="0322f18dd0193743bffa03c418d12c6fe0b24261" translate="yes" xml:space="preserve">
          <source>On the other hand, if you are fetching because you would want a one-shot merge from somebody else, you typically do not want to get tags from there. This happens more often for people near the toplevel but not limited to them. Mere mortals when pulling from each other do not necessarily want to automatically get private anchor point tags from the other person.</source>
          <target state="translated">С другой стороны,если вы хотите получить тэги от кого-то еще,то,как правило,не хотите получать их оттуда.Это случается чаще для людей,находящихся рядом с верхним уровнем,но не только для них.Простые смертные,вытягивая друг у друга,не обязательно хотят автоматически получать частные теги точки привязки от другого человека.</target>
        </trans-unit>
        <trans-unit id="ff26b6c1b15a595913b474bb862db9261a722064" translate="yes" xml:space="preserve">
          <source>On the other hand, when &lt;code&gt;git gc&lt;/code&gt; runs concurrently with another process, there is a risk of it deleting an object that the other process is using but hasn&amp;rsquo;t created a reference to. This may just cause the other process to fail or may corrupt the repository if the other process later adds a reference to the deleted object. Git has two features that significantly mitigate this problem:</source>
          <target state="translated">С другой стороны, когда &lt;code&gt;git gc&lt;/code&gt; выполняется одновременно с другим процессом, существует риск того, что он удалит объект, который другой процесс использует, но не создал ссылку. Это может просто вызвать сбой другого процесса или может повредить репозиторий, если другой процесс позже добавит ссылку на удаленный объект. В Git есть две функции, которые значительно смягчают эту проблему:</target>
        </trans-unit>
        <trans-unit id="9cc6a0108c9ca30d35fc16f0e158699698e2687d" translate="yes" xml:space="preserve">
          <source>On the plus side, distributed revision control systems can much better integrate with external sources. In a centralized model, a single arbitrary snapshot of the external project is exported from its own revision control and then imported into the local revision control on a vendor branch. All the history is hidden. With distributed revision control you can clone the entire external history and much more easily follow development and re-merge local changes.</source>
          <target state="translated">С другой стороны,распределенные системы контроля ревизий могут гораздо лучше интегрироваться с внешними источниками.В централизованной модели один произвольный снэпшот внешнего проекта экспортируется из собственного управления ревизиями,а затем импортируется в локальное управление ревизиями на ветке поставщика.Вся история скрыта.С помощью распределённого управления ревизиями вы можете клонировать всю внешнюю историю и гораздо проще следить за разработкой и перемерять локальные изменения.</target>
        </trans-unit>
        <trans-unit id="90597c320571938c2a30a9ec587f181632e3da9c" translate="yes" xml:space="preserve">
          <source>On the receiving side, failing fsckObjects will make those objects unreachable, see &quot;QUARANTINE ENVIRONMENT&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt;. On the fetch side, malformed objects will instead be left unreferenced in the repository.</source>
          <target state="translated">На принимающей стороне сбой fsckObjects сделает эти объекты недоступными, см. &quot;КАРАНТИННАЯ СРЕДА&quot; в &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]&lt;/a&gt; . На стороне выборки искаженные объекты вместо этого останутся без ссылок в репозитории.</target>
        </trans-unit>
        <trans-unit id="0cb32cbc06583a961d1463cba3f54ceac091ac9b" translate="yes" xml:space="preserve">
          <source>Once a patch completes the great cycle (moving from test to release, then pulled by Linus, and finally coming back into your local &lt;code&gt;origin/master&lt;/code&gt; branch), the branch for this change is no longer needed. You detect this when the output from:</source>
          <target state="translated">После того, как патч завершает большой цикл (переход от теста к выпуску, затем вытаскивается Линусом и, наконец, возвращается в вашу локальную &lt;code&gt;origin/master&lt;/code&gt; ветку), ветка для этого изменения больше не нужна. Вы обнаружите это, когда вывод:</target>
        </trans-unit>
        <trans-unit id="b9ebb68ceda33b5f55394a76815abe93f554d5a0" translate="yes" xml:space="preserve">
          <source>Once again, check to verify that you&amp;rsquo;ve included what you want to. You may also wish to verify that git diff doesn&amp;rsquo;t show any remaining changes to be committed later.</source>
          <target state="translated">Еще раз проверьте, что вы включили то, что хотите. Вы также можете убедиться, что git diff не показывает никаких оставшихся изменений, которые нужно зафиксировать позже.</target>
        </trans-unit>
        <trans-unit id="90e05562a65001025b0b72d96c6a4e4b947387b5" translate="yes" xml:space="preserve">
          <source>Once housekeeping is triggered by exceeding the limits of configuration options such as &lt;code&gt;gc.auto&lt;/code&gt; and &lt;code&gt;gc.autoPackLimit&lt;/code&gt;, all other housekeeping tasks (e.g. rerere, working trees, reflog&amp;hellip;​) will be performed as well.</source>
          <target state="translated">Как только обслуживание запускается путем превышения пределов параметров конфигурации, таких как &lt;code&gt;gc.auto&lt;/code&gt; и &lt;code&gt;gc.autoPackLimit&lt;/code&gt; , все другие служебные задачи (например, повторное повторение, рабочие деревья, reflog&amp;hellip;) также будут выполнены.</target>
        </trans-unit>
        <trans-unit id="e4fac50f608beca9583acae6e66b5b839bc7af82" translate="yes" xml:space="preserve">
          <source>Once satisfied with the hunks you want to include, you should verify what has been prepared for the first commit by using &lt;code&gt;git diff --cached&lt;/code&gt;. This shows all the changes that have been moved into the index and are about to be committed.</source>
          <target state="translated">Когда вы будете удовлетворены фрагментами, которые хотите включить, вам следует проверить, что было подготовлено для первого коммита, используя &lt;code&gt;git diff --cached&lt;/code&gt; . Это показывает все изменения, которые были перемещены в индекс и собираются зафиксировать.</target>
        </trans-unit>
        <trans-unit id="3dd9fb6970c316fd22de16c64bf93a0699f63f8d" translate="yes" xml:space="preserve">
          <source>Once the commits are ready to be sent, run the following command:</source>
          <target state="translated">Как только коммиты будут готовы к отправке,выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="bc0e79bf062114aed97a847d2dbf78bde74bcedc" translate="yes" xml:space="preserve">
          <source>Once the index has been created, the list of object names is sorted and the SHA-1 hash of that list is printed to stdout. If --stdin was also used then this is prefixed by either &quot;pack\t&quot;, or &quot;keep\t&quot; if a new .keep file was successfully created. This is useful to remove a .keep file used as a lock to prevent the race with &lt;code&gt;git repack&lt;/code&gt; mentioned above.</source>
          <target state="translated">После создания индекса список имен объектов сортируется, и хэш SHA-1 этого списка выводится на стандартный вывод. Если также использовалась опция --stdin, то перед ней стоит префикс &amp;laquo;pack \ t&amp;raquo; или &amp;laquo;keep \ t&amp;raquo;, если новый файл .keep был успешно создан. Это полезно для удаления файла .keep, который используется в качестве блокировки для предотвращения гонки с упомянутым выше &lt;code&gt;git repack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="267c8839170c35911e5505454167dce43ef8461e" translate="yes" xml:space="preserve">
          <source>Once the index is updated with the results of the conflict resolution, instead of creating a new commit, just run</source>
          <target state="translated">Как только индекс обновляется с результатами разрешения конфликта,вместо создания нового коммита,просто запускайте</target>
        </trans-unit>
        <trans-unit id="dce83a819a58902526be63ab88beb478ade1a830" translate="yes" xml:space="preserve">
          <source>Once tracking a Subversion repository (with any of the above methods), the Git repository can be updated from Subversion by the &lt;code&gt;fetch&lt;/code&gt; command and Subversion updated from Git by the &lt;code&gt;dcommit&lt;/code&gt; command.</source>
          <target state="translated">После отслеживания репозитория Subversion (любым из вышеперечисленных методов) репозиторий Git может быть обновлен из Subversion с помощью команды &lt;code&gt;fetch&lt;/code&gt; , а Subversion обновлен из Git с помощью команды &lt;code&gt;dcommit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7c323cf6aca82334469eb4ac31bb75f493bfcb2" translate="yes" xml:space="preserve">
          <source>Once you fetch from the remote repository, you &lt;code&gt;merge&lt;/code&gt; that with your current branch.</source>
          <target state="translated">После извлечения из удаленного репозитория вы &lt;code&gt;merge&lt;/code&gt; с текущей веткой.</target>
        </trans-unit>
        <trans-unit id="196d7a30344d61fce15a29277d1febbefab63366" translate="yes" xml:space="preserve">
          <source>Once you have packed objects, you do not need to leave the unpacked objects that are contained in the pack file anymore.</source>
          <target state="translated">После того,как вы упаковали объекты,вам больше не нужно оставлять распакованные объекты,которые содержатся в пакетном файле.</target>
        </trans-unit>
        <trans-unit id="19419c3fb2ffef21b9b034f5ca5d579751e9cffb" translate="yes" xml:space="preserve">
          <source>Once you have specified at least one bad and one good commit, &lt;code&gt;git
bisect&lt;/code&gt; selects a commit in the middle of that range of history, checks it out, and outputs something similar to the following:</source>
          <target state="translated">После того как вы указали хотя бы одну плохую и одну хорошую фиксацию, &lt;code&gt;git bisect&lt;/code&gt; выбирает фиксацию в середине этого диапазона истории, проверяет ее и выводит что-то похожее на следующее:</target>
        </trans-unit>
        <trans-unit id="a222e7e00ea22df97bc019f6fbda7d4a739d08f0" translate="yes" xml:space="preserve">
          <source>Once you know the three trees you are going to merge (the one &quot;original&quot; tree, aka the common tree, and the two &quot;result&quot; trees, aka the branches you want to merge), you do a &quot;merge&quot; read into the index. This will complain if it has to throw away your old index contents, so you should make sure that you&amp;rsquo;ve committed those&amp;mdash;​in fact you would normally always do a merge against your last commit (which should thus match what you have in your current index anyway).</source>
          <target state="translated">Как только вы узнаете три дерева, которые собираетесь объединить (одно &amp;laquo;исходное&amp;raquo; дерево, также известное как общее дерево, и два &amp;laquo;результирующих&amp;raquo; дерева, также называемые ветвями, которые вы хотите объединить), вы выполняете &amp;laquo;объединение&amp;raquo;, считывая индекс. Он будет жаловаться, если ему придется выбросить ваше старое содержимое индекса, поэтому вы должны убедиться, что вы их зафиксировали - на самом деле вы обычно всегда выполняете слияние с вашим последним коммитом (что, таким образом, должно соответствовать тому, что у вас есть в вашем в любом случае текущий индекс).</target>
        </trans-unit>
        <trans-unit id="2f6bdbc854c9f4a06850e81f40a40893a853f873" translate="yes" xml:space="preserve">
          <source>Once your commits are ready to be sent to the mailing list, run the following commands:</source>
          <target state="translated">Как только ваши коммиты будут готовы к отправке в список рассылки,выполните следующие команды:</target>
        </trans-unit>
        <trans-unit id="1e3411b288c5ece442ec5affcc9ccff7867288ff" translate="yes" xml:space="preserve">
          <source>One can also modify context lines by staging them for removal (by converting &quot; &quot; to &quot;-&quot;) and adding a &quot;+&quot; line with the new content. Similarly, one can modify &quot;+&quot; lines for existing additions or modifications. In all cases, the new modification will appear reverted in the working tree.</source>
          <target state="translated">Можно также модифицировать строки контекста,помещая их для удаления (конвертируя &quot; &quot; в &quot;-&quot;)и добавляя строку &quot;+&quot; к новому содержанию.Аналогичным образом,можно изменить строки с символом &quot;+&quot; для существующих дополнений или изменений.Во всех случаях новая модификация будет отображаться в рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="cefda8701820e17ff3e5c1f9d74674c9ba3ca4b0" translate="yes" xml:space="preserve">
          <source>One feature worth pointing out is the three-way merge, which can help if you get conflicts: &lt;code&gt;git am -3&lt;/code&gt; will use index information contained in patches to figure out the merge base. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; for other options.</source>
          <target state="translated">Одна особенность, на которую стоит обратить внимание, - это трехстороннее слияние, которое может помочь в случае возникновения конфликтов: &lt;code&gt;git am -3&lt;/code&gt; будет использовать информацию индекса, содержащуюся в патчах, для определения базы слияния. Другие варианты см. В &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91b115a828fd51fba09fc11d7213ae15c1c47544" translate="yes" xml:space="preserve">
          <source>One important aspect of Git is its distributed nature, which largely means there is no inherent &quot;upstream&quot; or &quot;downstream&quot; in the system. On the face of it, the above example might seem to indicate that the tag namespace is owned by the upper echelon of people and that tags only flow downwards, but that is not the case. It only shows that the usage pattern determines who are interested in whose tags.</source>
          <target state="translated">Одним из важных аспектов Git'а является его распределённая природа,что в значительной степени означает отсутствие в системе врождённого &quot;восходящего&quot; или &quot;нисходящего&quot; потока.На первый взгляд может показаться,что приведённый выше пример указывает на то,что пространство имён тегов принадлежит верхнему эшелону людей и что теги стекают только вниз,но это не так.Он только показывает,что шаблон использования определяет,кому чьи теги интересны.</target>
        </trans-unit>
        <trans-unit id="04ced8b13491984476dfed877ea62bd96c9df7a6" translate="yes" xml:space="preserve">
          <source>One major difference between &lt;code&gt;git submodule update&lt;/code&gt; and &lt;code&gt;git submodule add&lt;/code&gt; is that &lt;code&gt;git submodule update&lt;/code&gt; checks out a specific commit, rather than the tip of a branch. It&amp;rsquo;s like checking out a tag: the head is detached, so you&amp;rsquo;re not working on a branch.</source>
          <target state="translated">Одно из основных различий между &lt;code&gt;git submodule update&lt;/code&gt; и &lt;code&gt;git submodule add&lt;/code&gt; состоит в том, что &lt;code&gt;git submodule update&lt;/code&gt; проверяет конкретную фиксацию, а не вершину ветки. Это как проверка тега: голова отделена, значит, вы не работаете над веткой.</target>
        </trans-unit>
        <trans-unit id="8d6438f7bb62b577ed24501432d3010343f7c06f" translate="yes" xml:space="preserve">
          <source>One nice about &quot;git bisect&quot; is that it is not only a developer tool. It can effectively be used by QA people or even end users (if they have access to the source code or if they can get access to all the builds).</source>
          <target state="translated">Один из приятных моментов в &quot;git-бисекте&quot; заключается в том,что это не только инструмент для разработчиков.Он может эффективно использоваться людьми,отвечающими за контроль качества,или даже конечными пользователями (если у них есть доступ к исходным текстам или если они могут получить доступ ко всем сборкам).</target>
        </trans-unit>
        <trans-unit id="142f19dfe765b1c5ce574050578fa3bc8f7c4c07" translate="yes" xml:space="preserve">
          <source>One note: the special &lt;code&gt;master&lt;/code&gt; head is the default branch, which is why the &lt;code&gt;.git/HEAD&lt;/code&gt; file was created points to it even if it doesn&amp;rsquo;t yet exist. Basically, the &lt;code&gt;HEAD&lt;/code&gt; link is supposed to always point to the branch you are working on right now, and you always start out expecting to work on the &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">Одно замечание: специальная &lt;code&gt;master&lt;/code&gt; голова является ветвью по умолчанию, поэтому был создан файл &lt;code&gt;.git/HEAD&lt;/code&gt; , указывающий на нее, даже если он еще не существует. По сути, ссылка &lt;code&gt;HEAD&lt;/code&gt; должна всегда указывать на ветку, над которой вы работаете прямо сейчас, и вы всегда начинаете с ожидания работы над &lt;code&gt;master&lt;/code&gt; веткой.</target>
        </trans-unit>
        <trans-unit id="29a0c8f350324f991b248dd3aa593e11f5862130" translate="yes" xml:space="preserve">
          <source>One obvious improvement to this algorithm would be to look for a commit that has an associated value near the one of the best bisection commit, and that is on another branch, before using the PRNG. Because if such a commit exists, then it is not very likely to be untestable too, so it will probably give more information than a nearly randomly chosen one.</source>
          <target state="translated">Очевидным улучшением этого алгоритма является поиск коммита,который имеет ассоциированное значение рядом с одним из лучших биссектрисных коммитов,и который находится в другой ветке,перед использованием ГПСЧ.Потому что если такой коммит существует,то,скорее всего,он также не будет неоспорим,так что он,вероятно,даст больше информации,чем почти случайно выбранный коммит.</target>
        </trans-unit>
        <trans-unit id="e1159b72c8727d654a00df87bb5a62e68448d486" translate="yes" xml:space="preserve">
          <source>One of the following transports can be used to name the repository to download from:</source>
          <target state="translated">Один из следующих транспортов может быть использован для названия репозитория для загрузки:</target>
        </trans-unit>
        <trans-unit id="f2e9320213d36179f9f718d529b707eca70ac72d" translate="yes" xml:space="preserve">
          <source>One of the ideas of having a branch is that you do some (possibly experimental) work in it, and eventually merge it back to the main branch. So assuming you created the above &lt;code&gt;mybranch&lt;/code&gt; that started out being the same as the original &lt;code&gt;master&lt;/code&gt; branch, let&amp;rsquo;s make sure we&amp;rsquo;re in that branch, and do some work there.</source>
          <target state="translated">Одна из идей создания ветки заключается в том, что вы выполняете в ней некоторую (возможно, экспериментальную) работу и в конечном итоге объединяете ее с основной веткой. Таким образом , предполагается , что вы создали выше &lt;code&gt;mybranch&lt;/code&gt; , начавшаяся быть таким же , как оригинальный &lt;code&gt;master&lt;/code&gt; - ветви, давайте удостоверимся , что мы в этой отрасли, и там делать какую - то работу.</target>
        </trans-unit>
        <trans-unit id="07b5c446feb269c31391e3ec2cd0376191f84e84" translate="yes" xml:space="preserve">
          <source>One of the identifiers &quot;&lt;a href=&quot;#def_commit_object&quot;&gt;commit&lt;/a&gt;&quot;, &quot;&lt;a href=&quot;#def_tree_object&quot;&gt;tree&lt;/a&gt;&quot;, &quot;&lt;a href=&quot;#def_tag_object&quot;&gt;tag&lt;/a&gt;&quot; or &quot;&lt;a href=&quot;#def_blob_object&quot;&gt;blob&lt;/a&gt;&quot; describing the type of an &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="translated">Один из идентификаторов &amp;laquo; &lt;a href=&quot;#def_commit_object&quot;&gt;фиксация&lt;/a&gt; &amp;raquo;, &amp;laquo; &lt;a href=&quot;#def_tree_object&quot;&gt;дерево&lt;/a&gt; &amp;raquo;, &amp;laquo; &lt;a href=&quot;#def_tag_object&quot;&gt;тег&lt;/a&gt; &amp;raquo; или &amp;laquo; &lt;a href=&quot;#def_blob_object&quot;&gt;blob&lt;/a&gt; &amp;raquo;, описывающий тип &lt;a href=&quot;#def_object&quot;&gt;объекта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cfd499f1faa2bf47281b08252a27709dbf65c31" translate="yes" xml:space="preserve">
          <source>One or more of the options below may be used to determine the files shown:</source>
          <target state="translated">Для определения показанных файлов может быть использована одна или несколько из приведенных ниже опций:</target>
        </trans-unit>
        <trans-unit id="5fdc57e5472e4e105b70357796e6b6c7c9687799" translate="yes" xml:space="preserve">
          <source>One or more of the provided paths is ignored.</source>
          <target state="translated">Один или несколько из предоставленных путей игнорируются.</target>
        </trans-unit>
        <trans-unit id="fa8d672b6bbfcb201a67403df350a9a5a712d006" translate="yes" xml:space="preserve">
          <source>One phase in branch detection involves looking at p4 branches to find new ones to import. By default, all branches are inspected. This option limits the search to just those owned by the single user named in the variable.</source>
          <target state="translated">Один из этапов обнаружения ветки заключается в просмотре ветки p4 для поиска новых ветвей для импорта.По умолчанию проверяются все ветки.Эта опция ограничивает поиск только теми,которые принадлежат одному пользователю,указанному в переменной.</target>
        </trans-unit>
        <trans-unit id="11468bd4c23009003db390c522332f7c3d2a8eae" translate="yes" xml:space="preserve">
          <source>One problem with &quot;git replace&quot; is that currently it stores all the replacements refs in &quot;refs/replace/&quot;, but it would be perhaps better if the replacement refs that are useful only for bisecting would be in &quot;refs/replace/bisect/&quot;. This way the replacement refs could be used only for bisecting, while other refs directly in &quot;refs/replace/&quot; would be used nearly all the time.</source>
          <target state="translated">Одна из проблем с &quot;git-замещением&quot; заключается в том,что в настоящее время все заменяемые ссылки хранятся в &quot;refs/replace/&quot;,но,возможно,было бы лучше,если бы замена ссылок,полезная только для биссектрисы,была бы в &quot;refs/replace/bisect/&quot;.Таким образом,заменяющие ссылки могут использоваться только для биссектрисы,в то время как другие ссылки непосредственно в &quot;refs/replace/&quot; будут использоваться почти постоянно.</target>
        </trans-unit>
        <trans-unit id="d1e2a86cedb580a377c28acdbf81410bf88bf79b" translate="yes" xml:space="preserve">
          <source>One record (for project / repository) per line; does not support line continuation (newline escaping).</source>
          <target state="translated">Одна запись (для проекта/репозитория)на линию;не поддерживает продолжение линии (экранирование новой линии).</target>
        </trans-unit>
        <trans-unit id="8e018f50410d5f4a4feb43d8b0ec18d17af4444c" translate="yes" xml:space="preserve">
          <source>One such software is the Linux kernel. And if we look at the Linux kernel, we can see that a lot of time and effort is spent to fight regressions. The release cycle start with a 2 weeks long merge window. Then the first release candidate (rc) version is tagged. And after that about 7 or 8 more rc versions will appear with around one week between each of them, before the final release.</source>
          <target state="translated">Одним из таких программ является ядро Linux.И если мы посмотрим на ядро Linux,то увидим,что много времени и усилий тратится на борьбу с регрессиями.Цикл выпуска начинается с 2-х недельного окна слияния.Затем помечается первая версия кандидата на выпуск (rc).А после этого появится еще около 7 или 8 rc-версий,с промежутком примерно в одну неделю между каждой из них,до окончательного релиза.</target>
        </trans-unit>
        <trans-unit id="bdac2081c61d66c365f2d2f97739c2e3f666a74e" translate="yes" xml:space="preserve">
          <source>One usage scenario is to run unit tests in the hook.</source>
          <target state="translated">Один сценарий использования-запуск модульных тестов на крючке.</target>
        </trans-unit>
        <trans-unit id="f9e9013eccf2a70e5a5f30b1ea62b3495fc5c835" translate="yes" xml:space="preserve">
          <source>One use of the content filtering is to massage the content into a shape that is more convenient for the platform, filesystem, and the user to use. For this mode of operation, the key phrase here is &quot;more convenient&quot; and not &quot;turning something unusable into usable&quot;. In other words, the intent is that if someone unsets the filter driver definition, or does not have the appropriate filter program, the project should still be usable.</source>
          <target state="translated">Одним из видов использования контентной фильтрации является массаж контента в форму,более удобную для платформы,файловой системы и пользователя.Для такого режима работы ключевым словосочетанием здесь является &quot;удобнее&quot;,а не &quot;превратить что-то непригодное в полезное&quot;.Другими словами,цель состоит в том,что если кто-то снимет определение фильтрующего драйвера,или у него не будет соответствующей фильтрующей программы,то проект все равно должен быть пригоден для использования.</target>
        </trans-unit>
        <trans-unit id="bf346c4d1c8b72f5f128424640398ae0ca4f5b99" translate="yes" xml:space="preserve">
          <source>One way to test if your MUA is set up correctly is:</source>
          <target state="translated">Один из способов проверить,правильно ли настроен ваш MUA:</target>
        </trans-unit>
        <trans-unit id="b7da7d48889d5c708679796bf76623241882d879" translate="yes" xml:space="preserve">
          <source>Only allow viewing of repositories also shown on the overview page. This for example makes &lt;code&gt;$export_ok&lt;/code&gt; file decide if repository is available and not only if it is shown. If &lt;code&gt;$projects_list&lt;/code&gt; points to file with list of project, only those repositories listed would be available for gitweb. Can be set during building gitweb via &lt;code&gt;GITWEB_STRICT_EXPORT&lt;/code&gt;. By default this variable is not set, which means that you can directly access those repositories that are hidden from projects list page (e.g. the are not listed in the $projects_list file).</source>
          <target state="translated">Разрешить просмотр только репозиториев, которые также отображаются на странице обзора. Это, например, заставляет файл &lt;code&gt;$export_ok&lt;/code&gt; решать, доступен ли репозиторий, а не только если он отображается. Если &lt;code&gt;$projects_list&lt;/code&gt; указывает на файл со списком проектов, только перечисленные репозитории будут доступны для gitweb. Можно установить во время сборки gitweb через &lt;code&gt;GITWEB_STRICT_EXPORT&lt;/code&gt; . По умолчанию эта переменная не установлена, что означает, что вы можете получить прямой доступ к тем репозиториям, которые скрыты на странице списка проектов (например, не указаны в файле $ projects_list).</target>
        </trans-unit>
        <trans-unit id="a9db6957ecdccb26c443588b379fe63817da234e" translate="yes" xml:space="preserve">
          <source>Only anonymous access is provided by pserve by default. To commit you will have to create pserver accounts, simply add a gitcvs.authdb setting in the config file of the repositories you want the cvsserver to allow writes to, for example:</source>
          <target state="translated">По умолчанию pserve предоставляет только анонимный доступ.Для фиксации вам нужно будет создать учётные записи на pserver,просто добавьте настройку gitcvs.authdb в конфигурационный файл репозиториев,в которые вы хотите,чтобы cvsserver разрешил запись,например:</target>
        </trans-unit>
        <trans-unit id="f8de1f9ddde9f99ee756c31ae048d708dda7832c" translate="yes" xml:space="preserve">
          <source>Only bind the web server to the local IP (127.0.0.1).</source>
          <target state="translated">Привязывайте веб-сервер только к локальному IP (127.0.0.1).</target>
        </trans-unit>
        <trans-unit id="914060d4007bba68d0e5b57a08eb8520cbc0281b" translate="yes" xml:space="preserve">
          <source>Only consider tags matching the given &lt;code&gt;glob(7)&lt;/code&gt; pattern, excluding the &quot;refs/tags/&quot; prefix. If used with &lt;code&gt;--all&lt;/code&gt;, it also considers local branches and remote-tracking references matching the pattern, excluding respectively &quot;refs/heads/&quot; and &quot;refs/remotes/&quot; prefix; references of other types are never considered. If given multiple times, a list of patterns will be accumulated, and tags matching any of the patterns will be considered. Use &lt;code&gt;--no-match&lt;/code&gt; to clear and reset the list of patterns.</source>
          <target state="translated">Учитывайте только теги, соответствующие заданному шаблону &lt;code&gt;glob(7)&lt;/code&gt; , за исключением префикса &quot;refs / tags /&quot;. Если используется с &lt;code&gt;--all&lt;/code&gt; , он также учитывает локальные ветки и ссылки удаленного отслеживания, соответствующие шаблону, за исключением соответственно префикса &amp;laquo;refs / heads /&amp;raquo; и &amp;laquo;refs / remotes /&amp;raquo;; ссылки других типов никогда не рассматриваются. Если задано несколько раз, будет накапливаться список шаблонов, и будут учитываться теги, соответствующие любому из шаблонов. Используйте &lt;code&gt;--no-match&lt;/code&gt; , чтобы очистить и сбросить список шаблонов.</target>
        </trans-unit>
        <trans-unit id="941066ff4f5ea2a1056ac361a36573c125ff04f2" translate="yes" xml:space="preserve">
          <source>Only create a packed archive if it would contain at least one object.</source>
          <target state="translated">Создавайте упакованный архив только в том случае,если он будет содержать хотя бы один объект.</target>
        </trans-unit>
        <trans-unit id="83ca14f8cd2c9566aaa74ad9a438e0a15bc783b9" translate="yes" xml:space="preserve">
          <source>Only expire loose objects older than &amp;lt;time&amp;gt;.</source>
          <target state="translated">Только устаревшие объекты старше &amp;lt;time&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="d50becec82fb156672fd24c1ecb55cefe6d9b0c0" translate="yes" xml:space="preserve">
          <source>Only list branches of the given object.</source>
          <target state="translated">Перечислять только ветви данного объекта.</target>
        </trans-unit>
        <trans-unit id="ae8314faed018be3007d334a54cd4f7b3bde067a" translate="yes" xml:space="preserve">
          <source>Only list branches which contain the specified commit (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;.</source>
          <target state="translated">Только те ветви списка, которые содержат указанный коммит (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b39fcb7ccfd206d2a11b5cac77f876ebbcdc59a6" translate="yes" xml:space="preserve">
          <source>Only list branches which don&amp;rsquo;t contain the specified commit (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;.</source>
          <target state="translated">Список только ветвей, которые не содержат указанный коммит (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d91bc93b24e96b92cd74b3016507c8892f02d8e" translate="yes" xml:space="preserve">
          <source>Only list branches whose tips are not reachable from the specified commit (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;, incompatible with &lt;code&gt;--merged&lt;/code&gt;.</source>
          <target state="translated">Перечислить только ветки, концы которых недоступны из указанного коммита (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; , несовместимо с &lt;code&gt;--merged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="368e1f5311ab357c6579dd2598d3554e5f69ab7b" translate="yes" xml:space="preserve">
          <source>Only list branches whose tips are reachable from the specified commit (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;, incompatible with &lt;code&gt;--no-merged&lt;/code&gt;.</source>
          <target state="translated">Перечислить только ветки, советы которых доступны из указанного коммита (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; , несовместимый с &lt;code&gt;--no-merged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc004fe98c7c853edcd721c4a4743bbe17dc0ceb" translate="yes" xml:space="preserve">
          <source>Only list refs which contain the specified commit (HEAD if not specified).</source>
          <target state="translated">Только список ссылок,которые содержат указанный коммит (HEAD,если не указано).</target>
        </trans-unit>
        <trans-unit id="53301ab6d13e8c23069a84dba2acf3daf5a67784" translate="yes" xml:space="preserve">
          <source>Only list refs which don&amp;rsquo;t contain the specified commit (HEAD if not specified).</source>
          <target state="translated">Список только тех ссылок, которые не содержат указанный коммит (HEAD, если не указан).</target>
        </trans-unit>
        <trans-unit id="13917fddfb76486aac0b6b32382a8222d7ef7129" translate="yes" xml:space="preserve">
          <source>Only list refs which points at the given object.</source>
          <target state="translated">Перечисляет только ссылки,которые указывают на данный объект.</target>
        </trans-unit>
        <trans-unit id="d63446ed3ed439dd64fa48118858d7dc8f885568" translate="yes" xml:space="preserve">
          <source>Only list refs whose tips are not reachable from the specified commit (HEAD if not specified), incompatible with &lt;code&gt;--merged&lt;/code&gt;.</source>
          <target state="translated">Список только тех ссылок, чьи советы недоступны из указанного коммита (HEAD, если не указан), несовместимо с &lt;code&gt;--merged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4d24af2a09941026de883e7412997a62ab6d500" translate="yes" xml:space="preserve">
          <source>Only list refs whose tips are reachable from the specified commit (HEAD if not specified), incompatible with &lt;code&gt;--no-merged&lt;/code&gt;.</source>
          <target state="translated">Список только тех ссылок, советы которых доступны из указанного коммита (HEAD, если не указан), несовместимых с &lt;code&gt;--no-merged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="817a4e30ee524e4266621c0a4648ab3909ffeed4" translate="yes" xml:space="preserve">
          <source>Only list tags of the given object (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;.</source>
          <target state="translated">Только перечислить теги данного объекта (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83f1d08e3476b4b0f43eedc9885a23e56ff396f3" translate="yes" xml:space="preserve">
          <source>Only list tags which contain the specified commit (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;.</source>
          <target state="translated">Список только тегов, которые содержат указанную фиксацию (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bae480f98a8915919a61381cb993558ff75823a" translate="yes" xml:space="preserve">
          <source>Only list tags which don&amp;rsquo;t contain the specified commit (HEAD if not specified). Implies &lt;code&gt;--list&lt;/code&gt;.</source>
          <target state="translated">Список только тегов, которые не содержат указанную фиксацию (HEAD, если не указан). Подразумевает &lt;code&gt;--list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db9714bdab86b2c5263129a27ca40bb06f5dcdf2" translate="yes" xml:space="preserve">
          <source>Only list tags whose commits are not reachable from the specified commit (&lt;code&gt;HEAD&lt;/code&gt; if not specified), incompatible with &lt;code&gt;--merged&lt;/code&gt;.</source>
          <target state="translated">Список только тегов, коммиты которых недоступны из указанного коммита ( &lt;code&gt;HEAD&lt;/code&gt; , если не указан), несовместимо с &lt;code&gt;--merged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c62aa2054943bc2c5749c5693c2757ab8e53449" translate="yes" xml:space="preserve">
          <source>Only list tags whose commits are reachable from the specified commit (&lt;code&gt;HEAD&lt;/code&gt; if not specified), incompatible with &lt;code&gt;--no-merged&lt;/code&gt;.</source>
          <target state="translated">Список только тегов, коммиты которых достижимы из указанного коммита ( &lt;code&gt;HEAD&lt;/code&gt; , если не указан), несовместимых с &lt;code&gt;--no-merged&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0cdb0cde0c40de0beaaced5d658f2a7018630fe" translate="yes" xml:space="preserve">
          <source>Only look at the history which touches the given subdirectory. The result will contain that directory (and only that) as its project root. Implies &lt;a href=&quot;#Remap_to_ancestor&quot;&gt;Remap to ancestor&lt;/a&gt;.</source>
          <target state="translated">Посмотрите только на историю, которая касается данного подкаталога. Результат будет содержать этот каталог (и только он) в качестве корня проекта. Подразумевает &lt;a href=&quot;#Remap_to_ancestor&quot;&gt;переназначение на предка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2bbdf47a64eee45ee95696813788d11863c01152" translate="yes" xml:space="preserve">
          <source>Only meaningful in &lt;code&gt;--parseopt&lt;/code&gt; mode. Lets the option parser stop at the first non-option argument. This can be used to parse sub-commands that take options themselves.</source>
          <target state="translated">&lt;code&gt;--parseopt&lt;/code&gt; смысл только в режиме --parseopt . Позволяет синтаксическому анализатору параметров останавливаться на первом аргументе, не являющемся параметром. Это можно использовать для анализа подкоманд, которые сами принимают параметры.</target>
        </trans-unit>
        <trans-unit id="d8057f98f6fd66c86adb34f091c531e316f7ca42" translate="yes" xml:space="preserve">
          <source>Only meaningful in &lt;code&gt;--parseopt&lt;/code&gt; mode. Output the options in their long form if available, and with their arguments stuck.</source>
          <target state="translated">&lt;code&gt;--parseopt&lt;/code&gt; смысл только в режиме --parseopt . Выведите варианты в их развернутой форме, если они доступны, и с закрепленными аргументами.</target>
        </trans-unit>
        <trans-unit id="6000fe90599266e72e627572d6cdbc969916ee02" translate="yes" xml:space="preserve">
          <source>Only meaningful in &lt;code&gt;--parseopt&lt;/code&gt; mode. Tells the option parser to echo out the first &lt;code&gt;--&lt;/code&gt; met instead of skipping it.</source>
          <target state="translated">&lt;code&gt;--parseopt&lt;/code&gt; смысл только в режиме --parseopt . Сообщает параметр анализатор эхо из первого &lt;code&gt;--&lt;/code&gt; встретился вместо того , чтобы пропускать его.</target>
        </trans-unit>
        <trans-unit id="fd3f5d99fba63ca8e5d281298074650f7e9548b0" translate="yes" xml:space="preserve">
          <source>Only meaningful in &lt;code&gt;--verify&lt;/code&gt; mode. Do not output an error message if the first argument is not a valid object name; instead exit with non-zero status silently. SHA-1s for valid object names are printed to stdout on success.</source>
          <target state="translated">Имеет смысл только в режиме &lt;code&gt;--verify&lt;/code&gt; . Не выводите сообщение об ошибке, если первый аргумент не является допустимым именем объекта; вместо этого выйдите с ненулевым статусом молча. SHA-1 для допустимых имен объектов выводятся на стандартный вывод в случае успеха.</target>
        </trans-unit>
        <trans-unit id="94590902338d0f64df58223a7c9238b6579f4aae" translate="yes" xml:space="preserve">
          <source>Only meaningful with &lt;code&gt;--pathspec-from-file&lt;/code&gt;. Pathspec elements are separated with NUL character and all other characters are taken literally (including newlines and quotes).</source>
          <target state="translated">&lt;code&gt;--pathspec-from-file&lt;/code&gt; смысл только с --pathspec-from-file . Элементы Pathspec разделяются символом NUL, а все остальные символы воспринимаются буквально (включая символы новой строки и кавычки).</target>
        </trans-unit>
        <trans-unit id="0ecebefb0a1162c42954005e600970eacea40ab1" translate="yes" xml:space="preserve">
          <source>Only meaningful with &lt;code&gt;--stdin&lt;/code&gt; or &lt;code&gt;--index-info&lt;/code&gt;; paths are separated with NUL character instead of LF.</source>
          <target state="translated">&lt;code&gt;--stdin&lt;/code&gt; смысл только с --stdin или &lt;code&gt;--index-info&lt;/code&gt; ; пути разделяются символом NUL вместо LF.</target>
        </trans-unit>
        <trans-unit id="6ad4315a7f6c11660aa6c643c4b95eaab7a8d728" translate="yes" xml:space="preserve">
          <source>Only meaningful with &lt;code&gt;--stdin&lt;/code&gt;; paths are separated with NUL character instead of LF.</source>
          <target state="translated">&lt;code&gt;--stdin&lt;/code&gt; смысл только с --stdin ; пути разделяются символом NUL вместо LF.</target>
        </trans-unit>
        <trans-unit id="2ebb91d27792ee23446f1d49f12e2e8cf850fef7" translate="yes" xml:space="preserve">
          <source>Only necessary if --compose is also set. If --compose is not set, this will be prompted for.</source>
          <target state="translated">Это необходимо только в том случае,если также настроен -состав.Если параметр -состав не установлен,будет выдан запрос.</target>
        </trans-unit>
        <trans-unit id="3a2cfa8e4dfa7576e427c217c4a335798a141827" translate="yes" xml:space="preserve">
          <source>Only one parameter should be set to &quot;1&quot; when the hook runs. The hook running passing &quot;1&quot;, &quot;1&quot; should not be possible.</source>
          <target state="translated">Только один параметр должен быть установлен на &quot;1&quot;,когда крючок работает.Прохождение крюка через &quot;1&quot;,&quot;1&quot; не должно быть возможным.</target>
        </trans-unit>
        <trans-unit id="bf7e12b67481a70907ee19a1cd34bdb9c2cfbcbb" translate="yes" xml:space="preserve">
          <source>Only output exact matches (a tag directly references the supplied commit). This is a synonym for --candidates=0.</source>
          <target state="translated">Выводить только точные совпадения (тэг напрямую ссылается на поставляемый коммит).Это синоним для --candidates=0.</target>
        </trans-unit>
        <trans-unit id="16dbfb260245eaec3998212f13b1a52e2d286e0a" translate="yes" xml:space="preserve">
          <source>Only p4 labels matching this regular expression will be exported. The default value is &lt;code&gt;[a-zA-Z0-9_\-.]+$&lt;/code&gt;.</source>
          <target state="translated">Будут экспортированы только метки p4, соответствующие этому регулярному выражению. Значение по умолчанию - &lt;code&gt;[a-zA-Z0-9_\-.]+$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb8bb30ea7ba21536e78e1ff49007a02268174b" translate="yes" xml:space="preserve">
          <source>Only p4 labels matching this regular expression will be imported. The default value is &lt;code&gt;[a-zA-Z0-9_\-.]+$&lt;/code&gt;.</source>
          <target state="translated">Будут импортированы только метки p4, соответствующие этому регулярному выражению. Значение по умолчанию - &lt;code&gt;[a-zA-Z0-9_\-.]+$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2fdb861f4cc24f6e2448e8ab0d3c248ec24997f" translate="yes" xml:space="preserve">
          <source>Only perform tests on the working directory to make sure untracked cache can be used. You have to manually enable untracked cache using &lt;code&gt;--untracked-cache&lt;/code&gt; or &lt;code&gt;--force-untracked-cache&lt;/code&gt; or the &lt;code&gt;core.untrackedCache&lt;/code&gt; configuration variable afterwards if you really want to use it. If a test fails the exit code is 1 and a message explains what is not working as needed, otherwise the exit code is 0 and OK is printed.</source>
          <target state="translated">Выполняйте тесты только в рабочем каталоге, чтобы убедиться, что можно использовать неотслеживаемый кеш. Вам необходимо вручную включить неотслеживаемый кеш, используя &lt;code&gt;--untracked-cache&lt;/code&gt; или &lt;code&gt;--force-untracked-cache&lt;/code&gt; или &lt;code&gt;core.untrackedCache&lt;/code&gt; конфигурации core.untrackedCache, если вы действительно хотите ее использовать. Если тест не проходит, код выхода равен 1, а сообщение объясняет, что не работает должным образом, в противном случае код выхода равен 0 и печатается ОК.</target>
        </trans-unit>
        <trans-unit id="9b88e48a96d98ad3b76de8b5d274db692fc6b29c" translate="yes" xml:space="preserve">
          <source>Only print error and warning messages; all other output will be suppressed.</source>
          <target state="translated">Печатайте только сообщения об ошибках и предупреждения;все остальные выходные данные будут подавлены.</target>
        </trans-unit>
        <trans-unit id="3791d8648f923430d0795b4e9f5031ac211bf7f1" translate="yes" xml:space="preserve">
          <source>Only print error messages.</source>
          <target state="translated">Печатайте только сообщения об ошибках.</target>
        </trans-unit>
        <trans-unit id="affbeb73b1dd267a08167d9ea74afe477ad3529f" translate="yes" xml:space="preserve">
          <source>Only show the SHA-1 hash, not the reference name. When combined with --dereference the dereferenced tag will still be shown after the SHA-1.</source>
          <target state="translated">Покажите только SHA-1 хэш,а не ссылочное имя.При объединении с --dereference разыменованная метка все равно будет показана после SHA-1.</target>
        </trans-unit>
        <trans-unit id="74a12c610ac9d71beb7074574ccb847224f9f712" translate="yes" xml:space="preserve">
          <source>Only show the given commits, but do not traverse their ancestors. This has no effect if a range is specified. If the argument &lt;code&gt;unsorted&lt;/code&gt; is given, the commits are shown in the order they were given on the command line. Otherwise (if &lt;code&gt;sorted&lt;/code&gt; or no argument was given), the commits are shown in reverse chronological order by commit time. Cannot be combined with &lt;code&gt;--graph&lt;/code&gt;.</source>
          <target state="translated">Показывать только данные коммиты, но не пересекать их предков. Это не действует, если указан диапазон. Если указан аргумент без &lt;code&gt;unsorted&lt;/code&gt; , коммиты отображаются в том порядке, в котором они были указаны в командной строке. В противном случае (если &lt;code&gt;sorted&lt;/code&gt; или аргумент не задан), фиксации отображаются в обратном хронологическом порядке по времени фиксации. Не может сочетаться с &lt;code&gt;--graph&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ed956e65db38a49fac1dac50248e7edb1c43fb7" translate="yes" xml:space="preserve">
          <source>Only submodules using a gitfile (which means they were cloned with a Git version 1.7.8 or newer) will be removed from the work tree, as their repository lives inside the .git directory of the superproject. If a submodule (or one of those nested inside it) still uses a .git directory, &lt;code&gt;git rm&lt;/code&gt; will move the submodules git directory into the superprojects git directory to protect the submodule&amp;rsquo;s history. If it exists the submodule.&amp;lt;name&amp;gt; section in the &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; file will also be removed and that file will be staged (unless --cached or -n are used).</source>
          <target state="translated">Только подмодули, использующие gitfile (что означает, что они были клонированы с версией Git 1.7.8 или новее), будут удалены из рабочего дерева, поскольку их репозиторий находится внутри каталога .git суперпроекта. Если подмодуль (или один из вложенных в него) по-прежнему использует каталог .git, &lt;code&gt;git rm&lt;/code&gt; переместит каталог git подмодулей в каталог git суперпроектов для защиты истории подмодуля. Если он существует, раздел &lt;a href=&quot;gitmodules&quot;&gt;submodule&lt;/a&gt; . &amp;lt;name&amp;gt; в файле gitmodules [5] также будет удален, и этот файл будет поставлен (если не используются --cached или -n).</target>
        </trans-unit>
        <trans-unit id="f3b6918bb732fd2722633a305233dd0ec34bff15" translate="yes" xml:space="preserve">
          <source>Only takes effect for dates shown in human-readable format, such as when using &lt;code&gt;--pretty&lt;/code&gt;. &lt;code&gt;log.date&lt;/code&gt; config variable sets a default value for the log command&amp;rsquo;s &lt;code&gt;--date&lt;/code&gt; option. By default, dates are shown in the original time zone (either committer&amp;rsquo;s or author&amp;rsquo;s). If &lt;code&gt;-local&lt;/code&gt; is appended to the format (e.g., &lt;code&gt;iso-local&lt;/code&gt;), the user&amp;rsquo;s local time zone is used instead.</source>
          <target state="translated">&lt;code&gt;--pretty&lt;/code&gt; только для дат, отображаемых в удобочитаемом формате, например, при использовании --pretty . &lt;code&gt;log.date&lt;/code&gt; конфигурации log.date устанавливает значение по умолчанию для параметра &lt;code&gt;--date&lt;/code&gt; команды журнала . По умолчанию даты отображаются в исходном часовом поясе (либо коммиттера, либо автора). Если к формату добавлено &lt;code&gt;-local&lt;/code&gt; (например, &lt;code&gt;iso-local&lt;/code&gt; ), вместо этого используется местный часовой пояс пользователя.</target>
        </trans-unit>
        <trans-unit id="28227446e42814d459bad1017137f194a3d411bf" translate="yes" xml:space="preserve">
          <source>Only the initial ref advertisement is output, and the program exits immediately. This fits with the HTTP GET request model, where no request content is received but a response must be produced.</source>
          <target state="translated">Выводится только первоначальная реклама рефлексии,и программа немедленно выходит из программы.Это соответствует модели HTTP GET запроса,где не получается содержимое запроса,но должен быть получен ответ.</target>
        </trans-unit>
        <trans-unit id="d70e32ee66c9f176a2ec41ee4464e248b98de054" translate="yes" xml:space="preserve">
          <source>Only the rev_map and refs/remotes/git-svn are changed (see &lt;code&gt;$GIT_DIR/svn/**/.rev_map.*&lt;/code&gt; in the FILES section below for details). Follow &lt;code&gt;reset&lt;/code&gt; with a &lt;code&gt;fetch&lt;/code&gt; and then &lt;code&gt;git reset&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt; to move local branches onto the new tree.</source>
          <target state="translated">Изменяются только rev_map и refs / remotes / git-svn (подробности см. В &lt;code&gt;$GIT_DIR/svn/**/.rev_map.*&lt;/code&gt; В разделе ФАЙЛЫ ниже). Выполните &lt;code&gt;reset&lt;/code&gt; с помощью &lt;code&gt;fetch&lt;/code&gt; а затем &lt;code&gt;git reset&lt;/code&gt; или &lt;code&gt;git rebase&lt;/code&gt; , чтобы переместить локальные ветви в новое дерево.</target>
        </trans-unit>
        <trans-unit id="32e7b8a674c1b57420afbf6e783864cc587eae94" translate="yes" xml:space="preserve">
          <source>Only the selected commits are shown, plus some to have a meaningful history.</source>
          <target state="translated">Показываются только выбранные коммиты,плюс некоторые для того,чтобы иметь осмысленную историю.</target>
        </trans-unit>
        <trans-unit id="5988bcb17bfff8bdefbf4f11c653c30a84ac354c" translate="yes" xml:space="preserve">
          <source>Only untracked files in submodules will be ignored. Committed differences and modifications to tracked files will show up.</source>
          <target state="translated">Только неотслеживаемые файлы в подмодулях будут проигнорированы.Появятся зафиксированные различия и модификации отслеживаемых файлов.</target>
        </trans-unit>
        <trans-unit id="a35d5f8b7ffccc1327ae3b4b170fadaf17be62a8" translate="yes" xml:space="preserve">
          <source>Only update and add files to the working directory, but don&amp;rsquo;t delete them, similar to how 'cp -R' would update the contents in the destination directory. This is the default mode in a &lt;a href=&quot;#def_checkout&quot;&gt;checkout&lt;/a&gt; when checking out files from the &lt;a href=&quot;#def_index&quot;&gt;index&lt;/a&gt; or a &lt;a href=&quot;#def_tree-ish&quot;&gt;tree-ish&lt;/a&gt;. In contrast, no-overlay mode also deletes tracked files not present in the source, similar to 'rsync --delete'.</source>
          <target state="translated">Обновляйте и добавляйте файлы только в рабочий каталог, но не удаляйте их, подобно тому, как 'cp -R' обновляет содержимое в целевом каталоге. Это режим по умолчанию при &lt;a href=&quot;#def_checkout&quot;&gt;извлечении&lt;/a&gt; файлов из &lt;a href=&quot;#def_index&quot;&gt;индекса&lt;/a&gt; или &lt;a href=&quot;#def_tree-ish&quot;&gt;дерева&lt;/a&gt; . В отличие от этого, режим без наложения также удаляет отслеживаемые файлы, отсутствующие в источнике, аналогично rsync --delete.</target>
        </trans-unit>
        <trans-unit id="a09a6feef23c1bf8bf8489c07fa754b0e3467e64" translate="yes" xml:space="preserve">
          <source>Only update and add files to the working directory, but don&amp;rsquo;t delete them, similar to how &lt;code&gt;cp -R&lt;/code&gt; would update the contents in the destination directory. This is the default mode in a &lt;a href=&quot;#def_checkout&quot;&gt;checkout&lt;/a&gt; when checking out files from the &lt;a href=&quot;#def_index&quot;&gt;index&lt;/a&gt; or a &lt;a href=&quot;#def_tree-ish&quot;&gt;tree-ish&lt;/a&gt;. In contrast, no-overlay mode also deletes tracked files not present in the source, similar to &lt;code&gt;rsync --delete&lt;/code&gt;.</source>
          <target state="translated">Обновляйте и добавляйте файлы только в рабочий каталог, но не удаляйте их, подобно тому, как &lt;code&gt;cp -R&lt;/code&gt; обновит содержимое в целевом каталоге. Это режим по умолчанию при &lt;a href=&quot;#def_checkout&quot;&gt;извлечении&lt;/a&gt; файлов из &lt;a href=&quot;#def_index&quot;&gt;индекса&lt;/a&gt; или &lt;a href=&quot;#def_tree-ish&quot;&gt;дерева&lt;/a&gt; . В отличие от этого режим без наложения также удаляет отслеживаемые файлы, отсутствующие в источнике, аналогично &lt;code&gt;rsync --delete&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd6ac5160ec46e3d1df2371d183d50a5e06ffdbe" translate="yes" xml:space="preserve">
          <source>Only use refs whose names match a given shell pattern. The pattern can be one of branch name, tag name or fully qualified ref name. If given multiple times, use refs whose names match any of the given shell patterns. Use &lt;code&gt;--no-refs&lt;/code&gt; to clear any previous ref patterns given.</source>
          <target state="translated">Используйте только те ссылки, имена которых соответствуют заданному шаблону оболочки. Шаблон может быть одним из имени ветки, имени тега или полного имени ссылки. Если указано несколько раз, используйте ссылки, имена которых соответствуют любому из заданных шаблонов оболочки. Используйте &lt;code&gt;--no-refs&lt;/code&gt; , чтобы очистить все предыдущие заданные шаблоны ссылок.</target>
        </trans-unit>
        <trans-unit id="2d533153e7612cafa4bc7b83b50dd3abb697af0e" translate="yes" xml:space="preserve">
          <source>Only used with the &lt;code&gt;dcommit&lt;/code&gt;, &lt;code&gt;set-tree&lt;/code&gt; and &lt;code&gt;commit-diff&lt;/code&gt; commands.</source>
          <target state="translated">Используется только с &lt;code&gt;dcommit&lt;/code&gt; , &lt;code&gt;set-tree&lt;/code&gt; и &lt;code&gt;commit-diff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="901e1e4a237282bb48e582bb5bf0599881cd0084" translate="yes" xml:space="preserve">
          <source>Only used with the &lt;code&gt;init&lt;/code&gt; command. These are passed directly to &lt;code&gt;git init&lt;/code&gt;.</source>
          <target state="translated">Используется только с командой &lt;code&gt;init&lt;/code&gt; . Они передаются непосредственно в &lt;code&gt;git init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5e61001de0ada8f2eb5dc9bbc0a16644112482b" translate="yes" xml:space="preserve">
          <source>Only used with the &lt;code&gt;set-tree&lt;/code&gt; command.</source>
          <target state="translated">Используется только с командой &lt;code&gt;set-tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e227b5617ca7c2b377054ab1d12644a8cc591504" translate="yes" xml:space="preserve">
          <source>Only useful with &lt;code&gt;--filter=&lt;/code&gt;; prints a list of the objects omitted by the filter. Object IDs are prefixed with a &amp;ldquo;~&amp;rdquo; character.</source>
          <target state="translated">Полезно только с &lt;code&gt;--filter=&lt;/code&gt; ; печатает список объектов, пропущенных фильтром. Идентификаторы объектов начинаются с символа &amp;laquo;~&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c898c5ecedbff05a6572c10f50d4d5872a590271" translate="yes" xml:space="preserve">
          <source>Only useful with &lt;code&gt;--objects&lt;/code&gt;; does not print the names of the object IDs that are found. This inverts &lt;code&gt;--object-names&lt;/code&gt;. This flag allows the output to be more easily parsed by commands such as &lt;a href=&quot;git-cat-file&quot;&gt;git-cat-file[1]&lt;/a&gt;.</source>
          <target state="translated">Полезно только с &lt;code&gt;--objects&lt;/code&gt; ; не печатает имена найденных идентификаторов объектов. Это инвертирует &lt;code&gt;--object-names&lt;/code&gt; . Этот флаг позволяет более легко анализировать вывод такими командами, как &lt;a href=&quot;git-cat-file&quot;&gt;git-cat-file [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbbf115261d96b04c5005e948b7d150b4779f83e" translate="yes" xml:space="preserve">
          <source>Only useful with &lt;code&gt;--objects&lt;/code&gt;; print the names of the object IDs that are found. This is the default behavior.</source>
          <target state="translated">Полезно только с &lt;code&gt;--objects&lt;/code&gt; ; вывести имена найденных идентификаторов объектов. Это поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="96aa4c0ed29b4ff25b67f82110d672c478c9f0a4" translate="yes" xml:space="preserve">
          <source>Only useful with &lt;code&gt;--objects&lt;/code&gt;; print the object IDs that are not in packs.</source>
          <target state="translated">Полезно только с &lt;code&gt;--objects&lt;/code&gt; ; распечатать идентификаторы объектов, которых нет в пачках.</target>
        </trans-unit>
        <trans-unit id="395c9938b3e2e6eaf4d1417f6499451782d5fa84" translate="yes" xml:space="preserve">
          <source>Only useful with one of the &lt;code&gt;--objects*&lt;/code&gt;; omits objects (usually blobs) from the list of printed objects. The &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; may be one of the following:</source>
          <target state="translated">Полезно только с одним из &lt;code&gt;--objects*&lt;/code&gt; ; исключает объекты (обычно капли) из списка печатаемых объектов. &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="c55263ee2e693cf4a68e8c688a3aeedef8c016f1" translate="yes" xml:space="preserve">
          <source>Only valid setting is &quot;--unified=??&quot; or &quot;-u??&quot; to set the number of context lines shown when a unified diff is created. This takes precedence over any &quot;-U&quot; or &quot;--unified&quot; option value passed on the Git diff command line.</source>
          <target state="translated">Действительна только настройка &quot;--unified=??&quot; или &quot;-u??&quot; для установки количества контекстных строк,отображаемых при создании унифицированного различия.Это имеет приоритет над любым значением опции &quot;-U&quot; или &quot;--unified&quot;,переданным в командной строке Git'а diff.</target>
        </trans-unit>
        <trans-unit id="77fb8a535dafe4973135cbd89eaf06e8f07b4529" translate="yes" xml:space="preserve">
          <source>Only works if the changes (patch IDs based on the diff contents) on &lt;code&gt;subsystem&lt;/code&gt; are literally the same before and after the rebase &lt;code&gt;subsystem&lt;/code&gt; did.</source>
          <target state="translated">Работает только в том случае, если изменения (идентификаторы патчей на основе содержимого diff) в &lt;code&gt;subsystem&lt;/code&gt; буквально одинаковы до и после того, как &lt;code&gt;subsystem&lt;/code&gt; rebase сделала.</target>
        </trans-unit>
        <trans-unit id="5a64b44f8d7042d0b4832141c36a7e5d8d6c4434" translate="yes" xml:space="preserve">
          <source>Oops. That wasn&amp;rsquo;t very readable. It just spit out its own internal version of a &lt;code&gt;diff&lt;/code&gt;, but that internal version really just tells you that it has noticed that &quot;hello&quot; has been modified, and that the old object contents it had have been replaced with something else.</source>
          <target state="translated">К сожалению. Это было не очень удобно для чтения. Он просто выплевывает свою собственную внутреннюю версию &lt;code&gt;diff&lt;/code&gt; , но эта внутренняя версия на самом деле просто говорит вам, что она заметила, что &quot;hello&quot; было изменено, и что старое содержимое объекта было заменено чем-то другим.</target>
        </trans-unit>
        <trans-unit id="0e55d62611877e337f8aa065fb0b3d20e9fe0e5a" translate="yes" xml:space="preserve">
          <source>Open a compose window and click the external editor icon.</source>
          <target state="translated">Откройте окно компоновки и нажмите на иконку внешнего редактора.</target>
        </trans-unit>
        <trans-unit id="db4ff8c108e7b94773be0de613a7b629cb1df8fa" translate="yes" xml:space="preserve">
          <source>Open an editor and edit the text to explain what the branch is for, to be used by various other commands (e.g. &lt;code&gt;format-patch&lt;/code&gt;, &lt;code&gt;request-pull&lt;/code&gt;, and &lt;code&gt;merge&lt;/code&gt; (if enabled)). Multi-line explanations may be used.</source>
          <target state="translated">Откройте редактор и отредактируйте текст, чтобы объяснить, для чего предназначена ветвь, которая будет использоваться различными другими командами (например, &lt;code&gt;format-patch&lt;/code&gt; , &lt;code&gt;request-pull&lt;/code&gt; и &lt;code&gt;merge&lt;/code&gt; (если включено)). Могут использоваться многострочные пояснения.</target>
        </trans-unit>
        <trans-unit id="577c09c011d74bfddaa145d1c3817d3d9900cb19" translate="yes" xml:space="preserve">
          <source>Open the diff vs. the index in an editor and let the user edit it. After the editor was closed, adjust the hunk headers and apply the patch to the index.</source>
          <target state="translated">Откройте diff vs.the index в редакторе и дайте пользователю возможность его отредактировать.После закрытия редактора отрегулируйте заголовки взлома и наложите заплатку на индекс.</target>
        </trans-unit>
        <trans-unit id="1e40bc8b6fc685aae183dd5f07e4256cd3e46abe" translate="yes" xml:space="preserve">
          <source>Open the matching files in the pager (not the output of &lt;code&gt;grep&lt;/code&gt;). If the pager happens to be &quot;less&quot; or &quot;vi&quot;, and the user specified only one pattern, the first file is positioned at the first match automatically. The &lt;code&gt;pager&lt;/code&gt; argument is optional; if specified, it must be stuck to the option without a space. If &lt;code&gt;pager&lt;/code&gt; is unspecified, the default pager will be used (see &lt;code&gt;core.pager&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Откройте соответствующие файлы в пейджере (не в выводе &lt;code&gt;grep&lt;/code&gt; ). Если пейджер оказался &amp;laquo;меньше&amp;raquo; или &amp;laquo;vi&amp;raquo;, и пользователь указал только один шаблон, первый файл автоматически помещается в первое совпадение. &lt;code&gt;pager&lt;/code&gt; аргумент является необязательным; если указано, он должен быть прикреплен к опции без пробела. Если &lt;code&gt;pager&lt;/code&gt; не &lt;code&gt;core.pager&lt;/code&gt; будет использоваться пейджер по умолчанию (см. Core.pager в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8ab75f225f79420c5b860ca24bd40f7491c784f1" translate="yes" xml:space="preserve">
          <source>Opens an editor to modify the specified config file; either &lt;code&gt;--system&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, or repository (default).</source>
          <target state="translated">Открывает редактор для изменения указанного файла конфигурации; либо &lt;code&gt;--system&lt;/code&gt; , &lt;code&gt;--global&lt;/code&gt; , либо репозиторий (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="869e0439c9b6be4fa4547f64fcc46a677445443d" translate="yes" xml:space="preserve">
          <source>Operate quietly. Implies --no-progress.</source>
          <target state="translated">Работайте тихо.Подразумевает...непрогресс.</target>
        </trans-unit>
        <trans-unit id="976297b1ff380abe9b067b3a1569ff64fe97ece7" translate="yes" xml:space="preserve">
          <source>Operate quietly. Progress is not reported to the standard error stream.</source>
          <target state="translated">Работайте тихо.Прогресс не сообщается в стандартном потоке ошибок.</target>
        </trans-unit>
        <trans-unit id="09f22e6b29a644f35840ab8527beed58937c2452" translate="yes" xml:space="preserve">
          <source>Operating modes</source>
          <target state="translated">Режимы работы</target>
        </trans-unit>
        <trans-unit id="b5ddf3c63568d76ebc23d453be7fdb731eb8db1b" translate="yes" xml:space="preserve">
          <source>Operation Modes</source>
          <target state="translated">Режимы работы</target>
        </trans-unit>
        <trans-unit id="7196d0b4f156df0cb7286af7737967727f46300d" translate="yes" xml:space="preserve">
          <source>Operation modes</source>
          <target state="translated">Режимы работы</target>
        </trans-unit>
        <trans-unit id="1bc69d57cbb59ff5bdbc63f455c23bce178e5e54" translate="yes" xml:space="preserve">
          <source>Operations supported</source>
          <target state="translated">Поддерживаемые операции</target>
        </trans-unit>
        <trans-unit id="573db325843d7fd90adea414c1ffec090ab48249" translate="yes" xml:space="preserve">
          <source>Optimize a pack that will be provided to a client with a shallow repository. This option, combined with --thin, can result in a smaller pack at the cost of speed.</source>
          <target state="translated">Оптимизация пакета,который будет предоставляться клиенту с неглубоким репозиторием.Эта опция,в сочетании с --thin,может привести к меньшему по скорости пакету.</target>
        </trans-unit>
        <trans-unit id="4679da9817f2d593d1926870257534b31ee86cfa" translate="yes" xml:space="preserve">
          <source>Option commands must be the first commands on the input (not counting feature commands), to give an option command after any non-option command is an error.</source>
          <target state="translated">Команды опции должны быть первыми командами на входе (не считая команд функции),чтобы дать команду опции после того,как любая команда без опции является ошибкой.</target>
        </trans-unit>
        <trans-unit id="da44303dd559700c5ce39d2667eb27c2885407ef" translate="yes" xml:space="preserve">
          <source>Optional &amp;lt;path&amp;gt; arguments limit which submodules will be initialized. If no path is specified and submodule.active has been configured, submodules configured to be active will be initialized, otherwise all submodules are initialized.</source>
          <target state="translated">Необязательные аргументы &amp;lt;path&amp;gt; ограничивают то, какие подмодули будут инициализированы. Если не указан путь и настроен submodule.active, будут инициализированы подмодули, настроенные как активные, в противном случае инициализируются все подмодули.</target>
        </trans-unit>
        <trans-unit id="be215efb6b35fec1e17ea79655a45bba1595ca40" translate="yes" xml:space="preserve">
          <source>Optionally a new branch could be created with either &lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;-C&lt;/code&gt;, automatically from a remote branch of same name (see &lt;code&gt;--guess&lt;/code&gt;), or detach the working tree from any branch with &lt;code&gt;--detach&lt;/code&gt;, along with switching.</source>
          <target state="translated">При желании новую ветвь можно создать с помощью &lt;code&gt;-c&lt;/code&gt; , &lt;code&gt;-C&lt;/code&gt; , автоматически из удаленной ветки с тем же именем (см. &lt;code&gt;--guess&lt;/code&gt; ), или отсоединить рабочее дерево от любой ветки с помощью &lt;code&gt;--detach&lt;/code&gt; вместе с переключением.</target>
        </trans-unit>
        <trans-unit id="d773dc6382eb3328de30b1c7224e0be840082992" translate="yes" xml:space="preserve">
          <source>Optionally may output a &lt;code&gt;lock &amp;lt;file&amp;gt;&lt;/code&gt; line indicating the full path of a file under &lt;code&gt;$GIT_DIR/objects/pack&lt;/code&gt; which is keeping a pack until refs can be suitably updated. The path must end with &lt;code&gt;.keep&lt;/code&gt;. This is a mechanism to name a &amp;lt;pack,idx,keep&amp;gt; tuple by giving only the keep component. The kept pack will not be deleted by a concurrent repack, even though its objects may not be referenced until the fetch completes. The &lt;code&gt;.keep&lt;/code&gt; file will be deleted at the conclusion of the fetch.</source>
          <target state="translated">При желании можно вывести строку &lt;code&gt;lock &amp;lt;file&amp;gt;&lt;/code&gt; указывающую полный путь к файлу в &lt;code&gt;$GIT_DIR/objects/pack&lt;/code&gt; который хранит пакет до тех пор, пока ссылки не будут обновлены соответствующим образом. Путь должен заканчиваться на &lt;code&gt;.keep&lt;/code&gt; . Это механизм для присвоения имени кортежу &amp;lt;pack, idx, keep&amp;gt; путем предоставления только компонента keep. Сохраненный пакет не будет удален параллельной переупаковкой, даже если на его объекты нельзя ссылаться до завершения выборки. По &lt;code&gt;.keep&lt;/code&gt; файл .keep будет удален.</target>
        </trans-unit>
        <trans-unit id="66770b44a484bf62b3beb74f057263164da82747" translate="yes" xml:space="preserve">
          <source>Optionally with -m:</source>
          <target state="translated">Опционально с -м:</target>
        </trans-unit>
        <trans-unit id="3e5a4f0fcbf7c88862ec022584d8faedebb202bf" translate="yes" xml:space="preserve">
          <source>Optionally, a &amp;lt;ref&amp;gt; parameter can be prefixed with a plus &lt;code&gt;+&lt;/code&gt; sign to disable the fast-forward check only on that ref.</source>
          <target state="translated">По желанию, параметр &amp;lt;ref&amp;gt; может иметь префикс со знаком плюс &lt;code&gt;+&lt;/code&gt; , чтобы отключить проверку перемотки вперед только для этого ref.</target>
        </trans-unit>
        <trans-unit id="5ad18880dec3737f40f1be35d71296de89bc6175" translate="yes" xml:space="preserve">
          <source>Optionally, it can merge a tree into the index, perform a fast-forward (i.e. 2-way) merge, or a 3-way merge, with the &lt;code&gt;-m&lt;/code&gt; flag. When used with &lt;code&gt;-m&lt;/code&gt;, the &lt;code&gt;-u&lt;/code&gt; flag causes it to also update the files in the work tree with the result of the merge.</source>
          <target state="translated">По желанию, он может объединить дерево в индекс, выполнить быстрое (т.е. двухстороннее) объединение или трехстороннее объединение с флагом &lt;code&gt;-m&lt;/code&gt; . При использовании с &lt;code&gt;-m&lt;/code&gt; , то &lt;code&gt;-u&lt;/code&gt; флаг заставляет его также обновлять файлы в рабочем дереве с результатом слияния.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="c844411e7897e1475e2bbc7e1cd47d6ca3b70b75" translate="yes" xml:space="preserve">
          <source>Options for --parseopt</source>
          <target state="translated">Опции для -партнёрства</target>
        </trans-unit>
        <trans-unit id="9c25d7f1531501faea711b1933ac2734dd8f1324" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;delete&lt;/code&gt;</source>
          <target state="translated">Варианты &lt;code&gt;delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7eec6c07b2d8ff28d282e8d3918c0430dfd638ff" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;expire&lt;/code&gt;</source>
          <target state="translated">Варианты &lt;code&gt;expire&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e73b9df34672d383e318c543fe1ed5467baa2316" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;show&lt;/code&gt;</source>
          <target state="translated">Варианты для &lt;code&gt;show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcc02e852676cd8c1162b2b42e5759f86fcae990" translate="yes" xml:space="preserve">
          <source>Options for Files</source>
          <target state="translated">Опции для файлов</target>
        </trans-unit>
        <trans-unit id="fd6ce8b428a235dff74127968e45c8e950a3e68b" translate="yes" xml:space="preserve">
          <source>Options for Filtering</source>
          <target state="translated">Опции для фильтрации</target>
        </trans-unit>
        <trans-unit id="f0e43560a9524e814096613f5d3adbb780ab9547" translate="yes" xml:space="preserve">
          <source>Options for Frontends</source>
          <target state="translated">Опции для Frontends</target>
        </trans-unit>
        <trans-unit id="6de07b5e7d3355f1ee784587e4e9b9310ce89167" translate="yes" xml:space="preserve">
          <source>Options for Objects</source>
          <target state="translated">Опции для объектов</target>
        </trans-unit>
        <trans-unit id="7bba8ce1354b61b02f672f2468b0b0f0c600077c" translate="yes" xml:space="preserve">
          <source>Options for Output</source>
          <target state="translated">Опции для выхода</target>
        </trans-unit>
        <trans-unit id="b8bceb2d83c081f4f5d71559b2d0f07edc9ee034" translate="yes" xml:space="preserve">
          <source>Options for a credential context can be configured either in &lt;code&gt;credential.*&lt;/code&gt; (which applies to all credentials), or &lt;code&gt;credential.&amp;lt;url&amp;gt;.*&lt;/code&gt;, where &amp;lt;url&amp;gt; matches the context as described above.</source>
          <target state="translated">Параметры для контекста учетных данных могут быть настроены либо в &lt;code&gt;credential.*&lt;/code&gt; (Что применяется ко всем учетным данным), либо в &lt;code&gt;credential.&amp;lt;url&amp;gt;.*&lt;/code&gt; , Где &amp;lt;url&amp;gt; соответствует контексту, как описано выше.</target>
        </trans-unit>
        <trans-unit id="99e5139a65bfab6cb84777a431cb5c7403976793" translate="yes" xml:space="preserve">
          <source>Options related to fetching</source>
          <target state="translated">Опции,связанные с заборкой</target>
        </trans-unit>
        <trans-unit id="d96532d12a36cc4bb8cc0dcd0b87def47cb21823" translate="yes" xml:space="preserve">
          <source>Options related to merging</source>
          <target state="translated">Варианты,связанные с объединением</target>
        </trans-unit>
        <trans-unit id="d2ce95980d5d4dcb8790725834688357cc504679" translate="yes" xml:space="preserve">
          <source>Options with long option names can be negated by prefixing &lt;code&gt;--no-&lt;/code&gt;. For example, &lt;code&gt;git branch&lt;/code&gt; has the option &lt;code&gt;--track&lt;/code&gt; which is &lt;code&gt;on&lt;/code&gt; by default. You can use &lt;code&gt;--no-track&lt;/code&gt; to override that behaviour. The same goes for &lt;code&gt;--color&lt;/code&gt; and &lt;code&gt;--no-color&lt;/code&gt;.</source>
          <target state="translated">Опции с длинными именами могут быть &lt;code&gt;--no-&lt;/code&gt; помощью префикса --no- . Например, &lt;code&gt;git branch&lt;/code&gt; имеет опцию &lt;code&gt;--track&lt;/code&gt; , которая &lt;code&gt;on&lt;/code&gt; умолчанию. Вы можете использовать &lt;code&gt;--no-track&lt;/code&gt; , чтобы переопределить это поведение. То же самое касается &lt;code&gt;--color&lt;/code&gt; и &lt;code&gt;--no-color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28e5f716aa8e690cf7323a0d5515626aac785807" translate="yes" xml:space="preserve">
          <source>Or if you are looking for the commit that fixed a bug, you might use</source>
          <target state="translated">Или если вы ищете коммит,который исправил ошибку,вы можете использовать</target>
        </trans-unit>
        <trans-unit id="9bcee5b07c3eb51996fe06466cb572259d48e74e" translate="yes" xml:space="preserve">
          <source>Or if you want more control, you can inspect the current state using for example &quot;git bisect visualize&quot;. It will launch gitk (or &quot;git log&quot; if the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable is not set) to help you find a better bisection point.</source>
          <target state="translated">Или, если вам нужен больший контроль, вы можете проверить текущее состояние, используя, например, &amp;laquo;git bisect visualize&amp;raquo;. Он запустит gitk (или &quot;git log&quot;, если переменная среды &lt;code&gt;DISPLAY&lt;/code&gt; не установлена), чтобы помочь вам найти лучшую точку деления пополам.</target>
        </trans-unit>
        <trans-unit id="ee046ba1657a42f0c8096ff30555d679415a486a" translate="yes" xml:space="preserve">
          <source>Or you could recall that the &lt;code&gt;&amp;hellip;​&lt;/code&gt; operator selects all commits reachable from either one reference or the other but not both; so</source>
          <target state="translated">Или вы могли бы вспомнить , что &lt;code&gt;&amp;hellip;​&lt;/code&gt; оператор выбирает все коммиты достижимые из любой одной ссылки или другой , но не оба; так</target>
        </trans-unit>
        <trans-unit id="d85642c3d553b535f4731e23589126805881407c" translate="yes" xml:space="preserve">
          <source>Or, if you&amp;rsquo;ve already committed the merge that you want to throw away,</source>
          <target state="translated">Или, если вы уже совершили слияние, которое хотите выбросить,</target>
        </trans-unit>
        <trans-unit id="7ec7c556c34b1673fc7046a255bf7eb40c6a1622" translate="yes" xml:space="preserve">
          <source>Or, prepare and create the commit in one step:</source>
          <target state="translated">Или,подготовьте и создайте коммит за один шаг:</target>
        </trans-unit>
        <trans-unit id="6d9770079506b18bb9154a95e976f54ab47a2b44" translate="yes" xml:space="preserve">
          <source>Ordinary changed entries have the following format:</source>
          <target state="translated">Обычно изменяемые записи имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="789d55cf79d409acbcc0305ff19dbfa36d82a93d" translate="yes" xml:space="preserve">
          <source>Ordinary commits are only included if they are !TREESAME (though this can be changed, see &lt;code&gt;--sparse&lt;/code&gt; below).</source>
          <target state="translated">Обычные коммиты включаются, только если они есть! TREESAME (хотя это можно изменить, см. &lt;code&gt;--sparse&lt;/code&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="3b945495727bab8a02c63542fdf26a485a2839f4" translate="yes" xml:space="preserve">
          <source>Original (version 1) pack-*.idx files have the following format:</source>
          <target state="translated">Оригинальные (версия 1)файлы pack-*.idx имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="cd07568ac3f8fe8b9f1ca323e6aea33ce69f4d0c" translate="yes" xml:space="preserve">
          <source>Originally, &lt;code&gt;git svn&lt;/code&gt; recommended that developers pulled or merged from the &lt;code&gt;git svn&lt;/code&gt; branch. This was because the author favored &lt;code&gt;git svn set-tree B&lt;/code&gt; to commit a single head rather than the &lt;code&gt;git svn set-tree A..B&lt;/code&gt; notation to commit multiple commits. Use of &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git merge&lt;/code&gt; with &lt;code&gt;git svn set-tree A..B&lt;/code&gt; will cause non-linear history to be flattened when committing into SVN and this can lead to merge commits unexpectedly reversing previous commits in SVN.</source>
          <target state="translated">Первоначально &lt;code&gt;git svn&lt;/code&gt; рекомендовал разработчикам извлечь или слить из ветки &lt;code&gt;git svn&lt;/code&gt; . Это произошло потому, что автор предпочел &lt;code&gt;git svn set-tree B&lt;/code&gt; для фиксации одной &lt;code&gt;git svn set-tree A..B&lt;/code&gt; нотацию git svn set-tree A..B для фиксации нескольких коммитов. Использование &lt;code&gt;git pull&lt;/code&gt; или &lt;code&gt;git merge&lt;/code&gt; с &lt;code&gt;git svn set-tree A..B&lt;/code&gt; приведет к сглаживанию нелинейной истории при фиксации в SVN, и это может привести к фиксации слияния, неожиданно отменяющей предыдущие фиксации в SVN.</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="14bc34cb5d8d9f5a1986c4b4ced74a089ed31e83" translate="yes" xml:space="preserve">
          <source>Other &amp;lt;rev&amp;gt;^ Parent Shorthand Notations</source>
          <target state="translated">Другие &amp;lt;rev&amp;gt; ^ Родительские сокращенные обозначения</target>
        </trans-unit>
        <trans-unit id="a3c040aeed88ddd482d5dec178bd5bb0b940738f" translate="yes" xml:space="preserve">
          <source>Other Items</source>
          <target state="translated">Прочие предметы</target>
        </trans-unit>
        <trans-unit id="9cb6f2fb01dfa81e12bc1e11f0e7b676e54669fd" translate="yes" xml:space="preserve">
          <source>Other Options</source>
          <target state="translated">Другие опции</target>
        </trans-unit>
        <trans-unit id="b66b145fc26fc91268f852efc133debcedca1335" translate="yes" xml:space="preserve">
          <source>Other ambiguity resolutions might be added in the future, but for now any other cases will error out with an error indicating what we tried, and depending on the &lt;code&gt;advice.pushUnqualifiedRefname&lt;/code&gt; configuration (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) suggest what refs/ namespace you may have wanted to push to.</source>
          <target state="translated">В будущем могут быть добавлены другие решения неоднозначности, но на данный момент в любых других случаях будет &lt;code&gt;advice.pushUnqualifiedRefname&lt;/code&gt; ошибка с указанием того, что мы пробовали, и в зависимости от конфигурации advice.pushUnqualifiedRefname (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ) предлагает, какие ссылки / пространство имен вы возможно, хотел подтолкнуть.</target>
        </trans-unit>
        <trans-unit id="0d7c9916d5a97cfdd8b058afc3d1bac1c0a81b1f" translate="yes" xml:space="preserve">
          <source>Other arbitrary characters can also be encoded. For instance, &lt;code&gt;combine:tree:3+blob:none&lt;/code&gt; and &lt;code&gt;combine:tree%3A3+blob%3Anone&lt;/code&gt; are equivalent.</source>
          <target state="translated">Также можно кодировать другие произвольные символы. Например, &lt;code&gt;combine:tree:3+blob:none&lt;/code&gt; и &lt;code&gt;combine:tree%3A3+blob%3Anone&lt;/code&gt; эквивалентны.</target>
        </trans-unit>
        <trans-unit id="fca088ce123c6c3692799642c2a4b46b5050ca1e" translate="yes" xml:space="preserve">
          <source>Other consecutive asterisks are considered invalid.</source>
          <target state="translated">Другие последовательные звездочки считаются недействительными.</target>
        </trans-unit>
        <trans-unit id="060f4f2bc2ee9b99f69af6360a0055db64443a39" translate="yes" xml:space="preserve">
          <source>Other consecutive asterisks are considered regular asterisks and will match according to the previous rules.</source>
          <target state="translated">Другие последовательные звездочки считаются обычными звездочками и будут соответствовать предыдущим правилам.</target>
        </trans-unit>
        <trans-unit id="3c7b99f717eee9f16429ca9a79551f060c8f8236" translate="yes" xml:space="preserve">
          <source>Other diff formats</source>
          <target state="translated">Другие различные форматы</target>
        </trans-unit>
        <trans-unit id="81458045196e38ce4846b13cecf95d14abe58433" translate="yes" xml:space="preserve">
          <source>Other git-related tools may and do use their own variables. When inventing new variables for use in your own tool, make sure their names do not conflict with those that are used by Git itself and other popular tools, and describe them in your documentation.</source>
          <target state="translated">Другие инструменты,связанные с git'ом,могут использовать и используют свои собственные переменные.При изобретении новых переменных для использования в вашем собственном инструменте убедитесь,что их имена не конфликтуют с именами,используемыми самим Git'ом и другими популярными инструментами,и опишите их в вашей документации.</target>
        </trans-unit>
        <trans-unit id="97855915001e4fe7ef5deb1c023c4697931e633c" translate="yes" xml:space="preserve">
          <source>Other options are available to control how the manual page is displayed. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt; for more information, because &lt;code&gt;git --help ...&lt;/code&gt; is converted internally into &lt;code&gt;git
help ...&lt;/code&gt;.</source>
          <target state="translated">Доступны и другие параметры для управления отображением страницы руководства. См &lt;a href=&quot;git-help&quot;&gt;ГИТ-помощь [1]&lt;/a&gt; для получения дополнительной информации, потому что &lt;code&gt;git --help ...&lt;/code&gt; внутренне преобразуется в &lt;code&gt;git help ...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9c8373137a028157f66c53c01b431d29c570146" translate="yes" xml:space="preserve">
          <source>Other tools</source>
          <target state="translated">Другие инструменты</target>
        </trans-unit>
        <trans-unit id="89cbbb5c1b80969d7050a561dcd36c87c0241792" translate="yes" xml:space="preserve">
          <source>Other tools to fight regressions</source>
          <target state="translated">Другие инструменты для борьбы с регрессиями</target>
        </trans-unit>
        <trans-unit id="15219db000aadb43433107a930098d54a12a2bf5" translate="yes" xml:space="preserve">
          <source>Other types of dangling objects (blobs and trees) are also possible, and dangling objects can arise in other situations.</source>
          <target state="translated">Возможны и другие типы свисающих объектов (капли и деревья),а свисающие объекты могут возникать и в других ситуациях.</target>
        </trans-unit>
        <trans-unit id="a8ad1c87f168347a129392343ff35eecf4e32d0a" translate="yes" xml:space="preserve">
          <source>Other variables</source>
          <target state="translated">Другие переменные</target>
        </trans-unit>
        <trans-unit id="dd705eff4c453915d022538452adca45ea549424" translate="yes" xml:space="preserve">
          <source>Other ways</source>
          <target state="translated">Другие способы</target>
        </trans-unit>
        <trans-unit id="cf96d288cbee7ebb53d0ff80a9f63e5beaf8b0b4" translate="yes" xml:space="preserve">
          <source>Otherwise the remote branch of the first refspec is merged.</source>
          <target state="translated">В противном случае удаленная ветка первого refspec будет слита.</target>
        </trans-unit>
        <trans-unit id="32a9647b920b895ad400011726c72473bb775600" translate="yes" xml:space="preserve">
          <source>Otherwise, a tag reference that points directly at the given object (i.e., a lightweight tag) is created.</source>
          <target state="translated">В противном случае создается ссылка на метку,которая указывает непосредственно на данный объект (т.е.на легковесную метку).</target>
        </trans-unit>
        <trans-unit id="4b4eb603a71c26301f006805965a2bb224fe1a8d" translate="yes" xml:space="preserve">
          <source>Otherwise, all you need to do is start &lt;a href=&quot;git-daemon&quot;&gt;git-daemon[1]&lt;/a&gt;; it will listen on port 9418. By default, it will allow access to any directory that looks like a Git directory and contains the magic file git-daemon-export-ok. Passing some directory paths as &lt;code&gt;git daemon&lt;/code&gt; arguments will further restrict the exports to those paths.</source>
          <target state="translated">В противном случае все, что вам нужно сделать, это запустить &lt;a href=&quot;git-daemon&quot;&gt;git-daemon [1]&lt;/a&gt; ; он будет прослушивать порт 9418. По умолчанию он разрешает доступ к любому каталогу, который выглядит как каталог Git и содержит волшебный файл git-daemon-export-ok. Передача некоторых путей к каталогам в качестве аргументов &lt;code&gt;git daemon&lt;/code&gt; еще больше ограничит экспорт этими путями.</target>
        </trans-unit>
        <trans-unit id="83933e66c19657c277855328b7212d55be330b69" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;SSH_ASKPASS&lt;/code&gt; environment variable is set, its value is used as above.</source>
          <target state="translated">В противном случае, если &lt;code&gt;SSH_ASKPASS&lt;/code&gt; переменная среды SSH_ASKPASS , ее значение используется, как указано выше.</target>
        </trans-unit>
        <trans-unit id="06aca3f538987dd4baec5bd30c2c8ddce8b7736e" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;core.askPass&lt;/code&gt; configuration variable is set, its value is used as above.</source>
          <target state="translated">В противном случае, если установлена ​​переменная конфигурации &lt;code&gt;core.askPass&lt;/code&gt; , ее значение используется, как указано выше.</target>
        </trans-unit>
        <trans-unit id="4215362e197715214628992e14b639b7a98dbd7a" translate="yes" xml:space="preserve">
          <source>Otherwise, show the index format.</source>
          <target state="translated">В противном случае,покажите формат индекса.</target>
        </trans-unit>
        <trans-unit id="1bddd3a0b4a752779f115c3518d3c2b277475b51" translate="yes" xml:space="preserve">
          <source>Otherwise, success is indicated the Unix way, i.e. by simply exiting with a zero exit status.</source>
          <target state="translated">В противном случае,успех указывается Unix-путем,т.е.простым выходом с нулевым статусом выхода.</target>
        </trans-unit>
        <trans-unit id="adf9fb3bc458cf17571d90a6a9fffeaa1b715a6a" translate="yes" xml:space="preserve">
          <source>Otherwise, the merge proceeds in the usual way.</source>
          <target state="translated">В противном случае слияние проходит обычным образом.</target>
        </trans-unit>
        <trans-unit id="0d438a86f2545e54eff98d96612fdf5bccb833ed" translate="yes" xml:space="preserve">
          <source>Otherwise, the topic that was merged to suddenly contains more than a single (well-separated) change. The many resulting small merges will greatly clutter up history. Anyone who later investigates the history of a file will have to find out whether that merge affected the topic in development. An upstream might even inadvertently be merged into a &quot;more stable&quot; branch. And so on.</source>
          <target state="translated">В противном случае,тема,которая была объединена,внезапно содержит более одного (хорошо разделенного)изменения.Множество мелких слияний,в результате которых они происходят,сильно загромождают историю.Любой,кто впоследствии исследует историю файла,должен будет выяснить,повлияло ли это слияние на разрабатываемую тему.Верхнее течение может даже случайно быть слито в &quot;более стабильную&quot; ветку.И так далее.</target>
        </trans-unit>
        <trans-unit id="9aea25a9a0905a830a51359c1723b329df787dff" translate="yes" xml:space="preserve">
          <source>Otherwise, the user is prompted on the terminal.</source>
          <target state="translated">В противном случае пользователь получает запрос на терминале.</target>
        </trans-unit>
        <trans-unit id="38c6fc8779b3b84c1e5bc6184edd3674dd536e89" translate="yes" xml:space="preserve">
          <source>Otherwise, this command applies the arguments passed using the &lt;code&gt;--trailer&lt;/code&gt; option, if any, to the commit message part of each input file. The result is emitted on the standard output.</source>
          <target state="translated">В противном случае эта команда применяет аргументы, переданные с помощью параметра &lt;code&gt;--trailer&lt;/code&gt; , если таковой имеется, к части сообщения фиксации каждого входного файла. Результат выводится на стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="7befa93bf7555efa6c53836dd2ebb58604474c19" translate="yes" xml:space="preserve">
          <source>Otherwise, you need more information. How do you tell which version of the file has been lost?</source>
          <target state="translated">В противном случае,вам нужно больше информации.Как узнать,какая версия файла была утеряна?</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="bfba9983f4010a4e13ddf1f4da6c4d9462a74630" translate="yes" xml:space="preserve">
          <source>Output &quot;connectivity-ok&quot; if the received pack is self-contained and connected.</source>
          <target state="translated">Выход &quot;connectectivity-ok&quot;,если полученный пакет является автономным и подключенным.</target>
        </trans-unit>
        <trans-unit id="14d787baf83270b720015688dc1b0d825f139765" translate="yes" xml:space="preserve">
          <source>Output \0 instead of the character that normally follows a file name.</source>
          <target state="translated">Выведите \0 вместо символа,который обычно следует за именем файла.</target>
        </trans-unit>
        <trans-unit id="02b83bf95635a4c88bd0634054e0b05541ae55d4" translate="yes" xml:space="preserve">
          <source>Output a condensed summary of extended header information such as creations, renames and mode changes.</source>
          <target state="translated">Выведите сжатую сводку расширенной информации о заголовке,такой как творения,переименования и изменения режима.</target>
        </trans-unit>
        <trans-unit id="6dbea2796f7c2da05dc872fbc20cb3b286f106fd" translate="yes" xml:space="preserve">
          <source>Output a condensed summary of extended header information such as file creations or deletions (&quot;new&quot; or &quot;gone&quot;, optionally &quot;+l&quot; if it&amp;rsquo;s a symlink) and mode changes (&quot;+x&quot; or &quot;-x&quot; for adding or removing executable bit respectively) in diffstat. The information is put between the filename part and the graph part. Implies &lt;code&gt;--stat&lt;/code&gt;.</source>
          <target state="translated">Вывести сжатую сводку расширенной информации заголовка, такой как создание или удаление файлов (&amp;laquo;новый&amp;raquo; или &amp;laquo;ушел&amp;raquo;, необязательно &amp;laquo;+ l&amp;raquo;, если это символическая ссылка) и изменения режима (&amp;laquo;+ x&amp;raquo; или &amp;laquo;-x&amp;raquo; для добавления или удаления исполняемый бит соответственно) в diffstat. Информация помещается между частью имени файла и частью графика. Подразумевает &lt;code&gt;--stat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86b8e4f6e5044ecf1fc221aacfd89b826aa45a4b" translate="yes" xml:space="preserve">
          <source>Output all merge bases for the commits, instead of just one.</source>
          <target state="translated">Выведите все базы для слияния для коммитов,а не только одну.</target>
        </trans-unit>
        <trans-unit id="c4fd496863f1ea4adcfb9e1e5209189d8bcbae5b" translate="yes" xml:space="preserve">
          <source>Output an all-zero hash in each patch&amp;rsquo;s From header instead of the hash of the commit.</source>
          <target state="translated">Выведите нулевой хеш в заголовке From каждого патча вместо хеша фиксации.</target>
        </trans-unit>
        <trans-unit id="646a42919af7ad3c76023f798af12df793449561" translate="yes" xml:space="preserve">
          <source>Output diff in reverse.</source>
          <target state="translated">Выходные данные отличаются в обратном направлении.</target>
        </trans-unit>
        <trans-unit id="973b33dc2cc053fd8a3739d3b278f90232b34e64" translate="yes" xml:space="preserve">
          <source>Output excluded boundary commits. Boundary commits are prefixed with &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">Вывод исключенных границ фиксируется. Перед граничными коммитами ставится префикс &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3872ebaf63738dccf26222059fb06a34ea9a53d" translate="yes" xml:space="preserve">
          <source>Output file names will be a simple number sequence without the default first line of the commit appended.</source>
          <target state="translated">Имена выходных файлов будут представлять собой простую последовательность чисел без добавления первой строки коммита по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c03f08a8f205e4568e916e3cfaa50c6a48749706" translate="yes" xml:space="preserve">
          <source>Output format</source>
          <target state="translated">Выходной формат</target>
        </trans-unit>
        <trans-unit id="d018168db6adc860beb206930bf9272bcf4432cb" translate="yes" xml:space="preserve">
          <source>Output from &lt;code&gt;git describe&lt;/code&gt;; i.e. a closest tag, optionally followed by a dash and a number of commits, followed by a dash, a &lt;code&gt;g&lt;/code&gt;, and an abbreviated object name.</source>
          <target state="translated">Вывод из &lt;code&gt;git describe&lt;/code&gt; ; т. е. ближайший тег, за которым необязательно следует тире и количество коммитов, за которым следует тире, &lt;code&gt;g&lt;/code&gt; и сокращенное имя объекта.</target>
        </trans-unit>
        <trans-unit id="57be6fd315ed7958a6a11b416634cb9af54c1202" translate="yes" xml:space="preserve">
          <source>Output information on each ref</source>
          <target state="translated">Выводить информацию по каждому запросу</target>
        </trans-unit>
        <trans-unit id="a471d58e2fcbf4f373e5dd800df97d7ecddc4b2a" translate="yes" xml:space="preserve">
          <source>Output only the last line of the &lt;code&gt;--stat&lt;/code&gt; format containing total number of modified files, as well as number of added and deleted lines.</source>
          <target state="translated">Выведите только последнюю строку формата &lt;code&gt;--stat&lt;/code&gt; , содержащую общее количество измененных файлов, а также количество добавленных и удаленных строк.</target>
        </trans-unit>
        <trans-unit id="09afa8b7712ce7db5d67e850045b13df59d4e1ae" translate="yes" xml:space="preserve">
          <source>Output only the names of config variables for &lt;code&gt;--list&lt;/code&gt; or &lt;code&gt;--get-regexp&lt;/code&gt;.</source>
          <target state="translated">Вывести только имена переменных конфигурации для &lt;code&gt;--list&lt;/code&gt; или --get &lt;code&gt;--get-regexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86aa1f4dbf3c69df52c4dcdcb3513ddaac888349" translate="yes" xml:space="preserve">
          <source>Output only the trailers, not any other parts of the input.</source>
          <target state="translated">Выдавать только прицепы,а не другие части входа.</target>
        </trans-unit>
        <trans-unit id="db37f07e7f23e51cc792b3b6ff625f7fbb6a099c" translate="yes" xml:space="preserve">
          <source>Output only trailers that exist in the input; do not add any from the command-line or by following configured &lt;code&gt;trailer.*&lt;/code&gt; rules.</source>
          <target state="translated">Выводить только те трейлеры, которые есть на входе; не добавляйте ничего из командной строки или следуя настроенным правилам &lt;code&gt;trailer.*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f94a54620a30e7ce03e12a657369e604dddd0ea" translate="yes" xml:space="preserve">
          <source>Output stability</source>
          <target state="translated">Стабильность выхода</target>
        </trans-unit>
        <trans-unit id="eec068e91917644b4f85137aa6730536687188c8" translate="yes" xml:space="preserve">
          <source>Output the commits chosen to be shown (see Commit Limiting section above) in reverse order. Cannot be combined with &lt;code&gt;--walk-reflogs&lt;/code&gt;.</source>
          <target state="translated">Выведите коммиты, выбранные для отображения (см. Раздел &amp;laquo;Ограничение коммитов&amp;raquo; выше) в обратном порядке. Нельзя сочетать с &lt;code&gt;--walk-reflogs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5f16fa854dad4b03b2649c62b3407ce506ca41f" translate="yes" xml:space="preserve">
          <source>Output the distribution of relative amount of changes for each sub-directory. The behavior of &lt;code&gt;--dirstat&lt;/code&gt; can be customized by passing it a comma separated list of parameters. The defaults are controlled by the &lt;code&gt;diff.dirstat&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). The following parameters are available:</source>
          <target state="translated">Выведите распределение относительного количества изменений для каждого подкаталога. Поведение &lt;code&gt;--dirstat&lt;/code&gt; можно настроить, передав ему список параметров, разделенных запятыми. Значения по умолчанию контролируются переменной конфигурации &lt;code&gt;diff.dirstat&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Доступны следующие параметры:</target>
        </trans-unit>
        <trans-unit id="f44ba9d91e7de35dadf965ce7b9f83b740777703" translate="yes" xml:space="preserve">
          <source>Output to a specific file instead of stdout.</source>
          <target state="translated">Выводить в определенный файл вместо stdout.</target>
        </trans-unit>
        <trans-unit id="1374322e99ee5a882a272ee284ec9ea86e209683" translate="yes" xml:space="preserve">
          <source>Output uses the same format as &lt;code&gt;git cat-file --batch&lt;/code&gt;:</source>
          <target state="translated">Для вывода используется тот же формат, что и для &lt;code&gt;git cat-file --batch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="50880c18d623e2367f83a87791b3da910b72fa81" translate="yes" xml:space="preserve">
          <source>Output uses the same format as &lt;code&gt;git ls-tree &amp;lt;tree&amp;gt; -- &amp;lt;path&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Вывод использует тот же формат, что и &lt;code&gt;git ls-tree &amp;lt;tree&amp;gt; -- &amp;lt;path&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="12aec147318e848c7d54969418eb1ab7603e65c0" translate="yes" xml:space="preserve">
          <source>Outputs some statistics to stderr. Has a small performance penalty.</source>
          <target state="translated">Выводит некоторую статистику в stderr.Имеет небольшой штраф за выступление.</target>
        </trans-unit>
        <trans-unit id="bb044abda9deb6fdc3e0634ed0f85ce258bcc5dc" translate="yes" xml:space="preserve">
          <source>Outputs the SHA1 of every commit in &lt;code&gt;&amp;lt;limit&amp;gt;..&amp;lt;head&amp;gt;&lt;/code&gt;, prefixed with &lt;code&gt;-&lt;/code&gt; for commits that have an equivalent in &amp;lt;upstream&amp;gt;, and &lt;code&gt;+&lt;/code&gt; for commits that do not.</source>
          <target state="translated">Выводит SHA1 каждого коммита в &lt;code&gt;&amp;lt;limit&amp;gt;..&amp;lt;head&amp;gt;&lt;/code&gt; с префиксом &lt;code&gt;-&lt;/code&gt; для коммитов, у которых есть эквивалент в &amp;lt;upstream&amp;gt;, и &lt;code&gt;+&lt;/code&gt; для коммитов, у которых его нет.</target>
        </trans-unit>
        <trans-unit id="27115802f1c296a1dfb4ce768084e3e086e70c8c" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;tag.gpgSign&lt;/code&gt; configuration variable that is set to force each and every tag to be signed.</source>
          <target state="translated">Переопределить переменную конфигурации &lt;code&gt;tag.gpgSign&lt;/code&gt; , которая установлена ​​для принудительной подписи каждого тега.</target>
        </trans-unit>
        <trans-unit id="f98c38feba04de33a87daf02cddb4bc0af45f925" translate="yes" xml:space="preserve">
          <source>Override earlier --rebase.</source>
          <target state="translated">Отменить ранее-перезагрузка.</target>
        </trans-unit>
        <trans-unit id="bf7cdfd38925dba890e8c6c44d76b710ca912a26" translate="yes" xml:space="preserve">
          <source>Override the HTTP proxy, normally configured using the &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, and &lt;code&gt;all_proxy&lt;/code&gt; environment variables (see &lt;code&gt;curl(1)&lt;/code&gt;). In addition to the syntax understood by curl, it is possible to specify a proxy string with a user name but no password, in which case git will attempt to acquire one in the same way it does for other credentials. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for more information. The syntax thus is &lt;code&gt;[protocol://][user[:password]@]proxyhost[:port]&lt;/code&gt;. This can be overridden on a per-remote basis; see remote.&amp;lt;name&amp;gt;.proxy</source>
          <target state="translated">Переопределите HTTP-прокси, обычно настраиваемый с использованием &lt;code&gt;http_proxy&lt;/code&gt; &lt;code&gt;https_proxy&lt;/code&gt; http_proxy , https_proxy и &lt;code&gt;all_proxy&lt;/code&gt; (см. Curl &lt;code&gt;curl(1)&lt;/code&gt; ). В дополнение к синтаксису, понимаемому curl, можно указать строку прокси с именем пользователя, но без пароля, и в этом случае git попытается получить его так же, как и для других учетных данных. См. &lt;a href=&quot;gitcredentials&quot;&gt;Gitcredentials [7]&lt;/a&gt; для получения дополнительной информации. Таким образом, синтаксис следующий: &lt;code&gt;[protocol://][user[:password]@]proxyhost[:port]&lt;/code&gt; . Это может быть отменено на удаленной основе; см. remote. &amp;lt;имя&amp;gt; .proxy</target>
        </trans-unit>
        <trans-unit id="ca2a7d0ade908f47d0a242141742817435033d82" translate="yes" xml:space="preserve">
          <source>Override the author date used in the commit.</source>
          <target state="translated">Отменить дату автора,использованную в фиксации.</target>
        </trans-unit>
        <trans-unit id="afbb46ef37a88110fa3c814b4440b9bab3c588ca" translate="yes" xml:space="preserve">
          <source>Override the commit author. Specify an explicit author using the standard &lt;code&gt;A U Thor &amp;lt;author@example.com&amp;gt;&lt;/code&gt; format. Otherwise &amp;lt;author&amp;gt; is assumed to be a pattern and is used to search for an existing commit by that author (i.e. rev-list --all -i --author=&amp;lt;author&amp;gt;); the commit author is then copied from the first such commit found.</source>
          <target state="translated">Заменить автора фиксации. Укажите явного автора, используя стандартный формат &lt;code&gt;A U Thor &amp;lt;author@example.com&amp;gt;&lt;/code&gt; . В противном случае предполагается, что &amp;lt;author&amp;gt; является шаблоном и используется для поиска существующей фиксации этого автора (например, rev-list --all -i --author = &amp;lt;author&amp;gt;); затем автор фиксации копируется из первой найденной такой фиксации.</target>
        </trans-unit>
        <trans-unit id="e3aa6564c96bc2c1fa2d64bc52314ce125c2e1b2" translate="yes" xml:space="preserve">
          <source>Override the default help format used by &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;. Values &lt;code&gt;man&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;html&lt;/code&gt; are supported. &lt;code&gt;man&lt;/code&gt; is the default. &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;html&lt;/code&gt; are the same.</source>
          <target state="translated">Отменить формат справки по умолчанию, используемый &lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt; . Поддерживаются значения &lt;code&gt;man&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;web&lt;/code&gt; и &lt;code&gt;html&lt;/code&gt; . &lt;code&gt;man&lt;/code&gt; по умолчанию. &lt;code&gt;web&lt;/code&gt; и &lt;code&gt;html&lt;/code&gt; одинаковы.</target>
        </trans-unit>
        <trans-unit id="90af133b98db5fc195076e23392ec3cd67c3e89c" translate="yes" xml:space="preserve">
          <source>Override the default tempdir.</source>
          <target state="translated">Отменить темпир по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5b51681506c224a8c47f1343a9ecd64433151e38" translate="yes" xml:space="preserve">
          <source>Override the executable bit of the added files. The executable bit is only changed in the index, the files on disk are left unchanged.</source>
          <target state="translated">Переопределить исполняемый бит добавленных файлов.Исполняемый бит изменяется только в индексе,файлы на диске остаются без изменений.</target>
        </trans-unit>
        <trans-unit id="2478241e90c06d40d8344e2c734cc9e34ffd0d73" translate="yes" xml:space="preserve">
          <source>Override the path for the given tool that may be used to browse HTML help (see &lt;code&gt;-w&lt;/code&gt; option in &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;) or a working repository in gitweb (see &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt;).</source>
          <target state="translated">Переопределите путь для данного инструмента, который можно использовать для просмотра справки HTML (см. &lt;code&gt;-w&lt;/code&gt; в &lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt; ) или рабочего репозитория в gitweb (см. &lt;a href=&quot;git-instaweb&quot;&gt;Git-instaweb [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="eeb1b59c781a411c8a2ade9041a0a224d6888a83" translate="yes" xml:space="preserve">
          <source>Override the path for the given tool that may be used to display help in the &lt;code&gt;man&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">Переопределить путь для данного инструмента, который может использоваться для отображения справки в формате &lt;code&gt;man&lt;/code&gt; . См. &lt;a href=&quot;git-help&quot;&gt;Git-help [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="adf75a51b2ad5d1ae80303fa7c85676af23cae71" translate="yes" xml:space="preserve">
          <source>Override the path for the given tool. This is useful in case your tool is not in the PATH.</source>
          <target state="translated">Переопределите путь для данного инструмента.Это полезно в том случае,если ваш инструмент не находится в PATH.</target>
        </trans-unit>
        <trans-unit id="d7b3947bcc6a75423b4dad1a16da833c821be77f" translate="yes" xml:space="preserve">
          <source>Override the up-to-date check.</source>
          <target state="translated">Отмените актуальный чек.</target>
        </trans-unit>
        <trans-unit id="4f22a960f4dfa712696d5fbbb0afb1a8a1360ea3" translate="yes" xml:space="preserve">
          <source>Overrides a previous &lt;code&gt;--no-walk&lt;/code&gt;.</source>
          <target state="translated">Отменяет предыдущий &lt;code&gt;--no-walk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcd0bd07179d4dab7adf6735a6d8e2d1ef6bb9e3" translate="yes" xml:space="preserve">
          <source>Overwrite the contents of the files that match the pathspec. When the &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (most often a commit) is not given, overwrite working tree with the contents in the index. When the &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; is given, overwrite both the index and the working tree with the contents at the &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Замените содержимое файлов, соответствующих указанному пути. Когда &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (чаще всего фиксация) не задан, перезапишите рабочее дерево содержимым индекса. Когда задан &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; , перезапишите как индекс, так и рабочее дерево содержимым в &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd66a641be22e4e3d7b30653f72f1e5443e834b" translate="yes" xml:space="preserve">
          <source>P4 does not have the same concept of a branch as Git. Instead, p4 organizes its content as a directory tree, where by convention different logical branches are in different locations in the tree. The &lt;code&gt;p4 branch&lt;/code&gt; command is used to maintain mappings between different areas in the tree, and indicate related content. &lt;code&gt;git p4&lt;/code&gt; can use these mappings to determine branch relationships.</source>
          <target state="translated">P4 не имеет той же концепции ветки, что и Git. Вместо этого p4 организует свое содержимое в виде дерева каталогов, где по соглашению разные логические ветви находятся в разных местах дерева. Команда &lt;code&gt;p4 branch&lt;/code&gt; используется для поддержки сопоставлений между различными областями в дереве и указания связанного содержимого. &lt;code&gt;git p4&lt;/code&gt; может использовать эти сопоставления для определения отношений ветвей.</target>
        </trans-unit>
        <trans-unit id="c377e9687b993a1d0b2786f798f75e99668d5825" translate="yes" xml:space="preserve">
          <source>P4 repositories can be added to an existing Git repository using &lt;code&gt;git p4 sync&lt;/code&gt; too:</source>
          <target state="translated">Репозитории P4 можно добавить в существующий репозиторий Git с помощью &lt;code&gt;git p4 sync&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="899e81641132daf9598824927775cf00c10d02f7" translate="yes" xml:space="preserve">
          <source>PATH_INFO (if GIT_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)</source>
          <target state="translated">PATH_INFO (если установлен GIT_PROJECT_ROOT,в противном случае PATH_TRANSLATED)</target>
        </trans-unit>
        <trans-unit id="6decffd0412eaf2f154545c6af90e7d695d8d0f2" translate="yes" xml:space="preserve">
          <source>PATH_INFO usage</source>
          <target state="translated">Использование PATH_INFO</target>
        </trans-unit>
        <trans-unit id="4a9500dfda14165da62b0d759d4f7a0a1828ddac" translate="yes" xml:space="preserve">
          <source>PERF Format</source>
          <target state="translated">формат PERF</target>
        </trans-unit>
        <trans-unit id="ac3820bb690c0e4f8afb899d021a87e2215d9f6c" translate="yes" xml:space="preserve">
          <source>Pack Idx file:</source>
          <target state="translated">Упаковать Idx-файл:</target>
        </trans-unit>
        <trans-unit id="8e5bd2c516c0b64c7a093133ad05311d5aa715dd" translate="yes" xml:space="preserve">
          <source>Pack heads and tags for efficient repository access</source>
          <target state="translated">Пакетные головки и метки для эффективного доступа к репозиторию</target>
        </trans-unit>
        <trans-unit id="916c15851c2e9c9482b6f7ae827a2ef3628cc3b5" translate="yes" xml:space="preserve">
          <source>Pack unpacked objects in a repository</source>
          <target state="translated">Упаковка распакованных объектов в репозиторий</target>
        </trans-unit>
        <trans-unit id="fd708a7f9f7d413af09614d69248d6ad385118ff" translate="yes" xml:space="preserve">
          <source>Pack unreachable loose objects (and their loose counterparts removed). This implies &lt;code&gt;--revs&lt;/code&gt;.</source>
          <target state="translated">Упакуйте недоступные незакрепленные предметы (и удалите их незакрепленные копии). Это означает &lt;code&gt;--revs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eee993c07c74282866f868d204d9cb338384817b" translate="yes" xml:space="preserve">
          <source>Pack-*.pack files have the following format:</source>
          <target state="translated">Файлы Pack-*.pack имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="f066589e1e591fe2ae534900eb4066417a728dbe" translate="yes" xml:space="preserve">
          <source>Packet-line framing</source>
          <target state="translated">Пакетная линия обрамления</target>
        </trans-unit>
        <trans-unit id="df55d31d287518a9be7d4b1795862cdf2fc41470" translate="yes" xml:space="preserve">
          <source>Packfile optimization</source>
          <target state="translated">Оптимизация пакетов</target>
        </trans-unit>
        <trans-unit id="64fd302d4a38d46210fcac733698d9d782d1ce2e" translate="yes" xml:space="preserve">
          <source>Packfiles can be marked as &quot;special&quot; using empty files that share the initial name but replace &quot;.pack&quot; with &quot;.keep&quot; or &quot;.promisor&quot;. We can add an optional chunk of data to the multi-pack-index that records flags of information about the packfiles. This allows new states, such as &lt;code&gt;repacked&lt;/code&gt; or &lt;code&gt;redeltified&lt;/code&gt;, that can help with pack maintenance in a multi-pack environment. It may also be helpful to organize packfiles by object type (commit, tree, blob, etc.) and use this metadata to help that maintenance.</source>
          <target state="translated">Файлы пакетов могут быть помечены как &amp;laquo;специальные&amp;raquo; с помощью пустых файлов с одинаковым начальным именем, но вместо &amp;laquo;.pack&amp;raquo; на &amp;laquo;.keep&amp;raquo; или &amp;laquo;.promisor&amp;raquo;. Мы можем добавить дополнительный блок данных в multi-pack-index, который записывает флаги информации о файлах пакетов. Это позволяет создавать новые состояния, такие как &lt;code&gt;repacked&lt;/code&gt; или &lt;code&gt;redeltified&lt;/code&gt; , которые могут помочь в обслуживании пакетов в среде с несколькими пакетами. Также может быть полезно организовать файлы пакетов по типам объектов (фиксация, дерево, большой двоичный объект и т. Д.) И использовать эти метаданные для облегчения обслуживания.</target>
        </trans-unit>
        <trans-unit id="31a1b2f09e14954b347560b78870b7472ffa3669" translate="yes" xml:space="preserve">
          <source>Packing objects</source>
          <target state="translated">Объекты упаковки</target>
        </trans-unit>
        <trans-unit id="128ae9baa6dfe921179664d6c2722a23816ef24b" translate="yes" xml:space="preserve">
          <source>Packing your repository</source>
          <target state="translated">Упаковка вашего репозитория</target>
        </trans-unit>
        <trans-unit id="1b3cc3c53ffc64e43edbae102e2fbe605f6c35c2" translate="yes" xml:space="preserve">
          <source>Packs (files that store many objects in compressed form, along with index files to allow them to be randomly accessed) are found in this directory.</source>
          <target state="translated">В этом каталоге находятся пакеты (файлы,которые хранят много объектов в сжатом виде,а также индексные файлы,позволяющие получить к ним произвольный доступ).</target>
        </trans-unit>
        <trans-unit id="5e77e9eb9a9ac23524177c29c90fcfbb2bbc9d8d" translate="yes" xml:space="preserve">
          <source>Packs are used to reduce the load on mirror systems, backup engines, disk storage, etc.</source>
          <target state="translated">Упаковки используются для снижения нагрузки на зеркальные системы,двигатели резервного копирования,дисковые накопители и т.д.</target>
        </trans-unit>
        <trans-unit id="62f32a40a6ada609c72de752933f4d26ac1e6bb8" translate="yes" xml:space="preserve">
          <source>Parallel operation</source>
          <target state="translated">Параллельная работа</target>
        </trans-unit>
        <trans-unit id="669184806db1339e6c6beee1ab38494c4529dab6" translate="yes" xml:space="preserve">
          <source>Parent/child relations are only visible with &lt;code&gt;--parents&lt;/code&gt;, but that does not affect the commits selected in default mode, so we have shown the parent lines.</source>
          <target state="translated">Отношения родитель / потомок видны только с &lt;code&gt;--parents&lt;/code&gt; , но это не влияет на коммиты, выбранные в режиме по умолчанию, поэтому мы показали родительские строки.</target>
        </trans-unit>
        <trans-unit id="2efa637ebfd57586deb686233e5bd089abfab182" translate="yes" xml:space="preserve">
          <source>Parse the date string, and output the corresponding --max-age= parameter for &lt;code&gt;git rev-list&lt;/code&gt;.</source>
          <target state="translated">Разберите строку даты и выведите соответствующий параметр --max-age = для &lt;code&gt;git rev-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26f771d12548577279103a59da15ea4fd6835ad3" translate="yes" xml:space="preserve">
          <source>Parse the date string, and output the corresponding --min-age= parameter for &lt;code&gt;git rev-list&lt;/code&gt;.</source>
          <target state="translated">Анализируйте строку даты и выведите соответствующий параметр --min-age = для &lt;code&gt;git rev-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="868df803566ac09bf6f4d16dac1cc6f9e22a2eb9" translate="yes" xml:space="preserve">
          <source>Parseopt</source>
          <target state="translated">Parseopt</target>
        </trans-unit>
        <trans-unit id="2f58caf00da93e9d39ff1263d9c88686c41f1f30" translate="yes" xml:space="preserve">
          <source>Part two of this tutorial explains the object database, the index file, and a few other odds and ends that you&amp;rsquo;ll need to make the most of Git. You can find it at &lt;a href=&quot;gittutorial-2&quot;&gt;gittutorial-2[7]&lt;/a&gt;.</source>
          <target state="translated">Вторая часть этого руководства объясняет базу данных объектов, индексный файл и некоторые другие мелочи, которые вам понадобятся, чтобы максимально использовать Git. Вы можете найти его на &lt;a href=&quot;gittutorial-2&quot;&gt;gittutorial-2 [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc0213ea3567cb4b4477ecb78349de8a29f1b86" translate="yes" xml:space="preserve">
          <source>Partly for this reason, many experienced Git users, even when working on an otherwise merge-heavy project, keep the history linear by rebasing against the latest upstream version before publishing.</source>
          <target state="translated">Частично по этой причине многие опытные пользователи Git'а,даже работая над тяжелым проектом по слиянию,сохраняют линейную историю,осуществляя перед публикацией переход на последнюю версию апстрима.</target>
        </trans-unit>
        <trans-unit id="18fd2ef3833f23df7a3b9f0464ed57cacda16deb" translate="yes" xml:space="preserve">
          <source>Pass --quiet to git-fetch-pack and silence any other internally used git commands. Progress is not reported to the standard error stream.</source>
          <target state="translated">Pass --quiet to git-fetch-pack and silence any other internal used git-команды.Прогресс не сообщается в стандартном потоке ошибок.</target>
        </trans-unit>
        <trans-unit id="c1e733f5e8ef91bfe63a917a4d6fc9ec48d03354" translate="yes" xml:space="preserve">
          <source>Pass --verbose to git-fetch and git-merge.</source>
          <target state="translated">Пас...конвербоза к гит-фетчу и гит-мерджу.</target>
        </trans-unit>
        <trans-unit id="5a8b2c7c1f37cd374533e299d8006c239b39cc94" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-b&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">Передайте флаг &lt;code&gt;-b&lt;/code&gt; &lt;code&gt;git mailinfo&lt;/code&gt; (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6ad058b096d5d940b830a4807c658be882c3c4ae" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-k&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">Передайте флаг &lt;code&gt;-k&lt;/code&gt; &lt;code&gt;git mailinfo&lt;/code&gt; (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="08d9a4e291a48ec7e7744c9392f211c7729e475b" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-n&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">Передайте флаг &lt;code&gt;-n&lt;/code&gt; &lt;code&gt;git mailinfo&lt;/code&gt; (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c6c9ef8d9eb1e67c7d3dd624c5619505c72d0bcb" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-q&lt;/code&gt; flag to &lt;code&gt;git unpack-objects&lt;/code&gt;; this makes the cloning process less verbose.</source>
          <target state="translated">Передайте флаг &lt;code&gt;-q&lt;/code&gt; для &lt;code&gt;git unpack-objects&lt;/code&gt; ; это делает процесс клонирования менее подробным.</target>
        </trans-unit>
        <trans-unit id="844d7ccb03cd6ed89f98fadab62d2737a8e85be6" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-u&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). The proposed commit log message taken from the e-mail is re-coded into UTF-8 encoding (configuration variable &lt;code&gt;i18n.commitencoding&lt;/code&gt; can be used to specify project&amp;rsquo;s preferred encoding if it is not UTF-8).</source>
          <target state="translated">Передайте флаг &lt;code&gt;-u&lt;/code&gt; &lt;code&gt;git mailinfo&lt;/code&gt; (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ). Предлагаемое сообщение журнала фиксации, взятое из электронного письма, перекодировано в кодировку UTF-8 (переменная конфигурации &lt;code&gt;i18n.commitencoding&lt;/code&gt; может использоваться для указания предпочтительной кодировки проекта, если она не является UTF-8).</target>
        </trans-unit>
        <trans-unit id="2bc55f5c25108364f3a39ef8fcf3a15e05538a97" translate="yes" xml:space="preserve">
          <source>Pass a configuration parameter to the command. The value given will override values from configuration files. The &amp;lt;name&amp;gt; is expected in the same format as listed by &lt;code&gt;git config&lt;/code&gt; (subkeys separated by dots).</source>
          <target state="translated">Передайте команде параметр конфигурации. Указанное значение переопределит значения из файлов конфигурации. Ожидается, что &amp;lt;имя&amp;gt; будет в том же формате, что и в &lt;code&gt;git config&lt;/code&gt; (подключи разделены точками).</target>
        </trans-unit>
        <trans-unit id="53c6f0ea05fb13c74273eb0b4d13e04b5e8a0db8" translate="yes" xml:space="preserve">
          <source>Pass an additional HTTP header when communicating with a server. If more than one such entry exists, all of them are added as extra headers. To allow overriding the settings inherited from the system config, an empty value will reset the extra headers to the empty list.</source>
          <target state="translated">При общении с сервером передайте дополнительный HTTP-заголовок.Если существует более одной такой записи,то все они добавляются как дополнительные заголовки.Чтобы разрешить переопределение параметров,унаследованных от системной конфигурации,пустое значение сбросит лишние заголовки в пустой список.</target>
        </trans-unit>
        <trans-unit id="88461608ee691de1cd814b8c5a12a7fe39a53808" translate="yes" xml:space="preserve">
          <source>Pass merge strategy specific option through to the merge strategy.</source>
          <target state="translated">Передайте специальную опцию стратегии слияния в стратегию слияния.</target>
        </trans-unit>
        <trans-unit id="6972c66b8402bd099c21ba9d94ae803550d21e77" translate="yes" xml:space="preserve">
          <source>Pass the &amp;lt;strategy-option&amp;gt; through to the merge strategy. This implies &lt;code&gt;--merge&lt;/code&gt; and, if no strategy has been specified, &lt;code&gt;-s recursive&lt;/code&gt;. Note the reversal of &lt;code&gt;ours&lt;/code&gt; and &lt;code&gt;theirs&lt;/code&gt; as noted above for the &lt;code&gt;-m&lt;/code&gt; option.</source>
          <target state="translated">Передайте &amp;lt;strategy-option&amp;gt; стратегии слияния. Это подразумевает &lt;code&gt;--merge&lt;/code&gt; и, если стратегия не указана, &lt;code&gt;-s recursive&lt;/code&gt; . Обратите внимание на то, что мы поменяем местами &lt;code&gt;ours&lt;/code&gt; и &lt;code&gt;theirs&lt;/code&gt; как указано выше для параметра &lt;code&gt;-m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="471cf94bd65fc727b56b2f8e18afb269faa46e42" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--delta-islands&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">Передайте параметр &lt;code&gt;--delta-islands&lt;/code&gt; в &lt;code&gt;git-pack-objects&lt;/code&gt; , см. &lt;a href=&quot;git-pack-objects&quot;&gt;Git-pack-objects [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a1683fce9ff86fab10219f3cc0bfdfabc8f2cdd" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--local&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;. See &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">Пропустите &lt;code&gt;--local&lt;/code&gt; опцию &lt;code&gt;git pack-objects&lt;/code&gt; . См. &lt;a href=&quot;git-pack-objects&quot;&gt;Git-pack-objects [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a642deef0312e0c6bd0a5561d0fd768ee8a59b73" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--no-reuse-delta&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">Передайте параметр &lt;code&gt;--no-reuse-delta&lt;/code&gt; в &lt;code&gt;git-pack-objects&lt;/code&gt; , см. &lt;a href=&quot;git-pack-objects&quot;&gt;Git-pack-objects [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d901d31c7644af40691b80c7d63e45696f17b53b" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--no-reuse-object&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">Пропустите &lt;code&gt;--no-reuse-object&lt;/code&gt; опцию &lt;code&gt;git-pack-objects&lt;/code&gt; см &lt;a href=&quot;git-pack-objects&quot;&gt;GIT-вьючных объектов [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ee5cba414a5270880e2aa4a80f865762fee87e9" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-m&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;), so that the Message-ID header is added to the commit message. The &lt;code&gt;am.messageid&lt;/code&gt; configuration variable can be used to specify the default behaviour.</source>
          <target state="translated">Передайте флаг &lt;code&gt;-m&lt;/code&gt; &lt;code&gt;git mailinfo&lt;/code&gt; (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ), чтобы заголовок Message-ID был добавлен в сообщение фиксации. &lt;code&gt;am.messageid&lt;/code&gt; переменной конфигурации может использоваться для определения поведения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e26add554b4352375b32406b09e1002baf88696f" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-q&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;. See &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">Пропустите &lt;code&gt;-q&lt;/code&gt; опцию &lt;code&gt;git pack-objects&lt;/code&gt; . См. &lt;a href=&quot;git-pack-objects&quot;&gt;Git-pack-objects [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d89c69fc0d489e2189a0abb8c756572cba9d279c" translate="yes" xml:space="preserve">
          <source>Pass the merge strategy-specific option through to the merge strategy. See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">Передайте опцию, специфичную для стратегии слияния, в стратегию слияния. Подробнее см. &lt;a href=&quot;git-merge&quot;&gt;Git-merge [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aae9caba3efe1e125b04992ec6689cc466bc71b8" translate="yes" xml:space="preserve">
          <source>Pass the specified string as a push option for consumption by hooks on the server side. If the server doesn&amp;rsquo;t support push options, error out. See &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; and &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for details.</source>
          <target state="translated">Передайте указанную строку как параметр push для использования хуками на стороне сервера. Если сервер не поддерживает параметры push, выйдет ошибка. См. Подробности в &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; и &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3802841770affa53645333dabda9772d509a4944" translate="yes" xml:space="preserve">
          <source>Pass the timestamp fuzz factor to cvsps, in seconds. If unset, cvsps defaults to 300s.</source>
          <target state="translated">Передайте коэффициент пульсации временных меток в cvsps,в секундах.Если не задано,то по умолчанию cvsps равен 300 с.</target>
        </trans-unit>
        <trans-unit id="b62f7fb7ee127d211118f2c56411ed681d4dc9a8" translate="yes" xml:space="preserve">
          <source>Passed directly to &lt;code&gt;git rebase&lt;/code&gt; when using &lt;code&gt;dcommit&lt;/code&gt; if a &lt;code&gt;git reset&lt;/code&gt; cannot be used (see &lt;code&gt;dcommit&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;dcommit&lt;/code&gt; непосредственно в &lt;code&gt;git rebase&lt;/code&gt; при использовании dcommit, если нельзя использовать &lt;code&gt;git reset&lt;/code&gt; (см. &lt;code&gt;dcommit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e0a119c584f6be9edb9c41e31b2e495e1678cbc8" translate="yes" xml:space="preserve">
          <source>Passes the objects in the bundle to &lt;code&gt;git index-pack&lt;/code&gt; for storage in the repository, then prints the names of all defined references. If a list of references is given, only references matching those in the list are printed. This command is really plumbing, intended to be called only by &lt;code&gt;git fetch&lt;/code&gt;.</source>
          <target state="translated">Передает объекты в пакете &lt;code&gt;git index-pack&lt;/code&gt; для хранения в репозитории, затем печатает имена всех определенных ссылок. Если приводится список ссылок, печатаются только ссылки, соответствующие списку. Это действительно служебная команда, предназначенная для вызова только с помощью &lt;code&gt;git fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76a10ff11a1c062361e6cf9a600e31448471fa51" translate="yes" xml:space="preserve">
          <source>Passing sh -c &quot;some commands&quot; to &quot;git bisect run&quot;</source>
          <target state="translated">Передача sh -c &quot;некоторые команды&quot; в &quot;запуск бисекта гита&quot;.</target>
        </trans-unit>
        <trans-unit id="5323220d01673f917e0cf25de9b3b16456b54e2a" translate="yes" xml:space="preserve">
          <source>Passing the pattern via &amp;lt;file&amp;gt; allows for providing a search pattern containing a \0.</source>
          <target state="translated">Передача шаблона через &amp;lt;file&amp;gt; позволяет предоставить шаблон поиска, содержащий \ 0.</target>
        </trans-unit>
        <trans-unit id="dc25b509070cc72f2f466576d5f86386a7b13eca" translate="yes" xml:space="preserve">
          <source>Password for SMTP-AUTH. The argument is optional: If no argument is specified, then the empty string is used as the password. Default is the value of &lt;code&gt;sendemail.smtpPass&lt;/code&gt;, however &lt;code&gt;--smtp-pass&lt;/code&gt; always overrides this value.</source>
          <target state="translated">Пароль для SMTP-AUTH. Аргумент является необязательным: если аргумент не указан, в качестве пароля используется пустая строка. По умолчанию используется значение &lt;code&gt;sendemail.smtpPass&lt;/code&gt; , однако &lt;code&gt;--smtp-pass&lt;/code&gt; всегда переопределяет это значение.</target>
        </trans-unit>
        <trans-unit id="bdca924d25420c3b18edd188df0ec914b14515eb" translate="yes" xml:space="preserve">
          <source>Password specified as an option to all p4 commands, with &lt;code&gt;-P &amp;lt;password&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4PASS&lt;/code&gt; can be used instead.</source>
          <target state="translated">Пароль, указанный в качестве опции для всех команд p4, с &lt;code&gt;-P &amp;lt;password&amp;gt;&lt;/code&gt; . &lt;code&gt;P4PASS&lt;/code&gt; можно использовать переменную окружения P4PASS .</target>
        </trans-unit>
        <trans-unit id="d3420ceeebad33fa39495a8a02933956bb0a3a55" translate="yes" xml:space="preserve">
          <source>Patch merge data from Arch is used to mark merges in Git as well. Git does not care much about tracking patches, and only considers a merge when a branch incorporates all the commits since the point they forked. The end result is that Git will have a good idea of how far branches have diverged. So the import process does lose some patch-trading metadata.</source>
          <target state="translated">Для пометки слияний в Git'е используются данные о патч-объединении из Arch'а.Git не особо заботится об отслеживании патчей и рассматривает слияние только тогда,когда ответвление включает в себя все коммиты,начиная с точки,в которой они были вскрыты.В результате у Git'а будет хорошее представление о том,насколько далеко отклонились ответвления.Таким образом,процесс импорта действительно теряет некоторые метаданные,связанные с отслеживанием патчей.</target>
        </trans-unit>
        <trans-unit id="31c42bf1738e25a658115f73ad50091aa9060241" translate="yes" xml:space="preserve">
          <source>Patch workflow</source>
          <target state="translated">Патч-процесс</target>
        </trans-unit>
        <trans-unit id="b1f5662dd2e222629919ebbe45b58d0f89867f94" translate="yes" xml:space="preserve">
          <source>Patch workflows</source>
          <target state="translated">Патч-рабочие процессы</target>
        </trans-unit>
        <trans-unit id="27352b2b463b7c072417a02bbdfc4fc80c3a786d" translate="yes" xml:space="preserve">
          <source>Patching</source>
          <target state="translated">Patching</target>
        </trans-unit>
        <trans-unit id="b560ead99e5ad114e3f8a677bf699dbd3c20bb23" translate="yes" xml:space="preserve">
          <source>Path (e.g., &lt;code&gt;repo.git&lt;/code&gt; in &lt;code&gt;https://example.com/repo.git&lt;/code&gt;). The path field of the config key must match the path field of the URL either exactly or as a prefix of slash-delimited path elements. This means a config key with path &lt;code&gt;foo/&lt;/code&gt; matches URL path &lt;code&gt;foo/bar&lt;/code&gt;. A prefix can only match on a slash (&lt;code&gt;/&lt;/code&gt;) boundary. Longer matches take precedence (so a config key with path &lt;code&gt;foo/bar&lt;/code&gt; is a better match to URL path &lt;code&gt;foo/bar&lt;/code&gt; than a config key with just path &lt;code&gt;foo/&lt;/code&gt;).</source>
          <target state="translated">Путь (например, &lt;code&gt;repo.git&lt;/code&gt; в &lt;code&gt;https://example.com/repo.git&lt;/code&gt; ). Поле пути ключа конфигурации должно совпадать с полем пути URL-адреса либо в точности, либо в виде префикса элементов пути, разделенных косой чертой. Это означает, что ключ конфигурации с путем &lt;code&gt;foo/&lt;/code&gt; соответствует URL-пути &lt;code&gt;foo/bar&lt;/code&gt; . Префикс может соответствовать только на границе косой черты ( &lt;code&gt;/&lt;/code&gt; ). Более длинные совпадения имеют приоритет (поэтому ключ конфигурации с путем &lt;code&gt;foo/bar&lt;/code&gt; лучше соответствует пути URL &lt;code&gt;foo/bar&lt;/code&gt; , чем ключ конфигурации с просто путем &lt;code&gt;foo/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="21d3e318bf1a1b4158750af5acdb00744a4b43b1" translate="yes" xml:space="preserve">
          <source>Path containing files with the CA certificates to verify the peer with when fetching or pushing over HTTPS. Can be overridden by the &lt;code&gt;GIT_SSL_CAPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">Путь, содержащий файлы с сертификатами CA для проверки однорангового узла при получении или передаче по HTTPS. Может быть переопределено переменной окружения &lt;code&gt;GIT_SSL_CAPATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa0b12f866af9cc606a1a97e00f59d3f70f76032" translate="yes" xml:space="preserve">
          <source>Path names are encoded in UTF-8 normalization form C. This applies to tree objects, the index file, ref names, as well as path names in command line arguments, environment variables and config files (&lt;code&gt;.git/config&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;, &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; and &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;).</source>
          <target state="translated">Имена путей кодируются в форме нормализации UTF-8 C. Это применимо к объектам дерева, индексному файлу, именам ссылок, а также именам путей в аргументах командной строки, переменных среды и файлах конфигурации ( &lt;code&gt;.git/config&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ), &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; , &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; и &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9dbaaebd4a9c17d56a6b23f6ab97e6dcfee1c1d1" translate="yes" xml:space="preserve">
          <source>Path names in extended headers do not include the &lt;code&gt;a/&lt;/code&gt; and &lt;code&gt;b/&lt;/code&gt; prefixes.</source>
          <target state="translated">Имена путей в расширенных заголовках не включают префиксы &lt;code&gt;a/&lt;/code&gt; и &lt;code&gt;b/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="398482aa4d5dc2ffcdb7a8eb1faf09763e2f1990" translate="yes" xml:space="preserve">
          <source>Path resolution via &lt;code&gt;git rev-parse --git-path&lt;/code&gt; uses either $GIT_DIR or $GIT_COMMON_DIR depending on the path. For example, in the linked working tree &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; returns &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; (not &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; or &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt;) while &lt;code&gt;git
rev-parse --git-path refs/heads/master&lt;/code&gt; uses $GIT_COMMON_DIR and returns &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt;, since refs are shared across all working trees, except refs/bisect and refs/worktree.</source>
          <target state="translated">Разрешение пути через &lt;code&gt;git rev-parse --git-path&lt;/code&gt; использует $ GIT_DIR или $ GIT_COMMON_DIR в зависимости от пути. Например, в связанном рабочем дереве &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; возвращает &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; (но не &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; или &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt; ) в то время как &lt;code&gt;git rev-parse --git-path refs/heads/master&lt;/code&gt; использует $ GIT_COMMON_DIR и возвращает &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt; , поскольку ссылки являются общими для всех рабочие деревья, кроме refs / bisect и refs / worktree.</target>
        </trans-unit>
        <trans-unit id="27ac1ba438abc8442b44c3b65ed4fee5e1af6eae" translate="yes" xml:space="preserve">
          <source>Path to a log file where the CVS server interface well&amp;hellip;​ logs various stuff. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">Путь к файлу журнала, где интерфейс сервера CVS хорошо&amp;hellip; регистрирует различные вещи. См. &lt;a href=&quot;git-cvsserver&quot;&gt;Git-cvsserver [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad9a8cd142a486ee9476680d4a1bf638f8db23fe" translate="yes" xml:space="preserve">
          <source>Path to a store of trusted CA certificates for SMTP SSL/TLS certificate validation (either a directory that has been processed by &lt;code&gt;c_rehash&lt;/code&gt;, or a single file containing one or more PEM format certificates concatenated together: see verify(1) -CAfile and -CApath for more information on these). Set it to an empty string to disable certificate verification. Defaults to the value of the &lt;code&gt;sendemail.smtpsslcertpath&lt;/code&gt; configuration variable, if set, or the backing SSL library&amp;rsquo;s compiled-in default otherwise (which should be the best choice on most platforms).</source>
          <target state="translated">Путь к хранилищу доверенных сертификатов CA для проверки сертификатов SMTP SSL / TLS (либо каталог, обработанный &lt;code&gt;c_rehash&lt;/code&gt; , либо отдельный файл, содержащий один или несколько сертификатов формата PEM, объединенных вместе: см. Verify (1) -CAfile и -CApath для получения дополнительной информации об этом). Установите пустую строку, чтобы отключить проверку сертификата. По умолчанию используется значение переменной конфигурации &lt;code&gt;sendemail.smtpsslcertpath&lt;/code&gt; , если она установлена, или значение по умолчанию, скомпилированное по умолчанию для библиотеки SSL (что должно быть лучшим выбором на большинстве платформ).</target>
        </trans-unit>
        <trans-unit id="b2ea00581c7262d0f351e52900685cd26b5cdc9c" translate="yes" xml:space="preserve">
          <source>Path to ca-certificates (either a directory or a single file). Set it to an empty string to disable certificate verification.</source>
          <target state="translated">Путь к ca-сертификатам (либо каталог,либо один файл).Установите его в пустую строку,чтобы отключить проверку сертификатов.</target>
        </trans-unit>
        <trans-unit id="59a42b0b47a7f9a3da70b7db0b79cb16c677b919" translate="yes" xml:space="preserve">
          <source>Path to the &lt;code&gt;git-receive-pack&lt;/code&gt; program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.</source>
          <target state="translated">Путь к программе &lt;code&gt;git-receive-pack&lt;/code&gt; на удаленном конце. Иногда полезно при отправке в удаленный репозиторий по ssh, когда у вас нет программы в каталоге по умолчанию $ PATH.</target>
        </trans-unit>
        <trans-unit id="3b50759eb40ac2cfa3120816f612ac8999c3b60c" translate="yes" xml:space="preserve">
          <source>Path to the highlight executable to use (it must be the one from &lt;a href=&quot;http://www.andre-simon.de&quot;&gt;http://www.andre-simon.de&lt;/a&gt; due to assumptions about parameters and output). By default set to &lt;code&gt;highlight&lt;/code&gt;; set it to full path to highlight executable if it is not installed on your web server&amp;rsquo;s PATH. Note that &lt;code&gt;highlight&lt;/code&gt; feature must be set for gitweb to actually use syntax highlighting.</source>
          <target state="translated">Путь к исполняемому файлу выделения для использования (это должен быть путь с &lt;a href=&quot;http://www.andre-simon.de&quot;&gt;http://www.andre-simon.de&lt;/a&gt; из-за предположений о параметрах и выводе). По умолчанию &lt;code&gt;highlight&lt;/code&gt; ; установите полный путь, чтобы выделить исполняемый файл, если он не установлен на PATH вашего веб-сервера. Обратите внимание, что функция &lt;code&gt;highlight&lt;/code&gt; должна быть установлена ​​для gitweb, чтобы фактически использовать подсветку синтаксиса.</target>
        </trans-unit>
        <trans-unit id="11df29eff55bbaa504f93c347ee5438c05683eb4" translate="yes" xml:space="preserve">
          <source>Path to wherever your core Git programs are installed. This can also be controlled by setting the GIT_EXEC_PATH environment variable. If no path is given, &lt;code&gt;git&lt;/code&gt; will print the current setting and then exit.</source>
          <target state="translated">Путь к месту, где установлены ваши основные программы Git. Этим также можно управлять, задав переменную среды GIT_EXEC_PATH. Если путь не указан, &lt;code&gt;git&lt;/code&gt; распечатает текущую настройку и затем выйдет.</target>
        </trans-unit>
        <trans-unit id="8bee226624e5e35cc1c649560301ce6a88341f60" translate="yes" xml:space="preserve">
          <source>Pathname Format Notes and -z</source>
          <target state="translated">Формат имени и фамилии Заметки и -z</target>
        </trans-unit>
        <trans-unit id="baad7e07c2b2e1eb7a0f4231584855cba490b25b" translate="yes" xml:space="preserve">
          <source>Pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Имена путей с &amp;laquo;необычными&amp;raquo; символами цитируются, как описано для переменной конфигурации &lt;code&gt;core.quotePath&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="faafd85683bf6f5bc5b49f23461483144ba14fdc" translate="yes" xml:space="preserve">
          <source>Paths in which the change applied cleanly are updated both in the index file and in your working tree.</source>
          <target state="translated">Пути,в которых изменение,примененное чисто,обновляются как в индексном файле,так и в вашем рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="02f71c6b4a6bff00e221f1c59f788c05e9bf57ff" translate="yes" xml:space="preserve">
          <source>Paths may need to be prefixed with &lt;code&gt;--&lt;/code&gt; to separate them from options or the revision range, when confusion arises.</source>
          <target state="translated">Пути могут иметь префикс &lt;code&gt;--&lt;/code&gt; чтобы отделить их от параметров или диапазона изменений, когда возникает путаница.</target>
        </trans-unit>
        <trans-unit id="72d92e139b6d6167634cfbe91ec0c2ba1cace91a" translate="yes" xml:space="preserve">
          <source>Paths that merged cleanly are updated both in the index file and in your working tree.</source>
          <target state="translated">Чисто слитые пути обновляются как в индексном файле,так и в вашем рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="4d8223b3c254f584e9779f7d614adb9369021888" translate="yes" xml:space="preserve">
          <source>Paths to submodule(s). When specified this will restrict the command to only operate on the submodules found at the specified paths. (This argument is required with add).</source>
          <target state="translated">Пути к субмодулю(ам).При указании этого параметра команда будет работать только с подмодулями,находящимися по указанным путям.(Этот аргумент требуется при добавлении).</target>
        </trans-unit>
        <trans-unit id="d837befa2a08a2d2c5de9a52f9ba8092713b988b" translate="yes" xml:space="preserve">
          <source>Pathspec is passed in &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; instead of commandline args. If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is exactly &lt;code&gt;-&lt;/code&gt; then standard input is used. Pathspec elements are separated by LF or CR/LF. Pathspec elements can be quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). See also &lt;code&gt;--pathspec-file-nul&lt;/code&gt; and global &lt;code&gt;--literal-pathspecs&lt;/code&gt;.</source>
          <target state="translated">Pathspec передается в &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; вместо аргументов командной строки. Если &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; точно &lt;code&gt;-&lt;/code&gt; используется стандартный ввод. Элементы Pathspec разделяются LF или CR / LF. Элементы Pathspec можно цитировать, как описано для переменной конфигурации &lt;code&gt;core.quotePath&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Смотрите также &lt;code&gt;--pathspec-file-nul&lt;/code&gt; и глобальные &lt;code&gt;--literal-pathspecs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c3fe95fefb92e7001401ae2dddbe0254cb07692" translate="yes" xml:space="preserve">
          <source>Pathspecs are used on the command line of &quot;git ls-files&quot;, &quot;git ls-tree&quot;, &quot;git add&quot;, &quot;git grep&quot;, &quot;git diff&quot;, &quot;git checkout&quot;, and many other commands to limit the scope of operations to some subset of the tree or worktree. See the documentation of each command for whether paths are relative to the current directory or toplevel. The pathspec syntax is as follows:</source>
          <target state="translated">В командной строке &quot;git ls-files&quot;,&quot;git ls-tree&quot;,&quot;git add&quot;,&quot;git grep&quot;,&quot;git diff&quot;,&quot;git checkout&quot; и многих других команд используются Pathspecs,ограничивающие область операций некоторым подмножеством дерева или рабочего дерева.См.документацию по каждой команде,чтобы узнать,относятся ли пути к текущему каталогу или к верхнему уровню.Синтаксис pathspec следующий:</target>
        </trans-unit>
        <trans-unit id="3edd060b9dbe00aa0b104e48e6298fa38d5e841a" translate="yes" xml:space="preserve">
          <source>Pattern format</source>
          <target state="translated">Формат шаблона</target>
        </trans-unit>
        <trans-unit id="fcba9b37f153a6df141f56c87f41e26ebdda34ce" translate="yes" xml:space="preserve">
          <source>Pattern used to limit paths in Git commands.</source>
          <target state="translated">Узор,используемый для ограничения путей в командах Git'а.</target>
        </trans-unit>
        <trans-unit id="eb7b848d74da9a813e33fe644876b71e9e6bcaa4" translate="yes" xml:space="preserve">
          <source>Patterns have the same syntax and semantics as patterns used for fnmatch(3) without the FNM_PATHNAME flag, except a pathname also matches a pattern if removing any number of the final pathname components matches the pattern. For example, the pattern &quot;&lt;code&gt;foo*bar&lt;/code&gt;&quot; matches &quot;&lt;code&gt;fooasdfbar&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar/baz/asdf&lt;/code&gt;&quot; but not &quot;&lt;code&gt;foobarx&lt;/code&gt;&quot;.</source>
          <target state="translated">Шаблоны имеют тот же синтаксис и семантику, что и шаблоны, используемые для fnmatch (3) без флага FNM_PATHNAME, за исключением того, что имя пути также соответствует шаблону, если удаление любого числа компонентов окончательного имени пути соответствует шаблону. Например, шаблон &amp;laquo; &lt;code&gt;foo*bar&lt;/code&gt; &amp;raquo; соответствует &amp;laquo; &lt;code&gt;fooasdfbar&lt;/code&gt; &amp;raquo; и &amp;laquo; &lt;code&gt;foo/bar/baz/asdf&lt;/code&gt; &amp;raquo;, но не &amp;laquo; &lt;code&gt;foobarx&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="fb013761be8ab363fba21719f323aaadcbd3ba0f" translate="yes" xml:space="preserve">
          <source>Patterns read from &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt;.</source>
          <target state="translated">Шаблоны читаются из &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6698f9ee7644a05337be6a499b35a3dc93d5c62b" translate="yes" xml:space="preserve">
          <source>Patterns read from a &lt;code&gt;.gitignore&lt;/code&gt; file in the same directory as the path, or in any parent directory, with patterns in the higher level files (up to the toplevel of the work tree) being overridden by those in lower level files down to the directory containing the file. These patterns match relative to the location of the &lt;code&gt;.gitignore&lt;/code&gt; file. A project normally includes such &lt;code&gt;.gitignore&lt;/code&gt; files in its repository, containing patterns for files generated as part of the project build.</source>
          <target state="translated">Шаблоны читаются из файла &lt;code&gt;.gitignore&lt;/code&gt; в том же каталоге, что и путь, или в любом родительском каталоге, при этом шаблоны в файлах более высокого уровня (до верхнего уровня рабочего дерева) заменяются шаблонами в файлах более низкого уровня до каталога содержащий файл. Эти шаблоны совпадают относительно расположения файла &lt;code&gt;.gitignore&lt;/code&gt; . Проект обычно включает в себя такие файлы &lt;code&gt;.gitignore&lt;/code&gt; в своем репозитории, содержащие шаблоны для файлов, сгенерированных как часть сборки проекта.</target>
        </trans-unit>
        <trans-unit id="36ee091d7bc3859a1b36e4f946f23e3881e4ee18" translate="yes" xml:space="preserve">
          <source>Patterns read from the command line for those commands that support them.</source>
          <target state="translated">Узоры,считанные из командной строки для тех команд,которые их поддерживают.</target>
        </trans-unit>
        <trans-unit id="eafc03d17e54d88cb802971c79de6de883bd2e33" translate="yes" xml:space="preserve">
          <source>Patterns read from the file specified by the configuration variable &lt;code&gt;core.excludesFile&lt;/code&gt;.</source>
          <target state="translated">Шаблоны читаются из файла, указанного в конфигурационной переменной &lt;code&gt;core.excludesFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5b457ce32a5c844bdd2578141f772cb2dfe28f" translate="yes" xml:space="preserve">
          <source>Patterns which a user wants Git to ignore in all situations (e.g., backup or temporary files generated by the user&amp;rsquo;s editor of choice) generally go into a file specified by &lt;code&gt;core.excludesFile&lt;/code&gt; in the user&amp;rsquo;s &lt;code&gt;~/.gitconfig&lt;/code&gt;. Its default value is $XDG_CONFIG_HOME/git/ignore. If $XDG_CONFIG_HOME is either not set or empty, $HOME/.config/git/ignore is used instead.</source>
          <target state="translated">Шаблоны, которые пользователь хочет, чтобы Git игнорировал во всех ситуациях (например, резервные или временные файлы, созданные выбранным пользователем редактором), обычно попадают в файл, указанный в &lt;code&gt;core.excludesFile&lt;/code&gt; в &lt;code&gt;~/.gitconfig&lt;/code&gt; пользователя . Его значение по умолчанию - $ XDG_CONFIG_HOME / git / ignore. Если $ XDG_CONFIG_HOME либо не установлен, либо пуст, вместо него используется $ HOME / .config / git / ignore.</target>
        </trans-unit>
        <trans-unit id="5587255035843df5d5295452dbedab67822586cc" translate="yes" xml:space="preserve">
          <source>Patterns which are specific to a particular repository but which do not need to be shared with other related repositories (e.g., auxiliary files that live inside the repository but are specific to one user&amp;rsquo;s workflow) should go into the &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; file.</source>
          <target state="translated">Шаблоны, которые относятся к конкретному репозиторию, но которые не нужно использовать совместно с другими связанными репозиториями (например, вспомогательные файлы, которые находятся внутри репозитория, но относятся к &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; процессу одного пользователя), должны быть помещены в файл $ GIT_DIR / info / exclude .</target>
        </trans-unit>
        <trans-unit id="97235836632b1fb86b67505c96cba9f6f391329a" translate="yes" xml:space="preserve">
          <source>Patterns which should be version-controlled and distributed to other repositories via clone (i.e., files that all developers will want to ignore) should go into a &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">Шаблоны, которые должны контролироваться по версиям и распространяться в другие репозитории через клонирование (т.е. файлы, которые все разработчики захотят игнорировать), должны быть &lt;code&gt;.gitignore&lt;/code&gt; файл .gitignore .</target>
        </trans-unit>
        <trans-unit id="74e957861d59dc180f4938a7e5cbcccc25f5a3ea" translate="yes" xml:space="preserve">
          <source>Patterns will normally need quoting.</source>
          <target state="translated">Шаблоны обычно нуждаются в цитировании.</target>
        </trans-unit>
        <trans-unit id="df5e4a7c782200671a0c551a8ae8bde4cbfd4554" translate="yes" xml:space="preserve">
          <source>Peek at a remote&amp;rsquo;s branch, without configuring the remote in your local repository:</source>
          <target state="translated">Загляните в удаленную ветку, не настраивая удаленную в локальном репозитории:</target>
        </trans-unit>
        <trans-unit id="2eee9784312fca59a15483a1887af3e9d7aeb47b" translate="yes" xml:space="preserve">
          <source>People needing to do actual development will also want to read &lt;a href=&quot;#Developing-With-git&quot;&gt;Developing with Git&lt;/a&gt; and &lt;a href=&quot;#sharing-development&quot;&gt;Sharing development with others&lt;/a&gt;.</source>
          <target state="translated">Людям, которым необходимо заниматься разработкой, также следует прочитать &amp;laquo; &lt;a href=&quot;#Developing-With-git&quot;&gt;Разработка с помощью Git&amp;raquo;&lt;/a&gt; и &amp;laquo; &lt;a href=&quot;#sharing-development&quot;&gt;Совместное использование разработки с другими&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d16acfd9d0006fc21d168918fe3efc81d8650072" translate="yes" xml:space="preserve">
          <source>People who play the &lt;a href=&quot;#INTEGRATOR&quot;&gt;Integrator&lt;/a&gt; role need to learn some more commands in addition to the above.</source>
          <target state="translated">Людям, играющим роль &lt;a href=&quot;#INTEGRATOR&quot;&gt;интегратора,&lt;/a&gt; необходимо выучить еще несколько команд в дополнение к указанным выше.</target>
        </trans-unit>
        <trans-unit id="48b4677fc2e9a16153ae455818d81437374385ab" translate="yes" xml:space="preserve">
          <source>Per-repository gitweb configuration</source>
          <target state="translated">Per-репозиторий gitweb конфигурации</target>
        </trans-unit>
        <trans-unit id="a457d6f200ccaae5acadefc147a0317025017a2f" translate="yes" xml:space="preserve">
          <source>Perforce keeps the encoding of a path as given by the originating OS. Git expects paths encoded as UTF-8. Use this config to tell git-p4 what encoding Perforce had used for the paths. This encoding is used to transcode the paths to UTF-8. As an example, Perforce on Windows often uses &quot;cp1252&quot; to encode path names.</source>
          <target state="translated">Perforce сохраняет кодировку пути,заданную исходной ОС.Git ожидает,что пути будут закодированы в кодировке UTF-8.Используйте эту конфигурацию,чтобы сообщить git-p4,какая кодировка использовалась Perforce для путей.Эта кодировка используется для перекодирования путей в UTF-8.В качестве примера,Perforce в Windows часто использует &quot;cp1252&quot; для кодирования имен путей.</target>
        </trans-unit>
        <trans-unit id="03b8553af827c912cedc4f1a54e56b3f62407825" translate="yes" xml:space="preserve">
          <source>Perform a bare clone. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;.</source>
          <target state="translated">Выполните голый клон. См. &lt;a href=&quot;git-clone&quot;&gt;Git-clone [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d72b7a492b7bd341e81ed1aa91cf43a8cb1b23e" translate="yes" xml:space="preserve">
          <source>Perform a merge, not just a read. The command will refuse to run if your index file has unmerged entries, indicating that you have not finished previous merge you started.</source>
          <target state="translated">Выполните слияние,а не просто чтение.Команда откажет в запуске,если в вашем индексном файле есть незаполненные записи,что указывает на то,что вы не завершили предыдущее слияние,которое вы начали.</target>
        </trans-unit>
        <trans-unit id="eccacfa088a41a325854fbfce829a88ff14b78ec" translate="yes" xml:space="preserve">
          <source>Perform a tab expansion (replace each tab with enough spaces to fill to the next display column that is multiple of &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt;) in the log message before showing it in the output. &lt;code&gt;--expand-tabs&lt;/code&gt; is a short-hand for &lt;code&gt;--expand-tabs=8&lt;/code&gt;, and &lt;code&gt;--no-expand-tabs&lt;/code&gt; is a short-hand for &lt;code&gt;--expand-tabs=0&lt;/code&gt;, which disables tab expansion.</source>
          <target state="translated">Выполните раскрытие вкладки (замените каждую вкладку достаточным количеством пробелов для заполнения до следующего столбца отображения, кратного &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; ) в сообщении журнала, прежде чем отображать его в выходных данных. &lt;code&gt;--expand-tabs&lt;/code&gt; - это сокращение для &lt;code&gt;--expand-tabs=8&lt;/code&gt; , а &lt;code&gt;--no-expand-tabs&lt;/code&gt; - это сокращение для &lt;code&gt;--expand-tabs=0&lt;/code&gt; , которое отключает расширение вкладок.</target>
        </trans-unit>
        <trans-unit id="6fe3dd23120fae0b6c8f1955f52c35dc123f3355" translate="yes" xml:space="preserve">
          <source>Perform move and/or copy detection, as described in the &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; manual page, and use it to generate rename and copy commands in the output dump.</source>
          <target state="translated">Выполните обнаружение перемещения и / или копирования, как описано на странице руководства &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; , и используйте его для создания команд переименования и копирования в выходном дампе.</target>
        </trans-unit>
        <trans-unit id="567ab62415c3403908dcc89e62181367d58a1292" translate="yes" xml:space="preserve">
          <source>Perform only a single read-write cycle with stdin and stdout. This fits with the HTTP POST request processing model where a program may read the request, write a response, and must exit.</source>
          <target state="translated">Выполняйте только один цикл чтения-записи с использованием stdin и stdout.Это соответствует модели обработки HTTP POST-запросов,в которой программа может прочитать запрос,написать ответ и должна выйти.</target>
        </trans-unit>
        <trans-unit id="41e22f08445cd4ffeacb1dbe66209f768caca3d4" translate="yes" xml:space="preserve">
          <source>Perform sanity checks on patches. Currently, validation means the following:</source>
          <target state="translated">Проверьте вменяемость заплаток.В настоящее время проверка означает следующее:</target>
        </trans-unit>
        <trans-unit id="5dd19cbcd38d018175e7d4b32fed6afd6bedcbe4" translate="yes" xml:space="preserve">
          <source>Perform the merge and commit the result. This option can be used to override --no-commit.</source>
          <target state="translated">Выполните слияние и зафиксируйте результат.Эта опция может быть использована для переопределения --no-commit.</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="7b942adfd148d1f49e5f455e2928985f17ee890d" translate="yes" xml:space="preserve">
          <source>Performance and Compression Tuning</source>
          <target state="translated">Настройка производительности и сжатия</target>
        </trans-unit>
        <trans-unit id="9848b9866799244495cf3924e3205cf2b3c1519c" translate="yes" xml:space="preserve">
          <source>Performing a three-way merge</source>
          <target state="translated">Выполнение трехстороннего слияния</target>
        </trans-unit>
        <trans-unit id="c7a1bc80737fe18d499952e507805c3eb4a06cbb" translate="yes" xml:space="preserve">
          <source>Performing text diffs of binary files</source>
          <target state="translated">Выполнение текстовых различий двоичных файлов</target>
        </trans-unit>
        <trans-unit id="eefd6fa4d473259c02ba61e1f0886b5b36cd638b" translate="yes" xml:space="preserve">
          <source>Pick &lt;code&gt;HEAD&lt;/code&gt; when it asks what branch/tag to check out. Untick the &quot;launch commit wizard&quot; to avoid committing the .project file.</source>
          <target state="translated">Выберите &lt;code&gt;HEAD&lt;/code&gt; , когда он спросит, какую ветку / тег проверить. Снимите флажок &amp;laquo;Мастер запуска фиксации&amp;raquo;, чтобы избежать фиксации файла .project.</target>
        </trans-unit>
        <trans-unit id="84307347f945f7519a1053bc099c7c72668957a6" translate="yes" xml:space="preserve">
          <source>Pick out and massage parameters</source>
          <target state="translated">Выберите и параметры массажа</target>
        </trans-unit>
        <trans-unit id="6fcb3939990224a308d3440baf7b583ff2b6b3d4" translate="yes" xml:space="preserve">
          <source>Pipe all output into &lt;code&gt;less&lt;/code&gt; (or if set, $PAGER) if standard output is a terminal. This overrides the &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; configuration options (see the &quot;Configuration Mechanism&quot; section below).</source>
          <target state="translated">Перенаправьте весь вывод в &lt;code&gt;less&lt;/code&gt; (или, если установлено, $ PAGER), если стандартный вывод является терминалом. Это отменяет параметры конфигурации &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; (см. Раздел &amp;laquo;Механизм конфигурации&amp;raquo; ниже).</target>
        </trans-unit>
        <trans-unit id="cbb76042b365f8d09d0e51150e4e490e9d51908c" translate="yes" xml:space="preserve">
          <source>Pitfalls with submodules</source>
          <target state="translated">ямы с субмодулями</target>
        </trans-unit>
        <trans-unit id="9bdaaf18e8d137e15a223b206babd14884c750c4" translate="yes" xml:space="preserve">
          <source>Placeholders that affect formatting of later placeholders:</source>
          <target state="translated">Держатели мест,которые влияют на форматирование более поздних держателей мест:</target>
        </trans-unit>
        <trans-unit id="ac211ac96ed9534ab58287056fd17e14f5f3e99f" translate="yes" xml:space="preserve">
          <source>Placeholders that expand to a single literal character:</source>
          <target state="translated">Места,которые расширяются до одного буквального символа:</target>
        </trans-unit>
        <trans-unit id="d70cc19bb51191879a6f88620cd832b063255806" translate="yes" xml:space="preserve">
          <source>Placeholders that expand to information extracted from the commit:</source>
          <target state="translated">Размещение держателей,которые расширяются на информацию,извлеченную из коммита:</target>
        </trans-unit>
        <trans-unit id="a17341864ca5844ed689cbcc0e99aa3136fe86e9" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;progress&lt;/code&gt; command immediately after a &lt;code&gt;checkpoint&lt;/code&gt; will inform the reader when the &lt;code&gt;checkpoint&lt;/code&gt; has been completed and it can safely access the refs that fast-import updated.</source>
          <target state="translated">Размещение команды &lt;code&gt;progress&lt;/code&gt; сразу после &lt;code&gt;checkpoint&lt;/code&gt; проинформирует читателя, когда &lt;code&gt;checkpoint&lt;/code&gt; будет завершена, и он сможет безопасно получить доступ к ссылкам, которые обновлены при быстром импорте.</target>
        </trans-unit>
        <trans-unit id="29d132c8dca94eedc4761b19f4e56a63b7eb3b41" translate="yes" xml:space="preserve">
          <source>Please note that these range notation can be used with both gitk and &quot;git log&quot;.</source>
          <target state="translated">Пожалуйста,обратите внимание,что эта нотация диапазона может быть использована как с gitk,так и с &quot;git log&quot;.</target>
        </trans-unit>
        <trans-unit id="a872f84e7510205bc273ea7f3487281d6e0b57f1" translate="yes" xml:space="preserve">
          <source>Please note that using the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute may have a number of pitfalls:</source>
          <target state="translated">Обратите внимание, что использование атрибута &lt;code&gt;working-tree-encoding&lt;/code&gt; может иметь ряд подводных камней:</target>
        </trans-unit>
        <trans-unit id="cddad527343fcd5e5d11ccf1bbf7e571af789394" translate="yes" xml:space="preserve">
          <source>Please note that you cannot use an existing &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; or &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; command with &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; because the former two use a different inter process communication protocol than the latter one.</source>
          <target state="translated">Обратите внимание, что вы не можете использовать существующую команду &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; или &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; с &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; , потому что первые два используют другой протокол связи между процессами, чем последний.</target>
        </trans-unit>
        <trans-unit id="c888d4a15197bdd365e37f0125b6b805c57d4e97" translate="yes" xml:space="preserve">
          <source>Please report any bugs or feature requests to &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;, putting &quot;gitweb&quot; in the subject of email.</source>
          <target state="translated">Пожалуйста, сообщайте о любых ошибках или пожеланиях по &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;адресу git@vger.kernel.org&lt;/a&gt; , указав &amp;laquo;gitweb&amp;raquo; в теме письма.</target>
        </trans-unit>
        <trans-unit id="f21025df43e0479e4864841eab47e70f94cac837" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for alternative ways to add content to a commit.</source>
          <target state="translated">Пожалуйста, смотрите &lt;a href=&quot;git-commit&quot;&gt;git-commit [1],&lt;/a&gt; чтобы узнать об альтернативных способах добавления содержимого в коммит.</target>
        </trans-unit>
        <trans-unit id="0aae3fa8eecc17be69c8d9ed6207c5a978bd3a01" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;gitglossary&quot;&gt;Gitglossary [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f7f1dd4c4366b63a145049cec2f6258fda24d83" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; document.</source>
          <target state="translated">См. &lt;a href=&quot;gitrepository-layout&quot;&gt;Документ gitrepository-layout [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a1b79b9af4861f2750548663461bdd94c841127" translate="yes" xml:space="preserve">
          <source>Plumbing Commands</source>
          <target state="translated">Команды сантехников</target>
        </trans-unit>
        <trans-unit id="dec39f942885f611a23f70c734d12d63a6e011e1" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;git-favicon.png&lt;/code&gt; on your web server, or to be more the generic URI of favicon, which will be served as &quot;image/png&quot; type. Web browsers that support favicons (website icons) may display them in the browser&amp;rsquo;s URL bar and next to the site name in bookmarks. Relative to the base URI of gitweb. Can be adjusted at build time using &lt;code&gt;GITWEB_FAVICON&lt;/code&gt; variable. By default set to &lt;code&gt;static/git-favicon.png&lt;/code&gt;.</source>
          <target state="translated">Указывает на место, в которое вы помещаете &lt;code&gt;git-favicon.png&lt;/code&gt; на своем веб-сервере, или, точнее, на общий URI значка favicon, который будет обслуживаться как тип &amp;laquo;image / png&amp;raquo;. Веб-браузеры, поддерживающие значки (значки веб-сайтов), могут отображать их в строке URL-адреса браузера и рядом с именем сайта в закладках. Относительно базового URI gitweb. Можно настроить во время сборки с &lt;code&gt;GITWEB_FAVICON&lt;/code&gt; переменной GITWEB_FAVICON . По умолчанию установлено значение &lt;code&gt;static/git-favicon.png&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a40c85c88d228670d36d1d2ec3cd1298a4f0842" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;git-logo.png&lt;/code&gt; on your web server, or to be more the generic URI of logo, 72x27 size). This image is displayed in the top right corner of each gitweb page and used as a logo for the Atom feed. Relative to the base URI of gitweb (as a path). Can be adjusted when building gitweb using &lt;code&gt;GITWEB_LOGO&lt;/code&gt; variable By default set to &lt;code&gt;static/git-logo.png&lt;/code&gt;.</source>
          <target state="translated">Указывает на место, в которое вы помещаете &lt;code&gt;git-logo.png&lt;/code&gt; на свой веб-сервер, или, точнее, на общий URI логотипа, размером 72x27). Это изображение отображается в правом верхнем углу каждой страницы gitweb и используется в качестве логотипа для ленты Atom. Относительно базового URI gitweb (как путь). Можно настроить при сборке gitweb с &lt;code&gt;GITWEB_LOGO&lt;/code&gt; переменной GITWEB_LOGO. По умолчанию установлено значение &lt;code&gt;static/git-logo.png&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9efd93f849deab28e0c41b0eba10b16f24a27c09" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;gitweb.js&lt;/code&gt; on your web server, or to be more generic the URI of JavaScript code used by gitweb. Relative to the base URI of gitweb. Can be set at build time using the &lt;code&gt;GITWEB_JS&lt;/code&gt; build-time configuration variable.</source>
          <target state="translated">Указывает на место, где вы &lt;code&gt;gitweb.js&lt;/code&gt; на своем веб-сервере, или, если говорить более обобщенно, на URI кода JavaScript, используемого gitweb. Относительно базового URI gitweb. Может быть установлено во время сборки с помощью переменной конфигурации &lt;code&gt;GITWEB_JS&lt;/code&gt; времени сборки.</target>
        </trans-unit>
        <trans-unit id="dd1dad0df44ac8f0bb40744bffd4b05eb8a096a6" translate="yes" xml:space="preserve">
          <source>Populating a git repository</source>
          <target state="translated">Популяризация git-репозитория</target>
        </trans-unit>
        <trans-unit id="4cbb689daa97a321dd935e9f85d305871f823e3a" translate="yes" xml:space="preserve">
          <source>Porcelain Format</source>
          <target state="translated">Формат фарфора</target>
        </trans-unit>
        <trans-unit id="7ed7cead662f9f179a2456c29bfdc5633f939f7a" translate="yes" xml:space="preserve">
          <source>Porcelain Format Version 1</source>
          <target state="translated">Формат фарфора версия 1</target>
        </trans-unit>
        <trans-unit id="10c9d2c56f0a79c71fe3af29b00f0a78804206c5" translate="yes" xml:space="preserve">
          <source>Porcelain Format Version 2</source>
          <target state="translated">Формат фарфора версия 2</target>
        </trans-unit>
        <trans-unit id="f0ec9d0a213551004afb541fee3084e09f53878a" translate="yes" xml:space="preserve">
          <source>Port number (e.g., &lt;code&gt;8080&lt;/code&gt; in &lt;code&gt;http://example.com:8080/&lt;/code&gt;). This field must match exactly between the config key and the URL. Omitted port numbers are automatically converted to the correct default for the scheme before matching.</source>
          <target state="translated">Номер порта (например, &lt;code&gt;8080&lt;/code&gt; в &lt;code&gt;http://example.com:8080/&lt;/code&gt; ). Это поле должно точно совпадать между ключом конфигурации и URL-адресом. Опущенные номера портов автоматически преобразуются в правильные по умолчанию для схемы перед сопоставлением.</target>
        </trans-unit>
        <trans-unit id="75288f00d3cca5affbead93289ac710b7d804777" translate="yes" xml:space="preserve">
          <source>Port specified as an option to all p4 commands, with &lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4PORT&lt;/code&gt; can be used instead.</source>
          <target state="translated">Порт, указанный как опция для всех команд p4, с &lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt; . &lt;code&gt;P4PORT&lt;/code&gt; можно использовать переменную окружения P4PORT .</target>
        </trans-unit>
        <trans-unit id="d03006f15a6deece98761a569d6fb9a550c11064" translate="yes" xml:space="preserve">
          <source>Possible status letters are:</source>
          <target state="translated">Возможны буквы статуса:</target>
        </trans-unit>
        <trans-unit id="2e4db4c63c7f46787206b1d1234a6ef557d7a11f" translate="yes" xml:space="preserve">
          <source>Post-receive hook</source>
          <target state="translated">Пост-приемный крюк</target>
        </trans-unit>
        <trans-unit id="bfc66b933494b39d9139ca2f875fbedec7e5e101" translate="yes" xml:space="preserve">
          <source>Post-update hook</source>
          <target state="translated">Крючок после обновления</target>
        </trans-unit>
        <trans-unit id="f94b267b37a51057882021d23cd86eedc7aa6025" translate="yes" xml:space="preserve">
          <source>Pre-merge checks</source>
          <target state="translated">Предварительные проверки</target>
        </trans-unit>
        <trans-unit id="b3efe66caa7433d78cc0ca460492b30524a4fffe" translate="yes" xml:space="preserve">
          <source>Pre-receive hook</source>
          <target state="translated">крючок-приёмник</target>
        </trans-unit>
        <trans-unit id="78240cc944ed7959bc15c94695f728eafb8fe296" translate="yes" xml:space="preserve">
          <source>Prefer to use &lt;code&gt;git svn rebase&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt;, rather than &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git merge&lt;/code&gt; to synchronize unintegrated commits with a &lt;code&gt;git svn&lt;/code&gt; branch. Doing so will keep the history of unintegrated commits linear with respect to the upstream SVN repository and allow the use of the preferred &lt;code&gt;git svn dcommit&lt;/code&gt; subcommand to push unintegrated commits back into SVN.</source>
          <target state="translated">Предпочитайте использовать &lt;code&gt;git svn rebase&lt;/code&gt; или &lt;code&gt;git rebase&lt;/code&gt; , а не &lt;code&gt;git pull&lt;/code&gt; или &lt;code&gt;git merge&lt;/code&gt; для синхронизации неинтегрированных коммитов с веткой &lt;code&gt;git svn&lt;/code&gt; . Это сохранит историю неинтегрированных коммитов линейно по отношению к вышестоящему репозиторию SVN и позволит использовать предпочтительную подкоманду &lt;code&gt;git svn dcommit&lt;/code&gt; для отправки неинтегрированных коммитов обратно в SVN.</target>
        </trans-unit>
        <trans-unit id="7858ef8a3e54ce180319d79ebe56992e0e058c1d" translate="yes" xml:space="preserve">
          <source>Prefix the 1-indexed byte-offset of the first match from the start of the matching line.</source>
          <target state="translated">Префиксация 1-индексированного байт-смещения первого матча с начала линии соответствия.</target>
        </trans-unit>
        <trans-unit id="f98eece57f5c0c3847ca98d0dc9e3916d907af8e" translate="yes" xml:space="preserve">
          <source>Prefix the line number to matching lines.</source>
          <target state="translated">Префиксация номера строки к совпадающим строкам.</target>
        </trans-unit>
        <trans-unit id="cba9c5d09c8d367bd67d9492c7466ff20503c458" translate="yes" xml:space="preserve">
          <source>Prepare a public repository accessible to others, just like the &quot;project lead&quot; person does.</source>
          <target state="translated">Подготовьте публичный репозиторий,доступный для других,точно так же,как это делает &quot;руководитель проекта&quot;.</target>
        </trans-unit>
        <trans-unit id="2a7490f3f599e93e81fac551095363496940e575" translate="yes" xml:space="preserve">
          <source>Prepare a public repository accessible to others.</source>
          <target state="translated">Подготовить общедоступное хранилище,доступное для других.</target>
        </trans-unit>
        <trans-unit id="f3c2eb8e7f45787546457741123fe87f7a0f8282" translate="yes" xml:space="preserve">
          <source>Prepare each commit with its patch in one file per commit, formatted to resemble UNIX mailbox format. The output of this command is convenient for e-mail submission or for use with &lt;code&gt;git am&lt;/code&gt;.</source>
          <target state="translated">Подготовьте каждый коммит с его патчем в одном файле для каждого коммита, отформатированный так, чтобы он напоминал формат почтового ящика UNIX. Вывод этой команды удобен для отправки по электронной почте или для использования с &lt;code&gt;git am&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bf024f30d7d353a4bfdcd90569f916ebb19100a" translate="yes" xml:space="preserve">
          <source>Prepare patches for e-mail submission</source>
          <target state="translated">Подготовка исправлений для отправки по электронной почте</target>
        </trans-unit>
        <trans-unit id="a8276d8a28067c8245d05a67d9e202424a88780d" translate="yes" xml:space="preserve">
          <source>Prepare patches from the topmost &amp;lt;n&amp;gt; commits.</source>
          <target state="translated">Подготовьте патчи из самых верхних коммитов &amp;lt;n&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="99740b269904a01f8762ffe4e520b6b559ecd506" translate="yes" xml:space="preserve">
          <source>Prepare the patch as a text file using your method of choice.</source>
          <target state="translated">Подготовьте патч в виде текстового файла,используя выбранный вами метод.</target>
        </trans-unit>
        <trans-unit id="f5c02726894a93a50b6991465d16de430338896a" translate="yes" xml:space="preserve">
          <source>Prepare the patch as a text file.</source>
          <target state="translated">Подготовьте патч в виде текстового файла.</target>
        </trans-unit>
        <trans-unit id="5fdffb29f622a40bb487926aa05bf2c00b010193" translate="yes" xml:space="preserve">
          <source>Prepare to work on top of &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;, by detaching &lt;code&gt;HEAD&lt;/code&gt; at it (see &quot;DETACHED HEAD&quot; section), and updating the index and the files in the working tree. Local modifications to the files in the working tree are kept, so that the resulting working tree will be the state recorded in the commit plus the local modifications.</source>
          <target state="translated">Подготовьтесь к работе поверх &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; , отсоединив от него &lt;code&gt;HEAD&lt;/code&gt; (см. Раздел &amp;laquo;ОТДЕЛЕННЫЙ HEAD&amp;raquo;) и обновив индекс и файлы в рабочем дереве. Локальные изменения файлов в рабочем дереве сохраняются, поэтому результирующее рабочее дерево будет состоять из состояния, записанного в фиксации, плюс локальные модификации.</target>
        </trans-unit>
        <trans-unit id="f2f7b858e8531ffd309df8bd0107db9d4a088dc3" translate="yes" xml:space="preserve">
          <source>Prepare your primary repository on your local machine. Your work is done there.</source>
          <target state="translated">Подготовьте первичный репозиторий на локальной машине.Ваша работа там будет выполнена.</target>
        </trans-unit>
        <trans-unit id="6351b7119828a745613d6b91f6668ddb5c9afa30" translate="yes" xml:space="preserve">
          <source>Prepare your work repository, by &lt;code&gt;git clone&lt;/code&gt; the public repository of the &quot;project lead&quot; (or a &quot;subsystem maintainer&quot;, if you work on a subsystem). The URL used for the initial cloning is stored in the remote.origin.url configuration variable.</source>
          <target state="translated">Подготовьте рабочий репозиторий с помощью &lt;code&gt;git clone&lt;/code&gt; публичного репозитория &amp;laquo;руководителя проекта&amp;raquo; (или &amp;laquo;сопровождающего подсистему&amp;raquo;, если вы работаете с подсистемой). URL-адрес, используемый для первоначального клонирования, сохраняется в переменной конфигурации remote.origin.url.</target>
        </trans-unit>
        <trans-unit id="ab02c2194a1b4abbc5e110578e0e0c5797b11598" translate="yes" xml:space="preserve">
          <source>Prepare your work repository, by running &lt;code&gt;git clone&lt;/code&gt; on the public repository of the &quot;project lead&quot;. The URL used for the initial cloning is stored in the remote.origin.url configuration variable.</source>
          <target state="translated">Подготовьте рабочий репозиторий, запустив &lt;code&gt;git clone&lt;/code&gt; в общедоступном репозитории &amp;laquo;руководителя проекта&amp;raquo;. URL-адрес, используемый для первоначального клонирования, сохраняется в переменной конфигурации remote.origin.url.</target>
        </trans-unit>
        <trans-unit id="8d8f6ddbe39b836164638d60534dc0f8ce8c98b4" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;path&amp;gt; to paths printed in informative messages such as &quot;Fetching submodule foo&quot;. This option is used internally when recursing over submodules.</source>
          <target state="translated">Добавьте &amp;lt;путь&amp;gt; к путям, напечатанным в информационных сообщениях, таких как &amp;laquo;Получение подмодуля foo&amp;raquo;. Эта опция используется внутри при рекурсии над подмодулями.</target>
        </trans-unit>
        <trans-unit id="0d9e5ac62ee99d055177c6a4f95d4b7fe25a63a3" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;prefix&amp;gt;/ to each filename in the archive.</source>
          <target state="translated">Добавьте &amp;lt;префикс&amp;gt; / к каждому имени файла в архиве.</target>
        </trans-unit>
        <trans-unit id="a1528f0aff1e31c1f36c8998ca335269e9595dd6" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;root&amp;gt; to all filenames. If a &quot;-p&quot; argument was also passed, it is applied before prepending the new root.</source>
          <target state="translated">Добавьте &amp;lt;root&amp;gt; ко всем именам файлов. Если также был передан аргумент &amp;laquo;-p&amp;raquo;, он применяется перед добавлением нового корня.</target>
        </trans-unit>
        <trans-unit id="04fbe49467d421955780154f308daccbf9dcf57a" translate="yes" xml:space="preserve">
          <source>Prepend &lt;code&gt;path&lt;/code&gt; to requested CVSROOT</source>
          <target state="translated">Добавить &lt;code&gt;path&lt;/code&gt; к запрошенному CVSROOT</target>
        </trans-unit>
        <trans-unit id="0347b26685846c1b1d2b4efcd87239056762e453" translate="yes" xml:space="preserve">
          <source>Prepend an additional prefix to every line of output.</source>
          <target state="translated">Подготовьте дополнительный префикс к каждой строке вывода.</target>
        </trans-unit>
        <trans-unit id="965630002ec8181b6c5811ecd432fedf5278178d" translate="yes" xml:space="preserve">
          <source>Prepend comment character and blank to each line. Lines will automatically be terminated with a newline. On empty lines, only the comment character will be prepended.</source>
          <target state="translated">Подготовьте символ комментария и пустую строку к каждой строке.Строки будут автоматически завершаться новой строкой.На пустых строках будет готовиться только символ комментария.</target>
        </trans-unit>
        <trans-unit id="f16c17f5481a4b7eaab0eba6f32fe3b9bdb77e0a" translate="yes" xml:space="preserve">
          <source>Prepend the commit message with the provided prefix. Useful for patch series and the like.</source>
          <target state="translated">Подготовьте сообщение о фиксации с предоставленным префиксом.Полезно для серии патчей и тому подобного.</target>
        </trans-unit>
        <trans-unit id="1cb847e80ec2973659a3bc43c24ba721cccfc0b9" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned as ref tips of alternate repositories were listed on the command line. An alternate repository is any repository whose object directory is specified in &lt;code&gt;objects/info/alternates&lt;/code&gt;. The set of included objects may be modified by &lt;code&gt;core.alternateRefsCommand&lt;/code&gt;, etc. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Представьте, что все объекты, упомянутые как ссылки на альтернативные репозитории, перечислены в командной строке. Альтернативный репозиторий - это любой репозиторий, каталог объектов которого указан в &lt;code&gt;objects/info/alternates&lt;/code&gt; . Набор включенных объектов можно изменить с помощью &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; и т. Д. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8790db7464ad43dc2580493a3a2b7fe9009b3b8" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned by reflogs are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Представьте, что все объекты, упомянутые в журналах reflogs, перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bc40db9cd0077507e159c30d2cc8ff273e4cf52" translate="yes" xml:space="preserve">
          <source>Pretend as if all the branches (tags, remote branches, resp.) are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit refs to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ветки (теги, удаленные ветки и т.д.) указаны в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничьте ссылки до тех, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="a40d3b9ce3a70471c04394220cc5bbfab2baa7f5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/&lt;/code&gt;, along with &lt;code&gt;HEAD&lt;/code&gt;, are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/&lt;/code&gt; вместе с &lt;code&gt;HEAD&lt;/code&gt; указаны в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1435ebeededb24db5ecef4374cafc152c655d0c5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/heads&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/heads&lt;/code&gt; указаны в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничить ветвления теми, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="873bc395593997376453ce378c315180f9e8037d" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/remotes&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit remote-tracking branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/remotes&lt;/code&gt; перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничьте ветки удаленного отслеживания теми, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="779811bec709e50bc3c2986dda8163a1984c59e0" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/tags&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit tags to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки в &lt;code&gt;refs/tags&lt;/code&gt; перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Если задан &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , ограничьте теги теми, которые соответствуют заданному глобу оболочки. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="fd8bdbdeb72b98a3e7d8a71774e4228e25fd4361" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs matching shell glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. Leading &lt;code&gt;refs/&lt;/code&gt;, is automatically prepended if missing. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">Представьте, что все ссылки, соответствующие оболочке glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; , перечислены в командной строке как &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; . Ведущие &lt;code&gt;refs/&lt;/code&gt; добавляются автоматически, если они отсутствуют. Если образца не хватает &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;/*&lt;/code&gt; в конце подразумевается.</target>
        </trans-unit>
        <trans-unit id="46b1cc7966c168f121c45715956556d8413ae7ad" translate="yes" xml:space="preserve">
          <source>Pretend as if all trees and blobs used by the index are listed on the command line. Note that you probably want to use &lt;code&gt;--objects&lt;/code&gt;, too.</source>
          <target state="translated">Представьте, что все деревья и капли, используемые индексом, перечислены в командной строке. Обратите внимание, что вы, вероятно , тоже захотите использовать &lt;code&gt;--objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc70d02297620c66f8bef755f564908a1a4698d8" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line. Cannot be combined with --first-parent.</source>
          <target state="translated">Притворитесь, как если бы в командной строке были указаны плохие ссылки &lt;code&gt;refs/bisect/bad&lt;/code&gt; за которыми следовали &lt;code&gt;--not&lt;/code&gt; , а за хорошими бисекциями refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; . Не может сочетаться с --first-parent.</target>
        </trans-unit>
        <trans-unit id="0a3604cb0b2f73cd8456355c098a4f83f14d6060" translate="yes" xml:space="preserve">
          <source>Pretty formats</source>
          <target state="translated">Симпатичные форматы</target>
        </trans-unit>
        <trans-unit id="1b76ed128a23a5286f4a7e2538cc00e5737e0416" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of &amp;lt;object&amp;gt; based on its type.</source>
          <target state="translated">Распечатайте содержимое &amp;lt;object&amp;gt; в зависимости от его типа.</target>
        </trans-unit>
        <trans-unit id="a741501b13f29bc4f4975a183857a345cfe33bda" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of the commit logs in a given format, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;oneline&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;fuller&lt;/code&gt;, &lt;code&gt;reference&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; and &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt;. When &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is none of the above, and has &lt;code&gt;%placeholder&lt;/code&gt; in it, it acts as if &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; were given.</source>
          <target state="translated">Довольно-печать, содержание фиксации бревен в заданном формате, где &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; может быть один из &lt;code&gt;oneline&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; , &lt;code&gt;full&lt;/code&gt; , &lt;code&gt;fuller&lt;/code&gt; , &lt;code&gt;reference&lt;/code&gt; , &lt;code&gt;email&lt;/code&gt; , &lt;code&gt;raw&lt;/code&gt; , &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; и &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt; . Когда &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; не соответствует ни одному из вышеперечисленных и содержит &lt;code&gt;%placeholder&lt;/code&gt; , он действует так, как если бы был &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bd89feebefa381d47a4005ee3e7a70495146fc2" translate="yes" xml:space="preserve">
          <source>Print a list of diff tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">Распечатайте список инструментов сравнения, которые можно использовать с &lt;code&gt;--tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4427ae28c9b6c7b34bdd7b24aed9e7c7d30f57b8" translate="yes" xml:space="preserve">
          <source>Print a list of merge tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">Распечатайте список инструментов слияния, которые можно использовать с &lt;code&gt;--tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66756bdfb6c604999780ed06815c6e483a2bcdd8" translate="yes" xml:space="preserve">
          <source>Print a log message describing a merge of the &quot;master&quot; branch from the &quot;origin&quot; remote.</source>
          <target state="translated">Вывести на печать лог-сообщение,описывающее слияние &quot;ведущей&quot; ветки с удаленного &quot;исходного&quot;.</target>
        </trans-unit>
        <trans-unit id="e170a2249107ead5e4f805939d3f7ece45fff682" translate="yes" xml:space="preserve">
          <source>Print a message to the terminal whenever Git is waiting for editor input from the user.</source>
          <target state="translated">Распечатывайте сообщение в терминал всякий раз,когда Git ждёт от пользователя ввода редактора.</target>
        </trans-unit>
        <trans-unit id="8080962c8d32b2cabab8eb19868e6e497af4f4fb" translate="yes" xml:space="preserve">
          <source>Print a number stating how many commits would have been listed, and suppress all other output. When used together with &lt;code&gt;--left-right&lt;/code&gt;, instead print the counts for left and right commits, separated by a tab. When used together with &lt;code&gt;--cherry-mark&lt;/code&gt;, omit patch equivalent commits from these counts and print the count for equivalent commits separated by a tab.</source>
          <target state="translated">Выведите число, указывающее, сколько коммитов было бы указано в списке, и подавите весь другой вывод. При использовании вместе с &lt;code&gt;--left-right&lt;/code&gt; вместо этого выводить счетчики для левых и правых коммитов, разделенных табуляцией. При использовании вместе с &lt;code&gt;--cherry-mark&lt;/code&gt; опускает эквивалентные исправления коммитов из этих счетчиков и выводит счетчик эквивалентных фиксаций, разделенных табуляцией.</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">Распечатайте короткое сообщение об использовании и выйдите.</target>
        </trans-unit>
        <trans-unit id="1605c83b597410df01a57b6af3b5c08c7935c987" translate="yes" xml:space="preserve">
          <source>Print all commits to the standard output in mbox format, instead of creating a file for each one.</source>
          <target state="translated">Распечатайте все фиксации в стандартный выходной файл в формате mbox,вместо того,чтобы создавать файл для каждого из них.</target>
        </trans-unit>
        <trans-unit id="bb80930a87afbf3e0cd1b6dbc46ac66a79700ef9" translate="yes" xml:space="preserve">
          <source>Print also the children of the commit (in the form &quot;commit child&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">Выведите также дочерние элементы фиксации (в форме &amp;laquo;commit child&amp;hellip;&amp;raquo;). Также включает родительскую перезапись, см. &lt;code&gt;History Simplification&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="cd486c8f7fa4f0862a9438df255d9ef58e4cce2f" translate="yes" xml:space="preserve">
          <source>Print also the parents of the commit (in the form &quot;commit parent&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">Выведите также родителей фиксации (в форме &amp;laquo;родитель фиксации&amp;hellip;&amp;raquo;). Также включает родительскую перезапись, см. &lt;code&gt;History Simplification&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="f770a9ba11cec50c667f92df6a9581699d1c849f" translate="yes" xml:space="preserve">
          <source>Print an empty line between matches from different files.</source>
          <target state="translated">Выведите пустую строку между совпадениями из разных файлов.</target>
        </trans-unit>
        <trans-unit id="dc6bbcf836701f45b1b031bc09ccba6ceff978b1" translate="yes" xml:space="preserve">
          <source>Print extra information on screen.</source>
          <target state="translated">Печать дополнительной информации на экране.</target>
        </trans-unit>
        <trans-unit id="f77fc6854808124fa4634165848ea2138881c54f" translate="yes" xml:space="preserve">
          <source>Print lines matching a pattern</source>
          <target state="translated">Линии печати,соответствующие рисунку</target>
        </trans-unit>
        <trans-unit id="6fe4856d75dfab579fe9349a68cc2bed1d0dadcc" translate="yes" xml:space="preserve">
          <source>Print object information and contents for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">Печатать информацию об объекте и содержимое для каждого объекта, представленного на стандартном вводе. Не может сочетаться с любыми другими параметрами или аргументами, кроме &lt;code&gt;--textconv&lt;/code&gt; или &lt;code&gt;--filters&lt;/code&gt; , в этом случае в строках ввода также необходимо указать путь, разделенный пробелами. Подробности см. В разделе &amp;laquo; &lt;code&gt;BATCH OUTPUT&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="ca4d7c5adc217a6aa2342c6778492ad7113796ff" translate="yes" xml:space="preserve">
          <source>Print object information for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">Вывести информацию об объекте для каждого объекта, указанного на стандартном вводе. Не может сочетаться с любыми другими параметрами или аргументами, кроме &lt;code&gt;--textconv&lt;/code&gt; или &lt;code&gt;--filters&lt;/code&gt; , в этом случае в строках ввода также необходимо указать путь, разделенный пробелами. Подробности см. В разделе &amp;laquo; &lt;code&gt;BATCH OUTPUT&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="355c9197a67577b10c87d266b1fadda4f338ce43" translate="yes" xml:space="preserve">
          <source>Print objects that exist but that are never &lt;code&gt;directly&lt;/code&gt; used (default). &lt;code&gt;--no-dangling&lt;/code&gt; can be used to omit this information from the output.</source>
          <target state="translated">Печатать объекты, которые существуют, но никогда не используются &lt;code&gt;directly&lt;/code&gt; (по умолчанию). &lt;code&gt;--no-dangling&lt;/code&gt; можно использовать для исключения этой информации из вывода.</target>
        </trans-unit>
        <trans-unit id="2b45348ee53d58a25f5424ead463a255068c26a3" translate="yes" xml:space="preserve">
          <source>Print only merge commits. This is exactly the same as &lt;code&gt;--min-parents=2&lt;/code&gt;.</source>
          <target state="translated">Печатать только коммиты слияния. Это в точности то же самое, что и &lt;code&gt;--min-parents=2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fba7bfcdde0d986db48ca498619d9372ecc7d2c2" translate="yes" xml:space="preserve">
          <source>Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.</source>
          <target state="translated">Выведите на печать только совпадающие (непустые)части совпадающей линии,причем каждая такая часть должна быть на отдельной выходной линии.</target>
        </trans-unit>
        <trans-unit id="a0fc3f1d0d97da65e736eae410fad9ae12d5c7be" translate="yes" xml:space="preserve">
          <source>Print out objects that exist but that aren&amp;rsquo;t reachable from any of the reference nodes.</source>
          <target state="translated">Распечатайте объекты, которые существуют, но недоступны ни для одного из ссылочных узлов.</target>
        </trans-unit>
        <trans-unit id="e099bc42258fcb131e0b9e1b48df8c89349bb7b8" translate="yes" xml:space="preserve">
          <source>Print out the ref name given on the command line by which each commit was reached.</source>
          <target state="translated">Выведите имя ссылки,указанное в командной строке,с помощью которой был достигнут каждый коммит.</target>
        </trans-unit>
        <trans-unit id="dcb3dcb3ba78d15754773caa5f744c3c4effdf42" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown by the log command. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. This is the same as the &lt;code&gt;--decorate&lt;/code&gt; option of the &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">Распечатайте ссылочные имена любых коммитов, отображаемых командой log. Если указано &lt;code&gt;short&lt;/code&gt; , префиксы &lt;code&gt;refs/heads/&lt;/code&gt; , &lt;code&gt;refs/tags/&lt;/code&gt; и &lt;code&gt;refs/remotes/&lt;/code&gt; не будут напечатаны. Если &lt;code&gt;full&lt;/code&gt; указан, то полное имя исх (включая префикс) будет напечатан. Если задано &lt;code&gt;auto&lt;/code&gt; , то если вывод идет на терминал, имена ссылок отображаются так, как если бы были заданы &lt;code&gt;short&lt;/code&gt; , в противном случае имена ссылок не отображаются. Это то же самое, что и опция &lt;code&gt;--decorate&lt;/code&gt; в &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53ce43f1821ebff917f188f20f204c3e06f211d4" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. The default option is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">Распечатайте ссылочные имена всех показанных коммитов. Если указано &lt;code&gt;short&lt;/code&gt; , префиксы &lt;code&gt;refs/heads/&lt;/code&gt; , &lt;code&gt;refs/tags/&lt;/code&gt; и &lt;code&gt;refs/remotes/&lt;/code&gt; не будут напечатаны. Если &lt;code&gt;full&lt;/code&gt; указан, то полное имя исх (включая префикс) будет напечатан. Если задано &lt;code&gt;auto&lt;/code&gt; , то если вывод идет на терминал, имена ссылок отображаются так, как если бы были заданы &lt;code&gt;short&lt;/code&gt; , в противном случае имена ссылок не отображаются. Вариант по умолчанию - &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2011b0d7f946e8a76de0461151323ce8a5c0f935" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts that have not been autoresolved by rerere. This includes paths whose resolutions cannot be tracked by rerere, such as conflicting submodules.</source>
          <target state="translated">Печатать пути с конфликтами,которые не были решены повторно.Сюда входят пути,решения которых не могут быть отслежены rerere,например,конфликтующие субмодули.</target>
        </trans-unit>
        <trans-unit id="2cba919653a32310570084639bfa9ccc09fb9fa2" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts whose merge resolution rerere will record.</source>
          <target state="translated">Печатать пути с конфликтами,чье разрешение слияния будет записываться.</target>
        </trans-unit>
        <trans-unit id="71b60883716e5c9ed5e8d89999bad00a8a7a60a2" translate="yes" xml:space="preserve">
          <source>Print sizes in human readable format</source>
          <target state="translated">Размеры печати в удобочитаемом для человека формате</target>
        </trans-unit>
        <trans-unit id="7acdcc1d8a4a904a279ce2f15ace2f46f09a0e30" translate="yes" xml:space="preserve">
          <source>Print the commit object name from the revision in the $REV shell variable:</source>
          <target state="translated">Выведите имя объекта фиксации из ревизии в переменной оболочки $REV:</target>
        </trans-unit>
        <trans-unit id="395b30ff424b495b247b1df9486e5529542c8ab4" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit in raw-format; each record is separated with a NUL character.</source>
          <target state="translated">Выведите содержимое коммита в необработанном формате;каждая запись отделяется символом NUL.</target>
        </trans-unit>
        <trans-unit id="a77cbdea967e7bc1835e082ef3a9add5606ab710" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit object before validating it.</source>
          <target state="translated">Распечатайте содержимое объекта коммита перед его проверкой.</target>
        </trans-unit>
        <trans-unit id="31d513cdd4715b4e34b1efb48c41837ed2726bf9" translate="yes" xml:space="preserve">
          <source>Print the contents of the tag object before validating it.</source>
          <target state="translated">Распечатайте содержимое объекта тега перед его проверкой.</target>
        </trans-unit>
        <trans-unit id="87753483ea6cbbd041325490c8537b3b3cada35c" translate="yes" xml:space="preserve">
          <source>Print the current notes ref. This provides an easy way to retrieve the current notes ref (e.g. from scripts).</source>
          <target state="translated">Распечатать текущие примечания см.Это позволяет легко извлечь текущую ссылку на заметку (например,из сценария).</target>
        </trans-unit>
        <trans-unit id="e336397774a866fc04e04e67418c962536311ce3" translate="yes" xml:space="preserve">
          <source>Print the manpath (see &lt;code&gt;man(1)&lt;/code&gt;) for the man pages for this version of Git and exit.</source>
          <target state="translated">Распечатайте путь к руководству (см. &lt;code&gt;man(1)&lt;/code&gt; ) для получения справочных страниц для этой версии Git и выйдите.</target>
        </trans-unit>
        <trans-unit id="390fcf6665394474a4208236397a723ae5bbd841" translate="yes" xml:space="preserve">
          <source>Print the name of the current branch. In detached HEAD state, nothing is printed.</source>
          <target state="translated">Выведите имя текущей ветки.В отдельном состоянии HEAD ничего не печатается.</target>
        </trans-unit>
        <trans-unit id="727d2c972108087f617ca9a52e1404312cb08db7" translate="yes" xml:space="preserve">
          <source>Print the name of the previous thing checked out:</source>
          <target state="translated">Распечатайте имя предыдущей проверенной вещи:</target>
        </trans-unit>
        <trans-unit id="3642aa2b7cf9b2dae48578e1bdc6f3fea172cd09" translate="yes" xml:space="preserve">
          <source>Print the object IDs of any object referenced by the listed commits. &lt;code&gt;--objects foo ^bar&lt;/code&gt; thus means &amp;ldquo;send me all object IDs which I need to download if I have the commit object &lt;code&gt;bar&lt;/code&gt; but not &lt;code&gt;foo&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">Распечатайте идентификаторы объектов любого объекта, на который ссылаются перечисленные коммиты. &lt;code&gt;--objects foo ^bar&lt;/code&gt; образом, --objects foo ^ bar означает &amp;laquo;отправить мне все идентификаторы объектов, которые мне нужно загрузить, если у меня есть &lt;code&gt;bar&lt;/code&gt; объекта фиксации, но нет &lt;code&gt;foo&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="38fa474c9535276a4f6e33490b7ff8dcbbdc81f4" translate="yes" xml:space="preserve">
          <source>Print the object name of the current commit:</source>
          <target state="translated">Выведите имя объекта текущей фиксации:</target>
        </trans-unit>
        <trans-unit id="ee021a7e92899d06aae374f43dcf779c8609f3ff" translate="yes" xml:space="preserve">
          <source>Print the path where the Info files documenting this version of Git are installed and exit.</source>
          <target state="translated">Распечатайте путь,по которому установлены Info-файлы,документирующие данную версию Git'а,и выйдите из неё.</target>
        </trans-unit>
        <trans-unit id="f91d6d93e8468421a09b4a14a734bbd616d1eaec" translate="yes" xml:space="preserve">
          <source>Print the path, without trailing slash, where Git&amp;rsquo;s HTML documentation is installed and exit.</source>
          <target state="translated">Выведите путь без косой черты, где установлена ​​документация Git HTML, и выйдите.</target>
        </trans-unit>
        <trans-unit id="c416409aca85a3200dcaeb96638cdf0bb7fd9f1e" translate="yes" xml:space="preserve">
          <source>Print the raw commit timestamp.</source>
          <target state="translated">Распечатайте сырую временную метку коммита.</target>
        </trans-unit>
        <trans-unit id="a639de23ccd7b17d5228ed28b0950d8dd10397fd" translate="yes" xml:space="preserve">
          <source>Print the raw gpg status output to standard error instead of the normal human-readable output.</source>
          <target state="translated">Распечатайте исходное состояние gpg со стандартной ошибкой вместо обычного вывода,считываемого человеком.</target>
        </trans-unit>
        <trans-unit id="99ac22b00f0c79de0ff529dde835b6047cf02100" translate="yes" xml:space="preserve">
          <source>Print tree and blob ids in order of the commits. The tree and blob ids are printed after they are first referenced by a commit.</source>
          <target state="translated">Распечатайте древовидные и блобовые идентификаторы в порядке выполнения коммитов.Дерево и blob ids печатаются после того,как на них сделана первая ссылка в коммите.</target>
        </trans-unit>
        <trans-unit id="3b22396fd69e4727d40157cf2f987d6e09d1fcff" translate="yes" xml:space="preserve">
          <source>Print usage information and exit</source>
          <target state="translated">Информация об использовании для печати и выходе</target>
        </trans-unit>
        <trans-unit id="8b0271d848c59df8398c3108bdeba41e38e8636a" translate="yes" xml:space="preserve">
          <source>Print version information and exit</source>
          <target state="translated">Информация о версии для печати и выход</target>
        </trans-unit>
        <trans-unit id="85ec1b3fb97897b6ced8a489e132839db30e011a" translate="yes" xml:space="preserve">
          <source>Prints a Git logical variable.</source>
          <target state="translated">Печатает логическую переменную Git.</target>
        </trans-unit>
        <trans-unit id="401d02aaba20f08ba2e39483d254996af7aae137" translate="yes" xml:space="preserve">
          <source>Prints a list of useful guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">Печатает список полезных руководств на стандартном выходе.Этот параметр отменяет любую данную команду или название руководства.</target>
        </trans-unit>
        <trans-unit id="fb51737d6bf1a9b6afa9ffc69b82cbde8918bef7" translate="yes" xml:space="preserve">
          <source>Prints all the available commands on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">Печатает все доступные команды на стандартном выходе.Этот параметр отменяет любую данную команду или имя руководства.</target>
        </trans-unit>
        <trans-unit id="f5aac771b999435096d722ba3e59e6103d7d4c50" translate="yes" xml:space="preserve">
          <source>Prints information about the object at a path to a file descriptor previously arranged with the &lt;code&gt;--cat-blob-fd&lt;/code&gt; argument. This allows printing a blob from the active commit (with &lt;code&gt;cat-blob&lt;/code&gt;) or copying a blob or tree from a previous commit for use in the current one (with &lt;code&gt;filemodify&lt;/code&gt;).</source>
          <target state="translated">Печатает информацию об объекте по пути к файловому дескриптору, предварительно указанному с &lt;code&gt;--cat-blob-fd&lt;/code&gt; . Это позволяет распечатать большой двоичный объект из активной фиксации (с помощью &lt;code&gt;cat-blob&lt;/code&gt; ) или скопировать большой двоичный объект или дерево из предыдущей фиксации для использования в текущей (с помощью &lt;code&gt;filemodify&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="67f72d83deebf87ad84204db25d15bef66391fa1" translate="yes" xml:space="preserve">
          <source>Prints the Git suite version that the &lt;code&gt;git&lt;/code&gt; program came from.</source>
          <target state="translated">Печатает версию пакета Git, из которой пришла программа &lt;code&gt;git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31cffb4ffe2a30a3dd8ff5b977f393cbba618dfd" translate="yes" xml:space="preserve">
          <source>Prints the synopsis and a list of the most commonly used commands. If the option &lt;code&gt;--all&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt; is given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command.</source>
          <target state="translated">Печатает синопсис и список наиболее часто используемых команд. Если указан параметр &lt;code&gt;--all&lt;/code&gt; или &lt;code&gt;-a&lt;/code&gt; , то выводятся все доступные команды. Если команда Git названа, эта опция вызовет страницу руководства для этой команды.</target>
        </trans-unit>
        <trans-unit id="866254572e1e21a744b0d521a136d91326c823cd" translate="yes" xml:space="preserve">
          <source>Problems related to branches:</source>
          <target state="translated">Проблемы,связанные с филиалами:</target>
        </trans-unit>
        <trans-unit id="ca677c6e0873752e051f5b6dc5cfbc5f3713a96f" translate="yes" xml:space="preserve">
          <source>Problems related to tags:</source>
          <target state="translated">Проблемы,связанные с тегами:</target>
        </trans-unit>
        <trans-unit id="704eb4f9500e5abbbd40e21ecae0dbc6632f17d7" translate="yes" xml:space="preserve">
          <source>Problems related to timestamps:</source>
          <target state="translated">Проблемы,связанные с временными метками:</target>
        </trans-unit>
        <trans-unit id="face2a8f1265d0d2162b3bb8d6cc8c2e4f00bd1a" translate="yes" xml:space="preserve">
          <source>Problems with rewriting history</source>
          <target state="translated">Проблемы с переписыванием истории</target>
        </trans-unit>
        <trans-unit id="cb8ad1a0606d68ac22c37138a82e9dcd94bd7b47" translate="yes" xml:space="preserve">
          <source>Proceed even if the index or the working tree differs from &lt;code&gt;HEAD&lt;/code&gt;. Both the index and working tree are restored to match the switching target. If &lt;code&gt;--recurse-submodules&lt;/code&gt; is specified, submodule content is also restored to match the switching target. This is used to throw away local changes.</source>
          <target state="translated">Продолжайте, даже если индекс или рабочее дерево отличается от &lt;code&gt;HEAD&lt;/code&gt; . И индекс, и рабочее дерево восстанавливаются в соответствии с целью переключения. Если указан &lt;code&gt;--recurse-submodules&lt;/code&gt; , содержимое подмодуля также восстанавливается в соответствии с целью переключения. Это используется для отбрасывания локальных изменений.</target>
        </trans-unit>
        <trans-unit id="81635a56ae860db0a8d1fccf460faed330395977" translate="yes" xml:space="preserve">
          <source>Process binary files as if they were text.</source>
          <target state="translated">Обрабатывайте бинарные файлы так,как будто они текстовые.</target>
        </trans-unit>
        <trans-unit id="c13073a8e5c76f53a6790b53a64799c267eda4e9" translate="yes" xml:space="preserve">
          <source>Process files in the order specified in the &amp;lt;orderfile&amp;gt;, which has one shell glob pattern per line. This overrides the &lt;code&gt;diff.orderFile&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). To cancel &lt;code&gt;diff.orderFile&lt;/code&gt;, use &lt;code&gt;-O/dev/null&lt;/code&gt;.</source>
          <target state="translated">Обработайте файлы в порядке, указанном в &amp;lt;orderfile&amp;gt;, который имеет один шаблон глобуса оболочки на строку. Это переопределяет &lt;code&gt;diff.orderFile&lt;/code&gt; конфигурации diff.orderFile (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Чтобы отменить &lt;code&gt;diff.orderFile&lt;/code&gt; , используйте &lt;code&gt;-O/dev/null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efe0d70966f95f77c3e86b43812298f2ec9b000a" translate="yes" xml:space="preserve">
          <source>Process the reflogs of all references.</source>
          <target state="translated">Обрабатывать рефлоги всех ссылок.</target>
        </trans-unit>
        <trans-unit id="0782c5b7801790281dc0fb4b01651b8bfdcbc4f5" translate="yes" xml:space="preserve">
          <source>Processes all packs. Any filenames on the command line are ignored.</source>
          <target state="translated">Обрабатывает все пакеты.Любые имена файлов в командной строке игнорируются.</target>
        </trans-unit>
        <trans-unit id="3c46a3f16a2a32b7eba71a8379b8360472d65d8d" translate="yes" xml:space="preserve">
          <source>Processes the specified option so that git fast-import behaves in a way that suits the frontend&amp;rsquo;s needs. Note that options specified by the frontend are overridden by any options the user may specify to git fast-import itself.</source>
          <target state="translated">Обрабатывает указанную опцию, чтобы git fast-import вел себя так, как это нужно для внешнего интерфейса. Обратите внимание, что параметры, указанные в интерфейсе, переопределяются любыми параметрами, которые пользователь может указать для самого git fast-import.</target>
        </trans-unit>
        <trans-unit id="2de3013c8cd324e1d7d27384810d30bdbff48678" translate="yes" xml:space="preserve">
          <source>Produce a merge commit message</source>
          <target state="translated">Создать сообщение о фиксации слияния</target>
        </trans-unit>
        <trans-unit id="221bd606329bfae672e0ecc9594988658e144e37" translate="yes" xml:space="preserve">
          <source>Produce machine-readable output. The output status line for each ref will be tab-separated and sent to stdout instead of stderr. The full symbolic names of the refs will be given.</source>
          <target state="translated">Производить машиночитаемую продукцию.Строка состояния вывода для каждой ссылки будет разделена на вкладки и отправлена в stdout вместо stderr.Будут даны полные символьные имена ссылок.</target>
        </trans-unit>
        <trans-unit id="fa20429458d99d060783732e4d2e8bf497560d29" translate="yes" xml:space="preserve">
          <source>Produce output in the same format as &lt;code&gt;git blame&lt;/code&gt;, but with SVN revision numbers instead of Git commit hashes. In this mode, changes that haven&amp;rsquo;t been committed to SVN (including local working-copy edits) are shown as revision 0.</source>
          <target state="translated">Производить вывод в том же формате, что и &lt;code&gt;git blame&lt;/code&gt; , но с номерами ревизий SVN вместо хэшей коммитов Git. В этом режиме изменения, которые не были зафиксированы в SVN (включая правки локальной рабочей копии), отображаются как версия 0.</target>
        </trans-unit>
        <trans-unit id="cb195c53f13c5c90951762ba09047296d46995e9" translate="yes" xml:space="preserve">
          <source>Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the &lt;code&gt;HEAD&lt;/code&gt;, or record &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; (to cause the next &lt;code&gt;git commit&lt;/code&gt; command to create a merge commit). This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus).</source>
          <target state="translated">Создайте рабочее дерево и состояние индекса, как если бы произошло настоящее слияние (за исключением информации о слиянии), но на самом деле не выполняйте фиксацию, не перемещайте &lt;code&gt;HEAD&lt;/code&gt; или не записывайте &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; (чтобы следующая команда &lt;code&gt;git commit&lt;/code&gt; создала объединить фиксацию). Это позволяет вам создать одну фиксацию поверх текущей ветки, эффект которой такой же, как и слияние другой ветки (или больше в случае осьминога).</target>
        </trans-unit>
        <trans-unit id="465a8ba2d1fbe9de5dbb0d6da6e9b4fc2bd5f63f" translate="yes" xml:space="preserve">
          <source>Produces a fast-import stream which imports the current value of the named ref. It may additionally import other refs as needed to construct the history efficiently. The script writes to a helper-specific private namespace. The value of the named ref should be written to a location in this namespace derived by applying the refspecs from the &quot;refspec&quot; capability to the name of the ref.</source>
          <target state="translated">Производит быстро импортируемый поток,который импортирует текущую стоимость по названному реф.Он может дополнительно импортировать другие ссылки по мере необходимости для эффективного построения истории.Скрипт записывает в личное пространство имён,специфическое для помощника.Значение именованного ссылки должно быть записано в место в этом пространстве имён,полученное путём применения к имени ссылки refspecs из возможности &quot;refspec&quot;.</target>
        </trans-unit>
        <trans-unit id="c940155095e7923b03e52693b949145b33288361" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless --no-progress or --verbose is specified. --progress forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Состояние прогресса сообщается в стандартном потоке ошибок по умолчанию,когда он подключен к терминалу,если только не указано --no-progress или --verbose.--progress принуждает к отображению состояния прогресса,даже если стандартный поток ошибок не направлен на терминал.</target>
        </trans-unit>
        <trans-unit id="2dcc9cf9e59b81f490159a20a52344236fd5a3dc" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Состояние прогресса сообщается в стандартном потоке ошибок по умолчанию при его подключении к терминалу,если не указано -q.Этот флаг вызывает состояние прогресса,даже если стандартный поток ошибок не направляется в терминал.</target>
        </trans-unit>
        <trans-unit id="e5cc82042c92eacaa55f040bd35ecdec7afbf1c3" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag enables progress reporting even if not attached to a terminal, regardless of &lt;code&gt;--quiet&lt;/code&gt;.</source>
          <target state="translated">Состояние выполнения сообщается в стандартном потоке ошибок по умолчанию, когда он подключен к терминалу, если не указан параметр &lt;code&gt;--quiet&lt;/code&gt; . Этот флаг включает отчет о ходе выполнения, даже если он не подключен к терминалу, независимо от &lt;code&gt;--quiet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84082a3e9b3738ac2cad5de1d40208e556f0b5a9" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Состояние выполнения сообщается в стандартном потоке ошибок по умолчанию, когда он подключен к терминалу, если не указан параметр &lt;code&gt;--quiet&lt;/code&gt; . Этот флаг принудительно устанавливает статус выполнения, даже если стандартный поток ошибок не направлен на терминал.</target>
        </trans-unit>
        <trans-unit id="8942c3e281f4b4272bf2fa19690b7dbfeb0da954" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal. This flag enables progress reporting even if not attached to a terminal. Can&amp;rsquo;t use &lt;code&gt;--progress&lt;/code&gt; together with &lt;code&gt;--porcelain&lt;/code&gt; or &lt;code&gt;--incremental&lt;/code&gt;.</source>
          <target state="translated">Состояние выполнения сообщается в стандартном потоке ошибок по умолчанию, когда он подключен к терминалу. Этот флаг включает отчет о ходе выполнения, даже если он не подключен к терминалу. Нельзя использовать &lt;code&gt;--progress&lt;/code&gt; вместе с &lt;code&gt;--porcelain&lt;/code&gt; или &lt;code&gt;--incremental&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a80ecee0b21f76717158fcc872d2fe8c9f70c9" translate="yes" xml:space="preserve">
          <source>Project list files should list one project per line, with each line having the following format</source>
          <target state="translated">Файлы списка проектов должны содержать по одному проекту в каждой строке,причем каждая строка имеет следующий формат</target>
        </trans-unit>
        <trans-unit id="64ddeaf66879746d77d52edba9fc6b51c3b5494f" translate="yes" xml:space="preserve">
          <source>Project specific override is not supported.</source>
          <target state="translated">Переопределение по конкретному проекту не поддерживается.</target>
        </trans-unit>
        <trans-unit id="38cb6b6f38fc49666443f39245952417f433b632" translate="yes" xml:space="preserve">
          <source>Projects list file format</source>
          <target state="translated">Формат файла списка проектов</target>
        </trans-unit>
        <trans-unit id="99a6cf116ac91087c7f440f3f894b1353453be3c" translate="yes" xml:space="preserve">
          <source>Promisor packfiles are repacked separately: if there are packfiles that have an associated &quot;.promisor&quot; file, these packfiles will be repacked into another separate pack, and an empty &quot;.promisor&quot; file corresponding to the new separate pack will be written.</source>
          <target state="translated">Пакеты Promisor переупаковываются отдельно:если есть пакеты,имеющие связанный с ними файл &quot;.promisor&quot;,то эти пакеты будут переупаковываться в другой отдельный пакет,и будет записан пустой файл &quot;.promisor&quot;,соответствующий новому отдельному пакету.</target>
        </trans-unit>
        <trans-unit id="1e3e6d8a5678027c372d639c7caa1ae762739111" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool.</source>
          <target state="translated">Незамедлительно перед каждым вызовом диф-инструмента.</target>
        </trans-unit>
        <trans-unit id="011847e8f4535310d3585f3561b850f5eaa68bd2" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool. This is the default behaviour; the option is provided to override any configuration settings.</source>
          <target state="translated">Незамедлительно перед каждым вызовом диф-инструмента.Это поведение по умолчанию;предусмотрена опция переопределения любых конфигурационных настроек.</target>
        </trans-unit>
        <trans-unit id="60f48217749656a50ce363c78d14fe3fba58b27e" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program to give the user a chance to skip the path.</source>
          <target state="translated">Запрашивать перед каждым вызовом программы разрешения слияния,чтобы дать пользователю возможность пропустить путь.</target>
        </trans-unit>
        <trans-unit id="1bd1cfd1155b4114e14d09a7c37c4a191ca7ac30" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program.</source>
          <target state="translated">Запрашивать перед каждым вызовом программы разрешения слияния.</target>
        </trans-unit>
        <trans-unit id="353a353b6eb50b67e795967c32fb24f9eeb5d549" translate="yes" xml:space="preserve">
          <source>Protocol notes: If you are using anonymous access via pserver, just select that. Those using SSH access should choose the &lt;code&gt;ext&lt;/code&gt; protocol, and configure &lt;code&gt;ext&lt;/code&gt; access on the Preferences&amp;rarr;Team&amp;rarr;CVS&amp;rarr;ExtConnection pane. Set CVS_SERVER to &quot;&lt;code&gt;git cvsserver&lt;/code&gt;&quot;. Note that password support is not good when using &lt;code&gt;ext&lt;/code&gt;, you will definitely want to have SSH keys setup.</source>
          <target state="translated">Примечания к протоколу: если вы используете анонимный доступ через pserver, просто выберите его. Те, кто использует доступ по SSH, должны выбрать протокол &lt;code&gt;ext&lt;/code&gt; и настроить доступ к &lt;code&gt;ext&lt;/code&gt; в Preferences &amp;rarr; Team &amp;rarr; CVS &amp;rarr; ExtConnection pane. Установите CVS_SERVER на &quot; &lt;code&gt;git cvsserver&lt;/code&gt; &quot;. Обратите внимание, что поддержка паролей не очень хороша при использовании &lt;code&gt;ext&lt;/code&gt; , вам обязательно нужно настроить ключи SSH.</target>
        </trans-unit>
        <trans-unit id="4e8bf93a6f67bf7687593a7faf3fef64759fa4d3" translate="yes" xml:space="preserve">
          <source>Protocol version 2 is stateless by default. This means that all commands must only last a single round and be stateless from the perspective of the server side, unless the client has requested a capability indicating that state should be maintained by the server. Clients MUST NOT require state management on the server side in order to function correctly. This permits simple round-robin load-balancing on the server side, without needing to worry about state management.</source>
          <target state="translated">Версия протокола 2 по умолчанию не имеет гражданства.Это означает,что все команды должны длиться только один раунд и быть бездействующими с точки зрения сервера,если только клиент не запросил возможность,указывающую на то,что состояние должно поддерживаться сервером.Клиенты НЕ ДОЛЖНЫ требовать управления состоянием на стороне сервера для корректной работы.Это позволяет легко балансировать нагрузку на стороне сервера,не беспокоясь об управлении состоянием.</target>
        </trans-unit>
        <trans-unit id="a457f44dce93162338e37dcadcb5a7e148a161e8" translate="yes" xml:space="preserve">
          <source>Provide content or type and size information for repository objects</source>
          <target state="translated">Предоставлять информацию о содержании или типе и размере объектов репозитория.</target>
        </trans-unit>
        <trans-unit id="ce1130d2639274732ace3560e1b161a1f25e1593" translate="yes" xml:space="preserve">
          <source>Provide more progress information.</source>
          <target state="translated">Предоставьте больше информации о прогрессе.</target>
        </trans-unit>
        <trans-unit id="ddd6c4f93ce8e6500d931f94e6b50cb8556ece89" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--from&lt;/code&gt; option to format-patch. Accepts a boolean value, or a name and email address. If false, format-patch defaults to &lt;code&gt;--no-from&lt;/code&gt;, using commit authors directly in the &quot;From:&quot; field of patch mails. If true, format-patch defaults to &lt;code&gt;--from&lt;/code&gt;, using your committer identity in the &quot;From:&quot; field of patch mails and including a &quot;From:&quot; field in the body of the patch mail if different. If set to a non-boolean value, format-patch uses that value instead of your committer identity. Defaults to false.</source>
          <target state="translated">Предоставляет значение по умолчанию для параметра &lt;code&gt;--from&lt;/code&gt; для format-patch. Принимает логическое значение или имя и адрес электронной почты. Если false, format-patch по умолчанию имеет значение &lt;code&gt;--no-from&lt;/code&gt; , с указанием авторов коммитов непосредственно в поле &amp;laquo;From:&amp;raquo; писем с исправлениями. Если true, по умолчанию format-patch принимает значение &lt;code&gt;--from&lt;/code&gt; , используя ваш идентификатор коммиттера в поле &amp;laquo;От:&amp;raquo; сообщений с исправлениями и включая поле &amp;laquo;От:&amp;raquo; в теле письма с исправлением, если оно отличается. Если установлено не-логическое значение, format-patch использует это значение вместо вашего идентификатора коммиттера. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="07e705dc3eb04b1cd0e9d868ce2fbabc5a7b23e9" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--notes&lt;/code&gt; option to format-patch. Accepts a boolean value, or a ref which specifies where to get notes. If false, format-patch defaults to &lt;code&gt;--no-notes&lt;/code&gt;. If true, format-patch defaults to &lt;code&gt;--notes&lt;/code&gt;. If set to a non-boolean value, format-patch defaults to &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt;, where &lt;code&gt;ref&lt;/code&gt; is the non-boolean value. Defaults to false.</source>
          <target state="translated">Предоставляет значение по умолчанию для параметра &lt;code&gt;--notes&lt;/code&gt; для format-patch. Принимает логическое значение или ссылку, указывающую, где брать заметки. Если false, format-patch по умолчанию &lt;code&gt;--no-notes&lt;/code&gt; . Если это правда, формат-патч по умолчанию &lt;code&gt;--notes&lt;/code&gt; . Если установлено не-логическое значение, по умолчанию format-patch &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt; значение --notes = &amp;lt;ref&amp;gt; , где &lt;code&gt;ref&lt;/code&gt; - не-логическое значение. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="dae8413448109f25f13d1230fdfd21a6427a0a34" translate="yes" xml:space="preserve">
          <source>Provides the name of the object in the original source control system. fast-import will simply ignore this directive, but filter processes which operate on and modify the stream before feeding to fast-import may have uses for this information</source>
          <target state="translated">Предоставляет имя объекта в оригинальной системе управления исходным кодом.fast-import просто игнорирует эту директиву,но процессы фильтрации,которые работают и изменяют поток перед подачей на fast-import,могут использовать эту информацию</target>
        </trans-unit>
        <trans-unit id="354f719eac7091e1c38104be699d2a68f56df045" translate="yes" xml:space="preserve">
          <source>Providing cvs access to a git repository</source>
          <target state="translated">Предоставление cvs доступа к git-репозиторию</target>
        </trans-unit>
        <trans-unit id="05a28ca41ca8e50984ed01529e7df3e3335567dc" translate="yes" xml:space="preserve">
          <source>Prune all unreachable objects from the object database</source>
          <target state="translated">Удалить все недоступные объекты из объектной базы данных.</target>
        </trans-unit>
        <trans-unit id="347c95991436ac84fd290ccf1ebe7a72eadc41e7" translate="yes" xml:space="preserve">
          <source>Prune any reflog entries that point to &quot;broken commits&quot;. A broken commit is a commit that is not reachable from any of the reference tips and that refers, directly or indirectly, to a missing commit, tree, or blob object.</source>
          <target state="translated">Удалять все записи в рефлоге,указывающие на &quot;сломанные коммиты&quot;.Сломанный коммит-это коммит,который недоступен из справочных материалов и ссылается,прямо или косвенно,на отсутствующий коммит,дерево или блок-объект.</target>
        </trans-unit>
        <trans-unit id="a7eae2a7a6ec9df449cef235306188bcb1fafe15" translate="yes" xml:space="preserve">
          <source>Prune entries older than &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; that are not reachable from the current tip of the branch. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt;, which in turn defaults to 30 days. &lt;code&gt;--expire-unreachable=all&lt;/code&gt; prunes unreachable entries regardless of their age; &lt;code&gt;--expire-unreachable=never&lt;/code&gt; turns off early pruning of unreachable entries (but see &lt;code&gt;--expire&lt;/code&gt;).</source>
          <target state="translated">Удалите записи старше &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; , которые недоступны из текущего конца ветки. Если этот параметр не указан, время истечения срока берется из параметра конфигурации &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt; , который, в свою очередь, по умолчанию равен 30 дням. &lt;code&gt;--expire-unreachable=all&lt;/code&gt; недостижимые записи удаляются независимо от их возраста; &lt;code&gt;--expire-unreachable=never&lt;/code&gt; отключает раннее &lt;code&gt;--expire&lt;/code&gt; недоступных записей (но см. --expire ).</target>
        </trans-unit>
        <trans-unit id="f510204b241f9f833d70b40e365b78ba855d5d73" translate="yes" xml:space="preserve">
          <source>Prune entries older than the specified time. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpire&lt;/code&gt;, which in turn defaults to 90 days. &lt;code&gt;--expire=all&lt;/code&gt; prunes entries regardless of their age; &lt;code&gt;--expire=never&lt;/code&gt; turns off pruning of reachable entries (but see &lt;code&gt;--expire-unreachable&lt;/code&gt;).</source>
          <target state="translated">Удалять записи старше указанного времени. Если этот параметр не указан, срок действия берется из параметра конфигурации &lt;code&gt;gc.reflogExpire&lt;/code&gt; , который, в свою очередь, по умолчанию равен 90 дням. &lt;code&gt;--expire=all&lt;/code&gt; записи чернослива независимо от их возраста; &lt;code&gt;--expire=never&lt;/code&gt; отключает сокращение доступных записей (но см. &lt;code&gt;--expire-unreachable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ca76117e69104a0e4e81d319f878c7014bb3c8a" translate="yes" xml:space="preserve">
          <source>Prune loose objects older than date (default is 2 weeks ago, overridable by the config variable &lt;code&gt;gc.pruneExpire&lt;/code&gt;). --prune=now prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently; see &quot;NOTES&quot; below. --prune is on by default.</source>
          <target state="translated">Удалите незакрепленные объекты старше даты (по умолчанию - 2 недели назад, это можно изменить с помощью переменной конфигурации &lt;code&gt;gc.pruneExpire&lt;/code&gt; ). --prune = теперь удаляет незакрепленные объекты независимо от их возраста и увеличивает риск повреждения, если другой процесс одновременно выполняет запись в репозиторий; см. &amp;laquo;ПРИМЕЧАНИЯ&amp;raquo; ниже. --prune по умолчанию включен.</target>
        </trans-unit>
        <trans-unit id="ad1903147c3980cb00334e6e57ade6c895b0d197" translate="yes" xml:space="preserve">
          <source>Prune records of conflicted merges that occurred a long time ago. By default, unresolved conflicts older than 15 days and resolved conflicts older than 60 days are pruned. These defaults are controlled via the &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; and &lt;code&gt;gc.rerereResolved&lt;/code&gt; configuration variables respectively.</source>
          <target state="translated">Удалите записи о конфликтующих слияниях, произошедших давным-давно. По умолчанию неурегулированные конфликты старше 15 дней и разрешенные конфликты старше 60 дней удаляются. Эти значения по умолчанию управляются с помощью переменных конфигурации &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; и &lt;code&gt;gc.rerereResolved&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="9ae5dc95253bd1047251fe2f0130ef53d935cb16" translate="yes" xml:space="preserve">
          <source>Prune working tree information in $GIT_DIR/worktrees.</source>
          <target state="translated">Обработайте информацию о рабочем дереве в $GIT_DIR/рабочих деревьях.</target>
        </trans-unit>
        <trans-unit id="1daa62e08ce5be741f0f9512af6fe6aea569309c" translate="yes" xml:space="preserve">
          <source>Pruning</source>
          <target state="translated">Pruning</target>
        </trans-unit>
        <trans-unit id="9780740ad9404eab5bef283300816b2d37b6c371" translate="yes" xml:space="preserve">
          <source>Pruning tags with &lt;code&gt;--prune-tags&lt;/code&gt; also works when fetching a URL instead of a named remote. These will all prune tags not found on origin:</source>
          <target state="translated">&lt;code&gt;--prune-tags&lt;/code&gt; тегов с помощью --prune-tags также работает при получении URL-адреса вместо именованного пульта. Все они будут сокращать теги, не найденные в источнике:</target>
        </trans-unit>
        <trans-unit id="5d67c6362cb385f7b2fd7440df4474229e4ced1c" translate="yes" xml:space="preserve">
          <source>Pseudorefs are a class of files under &lt;code&gt;$GIT_DIR&lt;/code&gt; which behave like refs for the purposes of rev-parse, but which are treated specially by git. Pseudorefs both have names that are all-caps, and always start with a line consisting of a &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; followed by whitespace. So, HEAD is not a pseudoref, because it is sometimes a symbolic ref. They might optionally contain some additional data. &lt;code&gt;MERGE_HEAD&lt;/code&gt; and &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; are examples. Unlike &lt;a href=&quot;#def_per_worktree_ref&quot;&gt;per-worktree refs&lt;/a&gt;, these files cannot be symbolic refs, and never have reflogs. They also cannot be updated through the normal ref update machinery. Instead, they are updated by directly writing to the files. However, they can be read as if they were refs, so &lt;code&gt;git rev-parse
MERGE_HEAD&lt;/code&gt; will work.</source>
          <target state="translated">Псевдорефы - это класс файлов в &lt;code&gt;$GIT_DIR&lt;/code&gt; которые ведут себя как ссылки для целей rev-parse, но которые обрабатываются git специально. Оба псевдорефа имеют имена, состоящие из заглавных букв, и всегда начинаются со строки, состоящей из &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1,&lt;/a&gt; за которым следует пробел. Итак, HEAD - это не псевдореф, потому что иногда это символическая ссылка. Они могут дополнительно содержать некоторые дополнительные данные. &lt;code&gt;MERGE_HEAD&lt;/code&gt; и &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; являются примерами. В отличие от &lt;a href=&quot;#def_per_worktree_ref&quot;&gt;ссылок на каждое рабочее дерево&lt;/a&gt; , эти файлы не могут быть символическими ссылками и никогда не иметь журналов повторения. Они также не могут быть обновлены с помощью обычного механизма обновления ссылок. Вместо этого они обновляются путем прямой записи в файлы. Однако их можно читать так, как если бы они были рефери, поэтому &lt;code&gt;git rev-parse MERGE_HEAD&lt;/code&gt; будет работать.</target>
        </trans-unit>
        <trans-unit id="b7a4dc2e6290047f1f86721c32ae669785e9b742" translate="yes" xml:space="preserve">
          <source>Public Git repositories</source>
          <target state="translated">Общедоступные Git-репозитории</target>
        </trans-unit>
        <trans-unit id="8f3f20e99361b4469a543cafe71c660d905701e0" translate="yes" xml:space="preserve">
          <source>Public api</source>
          <target state="translated">Публичный апинефрин</target>
        </trans-unit>
        <trans-unit id="661a1caa924e6377c910ab84f021b879aa1f3688" translate="yes" xml:space="preserve">
          <source>Public key of the https service. It may either be the filename of a PEM or DER encoded public key file or a string starting with &lt;code&gt;sha256//&lt;/code&gt; followed by the base64 encoded sha256 hash of the public key. See also libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt;. git will exit with an error if this option is set but not supported by cURL.</source>
          <target state="translated">Публичный ключ сервиса https. Это может быть либо имя файла открытого ключа в кодировке PEM или DER, либо строка, начинающаяся с &lt;code&gt;sha256//&lt;/code&gt; за которой следует хеш открытого ключа sha256 в кодировке base64. См. Также libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt; . git выйдет с ошибкой, если этот параметр установлен, но не поддерживается cURL.</target>
        </trans-unit>
        <trans-unit id="fcd79d77a075207d5bb03627d6390daac4adccdf" translate="yes" xml:space="preserve">
          <source>Publishing the changes from your local (private) repository to your remote (public) repository requires a write privilege on the remote machine. You need to have an SSH account there to run a single command, &lt;code&gt;git-receive-pack&lt;/code&gt;.</source>
          <target state="translated">Для публикации изменений из локального (частного) репозитория в удаленный (общедоступный) репозиторий требуется право записи на удаленном компьютере. У вас должна быть учетная запись SSH для выполнения одной команды &lt;code&gt;git-receive-pack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5654eba7f3fb26678d0b33453ea83f3704835b" translate="yes" xml:space="preserve">
          <source>Publishing your work</source>
          <target state="translated">Публикация вашей работы</target>
        </trans-unit>
        <trans-unit id="5225d106493e2d5cee97f92acd212fcbe8379cc8" translate="yes" xml:space="preserve">
          <source>Pulling a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to &lt;a href=&quot;#def_fetch&quot;&gt;fetch&lt;/a&gt; it and &lt;a href=&quot;#def_merge&quot;&gt;merge&lt;/a&gt; it. See also &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt;.</source>
          <target state="translated">Вытащить &lt;a href=&quot;#def_branch&quot;&gt;ветку&lt;/a&gt; означает &lt;a href=&quot;#def_fetch&quot;&gt;получить&lt;/a&gt; ее и &lt;a href=&quot;#def_merge&quot;&gt;объединить&lt;/a&gt; . См. Также &lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ba996099ee22cf557dfd858fcdfe9998a7d87a8" translate="yes" xml:space="preserve">
          <source>Pulling down the submodules is a two-step process. First run &lt;code&gt;git submodule
init&lt;/code&gt; to add the submodule repository URLs to &lt;code&gt;.git/config&lt;/code&gt;:</source>
          <target state="translated">Удаление субмодулей - это двухэтапный процесс. Сначала запустите &lt;code&gt;git submodule init&lt;/code&gt; чтобы добавить URL-адреса репозитория подмодулей в &lt;code&gt;.git/config&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="67689e297cd4fdd92ebe641f7b6ed9bc63361f6b" translate="yes" xml:space="preserve">
          <source>Pulling into a dirty tree</source>
          <target state="translated">Втягивание в грязное дерево</target>
        </trans-unit>
        <trans-unit id="678a9bfb35ce5da855b86526d846cbdc7583b760" translate="yes" xml:space="preserve">
          <source>Push &quot;matching&quot; branches to &lt;code&gt;origin&lt;/code&gt;. See &amp;lt;refspec&amp;gt; in the &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt; section above for a description of &quot;matching&quot; branches.</source>
          <target state="translated">Переместите &amp;laquo;соответствующие&amp;raquo; ветви в &lt;code&gt;origin&lt;/code&gt; . См. &amp;lt;refspec&amp;gt; в разделе &lt;a href=&quot;#OPTIONS&quot;&gt;ОПЦИИ&lt;/a&gt; выше для описания &amp;laquo;соответствующих&amp;raquo; ветвей.</target>
        </trans-unit>
        <trans-unit id="e3d386bb2b306b430b8f1443632bcddb41f7fbbb" translate="yes" xml:space="preserve">
          <source>Push all branches (i.e. refs under &lt;code&gt;refs/heads/&lt;/code&gt;); cannot be used with other &amp;lt;refspec&amp;gt;.</source>
          <target state="translated">Протолкните все ветки (т.е. ссылки в &lt;code&gt;refs/heads/&lt;/code&gt; ); не может использоваться с другими &amp;lt;refspec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="7ed05cac5fbf2fe13d768ad8d52cf3e6b3326c39" translate="yes" xml:space="preserve">
          <source>Push all the refs that would be pushed without this option, and also push annotated tags in &lt;code&gt;refs/tags&lt;/code&gt; that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed. This can also be specified with configuration variable &lt;code&gt;push.followTags&lt;/code&gt;. For more information, see &lt;code&gt;push.followTags&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Отправьте все ссылки, которые будут отправлены без этой опции, а также разместите аннотированные теги в &lt;code&gt;refs/tags&lt;/code&gt; , которые отсутствуют на пульте дистанционного управления, но указывают на фиксацию, доступную из отправляемых ссылок. Это также можно указать с помощью переменной конфигурации &lt;code&gt;push.followTags&lt;/code&gt; . Для получения дополнительной информации см. &lt;code&gt;push.followTags&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="640e91962e4a94024fb44763555198cb451cbb5d" translate="yes" xml:space="preserve">
          <source>Push into another repository.</source>
          <target state="translated">Затолкайте в другое хранилище.</target>
        </trans-unit>
        <trans-unit id="fc1129a549e46f5ee09d052c0e625db078207268" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository.</source>
          <target state="translated">Вставьте в публичный репозиторий из вашего основного репозитория.</target>
        </trans-unit>
        <trans-unit id="a011ac29541d686365501a5376539fc2a54082f8" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository. Run &lt;code&gt;git repack&lt;/code&gt;, and possibly &lt;code&gt;git prune&lt;/code&gt; if the transport used for pulling from your repository supports packed repositories.</source>
          <target state="translated">Загрузите в публичный репозиторий из вашего основного репозитория. Запустите &lt;code&gt;git repack&lt;/code&gt; и, возможно, &lt;code&gt;git prune&lt;/code&gt; , если транспорт, используемый для извлечения из вашего репозитория, поддерживает упакованные репозитории.</target>
        </trans-unit>
        <trans-unit id="a8251f9563aa908db5da52a9527e9f939a118d16" translate="yes" xml:space="preserve">
          <source>Push master, using file descriptor #7 to read data from git-receive-pack and file descriptor #8 to write data to same service.</source>
          <target state="translated">Push master,используя файловый дескриптор #7 для чтения данных из git-приёмника и файловый дескриптор #8 для записи данных в тот же сервис.</target>
        </trans-unit>
        <trans-unit id="db6a77b6524cf46e0155fc78cb84e6ef6e8d26d4" translate="yes" xml:space="preserve">
          <source>Push objects over Git protocol to another repository</source>
          <target state="translated">Перемещайте объекты по Git-протоколу в другой репозиторий.</target>
        </trans-unit>
        <trans-unit id="e328f2dc0a129ee52c24984713b8e3e05193f873" translate="yes" xml:space="preserve">
          <source>Push objects over HTTP/DAV to another repository</source>
          <target state="translated">Перенос объектов по HTTP/DAV в другой репозиторий</target>
        </trans-unit>
        <trans-unit id="93e6fc3901865e79bc1dfa6c467266c7822bf760" translate="yes" xml:space="preserve">
          <source>Push the current branch to the remote ref matching &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;origin&lt;/code&gt; repository. This form is convenient to push the current branch without thinking about its local name.</source>
          <target state="translated">Отправьте текущую ветвь на удаленный &lt;code&gt;master&lt;/code&gt; сопоставления ссылок в &lt;code&gt;origin&lt;/code&gt; репозитории. Эта форма удобна для проталкивания текущей ветки, не думая о ее локальном имени.</target>
        </trans-unit>
        <trans-unit id="7221b3bad2db1abe78fb6e7112e947ec9066c484" translate="yes" xml:space="preserve">
          <source>Push your changes to the public repository, and announce it to the public.</source>
          <target state="translated">Вставьте свои изменения в публичный репозиторий и объявите о них.</target>
        </trans-unit>
        <trans-unit id="44e2374abe889d292378278a32f8732ae3d0723a" translate="yes" xml:space="preserve">
          <source>Push your changes to your public repository, and ask your &quot;project lead&quot; and possibly your &quot;sub-subsystem maintainers&quot; to pull from it.</source>
          <target state="translated">Вставьте ваши изменения в ваше публичное хранилище и попросите вашего &quot;руководителя проекта&quot; и,возможно,ваших &quot;мейнтейнеров подсистемы&quot; извлечь из него.</target>
        </trans-unit>
        <trans-unit id="64c3ecd283374b8e31c77b37f0b37ed07f7e3e67" translate="yes" xml:space="preserve">
          <source>Pushes the given local &amp;lt;src&amp;gt; commit or branch to the remote branch described by &amp;lt;dst&amp;gt;. A batch sequence of one or more &lt;code&gt;push&lt;/code&gt; commands is terminated with a blank line (if there is only one reference to push, a single &lt;code&gt;push&lt;/code&gt; command is followed by a blank line). For example, the following would be two batches of &lt;code&gt;push&lt;/code&gt;, the first asking the remote-helper to push the local ref &lt;code&gt;master&lt;/code&gt; to the remote ref &lt;code&gt;master&lt;/code&gt; and the local &lt;code&gt;HEAD&lt;/code&gt; to the remote &lt;code&gt;branch&lt;/code&gt;, and the second asking to push ref &lt;code&gt;foo&lt;/code&gt; to ref &lt;code&gt;bar&lt;/code&gt; (forced update requested by the &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">Отправляет заданный локальный коммит или ветвь &amp;lt;src&amp;gt; в удаленную ветвь, описанную &amp;lt;dst&amp;gt;. Пакетная последовательность из одной или нескольких &lt;code&gt;push&lt;/code&gt; - команд заканчивается пустой строкой (если есть только одна ссылка для push, за одиночной командой &lt;code&gt;push&lt;/code&gt; следует пустая строка). Например, следующие будут двумя пакетами &lt;code&gt;push&lt;/code&gt; , первая просит удаленного помощника подтолкнуть локальный &lt;code&gt;master&lt;/code&gt; к удаленному &lt;code&gt;master&lt;/code&gt; а локальный &lt;code&gt;HEAD&lt;/code&gt; - в удаленную &lt;code&gt;branch&lt;/code&gt; , а второй просит нажать ref &lt;code&gt;foo&lt;/code&gt; на ref &lt;code&gt;bar&lt;/code&gt; (принудительное обновление запрошено знаком &lt;code&gt;+&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca5456a5df7b11e9ef0d22090b33d4f3bd62ba82" translate="yes" xml:space="preserve">
          <source>Pushes which fail due to problems with the incoming pack, missing objects, or due to the &lt;code&gt;pre-receive&lt;/code&gt; hook will not leave any on-disk data. This is usually helpful to prevent repeated failed pushes from filling up your disk, but can make debugging more challenging.</source>
          <target state="translated">Пуши, которые завершаются ошибкой из-за проблем с входящим пакетом, отсутствующих объектов или из &lt;code&gt;pre-receive&lt;/code&gt; перехвата предварительного приема , не оставляют никаких данных на диске. Обычно это помогает предотвратить заполнение диска повторяющимися неудачными нажатиями, но может усложнить отладку.</target>
        </trans-unit>
        <trans-unit id="bd3f47195169191b06e6fb59aa660030c03d8082" translate="yes" xml:space="preserve">
          <source>Pushing a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to get the branch&amp;rsquo;s &lt;a href=&quot;#def_head_ref&quot;&gt;head ref&lt;/a&gt; from a remote &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt;, find out if it is an ancestor to the branch&amp;rsquo;s local head ref, and in that case, putting all objects, which are &lt;a href=&quot;#def_reachable&quot;&gt;reachable&lt;/a&gt; from the local head ref, and which are missing from the remote repository, into the remote &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt;, and updating the remote head ref. If the remote &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; is not an ancestor to the local head, the push fails.</source>
          <target state="translated">Нажатие &lt;a href=&quot;#def_branch&quot;&gt;ветки&lt;/a&gt; означает получение &lt;a href=&quot;#def_head_ref&quot;&gt;ссылки&lt;/a&gt; на голову ветки из удаленного &lt;a href=&quot;#def_repository&quot;&gt;репозитория&lt;/a&gt; , выяснение, является ли она предком локальной ссылки на голову ветки, и в этом случае размещение всех объектов, которые &lt;a href=&quot;#def_reachable&quot;&gt;доступны&lt;/a&gt; из локальной ссылки головы и которые являются отсутствует в удаленном репозитории, в &lt;a href=&quot;#def_object_database&quot;&gt;базу данных&lt;/a&gt; удаленных объектов и обновляет удаленную головку ref. Если удаленная &lt;a href=&quot;#def_head&quot;&gt;головка&lt;/a&gt; не является предком локальной головки, отправка не выполняется.</target>
        </trans-unit>
        <trans-unit id="a1b201ad98b52436e58805968e041862b0e44b88" translate="yes" xml:space="preserve">
          <source>Pushing an empty &amp;lt;src&amp;gt; allows you to delete the &amp;lt;dst&amp;gt; ref from the remote repository. Deletions are always accepted without a leading &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;), except when forbidden by configuration or hooks. See &lt;code&gt;receive.denyDeletes&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; and &lt;code&gt;pre-receive&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; in &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Нажатие пустого &amp;lt;src&amp;gt; позволяет удалить &amp;lt;dst&amp;gt; ref из удаленного репозитория. Делеции всегда принимаются без ведущего &lt;code&gt;+&lt;/code&gt; в refspec (или &lt;code&gt;--force&lt;/code&gt; ), кроме случаев , когда запрещено конфигурации или крючков. См. &lt;code&gt;receive.denyDeletes&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; и &lt;code&gt;pre-receive&lt;/code&gt; и &lt;code&gt;update&lt;/code&gt; в &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b554604b5dbdc966cb242c709d8d9564fd3f48c" translate="yes" xml:space="preserve">
          <source>Pushing changes to a public repository</source>
          <target state="translated">Перенос изменений в публичный репозиторий</target>
        </trans-unit>
        <trans-unit id="eedfa4fe862b4ad2f2d3d15f8505bb4e78d4fc1a" translate="yes" xml:space="preserve">
          <source>Put all the committers in the same group, and make the repository writable by that group:</source>
          <target state="translated">Поместите все коммиттеры в одну группу и сделайте репозиторий доступным для записи этой группой:</target>
        </trans-unit>
        <trans-unit id="c26397c67704ec958580d89b3087bf7a34700351" translate="yes" xml:space="preserve">
          <source>Put everything in the current head&amp;rsquo;s Documentation/ directory into &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt;, with the prefix &lt;code&gt;git-docs/&lt;/code&gt;.</source>
          <target state="translated">Поместите все из каталога Documentation / текущей головы в &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt; с префиксом &lt;code&gt;git-docs/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea705b3a47d1cdf9261daf67230a93968f6edd0b" translate="yes" xml:space="preserve">
          <source>QUERY_STRING</source>
          <target state="translated">QUERY_STRING</target>
        </trans-unit>
        <trans-unit id="c3149be9220a8ce116523f671437212f69f45ea5" translate="yes" xml:space="preserve">
          <source>Quarantine environment</source>
          <target state="translated">карантинная среда</target>
        </trans-unit>
        <trans-unit id="ec85d37cf9d9f3d10289231d732a03bb25cc011c" translate="yes" xml:space="preserve">
          <source>Query p4 for labels associated with the depot paths, and add them as tags in Git. Limited usefulness as only imports labels associated with new changelists. Deprecated.</source>
          <target state="translated">Запрос p4 для меток,связанных с путями депо,и добавление их как тегов в Git.Ограниченная полезность в качестве только импортных этикеток,связанных с новыми списками изменений.Исключено.</target>
        </trans-unit>
        <trans-unit id="ce8d2336bc85bc6e5b624295904c32b955dda594" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;GitHub Cheat Sheet&lt;/a&gt;&lt;small&gt;(PDF)&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;&lt;small&gt;(SVG | PNG)&lt;/small&gt;</source>
          <target state="translated">Краткие справочные руководства: &lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;Памятка по GitHub &lt;/a&gt;&lt;small&gt;(PDF)&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Шпаргалка по Visual Git &lt;/a&gt;&lt;small&gt;(SVG | PNG)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3a11ac4a816649c90b2a876b8ed365a4f747816e" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages.</source>
          <target state="translated">Тихо,подавите сообщения обратной связи.</target>
        </trans-unit>
        <trans-unit id="2ac9102b0a2f3eb9abc09cf4e1c41ec0575ff1e1" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages. Implies &lt;code&gt;--no-progress&lt;/code&gt;.</source>
          <target state="translated">Тихо, подавить сообщения обратной связи. Подразумевает &lt;code&gt;--no-progress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de1dab6bd571badbfbb3ddaa6f495be909332129" translate="yes" xml:space="preserve">
          <source>Quiet. If --refresh finds that the index needs an update, the default behavior is to error out. This option makes &lt;code&gt;git update-index&lt;/code&gt; continue anyway.</source>
          <target state="translated">Тихо. Если --refresh обнаруживает, что индекс нуждается в обновлении, поведение по умолчанию - ошибка. Этот параметр в любом случае продолжает работу с &lt;code&gt;git update-index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1baedfd2936afaf34298be8c53a6f3520c17d3e" translate="yes" xml:space="preserve">
          <source>Quiet; do not warn about conflicts.</source>
          <target state="translated">Тихо,не предупреждайте о конфликтах.</target>
        </trans-unit>
        <trans-unit id="e9770de83f70890562d92f9477d5315581d69261" translate="yes" xml:space="preserve">
          <source>Quite similarly, if &lt;code&gt;core.symlinks&lt;/code&gt; configuration variable is set to &lt;code&gt;false&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), symbolic links are checked out as plain files, and this command does not modify a recorded file mode from symbolic link to regular file.</source>
          <target state="translated">Точно так же, если для переменной конфигурации &lt;code&gt;core.symlinks&lt;/code&gt; задано значение &lt;code&gt;false&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ), символические ссылки проверяются как простые файлы, и эта команда не изменяет режим записанного файла с символической ссылки на обычный файл.</target>
        </trans-unit>
        <trans-unit id="f0f61d9660842b035df0296041289cbf85b3ae28" translate="yes" xml:space="preserve">
          <source>Quote fields containing whitespace as if they were strings in C source code; i.e., surrounded by double-quotes and with backslash escapes. Use 40 &quot;0&quot; characters or the empty string to specify a zero value. To specify a missing value, omit the value and its preceding SP entirely.</source>
          <target state="translated">Поля кавычек,содержащие пробелы,как если бы они были строками в исходном коде на языке Си;т.е.окруженные двойными кавычками и с экранированием обратным слешем.Используйте 40 символов &quot;0&quot; или пустую строку для указания нулевого значения.Чтобы указать пропущенное значение,опустите значение и его предшествующий ПВ целиком.</target>
        </trans-unit>
        <trans-unit id="0550aeb8801a3ad8332244f3d277c748ecb56080" translate="yes" xml:space="preserve">
          <source>Quoted aliases and quoted addresses are not supported: lines that contain a &lt;code&gt;&quot;&lt;/code&gt; symbol are ignored.</source>
          <target state="translated">Цитируемые псевдонимы и цитируемые адреса не поддерживаются: строки, содержащие &lt;code&gt;&quot;&lt;/code&gt; символ игнорируются.</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="38354f3564dc690008158ec27147b7718eef20da" translate="yes" xml:space="preserve">
          <source>R: renaming of a file</source>
          <target state="translated">R:переименование файла</target>
        </trans-unit>
        <trans-unit id="73ff05a9f629bff633fa7a0499495556f0f1a07f" translate="yes" xml:space="preserve">
          <source>README.html</source>
          <target state="translated">README.html</target>
        </trans-unit>
        <trans-unit id="986c96108f4514e08f8de60c616ff1d0727fd986" translate="yes" xml:space="preserve">
          <source>REMOTE_ADDR</source>
          <target state="translated">REMOTE_ADDR</target>
        </trans-unit>
        <trans-unit id="613cec3f00ac4a24def4b10bec39e10198b8d82e" translate="yes" xml:space="preserve">
          <source>REMOTE_USER</source>
          <target state="translated">REMOTE_USER</target>
        </trans-unit>
        <trans-unit id="a16e10b928e7c21c5b4ae3d47f9db3c0b6c782c3" translate="yes" xml:space="preserve">
          <source>REQUEST_METHOD</source>
          <target state="translated">REQUEST_METHOD</target>
        </trans-unit>
        <trans-unit id="697070f17a70b2490138caae401415ac7b401fbd" translate="yes" xml:space="preserve">
          <source>RFC 2822</source>
          <target state="translated">RFC 2822</target>
        </trans-unit>
        <trans-unit id="b34db1f303fd91c6e7039f452d5097c789b26cf1" translate="yes" xml:space="preserve">
          <source>Rather than checking out a branch to work on it, check out a commit for inspection and discardable experiments. This is the default behavior of &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; when &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; is not a branch name. See the &quot;DETACHED HEAD&quot; section below for details.</source>
          <target state="translated">Вместо того, чтобы проверять ветку для работы над ней, проверьте фиксацию для проверки и отклоняемых экспериментов. Это поведение по умолчанию для &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; , когда &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; не является именем ветки. См. Раздел &amp;laquo;ОТДЕЛЕННАЯ ГОЛОВКА&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="4e4bfd7d1a0190903bc19000a40525c987ff7008" translate="yes" xml:space="preserve">
          <source>Raw output format</source>
          <target state="translated">Формат исходного вывода</target>
        </trans-unit>
        <trans-unit id="7b0a88cf0ceef9e929b45fca40ecfa70b119395a" translate="yes" xml:space="preserve">
          <source>Re-author p4 changes before submitting to p4. This option requires p4 admin privileges.</source>
          <target state="translated">Переиздайте изменения в p4 перед отправкой в p4.Эта опция требует привилегий администратора p4.</target>
        </trans-unit>
        <trans-unit id="a3d5287f4feb36f53be9e482bea0b4f69488906a" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more details about each hook.</source>
          <target state="translated">Прочтите &lt;a href=&quot;githooks&quot;&gt;githooks [5],&lt;/a&gt; чтобы узнать больше о каждом хуке.</target>
        </trans-unit>
        <trans-unit id="3c99ae2389e194940d6e9dae44358b0f59db22c3" translate="yes" xml:space="preserve">
          <source>Read a list of commits from stdin and commit them in reverse order. Only the leading sha1 is read from each line, so &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; output can be used.</source>
          <target state="translated">Прочтите список коммитов со стандартного ввода и зафиксируйте их в обратном порядке. Из каждой строки читается только начальный sha1, поэтому можно использовать вывод &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a81bd113ea455376c0709dc2b5dec2fbcc3eae4" translate="yes" xml:space="preserve">
          <source>Read a packed archive (.pack) from the standard input, expanding the objects contained within and writing them into the repository in &quot;loose&quot; (one object per file) format.</source>
          <target state="translated">Читайте упакованный архив (.pack)со стандартного входа,расширяя содержащиеся в нем объекты и записывая их в хранилище в &quot;свободном&quot; формате (по одному объекту на файл).</target>
        </trans-unit>
        <trans-unit id="cf4f210605880935e907e739e930d70c6c05f393" translate="yes" xml:space="preserve">
          <source>Read a patch from the standard input and compute the patch ID for it.</source>
          <target state="translated">Считайте патч со стандартного входа и вычислите для него идентификатор патча.</target>
        </trans-unit>
        <trans-unit id="118b284f547f2475f4692a5a06eacb1fa689da5d" translate="yes" xml:space="preserve">
          <source>Read a tar archive created by &lt;code&gt;git archive&lt;/code&gt; from the standard input and extract the commit ID stored in it. It reads only the first 1024 bytes of input, thus its runtime is not influenced by the size of the tar archive very much.</source>
          <target state="translated">Прочтите tar-архив, созданный &lt;code&gt;git archive&lt;/code&gt; , со стандартного ввода и извлеките хранящийся в нем идентификатор фиксации. Он читает только первые 1024 байта ввода, поэтому время его выполнения не сильно зависит от размера tar-архива.</target>
        </trans-unit>
        <trans-unit id="8323be41a83f5e8edd45cebf33794d8211b9a65a" translate="yes" xml:space="preserve">
          <source>Read additional exclude patterns that apply only to the directory and its subdirectories in &amp;lt;file&amp;gt;.</source>
          <target state="translated">Прочтите дополнительные шаблоны исключения, которые применяются только к каталогу и его подкаталогам в &amp;lt;file&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ec538abd0ecb84f4afa31116a9fde4a7bfbfc841" translate="yes" xml:space="preserve">
          <source>Read contacts, one per line, from the standard input after exhausting contacts provided on the command-line.</source>
          <target state="translated">Считывание контактов,по одному на строку,со стандартного входа после исчерпания контактов,предоставленных в командной строке.</target>
        </trans-unit>
        <trans-unit id="cc8be265c5565879cb19acef5a95bb650b329807" translate="yes" xml:space="preserve">
          <source>Read description of &lt;code&gt;%feature&lt;/code&gt; hash for detailed list, and descriptions. See also &quot;Configuring gitweb features&quot; section in &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;</source>
          <target state="translated">Прочтите описание хеш- &lt;code&gt;%feature&lt;/code&gt; для подробного списка и описаний. См. Также раздел &amp;laquo;Настройка функций gitweb&amp;raquo; в &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15ad57eb2da16d3087f86e421c960f711d5a7f97" translate="yes" xml:space="preserve">
          <source>Read exclude patterns from &amp;lt;file&amp;gt;; 1 per line.</source>
          <target state="translated">Прочитать шаблоны исключения из &amp;lt;file&amp;gt;; 1 на строку.</target>
        </trans-unit>
        <trans-unit id="f6c76b424f91b25c9b13ee14e1604c5d3fa96f28" translate="yes" xml:space="preserve">
          <source>Read file names from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">Читайте имена файлов со стандартного входа,по одному на строку,а не из командной строки.</target>
        </trans-unit>
        <trans-unit id="d0b5b313182b086a1f9af39ecd4467e46faca9cf" translate="yes" xml:space="preserve">
          <source>Read index information from stdin.</source>
          <target state="translated">Читайте информацию об индексах из stdin.</target>
        </trans-unit>
        <trans-unit id="80670c79001d8f8c9a5be5d38404bf833dac649e" translate="yes" xml:space="preserve">
          <source>Read its description.</source>
          <target state="translated">Прочитайте его описание.</target>
        </trans-unit>
        <trans-unit id="46ab10e675175e0e453c98d42b078fb4b46c2856" translate="yes" xml:space="preserve">
          <source>Read pathnames from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">Читайте патнамы со стандартного входа,по одному на строку,а не из командной строки.</target>
        </trans-unit>
        <trans-unit id="e51b79a68429169e8d905bac10a875d5d0bc0bbc" translate="yes" xml:space="preserve">
          <source>Read patterns from &amp;lt;file&amp;gt;, one per line.</source>
          <target state="translated">Считайте шаблоны из &amp;lt;file&amp;gt;, по одному в каждой строке.</target>
        </trans-unit>
        <trans-unit id="fed49b353bd2e8ef2071f098ea90e8175a16e2cc" translate="yes" xml:space="preserve">
          <source>Read text, such as commit messages, notes, tags and branch descriptions, from the standard input and clean it in the manner used by Git.</source>
          <target state="translated">Читайте текст,такой как сообщения о фиксации,заметки,теги и описания ветвей,из стандартного ввода и очищайте его так,как это используется в Git'е.</target>
        </trans-unit>
        <trans-unit id="eceb0ad0aa215d85bc1cfa0886bd096a3daed30d" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;.idx&lt;/code&gt; file for a Git packfile (created with &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; or &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt;) from the standard input, and dump its contents. The output consists of one object per line, with each line containing two or three space-separated columns:</source>
          <target state="translated">Прочтите файл &lt;code&gt;.idx&lt;/code&gt; для файла пакета Git (созданного с помощью &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; или &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack [1]&lt;/a&gt; ) из стандартного ввода и выгрузите его содержимое. Вывод состоит из одного объекта в строке, каждая строка содержит два или три столбца, разделенных пробелами:</target>
        </trans-unit>
        <trans-unit id="ddd6a34883963a795d5ebc22563eef2cf30acd2b" translate="yes" xml:space="preserve">
          <source>Read the NUL-terminated &lt;code&gt;ls-tree -z&lt;/code&gt; output instead.</source>
          <target state="translated">Вместо этого прочтите вывод &lt;code&gt;ls-tree -z&lt;/code&gt; с завершающим NUL .</target>
        </trans-unit>
        <trans-unit id="3ea8fc0021add956f340de030bf6e8165a69896f" translate="yes" xml:space="preserve">
          <source>Read the commit log message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read from the standard input. This can be given more than once and the content of each file becomes its own paragraph.</source>
          <target state="translated">Прочтите сообщение журнала фиксации из данного файла. Используйте &lt;code&gt;-&lt;/code&gt; для чтения из стандартного ввода. Это может быть дано более одного раза, и содержание каждого файла становится отдельным абзацем.</target>
        </trans-unit>
        <trans-unit id="507fdedba9f69c5efbd0e8cf829abe30d4a7a120" translate="yes" xml:space="preserve">
          <source>Read the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">Прочтите сообщение о фиксации,которое будет использоваться для фиксации слияния (в случае,если оно создано).</target>
        </trans-unit>
        <trans-unit id="9362ea89cc38e10989edc212ebc0bf489cc001f5" translate="yes" xml:space="preserve">
          <source>Read the commit-graph file and verify its contents against the object database. Used to check for corrupted data.</source>
          <target state="translated">Прочитайте файл коммит-графика и сверьте его содержимое с базой данных объектов.Используется для проверки на наличие поврежденных данных.</target>
        </trans-unit>
        <trans-unit id="9e4092c6ffe69dbb6a8bf7641feea7e173111c93" translate="yes" xml:space="preserve">
          <source>Read the object from standard input instead of from a file.</source>
          <target state="translated">Читайте объект со стандартного входа,а не из файла.</target>
        </trans-unit>
        <trans-unit id="16a5e93c91809d39b015e5b24abf65dd6438e038" translate="yes" xml:space="preserve">
          <source>Read the revision arguments from the standard input, instead of individual object names. The revision arguments are processed the same way as &lt;code&gt;git rev-list&lt;/code&gt; with the &lt;code&gt;--objects&lt;/code&gt; flag uses its &lt;code&gt;commit&lt;/code&gt; arguments to build the list of objects it outputs. The objects on the resulting list are packed. Besides revisions, &lt;code&gt;--not&lt;/code&gt; or &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; lines are also accepted.</source>
          <target state="translated">Считайте аргументы ревизии из стандартного ввода вместо имен отдельных объектов. Аргументы ревизии обрабатываются так же, как &lt;code&gt;git rev-list&lt;/code&gt; с флагом &lt;code&gt;--objects&lt;/code&gt; использует свои аргументы &lt;code&gt;commit&lt;/code&gt; для создания списка объектов, которые он выводит. Объекты в результирующем списке упакованы. Помимо исправлений, также принимаются строки &lt;code&gt;--not&lt;/code&gt; или &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f840070f6a18eee1c3de888e1eec475edd1cfa4" translate="yes" xml:space="preserve">
          <source>Read, modify and delete symbolic refs</source>
          <target state="translated">Чтение,изменение и удаление символических ссылок</target>
        </trans-unit>
        <trans-unit id="356b6782c6512845fae8c2da14d692d4da174e8d" translate="yes" xml:space="preserve">
          <source>Reading from a named tree</source>
          <target state="translated">Чтение с названного дерева</target>
        </trans-unit>
        <trans-unit id="7405316147ea4906cae4c658957705537066053b" translate="yes" xml:space="preserve">
          <source>Reading from the active commit</source>
          <target state="translated">Считывание с активного коммита</target>
        </trans-unit>
        <trans-unit id="d5df5dafb2331c4e6af80c2f8a0c26176a288dab" translate="yes" xml:space="preserve">
          <source>Reads a packed archive (.pack) from the specified file, and builds a pack index file (.idx) for it. The packed archive together with the pack index can then be placed in the objects/pack/ directory of a Git repository.</source>
          <target state="translated">Читает упакованный архив (.pack)из указанного файла и строит для него индексный файл пакета (.idx).Упакованный архив вместе с индексом пакета может быть помещён в каталог объектов/пакетов/репозитория Git'а.</target>
        </trans-unit>
        <trans-unit id="db9526754c129c75f60022c8e34e8db9d6855fac" translate="yes" xml:space="preserve">
          <source>Reads a single e-mail message from the standard input, and writes the commit log message in &amp;lt;msg&amp;gt; file, and the patches in &amp;lt;patch&amp;gt; file. The author name, e-mail and e-mail subject are written out to the standard output to be used by &lt;code&gt;git am&lt;/code&gt; to create a commit. It is usually not necessary to use this command directly. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; instead.</source>
          <target state="translated">Читает одно сообщение электронной почты из стандартного ввода и записывает сообщение журнала фиксации в файл &amp;lt;msg&amp;gt;, а исправления - в файл &amp;lt;patch&amp;gt;. Имя автора, адрес электронной почты и тема электронной почты записываются в стандартный вывод, который используется &lt;code&gt;git am&lt;/code&gt; для создания фиксации. Обычно нет необходимости использовать эту команду напрямую. См. Вместо этого &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91a54b1043f609f02e31617fc1ed3b549e2a4394" translate="yes" xml:space="preserve">
          <source>Reads a tag contents on standard input and creates a tag object that can also be used to sign other objects.</source>
          <target state="translated">Читает содержимое тега на стандартном входе и создает объект тега,который также может быть использован для подписи других объектов.</target>
        </trans-unit>
        <trans-unit id="1988117fbbba1a52186c7874f472ad690b235ffc" translate="yes" xml:space="preserve">
          <source>Reads given idx file for packed Git archive created with the &lt;code&gt;git pack-objects&lt;/code&gt; command and verifies idx file and the corresponding pack file.</source>
          <target state="translated">Читает указанный файл idx для упакованного архива Git, созданного с помощью команды &lt;code&gt;git pack-objects&lt;/code&gt; , и проверяет файл idx и соответствующий файл пакета.</target>
        </trans-unit>
        <trans-unit id="befcf9896fcbea450fd9bee257995fb96286ee5a" translate="yes" xml:space="preserve">
          <source>Reads list of objects from the standard input, and writes either one or more packed archives with the specified base-name to disk, or a packed archive to the standard output.</source>
          <target state="translated">Читает список объектов со стандартного входа и записывает либо один или несколько упакованных архивов с указанным базовым именем на диск,либо упакованный архив на стандартный выход.</target>
        </trans-unit>
        <trans-unit id="d7a9d36099b1ff6ac5bd15dd14e16c269b0389b8" translate="yes" xml:space="preserve">
          <source>Reads standard input in non-recursive &lt;code&gt;ls-tree&lt;/code&gt; output format, and creates a tree object. The order of the tree entries is normalized by mktree so pre-sorting the input is not required. The object name of the tree object built is written to the standard output.</source>
          <target state="translated">Читает стандартный ввод в нерекурсивном формате вывода &lt;code&gt;ls-tree&lt;/code&gt; и создает объект дерева. Порядок записей в дереве нормализуется mktree, поэтому предварительная сортировка входных данных не требуется. Имя объекта построенного древовидного объекта выводится на стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="768de97d393241af581368bdb5b60add6bc4daa9" translate="yes" xml:space="preserve">
          <source>Reads the supplied diff output (i.e. &quot;a patch&quot;) and applies it to files. When running from a subdirectory in a repository, patched paths outside the directory are ignored. With the &lt;code&gt;--index&lt;/code&gt; option the patch is also applied to the index, and with the &lt;code&gt;--cached&lt;/code&gt; option the patch is only applied to the index. Without these options, the command applies the patch only to files, and does not require them to be in a Git repository.</source>
          <target state="translated">Читает предоставленный вывод diff (то есть &amp;laquo;патч&amp;raquo;) и применяет его к файлам. При запуске из подкаталога в репозитории пропатченные пути за пределами каталога игнорируются. С параметром &lt;code&gt;--index&lt;/code&gt; патч также применяется к индексу, а с параметром &lt;code&gt;--cached&lt;/code&gt; патч применяется только к индексу. Без этих параметров команда применяет исправление только к файлам и не требует, чтобы они находились в репозитории Git.</target>
        </trans-unit>
        <trans-unit id="e5173f184d3064943fb31ef4b9c751d1119e1685" translate="yes" xml:space="preserve">
          <source>Reads the tree information given by &amp;lt;tree-ish&amp;gt; into the index, but does not actually &lt;strong&gt;update&lt;/strong&gt; any of the files it &quot;caches&quot;. (see: &lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index[1]&lt;/a&gt;)</source>
          <target state="translated">Считывает информацию о дереве, указанную &amp;lt;tree-ish&amp;gt;, в индекс, но фактически не &lt;strong&gt;обновляет&lt;/strong&gt; ни один из файлов, которые он &amp;laquo;кэширует&amp;raquo;. (см .: &lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index [1]&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e432986c9c0bf1c0563c54e4546289b72e2b8f05" translate="yes" xml:space="preserve">
          <source>Reads three tree-ish, and output trivial merge results and conflicting stages to the standard output. This is similar to what three-way &lt;code&gt;git read-tree -m&lt;/code&gt; does, but instead of storing the results in the index, the command outputs the entries to the standard output.</source>
          <target state="translated">Считывает три вида дерева и выводит на стандартный вывод тривиальные результаты слияния и конфликтующие этапы. Это похоже на то, что делает трехсторонний &lt;code&gt;git read-tree -m&lt;/code&gt; , но вместо сохранения результатов в индексе команда выводит записи в стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="47a594db00e7ab66962cb542d6f07d66a982ad3f" translate="yes" xml:space="preserve">
          <source>Reads tree information into the index</source>
          <target state="translated">Читает информацию о дереве в индекс</target>
        </trans-unit>
        <trans-unit id="209b43abaea4b5ac5dbb8b759ed99ebfaf6f9172" translate="yes" xml:space="preserve">
          <source>Reapply commits on top of another base tip</source>
          <target state="translated">Повторное совершение обязательств поверх другого базового наконечника.</target>
        </trans-unit>
        <trans-unit id="95695a29b19740f8f73c24fedd25acfa8a46012d" translate="yes" xml:space="preserve">
          <source>Rebase</source>
          <target state="translated">Rebase</target>
        </trans-unit>
        <trans-unit id="f805426f874c522ca8e3397a261d025324269dce" translate="yes" xml:space="preserve">
          <source>Rebase all commits reachable from &amp;lt;branch&amp;gt;, instead of limiting them with an &amp;lt;upstream&amp;gt;. This allows you to rebase the root commit(s) on a branch. When used with --onto, it will skip changes already contained in &amp;lt;newbase&amp;gt; (instead of &amp;lt;upstream&amp;gt;) whereas without --onto it will operate on every change. When used together with both --onto and --preserve-merges, &lt;code&gt;all&lt;/code&gt; root commits will be rewritten to have &amp;lt;newbase&amp;gt; as parent instead.</source>
          <target state="translated">Перебазируйте все коммиты, доступные из &amp;lt;branch&amp;gt;, вместо того, чтобы ограничивать их &amp;lt;upstream&amp;gt;. Это позволяет вам перенастроить корневые коммиты в ветке. При использовании с --onto он будет пропускать изменения, уже содержащиеся в &amp;lt;newbase&amp;gt; (вместо &amp;lt;upstream&amp;gt;), тогда как без --onto он будет работать с каждым изменением. При использовании вместе с --onto и --preserve-merges &lt;code&gt;all&lt;/code&gt; корневые коммиты будут переписаны так, чтобы вместо этого родительский элемент имел &amp;lt;newbase&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="e5565e2c078bf46f769d916c78f2140677ea9bef" translate="yes" xml:space="preserve">
          <source>Rebase options</source>
          <target state="translated">Варианты переоснащения</target>
        </trans-unit>
        <trans-unit id="716069514beaa612afd8a844f284c8d0a6aabce4" translate="yes" xml:space="preserve">
          <source>Rebase vs. pull/merge</source>
          <target state="translated">Перезагрузка против притяжения/погружения</target>
        </trans-unit>
        <trans-unit id="5e20f7eeaec14e3dc573b7394eb6cd8341f1bca1" translate="yes" xml:space="preserve">
          <source>Rebase your current HEAD on the last commit you want to retain as-is. For example, if you want to reorder the last 5 commits, use:</source>
          <target state="translated">Перезагрузите ваш текущий HEAD на последний коммит,который вы хотите сохранить как есть.Например,если вы хотите переупорядочить последние 5 коммитов,используйте:</target>
        </trans-unit>
        <trans-unit id="7170c51391b558eaee43fbe3f7e40861483475fb" translate="yes" xml:space="preserve">
          <source>Rebasing (or any other form of rewriting) a branch that others have based work on is a bad idea: anyone downstream of it is forced to manually fix their history. This section explains how to do the fix from the downstream&amp;rsquo;s point of view. The real fix, however, would be to avoid rebasing the upstream in the first place.</source>
          <target state="translated">Перебазирование (или любая другая форма переписывания) ветки, над которой работают другие, - плохая идея: любой, кто находится ниже по течению, вынужден вручную исправлять свою историю. В этом разделе объясняется, как сделать исправление с точки зрения нижестоящих. Реальное решение, однако, состоит в том, чтобы в первую очередь избежать перебазирования восходящего потока.</target>
        </trans-unit>
        <trans-unit id="8f0767f1f4e33ddf301ed23c7f2cab0332acde8d" translate="yes" xml:space="preserve">
          <source>Rebasing interactively means that you have a chance to edit the commits which are rebased. You can reorder the commits, and you can remove them (weeding out bad or otherwise unwanted patches).</source>
          <target state="translated">Интерактивный перебазинг означает,что у вас есть возможность редактировать коммиты,которые перебазируются.Вы можете переупорядочить коммиты и удалить их (прополка плохих или других нежелательных патчей).</target>
        </trans-unit>
        <trans-unit id="451ba45ef5ba504d79efe1ccb8ef4e6b541d4b90" translate="yes" xml:space="preserve">
          <source>Rebasing merges</source>
          <target state="translated">Пересмотр слияний</target>
        </trans-unit>
        <trans-unit id="f41810dd94a2ab482398f10cf85665624d62733a" translate="yes" xml:space="preserve">
          <source>Recall that merge commits may have more than one parent; by default, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; follow the first parent listed in the commit, but you can also choose:</source>
          <target state="translated">Напомним, что у коммитов слияния может быть более одного родителя; по умолчанию &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;~&lt;/code&gt; следуют за первым родителем, указанным в коммите, но вы также можете выбрать:</target>
        </trans-unit>
        <trans-unit id="b37c74948935714b7fd73afa3de16cd064ee51d6" translate="yes" xml:space="preserve">
          <source>Recall that the commit which will be committed after we resolve this conflict will have two parents instead of the usual one: one parent will be HEAD, the tip of the current branch; the other will be the tip of the other branch, which is stored temporarily in MERGE_HEAD.</source>
          <target state="translated">Напомним,что коммит,который будет зафиксирован после разрешения конфликта,будет иметь двух родителей вместо обычного:один родитель будет HEAD,кончик текущей ветки;другой-кончик другой ветки,которая временно хранится в MERGE_HEAD.</target>
        </trans-unit>
        <trans-unit id="9f6cd666ff59558e35fc1e4987f55228a4aa839c" translate="yes" xml:space="preserve">
          <source>Receive missing objects from another repository</source>
          <target state="translated">Получить недостающие объекты из другого хранилища</target>
        </trans-unit>
        <trans-unit id="3a1414f04e5ec5736bdcd32788841a475c616871" translate="yes" xml:space="preserve">
          <source>Receive what is pushed into the repository</source>
          <target state="translated">Получить то,что затолкано в репозиторий.</target>
        </trans-unit>
        <trans-unit id="ca8f48326e259b3e6bb0b952b7bb30d324f93b41" translate="yes" xml:space="preserve">
          <source>Recipe: Copy maint</source>
          <target state="translated">Рецептура:Копировать мейнстрит</target>
        </trans-unit>
        <trans-unit id="53d4283d5e8f18dd173ab180112f372c62ec5838" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Merging remote topics</source>
          <target state="translated">Рецептура:Толкай/тяни:Объединение удаленных тем</target>
        </trans-unit>
        <trans-unit id="1f8640f7861cc46b56a1e4b42e9ca596b559f6db" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Publishing branches/topics</source>
          <target state="translated">Рецептура:Толкай/тяни:Ветви/темы публикаций</target>
        </trans-unit>
        <trans-unit id="3a17d2c389fe13fb57af10dbacfb6b3db024c7c4" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Staying up to date</source>
          <target state="translated">Рецептура:Толкай/тяни:Оставаясь в курсе</target>
        </trans-unit>
        <trans-unit id="02b6d43b8510b59229854c014a4620861f29d737" translate="yes" xml:space="preserve">
          <source>Recipe: Release tagging</source>
          <target state="translated">Рецептура:Освобождающая метка</target>
        </trans-unit>
        <trans-unit id="9d28e02794d321eb00b6d5b97832a596837552b2" translate="yes" xml:space="preserve">
          <source>Recipe: Rewind and rebuild next</source>
          <target state="translated">Рецептура:Перемотка и перестройка в следующий раз</target>
        </trans-unit>
        <trans-unit id="f8152ab6d8ec6437faa103dde674cb065aa68613" translate="yes" xml:space="preserve">
          <source>Recipe: Update maint to new release</source>
          <target state="translated">Рецептура:Обновление maint до нового релиза</target>
        </trans-unit>
        <trans-unit id="29ee8bda8dd5e0f017624c7f75aa875a53804d32" translate="yes" xml:space="preserve">
          <source>Recipe: Verify &lt;em&gt;master&lt;/em&gt; is a superset of &lt;em&gt;maint&lt;/em&gt;</source>
          <target state="translated">Рецепт: Проверка &lt;em&gt;хозяина&lt;/em&gt; является надстройкой &lt;em&gt;MAINT&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffd09f97e74a882a55504c37b0826f564e6b1346" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Importing patches</source>
          <target state="translated">Рецептура:Формат-патч/ам:Импортируя патчи</target>
        </trans-unit>
        <trans-unit id="363c9c30e4fafba7e8fc9192a52c83213c41b8ac" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Keeping topics up to date</source>
          <target state="translated">Рецептура:Формат-патч/ам:Поддержание актуальности тем</target>
        </trans-unit>
        <trans-unit id="677a69c96c088fbfbe55531cae388f0a94e79290" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Publishing branches/topics</source>
          <target state="translated">Рецептура:Формат-патч/ам:Ветви/темы публикаций</target>
        </trans-unit>
        <trans-unit id="7c405acad54185184a3b50d9aee58d7a13bab6ed" translate="yes" xml:space="preserve">
          <source>Recompress, remove unused cruft:</source>
          <target state="translated">Перекомпрессируйте,удалите неиспользуемый круфт:</target>
        </trans-unit>
        <trans-unit id="257831ab2bd13a64966a7f962a9574ea39ef3108" translate="yes" xml:space="preserve">
          <source>Record changes to the repository</source>
          <target state="translated">Записывать изменения в репозиторий</target>
        </trans-unit>
        <trans-unit id="13168b3a0cbb28fba7cf06c3c640480d4de874bc" translate="yes" xml:space="preserve">
          <source>Record only the fact that the path will be added later. An entry for the path is placed in the index with no content. This is useful for, among other things, showing the unstaged content of such files with &lt;code&gt;git diff&lt;/code&gt; and committing them with &lt;code&gt;git commit
-a&lt;/code&gt;.</source>
          <target state="translated">Запишите только тот факт, что путь будет добавлен позже. Запись для пути помещается в указатель без содержимого. Это полезно, среди прочего, для отображения неустановленного содержимого таких файлов с помощью &lt;code&gt;git diff&lt;/code&gt; и их &lt;code&gt;git commit -a&lt;/code&gt; с помощью git commit -a .</target>
        </trans-unit>
        <trans-unit id="908f8c6524a9d1fb52d4fa427c4917cc570c6355" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object.</source>
          <target state="translated">Запишите,что пометка относится к данному объекту без предварительного создания нового объекта.</target>
        </trans-unit>
        <trans-unit id="59ee078874bbbc459021c0c530f38bc7aaf471b2" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object. Using --import-marks and referring to missing marks will cause fast-import to fail, so aliases can provide a way to set otherwise pruned commits to a valid value (e.g. the nearest non-pruned ancestor).</source>
          <target state="translated">Запишите,что пометка относится к данному объекту без предварительного создания нового объекта.Использование --import-mark и ссылка на пропущенные метки приведет к тому,что быстрый импорт будет неудачным,поэтому псевдонимы могут предоставить способ установить иначе обрезанные коммиты на действительное значение (например,ближайший не обрезанный предок).</target>
        </trans-unit>
        <trans-unit id="d6adcb873ab9c7cd434052b29bbda78059575713" translate="yes" xml:space="preserve">
          <source>Record the base tree information to identify the state the patch series applies to. See the BASE TREE INFORMATION section below for details. If &amp;lt;commit&amp;gt; is &quot;auto&quot;, a base commit is automatically chosen. The &lt;code&gt;--no-base&lt;/code&gt; option overrides a &lt;code&gt;format.useAutoBase&lt;/code&gt; configuration.</source>
          <target state="translated">Запишите информацию о базовом дереве, чтобы определить состояние, к которому применяется серия исправлений. Подробности см. В разделе ИНФОРМАЦИЯ О БАЗОВОМ ДЕРЕВЕ ниже. Если &amp;lt;commit&amp;gt; - &amp;laquo;auto&amp;raquo;, автоматически выбирается базовая фиксация. Параметр &lt;code&gt;--no-base&lt;/code&gt; переопределяет конфигурацию &lt;code&gt;format.useAutoBase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1df60f45066883b70333fa04c8ca0ea0ac9a963e" translate="yes" xml:space="preserve">
          <source>Record the pristine state as the first commit in the history.</source>
          <target state="translated">Зафиксируйте первозданное состояние,как первое в истории.</target>
        </trans-unit>
        <trans-unit id="2779532bfc36fb35edea59aae8e6a7c58766f0fd" translate="yes" xml:space="preserve">
          <source>Records all changes made to the branch tip named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Записывает все изменения, внесенные в конец ветки с именем &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e26cb9a4392a1984a3c8c89ac8ba4d1939bfa972" translate="yes" xml:space="preserve">
          <source>Records all changes made to the tag named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Записывает все изменения, внесенные в тег с именем &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4426300ccfff51ab94cf09d14eb70cb666bb2d4" translate="yes" xml:space="preserve">
          <source>Records of changes made to refs are stored in this directory. See &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; for more information. This directory is ignored (except logs/HEAD) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/logs&quot; will be used instead.</source>
          <target state="translated">В этом каталоге хранятся записи об изменениях, внесенных в ссылки. См. &lt;a href=&quot;git-update-ref&quot;&gt;Git-update-ref [1]&lt;/a&gt; для получения дополнительной информации. Этот каталог игнорируется (кроме logs / HEAD), если установлен $ GIT_COMMON_DIR и вместо него будет использоваться &quot;$ GIT_COMMON_DIR / logs&quot;.</target>
        </trans-unit>
        <trans-unit id="4dfb1dccefe8c5960e96ace8700ff3694a2adfa8" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you have not resolved are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 15 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">Записи о конфликтующих слияниях, которые вы не разрешили, хранятся в течение этого количества дней при запуске &lt;code&gt;git rerere gc&lt;/code&gt; . Вы также можете использовать более удобочитаемый &quot;1.month.ago&quot; и т. Д. По умолчанию 15 дней. См. &lt;a href=&quot;git-rerere&quot;&gt;Git-rerere [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0041a23358783dc658fb86af817bd1e3c4818754" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you resolved earlier are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 60 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">Записи о конфликтующем слиянии, которое вы разрешили ранее, хранятся в течение этого количества дней, когда запускается &lt;code&gt;git rerere gc&lt;/code&gt; . Вы также можете использовать более удобочитаемый &quot;1.month.ago&quot; и т. Д. По умолчанию 60 дней. См. &lt;a href=&quot;git-rerere&quot;&gt;Git-rerere [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f27ef1289a3377cd529d96e1d59f394c9d2e51b" translate="yes" xml:space="preserve">
          <source>Recovering from repository corruption</source>
          <target state="translated">Восстановление после повреждения репозитория</target>
        </trans-unit>
        <trans-unit id="45b084fa0ec2bcf4d8887dcc1ed74808ce39dd65" translate="yes" xml:space="preserve">
          <source>Recovering from upstream rebase</source>
          <target state="translated">Восстановление после восстановления восходящего потока</target>
        </trans-unit>
        <trans-unit id="a2b2e17c2700a078248ea4a8793fdeb963f1e774" translate="yes" xml:space="preserve">
          <source>Recovering lost changes</source>
          <target state="translated">Восстановление утраченных изменений</target>
        </trans-unit>
        <trans-unit id="c9f9ed2d4080ff53397fc95e602ba0c0a8018150" translate="yes" xml:space="preserve">
          <source>Recovering stash entries that were cleared/dropped erroneously</source>
          <target state="translated">Восстановление тайников,которые были очищены/удалены ошибочно.</target>
        </trans-unit>
        <trans-unit id="07417b29bf5742eeb9def793a7c341803a4ae6cf" translate="yes" xml:space="preserve">
          <source>Recurse into sub-trees.</source>
          <target state="translated">В поддеревья.</target>
        </trans-unit>
        <trans-unit id="b71ca4a78b12182052bd243bd7fb2b5a8710c342" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="translated">Рекурсивный вызов ls-файлов на каждом подмодуле в репозитории.На данный момент существует поддержка только режима --cached.</target>
        </trans-unit>
        <trans-unit id="9594ad54e61dba1e097011c1262a0e12523ac73c" translate="yes" xml:space="preserve">
          <source>Recursively copies an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be completely replaced by the content copied from the source.</source>
          <target state="translated">Рекурсивно копирует существующий файл или подкаталог в другое место в ветке.Существующий файл или подкаталог должен существовать.Если место назначения существует,то оно будет полностью заменено содержимым,скопированным из источника.</target>
        </trans-unit>
        <trans-unit id="784c487e0b0ebf6146a806df2269e12c1733d014" translate="yes" xml:space="preserve">
          <source>Recursively finds and lists the svn:ignore property on directories. The output is suitable for appending to the $GIT_DIR/info/exclude file.</source>
          <target state="translated">Рекурсивно находит и перечисляет свойство svn:ignore в каталогах.Вывод подходит для добавления в файл $GIT_DIR/info/exclude.</target>
        </trans-unit>
        <trans-unit id="8a1182cccab09515529f5c8d920459a7ff2c3ff2" translate="yes" xml:space="preserve">
          <source>Recursively finds the svn:ignore property on directories and creates matching .gitignore files. The resulting files are staged to be committed, but are not committed. Use -r/--revision to refer to a specific revision.</source>
          <target state="translated">Рекурсивно находит свойство svn:ignore в каталогах и создает соответствующие файлы .gitignore.Полученные файлы инсценируются для фиксации,но не фиксируются.Используйте -r/--re-revision для ссылки на конкретную ревизию.</target>
        </trans-unit>
        <trans-unit id="8cf2dd32a75d92cd5c31b8e357091014ef76d06b" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that has been initialized and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object.</source>
          <target state="translated">Рекурсивный поиск в каждом подмодуле, который был инициализирован и зарегистрирован в репозитории. При использовании в сочетании с опцией &amp;lt;дерево&amp;gt; префиксом всех выходных данных подмодуля будет имя объекта &amp;lt;дерево&amp;gt; родительского проекта.</target>
        </trans-unit>
        <trans-unit id="c70c81b356beafd0eeca89b16d9fdcb5f7371848" translate="yes" xml:space="preserve">
          <source>Redirection to a file (&lt;code&gt;/path/name&lt;/code&gt;) or pipe (&lt;code&gt;|command&lt;/code&gt;) is not supported.</source>
          <target state="translated">Перенаправление к файлу ( &lt;code&gt;/path/name&lt;/code&gt; ) или каналу ( &lt;code&gt;|command&lt;/code&gt; ) не поддерживается.</target>
        </trans-unit>
        <trans-unit id="89381280eddd66ed8601a4438d83804ded19d6ef" translate="yes" xml:space="preserve">
          <source>Reencoding content requires resources that might slow down certain Git operations (e.g &lt;code&gt;git checkout&lt;/code&gt; or &lt;code&gt;git add&lt;/code&gt;).</source>
          <target state="translated">Для повторного кодирования контента требуются ресурсы, которые могут замедлить определенные операции Git (например, &lt;code&gt;git checkout&lt;/code&gt; или &lt;code&gt;git add&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4d5f4726578da60b5802012abfa0452d24f12476" translate="yes" xml:space="preserve">
          <source>Reencoding content to non-UTF encodings can cause errors as the conversion might not be UTF-8 round trip safe. If you suspect your encoding to not be round trip safe, then add it to &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; to make Git check the round trip encoding (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). SHIFT-JIS (Japanese character set) is known to have round trip issues with UTF-8 and is checked by default.</source>
          <target state="translated">Повторное кодирование содержимого в кодировки, отличные от UTF, может вызвать ошибки, поскольку преобразование может быть небезопасным для UTF-8. Если вы подозреваете, что ваша кодировка небезопасна, добавьте ее в &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; , чтобы Git проверил кодировку туда и обратно (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). SHIFT-JIS (набор японских символов), как известно, имеет проблемы с двусторонним обращением с UTF-8 и по умолчанию отмечен.</target>
        </trans-unit>
        <trans-unit id="f60624f9fc2a82abf8497341d9d81b9d0824e3d8" translate="yes" xml:space="preserve">
          <source>Ref list attributes</source>
          <target state="translated">Атрибуты списка ссылок</target>
        </trans-unit>
        <trans-unit id="042501eba486c2a8fe3dfeebed7e6a526acc65b2" translate="yes" xml:space="preserve">
          <source>Refer to trace2.h for details about all trace2 functions.</source>
          <target state="translated">Обратитесь к trace2.h для получения подробной информации обо всех функциях trace2.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="8189e74b00341c8128de1c9b04b6630dfed40f88" translate="yes" xml:space="preserve">
          <source>Reference advertisement will be omitted unless explicitly requested</source>
          <target state="translated">Ссылочное объявление будет опущено,если только оно не будет запрошено в явном виде.</target>
        </trans-unit>
        <trans-unit id="219616f872f3c1f3f7c63db96c4bad5707f937ab" translate="yes" xml:space="preserve">
          <source>Reference logs, or &quot;reflogs&quot;, record when the tips of branches and other references were updated in the local repository. Reflogs are useful in various Git commands, to specify the old value of a reference. For example, &lt;code&gt;HEAD@{2}&lt;/code&gt; means &quot;where HEAD used to be two moves ago&quot;, &lt;code&gt;master@{one.week.ago}&lt;/code&gt; means &quot;where master used to point to one week ago in this local repository&quot;, and so on. See &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for more details.</source>
          <target state="translated">Журналы ссылок, или &amp;laquo;журналы рефлогов&amp;raquo;, записывают, когда кончики веток и другие ссылки были обновлены в локальном репозитории. Рефлоги полезны в различных командах Git, чтобы указать старое значение ссылки. Например, &lt;code&gt;HEAD@{2}&lt;/code&gt; означает &amp;laquo;где HEAD раньше был два &lt;code&gt;master@{one.week.ago}&lt;/code&gt; назад&amp;raquo;, master@{one.week.ago} означает &amp;laquo;где мастер указывал на неделю назад в этом локальном репозитории&amp;raquo; и т. Д. См. &lt;a href=&quot;gitrevisions&quot;&gt;Gitrevisions [7]&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="fdc0add895cb5f66656ac926ee760b1a52ebfc92" translate="yes" xml:space="preserve">
          <source>References are stored in subdirectories of this directory. The &lt;code&gt;git prune&lt;/code&gt; command knows to preserve objects reachable from refs found in this directory and its subdirectories. This directory is ignored (except refs/bisect, refs/rewritten and refs/worktree) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/refs&quot; will be used instead.</source>
          <target state="translated">Ссылки хранятся в подкаталогах этого каталога. Команда &lt;code&gt;git prune&lt;/code&gt; знает, как сохранять объекты, доступные из ссылок, найденных в этом каталоге и его подкаталогах. Этот каталог игнорируется (кроме refs / bisect, refs / rewritten и refs / worktree), если установлен $ GIT_COMMON_DIR, и вместо него будет использоваться &quot;$ GIT_COMMON_DIR / refs&quot;.</target>
        </trans-unit>
        <trans-unit id="a774e5bc9f4a8942d74474f466fea367c3f9fc07" translate="yes" xml:space="preserve">
          <source>References to commit objects at the head of each branch are stored in files under .git/refs/heads/.</source>
          <target state="translated">Ссылки на объекты фиксации в заголовке каждой ветви хранятся в файлах под .git/refs/heads/.</target>
        </trans-unit>
        <trans-unit id="586454a22a42afbc6e2564872cf76fa552b4a1a3" translate="yes" xml:space="preserve">
          <source>Reflogs</source>
          <target state="translated">Reflogs</target>
        </trans-unit>
        <trans-unit id="701486a68f3896a8a5368aead277807a6847151f" translate="yes" xml:space="preserve">
          <source>Refs</source>
          <target state="translated">Refs</target>
        </trans-unit>
        <trans-unit id="80074f188ddb96f7955691b6a7210a31a672772d" translate="yes" xml:space="preserve">
          <source>Refs are grouped into islands based on their &quot;names&quot;, and two regexes that produce the same name are considered to be in the same island. The names are computed from the regexes by concatenating any capture groups from the regex, with a &lt;code&gt;-&lt;/code&gt; dash in between. (And if there are no capture groups, then the name is the empty string, as in the above example.) This allows you to create arbitrary numbers of islands. Only up to 14 such capture groups are supported though.</source>
          <target state="translated">Ссылки сгруппированы в острова на основе их &amp;laquo;имен&amp;raquo;, и два регулярных выражения с одинаковым именем считаются находящимися на одном острове. Имена вычисляются из регулярных выражений путем конкатенации любых групп захвата из регулярных выражений, с &lt;code&gt;-&lt;/code&gt; тиром между ними. (И если нет групп захвата, тогда имя - пустая строка, как в приведенном выше примере.) Это позволяет вам создавать произвольное количество островов. Однако поддерживаются только до 14 таких групп захвата.</target>
        </trans-unit>
        <trans-unit id="2bb2083cc2f447acfd0f5d16022129235ca5b2cc" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, main-worktree and worktrees. The former gives access to per-worktree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="translated">Ссылки на каждое рабочее дерево все еще могут быть доступны с другого рабочего дерева по двум специальным путям,главному и рабочему дереву.Первый предоставляет доступ к ссылкам на каждое рабочее дерево главного дерева,а второй-ко всем связанным рабочим деревьям.</target>
        </trans-unit>
        <trans-unit id="05e5994fa9181b6fad85ee509538c0ad6a6bc5c4" translate="yes" xml:space="preserve">
          <source>Refs that are per-&lt;a href=&quot;#def_working_tree&quot;&gt;worktree&lt;/a&gt;, rather than global. This is presently only &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; and any refs that start with &lt;code&gt;refs/bisect/&lt;/code&gt;, but might later include other unusual refs.</source>
          <target state="translated">&lt;a href=&quot;#def_working_tree&quot;&gt;Ссылки&lt;/a&gt; , которые являются деревом выполнения , а не глобальными. В настоящее время это только &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; и любые ссылки, которые начинаются с &lt;code&gt;refs/bisect/&lt;/code&gt; , но позже могут включать другие необычные ссылки.</target>
        </trans-unit>
        <trans-unit id="338d2a0e12d851337309cef01e7fe887153b0f55" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt; 'file' does not match the object name for 'file'.</source>
          <target state="translated">Независимо от типа объекта, все объекты имеют следующие характеристики: все они дефлированы с помощью zlib и имеют заголовок, который не только указывает их тип, но также предоставляет информацию о размере данных в объекте. Стоит отметить, что хэш SHA-1, который используется для имени объекта, является хешем исходных данных плюс этот заголовок, поэтому &lt;code&gt;sha1sum&lt;/code&gt; 'file' не соответствует имени объекта для 'file'.</target>
        </trans-unit>
        <trans-unit id="710a95e624a3349545888a56ed2557d883a0ebee" translate="yes" xml:space="preserve">
          <source>Region and Data Messages</source>
          <target state="translated">Регион и сообщения данных</target>
        </trans-unit>
        <trans-unit id="039711232507cd9753ddba093da2350b27e67dca" translate="yes" xml:space="preserve">
          <source>Regions</source>
          <target state="translated">Regions</target>
        </trans-unit>
        <trans-unit id="f60734f6521040c876486255fe253adea3ef4364" translate="yes" xml:space="preserve">
          <source>Regions can be use to time an interesting section of code.</source>
          <target state="translated">Регионы могут быть использованы для времени интересный участок кода.</target>
        </trans-unit>
        <trans-unit id="e6931aebd376c6a517eae391382acbc891d72f65" translate="yes" xml:space="preserve">
          <source>Regions may be nested. This causes messages to be indented in the PERF target, for example. Elapsed times are relative to the start of the corresponding nesting level as expected. For example, if we add region message to:</source>
          <target state="translated">Регионы могут быть вложены.Это приводит к тому,что сообщения,например,будут вставлены в отступ от цели PERF.Прошедшее время соответствует началу соответствующего уровня вложенности,как и ожидалось.Например,если мы добавим сообщение региона:</target>
        </trans-unit>
        <trans-unit id="1595f1bb6d790a7a3e5eb6fb03765aabf279806d" translate="yes" xml:space="preserve">
          <source>Register file contents in the working tree to the index</source>
          <target state="translated">Содержимое файла в рабочем дереве зарегистрировать в индексе</target>
        </trans-unit>
        <trans-unit id="8a6eb409adc691aa11f00dc05c7a129c2f833328" translate="yes" xml:space="preserve">
          <source>Regressions are a big problem in the software industry. But it&amp;rsquo;s difficult to put some real numbers behind that claim.</source>
          <target state="translated">Регрессия - большая проблема в индустрии программного обеспечения. Но это утверждение сложно назвать реальными цифрами.</target>
        </trans-unit>
        <trans-unit id="4ab9d6c175961a8739069a73845c7f8b21150d86" translate="yes" xml:space="preserve">
          <source>Regressions: a big problem</source>
          <target state="translated">Регрессии:большая проблема</target>
        </trans-unit>
        <trans-unit id="2256cc6ee2a5d077491a8a63ef76ac743c25d2d2" translate="yes" xml:space="preserve">
          <source>Related links</source>
          <target state="translated">Связанные ссылки</target>
        </trans-unit>
        <trans-unit id="b61e20d1d031c57060b03654349b1ab448029094" translate="yes" xml:space="preserve">
          <source>Relationship to the Existing Trace Api (api-trace.txt)</source>
          <target state="translated">Связь с существующим следом Api (api-trace.txt)</target>
        </trans-unit>
        <trans-unit id="a5807b40eca9f80054603fbc4a7d22e009d2c415" translate="yes" xml:space="preserve">
          <source>Relative and non-relative marks may be combined by interweaving --(no-)-relative-marks with the --(import|export)-marks= options.</source>
          <target state="translated">Относительные и нереляционные знаки можно комбинировать путем переплетения --(no-)-относительных знаков с опциями --(import|export)-mark=.</target>
        </trans-unit>
        <trans-unit id="31bc43768c6a353840de5e162fcf9b5cce4d9437" translate="yes" xml:space="preserve">
          <source>Relative to the tip of &lt;code&gt;topic&lt;/code&gt;: knowing that your &lt;code&gt;topic&lt;/code&gt; has three commits, the old tip of &lt;code&gt;subsystem&lt;/code&gt; must be &lt;code&gt;topic~3&lt;/code&gt;.</source>
          <target state="translated">Относительно верхушки &lt;code&gt;topic&lt;/code&gt; : зная, что в вашей &lt;code&gt;topic&lt;/code&gt; есть три коммита, старая верхушка &lt;code&gt;subsystem&lt;/code&gt; должна быть &lt;code&gt;topic~3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98786341673b229d09cd6bac6df5f38262cac094" translate="yes" xml:space="preserve">
          <source>Remain silent even on nonexistent files</source>
          <target state="translated">Сохранять молчание даже на несуществующих файлах</target>
        </trans-unit>
        <trans-unit id="cad2c2939c304ff819eff58f792783f6747c93cf" translate="yes" xml:space="preserve">
          <source>Remap all the path requests as relative to the given path. This is sort of &quot;Git root&quot; - if you run &lt;code&gt;git daemon&lt;/code&gt; with &lt;code&gt;--base-path=/srv/git&lt;/code&gt; on example.com, then if you later try to pull &lt;code&gt;git://example.com/hello.git&lt;/code&gt;, &lt;code&gt;git daemon&lt;/code&gt; will interpret the path as &lt;code&gt;/srv/git/hello.git&lt;/code&gt;.</source>
          <target state="translated">Переназначить все запросы пути относительно данного пути. Это своего рода &amp;laquo;корень Git&amp;raquo; - если вы запустите &lt;code&gt;git daemon&lt;/code&gt; с &lt;code&gt;--base-path=/srv/git&lt;/code&gt; на example.com, то, если позже вы попытаетесь вытащить &lt;code&gt;git://example.com/hello.git&lt;/code&gt; , &lt;code&gt;git daemon&lt;/code&gt; интерпретирует путь как &lt;code&gt;/srv/git/hello.git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a5c393fce9fb8dc0d691f13288d22c0e7f1b235" translate="yes" xml:space="preserve">
          <source>Remap to ancestor</source>
          <target state="translated">Возвращайся к предку</target>
        </trans-unit>
        <trans-unit id="8d0121936c456fcf3d222b828ee9077e2cc34843" translate="yes" xml:space="preserve">
          <source>Remember how we did the &lt;code&gt;git update-index&lt;/code&gt; on file &lt;code&gt;hello&lt;/code&gt; and then we changed &lt;code&gt;hello&lt;/code&gt; afterward, and could compare the new state of &lt;code&gt;hello&lt;/code&gt; with the state we saved in the index file?</source>
          <target state="translated">Помните, как мы сделали &lt;code&gt;git update-index&lt;/code&gt; для файла &lt;code&gt;hello&lt;/code&gt; , а затем изменили &lt;code&gt;hello&lt;/code&gt; после этого и могли сравнить новое состояние &lt;code&gt;hello&lt;/code&gt; с состоянием, которое мы сохранили в индексном файле?</target>
        </trans-unit>
        <trans-unit id="2cc52de1f31f7df8236151d526db4f676cdfb905" translate="yes" xml:space="preserve">
          <source>Remember, before running &lt;code&gt;git merge&lt;/code&gt;, our &lt;code&gt;master&lt;/code&gt; head was at &quot;Some fun.&quot; commit, while our &lt;code&gt;mybranch&lt;/code&gt; head was at &quot;Some work.&quot; commit.</source>
          <target state="translated">Помните, что перед запуском &lt;code&gt;git merge&lt;/code&gt; наша &lt;code&gt;master&lt;/code&gt; голова была на &amp;laquo;Немного веселья&amp;raquo;. commit, в то время как наша голова &lt;code&gt;mybranch&lt;/code&gt; была на &amp;laquo;Некоторая работа&amp;raquo;. совершить.</target>
        </trans-unit>
        <trans-unit id="3e534e3639a4dd02297fd7fd07ede8a71c71535e" translate="yes" xml:space="preserve">
          <source>Remote HEAD must resolve to an object that exists locally</source>
          <target state="translated">Удаленная HEAD должна преобразовываться в объект,который существует локально.</target>
        </trans-unit>
        <trans-unit id="2033891925fe29daa47f6c451af0f18a87529563" translate="yes" xml:space="preserve">
          <source>Remote helper programs are invoked with one or (optionally) two arguments. The first argument specifies a remote repository as in Git; it is either the name of a configured remote or a URL. The second argument specifies a URL; it is usually of the form &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt;, but any arbitrary string is possible. The &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable is set up for the remote helper and can be used to determine where to store additional data or from which directory to invoke auxiliary Git commands.</source>
          <target state="translated">Удаленные вспомогательные программы вызываются с одним или (необязательно) двумя аргументами. Первый аргумент указывает удаленный репозиторий, как в Git; это либо имя настроенного пульта дистанционного управления, либо URL-адрес. Второй аргумент указывает URL-адрес; Обычно он имеет вид &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt; , но возможна любая произвольная строка. &lt;code&gt;GIT_DIR&lt;/code&gt; переменная среды создана для удаленного помощника и может быть использован , чтобы определить , где хранить дополнительные данные или из которого каталога для вызова вспомогательных команд Git.</target>
        </trans-unit>
        <trans-unit id="8ee4f73d380c3c99d59209a069206bbd667c2977" translate="yes" xml:space="preserve">
          <source>Remote helper programs are normally not used directly by end users, but they are invoked by Git when it needs to interact with remote repositories Git does not support natively. A given helper will implement a subset of the capabilities documented here. When Git needs to interact with a repository using a remote helper, it spawns the helper as an independent process, sends commands to the helper&amp;rsquo;s standard input, and expects results from the helper&amp;rsquo;s standard output. Because a remote helper runs as an independent process from Git, there is no need to re-link Git to add a new helper, nor any need to link the helper with the implementation of Git.</source>
          <target state="translated">Удаленные вспомогательные программы обычно не используются конечными пользователями напрямую, но они вызываются Git, когда ему нужно взаимодействовать с удаленными репозиториями, которые Git изначально не поддерживает. Данный помощник будет реализовывать подмножество описанных здесь возможностей. Когда Git необходимо взаимодействовать с репозиторием с помощью удаленного помощника, он порождает помощника как независимый процесс, отправляет команды на стандартный ввод помощника и ожидает результатов из стандартного вывода помощника. Поскольку удаленный помощник работает как независимый от Git процесс, нет необходимости повторно связывать Git для добавления нового помощника или связывать помощник с реализацией Git.</target>
        </trans-unit>
        <trans-unit id="7f9d958435b39dd5e8519bc9a5ca0b414455c52e" translate="yes" xml:space="preserve">
          <source>Remotes</source>
          <target state="translated">Remotes</target>
        </trans-unit>
        <trans-unit id="1d36d5e98f5289fdb40f6238091d921b16cd3d1b" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;n&amp;gt; leading path components (separated by slashes) from traditional diff paths. E.g., with &lt;code&gt;-p2&lt;/code&gt;, a patch against &lt;code&gt;a/dir/file&lt;/code&gt; will be applied directly to &lt;code&gt;file&lt;/code&gt;. The default is 1.</source>
          <target state="translated">Удалите компоненты ведущего пути &amp;lt;n&amp;gt; (разделенные косой чертой) из традиционных путей различий. Например, с &lt;code&gt;-p2&lt;/code&gt; патч &lt;code&gt;a/dir/file&lt;/code&gt; будет применен непосредственно к &lt;code&gt;file&lt;/code&gt; . По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="536f22b2b28f4e056331357f5ffb90610418f296" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;ref&amp;gt; from remote repository. The specified branch cannot be the remote HEAD. If -d is specified the following other conditions must also be met:</source>
          <target state="translated">Удалите &amp;lt;ref&amp;gt; из удаленного репозитория. Указанная ветвь не может быть удаленной HEAD. Если указан параметр -d, должны быть выполнены и другие условия:</target>
        </trans-unit>
        <trans-unit id="9a577cbb08edd5d9773523cfc5cfe43dc9b03f45" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it removes the latest one. i.e. &lt;code&gt;stash@{0}&lt;/code&gt;, otherwise &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; must be a valid stash log reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">Удалите одну запись тайника из списка записей тайника. Если &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; не указан, удаляется последний. т.е. &lt;code&gt;stash@{0}&lt;/code&gt; , в противном случае &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; должен быть действительной ссылкой на журнал хранения в форме &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="729e5fd8775c30c358fedf9e611fd4f6f670b5e7" translate="yes" xml:space="preserve">
          <source>Remove a single stashed state from the stash list and apply it on top of the current working tree state, i.e., do the inverse operation of &lt;code&gt;git stash push&lt;/code&gt;. The working directory must match the index.</source>
          <target state="translated">Удалите одно сохраненное состояние из списка тайников и примените его поверх текущего рабочего состояния дерева, то есть выполните операцию, обратную &lt;code&gt;git stash push&lt;/code&gt; . Рабочий каталог должен соответствовать индексу.</target>
        </trans-unit>
        <trans-unit id="d34ae9e19d54c7604c479f4c5964ccef00bd4a98" translate="yes" xml:space="preserve">
          <source>Remove a working tree. Only clean working trees (no untracked files and no modification in tracked files) can be removed. Unclean working trees or ones with submodules can be removed with &lt;code&gt;--force&lt;/code&gt;. The main working tree cannot be removed.</source>
          <target state="translated">Снимаем рабочее дерево. Можно удалить только чистые рабочие деревья (без неотслеживаемых файлов и без изменений в отслеживаемых файлах). Нечистые рабочие деревья или деревья с подмодулями можно удалить с помощью &lt;code&gt;--force&lt;/code&gt; . Основное рабочее дерево удалить нельзя.</target>
        </trans-unit>
        <trans-unit id="df5a8d70d2380181bdc059d7c2ddc0a78e9d1412" translate="yes" xml:space="preserve">
          <source>Remove all lines matching the key from config file.</source>
          <target state="translated">Удалите все строки,соответствующие ключу,из конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="9fc0230ddf082dc45699878be1634350de11665f" translate="yes" xml:space="preserve">
          <source>Remove all notes for non-existing/unreachable objects.</source>
          <target state="translated">Удалите все примечания для несуществующих/недоступных объектов.</target>
        </trans-unit>
        <trans-unit id="fc1b4600e49f3115828b9f3463a6567fd85094fb" translate="yes" xml:space="preserve">
          <source>Remove all the stash entries. Note that those entries will then be subject to pruning, and may be impossible to recover (see &lt;code&gt;Examples&lt;/code&gt; below for a possible strategy).</source>
          <target state="translated">Удалите все записи тайника. Обратите внимание, что эти записи затем будут удалены, и их невозможно будет восстановить (см. &lt;code&gt;Examples&lt;/code&gt; ниже, где представлена ​​возможная стратегия).</target>
        </trans-unit>
        <trans-unit id="353e52e76ff6a9350e8485da73b547859aa497ce" translate="yes" xml:space="preserve">
          <source>Remove any whitespace-continuation in trailers, so that each trailer appears on a line by itself with its full content.</source>
          <target state="translated">Удалите любые пробелы в прицепах,так чтобы каждый прицеп появлялся на линии сам по себе с полным содержанием.</target>
        </trans-unit>
        <trans-unit id="de112945ec414c57cddaca5199f29ee2fc05a979" translate="yes" xml:space="preserve">
          <source>Remove directories from the SVN tree if there are no files left behind. SVN can version empty directories, and they are not removed by default if there are no files left in them. Git cannot version empty directories. Enabling this flag will make the commit to SVN act like Git.</source>
          <target state="translated">Удалите каталоги из SVN-дерева,если не осталось файлов.SVN может версовать пустые каталоги,и они не удаляются по умолчанию,если в них не осталось файлов.Git не может версировать пустые каталоги.Включение этого флага заставит коммит в SVN действовать как Git.</target>
        </trans-unit>
        <trans-unit id="7e6c07487aafd5a1b8bbc132d0eb9f70eb39a580" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). Can be activated by default using the &lt;code&gt;mailinfo.scissors&lt;/code&gt; configuration variable.</source>
          <target state="translated">Удалите все в теле до линии ножниц (см. &lt;a href=&quot;git-mailinfo&quot;&gt;Git-mailinfo [1]&lt;/a&gt; ). Может быть активирован по умолчанию с помощью переменной конфигурации &lt;code&gt;mailinfo.scissors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="399fc61abd5e53e0ff9fe12417324d78f931368d" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line. A line that mainly consists of scissors (either &quot;&amp;gt;8&quot; or &quot;8&amp;lt;&quot;) and perforation (dash &quot;-&quot;) marks is called a scissors line, and is used to request the reader to cut the message at that line. If such a line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="translated">Удалите все с тела до линии ножниц. Линия, которая в основном состоит из ножниц (&amp;laquo;&amp;gt; 8&amp;raquo; или &amp;laquo;8 &amp;lt;&amp;raquo;) и отметок перфорации (тире &amp;laquo;-&amp;raquo;), называется линией ножниц и используется для того, чтобы читатель мог вырезать сообщение на этой строке. Если такая линия появляется в теле сообщения перед патчем, все, что перед ней (включая саму линию ножниц), игнорируется при использовании этой опции.</target>
        </trans-unit>
        <trans-unit id="3b6a842b7003d3eacad12733ce8974d4d54219eb" translate="yes" xml:space="preserve">
          <source>Remove extra objects that are already in pack files</source>
          <target state="translated">Удаление дополнительных объектов,которые уже находятся в пакетных файлах</target>
        </trans-unit>
        <trans-unit id="17839ee8fd6b46f8390b41c3ab4800fda5ea86c3" translate="yes" xml:space="preserve">
          <source>Remove files from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="translated">Удалите файлы из индекса или из рабочего дерева и индекса. &lt;code&gt;git rm&lt;/code&gt; не удалит файл только из вашего рабочего каталога. (Невозможно удалить файл только из рабочего дерева и при этом сохранить его в индексе; используйте &lt;code&gt;/bin/rm&lt;/code&gt; , если вы хотите это сделать.) Удаляемые файлы должны быть идентичны кончику ветки, и никакие обновления их содержимого не могут быть помещены в индекс, хотя это поведение по умолчанию можно переопределить с помощью опции &lt;code&gt;-f&lt;/code&gt; . Когда &lt;code&gt;--cached&lt;/code&gt; , поэтапное содержимое должно соответствовать либо кончику ветви, либо файлу на диске, что позволяет удалить файл только из индекса.</target>
        </trans-unit>
        <trans-unit id="3cb238ca5adf89378484ddf4d733eeac1d7298bc" translate="yes" xml:space="preserve">
          <source>Remove files from the working tree and from the index</source>
          <target state="translated">Удаление файлов из рабочего дерева и из индекса</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
