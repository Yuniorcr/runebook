<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="d8f5a662d30248028e58618a9cb324b38272bbd8" translate="yes" xml:space="preserve">
          <source>These commands all compare two sets of things; what is compared differs:</source>
          <target state="translated">Все эти команды сравнивают два набора;то,что сравнивается,отличается:</target>
        </trans-unit>
        <trans-unit id="6e07bfec6529e0e8049d6a168dde51eb0ed55268" translate="yes" xml:space="preserve">
          <source>These commands are to interact with foreign SCM and with other people via patch over e-mail.</source>
          <target state="translated">Эти команды предназначены для взаимодействия с иностранным SCM и с другими людьми через патч по электронной почте.</target>
        </trans-unit>
        <trans-unit id="008c5282b165f202ade67dc870d3522a81a841bd" translate="yes" xml:space="preserve">
          <source>These configuration variables control &lt;code&gt;internal&lt;/code&gt; gitweb behavior.</source>
          <target state="translated">Эти переменные конфигурации управляют &lt;code&gt;internal&lt;/code&gt; поведением gitweb.</target>
        </trans-unit>
        <trans-unit id="94d243826a65ff43f06f691e3b2f877746c8e3a7" translate="yes" xml:space="preserve">
          <source>These configurations enable two things. First, each unix user (&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt;) of the server will be able to browse through gitweb Git repositories found in &lt;code&gt;~/public_git/&lt;/code&gt; with the following url:</source>
          <target state="translated">Эти конфигурации позволяют две вещи. Во-первых, каждый пользователь unix ( &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; ) сервера сможет просматривать репозитории gitweb Git, находящиеся в &lt;code&gt;~/public_git/&lt;/code&gt; со следующим URL:</target>
        </trans-unit>
        <trans-unit id="3c188c162ef90ed4e72b2204b53fd7bbdf63ed82" translate="yes" xml:space="preserve">
          <source>These environment variables apply to &lt;code&gt;all&lt;/code&gt; core Git commands. Nb: it is worth noting that they may be used/overridden by SCMS sitting above Git so take care if using a foreign front-end.</source>
          <target state="translated">Эти переменные среды применяются ко &lt;code&gt;all&lt;/code&gt; основным командам Git. Nb: стоит отметить, что они могут быть использованы / переопределены SCMS, находящейся над Git, поэтому будьте осторожны при использовании внешнего интерфейса.</target>
        </trans-unit>
        <trans-unit id="e4a9928c908043039dae5cc89a184941db222aba" translate="yes" xml:space="preserve">
          <source>These exclude patterns come from these places, in order:</source>
          <target state="translated">Они исключают шаблоны,которые приходят из этих мест,по порядку:</target>
        </trans-unit>
        <trans-unit id="75ad982aca6a7add80092ae27820348741497d7e" translate="yes" xml:space="preserve">
          <source>These flag are passed to the &lt;code&gt;git apply&lt;/code&gt; program (see &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;) that applies the patch.</source>
          <target state="translated">Эти флаги передаются программе &lt;code&gt;git apply&lt;/code&gt; (см. &lt;a href=&quot;git-apply&quot;&gt;Git-apply [1]&lt;/a&gt; ), которая применяет патч.</target>
        </trans-unit>
        <trans-unit id="a66ecfa5cef3d43b11b6332452dde3bc34998a82" translate="yes" xml:space="preserve">
          <source>These flags are passed to &lt;code&gt;git am&lt;/code&gt; to easily change the dates of the rebased commits (see &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;).</source>
          <target state="translated">Эти флаги передаются в &lt;code&gt;git am&lt;/code&gt; , чтобы легко изменять даты перемещенных коммитов (см. &lt;a href=&quot;git-am&quot;&gt;Git-am [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6f1d3498209d5426cb1c8295c9947466ac12cab4" translate="yes" xml:space="preserve">
          <source>These flags are passed to the &lt;code&gt;git apply&lt;/code&gt; (see &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;) program that applies the patch.</source>
          <target state="translated">Эти флаги передаются программе &lt;code&gt;git apply&lt;/code&gt; (см. &lt;a href=&quot;git-apply&quot;&gt;Git-apply [1]&lt;/a&gt; ), которая применяет патч.</target>
        </trans-unit>
        <trans-unit id="17c5d825c714d7f669df648adc8ffa3b9865aa3a" translate="yes" xml:space="preserve">
          <source>These forms reset the index entries for all paths that match the &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; to their state at &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt;. (It does not affect the working tree or the current branch.)</source>
          <target state="translated">Эти формы сбрасывают записи индекса для всех путей, соответствующих &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; , в их состояние в &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; . (Это не влияет на рабочее дерево или текущую ветку.)</target>
        </trans-unit>
        <trans-unit id="84dfe82e69639d7dd0490e18b4061edc5e5f61bb" translate="yes" xml:space="preserve">
          <source>These general best practices are very helpful if you bisect often.</source>
          <target state="translated">Эти общие лучшие практики очень полезны,если вы часто бисектировать.</target>
        </trans-unit>
        <trans-unit id="db63350c8a27af092cfd256119dcf34d87e7125f" translate="yes" xml:space="preserve">
          <source>These instructions use the &lt;code&gt;git-cvsimport&lt;/code&gt; script which ships with git, but other importers may provide better results. See the note in &lt;a href=&quot;git-cvsimport&quot;&gt;git-cvsimport[1]&lt;/a&gt; for other options.</source>
          <target state="translated">В этих инструкциях используется сценарий &lt;code&gt;git-cvsimport&lt;/code&gt; , который поставляется с git, но другие импортеры могут обеспечить лучшие результаты. См. Примечание в &lt;a href=&quot;git-cvsimport&quot;&gt;git-cvsimport [1]&lt;/a&gt; для получения информации о других параметрах.</target>
        </trans-unit>
        <trans-unit id="4de4cd9ec9920076e498bf4f8c01b7cc0e7335b0" translate="yes" xml:space="preserve">
          <source>These messages are concerned with Git thread usage.</source>
          <target state="translated">Эти сообщения касаются использования потока Git'а.</target>
        </trans-unit>
        <trans-unit id="b8e5bd243ffdab655773f15dbcfc0554b819902f" translate="yes" xml:space="preserve">
          <source>These options are deprecated. Use the above --notes/--no-notes options instead.</source>
          <target state="translated">Эти варианты устарели.Вместо этого используйте описанные выше опционы --notes/--no-notes.</target>
        </trans-unit>
        <trans-unit id="894173daf027c82b1254f620d2cbbddacd04b7fd" translate="yes" xml:space="preserve">
          <source>These options are ignored for historical reasons.</source>
          <target state="translated">Эти варианты игнорируются по историческим причинам.</target>
        </trans-unit>
        <trans-unit id="0608f735748e7710136ac2ca4b1a8fc7f8d0f8a8" translate="yes" xml:space="preserve">
          <source>These options are mostly targeted for packing of Git repositories.</source>
          <target state="translated">Эти опции в основном предназначены для упаковки Git-репозиториев.</target>
        </trans-unit>
        <trans-unit id="44fc7c2eb5b5d3f683db2d8973767b7defab9c76" translate="yes" xml:space="preserve">
          <source>These options are passed to &lt;a href=&quot;git-send-pack&quot;&gt;git-send-pack[1]&lt;/a&gt;. A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common. The default is &lt;code&gt;--thin&lt;/code&gt;.</source>
          <target state="translated">Эти параметры передаются в &lt;a href=&quot;git-send-pack&quot;&gt;git-send-pack [1]&lt;/a&gt; . Тонкая передача значительно сокращает объем отправляемых данных, когда отправитель и получатель совместно используют одни и те же объекты. По умолчанию &lt;code&gt;--thin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c86ff6978b6c3146e6796c4f36abf160da0176d" translate="yes" xml:space="preserve">
          <source>These options can be used in an initial &lt;code&gt;clone&lt;/code&gt;, along with the &lt;code&gt;sync&lt;/code&gt; options described above.</source>
          <target state="translated">Эти параметры можно использовать в исходном &lt;code&gt;clone&lt;/code&gt; вместе с параметрами &lt;code&gt;sync&lt;/code&gt; , описанными выше.</target>
        </trans-unit>
        <trans-unit id="0ade32a888d52a4ba127b2e5cb51121d4b067e67" translate="yes" xml:space="preserve">
          <source>These options can be used in the initial &lt;code&gt;clone&lt;/code&gt; as well as in subsequent &lt;code&gt;sync&lt;/code&gt; operations.</source>
          <target state="translated">Эти параметры можно использовать как в первоначальном &lt;code&gt;clone&lt;/code&gt; так и в последующих операциях &lt;code&gt;sync&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f45787718e6c314237aec0cf2c5e63156df92c4" translate="yes" xml:space="preserve">
          <source>These options can be used to modify &lt;code&gt;git p4 rebase&lt;/code&gt; behavior.</source>
          <target state="translated">Эти параметры можно использовать для изменения поведения &lt;code&gt;git p4 rebase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="046bf3cadb648529c8cbf517d3ba66246fc697fc" translate="yes" xml:space="preserve">
          <source>These options can be used to modify &lt;code&gt;git p4 submit&lt;/code&gt; behavior.</source>
          <target state="translated">Эти параметры можно использовать для изменения поведения &lt;code&gt;git p4 submit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bf9264c3d2f29d27aed45b38db366aee6362601" translate="yes" xml:space="preserve">
          <source>These options control layout (defaults to &lt;code&gt;column&lt;/code&gt;). Setting any of these implies &lt;code&gt;always&lt;/code&gt; if none of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; are specified.</source>
          <target state="translated">Эти параметры управляют макетом (по умолчанию &lt;code&gt;column&lt;/code&gt; ). Установка любого из них подразумевает &lt;code&gt;always&lt;/code&gt; если не указано ни одно из значений &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; или &lt;code&gt;auto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="510a1cbefb424a60db8479a49dd55a0966d6d945" translate="yes" xml:space="preserve">
          <source>These options control when the feature should be enabled (defaults to &lt;code&gt;never&lt;/code&gt;):</source>
          <target state="translated">Эти параметры определяют, когда функция должна быть включена (по умолчанию &lt;code&gt;never&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="931e215644554fa9404627a014bfd3cf51399ea5" translate="yes" xml:space="preserve">
          <source>These options take effect whatever the value of the &lt;code&gt;core.splitIndex&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). But a warning is emitted when the change goes against the configured value, as the configured value will take effect next time the index is read and this will remove the intended effect of the option.</source>
          <target state="translated">Эти параметры действуют независимо от значения переменной конфигурации &lt;code&gt;core.splitIndex&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Но когда изменение идет вразрез с настроенным значением, выдается предупреждение, поскольку настроенное значение вступит в силу при следующем чтении индекса, и это приведет к удалению предполагаемого эффекта параметра.</target>
        </trans-unit>
        <trans-unit id="932e8c22c29966222600cac9510425979eeabd1c" translate="yes" xml:space="preserve">
          <source>These options take effect whatever the value of the &lt;code&gt;core.untrackedCache&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). But a warning is emitted when the change goes against the configured value, as the configured value will take effect next time the index is read and this will remove the intended effect of the option.</source>
          <target state="translated">Эти параметры действуют независимо от значения переменной конфигурации &lt;code&gt;core.untrackedCache&lt;/code&gt; (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Но когда изменение идет вразрез с настроенным значением, выдается предупреждение, поскольку настроенное значение вступит в силу при следующем чтении индекса, и это приведет к удалению предполагаемого эффекта параметра.</target>
        </trans-unit>
        <trans-unit id="ff7024be4fc3bd9a63ff1aab42e5c2f33080a5ad" translate="yes" xml:space="preserve">
          <source>These parameters can also be set individually with &lt;code&gt;--stat-width=&amp;lt;width&amp;gt;&lt;/code&gt;, &lt;code&gt;--stat-name-width=&amp;lt;name-width&amp;gt;&lt;/code&gt; and &lt;code&gt;--stat-count=&amp;lt;count&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Эти параметры также можно задать индивидуально с помощью &lt;code&gt;--stat-width=&amp;lt;width&amp;gt;&lt;/code&gt; , &lt;code&gt;--stat-name-width=&amp;lt;name-width&amp;gt;&lt;/code&gt; и &lt;code&gt;--stat-count=&amp;lt;count&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25d97f197e2ad468ea791c831ca2e71054c4e207" translate="yes" xml:space="preserve">
          <source>These remote-tracking references can be deleted as a one-off with either of:</source>
          <target state="translated">Эти ссылки на удаленное отслеживание могут быть удалены как одноразовые с любой из них:</target>
        </trans-unit>
        <trans-unit id="4994737bcfd88cfa54486bc85e99d5152416b798" translate="yes" xml:space="preserve">
          <source>These rules make it easy for shell script based tools to parse reference names, pathname expansion by the shell when a reference name is used unquoted (by mistake), and also avoid ambiguities in certain reference name expressions (see &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;):</source>
          <target state="translated">Эти правила упрощают для инструментов на основе сценария оболочки анализ имен ссылок, расширение имени пути оболочкой, когда имя ссылки используется без кавычек (по ошибке), а также позволяют избежать двусмысленности в определенных выражениях имен ссылок (см. &lt;a href=&quot;gitrevisions&quot;&gt;Gitrevisions [7]&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="d2d3b8bc5c27c38dddb2f7c9e54b52668c820483" translate="yes" xml:space="preserve">
          <source>These services can be enabled/disabled using the per-repository configuration file:</source>
          <target state="translated">Эти службы могут быть включены/выключены с помощью конфигурационного файла для каждого хранилища:</target>
        </trans-unit>
        <trans-unit id="11be9ffec744e4c727f505822229118ed50ca097" translate="yes" xml:space="preserve">
          <source>These services can be globally enabled/disabled using the command-line options of this command. If finer-grained control is desired (e.g. to allow &lt;code&gt;git archive&lt;/code&gt; to be run against only in a few selected repositories the daemon serves), the per-repository configuration file can be used to enable or disable them.</source>
          <target state="translated">Эти службы можно глобально включить / отключить с помощью параметров командной строки этой команды. Если требуется более детальный контроль (например, чтобы разрешить запуск &lt;code&gt;git archive&lt;/code&gt; только в нескольких выбранных репозиториях, которые обслуживает демон), можно использовать файл конфигурации для каждого репозитория, чтобы включить или отключить их.</target>
        </trans-unit>
        <trans-unit id="6e7a1043f71fa1813c0b5e398e97710f483944d9" translate="yes" xml:space="preserve">
          <source>These things may exist in a Git repository.</source>
          <target state="translated">Такие вещи могут существовать в Git-репозитории.</target>
        </trans-unit>
        <trans-unit id="b5c7f688db050c92cfc9bb2aa9d676e52849ec7b" translate="yes" xml:space="preserve">
          <source>These three branches all forked from a common commit, [master], whose commit message is &quot;Add 'git show-branch'&quot;. The &quot;fixes&quot; branch adds one commit &quot;Introduce &quot;reset type&quot; flag to &quot;git reset&quot;&quot;. The &quot;mhf&quot; branch adds many other commits. The current branch is &quot;master&quot;.</source>
          <target state="translated">Все эти три ветки были выведены из общего коммита,[master],сообщение коммита-&quot;Добавить 'git-шоу-отрасль'&quot;.Ответвление &quot;fixes&quot; добавляет один коммит &quot;Ввести флаг &quot;сброса типа&quot; в &quot;git reset&quot;&quot;.В ветке &quot;mhf&quot; добавляется множество других коммитов.Текущая ветка является &quot;основной&quot;.</target>
        </trans-unit>
        <trans-unit id="c6204a9318b7a0526e46b8696b2eb378d52ecf11" translate="yes" xml:space="preserve">
          <source>These two filters behave differently, and by default, a filter is taken as the former, massaging the contents into more convenient shape. A missing filter driver definition in the config, or a filter driver that exits with a non-zero status, is not an error but makes the filter a no-op passthru.</source>
          <target state="translated">Эти два фильтра ведут себя по-разному,и по умолчанию фильтр принимается за первый,массируя содержимое в более удобную форму.Пропущенное определение драйвера фильтра в конфигурации,или драйвер-фильтр,который выходит с ненулевым статусом,не является ошибкой,но делает фильтр не-op passthru.</target>
        </trans-unit>
        <trans-unit id="e20e46dc24b79b5218925e423850545226b0898e" translate="yes" xml:space="preserve">
          <source>These two options affect how the objects contained in the pack are stored using delta compression. The objects are first internally sorted by type, size and optionally names and compared against the other objects within --window to see if using delta compression saves space. --depth limits the maximum delta depth; making it too deep affects the performance on the unpacker side, because delta data needs to be applied that many times to get to the necessary object.</source>
          <target state="translated">Эти две опции влияют на то,как объекты,содержащиеся в пакете,хранятся с использованием дельта-сжатия.Сначала объекты внутренне сортируются по типу,размеру и опциональным именам и сравниваются с другими объектами в окне --window,чтобы посмотреть,экономит ли использование дельта-сжатия место.-глубина ограничивает максимальную глубину дельты;слишком глубокая глубина влияет на производительность на стороне распаковщика,так как для того,чтобы добраться до нужного объекта,дельта-данные должны быть применены столько раз.</target>
        </trans-unit>
        <trans-unit id="de212a952b72f4cd05af023bbd056fa8307c4a9f" translate="yes" xml:space="preserve">
          <source>These two options affect how the objects contained in the pack are stored using delta compression. The objects are first internally sorted by type, size and optionally names and compared against the other objects within &lt;code&gt;--window&lt;/code&gt; to see if using delta compression saves space. &lt;code&gt;--depth&lt;/code&gt; limits the maximum delta depth; making it too deep affects the performance on the unpacker side, because delta data needs to be applied that many times to get to the necessary object.</source>
          <target state="translated">Эти два параметра влияют на то, как объекты, содержащиеся в пакете, хранятся с использованием дельта-сжатия. Сначала объекты внутренне сортируются по типу, размеру и (необязательно) именам и сравниваются с другими объектами в &lt;code&gt;--window&lt;/code&gt; , чтобы увидеть, экономит ли использование дельта-сжатия место. &lt;code&gt;--depth&lt;/code&gt; ограничивает максимальную глубину дельты; слишком большое значение влияет на производительность на стороне распаковщика, потому что дельта-данные нужно применять столько раз, чтобы добраться до необходимого объекта.</target>
        </trans-unit>
        <trans-unit id="6a0bfaec1ca5ad5a0f6710f22f7b4b78eecfef67" translate="yes" xml:space="preserve">
          <source>These two syntaxes are mostly equivalent, except the former implies --local option.</source>
          <target state="translated">Эти два синтаксиса в основном эквивалентны,за исключением того,что первый подразумевает опцию --local.</target>
        </trans-unit>
        <trans-unit id="9270307e15adf00d482cdebd8e068750f310bc87" translate="yes" xml:space="preserve">
          <source>These two syntaxes are mostly equivalent, except when cloning, when the former implies --local option. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; for details.</source>
          <target state="translated">Эти два синтаксиса в основном эквивалентны, за исключением случаев клонирования, когда первый подразумевает параметр --local. См. Подробности в &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="469e074d32a553c54f69af6603803ffbfd2e6dda" translate="yes" xml:space="preserve">
          <source>These types of entries are generally created as a result of using &lt;code&gt;git
commit --amend&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt; and are the commits prior to the amend or rebase occurring. Since these changes are not part of the current project most users will want to expire them sooner, which is why the default is more aggressive than &lt;code&gt;gc.reflogExpire&lt;/code&gt;.</source>
          <target state="translated">Эти типы записей обычно создаются в результате использования &lt;code&gt;git commit --amend&lt;/code&gt; или &lt;code&gt;git rebase&lt;/code&gt; и являются коммитами до внесения изменения или переназначения. Поскольку эти изменения не являются частью текущего проекта, большинство пользователей захотят аннулировать их раньше, поэтому значение по умолчанию более агрессивно, чем &lt;code&gt;gc.reflogExpire&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99a10a0726ee032ba80815c05eceb6d5a6ab2aa8" translate="yes" xml:space="preserve">
          <source>These variables control various optional help messages designed to aid new users. All &lt;code&gt;advice.*&lt;/code&gt; variables default to &lt;code&gt;true&lt;/code&gt;, and you can tell Git that you do not need help by setting these to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Эти переменные управляют различными дополнительными справочными сообщениями, предназначенными для помощи новым пользователям. Все переменные &lt;code&gt;advice.*&lt;/code&gt; По умолчанию имеют значение &lt;code&gt;true&lt;/code&gt; , и вы можете сообщить Git, что вам не нужна помощь, установив для них значение &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="289bbff1e27f0cf157d5208bbfcb9f369ecc1504" translate="yes" xml:space="preserve">
          <source>These variables obviate the need for command-line options in some circumstances, allowing easier restricted usage through git-shell.</source>
          <target state="translated">Эти переменные избавляют от необходимости использования опций командной строки при определённых обстоятельствах,облегчая ограниченное использование через git-shell.</target>
        </trans-unit>
        <trans-unit id="48d5c4b33cae3d35014b5a5e266ea897c2a18c9f" translate="yes" xml:space="preserve">
          <source>These will display all commits which exist only on HEAD or on MERGE_HEAD, and which touch an unmerged file.</source>
          <target state="translated">Они будут отображать все коммиты,которые существуют только на HEAD или на MERGE_HEAD,и которые касаются неупорядоченного файла.</target>
        </trans-unit>
        <trans-unit id="e9ab0d9bdf3f35b7d6ece2d3bc65f4fbb38bad38" translate="yes" xml:space="preserve">
          <source>They are both passed directly to &lt;code&gt;git diff-tree&lt;/code&gt;; see &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Оба они передаются непосредственно в &lt;code&gt;git diff-tree&lt;/code&gt; ; см. &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree [1]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="afa16f632fa562fed5a34ad41431101aacb568d7" translate="yes" xml:space="preserve">
          <source>They can include slash &lt;code&gt;/&lt;/code&gt; for hierarchical (directory) grouping, but no slash-separated component can begin with a dot &lt;code&gt;.&lt;/code&gt; or end with the sequence &lt;code&gt;.lock&lt;/code&gt;.</source>
          <target state="translated">Они могут включать косую черту &lt;code&gt;/&lt;/code&gt; для иерархической группировки (каталогов), но ни один компонент, разделенный косой чертой, не может начинаться с точки &lt;code&gt;.&lt;/code&gt; или закончите последовательностью &lt;code&gt;.lock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48a933f433abac80f2e0e41b240081f7a399893c" translate="yes" xml:space="preserve">
          <source>They cannot be the single character &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">Они не могут быть одиночным символом &lt;code&gt;@&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c798a840110b095cd0c31cb10cad16c17f5292dd" translate="yes" xml:space="preserve">
          <source>They cannot begin or end with a slash &lt;code&gt;/&lt;/code&gt; or contain multiple consecutive slashes (see the &lt;code&gt;--normalize&lt;/code&gt; option below for an exception to this rule)</source>
          <target state="translated">Они не могут начинаться или заканчиваться косой чертой &lt;code&gt;/&lt;/code&gt; или содержать несколько последовательных косых &lt;code&gt;--normalize&lt;/code&gt; исключение из этого правила см. В параметре --normalize ниже)</target>
        </trans-unit>
        <trans-unit id="794c847c2b033448497ba9e6f46f59b7325ccd69" translate="yes" xml:space="preserve">
          <source>They cannot contain a &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">Они не могут содержать &lt;code&gt;\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4cf89d0a711867dbdfa498e7e6b80fb04c020f3" translate="yes" xml:space="preserve">
          <source>They cannot contain a sequence &lt;code&gt;@{&lt;/code&gt;.</source>
          <target state="translated">Они не могут содержать последовательность &lt;code&gt;@{&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c781dcfcbfa7c545717cc72f3f25ac7fba039fd7" translate="yes" xml:space="preserve">
          <source>They cannot end with a dot &lt;code&gt;.&lt;/code&gt;.</source>
          <target state="translated">Они не могут заканчиваться точкой &lt;code&gt;.&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="cdf3c698f8591838633d63d5550c41009f5d53bb" translate="yes" xml:space="preserve">
          <source>They cannot have ASCII control characters (i.e. bytes whose values are lower than \040, or \177 &lt;code&gt;DEL&lt;/code&gt;), space, tilde &lt;code&gt;~&lt;/code&gt;, caret &lt;code&gt;^&lt;/code&gt;, or colon &lt;code&gt;:&lt;/code&gt; anywhere.</source>
          <target state="translated">Они не могут иметь управляющие символы ASCII (т.е. байт, значения которых меньше \ 040 или \ 177 &lt;code&gt;DEL&lt;/code&gt; ), пробел, тильда &lt;code&gt;~&lt;/code&gt; , каретку &lt;code&gt;^&lt;/code&gt; , или толстой кишки &lt;code&gt;:&lt;/code&gt; в любом месте.</target>
        </trans-unit>
        <trans-unit id="9fa9a35ba99f055f59e5fb0fc3903845af8141d1" translate="yes" xml:space="preserve">
          <source>They cannot have question-mark &lt;code&gt;?&lt;/code&gt;, asterisk &lt;code&gt;*&lt;/code&gt;, or open bracket &lt;code&gt;[&lt;/code&gt; anywhere. See the &lt;code&gt;--refspec-pattern&lt;/code&gt; option below for an exception to this rule.</source>
          <target state="translated">У них не может быть вопросительного знака &lt;code&gt;?&lt;/code&gt; , звездочка &lt;code&gt;*&lt;/code&gt; или открывающая скобка &lt;code&gt;[&lt;/code&gt; где угодно. См. Исключение из этого правила в параметре &lt;code&gt;--refspec-pattern&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="07233de88d34b821d099ea14e09099281360fa3d" translate="yes" xml:space="preserve">
          <source>They cannot have two consecutive dots &lt;code&gt;..&lt;/code&gt; anywhere.</source>
          <target state="translated">У них не может быть двух точек подряд &lt;code&gt;..&lt;/code&gt; где угодно.</target>
        </trans-unit>
        <trans-unit id="08cc7b3818b658e36c5e9a0a0fcefabb2c9bd5ce" translate="yes" xml:space="preserve">
          <source>They must contain at least one &lt;code&gt;/&lt;/code&gt;. This enforces the presence of a category like &lt;code&gt;heads/&lt;/code&gt;, &lt;code&gt;tags/&lt;/code&gt; etc. but the actual names are not restricted. If the &lt;code&gt;--allow-onelevel&lt;/code&gt; option is used, this rule is waived.</source>
          <target state="translated">Они должны содержать хотя бы один &lt;code&gt;/&lt;/code&gt; . Это обеспечивает наличие категории, например, &quot; &lt;code&gt;heads/&lt;/code&gt; , &quot; &lt;code&gt;tags/&lt;/code&gt; и т. Д., Но фактические имена не ограничиваются. Если используется &lt;code&gt;--allow-onelevel&lt;/code&gt; , это правило отменяется.</target>
        </trans-unit>
        <trans-unit id="9c66e1086c1b783565f285e9f8d345796e4a920b" translate="yes" xml:space="preserve">
          <source>Things get more complicated if the &lt;code&gt;subsystem&lt;/code&gt; changes do not exactly correspond to the ones before the rebase.</source>
          <target state="translated">Ситуация усложняется, если изменения в &lt;code&gt;subsystem&lt;/code&gt; не совсем соответствуют изменениям до перебазирования.</target>
        </trans-unit>
        <trans-unit id="877bd5e347693a4c90610529b809f198ae203a8a" translate="yes" xml:space="preserve">
          <source>Think about how to create a clear chapter dependency graph that will allow people to get to important topics without necessarily reading everything in between.</source>
          <target state="translated">Подумайте о том,как создать четкий график зависимости от главы,который позволит людям добраться до важных тем,не обязательно читая все,что находится между ними.</target>
        </trans-unit>
        <trans-unit id="5f03012af2a22f62503c31e1e064eb23ddd2be46" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;key&lt;/code&gt; will be used instead of &amp;lt;token&amp;gt; in the trailer. At the end of this key, a separator can appear and then some space characters. By default the only valid separator is &lt;code&gt;:&lt;/code&gt;, but this can be changed using the &lt;code&gt;trailer.separators&lt;/code&gt; config variable.</source>
          <target state="translated">Этот &lt;code&gt;key&lt;/code&gt; будет использоваться вместо &amp;lt;token&amp;gt; в трейлере. В конце этого ключа может появиться разделитель, а затем несколько символов пробела. По умолчанию единственным допустимым разделителем является &lt;code&gt;:&lt;/code&gt; , но его можно изменить с помощью переменной конфигурации &lt;code&gt;trailer.separators&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ed9ef222233001104259cd6ab7e0ea2e028dedb" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;merge&lt;/code&gt; can also be done by &lt;code&gt;pulling from her own remote-tracking branch&lt;/code&gt;, like this:</source>
          <target state="translated">Это &lt;code&gt;merge&lt;/code&gt; также может быть выполнено путем &lt;code&gt;pulling from her own remote-tracking branch&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="0007248c88629a35b9fa8e1cf4c8fdf299191526" translate="yes" xml:space="preserve">
          <source>This accepts all options that &lt;code&gt;git svn fetch&lt;/code&gt; and &lt;code&gt;git rebase&lt;/code&gt; accept. However, &lt;code&gt;--fetch-all&lt;/code&gt; only fetches from the current [svn-remote], and not all [svn-remote] definitions.</source>
          <target state="translated">Это принимает все параметры, которые принимают &lt;code&gt;git svn fetch&lt;/code&gt; и &lt;code&gt;git rebase&lt;/code&gt; . Однако &lt;code&gt;--fetch-all&lt;/code&gt; извлекает только из текущего [svn-remote], а не всех определений [svn-remote].</target>
        </trans-unit>
        <trans-unit id="c118365ba0290d763b2d4e635fbfbb09d23e73e6" translate="yes" xml:space="preserve">
          <source>This action is disabled by default for performance reasons.</source>
          <target state="translated">Это действие отключено по умолчанию из соображений производительности.</target>
        </trans-unit>
        <trans-unit id="692de83ae64c152ace96a6b22c40c6c7b5256f5f" translate="yes" xml:space="preserve">
          <source>This adds a link titled &quot;graphiclog&quot; after the &quot;summary&quot; link, leading to &lt;code&gt;git-browser&lt;/code&gt; script, passing &lt;code&gt;r=&amp;lt;project&amp;gt;&lt;/code&gt; as a query parameter.</source>
          <target state="translated">Это добавляет ссылку под названием &amp;laquo;graphiclog&amp;raquo; после ссылки &amp;laquo;summary&amp;raquo;, ведущей к скрипту &lt;code&gt;git-browser&lt;/code&gt; , передавая &lt;code&gt;r=&amp;lt;project&amp;gt;&lt;/code&gt; в качестве параметра запроса.</target>
        </trans-unit>
        <trans-unit id="9647e1f610a9d28b74cedc3ffa625f5d98628ec8" translate="yes" xml:space="preserve">
          <source>This algorithm extends the patience algorithm to &quot;support low-occurrence common elements&quot;.</source>
          <target state="translated">Этот алгоритм расширяет алгоритм терпения на &quot;поддержку мало повторяющихся общих элементов&quot;.</target>
        </trans-unit>
        <trans-unit id="5f9e4d22cfa1bc9f924abb0f51a443db2655b318" translate="yes" xml:space="preserve">
          <source>This allows &lt;code&gt;git svn&lt;/code&gt; to re-map repository URLs and UUIDs from mirrors created using SVN::Mirror (or svk) for metadata.</source>
          <target state="translated">Это позволяет &lt;code&gt;git svn&lt;/code&gt; повторно отображать URL-адреса репозитория и UUID с зеркал, созданных с использованием SVN :: Mirror (или svk) для метаданных.</target>
        </trans-unit>
        <trans-unit id="cb552885bcd7df779f362e35a229c9d935657c60" translate="yes" xml:space="preserve">
          <source>This allows one to specify a Perl regular expression that will cause skipping of all matching paths from checkout from SVN. The &lt;code&gt;--ignore-paths&lt;/code&gt; option should match for every &lt;code&gt;fetch&lt;/code&gt; (including automatic fetches due to &lt;code&gt;clone&lt;/code&gt;, &lt;code&gt;dcommit&lt;/code&gt;, &lt;code&gt;rebase&lt;/code&gt;, etc) on a given repository.</source>
          <target state="translated">Это позволяет указать регулярное выражение Perl, которое приведет к пропуску всех подходящих путей при оформлении заказа из SVN. &lt;code&gt;--ignore-paths&lt;/code&gt; вариант должен соответствовать для каждых &lt;code&gt;fetch&lt;/code&gt; ( в том числе автоматических извлечений из - за &lt;code&gt;clone&lt;/code&gt; , &lt;code&gt;dcommit&lt;/code&gt; , &lt;code&gt;rebase&lt;/code&gt; и т.д.) на данное хранилище.</target>
        </trans-unit>
        <trans-unit id="bf5d12ceb1111e8b06bd58f3985472091a1cae12" translate="yes" xml:space="preserve">
          <source>This allows one to specify a Perl regular expression that will cause the inclusion of only matching paths from checkout from SVN. The &lt;code&gt;--include-paths&lt;/code&gt; option should match for every &lt;code&gt;fetch&lt;/code&gt; (including automatic fetches due to &lt;code&gt;clone&lt;/code&gt;, &lt;code&gt;dcommit&lt;/code&gt;, &lt;code&gt;rebase&lt;/code&gt;, etc) on a given repository. &lt;code&gt;--ignore-paths&lt;/code&gt; takes precedence over &lt;code&gt;--include-paths&lt;/code&gt;.</source>
          <target state="translated">Это позволяет указать регулярное выражение Perl, которое приведет к включению только совпадающих путей из проверки из SVN. &lt;code&gt;--include-paths&lt;/code&gt; вариант должен соответствовать для каждых &lt;code&gt;fetch&lt;/code&gt; ( в том числе автоматических извлечений из - за &lt;code&gt;clone&lt;/code&gt; , &lt;code&gt;dcommit&lt;/code&gt; , &lt;code&gt;rebase&lt;/code&gt; и т.д.) на данное хранилище. &lt;code&gt;--ignore-paths&lt;/code&gt; имеет приоритет над &lt;code&gt;--include-paths&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c68f089f9144bc4bdc1d710532bfa75a569d11ed" translate="yes" xml:space="preserve">
          <source>This allows one to specify a prefix which is prepended to the names of remotes if trunk/branches/tags are specified. The prefix does not automatically include a trailing slash, so be sure you include one in the argument if that is what you want. If --branches/-b is specified, the prefix must include a trailing slash. Setting a prefix (with a trailing slash) is strongly encouraged in any case, as your SVN-tracking refs will then be located at &quot;refs/remotes/$prefix/&lt;strong&gt;&quot;, which is compatible with Git&amp;rsquo;s own remote-tracking ref layout (refs/remotes/$remote/&lt;/strong&gt;). Setting a prefix is also useful if you wish to track multiple projects that share a common repository. By default, the prefix is set to &lt;code&gt;origin/&lt;/code&gt;.</source>
          <target state="translated">Это позволяет указать префикс, который будет добавлен к именам пультов, если указаны ствол / ветки / теги. Префикс не включает автоматически завершающую косую черту, поэтому обязательно включите ее в аргумент, если это то, что вы хотите. Если указан --branches / -b, префикс должен включать завершающую косую черту. В любом случае настоятельно рекомендуется установка префикса (с завершающей косой чертой), так как ваши ссылки для отслеживания SVN будут располагаться по адресу &quot;refs / remotes / $ prefix / &lt;strong&gt;&quot;, который совместим с собственным макетом ссылок удаленного отслеживания Git (refs / удаленные / $ удаленные /&lt;/strong&gt; ). Установка префикса также полезна, если вы хотите отслеживать несколько проектов, которые используют общий репозиторий. По умолчанию установлен префикс &lt;code&gt;origin/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99b10fdeae941de841a9ac73e39b7c06fcc2d978" translate="yes" xml:space="preserve">
          <source>This allows revision ranges for partial/cauterized history to be supported. $NUMBER, $NUMBER1:$NUMBER2 (numeric ranges), $NUMBER:HEAD, and BASE:$NUMBER are all supported.</source>
          <target state="translated">Это позволяет поддерживать диапазоны ревизий для частичной/каутеризированной истории.$NUMBER,$NUMBER1:$NUMBER2 (числовые диапазоны),$NUMBER:HEAD и BASE:$NUMBER поддерживаются.</target>
        </trans-unit>
        <trans-unit id="f18b167effc162d347deb782b83eab22ac73f014" translate="yes" xml:space="preserve">
          <source>This allows users to create repositories from alternate URLs. For example, an administrator could run &lt;code&gt;git svn&lt;/code&gt; on the server locally (accessing via file://) but wish to distribute the repository with a public http:// or svn:// URL in the metadata so users of it will see the public URL.</source>
          <target state="translated">Это позволяет пользователям создавать репозитории из альтернативных URL-адресов. Например, администратор может запустить &lt;code&gt;git svn&lt;/code&gt; на сервере локально (доступ через file: //), но желает распространить репозиторий с общедоступным URL-адресом http: // или svn: // в метаданных, чтобы его пользователи видели общедоступный URL.</target>
        </trans-unit>
        <trans-unit id="86c4c002dbb35b192dee2247feadc27722ad842a" translate="yes" xml:space="preserve">
          <source>This application is a CVS emulation layer for Git.</source>
          <target state="translated">Это приложение является слоем эмуляции CVS для Git'а.</target>
        </trans-unit>
        <trans-unit id="8feea1468fa1fae814e84f89aca492fad30e5da4" translate="yes" xml:space="preserve">
          <source>This applies modifications from a hot-fix branch before each test run, e.g. in case your build or test environment changed so that older revisions may need a fix which newer ones have already. (Make sure the hot-fix branch is based off a commit which is contained in all revisions which you are bisecting, so that the merge does not pull in too much, or use &lt;code&gt;git cherry-pick&lt;/code&gt; instead of &lt;code&gt;git merge&lt;/code&gt;.)</source>
          <target state="translated">При этом перед каждым запуском теста применяются модификации из ветки горячего исправления, например, если ваша сборка или тестовая среда изменились так, что более старые версии могут нуждаться в исправлении, которое уже есть в новых. (Убедитесь, что ветка горячего исправления основана на фиксации, которая содержится во всех ревизиях, которые вы делите пополам, чтобы слияние не затягивало слишком много, или используйте &lt;code&gt;git cherry-pick&lt;/code&gt; вместо &lt;code&gt;git merge&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="889d1277201779cf18582f69129975a9bf60d357" translate="yes" xml:space="preserve">
          <source>This applies to files added to the source branch &lt;strong&gt;after&lt;/strong&gt; a daughter branch was created: if previously no commit was made on the daughter branch they will erroneously be added to the daughter branch in git.</source>
          <target state="translated">Это относится к файлам, добавленным в исходную ветвь &lt;strong&gt;после&lt;/strong&gt; создания дочерней ветки: если ранее в дочерней ветке не было сделано никаких фиксаций, они будут ошибочно добавлены в дочернюю ветвь в git.</target>
        </trans-unit>
        <trans-unit id="cd519f993fc33ca56b2cb882b0ae5ba8b983012d" translate="yes" xml:space="preserve">
          <source>This argument will not be passed to &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt;. Instead it sets the vhost field in the git:// service request (to rest of the argument). Default is not to send vhost in such request (if sent).</source>
          <target state="translated">Этот аргумент не будет передан в &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; . Вместо этого он устанавливает поле vhost в сервисном запросе git: // (оставшуюся часть аргумента). По умолчанию в таком запросе (если он отправлен) vhost не отправляется.</target>
        </trans-unit>
        <trans-unit id="9535ee34f2074fa8e689413e0518f1d3faf71e7d" translate="yes" xml:space="preserve">
          <source>This argument will not be passed to &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt;. Instead, it will cause the helper to start by sending git:// service requests to the remote side with the service field set to an appropriate value and the repository field set to rest of the argument. Default is not to send such a request.</source>
          <target state="translated">Этот аргумент не будет передан в &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; . Вместо этого он вызовет запуск помощника с отправки запросов git: // на удаленную сторону с полем службы, установленным на соответствующее значение, и полем репозитория, установленным на остальную часть аргумента. По умолчанию такой запрос не отправляется.</target>
        </trans-unit>
        <trans-unit id="b50cd8ffcdc46b4b68ae7776a2b00f1d1183b6dd" translate="yes" xml:space="preserve">
          <source>This asks for all the history reachable from the given commit but not from any branch, tag, or other reference. If you decide it&amp;rsquo;s something you want, you can always create a new reference to it, e.g.,</source>
          <target state="translated">Это запрашивает всю историю, доступную из данной фиксации, но не из какой-либо ветки, тега или другой ссылки. Если вы решите, что это то, что вам нужно, вы всегда можете создать новую ссылку на него, например,</target>
        </trans-unit>
        <trans-unit id="7efa4dea1c9da210003e0c08e382eb543f66cbf7" translate="yes" xml:space="preserve">
          <source>This attribute controls the length of conflict markers left in the work tree file during a conflicted merge. Only setting to the value to a positive integer has any meaningful effect.</source>
          <target state="translated">Данный атрибут контролирует длину маркеров конфликтов,оставленных в файле рабочего дерева при конфликтном слиянии.Только установка значения в положительное целое число имеет смысл.</target>
        </trans-unit>
        <trans-unit id="4caef1788f338fb02906a32b34bfb366a7539a3a" translate="yes" xml:space="preserve">
          <source>This attribute enables and controls end-of-line normalization. When a text file is normalized, its line endings are converted to LF in the repository. To control what line ending style is used in the working directory, use the &lt;code&gt;eol&lt;/code&gt; attribute for a single file and the &lt;code&gt;core.eol&lt;/code&gt; configuration variable for all text files. Note that setting &lt;code&gt;core.autocrlf&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; overrides &lt;code&gt;core.eol&lt;/code&gt; (see the definitions of those options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Этот атрибут включает и контролирует нормализацию конца строки. Когда текстовый файл нормализуется, его окончания строк преобразуются в LF в репозитории. Для контроля того, что строка , заканчивающаяся стиль используется в рабочем каталоге, используйте &lt;code&gt;eol&lt;/code&gt; атрибут для одного файла и &lt;code&gt;core.eol&lt;/code&gt; переменной конфигурации для всех текстовых файлов. Обратите внимание, что установка &lt;code&gt;core.autocrlf&lt;/code&gt; на &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;input&lt;/code&gt; переопределяет &lt;code&gt;core.eol&lt;/code&gt; (см. Определения этих параметров в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9abb1dada669f4b282e87943eaa4c10d9676f824" translate="yes" xml:space="preserve">
          <source>This attribute sets a specific line-ending style to be used in the working directory. It enables end-of-line conversion without any content checks, effectively setting the &lt;code&gt;text&lt;/code&gt; attribute. Note that setting this attribute on paths which are in the index with CRLF line endings may make the paths to be considered dirty. Adding the path to the index again will normalize the line endings in the index.</source>
          <target state="translated">Этот атрибут устанавливает определенный стиль окончания строки, который будет использоваться в рабочем каталоге. Он обеспечивает преобразование в конце строки без каких-либо проверок содержимого, эффективно устанавливая &lt;code&gt;text&lt;/code&gt; атрибут. Обратите внимание, что установка этого атрибута на пути, которые находятся в индексе с окончаниями строк CRLF, может сделать пути грязными. Повторное добавление пути к индексу нормализует окончания строк в индексе.</target>
        </trans-unit>
        <trans-unit id="a95f413f93d421b5f0b609911f7201baca2aa2de" translate="yes" xml:space="preserve">
          <source>This automatically updates the rev_map if needed (see &lt;code&gt;$GIT_DIR/svn/**/.rev_map.*&lt;/code&gt; in the FILES section below for details).</source>
          <target state="translated">Это автоматически обновляет rev_map, если необходимо (подробности см. В &lt;code&gt;$GIT_DIR/svn/**/.rev_map.*&lt;/code&gt; В разделе ФАЙЛЫ ниже).</target>
        </trans-unit>
        <trans-unit id="756e07e0622c048ffb322b306c002b3fe742a463" translate="yes" xml:space="preserve">
          <source>This behavior can be suppressed with the &lt;code&gt;--no-ff&lt;/code&gt; option.</source>
          <target state="translated">Это поведение можно подавить с помощью опции &lt;code&gt;--no-ff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad430bc747d1916521d538bf94c1847176c4231" translate="yes" xml:space="preserve">
          <source>This behavior is the default when the start point is a remote-tracking branch. Set the branch.autoSetupMerge configuration variable to &lt;code&gt;false&lt;/code&gt; if you want &lt;code&gt;git switch&lt;/code&gt;, &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git branch&lt;/code&gt; to always behave as if &lt;code&gt;--no-track&lt;/code&gt; were given. Set it to &lt;code&gt;always&lt;/code&gt; if you want this behavior when the start-point is either a local or remote-tracking branch.</source>
          <target state="translated">Это поведение используется по умолчанию, когда начальная точка является ветвью удаленного отслеживания. Установите для переменной конфигурации branch.autoSetupMerge значение &lt;code&gt;false&lt;/code&gt; , если вы хотите, чтобы &lt;code&gt;git switch&lt;/code&gt; , &lt;code&gt;git checkout&lt;/code&gt; и &lt;code&gt;git branch&lt;/code&gt; всегда вели себя так, как если бы был задан параметр &lt;code&gt;--no-track&lt;/code&gt; . Установите его &lt;code&gt;always&lt;/code&gt; если вы хотите, чтобы это поведение происходило, когда начальная точка является либо локальной, либо удаленной ветвью отслеживания.</target>
        </trans-unit>
        <trans-unit id="e589ab09a449c7cf7000e50f249deca2b148281c" translate="yes" xml:space="preserve">
          <source>This boolean will enable &lt;code&gt;fsync()&lt;/code&gt; when writing object files.</source>
          <target state="translated">Это логическое значение включает &lt;code&gt;fsync()&lt;/code&gt; при записи объектных файлов.</target>
        </trans-unit>
        <trans-unit id="2a9d8bb8cd3e4996e1654fca8257ad2030d24d70" translate="yes" xml:space="preserve">
          <source>This breakage is of course most of the time unrelated to the breakage we are trying to locate in the commit graph. But it prevents us to know if the interesting &quot;bad behavior&quot; is present or not.</source>
          <target state="translated">Этот разрыв,конечно же,в большинстве случаев не связан с тем,что мы пытаемся найти на графике коммитов.Но это мешает нам узнать,присутствует ли интересное &quot;плохое поведение&quot; или нет.</target>
        </trans-unit>
        <trans-unit id="1a7656b1b8b17aa91ea330f8fbedd0a75097faed" translate="yes" xml:space="preserve">
          <source>This bug has also been shown to affect non-symlink cases of replacing a directory with a file when it comes to the internal structures of the untracked cache, but no case has been reported where this resulted in wrong &quot;git status&quot; output.</source>
          <target state="translated">Также было показано,что эта ошибка влияет на случаи замены каталога на файл,когда речь идёт о внутренних структурах неотслеживаемого кэша,но не было сообщено ни об одном случае,когда это приводило к неправильному выводу &quot;git-статуса&quot;.</target>
        </trans-unit>
        <trans-unit id="bbb14e9c1a32bd1658d34b41d317e78fe3e2cf7e" translate="yes" xml:space="preserve">
          <source>This cache is meant to speed up commands that involve determining untracked files such as &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="translated">Этот кеш предназначен для ускорения выполнения команд, которые включают определение неотслеживаемых файлов, таких как &lt;code&gt;git status&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9291bab46bd7ea7a2a21b7e8d51146482ff7a6" translate="yes" xml:space="preserve">
          <source>This calculates the same as &lt;code&gt;--bisect&lt;/code&gt;, except that refs in &lt;code&gt;refs/bisect/&lt;/code&gt; are not used, and except that this outputs text ready to be eval&amp;rsquo;ed by the shell. These lines will assign the name of the midpoint revision to the variable &lt;code&gt;bisect_rev&lt;/code&gt;, and the expected number of commits to be tested after &lt;code&gt;bisect_rev&lt;/code&gt; is tested to &lt;code&gt;bisect_nr&lt;/code&gt;, the expected number of commits to be tested if &lt;code&gt;bisect_rev&lt;/code&gt; turns out to be good to &lt;code&gt;bisect_good&lt;/code&gt;, the expected number of commits to be tested if &lt;code&gt;bisect_rev&lt;/code&gt; turns out to be bad to &lt;code&gt;bisect_bad&lt;/code&gt;, and the number of commits we are bisecting right now to &lt;code&gt;bisect_all&lt;/code&gt;.</source>
          <target state="translated">Это вычисляется так же, как &lt;code&gt;--bisect&lt;/code&gt; , за исключением того, что ссылки в &lt;code&gt;refs/bisect/&lt;/code&gt; не используются, и за исключением того, что это выводит текст, готовый для оценки оболочкой. Эти строки присваивают имя ревизии средней точки переменной &lt;code&gt;bisect_rev&lt;/code&gt; , а ожидаемое количество коммитов , которые будут проверены после &lt;code&gt;bisect_rev&lt;/code&gt; - &lt;code&gt;bisect_nr&lt;/code&gt; , ожидаемое количество коммитов , которые будут проверены, если &lt;code&gt;bisect_rev&lt;/code&gt; окажется подходящим для &lt;code&gt;bisect_good&lt;/code&gt; , ожидаемое количество &lt;code&gt;bisect_rev&lt;/code&gt; которые будут проверены, если bisect_rev окажется плохим для &lt;code&gt;bisect_bad&lt;/code&gt; , и количество коммитов , которые мы сейчас &lt;code&gt;bisect_all&lt;/code&gt; пополам до bisect_all .</target>
        </trans-unit>
        <trans-unit id="7d3cf717b036e3b0e81df34e24d7ea082a035f6a" translate="yes" xml:space="preserve">
          <source>This can allow you to make partial mirrors when running fetch; but is generally not recommended because history will be skipped and lost.</source>
          <target state="translated">Это может позволить вам сделать частичные зеркала при запуске fetch;но это обычно не рекомендуется,потому что история будет пропущена и потеряна.</target>
        </trans-unit>
        <trans-unit id="636e119b451b3bd7ccaf26b7d43733789f26ed19" translate="yes" xml:space="preserve">
          <source>This can also be set up as the default behaviour by using the &lt;code&gt;worktree.guessRemote&lt;/code&gt; config option.</source>
          <target state="translated">Это также можно настроить как поведение по умолчанию с помощью &lt;code&gt;worktree.guessRemote&lt;/code&gt; конфигурации worktree.guessRemote .</target>
        </trans-unit>
        <trans-unit id="fa409f68e80081ea9a669e9f13a5d077543254ef" translate="yes" xml:space="preserve">
          <source>This can be &lt;code&gt;end&lt;/code&gt;, which is the default, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;before&lt;/code&gt;.</source>
          <target state="translated">Это может быть &lt;code&gt;end&lt;/code&gt; по умолчанию, &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; или &lt;code&gt;before&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0de02388f102cf8ff32d10ea0ea1542e4435ae39" translate="yes" xml:space="preserve">
          <source>This can be any options that the archiver backend understands. See next section.</source>
          <target state="translated">Это могут быть любые варианты,которые понимает бэкэнд архиватора.См.следующий раздел.</target>
        </trans-unit>
        <trans-unit id="8ebe928ea2c46867d2d30a22aa44b6d209b60b27" translate="yes" xml:space="preserve">
          <source>This can be combined with the gitweb configuration:</source>
          <target state="translated">Это может быть совмещено с конфигурацией gitweb:</target>
        </trans-unit>
        <trans-unit id="3e2aafd0fe68d162abd0214f2c4dbcf97a317242" translate="yes" xml:space="preserve">
          <source>This can be enabled by default with the configuration option mailinfo.scissors.</source>
          <target state="translated">Это может быть включено по умолчанию с помощью опции конфигурации mailinfo.scissors.</target>
        </trans-unit>
        <trans-unit id="90b17ef61d05f77323fefc823815f1b4d0ca5c24" translate="yes" xml:space="preserve">
          <source>This can be set to a comma-separated list of strings. When a curl trace is enabled (see &lt;code&gt;GIT_TRACE_CURL&lt;/code&gt; above), whenever a &quot;Cookies:&quot; header sent by the client is dumped, values of cookies whose key is in that list (case-sensitive) are redacted.</source>
          <target state="translated">Это может быть список строк, разделенных запятыми. Когда трассировка curl включена (см. &lt;code&gt;GIT_TRACE_CURL&lt;/code&gt; выше), всякий раз, когда заголовок &amp;laquo;Cookies:&amp;raquo;, отправленный клиентом, сбрасывается, значения файлов cookie, ключ которых находится в этом списке (с учетом регистра), удаляются.</target>
        </trans-unit>
        <trans-unit id="3d49143ca76086473ec42d2280fe45285788984b" translate="yes" xml:space="preserve">
          <source>This can be used to color the metadata of a blame line depending on age of the line.</source>
          <target state="translated">Это может быть использовано для окраски метаданных линии обвинения в зависимости от возраста линии.</target>
        </trans-unit>
        <trans-unit id="0f9fdab39f98d82a2bdc74c13a484288c9af48d4" translate="yes" xml:space="preserve">
          <source>This can be used to convert arguments to a command run in a subdirectory so that they can still be used after moving to the top-level of the repository. For example:</source>
          <target state="translated">Это может быть использовано для преобразования аргументов в команду,запущенную в подкаталоге,чтобы их можно было использовать после перехода на верхний уровень репозитория.Например:</target>
        </trans-unit>
        <trans-unit id="7c4f04c6d6345aed6141f4d5502d056991a7840c" translate="yes" xml:space="preserve">
          <source>This can be used when you want to include further changes to the merge, or want to write your own merge commit message.</source>
          <target state="translated">Это может быть использовано,когда вы хотите включить дальнейшие изменения в слияние или хотите написать своё собственное сообщение о фиксации слияния.</target>
        </trans-unit>
        <trans-unit id="14d1ead4268c0c0f3315fceadadaf2f291770d82" translate="yes" xml:space="preserve">
          <source>This can be used with the &lt;code&gt;dcommit&lt;/code&gt;, &lt;code&gt;rebase&lt;/code&gt;, &lt;code&gt;branch&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; commands.</source>
          <target state="translated">Это может быть использовано с &lt;code&gt;dcommit&lt;/code&gt; , &lt;code&gt;rebase&lt;/code&gt; , &lt;code&gt;branch&lt;/code&gt; и &lt;code&gt;tag&lt;/code&gt; команд.</target>
        </trans-unit>
        <trans-unit id="9067f207a93cdcf6d90b3183367a4ae6097c31d6" translate="yes" xml:space="preserve">
          <source>This can be useful when you want to publish the tree from a commit without exposing its full history. You might want to do this to publish an open source branch of a project whose current tree is &quot;clean&quot;, but whose full history contains proprietary or otherwise encumbered bits of code.</source>
          <target state="translated">Это может быть полезно,когда вы хотите опубликовать дерево из коммита,не раскрывая его полную историю.Вы можете захотеть сделать это,чтобы опубликовать открытую ветку проекта,чьё текущее дерево &quot;чистое&quot;,но чья полная история содержит несвободные или иным образом загромождённые биты кода.</target>
        </trans-unit>
        <trans-unit id="4ddcbb1d5b5e22f922e078b6b0d84fe1dcc0409b" translate="yes" xml:space="preserve">
          <source>This can happen, for example, if you:</source>
          <target state="translated">Это может случиться,например,если ты:</target>
        </trans-unit>
        <trans-unit id="9140f80526c6eb06ff98ed4abf5c0d2e07067266" translate="yes" xml:space="preserve">
          <source>This can only resolve two heads (i.e. the current branch and another branch you pulled from) using a 3-way merge algorithm. It tries to carefully detect criss-cross merge ambiguities and is considered generally safe and fast.</source>
          <target state="translated">Это может разрешить только две головки (т.е.текущее ответвление и другое ответвление,из которого вы вытащили),используя алгоритм 3-х стороннего слияния.Он пытается тщательно обнаружить неоднозначные слияния,и считается в целом безопасным и быстрым.</target>
        </trans-unit>
        <trans-unit id="10679b433b60fbaff0452d6d903b314fee5164d2" translate="yes" xml:space="preserve">
          <source>This can only resolve two heads using a 3-way merge algorithm. When there is more than one common ancestor that can be used for 3-way merge, it creates a merged tree of the common ancestors and uses that as the reference tree for the 3-way merge. This has been reported to result in fewer merge conflicts without causing mismerges by tests done on actual merge commits taken from Linux 2.6 kernel development history. Additionally this can detect and handle merges involving renames, but currently cannot make use of detected copies. This is the default merge strategy when pulling or merging one branch.</source>
          <target state="translated">Это может разрешить только две головки с помощью алгоритма 3-хстороннего слияния.При наличии более чем одного общего предка,который может быть использован для 3-полосного слияния,он создает объединенное дерево общих предков и использует его в качестве дерева ссылок для 3-полосного слияния.Сообщается,что это приводит к меньшему количеству конфликтов слияния,не вызывая ошибок при тестировании реальных коммитов слияния,взятых из истории разработки ядра Linux 2.6.Кроме того,это может обнаруживать и обрабатывать слияния с переименованиями,но в настоящее время не может использовать обнаруженные копии.Это стратегия слияния по умолчанию при вытаскивании или слиянии одного ответвления.</target>
        </trans-unit>
        <trans-unit id="2cac39aeb86961e1363f7613dfed0033661ab943" translate="yes" xml:space="preserve">
          <source>This can speed up operations like &lt;code&gt;git diff&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; especially on filesystems like NFS that have weak caching semantics and thus relatively high IO latencies. When enabled, Git will do the index comparison to the filesystem data in parallel, allowing overlapping IO&amp;rsquo;s. Defaults to true.</source>
          <target state="translated">Это может ускорить такие операции, как &lt;code&gt;git diff&lt;/code&gt; и &lt;code&gt;git status&lt;/code&gt; , особенно в файловых системах, таких как NFS, которые имеют слабую семантику кэширования и, следовательно, относительно высокие задержки ввода-вывода. Если этот параметр включен, Git будет выполнять сравнение индекса с данными файловой системы параллельно, что позволяет перекрывать операции ввода-вывода. По умолчанию true.</target>
        </trans-unit>
        <trans-unit id="9202266152fd1a0a2194149286bebd74fe30a95c" translate="yes" xml:space="preserve">
          <source>This capability can be advertised multiple times. The first applicable refspec takes precedence. The left-hand of refspecs advertised with this capability must cover all refs reported by the list command. If no &lt;code&gt;refspec&lt;/code&gt; capability is advertised, there is an implied &lt;code&gt;refspec *:*&lt;/code&gt;.</source>
          <target state="translated">Эта возможность может рекламироваться несколько раз. Первый применимый refspec имеет приоритет. Левая часть ссылок, объявленных с этой возможностью, должна охватывать все ссылки, сообщаемые командой list. Если возможность &lt;code&gt;refspec&lt;/code&gt; не объявляется, подразумевается &lt;code&gt;refspec *:*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="561397ab0857a5bada65e17ac4aabd661a6939b5" translate="yes" xml:space="preserve">
          <source>This chapter covers internal details of the Git implementation which probably only Git developers need to understand.</source>
          <target state="translated">В этой главе рассматриваются внутренние детали реализации Git'а,которые,вероятно,должны быть понятны только разработчикам Git'а.</target>
        </trans-unit>
        <trans-unit id="9301665301f3e50c4417122a8411be226ea5b235" translate="yes" xml:space="preserve">
          <source>This command always gets all objects. Historically, there were three options &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-t&lt;/code&gt; for choosing which objects to download. They are now silently ignored.</source>
          <target state="translated">Эта команда всегда получает все объекты. Исторически существовало три параметра &lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-c&lt;/code&gt; и &lt;code&gt;-t&lt;/code&gt; для выбора объектов для загрузки. Теперь их молча игнорируют.</target>
        </trans-unit>
        <trans-unit id="5b8a59dc9ca3a3d6f247d36df5fb54708fa69494" translate="yes" xml:space="preserve">
          <source>This command applies the patch but does not create a commit. Use &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; to create commits from patches generated by &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and/or received by email.</source>
          <target state="translated">Эта команда применяет патч, но не создает фиксацию. Используйте &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; для создания коммитов из патчей, сгенерированных &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; и / или полученных по электронной почте.</target>
        </trans-unit>
        <trans-unit id="1f849e1e7df08a5bb28860e4715d22e12f5d5d20" translate="yes" xml:space="preserve">
          <source>This command assists the developer in this process by recording conflicted automerge results and corresponding hand resolve results on the initial manual merge, and applying previously recorded hand resolutions to their corresponding automerge results.</source>
          <target state="translated">Эта команда помогает разработчику в этом процессе,записывая противоречивые результаты авторского слияния и соответствующие разрешения рук при первоначальном ручном слиянии,а также применяя ранее записанные разрешения рук к соответствующим результатам авторского слияния.</target>
        </trans-unit>
        <trans-unit id="b823d02fd766a4ae4b81090ce369454e7da568d6" translate="yes" xml:space="preserve">
          <source>This command caches credentials in memory for use by future Git programs. The stored credentials never touch the disk, and are forgotten after a configurable timeout. The cache is accessible over a Unix domain socket, restricted to the current user by filesystem permissions.</source>
          <target state="translated">Эта команда кэширует учетные данные в памяти для использования будущими программами Git'а.Сохраненные учетные данные никогда не трогают диск и забываются после настраиваемого тайм-аута.Кэш доступен через доменное гнездо Unix,ограниченное текущим пользователем разрешениями файловой системы.</target>
        </trans-unit>
        <trans-unit id="4784337d21599fe7fcfddcd79392d8470207170e" translate="yes" xml:space="preserve">
          <source>This command can be performed multiple times before a commit. It only adds the content of the specified file(s) at the time the add command is run; if you want subsequent changes included in the next commit, then you must run &lt;code&gt;git add&lt;/code&gt; again to add the new content to the index.</source>
          <target state="translated">Эту команду можно выполнить несколько раз перед фиксацией. Он только добавляет содержимое указанного файла (ов) во время выполнения команды добавления; если вы хотите, чтобы последующие изменения были включены в следующую фиксацию, вы должны снова запустить &lt;code&gt;git add&lt;/code&gt; , чтобы добавить новый контент в индекс.</target>
        </trans-unit>
        <trans-unit id="c286ab165ab2a31532b621372beb627366820ec4" translate="yes" xml:space="preserve">
          <source>This command can be used where a &lt;code&gt;filemodify&lt;/code&gt; directive can appear, allowing it to be used in the middle of a commit. For a &lt;code&gt;filemodify&lt;/code&gt; using an inline directive, it can also appear right before the &lt;code&gt;data&lt;/code&gt; directive.</source>
          <target state="translated">Эту команду можно использовать там, где может появиться директива &lt;code&gt;filemodify&lt;/code&gt; , позволяющая использовать ее в середине фиксации. Для изменения &lt;code&gt;filemodify&lt;/code&gt; с использованием встроенной директивы он также может появляться прямо перед директивой &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74e4352fd2289d447be4133ac0e6d68d162428a6" translate="yes" xml:space="preserve">
          <source>This command can run &lt;code&gt;applypatch-msg&lt;/code&gt;, &lt;code&gt;pre-applypatch&lt;/code&gt;, and &lt;code&gt;post-applypatch&lt;/code&gt; hooks. See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more information.</source>
          <target state="translated">Эта команда может запускать &lt;code&gt;applypatch-msg&lt;/code&gt; , &lt;code&gt;pre-applypatch&lt;/code&gt; и &lt;code&gt;post-applypatch&lt;/code&gt; . См. &lt;a href=&quot;githooks&quot;&gt;Githooks [5]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="2e5610ce87e5d01d8f8246892b4f05f886b6ad5a" translate="yes" xml:space="preserve">
          <source>This command can run &lt;code&gt;commit-msg&lt;/code&gt;, &lt;code&gt;prepare-commit-msg&lt;/code&gt;, &lt;code&gt;pre-commit&lt;/code&gt;, &lt;code&gt;post-commit&lt;/code&gt; and &lt;code&gt;post-rewrite&lt;/code&gt; hooks. See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more information.</source>
          <target state="translated">Эта команда может запускать &lt;code&gt;commit-msg&lt;/code&gt; , &lt;code&gt;prepare-commit-msg&lt;/code&gt; , &lt;code&gt;pre-commit&lt;/code&gt; , &lt;code&gt;post-commit&lt;/code&gt; и &lt;code&gt;post-rewrite&lt;/code&gt; . См. &lt;a href=&quot;githooks&quot;&gt;Githooks [5]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="6ba8d48bf258fdf0b61e4a3a7667022fd45b3e45" translate="yes" xml:space="preserve">
          <source>This command creates an empty Git repository - basically a &lt;code&gt;.git&lt;/code&gt; directory with subdirectories for &lt;code&gt;objects&lt;/code&gt;, &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, and template files. An initial &lt;code&gt;HEAD&lt;/code&gt; file that references the HEAD of the master branch is also created.</source>
          <target state="translated">Эта команда создает пустой репозиторий Git - в основном каталог &lt;code&gt;.git&lt;/code&gt; с подкаталогами для &lt;code&gt;objects&lt;/code&gt; , &lt;code&gt;refs/heads&lt;/code&gt; , &lt;code&gt;refs/tags&lt;/code&gt; и файлов шаблонов. Также создается начальный файл &lt;code&gt;HEAD&lt;/code&gt; , который ссылается на HEAD главной ветви.</target>
        </trans-unit>
        <trans-unit id="f52be87adec196973421cd7319ee0f98c1860983" translate="yes" xml:space="preserve">
          <source>This command degenerates to download everything to complete the asked refs from the remote side when the local side does not have a common ancestor commit.</source>
          <target state="translated">Эта команда дегенерирует,загружая все для завершения запрашиваемых ссылок с удаленной стороны,когда у локальной стороны нет общего коммита предков.</target>
        </trans-unit>
        <trans-unit id="194b70091800ec19021441e8c1778ca9e02b53d5" translate="yes" xml:space="preserve">
          <source>This command ensures that the changes in the experimental branch are already in the current branch.</source>
          <target state="translated">Эта команда гарантирует,что изменения в экспериментальной ветке уже находятся в текущей ветке.</target>
        </trans-unit>
        <trans-unit id="1b788d383418fe8b134f7630991a2d6359c7dd7c" translate="yes" xml:space="preserve">
          <source>This command finds new changes in p4 and imports them as Git commits.</source>
          <target state="translated">Эта команда находит новые изменения в p4 и импортирует их как коммиты Git'а.</target>
        </trans-unit>
        <trans-unit id="4b11fc8efec3bd343a83e9f1aa4620a514b9ab8e" translate="yes" xml:space="preserve">
          <source>This command formats the lines of its standard input into a table with multiple columns. Each input line occupies one cell of the table. It is used internally by other git commands to format output into columns.</source>
          <target state="translated">Эта команда форматирует строки стандартного ввода в таблицу с несколькими столбцами.Каждая строка ввода занимает одну ячейку таблицы.Она используется внутри других команд git'а для форматирования вывода в столбцы.</target>
        </trans-unit>
        <trans-unit id="ade7fdc971ed1f0936fb8fbff7bb1574367ca37b" translate="yes" xml:space="preserve">
          <source>This command is extremely useful if the frontend does not know (or does not care to know) what files are currently on the branch, and therefore cannot generate the proper &lt;code&gt;filedelete&lt;/code&gt; commands to update the content.</source>
          <target state="translated">Эта команда чрезвычайно полезна, если интерфейс не знает (или не заботится об этом), какие файлы в настоящее время находятся в ветке, и, следовательно, не может сгенерировать правильные команды &lt;code&gt;filedelete&lt;/code&gt; для обновления содержимого.</target>
        </trans-unit>
        <trans-unit id="5f45dc9e63088b4d8e620891decbfdd6655de376" translate="yes" xml:space="preserve">
          <source>This command is intended mostly for internal use by scripts automatically invoking &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Эта команда предназначена в основном для внутреннего использования скриптами, автоматически вызывающими &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3710225b15829bc8cbeb92895b81ff709286e645" translate="yes" xml:space="preserve">
          <source>This command is recursive by default.</source>
          <target state="translated">По умолчанию эта команда является рекурсивной.</target>
        </trans-unit>
        <trans-unit id="6e8668d616c8790cb8d71e8720597de54ced7850" translate="yes" xml:space="preserve">
          <source>This command is used to combine all objects that do not currently reside in a &quot;pack&quot;, into a pack. It can also be used to re-organize existing packs into a single, more efficient pack.</source>
          <target state="translated">Эта команда используется для объединения всех объектов,которые в настоящее время не проживают в &quot;пакете&quot;,в пакет.Она также может быть использована для реорганизации существующих пакетов в единый,более эффективный пакет.</target>
        </trans-unit>
        <trans-unit id="e7cbc44be580e3c1734536d3564c4b9dc7e501fa" translate="yes" xml:space="preserve">
          <source>This command is used to solve the storage and performance problem by storing the refs in a single file, &lt;code&gt;$GIT_DIR/packed-refs&lt;/code&gt;. When a ref is missing from the traditional &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory hierarchy, it is looked up in this file and used if found.</source>
          <target state="translated">Эта команда используется для решения проблемы с хранением и производительностью путем хранения ссылок в одном файле &lt;code&gt;$GIT_DIR/packed-refs&lt;/code&gt; . Когда ссылка отсутствует в традиционной иерархии каталогов &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; , она ищется в этом файле и используется, если найдена.</target>
        </trans-unit>
        <trans-unit id="43f707239bbecf8d6bf96bbdb4b367abb8fd5357" translate="yes" xml:space="preserve">
          <source>This command is usually not invoked directly by the end user. The UI for the protocol is on the &lt;code&gt;git archive&lt;/code&gt; side, and the program pair is meant to be used to get an archive from a remote repository.</source>
          <target state="translated">Эта команда обычно не вызывается непосредственно конечным пользователем. Пользовательский интерфейс протокола находится на стороне &lt;code&gt;git archive&lt;/code&gt; , а программная пара предназначена для использования для получения архива из удаленного репозитория.</target>
        </trans-unit>
        <trans-unit id="17d67b43408b7b4804e33e1e3b79dc1fbf03af1b" translate="yes" xml:space="preserve">
          <source>This command is usually not invoked directly by the end user. The UI for the protocol is on the &lt;code&gt;git fetch-pack&lt;/code&gt; side, and the program pair is meant to be used to pull updates from a remote repository. For push operations, see &lt;code&gt;git send-pack&lt;/code&gt;.</source>
          <target state="translated">Эта команда обычно не вызывается непосредственно конечным пользователем. Пользовательский интерфейс протокола находится на стороне &lt;code&gt;git fetch-pack&lt;/code&gt; , а программная пара предназначена для получения обновлений из удаленного репозитория. Информацию об операциях push см. В &lt;code&gt;git send-pack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36ac8b84f92c3cf141e5ae101adcc45178aae4c7" translate="yes" xml:space="preserve">
          <source>This command is usually not invoked directly by the end user. The UI for the protocol is on the &lt;code&gt;git send-pack&lt;/code&gt; side, and the program pair is meant to be used to push updates to remote repository. For pull operations, see &lt;a href=&quot;git-fetch-pack&quot;&gt;git-fetch-pack[1]&lt;/a&gt;.</source>
          <target state="translated">Эта команда обычно не вызывается непосредственно конечным пользователем. Пользовательский интерфейс для протокола находится на стороне &lt;code&gt;git send-pack&lt;/code&gt; , а программная пара предназначена для использования для отправки обновлений в удаленный репозиторий. Для получения информации об операциях извлечения см. &lt;a href=&quot;git-fetch-pack&quot;&gt;Git-fetch-pack [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8cac5b996748b602d2e8f0cf9273cee3d1c4d80" translate="yes" xml:space="preserve">
          <source>This command lets you check that intermediate commits are compilable. The todo list becomes like that:</source>
          <target state="translated">Эта команда позволяет проверить компилируемость промежуточных коммитов.Список todo становится таким:</target>
        </trans-unit>
        <trans-unit id="56bca57be11add071b8aeae38f6a28f443105856" translate="yes" xml:space="preserve">
          <source>This command manages the information recorded in the reflogs.</source>
          <target state="translated">Эта команда управляет информацией,записанной в рефлогах.</target>
        </trans-unit>
        <trans-unit id="7c7ebb85111dd101dc1c2782f6e5cbc235a39c44" translate="yes" xml:space="preserve">
          <source>This command provides a way to interact with p4 repositories using Git.</source>
          <target state="translated">Данная команда предоставляет способ взаимодействия с p4-репозиториями с помощью Git'а.</target>
        </trans-unit>
        <trans-unit id="637c92f99feb8b30861eeaee2e3273c64a9b5351" translate="yes" xml:space="preserve">
          <source>This command reads some patches or commit messages from either the &amp;lt;file&amp;gt; arguments or the standard input if no &amp;lt;file&amp;gt; is specified. If &lt;code&gt;--parse&lt;/code&gt; is specified, the output consists of the parsed trailers.</source>
          <target state="translated">Эта команда считывает некоторые исправления или сообщения фиксации либо из аргументов &amp;lt;file&amp;gt;, либо из стандартного ввода, если &amp;lt;file&amp;gt; не указан. Если &lt;code&gt;--parse&lt;/code&gt; , вывод состоит из проанализированных трейлеров.</target>
        </trans-unit>
        <trans-unit id="a38646d64359b52991af1358c674765acf2c0c11" translate="yes" xml:space="preserve">
          <source>This command should not list any commits. Otherwise, check out &lt;code&gt;master&lt;/code&gt; and merge &lt;code&gt;maint&lt;/code&gt; into it.</source>
          <target state="translated">В этой команде не должно быть никаких коммитов. В противном случае проверьте &lt;code&gt;master&lt;/code&gt; и &lt;code&gt;maint&lt;/code&gt; с ним maint .</target>
        </trans-unit>
        <trans-unit id="6a853b09f1818b9d32f936bd42aa8a84af13b068" translate="yes" xml:space="preserve">
          <source>This command shows the differences between two versions of a patch series, or more generally, two commit ranges (ignoring merge commits).</source>
          <target state="translated">Эта команда показывает различия между двумя версиями серии патчей,или,в более общем плане,между двумя диапазонами коммитов (игнорируя коммиты слияния).</target>
        </trans-unit>
        <trans-unit id="852903a68075d19a47d4520af94edde77996207f" translate="yes" xml:space="preserve">
          <source>This command stores credentials indefinitely on disk for use by future Git programs.</source>
          <target state="translated">Эта команда бессрочно хранит учетные данные на диске для использования будущими программами Git'а.</target>
        </trans-unit>
        <trans-unit id="d143bf10d727fe2f5d0639ed85e199dd448d8bd2" translate="yes" xml:space="preserve">
          <source>This command updates the index using the current content found in the working tree, to prepare the content staged for the next commit. It typically adds the current content of existing paths as a whole, but with some options it can also be used to add content with only part of the changes made to the working tree files applied, or remove paths that do not exist in the working tree anymore.</source>
          <target state="translated">Эта команда обновляет индекс,используя текущее содержимое,найденное в рабочем дереве,для подготовки инсценировки содержимого к следующей фиксации.Обычно она добавляет текущее содержимое существующих путей в целом,но с некоторыми опциями она также может быть использована для добавления содержимого с применением только части изменений,внесённых в файлы рабочего дерева,или для удаления путей,которые больше не существуют в рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="61eacd31ecbd262bdcbed11d9c6103318919d1be" translate="yes" xml:space="preserve">
          <source>This command uploads a mailbox generated with &lt;code&gt;git format-patch&lt;/code&gt; into an IMAP drafts folder. This allows patches to be sent as other email is when using mail clients that cannot read mailbox files directly. The command also works with any general mailbox in which emails have the fields &quot;From&quot;, &quot;Date&quot;, and &quot;Subject&quot; in that order.</source>
          <target state="translated">Эта команда загружает почтовый ящик, созданный с помощью &lt;code&gt;git format-patch&lt;/code&gt; , в папку черновиков IMAP. Это позволяет отправлять исправления, как и другие электронные письма, при использовании почтовых клиентов, которые не могут напрямую читать файлы почтовых ящиков. Команда также работает с любым обычным почтовым ящиком, в котором электронные письма имеют поля &amp;laquo;От&amp;raquo;, &amp;laquo;Дата&amp;raquo; и &amp;laquo;Тема&amp;raquo; в указанном порядке.</target>
        </trans-unit>
        <trans-unit id="a3bcbdfcf8f3a072ac23f24cf310648f9691fb70" translate="yes" xml:space="preserve">
          <source>This command uses a binary search algorithm to find which commit in your project&amp;rsquo;s history introduced a bug. You use it by first telling it a &quot;bad&quot; commit that is known to contain the bug, and a &quot;good&quot; commit that is known to be before the bug was introduced. Then &lt;code&gt;git
bisect&lt;/code&gt; picks a commit between those two endpoints and asks you whether the selected commit is &quot;good&quot; or &quot;bad&quot;. It continues narrowing down the range until it finds the exact commit that introduced the change.</source>
          <target state="translated">Эта команда использует алгоритм двоичного поиска, чтобы найти, какая фиксация в истории вашего проекта привела к ошибке. Вы используете его, сначала сообщая ему &amp;laquo;плохую&amp;raquo; фиксацию, которая, как известно, содержит ошибку, и &amp;laquo;хорошую&amp;raquo; фиксацию, которая, как известно, была сделана до появления ошибки. Затем &lt;code&gt;git bisect&lt;/code&gt; выбирает фиксацию между этими двумя конечными точками и спрашивает, является ли выбранная фиксация &amp;laquo;хорошей&amp;raquo; или &amp;laquo;плохой&amp;raquo;. Он продолжает сужать диапазон, пока не найдет точную фиксацию, которая внесла изменение.</target>
        </trans-unit>
        <trans-unit id="097f8af4b6f26b418927a5ca4b24d71746b1f843" translate="yes" xml:space="preserve">
          <source>This command uses the &lt;code&gt;diff.color.*&lt;/code&gt; and &lt;code&gt;pager.range-diff&lt;/code&gt; settings (the latter is on by default). See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Эта команда использует &lt;code&gt;diff.color.*&lt;/code&gt; И &lt;code&gt;pager.range-diff&lt;/code&gt; (последний включен по умолчанию). См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03bab6a03561ee7ff2e9bf92505bcdd5322bfb51" translate="yes" xml:space="preserve">
          <source>This command will fail with non-zero status upon error. Some exit codes are:</source>
          <target state="translated">Эта команда не будет работать с ненулевым статусом при ошибке.Некоторые коды выхода:</target>
        </trans-unit>
        <trans-unit id="7ed6af6e5518c122d94f4b8fea824fc7938bd5aa" translate="yes" xml:space="preserve">
          <source>This command will fetch changes from the remote branches to your remote-tracking branches &lt;code&gt;origin/*&lt;/code&gt;, and merge the default branch into the current branch.</source>
          <target state="translated">Эта команда извлечет изменения из удаленных ветвей в исходную &lt;code&gt;origin/*&lt;/code&gt; веток удаленного отслеживания и объединит ветвь по умолчанию с текущей веткой.</target>
        </trans-unit>
        <trans-unit id="99c24081605f25434a1fa0a51df82045bf4b7763" translate="yes" xml:space="preserve">
          <source>This command will save your changes away to the &lt;code&gt;stash&lt;/code&gt;, and reset your working tree and the index to match the tip of your current branch. Then you can make your fix as usual.</source>
          <target state="translated">Эта команда сохранит ваши изменения в &lt;code&gt;stash&lt;/code&gt; и сбросит ваше рабочее дерево и индекс, чтобы они соответствовали кончику вашей текущей ветки. Затем вы можете исправить это как обычно.</target>
        </trans-unit>
        <trans-unit id="cb41b9bb98cbe715b8d6c0b50eb0b52309cdc91a" translate="yes" xml:space="preserve">
          <source>This commit will get blown away so a throw-away log message is OK.</source>
          <target state="translated">Этот коммит будет взорван,так что бросаемое сообщение журнала будет в порядке.</target>
        </trans-unit>
        <trans-unit id="068d7057b3017084327709c3e61c2e224fb2a5f6" translate="yes" xml:space="preserve">
          <source>This commits all other changes in the index.</source>
          <target state="translated">Это фиксирует все остальные изменения в индексе.</target>
        </trans-unit>
        <trans-unit id="1d649ab8ff53024e7549864469811ccee0abf2e7" translate="yes" xml:space="preserve">
          <source>This commits your first edits in &lt;code&gt;branch1&lt;/code&gt;.</source>
          <target state="translated">Это фиксирует ваши первые правки в &lt;code&gt;branch1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bc13c84a009ea0d6abb173ac6100dc00ae7606a" translate="yes" xml:space="preserve">
          <source>This compares stage 2 (our branch), stage 3 (their branch) and the working tree file and outputs a combined diff, similar to the way &lt;code&gt;diff-tree&lt;/code&gt; shows a merge commit with these flags.</source>
          <target state="translated">Это сравнивает этап 2 (наша ветка), этап 3 (их ветвь) и файл рабочего дерева и выводит комбинированный diff, аналогично тому, как &lt;code&gt;diff-tree&lt;/code&gt; показывает фиксацию слияния с этими флагами.</target>
        </trans-unit>
        <trans-unit id="d3fe164a17e549b712f12743eb90dc676fb8455c" translate="yes" xml:space="preserve">
          <source>This computation involves traversing all the reachable objects, i.e. it has the same cost as &lt;code&gt;git prune&lt;/code&gt;. It is primarily intended to fix corruption caused by garbage collecting using older versions of Git, which didn&amp;rsquo;t protect objects referred to by reflogs.</source>
          <target state="translated">Это вычисление включает в себя обход всех доступных объектов, то есть имеет ту же стоимость, что и &lt;code&gt;git prune&lt;/code&gt; . В первую очередь он предназначен для исправления повреждений, вызванных сборкой мусора с использованием более старых версий Git, которые не защищали объекты, на которые ссылаются журналы рефлогов.</target>
        </trans-unit>
        <trans-unit id="9e7c3905269f2318ce8a27a07b91b053d9dd7129" translate="yes" xml:space="preserve">
          <source>This configuration can be specified multiple times in order to allow multiple notes refs to be included. In that case, it will behave similarly to multiple &lt;code&gt;--[no-]notes[=]&lt;/code&gt; options passed in. That is, a value of &lt;code&gt;true&lt;/code&gt; will show the default notes, a value of &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; will also show notes from that notes ref and a value of &lt;code&gt;false&lt;/code&gt; will negate previous configurations and not show notes.</source>
          <target state="translated">Эту конфигурацию можно указать несколько раз, чтобы можно было включить несколько ссылок на заметки. В этом случае он будет вести себя так же, как и несколько переданных опций &lt;code&gt;--[no-]notes[=]&lt;/code&gt; . То есть, значение &lt;code&gt;true&lt;/code&gt; будет отображать заметки по умолчанию, значение &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; также покажет заметки из этих заметок ref и значение &lt;code&gt;false&lt;/code&gt; аннулируют предыдущие конфигурации и не отображают заметки.</target>
        </trans-unit>
        <trans-unit id="e6aa4372bde5e931f9e4e006e5a3cd0aea5ccf17" translate="yes" xml:space="preserve">
          <source>This configuration is used in two ways:</source>
          <target state="translated">Эта конфигурация используется двумя способами:</target>
        </trans-unit>
        <trans-unit id="06f31556dacb48424e7a1be662dd26364f785ce9" translate="yes" xml:space="preserve">
          <source>This configuration variable is useful in cases where you&amp;rsquo;d like to centrally configure your Git hooks instead of configuring them on a per-repository basis, or as a more flexible and centralized alternative to having an &lt;code&gt;init.templateDir&lt;/code&gt; where you&amp;rsquo;ve changed default hooks.</source>
          <target state="translated">Эта переменная конфигурации полезна в тех случаях, когда вы хотите централизованно настраивать хуки Git, а не настраивать их для каждого репозитория, или в качестве более гибкой и централизованной альтернативы &lt;code&gt;init.templateDir&lt;/code&gt; , где вы изменили хуки по умолчанию. ,</target>
        </trans-unit>
        <trans-unit id="eed4a11499740f4bb5f61d3ce7354c5409f33bf3" translate="yes" xml:space="preserve">
          <source>This configures how whitespace is ignored when performing the move detection for &lt;code&gt;--color-moved&lt;/code&gt;. It can be set by the &lt;code&gt;diff.colorMovedWS&lt;/code&gt; configuration setting. These modes can be given as a comma separated list:</source>
          <target state="translated">Это настраивает, как пропуски игнорируются при выполнении обнаружения перемещения для &lt;code&gt;--color-moved&lt;/code&gt; move . Его можно установить с помощью &lt;code&gt;diff.colorMovedWS&lt;/code&gt; конфигурации diff.colorMovedWS . Эти режимы можно указать в виде списка, разделенного запятыми:</target>
        </trans-unit>
        <trans-unit id="9b4ea1fd788cef298d939e77017eddec04b80461" translate="yes" xml:space="preserve">
          <source>This configures how whitespace is ignored when performing the move detection for &lt;code&gt;--color-moved&lt;/code&gt;. These modes can be given as a comma separated list:</source>
          <target state="translated">Это настраивает, как пропуски игнорируются при выполнении обнаружения перемещения для &lt;code&gt;--color-moved&lt;/code&gt; move . Эти режимы можно указать в виде списка, разделенного запятыми:</target>
        </trans-unit>
        <trans-unit id="77030a3f3e0bddf7aada34bc0939552bc0993e3c" translate="yes" xml:space="preserve">
          <source>This counts the number of unpacked object files and disk space consumed by them, to help you decide when it is a good time to repack.</source>
          <target state="translated">Это подсчитывает количество распакованных объектных файлов и потребляемое ими дисковое пространство,чтобы помочь вам решить,когда наступит подходящее время для переупаковки.</target>
        </trans-unit>
        <trans-unit id="3e67b0f2a3d6f811dcdec6a80edd2cc8d01b0b6b" translate="yes" xml:space="preserve">
          <source>This creates a &quot;lightweight&quot; tag. If you would also like to include a comment with the tag, and possibly sign it cryptographically, then you should create a tag object instead; see the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; man page for details.</source>
          <target state="translated">Это создает &amp;laquo;легкий&amp;raquo; тег. Если вы также хотите включить комментарий с тегом и, возможно, подписать его криптографически, вам следует вместо этого создать объект тега; подробности см. на странице руководства &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="687e61032de29ec5a828bf99d3854a432acd2a82" translate="yes" xml:space="preserve">
          <source>This creates a new directory &quot;myrepo&quot; containing a clone of Alice&amp;rsquo;s repository. The clone is on an equal footing with the original project, possessing its own copy of the original project&amp;rsquo;s history.</source>
          <target state="translated">Это создает новый каталог myrepo, содержащий клон репозитория Алисы. Клон находится на равных с исходным проектом, имея собственную копию истории исходного проекта.</target>
        </trans-unit>
        <trans-unit id="c2fd84fc2fa04021fed2cadb8707ca64b05a22fb" translate="yes" xml:space="preserve">
          <source>This creates a single &quot;pack file&quot; in .git/objects/pack/ containing all currently unpacked objects. You can then run</source>
          <target state="translated">При этом создаётся один &quot;пакетный файл&quot; в .git/объекты/пакеты/,содержащий все распакованные в данный момент объекты.Затем вы можете запустить</target>
        </trans-unit>
        <trans-unit id="bf43931e74b20a3da5197ed923f890fe71d72016" translate="yes" xml:space="preserve">
          <source>This default configuration is achieved by creating references to the remote branch heads under &lt;code&gt;refs/remotes/origin&lt;/code&gt; and by initializing &lt;code&gt;remote.origin.url&lt;/code&gt; and &lt;code&gt;remote.origin.fetch&lt;/code&gt; configuration variables.</source>
          <target state="translated">Эта конфигурация по умолчанию достигается путем создания ссылок на &lt;code&gt;remote.origin.url&lt;/code&gt; &lt;code&gt;remote.origin.fetch&lt;/code&gt; веток в каталоге &lt;code&gt;refs/remotes/origin&lt;/code&gt; и инициализации переменных конфигурации remote.origin.url и remote.origin.fetch .</target>
        </trans-unit>
        <trans-unit id="984768ad68337dfe2b0015e657c9f4f069afabc8" translate="yes" xml:space="preserve">
          <source>This defines two submodules, &lt;code&gt;libfoo&lt;/code&gt; and &lt;code&gt;libbar&lt;/code&gt;. These are expected to be checked out in the paths &lt;code&gt;include/foo&lt;/code&gt; and &lt;code&gt;include/bar&lt;/code&gt;, and for both submodules a URL is specified which can be used for cloning the submodules.</source>
          <target state="translated">Это определяет два подмодуля, &lt;code&gt;libfoo&lt;/code&gt; и &lt;code&gt;libbar&lt;/code&gt; . Ожидается, что они будут извлечены по путям &lt;code&gt;include/foo&lt;/code&gt; и &lt;code&gt;include/bar&lt;/code&gt; , и для обоих подмодулей указан URL-адрес, который можно использовать для клонирования подмодулей.</target>
        </trans-unit>
        <trans-unit id="57db5304522b1070a0df1071ce5df5d38ea7d002" translate="yes" xml:space="preserve">
          <source>This describes how Tony Luck uses Git in his role as maintainer of the IA64 architecture for the Linux kernel.</source>
          <target state="translated">Здесь описывается,как Тони Лак (Tony Luck)использует Git в качестве сопровождающего архитектуры IA64 для ядра Linux.</target>
        </trans-unit>
        <trans-unit id="c9e275f2996b22cd4415c594fae8f08a0dfe70e8" translate="yes" xml:space="preserve">
          <source>This determines the coloring scheme to be applied to blame output. It can be &lt;code&gt;repeatedLines&lt;/code&gt;, &lt;code&gt;highlightRecent&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt; which is the default.</source>
          <target state="translated">Это определяет схему окраски, которая будет применяться к выводу обвинений. Это может быть &lt;code&gt;repeatedLines&lt;/code&gt; , &lt;code&gt;highlightRecent&lt;/code&gt; или &lt;code&gt;none&lt;/code&gt; (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="56ee29b22f07db9306c3380b74b5b0180828e415" translate="yes" xml:space="preserve">
          <source>This directory is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/objects&quot; will be used instead.</source>
          <target state="translated">Этот каталог игнорируется,если установлен $GIT_COMMON_DIR и вместо него будет использоваться &quot;$GIT_COMMON_DIR/объекты&quot;.</target>
        </trans-unit>
        <trans-unit id="2072b137cd96280de0e098678b51f23a76dcd0dc" translate="yes" xml:space="preserve">
          <source>This disables potentially expensive checks to workaround broken symlinks checked into SVN by broken clients. Set this option to &quot;false&quot; if you track a SVN repository with many empty blobs that are not symlinks. This option may be changed while &lt;code&gt;git svn&lt;/code&gt; is running and take effect on the next revision fetched. If unset, &lt;code&gt;git svn&lt;/code&gt; assumes this option to be &quot;true&quot;.</source>
          <target state="translated">Это отключает потенциально дорогостоящие проверки обхода неработающих символических ссылок, проверенных в SVN сломанными клиентами. Установите для этого параметра значение &amp;laquo;false&amp;raquo;, если вы отслеживаете репозиторий SVN с большим количеством пустых блобов, не являющихся символическими ссылками. Этот параметр может быть изменен во время работы &lt;code&gt;git svn&lt;/code&gt; и вступит в силу при выборе следующей ревизии. Если не задано, &lt;code&gt;git svn&lt;/code&gt; предполагает, что этот параметр установлен как &quot;true&quot;.</target>
        </trans-unit>
        <trans-unit id="006e62625e60aabc7f31fa591f6f9b4a3bd2a878" translate="yes" xml:space="preserve">
          <source>This document attempts to write down and motivate some of the workflow elements used for &lt;code&gt;git.git&lt;/code&gt; itself. Many ideas apply in general, though the full workflow is rarely required for smaller projects with fewer people involved.</source>
          <target state="translated">Этот документ пытается записать и мотивировать некоторые элементы рабочего процесса, используемые для самого &lt;code&gt;git.git&lt;/code&gt; . Многие идеи применимы в целом, хотя полный рабочий процесс редко требуется для небольших проектов с меньшим количеством людей.</target>
        </trans-unit>
        <trans-unit id="8cd9193645885514540ac19f3167f508bebca422" translate="yes" xml:space="preserve">
          <source>This document presents a specification for a version 2 of Git&amp;rsquo;s wire protocol. Protocol v2 will improve upon v1 in the following ways:</source>
          <target state="translated">В этом документе представлена ​​спецификация для версии 2 сетевого протокола Git. Протокол v2 улучшит версию v1 следующим образом:</target>
        </trans-unit>
        <trans-unit id="46bd1a26c48d1772be26d3d869cc4b6544004ea1" translate="yes" xml:space="preserve">
          <source>This document shows the &quot;raw&quot; syntax as seen by git. The shell and other UIs might require additional quoting to protect special characters and to avoid word splitting.</source>
          <target state="translated">Этот документ показывает &quot;сырой&quot; синтаксис,как его видит git.Оболочка и другие пользовательские интерфейсы могут потребовать дополнительного цитирования для защиты специальных символов и во избежание разделения слов.</target>
        </trans-unit>
        <trans-unit id="a76f8971dde9f8810b677765aca0d70490d9f8fa" translate="yes" xml:space="preserve">
          <source>This document will serve as the master list for extensions. Any implementation wishing to define a new extension should make a note of it here, in order to claim the name.</source>
          <target state="translated">Этот документ будет служить основным списком расширений.Любая реализация,желающая определить новое расширение,должна сделать пометку об этом здесь,чтобы заявить о своем названии.</target>
        </trans-unit>
        <trans-unit id="d24a591988945bec7d040b25bd5a37c73014bcf3" translate="yes" xml:space="preserve">
          <source>This does not affect &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; or the &lt;code&gt;git-diff-*&lt;/code&gt; plumbing commands. Can be overridden on the command line with the &lt;code&gt;--color[=&amp;lt;when&amp;gt;]&lt;/code&gt; option.</source>
          <target state="translated">Это не влияет на &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; или команды &lt;code&gt;git-diff-*&lt;/code&gt; plumbing. Можно переопределить в командной строке с помощью параметра &lt;code&gt;--color[=&amp;lt;when&amp;gt;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99af460532d2c9f72e65ed17f7464c8aa563e1f4" translate="yes" xml:space="preserve">
          <source>This does not force normalization of text files, but does ensure that text files that you introduce to the repository have their line endings normalized to LF when they are added, and that files that are already normalized in the repository stay normalized.</source>
          <target state="translated">Это не приводит к нормализации текстовых файлов,но гарантирует,что текстовые файлы,которые вы вводите в репозиторий,имеют нормализованные окончания строк,нормализованные к LF,когда они добавляются,и что файлы,которые уже нормализованы в репозитории,остаются нормализованными.</target>
        </trans-unit>
        <trans-unit id="257328db317fb853114a41f8430f87cd826d08a0" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t interfere with interoperating with the Subversion repository you cloned from, but if you wish for your local Git repository to be able to interoperate with someone else&amp;rsquo;s local Git repository, either don&amp;rsquo;t use this option or you should both use it in the same local time zone.</source>
          <target state="translated">Это не мешает взаимодействию с репозиторием Subversion, из которого вы клонировали, но если вы хотите, чтобы ваш локальный репозиторий Git мог взаимодействовать с чьим-либо локальным репозиторием Git, либо не используйте эту опцию, либо вы оба должны использовать ее в тот же местный часовой пояс.</target>
        </trans-unit>
        <trans-unit id="45497ef8f3614492732f059c04bc30af3c6593e9" translate="yes" xml:space="preserve">
          <source>This effectively runs &lt;code&gt;add --interactive&lt;/code&gt;, but bypasses the initial command menu and directly jumps to the &lt;code&gt;patch&lt;/code&gt; subcommand. See &amp;ldquo;Interactive mode&amp;rdquo; for details.</source>
          <target state="translated">Это эффективно запускает &lt;code&gt;add --interactive&lt;/code&gt; , но обходит начальное меню команд и напрямую переходит к подкоманде &lt;code&gt;patch&lt;/code&gt; . Подробнее см. &amp;laquo;Интерактивный режим&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="53c54ba0465bbf9916ac436659dbf61aedb86156" translate="yes" xml:space="preserve">
          <source>This enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">Это позволяет выполнять родительскую перезапись, см. &lt;code&gt;History Simplification&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="ccdf590466d01d04dcf6da8ad6a6bec9f02c4d8e" translate="yes" xml:space="preserve">
          <source>This environment allows the specification of an alternate index file. If not specified, the default of &lt;code&gt;$GIT_DIR/index&lt;/code&gt; is used.</source>
          <target state="translated">Эта среда позволяет специфицировать альтернативный индексный файл. Если не указано, используется значение по умолчанию &lt;code&gt;$GIT_DIR/index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2abd55a6650395bf249165e2f6568e98ab14958c" translate="yes" xml:space="preserve">
          <source>This environment variable allows the specification of an index version for new repositories. It won&amp;rsquo;t affect existing index files. By default index file version 2 or 3 is used. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Эта переменная среды позволяет указать версию индекса для новых репозиториев. Это не повлияет на существующие индексные файлы. По умолчанию используется индексный файл версии 2 или 3. См. &lt;a href=&quot;git-update-index&quot;&gt;Git-update-index [1]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="2763e4fc7ba1973ac90184c067d20f9d0fda70a8" translate="yes" xml:space="preserve">
          <source>This environment variable overrides &lt;code&gt;$EDITOR&lt;/code&gt; and &lt;code&gt;$VISUAL&lt;/code&gt;. It is used by several Git commands when, on interactive mode, an editor is to be launched. See also &lt;a href=&quot;git-var&quot;&gt;git-var[1]&lt;/a&gt; and the &lt;code&gt;core.editor&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Эта переменная среды отменяет &lt;code&gt;$EDITOR&lt;/code&gt; и &lt;code&gt;$VISUAL&lt;/code&gt; . Он используется несколькими командами Git, когда в интерактивном режиме должен быть запущен редактор. См. Также &lt;a href=&quot;git-var&quot;&gt;git-var [1]&lt;/a&gt; и параметр &lt;code&gt;core.editor&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddbc158f0dcc3c8ea52494b42fbb66d15e06e460" translate="yes" xml:space="preserve">
          <source>This environment variable overrides &lt;code&gt;$PAGER&lt;/code&gt;. If it is set to an empty string or to the value &quot;cat&quot;, Git will not launch a pager. See also the &lt;code&gt;core.pager&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Эта переменная среды переопределяет &lt;code&gt;$PAGER&lt;/code&gt; . Если для него задана пустая строка или значение &amp;laquo;cat&amp;raquo;, Git не запустит пейджер. См. Также параметр &lt;code&gt;core.pager&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25ea93764f52eb3dcc477c86398962bd9bbded98" translate="yes" xml:space="preserve">
          <source>This event contains the command name for this git process and the hierarchy of commands from parent git processes.</source>
          <target state="translated">Это событие содержит имя команды для данного git-процесса и иерархию команд от родительских git-процессов.</target>
        </trans-unit>
        <trans-unit id="f5d9f72db5c7ffa9776d5c71964338d54a2515a4" translate="yes" xml:space="preserve">
          <source>This event contains the complete argv received by main().</source>
          <target state="translated">Это событие содержит полный аргумент,полученный функцией main().</target>
        </trans-unit>
        <trans-unit id="2a4c1f111536d47e2687ea692bfe5bd399b4307d" translate="yes" xml:space="preserve">
          <source>This event contains the discovered full path of the git executable (on platforms that are configured to resolve it).</source>
          <target state="translated">Это событие содержит обнаруженный полный путь исполняемого git-файла (на платформах,настроенных на его разрешение).</target>
        </trans-unit>
        <trans-unit id="c8af8dbf59abf700f44d6449c7c951b54692bd2e" translate="yes" xml:space="preserve">
          <source>This event defines a repo-id and associates it with the root of the worktree.</source>
          <target state="translated">Это событие определяет репоид и связывает его с корнем рабочего дерева.</target>
        </trans-unit>
        <trans-unit id="efbcacd1a490c688869fdd46397140e75919d7ab" translate="yes" xml:space="preserve">
          <source>This event describes a child process that is about to be spawned.</source>
          <target state="translated">Это событие описывает детский процесс,который вот-вот родится.</target>
        </trans-unit>
        <trans-unit id="8c8f935852467fd7c3b46787d77518dc3611a986" translate="yes" xml:space="preserve">
          <source>This event gives the version of the executable and the EVENT format. It should always be the first event in a trace session. The EVENT format version will be incremented if new event types are added, if existing fields are removed, or if there are significant changes in interpretation of existing events or fields. Smaller changes, such as adding a new field to an existing event, will not require an increment to the EVENT format version.</source>
          <target state="translated">Это событие дает версию исполняемого файла и формат EVENT.Это всегда должно быть первым событием в сеансе трассировки.Версия формата EVENT будет увеличиваться при добавлении новых типов событий,удалении существующих полей или значительных изменениях в интерпретации существующих событий или полей.Более мелкие изменения,такие как добавление нового поля к существующему событию,не потребуют приращения к версии формата EVENT.</target>
        </trans-unit>
        <trans-unit id="7ea085d0e611d87af89c62af2b70656c0016dc7e" translate="yes" xml:space="preserve">
          <source>This event is emitted by the Trace2 &lt;code&gt;atexit&lt;/code&gt; routine during final shutdown. It should be the last event emitted by the process.</source>
          <target state="translated">Это событие генерируется подпрограммой Trace2 &lt;code&gt;atexit&lt;/code&gt; во время окончательного выключения. Это должно быть последнее событие, выпущенное процессом.</target>
        </trans-unit>
        <trans-unit id="0b20979b7d0436896a9e4dd619b31c2f047cbd64" translate="yes" xml:space="preserve">
          <source>This event is emitted when git calls &lt;code&gt;exit()&lt;/code&gt;.</source>
          <target state="translated">Это событие генерируется, когда git вызывает &lt;code&gt;exit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c63cb7135e802e553dc499a675da732d4f96c3a" translate="yes" xml:space="preserve">
          <source>This event is emitted when one of the &lt;code&gt;error()&lt;/code&gt;, &lt;code&gt;die()&lt;/code&gt;, or &lt;code&gt;usage()&lt;/code&gt; functions are called.</source>
          <target state="translated">Это событие генерируется при вызове одной из функций &lt;code&gt;error()&lt;/code&gt; , &lt;code&gt;die()&lt;/code&gt; или &lt;code&gt;usage()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebb8b872e605289564f67171a3133d84781ab210" translate="yes" xml:space="preserve">
          <source>This event is emitted when the program is terminated by a user signal. Depending on the platform, the signal event may prevent the &quot;atexit&quot; event from being generated.</source>
          <target state="translated">Это событие выдается при завершении программы по пользовательскому сигналу.В зависимости от платформы событие сигнала может препятствовать генерации события &quot;atexit&quot;.</target>
        </trans-unit>
        <trans-unit id="2ca8802f12c75856c4e7ea399ac7a1939e2a37eb" translate="yes" xml:space="preserve">
          <source>This event is generated after the current process has returned from the waitpid() and collected the exit information from the child.</source>
          <target state="translated">Это событие генерируется после того,как текущий процесс возвращается из функции waitpid()и собирает информацию о выходе из дочернего процесса.</target>
        </trans-unit>
        <trans-unit id="9fe6d803410a7d3a5cd4bc2114534352d230200b" translate="yes" xml:space="preserve">
          <source>This event is generated before git attempts to &lt;code&gt;exec()&lt;/code&gt; another command rather than starting a child process.</source>
          <target state="translated">Это событие генерируется до того, как git попытается выполнить &lt;code&gt;exec()&lt;/code&gt; другую команду вместо запуска дочернего процесса.</target>
        </trans-unit>
        <trans-unit id="93caa8939f471f1240286ec30c6905ef3996f20e" translate="yes" xml:space="preserve">
          <source>This event is generated if the &lt;code&gt;exec()&lt;/code&gt; fails and control returns to the current git command.</source>
          <target state="translated">Это событие генерируется, если &lt;code&gt;exec()&lt;/code&gt; терпит неудачу и управление возвращается текущей команде git.</target>
        </trans-unit>
        <trans-unit id="814427d239ec02f31ac7bf0fb913766e18bfb53e" translate="yes" xml:space="preserve">
          <source>This event is generated to log a global parameter.</source>
          <target state="translated">Это событие генерируется для регистрации глобального параметра.</target>
        </trans-unit>
        <trans-unit id="54b6cc61590e1e0eba249cc8ddd71ddff154355b" translate="yes" xml:space="preserve">
          <source>This event is generated to log a pre-formatted JSON string containing structured data.</source>
          <target state="translated">Это событие генерируется для записи в журнал предварительно отформатированной JSON-строки,содержащей структурированные данные.</target>
        </trans-unit>
        <trans-unit id="0ee97bbcf1fde0cf306363257efe6b7de578045e" translate="yes" xml:space="preserve">
          <source>This event is generated to log a thread- and region-local key/value pair.</source>
          <target state="translated">Это событие генерируется для протоколирования пары нитевых и регионолокальных ключей/значений.</target>
        </trans-unit>
        <trans-unit id="4caa8d05330c9e1126d8391705e312b0d8975d63" translate="yes" xml:space="preserve">
          <source>This event is generated when a thread exits. It is generated from &lt;strong&gt;within&lt;/strong&gt; the thread&amp;rsquo;s thread-proc (for TLS reasons).</source>
          <target state="translated">Это событие генерируется при выходе из потока. Оно генерируется из &lt;strong&gt;внутри&lt;/strong&gt; нити-ргос в нити (по причинам TLS).</target>
        </trans-unit>
        <trans-unit id="eba565beaf1b2269c764c147f5196869afe38bce" translate="yes" xml:space="preserve">
          <source>This event is generated when a thread is started. It is generated from &lt;strong&gt;within&lt;/strong&gt; the new thread&amp;rsquo;s thread-proc (for TLS reasons).</source>
          <target state="translated">Это событие генерируется при запуске потока. Он генерируется &lt;strong&gt;изнутри&lt;/strong&gt; нового потока thread-proc (по причинам TLS).</target>
        </trans-unit>
        <trans-unit id="1684fe3e3862662b36c1dfb0c9bb20558e1f338a" translate="yes" xml:space="preserve">
          <source>This event is generated when entering a region.</source>
          <target state="translated">Это событие генерируется при входе в регион.</target>
        </trans-unit>
        <trans-unit id="809d72e4f54bac6c7054af4e990fa8c97e8c764d" translate="yes" xml:space="preserve">
          <source>This event is generated when leaving a region.</source>
          <target state="translated">Это событие генерируется при выезде из региона.</target>
        </trans-unit>
        <trans-unit id="1e6a7368deeb7ec580313fc82400f1c12d17672a" translate="yes" xml:space="preserve">
          <source>This event is present when an alias is expanded.</source>
          <target state="translated">Это событие происходит при расширении псевдонима.</target>
        </trans-unit>
        <trans-unit id="bca802363ffa9599d9e13df71e2f62ec1454e32f" translate="yes" xml:space="preserve">
          <source>This event is written to the git-trace2-discard sentinel file if there are too many files in the target trace directory (see the trace2.maxFiles config option).</source>
          <target state="translated">Это событие записывается в git-trace2-дисковый sendinel-файл,если в каталоге целевой трассы слишком много файлов (смотри опцию настройки trace2.maxFiles).</target>
        </trans-unit>
        <trans-unit id="8c2ad60a0d9356a6e908b18056fbac1c2b1d4129" translate="yes" xml:space="preserve">
          <source>This event, when present, describes the command variant This event may be emitted more than once.</source>
          <target state="translated">Данное событие,если оно присутствует,описывает вариант команды Данное событие может быть выдано несколько раз.</target>
        </trans-unit>
        <trans-unit id="3e7d09cee878b03064fb9d9484c73f3f00225826" translate="yes" xml:space="preserve">
          <source>This example also shows that thread names are assigned in a racy manner as each thread starts and allocates TLS storage.</source>
          <target state="translated">В данном примере также показано,что имена потоков назначаются в кратчайшие сроки по мере того,как каждый поток начинает и выделяет хранилище TLS.</target>
        </trans-unit>
        <trans-unit id="e296b28f1fcad64b66f85f9abe931f54fc5fbde0" translate="yes" xml:space="preserve">
          <source>This example imports a new remote &quot;p4/proj2&quot; into an existing Git repository:</source>
          <target state="translated">Этот пример импортирует новый удалённый &quot;p4/proj2&quot; в существующий Git-репозиторий:</target>
        </trans-unit>
        <trans-unit id="7cbbc9fac80d3f9e05217d26ad6f34ea5097abe6" translate="yes" xml:space="preserve">
          <source>This example shows that the index contained 3552 entries.</source>
          <target state="translated">Этот пример показывает,что индекс содержал 3552 записи.</target>
        </trans-unit>
        <trans-unit id="af5672891a1be21669d22b688901415e2cf060c3" translate="yes" xml:space="preserve">
          <source>This expands to the object name of the delta base for the given object, if it is stored as a delta. Otherwise it expands to the null object name (all zeroes).</source>
          <target state="translated">Это расширяется до имени объекта базы дельты для данного объекта,если он хранится как дельта.В противном случае оно расширяется до нулевого имени объекта (все нули).</target>
        </trans-unit>
        <trans-unit id="1a642986ccbacca12888668bff4ca6d3b1007b62" translate="yes" xml:space="preserve">
          <source>This explanation comes for &quot;free&quot; because there was no change. Similarly &lt;code&gt;C&lt;/code&gt; could be explained using &lt;code&gt;1&lt;/code&gt;, but that comes at some cost c&amp;gt;0 because of the modification:</source>
          <target state="translated">Это объяснение дано &amp;laquo;бесплатно&amp;raquo;, потому что не было изменений. Точно так же &lt;code&gt;C&lt;/code&gt; можно объяснить с помощью &lt;code&gt;1&lt;/code&gt; , но это требует некоторой стоимости c&amp;gt; 0 из-за модификации:</target>
        </trans-unit>
        <trans-unit id="86a0b58a904e042293eb0ea80455653f123e7d4e" translate="yes" xml:space="preserve">
          <source>This extended format can be useful if rename or copy detection is active, to allow you to see the original name of the file in different parents.</source>
          <target state="translated">Этот расширенный формат может быть полезен при активном переименовании или обнаружении копирования,чтобы вы могли видеть оригинальное имя файла у разных родителей.</target>
        </trans-unit>
        <trans-unit id="fc95481325c82bdecdaa23291b735168b05af418" translate="yes" xml:space="preserve">
          <source>This extension does not change git&amp;rsquo;s behavior at all. It is useful only for testing format-1 compatibility.</source>
          <target state="translated">Это расширение вообще не меняет поведения git. Это полезно только для тестирования совместимости с форматом 1.</target>
        </trans-unit>
        <trans-unit id="24a20ccff9f7f9f91cdf61fb876086b44fc5be61" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis by setting repository&amp;rsquo;s &lt;code&gt;gitweb.pickaxe&lt;/code&gt; configuration variable (boolean).</source>
          <target state="translated">Эту функцию можно настроить для каждого репозитория, установив переменную конфигурации репозитория &lt;code&gt;gitweb.pickaxe&lt;/code&gt; (логическое значение).</target>
        </trans-unit>
        <trans-unit id="3fcd9d965aa29d51e3ab01e56c522e086b7f545b" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.avatar&lt;/code&gt; configuration variable.</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.avatar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da6908103a49ae5e820a33c13aadd5dfdd3e67a7" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.blame&lt;/code&gt; configuration variable (boolean).</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.blame&lt;/code&gt; (логическая).</target>
        </trans-unit>
        <trans-unit id="1d6d167abae14ab18966eab440f954ed6085f29c" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.grep&lt;/code&gt; configuration variable (boolean).</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.grep&lt;/code&gt; (логическое значение).</target>
        </trans-unit>
        <trans-unit id="dd4f802848cf6cbdc7682aeefb00472f2c444c9e" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.highlight&lt;/code&gt; configuration variable (boolean).</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.highlight&lt;/code&gt; (логическая).</target>
        </trans-unit>
        <trans-unit id="a8e82652b1c51e397e7f1e31621e9084d5611fda" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.patches&lt;/code&gt; configuration variable (integer).</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.patches&lt;/code&gt; (целое число).</target>
        </trans-unit>
        <trans-unit id="a0528d6fc23cb2716835712f44b5daf955251062" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.remote_heads&lt;/code&gt; configuration variable (boolean).</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.remote_heads&lt;/code&gt; (логическая).</target>
        </trans-unit>
        <trans-unit id="58b983175f59d7aad97dac71b32251a2f4a8c4a0" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.showSizes&lt;/code&gt; configuration variable (boolean).</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.showSizes&lt;/code&gt; (логическая).</target>
        </trans-unit>
        <trans-unit id="ee33afe943a28f48529ed67cc410ad185ea09f23" translate="yes" xml:space="preserve">
          <source>This feature can be configured on a per-repository basis via repository&amp;rsquo;s &lt;code&gt;gitweb.snapshot&lt;/code&gt; configuration variable, which contains a comma separated list of formats or &quot;none&quot; to disable snapshots. Unknown values are ignored.</source>
          <target state="translated">Эта функция может быть настроена для каждого репозитория с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.snapshot&lt;/code&gt; , которая содержит список форматов, разделенных запятыми, или &amp;laquo;none&amp;raquo; для отключения моментальных снимков. Неизвестные значения игнорируются.</target>
        </trans-unit>
        <trans-unit id="c2467a6f49bad0810d0f5e1c4a51888ceb4f5b0f" translate="yes" xml:space="preserve">
          <source>This feature can be configured on per-repository basis after setting $feature{&lt;code&gt;extra-branch-refs&lt;/code&gt;}{&lt;code&gt;override&lt;/code&gt;} to true, via repository&amp;rsquo;s &lt;code&gt;gitweb.extraBranchRefs&lt;/code&gt; configuration variable, which contains a space separated list of refs. An example:</source>
          <target state="translated">Эту функцию можно настроить для каждого репозитория после установки для $ feature { &lt;code&gt;extra-branch-refs&lt;/code&gt; } { &lt;code&gt;override&lt;/code&gt; } значения true с помощью переменной конфигурации репозитория &lt;code&gt;gitweb.extraBranchRefs&lt;/code&gt; , которая содержит список ссылок , разделенных пробелами. Пример:</target>
        </trans-unit>
        <trans-unit id="83b4612ad81d70c9ed8920a4b451b69b8c3ee080" translate="yes" xml:space="preserve">
          <source>This feature is intended to speed up git operations for repos that have large working directories.</source>
          <target state="translated">Данная функция предназначена для ускорения git-операций для репозиториев с большими рабочими директориями.</target>
        </trans-unit>
        <trans-unit id="6b24b487d6d9654020073f6754733ecc051175ad" translate="yes" xml:space="preserve">
          <source>This feature is semi-deprecated. For scripting purpose, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;&lt;code&gt;--porcelain&lt;/code&gt; and &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt;&lt;code&gt;--name-status&lt;/code&gt; are almost always superior alternatives, and users should look at &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;&lt;code&gt;--short&lt;/code&gt; or &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--name-status&lt;/code&gt; for more user-friendly alternatives.</source>
          <target state="translated">Эта функция частично устарела. Для сценариев &lt;a href=&quot;git-status&quot;&gt;git-status [1] &lt;/a&gt; &lt;code&gt;--porcelain&lt;/code&gt; и &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files [1] &lt;/a&gt; &lt;code&gt;--name-status&lt;/code&gt; почти всегда являются &lt;code&gt;--short&lt;/code&gt; альтернативами, и пользователям следует смотреть на &lt;a href=&quot;git-status&quot;&gt;git-status [1] &lt;/a&gt;--short или &lt;a href=&quot;git-diff&quot;&gt;git- diff [1] &lt;/a&gt; &lt;code&gt;--name-status&lt;/code&gt; для более удобных альтернатив.</target>
        </trans-unit>
        <trans-unit id="0861edc399d3214fad2ecef2c8c7d8f9e28b4564" translate="yes" xml:space="preserve">
          <source>This feature is useful when an established project should be accepted despite early commits containing errors that can be safely ignored such as invalid committer email addresses. Note: corrupt objects cannot be skipped with this setting.</source>
          <target state="translated">Эта возможность полезна,когда созданный проект должен быть принят,несмотря на ранние коммиты,содержащие ошибки,которые можно безопасно проигнорировать,такие как недействительные адреса электронной почты коммиттера.Замечание:повреждённые объекты нельзя пропустить с помощью этой настройки.</target>
        </trans-unit>
        <trans-unit id="5474f37d061902594342fbe38be401770ea2769f" translate="yes" xml:space="preserve">
          <source>This feature works by recording the mtime of the working tree directories and then omitting reading directories and stat calls against files in those directories whose mtime hasn&amp;rsquo;t changed. For this to work the underlying operating system and file system must change the &lt;code&gt;st_mtime&lt;/code&gt; field of directories if files in the directory are added, modified or deleted.</source>
          <target state="translated">Эта функция работает, записывая mtime каталогов рабочего дерева и затем пропуская чтение каталогов и вызовы stat для файлов в тех каталогах, mtime которых не изменилось. Чтобы это работало, базовая операционная система и файловая система должны изменить поле &lt;code&gt;st_mtime&lt;/code&gt; каталогов, если файлы в каталоге добавляются, изменяются или удаляются.</target>
        </trans-unit>
        <trans-unit id="ef2541ade640bd800921de0e87cda6dd56d4d5f6" translate="yes" xml:space="preserve">
          <source>This fetches revisions from the SVN parent of the current HEAD and rebases the current (uncommitted to SVN) work against it.</source>
          <target state="translated">Это извлекает ревизии из родителя SVN текущего HEAD и перезапускает текущую (не привязанную к SVN)работу против нее.</target>
        </trans-unit>
        <trans-unit id="e6f84c5c8c6a08793025b9538660cbd1c1faa637" translate="yes" xml:space="preserve">
          <source>This file contains the commit message of a commit in progress. If &lt;code&gt;git commit&lt;/code&gt; exits due to an error before creating a commit, any commit message that has been provided by the user (e.g., in an editor session) will be available in this file, but will be overwritten by the next invocation of &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">Этот файл содержит сообщение о выполнении фиксации. Если &lt;code&gt;git commit&lt;/code&gt; завершается из-за ошибки перед созданием фиксации, любое сообщение о фиксации, предоставленное пользователем (например, в сеансе редактора), будет доступно в этом файле, но будет перезаписано при следующем вызове &lt;code&gt;git commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2063696fd909d95d720efff6859f2846f7a33789" translate="yes" xml:space="preserve">
          <source>This file helps dumb transports discover what refs are available in this repository. If the repository is published for dumb transports, this file should be regenerated by &lt;code&gt;git update-server-info&lt;/code&gt; every time a tag or branch is created or modified. This is normally done from the &lt;code&gt;hooks/update&lt;/code&gt; hook, which is run by the &lt;code&gt;git-receive-pack&lt;/code&gt; command when you &lt;code&gt;git push&lt;/code&gt; into the repository.</source>
          <target state="translated">Этот файл помогает немым транспортам обнаружить, какие ссылки доступны в этом репозитории. Если репозиторий публикуется для немого транспорта, этот файл следует повторно создавать с помощью &lt;code&gt;git update-server-info&lt;/code&gt; каждый раз, когда создается или изменяется тег или ветка. Обычно это делается с помощью &lt;code&gt;hooks/update&lt;/code&gt; , которые запускаются командой &lt;code&gt;git-receive-pack&lt;/code&gt; , когда вы &lt;code&gt;git push&lt;/code&gt; в репозиторий.</target>
        </trans-unit>
        <trans-unit id="3487083c7b98c66e39acc8f940f40c0e9ceac88f" translate="yes" xml:space="preserve">
          <source>This file is to help dumb transports discover what packs are available in this object store. Whenever a pack is added or removed, &lt;code&gt;git update-server-info&lt;/code&gt; should be run to keep this file up to date if the repository is published for dumb transports. &lt;code&gt;git repack&lt;/code&gt; does this by default.</source>
          <target state="translated">Этот файл помогает немым транспортным средствам обнаружить, какие пакеты доступны в этом хранилище объектов. Каждый раз, когда пакет добавляется или удаляется, следует запускать &lt;code&gt;git update-server-info&lt;/code&gt; , чтобы поддерживать этот файл в актуальном состоянии, если репозиторий публикуется для немых транспортов. &lt;code&gt;git repack&lt;/code&gt; делает это по умолчанию.</target>
        </trans-unit>
        <trans-unit id="cbe65e34529f44f10bf3c4bc531b3ef1a1689dfb" translate="yes" xml:space="preserve">
          <source>This file mainly serves as the mapping between the name and path of submodules in the superproject, such that the submodule&amp;rsquo;s Git directory can be located.</source>
          <target state="translated">Этот файл в основном служит отображением между именем и путем к подмодулям в суперпроекте, так что можно найти каталог Git подмодуля.</target>
        </trans-unit>
        <trans-unit id="071050e2544b6fc3703fb63508bbfdc9243b46ab" translate="yes" xml:space="preserve">
          <source>This file records URLs to alternate object stores that this object store borrows objects from, to be used when the repository is fetched over HTTP.</source>
          <target state="translated">Этот файл записывает URL-адреса для альтернативных хранилищ объектов,из которых этот объект хранит заимствованные объекты,для использования,когда репозиторий получается по HTTP.</target>
        </trans-unit>
        <trans-unit id="cc3397ff622f0d4d27f532099612807583041388" translate="yes" xml:space="preserve">
          <source>This file records fake commit ancestry information, to pretend the set of parents a commit has is different from how the commit was actually created. One record per line describes a commit and its fake parents by listing their 40-byte hexadecimal object names separated by a space and terminated by a newline.</source>
          <target state="translated">Этот файл записывает фальшивую информацию о предках коммита,чтобы сделать вид,что набор родителей у коммита отличается от того,как коммит был на самом деле создан.Одна запись в строке описывает коммит и его фальшивых родителей,перечисляя их 40-байтные шестнадцатеричные имена объектов,разделенные пробелом и завершенные новой строкой.</target>
        </trans-unit>
        <trans-unit id="1873ba1c652fc3e8dae8a41ecd45dff2c995baaf" translate="yes" xml:space="preserve">
          <source>This file records paths to alternate object stores that this object store borrows objects from, one pathname per line. Note that not only native Git tools use it locally, but the HTTP fetcher also tries to use it remotely; this will usually work if you have relative paths (relative to the object database, not to the repository!) in your alternates file, but it will not work if you use absolute paths unless the absolute path in filesystem and web URL is the same. See also &lt;code&gt;objects/info/http-alternates&lt;/code&gt;.</source>
          <target state="translated">В этом файле записываются пути к альтернативным хранилищам объектов, из которых это хранилище объектов заимствует объекты, по одному пути на строку. Обратите внимание, что не только собственные инструменты Git используют его локально, но и сборщик HTTP также пытается использовать его удаленно; это обычно работает, если у вас есть относительные пути (относительно базы данных объектов, а не к репозиторию!) в вашем альтернативном файле, но это не будет работать, если вы используете абсолютные пути, если абсолютный путь в файловой системе и веб-URL не совпадает. См. Также &lt;code&gt;objects/info/http-alternates&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="517ab2689bb34239adf0b92ebb2a70e736956866" translate="yes" xml:space="preserve">
          <source>This file stores sparse checkout patterns. See also: &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree[1]&lt;/a&gt;.</source>
          <target state="translated">В этом файле хранятся разреженные шаблоны оформления заказа. См. Также: &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39e8ca5394d81b30bccd145a749de9346fba2480" translate="yes" xml:space="preserve">
          <source>This file uses the following format:</source>
          <target state="translated">Этот файл использует следующий формат:</target>
        </trans-unit>
        <trans-unit id="53c1d1d0fe83b95fe57b9ac9f6f59413589df721" translate="yes" xml:space="preserve">
          <source>This file, by convention among Porcelains, stores the exclude pattern list. &lt;code&gt;.gitignore&lt;/code&gt; is the per-directory ignore file. &lt;code&gt;git status&lt;/code&gt;, &lt;code&gt;git add&lt;/code&gt;, &lt;code&gt;git rm&lt;/code&gt; and &lt;code&gt;git clean&lt;/code&gt; look at it but the core Git commands do not look at it. See also: &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;.</source>
          <target state="translated">Этот файл, по соглашению среди Porcelains, хранит список исключаемых шаблонов. &lt;code&gt;.gitignore&lt;/code&gt; - это файл игнорирования для каждого каталога. &lt;code&gt;git status&lt;/code&gt; , &lt;code&gt;git add&lt;/code&gt; , &lt;code&gt;git rm&lt;/code&gt; и &lt;code&gt;git clean&lt;/code&gt; смотрят на него, но основные команды Git на него не смотрят. См. Также: &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8956b9fdca3244ff8cd9467aefdc82ab275d878" translate="yes" xml:space="preserve">
          <source>This filter may be used if you only need to modify the environment in which the commit will be performed. Specifically, you might want to rewrite the author/committer name/email/time environment variables (see &lt;a href=&quot;git-commit-tree&quot;&gt;git-commit-tree[1]&lt;/a&gt; for details).</source>
          <target state="translated">Этот фильтр можно использовать, если вам нужно только изменить среду, в которой будет выполняться фиксация. В частности, вы можете захотеть переписать переменные среды имени автора / коммиттера / адреса электронной почты / времени (подробности см. В &lt;a href=&quot;git-commit-tree&quot;&gt;git-commit-tree [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1f7d9b6979d573a6d61c7fc37aef6ce7f09ba079" translate="yes" xml:space="preserve">
          <source>This flag causes &lt;code&gt;git diff-tree --stdin&lt;/code&gt; to also show the commit message before the differences.</source>
          <target state="translated">Этот флаг заставляет &lt;code&gt;git diff-tree --stdin&lt;/code&gt; также показывать сообщение о фиксации перед различиями.</target>
        </trans-unit>
        <trans-unit id="f18c1480999d4a64a19b051751a1dfdb3d01c394" translate="yes" xml:space="preserve">
          <source>This flag causes an object already in a local pack that has a .keep file to be ignored, even if it would have otherwise been packed.</source>
          <target state="translated">Этот флаг приводит к тому,что объект,уже находящийся в локальном пакете,который имеет файл .keep,будет проигнорирован,даже если он был бы упакован в противном случае.</target>
        </trans-unit>
        <trans-unit id="3b2c5aa43d85ae95c70f7126e1a8d471a0247285" translate="yes" xml:space="preserve">
          <source>This flag causes an object already in a pack to be ignored even if it would have otherwise been packed.</source>
          <target state="translated">Этот флаг приводит к тому,что объект,уже находящийся в пакете,игнорируется,даже если в противном случае он был бы упакован.</target>
        </trans-unit>
        <trans-unit id="936ccdd465b71c76f59e3d7929f0e31e3a24c431" translate="yes" xml:space="preserve">
          <source>This flag causes an object already in the given pack to be ignored, even if it would have otherwise been packed. &lt;code&gt;&amp;lt;pack-name&amp;gt;&lt;/code&gt; is the pack file name without leading directory (e.g. &lt;code&gt;pack-123.pack&lt;/code&gt;). The option could be specified multiple times to keep multiple packs.</source>
          <target state="translated">Этот флаг заставляет игнорировать объект, уже находящийся в данном пакете, даже если в противном случае он был бы упакован. &lt;code&gt;&amp;lt;pack-name&amp;gt;&lt;/code&gt; - это имя файла пакета без ведущего каталога (например, &lt;code&gt;pack-123.pack&lt;/code&gt; ). Опция может быть указана несколько раз, чтобы хранить несколько пакетов.</target>
        </trans-unit>
        <trans-unit id="9fad47cb9db9729fbeb177e82626a6322dbefd6c" translate="yes" xml:space="preserve">
          <source>This flag causes an object that is borrowed from an alternate object store to be ignored even if it would have otherwise been packed.</source>
          <target state="translated">Этот флаг приводит к тому,что объект,заимствованный из альтернативного хранилища объектов,игнорируется,даже если в противном случае он был бы упакован.</target>
        </trans-unit>
        <trans-unit id="97fddffea713eaa9774ecf695b0619f959916c25" translate="yes" xml:space="preserve">
          <source>This flag causes combined diffs (used for merge commits) to list the name of the file from all parents. It thus only has effect when -c or --cc are specified, and is likely only useful if filename changes are detected (i.e. when either rename or copy detection have been requested).</source>
          <target state="translated">Этот флаг вызывает комбинированные различия (используемые для фиксации слияния),чтобы перечислить имя файла от всех родителей.Таким образом,он действует только при указании -c или --cc,и,вероятно,полезен только в случае обнаружения изменения имени файла (т.е.при запросе переименования или обнаружения копирования).</target>
        </trans-unit>
        <trans-unit id="7d04699c745135d6f14712a3d65005478838c3a7" translate="yes" xml:space="preserve">
          <source>This flag changes the way a merge commit is displayed (which means it is useful only when the command is given one &amp;lt;tree-ish&amp;gt;, or &lt;code&gt;--stdin&lt;/code&gt;). It shows the differences from each of the parents to the merge result simultaneously instead of showing pairwise diff between a parent and the result one at a time (which is what the &lt;code&gt;-m&lt;/code&gt; option does). Furthermore, it lists only files which were modified from all parents.</source>
          <target state="translated">Этот флаг изменяет способ отображения фиксации слияния (что означает, что он полезен только тогда, когда команде задано одно &amp;lt;tree-ish&amp;gt; или &lt;code&gt;--stdin&lt;/code&gt; ). Он показывает различия для каждого из родителей в результате слияния одновременно, вместо того, чтобы показывать попарные различия между родительским элементом и результатом по одному (что и делает параметр &lt;code&gt;-m&lt;/code&gt; ). Кроме того, в нем перечислены только файлы, которые были изменены всеми родителями.</target>
        </trans-unit>
        <trans-unit id="0d503f20848f4e1ff6c5e78038f4bce28f3422a3" translate="yes" xml:space="preserve">
          <source>This flag changes the way a merge commit patch is displayed, in a similar way to the &lt;code&gt;-c&lt;/code&gt; option. It implies the &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt; options and further compresses the patch output by omitting uninteresting hunks whose the contents in the parents have only two variants and the merge result picks one of them without modification. When all hunks are uninteresting, the commit itself and the commit log message is not shown, just like in any other &quot;empty diff&quot; case.</source>
          <target state="translated">Этот флаг изменяет способ отображения патча фиксации слияния аналогично параметру &lt;code&gt;-c&lt;/code&gt; . Он подразумевает параметры &lt;code&gt;-c&lt;/code&gt; и &lt;code&gt;-p&lt;/code&gt; и дополнительно сжимает вывод патча, опуская неинтересные блоки, содержимое которых в родительских файлах имеет только два варианта, а результат слияния выбирает один из них без изменений. Когда все блоки неинтересны, сама фиксация и сообщение журнала фиксации не отображаются, как и в любом другом случае &amp;laquo;пустого сравнения&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4835250d6cbee97633146544cd1896afcc631099" translate="yes" xml:space="preserve">
          <source>This flag disables these checks, and can cause the remote repository to lose commits; use it with care.</source>
          <target state="translated">Этот флаг отключает эти проверки и может привести к потере коммитов в удалённом репозитории;используйте его с осторожностью.</target>
        </trans-unit>
        <trans-unit id="cc5f19786a1b0eda7705eaaa80c372612ab5d782" translate="yes" xml:space="preserve">
          <source>This flag implies the &lt;code&gt;-c&lt;/code&gt; option and further compresses the patch output by omitting uninteresting hunks whose contents in the parents have only two variants and the merge result picks one of them without modification.</source>
          <target state="translated">Этот флаг подразумевает параметр &lt;code&gt;-c&lt;/code&gt; и дополнительно сжимает вывод патча, опуская неинтересные блоки, содержимое которых в родительских файлах имеет только два варианта, и результат слияния выбирает один из них без изменений.</target>
        </trans-unit>
        <trans-unit id="6c9f2e241df42ed566896490c4c1723461343597" translate="yes" xml:space="preserve">
          <source>This flag is passed to the &lt;code&gt;git log&lt;/code&gt; program (see &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;) that generates the patches.</source>
          <target state="translated">Этот флаг передается программе &lt;code&gt;git log&lt;/code&gt; (см. &lt;a href=&quot;git-log&quot;&gt;Git-log [1]&lt;/a&gt; ), которая генерирует исправления.</target>
        </trans-unit>
        <trans-unit id="7d74132f018d1e29c74648fc0cf6690a80cd700b" translate="yes" xml:space="preserve">
          <source>This flag makes the command not to report its progress on the standard error stream.</source>
          <target state="translated">Этот флаг заставляет команду не сообщать о своем прогрессе в стандартном потоке ошибок.</target>
        </trans-unit>
        <trans-unit id="c7300f914a6246e85c4558f9e03e3ac6bd2957c2" translate="yes" xml:space="preserve">
          <source>This flag makes the merge commits show the full diff like regular commits; for each merge parent, a separate log entry and diff is generated. An exception is that only diff against the first parent is shown when &lt;code&gt;--first-parent&lt;/code&gt; option is given; in that case, the output represents the changes the merge brought &lt;code&gt;into&lt;/code&gt; the then-current branch.</source>
          <target state="translated">Этот флаг заставляет коммиты слияния отображать полную разницу, как при обычных коммитах; для каждого родителя слияния создается отдельная запись журнала и разница. Исключением является то, что при &lt;code&gt;--first-parent&lt;/code&gt; опции --first-parent отображается только сравнение с первым родителем ; в этом случае вывод представляет изменения, внесенные слиянием &lt;code&gt;into&lt;/code&gt; текущую ветвь.</target>
        </trans-unit>
        <trans-unit id="824f1a5cbd322eac2edc9b61691e0afb5fb06c7c" translate="yes" xml:space="preserve">
          <source>This flag tells the command not to reuse existing object data at all, including non deltified object, forcing recompression of everything. This implies --no-reuse-delta. Useful only in the obscure case where wholesale enforcement of a different compression level on the packed data is desired.</source>
          <target state="translated">Этот флаг говорит команде не использовать данные существующего объекта повторно вообще,в том числе и неисключенные объекты,заставляя все перекомпрессировать.Это подразумевает --нет повторного использования-дельта.Полезен только в непонятном случае,когда требуется оптовое применение другого уровня компрессии на упакованных данных.</target>
        </trans-unit>
        <trans-unit id="e554d11fed47fbadc588fbbd426a692640350799" translate="yes" xml:space="preserve">
          <source>This form can only be used in the middle of a &lt;code&gt;commit&lt;/code&gt;. The path names a directory entry within fast-import&amp;rsquo;s active commit. The path must be quoted in this case.</source>
          <target state="translated">Эту форму можно использовать только в середине &lt;code&gt;commit&lt;/code&gt; . Путь обозначает запись каталога в активной фиксации быстрого импорта. В этом случае путь должен быть указан.</target>
        </trans-unit>
        <trans-unit id="55cd46dfe4dc47146eb359f16ba2ab6440f5d33b" translate="yes" xml:space="preserve">
          <source>This form is to compare the given two paths on the filesystem. You can omit the &lt;code&gt;--no-index&lt;/code&gt; option when running the command in a working tree controlled by Git and at least one of the paths points outside the working tree, or when running the command outside a working tree controlled by Git. This form implies &lt;code&gt;--exit-code&lt;/code&gt;.</source>
          <target state="translated">Эта форма предназначена для сравнения двух указанных путей в файловой системе. Вы можете опустить параметр &lt;code&gt;--no-index&lt;/code&gt; при запуске команды в рабочем дереве, управляемом Git, и хотя бы один из путей указывает за пределами рабочего дерева, или при запуске команды за пределами рабочего дерева, управляемого Git. Эта форма подразумевает &lt;code&gt;--exit-code&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a36c2e6e9bf305ffd5ef7a7e4c453ac93dfb865" translate="yes" xml:space="preserve">
          <source>This form is to view the changes on the branch containing and up to the second &amp;lt;commit&amp;gt;, starting at a common ancestor of both &amp;lt;commit&amp;gt;. &quot;git diff A...B&quot; is equivalent to &quot;git diff $(git merge-base A B) B&quot;. You can omit any one of &amp;lt;commit&amp;gt;, which has the same effect as using HEAD instead.</source>
          <target state="translated">Эта форма предназначена для просмотра изменений в ветви, содержащей и до второго &amp;lt;commit&amp;gt;, начиная с общего предка обоих &amp;lt;commit&amp;gt;. &amp;laquo;git diff A ... B&amp;raquo; эквивалентно &amp;laquo;git diff $ (git merge-base AB) B&amp;raquo;. Вы можете опустить любой из &amp;lt;commit&amp;gt;, что даст тот же эффект, что и использование HEAD.</target>
        </trans-unit>
        <trans-unit id="18011d68a19f669179582c8652eaff17f583329f" translate="yes" xml:space="preserve">
          <source>This form is to view the changes you have in your working tree relative to the named &amp;lt;commit&amp;gt;. You can use HEAD to compare it with the latest commit, or a branch name to compare with the tip of a different branch.</source>
          <target state="translated">Эта форма предназначена для просмотра изменений в вашем рабочем дереве относительно названного &amp;lt;commit&amp;gt;. Вы можете использовать HEAD, чтобы сравнить его с последней фиксацией, или имя ветки, чтобы сравнить с кончиком другой ветки.</target>
        </trans-unit>
        <trans-unit id="0c3233dc5774a7d1fc399a8b304cc732bba72d9f" translate="yes" xml:space="preserve">
          <source>This form is to view the changes you made relative to the index (staging area for the next commit). In other words, the differences are what you &lt;code&gt;could&lt;/code&gt; tell Git to further add to the index but you still haven&amp;rsquo;t. You can stage these changes by using &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">Эта форма предназначена для просмотра изменений, внесенных вами относительно индекса (промежуточная область для следующей фиксации). Другими словами, различия заключаются в том, что вы &lt;code&gt;could&lt;/code&gt; сказать Git, чтобы он добавлял их в индекс, но вы этого еще не сделали. Вы можете выполнить эти изменения с помощью &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee8e76f95895702db36db495b0e53027904973c9" translate="yes" xml:space="preserve">
          <source>This form is to view the changes you staged for the next commit relative to the named &amp;lt;commit&amp;gt;. Typically you would want comparison with the latest commit, so if you do not give &amp;lt;commit&amp;gt;, it defaults to HEAD. If HEAD does not exist (e.g. unborn branches) and &amp;lt;commit&amp;gt; is not given, it shows all staged changes. --staged is a synonym of --cached.</source>
          <target state="translated">Эта форма предназначена для просмотра изменений, которые вы подготовили для следующего коммита относительно названного &amp;lt;commit&amp;gt;. Обычно вам нужно сравнение с последней фиксацией, поэтому, если вы не укажете &amp;lt;commit&amp;gt;, по умолчанию будет использоваться HEAD. Если HEAD не существует (например, нерожденные ветки) и &amp;lt;commit&amp;gt; не задан, отображаются все поэтапные изменения. --staged является синонимом --cached.</target>
        </trans-unit>
        <trans-unit id="51dda6a69f38e64f972e32a62549822542d75887" translate="yes" xml:space="preserve">
          <source>This form is to view the differences between the raw contents of two blob objects.</source>
          <target state="translated">Эта форма предназначена для просмотра различий между необработанным содержимым двух блочных объектов.</target>
        </trans-unit>
        <trans-unit id="395d78419362cad7438eb6eae46785d35953f019" translate="yes" xml:space="preserve">
          <source>This form resets the current branch head to &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and possibly updates the index (resetting it to the tree of &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;) and the working tree depending on &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is omitted, defaults to &lt;code&gt;--mixed&lt;/code&gt;. The &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; must be one of the following:</source>
          <target state="translated">Эта форма сбрасывает заголовок текущей ветки на &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; и, возможно, обновляет индекс (сбрасывая его до дерева &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; ) и рабочее дерево в зависимости от &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; . Если &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; опущен, по умолчанию используется &lt;code&gt;--mixed&lt;/code&gt; . &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; должен быть один из следующих:</target>
        </trans-unit>
        <trans-unit id="90bcd35d4969f3a90ba2bd18f27a5c6eb93f333b" translate="yes" xml:space="preserve">
          <source>This form will use the first line matching the given POSIX regex. If &amp;lt;start&amp;gt; is a regex, it will search from the end of the previous &lt;code&gt;-L&lt;/code&gt; range, if any, otherwise from the start of file. If &amp;lt;start&amp;gt; is &amp;ldquo;^/regex/&amp;rdquo;, it will search from the start of file. If &amp;lt;end&amp;gt; is a regex, it will search starting at the line given by &amp;lt;start&amp;gt;.</source>
          <target state="translated">Эта форма будет использовать первую строку, соответствующую заданному регулярному выражению POSIX. Если &amp;lt;start&amp;gt; является регулярным выражением, поиск будет выполняться с конца предыдущего диапазона &lt;code&gt;-L&lt;/code&gt; , если таковой имеется, в противном случае - с начала файла. Если &amp;lt;start&amp;gt; - &amp;laquo;^ / regex /&amp;raquo;, поиск будет выполняться с начала файла. Если &amp;lt;end&amp;gt; является регулярным выражением, поиск будет выполняться, начиная со строки, заданной &amp;lt;start&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b42c261dd1828c15332725a480fa7095bcc76b2a" translate="yes" xml:space="preserve">
          <source>This format expects the first line of the file to contain the &quot;Cc:&quot; value and the &quot;Subject:&quot; of the message as the second line.</source>
          <target state="translated">Этот формат ожидает,что первая строка файла будет содержать значение &quot;Cc:&quot;,а &quot;Subject:&quot; сообщения-вторую строку.</target>
        </trans-unit>
        <trans-unit id="105520fc7842a24e43537a27759a074335828eb6" translate="yes" xml:space="preserve">
          <source>This format is identical to version &lt;code&gt;0&lt;/code&gt;, with the following exceptions:</source>
          <target state="translated">Этот формат идентичен версии &lt;code&gt;0&lt;/code&gt; , за следующими исключениями:</target>
        </trans-unit>
        <trans-unit id="fd22347e6ce1cebbfe9140a8d5df54f1132eb3e9" translate="yes" xml:space="preserve">
          <source>This format is no longer produced by any Git command, but is and will continue to be supported by &lt;code&gt;update-index --index-info&lt;/code&gt;.</source>
          <target state="translated">Этот формат больше не создается ни одной командой Git, но поддерживается и будет поддерживаться параметром &lt;code&gt;update-index --index-info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1e42b99834dd201113f33eae88b5856f686096e" translate="yes" xml:space="preserve">
          <source>This format is to put higher order stages into the index file and matches &lt;code&gt;git ls-files --stage&lt;/code&gt; output.</source>
          <target state="translated">Этот формат предназначен для помещения этапов более высокого порядка в индексный файл и соответствует выходу &lt;code&gt;git ls-files --stage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="483caba3e82677e09e2d521ebba75089a90ce09e" translate="yes" xml:space="preserve">
          <source>This format is to stuff &lt;code&gt;git ls-tree&lt;/code&gt; output into the index.</source>
          <target state="translated">Этот формат предназначен для помещения вывода &lt;code&gt;git ls-tree&lt;/code&gt; в индекс.</target>
        </trans-unit>
        <trans-unit id="078ec0cba6df63b2f2fc0bbcd069e250ea13b628" translate="yes" xml:space="preserve">
          <source>This format is used to refer to another commit in a commit message and is the same as &lt;code&gt;--pretty='format:%C(auto)%h (%s, %ad)'&lt;/code&gt;. By default, the date is formatted with &lt;code&gt;--date=short&lt;/code&gt; unless another &lt;code&gt;--date&lt;/code&gt; option is explicitly specified. As with any &lt;code&gt;format:&lt;/code&gt; with format placeholders, its output is not affected by other options like &lt;code&gt;--decorate&lt;/code&gt; and &lt;code&gt;--walk-reflogs&lt;/code&gt;.</source>
          <target state="translated">Этот формат используется для ссылки на другую фиксацию в сообщении фиксации и аналогичен &lt;code&gt;--pretty='format:%C(auto)%h (%s, %ad)'&lt;/code&gt; . По умолчанию дата форматируется с помощью &lt;code&gt;--date=short&lt;/code&gt; , если явно не указан другой параметр &lt;code&gt;--date&lt;/code&gt; . Как и в случае с любым &lt;code&gt;format:&lt;/code&gt; с заполнителями формата, на его вывод не влияют другие параметры, такие как &lt;code&gt;--decorate&lt;/code&gt; и &lt;code&gt;--walk-reflogs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="742c78626a467f269e89b016f43c5e1a7be4cd88" translate="yes" xml:space="preserve">
          <source>This gets rid of the &lt;code&gt;git-svn-id:&lt;/code&gt; lines at the end of every commit.</source>
          <target state="translated">Это избавляет от строк &lt;code&gt;git-svn-id:&lt;/code&gt; в конце каждого коммита.</target>
        </trans-unit>
        <trans-unit id="2acaf36aea784a80df7509fcb8e38355c645c5a7" translate="yes" xml:space="preserve">
          <source>This gives a very controlled flow of fixes. If you notice that you have applied a fix to e.g. &lt;code&gt;master&lt;/code&gt; that is also required in &lt;code&gt;maint&lt;/code&gt;, you will need to cherry-pick it (using &lt;a href=&quot;git-cherry-pick&quot;&gt;git-cherry-pick[1]&lt;/a&gt;) downwards. This will happen a few times and is nothing to worry about unless you do it very frequently.</source>
          <target state="translated">Это дает очень контролируемый поток исправлений. Если вы заметили, что вы применили исправление, например, к &lt;code&gt;master&lt;/code&gt; , которое также требуется в &lt;code&gt;maint&lt;/code&gt; , вам нужно будет выбрать его (используя &lt;a href=&quot;git-cherry-pick&quot;&gt;git-cherry-pick [1]&lt;/a&gt; ) снизу вверх. Это произойдет несколько раз, и вам не о чем беспокоиться, если вы не будете делать это очень часто.</target>
        </trans-unit>
        <trans-unit id="1f3884c08aac0f5d8941c7814b274c9743619a33" translate="yes" xml:space="preserve">
          <source>This happens if the &lt;code&gt;subsystem&lt;/code&gt; rebase had conflicts, or used &lt;code&gt;--interactive&lt;/code&gt; to omit, edit, squash, or fixup commits; or if the upstream used one of &lt;code&gt;commit --amend&lt;/code&gt;, &lt;code&gt;reset&lt;/code&gt;, or a full history rewriting command like &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot;&gt;&lt;code&gt;filter-repo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это происходит, если при перебазировании &lt;code&gt;subsystem&lt;/code&gt; возникли конфликты, или если используется &lt;code&gt;--interactive&lt;/code&gt; для исключения , редактирования, сжатия или фиксации фиксации; или если восходящий &lt;code&gt;commit --amend&lt;/code&gt; использовал одну из команд commit --amend , &lt;code&gt;reset&lt;/code&gt; или команду перезаписи полной истории, например &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot;&gt; &lt;code&gt;filter-repo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53ac63807fcdbfc7e050fb3151d6b086f2e9a274" translate="yes" xml:space="preserve">
          <source>This happens if the &lt;code&gt;subsystem&lt;/code&gt; rebase was a simple rebase and had no conflicts.</source>
          <target state="translated">Это происходит, если перебазирование &lt;code&gt;subsystem&lt;/code&gt; было простым перебазированием и не было конфликтов.</target>
        </trans-unit>
        <trans-unit id="d414984e9f8d7bfd782c8f2da36b80bcd80ea28e" translate="yes" xml:space="preserve">
          <source>This has a few user-visible effects and caveats:</source>
          <target state="translated">Это имеет несколько видимых пользователю эффектов и предостережений:</target>
        </trans-unit>
        <trans-unit id="1c876a37c9c7633e47e1a6a38b1f16f75e32a3ed" translate="yes" xml:space="preserve">
          <source>This has a very similar UI to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;revert&lt;/code&gt;, and lets you add untracked paths to the index.</source>
          <target state="translated">У него очень похожий пользовательский интерфейс для &lt;code&gt;update&lt;/code&gt; и &lt;code&gt;revert&lt;/code&gt; , а также позволяет добавлять в индекс неотслеживаемые пути.</target>
        </trans-unit>
        <trans-unit id="33280cb105ee3b71902ce7b15c9592fd52f73e30" translate="yes" xml:space="preserve">
          <source>This has a very similar UI to &lt;code&gt;update&lt;/code&gt;, and the staged information for selected paths are reverted to that of the HEAD version. Reverting new paths makes them untracked.</source>
          <target state="translated">У него очень похожий пользовательский интерфейс для &lt;code&gt;update&lt;/code&gt; , а поэтапная информация для выбранных путей возвращается к версии HEAD. Обращение к новым путям делает их неотслеживаемыми.</target>
        </trans-unit>
        <trans-unit id="4d4512b846dcedcc9cf4704e69eaeda15e1830db" translate="yes" xml:space="preserve">
          <source>This has been requested by some kernel developers because some bugs called sporadic bugs do not appear in all the kernel builds because they are very dependent on the compiler output.</source>
          <target state="translated">Это было запрошено некоторыми разработчиками ядра,потому что некоторые ошибки,называемые спорадическими ошибками,появляются не во всех сборках ядра,потому что они очень зависят от вывода компилятора.</target>
        </trans-unit>
        <trans-unit id="b93781d2b5ee24d7b760545bc5177eb80e4c3e22" translate="yes" xml:space="preserve">
          <source>This has the advantage that it will be saved in your &lt;code&gt;CVS/Root&lt;/code&gt; files and you don&amp;rsquo;t need to worry about always setting the correct environment variable. SSH users restricted to &lt;code&gt;git-shell&lt;/code&gt; don&amp;rsquo;t need to override the default with CVS_SERVER (and shouldn&amp;rsquo;t) as &lt;code&gt;git-shell&lt;/code&gt; understands &lt;code&gt;cvs&lt;/code&gt; to mean &lt;code&gt;git-cvsserver&lt;/code&gt; and pretends that the other end runs the real &lt;code&gt;cvs&lt;/code&gt; better.</source>
          <target state="translated">Это имеет то преимущество, что он будет сохранен в ваших файлах &lt;code&gt;CVS/Root&lt;/code&gt; , и вам не нужно беспокоиться о том, чтобы всегда устанавливать правильную переменную среды. Пользователям SSH, ограниченным &lt;code&gt;git-shell&lt;/code&gt; , не нужно переопределять значение по умолчанию с помощью CVS_SERVER (и не должно), поскольку &lt;code&gt;git-shell&lt;/code&gt; понимает &lt;code&gt;cvs&lt;/code&gt; как означающее &lt;code&gt;git-cvsserver&lt;/code&gt; и делает вид, что другой конец лучше работает с реальными &lt;code&gt;cvs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f27a3b2d1e595dbb21c1b28424b4a89305bcf439" translate="yes" xml:space="preserve">
          <source>This has two implications:</source>
          <target state="translated">Это имеет два последствия:</target>
        </trans-unit>
        <trans-unit id="a2d38b5ae6dea81df64d435d13a5c9c9c6e43a8c" translate="yes" xml:space="preserve">
          <source>This header line is followed by the following information at least once for each commit:</source>
          <target state="translated">За этой строкой заголовка следует как минимум один раз следующая информация для каждого коммита:</target>
        </trans-unit>
        <trans-unit id="aac19de1c954c0a5c2aba42bf1f288afbf74cabf" translate="yes" xml:space="preserve">
          <source>This helper uses specified file descriptors to connect to a remote Git server. This is not meant for end users but for programs and scripts calling git fetch, push or archive.</source>
          <target state="translated">Этот помощник использует указанные файловые дескрипторы для подключения к удалённому Git-серверу.Он предназначен не для конечных пользователей,а для программ и скриптов,вызывающих git fetch,push или archive.</target>
        </trans-unit>
        <trans-unit id="eafdc2cefff4153e88df550a24ce4b00606582ea" translate="yes" xml:space="preserve">
          <source>This hook can be used in conjunction with a corresponding pre-commit hook to save and restore any form of metadata associated with the working tree (e.g.: permissions/ownership, ACLS, etc). See contrib/hooks/setgitperms.perl for an example of how to do this.</source>
          <target state="translated">Этот крюк может использоваться вместе с соответствующим крюком предварительной коммитации для сохранения и восстановления любой формы метаданных,связанных с рабочим деревом (например:разрешения/владение,ACLS и т.д.).Смотрите contrib/hooks/setgitperms.perl для примера,как это сделать.</target>
        </trans-unit>
        <trans-unit id="9fae8c19d5ced3830760d386f8db3473a746ea76" translate="yes" xml:space="preserve">
          <source>This hook can be used to perform repository validity checks, auto-display differences from the previous HEAD if different, or set working dir metadata properties.</source>
          <target state="translated">Этот крюк может использоваться для выполнения проверки валидности репозитория,автоматического отображения отличий от предыдущего HEAD,если они отличаются,или установки свойств рабочих метаданных dir.</target>
        </trans-unit>
        <trans-unit id="89a247d66f7dd9fd927ac160899ee7ad4eefe257" translate="yes" xml:space="preserve">
          <source>This hook can be used to prevent &lt;code&gt;forced&lt;/code&gt; update on certain refs by making sure that the object name is a commit object that is a descendant of the commit object named by the old object name. That is, to enforce a &quot;fast-forward only&quot; policy.</source>
          <target state="translated">Эту ловушку можно использовать для предотвращения &lt;code&gt;forced&lt;/code&gt; обновления определенных ссылок, убедившись, что имя объекта является объектом фиксации, который является потомком объекта фиксации, названного старым именем объекта. То есть, чтобы обеспечить соблюдение политики &amp;laquo;только быстрой перемотки вперед&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e2b4b08b5c7d529703ac2e4609fae5478174d015" translate="yes" xml:space="preserve">
          <source>This hook can be used, for example, to run &lt;code&gt;git update-server-info&lt;/code&gt; if the repository is packed and is served via a dumb transport.</source>
          <target state="translated">Эту ловушку можно использовать, например, для запуска &lt;code&gt;git update-server-info&lt;/code&gt; , если репозиторий упакован и обслуживается через немой транспорт.</target>
        </trans-unit>
        <trans-unit id="ec8359ca4fe68868d4a094d214fa5c736b07b686" translate="yes" xml:space="preserve">
          <source>This hook does not affect the outcome of &lt;code&gt;git receive-pack&lt;/code&gt;, as it is called after the real work is done.</source>
          <target state="translated">Этот хук не влияет на результат &lt;code&gt;git receive-pack&lt;/code&gt; , так как он вызывается после того, как реальная работа сделана.</target>
        </trans-unit>
        <trans-unit id="4f1494681f56d1e644fae421a13f75381d1bf104" translate="yes" xml:space="preserve">
          <source>This hook executes once for the receive operation. It takes no arguments, but for each ref to be updated it receives on standard input a line of the format:</source>
          <target state="translated">Этот крюк выполняет операцию приема один раз.Он не принимает аргументов,но для каждого обращения,которое будет обновляться,он получает на стандартный вход строку формата:</target>
        </trans-unit>
        <trans-unit id="1c705c0b531046d9558421e4543f9aca35624390" translate="yes" xml:space="preserve">
          <source>This hook executes once for the receive operation. It takes no arguments, but gets the same information as the &lt;a href=&quot;#pre-receive&quot;&gt;&lt;em&gt;pre-receive&lt;/em&gt;&lt;/a&gt; hook does on its standard input.</source>
          <target state="translated">Этот хук выполняется один раз для операции приема. Он не принимает аргументов, но получает ту же информацию, что и ловушка &lt;a href=&quot;#pre-receive&quot;&gt;&lt;em&gt;предварительного приема&lt;/em&gt;&lt;/a&gt; на свой стандартный ввод.</target>
        </trans-unit>
        <trans-unit id="8f404b0d7afced029532dd1c0ce00c69033fa119" translate="yes" xml:space="preserve">
          <source>This hook is called before any refname is updated and before any fast-forward checks are performed.</source>
          <target state="translated">Этот крючок вызывается перед обновлением любого имени и перед выполнением быстрой перемотки.</target>
        </trans-unit>
        <trans-unit id="6f4d4e6bc9f3d3e90e8224d9cc9d15607a5f159d" translate="yes" xml:space="preserve">
          <source>This hook is called by &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; and can be used to prevent a push from taking place. The hook is called with two parameters which provide the name and location of the destination remote, if a named remote is not being used both values will be the same.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; и может использоваться, чтобы предотвратить отправку. Ловушка вызывается с двумя параметрами, которые предоставляют имя и местоположение удаленного назначения, если именованный удаленный компьютер не используется, оба значения будут одинаковыми.</target>
        </trans-unit>
        <trans-unit id="b761c5f63f99b7c22c6e4ca4e1bd741b6a19c509" translate="yes" xml:space="preserve">
          <source>This hook is called by &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; and can be used to prevent a branch from getting rebased. The hook may be called with one or two parameters. The first parameter is the upstream from which the series was forked. The second parameter is the branch being rebased, and is not set when rebasing the current branch.</source>
          <target state="translated">Этот перехватчик вызывается &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; и может использоваться для предотвращения перебазирования ветки. Ловушка может быть вызвана с одним или двумя параметрами. Первый параметр - это апстрим, от которого была разветвлена ​​серия. Второй параметр - это перебазируемая ветвь, и он не устанавливается при перебазировании текущей ветки.</target>
        </trans-unit>
        <trans-unit id="fc84f5afc2cc3712fb061152c42b83b5432e2d28" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;. It takes a single parameter, the name of the file that holds the proposed commit log message. Exiting with a non-zero status causes &lt;code&gt;git am&lt;/code&gt; to abort before applying the patch.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; . Он принимает единственный параметр - имя файла, содержащего предлагаемое сообщение журнала фиксации. Выход с ненулевым статусом приводит к прекращению работы &lt;code&gt;git am&lt;/code&gt; перед применением патча.</target>
        </trans-unit>
        <trans-unit id="109f1251e93ab76b92d28a05e1f40ca3ae3e2435" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;. It takes no parameter, and is invoked after the patch is applied and a commit is made.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; . Он не принимает параметров и вызывается после применения патча и совершения фиксации.</target>
        </trans-unit>
        <trans-unit id="31dd1042d3a6d88015bf6a789db56141bf61f664" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;. It takes no parameter, and is invoked after the patch is applied, but before a commit is made.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; . Он не принимает параметров и вызывается после применения исправления, но до совершения фиксации.</target>
        </trans-unit>
        <trans-unit id="4126a7ec7eb0a54d9b99d1f389fd70ce96c40950" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; and &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, and can be bypassed with the &lt;code&gt;--no-verify&lt;/code&gt; option. It takes a single parameter, the name of the file that holds the proposed commit log message. Exiting with a non-zero status causes the command to abort.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-commit&quot;&gt;командами git-commit [1]&lt;/a&gt; и &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; , и его можно обойти с помощью параметра &lt;code&gt;--no-verify&lt;/code&gt; . Он принимает единственный параметр - имя файла, содержащего предлагаемое сообщение журнала фиксации. Выход с ненулевым статусом вызывает прерывание команды.</target>
        </trans-unit>
        <trans-unit id="977ece26ae3c0446a7497462b09e90162737d6ca" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; right after preparing the default log message, and before the editor is started.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; сразу после подготовки сообщения журнала по умолчанию и перед запуском редактора.</target>
        </trans-unit>
        <trans-unit id="2ae25bad855fc10ca5e955357c713cdbb31a472c" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and can be bypassed with the &lt;code&gt;--no-verify&lt;/code&gt; option. It takes no parameters, and is invoked before obtaining the proposed commit log message and making a commit. Exiting with a non-zero status from this script causes the &lt;code&gt;git commit&lt;/code&gt; command to abort before creating a commit.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; , и его можно обойти с помощью опции &lt;code&gt;--no-verify&lt;/code&gt; . Он не принимает никаких параметров и вызывается перед получением предложенного сообщения журнала фиксации и совершением фиксации. Выход из этого сценария с ненулевым статусом вызывает прерывание команды &lt;code&gt;git commit&lt;/code&gt; перед созданием фиксации.</target>
        </trans-unit>
        <trans-unit id="21226463d529e8f7d5082c27401d959f905ec4d1" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;. It takes no parameters, and is invoked after a commit is made.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; . Он не принимает параметров и вызывается после совершения фиксации.</target>
        </trans-unit>
        <trans-unit id="0a4097349c79cead9de93e647cb9ba47cbed7c91" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, and can be bypassed with the &lt;code&gt;--no-verify&lt;/code&gt; option. It takes no parameters, and is invoked after the merge has been carried out successfully and before obtaining the proposed commit log message to make a commit. Exiting with a non-zero status from this script causes the &lt;code&gt;git merge&lt;/code&gt; command to abort before creating a commit.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; , и его можно обойти с помощью опции &lt;code&gt;--no-verify&lt;/code&gt; . Он не принимает никаких параметров и вызывается после успешного выполнения слияния и до получения предложенного сообщения журнала фиксации для совершения фиксации. Выход из этого скрипта с ненулевым статусом приводит к прерыванию команды &lt;code&gt;git merge&lt;/code&gt; перед созданием фиксации.</target>
        </trans-unit>
        <trans-unit id="de911dadfd0a4abc2b13baa4ccbc2ae0aca9f055" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, which happens when a &lt;code&gt;git pull&lt;/code&gt; is done on a local repository. The hook takes a single parameter, a status flag specifying whether or not the merge being done was a squash merge. This hook cannot affect the outcome of &lt;code&gt;git merge&lt;/code&gt; and is not executed, if the merge failed due to conflicts.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; , что происходит, когда &lt;code&gt;git pull&lt;/code&gt; выполняется в локальном репозитории. Хук принимает единственный параметр, флаг состояния, указывающий, было ли выполняемое слияние слиянием сквоша. Этот хук не может повлиять на результат &lt;code&gt;git merge&lt;/code&gt; и не выполняется, если слияние не удалось из-за конфликтов.</target>
        </trans-unit>
        <trans-unit id="76961cafe28e294daa6f1b287a02eb4fe4bf07aa" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; when it reacts to &lt;code&gt;git push&lt;/code&gt; and updates reference(s) in its repository, and when the push tries to update the branch that is currently checked out and the &lt;code&gt;receive.denyCurrentBranch&lt;/code&gt; configuration variable is set to &lt;code&gt;updateInstead&lt;/code&gt;. Such a push by default is refused if the working tree and the index of the remote repository has any difference from the currently checked out commit; when both the working tree and the index match the current commit, they are updated to match the newly pushed tip of the branch. This hook is to be used to override the default behaviour.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1],&lt;/a&gt; когда он реагирует на &lt;code&gt;git push&lt;/code&gt; и обновляет ссылку (-ы) в своем репозитории, а также когда push пытается обновить ветку, которая в настоящее время проверена, и переменную конфигурации &lt;code&gt;receive.denyCurrentBranch&lt;/code&gt; установлен на &lt;code&gt;updateInstead&lt;/code&gt; . Такое нажатие по умолчанию отклоняется, если рабочее дерево и индекс удаленного репозитория имеют какие-либо отличия от текущего извлеченного коммита; когда и рабочее дерево, и индекс совпадают с текущей фиксацией, они обновляются, чтобы соответствовать недавно выдвинутой вершине ветви. Этот хук используется для отмены поведения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5a56dac625f1205849f2b5f6e3619a708d3ea48e" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; when it reacts to &lt;code&gt;git push&lt;/code&gt; and updates reference(s) in its repository. It executes on the remote repository once after all the refs have been updated.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1],&lt;/a&gt; когда он реагирует на &lt;code&gt;git push&lt;/code&gt; и обновляет ссылку (и) в своем репозитории. Он выполняется в удаленном репозитории один раз после обновления всех ссылок.</target>
        </trans-unit>
        <trans-unit id="390ce0821ef413eec43c389641cce2dfc9687135" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; when it reacts to &lt;code&gt;git push&lt;/code&gt; and updates reference(s) in its repository. Just before starting to update refs on the remote repository, the pre-receive hook is invoked. Its exit status determines the success or failure of the update.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1],&lt;/a&gt; когда он реагирует на &lt;code&gt;git push&lt;/code&gt; и обновляет ссылку (и) в своем репозитории. Непосредственно перед началом обновления ссылок в удаленном репозитории вызывается ловушка предварительного приема. Его статус выхода определяет успех или неудачу обновления.</target>
        </trans-unit>
        <trans-unit id="f508c67d780c6e440d114ab5a4809e8db15887c6" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; when it reacts to &lt;code&gt;git push&lt;/code&gt; and updates reference(s) in its repository. Just before updating the ref on the remote repository, the update hook is invoked. Its exit status determines the success or failure of the ref update.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1],&lt;/a&gt; когда он реагирует на &lt;code&gt;git push&lt;/code&gt; и обновляет ссылку (и) в своем репозитории. Непосредственно перед обновлением ссылки в удаленном репозитории вызывается ловушка обновления. Его статус выхода определяет успех или неудачу обновления ссылки.</target>
        </trans-unit>
        <trans-unit id="c94fc31562e49c2e1f57905c2984b3787d6eb579" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;. It takes a single parameter, the name of the file that holds the e-mail to be sent. Exiting with a non-zero status causes &lt;code&gt;git send-email&lt;/code&gt; to abort before sending any e-mails.</source>
          <target state="translated">Этот хук вызывается &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; . Он принимает единственный параметр - имя файла, в котором хранится электронное письмо для отправки. Выход с ненулевым статусом приводит к прекращению работы &lt;code&gt;git send-email&lt;/code&gt; перед отправкой любых электронных писем.</target>
        </trans-unit>
        <trans-unit id="898dc345a1faef7e78cc6f07a48d416762cf9e72" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;code&gt;git gc --auto&lt;/code&gt; (see &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;). It takes no parameter, and exiting with non-zero status from this script causes the &lt;code&gt;git gc --auto&lt;/code&gt; to abort.</source>
          <target state="translated">Этот хук вызывается &lt;code&gt;git gc --auto&lt;/code&gt; (см. &lt;a href=&quot;git-gc&quot;&gt;Git-gc [1]&lt;/a&gt; ). Он не принимает параметров, и выход из этого скрипта с ненулевым статусом приводит к прерыванию &lt;code&gt;git gc --auto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa504b80ab7d4ab7fd02bb1c09f7267f7ffd0b87" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;code&gt;git-p4 submit&lt;/code&gt;. It takes no parameters and nothing from standard input. Exiting with non-zero status from this script prevent &lt;code&gt;git-p4 submit&lt;/code&gt; from launching. Run &lt;code&gt;git-p4 submit --help&lt;/code&gt; for details.</source>
          <target state="translated">Этот хук вызывается &lt;code&gt;git-p4 submit&lt;/code&gt; . Он не принимает никаких параметров и ничего из стандартного ввода. Выход из этого скрипта с ненулевым статусом предотвращает запуск &lt;code&gt;git-p4 submit&lt;/code&gt; . Выполните &lt;code&gt;git-p4 submit --help&lt;/code&gt; , чтобы узнать подробности.</target>
        </trans-unit>
        <trans-unit id="e8569f58a670ba9d05dfd0c2191295df64e04e73" translate="yes" xml:space="preserve">
          <source>This hook is invoked by commands that rewrite commits (&lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; when called with &lt;code&gt;--amend&lt;/code&gt; and &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;; however, full-history (re)writing tools like &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; or &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot;&gt;git-filter-repo&lt;/a&gt; typically do not call it!). Its first argument denotes the command it was invoked by: currently one of &lt;code&gt;amend&lt;/code&gt; or &lt;code&gt;rebase&lt;/code&gt;. Further command-dependent arguments may be passed in the future.</source>
          <target state="translated">Этот хук вызывается командами, которые перезаписывают коммиты ( &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; при вызове с &lt;code&gt;--amend&lt;/code&gt; и &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; ; однако, инструменты записи полной истории (пере), такие как &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]&lt;/a&gt; или &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot;&gt;git-filter-repo&lt;/a&gt; обычно его не называют!). Его первый аргумент обозначает команду, которой он был вызван: в настоящее время один из вариантов: &lt;code&gt;amend&lt;/code&gt; или &lt;code&gt;rebase&lt;/code&gt; . В будущем могут быть переданы другие аргументы, зависящие от команды.</target>
        </trans-unit>
        <trans-unit id="7b20b75526e2af7ef8179932e884a838f68429b3" translate="yes" xml:space="preserve">
          <source>This hook is invoked when a &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; or &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; is run after having updated the worktree. The hook is given three parameters: the ref of the previous HEAD, the ref of the new HEAD (which may or may not have changed), and a flag indicating whether the checkout was a branch checkout (changing branches, flag=1) or a file checkout (retrieving a file from the index, flag=0). This hook cannot affect the outcome of &lt;code&gt;git switch&lt;/code&gt; or &lt;code&gt;git checkout&lt;/code&gt;.</source>
          <target state="translated">Этот хук вызывается, когда &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; или &lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt; запускается после обновления рабочего дерева. Перехватчику даются три параметра: ссылка на предыдущую HEAD, ссылка на новую HEAD (которая могла или не могла быть изменена) и флаг, указывающий, была ли проверка проверкой ветви (изменение ветвей, flag = 1) или проверка файла (получение файла из индекса, флаг = 0). Этот хук не может повлиять на результат &lt;code&gt;git switch&lt;/code&gt; или &lt;code&gt;git checkout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0692c459d4a723afc690b678a8556c7e5d3814" translate="yes" xml:space="preserve">
          <source>This hook is invoked when the configuration option &lt;code&gt;core.fsmonitor&lt;/code&gt; is set to &lt;code&gt;.git/hooks/fsmonitor-watchman&lt;/code&gt;. It takes two arguments, a version (currently 1) and the time in elapsed nanoseconds since midnight, January 1, 1970.</source>
          <target state="translated">Этот перехватчик вызывается, когда параметр конфигурации &lt;code&gt;core.fsmonitor&lt;/code&gt; установлен в &lt;code&gt;.git/hooks/fsmonitor-watchman&lt;/code&gt; . Требуется два аргумента: версия (в настоящее время 1) и время в наносекундах, прошедшее с полуночи 1 января 1970 года.</target>
        </trans-unit>
        <trans-unit id="1ea8190ee0fad5a3aca31c578a724c322c0d57cb" translate="yes" xml:space="preserve">
          <source>This hook is invoked when the index is written in read-cache.c do_write_locked_index.</source>
          <target state="translated">Этот крюк вызывается,когда индекс записывается в read-cache.c do_write_locked_index.</target>
        </trans-unit>
        <trans-unit id="bbcd7cc3d137fc9e83cb037a7ffe28a3a104cf5b" translate="yes" xml:space="preserve">
          <source>This hook is invoked with the environment variable &lt;code&gt;GIT_EDITOR=:&lt;/code&gt; if the command will not bring up an editor to modify the commit message.</source>
          <target state="translated">Этот хук вызывается с переменной окружения &lt;code&gt;GIT_EDITOR=:&lt;/code&gt; если команда не вызывает редактор для изменения сообщения фиксации.</target>
        </trans-unit>
        <trans-unit id="ddc7ece9286909c0de44abe41d5a762b67552ed5" translate="yes" xml:space="preserve">
          <source>This hook is meant primarily for notification, and cannot affect the outcome of &lt;code&gt;git am&lt;/code&gt;.</source>
          <target state="translated">Этот хук предназначен в первую очередь для уведомления и не может повлиять на результат &lt;code&gt;git am&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="448e187d53f17c70cda00f92a3ee55c4bde07472" translate="yes" xml:space="preserve">
          <source>This hook is meant primarily for notification, and cannot affect the outcome of &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">Этот хук предназначен в основном для уведомления и не может повлиять на результат &lt;code&gt;git commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08260832c28c95684a1993d7203db5c6a733006a" translate="yes" xml:space="preserve">
          <source>This hook is meant primarily for notification, and cannot affect the outcome of &lt;code&gt;git receive-pack&lt;/code&gt;.</source>
          <target state="translated">Этот хук предназначен в первую очередь для уведомления и не может повлиять на результат &lt;code&gt;git receive-pack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1b9eafafbdf014b8c082347223fc7e3e439cd3c" translate="yes" xml:space="preserve">
          <source>This implies &lt;code&gt;--revs&lt;/code&gt;. In addition to the list of revision arguments read from the standard input, pretend as if all refs under &lt;code&gt;refs/&lt;/code&gt; are specified to be included.</source>
          <target state="translated">Это означает &lt;code&gt;--revs&lt;/code&gt; . В дополнение к списку аргументов ревизии, считываемых из стандартного ввода, сделайте вид, будто все ссылки в &lt;code&gt;refs/&lt;/code&gt; указаны для включения.</target>
        </trans-unit>
        <trans-unit id="00f6fe101136dac1c604175fe5bf787266d15317" translate="yes" xml:space="preserve">
          <source>This implies &lt;code&gt;--revs&lt;/code&gt;. When processing the list of revision arguments read from the standard input, limit the objects packed to those that are not already packed.</source>
          <target state="translated">Это означает &lt;code&gt;--revs&lt;/code&gt; . При обработке списка аргументов ревизии, считанного из стандартного ввода, ограничьте упакованные объекты теми, которые еще не упакованы.</target>
        </trans-unit>
        <trans-unit id="23abf25dbec44cc1a257bc71a457bb760d4a79eb" translate="yes" xml:space="preserve">
          <source>This implies the &lt;code&gt;--topo-order&lt;/code&gt; option by default, but the &lt;code&gt;--date-order&lt;/code&gt; option may also be specified.</source>
          <target state="translated">По умолчанию это подразумевает параметр &lt;code&gt;--topo-order&lt;/code&gt; , но также можно указать параметр &lt;code&gt;--date-order&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bafb6d097d43ca4ccca730edb887425acfba8b5" translate="yes" xml:space="preserve">
          <source>This imports the specified depot into &lt;code&gt;refs/remotes/p4/master&lt;/code&gt; in an existing Git repository. The &lt;code&gt;--branch&lt;/code&gt; option can be used to specify a different branch to be used for the p4 content.</source>
          <target state="translated">Это импортирует указанное хранилище в &lt;code&gt;refs/remotes/p4/master&lt;/code&gt; в существующем репозитории Git. &lt;code&gt;--branch&lt;/code&gt; опция может использоваться , чтобы указать другую ветвь будет использоваться для содержания p4.</target>
        </trans-unit>
        <trans-unit id="505428074ae07b004fad59f4eaeb272274ac2c6b" translate="yes" xml:space="preserve">
          <source>This information can be used to determine what commit was the tip of a branch &quot;2 days ago&quot;.</source>
          <target state="translated">Эта информация может быть использована для определения того,какой коммит был вершиной ветки &quot;2 дня назад&quot;.</target>
        </trans-unit>
        <trans-unit id="86187244d1368864bf6af8ccb054656e32b6a58b" translate="yes" xml:space="preserve">
          <source>This instructs git svn to recode pathnames to a given encoding. It can be used by windows users and by those who work in non-utf8 locales to avoid corrupted file names with non-ASCII characters. Valid encodings are the ones supported by Perl&amp;rsquo;s Encode module.</source>
          <target state="translated">Это инструктирует git svn перекодировать пути в заданную кодировку. Его могут использовать пользователи Windows и те, кто работает в локали, отличной от utf8, чтобы избежать искажения имен файлов с символами, отличными от ASCII. Допустимые кодировки - это те, которые поддерживаются модулем Perl Encode.</target>
        </trans-unit>
        <trans-unit id="0909b4167b1b6cfc93db8cafdc74248d3901c792" translate="yes" xml:space="preserve">
          <source>This is a deprecated synonym for &lt;code&gt;repack.writeBitmaps&lt;/code&gt;.</source>
          <target state="translated">Это устаревший синоним &lt;code&gt;repack.writeBitmaps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0663f3ff3f5e643bb58ee19e6a44fd14680c40d5" translate="yes" xml:space="preserve">
          <source>This is a login shell for SSH accounts to provide restricted Git access. It permits execution only of server-side Git commands implementing the pull/push functionality, plus custom commands present in a subdirectory named &lt;code&gt;git-shell-commands&lt;/code&gt; in the user&amp;rsquo;s home directory.</source>
          <target state="translated">Это оболочка входа в систему для учетных записей SSH, обеспечивающая ограниченный доступ к Git. Он разрешает выполнение только серверных команд Git, реализующих функциональность pull / push, а также пользовательских команд, находящихся в подкаталоге с именем &lt;code&gt;git-shell-commands&lt;/code&gt; в домашнем каталоге пользователя.</target>
        </trans-unit>
        <trans-unit id="bb9b1700493e02e1c42808252a2a81a90b07f06f" translate="yes" xml:space="preserve">
          <source>This is a modified recursive strategy. When merging trees A and B, if B corresponds to a subtree of A, B is first adjusted to match the tree structure of A, instead of reading the trees at the same level. This adjustment is also done to the common ancestor tree.</source>
          <target state="translated">Это модифицированная рекурсивная стратегия.При слиянии деревьев A и B,если B соответствует поддереву A,B сначала настраивается на соответствие древовидной структуре A,а не на чтение деревьев на одном уровне.Эта настройка также выполняется для общего дерева предков.</target>
        </trans-unit>
        <trans-unit id="94478372a5a22fcace1286299ca604a903c0373f" translate="yes" xml:space="preserve">
          <source>This is a multi-valued variable, and an empty value can be used in a higher priority configuration file (e.g. &lt;code&gt;.git/config&lt;/code&gt; in a repository) to clear the values inherited from a lower priority configuration files (e.g. &lt;code&gt;$HOME/.gitconfig&lt;/code&gt;).</source>
          <target state="translated">Это многозначная переменная, и пустое значение может использоваться в файле конфигурации с более высоким приоритетом (например, &lt;code&gt;.git/config&lt;/code&gt; в репозитории), чтобы очистить значения, унаследованные от файлов конфигурации с более низким приоритетом (например, &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ) ,</target>
        </trans-unit>
        <trans-unit id="9800795b0feafe785919ba7eb03d901a5af98b6d" translate="yes" xml:space="preserve">
          <source>This is a potentially &lt;em&gt;dangerous&lt;/em&gt; mode of operation. It rewrites history, which does not bode well when you published that history already. Do &lt;strong&gt;not&lt;/strong&gt; use this option unless you have read &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; carefully.</source>
          <target state="translated">Это потенциально &lt;em&gt;опасный&lt;/em&gt; режим работы. Он переписывает историю, что не сулит ничего хорошего, если вы уже опубликовали эту историю. Вы &lt;strong&gt;не&lt;/strong&gt; использовать эту опцию , если вы не прочтете &lt;a href=&quot;git-rebase&quot;&gt;ГИТ-Rebase [1]&lt;/a&gt; тщательно.</target>
        </trans-unit>
        <trans-unit id="7393bcbfeab09d874001a82423e807bb091915e9" translate="yes" xml:space="preserve">
          <source>This is a quick summary of the major commands; the previous chapters explain how these work in more detail.</source>
          <target state="translated">Это краткое изложение основных команд;в предыдущих главах более подробно объясняется,как они работают.</target>
        </trans-unit>
        <trans-unit id="e6b70a1472f7c00669a56c92197ed227d5be5866" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &quot;--pretty=oneline --abbrev-commit&quot; used together.</source>
          <target state="translated">Это сокращение от &quot;--pretty=oneline --abbrev-commit&quot;,используемое вместе.</target>
        </trans-unit>
        <trans-unit id="18c84bcba1b16c1ac1cf14d08c1c68d27e4599a1" translate="yes" xml:space="preserve">
          <source>This is a total waste of time and effort on a filesystem that orders data writes properly, but can be useful for filesystems that do not use journalling (traditional UNIX filesystems) or that only journal metadata and not file contents (OS X&amp;rsquo;s HFS+, or Linux ext3 with &quot;data=writeback&quot;).</source>
          <target state="translated">Это пустая трата времени и усилий для файловой системы, которая правильно упорядочивает запись данных, но может быть полезна для файловых систем, которые не используют журналирование (традиционные файловые системы UNIX) или которые ведут только метаданные, а не содержимое файла (OS X HFS + или Linux. ext3 с &quot;данными = обратная запись&quot;).</target>
        </trans-unit>
        <trans-unit id="554ab63db8a74b017dac093a21d0557d821484db" translate="yes" xml:space="preserve">
          <source>This is a toy format. The current time and time zone of this system is always copied into the identity string at the time it is being created by fast-import. There is no way to specify a different time or time zone.</source>
          <target state="translated">Это игрушечный формат.Текущее время и часовой пояс этой системы всегда копируется в идентификационную строку во время ее создания путем быстрого импорта.Нет возможности указать другое время или часовой пояс.</target>
        </trans-unit>
        <trans-unit id="bc30d84517d5f02b55a3811eba6ffba9e6c0e4f0" translate="yes" xml:space="preserve">
          <source>This is a work in progress.</source>
          <target state="translated">Это работа в процессе.</target>
        </trans-unit>
        <trans-unit id="3e77feb91313add3d7aff3491329020f7cd2b88e" translate="yes" xml:space="preserve">
          <source>This is an easy way to check out a particular version without having to make up a name for the new branch. You can still create a new branch (or tag) for this version later if you decide to.</source>
          <target state="translated">Это простой способ проверить конкретную версию без необходимости придумывать имя для новой ветки.Вы всё ещё можете создать новое ответвление (или метку)для этой версии позже,если вы решите это сделать.</target>
        </trans-unit>
        <trans-unit id="86d03a90949a936d437c536daea902a3352ca567" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;rebase&lt;/code&gt; is used in a workflow that treats the history at the remote as the shared canonical one, and treats the work done on the branch you are rebasing as the third-party work to be integrated, and you are temporarily assuming the role of the keeper of the canonical history during the rebase. As the keeper of the canonical history, you need to view the history from the remote as &lt;code&gt;ours&lt;/code&gt; (i.e. &quot;our shared canonical history&quot;), while what you did on your side branch as &lt;code&gt;theirs&lt;/code&gt; (i.e. &quot;one contributor&amp;rsquo;s work on top of it&quot;).</source>
          <target state="translated">Это связано с тем, что &lt;code&gt;rebase&lt;/code&gt; используется в рабочем процессе, который обрабатывает историю на удаленном компьютере как общую каноническую и рассматривает работу, выполненную в ветке, которую вы перебазируете, как стороннюю работу, которую нужно интегрировать, и вы временно принимаете на себя роль хранителя канонической истории при ребазе. Как хранитель канонической истории, вам необходимо просматривать историю с пульта дистанционного управления как &lt;code&gt;ours&lt;/code&gt; (т. Е. &amp;laquo;Нашу общую каноническую историю&amp;raquo;), а то, что вы делали в боковой ветке, как &lt;code&gt;theirs&lt;/code&gt; (т. Е. &amp;laquo;Работу одного участника поверх нее&amp;raquo; ).</target>
        </trans-unit>
        <trans-unit id="95a20fc02bc3cd4094f682df1ea1f755e327d688" translate="yes" xml:space="preserve">
          <source>This is called a &lt;code&gt;hunk header&lt;/code&gt;. The &quot;TEXT&quot; portion is by default a line that begins with an alphabet, an underscore or a dollar sign; this matches what GNU &lt;code&gt;diff -p&lt;/code&gt; output uses. This default selection however is not suited for some contents, and you can use a customized pattern to make a selection.</source>
          <target state="translated">Это называется &lt;code&gt;hunk header&lt;/code&gt; . Часть &amp;laquo;ТЕКСТ&amp;raquo; по умолчанию - это строка, которая начинается с алфавита, подчеркивания или знака доллара; это соответствует тому, что использует вывод GNU &lt;code&gt;diff -p&lt;/code&gt; . Однако этот выбор по умолчанию не подходит для некоторого содержимого, и вы можете использовать собственный шаблон для выбора.</target>
        </trans-unit>
        <trans-unit id="85de32d717921314245903361d4033db93188253" translate="yes" xml:space="preserve">
          <source>This is default name of common system-wide configuration file.</source>
          <target state="translated">Это имя по умолчанию для общего общесистемного конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="8fabc38be889239efec56b25dba57afb3b308b5b" translate="yes" xml:space="preserve">
          <source>This is default name of fallback system-wide configuration file. This file is used only if per-instance configuration variable is not found.</source>
          <target state="translated">Это имя по умолчанию для резервного общесистемного конфигурационного файла.Этот файл используется только в том случае,если конфигурационная переменная для каждого экземпляра не найдена.</target>
        </trans-unit>
        <trans-unit id="e13cac7eff842df90d7031a70a4150ab3a8cdbc2" translate="yes" xml:space="preserve">
          <source>This is default name of per-instance configuration file. The format of this file is described above.</source>
          <target state="translated">Это имя файла конфигурации по умолчанию для каждого экземпляра.Формат этого файла описан выше.</target>
        </trans-unit>
        <trans-unit id="2ac99b50de3702f5d543e44c6b1ddc55b08d7471" translate="yes" xml:space="preserve">
          <source>This is designed to be as compact as possible.</source>
          <target state="translated">Это разработано для того,чтобы быть как можно более компактным.</target>
        </trans-unit>
        <trans-unit id="d4d30dfd1772dd73a7b51cd065bd14037d1044bf" translate="yes" xml:space="preserve">
          <source>This is done to prevent you from losing your work-in-progress changes, and mixing your random changes in an unrelated merge commit. To illustrate, suppose you start from what has been committed last to your repository:</source>
          <target state="translated">Это сделано для того,чтобы предотвратить потерю изменений в процессе работы и смешивание случайных изменений в несвязанном коммите слияния.В качестве иллюстрации предположим,что вы начинаете с того,что было зафиксировано последним в вашем репозитории:</target>
        </trans-unit>
        <trans-unit id="c5483036881ec5a0c568843866e403149495194d" translate="yes" xml:space="preserve">
          <source>This is how you read a blob (actually, not only a blob, but any type of object). To know how the function &lt;code&gt;read_object_with_reference()&lt;/code&gt; actually works, find the source code for it (something like &lt;code&gt;git grep
read_object_with | grep &quot;:[a-z]&quot;&lt;/code&gt; in the Git repository), and read the source.</source>
          <target state="translated">Вот как вы читаете blob (фактически, не только blob, но и любой тип объекта). Чтобы узнать, как на самом деле работает функция &lt;code&gt;read_object_with_reference()&lt;/code&gt; , найдите для нее исходный код (что-то вроде &lt;code&gt;git grep read_object_with | grep &quot;:[a-z]&quot;&lt;/code&gt; в репозитории Git) и прочтите исходный код.</target>
        </trans-unit>
        <trans-unit id="d94f65e687e225292db2cabccebd8f5b3adaa1d5" translate="yes" xml:space="preserve">
          <source>This is ideally suited for read-only updates, i.e., pulling from Git repositories.</source>
          <target state="translated">Это идеально подходит для обновлений только для чтения,т.е.для извлечения из Git-репозиториев.</target>
        </trans-unit>
        <trans-unit id="4f74abb17322f51c4e08c52446429282a69cbb4c" translate="yes" xml:space="preserve">
          <source>This is intended to be used by the test suite only. It allows to force the version for the generated pack index, and to force 64-bit index entries on objects located above the given offset.</source>
          <target state="translated">Это предназначено для использования только в тестовом комплекте.Он позволяет форсировать версию для сгенерированного индекса пакета,а также форсировать 64-битные записи индекса на объектах,расположенных выше заданного смещения.</target>
        </trans-unit>
        <trans-unit id="8180429180a5d33dfa16e7d2805d2ac9f53f061d" translate="yes" xml:space="preserve">
          <source>This is just to get you into the groove for the most libified part of Git: the revision walker.</source>
          <target state="translated">Это просто для того,чтобы вы попали в канавку самой освобождённой части Git:ревизионного ходункера.</target>
        </trans-unit>
        <trans-unit id="dce30f3fbb0be29025f159d55505215087cce86b" translate="yes" xml:space="preserve">
          <source>This is known to &lt;code&gt;range-diff&lt;/code&gt; as &quot;dual coloring&quot;. Use &lt;code&gt;--no-dual-color&lt;/code&gt; to revert to color all lines according to the outer diff markers (and completely ignore the inner diff when it comes to color).</source>
          <target state="translated">Это известно в &lt;code&gt;range-diff&lt;/code&gt; как &amp;laquo;двойное окрашивание&amp;raquo;. Используйте &lt;code&gt;--no-dual-color&lt;/code&gt; , чтобы вернуться к раскрашиванию всех линий в соответствии с внешними маркерами различий (и полностью игнорировать внутреннее различие, когда дело доходит до цвета).</target>
        </trans-unit>
        <trans-unit id="51ecbd5eaeeeee461a4969f3b0cb27dc975ebc23" translate="yes" xml:space="preserve">
          <source>This is made much worse if many files have to be fixed to resolve conflicts. That&amp;rsquo;s why such merges are called &quot;evil merges&quot;. They can make regressions very difficult to track down. It can even be misleading to know the first bad commit if it happens to be such a merge, because people might think that the bug comes from bad conflict resolution when it comes from a semantic change in one branch.</source>
          <target state="translated">Это значительно усугубляется, если для разрешения конфликтов необходимо исправить много файлов. Поэтому такие слияния называют &amp;laquo;злыми слияниями&amp;raquo;. Они могут затруднить отслеживание регрессий. Может даже быть ошибочным знать, что первая плохая фиксация произошла в результате такого слияния, потому что люди могут подумать, что ошибка возникает из-за плохого разрешения конфликта, когда она возникает из-за семантического изменения в одной ветви.</target>
        </trans-unit>
        <trans-unit id="2742189647afc1dbda2e1e2ecc6c9303cbb2d70b" translate="yes" xml:space="preserve">
          <source>This is meant to be used by higher level scripts to compute merge results outside of the index, and stuff the results back into the index. For this reason, the output from the command omits entries that match the &amp;lt;branch1&amp;gt; tree.</source>
          <target state="translated">Это предназначено для использования сценариями более высокого уровня для вычисления результатов слияния вне индекса и вставки результатов обратно в индекс. По этой причине в выходных данных команды отсутствуют записи, соответствующие дереву &amp;lt;branch1&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="9ccf843e585a34e60ae505f61685a10813c9c88a" translate="yes" xml:space="preserve">
          <source>This is most often done when you remembered what you just committed is incomplete, or you misspelled your commit message, or both. Leaves working tree as it was before &quot;reset&quot;.</source>
          <target state="translated">Чаще всего это делается,когда вы вспоминаете,что то,что вы только что совершили,является неполным,или вы неправильно написали ваше сообщение о коммите,или и то,и другое.Оставляет рабочее дерево таким,каким оно было до &quot;сброса&quot;.</target>
        </trans-unit>
        <trans-unit id="efff48b2c5bed4c5ab6435b6d058280a53664967" translate="yes" xml:space="preserve">
          <source>This is not a command the end user would want to run. Ever. This documentation is meant for people who are studying the Porcelain-ish scripts and/or are writing new ones.</source>
          <target state="translated">Это не та команда,которую хотел бы выполнить конечный пользователь.Никогда.Эта документация предназначена для людей,которые изучают фарфоровые сценарии и/или пишут новые.</target>
        </trans-unit>
        <trans-unit id="4c9e09ba77ce1340a426d6ae669add42a4fe4542" translate="yes" xml:space="preserve">
          <source>This is not a real filter executed for each commit but a one time setup just before the loop. Therefore no commit-specific variables are defined yet. Functions or variables defined here can be used or modified in the following filter steps except the commit filter, for technical reasons.</source>
          <target state="translated">Это не настоящий фильтр,выполняемый для каждого коммита,а однократная настройка непосредственно перед циклом.Поэтому пока не определены никакие специфические для коммита переменные.Функции или переменные,определённые здесь,могут быть использованы или изменены на следующих шагах фильтра,кроме фильтра фиксации,по техническим причинам.</target>
        </trans-unit>
        <trans-unit id="ad1d1c10cd51125ef48d021d8c7283be0413a66d" translate="yes" xml:space="preserve">
          <source>This is not hard to understand, as soon as you realize that Git simply never knows (or cares) about files that it is not told about explicitly. Git will never go &lt;strong&gt;looking&lt;/strong&gt; for files to compare, it expects you to tell it what the files are, and that&amp;rsquo;s what the index is there for.</source>
          <target state="translated">Это нетрудно понять, как только вы поймете, что Git просто никогда не знает (или не заботится) о файлах, о которых не говорится явно. Git никогда не будет &lt;strong&gt;искать&lt;/strong&gt; файлы для сравнения, он ожидает, что вы скажете ему, что это за файлы, и для этого нужен индекс.</target>
        </trans-unit>
        <trans-unit id="0273358cae89a5a683cca4bca340f2d1ab3cc600" translate="yes" xml:space="preserve">
          <source>This is only used by git-completion.bash to add or remove commands from the list of completed commands. Normally only porcelain commands and a few select others are completed. You can add more commands, separated by space, in this variable. Prefixing the command with &lt;code&gt;-&lt;/code&gt; will remove it from the existing list.</source>
          <target state="translated">Это используется только git-completion.bash для добавления или удаления команд из списка выполненных команд. Обычно выполняются только фарфоровые команды и несколько избранных других. В эту переменную можно добавить другие команды, разделенные пробелом. Если поставить перед командой префикс &lt;code&gt;-&lt;/code&gt; , она будет удалена из существующего списка.</target>
        </trans-unit>
        <trans-unit id="fcaf558e1ca35a6c93dcb363081455cef6ced8a0" translate="yes" xml:space="preserve">
          <source>This is only valid for &amp;lt;end&amp;gt; and will specify a number of lines before or after the line given by &amp;lt;start&amp;gt;.</source>
          <target state="translated">Это действительно только для &amp;lt;end&amp;gt; и будет указывать количество строк до или после строки, заданной &amp;lt;start&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="1b0501180252ff128dca83458515deca695a7ecc" translate="yes" xml:space="preserve">
          <source>This is optional and is only searched when &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; is present in $GIT_DIR/config.</source>
          <target state="translated">Это необязательно, и поиск выполняется только в том случае, если &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; присутствует в $ GIT_DIR / config.</target>
        </trans-unit>
        <trans-unit id="4306207006bf4fdd2134f4efea5f0d698d2c1f81" translate="yes" xml:space="preserve">
          <source>This is particularly true when passing in diff options. Currently some options like &lt;code&gt;--stat&lt;/code&gt; can, as an emergent effect, produce output that&amp;rsquo;s quite useless in the context of &lt;code&gt;range-diff&lt;/code&gt;. Future versions of &lt;code&gt;range-diff&lt;/code&gt; may learn to interpret such options in a manner specific to &lt;code&gt;range-diff&lt;/code&gt; (e.g. for &lt;code&gt;--stat&lt;/code&gt; producing human-readable output which summarizes how the diffstat changed).</source>
          <target state="translated">Это особенно верно при передаче опций diff. В настоящее время некоторые параметры, такие как &lt;code&gt;--stat&lt;/code&gt; , могут в качестве неожиданного эффекта производить вывод, который совершенно бесполезен в контексте &lt;code&gt;range-diff&lt;/code&gt; . Будущие версии &lt;code&gt;range-diff&lt;/code&gt; могут научиться интерпретировать такие параметры способом, специфичным для &lt;code&gt;range-diff&lt;/code&gt; (например, для &lt;code&gt;--stat&lt;/code&gt; , производящего удобочитаемый вывод, который суммирует, как изменился diffstat).</target>
        </trans-unit>
        <trans-unit id="c2dfec9fbb580524d9c87ce7e3303a7b47cc295d" translate="yes" xml:space="preserve">
          <source>This is passed to both underlying git-fetch to squelch reporting of during transfer, and underlying git-merge to squelch output during merging.</source>
          <target state="translated">Это передаётся как базовым git-фетчам для хлюпающего отчёта во время трансфера,так и базовым git-мергерам для хлюпающего отчёта во время слияния.</target>
        </trans-unit>
        <trans-unit id="3d17e8f742373c8bbf1871e58142a3d3c4b1c09b" translate="yes" xml:space="preserve">
          <source>This is per-repository enhancement / version of global prefix-based &lt;code&gt;@git_base_url_list&lt;/code&gt; gitweb configuration variable (see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;).</source>
          <target state="translated">Это расширение / версия для каждого репозитория глобальной переменной конфигурации @git_base_url_list на основе &lt;code&gt;@git_base_url_list&lt;/code&gt; gitweb (см. &lt;a href=&quot;gitweb.conf&quot;&gt;Gitweb.conf [5]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a7bcc6783fe2c533eb40b84879a83d32f4d95dc9" translate="yes" xml:space="preserve">
          <source>This is similar to --symbolic, but it omits input that are not refs (i.e. branch or tag names; or more explicitly disambiguating &quot;heads/master&quot; form, when you want to name the &quot;master&quot; branch when there is an unfortunately named tag &quot;master&quot;), and show them as full refnames (e.g. &quot;refs/heads/master&quot;).</source>
          <target state="translated">Это похоже на --символику,но при этом опускаются входные данные,которые не являются ссылками (т.е.имена ветвей или тегов;или более явная форма &quot;head/master&quot;,когда вы хотите назвать &quot;master&quot; ветвь,когда есть,к сожалению,названный тег &quot;master&quot;),и показывать их в виде полных имен (например,&quot;refs/heads/master&quot;).</target>
        </trans-unit>
        <trans-unit id="4cae7dda407705febf1be1d8f0d77956238a429a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;info/grafts&lt;/code&gt; but is internally used and maintained by shallow clone mechanism. See &lt;code&gt;--depth&lt;/code&gt; option to &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/shallow&quot; will be used instead.</source>
          <target state="translated">Это похоже на &lt;code&gt;info/grafts&lt;/code&gt; , но используется внутри и поддерживается с помощью механизма мелких клонов. См. &lt;code&gt;--depth&lt;/code&gt; для &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; и &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; . Этот файл игнорируется, если установлен $ GIT_COMMON_DIR и вместо него будет использоваться &quot;$ GIT_COMMON_DIR / shallow&quot;.</target>
        </trans-unit>
        <trans-unit id="44c5e44a5b0e8e88feba4a9ab4b3411e28cf0521" translate="yes" xml:space="preserve">
          <source>This is similar to the previous mode, but lets you use the interactive interface to show the &quot;diff&quot; output and choose which hunks to use in the result. See below for the description of &lt;code&gt;--patch&lt;/code&gt; option.</source>
          <target state="translated">Этот режим аналогичен предыдущему, но позволяет использовать интерактивный интерфейс для отображения вывода &quot;diff&quot; и выбора блоков для использования в результате. См. Ниже описание параметра &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4054020991b3f63ee43241d99b871a192e5f7888" translate="yes" xml:space="preserve">
          <source>This is synonymous to the previous form. If &amp;lt;commit&amp;gt; on one side is omitted, it will have the same effect as using HEAD instead.</source>
          <target state="translated">Это синоним предыдущей формы. Если &amp;lt;commit&amp;gt; на одной стороне опущен, это будет иметь тот же эффект, что и использование вместо него HEAD.</target>
        </trans-unit>
        <trans-unit id="75478eb48b06b2098532610f52369c54c5a35766" translate="yes" xml:space="preserve">
          <source>This is the Git native format and is &lt;code&gt;&amp;lt;time&amp;gt; SP &amp;lt;offutc&amp;gt;&lt;/code&gt;. It is also fast-import&amp;rsquo;s default format, if --date-format was not specified.</source>
          <target state="translated">Это собственный формат Git, это &lt;code&gt;&amp;lt;time&amp;gt; SP &amp;lt;offutc&amp;gt;&lt;/code&gt; . Это также формат по умолчанию для быстрого импорта, если не указан --date-format.</target>
        </trans-unit>
        <trans-unit id="6bd79ba5c8340a61cc49527317aae865e2230698" translate="yes" xml:space="preserve">
          <source>This is the filter for performing the commit. If this filter is specified, it will be called instead of the &lt;code&gt;git commit-tree&lt;/code&gt; command, with arguments of the form &quot;&amp;lt;TREE_ID&amp;gt; [(-p &amp;lt;PARENT_COMMIT_ID&amp;gt;)&amp;hellip;​]&quot; and the log message on stdin. The commit id is expected on stdout.</source>
          <target state="translated">Это фильтр для выполнения фиксации. Если этот фильтр указан, он будет вызываться вместо команды &lt;code&gt;git commit-tree&lt;/code&gt; с аргументами вида &amp;laquo;&amp;lt;TREE_ID&amp;gt; [(-p &amp;lt;PARENT_COMMIT_ID&amp;gt;)&amp;hellip;]&amp;raquo; и сообщением журнала на stdin. Идентификатор фиксации ожидается на stdout.</target>
        </trans-unit>
        <trans-unit id="ab02ed108f018595c9832dcfce47c6a593278667" translate="yes" xml:space="preserve">
          <source>This is the filter for rewriting tag names. When passed, it will be called for every tag ref that points to a rewritten object (or to a tag object which points to a rewritten object). The original tag name is passed via standard input, and the new tag name is expected on standard output.</source>
          <target state="translated">Это фильтр для перезаписи имен тегов.При передаче,он будет вызываться для каждого тега ref,который указывает на переписанный объект (или на объект тега,который указывает на переписанный объект).Оригинальное имя тега передается через стандартный вход,а новое имя тега ожидается на стандартном выходе.</target>
        </trans-unit>
        <trans-unit id="ec46b5cef98509f43f653471ea24de2e709b0b36" translate="yes" xml:space="preserve">
          <source>This is the filter for rewriting the commit messages. The argument is evaluated in the shell with the original commit message on standard input; its standard output is used as the new commit message.</source>
          <target state="translated">Это фильтр для переписывания сообщений о фиксации.Аргумент вычисляется в оболочке с исходным сообщением фиксации на стандартном входе;его стандартный вывод используется в качестве нового сообщения фиксации.</target>
        </trans-unit>
        <trans-unit id="baaf77805fbcb910ae11f451b39d9e38daaa6669" translate="yes" xml:space="preserve">
          <source>This is the filter for rewriting the commit&amp;rsquo;s parent list. It will receive the parent string on stdin and shall output the new parent string on stdout. The parent string is in the format described in &lt;a href=&quot;git-commit-tree&quot;&gt;git-commit-tree[1]&lt;/a&gt;: empty for the initial commit, &quot;-p parent&quot; for a normal commit and &quot;-p parent1 -p parent2 -p parent3 &amp;hellip;​&quot; for a merge commit.</source>
          <target state="translated">Это фильтр для перезаписи родительского списка коммита. Он получит родительскую строку на stdin и выведет новую родительскую строку на stdout. Родительская строка имеет формат, описанный в &lt;a href=&quot;git-commit-tree&quot;&gt;git-commit-tree [1]&lt;/a&gt; : пусто для начальной фиксации, &amp;laquo;-p parent&amp;raquo; для нормальной фиксации и &amp;laquo;-p parent1 -p parent2 -p parent3&amp;hellip;&amp;raquo; для слияния совершить.</target>
        </trans-unit>
        <trans-unit id="ed6796eee1e84719fc79503aec05a2585b0a98ee" translate="yes" xml:space="preserve">
          <source>This is the filter for rewriting the index. It is similar to the tree filter but does not check out the tree, which makes it much faster. Frequently used with &lt;code&gt;git rm --cached
--ignore-unmatch ...&lt;/code&gt;, see EXAMPLES below. For hairy cases, see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;.</source>
          <target state="translated">Это фильтр для перезаписи индекса. Он похож на фильтр дерева, но не проверяет дерево, что делает его намного быстрее. Часто используется с &lt;code&gt;git rm --cached --ignore-unmatch ...&lt;/code&gt; , см. ПРИМЕРЫ ниже. Для сложных случаев см. &lt;a href=&quot;git-update-index&quot;&gt;Git-update-index [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84464b13412e29584cb64fc663c003212ddd470c" translate="yes" xml:space="preserve">
          <source>This is the filter for rewriting the tree and its contents. The argument is evaluated in shell with the working directory set to the root of the checked out tree. The new tree is then used as-is (new files are auto-added, disappeared files are auto-removed - neither .gitignore files nor any other ignore rules &lt;strong&gt;HAVE ANY EFFECT&lt;/strong&gt;!).</source>
          <target state="translated">Это фильтр для перезаписи дерева и его содержимого. Аргумент оценивается в оболочке с рабочим каталогом, установленным в корень извлеченного дерева. Новое дерево затем используется как есть (новые файлы добавляются автоматически, исчезли файлы автоматически удаляются - ни .gitignore файлы , ни любые другие игнорируют правила &lt;strong&gt;имеют никакого эффекта&lt;/strong&gt; !).</target>
        </trans-unit>
        <trans-unit id="ac6e8f6a01875184858c8585102e8f6aa273aee7" translate="yes" xml:space="preserve">
          <source>This is the format defined by the initial version of git, including but not limited to the format of the repository directory, the repository configuration file, and the object and ref storage. Specifying the complete behavior of git is beyond the scope of this document.</source>
          <target state="translated">Это формат,определяемый исходной версией git'а,включая,но не ограничиваясь форматом директории репозитория,файла конфигурации репозитория,а также объекта и хранилища ссылок.Указание полного описания поведения git'а выходит за рамки этого документа.</target>
        </trans-unit>
        <trans-unit id="53064adeec7c86c12f0de7129be2018180dbdde8" translate="yes" xml:space="preserve">
          <source>This is the instruction format to copy a byte range from the source object. It encodes the offset to copy from and the number of bytes to copy. Offset and size are in little-endian order.</source>
          <target state="translated">Это формат команды для копирования диапазона байт из исходного объекта.Он кодирует смещение для копирования и количество копируемых байтов.Смещение и размер расположены в порядке младших значений.</target>
        </trans-unit>
        <trans-unit id="7c56810b4cb2a212f096564a869dc50ed111eb3c" translate="yes" xml:space="preserve">
          <source>This is the instruction reserved for future expansion.</source>
          <target state="translated">Это инструкция,зарезервированная для будущего расширения.</target>
        </trans-unit>
        <trans-unit id="2ac15a186ae4c1add6605d649b034295db99bef1" translate="yes" xml:space="preserve">
          <source>This is the instruction to construct target object without the base object. The following data is appended to the target object. The first seven bits of the first octet determines the size of data in bytes. The size must be non-zero.</source>
          <target state="translated">Это инструкция для построения целевого объекта без базового объекта.К целевому объекту добавляются следующие данные.Первые семь бит первого октета определяют размер данных в байтах.Размер должен быть ненулевым.</target>
        </trans-unit>
        <trans-unit id="109ca8035c1b87bb820c08a28a9de7b34fde1bb6" translate="yes" xml:space="preserve">
          <source>This is the opposite of &lt;code&gt;ours&lt;/code&gt;; note that, unlike &lt;code&gt;ours&lt;/code&gt;, there is no &lt;code&gt;theirs&lt;/code&gt; merge strategy to confuse this merge option with.</source>
          <target state="translated">Это противоположно &lt;code&gt;ours&lt;/code&gt; ; обратите внимание, что, в отличие от &lt;code&gt;ours&lt;/code&gt; , не существует &lt;code&gt;theirs&lt;/code&gt; стратегии слияния, с которой можно было бы спутать этот вариант слияния.</target>
        </trans-unit>
        <trans-unit id="a470bc42a7932d13fef06a087064186d12eef547" translate="yes" xml:space="preserve">
          <source>This is the preferred method.</source>
          <target state="translated">Это предпочтительный метод.</target>
        </trans-unit>
        <trans-unit id="d5ae5cf60359e7831f40d915d7567f63dc115a19" translate="yes" xml:space="preserve">
          <source>This is the same &lt;code&gt;git read-tree&lt;/code&gt; command we have already seen, but it takes three trees, unlike previous examples. This reads the contents of each tree into different &lt;code&gt;stage&lt;/code&gt; in the index file (the first tree goes to stage 1, the second to stage 2, etc.). After reading three trees into three stages, the paths that are the same in all three stages are &lt;code&gt;collapsed&lt;/code&gt; into stage 0. Also paths that are the same in two of three stages are collapsed into stage 0, taking the SHA-1 from either stage 2 or stage 3, whichever is different from stage 1 (i.e. only one side changed from the common ancestor).</source>
          <target state="translated">Это та же команда &lt;code&gt;git read-tree&lt;/code&gt; ,которую мы уже видели, но для нее требуется три дерева, в отличие от предыдущих примеров. Это считывает содержимое каждого дерева на разных &lt;code&gt;stage&lt;/code&gt; индексного файла (первое дерево переходит на этап 1, второе - на этап 2 и т. Д.). После считывания трех деревьев на три этапа пути, одинаковые на всех трех этапах, &lt;code&gt;collapsed&lt;/code&gt; в этап 0. Также пути, одинаковые на двух из трех этапов, сворачиваются в этап 0, принимая SHA-1 из любого этапа 2. или стадия 3, в зависимости от того, что отличается от стадии 1 (т. е. только одна сторона изменилась от общего предка).</target>
        </trans-unit>
        <trans-unit id="d9a78198f4c718b4aad0f141375d5823cd8e39e3" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;gitdir&lt;/code&gt; except that matching is done case-insensitively (e.g. on case-insensitive file systems)</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;gitdir&lt;/code&gt; , за исключением того, что сопоставление выполняется без учета регистра (например, в файловых системах без учета регистра)</target>
        </trans-unit>
        <trans-unit id="3d8eaa3e252f616f4794342341d2f4ec065a52c7" translate="yes" xml:space="preserve">
          <source>This is the standard email format as described by RFC 2822.</source>
          <target state="translated">Это стандартный формат электронной почты,как описано в RFC 2822.</target>
        </trans-unit>
        <trans-unit id="b1825adadaae31865a7ba56f02eeaa58bb1a595e" translate="yes" xml:space="preserve">
          <source>This is the standard helper program to use with &lt;code&gt;git merge-index&lt;/code&gt; to resolve a merge after the trivial merge done with &lt;code&gt;git read-tree -m&lt;/code&gt;.</source>
          <target state="translated">Это стандартная вспомогательная программа для использования с &lt;code&gt;git merge-index&lt;/code&gt; для разрешения слияния после тривиального слияния, выполненного с помощью &lt;code&gt;git read-tree -m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4605ef17a6ae238fb7ad1359ce2fc3809a170d2" translate="yes" xml:space="preserve">
          <source>This is the state of the index file and the working file after &lt;code&gt;git merge&lt;/code&gt; returns control back to you, leaving the conflicting merge for you to resolve. Notice that the path &lt;code&gt;hello&lt;/code&gt; is still unmerged, and what you see with &lt;code&gt;git diff&lt;/code&gt; at this point is differences since stage 2 (i.e. your version).</source>
          <target state="translated">Это состояние индексного файла и рабочего файла после того, как &lt;code&gt;git merge&lt;/code&gt; возвращает вам управление, оставляя вам решать конфликтующее слияние. Обратите внимание, что путь &lt;code&gt;hello&lt;/code&gt; все еще не объединен, и то, что вы видите с помощью &lt;code&gt;git diff&lt;/code&gt; в этот момент, отличается от этапа 2 (т.е. вашей версии).</target>
        </trans-unit>
        <trans-unit id="885013fc19184ff3f87757857452f6badc7e664c" translate="yes" xml:space="preserve">
          <source>This is to emulate &lt;code&gt;git fetch&lt;/code&gt; run on the &lt;code&gt;mothership&lt;/code&gt; using &lt;code&gt;git
push&lt;/code&gt; that is run in the opposite direction in order to integrate the work done on &lt;code&gt;satellite&lt;/code&gt;, and is often necessary when you can only make connection in one way (i.e. satellite can ssh into mothership but mothership cannot initiate connection to satellite because the latter is behind a firewall or does not run sshd).</source>
          <target state="translated">Это &lt;code&gt;git fetch&lt;/code&gt; запуск git fetch на &lt;code&gt;mothership&lt;/code&gt; с помощью &lt;code&gt;git push&lt;/code&gt; который запускается в противоположном направлении, чтобы интегрировать работу, выполняемую на &lt;code&gt;satellite&lt;/code&gt; , и часто необходимо, когда вы можете установить соединение только одним способом (например, спутник может ssh в материнский корабль но Mothership не может инициировать соединение со спутником, потому что последний находится за брандмауэром или не запускает sshd).</target>
        </trans-unit>
        <trans-unit id="a0fbffa526980249cc459b3697ae082d2fb16d12" translate="yes" xml:space="preserve">
          <source>This is to view the changes between two arbitrary &amp;lt;commit&amp;gt;.</source>
          <target state="translated">Это для просмотра изменений между двумя произвольными &amp;lt;commit&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="2ccd3734f230a6bccf87e0841ef19acfd1763ec7" translate="yes" xml:space="preserve">
          <source>This is used if &lt;code&gt;gitcvs.usecrlfattr&lt;/code&gt; does not resolve the correct &lt;code&gt;-kb&lt;/code&gt; mode to use. If true, all unresolved files are sent to the client in mode &lt;code&gt;-kb&lt;/code&gt;. This causes the client to treat them as binary files, which suppresses any newline munging it otherwise might do. Alternatively, if it is set to &quot;guess&quot;, then the contents of the file are examined to decide if it is binary, similar to &lt;code&gt;core.autocrlf&lt;/code&gt;.</source>
          <target state="translated">Это используется, если &lt;code&gt;gitcvs.usecrlfattr&lt;/code&gt; не определяет правильный режим &lt;code&gt;-kb&lt;/code&gt; для использования. Если это правда, все неразрешенные файлы отправляются клиенту в режиме &lt;code&gt;-kb&lt;/code&gt; . Это заставляет клиента рассматривать их как двоичные файлы, что подавляет любое изменение новой строки, которое в противном случае могло бы произойти. В качестве альтернативы, если он установлен на &amp;laquo;предположение&amp;raquo;, тогда содержимое файла проверяется, чтобы решить, является ли он двоичным, аналогично &lt;code&gt;core.autocrlf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="414b7e001678a67515e35206eca5b23ff617a9b6" translate="yes" xml:space="preserve">
          <source>This is used to avoid unnecessary false hits when &lt;code&gt;git diff-files&lt;/code&gt; is run after &lt;code&gt;git read-tree&lt;/code&gt;.</source>
          <target state="translated">Это используется, чтобы избежать ненужных ложных совпадений, когда &lt;code&gt;git diff-files&lt;/code&gt; запускается после &lt;code&gt;git read-tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1756049aad8be96bbdbe029ae5b31f810c9534b0" translate="yes" xml:space="preserve">
          <source>This is used to imply --all-progress whenever progress display is activated. Unlike --all-progress this flag doesn&amp;rsquo;t actually force any progress display by itself.</source>
          <target state="translated">Это используется для обозначения --all-progress всякий раз, когда активируется отображение прогресса. В отличие от --all-progress, этот флаг сам по себе не вызывает никакого отображения прогресса.</target>
        </trans-unit>
        <trans-unit id="fa389947911fb92b7cae5947eac62679e5095362" translate="yes" xml:space="preserve">
          <source>This is used to reorder the filepairs according to the user&amp;rsquo;s (or project&amp;rsquo;s) taste, and is controlled by the -O option to the &lt;code&gt;git diff-*&lt;/code&gt; commands.</source>
          <target state="translated">Это используется для изменения порядка файловых пар в соответствии с предпочтениями пользователя (или проекта) и управляется параметром -O команд &lt;code&gt;git diff-*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4698ff07eb1e8e63a5c87a4e409437aeb77e0b4" translate="yes" xml:space="preserve">
          <source>This is useful because it makes it easy to choose a good commit to test when you want to avoid to test some of them for some reason (they may not compile for example).</source>
          <target state="translated">Это полезно,так как позволяет легко выбрать хороший коммит для тестирования,когда вы хотите избежать тестирования некоторых из них по каким-то причинам (они могут не компилироваться,например).</target>
        </trans-unit>
        <trans-unit id="8b37ac2c46d9c49011957ba8051eb182f97c074f" translate="yes" xml:space="preserve">
          <source>This is useful if F and G were flawed in some way, or should not be part of topicA. Note that the argument to --onto and the &amp;lt;upstream&amp;gt; parameter can be any valid commit-ish.</source>
          <target state="translated">Это полезно, если F и G были некорректны или не должны быть частью topicA. Обратите внимание, что аргумент --onto и параметр &amp;lt;upstream&amp;gt; могут быть любым допустимым типом фиксации.</target>
        </trans-unit>
        <trans-unit id="5add7a300e88f092e0ef1b21363222f3ece44ad7" translate="yes" xml:space="preserve">
          <source>This is useful if remote side is git:// server accessed over some tunnel.</source>
          <target state="translated">Это полезно,если удалённая сторона имеет доступ к git://серверу через некоторый туннель.</target>
        </trans-unit>
        <trans-unit id="d562e00428aacff2db14167eb0ecbc7ee7ea6370" translate="yes" xml:space="preserve">
          <source>This is useful if the branch on which you ran &lt;code&gt;git stash push&lt;/code&gt; has changed enough that &lt;code&gt;git stash apply&lt;/code&gt; fails due to conflicts. Since the stash entry is applied on top of the commit that was HEAD at the time &lt;code&gt;git stash&lt;/code&gt; was run, it restores the originally stashed state with no conflicts.</source>
          <target state="translated">Это полезно, если ветка, в которой вы запускали &lt;code&gt;git stash push&lt;/code&gt; , изменилась настолько, что применение &lt;code&gt;git stash apply&lt;/code&gt; не удалось из-за конфликтов. Поскольку запись в stash применяется поверх фиксации, которая была HEAD во время запуска &lt;code&gt;git stash&lt;/code&gt; , она восстанавливает исходное состояние без конфликтов.</target>
        </trans-unit>
        <trans-unit id="30fcffaf45041b08cc97af9d1fa76a9ba0b33fa3" translate="yes" xml:space="preserve">
          <source>This is useful if you want to begin your message in a discussion thread with comments and suggestions on the message you are responding to, and to conclude it with a patch submission, separating the discussion and the beginning of the proposed commit log message with a scissors line.</source>
          <target state="translated">Это полезно,если вы хотите начать своё сообщение в обсуждении с комментариев и предложений по сообщению,на которое вы отвечаете,и завершить его отправкой заплатки,отделив обсуждение и начало предложенного сообщения журнала фиксации строкой с ножницами.</target>
        </trans-unit>
        <trans-unit id="f93051fa336df47ab5f519702120e3efac9cd277" translate="yes" xml:space="preserve">
          <source>This is useful on systems where lstat() calls are very slow, such as CIFS/Microsoft Windows.</source>
          <target state="translated">Это полезно на системах,где вызовы lstat()очень медленные,например,CIFS/Microsoft Windows.</target>
        </trans-unit>
        <trans-unit id="6b9439a13a0f6c5a19da94d77f92d4a1ee7e5be6" translate="yes" xml:space="preserve">
          <source>This is useful when cherry-picking more than one commits' effect to your index in a row.</source>
          <target state="translated">Это полезно,когда вишня выбирает несколько коммитов в вашем индексе подряд.</target>
        </trans-unit>
        <trans-unit id="ccb566ca825959d19feaead9d9434de1315351a7" translate="yes" xml:space="preserve">
          <source>This is useful when reverting more than one commits' effect to your index in a row.</source>
          <target state="translated">Это полезно при возвращении эффекта нескольких коммитов к вашему индексу подряд.</target>
        </trans-unit>
        <trans-unit id="a6b3b2938023c6383383af34a5efd6428edcf530" translate="yes" xml:space="preserve">
          <source>This is useful when topicB does not depend on topicA.</source>
          <target state="translated">Это полезно,когда topicB не зависит от topicA.</target>
        </trans-unit>
        <trans-unit id="804a7dc8302db74d34102cb378738f0047ef1777" translate="yes" xml:space="preserve">
          <source>This is usually not what an end user wants to run directly. See &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; instead.</source>
          <target state="translated">Обычно это не то, что конечный пользователь хочет запускать напрямую. См. Вместо этого &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81deedcd021f1608f9f91f70a15e2349e22a39d7" translate="yes" xml:space="preserve">
          <source>This is what &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; generates. Most headers and MIME formatting are ignored.</source>
          <target state="translated">Это то, что генерирует &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; . Большинство заголовков и форматирования MIME игнорируются.</target>
        </trans-unit>
        <trans-unit id="ca6a5c0a1684e36bc50c3e68cfccb9e6ebf59a4b" translate="yes" xml:space="preserve">
          <source>This is what causes Git to track the remote&amp;rsquo;s branches; you may modify or delete these configuration options by editing &lt;code&gt;.git/config&lt;/code&gt; with a text editor. (See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.)</source>
          <target state="translated">Это то, что заставляет Git отслеживать ветки пульта ДУ; вы можете изменить или удалить эти параметры конфигурации, отредактировав &lt;code&gt;.git/config&lt;/code&gt; в текстовом редакторе. (Подробности см. В разделе &amp;laquo;КОНФИГУРАЦИОННЫЙ ФАЙЛ&amp;raquo; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="e49010e0ec73f433e7f19c2db7cbfd7081066732" translate="yes" xml:space="preserve">
          <source>This is why it is a bad idea to just chose the next best unskipped bisection commit when the first one has been skipped.</source>
          <target state="translated">Вот почему плохая идея-просто выбрать следующий лучший пропущенный бисексуальный коммит,когда первый пропущен.</target>
        </trans-unit>
        <trans-unit id="51722bee7db4c41cee14b92ba092db0dce132718" translate="yes" xml:space="preserve">
          <source>This leaves a copy of &lt;code&gt;next&lt;/code&gt; temporarily in FETCH_HEAD, but does not update any remote-tracking branches. Using remote-tracking branches, the same can be done by invoking fetch and merge:</source>
          <target state="translated">Это оставляет копию &lt;code&gt;next&lt;/code&gt; временно в FETCH_HEAD, но не обновляет ветки удаленного отслеживания. Используя ветки удаленного отслеживания, то же самое можно сделать, вызвав выборку и слияние:</target>
        </trans-unit>
        <trans-unit id="8d3c273456c213d2f0eef245650834ea18d26a16" translate="yes" xml:space="preserve">
          <source>This lets you choose one path out of a &lt;code&gt;status&lt;/code&gt; like selection. After choosing the path, it presents the diff between the index and the working tree file and asks you if you want to stage the change of each hunk. You can select one of the following options and type return:</source>
          <target state="translated">Это позволяет вам выбрать один путь из &lt;code&gt;status&lt;/code&gt; такого как выбор. После выбора пути он представляет разницу между индексом и файлом рабочего дерева и спрашивает вас, хотите ли вы выполнить изменение каждого фрагмента. Вы можете выбрать один из следующих вариантов и ввести return:</target>
        </trans-unit>
        <trans-unit id="060b46ed6fd409fbf360157d2f3c13ff3dcd2220" translate="yes" xml:space="preserve">
          <source>This lets you quit without do cleaning.</source>
          <target state="translated">Это позволит тебе уйти без уборки.</target>
        </trans-unit>
        <trans-unit id="aa41c7db3702739cc1b230bda0b83b675d7b2671" translate="yes" xml:space="preserve">
          <source>This lets you review what will be committed (i.e. between HEAD and index).</source>
          <target state="translated">Это позволяет вам просмотреть,что будет зафиксировано (т.е.между HEAD и индексом).</target>
        </trans-unit>
        <trans-unit id="ca3fd0a1256c2900c49910f1d037599eb216d4ff" translate="yes" xml:space="preserve">
          <source>This list should contain the URI of gitweb&amp;rsquo;s standard stylesheet. The default URI of gitweb stylesheet can be set at build time using the &lt;code&gt;GITWEB_CSS&lt;/code&gt; makefile variable. Its default value is &lt;code&gt;static/gitweb.css&lt;/code&gt; (or &lt;code&gt;static/gitweb.min.css&lt;/code&gt; if the &lt;code&gt;CSSMIN&lt;/code&gt; variable is defined, i.e. if CSS minifier is used during build).</source>
          <target state="translated">Этот список должен содержать URI стандартной таблицы стилей gitweb. URI по умолчанию для таблицы стилей gitweb можно установить во время сборки с помощью переменной &lt;code&gt;GITWEB_CSS&lt;/code&gt; makefile. Его значение по умолчанию - &lt;code&gt;static/gitweb.css&lt;/code&gt; (или &lt;code&gt;static/gitweb.min.css&lt;/code&gt; , если переменная &lt;code&gt;CSSMIN&lt;/code&gt; определена, т. Е. Если во время сборки используется минификатор CSS).</target>
        </trans-unit>
        <trans-unit id="87db555786bcad0bd342abfeced795a76cdcb852" translate="yes" xml:space="preserve">
          <source>This lists the commits reachable from the previous version of the &lt;code&gt;master&lt;/code&gt; branch head. This syntax can be used with any Git command that accepts a commit, not just with &lt;code&gt;git log&lt;/code&gt;. Some other examples:</source>
          <target state="translated">Здесь перечислены коммиты, доступные из предыдущей версии заголовка &lt;code&gt;master&lt;/code&gt; ветки. Этот синтаксис можно использовать с любой командой Git, которая принимает фиксацию, а не только с &lt;code&gt;git log&lt;/code&gt; . Еще несколько примеров:</target>
        </trans-unit>
        <trans-unit id="9d19ff56a7106ea2437dd5210773dc60fd2828eb" translate="yes" xml:space="preserve">
          <source>This looks up the &amp;lt;file&amp;gt;(s) in the index and, if there are any merge entries, passes the SHA-1 hash for those files as arguments 1, 2, 3 (empty argument if no file), and &amp;lt;file&amp;gt; as argument 4. File modes for the three files are passed as arguments 5, 6 and 7.</source>
          <target state="translated">Это ищет &amp;lt;файл&amp;gt; (ы) в индексе и, если есть какие-либо записи слияния, передает хэш SHA-1 для этих файлов в качестве аргументов 1, 2, 3 (пустой аргумент, если файла нет) и &amp;lt;файл&amp;gt; в качестве аргумента 4. Режимы файлов для трех файлов передаются как аргументы 5, 6 и 7.</target>
        </trans-unit>
        <trans-unit id="6790f45ac4b6ed7e77775e3a5dfba68fc876105d" translate="yes" xml:space="preserve">
          <source>This makes a commit that records the modification to &lt;code&gt;Makefile&lt;/code&gt;. The changes staged for &lt;code&gt;hello.c&lt;/code&gt; and &lt;code&gt;hello.h&lt;/code&gt; are not included in the resulting commit. However, their changes are not lost &amp;mdash; they are still staged and merely held back. After the above sequence, if you do:</source>
          <target state="translated">Это делает фиксацию, которая записывает изменения в &lt;code&gt;Makefile&lt;/code&gt; . Изменения в постановку на &lt;code&gt;hello.c&lt;/code&gt; и &lt;code&gt;hello.h&lt;/code&gt; не включены в результирующей фиксации. Однако их изменения не потеряны - они все еще инсценируются и просто сдерживаются. После указанной выше последовательности, если вы выполните:</target>
        </trans-unit>
        <trans-unit id="c23316330a20f8d3e00d74e273bc6ee3d02efbd7" translate="yes" xml:space="preserve">
          <source>This makes a new branch called &lt;code&gt;other&lt;/code&gt; from &lt;code&gt;master~5..master&lt;/code&gt; (i.e. if &lt;code&gt;master&lt;/code&gt; has linear history, it will take the last 5 commits).</source>
          <target state="translated">Это создает новую ветку с именем &lt;code&gt;other&lt;/code&gt; от &lt;code&gt;master~5..master&lt;/code&gt; (то есть, если &lt;code&gt;master&lt;/code&gt; имеет линейную историю, он примет последние 5 коммитов).</target>
        </trans-unit>
        <trans-unit id="b0ade35fb815795f98a8b6354752858acd9e1cfa" translate="yes" xml:space="preserve">
          <source>This makes sure that only the key/value pair for kernel.org is replaced.</source>
          <target state="translated">Это гарантирует,что будет заменена только пара ключ/значение для kernel.org.</target>
        </trans-unit>
        <trans-unit id="2d726c732ca5f310160366fecc16a8d1ede4f94c" translate="yes" xml:space="preserve">
          <source>This manual describes the convention used throughout Git CLI.</source>
          <target state="translated">В данном руководстве описана конвенция,используемая в Git CLI.</target>
        </trans-unit>
        <trans-unit id="40982f6c18ca56554ec412b18ace4f012d6c51fa" translate="yes" xml:space="preserve">
          <source>This manual is designed to be readable by someone with basic UNIX command-line skills, but no previous knowledge of Git.</source>
          <target state="translated">Данное руководство предназначено для того,чтобы его мог прочитать человек,обладающий базовыми навыками работы в командной строке UNIX,но не имеющий предварительных знаний о Git'е.</target>
        </trans-unit>
        <trans-unit id="1b4c4400f56ace6af78ca50c928fe7f5cfe13be6" translate="yes" xml:space="preserve">
          <source>This manual page describes only the most frequently used options.</source>
          <target state="translated">На этой странице руководства описаны только наиболее часто используемые опции.</target>
        </trans-unit>
        <trans-unit id="c74c8f67468f674a4bbb6cadbdb326520214aafb" translate="yes" xml:space="preserve">
          <source>This manual page describes only the most frequently used options. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for a complete list.</source>
          <target state="translated">На этой странице руководства описаны только наиболее часто используемые параметры. См. Полный список в &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78fbc8bf0be13ddc4f9bce27ee4dc19783022a2b" translate="yes" xml:space="preserve">
          <source>This means &quot;show everything that is reachable from either one, but exclude anything that is reachable from both of them&quot;.</source>
          <target state="translated">Это означает &quot;показать все,что достижимо с любого из них,но исключить все,что достижимо с обоих&quot;.</target>
        </trans-unit>
        <trans-unit id="9f4c07f14694007bf95dcdb96bbfc3991db01ef3" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;git reset &amp;lt;pathspec&amp;gt;&lt;/code&gt; is the opposite of &lt;code&gt;git add
&amp;lt;pathspec&amp;gt;&lt;/code&gt;. This command is equivalent to &lt;code&gt;git restore [--source=&amp;lt;tree-ish&amp;gt;] --staged &amp;lt;pathspec&amp;gt;...&lt;/code&gt;.</source>
          <target state="translated">Это означает, что &lt;code&gt;git reset &amp;lt;pathspec&amp;gt;&lt;/code&gt; является противоположностью &lt;code&gt;git add &amp;lt;pathspec&amp;gt;&lt;/code&gt; . Эта команда эквивалентна &lt;code&gt;git restore [--source=&amp;lt;tree-ish&amp;gt;] --staged &amp;lt;pathspec&amp;gt;...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="138908f8222de2b4daf75b57b97dc896b1845167" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;git reset -p&lt;/code&gt; is the opposite of &lt;code&gt;git add -p&lt;/code&gt;, i.e. you can use it to selectively reset hunks. See the &amp;ldquo;Interactive Mode&amp;rdquo; section of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; to learn how to operate the &lt;code&gt;--patch&lt;/code&gt; mode.</source>
          <target state="translated">Это означает, что &lt;code&gt;git reset -p&lt;/code&gt; противоположен &lt;code&gt;git add -p&lt;/code&gt; , то есть вы можете использовать его для выборочного сброса фрагментов. См. Раздел &amp;laquo;Интерактивный режим&amp;raquo; в &lt;a href=&quot;git-add&quot;&gt;git-add [1],&lt;/a&gt; чтобы узнать, как работать в режиме &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c231d7cedbd657513f91f60869397c2bef2f37d" translate="yes" xml:space="preserve">
          <source>This means that it is often &quot;cheaper&quot; if QA people or end users can do it.</source>
          <target state="translated">Это означает,что часто &quot;дешевле&quot;,если это могут сделать QA люди или конечные пользователи.</target>
        </trans-unit>
        <trans-unit id="0ff1dc064f7e1f4d0872498ac05a21ade168adc9" translate="yes" xml:space="preserve">
          <source>This means that test suites are good to prevent some bugs from being committed and they are also quite good to tell you that you have some bugs. But they are not so good to tell you where some bugs have been introduced. To tell you that efficiently, git bisect is needed.</source>
          <target state="translated">Это означает,что тестовые наборы хороши,чтобы предотвратить некоторые ошибки от совершения,и они также довольно хорошо,чтобы сказать вам,что у вас есть некоторые ошибки.Но они не так хороши,чтобы сказать вам,где некоторые ошибки были введены.Чтобы сказать вам,что эффективно,git-бисект необходим.</target>
        </trans-unit>
        <trans-unit id="388b9571e5f1264e3be3a08ce2827efedebdef31" translate="yes" xml:space="preserve">
          <source>This means that the best bisection commits are the commits where the following function is maximum:</source>
          <target state="translated">Это означает,что лучшими бисекционными коммитами являются коммиты,где следующая функция является максимальной:</target>
        </trans-unit>
        <trans-unit id="597961da0012b9cd684792dccd1c7471e5687e9f" translate="yes" xml:space="preserve">
          <source>This means that the trimmed &amp;lt;token&amp;gt; and &amp;lt;value&amp;gt; will be separated by &lt;code&gt;': '&lt;/code&gt; (one colon followed by one space).</source>
          <target state="translated">Это означает, что обрезанные &amp;lt;token&amp;gt; и &amp;lt;value&amp;gt; будут разделены знаком &lt;code&gt;': '&lt;/code&gt; (одно двоеточие, за которым следует один пробел).</target>
        </trans-unit>
        <trans-unit id="38ea5711a664516b71bd0eeea932fd8ac8d7c412" translate="yes" xml:space="preserve">
          <source>This means that we get rid of the uninteresting commits in the DAG.</source>
          <target state="translated">Это значит,что мы избавляемся от неинтересных коммитов в DAG.</target>
        </trans-unit>
        <trans-unit id="2454a8b57cbe01726a67b284a671cd468ecfe3a7" translate="yes" xml:space="preserve">
          <source>This means that you can do</source>
          <target state="translated">Это значит,что ты можешь сделать</target>
        </trans-unit>
        <trans-unit id="4bfb7f09c9f4811c3630d40fb2caf5f3310e564e" translate="yes" xml:space="preserve">
          <source>This means that you can use &lt;code&gt;git checkout -p&lt;/code&gt; to selectively discard edits from your current working tree. See the &amp;ldquo;Interactive Mode&amp;rdquo; section of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; to learn how to operate the &lt;code&gt;--patch&lt;/code&gt; mode.</source>
          <target state="translated">Это означает, что вы можете использовать &lt;code&gt;git checkout -p&lt;/code&gt; для выборочной отмены изменений из текущего рабочего дерева. См. Раздел &amp;laquo;Интерактивный режим&amp;raquo; в &lt;a href=&quot;git-add&quot;&gt;git-add [1],&lt;/a&gt; чтобы узнать, как работать в режиме &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2db1fd51873ef2a0afca87fc61387f5a8891e2a5" translate="yes" xml:space="preserve">
          <source>This merges the changes from Bob&amp;rsquo;s &quot;master&quot; branch into Alice&amp;rsquo;s current branch. If Alice has made her own changes in the meantime, then she may need to manually fix any conflicts.</source>
          <target state="translated">Это объединит изменения из &amp;laquo;главной&amp;raquo; ветви Боба в текущую ветвь Алисы. Если Алиса тем временем внесла свои собственные изменения, возможно, ей придется вручную исправить любые конфликты.</target>
        </trans-unit>
        <trans-unit id="cff3569519105ed116111cf73b4d626e89a75fc2" translate="yes" xml:space="preserve">
          <source>This merges the file listing in the directory cache index with the actual working directory list, and shows different combinations of the two.</source>
          <target state="translated">Это объединяет список файлов в кэш-индексе каталогов с реальным списком рабочих каталогов,и показывает различные комбинации этих файлов.</target>
        </trans-unit>
        <trans-unit id="e550f0e6cba8953c27a9638529775caa0627f8ed" translate="yes" xml:space="preserve">
          <source>This might not be what you expect, i.e. you want to prune remote &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, but also explicitly fetch tags from it, so when you fetch from it you delete all your local tags, most of which may not have come from the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; remote in the first place.</source>
          <target state="translated">Это может быть не то, что вы ожидаете, то есть вы хотите удалить удаленный &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; , но также явно извлекаете из него теги, поэтому, когда вы извлекаете из него, вы удаляете все свои локальные теги, большинство из которых, возможно, пришли не из &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; Пульт в первую очередь.</target>
        </trans-unit>
        <trans-unit id="c165a1bf0e23a30271149315bd9959512cec8cbc" translate="yes" xml:space="preserve">
          <source>This mode differs from the default in one point: always follow all parents of a merge, even if it is TREESAME to one of them. Even if more than one side of the merge has commits that are included, this does not imply that the merge itself is! In the example, we get</source>
          <target state="translated">Этот режим отличается от режима по умолчанию в одной точке:всегда следуйте за всеми родителями слияния,даже если это TREESAME для одного из них.Даже если несколько сторон слияния имеют включённые коммиты,это не означает,что само слияние является таковым! В примере мы получаем</target>
        </trans-unit>
        <trans-unit id="06118fd3f101fa40f7bcb707d4305013c9a74e7d" translate="yes" xml:space="preserve">
          <source>This mode has become the default in Git 2.0.</source>
          <target state="translated">Этот режим стал стандартным в Git 2.0.</target>
        </trans-unit>
        <trans-unit id="9c35450959e8c97cb733c60205966cdb68e529c7" translate="yes" xml:space="preserve">
          <source>This mode is designed for repositories with very large indexes, and aims at reducing the time it takes to repeatedly write these indexes.</source>
          <target state="translated">Этот режим предназначен для репозиториев с очень большими индексами и направлен на сокращение времени многократной записи этих индексов.</target>
        </trans-unit>
        <trans-unit id="660380648a3de0733323135a33a60c0126cae6f8" translate="yes" xml:space="preserve">
          <source>This modifies the &lt;code&gt;export&lt;/code&gt; capability, instructing Git to dump the internal marks table to &amp;lt;file&amp;gt; when complete. For details, read up on &lt;code&gt;--export-marks=&amp;lt;file&amp;gt;&lt;/code&gt; in &lt;a href=&quot;git-fast-export&quot;&gt;git-fast-export[1]&lt;/a&gt;.</source>
          <target state="translated">Это изменяет возможность &lt;code&gt;export&lt;/code&gt; , давая Git команду выгрузить внутреннюю таблицу меток в &amp;lt;файл&amp;gt; после завершения. Подробности читайте в &lt;code&gt;--export-marks=&amp;lt;file&amp;gt;&lt;/code&gt; в &lt;a href=&quot;git-fast-export&quot;&gt;git-fast-export [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59a5d5693433000c28979c8002984ee295ddd735" translate="yes" xml:space="preserve">
          <source>This modifies the &lt;code&gt;export&lt;/code&gt; capability, instructing Git to load the marks specified in &amp;lt;file&amp;gt; before processing any input. For details, read up on &lt;code&gt;--import-marks=&amp;lt;file&amp;gt;&lt;/code&gt; in &lt;a href=&quot;git-fast-export&quot;&gt;git-fast-export[1]&lt;/a&gt;.</source>
          <target state="translated">Это изменяет возможность &lt;code&gt;export&lt;/code&gt; , инструктируя Git загружать метки, указанные в &amp;lt;file&amp;gt;, перед обработкой любого ввода. Подробности читайте в &lt;code&gt;--import-marks=&amp;lt;file&amp;gt;&lt;/code&gt; в &lt;a href=&quot;git-fast-export&quot;&gt;git-fast-export [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29cca50076d9ab0c1672949be9f5cf285333ce65" translate="yes" xml:space="preserve">
          <source>This modifies the &lt;code&gt;export&lt;/code&gt; capability, instructing Git to pass &lt;code&gt;--signed-tags=verbatim&lt;/code&gt; to &lt;a href=&quot;git-fast-export&quot;&gt;git-fast-export[1]&lt;/a&gt;. In the absence of this capability, Git will use &lt;code&gt;--signed-tags=warn-strip&lt;/code&gt;.</source>
          <target state="translated">Это изменяет возможность &lt;code&gt;export&lt;/code&gt; , инструктируя Git передать &lt;code&gt;--signed-tags=verbatim&lt;/code&gt; в &lt;a href=&quot;git-fast-export&quot;&gt;git-fast-export [1]&lt;/a&gt; . В отсутствие этой возможности Git будет использовать &lt;code&gt;--signed-tags=warn-strip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cd76e4b36f80f26235450d81c7340212de49a9e" translate="yes" xml:space="preserve">
          <source>This modifies the &lt;code&gt;import&lt;/code&gt; capability. The fast-import commands &lt;code&gt;cat-blob&lt;/code&gt; and &lt;code&gt;ls&lt;/code&gt; can be used by remote-helpers to retrieve information about blobs and trees that already exist in fast-import&amp;rsquo;s memory. This requires a channel from fast-import to the remote-helper. If it is advertised in addition to &quot;import&quot;, Git establishes a pipe from fast-import to the remote-helper&amp;rsquo;s stdin. It follows that Git and fast-import are both connected to the remote-helper&amp;rsquo;s stdin. Because Git can send multiple commands to the remote-helper it is required that helpers that use &lt;code&gt;bidi-import&lt;/code&gt; buffer all &lt;code&gt;import&lt;/code&gt; commands of a batch before sending data to fast-import. This is to prevent mixing commands and fast-import responses on the helper&amp;rsquo;s stdin.</source>
          <target state="translated">Это изменяет возможность &lt;code&gt;import&lt;/code&gt; . Команды быстрого импорта &lt;code&gt;cat-blob&lt;/code&gt; и &lt;code&gt;ls&lt;/code&gt; могут использоваться удаленными помощниками для получения информации о больших двоичных объектах и ​​деревьях, которые уже существуют в памяти быстрого импорта. Для этого требуется канал от быстрого импорта к удаленному помощнику. Если он объявляется в дополнение к &amp;laquo;импорту&amp;raquo;, ​​Git устанавливает канал от быстрого импорта к stdin удаленного помощника. Отсюда следует, что и Git, и fast-import подключены к stdin удаленного помощника. Поскольку Git может отправлять несколько команд удаленному помощнику, требуется, чтобы помощники, которые используют буфер &lt;code&gt;bidi-import&lt;/code&gt; весь &lt;code&gt;import&lt;/code&gt; команды пакета перед отправкой данных на быстрый импорт. Это сделано для предотвращения смешивания команд и ответов быстрого импорта на stdin помощника.</target>
        </trans-unit>
        <trans-unit id="18b230f7b58b67f5f52143b1696b5514cecb3bd1" translate="yes" xml:space="preserve">
          <source>This operation is safe even if Alice has uncommitted local changes. The range notation &quot;HEAD..FETCH_HEAD&quot; means &quot;show everything that is reachable from the FETCH_HEAD but exclude anything that is reachable from HEAD&quot;. Alice already knows everything that leads to her current state (HEAD), and reviews what Bob has in his state (FETCH_HEAD) that she has not seen with this command.</source>
          <target state="translated">Эта операция безопасна,даже если у Алисы есть нефиксированные локальные изменения.Нотация диапазона &quot;HEAD...FETCH_HEAD&quot; означает &quot;показывать все,что доступно из FETCH_HEAD,но исключать все,что доступно из HEAD&quot;.Элис уже знает все,что приводит ее в текущее состояние (HEAD),и просматривает то,что есть у Боба в его состоянии (FETCH_HEAD),чего она не видела с помощью этой команды.</target>
        </trans-unit>
        <trans-unit id="4d6058894e90e81912f089323abaddf6ff7286d2" translate="yes" xml:space="preserve">
          <source>This option affects options that expect path name like &lt;code&gt;--git-dir&lt;/code&gt; and &lt;code&gt;--work-tree&lt;/code&gt; in that their interpretations of the path names would be made relative to the working directory caused by the &lt;code&gt;-C&lt;/code&gt; option. For example the following invocations are equivalent:</source>
          <target state="translated">Этот параметр влияет на параметры, которые ожидают имя пути, например &lt;code&gt;--git-dir&lt;/code&gt; и &lt;code&gt;--work-tree&lt;/code&gt; , поскольку их интерпретация имен путей будет сделана относительно рабочего каталога, вызванного параметром &lt;code&gt;-C&lt;/code&gt; . Например, следующие вызовы эквивалентны:</target>
        </trans-unit>
        <trans-unit id="2b42f3dc9742d00737d912066dfd2008f4af0874" translate="yes" xml:space="preserve">
          <source>This option allows you to say that you expect the history you are updating is what you rebased and want to replace. If the remote ref still points at the commit you specified, you can be sure that no other people did anything to the ref. It is like taking a &quot;lease&quot; on the ref without explicitly locking it, and the remote ref is updated only if the &quot;lease&quot; is still valid.</source>
          <target state="translated">Эта опция позволяет вам сказать,что вы ожидаете,что история,которую вы обновляете,это то,что вы обновили и хотите заменить.Если удалённый ссылка всё ещё указывает на коммит,который вы указали,вы можете быть уверены,что никто другой ничего не сделал с этой ссылкой.Это всё равно,что взять &quot;аренду&quot; на ссылку без явной фиксации,и удалённая ссылка обновляется только в том случае,если &quot;аренда&quot; всё ещё действительна.</target>
        </trans-unit>
        <trans-unit id="a3080455c3c310acd65dd25e9f3c439906791e33" translate="yes" xml:space="preserve">
          <source>This option bypasses the pre-commit and commit-msg hooks. See also &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Эта опция обходит перехватчики pre-commit и commit-msg. См. Также &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae0cb95b3299088da58c88ea10fd24e68d20bac1" translate="yes" xml:space="preserve">
          <source>This option bypasses the pre-merge and commit-msg hooks. See also &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Этот параметр обходит перехватчики pre-merge и commit-msg. См. Также &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22c10b3b137f37c4d219034c9b73126392cd066c" translate="yes" xml:space="preserve">
          <source>This option bypasses the pre-rebase hook. See also &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Эта опция обходит ловушку pre-rebase. См. Также &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7eb09891c6b3b929ffed676724fa916ce9b73e" translate="yes" xml:space="preserve">
          <source>This option can be either set to a boolean value or to &lt;code&gt;on-demand&lt;/code&gt;. Setting it to a boolean changes the behavior of fetch and pull to unconditionally recurse into submodules when set to true or to not recurse at all when set to false. When set to &lt;code&gt;on-demand&lt;/code&gt; (the default value), fetch and pull will only recurse into a populated submodule when its superproject retrieves a commit that updates the submodule&amp;rsquo;s reference.</source>
          <target state="translated">Эта опция может быть установлена ​​как логическое значение, так и &lt;code&gt;on-demand&lt;/code&gt; . Установка его в логическое значение изменяет поведение выборки и вытягивания на безоговорочную рекурсию в подмодули, если установлено значение true, или не рекурсию вообще, если установлено на false. Если установлено значение &lt;code&gt;on-demand&lt;/code&gt; (значение по умолчанию), выборка и извлечение будут рекурсивно переходить в заполненный подмодуль только тогда, когда его суперпроект извлекает фиксацию, которая обновляет ссылку на подмодуль.</target>
        </trans-unit>
        <trans-unit id="5d7a21f2665910c78fd7ff132552ce53899e84c0" translate="yes" xml:space="preserve">
          <source>This option can be used along with &lt;code&gt;--bisect-vars&lt;/code&gt;, in this case, after all the sorted commit objects, there will be the same text as if &lt;code&gt;--bisect-vars&lt;/code&gt; had been used alone.</source>
          <target state="translated">Эту опцию можно использовать вместе с &lt;code&gt;--bisect-vars&lt;/code&gt; , в этом случае после всех отсортированных объектов фиксации будет такой же текст, как если бы &lt;code&gt;--bisect-vars&lt;/code&gt; использовался отдельно.</target>
        </trans-unit>
        <trans-unit id="93ff5c11faab29c493dcd0eb330b2a514a09e43b" translate="yes" xml:space="preserve">
          <source>This option can be used several times to provide several detection regexes.</source>
          <target state="translated">Эта опция может быть использована несколько раз для обеспечения нескольких регрессов обнаружения.</target>
        </trans-unit>
        <trans-unit id="a9be17765d99ef763e2665079651c5e7b4e1ceec" translate="yes" xml:space="preserve">
          <source>This option can be used to control recursive fetching of this submodule. If this option is also present in the submodules entry in .git/config of the superproject, the setting there will override the one found in .gitmodules. Both settings can be overridden on the command line by using the &quot;--[no-]recurse-submodules&quot; option to &quot;git fetch&quot; and &quot;git pull&quot;.</source>
          <target state="translated">Данная опция может быть использована для управления рекурсивной выборкой данного подмодуля.Если эта опция также присутствует во входе в подмодули в .git/config суперпроекта,то настройка там переопределяет ту,которая присутствует в .gitmodules.Обе настройки могут быть переопределены в командной строке с помощью опции &quot;--[no-]recurse-submodules&quot; для &quot;git fetch&quot; и &quot;git pull&quot;.</target>
        </trans-unit>
        <trans-unit id="4813ba4c4b012e94932c2c7e77e5d37eb750ee7d" translate="yes" xml:space="preserve">
          <source>This option can be used to control recursive fetching of this submodule. It can be overridden by using the --[no-]recurse-submodules command-line option to &quot;git fetch&quot; and &quot;git pull&quot;. This setting will override that from in the &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; file.</source>
          <target state="translated">Эта опция может использоваться для управления рекурсивной выборкой этого подмодуля. Его можно переопределить, используя параметр командной строки - [no-] recurse-submodules для &amp;laquo;git fetch&amp;raquo; ​​и &amp;laquo;git pull&amp;raquo;. Этот параметр переопределит параметр из &lt;a href=&quot;gitmodules&quot;&gt;файла gitmodules [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc1c2b92ebab0226490f8de8ccd94e6df6f7955b" translate="yes" xml:space="preserve">
          <source>This option can be used to separate command-line options from the list of files, (useful when filenames might be mistaken for command-line options).</source>
          <target state="translated">Эта опция может быть использована для отделения опций командной строки от списка файлов (полезно,когда имена файлов могут быть ошибочно приняты за опции командной строки).</target>
        </trans-unit>
        <trans-unit id="792e2c6acea003d2f54070521de0f6b1fb530a29" translate="yes" xml:space="preserve">
          <source>This option can be used to specify a shell command that will be called to automatically add or modify a trailer with the specified &amp;lt;token&amp;gt;.</source>
          <target state="translated">Этот параметр может использоваться для указания команды оболочки, которая будет вызываться для автоматического добавления или изменения трейлера с указанным &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="3870831de784b5f9a3b27254aee6ab6f7a036b72" translate="yes" xml:space="preserve">
          <source>This option can only be used for one-shot imports as &lt;code&gt;git svn&lt;/code&gt; will not be able to fetch again without metadata. Additionally, if you lose your &lt;code&gt;$GIT_DIR/svn/**/.rev_map.*&lt;/code&gt; files, &lt;code&gt;git svn&lt;/code&gt; will not be able to rebuild them.</source>
          <target state="translated">Этот параметр можно использовать только для одноразового импорта, поскольку &lt;code&gt;git svn&lt;/code&gt; не сможет выполнить повторную выборку без метаданных. Кроме того, если вы потеряете свои &lt;code&gt;$GIT_DIR/svn/**/.rev_map.*&lt;/code&gt; , &lt;code&gt;git svn&lt;/code&gt; не сможет их восстановить.</target>
        </trans-unit>
        <trans-unit id="7745929fdc4d071dfa2f069450065a35fb03a357" translate="yes" xml:space="preserve">
          <source>This option can only be used together with --dry-run. By using this option the user can check if any of the given files would be ignored, no matter if they are already present in the work tree or not.</source>
          <target state="translated">Эта опция может быть использована только вместе с --dry-run.С помощью этой опции пользователь может проверить,будет ли какой-нибудь из данных файлов игнорироваться,независимо от того,присутствуют ли они уже в рабочем дереве или нет.</target>
        </trans-unit>
        <trans-unit id="2cd2090b6cd931e9fb6990b800f11805da77a460" translate="yes" xml:space="preserve">
          <source>This option cannot (currently) be used unless &lt;code&gt;--batch&lt;/code&gt; or &lt;code&gt;--batch-check&lt;/code&gt; is used.</source>
          <target state="translated">Эта опция не может (в настоящее время) использоваться, если не используются &lt;code&gt;--batch&lt;/code&gt; или &lt;code&gt;--batch-check&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="882762ef26e2279478bc78603a1e7faf56dec8c3" translate="yes" xml:space="preserve">
          <source>This option controls if and under what conditions new commits of populated submodules should be fetched too. It can be used as a boolean option to completely disable recursion when set to &lt;code&gt;no&lt;/code&gt; or to unconditionally recurse into all populated submodules when set to &lt;code&gt;yes&lt;/code&gt;, which is the default when this option is used without any value. Use &lt;code&gt;on-demand&lt;/code&gt; to only recurse into a populated submodule when the superproject retrieves a commit that updates the submodule&amp;rsquo;s reference to a commit that isn&amp;rsquo;t already in the local submodule clone.</source>
          <target state="translated">Эта опция контролирует, должны ли и при каких условиях выбираться новые коммиты заполненных подмодулей. Его можно использовать как логическую опцию для полного отключения рекурсии, если установлено значение &lt;code&gt;no&lt;/code&gt; , или для безоговорочной рекурсии во все заполненные подмодули, если установлено на &lt;code&gt;yes&lt;/code&gt; , что является значением по умолчанию, когда эта опция используется без какого-либо значения. Используйте &lt;code&gt;on-demand&lt;/code&gt; только для рекурсии в заполненный подмодуль, когда суперпроект извлекает фиксацию, которая обновляет ссылку подмодуля на фиксацию, которая еще не находится в локальном клоне подмодуля.</target>
        </trans-unit>
        <trans-unit id="69bffdffaf64305a520ea61fd7a4110a4c5bf981" translate="yes" xml:space="preserve">
          <source>This option controls if new commits of all populated submodules should be fetched and updated, too (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; and &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;).</source>
          <target state="translated">Эта опция контролирует, должны ли также быть получены и обновлены новые коммиты всех заполненных подмодулей (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; и &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="30828ff428cc76245c5c17e5cbd61f4d3413d1c5" translate="yes" xml:space="preserve">
          <source>This option determines how the commit message will be cleaned up before being passed on to the commit machinery. See &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for more details. In particular, if the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is given a value of &lt;code&gt;scissors&lt;/code&gt;, scissors will be appended to &lt;code&gt;MERGE_MSG&lt;/code&gt; before being passed on in the case of a conflict.</source>
          <target state="translated">Этот параметр определяет, как сообщение фиксации будет очищено перед передачей механизму фиксации. См. &lt;a href=&quot;git-commit&quot;&gt;Git-commit [1]&lt;/a&gt; для более подробной информации. В частности, если &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; присвоено значение &lt;code&gt;scissors&lt;/code&gt; , ножницы будут добавлены к &lt;code&gt;MERGE_MSG&lt;/code&gt; перед передачей в случае конфликта.</target>
        </trans-unit>
        <trans-unit id="286a93d0042817a6190102b1bfcb5df866579bac" translate="yes" xml:space="preserve">
          <source>This option determines how the merge message will be cleaned up before committing. See &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for more details. In addition, if the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is given a value of &lt;code&gt;scissors&lt;/code&gt;, scissors will be appended to &lt;code&gt;MERGE_MSG&lt;/code&gt; before being passed on to the commit machinery in the case of a merge conflict.</source>
          <target state="translated">Этот параметр определяет, как сообщение слияния будет очищено перед фиксацией. См. &lt;a href=&quot;git-commit&quot;&gt;Git-commit [1]&lt;/a&gt; для более подробной информации. Вдобавок, если &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; присвоено значение &lt;code&gt;scissors&lt;/code&gt; , scissors будут добавлены к &lt;code&gt;MERGE_MSG&lt;/code&gt; перед передачей механизму фиксации в случае конфликта слияния.</target>
        </trans-unit>
        <trans-unit id="4d1960d5d8472d2a194e5ec10acd8959326f748a" translate="yes" xml:space="preserve">
          <source>This option determines how the supplied commit message should be cleaned up before committing. The &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; can be &lt;code&gt;strip&lt;/code&gt;, &lt;code&gt;whitespace&lt;/code&gt;, &lt;code&gt;verbatim&lt;/code&gt;, &lt;code&gt;scissors&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">Этот параметр определяет, как предоставленное сообщение фиксации должно быть очищено перед фиксацией. &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; может быть &lt;code&gt;strip&lt;/code&gt; , &lt;code&gt;whitespace&lt;/code&gt; , &lt;code&gt;verbatim&lt;/code&gt; , &lt;code&gt;scissors&lt;/code&gt; или по &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5dab8a93409f72b36d8b46ab64625d688725721" translate="yes" xml:space="preserve">
          <source>This option does not (currently) work correctly when an object in the index is specified (e.g. &lt;code&gt;:link&lt;/code&gt; instead of &lt;code&gt;HEAD:link&lt;/code&gt;) rather than one in the tree.</source>
          <target state="translated">Этот параметр (в настоящее время) работает некорректно, если объект указан в индексе (например &lt;code&gt;:link&lt;/code&gt; вместо &lt;code&gt;HEAD:link&lt;/code&gt; ), а не один в дереве.</target>
        </trans-unit>
        <trans-unit id="d9ea124fbd7a15594b4c6836d821b0c2d1f565c3" translate="yes" xml:space="preserve">
          <source>This option forces conflicting hunks to be auto-resolved cleanly by favoring &lt;code&gt;our&lt;/code&gt; version. Changes from the other tree that do not conflict with our side are reflected in the merge result. For a binary file, the entire contents are taken from our side.</source>
          <target state="translated">Эта опция принудительно разрешает конфликтующие блоки автоматически, отдавая предпочтение &lt;code&gt;our&lt;/code&gt; версии. Изменения из другого дерева, которые не конфликтуют с нашей стороной, отражаются в результате слияния. Для бинарного файла все содержимое берется с нашей стороны.</target>
        </trans-unit>
        <trans-unit id="03e43ead906b5a3ebd0febb15138c0f0fef70180" translate="yes" xml:space="preserve">
          <source>This option identifies the file status with the following tags (followed by a space) at the start of each line:</source>
          <target state="translated">Эта опция идентифицирует статус файла следующими тегами (с последующим пробелом)в начале каждой строки:</target>
        </trans-unit>
        <trans-unit id="11f1817b2bcb9580d82cb7eff477a970ee3352b6" translate="yes" xml:space="preserve">
          <source>This option is NOT recommended as it makes it difficult to track down old references to SVN revision numbers in existing documentation, bug reports, and archives. If you plan to eventually migrate from SVN to Git and are certain about dropping SVN history, consider &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot;&gt;git-filter-repo&lt;/a&gt; instead. filter-repo also allows reformatting of metadata for ease-of-reading and rewriting authorship info for non-&quot;svn.authorsFile&quot; users.</source>
          <target state="translated">Этот вариант НЕ рекомендуется, поскольку он затрудняет отслеживание старых ссылок на номера ревизий SVN в существующей документации, отчетах об ошибках и архивах. Если вы планируете в конечном итоге перейти с SVN на Git и уверены, что откажетесь от истории SVN, рассмотрите вместо этого &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot;&gt;git-filter-repo&lt;/a&gt; . filter-repo также позволяет переформатировать метаданные для облегчения чтения и переписывать информацию об авторстве для пользователей, не относящихся к &quot;svn.authorsFile&quot;.</target>
        </trans-unit>
        <trans-unit id="78790ec840bc0471b6e620b0edc9dccd8cb32215" translate="yes" xml:space="preserve">
          <source>This option is a more advanced form of &lt;code&gt;subtree&lt;/code&gt; strategy, where the strategy makes a guess on how two trees must be shifted to match with each other when merging. Instead, the specified path is prefixed (or stripped from the beginning) to make the shape of two trees to match.</source>
          <target state="translated">Этот вариант представляет собой более продвинутую форму стратегии &lt;code&gt;subtree&lt;/code&gt; , в которой стратегия делает предположение о том, как два дерева должны быть сдвинуты, чтобы соответствовать друг другу при слиянии. Вместо этого к указанному пути добавляется префикс (или удаляется с самого начала), чтобы форма двух деревьев соответствовала.</target>
        </trans-unit>
        <trans-unit id="4caf0764823caa06aa3cb192d447e797c84f9905" translate="yes" xml:space="preserve">
          <source>This option is deprecated in favour of &lt;code&gt;git stash push&lt;/code&gt;. It differs from &quot;stash push&quot; in that it cannot take pathspecs. Instead, all non-option arguments are concatenated to form the stash message.</source>
          <target state="translated">Этот параметр не рекомендуется в пользу &lt;code&gt;git stash push&lt;/code&gt; . Он отличается от &quot;stash push&quot; тем, что не может принимать пути. Вместо этого все аргументы, не являющиеся опциями, объединяются для формирования тайного сообщения.</target>
        </trans-unit>
        <trans-unit id="c02fef4ae69460732c7c3bd405bb6c17f43ad119" translate="yes" xml:space="preserve">
          <source>This option is equivalent to the &amp;lt;repository&amp;gt; argument. If both are specified, the command-line argument takes precedence.</source>
          <target state="translated">Эта опция эквивалентна аргументу &amp;lt;repository&amp;gt;. Если указаны оба параметра, аргумент командной строки имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="b7fdcf9707bc99b530bc435f0d474fdd1738b42d" translate="yes" xml:space="preserve">
          <source>This option is implicitly supplied if any other list-like option such as &lt;code&gt;--contains&lt;/code&gt; is provided. See the documentation for each of those options for details.</source>
          <target state="translated">Этот параметр неявно предоставляется, если предоставляется любой другой параметр, подобный списку, например &lt;code&gt;--contains&lt;/code&gt; . Подробности смотрите в документации по каждому из этих вариантов.</target>
        </trans-unit>
        <trans-unit id="710c94d6943c052c3ce9d72b355d1824bacce0cd" translate="yes" xml:space="preserve">
          <source>This option is only applicable in non-verbose mode.</source>
          <target state="translated">Эта опция применима только в режиме без обратной связи.</target>
        </trans-unit>
        <trans-unit id="4cc49fd28601407189cb758fe5a41d5aaf8777ac" translate="yes" xml:space="preserve">
          <source>This option is only applicable when listing tags without annotation lines.</source>
          <target state="translated">Эта опция применима только при листинге тегов без строк примечаний.</target>
        </trans-unit>
        <trans-unit id="ac28aa5e8f93911465d1aaa74ae4db50de2f286b" translate="yes" xml:space="preserve">
          <source>This option is only relevant if we are tracking branches (using one of the repository layout options --trunk, --tags, --branches, --stdlayout). For each tracked branch, try to find out where its revision was copied from, and set a suitable parent in the first Git commit for the branch. This is especially helpful when we&amp;rsquo;re tracking a directory that has been moved around within the repository. If this feature is disabled, the branches created by &lt;code&gt;git svn&lt;/code&gt; will all be linear and not share any history, meaning that there will be no information on where branches were branched off or merged. However, following long/convoluted histories can take a long time, so disabling this feature may speed up the cloning process. This feature is enabled by default, use --no-follow-parent to disable it.</source>
          <target state="translated">Эта опция актуальна только в том случае, если мы отслеживаем ветки (используя один из вариантов компоновки репозитория --trunk, --tags, --branches, --stdlayout). Для каждой отслеживаемой ветки попытайтесь выяснить, откуда была скопирована ее ревизия, и установите подходящий родительский элемент в первом коммите Git для ветки. Это особенно полезно, когда мы отслеживаем каталог, который был перемещен в репозитории. Если эта функция отключена, все ветки, созданные с помощью &lt;code&gt;git svn&lt;/code&gt; , будут линейными и не будут иметь общей истории, что означает, что не будет информации о том, где ветки были разветвлены или объединены. Однако отслеживание длинных / запутанных историй может занять много времени, поэтому отключение этой функции может ускорить процесс клонирования. Эта функция включена по умолчанию, используйте --no-follow-parent, чтобы отключить ее.</target>
        </trans-unit>
        <trans-unit id="e12fdc170000781ad1c58dbca132db57e3472f94" translate="yes" xml:space="preserve">
          <source>This option is only used by Mac OS implementation of Git. When core.precomposeUnicode=true, Git reverts the unicode decomposition of filenames done by Mac OS. This is useful when sharing a repository between Mac OS and Linux or Windows. (Git for Windows 1.7.10 or higher is needed, or Git under cygwin 1.7). When false, file names are handled fully transparent by Git, which is backward compatible with older versions of Git.</source>
          <target state="translated">Эта опция используется только в реализации Git'а под Mac OS.Когда core.precomposeUnicode=true,Git возвращает однокодовое разложение имён файлов,выполненное Mac OS.Это полезно при совместном использовании репозитория между Mac OS и Linux или Windows.(Git для Windows 1.7.10 и выше или Git под cygwin 1.7).В случае false имена файлов обрабатываются Git'ом полностью прозрачно,что является обратной совместимостью со старыми версиями Git'а.</target>
        </trans-unit>
        <trans-unit id="488a5b3855b8742f267f0b39339ad03e677bc10e" translate="yes" xml:space="preserve">
          <source>This option is only valid for add and update commands. Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">Эта опция действительна только для команд добавления и обновления.Состояние прогресса сообщается в стандартном потоке ошибок по умолчанию при его подключении к терминалу,если не указано -q.Этот флаг вызывает состояние прогресса,даже если стандартный поток ошибок не направляется в терминал.</target>
        </trans-unit>
        <trans-unit id="564be2665790d0ee7a744865d472382d1cf20497" translate="yes" xml:space="preserve">
          <source>This option is only valid for add and update commands. These commands sometimes need to clone a remote repository. In this case, this option will be passed to the &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; command.</source>
          <target state="translated">Эта опция действительна только для команд добавления и обновления. Этим командам иногда требуется клонировать удаленный репозиторий. В этом случае эта опция будет передана команде &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1175e1719609394666bffaa81ec16b8052e4a6b8" translate="yes" xml:space="preserve">
          <source>This option is only valid for add, deinit and update commands. When running add, allow adding an otherwise ignored submodule path. When running deinit the submodule working trees will be removed even if they contain local changes. When running update (only effective with the checkout procedure), throw away local changes in submodules when switching to a different commit; and always run a checkout operation in the submodule, even if the commit listed in the index of the containing repository matches the commit checked out in the submodule.</source>
          <target state="translated">Эта опция действительна только для команд добавления,деинициализации и обновления.При выполнении команды add,разрешите добавить путь к подмодулю,который в противном случае будет проигнорирован.При запуске деинициализации рабочие деревья подмодулей будут удалены,даже если они содержат локальные изменения.При запуске обновления (только для процедуры извлечения)выбрасывайте локальные изменения в подмодулях при переходе на другой коммит;и всегда выполняйте операцию извлечения в подмодуле,даже если коммит,указанный в индексе репозитория,содержащего коммит,совпадает с коммитом,извлеченным в подмодуле.</target>
        </trans-unit>
        <trans-unit id="2de8d442aa39a274aaa4b758d62aa7d0adb622e3" translate="yes" xml:space="preserve">
          <source>This option is only valid for foreach, update, status and sync commands. Traverse submodules recursively. The operation is performed not only in the submodules of the current repo, but also in any nested submodules inside those submodules (and so on).</source>
          <target state="translated">Эта опция действительна только для команд foreach,update,status и sync.Траверсировать субмодули рекурсивно.Операция выполняется не только в подмодулях текущего репо,но и в любых вложенных подмодулях внутри этих подмодулей (и так далее).</target>
        </trans-unit>
        <trans-unit id="d01c54f91ad08eb6d9511d7549b500d6b89b1500" translate="yes" xml:space="preserve">
          <source>This option is only valid for status and summary commands. These commands typically use the commit found in the submodule HEAD, but with this option, the commit stored in the index is used instead.</source>
          <target state="translated">Эта опция действительна только для команд состояния и сводки.Эти команды обычно используют коммит,найденный в HEAD подмодуля,но с этим параметром вместо него используется коммит,хранящийся в индексе.</target>
        </trans-unit>
        <trans-unit id="7ba21174d5319ba108a98df185e2c79d000e199b" translate="yes" xml:space="preserve">
          <source>This option is only valid for the add command. It sets the submodule&amp;rsquo;s name to the given string instead of defaulting to its path. The name must be valid as a directory name and may not end with a &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Эта опция действительна только для команды добавления. Он устанавливает имя подмодуля для данной строки, а не по умолчанию для его пути. Имя должно быть действительным как имя каталога и не может заканчиваться на &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87ff71824f0ae07bd73763f995cf49d0ad4b94cd" translate="yes" xml:space="preserve">
          <source>This option is only valid for the deinit command. Unregister all submodules in the working tree.</source>
          <target state="translated">Эта опция действительна только для команды деинициации.Отменить регистрацию всех подмодулей в рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="f24783ef5194da88d7aca04af04dd4876a0ce3ed" translate="yes" xml:space="preserve">
          <source>This option is only valid for the summary command. Limit the summary size (number of commits shown in total). Giving 0 will disable the summary; a negative number means unlimited (the default). This limit only applies to modified submodules. The size is always limited to 1 for added/deleted/typechanged submodules.</source>
          <target state="translated">Эта опция действительна только для команды сводки.Ограничить размер сводки (общее количество показанных фиксаций).Если дать 0,то сводка будет отключена;отрицательное число означает неограниченный (по умолчанию).Это ограничение применяется только к модифицированным субмодулям.Размер всегда ограничен 1 для добавленных/удаленных/специализированных подмодулей.</target>
        </trans-unit>
        <trans-unit id="ba7d2b303205764476dea6127f5143ab027381fd" translate="yes" xml:space="preserve">
          <source>This option is only valid for the summary command. This command compares the commit in the index with that in the submodule HEAD when this option is used.</source>
          <target state="translated">Эта опция действительна только для команды сводки.Эта команда сравнивает коммит в индексе с коммитом в подмодуле HEAD,когда используется этот параметр.</target>
        </trans-unit>
        <trans-unit id="0329e613a2d579c43cf813e4dcb872eed327d20c" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Checkout the commit recorded in the superproject on a detached HEAD in the submodule. This is the default behavior, the main use of this option is to override &lt;code&gt;submodule.$name.update&lt;/code&gt; when set to a value other than &lt;code&gt;checkout&lt;/code&gt;. If the key &lt;code&gt;submodule.$name.update&lt;/code&gt; is either not explicitly set or set to &lt;code&gt;checkout&lt;/code&gt;, this option is implicit.</source>
          <target state="translated">Эта опция действительна только для команды обновления. Извлеките фиксацию, записанную в суперпроекте, на отсоединенной HEAD в подмодуле. Это поведение по умолчанию, основное использование этой опции - переопределить &lt;code&gt;submodule.$name.update&lt;/code&gt; если установлено значение, отличное от &lt;code&gt;checkout&lt;/code&gt; . Если ключевой &lt;code&gt;submodule.$name.update&lt;/code&gt; либо не установлен явно, либо установлен на &lt;code&gt;checkout&lt;/code&gt; , этот параметр является неявным.</target>
        </trans-unit>
        <trans-unit id="7988d8bd0ba82c9f133c5f7cc525c2236228f253" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Clone new submodules in parallel with as many jobs. Defaults to the &lt;code&gt;submodule.fetchJobs&lt;/code&gt; option.</source>
          <target state="translated">Эта опция действительна только для команды обновления. Клонируйте новые субмодули параллельно с таким количеством заданий. По умолчанию используется параметр &lt;code&gt;submodule.fetchJobs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de5e49243a4037b1b14e7038956130dc87de6d4f" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Don&amp;rsquo;t fetch new objects from the remote site.</source>
          <target state="translated">Эта опция действительна только для команды обновления. Не загружайте новые объекты с удаленного сайта.</target>
        </trans-unit>
        <trans-unit id="f13e740e91a73f0a2574eefa11fc263894a39d8c" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Initialize all submodules for which &quot;git submodule init&quot; has not been called so far before updating.</source>
          <target state="translated">Эта опция действительна только для команды обновления.Инициализируйте все подмодули,для которых &quot;init&quot; подмодуля git до сих пор не вызывался.</target>
        </trans-unit>
        <trans-unit id="78bb9a5b0867074719f5c17324b183ac216eed4e" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Instead of using the superproject&amp;rsquo;s recorded SHA-1 to update the submodule, use the status of the submodule&amp;rsquo;s remote-tracking branch. The remote used is branch&amp;rsquo;s remote (&lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;), defaulting to &lt;code&gt;origin&lt;/code&gt;. The remote branch used defaults to &lt;code&gt;master&lt;/code&gt;, but the branch name may be overridden by setting the &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; option in either &lt;code&gt;.gitmodules&lt;/code&gt; or &lt;code&gt;.git/config&lt;/code&gt; (with &lt;code&gt;.git/config&lt;/code&gt; taking precedence).</source>
          <target state="translated">Эта опция действительна только для команды обновления. Вместо использования записанного SHA-1 суперпроекта для обновления подмодуля используйте статус ветви удаленного отслеживания подмодуля. Используемый пульт - это удаленный &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; ( branch. &amp;lt;name&amp;gt; .remote ), по умолчанию - &lt;code&gt;origin&lt;/code&gt; . Удаленная ветвь по умолчанию использовала значение &lt;code&gt;master&lt;/code&gt; , но имя ветки можно переопределить, установив параметр &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; либо в &lt;code&gt;.gitmodules&lt;/code&gt; , либо в &lt;code&gt;.git/config&lt;/code&gt; (с приоритетом &lt;code&gt;.git/config&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3d36d21960733622c3c4d0c9b1d02dde186ab4d" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Merge the commit recorded in the superproject into the current branch of the submodule. If this option is given, the submodule&amp;rsquo;s HEAD will not be detached. If a merge failure prevents this process, you will have to resolve the resulting conflicts within the submodule with the usual conflict resolution tools. If the key &lt;code&gt;submodule.$name.update&lt;/code&gt; is set to &lt;code&gt;merge&lt;/code&gt;, this option is implicit.</source>
          <target state="translated">Эта опция действительна только для команды обновления. Слить коммит, записанный в суперпроекте, в текущую ветвь подмодуля. Если задана эта опция, HEAD подмодуля не будет отсоединен. Если сбой слияния препятствует этому процессу, вам придется разрешить возникающие конфликты в подмодуле с помощью обычных инструментов разрешения конфликтов. Если ключевой &lt;code&gt;submodule.$name.update&lt;/code&gt; настроен на &lt;code&gt;merge&lt;/code&gt; , эта опция неявна .</target>
        </trans-unit>
        <trans-unit id="24320b0a3d3cc55ac6e67c5111e4d5b2024f7768" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. Rebase the current branch onto the commit recorded in the superproject. If this option is given, the submodule&amp;rsquo;s HEAD will not be detached. If a merge failure prevents this process, you will have to resolve these failures with &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;. If the key &lt;code&gt;submodule.$name.update&lt;/code&gt; is set to &lt;code&gt;rebase&lt;/code&gt;, this option is implicit.</source>
          <target state="translated">Эта опция действительна только для команды обновления. Переустановите текущую ветвь на фиксацию, записанную в суперпроекте. Если задана эта опция, HEAD подмодуля не будет отсоединен. Если сбой слияния препятствует этому процессу, вам придется устранить эти сбои с помощью &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; . Если для ключевого &lt;code&gt;submodule.$name.update&lt;/code&gt; задано значение &lt;code&gt;rebase&lt;/code&gt; , эта опция неявна .</target>
        </trans-unit>
        <trans-unit id="7010a654e778ac0c1da27a5e658bfb8f3af2d2b7" translate="yes" xml:space="preserve">
          <source>This option is only valid for the update command. The initial clone of a submodule will use the recommended &lt;code&gt;submodule.&amp;lt;name&amp;gt;.shallow&lt;/code&gt; as provided by the &lt;code&gt;.gitmodules&lt;/code&gt; file by default. To ignore the suggestions use &lt;code&gt;--no-recommend-shallow&lt;/code&gt;.</source>
          <target state="translated">Эта опция действительна только для команды обновления. Первоначальный клон подмодуля будет использовать рекомендуемый &lt;code&gt;submodule.&amp;lt;name&amp;gt;.shallow&lt;/code&gt; как это предусмотрено файлом &lt;code&gt;.gitmodules&lt;/code&gt; по умолчанию. Чтобы игнорировать предложения, используйте &lt;code&gt;--no-recommend-shallow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d7b3753dd95003bf8a5d9061fa7c1fb4ce2aaa" translate="yes" xml:space="preserve">
          <source>This option is only valid when &quot;--rebase&quot; is used.</source>
          <target state="translated">Эта опция действительна только при использовании &quot;--rebase&quot;.</target>
        </trans-unit>
        <trans-unit id="f287cb1cbdf50b2a99b97c922a7a8e625bb0e374" translate="yes" xml:space="preserve">
          <source>This option is passed through to &lt;code&gt;git pack-objects&lt;/code&gt;.</source>
          <target state="translated">Эта опция передается в &lt;code&gt;git pack-objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fbc055bad10c535a2fe42cbab527b95ac43fb4e" translate="yes" xml:space="preserve">
          <source>This option is primarily to help users who are used to older versions of Git, whose &quot;git add &amp;lt;pathspec&amp;gt;&amp;hellip;​&quot; was a synonym for &quot;git add --no-all &amp;lt;pathspec&amp;gt;&amp;hellip;​&quot;, i.e. ignored removed files.</source>
          <target state="translated">Эта опция в первую очередь предназначена для помощи пользователям, которые привыкли к более старым версиям Git, чьи &amp;laquo;git add &amp;lt;pathspec&amp;gt;&amp;hellip;&amp;raquo; были синонимом &amp;laquo;git add --no-all &amp;lt;pathspec&amp;gt;&amp;hellip;&amp;raquo;, то есть игнорировали удаленные файлы.</target>
        </trans-unit>
        <trans-unit id="b78fb9017b343dcaa9f7e76e34c0b6aead88f71f" translate="yes" xml:space="preserve">
          <source>This option is similar to &lt;code&gt;--topo-order&lt;/code&gt; in the sense that no parent comes before all of its children, but otherwise commits are ordered according to their commit date.</source>
          <target state="translated">Этот параметр похож на &lt;code&gt;--topo-order&lt;/code&gt; в том смысле, что ни один родитель не предшествует всем своим дочерним элементам , но в остальном коммиты упорядочиваются в соответствии с датой их фиксации.</target>
        </trans-unit>
        <trans-unit id="45355afb761a7570eab836899016e010dbbaff37" translate="yes" xml:space="preserve">
          <source>This option is used internally to temporarily provide a non-negative default value for the --recurse-submodules option. All other methods of configuring fetch&amp;rsquo;s submodule recursion (such as settings in &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; and &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) override this option, as does specifying --[no-]recurse-submodules directly.</source>
          <target state="translated">Этот параметр используется внутри компании для временного предоставления неотрицательного значения по умолчанию для параметра --recurse-submodules. Все другие методы настройки рекурсии подмодулей fetch (такие как настройки в &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; и &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ) переопределяют этот параметр, как и непосредственное указание - [no-] recurse-submodules.</target>
        </trans-unit>
        <trans-unit id="37e6c888c3b366c4018908c683d3076036665dbd" translate="yes" xml:space="preserve">
          <source>This option is useful in the case where one is developing a feature on top of an upstream branch. While the feature is being worked on, the upstream branch may advance and it may not be the best idea to keep rebasing on top of the upstream but to keep the base commit as-is.</source>
          <target state="translated">Эта опция полезна в том случае,если вы разрабатываете функцию поверх ветки вверх по течению.Во время работы над функцией может развиваться ветка вверх по течению,и это может быть не самой лучшей идеей-продолжать ребейзинг поверх ветки вверх по течению,но сохранять базовый коммит как есть.</target>
        </trans-unit>
        <trans-unit id="df85f593fd6f7620dd8216482ba39599038d6eaa" translate="yes" xml:space="preserve">
          <source>This option is valid for add and update commands. Create a &lt;code&gt;shallow&lt;/code&gt; clone with a history truncated to the specified number of revisions. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;</source>
          <target state="translated">Эта опция действительна для команд добавления и обновления. Создайте &lt;code&gt;shallow&lt;/code&gt; клон с историей, усеченной до указанного количества ревизий. См. &lt;a href=&quot;git-clone&quot;&gt;Git-clone [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebd5b9556122446be4baef760f1327190ef9a1e0" translate="yes" xml:space="preserve">
          <source>This option makes it possible to choose what action will be performed when there is already at least one trailer with the same &amp;lt;token&amp;gt; in the message.</source>
          <target state="translated">Эта опция позволяет выбрать, какое действие будет выполнено, если в сообщении уже есть хотя бы один трейлер с таким же &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ccc070d377579e85f01a8bc02ef61c868f5331ee" translate="yes" xml:space="preserve">
          <source>This option makes it possible to choose what action will be performed when there is not yet any trailer with the same &amp;lt;token&amp;gt; in the message.</source>
          <target state="translated">Эта опция позволяет выбрать, какое действие будет выполнено, если в сообщении еще нет трейлера с таким же &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f87ac9b403a45c29acabaf374d53994925318884" translate="yes" xml:space="preserve">
          <source>This option may be given up to three times, and specifies labels to be used in place of the corresponding file names in conflict reports. That is, &lt;code&gt;git merge-file -L x -L y -L z a b c&lt;/code&gt; generates output that looks like it came from files x, y and z instead of from files a, b and c.</source>
          <target state="translated">Эта опция может использоваться до трех раз и указывает метки, которые будут использоваться вместо соответствующих имен файлов в отчетах о конфликтах. То есть &lt;code&gt;git merge-file -L x -L y -L z a b c&lt;/code&gt; генерирует вывод, который выглядит так, как будто он был получен из файлов x, y и z, а не из файлов a, b и c.</target>
        </trans-unit>
        <trans-unit id="e631233708c2bfee4790b72e1f69b49f86a6c1ad" translate="yes" xml:space="preserve">
          <source>This option may be specified more than once.</source>
          <target state="translated">Эта опция может быть указана несколько раз.</target>
        </trans-unit>
        <trans-unit id="ad4bbf67e7b293924d5786bf652c9c00512dbaee" translate="yes" xml:space="preserve">
          <source>This option may be specified more than once; if so, Git will report commits reachable from any of the given commits.</source>
          <target state="translated">Эта опция может быть указана несколько раз;если это так,то Git будет сообщать о коммитах,доступных из любого из данных коммитов.</target>
        </trans-unit>
        <trans-unit id="02516672facfbf5a7b264eba6cd92c5455d92d79" translate="yes" xml:space="preserve">
          <source>This option may be specified multiple times.</source>
          <target state="translated">Эта опция может быть указана несколько раз.</target>
        </trans-unit>
        <trans-unit id="b397b665066a62a5850aaf1e8487dea9e6d48e99" translate="yes" xml:space="preserve">
          <source>This option may be useful if you have CVS revision numbers stored in commit messages, bug-tracking systems, email archives, and the like.</source>
          <target state="translated">Эта опция может быть полезна,если у вас есть CVS номера ревизий,хранящиеся в сообщениях о фиксации,системах отслеживания ошибок,почтовых архивах и т.п..</target>
        </trans-unit>
        <trans-unit id="5f0fddd7193d3e6d239ce8fc4bc7fc077dbf4105" translate="yes" xml:space="preserve">
          <source>This option may be useful when the test you would perform in each step does not require a checked out tree.</source>
          <target state="translated">Эта опция может быть полезна,когда тест,который вы будете выполнять на каждом шаге,не требует проверенного дерева.</target>
        </trans-unit>
        <trans-unit id="17ca02a4d5f28c7e8971b8d1a382a0b6bcfa0d17" translate="yes" xml:space="preserve">
          <source>This option overrides this restriction if the current value of the remote ref is the expected value. &quot;git push&quot; fails otherwise.</source>
          <target state="translated">Эта опция отменяет это ограничение,если текущее значение удаленного рефери является ожидаемым значением.&quot;git push&quot; в противном случае не срабатывает.</target>
        </trans-unit>
        <trans-unit id="8d166b9e59f19f7598d41e509f594cbcbd0ac7f1" translate="yes" xml:space="preserve">
          <source>This option provides an additional limit on top of &lt;code&gt;--window&lt;/code&gt;; the window size will dynamically scale down so as to not take up more than &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; bytes in memory. This is useful in repositories with a mix of large and small objects to not run out of memory with a large window, but still be able to take advantage of the large window for the smaller objects. The size can be suffixed with &quot;k&quot;, &quot;m&quot;, or &quot;g&quot;. &lt;code&gt;--window-memory=0&lt;/code&gt; makes memory usage unlimited. The default is taken from the &lt;code&gt;pack.windowMemory&lt;/code&gt; configuration variable.</source>
          <target state="translated">Эта опция обеспечивает дополнительное ограничение поверх &lt;code&gt;--window&lt;/code&gt; ; размер окна будет динамически уменьшаться, чтобы не занимать в памяти более &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; байт. Это полезно в репозиториях с сочетанием больших и маленьких объектов, чтобы не исчерпать память при большом окне, но при этом иметь возможность использовать преимущества большого окна для более мелких объектов. Размер может быть дополнен суффиксами &amp;laquo;k&amp;raquo;, &amp;laquo;m&amp;raquo; или &amp;laquo;g&amp;raquo;. &lt;code&gt;--window-memory=0&lt;/code&gt; делает использование памяти неограниченным. Значение по умолчанию берется из переменной конфигурации &lt;code&gt;pack.windowMemory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b37ac455915a6998f49ecb85f682ef29dfba0c63" translate="yes" xml:space="preserve">
          <source>This option provides an additional limit on top of &lt;code&gt;--window&lt;/code&gt;; the window size will dynamically scale down so as to not take up more than &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; bytes in memory. This is useful in repositories with a mix of large and small objects to not run out of memory with a large window, but still be able to take advantage of the large window for the smaller objects. The size can be suffixed with &quot;k&quot;, &quot;m&quot;, or &quot;g&quot;. &lt;code&gt;--window-memory=0&lt;/code&gt; makes memory usage unlimited. The default is taken from the &lt;code&gt;pack.windowMemory&lt;/code&gt; configuration variable. Note that the actual memory usage will be the limit multiplied by the number of threads used by &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">Эта опция обеспечивает дополнительное ограничение поверх &lt;code&gt;--window&lt;/code&gt; ; размер окна будет динамически уменьшаться, чтобы не занимать в памяти более &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; байт. Это полезно в репозиториях с сочетанием больших и маленьких объектов, чтобы не исчерпать память при большом окне, но при этом иметь возможность использовать преимущества большого окна для более мелких объектов. Размер может быть дополнен суффиксами &amp;laquo;k&amp;raquo;, &amp;laquo;m&amp;raquo; или &amp;laquo;g&amp;raquo;. &lt;code&gt;--window-memory=0&lt;/code&gt; делает использование памяти неограниченным. Значение по умолчанию берется из переменной конфигурации &lt;code&gt;pack.windowMemory&lt;/code&gt; . Обратите внимание, что фактическое использование памяти будет пределом, умноженным на количество потоков, используемых &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16a6b7273f3cccefcfa42e33a667c568aaee0875" translate="yes" xml:space="preserve">
          <source>This option sets how the tag message is cleaned up. The &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;verbatim&lt;/code&gt;, &lt;code&gt;whitespace&lt;/code&gt; and &lt;code&gt;strip&lt;/code&gt;. The &lt;code&gt;strip&lt;/code&gt; mode is default. The &lt;code&gt;verbatim&lt;/code&gt; mode does not change message at all, &lt;code&gt;whitespace&lt;/code&gt; removes just leading/trailing whitespace lines and &lt;code&gt;strip&lt;/code&gt; removes both whitespace and commentary.</source>
          <target state="translated">Этот параметр устанавливает способ очистки сообщения тега. &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; может быть одним из &lt;code&gt;verbatim&lt;/code&gt; , &lt;code&gt;whitespace&lt;/code&gt; и &lt;code&gt;strip&lt;/code&gt; . Режим &lt;code&gt;strip&lt;/code&gt; по умолчанию. &lt;code&gt;verbatim&lt;/code&gt; режим не меняет сообщение на всех, &lt;code&gt;whitespace&lt;/code&gt; удаляет только ведущие / конечные пробелы линии и &lt;code&gt;strip&lt;/code&gt; удаляет как пробелы и комментарии.</target>
        </trans-unit>
        <trans-unit id="1c04622cab5eac3fe5e20d1c189be97d2000ad23" translate="yes" xml:space="preserve">
          <source>This option takes the same values as the &lt;code&gt;trailer.ifexists&lt;/code&gt; configuration variable and it overrides what is specified by that option for trailers with the specified &amp;lt;token&amp;gt;.</source>
          <target state="translated">Эта опция принимает те же значения, что и конфигурационная переменная &lt;code&gt;trailer.ifexists&lt;/code&gt; , и переопределяет то, что указано этой опцией для трейлеров с указанным &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="de59f6641e33166f78c75c60b985eacdf1d2a0ea" translate="yes" xml:space="preserve">
          <source>This option takes the same values as the &lt;code&gt;trailer.ifmissing&lt;/code&gt; configuration variable and it overrides what is specified by that option for trailers with the specified &amp;lt;token&amp;gt;.</source>
          <target state="translated">Эта опция принимает те же значения, что и конфигурационная переменная &lt;code&gt;trailer.ifmissing&lt;/code&gt; , и отменяет то, что указано этой опцией для трейлеров с указанным &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="6b156d8c8a67e1eaa9c71b8c4e454e308c17c450" translate="yes" xml:space="preserve">
          <source>This option takes the same values as the &lt;code&gt;trailer.where&lt;/code&gt; configuration variable and it overrides what is specified by that option for trailers with the specified &amp;lt;token&amp;gt;.</source>
          <target state="translated">Эта опция принимает те же значения, что и переменная конфигурации &lt;code&gt;trailer.where&lt;/code&gt; , и отменяет то, что указано этой опцией для трейлеров с указанным &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="7df9ff293572a5c1527bce59783d9544419daa5b" translate="yes" xml:space="preserve">
          <source>This option tells where a new trailer will be added.</source>
          <target state="translated">Эта опция сообщает,куда будет добавлен новый трейлер.</target>
        </trans-unit>
        <trans-unit id="b36c69b0196d300061790058cdc0665affb9915e" translate="yes" xml:space="preserve">
          <source>This option tells which characters are recognized as trailer separators. By default only &lt;code&gt;:&lt;/code&gt; is recognized as a trailer separator, except that &lt;code&gt;=&lt;/code&gt; is always accepted on the command line for compatibility with other git commands.</source>
          <target state="translated">Эта опция сообщает, какие символы распознаются как разделители прицепов. По умолчанию только &lt;code&gt;:&lt;/code&gt; распознается как разделитель трейлера, за исключением того, что &lt;code&gt;=&lt;/code&gt; всегда принимается в командной строке для совместимости с другими командами git.</target>
        </trans-unit>
        <trans-unit id="d89b4c86a97ff8d1caa3cc84d59173003c0040dc" translate="yes" xml:space="preserve">
          <source>This option will cause fast-export to issue a &quot;deleteall&quot; directive for each commit followed by a full list of all files in the commit (as opposed to just listing the files which are different from the commit&amp;rsquo;s first parent).</source>
          <target state="translated">Эта опция приведет к тому, что быстрый экспорт будет выдавать директиву deleteall для каждой фиксации, за которой следует полный список всех файлов в фиксации (в отличие от простого перечисления файлов, которые отличаются от первого родительского элемента фиксации).</target>
        </trans-unit>
        <trans-unit id="f143abcfc92e5721db51d7183ec9951b417133b6" translate="yes" xml:space="preserve">
          <source>This option will cause git-svn to attempt to automatically populate the svn:mergeinfo property in the SVN repository when possible. Currently, this can only be done when dcommitting non-fast-forward merges where all parents but the first have already been pushed into SVN.</source>
          <target state="translated">Эта опция заставит git-svn пытаться автоматически заполнить свойство svn:mergeinfo в SVN-репозитории,когда это возможно.В настоящее время это может быть сделано только при декоммиттирующих непереадресационных слияниях,где все родители,за исключением первых,уже были затолканы в SVN.</target>
        </trans-unit>
        <trans-unit id="06697c041d5aacbd598da12e9917cf43b1b799c5" translate="yes" xml:space="preserve">
          <source>This option will cause the mapping from old to new objects to be loaded from named branch upon startup and saved as a new commit to that branch upon exit, enabling incremental of large trees. If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; does not exist it will be created.</source>
          <target state="translated">Эта опция приведет к тому, что отображение старых и новых объектов будет загружено из именованной ветки при запуске и сохранено как новая фиксация в этой ветке при выходе, что позволяет наращивать большие деревья. Если &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; не существует, она будет создана.</target>
        </trans-unit>
        <trans-unit id="dac1adaa75a920f5808dd15e4e9468c4b8319529" translate="yes" xml:space="preserve">
          <source>This output format is compatible with what &lt;code&gt;--index-info --stdin&lt;/code&gt; of &lt;code&gt;git update-index&lt;/code&gt; expects.</source>
          <target state="translated">Этот выходной формат совместим с тем, что &lt;code&gt;--index-info --stdin&lt;/code&gt; из &lt;code&gt;git update-index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b61a138f7f673e2e13a43bac58e20e6d27091cc" translate="yes" xml:space="preserve">
          <source>This outputs all the commit objects between the included and excluded commits, ordered by their distance to the included and excluded commits. Refs in &lt;code&gt;refs/bisect/&lt;/code&gt; are not used. The farthest from them is displayed first. (This is the only one displayed by &lt;code&gt;--bisect&lt;/code&gt;.)</source>
          <target state="translated">Это выводит все объекты фиксации между включенными и исключенными коммитами, упорядоченные по их расстоянию до включенных и исключенных коммитов. Ссылки в &lt;code&gt;refs/bisect/&lt;/code&gt; не используются. Первым отображается самый дальний от них. (Это единственный параметр, отображаемый параметром &lt;code&gt;--bisect&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="c6b16b352aa83127a9d9220754dcd31555c3879e" translate="yes" xml:space="preserve">
          <source>This outputs something like this (the actual commit object names would be different)</source>
          <target state="translated">Это выводит что-то вроде этого (реальные имена объектов коммита будут другими)</target>
        </trans-unit>
        <trans-unit id="05fcf2a461c52cf42967559d01dbd73ffe108135" translate="yes" xml:space="preserve">
          <source>This overrides a previous &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--gui&lt;/code&gt; setting and reads the default merge tool will be read from the configured &lt;code&gt;merge.tool&lt;/code&gt; variable.</source>
          <target state="translated">Это отменяет предыдущую настройку &lt;code&gt;-g&lt;/code&gt; или &lt;code&gt;--gui&lt;/code&gt; и означает, что инструмент слияния по умолчанию будет считан из настроенной переменной &lt;code&gt;merge.tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf7619d964802ced013b07a7c34a4262a7e0e3f4" translate="yes" xml:space="preserve">
          <source>This page can be displayed with &lt;code&gt;git help help&lt;/code&gt; or &lt;code&gt;git help --help&lt;/code&gt;</source>
          <target state="translated">Эта страница может отображаться с &lt;code&gt;git help help&lt;/code&gt; или &lt;code&gt;git help --help&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d990ef47ac594dcb10bc55890ec7a6963b3ffaed" translate="yes" xml:space="preserve">
          <source>This particular format is supplied as it&amp;rsquo;s short to implement and may be useful to a process that wants to create a new commit right now, without needing to use a working directory or &lt;code&gt;git update-index&lt;/code&gt;.</source>
          <target state="translated">Этот конкретный формат предоставляется, так как он краток для реализации и может быть полезен для процесса, который хочет создать новую фиксацию прямо сейчас, без необходимости использовать рабочий каталог или &lt;code&gt;git update-index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ace4cf0777df858ca1c6440d5cccb2ed6637934" translate="yes" xml:space="preserve">
          <source>This prints the name of a commit they are both based on. You should now look up the tree objects of those commits, which you can easily do with</source>
          <target state="translated">На этом напечатано название коммита,на котором они оба основаны.Теперь вы должны посмотреть вверх по дереву объектов этих коммитов,что вы можете легко сделать с помощью</target>
        </trans-unit>
        <trans-unit id="65ce33f2a6f411ae54de75d77a4a5c5e2663fba3" translate="yes" xml:space="preserve">
          <source>This program computes which packs in your repository are redundant. The output is suitable for piping to &lt;code&gt;xargs rm&lt;/code&gt; if you are in the root of the repository.</source>
          <target state="translated">Эта программа вычисляет, какие пакеты в вашем репозитории являются избыточными. Вывод подходит для &lt;code&gt;xargs rm&lt;/code&gt; к xargs rm, если вы находитесь в корне репозитория.</target>
        </trans-unit>
        <trans-unit id="9dec60739fdc5804a4abedc6cf66847493211890" translate="yes" xml:space="preserve">
          <source>This program dumps the given revisions in a form suitable to be piped into &lt;code&gt;git fast-import&lt;/code&gt;.</source>
          <target state="translated">Эта программа выгружает данные ревизии в форме, подходящей для передачи в &lt;code&gt;git fast-import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21943cdf9cd81593906492b86163eaa305da0be9" translate="yes" xml:space="preserve">
          <source>This program is usually not what the end user wants to run directly. Most end users want to use one of the existing frontend programs, which parses a specific type of foreign source and feeds the contents stored there to &lt;code&gt;git fast-import&lt;/code&gt;.</source>
          <target state="translated">Эта программа обычно не то, что конечный пользователь хочет запускать напрямую. Большинство конечных пользователей хотят использовать одну из существующих клиентских программ, которая анализирует определенный тип внешнего источника и передает хранимое в нем содержимое в &lt;code&gt;git fast-import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17acfb3fc2cc80c07ee41f3eeadca000eefd6ee0" translate="yes" xml:space="preserve">
          <source>This program searches the &lt;code&gt;$GIT_OBJECT_DIRECTORY&lt;/code&gt; for all objects that currently exist in a pack file as well as the independent object directories.</source>
          <target state="translated">Эта программа ищет в &lt;code&gt;$GIT_OBJECT_DIRECTORY&lt;/code&gt; все объекты, которые в данный момент существуют в файле пакета, а также независимые каталоги объектов.</target>
        </trans-unit>
        <trans-unit id="a85a25d731117b0f9fdffb50b50cd41a205c14dd" translate="yes" xml:space="preserve">
          <source>This public repository could further be mirrored, and that is how Git repositories at &lt;code&gt;kernel.org&lt;/code&gt; are managed.</source>
          <target state="translated">Этот общедоступный репозиторий можно в дальнейшем зеркалировать, и именно так &lt;code&gt;kernel.org&lt;/code&gt; репозитории Git на kernel.org .</target>
        </trans-unit>
        <trans-unit id="3f74cf126c451b6a68e67763c97a8253f485453b" translate="yes" xml:space="preserve">
          <source>This puts a Git archive of the named CVS module in the directory &amp;lt;destination&amp;gt;, which will be created if necessary.</source>
          <target state="translated">Это помещает Git-архив указанного модуля CVS в каталог &amp;lt;destination&amp;gt;, который будет создан при необходимости.</target>
        </trans-unit>
        <trans-unit id="8831ce4f64ae931ef68e9c4eb0b8a48320fea478" translate="yes" xml:space="preserve">
          <source>This rebase can be performed using the &lt;code&gt;--rebase-merges&lt;/code&gt; option. It will generate a todo list looking like this:</source>
          <target state="translated">Эту перебазировку можно выполнить с помощью параметра &lt;code&gt;--rebase-merges&lt;/code&gt; . Он сгенерирует список задач, который выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="5e2dd779ca9f11c05d6bae58c7d8a031f404dc72" translate="yes" xml:space="preserve">
          <source>This ref is unchanged since the last import or fetch, although the helper cannot necessarily determine what value that produced.</source>
          <target state="translated">Эта ссылка не изменилась с момента последнего импорта или извлечения,хотя помощник не может обязательно определить,какое значение было произведено.</target>
        </trans-unit>
        <trans-unit id="0e48a6f59fc5d06bf39a026582c3a2674a30ee86" translate="yes" xml:space="preserve">
          <source>This remote helper is transparently used by Git when you use commands such as &quot;git fetch &amp;lt;URL&amp;gt;&quot;, &quot;git clone &amp;lt;URL&amp;gt;&quot;, , &quot;git push &amp;lt;URL&amp;gt;&quot; or &quot;git remote add &amp;lt;nick&amp;gt; &amp;lt;URL&amp;gt;&quot;, where &amp;lt;URL&amp;gt; begins with &lt;code&gt;ext::&lt;/code&gt;. Examples:</source>
          <target state="translated">Этот удаленный помощник прозрачно используется Git, когда вы используете такие команды, как &quot;git fetch &amp;lt;URL&amp;gt;&quot;, &quot;git clone &amp;lt;URL&amp;gt;&quot;, &quot;git push &amp;lt;URL&amp;gt;&quot; или &quot;git remote add &amp;lt;nick&amp;gt; &amp;lt;URL&amp;gt;&quot; , где &amp;lt;URL&amp;gt; начинается с &lt;code&gt;ext::&lt;/code&gt; . Примеры:</target>
        </trans-unit>
        <trans-unit id="76e69f76fb018209940d2bd178b055119cc99cef" translate="yes" xml:space="preserve">
          <source>This remote helper uses the specified &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; to connect to a remote Git server.</source>
          <target state="translated">Этот удаленный помощник использует указанную &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; для подключения к удаленному серверу Git.</target>
        </trans-unit>
        <trans-unit id="08f3058ad626936f077bcdb5101be9917b27eae0" translate="yes" xml:space="preserve">
          <source>This removes the &lt;code&gt;WIP&lt;/code&gt; commit from the commit history, and sets your working tree to the state just before you made that snapshot.</source>
          <target state="translated">Это удаляет фиксацию &lt;code&gt;WIP&lt;/code&gt; из истории фиксации и устанавливает ваше рабочее дерево в состояние, которое было непосредственно перед созданием этого снимка.</target>
        </trans-unit>
        <trans-unit id="6cde691b95501235edce70baf30f3d475a6f05af" translate="yes" xml:space="preserve">
          <source>This removes the file from the index while keeping it in the working directory.</source>
          <target state="translated">При этом файл удаляется из индекса,сохраняя его в рабочей директории.</target>
        </trans-unit>
        <trans-unit id="f2e99bc05d5874bb5e940e93689126e6c4aa347e" translate="yes" xml:space="preserve">
          <source>This resolves any number of heads, but the resulting tree of the merge is always that of the current branch head, effectively ignoring all changes from all other branches. It is meant to be used to supersede old development history of side branches. Note that this is different from the -Xours option to the &lt;code&gt;recursive&lt;/code&gt; merge strategy.</source>
          <target state="translated">Это разрешает любое количество головок, но результирующее дерево слияния всегда является деревом текущей ветки, фактически игнорируя все изменения из всех других ветвей. Он предназначен для использования вместо старой истории развития боковых веток. Обратите внимание, что это отличается от опции -Xours для стратегии &lt;code&gt;recursive&lt;/code&gt; слияния.</target>
        </trans-unit>
        <trans-unit id="053dd73bd0ed92de95c5b132a1b4a0308f96cd04" translate="yes" xml:space="preserve">
          <source>This resolves cases with more than two heads, but refuses to do a complex merge that needs manual resolution. It is primarily meant to be used for bundling topic branch heads together. This is the default merge strategy when pulling or merging more than one branch.</source>
          <target state="translated">Это позволяет разрешить случаи с более чем двумя головками,но отказывается от сложного слияния,которое требует ручного разрешения.В первую очередь он предназначен для объединения тематических головок-отраслей.Это стратегия слияния по умолчанию при тянунии или слиянии более чем одного ответвления.</target>
        </trans-unit>
        <trans-unit id="e1337ea8d65ee53d09143c99f1f587dd31c2d238" translate="yes" xml:space="preserve">
          <source>This results in:</source>
          <target state="translated">Это приводит к тому:</target>
        </trans-unit>
        <trans-unit id="a3acfff86d0ac3c7e1c1af7dc1decad57125efa5" translate="yes" xml:space="preserve">
          <source>This runs &lt;code&gt;git fsck --unreachable&lt;/code&gt; using all the refs available in &lt;code&gt;refs/&lt;/code&gt;, optionally with additional set of objects specified on the command line, and prunes all unpacked objects unreachable from any of these head objects from the object database. In addition, it prunes the unpacked objects that are also found in packs by running &lt;code&gt;git prune-packed&lt;/code&gt;. It also removes entries from .git/shallow that are not reachable by any ref.</source>
          <target state="translated">Это запускает &lt;code&gt;git fsck --unreachable&lt;/code&gt; , используя все ссылки, доступные в &lt;code&gt;refs/&lt;/code&gt; , необязательно с дополнительным набором объектов, указанным в командной строке, и удаляет все распакованные объекты, недоступные для любого из этих головных объектов из базы данных объектов. Кроме того, он обрезает распакованные объекты, которые также находятся в пакетах, путем запуска &lt;code&gt;git prune-packed&lt;/code&gt; Pack . Он также удаляет записи из .git / shallow, недоступные для какой-либо ссылки.</target>
        </trans-unit>
        <trans-unit id="66bb2cd044765c7338efb3b55d3b51e463e22970" translate="yes" xml:space="preserve">
          <source>This runs a virtual check-out and check-in of all three stages of a file when resolving a three-way merge. This option is meant to be used when merging branches with different clean filters or end-of-line normalization rules. See &quot;Merging branches with differing checkin/checkout attributes&quot; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Это запускает виртуальную извлечение и регистрацию всех трех этапов файла при разрешении трехстороннего слияния. Эта опция предназначена для использования при объединении ветвей с разными чистыми фильтрами или правилами нормализации конца строки. См. &quot;Объединение веток с разными атрибутами &lt;a href=&quot;gitattributes&quot;&gt;checkin&lt;/a&gt; / checkout&quot; в gitattributes [5] для подробностей.</target>
        </trans-unit>
        <trans-unit id="b3bd580b61f2b6d754a6c049f07ff919549d1439" translate="yes" xml:space="preserve">
          <source>This says &quot;include everything in root, but nothing two levels below root.&quot; If we then add the folder &lt;code&gt;A/B/C&lt;/code&gt; as a recursive pattern, the folders &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;A/B&lt;/code&gt; are added as parent patterns. The resulting sparse-checkout file is now</source>
          <target state="translated">Это говорит: &amp;laquo;Включайте все в корневой каталог, но ничего на два уровня ниже корневого&amp;raquo;. Если мы затем добавим папку &lt;code&gt;A/B/C&lt;/code&gt; в качестве рекурсивного шаблона, папки &lt;code&gt;A&lt;/code&gt; и &lt;code&gt;A/B&lt;/code&gt; добавятся как родительские шаблоны. Полученный в результате файл разреженной проверки теперь</target>
        </trans-unit>
        <trans-unit id="9f2fcd6a73ae4ce542d08fc5e7f799314e8e80fc" translate="yes" xml:space="preserve">
          <source>This script can be passed to &quot;git bisect run&quot; to find the commit that introduced a performance regression:</source>
          <target state="translated">Этот скрипт может быть передан для &quot;выполнения бисекта git'а&quot;,чтобы найти коммит,который ввел регрессию производительности:</target>
        </trans-unit>
        <trans-unit id="72c86095923977328df35910b245e776428b840b" translate="yes" xml:space="preserve">
          <source>This script is included in various scripts to supply routines to parse files under $GIT_DIR/remotes/ and $GIT_DIR/branches/ and configuration variables that are related to fetching, pulling and pushing.</source>
          <target state="translated">Этот скрипт включен в различные скрипты для поставки подпрограмм для парсинга файлов под $GIT_DIR/remotes/и $GIT_DIR/branches/и переменных конфигурации,которые связаны с извлечением,вытаскиванием и нажатием.</target>
        </trans-unit>
        <trans-unit id="a405ee4e7ff4cc67a738558081388543481850c0" translate="yes" xml:space="preserve">
          <source>This section can also be used by those who respond to &lt;code&gt;git
request-pull&lt;/code&gt; or pull-request on GitHub (www.github.com) to integrate the work of others into their history. A sub-area lieutenant for a repository will act both as a participant and as an integrator.</source>
          <target state="translated">Этот раздел также может быть использован теми, кто отвечает на &lt;code&gt;git request-pull&lt;/code&gt; или pull-request на GitHub (www.github.com), чтобы интегрировать работу других в свою историю. Лейтенант подобласти хранилища будет действовать как участник и как интегратор.</target>
        </trans-unit>
        <trans-unit id="53af582e47690e9820cb012bdcbccf97b8def7d3" translate="yes" xml:space="preserve">
          <source>This section explains how to configure some common webservers to run gitweb. In all cases, &lt;code&gt;/path/to/gitweb&lt;/code&gt; in the examples is the directory you ran installed gitweb in, and contains &lt;code&gt;gitweb_config.perl&lt;/code&gt;.</source>
          <target state="translated">В этом разделе объясняется, как настроить некоторые распространенные веб-серверы для запуска gitweb. Во всех случаях &lt;code&gt;/path/to/gitweb&lt;/code&gt; в примерах - это каталог, в котором вы запустили установленный gitweb, и содержащий &lt;code&gt;gitweb_config.perl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79c0f1f15a38eae1b5cc2a5e381bfbc844ef9486" translate="yes" xml:space="preserve">
          <source>This section is only included if a packfile section is also included in the response.</source>
          <target state="translated">Этот раздел включается только в том случае,если в ответ также включается раздел пакетного файла.</target>
        </trans-unit>
        <trans-unit id="f3cd5eb5a3885e012dabb05171cc566728c1791b" translate="yes" xml:space="preserve">
          <source>This serves &lt;code&gt;git archive --remote&lt;/code&gt;. It is disabled by default, but a repository can enable it by setting &lt;code&gt;daemon.uploadarch&lt;/code&gt; configuration item to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Это обслуживает &lt;code&gt;git archive --remote&lt;/code&gt; . По умолчанию он отключен, но репозиторий может включить его, установив для &lt;code&gt;daemon.uploadarch&lt;/code&gt; конфигурации daemon.uploadarch значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1fc9be9532fca80163bd11748e3553d0b5b85a4" translate="yes" xml:space="preserve">
          <source>This serves &lt;code&gt;git fetch-pack&lt;/code&gt; and &lt;code&gt;git ls-remote&lt;/code&gt; clients. It is enabled by default, but a repository can disable it by setting &lt;code&gt;daemon.uploadpack&lt;/code&gt; configuration item to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Это обслуживает клиентов &lt;code&gt;git fetch-pack&lt;/code&gt; и &lt;code&gt;git ls-remote&lt;/code&gt; . Он включен по умолчанию, но репозиторий может отключить его, установив для &lt;code&gt;daemon.uploadpack&lt;/code&gt; конфигурации daemon.uploadpack значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce507c3877f92fc6c1de609ca683d1e2a4e1b26f" translate="yes" xml:space="preserve">
          <source>This serves &lt;code&gt;git fetch-pack&lt;/code&gt; and &lt;code&gt;git ls-remote&lt;/code&gt; clients. It is enabled by default, but a repository can disable it by setting this configuration item to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Это обслуживает клиентов &lt;code&gt;git fetch-pack&lt;/code&gt; и &lt;code&gt;git ls-remote&lt;/code&gt; . Он включен по умолчанию, но репозиторий может отключить его, установив для этого элемента конфигурации значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f25bae0e6df9b1b4a76a588d485b17d422e56c18" translate="yes" xml:space="preserve">
          <source>This serves &lt;code&gt;git send-pack&lt;/code&gt; clients, allowing anonymous push. It is disabled by default, as there is &lt;code&gt;no&lt;/code&gt; authentication in the protocol (in other words, anybody can push anything into the repository, including removal of refs). This is solely meant for a closed LAN setting where everybody is friendly. This service can be enabled by setting &lt;code&gt;daemon.receivepack&lt;/code&gt; configuration item to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Это обслуживает клиентов &lt;code&gt;git send-pack&lt;/code&gt; , разрешая анонимный push. По умолчанию он отключен, так как в протоколе &lt;code&gt;no&lt;/code&gt; аутентификации (другими словами, кто угодно может протолкнуть в репозиторий что угодно, включая удаление ссылок). Это предназначено исключительно для закрытой локальной сети, где все дружелюбны. Эту службу можно включить, установив для &lt;code&gt;daemon.receivepack&lt;/code&gt; конфигурации daemon.receivepack значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b2859849402fde4d51ffe73c129c97d00cb6083" translate="yes" xml:space="preserve">
          <source>This serves &lt;code&gt;git send-pack&lt;/code&gt; clients, allowing push. It is disabled by default for anonymous users, and enabled by default for users authenticated by the web server. It can be disabled by setting this item to &lt;code&gt;false&lt;/code&gt;, or enabled for all users, including anonymous users, by setting it to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Это обслуживает клиентов &lt;code&gt;git send-pack&lt;/code&gt; , разрешая push. По умолчанию он отключен для анонимных пользователей и включен по умолчанию для пользователей, аутентифицированных веб-сервером. Его можно отключить, установив для этого элемента значение &lt;code&gt;false&lt;/code&gt; , или включить для всех пользователей, включая анонимных, установив для него значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d789007e515492a9cc42830b12a07ff1db6d084" translate="yes" xml:space="preserve">
          <source>This serves Git clients older than version 1.6.6 that are unable to use the upload pack service. When enabled, clients are able to read any file within the repository, including objects that are no longer reachable from a branch but are still present. It is enabled by default, but a repository can disable it by setting this configuration item to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Это обслуживает клиентов Git старше версии 1.6.6, которые не могут использовать службу пакетов загрузки. Если этот параметр включен, клиенты могут читать любой файл в репозитории, включая объекты, которые больше не доступны из ветки, но все еще присутствуют. Он включен по умолчанию, но репозиторий может отключить его, установив для этого элемента конфигурации значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5456200c93d8963943eca093573a9d8938a4ea5f" translate="yes" xml:space="preserve">
          <source>This sets GIT_SVN_ID (instead of using the environment). This allows the user to override the default refname to fetch from when tracking a single URL. The &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;dcommit&lt;/code&gt; commands no longer require this switch as an argument.</source>
          <target state="translated">Это устанавливает GIT_SVN_ID (вместо использования среды). Это позволяет пользователю переопределить имя ссылки по умолчанию для выборки при отслеживании одного URL. В &lt;code&gt;log&lt;/code&gt; и &lt;code&gt;dcommit&lt;/code&gt; команды больше не требуют этого переключателя в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="acb244d7aa46a820614aa10decb4464bc8ecabb6" translate="yes" xml:space="preserve">
          <source>This setting can be disabled by the &lt;code&gt;--no-notes&lt;/code&gt; option, overridden by the &lt;code&gt;GIT_NOTES_DISPLAY_REF&lt;/code&gt; environment variable, and overridden by the &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt; option.</source>
          <target state="translated">Этот параметр может быть отключен параметром &lt;code&gt;--no-notes&lt;/code&gt; , переопределен переменной среды &lt;code&gt;GIT_NOTES_DISPLAY_REF&lt;/code&gt; и параметром &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8f435ef26eec94bd5c23846a74c0f4d57a87c8f" translate="yes" xml:space="preserve">
          <source>This setting can be overridden by passing the &lt;code&gt;--strategy&lt;/code&gt; option.</source>
          <target state="translated">Этот параметр можно &lt;code&gt;--strategy&lt;/code&gt; параметр --strategy .</target>
        </trans-unit>
        <trans-unit id="5d273f23cd160340c4f9b3fbc5a088c0fc2c32be" translate="yes" xml:space="preserve">
          <source>This setting can be overridden by the &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; environment variable.</source>
          <target state="translated">Этот параметр можно &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; переменной среды GIT_NOTES_REWRITE_REF .</target>
        </trans-unit>
        <trans-unit id="b28435a905552ea063d5203034696b428fdc0b87" translate="yes" xml:space="preserve">
          <source>This setting can be overridden with the &lt;code&gt;GIT_NOTES_DISPLAY_REF&lt;/code&gt; environment variable, which must be a colon separated list of refs or globs.</source>
          <target state="translated">Этот параметр можно переопределить с помощью переменной среды &lt;code&gt;GIT_NOTES_DISPLAY_REF&lt;/code&gt; , которая должна быть списком ссылок или глобусов, разделенных двоеточиями.</target>
        </trans-unit>
        <trans-unit id="45473aa6b3903d5487aab6b473bcf528e266cdec" translate="yes" xml:space="preserve">
          <source>This setting can be overridden with the &lt;code&gt;GIT_NOTES_REWRITE_MODE&lt;/code&gt; environment variable.</source>
          <target state="translated">Этот параметр можно переопределить с помощью переменной среды &lt;code&gt;GIT_NOTES_REWRITE_MODE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39555b916eeeec115f6735665b5426bf964f4e52" translate="yes" xml:space="preserve">
          <source>This setting can be overridden with the &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; environment variable, which must be a colon separated list of refs or globs.</source>
          <target state="translated">Этот параметр можно переопределить с помощью переменной среды &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; , которая должна быть списком ссылок или глобусов, разделенных двоеточиями.</target>
        </trans-unit>
        <trans-unit id="d17d74e5aa80b06bd416eb43f1c510767efc6dc8" translate="yes" xml:space="preserve">
          <source>This setting defaults to &quot;refs/notes/commits&quot;, and it can be overridden by the &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; environment variable. See &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию этот параметр имеет значение &amp;laquo;refs / notes / commits&amp;raquo;, и его можно &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; переменной среды GIT_NOTES_REF . См. &lt;a href=&quot;git-notes&quot;&gt;Git-notes [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="843f7e48b1e3c030c426060d83a399e29388c249" translate="yes" xml:space="preserve">
          <source>This setting forces Git to normalize line endings for this file on checkin and convert them to CRLF when the file is checked out.</source>
          <target state="translated">Эта настройка заставляет Git нормализовать окончания строк для этого файла при проверке и конвертировать их в CRLF,когда файл извлекается.</target>
        </trans-unit>
        <trans-unit id="8c7bb001c250cfdf4247d252deb09b8b2c2a2839" translate="yes" xml:space="preserve">
          <source>This setting forces Git to normalize line endings to LF on checkin and prevents conversion to CRLF when the file is checked out.</source>
          <target state="translated">Эта настройка заставляет Git нормализовать окончания строк в LF при проверке и предотвращает преобразование в CRLF,когда файл извлекается.</target>
        </trans-unit>
        <trans-unit id="886fc853da603148f91948f5793a0d1be70dc28a" translate="yes" xml:space="preserve">
          <source>This setting is automatically guessed by &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt; when the repository was created. By default a repository that ends in &quot;/.git&quot; is assumed to be not bare (bare = false), while all other repositories are assumed to be bare (bare = true).</source>
          <target state="translated">Этот параметр автоматически определяется &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; или &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; при создании репозитория. По умолчанию предполагается, что репозиторий, заканчивающийся на &amp;laquo;/.git&amp;raquo;, не пустой (bare = false), в то время как все другие репозитории считаются пустыми (bare = true).</target>
        </trans-unit>
        <trans-unit id="a32da40367d476cb817ba2cfa99cb18bc04a7b3a" translate="yes" xml:space="preserve">
          <source>This setting overrides the default of the &lt;code&gt;--cleanup&lt;/code&gt; option in &lt;code&gt;git commit&lt;/code&gt;. See &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for details. Changing the default can be useful when you always want to keep lines that begin with comment character &lt;code&gt;#&lt;/code&gt; in your log message, in which case you would do &lt;code&gt;git config commit.cleanup whitespace&lt;/code&gt; (note that you will have to remove the help lines that begin with &lt;code&gt;#&lt;/code&gt; in the commit log template yourself, if you do this).</source>
          <target state="translated">Этот параметр отменяет значение по умолчанию параметра &lt;code&gt;--cleanup&lt;/code&gt; в &lt;code&gt;git commit&lt;/code&gt; . Подробнее см. &lt;a href=&quot;git-commit&quot;&gt;Git-commit [1]&lt;/a&gt; . Изменение значения по умолчанию может быть полезно, когда вы всегда хотите сохранить в своем сообщении журнала строки, начинающиеся с символа комментария &lt;code&gt;#&lt;/code&gt; , и в этом случае вам нужно будет выполнить &lt;code&gt;git config commit.cleanup whitespace&lt;/code&gt; (обратите внимание, что вам придется удалить строки справки, которые начинаются с &lt;code&gt;#&lt;/code&gt; в шаблоне журнала фиксации самостоятельно, если вы это сделаете).</target>
        </trans-unit>
        <trans-unit id="e85001143ab4f6109a8db79b80d46592a3792b5e" translate="yes" xml:space="preserve">
          <source>This setting should be set to a comma-separated list of color and date settings, starting and ending with a color, the dates should be set from oldest to newest. The metadata will be colored given the colors if the line was introduced before the given timestamp, overwriting older timestamped colors.</source>
          <target state="translated">Данная настройка должна быть установлена в виде разделенного запятыми списка настроек цвета и даты,начиная и заканчивая цветом,даты должны быть установлены от самых старых до самых новых.Метаданные будут окрашиваться в цвета,если строка была введена до заданной метки времени,перезаписывая старые метки времени.</target>
        </trans-unit>
        <trans-unit id="1b39995bc064271da90ffd3401f4ace36766db6f" translate="yes" xml:space="preserve">
          <source>This setting writes a JSON-based format that is suited for machine interpretation. See &lt;code&gt;GIT_TRACE2&lt;/code&gt; for available trace output options and &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">Этот параметр записывает формат на основе JSON, который подходит для машинной интерпретации. См. &lt;code&gt;GIT_TRACE2&lt;/code&gt; для доступных опций вывода трассировки и &lt;a href=&quot;api-trace2&quot;&gt;документацию Trace2&lt;/a&gt; для полной информации.</target>
        </trans-unit>
        <trans-unit id="d727921c238e28668ffb0dd7e4775077e3d6b368" translate="yes" xml:space="preserve">
          <source>This should be a colon-separated list of absolute paths. If set, it is a list of directories that Git should not chdir up into while looking for a repository directory (useful for excluding slow-loading network directories). It will not exclude the current working directory or a GIT_DIR set on the command line or in the environment. Normally, Git has to read the entries in this list and resolve any symlink that might be present in order to compare them with the current directory. However, if even this access is slow, you can add an empty entry to the list to tell Git that the subsequent entries are not symlinks and needn&amp;rsquo;t be resolved; e.g., &lt;code&gt;GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink&lt;/code&gt;.</source>
          <target state="translated">Это должен быть список абсолютных путей, разделенных двоеточиями. Если установлено, это список каталогов, в которые Git не должен открывать chdir при поиске каталога репозитория (полезно для исключения медленно загружающихся сетевых каталогов). Он не исключает текущий рабочий каталог или GIT_DIR, установленный в командной строке или в среде. Обычно Git должен прочитать записи в этом списке и разрешить любую символическую ссылку, которая может присутствовать, чтобы сравнить их с текущим каталогом. Однако, если даже этот доступ медленный, вы можете добавить пустую запись в список, чтобы сообщить Git, что последующие записи не являются символическими ссылками и не нуждаются в разрешении; например, &lt;code&gt;GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02391ad98329bedcf2ddfbe7ebdef774e4e7cc67" translate="yes" xml:space="preserve">
          <source>This should help you to submit patches inline using KMail.</source>
          <target state="translated">Это должно помочь вам отправить патчи в KMail.</target>
        </trans-unit>
        <trans-unit id="dc65a8c75ec971d079e04ac05264e8ee2fb908c8" translate="yes" xml:space="preserve">
          <source>This should make &quot;--pretty=oneline&quot; a whole lot more readable for people using 80-column terminals.</source>
          <target state="translated">Это должно сделать &quot;--pretty=oneline&quot; намного более читабельным для людей,использующих 80-колоночные терминалы.</target>
        </trans-unit>
        <trans-unit id="cda899a68420b48633046b1cef20e4960b467a9e" translate="yes" xml:space="preserve">
          <source>This should make it easy to look up svn log messages when svn users refer to -r/--revision numbers.</source>
          <target state="translated">Это должно упростить поиск сообщений журнала svn,когда пользователи svn ссылаются на номера -r/--re-revision.</target>
        </trans-unit>
        <trans-unit id="3fce0b9f9a8369808848ec3f066c1735323bb111" translate="yes" xml:space="preserve">
          <source>This should not be confused with the &lt;code&gt;ours&lt;/code&gt; merge strategy, which does not even look at what the other tree contains at all. It discards everything the other tree did, declaring &lt;code&gt;our&lt;/code&gt; history contains all that happened in it.</source>
          <target state="translated">Это не следует путать с &lt;code&gt;ours&lt;/code&gt; стратегией слияния, которая даже не смотрит на то, что вообще содержит другое дерево. Оно отбрасывает все, что делало другое дерево, заявляя, что &lt;code&gt;our&lt;/code&gt; история содержит все, что с ним произошло.</target>
        </trans-unit>
        <trans-unit id="70d0ce2d7e7f48cdf303b28228ad271bde0b97ac" translate="yes" xml:space="preserve">
          <source>This shows that our resolved version deleted &quot;Hello world&quot; from the first parent, deleted &quot;Goodbye&quot; from the second parent, and added &quot;Goodbye world&quot;, which was previously absent from both.</source>
          <target state="translated">Это показывает,что наша разрешенная версия удалила &quot;Hello world&quot; из первого родителя,удалила &quot;Goodbye&quot; из второго родителя и добавила &quot;Goodbye world&quot;,который ранее отсутствовал в обоих.</target>
        </trans-unit>
        <trans-unit id="e0fbc89a9eb1f686d88b41839c951cd18b86bf5e" translate="yes" xml:space="preserve">
          <source>This shows that you can do without a run script if you write the test on a single line.</source>
          <target state="translated">Это показывает,что вы можете обойтись без запуска скрипта,если напишете тест на одной строке.</target>
        </trans-unit>
        <trans-unit id="f580a082428b40358ee35f346bb87b38bbd6e3f8" translate="yes" xml:space="preserve">
          <source>This shows the change between HEAD and index (i.e. what will be committed if you say &lt;code&gt;git commit&lt;/code&gt;), and between index and working tree files (i.e. what you could stage further before &lt;code&gt;git commit&lt;/code&gt; using &lt;code&gt;git add&lt;/code&gt;) for each path. A sample output looks like this:</source>
          <target state="translated">Это показывает изменение между HEAD и индексом (то есть, что будет зафиксировано, если вы скажете &lt;code&gt;git commit&lt;/code&gt; ), а также между индексом и файлами рабочего дерева (то есть что вы могли бы подготовить дальше перед &lt;code&gt;git commit&lt;/code&gt; с помощью &lt;code&gt;git add&lt;/code&gt; ) для каждого пути. Пример вывода выглядит так:</target>
        </trans-unit>
        <trans-unit id="cdedf9c4235065dcc3b6a065543c259879fefa6b" translate="yes" xml:space="preserve">
          <source>This shows the files and directories to be deleted and issues an &quot;Input ignore patterns&amp;gt;&amp;gt;&quot; prompt. You can input space-separated patterns to exclude files and directories from deletion. E.g. &quot;*.c *.h&quot; will excludes files end with &quot;.c&quot; and &quot;.h&quot; from deletion. When you are satisfied with the filtered result, press ENTER (empty) back to the main menu.</source>
          <target state="translated">Это покажет файлы и каталоги, которые нужно удалить, и выдаст запрос &amp;laquo;Шаблоны игнорирования ввода &amp;gt;&amp;gt;&amp;raquo;. Вы можете ввести шаблоны, разделенные пробелами, чтобы исключить файлы и каталоги из удаления. Например, &amp;laquo;* .c * .h&amp;raquo; исключает файлы, заканчивающиеся на &amp;laquo;.c&amp;raquo; и &amp;laquo;.h&amp;raquo;, из удаления. Если вас устраивает отфильтрованный результат, нажмите ENTER (пусто), чтобы вернуться в главное меню.</target>
        </trans-unit>
        <trans-unit id="d76da1518821bfa115def32fd19d8e8b1e73d979" translate="yes" xml:space="preserve">
          <source>This shows the files and directories to be deleted and issues an &quot;Select items to delete&amp;gt;&amp;gt;&quot; prompt. When the prompt ends with double &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; like this, you can make more than one selection, concatenated with whitespace or comma. Also you can say ranges. E.g. &quot;2-5 7,9&quot; to choose 2,3,4,5,7,9 from the list. If the second number in a range is omitted, all remaining items are selected. E.g. &quot;7-&quot; to choose 7,8,9 from the list. You can say &lt;code&gt;*&lt;/code&gt; to choose everything. Also when you are satisfied with the filtered result, press ENTER (empty) back to the main menu.</source>
          <target state="translated">Это показывает файлы и каталоги, которые нужно удалить, и выдает запрос &amp;laquo;Выберите элементы для удаления &amp;gt;&amp;gt;&amp;raquo;. Когда подсказка заканчивается двойным &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , как это, вы можете сделать более одного выбора, объединенные пробелом или запятой. Также вы можете сказать диапазоны. Например, &amp;laquo;2-5 7,9&amp;raquo; для выбора 2,3,4,5,7,9 из списка. Если второе число в диапазоне опущено, выбираются все остальные элементы. Например, &amp;laquo;7-&amp;raquo;, чтобы выбрать 7,8,9 из списка. Вы можете сказать &lt;code&gt;*&lt;/code&gt; , чтобы выбрать все. Также, когда вас устраивает отфильтрованный результат, нажмите ENTER (пусто), чтобы вернуться в главное меню.</target>
        </trans-unit>
        <trans-unit id="53f59db63b45945049b0fe262d831991c1cb4a8d" translate="yes" xml:space="preserve">
          <source>This shows the status information and issues an &quot;Update&amp;gt;&amp;gt;&quot; prompt. When the prompt ends with double &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, you can make more than one selection, concatenated with whitespace or comma. Also you can say ranges. E.g. &quot;2-5 7,9&quot; to choose 2,3,4,5,7,9 from the list. If the second number in a range is omitted, all remaining patches are taken. E.g. &quot;7-&quot; to choose 7,8,9 from the list. You can say &lt;code&gt;*&lt;/code&gt; to choose everything.</source>
          <target state="translated">При этом отображается информация о состоянии и появляется запрос &amp;laquo;Обновить &amp;gt;&amp;gt;&amp;raquo;. Когда подсказка заканчивается двойным &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , вы можете сделать более одного выбора, объединенные пробелом или запятой. Также вы можете сказать диапазоны. Например, &amp;laquo;2-5 7,9&amp;raquo; для выбора 2,3,4,5,7,9 из списка. Если второе число в диапазоне опущено, все оставшиеся исправления будут взяты. Например, &amp;laquo;7-&amp;raquo;, чтобы выбрать 7,8,9 из списка. Вы можете сказать &lt;code&gt;*&lt;/code&gt; , чтобы выбрать все.</target>
        </trans-unit>
        <trans-unit id="728eb7da1f0f1bff86889f4ac114a7967bd3817f" translate="yes" xml:space="preserve">
          <source>This snapshot is now stored in a temporary staging area which Git calls the &quot;index&quot;. You can permanently store the contents of the index in the repository with &lt;code&gt;git commit&lt;/code&gt;:</source>
          <target state="translated">Этот снимок теперь хранится во временной промежуточной области, которую Git называет &amp;laquo;индексом&amp;raquo;. Вы можете постоянно хранить содержимое индекса в репозитории с помощью &lt;code&gt;git commit&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dfa3a419f48a4609a0668c69a143f543612e713a" translate="yes" xml:space="preserve">
          <source>This solution is not 100% bulletproof, in the sense that if some project has a named ref (branch, tag) starting with &lt;code&gt;git/&lt;/code&gt;, then paths such as</source>
          <target state="translated">Это решение не является на 100% пуленепробиваемым в том смысле, что если у какого-либо проекта есть именованный ref (ветка, тег), начинающийся с &lt;code&gt;git/&lt;/code&gt; , то пути, такие как</target>
        </trans-unit>
        <trans-unit id="02da975953020f9ebbe3388889e8a8406f05d0c7" translate="yes" xml:space="preserve">
          <source>This step and the next one could be combined into a single step with &quot;checkout -b my2.6.14 v2.6.14&quot;.</source>
          <target state="translated">Этот и следующий шаг можно объединить в один с &quot;checkout -b my2.6.14 v2.6.14&quot;.</target>
        </trans-unit>
        <trans-unit id="9b0b980e437fd3274de63464aa9184e42833d899" translate="yes" xml:space="preserve">
          <source>This suffix is also accepted when spelled in uppercase, and means the same thing no matter the case.</source>
          <target state="translated">Этот суффикс также принимается при написании в верхнем регистре и означает одно и то же независимо от случая.</target>
        </trans-unit>
        <trans-unit id="01f381d8f83cae139b7e7ff06573574ebdbc8086" translate="yes" xml:space="preserve">
          <source>This supersedes the &lt;a href=&quot;#post-update&quot;&gt;&lt;em&gt;post-update&lt;/em&gt;&lt;/a&gt; hook in that it gets both old and new values of all the refs in addition to their names.</source>
          <target state="translated">Это заменяет ловушку &lt;a href=&quot;#post-update&quot;&gt;&lt;em&gt;post-update,&lt;/em&gt;&lt;/a&gt; поскольку она получает как старые, так и новые значения всех ссылок в дополнение к их именам.</target>
        </trans-unit>
        <trans-unit id="6339f7da558022ed0ae10f566dd01f30bb047e19" translate="yes" xml:space="preserve">
          <source>This synchronizes your public repository to match the named branch head (i.e. &lt;code&gt;master&lt;/code&gt; in this case) and objects reachable from them in your current repository.</source>
          <target state="translated">Это синхронизирует ваш общедоступный репозиторий в соответствии с заголовком названной ветки (то есть &lt;code&gt;master&lt;/code&gt; в данном случае) и объектами, доступными из них в вашем текущем репозитории.</target>
        </trans-unit>
        <trans-unit id="0012e2584fc653cc03e6dda35ea11cbdc9f6c1a2" translate="yes" xml:space="preserve">
          <source>This syntax is only recognized if there are no slashes before the first colon. This helps differentiate a local path that contains a colon. For example the local path &lt;code&gt;foo:bar&lt;/code&gt; could be specified as an absolute path or &lt;code&gt;./foo:bar&lt;/code&gt; to avoid being misinterpreted as an ssh url.</source>
          <target state="translated">Этот синтаксис распознается только в том случае, если перед первым двоеточием нет косой черты. Это помогает различать локальный путь, содержащий двоеточие. Например, локальный путь &lt;code&gt;foo:bar&lt;/code&gt; может быть указан как абсолютный путь или &lt;code&gt;./foo:bar&lt;/code&gt; , чтобы избежать ошибочной интерпретации как URL-адрес ssh.</target>
        </trans-unit>
        <trans-unit id="9f5d9872e03f1e6dd55415fa2249d9c84ea6f738" translate="yes" xml:space="preserve">
          <source>This takes a text file each of whose lines is a shell glob pattern. Filepairs that match a glob pattern on an earlier line in the file are output before ones that match a later line, and filepairs that do not match any glob pattern are output last.</source>
          <target state="translated">Для этого берется текстовый файл,каждая строка которого представляет собой шаблон оболочки.Пары файлов,которые соответствуют шаблону глобуса на более ранней строке файла,выводятся раньше,чем те,которые соответствуют более поздней строке,а пары файлов,которые не соответствуют шаблону глобуса,выводятся последними.</target>
        </trans-unit>
        <trans-unit id="b169549655fddd825e67d14c1591493d6ac0be03" translate="yes" xml:space="preserve">
          <source>This target is intended to be more of a summary (like GIT_TRACE) and less detailed than the other targets. It ignores thread, region, and data messages, for example.</source>
          <target state="translated">Эта цель должна быть более краткой (как GIT_TRACE)и менее детализированной,чем другие цели.Она игнорирует,например,сообщения о потоке,регионе и данных.</target>
        </trans-unit>
        <trans-unit id="49bec15344e0cef74269dabec868d060f4c1b07d" translate="yes" xml:space="preserve">
          <source>This tells the bisect process that no commit after &lt;code&gt;v2.5&lt;/code&gt;, up to and including &lt;code&gt;v2.6&lt;/code&gt;, should be tested.</source>
          <target state="translated">Это говорит процессу пополам, что никакие &lt;code&gt;v2.5&lt;/code&gt; после v2.5 , вплоть до &lt;code&gt;v2.6&lt;/code&gt; включительно , не должны тестироваться.</target>
        </trans-unit>
        <trans-unit id="1842bab1269e00a8bf77d06ee23570861225cc48" translate="yes" xml:space="preserve">
          <source>This tells the bisect process that the commits between &lt;code&gt;v2.5&lt;/code&gt; and &lt;code&gt;v2.6&lt;/code&gt; (inclusive) should be skipped.</source>
          <target state="translated">Это говорит процессу пополам, что коммиты между &lt;code&gt;v2.5&lt;/code&gt; и &lt;code&gt;v2.6&lt;/code&gt; (включительно) должны быть пропущены.</target>
        </trans-unit>
        <trans-unit id="fb42c5eea9f7afe3662a07fd6af3c3105ab04e8f" translate="yes" xml:space="preserve">
          <source>This tells you that the immediately following version of the file was &quot;newsha&quot;, and that the immediately preceding version was &quot;oldsha&quot;. You also know the commit messages that went with the change from oldsha to 4b9458b and with the change from 4b9458b to newsha.</source>
          <target state="translated">Это говорит о том,что непосредственно следующая версия файла была &quot;newsha&quot;,а непосредственно предшествующая версия-&quot;oldsha&quot;.Вы также знаете о сообщениях коммита,которые пошли с изменением с Oldsha на 4b9458b и с изменением с 4b9458b на newsha.</target>
        </trans-unit>
        <trans-unit id="8f1179423f3ea23a6c9e525ef159db41c1155b6a" translate="yes" xml:space="preserve">
          <source>This transformation is used to detect renames and copies, and is controlled by the -M option (to detect renames) and the -C option (to detect copies as well) to the &lt;code&gt;git diff-*&lt;/code&gt; commands. If the input contained these filepairs:</source>
          <target state="translated">Это преобразование используется для обнаружения переименований и копий и управляется опцией -M (для обнаружения переименований) и опцией -C (также для обнаружения копий) команд &lt;code&gt;git diff-*&lt;/code&gt; . Если входные данные содержали эти файловые пары:</target>
        </trans-unit>
        <trans-unit id="573190bccf8f2a4ea6fc33eedd23b4b8fc3f90f8" translate="yes" xml:space="preserve">
          <source>This transformation is used to merge filepairs broken by diffcore-break, and not transformed into rename/copy by diffcore-rename, back into a single modification. This always runs when diffcore-break is used.</source>
          <target state="translated">Данное преобразование используется для объединения пар файлов,разбитых diffcore-break,и не преобразованных в переименование/копирование по diffcore-rename,обратно в единую модификацию.Это всегда выполняется при использовании diffcore-break.</target>
        </trans-unit>
        <trans-unit id="448726c2164ad1aa28f4d84dcd657bc466764287" translate="yes" xml:space="preserve">
          <source>This transformation limits the set of filepairs to those that change specified strings between the preimage and the postimage in a certain way. -S&amp;lt;block of text&amp;gt; and -G&amp;lt;regular expression&amp;gt; options are used to specify different ways these strings are sought.</source>
          <target state="translated">Это преобразование ограничивает набор файловых пар теми, которые изменяют определенные строки между прообразом и постимажем определенным образом. Параметры -S &amp;lt;блок текста&amp;gt; и -G &amp;lt;регулярное выражение&amp;gt; используются для указания различных способов поиска этих строк.</target>
        </trans-unit>
        <trans-unit id="eb01f7c28a2e42a179d9ca76727e0a7db6bb8dce" translate="yes" xml:space="preserve">
          <source>This transport can be used for both uploading and downloading, and requires you to have a log-in privilege over &lt;code&gt;ssh&lt;/code&gt; to the remote machine. It finds out the set of objects the other side lacks by exchanging the head commits both ends have and transfers (close to) minimum set of objects. It is by far the most efficient way to exchange Git objects between repositories.</source>
          <target state="translated">Этот транспорт может использоваться как для загрузки, так и для скачивания, и требует, чтобы у вас были права входа в систему через &lt;code&gt;ssh&lt;/code&gt; на удаленном компьютере. Он определяет набор объектов, которых не хватает другой стороне, путем обмена головными коммитами, которые есть на обоих концах, и передачи (близкого к) минимального набора объектов. На сегодняшний день это наиболее эффективный способ обмена объектами Git между репозиториями.</target>
        </trans-unit>
        <trans-unit id="1e93313475dc2966a9b364d25d3e63ddb92cd35d" translate="yes" xml:space="preserve">
          <source>This transport is the same as SSH transport but uses &lt;code&gt;sh&lt;/code&gt; to run both ends on the local machine instead of running other end on the remote machine via &lt;code&gt;ssh&lt;/code&gt;.</source>
          <target state="translated">Этот транспорт такой же, как транспорт SSH, но использует &lt;code&gt;sh&lt;/code&gt; для запуска обоих концов на локальном компьютере вместо запуска другого конца на удаленном компьютере через &lt;code&gt;ssh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="187c060b77919e40b0db07be6c4444d6bedf0f1f" translate="yes" xml:space="preserve">
          <source>This transport was designed for anonymous downloading. Like SSH transport, it finds out the set of objects the downstream side lacks and transfers (close to) minimum set of objects.</source>
          <target state="translated">Этот транспорт был разработан для анонимной загрузки.Как и транспорт SSH,он обнаруживает набор объектов,которых недостает нисходящей стороне,и передает (близкий к)минимальный набор объектов.</target>
        </trans-unit>
        <trans-unit id="a843c4941e9eb68216876c91a59842ae7d058faa" translate="yes" xml:space="preserve">
          <source>This tutorial explains how to import a new project into Git, make changes to it, and share changes with other developers.</source>
          <target state="translated">В этом руководстве объясняется,как импортировать новый проект в Git,вносить в него изменения и делиться изменениями с другими разработчиками.</target>
        </trans-unit>
        <trans-unit id="586b98337ae35b657ccc9687b72106b49b3b174b" translate="yes" xml:space="preserve">
          <source>This tutorial explains how to use the &quot;core&quot; Git commands to set up and work with a Git repository.</source>
          <target state="translated">Данное руководство объясняет,как использовать команды &quot;core&quot; Git'а для настройки и работы с Git-репозиторием.</target>
        </trans-unit>
        <trans-unit id="4f3b7287fc4739a451de38537fb0637003a134c1" translate="yes" xml:space="preserve">
          <source>This tutorial should be enough to perform basic distributed revision control for your projects. However, to fully understand the depth and power of Git you need to understand two simple ideas on which it is based:</source>
          <target state="translated">Этого руководства должно быть достаточно,чтобы выполнить базовый распределённый контроль над ревизиями для ваших проектов.Однако,чтобы полностью понять глубину и мощь Git'а,вам необходимо понять две простые идеи,на которых он основан:</target>
        </trans-unit>
        <trans-unit id="50b7797bad77b49520127714ff8a716873aad978" translate="yes" xml:space="preserve">
          <source>This updates (or creates, as necessary) branches &lt;code&gt;pu&lt;/code&gt; and &lt;code&gt;tmp&lt;/code&gt; in the local repository by fetching from the branches (respectively) &lt;code&gt;pu&lt;/code&gt; and &lt;code&gt;maint&lt;/code&gt; from the remote repository.</source>
          <target state="translated">Это обновляет (или создает, при необходимости) ветки &lt;code&gt;pu&lt;/code&gt; и &lt;code&gt;tmp&lt;/code&gt; в локальном репозитории, извлекая из ветвей (соответственно) &lt;code&gt;pu&lt;/code&gt; и &lt;code&gt;maint&lt;/code&gt; из удаленного репозитория.</target>
        </trans-unit>
        <trans-unit id="70ac0b727096d7231e8fdcdd112d1a04551c8ca8" translate="yes" xml:space="preserve">
          <source>This used to be the default, but not since Git 2.0 (&lt;code&gt;simple&lt;/code&gt; is the new default).</source>
          <target state="translated">Раньше это было по умолчанию, но не со времен Git 2.0 ( &lt;code&gt;simple&lt;/code&gt; - новое по умолчанию).</target>
        </trans-unit>
        <trans-unit id="fd75f35034e73b98112aaaf4198ee488b9e51804" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;--interactive&lt;/code&gt; machinery internally, but combining it with the &lt;code&gt;--interactive&lt;/code&gt; option explicitly is generally not a good idea unless you know what you are doing (see BUGS below).</source>
          <target state="translated">Здесь используется механизм &lt;code&gt;--interactive&lt;/code&gt; внутри, но явное объединение его с параметром &lt;code&gt;--interactive&lt;/code&gt; обычно не является хорошей идеей, если вы не знаете, что делаете (см. ОШИБКИ ниже).</target>
        </trans-unit>
        <trans-unit id="665eaff82148d49a545a97a7903a8bf0d3754608" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;--interactive&lt;/code&gt; machinery internally, but it can be run without an explicit &lt;code&gt;--interactive&lt;/code&gt;.</source>
          <target state="translated">Здесь используется механизм &lt;code&gt;--interactive&lt;/code&gt; внутри, но его можно запускать без явного &lt;code&gt;--interactive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a59444b879ae5151f30b1cffe08974240ac7bdc" translate="yes" xml:space="preserve">
          <source>This uses the same two-dot range notation we saw earlier with &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">Здесь используется то же обозначение диапазона из двух точек, которое мы видели ранее с &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94dc29f5a82c88ac8ea06389eebe7535e89a6fb1" translate="yes" xml:space="preserve">
          <source>This value is true by default in a repository that has a working directory associated with it, and false by default in a bare repository.</source>
          <target state="translated">Это значение по умолчанию верно в репозитории,который имеет связанный с ним рабочий каталог,и ложно по умолчанию в &quot;пустом&quot; репозитории.</target>
        </trans-unit>
        <trans-unit id="73a34f84ecc165ae3643b28ecca4c6c41f197412" translate="yes" xml:space="preserve">
          <source>This variable can be used to restrict the permission bits of tar archive entries. The default is 0002, which turns off the world write bit. The special value &quot;user&quot; indicates that the archiving user&amp;rsquo;s umask will be used instead. See umask(2) and &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt;.</source>
          <target state="translated">Эта переменная может использоваться для ограничения битов разрешений записей архива tar. По умолчанию 0002, что отключает мировой бит записи. Специальное значение &amp;laquo;user&amp;raquo; указывает, что вместо этого будет использоваться umask архивирующего пользователя. См. Umask (2) и &lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63a384d932515032afb2060852ce18cd5598c9ca" translate="yes" xml:space="preserve">
          <source>This variable can be used to restrict the permission bits of tar archive entries. The default is 0002, which turns off the world write bit. The special value &quot;user&quot; indicates that the archiving user&amp;rsquo;s umask will be used instead. See umask(2) for details. If &lt;code&gt;--remote&lt;/code&gt; is used then only the configuration of the remote repository takes effect.</source>
          <target state="translated">Эта переменная может использоваться для ограничения битов разрешений записей архива tar. По умолчанию 0002, что отключает мировой бит записи. Специальное значение &amp;laquo;user&amp;raquo; указывает, что вместо этого будет использоваться umask архивирующего пользователя. См. Подробности в umask (2). Если используется &lt;code&gt;--remote&lt;/code&gt; , действует только конфигурация удаленного репозитория.</target>
        </trans-unit>
        <trans-unit id="0afce327e7d4311118de1c5dc2faa8fa7a291053" translate="yes" xml:space="preserve">
          <source>This variable controls the event target destination. It may be overridden by the &lt;code&gt;GIT_TRACE2_EVENT&lt;/code&gt; environment variable. The following table shows possible values.</source>
          <target state="translated">Эта переменная управляет целевым назначением события. Это может быть переопределено переменной окружения &lt;code&gt;GIT_TRACE2_EVENT&lt;/code&gt; . В следующей таблице показаны возможные значения.</target>
        </trans-unit>
        <trans-unit id="b3073c2a2c3930628fae47eb515e2fe5729910f0" translate="yes" xml:space="preserve">
          <source>This variable controls the normal target destination. It may be overridden by the &lt;code&gt;GIT_TRACE2&lt;/code&gt; environment variable. The following table shows possible values.</source>
          <target state="translated">Эта переменная контролирует нормальный целевой пункт назначения. Это может быть переопределено переменной окружения &lt;code&gt;GIT_TRACE2&lt;/code&gt; . В следующей таблице показаны возможные значения.</target>
        </trans-unit>
        <trans-unit id="ab644894061fa15fc115b6d355d07c2965277303" translate="yes" xml:space="preserve">
          <source>This variable controls the performance target destination. It may be overridden by the &lt;code&gt;GIT_TRACE2_PERF&lt;/code&gt; environment variable. The following table shows possible values.</source>
          <target state="translated">Эта переменная управляет целевым назначением производительности. Это может быть переопределено переменной окружения &lt;code&gt;GIT_TRACE2_PERF&lt;/code&gt; . В следующей таблице показаны возможные значения.</target>
        </trans-unit>
        <trans-unit id="53008d90e6aae985c2e7839a77d7b54894ce429e" translate="yes" xml:space="preserve">
          <source>This variable controls the sort ordering of branches when displayed by &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt;. Without the &quot;--sort=&amp;lt;value&amp;gt;&quot; option provided, the value of this variable will be used as the default. See &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt; field names for valid values.</source>
          <target state="translated">Эта переменная контролирует порядок сортировки веток при отображении с помощью &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; . Без опции &amp;laquo;--sort = &amp;lt;значение&amp;gt;&amp;raquo; значение этой переменной будет использоваться по умолчанию. См. Допустимые значения в именах полей &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea1c7eb75a360c1f9f69915dbc32e427ddfb7ced" translate="yes" xml:space="preserve">
          <source>This variable controls the sort ordering of tags when displayed by &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt;. Without the &quot;--sort=&amp;lt;value&amp;gt;&quot; option provided, the value of this variable will be used as the default.</source>
          <target state="translated">Эта переменная управляет порядком сортировки тегов при отображении &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; . Без опции &amp;laquo;--sort = &amp;lt;значение&amp;gt;&amp;raquo; значение этой переменной будет использоваться по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c2680b6925a4a160ca8f3fee892cc23ec9be5f4f" translate="yes" xml:space="preserve">
          <source>This variable determines the default value for variables such as &lt;code&gt;color.diff&lt;/code&gt; and &lt;code&gt;color.grep&lt;/code&gt; that control the use of color per command family. Its scope will expand as more commands learn configuration to set a default for the &lt;code&gt;--color&lt;/code&gt; option. Set it to &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;never&lt;/code&gt; if you prefer Git commands not to use color unless enabled explicitly with some other configuration or the &lt;code&gt;--color&lt;/code&gt; option. Set it to &lt;code&gt;always&lt;/code&gt; if you want all output not intended for machine consumption to use color, to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt; (this is the default since Git 1.8.4) if you want such output to use color when written to the terminal.</source>
          <target state="translated">Эта переменная определяет значение по умолчанию для таких переменных, как &lt;code&gt;color.diff&lt;/code&gt; и &lt;code&gt;color.grep&lt;/code&gt; , которые управляют использованием цвета для каждого семейства команд. Его область действия будет расширяться по мере того, как все больше команд изучают конфигурацию, чтобы установить значение по умолчанию для параметра &lt;code&gt;--color&lt;/code&gt; . Установите для него значение &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;never&lt;/code&gt; если вы предпочитаете, чтобы команды Git не использовали цвет, если он не включен явно в какой-либо другой конфигурации или с параметром &lt;code&gt;--color&lt;/code&gt; . Установите его на &lt;code&gt;always&lt;/code&gt; , если вы хотите, чтобы весь вывод, не предназначенный для использования машиной, использовал цвет, на &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;auto&lt;/code&gt; (это значение по умолчанию, начиная с Git 1.8.4), если вы хотите, чтобы такой вывод использовал цвет при записи в терминал.</target>
        </trans-unit>
        <trans-unit id="2eb6f1e33d90fc7fb4373fa1793932292fbc650d" translate="yes" xml:space="preserve">
          <source>This variable is the same as &lt;code&gt;transfer.hideRefs&lt;/code&gt;, but applies only to &lt;code&gt;receive-pack&lt;/code&gt; (and so affects pushes, but not fetches). An attempt to update or delete a hidden ref by &lt;code&gt;git push&lt;/code&gt; is rejected.</source>
          <target state="translated">Эта переменная такая же, как и &lt;code&gt;transfer.hideRefs&lt;/code&gt; , но применяется только к &lt;code&gt;receive-pack&lt;/code&gt; (и поэтому влияет на отправку, но не на выборку). Попытка обновить или удалить скрытую ссылку с помощью &lt;code&gt;git push&lt;/code&gt; отклонена.</target>
        </trans-unit>
        <trans-unit id="763a368531eb9d8bc40e93c6334e049f21620c45" translate="yes" xml:space="preserve">
          <source>This variable is the same as &lt;code&gt;transfer.hideRefs&lt;/code&gt;, but applies only to &lt;code&gt;upload-pack&lt;/code&gt; (and so affects only fetches, not pushes). An attempt to fetch a hidden ref by &lt;code&gt;git fetch&lt;/code&gt; will fail. See also &lt;code&gt;uploadpack.allowTipSHA1InWant&lt;/code&gt;.</source>
          <target state="translated">Эта переменная такая же, как и &lt;code&gt;transfer.hideRefs&lt;/code&gt; , но применяется только к &lt;code&gt;upload-pack&lt;/code&gt; (и поэтому влияет только на выборку, а не на отправку). Попытка получить скрытую ссылку с помощью &lt;code&gt;git fetch&lt;/code&gt; завершится ошибкой. См. Также &lt;code&gt;uploadpack.allowTipSHA1InWant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75aa35a44ffd767e8a239dc01347d150ce1e39ed" translate="yes" xml:space="preserve">
          <source>This variable matters only when using persistent web environments that serve multiple requests using single gitweb instance, like mod_perl, FastCGI or Plackup.</source>
          <target state="translated">Эта переменная имеет значение только при использовании постоянных веб-окружений,которые обслуживают несколько запросов с помощью одного экземпляра gitweb,например mod_perl,FastCGI или Plackup.</target>
        </trans-unit>
        <trans-unit id="c0526214b5c55d639fefd6a92d93b97ec2455930" translate="yes" xml:space="preserve">
          <source>This variable specifies a shell command through which the tar output generated by &lt;code&gt;git archive&lt;/code&gt; should be piped. The command is executed using the shell with the generated tar file on its standard input, and should produce the final output on its standard output. Any compression-level options will be passed to the command (e.g., &quot;-9&quot;). An output file with the same extension as &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; will be use this format if no other format is given.</source>
          <target state="translated">Эта переменная определяет команду оболочки, через которую должен передаваться вывод tar, сгенерированный &lt;code&gt;git archive&lt;/code&gt; . Команда выполняется с использованием оболочки со сгенерированным файлом tar на стандартном входе и должна выдавать окончательный результат на стандартный вывод. Все параметры уровня сжатия будут переданы команде (например, &amp;laquo;-9&amp;raquo;). Выходной файл с тем же расширением, что и &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; , будет использовать этот формат, если не указан другой формат.</target>
        </trans-unit>
        <trans-unit id="99ffcf0d1fc58b3934082bac9786637cf3a8cdad" translate="yes" xml:space="preserve">
          <source>This view is similar to &lt;code&gt;shortlog&lt;/code&gt; view.</source>
          <target state="translated">Это представление похоже на представление &lt;code&gt;shortlog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16ae6576174eeb48325f0bfa3042bcb20d29d417" translate="yes" xml:space="preserve">
          <source>This was not the case in the initial release of this feature in v2.13.0, which only matched the realpath version. Configuration that wants to be compatible with the initial release of this feature needs to either specify only the realpath version, or both versions.</source>
          <target state="translated">Этого не было в первоначальном релизе этой функции в версии v2.13.0,которая соответствовала только версии realpath.Конфигурация,которая хочет быть совместимой с первоначальным выпуском этой функции,должна либо указывать только версию realpath,либо обе версии.</target>
        </trans-unit>
        <trans-unit id="7c8d457b197b5558b7abfe068bcd1974205f94ad" translate="yes" xml:space="preserve">
          <source>This was optional in prior versions of git, but now it is the default. You can use &lt;code&gt;--no-utf8&lt;/code&gt; to override this.</source>
          <target state="translated">Это было необязательно в предыдущих версиях git, но теперь это значение по умолчанию. Вы можете использовать &lt;code&gt;--no-utf8&lt;/code&gt; , чтобы переопределить это.</target>
        </trans-unit>
        <trans-unit id="314df942d006c94c85d3e8c8bfe0a0b8ef8308d1" translate="yes" xml:space="preserve">
          <source>This will again prompt you for a message describing the change, and then record a new version of the project.</source>
          <target state="translated">При этом снова появится сообщение с описанием изменения,а затем будет записана новая версия проекта.</target>
        </trans-unit>
        <trans-unit id="53cca56aaa41c3093032e1d720cb620b22717e06" translate="yes" xml:space="preserve">
          <source>This will cache the result of running &quot;exif&quot; on each blob indefinitely. If you change the textconv config variable for a diff driver, Git will automatically invalidate the cache entries and re-run the textconv filter. If you want to invalidate the cache manually (e.g., because your version of &quot;exif&quot; was updated and now produces better output), you can remove the cache manually with &lt;code&gt;git update-ref -d refs/notes/textconv/jpg&lt;/code&gt; (where &quot;jpg&quot; is the name of the diff driver, as in the example above).</source>
          <target state="translated">Это будет кэшировать результат выполнения exif для каждого большого двоичного объекта на неопределенный срок. Если вы измените переменную конфигурации textconv для драйвера diff, Git автоматически аннулирует записи кеша и повторно запустит фильтр textconv. Если вы хотите аннулировать кеш вручную (например, потому что ваша версия exif была обновлена ​​и теперь обеспечивает лучший результат), вы можете удалить кеш вручную с помощью &lt;code&gt;git update-ref -d refs/notes/textconv/jpg&lt;/code&gt; (где &quot; jpg &quot;- это имя драйвера diff, как в примере выше).</target>
        </trans-unit>
        <trans-unit id="3d17cc7dd2b4aac7e00ecd2628dbb99eefd074c7" translate="yes" xml:space="preserve">
          <source>This will cause Git to generate &lt;code&gt;Binary files differ&lt;/code&gt; (or a binary patch, if binary patches are enabled) instead of a regular diff.</source>
          <target state="translated">Это приведет к тому, что Git будет генерировать &lt;code&gt;Binary files differ&lt;/code&gt; двоичные файлы (или двоичный патч, если бинарные патчи включены) вместо обычного diff.</target>
        </trans-unit>
        <trans-unit id="dac66330b2bd98fcf90352c4cbeba694c8f4feb3" translate="yes" xml:space="preserve">
          <source>This will check out the currently cached copy of &lt;code&gt;Makefile&lt;/code&gt; into the file &lt;code&gt;.merged-Makefile&lt;/code&gt;.</source>
          <target state="translated">Это проверит &lt;code&gt;.merged-Makefile&lt;/code&gt; кэшированную копию &lt;code&gt;Makefile&lt;/code&gt; в файл .merged-Makefile .</target>
        </trans-unit>
        <trans-unit id="9acb73cd9d17d8ef0d5dfd6af35ea9d0a50c12ab" translate="yes" xml:space="preserve">
          <source>This will create a new commit which undoes the change in HEAD. You will be given a chance to edit the commit message for the new commit.</source>
          <target state="translated">Это создаст новый коммит,который отменит изменение в HEAD.Вам будет предоставлена возможность отредактировать сообщение о коммите для нового коммита.</target>
        </trans-unit>
        <trans-unit id="85437cd96f5cff3dd194d542498fd954d1bf1e01" translate="yes" xml:space="preserve">
          <source>This will define a remote called &quot;origin&quot; in the resulting repository that lets you fetch and pull from the bundle. The $GIT_DIR/config file in R2 will have an entry like this:</source>
          <target state="translated">Это определит удалённое устройство,называемое &quot;origin&quot; (происхождение)в результирующем репозитории,которое позволит вам извлекать и вытаскивать из связки.Файл $GIT_DIR/config в R2 будет иметь такую запись:</target>
        </trans-unit>
        <trans-unit id="2986121c6e711f05b2ed0ba772dedbd8c66503ff" translate="yes" xml:space="preserve">
          <source>This will error out if $REV is empty or not a valid revision.</source>
          <target state="translated">Это приведет к ошибке,если $REV пустая или недействительная ревизия.</target>
        </trans-unit>
        <trans-unit id="c8b7e8566771f37a03bc25eaec95675ffe82ba31" translate="yes" xml:space="preserve">
          <source>This will export the whole repository and import it into the existing empty repository. Except for reencoding commits that are not in UTF-8, it would be a one-to-one mirror.</source>
          <target state="translated">При этом будет экспортирован весь репозиторий и импортирован в существующий пустой репозиторий.За исключением перекодирования коммитов,которые не в UTF-8,это будет зеркало один к одному.</target>
        </trans-unit>
        <trans-unit id="5f851e29f67384fe2f487309701055635453a02c" translate="yes" xml:space="preserve">
          <source>This will list what commits you must have in order to extract from the bundle and will error out if you do not have them.</source>
          <target state="translated">В этом списке будут перечислены коммиты,которые вы должны иметь для извлечения из пакета,и будут выданы ошибки,если у вас их нет.</target>
        </trans-unit>
        <trans-unit id="7ed8616207d4b6e51bdcbe1e7b524863a0139782" translate="yes" xml:space="preserve">
          <source>This will open your editor with a list of steps to be taken to perform your rebase.</source>
          <target state="translated">Это откроет ваш редактор со списком шагов,которые необходимо предпринять для выполнения перезагрузки.</target>
        </trans-unit>
        <trans-unit id="e9e68cbb3d1c11da9ad7575ebecc630d58996f10" translate="yes" xml:space="preserve">
          <source>This will prompt you for a commit message. You&amp;rsquo;ve now stored the first version of your project in Git.</source>
          <target state="translated">Вам будет предложено сообщение о фиксации. Теперь вы сохранили первую версию своего проекта в Git.</target>
        </trans-unit>
        <trans-unit id="9229da0c83ee0b71f5a22085b5f3b7e07e9ec55a" translate="yes" xml:space="preserve">
          <source>This will remove each of your commits from mywork, temporarily saving them as patches (in a directory named &lt;code&gt;.git/rebase-apply&lt;/code&gt;), update mywork to point at the latest version of origin, then apply each of the saved patches to the new mywork. The result will look like:</source>
          <target state="translated">Это удалит все ваши коммиты из моей работы, временно сохранив их как патчи (в каталоге с именем &lt;code&gt;.git/rebase-apply&lt;/code&gt; ), обновит mywork так, чтобы указывать на последнюю версию origin, а затем применит каждый из сохраненных патчей к новой моей работе , Результат будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="1c98be5284d00528a6b74a33ba778d044a767668" translate="yes" xml:space="preserve">
          <source>This will result in only b (a and c are cleared).</source>
          <target state="translated">Это приведет только к b (a и c очищаются).</target>
        </trans-unit>
        <trans-unit id="0385ed25689cd3e1167020ff6e8ba549d1603871" translate="yes" xml:space="preserve">
          <source>This will set the property &lt;code&gt;svn:keywords&lt;/code&gt; to &lt;code&gt;FreeBSD=%H&lt;/code&gt; for the file &lt;code&gt;devel/py-tipper/Makefile&lt;/code&gt;.</source>
          <target state="translated">Это установит для свойства &lt;code&gt;svn:keywords&lt;/code&gt; значение &lt;code&gt;FreeBSD=%H&lt;/code&gt; для файла &lt;code&gt;devel/py-tipper/Makefile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61383e31770f578e5ee86310440dccd09a4e5008" translate="yes" xml:space="preserve">
          <source>This will show &quot;refs/heads/master&quot; but also &quot;refs/remote/other-repo/master&quot;, if such references exists.</source>
          <target state="translated">При этом будут показаны &quot;refs/heads/master&quot;,а также &quot;refs/remote/other-repo/master&quot;,если такие ссылки существуют.</target>
        </trans-unit>
        <trans-unit id="23dd2de32c54566f1df1adf9f6794600102b9c2b" translate="yes" xml:space="preserve">
          <source>This will start to clean, and you must confirm one by one in order to delete items. Please note that this action is not as efficient as the above two actions.</source>
          <target state="translated">Начнется очистка,для того чтобы удалить элементы,вы должны подтвердить это один за другим.Пожалуйста,обратите внимание,что это действие не так эффективно,как два вышеуказанных действия.</target>
        </trans-unit>
        <trans-unit id="9b7bbd24afc1c6a470a80ef47d5171b33809ea28" translate="yes" xml:space="preserve">
          <source>This works for any of the supported update procedures (&lt;code&gt;--checkout&lt;/code&gt;, &lt;code&gt;--rebase&lt;/code&gt;, etc.). The only change is the source of the target SHA-1. For example, &lt;code&gt;submodule update --remote --merge&lt;/code&gt; will merge upstream submodule changes into the submodules, while &lt;code&gt;submodule update
--merge&lt;/code&gt; will merge superproject gitlink changes into the submodules.</source>
          <target state="translated">Это работает для любой из поддерживаемых процедур обновления ( &lt;code&gt;--checkout&lt;/code&gt; , &lt;code&gt;--rebase&lt;/code&gt; и т. Д.). Единственное изменение - это источник целевого SHA-1. Например, &lt;code&gt;submodule update --remote --merge&lt;/code&gt; объединит изменения субмодулей восходящего потока с субмодулями, а &lt;code&gt;submodule update --merge&lt;/code&gt; объединит изменения суперпроекта gitlink с субмодулями.</target>
        </trans-unit>
        <trans-unit id="5a2ee7840b76b59e3aede30738fb578b292bc5f3" translate="yes" xml:space="preserve">
          <source>This works similarly to &lt;code&gt;svn update&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; except that it preserves linear history with &lt;code&gt;git rebase&lt;/code&gt; instead of &lt;code&gt;git merge&lt;/code&gt; for ease of dcommitting with &lt;code&gt;git svn&lt;/code&gt;.</source>
          <target state="translated">Это работает аналогично &lt;code&gt;svn update&lt;/code&gt; или &lt;code&gt;git pull&lt;/code&gt; , за исключением того, что сохраняет линейную историю с помощью &lt;code&gt;git rebase&lt;/code&gt; вместо &lt;code&gt;git merge&lt;/code&gt; для простоты dcommitting с помощью &lt;code&gt;git svn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bc6c0e59c3e651570d66e12101e9a57040fd659" translate="yes" xml:space="preserve">
          <source>This would leave only one merge commit when your topic branch is finally ready and merged into the master branch. This merge would require you to resolve the conflict, introduced by the commits marked with &lt;code&gt;*&lt;/code&gt;. However, this conflict is often the same conflict you resolved when you created the test merge you blew away. &lt;code&gt;git rerere&lt;/code&gt; helps you resolve this final conflicted merge using the information from your earlier hand resolve.</source>
          <target state="translated">Это оставит только одну фиксацию слияния, когда ваша тематическая ветка, наконец, будет готова и объединена с основной веткой. Это слияние потребует от вас разрешения конфликта, вызванного коммитами, отмеченными &lt;code&gt;*&lt;/code&gt; . Однако этот конфликт часто является тем же конфликтом, который вы разрешили при создании тестового слияния, которое вы удалили. &lt;code&gt;git rerere&lt;/code&gt; поможет вам разрешить это окончательное конфликтующее слияние, используя информацию из вашего предыдущего ручного разрешения.</target>
        </trans-unit>
        <trans-unit id="dcd6f908de988995d9fff4cafd75d14bc0785c1a" translate="yes" xml:space="preserve">
          <source>This would leave the merge result in &lt;code&gt;hello.c~2&lt;/code&gt; file, along with conflict markers if there are conflicts. After verifying the merge result makes sense, you can tell Git what the final merge result for this file is by:</source>
          <target state="translated">Это оставит результат слияния в файле &lt;code&gt;hello.c~2&lt;/code&gt; вместе с маркерами конфликта, если есть конфликты. Убедившись, что результат слияния имеет смысл, вы можете сообщить Git, каков окончательный результат слияния для этого файла:</target>
        </trans-unit>
        <trans-unit id="cf5b7c750a4b16617dfd7cff20be48990a9d7985" translate="yes" xml:space="preserve">
          <source>This:</source>
          <target state="translated">This:</target>
        </trans-unit>
        <trans-unit id="ee3cacca7314105556d3050112f523980e59f973" translate="yes" xml:space="preserve">
          <source>Those snapshots aren&amp;rsquo;t necessarily all arranged in a single line from oldest to newest; instead, work may simultaneously proceed along parallel lines of development, called &lt;a href=&quot;#def_branch&quot;&gt;branches&lt;/a&gt;, which may merge and diverge.</source>
          <target state="translated">Эти снимки не обязательно располагаются в одной строке от самых старых до самых новых; вместо этого работа может идти одновременно по параллельным линиям развития, называемым &lt;a href=&quot;#def_branch&quot;&gt;ветвями&lt;/a&gt; , которые могут сливаться и расходиться.</target>
        </trans-unit>
        <trans-unit id="7a5a53a50d0fbac4f3a27d9d2d5853146557d940" translate="yes" xml:space="preserve">
          <source>Though not required, it&amp;rsquo;s a good idea to begin the commit message with a single short (less than 50 character) line summarizing the change, followed by a blank line and then a more thorough description. The text up to the first blank line in a commit message is treated as the commit title, and that title is used throughout Git. For example, &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; turns a commit into email, and it uses the title on the Subject line and the rest of the commit in the body.</source>
          <target state="translated">Хотя это и не обязательно, рекомендуется начинать сообщение фиксации с одной короткой (менее 50 символов) строки, обобщающей изменение, за которой следует пустая строка, а затем более подробное описание. Текст до первой пустой строки в сообщении фиксации рассматривается как заголовок фиксации, и этот заголовок используется во всем Git. Например, &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; превращает фиксацию в электронное письмо и использует заголовок в строке &amp;laquo;Тема&amp;raquo;, а остальную часть фиксации в теле.</target>
        </trans-unit>
        <trans-unit id="fdd6ea0498f5dbe48e6926bc8c91e77146fa2184" translate="yes" xml:space="preserve">
          <source>Though, according to Wikipedia &lt;a href=&quot;#3&quot;&gt;[3]&lt;/a&gt;:</source>
          <target state="translated">Хотя, согласно Википедии &lt;a href=&quot;#3&quot;&gt;[3]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="18c9e3ce5bbbf77af11ba41f4d7a7d9b7a1aaa55" translate="yes" xml:space="preserve">
          <source>Thread Events</source>
          <target state="translated">События в области нитей</target>
        </trans-unit>
        <trans-unit id="8850eee2783cf53d0af71d524467316d7d06a850" translate="yes" xml:space="preserve">
          <source>Thread messages added to a thread-proc.</source>
          <target state="translated">Тематические сообщения,добавленные в поток-прок.</target>
        </trans-unit>
        <trans-unit id="1501e9d814d273ed34cc6b50f1b5e25add4ac049" translate="yes" xml:space="preserve">
          <source>Three other shorthands exist, particularly useful for merge commits, for naming a set that is formed by a commit and its parent commits.</source>
          <target state="translated">Существует три других сокращения,особенно полезных для объединения коммитов,для обозначения набора,который формируется коммитом и его родительскими коммитами.</target>
        </trans-unit>
        <trans-unit id="8e23a87c8354d34eb4b513798d76048267e22ae4" translate="yes" xml:space="preserve">
          <source>Three steps:</source>
          <target state="translated">Три шага:</target>
        </trans-unit>
        <trans-unit id="cf3d01be00b3333c6ca36b4d1bb0a1a1c357a43f" translate="yes" xml:space="preserve">
          <source>Throw-away integration</source>
          <target state="translated">Отталкивающая интеграция</target>
        </trans-unit>
        <trans-unit id="c4780f4837eebde8ca1de31df251ef05e2361eb2" translate="yes" xml:space="preserve">
          <source>Thunderbird</source>
          <target state="translated">Thunderbird</target>
        </trans-unit>
        <trans-unit id="d5e84648e0355ba1080675ff57a3c64a03a76a7c" translate="yes" xml:space="preserve">
          <source>Thunderbird in particular is known to be problematic. Thunderbird users may wish to visit this web page for more information: &lt;a href=&quot;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&quot;&gt;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&lt;/a&gt;</source>
          <target state="translated">В частности, известно, что Thunderbird вызывает проблемы. Пользователи Thunderbird могут захотеть посетить эту веб-страницу для получения дополнительной информации: &lt;a href=&quot;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&quot;&gt;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da473e9b687406079cfbc2672fddb50595865b5d" translate="yes" xml:space="preserve">
          <source>Thus we see that this tree has one file in it. The SHA-1 hash is a reference to that file&amp;rsquo;s data:</source>
          <target state="translated">Таким образом, мы видим, что в этом дереве есть один файл. Хэш SHA-1 - это ссылка на данные этого файла:</target>
        </trans-unit>
        <trans-unit id="309fb29079c2e5019b9d34cb235aee0452735a40" translate="yes" xml:space="preserve">
          <source>Thus you can, e.g., turn a library subdirectory into a repository of its own. Note the &lt;code&gt;--&lt;/code&gt; that separates &lt;code&gt;filter-branch&lt;/code&gt; options from revision options, and the &lt;code&gt;--all&lt;/code&gt; to rewrite all branches and tags.</source>
          <target state="translated">Таким образом, вы можете, например, превратить подкаталог библиотеки в собственный репозиторий. Обратите внимание на &lt;code&gt;--&lt;/code&gt; который отделяет параметры &lt;code&gt;filter-branch&lt;/code&gt; от параметров ревизии, и &lt;code&gt;--all&lt;/code&gt; для перезаписи всех ветвей и тегов.</target>
        </trans-unit>
        <trans-unit id="d35ca4f0ad7715e9f69a7f979c2424eb99273503" translate="yes" xml:space="preserve">
          <source>Thus, the following command:</source>
          <target state="translated">Таким образом,следующая команда:</target>
        </trans-unit>
        <trans-unit id="77cc1ec67e1af48d92e062ee397960be200bdf58" translate="yes" xml:space="preserve">
          <source>Thus, we can provide O(log N) lookup time for any number of packfiles.</source>
          <target state="translated">Таким образом,мы можем обеспечить время поиска O(log N)для любого количества пакетных файлов.</target>
        </trans-unit>
        <trans-unit id="ae19d34e63a0724afdaaeabe3d0fe80af7f9e778" translate="yes" xml:space="preserve">
          <source>Time and date specified by the ISO 8601 standard, for example &lt;code&gt;2005-04-07T22:13:13&lt;/code&gt;. The parser accepts a space instead of the &lt;code&gt;T&lt;/code&gt; character as well.</source>
          <target state="translated">Время и дата указаны в стандарте ISO 8601, например &lt;code&gt;2005-04-07T22:13:13&lt;/code&gt; . Парсер также принимает пробел вместо символа &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bac72478f018c225224e8417f521a2dad6209d3" translate="yes" xml:space="preserve">
          <source>Time zone values can be &quot;local&quot; (for local time zone that browser uses), &quot;utc&quot; (what gitweb uses when JavaScript or this feature is disabled), or numerical time zones in the form of &quot;+/-HHMM&quot;, such as &quot;+0200&quot;.</source>
          <target state="translated">Значения часового пояса могут быть &quot;локальными&quot; (для локального часового пояса,используемого браузером),&quot;utc&quot;.(какой gitweb использует,когда JavaScript или эта функция отключена),или числовые часовые пояса в виде &quot;+/-HHMM&quot;,например &quot;+0200&quot;.</target>
        </trans-unit>
        <trans-unit id="396a560fd1658574279d941c34737eda5359f4fc" translate="yes" xml:space="preserve">
          <source>Timeout (in seconds) between the moment the connection is established and the client request is received (typically a rather low value, since that should be basically immediate).</source>
          <target state="translated">Таймаут (в секундах)между моментом установления соединения и получением клиентского запроса (обычно довольно низкое значение,так как это должно быть в основном мгновенным).</target>
        </trans-unit>
        <trans-unit id="0ae2f4dfeb0fa0aaf2833b3c271308d2190a4162" translate="yes" xml:space="preserve">
          <source>Timeout (in seconds) for specific client sub-requests. This includes the time it takes for the server to process the sub-request and the time spent waiting for the next client&amp;rsquo;s request.</source>
          <target state="translated">Тайм-аут (в секундах) для определенных клиентских подзапросов. Это включает время, необходимое серверу для обработки подзапроса, и время, потраченное на ожидание следующего клиентского запроса.</target>
        </trans-unit>
        <trans-unit id="ad6b83abe0aada0e5e6aec8e7e7470429fd4ee37" translate="yes" xml:space="preserve">
          <source>Tips and tricks</source>
          <target state="translated">Советы и хитрости</target>
        </trans-unit>
        <trans-unit id="d7242682d2f91b131962f45ed3706e536d3cdcc6" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;#def_merge&quot;&gt;merge&lt;/a&gt; more than two &lt;a href=&quot;#def_branch&quot;&gt;branches&lt;/a&gt;.</source>
          <target state="translated">Для того, чтобы &lt;a href=&quot;#def_merge&quot;&gt;объединить&lt;/a&gt; более двух &lt;a href=&quot;#def_branch&quot;&gt;ветвей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c181af3380fe2a4df836df7796a5de6ef8d47c5" translate="yes" xml:space="preserve">
          <source>To access refs, it&amp;rsquo;s best not to look inside GIT_DIR directly. Instead use commands such as &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt; or &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; which will handle refs correctly.</source>
          <target state="translated">Чтобы получить доступ к ссылкам, лучше не заглядывать внутрь GIT_DIR напрямую. Вместо этого используйте такие команды, как &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; или &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref [1],&lt;/a&gt; которые будут правильно обрабатывать ссылки.</target>
        </trans-unit>
        <trans-unit id="bdc5ec95e827bdeffd1f9aab0bef5dd1e05d0443" translate="yes" xml:space="preserve">
          <source>To achieve this, try to split your work into small steps from the very beginning. It is always easier to squash a few commits together than to split one big commit into several. Don&amp;rsquo;t be afraid of making too small or imperfect steps along the way. You can always go back later and edit the commits with &lt;code&gt;git rebase --interactive&lt;/code&gt; before you publish them. You can use &lt;code&gt;git stash push --keep-index&lt;/code&gt; to run the test suite independent of other uncommitted changes; see the EXAMPLES section of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Для этого постарайтесь с самого начала разбить свою работу на маленькие шаги. Всегда легче объединить несколько коммитов, чем разбить один большой коммит на несколько. Не бойтесь делать слишком маленькие или несовершенные шаги по пути. Вы всегда можете вернуться позже и отредактировать коммиты с помощью &lt;code&gt;git rebase --interactive&lt;/code&gt; перед их публикацией. Вы можете использовать &lt;code&gt;git stash push --keep-index&lt;/code&gt; для запуска набора тестов независимо от других незафиксированных изменений; см. раздел ПРИМЕРЫ в &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0fad63887775e60c970096082173b077cbcda459" translate="yes" xml:space="preserve">
          <source>To actually match only values with an exclamation mark, you have to</source>
          <target state="translated">Для фактического сопоставления только значений с восклицательным знаком,вы должны</target>
        </trans-unit>
        <trans-unit id="0fea0d3a69770ac7053eba17165f8f811c0d830f" translate="yes" xml:space="preserve">
          <source>To add a new proxy, without altering any of the existing ones, use</source>
          <target state="translated">Чтобы добавить новый прокси,не изменяя ни один из существующих,используйте</target>
        </trans-unit>
        <trans-unit id="6a37f3f129452efb4608e170beca8c23ff8dc189" translate="yes" xml:space="preserve">
          <source>To aid in debugging frontends fast-import ignores any line that begins with &lt;code&gt;#&lt;/code&gt; (ASCII pound/hash) up to and including the line ending &lt;code&gt;LF&lt;/code&gt;. A comment line may contain any sequence of bytes that does not contain an LF and therefore may be used to include any detailed debugging information that might be specific to the frontend and useful when inspecting a fast-import data stream.</source>
          <target state="translated">Чтобы облегчить отладку внешних интерфейсов, fast-import игнорирует любую строку, которая начинается с символа &lt;code&gt;#&lt;/code&gt; (фунт / хэш ASCII) до строки, заканчивающейся &lt;code&gt;LF&lt;/code&gt; включительно . Строка комментария может содержать любую последовательность байтов, которая не содержит LF, и поэтому может использоваться для включения любой подробной отладочной информации, которая может быть специфичной для внешнего интерфейса и полезной при проверке потока данных быстрого импорта.</target>
        </trans-unit>
        <trans-unit id="285359187a2aff04e4ea763b2f3e4bbaf641190b" translate="yes" xml:space="preserve">
          <source>To assist in this, Git also provides the tag object&amp;hellip;​</source>
          <target state="translated">Чтобы помочь в этом, Git также предоставляет объект тега&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="b0021f1eb05e23f63eb7ccc2f58c52546ee61585" translate="yes" xml:space="preserve">
          <source>To avoid deadlock, such frontends must completely consume any pending output from &lt;code&gt;progress&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;get-mark&lt;/code&gt;, and &lt;code&gt;cat-blob&lt;/code&gt; before performing writes to fast-import that might block.</source>
          <target state="translated">Чтобы избежать взаимоблокировки, такие интерфейсы должны полностью потреблять любой ожидающий вывод от &lt;code&gt;progress&lt;/code&gt; , &lt;code&gt;ls&lt;/code&gt; , &lt;code&gt;get-mark&lt;/code&gt; и &lt;code&gt;cat-blob&lt;/code&gt; перед выполнением записи в fast-import, которая может заблокировать.</target>
        </trans-unit>
        <trans-unit id="75e1daad195d404dc835c71216234df4a4676d4e" translate="yes" xml:space="preserve">
          <source>To avoid deleting a shared index file that is still used, its modification time is updated to the current time every time a new split index based on the shared index file is either created or read from.</source>
          <target state="translated">Чтобы избежать удаления файла с общим индексом,который все еще используется,время его модификации обновляется до текущего времени каждый раз,когда создается или считывается новый разделенный индекс,основанный на файле с общим индексом.</target>
        </trans-unit>
        <trans-unit id="0b95bb4f949904cf33707d2a81be23c345f8e5aa" translate="yes" xml:space="preserve">
          <source>To avoid false positives (e.g. when a patch has been removed, and an unrelated patch has been added between two iterations of the same patch series), the cost matrix is extended to allow for that, by adding fixed-cost entries for wholesale deletes/adds.</source>
          <target state="translated">Чтобы избежать ложных срабатываний (например,когда патч был удален и между двумя итерациями одной и той же серии патчей был добавлен несвязанный патч),матрица расходов была расширена,чтобы позволить это,путем добавления записей с фиксированной стоимостью для оптовых удалений/добавок.</target>
        </trans-unit>
        <trans-unit id="0fd573776931ed5e5643654b60eb3896366ed973" translate="yes" xml:space="preserve">
          <source>To avoid interfering with other worktrees, it first enables the &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; setting and makes sure to set the &lt;code&gt;core.sparseCheckout&lt;/code&gt; setting in the worktree-specific config file.</source>
          <target state="translated">Чтобы избежать вмешательства в работу других рабочих деревьев, сначала включается параметр &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; и обязательно устанавливается параметр &lt;code&gt;core.sparseCheckout&lt;/code&gt; в файле конфигурации для конкретного дерева.</target>
        </trans-unit>
        <trans-unit id="3c2082115575958e10a9c1afdaf9ab0c9127b12a" translate="yes" xml:space="preserve">
          <source>To avoid recording unrelated changes in the merge commit, &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt; will also abort if there are any changes registered in the index relative to the &lt;code&gt;HEAD&lt;/code&gt; commit. (Special narrow exceptions to this rule may exist depending on which merge strategy is in use, but generally, the index must match HEAD.)</source>
          <target state="translated">Чтобы избежать записи несвязанных изменений в фиксации слияния, команды &lt;code&gt;git pull&lt;/code&gt; и &lt;code&gt;git merge&lt;/code&gt; также будут прерваны, если в индексе будут зарегистрированы какие-либо изменения относительно фиксации &lt;code&gt;HEAD&lt;/code&gt; . (Особые узкие исключения из этого правила могут существовать в зависимости от того, какая стратегия слияния используется, но обычно индекс должен соответствовать HEAD.)</target>
        </trans-unit>
        <trans-unit id="3066556f3c40d15744968614a5fc8c1e23bf8a7b" translate="yes" xml:space="preserve">
          <source>To avoid typing long email addresses, point this to one or more email aliases files. You must also supply &lt;code&gt;sendemail.aliasFileType&lt;/code&gt;.</source>
          <target state="translated">Чтобы не вводить длинные адреса электронной почты, укажите здесь один или несколько файлов псевдонимов электронной почты. Вы также должны указать &lt;code&gt;sendemail.aliasFileType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b87fbf313d264308ea989e0e3b9a4c3d776c25" translate="yes" xml:space="preserve">
          <source>To bootstrap the process, you can first create a bundle that does not have any basis. You can use a tag to remember up to what commit you last processed, in order to make it easy to later update the other repository with an incremental bundle:</source>
          <target state="translated">Чтобы загрузить процесс,вы можете сначала создать связку,которая не имеет никаких оснований.Вы можете использовать метку,чтобы запомнить до того,какой коммит вы обрабатывали в последний раз,чтобы потом легко обновить другой репозиторий инкрементальным пакетом:</target>
        </trans-unit>
        <trans-unit id="9d8840568125195e79747db7654d577582e9ce27" translate="yes" xml:space="preserve">
          <source>To change which notes are shown by &lt;code&gt;git log&lt;/code&gt;, see the &quot;notes.displayRef&quot; configuration in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">Чтобы изменить, какие заметки отображаются в &lt;code&gt;git log&lt;/code&gt; , см. Конфигурацию &amp;laquo;notes.displayRef&amp;raquo; в &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97883ec3271fcc02269394ee0880b3655a6f452f" translate="yes" xml:space="preserve">
          <source>To check out commit &lt;code&gt;HEAD~3&lt;/code&gt; for temporary inspection or experiment without creating a new branch:</source>
          <target state="translated">Чтобы проверить фиксацию &lt;code&gt;HEAD~3&lt;/code&gt; для временной проверки или эксперимента без создания новой ветки:</target>
        </trans-unit>
        <trans-unit id="d144f3be27bf6711b21fc83fdbf3f1e8ff9fc321" translate="yes" xml:space="preserve">
          <source>To commit a tree you have instantiated with &lt;code&gt;git write-tree&lt;/code&gt;, you&amp;rsquo;d create a &quot;commit&quot; object that refers to that tree and the history behind it&amp;mdash;​most notably the &quot;parent&quot; commits that preceded it in history.</source>
          <target state="translated">Чтобы зафиксировать дерево, экземпляр которого вы создали с помощью &lt;code&gt;git write-tree&lt;/code&gt; , вы должны создать объект &amp;laquo;фиксация&amp;raquo;, который ссылается на это дерево и историю, лежащую за ним, в первую очередь &amp;laquo;родительские&amp;raquo; коммиты, которые предшествовали ему в истории.</target>
        </trans-unit>
        <trans-unit id="05e44c536d85ee3801aa2c0d698cefa8d09c4c33" translate="yes" xml:space="preserve">
          <source>To completely remove a submodule, manually delete &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">Чтобы полностью удалить подмодуль, вручную удалите &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27c15a86c7e79c3805e163825e563ceb0da18b5a" translate="yes" xml:space="preserve">
          <source>To control which revisions to show, gitk supports most options applicable to the &lt;code&gt;git rev-list&lt;/code&gt; command. It also supports a few options applicable to the &lt;code&gt;git diff-*&lt;/code&gt; commands to control how the changes each commit introduces are shown. Finally, it supports some gitk-specific options.</source>
          <target state="translated">Для управления отображаемыми ревизиями gitk поддерживает большинство параметров, применимых к команде &lt;code&gt;git rev-list&lt;/code&gt; . Он также поддерживает несколько параметров, применимых к командам &lt;code&gt;git diff-*&lt;/code&gt; для управления отображением изменений, вносимых каждой фиксацией. Наконец, он поддерживает некоторые параметры, специфичные для gitk.</target>
        </trans-unit>
        <trans-unit id="777e371b82028c9765bc912013f44d79febb95a6" translate="yes" xml:space="preserve">
          <source>To cope with such a situation, after the inner &lt;code&gt;git bisect&lt;/code&gt; finds the next revision to test, the script can apply the patch before compiling, run the real test, and afterwards decide if the revision (possibly with the needed patch) passed the test and then rewind the tree to the pristine state. Finally the script should exit with the status of the real test to let the &lt;code&gt;git bisect run&lt;/code&gt; command loop determine the eventual outcome of the bisect session.</source>
          <target state="translated">Чтобы справиться с такой ситуацией, после того, как внутренний &lt;code&gt;git bisect&lt;/code&gt; найдет следующую ревизию для тестирования, сценарий может применить патч перед компиляцией, запустить настоящий тест, а затем решить, прошла ли ревизия (возможно, с нужным патчем) тест и затем перемотайте дерево до первоначального состояния. Наконец, сценарий должен завершиться со статусом реального теста, чтобы позволить циклу команд &lt;code&gt;git bisect run&lt;/code&gt; определить конечный результат сеанса bisect.</target>
        </trans-unit>
        <trans-unit id="8674c1ca562e6ecc34e19d2429ea897e7602bd28" translate="yes" xml:space="preserve">
          <source>To create your own local live copy of such a &quot;raw&quot; Git repository, you&amp;rsquo;d first create your own subdirectory for the project, and then copy the raw repository contents into the &lt;code&gt;.git&lt;/code&gt; directory. For example, to create your own copy of the Git repository, you&amp;rsquo;d do the following</source>
          <target state="translated">Чтобы создать свою собственную локальную живую копию такого &amp;laquo;сырого&amp;raquo; репозитория Git, вы сначала должны создать свой собственный подкаталог для проекта, а затем скопировать необработанное содержимое репозитория в каталог &lt;code&gt;.git&lt;/code&gt; . Например, чтобы создать свою собственную копию репозитория Git, вы должны сделать следующее</target>
        </trans-unit>
        <trans-unit id="495be7922d2a293092e6f366efd8045104e01478" translate="yes" xml:space="preserve">
          <source>To define a custom merge driver &lt;code&gt;filfre&lt;/code&gt;, add a section to your &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file (or &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; file) like this:</source>
          <target state="translated">Чтобы определить настраиваемый драйвер слияния &lt;code&gt;filfre&lt;/code&gt; , добавьте раздел в свой файл &lt;code&gt;$GIT_DIR/config&lt;/code&gt; (или файл &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ) следующим образом:</target>
        </trans-unit>
        <trans-unit id="369d97c17e3edbb633e139fcbb4d6a1ea94c1201" translate="yes" xml:space="preserve">
          <source>To define an external diff driver &lt;code&gt;jcdiff&lt;/code&gt;, add a section to your &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file (or &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; file) like this:</source>
          <target state="translated">Чтобы определить внешний драйвер сравнения &lt;code&gt;jcdiff&lt;/code&gt; , добавьте раздел в свой файл &lt;code&gt;$GIT_DIR/config&lt;/code&gt; (или файл &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ) следующим образом:</target>
        </trans-unit>
        <trans-unit id="302897a013466c7a33ee45af87c508a98422abd4" translate="yes" xml:space="preserve">
          <source>To delete the entry for renames, do</source>
          <target state="translated">Чтобы удалить запись для переименования,сделайте</target>
        </trans-unit>
        <trans-unit id="f31f6b0ae1c80bea942e287ae0ab318c31ede1f4" translate="yes" xml:space="preserve">
          <source>To determine the location of the repository on disk, &lt;code&gt;git http-backend&lt;/code&gt; concatenates the environment variables PATH_INFO, which is set automatically by the web server, and GIT_PROJECT_ROOT, which must be set manually in the web server configuration. If GIT_PROJECT_ROOT is not set, &lt;code&gt;git http-backend&lt;/code&gt; reads PATH_TRANSLATED, which is also set automatically by the web server.</source>
          <target state="translated">Чтобы определить местоположение репозитория на диске, &lt;code&gt;git http-backend&lt;/code&gt; объединяет переменные среды PATH_INFO, которые автоматически устанавливаются веб-сервером, и GIT_PROJECT_ROOT, которые необходимо установить вручную в конфигурации веб-сервера. Если GIT_PROJECT_ROOT не установлен, &lt;code&gt;git http-backend&lt;/code&gt; читает PATH_TRANSLATED, который также автоматически устанавливается веб-сервером.</target>
        </trans-unit>
        <trans-unit id="b99f7180a07f9dbb13dde063c76c98dd5e2d7887" translate="yes" xml:space="preserve">
          <source>To disable features that accept parameters (are configurable), you need to set this element to empty list i.e. &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">Чтобы отключить функции, принимающие параметры (настраиваемые), вам необходимо установить этот элемент в пустой список, то есть &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43f3c91605c9cb6d680c0ea9cf4c1bb2e77b4d9d" translate="yes" xml:space="preserve">
          <source>To disable interactive logins, displaying a greeting instead:</source>
          <target state="translated">Чтобы отключить интерактивные входы в систему,вместо этого отобразите приветствие:</target>
        </trans-unit>
        <trans-unit id="2e78622c40c98dec97477af783b12ba20d12cc1a" translate="yes" xml:space="preserve">
          <source>To display the &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; man page, use &lt;code&gt;git help git&lt;/code&gt;.</source>
          <target state="translated">Чтобы отобразить &lt;code&gt;git help git&lt;/code&gt; страницу &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; , используйте git help git .</target>
        </trans-unit>
        <trans-unit id="fa4dddf358b16e56494c90923230fd025e6f958d" translate="yes" xml:space="preserve">
          <source>To do automatic tag object dereferencing, use the &quot;-d&quot; or &quot;--dereference&quot; flag, so you can do</source>
          <target state="translated">Чтобы сделать автоматическую разыменовку объекта тега,используйте флаг &quot;-d&quot; или &quot;--dereference&quot;,таким образом вы можете сделать следующее</target>
        </trans-unit>
        <trans-unit id="dc05ce874d6baee1eae11d94d6fd56f1e0a6d0ed" translate="yes" xml:space="preserve">
          <source>To do the merge, do</source>
          <target state="translated">Чтобы сделать слияние,сделайте</target>
        </trans-unit>
        <trans-unit id="45ed93b09b65e276ec2ef33a1d9d7c3e10d14bfe" translate="yes" xml:space="preserve">
          <source>To do this, the current maintenance branch is copied to another branch named with the previous release version number (e.g. maint-X.Y.(Z-1) where X.Y.Z is the current release).</source>
          <target state="translated">Для этого текущая ветка обслуживания копируется в другую,названную с номером версии предыдущего релиза (например,maint-X.Y.(Z-1),где X.Y.Z является текущим релизом).</target>
        </trans-unit>
        <trans-unit id="380aa6a091a04ad8bbf89399d1982760e370374e" translate="yes" xml:space="preserve">
          <source>To drop a commit, replace the command &quot;pick&quot; with &quot;drop&quot;, or just delete the matching line.</source>
          <target state="translated">Чтобы бросить фиксацию,замените команду &quot;pick&quot; на &quot;drop&quot;,или просто удалите соответствующую строку.</target>
        </trans-unit>
        <trans-unit id="e05b8854f808624747710c5e1d641ee4dabaf30c" translate="yes" xml:space="preserve">
          <source>To elaborate, &quot;reading&quot; means checking for file existence, reading file attributes or file content. The working directory version may be present or absent. If present, its content may match against the index version or not. Writing is not affected by this bit, content safety is still first priority. Note that Git &lt;code&gt;can&lt;/code&gt; update working directory file, that is marked skip-worktree, if it is safe to do so (i.e. working directory version matches index version)</source>
          <target state="translated">Проще говоря, &amp;laquo;чтение&amp;raquo; означает проверку существования файла, чтение атрибутов файла или содержимого файла. Версия рабочего каталога может присутствовать или отсутствовать. Если он присутствует, его содержимое может совпадать с версией индекса или нет. Этот бит не влияет на запись, безопасность содержимого по-прежнему остается на первом месте. Обратите внимание, что Git &lt;code&gt;can&lt;/code&gt; обновить файл рабочего каталога, помеченный как skip-worktree, если это безопасно (т.е. версия рабочего каталога соответствует версии индекса).</target>
        </trans-unit>
        <trans-unit id="64ecd7272d648bbcdba5e527a1a80e43cb0705c5" translate="yes" xml:space="preserve">
          <source>To enable &lt;code&gt;git archive --remote&lt;/code&gt; and disable &lt;code&gt;git fetch&lt;/code&gt; against a repository, have the following in the configuration file in the repository (that is the file &lt;code&gt;config&lt;/code&gt; next to &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;refs&lt;/code&gt; and &lt;code&gt;objects&lt;/code&gt;).</source>
          <target state="translated">Чтобы включить &lt;code&gt;git archive --remote&lt;/code&gt; и отключить &lt;code&gt;git fetch&lt;/code&gt; для репозитория, укажите следующее в файле конфигурации в репозитории (это &lt;code&gt;config&lt;/code&gt; файла рядом с &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;refs&lt;/code&gt; и &lt;code&gt;objects&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="af7d8457fff28a2087e0f74bc51d0468026a9bff" translate="yes" xml:space="preserve">
          <source>To enable a target, set the corresponding environment variable or system or global config value to one of the following:</source>
          <target state="translated">Чтобы активировать целевое значение,установите соответствующую переменную окружения или системное или глобальное значение конфигурации в одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="01e6eac26c3bbc386ab13c8cd6a9167801f24836" translate="yes" xml:space="preserve">
          <source>To enable anonymous read access but authenticated write access, require authorization for both the initial ref advertisement (which we detect as a push via the service parameter in the query string), and the receive-pack invocation itself:</source>
          <target state="translated">Для включения анонимного доступа на чтение,но аутентифицированного доступа на запись,требуется авторизация как для объявления первичного реффикса (который мы определяем как push через параметр сервиса в строке запроса),так и для самого вызова приемника-пакета:</target>
        </trans-unit>
        <trans-unit id="9bda367b82f8881561a1128afb27f36988891c35" translate="yes" xml:space="preserve">
          <source>To enable anonymous read access but authenticated write access:</source>
          <target state="translated">Включить анонимный доступ на чтение,но аутентифицированный доступ на запись:</target>
        </trans-unit>
        <trans-unit id="050d5472dcd3f05f019f9a8129d0bb6d5e205df8" translate="yes" xml:space="preserve">
          <source>To enable blame, pickaxe search, and snapshot support (allowing &quot;tar.gz&quot; and &quot;zip&quot; snapshots), while allowing individual projects to turn them off, put the following in your GITWEB_CONFIG file:</source>
          <target state="translated">Чтобы включить поддержку авторства,поиска по кирпичикам и снимков (разрешено делать снимки &quot;tar.gz&quot; и &quot;zip&quot;),одновременно разрешая отдельным проектам отключать их,поместите в ваш файл GITWEB_CONFIG следующее:</target>
        </trans-unit>
        <trans-unit id="fa7174e314ce7012972664ac5bcf82d4b390a6d5" translate="yes" xml:space="preserve">
          <source>To enable git-cvsserver access (which should generally have the &lt;code&gt;no-interactive-login&lt;/code&gt; example above as a prerequisite, as creating the git-shell-commands directory allows interactive logins):</source>
          <target state="translated">Чтобы включить доступ к git-cvsserver (который обычно должен иметь приведенный выше пример &lt;code&gt;no-interactive-login&lt;/code&gt; в качестве предварительного условия, поскольку создание каталога git-shell-commands позволяет интерактивный вход):</target>
        </trans-unit>
        <trans-unit id="69aa803d2928631745bb26ea6d720a34de175dd7" translate="yes" xml:space="preserve">
          <source>To enable that additional nice feature, when a bisection is started and when some good commits are not ancestors of the bad commit, we first compute the merge bases between the bad and the good commits and we chose these merge bases as the first commits that will be checked out and tested.</source>
          <target state="translated">Для включения этой дополнительной хорошей возможности,когда начинается биссектриса и когда некоторые хорошие коммиты не являются предками плохого коммита,мы сначала вычисляем базы слияния между плохим и хорошим коммитами и выбираем эти базы слияния в качестве первых коммитов,которые будут извлечены и протестированы.</target>
        </trans-unit>
        <trans-unit id="ba44f6ad0a0230b79b3149aabc029b57fd7f22d9" translate="yes" xml:space="preserve">
          <source>To enable the sparse-checkout feature, run &lt;code&gt;git sparse-checkout init&lt;/code&gt; to initialize a simple sparse-checkout file and enable the &lt;code&gt;core.sparseCheckout&lt;/code&gt; config setting. Then, run &lt;code&gt;git sparse-checkout set&lt;/code&gt; to modify the patterns in the sparse-checkout file.</source>
          <target state="translated">Чтобы включить функцию разреженной проверки, запустите &lt;code&gt;git sparse-checkout init&lt;/code&gt; , чтобы инициализировать простой файл разреженной проверки и включить &lt;code&gt;core.sparseCheckout&lt;/code&gt; конфигурации core.sparseCheckout . Затем запустите &lt;code&gt;git sparse-checkout set&lt;/code&gt; , чтобы изменить шаблоны в файле sparse-checkout.</target>
        </trans-unit>
        <trans-unit id="1318b73efc503f41a06d5d140c646ee25cf7e427" translate="yes" xml:space="preserve">
          <source>To exclude commits reachable from a commit, a prefix &lt;code&gt;^&lt;/code&gt; notation is used. E.g. &lt;code&gt;^r1 r2&lt;/code&gt; means commits reachable from &lt;code&gt;r2&lt;/code&gt; but exclude the ones reachable from &lt;code&gt;r1&lt;/code&gt; (i.e. &lt;code&gt;r1&lt;/code&gt; and its ancestors).</source>
          <target state="translated">Чтобы исключить коммиты, доступные из коммита, используется нотация префикса &lt;code&gt;^&lt;/code&gt; . Например, &lt;code&gt;^r1 r2&lt;/code&gt; означает, что коммиты достижимы из &lt;code&gt;r2&lt;/code&gt; , но исключают те, которые достижимы из &lt;code&gt;r1&lt;/code&gt; (т.е. &lt;code&gt;r1&lt;/code&gt; и его предки).</target>
        </trans-unit>
        <trans-unit id="a12d809ea9b20c2b561957b059e3fe943cb6e440" translate="yes" xml:space="preserve">
          <source>To find out how the result can be used, just read on in &lt;code&gt;cmd_cat_file()&lt;/code&gt;:</source>
          <target state="translated">Чтобы узнать, как можно использовать результат, просто прочтите в &lt;code&gt;cmd_cat_file()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="338cdf0c3d82152dc96e1eae9cd9922bf736e76c" translate="yes" xml:space="preserve">
          <source>To get a checkout with the Eclipse CVS client:</source>
          <target state="translated">Чтобы получить выписку с клиентом Eclipse CVS:</target>
        </trans-unit>
        <trans-unit id="976f859125db1311d8f82bb8df703ef2ad537fd0" translate="yes" xml:space="preserve">
          <source>To get a reminder of the currently used terms, use</source>
          <target state="translated">Чтобы получить напоминание об используемых в настоящее время терминах,используйте</target>
        </trans-unit>
        <trans-unit id="68b714c59ff5898ff58433a2938d52aeb27df43e" translate="yes" xml:space="preserve">
          <source>To get started with gitweb, run &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; from a Git repository. This would configure and start your web server, and run web browser pointing to gitweb.</source>
          <target state="translated">Чтобы начать работу с gitweb, запустите &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt; из репозитория Git. Это настроит и запустит ваш веб-сервер, а также запустит веб-браузер, указывающий на gitweb.</target>
        </trans-unit>
        <trans-unit id="bf62a03860b36b4b6a615592146052d88035a5f4" translate="yes" xml:space="preserve">
          <source>To get the &quot;base&quot; for the merge, look up the common parent of two commits:</source>
          <target state="translated">Чтобы получить &quot;базу&quot; для слияния,найдите общий родитель двух коммитов:</target>
        </trans-unit>
        <trans-unit id="ec1f343ca45777aa33e95b7222bfb7658aa36062" translate="yes" xml:space="preserve">
          <source>To get the feature/bugfix into an integration branch, simply merge it. If the topic has evolved further in the meantime, merge again. (Note that you do not necessarily have to merge it to the oldest integration branch first. For example, you can first merge a bugfix to &lt;code&gt;next&lt;/code&gt;, give it some testing time, and merge to &lt;code&gt;maint&lt;/code&gt; when you know it is stable.)</source>
          <target state="translated">Чтобы добавить функцию / исправление в ветку интеграции, просто объедините ее. Если за это время тема получила дальнейшее развитие, объединитесь снова. (Обратите внимание, что вам не обязательно сначала объединять его с самой старой ветвью интеграции. Например, вы можете сначала объединить исправление ошибки со &lt;code&gt;next&lt;/code&gt; , дать ему некоторое время для тестирования и слить с &lt;code&gt;maint&lt;/code&gt; , когда вы знаете, что оно стабильно.)</target>
        </trans-unit>
        <trans-unit id="60ae758b58fc83602f1720fb9cc2f0f4fb30b090" translate="yes" xml:space="preserve">
          <source>To give some hard figures, we used to have an average report-to-fix cycle of 142.6 hours (according to our somewhat weird bug-tracker which just measures wall-clock time). Since we moved to Git, we&amp;rsquo;ve lowered that to 16.2 hours. Primarily because we can stay on top of the bug fixing now, and because everyone&amp;rsquo;s jockeying to get to fix bugs (we&amp;rsquo;re quite proud of how lazy we are to let Git find the bugs for us). Each new release results in ~40% fewer bugs (almost certainly due to how we now feel about writing tests).</source>
          <target state="translated">Чтобы привести некоторые точные цифры, у нас был средний цикл между отчетами и исправлениями, составлявший 142,6 часа (в соответствии с нашим несколько странным трекером ошибок, который просто измеряет время на настенных часах). С тех пор, как мы перешли на Git, мы снизили это время до 16,2 часа. В первую очередь потому, что теперь мы можем оставаться на вершине исправления ошибок, и потому что все пытаются исправить ошибки (мы очень гордимся тем, насколько ленивы мы позволяем Git находить ошибки за нас). Каждый новый выпуск приводит к ~ 40% меньше ошибок (почти наверняка из-за того, что мы теперь думаем о написании тестов).</target>
        </trans-unit>
        <trans-unit id="cc855cb566c405d222e3a3236275bbad376833c3" translate="yes" xml:space="preserve">
          <source>To help with that, &lt;code&gt;range&lt;/code&gt; uses the &lt;code&gt;--dual-color&lt;/code&gt; mode by default. In this mode, the diff of diffs will retain the original diff colors, and prefix the lines with -/+ markers that have their &lt;strong&gt;background&lt;/strong&gt; red or green, to make it more obvious that they describe how the diff itself changed.</source>
          <target state="translated">Чтобы помочь с этим, по умолчанию &lt;code&gt;range&lt;/code&gt; использует режим &lt;code&gt;--dual-color&lt;/code&gt; . В этом режиме различие различий сохранит исходные цвета различий и префикс строк с маркерами - / + с красным или зеленым &lt;strong&gt;фоном&lt;/strong&gt; , чтобы сделать более очевидным, что они описывают, как изменилось само различие.</target>
        </trans-unit>
        <trans-unit id="096c5d9029f3f58b2af501ec17fb5d42ac0f73fe" translate="yes" xml:space="preserve">
          <source>To illustrate the difference between &lt;code&gt;-S&amp;lt;regex&amp;gt; --pickaxe-regex&lt;/code&gt; and &lt;code&gt;-G&amp;lt;regex&amp;gt;&lt;/code&gt;, consider a commit with the following diff in the same file:</source>
          <target state="translated">Чтобы проиллюстрировать разницу между &lt;code&gt;-S&amp;lt;regex&amp;gt; --pickaxe-regex&lt;/code&gt; и &lt;code&gt;-G&amp;lt;regex&amp;gt;&lt;/code&gt; , рассмотрим фиксацию со следующим различием в том же файле:</target>
        </trans-unit>
        <trans-unit id="e67d6de21feaa90def83753eb253a23faea561fa" translate="yes" xml:space="preserve">
          <source>To illustrate, suppose you are in a situation where someone develops a &lt;code&gt;subsystem&lt;/code&gt; branch, and you are working on a &lt;code&gt;topic&lt;/code&gt; that is dependent on this &lt;code&gt;subsystem&lt;/code&gt;. You might end up with a history like the following:</source>
          <target state="translated">Для иллюстрации предположим, что вы находитесь в ситуации, когда кто-то разрабатывает ветвь &lt;code&gt;subsystem&lt;/code&gt; , и вы работаете над &lt;code&gt;topic&lt;/code&gt; которая зависит от этой &lt;code&gt;subsystem&lt;/code&gt; . У вас может получиться такая история:</target>
        </trans-unit>
        <trans-unit id="a98d25733140cb4450fff563f123b0d4cafeb9f9" translate="yes" xml:space="preserve">
          <source>To interrupt the rebase (just like an &quot;edit&quot; command would do, but without cherry-picking any commit first), use the &quot;break&quot; command.</source>
          <target state="translated">Чтобы прервать rebase (так же,как это делает команда &quot;edit&quot;,но без вишневого выбора любого коммита вначале),используйте команду &quot;break&quot;.</target>
        </trans-unit>
        <trans-unit id="f6408dba3913ebdb903fdfce1d68f1906d3e56f0" translate="yes" xml:space="preserve">
          <source>To look at only non-zero stages, use &lt;code&gt;--unmerged&lt;/code&gt; flag:</source>
          <target state="translated">Чтобы посмотреть только ненулевые стадии, используйте флаг &lt;code&gt;--unmerged&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5b273f729e50c3bb1996889c896c925cce764cd8" translate="yes" xml:space="preserve">
          <source>To make it readable, we can tell &lt;code&gt;git diff-files&lt;/code&gt; to output the differences as a patch, using the &lt;code&gt;-p&lt;/code&gt; flag:</source>
          <target state="translated">Чтобы сделать его читабельным, мы можем указать &lt;code&gt;git diff-files&lt;/code&gt; выводить различия в виде патча, используя флаг &lt;code&gt;-p&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5411ef1231b1da2dbabaf49f4348af685832f2f7" translate="yes" xml:space="preserve">
          <source>To move the whole tree into a subdirectory, or remove it from there:</source>
          <target state="translated">Переместить все дерево в подкаталог или удалить его оттуда:</target>
        </trans-unit>
        <trans-unit id="9fef1883cb2bb53007927c93e3d8f7431145efad" translate="yes" xml:space="preserve">
          <source>To perform a three-way merge, you start with the two commits you want to merge, find their closest common parent (a third commit), and compare the trees corresponding to these three commits.</source>
          <target state="translated">Для выполнения трехстороннего слияния вы начинаете с двух коммитов,которые вы хотите объединить,находите их ближайшего общего родителя (третий коммит)и сравниваете деревья,соответствующие этим трём коммитам.</target>
        </trans-unit>
        <trans-unit id="a35f3e8a10774da4c0b0f3f87118660d7ef9889e" translate="yes" xml:space="preserve">
          <source>To place a higher stage entry to the index, the path should first be removed by feeding a mode=0 entry for the path, and then feeding necessary input lines in the third format.</source>
          <target state="translated">Чтобы поместить в индекс запись более высокого уровня,путь должен быть сначала удален,подавая для пути запись в режиме mode=0,а затем подавая необходимые строки ввода в третьем формате.</target>
        </trans-unit>
        <trans-unit id="26b0cbf1bc1090821ae6f59cac15f02ec7f562f8" translate="yes" xml:space="preserve">
          <source>To prepare for working on &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;, switch to it by updating the index and the files in the working tree, and by pointing &lt;code&gt;HEAD&lt;/code&gt; at the branch. Local modifications to the files in the working tree are kept, so that they can be committed to the &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы подготовиться к работе с &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; , переключитесь на нее, обновив индекс и файлы в рабочем дереве и указав &lt;code&gt;HEAD&lt;/code&gt; на ветку. Локальные изменения файлов в рабочем дереве сохраняются, поэтому их можно зафиксировать в &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13739c43ac679e23fc4c2d09478ac31e5293cb15" translate="yes" xml:space="preserve">
          <source>To pretend you have a file at path with mode and sha1, say:</source>
          <target state="translated">Чтобы сделать вид,что у вас есть файл в пути с режимом и sha1,скажем:</target>
        </trans-unit>
        <trans-unit id="6785e6ba620455f331d4a09eb8363e2600eabf25" translate="yes" xml:space="preserve">
          <source>To prevent a $GIT_DIR/worktrees entry from being pruned (which can be useful in some situations, such as when the entry&amp;rsquo;s working tree is stored on a portable device), use the &lt;code&gt;git worktree lock&lt;/code&gt; command, which adds a file named &lt;code&gt;locked&lt;/code&gt; to the entry&amp;rsquo;s directory. The file contains the reason in plain text. For example, if a linked working tree&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; file points to &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; then a file named &lt;code&gt;/path/main/.git/worktrees/test-next/locked&lt;/code&gt; will prevent the &lt;code&gt;test-next&lt;/code&gt; entry from being pruned. See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for details.</source>
          <target state="translated">Чтобы предотвратить удаление записи $ GIT_DIR / worktrees (что может быть полезно в некоторых ситуациях, например, когда рабочее дерево записи хранится на портативном устройстве), используйте команду &lt;code&gt;git worktree lock&lt;/code&gt; , которая добавляет файл с именем &lt;code&gt;locked&lt;/code&gt; в список каталог записи. Файл содержит причину в виде обычного текста. Например, если Связанное рабочего дерево в &lt;code&gt;.git&lt;/code&gt; точек файла в &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; то файл с именем &lt;code&gt;/path/main/.git/worktrees/test-next/locked&lt;/code&gt; предотвратит &lt;code&gt;test-next&lt;/code&gt; запись после обрезки. См. Подробности в &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46ac404b2baca4d3a659bb0594db0c41828389ed" translate="yes" xml:space="preserve">
          <source>To prevent these unnecessary merge conflicts, Git can be told to run a virtual check-out and check-in of all three stages of a file when resolving a three-way merge by setting the &lt;code&gt;merge.renormalize&lt;/code&gt; configuration variable. This prevents changes caused by check-in conversion from causing spurious merge conflicts when a converted file is merged with an unconverted file.</source>
          <target state="translated">Чтобы предотвратить эти ненужные конфликты слияния, Git можно указать для запуска виртуального извлечения и &lt;code&gt;merge.renormalize&lt;/code&gt; всех трех этапов файла при разрешении трехстороннего слияния, установив переменную конфигурации merge.renormalize . Это предотвращает появление ложных конфликтов слияния изменений, вызванных преобразованием регистрации, когда преобразованный файл объединяется с неконвертированным файлом.</target>
        </trans-unit>
        <trans-unit id="91d260766aee213709a415223ac206b93100d7d5" translate="yes" xml:space="preserve">
          <source>To prune objects not used by your repository or another that borrows from your repository via its &lt;code&gt;.git/objects/info/alternates&lt;/code&gt;:</source>
          <target state="translated">Чтобы удалить объекты, не используемые вашим репозиторием или другим, который заимствует из вашего репозитория через его &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f63f42b98c259e7fd0384dd68939f7fc302c5eb" translate="yes" xml:space="preserve">
          <source>To prune references as part of your normal workflow without needing to remember to run that, set &lt;code&gt;fetch.prune&lt;/code&gt; globally, or &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; per-remote in the config. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Чтобы удалить ссылки как часть вашего обычного рабочего процесса, не запоминая его запуск, установите &lt;code&gt;fetch.prune&lt;/code&gt; глобально или &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; для каждого пульта в config. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68bfae2792009c9d944a67bd77b4854e1c8c4d3e" translate="yes" xml:space="preserve">
          <source>To put the loose objects into a pack, just run git repack:</source>
          <target state="translated">Чтобы положить свободные предметы в стаю,просто запустите git-репакет:</target>
        </trans-unit>
        <trans-unit id="8344caf5b982f9b0d4dc99f7ff5aa708ff0b3592" translate="yes" xml:space="preserve">
          <source>To query the value for a given key, do</source>
          <target state="translated">Чтобы запросить значение для данного ключа,сделайте следующее</target>
        </trans-unit>
        <trans-unit id="6d7c1598e59e901d58d9b961c14fa449c82ef069" translate="yes" xml:space="preserve">
          <source>To reapply a series of changes from a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; to a different base, and reset the &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; of that branch to the result.</source>
          <target state="translated">Повторно применить серию изменений из &lt;a href=&quot;#def_branch&quot;&gt;ветки&lt;/a&gt; к другой базе и сбросить &lt;a href=&quot;#def_head&quot;&gt;заголовок&lt;/a&gt; этой ветки к результату.</target>
        </trans-unit>
        <trans-unit id="25388a0bc929e9a0e4d2bb9d4d113e8444bb02a5" translate="yes" xml:space="preserve">
          <source>To remove a file from the index and from the working tree, use</source>
          <target state="translated">Для удаления файла из индекса и из рабочего дерева используйте</target>
        </trans-unit>
        <trans-unit id="c7850646e909d85f101794190a2e6f7a699e3e90" translate="yes" xml:space="preserve">
          <source>To remove commits authored by &quot;Darl McBribe&quot; from the history:</source>
          <target state="translated">Удалить из истории коммиты,автором которых является &quot;Дарл МакБрайб&quot;:</target>
        </trans-unit>
        <trans-unit id="65692943c43d72ea453917ea884fccf3994fb56e" translate="yes" xml:space="preserve">
          <source>To remove selection, prefix the input with &lt;code&gt;-&lt;/code&gt; like this:</source>
          <target state="translated">Чтобы удалить выделение, добавьте к входу префикс &lt;code&gt;-&lt;/code&gt; например:</target>
        </trans-unit>
        <trans-unit id="9e91a512899aa79b93af123e6b1768a526248346" translate="yes" xml:space="preserve">
          <source>To repopulate the working directory with all files, use the &lt;code&gt;git sparse-checkout disable&lt;/code&gt; command.</source>
          <target state="translated">Чтобы повторно заполнить рабочий каталог всеми файлами, используйте команду &lt;code&gt;git sparse-checkout disable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c497720a7ab3ae3ef408305ef475289bc14a521" translate="yes" xml:space="preserve">
          <source>To reproduce the entire p4 history in Git, use the &lt;code&gt;@all&lt;/code&gt; modifier on the depot path:</source>
          <target state="translated">Чтобы воспроизвести всю историю p4 в Git, используйте модификатор &lt;code&gt;@all&lt;/code&gt; в пути депо:</target>
        </trans-unit>
        <trans-unit id="d4609928d728916d052df2a3b481b65890e4b16e" translate="yes" xml:space="preserve">
          <source>To require authentication for both reads and writes, use a Location directive around the repository, or one of its parent directories:</source>
          <target state="translated">Чтобы потребовать аутентификацию как при чтении,так и при записи,используйте директиву Location вокруг репозитория или одного из его родительских каталогов:</target>
        </trans-unit>
        <trans-unit id="10ebfb5ceb771c952eff2c39be3b852f1f654421" translate="yes" xml:space="preserve">
          <source>To require authentication for both reads and writes:</source>
          <target state="translated">Требование аутентификации как для чтения,так и для записи:</target>
        </trans-unit>
        <trans-unit id="847928f545abee25f9f8e4e2cc396a049af86735" translate="yes" xml:space="preserve">
          <source>To restore a file in the index to match the version in &lt;code&gt;HEAD&lt;/code&gt; (this is the same as using &lt;a href=&quot;git-reset&quot;&gt;git-reset[1]&lt;/a&gt;)</source>
          <target state="translated">Чтобы восстановить файл в индексе, чтобы он соответствовал версии в &lt;code&gt;HEAD&lt;/code&gt; (это то же самое, что использовать &lt;a href=&quot;git-reset&quot;&gt;git-reset [1]&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="21366b05c441f538e6886570018737e901640e49" translate="yes" xml:space="preserve">
          <source>To restore all files in the current directory</source>
          <target state="translated">Для восстановления всех файлов в текущем каталоге</target>
        </trans-unit>
        <trans-unit id="0ab7e14988a23edeb341648ca7b63377b3dd49d2" translate="yes" xml:space="preserve">
          <source>To restrict rewriting to only part of the history, specify a revision range in addition to the new branch name. The new branch name will point to the top-most revision that a &lt;code&gt;git rev-list&lt;/code&gt; of this range will print.</source>
          <target state="translated">Чтобы ограничить перезапись только частью истории, укажите диапазон ревизий в дополнение к новому имени ветки. Новое имя ветки будет указывать на самую верхнюю ревизию, которую напечатает &lt;code&gt;git rev-list&lt;/code&gt; из этого диапазона.</target>
        </trans-unit>
        <trans-unit id="4d880d7fd779c619b85e62692eb083b5f59e932e" translate="yes" xml:space="preserve">
          <source>To rewrite commits E,F,G,H, use one of these:</source>
          <target state="translated">Чтобы переписать обязательства E,F,G,H,используйте один из них:</target>
        </trans-unit>
        <trans-unit id="47b66273feb1f496168989ebee433bebb314fc85" translate="yes" xml:space="preserve">
          <source>To rewrite only commits D,E,F,G,H, but leave A, B and C alone, use:</source>
          <target state="translated">Переписывать только коммиты D,E,F,G,H,но оставлять A,B и C в покое,использовать:</target>
        </trans-unit>
        <trans-unit id="8c31d9c011b7c86062de888fb92cc01426b53584" translate="yes" xml:space="preserve">
          <source>To rewrite the repository to look as if &lt;code&gt;foodir/&lt;/code&gt; had been its project root, and discard all other history:</source>
          <target state="translated">Чтобы переписать репозиторий, чтобы он выглядел так, как будто &lt;code&gt;foodir/&lt;/code&gt; был его корнем проекта, и отбросить всю остальную историю:</target>
        </trans-unit>
        <trans-unit id="7c02b2b350476c8c24e25173b62f35a8ad0c0ae3" translate="yes" xml:space="preserve">
          <source>To see how submodule support works, create four example repositories that can be used later as a submodule:</source>
          <target state="translated">Чтобы посмотреть,как работает поддержка субмодулей,создайте четыре репозитория примеров,которые впоследствии могут быть использованы в качестве субмодуля:</target>
        </trans-unit>
        <trans-unit id="700bc56e5656b835e5cd7fa2e5386957dfc66eac" translate="yes" xml:space="preserve">
          <source>To see the currently remaining suspects in &lt;code&gt;gitk&lt;/code&gt;, issue the following command during the bisection process (the subcommand &lt;code&gt;view&lt;/code&gt; can be used as an alternative to &lt;code&gt;visualize&lt;/code&gt;):</source>
          <target state="translated">Чтобы увидеть в настоящее время остающихся подозреваемых в &lt;code&gt;gitk&lt;/code&gt; , выполните следующую команду в процессе бисекций (подкоманда &lt;code&gt;view&lt;/code&gt; может быть использован в качестве альтернативы &lt;code&gt;visualize&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="faa509deef7fcd4d518cc2cd2e577046b7eb747b" translate="yes" xml:space="preserve">
          <source>To see whether it has already been merged into the test or release branches, use:</source>
          <target state="translated">Чтобы проверить,было ли уже произведено слияние в тестовую ветку или в ветку релизов,используйте:</target>
        </trans-unit>
        <trans-unit id="1e15ca1368deb202f467e491af7bfdb38f930af4" translate="yes" xml:space="preserve">
          <source>To serve gitweb at the same url, use a ScriptAliasMatch to only those URLs that &lt;code&gt;git http-backend&lt;/code&gt; can handle, and forward the rest to gitweb:</source>
          <target state="translated">Чтобы обслуживать gitweb по тому же URL-адресу, используйте ScriptAliasMatch только для тех URL-адресов, которые может обрабатывать &lt;code&gt;git http-backend&lt;/code&gt; , а остальные перенаправьте на gitweb:</target>
        </trans-unit>
        <trans-unit id="3b5c2b799f6b39d60aa882699fc88e3eb3a77175" translate="yes" xml:space="preserve">
          <source>To serve multiple repositories from different &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; in a single repository:</source>
          <target state="translated">Чтобы обслуживать несколько репозиториев из разных &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt; в одном репозитории:</target>
        </trans-unit>
        <trans-unit id="59fa97f902b7761eca14600ff37aff1758dec6bd" translate="yes" xml:space="preserve">
          <source>To set a commit (which typically is at the tip of another history) to be the parent of the current initial commit, in order to paste the other history behind the current history:</source>
          <target state="translated">Установка коммита (который обычно находится на кончике другой истории)в качестве родителя текущего начального коммита,чтобы вставить другую историю за текущую историю:</target>
        </trans-unit>
        <trans-unit id="d091c25539483b5c5b3db274eae656a5f768704a" translate="yes" xml:space="preserve">
          <source>To set the date used in future tag objects, set the environment variable GIT_COMMITTER_DATE (see the later discussion of possible values; the most common form is &quot;YYYY-MM-DD HH:MM&quot;).</source>
          <target state="translated">Для установки даты,используемой в будущих объектах тегов,установите переменную окружения GIT_COMMITTER_DATE (см.последующее обсуждение возможных значений;наиболее распространенная форма-&quot;YYYY-MM-DD HH:MM&quot;).</target>
        </trans-unit>
        <trans-unit id="0de4847876d8ab04ebb463613f39507d60c3b1a3" translate="yes" xml:space="preserve">
          <source>To set this up, first create your work tree by cloning Linus&amp;rsquo;s public tree:</source>
          <target state="translated">Чтобы настроить это, сначала создайте свое рабочее дерево, клонировав публичное дерево Линуса:</target>
        </trans-unit>
        <trans-unit id="6fdb47a7575f286ad7a6b8b651d8470ef2c51c01" translate="yes" xml:space="preserve">
          <source>To set up &lt;code&gt;git daemon&lt;/code&gt; as a regular, non-inetd service that handles repositories for multiple virtual hosts based on their IP addresses, start the daemon like this:</source>
          <target state="translated">Чтобы настроить &lt;code&gt;git daemon&lt;/code&gt; как обычную службу, не относящуюся к inetd, которая обрабатывает репозитории для нескольких виртуальных хостов на основе их IP-адресов, запустите демон следующим образом:</target>
        </trans-unit>
        <trans-unit id="cd4e85b93c0b5a71d973a240463742c429d6ce10" translate="yes" xml:space="preserve">
          <source>To set up &lt;code&gt;git daemon&lt;/code&gt; as an inetd service that handles any repository under the whitelisted set of directories, /pub/foo and /pub/bar, place an entry like the following into /etc/inetd all on one line:</source>
          <target state="translated">Чтобы настроить &lt;code&gt;git daemon&lt;/code&gt; как службу inetd, которая обрабатывает любой репозиторий из белого списка каталогов, / pub / foo и / pub / bar, поместите в / etc / inetd все в одну строку такую ​​запись:</target>
        </trans-unit>
        <trans-unit id="d85d4c6ac447e3ea7881a95ee3354b641502c913" translate="yes" xml:space="preserve">
          <source>To set up &lt;code&gt;git daemon&lt;/code&gt; as an inetd service that handles repositories for different virtual hosts, &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;www.example.org&lt;/code&gt;, place an entry like the following into &lt;code&gt;/etc/inetd&lt;/code&gt; all on one line:</source>
          <target state="translated">Чтобы настроить &lt;code&gt;git daemon&lt;/code&gt; как службу inetd, которая обрабатывает репозитории для разных виртуальных хостов, &lt;code&gt;www.example.com&lt;/code&gt; и &lt;code&gt;www.example.org&lt;/code&gt; , поместите следующую запись в &lt;code&gt;/etc/inetd&lt;/code&gt; all в одной строке:</target>
        </trans-unit>
        <trans-unit id="6d1dfa06a0b2e0253dac9a23d3e763ff2be4729c" translate="yes" xml:space="preserve">
          <source>To shelve changes instead of submitting, use &lt;code&gt;--shelve&lt;/code&gt; and &lt;code&gt;--update-shelve&lt;/code&gt;:</source>
          <target state="translated">Чтобы отложить изменения вместо отправки, используйте &lt;code&gt;--shelve&lt;/code&gt; и &lt;code&gt;--update-shelve&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b19251adc869dd31b98316a2df3ca3e146f58f68" translate="yes" xml:space="preserve">
          <source>To show all references called &quot;master&quot;, whether tags or heads or anything else, and regardless of how deep in the reference naming hierarchy they are, use:</source>
          <target state="translated">Для отображения всех ссылок,называемых &quot;master&quot;,будь то теги или головы или что-то еще,и независимо от того,насколько глубоко в иерархии именования ссылок они находятся,используйте:</target>
        </trans-unit>
        <trans-unit id="51ec81ccf2337a76aefa897308cd08d96e515614" translate="yes" xml:space="preserve">
          <source>To show only tags, or only proper branch heads, use &quot;--tags&quot; and/or &quot;--heads&quot; respectively (using both means that it shows tags and heads, but not other random references under the refs/ subdirectory).</source>
          <target state="translated">Для показа только тегов,или только правильных головок ответвлений,используйте &quot;--tags&quot; и/или &quot;--heads&quot; соответственно (использование обоих означает,что показываются только теги и головки,но не другие случайные ссылки в подкаталоге refs/).</target>
        </trans-unit>
        <trans-unit id="864f9f1ee17e37f4b3823291b8524eebd5879fc4" translate="yes" xml:space="preserve">
          <source>To show that as an example, let&amp;rsquo;s go back to the git-tutorial repository we used earlier, and create a branch in it. You do that by simply just saying that you want to check out a new branch:</source>
          <target state="translated">Чтобы показать это в качестве примера, давайте вернемся в репозиторий git-tutorial, который мы использовали ранее, и создадим в нем ветку. Вы делаете это, просто говоря, что хотите проверить новую ветку:</target>
        </trans-unit>
        <trans-unit id="acab411fa1b0a4e2f72e42b537e21a4bc08bf613" translate="yes" xml:space="preserve">
          <source>To simplify the discussion we will suppose that the untestable area is a simple string of commits and that it was created by a breakage introduced by one commit (let&amp;rsquo;s call it BBC for bisect breaking commit) and later fixed by another one (let&amp;rsquo;s call it BFC for bisect fixing commit).</source>
          <target state="translated">Чтобы упростить обсуждение, мы предположим, что непроверяемая область представляет собой простую строку коммитов и что она была создана из-за поломки, вызванной одной фиксацией (назовем ее BBC для разбиения на две части), а затем исправлена ​​другой (назовем ее BFC для фиксации фиксации пополам).</target>
        </trans-unit>
        <trans-unit id="975e3a9279c8287bca9f664bbcc61fee7baa93ca" translate="yes" xml:space="preserve">
          <source>To specify a branch other than the current one, use:</source>
          <target state="translated">Чтобы указать ветку,отличную от текущей,используйте:</target>
        </trans-unit>
        <trans-unit id="b6b6e95c2c1acd4004bc280690d73f7c9df3e3b0" translate="yes" xml:space="preserve">
          <source>To specify a namespace, set the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable to the namespace. For each ref namespace, Git stores the corresponding refs in a directory under &lt;code&gt;refs/namespaces/&lt;/code&gt;. For example, &lt;code&gt;GIT_NAMESPACE=foo&lt;/code&gt; will store refs under &lt;code&gt;refs/namespaces/foo/&lt;/code&gt;. You can also specify namespaces via the &lt;code&gt;--namespace&lt;/code&gt; option to &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">Чтобы указать пространство имен, установите &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; среды GIT_NAMESPACE в пространство имен. Для каждого пространства имен ref Git сохраняет соответствующие ссылки в каталоге &lt;code&gt;refs/namespaces/&lt;/code&gt; . Например, &lt;code&gt;GIT_NAMESPACE=foo&lt;/code&gt; будет хранить ссылки в &lt;code&gt;refs/namespaces/foo/&lt;/code&gt; . Вы также можете указать пространства имен с помощью параметра &lt;code&gt;--namespace&lt;/code&gt; для &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d8e0463dddb070b083bcb1d31f0cd304bcae1a2" translate="yes" xml:space="preserve">
          <source>To specify a single commit or a range of commits, use:</source>
          <target state="translated">Для задания одного или нескольких коммитов используйте:</target>
        </trans-unit>
        <trans-unit id="b6bdd73c5af990a9c308cb3582e6683a673000a9" translate="yes" xml:space="preserve">
          <source>To stop tracking a file that is currently tracked, use &lt;code&gt;git rm --cached&lt;/code&gt;.</source>
          <target state="translated">Чтобы остановить отслеживание файла, который в настоящее время отслеживается, используйте &lt;code&gt;git rm --cached&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aabd990937e7026d6c235ccca8da7a1bd54429f" translate="yes" xml:space="preserve">
          <source>To submit all changes that are in the current Git branch but not in the &lt;code&gt;p4/master&lt;/code&gt; branch, use:</source>
          <target state="translated">Чтобы отправить все изменения, которые есть в текущей ветке Git, но не в ветке &lt;code&gt;p4/master&lt;/code&gt; , используйте:</target>
        </trans-unit>
        <trans-unit id="4d37523ff8334f7ae27e64b17d4088a430f024d8" translate="yes" xml:space="preserve">
          <source>To submit patches using GMail&amp;rsquo;s IMAP interface, first, edit your ~/.gitconfig to specify your account settings:</source>
          <target state="translated">Чтобы отправить исправления с помощью интерфейса IMAP GMail, сначала отредактируйте файл ~ / .gitconfig, указав настройки своей учетной записи:</target>
        </trans-unit>
        <trans-unit id="3829362b0206f78fb7e35755e5364f47036b822a" translate="yes" xml:space="preserve">
          <source>To support virtual hosting, an interpolated path template can be used to dynamically construct alternate paths. The template supports %H for the target hostname as supplied by the client but converted to all lowercase, %CH for the canonical hostname, %IP for the server&amp;rsquo;s IP address, %P for the port number, and %D for the absolute path of the named repository. After interpolation, the path is validated against the directory whitelist.</source>
          <target state="translated">Для поддержки виртуального хостинга можно использовать шаблон интерполированного пути для динамического создания альтернативных путей. Шаблон поддерживает% H для имени целевого хоста, предоставленное клиентом, но преобразованное во все строчные буквы,% CH для канонического имени хоста,% IP для IP-адреса сервера,% P для номера порта и% D для абсолютного пути к названный репозиторий. После интерполяции путь проверяется по белому списку каталогов.</target>
        </trans-unit>
        <trans-unit id="5c5bebcfb262219afa24ad57e1be9ff8017de145" translate="yes" xml:space="preserve">
          <source>To switch back to the previous branch before we switched to mytopic (i.e. &quot;master&quot; branch):</source>
          <target state="translated">Чтобы вернуться в предыдущую ветку перед переключением на митотику (т.е.&quot;главную&quot; ветку):</target>
        </trans-unit>
        <trans-unit id="f604bfa9fc2a5e3a8b43aed4c26f0a58bfbd1e14" translate="yes" xml:space="preserve">
          <source>To tell Git that yes, you really do realize that certain files no longer exist, or that new files should be added, you should use the &lt;code&gt;--remove&lt;/code&gt; and &lt;code&gt;--add&lt;/code&gt; flags respectively.</source>
          <target state="translated">Чтобы сказать Git, что да, вы действительно понимаете, что определенные файлы больше не существуют или что нужно добавить новые файлы, вы должны использовать флаги &lt;code&gt;--remove&lt;/code&gt; и &lt;code&gt;--add&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="f3c508cb95e621506ae6e931b2fdadcaba14a047" translate="yes" xml:space="preserve">
          <source>To test the interaction of several topics, merge them into a throw-away branch. You must never base any work on such a branch!</source>
          <target state="translated">Чтобы протестировать взаимодействие нескольких тем,объедините их в отбрасывающую ветку.Вы никогда не должны основывать свою работу на такой ветке!</target>
        </trans-unit>
        <trans-unit id="ded44bb687bc8a448accbaa8cf09bc1b10b3ff71" translate="yes" xml:space="preserve">
          <source>To that end, it first finds pairs of commits from both commit ranges that correspond with each other. Two commits are said to correspond when the diff between their patches (i.e. the author information, the commit message and the commit diff) is reasonably small compared to the patches' size. See ``Algorithm`` below for details.</source>
          <target state="translated">Для этого он сначала находит пары коммитов из обоих диапазонов коммитов,которые соответствуют друг другу.Говорят,что два коммита соответствуют друг другу,когда разница между их патчами (т.е.информация об авторе,сообщение о коммите и разница между патчами)достаточно мала по сравнению с размером патчей.Подробности см.в ``Алгоритме` ниже.</target>
        </trans-unit>
        <trans-unit id="28b9a65cbb97d3af18835efd06d4d171278e0508" translate="yes" xml:space="preserve">
          <source>To throw away part of the development, i.e. to assign the &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; to an earlier &lt;a href=&quot;#def_revision&quot;&gt;revision&lt;/a&gt;.</source>
          <target state="translated">Отбросить часть разработки, т.е. присвоить &lt;a href=&quot;#def_head&quot;&gt;голову&lt;/a&gt; более ранней &lt;a href=&quot;#def_revision&quot;&gt;ревизии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2857b34f71a88c7afeb725363e4097e2e44ff45" translate="yes" xml:space="preserve">
          <source>To top it all off, even when users finally find working commands, they naturally want to share them. But they may be unaware that their repo didn&amp;rsquo;t have some special cases that someone else&amp;rsquo;s does. So, when someone else with a different repository runs the same commands, they get hit by the problems above. Or, the user just runs commands that really were vetted for special cases, but they run it on a different OS where it doesn&amp;rsquo;t work, as noted above.</source>
          <target state="translated">В довершение ко всему, даже когда пользователи, наконец, находят рабочие команды, они, естественно, хотят ими поделиться. Но они могут не знать, что в их репо не было особых случаев, которые есть у кого-то другого. Таким образом, когда кто-то другой с другим репозиторием выполняет те же команды, он сталкивается с проблемами, указанными выше. Или пользователь просто запускает команды, которые действительно были проверены для особых случаев, но они запускают их в другой ОС, где это не работает, как указано выше.</target>
        </trans-unit>
        <trans-unit id="c4d2ca21938c992db0b3b75cacfc935366e6629e" translate="yes" xml:space="preserve">
          <source>To update and refresh only the files already checked out</source>
          <target state="translated">Обновлять и обновлять только те файлы,которые уже были проверены.</target>
        </trans-unit>
        <trans-unit id="a8c26a487a2f6627cb1ef2fcc7d8934daa7b62d0" translate="yes" xml:space="preserve">
          <source>To update and refresh only the files already checked out:</source>
          <target state="translated">Обновлять и обновлять только уже проверенные файлы:</target>
        </trans-unit>
        <trans-unit id="ec65c1043e980aa5b1f1a444793e6e405a4b07fd" translate="yes" xml:space="preserve">
          <source>To update the index with the contents of a new or modified file, use</source>
          <target state="translated">Для обновления индекса содержимым нового или измененного файла используйте</target>
        </trans-unit>
        <trans-unit id="693fe77a3dea0f3b3cf2c4a884d12237d7043db5" translate="yes" xml:space="preserve">
          <source>To update the resulting mine.git repository, you can fetch or pull after replacing the bundle stored at /home/me/tmp/file.bundle with incremental updates.</source>
          <target state="translated">Чтобы обновить результирующий репозиторий mine.git,вы можете извлечь или извлечь после замены пакета,хранящегося в /home/me/tmp/file.bundle,инкрементными обновлениями.</target>
        </trans-unit>
        <trans-unit id="7804c7379482ba8df4ffa8604001ea71fae1937a" translate="yes" xml:space="preserve">
          <source>To use &quot;old&quot; and &quot;new&quot; instead of &quot;good&quot; and bad, you must run &lt;code&gt;git
bisect start&lt;/code&gt; without commits as argument and then run the following commands to add the commits:</source>
          <target state="translated">Чтобы использовать &amp;laquo;старые&amp;raquo; и &amp;laquo;новые&amp;raquo; вместо &amp;laquo;хороших&amp;raquo; и &amp;laquo;плохих&amp;raquo;, вы должны запустить &lt;code&gt;git bisect start&lt;/code&gt; без коммитов в качестве аргумента, а затем выполнить следующие команды, чтобы добавить коммиты:</target>
        </trans-unit>
        <trans-unit id="288cf0a04f95ab8d9b3cedc9a80bcb75e1eb91a6" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;git send-email&lt;/code&gt; to send your patches through the GMail SMTP server, edit ~/.gitconfig to specify your account settings:</source>
          <target state="translated">Чтобы использовать &lt;code&gt;git send-email&lt;/code&gt; для отправки патчей через SMTP-сервер GMail, отредактируйте ~ / .gitconfig, указав настройки своей учетной записи:</target>
        </trans-unit>
        <trans-unit id="b24b5140a04c50c5ab1f6a8bf4b67a65e4b08446" translate="yes" xml:space="preserve">
          <source>To use a helper, you must first select one to use. Git currently includes the following helpers:</source>
          <target state="translated">Чтобы использовать помощника,сначала необходимо выбрать его.В настоящее время Git включает в себя следующих помощников:</target>
        </trans-unit>
        <trans-unit id="00e4f18d69f51ffe1eea42af728cb3d7bb0059ec" translate="yes" xml:space="preserve">
          <source>To use the tool, imap.folder and either imap.tunnel or imap.host must be set to appropriate values.</source>
          <target state="translated">Для использования инструмента,папка imap.folder и либо imap.tunnel,либо imap.host должны быть установлены на соответствующие значения.</target>
        </trans-unit>
        <trans-unit id="8b51a494019812910be0a147154b59e9ef1b84fa" translate="yes" xml:space="preserve">
          <source>To use this mode effectively, you have to make sure &lt;code&gt;all&lt;/code&gt; the branches you would push out are ready to be pushed out before running &lt;code&gt;git push&lt;/code&gt;, as the whole point of this mode is to allow you to push all of the branches in one go. If you usually finish work on only one branch and push out the result, while other branches are unfinished, this mode is not for you. Also this mode is not suitable for pushing into a shared central repository, as other people may add new branches there, or update the tip of existing branches outside your control.</source>
          <target state="translated">Чтобы использовать этот режим эффективно, вы должны убедиться, что &lt;code&gt;all&lt;/code&gt; ветви, которые вы будете выталкивать, готовы к выталкиванию, прежде чем запускать &lt;code&gt;git push&lt;/code&gt; , так как весь смысл этого режима состоит в том, чтобы позволить вам вытолкнуть все ветки за один раз. Если вы обычно заканчиваете работу только с одной веткой и выталкиваете результат, а другие ветки остаются незавершенными, этот режим не для вас. Также этот режим не подходит для отправки в общий центральный репозиторий, поскольку другие люди могут добавлять туда новые ветки или обновлять концы существующих веток, находящихся вне вашего контроля.</target>
        </trans-unit>
        <trans-unit id="0db2ead5af506998515a70d6693b9cc78c43968a" translate="yes" xml:space="preserve">
          <source>To verify that &lt;code&gt;master&lt;/code&gt; is indeed a superset of &lt;code&gt;maint&lt;/code&gt;, use git log:</source>
          <target state="translated">Чтобы убедиться, что &lt;code&gt;master&lt;/code&gt; действительно является надмножеством &lt;code&gt;maint&lt;/code&gt; , используйте git log:</target>
        </trans-unit>
        <trans-unit id="25e07c07376edb7f994c3289d03610c1335d5288" translate="yes" xml:space="preserve">
          <source>Todo list</source>
          <target state="translated">Весь список</target>
        </trans-unit>
        <trans-unit id="44e89f12173f1b11f3c33dfcf393dbeb53d74231" translate="yes" xml:space="preserve">
          <source>Toggle the pre-push hook (see &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;). The default is --verify, giving the hook a chance to prevent the push. With --no-verify, the hook is bypassed completely.</source>
          <target state="translated">&lt;a href=&quot;githooks&quot;&gt;Включите&lt;/a&gt; перехватчик предварительного нажатия (см. Githooks [5] ). По умолчанию --verify, что дает ловушке возможность предотвратить толчок. С --no-verify ловушка полностью игнорируется.</target>
        </trans-unit>
        <trans-unit id="e69b3ac557eee7192f98b057069c2f145301ef39" translate="yes" xml:space="preserve">
          <source>Topic branches</source>
          <target state="translated">Тематические отрасли</target>
        </trans-unit>
        <trans-unit id="99011a3381da15bff0042576b0bb55bb6ae9ffd0" translate="yes" xml:space="preserve">
          <source>TortoiseCVS</source>
          <target state="translated">TortoiseCVS</target>
        </trans-unit>
        <trans-unit id="9732ce69da01051c0a62cf40cfeb5063ebcf5c22" translate="yes" xml:space="preserve">
          <source>Trace the evolution of the line range given by &quot;&amp;lt;start&amp;gt;,&amp;lt;end&amp;gt;&quot; (or the function name regex &amp;lt;funcname&amp;gt;) within the &amp;lt;file&amp;gt;. You may not give any pathspec limiters. This is currently limited to a walk starting from a single revision, i.e., you may only give zero or one positive revision arguments, and &amp;lt;start&amp;gt; and &amp;lt;end&amp;gt; (or &amp;lt;funcname&amp;gt;) must exist in the starting revision. You can specify this option more than once. Implies &lt;code&gt;--patch&lt;/code&gt;. Patch output can be suppressed using &lt;code&gt;--no-patch&lt;/code&gt;, but other diff formats (namely &lt;code&gt;--raw&lt;/code&gt;, &lt;code&gt;--numstat&lt;/code&gt;, &lt;code&gt;--shortstat&lt;/code&gt;, &lt;code&gt;--dirstat&lt;/code&gt;, &lt;code&gt;--summary&lt;/code&gt;, &lt;code&gt;--name-only&lt;/code&gt;, &lt;code&gt;--name-status&lt;/code&gt;, &lt;code&gt;--check&lt;/code&gt;) are not currently implemented.</source>
          <target state="translated">Проследите эволюцию диапазона строк, заданного &amp;laquo;&amp;lt;start&amp;gt;, &amp;lt;end&amp;gt;&amp;raquo; (или именем функции regex &amp;lt;funcname&amp;gt;) внутри &amp;lt;file&amp;gt;. Вы не можете указывать никакие ограничители pathspec. В настоящее время это ограничено обходом, начиная с одной ревизии, т. Е. Вы можете указать только ноль или один положительный аргумент ревизии, и в начальной ревизии должны существовать &amp;lt;start&amp;gt; и &amp;lt;end&amp;gt; (или &amp;lt;funcname&amp;gt;). Вы можете указать эту опцию более одного раза. Подразумевается &lt;code&gt;--patch&lt;/code&gt; . Вывод исправлений можно подавить с помощью &lt;code&gt;--no-patch&lt;/code&gt; , но другие форматы &lt;code&gt;--raw&lt;/code&gt; (а именно --raw , &lt;code&gt;--numstat&lt;/code&gt; , &lt;code&gt;--shortstat&lt;/code&gt; , &lt;code&gt;--dirstat&lt;/code&gt; , &lt;code&gt;--summary&lt;/code&gt; , &lt;code&gt;--name-only&lt;/code&gt; , &lt;code&gt;--name-status&lt;/code&gt; , &lt;code&gt;--check&lt;/code&gt; ) в настоящее время не реализованы.</target>
        </trans-unit>
        <trans-unit id="324f1031e6064bf946ba7ad7de400c92a706ee71" translate="yes" xml:space="preserve">
          <source>Trace2 api</source>
          <target state="translated">Trace2 api</target>
        </trans-unit>
        <trans-unit id="f39bab439a6977ac76a84295e79b079d44b7d908" translate="yes" xml:space="preserve">
          <source>Trace2 config settings are only read from the system and global config files; repository local and worktree config files and &lt;code&gt;-c&lt;/code&gt; command line arguments are not respected.</source>
          <target state="translated">Параметры конфигурации Trace2 считываются только из системных и глобальных файлов конфигурации; локальные файлы конфигурации репозитория и файлы конфигурации рабочего дерева и аргументы командной строки &lt;code&gt;-c&lt;/code&gt; не соблюдаются.</target>
        </trans-unit>
        <trans-unit id="34f4d5fb2d35b898a8c6180c70ae5079360dafe0" translate="yes" xml:space="preserve">
          <source>Trace2 defines the following set of Trace2 Targets. Format details are given in a later section.</source>
          <target state="translated">Trace2 определяет следующий набор Trace2 Targets.Подробная информация о формате приведена в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="9cffe01770c87380a0c500c2ba4c5fe9919c83ec" translate="yes" xml:space="preserve">
          <source>Trace2 instrumentation throughout the Git code base sends Trace2 messages to the enabled Trace2 Targets. Targets transform these messages content into purpose-specific formats and write events to their data streams. In this manner, the Trace2 API can drive many different types of analysis.</source>
          <target state="translated">Приборы Trace2 по всей базе Git-кода посылают сообщения Trace2 на включённые цели Trace2.Цели трансформируют содержимое этих сообщений в специальные форматы и записывают события в свои потоки данных.Таким образом,API Trace2 может управлять различными типами анализа.</target>
        </trans-unit>
        <trans-unit id="952dc6d60a810a50f48d84409a5ca3162f18abfc" translate="yes" xml:space="preserve">
          <source>Trace2 is controlled using &lt;code&gt;trace2.&lt;/code&gt; config values in the system and global config files and &lt;code&gt;GIT_TRACE2&lt;/code&gt; environment variables. Trace2 does not read from repo local or worktree config files or respect &lt;code&gt;-c&lt;/code&gt; command line config settings.</source>
          <target state="translated">Trace2 управляется с помощью &lt;code&gt;trace2.&lt;/code&gt; значения config в системных и глобальных файлах конфигурации и переменные среды &lt;code&gt;GIT_TRACE2&lt;/code&gt; . Trace2 не читает из локальных файлов репозитория или файлов конфигурации рабочего дерева или не соблюдает параметры конфигурации командной строки &lt;code&gt;-c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20f68aac372bbc56e3b5b3e96aea0079529bedb9" translate="yes" xml:space="preserve">
          <source>Trace2 regions are similar to the existing trace_performance_enter() and trace_performance_leave() routines, but are thread safe and maintain per-thread stacks of timers.</source>
          <target state="translated">Регионы Trace2 аналогичны существующим подпрограммам trace_performance_enter()и trace_performance_leave(),но являются потокобезопасными и поддерживают потокобезопасные стеки таймеров.</target>
        </trans-unit>
        <trans-unit id="8bded73626b8544423d59c1c5a0c1bfb684cb12e" translate="yes" xml:space="preserve">
          <source>Trace2 target formats</source>
          <target state="translated">Целевые форматы Trace2</target>
        </trans-unit>
        <trans-unit id="e4cb4d4e7e519744d1375eb303304baebc567ae9" translate="yes" xml:space="preserve">
          <source>Trace2 targets</source>
          <target state="translated">Цели Trace2</target>
        </trans-unit>
        <trans-unit id="a0cfb1f78b98054b282b0aab138d8ea25f2c82bd" translate="yes" xml:space="preserve">
          <source>Tracking and contributing to an entire Subversion-managed project (complete with a trunk, tags and branches):</source>
          <target state="translated">Отслеживание и внесение вклада в весь проект,управляемый Subversion (в комплекте со стволом,тегами и ветками):</target>
        </trans-unit>
        <trans-unit id="847895b0cdb93b975e4c930f95d66dabeb1e64d2" translate="yes" xml:space="preserve">
          <source>Tracking and contributing to the trunk of a Subversion-managed project (ignoring tags and branches):</source>
          <target state="translated">Отслеживание и внесение вклада в ствол проекта,управляемого Subversion (без учета тегов и веток):</target>
        </trans-unit>
        <trans-unit id="667c19a45142471c0c20cc605b683a6a3152afb1" translate="yes" xml:space="preserve">
          <source>Traditionally, tips of branches and tags (collectively known as &lt;code&gt;refs&lt;/code&gt;) were stored one file per ref in a (sub)directory under &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory. While many branch tips tend to be updated often, most tags and some branch tips are never updated. When a repository has hundreds or thousands of tags, this one-file-per-ref format both wastes storage and hurts performance.</source>
          <target state="translated">Традиционно подсказки ветвей и теги (вместе известные как &lt;code&gt;refs&lt;/code&gt; ) хранились по одному файлу на ссылку в (под) каталоге в каталоге &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; . Хотя многие советы по ветвям, как правило, обновляются часто, большинство тегов и некоторые советы по ветвям никогда не обновляются. Когда в репозитории есть сотни или тысячи тегов, этот формат &amp;laquo;один файл на ссылку&amp;raquo; не только расходует память, но и снижает производительность.</target>
        </trans-unit>
        <trans-unit id="a5cf7db57e9cf074478d171148671cc677faf56a" translate="yes" xml:space="preserve">
          <source>Trailing spaces are ignored unless they are quoted with backslash (&quot;&lt;code&gt;\&lt;/code&gt;&quot;).</source>
          <target state="translated">Конечные пробелы игнорируются, если они не заключены в кавычки с обратной косой чертой (&quot; &lt;code&gt;\&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="18baa50eee1aac68104e16bd4ad94c661cde3869" translate="yes" xml:space="preserve">
          <source>Transfer size: In its current form Git requires the whole working tree present. It does not allow partial trees to be transferred in fetch or clone. If the project you work on consists of multiple repositories tied together as submodules in a superproject, you can avoid fetching the working trees of the repositories you are not interested in.</source>
          <target state="translated">Трансфертный размер:В своём нынешнем виде Git требует наличия всего рабочего дерева.Он не позволяет переносить частичные деревья в фетч или клон.Если проект,над которым вы работаете,состоит из нескольких репозиториев,связанных между собой в качестве субмодулей в суперпроекте,вы можете избежать извлечения рабочих деревьев из репозиториев,которые вас не интересуют.</target>
        </trans-unit>
        <trans-unit id="bdf6a912dffd18ed6042052fce8610d96ce56a71" translate="yes" xml:space="preserve">
          <source>Transform stdin by substituting all the 40-character SHA-1 hexes (say $hex) with &quot;$hex ($rev_name)&quot;. When used with --name-only, substitute with &quot;$rev_name&quot;, omitting $hex altogether. Intended for the scripter&amp;rsquo;s use.</source>
          <target state="translated">Преобразуйте стандартный ввод, заменив все 40-символьные гексагоны SHA-1 (например, $ hex) на &amp;laquo;$ hex ($ rev_name)&amp;raquo;. При использовании с --name-only замените его на &quot;$ rev_name&quot;, полностью опуская $ hex. Предназначен для использования скриптером.</target>
        </trans-unit>
        <trans-unit id="fc873c381aea0c960eb3ebd47773defb66d7e124" translate="yes" xml:space="preserve">
          <source>Transmit &amp;lt;string&amp;gt; as a push option. As the push option must not contain LF or NUL characters, the string is not encoded.</source>
          <target state="translated">Передайте &amp;lt;string&amp;gt; как опцию push. Поскольку параметр push не должен содержать символов LF или NUL, строка не кодируется.</target>
        </trans-unit>
        <trans-unit id="32bd61986aca00f68612950bbcdb4915d3d0e846" translate="yes" xml:space="preserve">
          <source>Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character. The server&amp;rsquo;s handling of server options, including unknown ones, is server-specific. When multiple &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; are given, they are all sent to the other side in the order listed on the command line.</source>
          <target state="translated">Передайте заданную строку на сервер при обмене данными с использованием протокола версии 2. Данная строка не должна содержать символа NUL или LF. Обработка сервером параметров сервера, в том числе неизвестных, зависит от сервера. Если &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; несколько --server-option = &amp;lt;option&amp;gt; , все они отправляются другой стороне в порядке, указанном в командной строке.</target>
        </trans-unit>
        <trans-unit id="39635a03df29b9789e505a1038590e24ea96c9e9" translate="yes" xml:space="preserve">
          <source>Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character. When multiple &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; are given, they are all sent to the other side in the order listed on the command line.</source>
          <target state="translated">Передайте заданную строку на сервер при обмене данными с использованием протокола версии 2. Данная строка не должна содержать символа NUL или LF. Если &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; несколько --server-option = &amp;lt;option&amp;gt; , все они отправляются другой стороне в порядке, указанном в командной строке.</target>
        </trans-unit>
        <trans-unit id="2995fbcc2c84443582483713456b482a39b63e37" translate="yes" xml:space="preserve">
          <source>Transmit the given string to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character. When multiple &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; are given, they are all sent to the other side in the order listed on the command line. When no &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; is given from the command line, the values of configuration variable &lt;code&gt;push.pushOption&lt;/code&gt; are used instead.</source>
          <target state="translated">Передайте заданную строку на сервер, который передает их в ловушку предварительного и пост-приема. Данная строка не должна содержать символа NUL или LF. Если &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; несколько --push-option = &amp;lt;option&amp;gt; , все они отправляются другой стороне в порядке, указанном в командной строке. Если в командной строке не &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; вместо этого используются значения переменной конфигурации &lt;code&gt;push.pushOption&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9960fbc3363c91bebbbc4dae3127f4935a1a22d6" translate="yes" xml:space="preserve">
          <source>Treat all files as text.</source>
          <target state="translated">Обращайтесь со всеми файлами как с текстом.</target>
        </trans-unit>
        <trans-unit id="a08e9c61e543dccc4a24afe7a10c95737cbb1ca7" translate="yes" xml:space="preserve">
          <source>Treat pathspecs literally (i.e. no globbing, no pathspec magic). This is equivalent to setting the &lt;code&gt;GIT_LITERAL_PATHSPECS&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Обращайтесь со спецификациями путей буквально (т.е. без подстановок, без магии pathspec). Это эквивалентно установке &lt;code&gt;GIT_LITERAL_PATHSPECS&lt;/code&gt; среды GIT_LITERAL_PATHSPECS на &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8024445062b4bb90b2e84a4da6e0bb207f37b5f4" translate="yes" xml:space="preserve">
          <source>Treat the &amp;lt;string&amp;gt; given to &lt;code&gt;-S&lt;/code&gt; as an extended POSIX regular expression to match.</source>
          <target state="translated">Считайте &amp;lt;string&amp;gt;, заданную параметром &lt;code&gt;-S&lt;/code&gt; , как расширенное регулярное выражение POSIX, которое необходимо сопоставить.</target>
        </trans-unit>
        <trans-unit id="72315ec1092243bb561e5b4697869abb3601099e" translate="yes" xml:space="preserve">
          <source>Treat the repository as a bare repository. If GIT_DIR environment is not set, it is set to the current working directory.</source>
          <target state="translated">Считайте репозиторий &quot;голым&quot;.Если окружение GIT_DIR не установлено,оно устанавливается в текущий рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="1dad3a3b77cbf00bf58d87ee853af6d3cddb344a" translate="yes" xml:space="preserve">
          <source>Treat the revision argument as a &amp;lt;revision range&amp;gt;, even if it is just a single commit (that would normally be treated as a &amp;lt;since&amp;gt;). Note that root commits included in the specified range are always formatted as creation patches, independently of this flag.</source>
          <target state="translated">Рассматривайте аргумент ревизии как &amp;lt;диапазон ревизий&amp;gt;, даже если это всего лишь одна фиксация (которая обычно рассматривается как &amp;lt;since&amp;gt;). Обратите внимание, что корневые коммиты, включенные в указанный диапазон, всегда форматируются как исправления создания, независимо от этого флага.</target>
        </trans-unit>
        <trans-unit id="aa88eae97d6ad1936bc41000081122649aee8d74" translate="yes" xml:space="preserve">
          <source>Treats lines with the indicated type of whitespace change as unchanged for the sake of a three-way merge. Whitespace changes mixed with other changes to a line are not ignored. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;--ignore-space-at-eol&lt;/code&gt;, and &lt;code&gt;--ignore-cr-at-eol&lt;/code&gt;.</source>
          <target state="translated">Обрабатывает строки с указанным типом изменения пробелов как неизменные для трехстороннего слияния. Изменения пробелов, смешанные с другими изменениями в строке, не игнорируются. См. Также &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;-b&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;--ignore-space-at-eol&lt;/code&gt; &lt;code&gt;--ignore-cr-at-eol&lt;/code&gt; и --ignore-cr-at-eol .</target>
        </trans-unit>
        <trans-unit id="6ddd0e484558c1f8e50a8fe3c2dc7499225a9297" translate="yes" xml:space="preserve">
          <source>Tree Object</source>
          <target state="translated">Деревянный объект</target>
        </trans-unit>
        <trans-unit id="bce93b7f9d4c3064a3f582b574710500d7e5efb5" translate="yes" xml:space="preserve">
          <source>Tree and blob objects outside of &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; will be treated the same way as if they were inside &lt;code&gt;refs/tags/*&lt;/code&gt;, any update of them will be rejected.</source>
          <target state="translated">Объекты дерева и blob за пределами &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; будут обрабатываться так же, как если бы они были внутри &lt;code&gt;refs/tags/*&lt;/code&gt; , любое их обновление будет отклонено.</target>
        </trans-unit>
        <trans-unit id="faed43d5018a65bdda1021ea817b81efdd882a1f" translate="yes" xml:space="preserve">
          <source>Tree objects as well as tag objects not pointing at commits, cannot be described. When describing blobs, the lightweight tags pointing at blobs are ignored, but the blob is still described as &amp;lt;committ-ish&amp;gt;:&amp;lt;path&amp;gt; despite the lightweight tag being favorable.</source>
          <target state="translated">Объекты дерева, а также объекты тегов, не указывающие на фиксации, не могут быть описаны. При описании больших двоичных объектов легкие теги, указывающие на большие двоичные объекты, игнорируются, но этот большой двоичный объект по-прежнему описывается как &amp;lt;committ-ish&amp;gt;: &amp;lt;path&amp;gt;, несмотря на то, что облегченный тег является благоприятным.</target>
        </trans-unit>
        <trans-unit id="d94a666a1561928de12071aa36f46464acd70f54" translate="yes" xml:space="preserve">
          <source>Tree to checkout from (when paths are given). If not specified, the index will be used.</source>
          <target state="translated">Дерево,откуда нужно выписаться (когда даны пути).Если не указано,будет использоваться индекс.</target>
        </trans-unit>
        <trans-unit id="fef8232d1c67b8b3403ba454c8ae3c965dc5fb72" translate="yes" xml:space="preserve">
          <source>Trees (aka directories) use just 12 bytes of memory on top of the memory required for their entries (see &amp;ldquo;per active file&amp;rdquo; below). The cost of a tree is virtually 0, as its overhead amortizes out over the individual file entries.</source>
          <target state="translated">Деревья (также известные как каталоги) используют всего 12 байтов памяти поверх памяти, необходимой для их записей (см. &amp;laquo;На каждый активный файл&amp;raquo; ниже). Стоимость дерева практически равна нулю, поскольку накладные расходы амортизируются по сравнению с отдельными записями в файле.</target>
        </trans-unit>
        <trans-unit id="8797468d6463e4f71332170d9f50ca7fd321cc3a" translate="yes" xml:space="preserve">
          <source>Trivial merges are done by &lt;code&gt;git read-tree&lt;/code&gt; itself. Only conflicting paths will be in unmerged state when &lt;code&gt;git read-tree&lt;/code&gt; returns.</source>
          <target state="translated">Тривиальные слияния выполняются самим &lt;code&gt;git read-tree&lt;/code&gt; . Когда &lt;code&gt;git read-tree&lt;/code&gt; вернется, только конфликтующие пути будут в несоединенном состоянии .</target>
        </trans-unit>
        <trans-unit id="c14d8e783a9f521d30b73eb971eac8f82acc62a0" translate="yes" xml:space="preserve">
          <source>True merge</source>
          <target state="translated">Истинное слияние</target>
        </trans-unit>
        <trans-unit id="33a579ffc0dccbff15be01734ea4138ea4e7635c" translate="yes" xml:space="preserve">
          <source>Trust</source>
          <target state="translated">Trust</target>
        </trans-unit>
        <trans-unit id="df8a0e781552ee165e12d7086194c5f37262dc36" translate="yes" xml:space="preserve">
          <source>Try to speed up the traversal using the pack bitmap index (if one is available). Note that when traversing with &lt;code&gt;--objects&lt;/code&gt;, trees and blobs will not have their associated path printed.</source>
          <target state="translated">Попробуйте ускорить обход, используя индекс растрового изображения пакета (если он доступен). Обратите внимание, что при &lt;code&gt;--objects&lt;/code&gt; с --objects деревья и капли не будут распечатывать связанный с ними путь.</target>
        </trans-unit>
        <trans-unit id="db494399fc91d335ea933090c261cf51f7615da6" translate="yes" xml:space="preserve">
          <source>Try to update from the upstream resulted in a lot of conflicts; you were not ready to spend a lot of time merging right now, so you decide to do that later.</source>
          <target state="translated">Попытка обновления из апстрима привела к множеству конфликтов;вы не были готовы потратить много времени на слияние прямо сейчас,поэтому вы решили сделать это позже.</target>
        </trans-unit>
        <trans-unit id="3a12d2b4901990f4e580a360ff850809fe3f67b9" translate="yes" xml:space="preserve">
          <source>Turn off any previous &lt;code&gt;--filter=&lt;/code&gt; argument.</source>
          <target state="translated">Отключите любой предыдущий аргумент &lt;code&gt;--filter=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34771065d121fc03fac8d38d540e254893826329" translate="yes" xml:space="preserve">
          <source>Turn off branch colors, even when the configuration file gives the default to color output. Same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Отключите цвета ветвей, даже если в файле конфигурации задан цветной вывод по умолчанию. То же, что &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d9cbb32ce6c68e264cdb30b91e954cf183958d3" translate="yes" xml:space="preserve">
          <source>Turn off colored diff. It is the same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Отключить цветной дифференциал. Это то же самое, что и &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9b2354f095eeb41acddbf4f3d69d4ac5775813" translate="yes" xml:space="preserve">
          <source>Turn off colored diff. This can be used to override configuration settings. It is the same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Отключить цветной дифференциал. Это можно использовать для переопределения параметров конфигурации. Это то же самое, что и &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad464ef4a6c59cdcb2319e829113b9b9a0202fe" translate="yes" xml:space="preserve">
          <source>Turn off colored output, even when the configuration file gives the default to color output. Same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Отключите цветной вывод, даже если в файле конфигурации задан цветной вывод по умолчанию. То же, что &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3a997309d5fb6a6ca30f0f6201f278a284d8e1e" translate="yes" xml:space="preserve">
          <source>Turn off match highlighting, even when the configuration file gives the default to color output. Same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Отключите выделение совпадений, даже если в файле конфигурации задан цветной вывод по умолчанию. То же, что &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4fab0f230de92fdcff08739247b39013a4dcf91" translate="yes" xml:space="preserve">
          <source>Turn off move detection. This can be used to override configuration settings. It is the same as &lt;code&gt;--color-moved=no&lt;/code&gt;.</source>
          <target state="translated">Отключите обнаружение движения. Это можно использовать для переопределения параметров конфигурации. Это то же самое, что и &lt;code&gt;--color-moved=no&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0eb0b106db412297afc722cb22850ad8fd89466" translate="yes" xml:space="preserve">
          <source>Turn off rename detection, even when the configuration file gives the default to do so.</source>
          <target state="translated">Отключите определение переименования,даже если файл конфигурации дает его по умолчанию.</target>
        </trans-unit>
        <trans-unit id="4e867193eda90e02a99d5e3b2d3aff016424ee32" translate="yes" xml:space="preserve">
          <source>Turn off rename detection. This overrides the &lt;code&gt;merge.renames&lt;/code&gt; configuration variable. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--no-renames&lt;/code&gt;.</source>
          <target state="translated">Отключите обнаружение переименования. Это переопределяет переменную конфигурации &lt;code&gt;merge.renames&lt;/code&gt; . См. Также &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--no-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29eb4a9a74bb1156273caaa264fc85825c0572ef" translate="yes" xml:space="preserve">
          <source>Turn on rename detection, optionally setting the similarity threshold. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--find-renames&lt;/code&gt;.</source>
          <target state="translated">Включите обнаружение переименования, при желании задав порог схожести. См. Также &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--find-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a279dbfc86c680add56c7a5993ef6023dec20637" translate="yes" xml:space="preserve">
          <source>Turn on rename detection, optionally setting the similarity threshold. This is the default. This overrides the &lt;code&gt;merge.renames&lt;/code&gt; configuration variable. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--find-renames&lt;/code&gt;.</source>
          <target state="translated">Включите обнаружение переименования, при желании задав порог схожести. Это значение по умолчанию. Это переопределяет переменную конфигурации &lt;code&gt;merge.renames&lt;/code&gt; . См. Также &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--find-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9d077a66918e3017c929a4d5ef75e05f491a825" translate="yes" xml:space="preserve">
          <source>Turn on/off rename detection regardless of user configuration. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--no-renames&lt;/code&gt;.</source>
          <target state="translated">Включение / выключение обнаружения переименования независимо от конфигурации пользователя. См. Также &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--no-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff597cb2e8f500da1bb43f369ea55f0017801fbc" translate="yes" xml:space="preserve">
          <source>Turn progress on/off explicitly. If neither is specified, progress is shown if standard error is connected to a terminal.</source>
          <target state="translated">Включение/выключение прогресса в явном виде.Если ни один из них не указан,то прогресс отображается,если к клемме подключена стандартная ошибка.</target>
        </trans-unit>
        <trans-unit id="b63e204e5b5bb236923126ba202fed353f8079ec" translate="yes" xml:space="preserve">
          <source>Turn progress on/off explicitly. If neither is specified, progress is shown if standard error is connected to a terminal. Note that not all merge strategies may support progress reporting.</source>
          <target state="translated">Включение/выключение прогресса в явном виде.Если ни один из них не указан,то прогресс отображается,если к клемме подключена стандартная ошибка.Обратите внимание,что не все стратегии слияния могут поддерживать отображение прогресса.</target>
        </trans-unit>
        <trans-unit id="ae22b8d4ecb731b706e41a653df929373ee8e8e0" translate="yes" xml:space="preserve">
          <source>Turns off any previous &lt;code&gt;--filter=&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;--filter=&lt;/code&gt; любой предыдущий аргумент --filter = .</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="aef2d842e6b781b12f96bc62f4ab607c12e12218" translate="yes" xml:space="preserve">
          <source>Two Tree Merge</source>
          <target state="translated">Слияние двух деревьев</target>
        </trans-unit>
        <trans-unit id="6bda5442e87e811366b94ce6966009ecac6ac5dc" translate="yes" xml:space="preserve">
          <source>Two consecutive asterisks (&quot;&lt;code&gt;**&lt;/code&gt;&quot;) in patterns matched against full pathname may have special meaning:</source>
          <target state="translated">Две последовательные звездочки (&quot; &lt;code&gt;**&lt;/code&gt; &quot;) в образцах, совпадающих с полным путем, могут иметь особое значение:</target>
        </trans-unit>
        <trans-unit id="e187ca5222f2f1c9a298321896225faf75c5697a" translate="yes" xml:space="preserve">
          <source>Two consecutive asterisks (&amp;ldquo;**&amp;rdquo;) in patterns matched against full pathname may have special meaning:</source>
          <target state="translated">Две последовательные звездочки (&amp;laquo;**&amp;raquo;) в образцах, совпадающих с полным путем, могут иметь особое значение:</target>
        </trans-unit>
        <trans-unit id="fce699584c34eaef39ec9c341ad51961e194a419" translate="yes" xml:space="preserve">
          <source>Two special values are supported: &lt;code&gt;off&lt;/code&gt; will simply close the corresponding standard handle, and if &lt;code&gt;GIT_REDIRECT_STDERR&lt;/code&gt; is &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;, standard error will be redirected to the same handle as standard output.</source>
          <target state="translated">Поддерживаются два специальных значения: &lt;code&gt;off&lt;/code&gt; просто закроет соответствующий стандартный дескриптор, а если &lt;code&gt;GIT_REDIRECT_STDERR&lt;/code&gt; равен &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; , стандартная ошибка будет перенаправлена ​​на тот же дескриптор, что и стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="34a739d621f3038babff4f0f681d077135e77a75" translate="yes" xml:space="preserve">
          <source>Two things are interesting here:</source>
          <target state="translated">Две вещи здесь интересны:</target>
        </trans-unit>
        <trans-unit id="ced48512ad4d3cb13ca20b7cb1f2f8e4abd0bc9d" translate="yes" xml:space="preserve">
          <source>Tying it all together</source>
          <target state="translated">Связывая все это вместе</target>
        </trans-unit>
        <trans-unit id="3a87a5a93967e0c0facb5bdbedab0a6936494920" translate="yes" xml:space="preserve">
          <source>Type 5 is reserved for future expansion. Type 0 is invalid.</source>
          <target state="translated">Тип 5 зарезервирован для будущего расширения.Тип 0 недействителен.</target>
        </trans-unit>
        <trans-unit id="e8e8d3184972cec12ef3bd94d7eec7947cbe4b53" translate="yes" xml:space="preserve">
          <source>Typical gitweb config files will only change starting (default) time zone, and leave other elements at their default values:</source>
          <target state="translated">Типичные gitweb-конфигурационные файлы изменят только начальный (по умолчанию)часовой пояс,а остальные элементы оставят на своих значениях по умолчанию:</target>
        </trans-unit>
        <trans-unit id="3aa25a3911a2da2f000729dbc451ee040fee4a66" translate="yes" xml:space="preserve">
          <source>Typical usage is something like:</source>
          <target state="translated">Типичное использование-это что-то вроде:</target>
        </trans-unit>
        <trans-unit id="db1f5b1028dc570d4bb8caccd45a45601a38210c" translate="yes" xml:space="preserve">
          <source>Typical use of git credential</source>
          <target state="translated">Типичное использование git-аккаунта</target>
        </trans-unit>
        <trans-unit id="d63a8a509d39725ec5fc85189ba54ffbab2dd0bb" translate="yes" xml:space="preserve">
          <source>Typically it will be placed in a MUA&amp;rsquo;s drafts folder, edited to add timely commentary that should not go in the changelog after the three dashes, and then sent as a message whose body, in our example, starts with &quot;arch/arm config files were&amp;hellip;​&quot;. On the receiving end, readers can save interesting patches in a UNIX mailbox and apply them with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">Как правило, он будет помещен в папку черновиков MUA, отредактирован для добавления своевременного комментария, который не должен попадать в журнал изменений после трех тире, а затем отправлен в виде сообщения, тело которого в нашем примере начинается с &quot;файлы конфигурации arch / arm были ...&amp;raquo;. На принимающей стороне читатели могут сохранять интересные патчи в почтовом ящике UNIX и применять их с помощью &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b51965ce078cc4b0d9ecb0a1b113a383a8700dc" translate="yes" xml:space="preserve">
          <source>Typically such a variable may look like this:</source>
          <target state="translated">Обычно такая переменная может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="9f47be9cc1e7fcec80fcc7e52dcbd486a27d2ee2" translate="yes" xml:space="preserve">
          <source>Typically this is run with a script calling Git&amp;rsquo;s imitation of the &lt;code&gt;merge&lt;/code&gt; command from the RCS package.</source>
          <target state="translated">Обычно это запускается с помощью сценария, вызывающего Git-имитацию команды &lt;code&gt;merge&lt;/code&gt; из пакета RCS.</target>
        </trans-unit>
        <trans-unit id="e4333d902cedfd0d4739277fdec621b3f9f09422" translate="yes" xml:space="preserve">
          <source>Typically this matches the real type of &amp;lt;object&amp;gt; but asking for a type that can trivially be dereferenced from the given &amp;lt;object&amp;gt; is also permitted. An example is to ask for a &quot;tree&quot; with &amp;lt;object&amp;gt; being a commit object that contains it, or to ask for a &quot;blob&quot; with &amp;lt;object&amp;gt; being a tag object that points at it.</source>
          <target state="translated">Обычно это соответствует реальному типу &amp;lt;object&amp;gt;, но также разрешается запрос типа, который можно тривиально разыменовать из данного &amp;lt;object&amp;gt;. Например, запросить &amp;laquo;дерево&amp;raquo;, где &amp;lt;object&amp;gt; является объектом фиксации, который его содержит, или запросить &amp;laquo;blob&amp;raquo; с &amp;lt;object&amp;gt;, являющимся объектом тега, который указывает на него.</target>
        </trans-unit>
        <trans-unit id="6b016c5601edd059fd8dc12bb8d8426b6525fff2" translate="yes" xml:space="preserve">
          <source>Typically you would first remove all tracked files from the working tree using this command:</source>
          <target state="translated">Обычно вы сначала удаляете все отслеживаемые файлы из рабочего дерева с помощью этой команды:</target>
        </trans-unit>
        <trans-unit id="3a2ee6ee14f11a86e1818d26c21e9493d38718f1" translate="yes" xml:space="preserve">
          <source>Typically, parallel recursive and multi-remote fetches will be faster. By default fetches are performed sequentially, not in parallel.</source>
          <target state="translated">Обычно параллельные рекурсивные и многоотраслевые сборки выполняются быстрее.По умолчанию сборки выполняются последовательно,а не параллельно.</target>
        </trans-unit>
        <trans-unit id="94e92e77c127b9c8a314ec2c48c4916e008c6404" translate="yes" xml:space="preserve">
          <source>Typically, this is invoked as &lt;code&gt;git read-tree -m $H $M&lt;/code&gt;, where $H is the head commit of the current repository, and $M is the head of a foreign tree, which is simply ahead of $H (i.e. we are in a fast-forward situation).</source>
          <target state="translated">Обычно это вызывается как &lt;code&gt;git read-tree -m $H $M&lt;/code&gt; , где $ H - это начальная фиксация текущего репозитория, а $ M - начальная часть стороннего дерева, которое просто опережает $ H (т. Е. Мы находятся в режиме перемотки вперед).</target>
        </trans-unit>
        <trans-unit id="0ada5827188094ef6e82c28e45e078ca96f54ca4" translate="yes" xml:space="preserve">
          <source>U: file is unmerged (you must complete the merge before it can be committed)</source>
          <target state="translated">U:файл распакован (вы должны завершить слияние,прежде чем его можно будет зафиксировать).</target>
        </trans-unit>
        <trans-unit id="1a7a0d0dd35212ae4c8c4c873315c6e7e9351f3b" translate="yes" xml:space="preserve">
          <source>URI and label (title) for the Git logo link (or your site logo, if you chose to use different logo image). By default, these both refer to Git homepage, &lt;a href=&quot;https://git-scm.com&quot;&gt;https://git-scm.com&lt;/a&gt;; in the past, they pointed to Git documentation at &lt;a href=&quot;https://www.kernel.org&quot;&gt;https://www.kernel.org&lt;/a&gt;.</source>
          <target state="translated">URI и метка (заголовок) для ссылки на логотип Git (или логотипа вашего сайта, если вы решили использовать другое изображение логотипа). По умолчанию они оба относятся к домашней &lt;a href=&quot;https://git-scm.com&quot;&gt;странице&lt;/a&gt; Git, https://git-scm.com ; в прошлом они указывали на документацию Git по адресу &lt;a href=&quot;https://www.kernel.org&quot;&gt;https://www.kernel.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8561702ffd22bbb5ccd1a81c9c8d8cc77f16fa7e" translate="yes" xml:space="preserve">
          <source>Un-sets the previously set type specifier (if one was previously set). This option requests that &lt;code&gt;git config&lt;/code&gt; not canonicalize the retrieved variable. &lt;code&gt;--no-type&lt;/code&gt; has no effect without &lt;code&gt;--type=&amp;lt;type&amp;gt;&lt;/code&gt; or &lt;code&gt;--&amp;lt;type&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Сбрасывает ранее установленный спецификатор типа (если он был ранее установлен). Этот параметр требует, чтобы &lt;code&gt;git config&lt;/code&gt; не канонизировал полученную переменную. &lt;code&gt;--no-type&lt;/code&gt; не действует без &lt;code&gt;--type=&amp;lt;type&amp;gt;&lt;/code&gt; или &lt;code&gt;--&amp;lt;type&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="911839695653d988872929c95814b8902e300040" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;--pretty=oneline&lt;/code&gt;, the commit message is prefixed with this information on the same line. This option cannot be combined with &lt;code&gt;--reverse&lt;/code&gt;. See also &lt;a href=&quot;git-reflog&quot;&gt;git-reflog[1]&lt;/a&gt;.</source>
          <target state="translated">Под &lt;code&gt;--pretty=oneline&lt;/code&gt; сообщение фиксации предваряется этой информацией в той же строке. Этот параметр нельзя комбинировать с &lt;code&gt;--reverse&lt;/code&gt; . См. Также &lt;a href=&quot;git-reflog&quot;&gt;git-reflog [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64ba59969ba5a36d002d9a189101c624fcf7d3cc" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;--pretty=reference&lt;/code&gt;, this information will not be shown at all.</source>
          <target state="translated">В разделе &lt;code&gt;--pretty=reference&lt;/code&gt; эта информация не будет отображаться вообще.</target>
        </trans-unit>
        <trans-unit id="c73a6e04cc57ad10ee4ae7284f559a5ae2a53d36" translate="yes" xml:space="preserve">
          <source>Under certain circumstances, some versions of &lt;code&gt;diff&lt;/code&gt; do not correctly detect a missing new-line at the end of the file. As a result, patches created by such &lt;code&gt;diff&lt;/code&gt; programs do not record incomplete lines correctly. This option adds support for applying such patches by working around this bug.</source>
          <target state="translated">При определенных обстоятельствах некоторые версии &lt;code&gt;diff&lt;/code&gt; неправильно обнаруживают отсутствующую новую строку в конце файла. В результате патчи, созданные такими программами &lt;code&gt;diff&lt;/code&gt; неправильно записывают неполные строки. Этот параметр добавляет поддержку для применения таких исправлений путем обхода этой ошибки.</target>
        </trans-unit>
        <trans-unit id="67a27dbf5548d05ac63e85bd8b4c875d8f48c102" translate="yes" xml:space="preserve">
          <source>Understanding History: Commits</source>
          <target state="translated">Понимание истории:Комментарии</target>
        </trans-unit>
        <trans-unit id="9334dba95d5dfb2042093dd9adbddea5f77c5eb4" translate="yes" xml:space="preserve">
          <source>Understanding history: History diagrams</source>
          <target state="translated">Понимаю историю:Исторические диаграммы</target>
        </trans-unit>
        <trans-unit id="85bd1a7ea75afef7e0417cd2bf9d9f3cf13e5e08" translate="yes" xml:space="preserve">
          <source>Understanding history: What is a branch?</source>
          <target state="translated">Понимаю историю:Что такое филиал?</target>
        </trans-unit>
        <trans-unit id="6d61d96a492f996316f1e84e66cbfde933315e2c" translate="yes" xml:space="preserve">
          <source>Understanding history: commits, parents, and reachability</source>
          <target state="translated">Понимание истории:обязательства,родители и достижимость.</target>
        </trans-unit>
        <trans-unit id="afa47a28efb9d6631a7be02ac359bed5256995ce" translate="yes" xml:space="preserve">
          <source>Undo a commit and redo</source>
          <target state="translated">Отменить обязательство и переделать</target>
        </trans-unit>
        <trans-unit id="61cb90c052dfcd0fda883c6029d1d0fc0a0f4685" translate="yes" xml:space="preserve">
          <source>Undo a commit, making it a topic branch</source>
          <target state="translated">Отменить коммит,сделав его тематической ветвью.</target>
        </trans-unit>
        <trans-unit id="93d74feb000c815128d68a09c83733db43b69c15" translate="yes" xml:space="preserve">
          <source>Undo a merge or pull</source>
          <target state="translated">Отменить слияние или вытягивание</target>
        </trans-unit>
        <trans-unit id="4728c70cd06347b5f285fb3e7887387303b3968e" translate="yes" xml:space="preserve">
          <source>Undo a merge or pull inside a dirty working tree</source>
          <target state="translated">Отмените слияние или втяните в грязное рабочее дерево.</target>
        </trans-unit>
        <trans-unit id="27b7abb5b90b7a2e8f00eaf74b6df8323ba7d926" translate="yes" xml:space="preserve">
          <source>Undo add</source>
          <target state="translated">Отменить добавление</target>
        </trans-unit>
        <trans-unit id="ca677a11d37ffdca5231911a194cc2fcdffc5a26" translate="yes" xml:space="preserve">
          <source>Undo commits permanently</source>
          <target state="translated">Отменить обязательства навсегда</target>
        </trans-unit>
        <trans-unit id="4180759bca2f04cde0ec69611cb0e0ec1cfe7139" translate="yes" xml:space="preserve">
          <source>Undoes the effects of &lt;code&gt;fetch&lt;/code&gt; back to the specified revision. This allows you to re-&lt;code&gt;fetch&lt;/code&gt; an SVN revision. Normally the contents of an SVN revision should never change and &lt;code&gt;reset&lt;/code&gt; should not be necessary. However, if SVN permissions change, or if you alter your --ignore-paths option, a &lt;code&gt;fetch&lt;/code&gt; may fail with &quot;not found in commit&quot; (file not previously visible) or &quot;checksum mismatch&quot; (missed a modification). If the problem file cannot be ignored forever (with --ignore-paths) the only way to repair the repo is to use &lt;code&gt;reset&lt;/code&gt;.</source>
          <target state="translated">Отменяет эффекты &lt;code&gt;fetch&lt;/code&gt; обратно в указанной версии. Это позволяет вам повторно &lt;code&gt;fetch&lt;/code&gt; версию SVN. Обычно содержимое ревизии SVN никогда не должно изменяться, и &lt;code&gt;reset&lt;/code&gt; не требуется. Однако при изменении разрешений SVN или при изменении параметра --ignore-paths &lt;code&gt;fetch&lt;/code&gt; может завершиться ошибкой с сообщением &amp;laquo;не найден в фиксации&amp;raquo; (файл ранее не был виден) или &amp;laquo;несоответствие контрольной суммы&amp;raquo; (изменение пропущено). Если проблемный файл нельзя игнорировать навсегда (с --ignore-paths), единственный способ восстановить репо - использовать &lt;code&gt;reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1f58f831611819b4114b80dd55e3ce540d5b23" translate="yes" xml:space="preserve">
          <source>Undoing a merge</source>
          <target state="translated">Отмена слияния</target>
        </trans-unit>
        <trans-unit id="f552d5a5802e3df6273c784214def9840b82f594" translate="yes" xml:space="preserve">
          <source>Unfortunately this system becomes inefficient once a project has a lot of objects. Try this on an old project:</source>
          <target state="translated">К сожалению,эта система становится неэффективной,когда в проекте много объектов.Попробуйте это на старом проекте:</target>
        </trans-unit>
        <trans-unit id="c7deb06b3e42a38e2b00598939aa39f8d24897bd" translate="yes" xml:space="preserve">
          <source>Unfortunately, the desired effect of cleaning up text files with mixed line endings and the undesired effect of corrupting binary files cannot be distinguished. In both cases CRLFs are removed in an irreversible way. For text files this is the right thing to do because CRLFs are line endings, while for binary files converting CRLFs corrupts data.</source>
          <target state="translated">К сожалению,желаемый эффект очистки текстовых файлов со смешанными окончаниями строк и нежелательный эффект порчи бинарных файлов невозможно разглядеть.В обоих случаях CRLF-файлы удаляются необратимым образом.Для текстовых файлов это правильно,так как CRLF являются окончаниями строк,в то время как для двоичных файлов,преобразующих CRLF,повреждаются данные.</target>
        </trans-unit>
        <trans-unit id="6da1ce58d3a6c34c76807dc44593d7cd8c6563b6" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;--text&lt;/code&gt; is supplied patches of binary files without a textconv filter will be ignored.</source>
          <target state="translated">Если не &lt;code&gt;--text&lt;/code&gt; исправления двоичных файлов без фильтра textconv будут игнорироваться.</target>
        </trans-unit>
        <trans-unit id="54cbf98b314812a07f65f95ae77e8608ddf0b26f" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;-f&lt;/code&gt; is given, the &lt;code&gt;replace&lt;/code&gt; reference must not yet exist.</source>
          <target state="translated">Если не указан параметр &lt;code&gt;-f&lt;/code&gt; , ссылка на &lt;code&gt;replace&lt;/code&gt; еще не должна существовать.</target>
        </trans-unit>
        <trans-unit id="ec0a9816e3fe8947b4bfff6f5914c3288bed6fc9" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;-f&lt;/code&gt; is given, the named tag must not yet exist.</source>
          <target state="translated">Если не указан параметр &lt;code&gt;-f&lt;/code&gt; , именованный тег еще не должен существовать.</target>
        </trans-unit>
        <trans-unit id="7824ccb45f3d7be1fd07def25712792fbdf3f009" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;git blame&lt;/code&gt; and &lt;code&gt;git annotate&lt;/code&gt; in older versions of git, the extent of the annotation can be limited to both line ranges and revision ranges. The &lt;code&gt;-L&lt;/code&gt; option, which limits annotation to a range of lines, may be specified multiple times.</source>
          <target state="translated">В отличие от &lt;code&gt;git blame&lt;/code&gt; и &lt;code&gt;git annotate&lt;/code&gt; в более старых версиях git, размер аннотации может быть ограничен как диапазонами строк, так и диапазонами ревизий. Параметр &lt;code&gt;-L&lt;/code&gt; , ограничивающий аннотацию диапазоном строк, можно указывать несколько раз.</target>
        </trans-unit>
        <trans-unit id="1fa5e3a4c28161d2ef67ee80d5624341cfa56be1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;git diff-files&lt;/code&gt;, which showed the difference between the index file and the working tree, &lt;code&gt;git diff-index&lt;/code&gt; shows the differences between a committed &lt;strong&gt;tree&lt;/strong&gt; and either the index file or the working tree. In other words, &lt;code&gt;git diff-index&lt;/code&gt; wants a tree to be diffed against, and before we did the commit, we couldn&amp;rsquo;t do that, because we didn&amp;rsquo;t have anything to diff against.</source>
          <target state="translated">В отличие от &lt;code&gt;git diff-files&lt;/code&gt; , который показал разницу между индексным файлом и рабочим деревом, &lt;code&gt;git diff-index&lt;/code&gt; показывает различия между зафиксированным &lt;strong&gt;деревом&lt;/strong&gt; и либо индексным файлом, либо рабочим деревом. Другими словами, &lt;code&gt;git diff-index&lt;/code&gt; хочет, чтобы дерево сравнивалось, и до того, как мы сделали фиксацию, мы не могли этого сделать, потому что нам не с чем было сравнивать.</target>
        </trans-unit>
        <trans-unit id="a75073ebd9356a7219cb30b4bb866c17ce8b906c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;gitk&lt;/code&gt;, &lt;code&gt;git gui&lt;/code&gt; focuses on commit generation and single file annotation and does not show project history. It does however supply menu actions to start a &lt;code&gt;gitk&lt;/code&gt; session from within &lt;code&gt;git gui&lt;/code&gt;.</source>
          <target state="translated">В отличие от &lt;code&gt;gitk&lt;/code&gt; , &lt;code&gt;git gui&lt;/code&gt; фокусируется на генерации коммитов и аннотации одного файла и не показывает историю проекта. Однако он предоставляет действия меню для запуска сеанса &lt;code&gt;gitk&lt;/code&gt; из &lt;code&gt;git gui&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd17281830ac5a9aa50c0d768481eabf04240182" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;raw&lt;/code&gt; format above, the time zone/UTC offset information contained in an RFC 2822 date string is used to adjust the date value to UTC prior to storage. Therefore it is important that this information be as accurate as possible.</source>
          <target state="translated">В отличие от &lt;code&gt;raw&lt;/code&gt; формата, приведенного выше, информация о смещении часового пояса / UTC, содержащаяся в строке даты RFC 2822, используется для корректировки значения даты на UTC до сохранения. Поэтому важно, чтобы эта информация была как можно более точной.</target>
        </trans-unit>
        <trans-unit id="422977ffd462a03a6cbce65db58b07001eb2214f" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;rfc2822&lt;/code&gt; format, this format is very strict. Any variation in formatting will cause fast-import to reject the value.</source>
          <target state="translated">В отличие от формата &lt;code&gt;rfc2822&lt;/code&gt; , этот формат очень строгий. Любое изменение форматирования приведет к тому, что быстрый импорт отклонит значение.</target>
        </trans-unit>
        <trans-unit id="a5e8af576412d2facd9f39a0996da0da165c42ee" translate="yes" xml:space="preserve">
          <source>Unlike the Porcelain format, the filename information is always given and terminates the entry:</source>
          <target state="translated">В отличие от формата &quot;Фарфор&quot;,информация об имени файла всегда указывается и завершает запись:</target>
        </trans-unit>
        <trans-unit id="b603b31236d9df1a4442c23c62ea6317f2525837" translate="yes" xml:space="preserve">
          <source>Unlike the longhand form, when Alice fetches from Bob using a remote repository shorthand set up with &lt;code&gt;git remote&lt;/code&gt;, what was fetched is stored in a remote-tracking branch, in this case &lt;code&gt;bob/master&lt;/code&gt;. So after this:</source>
          <target state="translated">В отличие от полной формы, когда Алиса получает данные от Боба, используя сокращенную запись удаленного репозитория, настроенную с помощью &lt;code&gt;git remote&lt;/code&gt; , то, что было получено, сохраняется в ветке удаленного отслеживания, в данном случае &lt;code&gt;bob/master&lt;/code&gt; . Итак, после этого:</target>
        </trans-unit>
        <trans-unit id="cc8e9909209a90f3a790bc3005980e8527de79e5" translate="yes" xml:space="preserve">
          <source>Unlike the traditional &lt;code&gt;unified&lt;/code&gt; diff format, which shows two files A and B with a single column that has &lt;code&gt;-&lt;/code&gt; (minus &amp;mdash; appears in A but removed in B), &lt;code&gt;+&lt;/code&gt; (plus &amp;mdash; missing in A but added to B), or &lt;code&gt;&quot; &quot;&lt;/code&gt; (space &amp;mdash; unchanged) prefix, this format compares two or more files file1, file2,&amp;hellip;​ with one file X, and shows how X differs from each of fileN. One column for each of fileN is prepended to the output line to note how X&amp;rsquo;s line is different from it.</source>
          <target state="translated">В отличие от традиционного &lt;code&gt;unified&lt;/code&gt; формата сравнения, который показывает два файла A и B с одним столбцом, в котором есть &lt;code&gt;-&lt;/code&gt; (минус - отображается в A, но удален в B), &lt;code&gt;+&lt;/code&gt; (плюс - отсутствует в A, но добавлен к B) или &lt;code&gt;&quot; &quot;&lt;/code&gt; ( пробел - без изменений), этот формат сравнивает два или более файла file1, file2,&amp;hellip; с одним файлом X и показывает, чем X отличается от каждого из fileN. По одному столбцу для каждого из fileN добавляется к строке вывода, чтобы отметить, чем строка X отличается от нее.</target>
        </trans-unit>
        <trans-unit id="71233552f2a4fc77054593fac1f6899dd0308229" translate="yes" xml:space="preserve">
          <source>Unlike variables like &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;core.editor&lt;/code&gt; the &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; variables will not fall back on the &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; configuration if they aren&amp;rsquo;t set. To uniformly configure the same fsck settings in different circumstances all three of them they must all set to the same values.</source>
          <target state="translated">В отличие от таких переменных , как &lt;code&gt;color.ui&lt;/code&gt; и &lt;code&gt;core.editor&lt;/code&gt; &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; и &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; переменные не будут падать обратно на &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; конфигурации , если они не являются устанавливать. Чтобы единообразно настроить одни и те же параметры fsck в различных обстоятельствах, все три из них должны иметь одинаковые значения.</target>
        </trans-unit>
        <trans-unit id="00ee5ed7b48c819f6f323dbe1b9a72aef5a0c864" translate="yes" xml:space="preserve">
          <source>Unlike variables like &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;core.editor&lt;/code&gt; the &lt;code&gt;receive.fsck.skipList&lt;/code&gt; and &lt;code&gt;fetch.fsck.skipList&lt;/code&gt; variables will not fall back on the &lt;code&gt;fsck.skipList&lt;/code&gt; configuration if they aren&amp;rsquo;t set. To uniformly configure the same fsck settings in different circumstances all three of them they must all set to the same values.</source>
          <target state="translated">В отличие от таких переменных , как &lt;code&gt;color.ui&lt;/code&gt; и &lt;code&gt;core.editor&lt;/code&gt; &lt;code&gt;receive.fsck.skipList&lt;/code&gt; и &lt;code&gt;fetch.fsck.skipList&lt;/code&gt; переменные не будут падать обратно на &lt;code&gt;fsck.skipList&lt;/code&gt; конфигурации , если они не установлены. Чтобы единообразно настроить одни и те же параметры fsck в различных обстоятельствах, все три из них должны иметь одинаковые значения.</target>
        </trans-unit>
        <trans-unit id="8a3dffb4c65d7a1f27e907ef2a919885d1125ac9" translate="yes" xml:space="preserve">
          <source>Unlike when pushing with &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;, any updates outside of &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; will be accepted without &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;), whether that&amp;rsquo;s swapping e.g. a tree object for a blob, or a commit for another commit that&amp;rsquo;s doesn&amp;rsquo;t have the previous commit as an ancestor etc.</source>
          <target state="translated">В отличие при нажатии с &lt;a href=&quot;git-push&quot;&gt;GIT-толчком [1]&lt;/a&gt; , любые обновления за пределами от &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; будут приняты без &lt;code&gt;+&lt;/code&gt; в refspec (или &lt;code&gt;--force&lt;/code&gt; ), независимо от того , что это поменяв , например , объект дерева для сгустка, или коммит для другого коммита, у которого нет предыдущего коммита в качестве предка и т. д.</target>
        </trans-unit>
        <trans-unit id="2f2516ccb262ba2dda1eeb5218e911868837ce78" translate="yes" xml:space="preserve">
          <source>Unlike when pushing with &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;, there is no configuration which&amp;rsquo;ll amend these rules, and nothing like a &lt;code&gt;pre-fetch&lt;/code&gt; hook analogous to the &lt;code&gt;pre-receive&lt;/code&gt; hook.</source>
          <target state="translated">В отличие от отправки с помощью &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; , здесь нет конфигурации, которая изменяет эти правила, и нет ничего похожего на ловушку &lt;code&gt;pre-fetch&lt;/code&gt; аналогичную ловушке &lt;code&gt;pre-receive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb79f423670171900d7e94880e8d45907e9f995c" translate="yes" xml:space="preserve">
          <source>Unlock a working tree, allowing it to be pruned, moved or deleted.</source>
          <target state="translated">Разблокировка рабочего дерева,позволяющая обрезать,перемещать или удалять его.</target>
        </trans-unit>
        <trans-unit id="b00eee8b49227caba98e5d68033660ff6076ebcc" translate="yes" xml:space="preserve">
          <source>Unmerged entries have the following format; the first character is a &quot;u&quot; to distinguish from ordinary changed entries.</source>
          <target state="translated">Незаполненные записи имеют следующий формат;первый символ-&quot;u&quot;,чтобы отличить их от обычных измененных записей.</target>
        </trans-unit>
        <trans-unit id="2c99cc569343579b221cd64026ecc62bb1c21d7b" translate="yes" xml:space="preserve">
          <source>Unpack objects from a packed archive</source>
          <target state="translated">Распаковать объекты из упакованного архива</target>
        </trans-unit>
        <trans-unit id="42e2a268d032a6abb00d4cbd80feaa1ecd7a75d6" translate="yes" xml:space="preserve">
          <source>Unreachable tags, commits, and trees will also be accessed to find the tips of dangling segments of history. Use &lt;code&gt;--no-dangling&lt;/code&gt; if you don&amp;rsquo;t care about this output and want to speed it up further.</source>
          <target state="translated">Недостижимые теги, коммиты и деревья также будут доступны для поиска подсказок висящих сегментов истории. Используйте &lt;code&gt;--no-dangling&lt;/code&gt; , если вас не волнует этот вывод и вы хотите его еще больше ускорить.</target>
        </trans-unit>
        <trans-unit id="d8a4efd1d470fc3c5ede97084c82a35b9804122a" translate="yes" xml:space="preserve">
          <source>Unregister the given submodules, i.e. remove the whole &lt;code&gt;submodule.$name&lt;/code&gt; section from .git/config together with their work tree. Further calls to &lt;code&gt;git submodule update&lt;/code&gt;, &lt;code&gt;git submodule foreach&lt;/code&gt; and &lt;code&gt;git submodule sync&lt;/code&gt; will skip any unregistered submodules until they are initialized again, so use this command if you don&amp;rsquo;t want to have a local checkout of the submodule in your working tree anymore.</source>
          <target state="translated">Отмените регистрацию данных подмодулей, т.е. удалите весь раздел submodule &lt;code&gt;submodule.$name&lt;/code&gt; Name из .git / config вместе с их рабочим деревом. Дальнейшие вызовы &lt;code&gt;git submodule update&lt;/code&gt; , &lt;code&gt;git submodule foreach&lt;/code&gt; и &lt;code&gt;git submodule sync&lt;/code&gt; будут пропускать любые незарегистрированные подмодули, пока они не будут снова инициализированы, поэтому используйте эту команду, если вы больше не хотите иметь локальную проверку подмодуля в вашем рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="1431f68f359f8699975be39dca08302c67d68d9e" translate="yes" xml:space="preserve">
          <source>Unset</source>
          <target state="translated">Unset</target>
        </trans-unit>
        <trans-unit id="8ff954e80b42b18d3d0fcda602d94db1e46da2d4" translate="yes" xml:space="preserve">
          <source>Unsetting the &lt;code&gt;text&lt;/code&gt; attribute on a path tells Git not to attempt any end-of-line conversion upon checkin or checkout.</source>
          <target state="translated">Снятие атрибута &lt;code&gt;text&lt;/code&gt; на пути указывает Git не предпринимать попытки преобразования конца строки при возврате или оформлении заказа.</target>
        </trans-unit>
        <trans-unit id="7f84947907454dd0cb412d2a8e5d5e3b9c2382f0" translate="yes" xml:space="preserve">
          <source>Unsetting the variable, or setting it to empty, &quot;0&quot; or &quot;false&quot; (case insensitive) disables trace messages.</source>
          <target state="translated">Снятие переменной или установка ее в пустую,&quot;0&quot; или &quot;ложь&quot; (нечувствительная к регистру)отключает сообщения о трассировке.</target>
        </trans-unit>
        <trans-unit id="c176eff9c64fa28a4b6af1aa296cc1394bbf7a80" translate="yes" xml:space="preserve">
          <source>Unshelve</source>
          <target state="translated">Unshelve</target>
        </trans-unit>
        <trans-unit id="9fde2b36ff30053ad23e6a695929873244cc0367" translate="yes" xml:space="preserve">
          <source>Unshelve options</source>
          <target state="translated">нестандартные варианты</target>
        </trans-unit>
        <trans-unit id="004e593b6690fb3d48f4f5a86eac1cd13b5b2234" translate="yes" xml:space="preserve">
          <source>Unshelving will take a shelved P4 changelist, and produce the equivalent git commit in the branch refs/remotes/p4-unshelved/&amp;lt;changelist&amp;gt;.</source>
          <target state="translated">При снятии с полки будет создан отложенный на полку список изменений P4, а в ветке refs / remotes / p4-unshelved / &amp;lt;changelist&amp;gt; будет создан эквивалентный коммит git.</target>
        </trans-unit>
        <trans-unit id="a6e7eb706e115cdaf88206be37eb67b232d007bc" translate="yes" xml:space="preserve">
          <source>Unspecified</source>
          <target state="translated">Unspecified</target>
        </trans-unit>
        <trans-unit id="78f88266b367e8b6e086054e91f1ebc89e168d16" translate="yes" xml:space="preserve">
          <source>Until Git version 2.20, and unlike when pushing with &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;, any updates to &lt;code&gt;refs/tags/*&lt;/code&gt; would be accepted without &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;). When fetching, we promiscuously considered all tag updates from a remote to be forced fetches. Since Git version 2.20, fetching to update &lt;code&gt;refs/tags/*&lt;/code&gt; works the same way as when pushing. I.e. any updates will be rejected without &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;).</source>
          <target state="translated">До Git версии 2.20, и в отличие от при нажатии с &lt;a href=&quot;git-push&quot;&gt;GIT-толчка [1]&lt;/a&gt; , любые обновления &lt;code&gt;refs/tags/*&lt;/code&gt; будет принят без &lt;code&gt;+&lt;/code&gt; в refspec (или &lt;code&gt;--force&lt;/code&gt; ). При выборке мы случайно считали все обновления тегов с удаленного устройства принудительной выборкой. Начиная с версии Git 2.20 выборка для обновления &lt;code&gt;refs/tags/*&lt;/code&gt; работает так же, как и при нажатии. Т.е. любые обновления будут отклонены без &lt;code&gt;+&lt;/code&gt; в refspec (или &lt;code&gt;--force&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9514c500d61430538679eec9081979b274172cf9" translate="yes" xml:space="preserve">
          <source>Untracked cache</source>
          <target state="translated">неотслеживаемый кэш</target>
        </trans-unit>
        <trans-unit id="614ce4ff1bf92552970ab54ff766006d0da693f9" translate="yes" xml:space="preserve">
          <source>Untracked items have the following format:</source>
          <target state="translated">Неотслеживаемые элементы имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="1eade895e693b4111455eda06a87af1097cf4d6c" translate="yes" xml:space="preserve">
          <source>Untyped &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt;, e.g. the contents of a file.</source>
          <target state="translated">Нетипизированный &lt;a href=&quot;#def_object&quot;&gt;объект&lt;/a&gt; , например, содержимое файла.</target>
        </trans-unit>
        <trans-unit id="7b839a219907b09268c047c522a03961e96bd78b" translate="yes" xml:space="preserve">
          <source>Unused configuration variable. Used in Git versions 2.20 and 2.21 as an escape hatch to enable the legacy shellscript implementation of rebase. Now the built-in rewrite of it in C is always used. Setting this will emit a warning, to alert any remaining users that setting this now does nothing.</source>
          <target state="translated">Неиспользуемая конфигурационная переменная.Используется в Git'е версий 2.20 и 2.21 в качестве экранирующего люка для включения реализации rebase по устаревшим shellscript'ам.Теперь всегда используется встроенная перезапись на C.Установка этой переменной будет выдавать предупреждение,чтобы предупредить всех оставшихся пользователей,что установка этой переменной ничего не делает.</target>
        </trans-unit>
        <trans-unit id="ca31b4c795dcb03444e6d0c037dbcd47081c70a9" translate="yes" xml:space="preserve">
          <source>Update affected files from CVS repository before attempting export.</source>
          <target state="translated">Обновите поврежденные файлы из CVS репозитория перед попыткой экспорта.</target>
        </trans-unit>
        <trans-unit id="82e59b151c004802a1fa23ba3e75a68d14df0e2a" translate="yes" xml:space="preserve">
          <source>Update an existing shelved changelist with this commit. Implies --shelve. Repeat for multiple shelved changelists.</source>
          <target state="translated">Обновите существующий полочный список сменщиков с помощью этого коммита.Подразумевает-полку.Повторите для нескольких полочных сменщиков.</target>
        </trans-unit>
        <trans-unit id="5433caf2e572561b5bb38ff5e69b0263d08b90aa" translate="yes" xml:space="preserve">
          <source>Update and examine branches from the repository you cloned from:</source>
          <target state="translated">Обновляйте и исследуйте ветки из репозитория,из которого вы клонировали:</target>
        </trans-unit>
        <trans-unit id="381f15e94e347f076ef71f417ee29b782a6dcc4d" translate="yes" xml:space="preserve">
          <source>Update auxiliary info file to help dumb servers</source>
          <target state="translated">Обновить вспомогательный информационный файл для помощи немым серверам</target>
        </trans-unit>
        <trans-unit id="d94aecddb1a2d3c03afb4a7cf4e1bb3a0123c2c6" translate="yes" xml:space="preserve">
          <source>Update hook</source>
          <target state="translated">Крючок для обновления</target>
        </trans-unit>
        <trans-unit id="e5f960e3f28d7d7ea59f8750682a356ae18535be" translate="yes" xml:space="preserve">
          <source>Update remote refs along with associated objects</source>
          <target state="translated">Обновление удаленных ссылок вместе с соответствующими объектами</target>
        </trans-unit>
        <trans-unit id="ee3315ea0cbb49ab6105a89db0964480184c3ce9" translate="yes" xml:space="preserve">
          <source>Update the Git repository with recent changes from p4, rebasing your work on top:</source>
          <target state="translated">Обновите Git-репозиторий последними изменениями из p4,переделав вашу работу сверху:</target>
        </trans-unit>
        <trans-unit id="5937294218e2d7b95b7b77414b52c326239ca8d5" translate="yes" xml:space="preserve">
          <source>Update the index by adding new files that are unknown to the index and files modified in the working tree, but ignore files that have been removed from the working tree. This option is a no-op when no &amp;lt;pathspec&amp;gt; is used.</source>
          <target state="translated">Обновите индекс, добавляя новые файлы, которые неизвестны индексу, и файлы, измененные в рабочем дереве, но игнорируйте файлы, которые были удалены из рабочего дерева. Эта опция не работает, когда не используется &amp;lt;pathspec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="94df66721f1bfd4990972c3f5f4a0d6b61f59f9e" translate="yes" xml:space="preserve">
          <source>Update the index just where it already has an entry matching &amp;lt;pathspec&amp;gt;. This removes as well as modifies index entries to match the working tree, but adds no new files.</source>
          <target state="translated">Обновите индекс там, где уже есть запись, соответствующая &amp;lt;pathspec&amp;gt;. Это удаляет, а также изменяет записи индекса в соответствии с рабочим деревом, но не добавляет новых файлов.</target>
        </trans-unit>
        <trans-unit id="03d173e098621e3730258998672da85e88b347b1" translate="yes" xml:space="preserve">
          <source>Update the index not only where the working tree has a file matching &amp;lt;pathspec&amp;gt; but also where the index already has an entry. This adds, modifies, and removes index entries to match the working tree.</source>
          <target state="translated">Обновите индекс не только там, где в рабочем дереве есть файл, соответствующий &amp;lt;pathspec&amp;gt;, но и там, где в индексе уже есть запись. Это добавляет, изменяет и удаляет записи индекса в соответствии с рабочим деревом.</target>
        </trans-unit>
        <trans-unit id="1a6e291eaaa3e731de98429f7fb37fdac90f0a22" translate="yes" xml:space="preserve">
          <source>Update the object name stored in a ref safely</source>
          <target state="translated">Обновите имя объекта,сохраненное в справочнике,безопасно.</target>
        </trans-unit>
        <trans-unit id="00f0c8a1eac4ed2966a7d563ef87a6387d365dcf" translate="yes" xml:space="preserve">
          <source>Update the origin repository&amp;rsquo;s master branch with the dev branch, allowing non-fast-forward updates. &lt;strong&gt;This can leave unreferenced commits dangling in the origin repository.&lt;/strong&gt; Consider the following situation, where a fast-forward is not possible:</source>
          <target state="translated">Обновите главную ветку исходного репозитория веткой dev, разрешив обновления без быстрой перемотки вперед. &lt;strong&gt;Это может привести к тому, что коммиты, на которые нет ссылок, останутся в исходном репозитории. &lt;/strong&gt;Рассмотрим следующую ситуацию, когда перемотка вперед невозможна:</target>
        </trans-unit>
        <trans-unit id="b73d3968359117cfd051c2e81a709d1d9e1579b7" translate="yes" xml:space="preserve">
          <source>Update the reference to the value of the top reflog entry (i.e. &amp;lt;ref&amp;gt;@{0}) if the previous top entry was pruned. (This option is ignored for symbolic references.)</source>
          <target state="translated">Обновите ссылку на значение верхней записи журнала ссылок (т. Е. &amp;lt;ref&amp;gt; @ {0}), если предыдущая верхняя запись была удалена. (Эта опция игнорируется для символических ссылок.)</target>
        </trans-unit>
        <trans-unit id="d7c08d3ae4fbcbbf6a3dc89cdba309659a4395bc" translate="yes" xml:space="preserve">
          <source>Update the reflog for &amp;lt;name&amp;gt; with &amp;lt;reason&amp;gt;. This is valid only when creating or updating a symbolic ref.</source>
          <target state="translated">Обновите журнал ссылок для &amp;lt;имя&amp;gt;, указав &amp;lt;причина&amp;gt;. Это действительно только при создании или обновлении символьной ссылки.</target>
        </trans-unit>
        <trans-unit id="d053e75e709458eca9f01e5c8910658ea18a25cf" translate="yes" xml:space="preserve">
          <source>Update the registered submodules to match what the superproject expects by cloning missing submodules, fetching missing commits in submodules and updating the working tree of the submodules. The &quot;updating&quot; can be done in several ways depending on command line options and the value of &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; configuration variable. The command line option takes precedence over the configuration variable. If neither is given, a &lt;code&gt;checkout&lt;/code&gt; is performed. The &lt;code&gt;update&lt;/code&gt; procedures supported both from the command line as well as through the &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; configuration are:</source>
          <target state="translated">Обновите зарегистрированные подмодули, чтобы они соответствовали ожиданиям суперпроекта, путем клонирования недостающих подмодулей, получения недостающих коммитов в подмодулях и обновления рабочего дерева подмодулей. &amp;laquo;Обновление&amp;raquo; может быть выполнено несколькими способами в зависимости от параметров командной строки и значения переменной конфигурации &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; . Параметр командной строки имеет приоритет над переменной конфигурации. Если ни один из них не указан, выполняется &lt;code&gt;checkout&lt;/code&gt; . Процедуры &lt;code&gt;update&lt;/code&gt; , поддерживаемые как из командной строки, так и через &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; configuration:</target>
        </trans-unit>
        <trans-unit id="9a189cb9ecf6f808972788504f5218556d75488e" translate="yes" xml:space="preserve">
          <source>Update the remote-tracking branches for the repository you cloned from, then merge one of them into your current branch:</source>
          <target state="translated">Обновите удалённые отслеживаемые ветки для репозитория,из которого вы клонировали,затем слейте одну из них в текущую:</target>
        </trans-unit>
        <trans-unit id="b4a6a66956cae4a12a849cae6094fa1d9187d293" translate="yes" xml:space="preserve">
          <source>Update the remote-tracking branches:</source>
          <target state="translated">Обновите дистанционно отслеживаемые ветки:</target>
        </trans-unit>
        <trans-unit id="f68dff1cbdca38d9a97763a1d9fd849e951b6a1b" translate="yes" xml:space="preserve">
          <source>Updates files in the working tree to match the version in the index or the specified tree. If no pathspec was given, &lt;code&gt;git checkout&lt;/code&gt; will also update &lt;code&gt;HEAD&lt;/code&gt; to set the specified branch as the current branch.</source>
          <target state="translated">Обновляет файлы в рабочем дереве, чтобы они соответствовали версии в индексе или указанном дереве. Если путь не был указан, &lt;code&gt;git checkout&lt;/code&gt; также обновит &lt;code&gt;HEAD&lt;/code&gt; , чтобы установить указанную ветвь в качестве текущей.</target>
        </trans-unit>
        <trans-unit id="091bf3e8c6fb28b8688a9117ac018615896df561" translate="yes" xml:space="preserve">
          <source>Updates remote refs using local refs, while sending objects necessary to complete the given refs.</source>
          <target state="translated">Обновление удаленных ссылок с использованием локальных ссылок при отправке объектов,необходимых для завершения данных ссылок.</target>
        </trans-unit>
        <trans-unit id="91ca9b60db53a2ebedea4c579e08371ec4025869" translate="yes" xml:space="preserve">
          <source>Updating A with the resulting merge commit will fast-forward and your push will be accepted.</source>
          <target state="translated">Обновление A с последующим коммитом слияния будет быстро перемотано вперед,и ваше нажатие будет принято.</target>
        </trans-unit>
        <trans-unit id="b1b31935884de26d68d690781ac1ec814b3bc924" translate="yes" xml:space="preserve">
          <source>Updating a repository with git fetch</source>
          <target state="translated">Обновление репозитория с помощью git-fetch</target>
        </trans-unit>
        <trans-unit id="c2ed1ab77aee7c3aaed70bc448641d662955a12f" translate="yes" xml:space="preserve">
          <source>Updating existing tests that assume GIT_TRACE format messages.</source>
          <target state="translated">Обновление существующих тестов,которые принимают сообщения формата GIT_TRACE.</target>
        </trans-unit>
        <trans-unit id="c5ded60beb1b0eb17cab63a8e09a8acd2261286e" translate="yes" xml:space="preserve">
          <source>Updating the index did something else too: it created a &lt;code&gt;.git/index&lt;/code&gt; file. This is the index that describes your current working tree, and something you should be very aware of. Again, you normally never worry about the index file itself, but you should be aware of the fact that you have not actually really &quot;checked in&quot; your files into Git so far, you&amp;rsquo;ve only &lt;strong&gt;told&lt;/strong&gt; Git about them.</source>
          <target state="translated">Обновление индекса сделало и кое-что еще: он создал файл &lt;code&gt;.git/index&lt;/code&gt; . Это индекс, который описывает ваше текущее рабочее дерево, и о чем вам следует хорошо знать. Опять же, вы обычно никогда не беспокоитесь о самом индексном файле, но вам следует помнить о том, что вы на самом деле пока не &amp;laquo;вернули&amp;raquo; свои файлы в Git, вы только &lt;strong&gt;рассказали&lt;/strong&gt; о них Git.</target>
        </trans-unit>
        <trans-unit id="583381e5edf6e3ab467919c38286667f0916979d" translate="yes" xml:space="preserve">
          <source>Upon completion, &amp;lt;branch&amp;gt; will be the current branch.</source>
          <target state="translated">По завершении &amp;lt;ветка&amp;gt; будет текущей веткой.</target>
        </trans-unit>
        <trans-unit id="c956664b8da61af6d0e1bf33a6e1ff75cbe45ad1" translate="yes" xml:space="preserve">
          <source>Upon seeing an invalid object name in the input, pretend as if the bad input was not given.</source>
          <target state="translated">Увидев на входе неверное имя объекта,притворитесь,что неверный ввод не был дан.</target>
        </trans-unit>
        <trans-unit id="d725441fc805b8226e9417fb2c8cf53ac8d791d5" translate="yes" xml:space="preserve">
          <source>Upstream branch to compare against. May be any valid commit, not just an existing branch name. Defaults to the configured upstream for the current branch.</source>
          <target state="translated">Верхнее ответвление для сравнения.Может быть любой корректный коммит,а не только имя существующей ветки.По умолчанию используется настройка по умолчанию для текущей ветки.</target>
        </trans-unit>
        <trans-unit id="f5808323e4ba717fc383cb75e63b6cf3a4e857e7" translate="yes" xml:space="preserve">
          <source>Upstream branch to search for equivalent commits. Defaults to the upstream branch of HEAD.</source>
          <target state="translated">Верхняя ветка для поиска эквивалентных коммитов.По умолчанию для верхней ветки HEAD.</target>
        </trans-unit>
        <trans-unit id="309bc26d3c4c2649258f95c7069216bb2a7ac5f4" translate="yes" xml:space="preserve">
          <source>Upstream location from which commits are identified to submit to p4. By default, this is the most recent p4 commit reachable from &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Местоположение в восходящем направлении, из которого идентифицируются коммиты для отправки в p4. По умолчанию это самая последняя фиксация p4, доступная из &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df28f1403e8348eae4829434034d1a95e5fe659d" translate="yes" xml:space="preserve">
          <source>Url translation</source>
          <target state="translated">Урл-перевод</target>
        </trans-unit>
        <trans-unit id="f51159e5f3b0adbeed98e188d040286280a5320b" translate="yes" xml:space="preserve">
          <source>Usage text</source>
          <target state="translated">Текст использования</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="6039144c2dc6586b6f3f0cb7423bcc0b3de0d0c1" translate="yes" xml:space="preserve">
          <source>Use &quot;patience diff&quot; algorithm when generating patches.</source>
          <target state="translated">Используйте алгоритм &quot;терпения diff&quot; при генерации патчей.</target>
        </trans-unit>
        <trans-unit id="1712fa1f1e6f89a27b7d3117ed39073a3258971d" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;dir&amp;gt; to store the resulting files, instead of the current working directory.</source>
          <target state="translated">Используйте &amp;lt;dir&amp;gt; для хранения полученных файлов вместо текущего рабочего каталога.</target>
        </trans-unit>
        <trans-unit id="89ed1ad2d65d4e1af42e685a9ee22c739e5d2c9b" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;message&amp;gt; instead of the branch names for the first line of the log message. For use with &lt;code&gt;--log&lt;/code&gt;.</source>
          <target state="translated">Используйте &amp;lt;message&amp;gt; вместо имен веток в первой строке сообщения журнала. Для использования с &lt;code&gt;--log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e6c324c4e7440184ef28eb2f6fc1fca5a4a325" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;regex&amp;gt; to decide what a word is, instead of considering runs of non-whitespace to be a word. Also implies &lt;code&gt;--word-diff&lt;/code&gt; unless it was already enabled.</source>
          <target state="translated">Используйте &amp;lt;regex&amp;gt;, чтобы решить, что такое слово, вместо того, чтобы рассматривать пробелы без пробелов как слово. Также подразумевает &lt;code&gt;--word-diff&lt;/code&gt; , если он еще не был включен.</target>
        </trans-unit>
        <trans-unit id="f70b8a97f949594b729b07efce2ca59a63023925" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;!&lt;/code&gt; to not make the corresponding negated long option available.</source>
          <target state="translated">Используйте &lt;code&gt;!&lt;/code&gt; чтобы не сделать доступным соответствующий отрицательный длинный вариант.</target>
        </trans-unit>
        <trans-unit id="f7924a219e6794d45a36b15b2c44738227b795ff" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; to set the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; explicitly. e.g., &quot;git remote set-head origin master&quot; will set the symbolic-ref &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; to &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;. This will only work if &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; already exists; if not it must be fetched first.</source>
          <target state="translated">Используйте &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; , чтобы явно установить символические ссылки &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; . например, &amp;laquo;git remote set-head origin master&amp;raquo; установит для символической ссылки &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; значение &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; . Это будет работать, только если &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; уже существует; в противном случае он должен быть получен первым.</target>
        </trans-unit>
        <trans-unit id="d950943422ee3b93275d1e4b1e510463e5b432e0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; to contact a running cache daemon (or start a new cache daemon if one is not started). Defaults to &lt;code&gt;$XDG_CACHE_HOME/git/credential/socket&lt;/code&gt; unless &lt;code&gt;~/.git-credential-cache/&lt;/code&gt; exists in which case &lt;code&gt;~/.git-credential-cache/socket&lt;/code&gt; is used instead. If your home directory is on a network-mounted filesystem, you may need to change this to a local filesystem. You must specify an absolute path.</source>
          <target state="translated">Используйте &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; , чтобы связаться с запущенным демоном кеширования (или запустить новый демон кеширования, если он еще не запущен). По умолчанию - &lt;code&gt;$XDG_CACHE_HOME/git/credential/socket&lt;/code&gt; если только &lt;code&gt;~/.git-credential-cache/&lt;/code&gt; не существует, и в этом случае вместо него используется &lt;code&gt;~/.git-credential-cache/socket&lt;/code&gt; . Если ваш домашний каталог находится в сетевой файловой системе, вам может потребоваться изменить его на локальную файловую систему. Вы должны указать абсолютный путь.</target>
        </trans-unit>
        <trans-unit id="faabe60607ec900b5e4ad4f074b4870d8f9c10c6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; to lookup and store credentials. The file will have its filesystem permissions set to prevent other users on the system from reading it, but will not be encrypted or otherwise protected. If not specified, credentials will be searched for from &lt;code&gt;~/.git-credentials&lt;/code&gt; and &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt;, and credentials will be written to &lt;code&gt;~/.git-credentials&lt;/code&gt; if it exists, or &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt; if it exists and the former does not. See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; для поиска и хранения учетных данных. Для файла будут установлены разрешения файловой системы, чтобы другие пользователи системы не могли его читать, но он не будет зашифрован или защищен иным образом. Если не указано, учетные данные будут искать в &lt;code&gt;~/.git-credentials&lt;/code&gt; и &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt; , и учетные данные будут записаны в &lt;code&gt;~/.git-credentials&lt;/code&gt; , если он существует, или в &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt; если он существует а первое - нет. См. Также &lt;a href=&quot;#FILES&quot;&gt;ФАЙЛЫ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aadb92eae500ef695bbe6a445720ce25246dd04e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;*&lt;/code&gt; to mean that this option should not be listed in the usage generated for the &lt;code&gt;-h&lt;/code&gt; argument. It&amp;rsquo;s shown for &lt;code&gt;--help-all&lt;/code&gt; as documented in &lt;a href=&quot;gitcli&quot;&gt;gitcli[7]&lt;/a&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;*&lt;/code&gt; , чтобы обозначить, что этот параметр не должен быть указан в использовании, созданном для аргумента &lt;code&gt;-h&lt;/code&gt; . Это показано для &lt;code&gt;--help-all&lt;/code&gt; , как &lt;a href=&quot;gitcli&quot;&gt;описано&lt;/a&gt; в gitcli [7] .</target>
        </trans-unit>
        <trans-unit id="3bbcee2a044e9c08185b38acb1e1c57ceea88054" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--no-guess&lt;/code&gt; to disable this.</source>
          <target state="translated">Используйте &lt;code&gt;--no-guess&lt;/code&gt; , чтобы отключить это.</target>
        </trans-unit>
        <trans-unit id="6deefc2a8fa6667ca14a90dee15faf81b1f0546a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-o master&lt;/code&gt; for continuing an import that was initially done by the old cvs2git tool.</source>
          <target state="translated">Используйте &lt;code&gt;-o master&lt;/code&gt; для продолжения импорта, который изначально был выполнен старым инструментом cvs2git.</target>
        </trans-unit>
        <trans-unit id="a4527eec708654a210ce88433047c8e573fb91f2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-r&lt;/code&gt; together with &lt;code&gt;-d&lt;/code&gt; to delete remote-tracking branches. Note, that it only makes sense to delete remote-tracking branches if they no longer exist in the remote repository or if &lt;code&gt;git fetch&lt;/code&gt; was configured not to fetch them again. See also the &lt;code&gt;prune&lt;/code&gt; subcommand of &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt; for a way to clean up all obsolete remote-tracking branches.</source>
          <target state="translated">Используйте &lt;code&gt;-r&lt;/code&gt; вместе с &lt;code&gt;-d&lt;/code&gt; , чтобы удалить ветки удаленного отслеживания. Обратите внимание, что есть смысл удалять ветки удаленного отслеживания, только если они больше не существуют в удаленном репозитории или если &lt;code&gt;git fetch&lt;/code&gt; был настроен на запрет их повторной загрузки. См. Также подкоманду &lt;code&gt;prune&lt;/code&gt; в &lt;a href=&quot;git-remote&quot;&gt;git-remote [1],&lt;/a&gt; чтобы узнать, как очистить все устаревшие ветки удаленного отслеживания.</target>
        </trans-unit>
        <trans-unit id="eb7d25cab29167524de808a8da669505756898ee" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;=&lt;/code&gt; if the option takes an argument.</source>
          <target state="translated">Используйте &lt;code&gt;=&lt;/code&gt; , если опция принимает аргумент.</target>
        </trans-unit>
        <trans-unit id="d247642d4c8609f74c2030daa3d24c7c82d2e46d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;?&lt;/code&gt; to mean that the option takes an optional argument. You probably want to use the &lt;code&gt;--stuck-long&lt;/code&gt; mode to be able to unambiguously parse the optional argument.</source>
          <target state="translated">Использовать &lt;code&gt;?&lt;/code&gt; означает, что опция принимает необязательный аргумент. Вероятно, вы захотите использовать режим &lt;code&gt;--stuck-long&lt;/code&gt; , чтобы иметь возможность однозначно анализировать необязательный аргумент.</target>
        </trans-unit>
        <trans-unit id="7929eb6fd77d1ea35c9c481fc89518eafcc1cd45" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git bisect&lt;/code&gt; to get a short usage description, and &lt;code&gt;git bisect
help&lt;/code&gt; or &lt;code&gt;git bisect -h&lt;/code&gt; to get a long usage description.</source>
          <target state="translated">Используйте &lt;code&gt;git bisect&lt;/code&gt; , чтобы получить краткое описание использования, и &lt;code&gt;git bisect help&lt;/code&gt; или &lt;code&gt;git bisect -h&lt;/code&gt; , чтобы получить подробное описание использования.</target>
        </trans-unit>
        <trans-unit id="599c65a25784af23c9351ba6f4874c534a65a263" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git cherry origin&lt;/code&gt; to see which ones of your patches were accepted, and/or use &lt;code&gt;git rebase origin&lt;/code&gt; to port your unmerged changes forward to the updated upstream.</source>
          <target state="translated">Используйте &lt;code&gt;git cherry origin&lt;/code&gt; , чтобы узнать, какие из ваших патчей были приняты, и / или используйте &lt;code&gt;git rebase origin&lt;/code&gt; , чтобы перенести ваши не объединенные изменения в обновленный апстрим.</target>
        </trans-unit>
        <trans-unit id="f1986201248cbf297f2fb86d6f520b30d057ce7d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; or &lt;code&gt;git remote update&lt;/code&gt; to stay up to date.</source>
          <target state="translated">Используйте &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; или &lt;code&gt;git remote update&lt;/code&gt; , чтобы оставаться в курсе.</target>
        </trans-unit>
        <trans-unit id="252ef42d37b56d31d5e5dc2525ae974052dfca91" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git format-patch origin&lt;/code&gt; to prepare patches for e-mail submission to your upstream and send it out. Go back to step 2. and continue.</source>
          <target state="translated">Используйте &lt;code&gt;git format-patch origin&lt;/code&gt; , чтобы подготовить исправления для отправки по электронной почте в ваш апстрим и отправить его. Вернитесь к шагу 2. и продолжайте.</target>
        </trans-unit>
        <trans-unit id="cd30f3ed950161de3f8267d9a18953af3c02784f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git mergetool&lt;/code&gt; to run one of several merge utilities to resolve merge conflicts. It is typically run after &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;git mergetool&lt;/code&gt; для запуска одной из нескольких утилит слияния для разрешения конфликтов слияния. Обычно он запускается после &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b298c06fc405635f29d06efdf0f42592d8075f2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git rev-parse&lt;/code&gt; in option parsing mode (see PARSEOPT section below).</source>
          <target state="translated">Используйте &lt;code&gt;git rev-parse&lt;/code&gt; в режиме анализа параметров (см. Раздел PARSEOPT ниже).</target>
        </trans-unit>
        <trans-unit id="7c9820d48befbd19730095f238fb8a15824823ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git rev-parse&lt;/code&gt; in shell quoting mode (see SQ-QUOTE section below). In contrast to the &lt;code&gt;--sq&lt;/code&gt; option below, this mode does only quoting. Nothing else is done to command input.</source>
          <target state="translated">Используйте &lt;code&gt;git rev-parse&lt;/code&gt; в режиме цитирования оболочки (см. Раздел SQ-QUOTE ниже). В отличие от параметра &lt;code&gt;--sq&lt;/code&gt; ниже, этот режим выполняет только цитирование. Больше ничего не делается для ввода команд.</target>
        </trans-unit>
        <trans-unit id="4c4d44083fa5e2a6971987cf935297be30994f4c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git stash&lt;/code&gt; when you want to record the current state of the working directory and the index, but want to go back to a clean working directory. The command saves your local modifications away and reverts the working directory to match the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">Используйте &lt;code&gt;git stash&lt;/code&gt; , если вы хотите записать текущее состояние рабочего каталога и индекса, но хотите вернуться в чистый рабочий каталог. Команда сохраняет ваши локальные изменения и возвращает рабочий каталог в соответствие с фиксацией &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41c11f9d8154a7d9c49ff48bc15e09cdeb4a9a5c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git stripspace --strip-comments&lt;/code&gt; to obtain:</source>
          <target state="translated">Используйте &lt;code&gt;git stripspace --strip-comments&lt;/code&gt; , чтобы получить:</target>
        </trans-unit>
        <trans-unit id="141b00818c5025cc15ff515d81283fc5705a8a4e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git stripspace&lt;/code&gt; with no arguments to obtain:</source>
          <target state="translated">Используйте &lt;code&gt;git stripspace&lt;/code&gt; без аргументов, чтобы получить:</target>
        </trans-unit>
        <trans-unit id="ae0479a18945009a7ebac30bdfceaa72c61a99c4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ident&lt;/code&gt; in the &lt;code&gt;From:&lt;/code&gt; header of each commit email. If the author ident of the commit is not textually identical to the provided &lt;code&gt;ident&lt;/code&gt;, place a &lt;code&gt;From:&lt;/code&gt; header in the body of the message with the original author. If no &lt;code&gt;ident&lt;/code&gt; is given, use the committer ident.</source>
          <target state="translated">Используйте &lt;code&gt;ident&lt;/code&gt; в заголовке &lt;code&gt;From:&lt;/code&gt; каждого сообщения о фиксации. Если идентификатор автора фиксации не идентичен по тексту предоставленному &lt;code&gt;ident&lt;/code&gt; , поместите заголовок &lt;code&gt;From:&lt;/code&gt; в тело сообщения с исходным автором. Если &lt;code&gt;ident&lt;/code&gt; не указан, используйте идентификатор коммиттера.</target>
        </trans-unit>
        <trans-unit id="8fb68f530aa46816206d7ea34908da4d297edef3" translate="yes" xml:space="preserve">
          <source>Use IPv4 addresses only, ignoring IPv6 addresses.</source>
          <target state="translated">Используйте только IPv4-адреса,игнорируя IPv6-адреса.</target>
        </trans-unit>
        <trans-unit id="d89ac89f76f16a68a863b0d9f578ffd1a558d6b0" translate="yes" xml:space="preserve">
          <source>Use IPv6 addresses only, ignoring IPv4 addresses.</source>
          <target state="translated">Используйте только IPv6-адреса,игнорируя IPv4-адреса.</target>
        </trans-unit>
        <trans-unit id="23206ddfb8d01b68973d7bd9cccf799f208e3657" translate="yes" xml:space="preserve">
          <source>Use Message &amp;rarr; Insert file&amp;hellip;​ and insert the patch.</source>
          <target state="translated">Используйте Сообщение &amp;rarr; Вставить файл&amp;hellip; и вставьте патч.</target>
        </trans-unit>
        <trans-unit id="1b7e380bb9ef947a64359e01f17ce54cd3bdece1" translate="yes" xml:space="preserve">
          <source>Use One Mark Per Commit</source>
          <target state="translated">Использовать одну отметку на каждый комитет</target>
        </trans-unit>
        <trans-unit id="c24268aab2b43d4e294643c8fbcbd60d377e139b" translate="yes" xml:space="preserve">
          <source>Use POSIX extended/basic regexp for patterns. Default is to use basic regexp.</source>
          <target state="translated">Используйте POSIX расширенный/базовый регеxp для шаблонов.По умолчанию используется базовый регеxp.</target>
        </trans-unit>
        <trans-unit id="36e96e4a2fd002679f3b794b4968539810c5c2eb" translate="yes" xml:space="preserve">
          <source>Use Perl-compatible regular expressions for patterns.</source>
          <target state="translated">Используйте Perl-совместимые регулярные выражения для шаблонов.</target>
        </trans-unit>
        <trans-unit id="fd46ce4ee0de88bb1a4ebb0e0c6375d24c2fb065" translate="yes" xml:space="preserve">
          <source>Use SO_REUSEADDR when binding the listening socket. This allows the server to restart without waiting for old connections to time out.</source>
          <target state="translated">Используйте SO_REUSEADDR при привязке прослушивающего разъема.Это позволяет серверу перезагрузиться,не дожидаясь окончания таймаута старых соединений.</target>
        </trans-unit>
        <trans-unit id="f351ffbdfc957393f82f6653e37778e19987b350" translate="yes" xml:space="preserve">
          <source>Use Tag Fixup Branches</source>
          <target state="translated">Использовать ветви крепления метки</target>
        </trans-unit>
        <trans-unit id="67640e675158aa473b8a69cc0cdb46fb8ed7283f" translate="yes" xml:space="preserve">
          <source>Use a &quot;stable&quot; sum of hashes as the patch ID. With this option:</source>
          <target state="translated">В качестве идентификатора патча используйте &quot;стабильную&quot; сумму хэшей.С этой опцией:</target>
        </trans-unit>
        <trans-unit id="0ec5feaf620cc0230519584645c952a1ae99d83c" translate="yes" xml:space="preserve">
          <source>Use a client spec to find the list of interesting files in p4. See the &quot;CLIENT SPEC&quot; section below.</source>
          <target state="translated">Используйте спецификацию клиента,чтобы найти список интересных файлов в p4.См.раздел &quot;СПЕЦИАЛЬНЫЙ КЛИЕНТ&quot; ниже.</target>
        </trans-unit>
        <trans-unit id="cf410607b4d646fae6b37dffcb3f37fcc481f52b" translate="yes" xml:space="preserve">
          <source>Use a mergetool. &lt;code&gt;git mergetool&lt;/code&gt; to launch a graphical mergetool which will work you through the merge.</source>
          <target state="translated">Используйте mergetool. &lt;code&gt;git mergetool&lt;/code&gt; , чтобы запустить графический инструмент слияния, который поможет вам выполнить слияние.</target>
        </trans-unit>
        <trans-unit id="e7589df3d820308df2c8a838829de10cfbcf2077" translate="yes" xml:space="preserve">
          <source>Use a special line-based format intended for script consumption. Added/removed/unchanged runs are printed in the usual unified diff format, starting with a &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt;/` ` character at the beginning of the line and extending to the end of the line. Newlines in the input are represented by a tilde &lt;code&gt;~&lt;/code&gt; on a line of its own.</source>
          <target state="translated">Используйте специальный построчный формат, предназначенный для использования скриптом. Добавленные / удаленные / неизмененные прогоны печатаются в обычном унифицированном формате сравнения, начиная с символа &lt;code&gt;+&lt;/code&gt; / &lt;code&gt;-&lt;/code&gt; / `` в начале строки и до конца строки. Новые строки во вводе представлены тильдой &lt;code&gt;~&lt;/code&gt; на отдельной строке.</target>
        </trans-unit>
        <trans-unit id="77b024aefcbc37a1627539595d18a928f0842816" translate="yes" xml:space="preserve">
          <source>Use a tarball as a starting point for a new repository.</source>
          <target state="translated">Используйте тарбол в качестве отправной точки для нового репозитория.</target>
        </trans-unit>
        <trans-unit id="afac3b09febbe243aa11caf12f594c7284e7bf23" translate="yes" xml:space="preserve">
          <source>Use an &quot;unstable&quot; hash as the patch ID. With this option, the result produced is compatible with the patch-id value produced by git 1.9 and older. Users with pre-existing databases storing patch-ids produced by git 1.9 and older (who do not deal with reordered patches) may want to use this option.</source>
          <target state="translated">Используйте &quot;нестабильный&quot; хэш в качестве идентификатора патча.С помощью этой опции полученный результат совместим со значением patch-id,полученным в git'е 1.9 и более ранних версиях.Пользователи с уже существующими базами данных,в которых хранятся патч-ид,созданный в git 1.9 и более ранних версиях (которые не имеют дела с переупорядоченными патчами),могут использовать эту опцию.</target>
        </trans-unit>
        <trans-unit id="ef4088fc09156b38070cb26da8281dc7bfd8c504" translate="yes" xml:space="preserve">
          <source>Use an atomic transaction for updating the refs. If any of the refs fails to update then the entire push will fail without changing any refs.</source>
          <target state="translated">Используйте атомную транзакцию для обновления ссылок.Если любой из ссылок не удастся обновить,то весь толчок будет неудачным без изменения ссылок.</target>
        </trans-unit>
        <trans-unit id="049c3e05f1b188c69413c7549059c67376f76ed1" translate="yes" xml:space="preserve">
          <source>Use an atomic transaction on the remote side if available. Either all refs are updated, or on error, no refs are updated. If the server does not support atomic pushes the push will fail.</source>
          <target state="translated">Используйте атомную транзакцию на удаленной стороне,если она доступна.Либо все ссылки обновляются,либо по ошибке ссылки не обновляются.Если сервер не поддерживает атомные нажатия,то нажатие будет неудачным.</target>
        </trans-unit>
        <trans-unit id="e55fb404106de44576d9bc731a7fb4baf9a6337c" translate="yes" xml:space="preserve">
          <source>Use binary search to find the commit that introduced a bug</source>
          <target state="translated">Используйте бинарный поиск,чтобы найти коммит,который ввел ошибку.</target>
        </trans-unit>
        <trans-unit id="78ee9b127501691d305b39cc3fc13fc74a1d22a1" translate="yes" xml:space="preserve">
          <source>Use customized color for &lt;code&gt;git add --interactive&lt;/code&gt; and &lt;code&gt;git clean --interactive&lt;/code&gt; output. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; may be &lt;code&gt;prompt&lt;/code&gt;, &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;help&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, for four distinct types of normal output from interactive commands.</source>
          <target state="translated">Используйте настраиваемый цвет для &lt;code&gt;git add --interactive&lt;/code&gt; и &lt;code&gt;git clean --interactive&lt;/code&gt; . &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; может быть &lt;code&gt;prompt&lt;/code&gt; , &lt;code&gt;header&lt;/code&gt; , &lt;code&gt;help&lt;/code&gt; или &lt;code&gt;error&lt;/code&gt; для четырех различных типов нормального вывода интерактивных команд.</target>
        </trans-unit>
        <trans-unit id="bf3aeb7f00c3d69ade01b5cc321078d4f50948ae" translate="yes" xml:space="preserve">
          <source>Use customized color for &lt;code&gt;git log --decorate&lt;/code&gt; output. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; is one of &lt;code&gt;branch&lt;/code&gt;, &lt;code&gt;remoteBranch&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;stash&lt;/code&gt; or &lt;code&gt;HEAD&lt;/code&gt; for local branches, remote-tracking branches, tags, stash and HEAD, respectively and &lt;code&gt;grafted&lt;/code&gt; for grafted commits.</source>
          <target state="translated">Использовать индивидуальный цвет для вывода &lt;code&gt;git log --decorate&lt;/code&gt; . &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; - это &lt;code&gt;branch&lt;/code&gt; , &lt;code&gt;remoteBranch&lt;/code&gt; , &lt;code&gt;tag&lt;/code&gt; , &lt;code&gt;stash&lt;/code&gt; или &lt;code&gt;HEAD&lt;/code&gt; для локальных веток, веток удаленного отслеживания, тегов, stash и HEAD, соответственно, и &lt;code&gt;grafted&lt;/code&gt; для привитых коммитов.</target>
        </trans-unit>
        <trans-unit id="29ecef38edab0e1998d46583be9558cf2a562eff" translate="yes" xml:space="preserve">
          <source>Use customized color for branch coloration. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; is one of &lt;code&gt;current&lt;/code&gt; (the current branch), &lt;code&gt;local&lt;/code&gt; (a local branch), &lt;code&gt;remote&lt;/code&gt; (a remote-tracking branch in refs/remotes/), &lt;code&gt;upstream&lt;/code&gt; (upstream tracking branch), &lt;code&gt;plain&lt;/code&gt; (other refs).</source>
          <target state="translated">Используйте индивидуальный цвет для окраски веток. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; может быть &lt;code&gt;current&lt;/code&gt; (текущая ветвь), &lt;code&gt;local&lt;/code&gt; (локальная ветвь), &lt;code&gt;remote&lt;/code&gt; (ветка удаленного отслеживания в refs / remotes /), &lt;code&gt;upstream&lt;/code&gt; (восходящая ветвь отслеживания), &lt;code&gt;plain&lt;/code&gt; (другие ссылки).</target>
        </trans-unit>
        <trans-unit id="fcdeebdb47ef8466da45d806c0dccf091f4447a0" translate="yes" xml:space="preserve">
          <source>Use customized color for diff colorization. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; specifies which part of the patch to use the specified color, and is one of &lt;code&gt;context&lt;/code&gt; (context text - &lt;code&gt;plain&lt;/code&gt; is a historical synonym), &lt;code&gt;meta&lt;/code&gt; (metainformation), &lt;code&gt;frag&lt;/code&gt; (hunk header), &lt;code&gt;func&lt;/code&gt; (function in hunk header), &lt;code&gt;old&lt;/code&gt; (removed lines), &lt;code&gt;new&lt;/code&gt; (added lines), &lt;code&gt;commit&lt;/code&gt; (commit headers), &lt;code&gt;whitespace&lt;/code&gt; (highlighting whitespace errors), &lt;code&gt;oldMoved&lt;/code&gt; (deleted lines), &lt;code&gt;newMoved&lt;/code&gt; (added lines), &lt;code&gt;oldMovedDimmed&lt;/code&gt;, &lt;code&gt;oldMovedAlternative&lt;/code&gt;, &lt;code&gt;oldMovedAlternativeDimmed&lt;/code&gt;, &lt;code&gt;newMovedDimmed&lt;/code&gt;, &lt;code&gt;newMovedAlternative&lt;/code&gt;&lt;code&gt;newMovedAlternativeDimmed&lt;/code&gt; (See the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; setting of &lt;code&gt;--color-moved&lt;/code&gt; in &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for details), &lt;code&gt;contextDimmed&lt;/code&gt;, &lt;code&gt;oldDimmed&lt;/code&gt;, &lt;code&gt;newDimmed&lt;/code&gt;, &lt;code&gt;contextBold&lt;/code&gt;, &lt;code&gt;oldBold&lt;/code&gt;, and &lt;code&gt;newBold&lt;/code&gt; (see &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff[1]&lt;/a&gt; for details).</source>
          <target state="translated">Используйте индивидуальный цвет для раскраски различий. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; указывает, в какой части патча использовать указанный цвет, и является одним из &lt;code&gt;context&lt;/code&gt; (контекстный текст - &lt;code&gt;plain&lt;/code&gt; является историческим синонимом), &lt;code&gt;meta&lt;/code&gt; (метаинформация), &lt;code&gt;frag&lt;/code&gt; (заголовок блока), &lt;code&gt;func&lt;/code&gt; (функция в заголовке блока), &lt;code&gt;old&lt;/code&gt; (удаленные строки), &lt;code&gt;new&lt;/code&gt; (добавленные строки), &lt;code&gt;commit&lt;/code&gt; (заголовки фиксации), &lt;code&gt;whitespace&lt;/code&gt; (выделение ошибок пробелов), &lt;code&gt;oldMoved&lt;/code&gt; (удаленные строки), &lt;code&gt;newMoved&lt;/code&gt; (добавленные строки), &lt;code&gt;oldMovedDimmed&lt;/code&gt; , &lt;code&gt;oldMovedAlternative&lt;/code&gt; , &lt;code&gt;oldMovedAlternativeDimmed&lt;/code&gt; , &lt;code&gt;newMovedDimmed&lt;/code&gt; , &lt;code&gt;newMovedAlternative&lt;/code&gt; &lt;code&gt;newMovedAlternativeDimmed&lt;/code&gt; ( подробнее см. параметр &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; для &lt;code&gt;--color-moved&lt;/code&gt; в &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; ), &lt;code&gt;contextDimmed&lt;/code&gt; , &lt;code&gt;oldDimmed&lt;/code&gt; , &lt;code&gt;newDimmed&lt;/code&gt; , &lt;code&gt;contextBold&lt;/code&gt; , &lt;code&gt;oldBold&lt;/code&gt; и &lt;code&gt;newBold&lt;/code&gt; -range (см. &lt;a href=&quot;git-range-diff&quot;&gt;git-range 1]&lt;/a&gt; для подробностей).</target>
        </trans-unit>
        <trans-unit id="799532fe06b09693cab5782f0c7b74d1305d2cb1" translate="yes" xml:space="preserve">
          <source>Use customized color for each remote keyword. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; may be &lt;code&gt;hint&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;success&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt; which match the corresponding keyword.</source>
          <target state="translated">Используйте индивидуальный цвет для каждого удаленного ключевого слова. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; может быть &lt;code&gt;hint&lt;/code&gt; , &lt;code&gt;warning&lt;/code&gt; , &lt;code&gt;success&lt;/code&gt; или &lt;code&gt;error&lt;/code&gt; которые соответствуют соответствующему ключевому слову.</target>
        </trans-unit>
        <trans-unit id="e8363e3bb3b19269f1bec63465f050d08c7400a8" translate="yes" xml:space="preserve">
          <source>Use customized color for grep colorization. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; specifies which part of the line to use the specified color, and is one of</source>
          <target state="translated">Используйте индивидуальный цвет для раскраски grep. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; указывает, в какой части строки использовать указанный цвет, и является одним из</target>
        </trans-unit>
        <trans-unit id="3d940f7a54cc13b6b8a420b163ce2b7e4ccedf38" translate="yes" xml:space="preserve">
          <source>Use customized color for hints.</source>
          <target state="translated">Используйте индивидуальный цвет для подсказок.</target>
        </trans-unit>
        <trans-unit id="a7bc0186c1d40a59aee910eedb6524484cbce3a0" translate="yes" xml:space="preserve">
          <source>Use customized color for push errors.</source>
          <target state="translated">Используйте настраиваемый цвет для ошибок при нажатии.</target>
        </trans-unit>
        <trans-unit id="efd1e4b094e6a540e69b42772ae161651f4648a2" translate="yes" xml:space="preserve">
          <source>Use customized color for status colorization. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; is one of &lt;code&gt;header&lt;/code&gt; (the header text of the status message), &lt;code&gt;added&lt;/code&gt; or &lt;code&gt;updated&lt;/code&gt; (files which are added but not committed), &lt;code&gt;changed&lt;/code&gt; (files which are changed but not added in the index), &lt;code&gt;untracked&lt;/code&gt; (files which are not tracked by Git), &lt;code&gt;branch&lt;/code&gt; (the current branch), &lt;code&gt;nobranch&lt;/code&gt; (the color the &lt;code&gt;no branch&lt;/code&gt; warning is shown in, defaulting to red), &lt;code&gt;localBranch&lt;/code&gt; or &lt;code&gt;remoteBranch&lt;/code&gt; (the local and remote branch names, respectively, when branch and tracking information is displayed in the status short-format), or &lt;code&gt;unmerged&lt;/code&gt; (files which have unmerged changes).</source>
          <target state="translated">Используйте индивидуальный цвет для раскраски статуса. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; - это один из &lt;code&gt;header&lt;/code&gt; (текст заголовка сообщения о состоянии), &lt;code&gt;added&lt;/code&gt; или &lt;code&gt;updated&lt;/code&gt; (файлы, которые добавлены, но не зафиксированы), &lt;code&gt;changed&lt;/code&gt; (файлы, которые изменены, но не добавлены в индекс), &lt;code&gt;untracked&lt;/code&gt; (файлы, которые не отслеживается Git), &lt;code&gt;branch&lt;/code&gt; (текущая ветвь), &lt;code&gt;nobranch&lt;/code&gt; (цвет, в котором отображается предупреждение об &lt;code&gt;no branch&lt;/code&gt; , по &lt;code&gt;localBranch&lt;/code&gt; красный), localBranch или &lt;code&gt;remoteBranch&lt;/code&gt; (имена локальных и удаленных ветвей соответственно, когда информация о ветке и отслеживании отображается в краткий формат статуса), или &lt;code&gt;unmerged&lt;/code&gt; (файлы, в которых есть не объединенные изменения).</target>
        </trans-unit>
        <trans-unit id="42006ecfd08deb9b3ff0a3f1d7240d8f715710f3" translate="yes" xml:space="preserve">
          <source>Use customized color when a push was rejected.</source>
          <target state="translated">Используйте настраиваемый цвет при отклонении нажатия.</target>
        </trans-unit>
        <trans-unit id="7714f2243f3ecb7a0c915a75f0d9677bee5cfddf" translate="yes" xml:space="preserve">
          <source>Use fixed strings for patterns (don&amp;rsquo;t interpret pattern as a regex).</source>
          <target state="translated">Используйте фиксированные строки для шаблонов (не интерпретируйте шаблон как регулярное выражение).</target>
        </trans-unit>
        <trans-unit id="be83392780575c9c0f338875e4ab41fca7ad0580" translate="yes" xml:space="preserve">
          <source>Use given directory for the location of Git objects. We check &lt;code&gt;&amp;lt;dir&amp;gt;/packs/multi-pack-index&lt;/code&gt; for the current MIDX file, and &lt;code&gt;&amp;lt;dir&amp;gt;/packs&lt;/code&gt; for the pack-files to index.</source>
          <target state="translated">Использовать указанный каталог для размещения объектов Git. Мы проверяем &lt;code&gt;&amp;lt;dir&amp;gt;/packs/multi-pack-index&lt;/code&gt; для текущего файла MIDX и &lt;code&gt;&amp;lt;dir&amp;gt;/packs&lt;/code&gt; для индексируемых файлов pack.</target>
        </trans-unit>
        <trans-unit id="58e0e6d68f2b1086e2f61cc3ccf9bb473fce2cb1" translate="yes" xml:space="preserve">
          <source>Use given directory for the location of packfiles and commit-graph file. This parameter exists to specify the location of an alternate that only has the objects directory, not a full &lt;code&gt;.git&lt;/code&gt; directory. The commit-graph file is expected to be in the &lt;code&gt;&amp;lt;dir&amp;gt;/info&lt;/code&gt; directory and the packfiles are expected to be in &lt;code&gt;&amp;lt;dir&amp;gt;/pack&lt;/code&gt;.</source>
          <target state="translated">Используйте данный каталог для расположения файлов пакетов и файла графика фиксации. Этот параметр существует для указания местоположения альтернативы, которая имеет только каталог объектов, а не полный каталог &lt;code&gt;.git&lt;/code&gt; . Предполагается, что файл commit-graph будет в каталоге &lt;code&gt;&amp;lt;dir&amp;gt;/info&lt;/code&gt; , а файлы packfiles - в &lt;code&gt;&amp;lt;dir&amp;gt;/pack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e22ac3ec044552fceb6f971a8409c3fc735d918" translate="yes" xml:space="preserve">
          <source>Use gmail as the smtp server</source>
          <target state="translated">Используйте gmail в качестве сервера smtp</target>
        </trans-unit>
        <trans-unit id="243e0ec42451f8d223cf0a086b6e0d020fe017bc" translate="yes" xml:space="preserve">
          <source>Use hash &lt;code&gt;#&lt;/code&gt; for comments that are either on their own line, or after the email address.</source>
          <target state="translated">Используйте хэш &lt;code&gt;#&lt;/code&gt; для комментариев, которые находятся либо в отдельной строке, либо после адреса электронной почты.</target>
        </trans-unit>
        <trans-unit id="fe4290ca9cf2dcf165b3911c20fcc8115cf36b09" translate="yes" xml:space="preserve">
          <source>Use libcurl to communicate with the IMAP server, unless tunneling into it. Ignored if Git was built without the USE_CURL_FOR_IMAP_SEND option set.</source>
          <target state="translated">Используйте libcurl для связи с IMAP-сервером,если только в него нет туннеля.Игнорируется,если Git был собран без установки опции USE_CURL_FOR_IMAP_SEND.</target>
        </trans-unit>
        <trans-unit id="b43e2a7c9e04ff83908291bc454ceb95c66f26d2" translate="yes" xml:space="preserve">
          <source>Use mailmap file to map author and committer names and email addresses to canonical real names and email addresses. See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">Используйте файл mailmap для сопоставления имен авторов и коммиттеров и адресов электронной почты с каноническими реальными именами и адресами электронной почты. См. &lt;a href=&quot;git-shortlog&quot;&gt;Git-shortlog [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="869311b9e64386ec94c4224dbda98ca212bcb863" translate="yes" xml:space="preserve">
          <source>Use merging strategies to rebase. When the recursive (default) merge strategy is used, this allows rebase to be aware of renames on the upstream side.</source>
          <target state="translated">Используйте стратегии слияния для ребейзинга.Когда используется стратегия рекурсивного (по умолчанию)слияния,это позволяет ребейзу быть в курсе переименований на восходящей стороне.</target>
        </trans-unit>
        <trans-unit id="504dd078aaf1ec972f6af826bbe142e1450759fa" translate="yes" xml:space="preserve">
          <source>Use of &quot;topic branches&quot; solves these problems. The name is pretty self explanatory, with a caveat that comes from the &quot;merge upwards&quot; rule above:</source>
          <target state="translated">Использование &quot;тематических ветвей&quot; решает эти проблемы.Название довольно само собой разумеющееся,с оговоркой,которая вытекает из приведенного выше правила &quot;слияния вверх&quot;:</target>
        </trans-unit>
        <trans-unit id="2997460999cadfc1fcc5d52315d53b3d5efcd07d" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;dcommit&lt;/code&gt; is preferred to &lt;code&gt;set-tree&lt;/code&gt; (below).</source>
          <target state="translated">Использование &lt;code&gt;dcommit&lt;/code&gt; предпочтительнее, чем &lt;code&gt;set-tree&lt;/code&gt; (ниже).</target>
        </trans-unit>
        <trans-unit id="6b08c4843a60fcea417d6fa6b7562621b3124054" translate="yes" xml:space="preserve">
          <source>Use of this utility is encouraged in favor of directly accessing files under the &lt;code&gt;.git&lt;/code&gt; directory.</source>
          <target state="translated">Рекомендуется использовать эту утилиту в пользу прямого доступа к файлам в каталоге &lt;code&gt;.git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a96544176d9c64bcdfe76616987380a83e4f896" translate="yes" xml:space="preserve">
          <source>Use permissions reported by umask(2). The default, when &lt;code&gt;--shared&lt;/code&gt; is not specified.</source>
          <target state="translated">Используйте разрешения, указанные в umask (2). По умолчанию, когда &lt;code&gt;--shared&lt;/code&gt; не указан.</target>
        </trans-unit>
        <trans-unit id="7b2e5a64a2bb1a5fbe6304abee401e1d3f35a8f4" translate="yes" xml:space="preserve">
          <source>Use reflog to find a better common ancestor between &amp;lt;upstream&amp;gt; and &amp;lt;branch&amp;gt; when calculating which commits have been introduced by &amp;lt;branch&amp;gt;.</source>
          <target state="translated">Используйте reflog, чтобы найти лучшего общего предка между &amp;lt;upstream&amp;gt; и &amp;lt;branch&amp;gt; при вычислении того, какие коммиты были введены &amp;lt;branch&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b40e39ff3f77007104d997879dd735023a9dca06" translate="yes" xml:space="preserve">
          <source>Use revisions from revs-file instead of calling &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;.</source>
          <target state="translated">Используйте ревизии из файла revs вместо вызова &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efb298546ca010c6e357a2c3cc79d1b86fb2f356" translate="yes" xml:space="preserve">
          <source>Use the &quot;sparse&quot; algorithm to determine which objects to include in the pack, when combined with the &quot;--revs&quot; option. This algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames.</source>
          <target state="translated">Используйте &quot;разреженный&quot; алгоритм для определения того,какие объекты включить в пакет,при сочетании с опцией &quot;--revs&quot;.Этот алгоритм ходит только по деревьям,которые появляются в путях,вводящих новые объекты.Это может иметь значительные преимущества в производительности при вычислении пакета для отправки небольшого изменения.Однако,возможно,что в пакетный файл будут добавлены дополнительные объекты,если включённые коммиты содержат определённые типы прямых переименований.</target>
        </trans-unit>
        <trans-unit id="0755f10a2fd51824d1737b45b49a4642d66873f8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--in-place&lt;/code&gt; option to edit a message file in place:</source>
          <target state="translated">Используйте параметр &lt;code&gt;--in-place&lt;/code&gt; , чтобы редактировать файл сообщения на месте:</target>
        </trans-unit>
        <trans-unit id="55e7e1126d3aa0a5c8bf2360dfcd495bb1107882" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute only if you cannot store a file in UTF-8 encoding and if you want Git to be able to process the content as text.</source>
          <target state="translated">Используйте атрибут &lt;code&gt;working-tree-encoding&lt;/code&gt; только в том случае, если вы не можете сохранить файл в кодировке UTF-8 и если вы хотите, чтобы Git мог обрабатывать контент как текст.</target>
        </trans-unit>
        <trans-unit id="b5ec705c3f1e9d70bd95302efbf5732684172042" translate="yes" xml:space="preserve">
          <source>Use the branch detection algorithm to find new paths in p4. It is documented below in &quot;BRANCH DETECTION&quot;.</source>
          <target state="translated">Используйте алгоритм обнаружения ветки для поиска новых путей в p4.Он документирован ниже в &quot;BRANCH DETECTION&quot;.</target>
        </trans-unit>
        <trans-unit id="33ac56041ae34da6b3682a94d8a665913a47636a" translate="yes" xml:space="preserve">
          <source>Use the credential (e.g., access the URL with the username and password from step (2)), and see if it&amp;rsquo;s accepted.</source>
          <target state="translated">Используйте учетные данные (например, войдите в URL-адрес с именем пользователя и паролем из шага (2)) и посмотрите, принято ли оно.</target>
        </trans-unit>
        <trans-unit id="4cfefdd524d37cf0c1fedc168c903048fc636bbd" translate="yes" xml:space="preserve">
          <source>Use the customized color for the part of git-blame output that is repeated meta information per line (such as commit id, author name, date and timezone). Defaults to cyan.</source>
          <target state="translated">Используйте настраиваемый цвет для части вывода git-блейма,которая является повторяющейся мета-информацией для каждой строки (такой как идентификатор коммита,имя автора,дата и часовой пояс).По умолчанию голубой цвет.</target>
        </trans-unit>
        <trans-unit id="a024bae6c0f6ae8fa68e77c95e0c4f95100aa970" translate="yes" xml:space="preserve">
          <source>Use the diff tool specified by &amp;lt;tool&amp;gt;. Valid values include emerge, kompare, meld, and vimdiff. Run &lt;code&gt;git difftool --tool-help&lt;/code&gt; for the list of valid &amp;lt;tool&amp;gt; settings.</source>
          <target state="translated">Используйте инструмент сравнения, указанный в &amp;lt;tool&amp;gt;. Допустимые значения: emerge, kompare, meld и vimdiff. Запустите &lt;code&gt;git difftool --tool-help&lt;/code&gt; для получения списка допустимых настроек &amp;lt;tool&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="161588bc8b76efbad18d428ccf6e2f5e459908d1" translate="yes" xml:space="preserve">
          <source>Use the fast patchset import strategy. This can be significantly faster for large trees, but cannot handle directory renames or permissions changes. The default strategy is slow and safe.</source>
          <target state="translated">Используйте стратегию быстрого импорта патчсетов.Это может быть значительно быстрее для больших деревьев,но не может справиться с переименованием каталогов или изменением прав доступа.Стратегия по умолчанию медленная и безопасная.</target>
        </trans-unit>
        <trans-unit id="89541b63bc820ad5c76ea37101a62452ee62e61c" translate="yes" xml:space="preserve">
          <source>Use the following attributes if your &lt;code&gt;*.ps1&lt;/code&gt; files are UTF-16 little endian encoded without BOM and you want Git to use Windows line endings in the working directory (use &lt;code&gt;UTF-16LE-BOM&lt;/code&gt; instead of &lt;code&gt;UTF-16LE&lt;/code&gt; if you want UTF-16 little endian with BOM). Please note, it is highly recommended to explicitly define the line endings with &lt;code&gt;eol&lt;/code&gt; if the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute is used to avoid ambiguity.</source>
          <target state="translated">Используйте следующие атрибуты, если ваши файлы &lt;code&gt;*.ps1&lt;/code&gt; имеют кодировку UTF-16 с прямым порядком байтов без спецификации, и вы хотите, чтобы Git использовал окончания строк Windows в рабочем каталоге (используйте &lt;code&gt;UTF-16LE-BOM&lt;/code&gt; вместо &lt;code&gt;UTF-16LE&lt;/code&gt; , если вы хотите UTF-16 с порядком байтов в спецификации). Обратите внимание: настоятельно рекомендуется явно определять окончания строк с помощью &lt;code&gt;eol&lt;/code&gt; , если используется атрибут &lt;code&gt;working-tree-encoding&lt;/code&gt; чтобы избежать двусмысленности.</target>
        </trans-unit>
        <trans-unit id="e5c2f58b6a6ebc713504e60181f4f0dd37da2d6d" translate="yes" xml:space="preserve">
          <source>Use the given &amp;lt;msg&amp;gt; as the commit message. If multiple &lt;code&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs.</source>
          <target state="translated">Используйте данный &amp;lt;msg&amp;gt; как сообщение фиксации. Если указано несколько параметров &lt;code&gt;-m&lt;/code&gt; , их значения объединяются в отдельные абзацы.</target>
        </trans-unit>
        <trans-unit id="be3b9715415e0357d3d87d01aa8f812c871fb1e1" translate="yes" xml:space="preserve">
          <source>Use the given &lt;code&gt;msg&lt;/code&gt; as the commit message. This option disables the &lt;code&gt;--edit&lt;/code&gt; option.</source>
          <target state="translated">Используйте данное &lt;code&gt;msg&lt;/code&gt; как сообщение фиксации. Этот параметр отключает параметр &lt;code&gt;--edit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43103d879018fa15a44cefa9b3baec705e25165c" translate="yes" xml:space="preserve">
          <source>Use the given config file instead of the one specified by GIT_CONFIG.</source>
          <target state="translated">Используйте данный конфигурационный файл вместо указанного GIT_CONFIG.</target>
        </trans-unit>
        <trans-unit id="6d07104b51b424f44cb0346a9ac8f4116b0f06d7" translate="yes" xml:space="preserve">
          <source>Use the given exclude pattern in addition to the standard ignore rules (see &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;).</source>
          <target state="translated">Используйте данный шаблон исключения в дополнение к стандартным правилам игнорирования (см. &lt;a href=&quot;gitignore&quot;&gt;Gitignore [5]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9a12bbd112f0b48f03fdbbbb0b9c68268bedd960" translate="yes" xml:space="preserve">
          <source>Use the given merge strategy. If there is no &lt;code&gt;-s&lt;/code&gt; option &lt;code&gt;git merge-recursive&lt;/code&gt; is used instead. This implies --merge.</source>
          <target state="translated">Используйте данную стратегию слияния. Если нет опции &lt;code&gt;-s&lt;/code&gt; , вместо нее используется &lt;code&gt;git merge-recursive&lt;/code&gt; . Это подразумевает --merge.</target>
        </trans-unit>
        <trans-unit id="aad779cdebc63bc4b25eb19e46a7b214101b70ea" translate="yes" xml:space="preserve">
          <source>Use the given merge strategy. Should only be used once. See the MERGE STRATEGIES section in &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">Используйте данную стратегию слияния. Следует использовать только один раз. См. Подробности в разделе &amp;laquo;СТРАТЕГИИ СЛИЯНИЯ&amp;raquo; в &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d697cccd6049781089822f14d706ae91b43a781" translate="yes" xml:space="preserve">
          <source>Use the given merge strategy; can be supplied more than once to specify them in the order they should be tried. If there is no &lt;code&gt;-s&lt;/code&gt; option, a built-in list of strategies is used instead (&lt;code&gt;git merge-recursive&lt;/code&gt; when merging a single head, &lt;code&gt;git merge-octopus&lt;/code&gt; otherwise).</source>
          <target state="translated">Используйте данную стратегию слияния; может быть предоставлено более одного раза, чтобы указать их в том порядке, в котором они должны использоваться. Если нет опции &lt;code&gt;-s&lt;/code&gt; , вместо этого используется встроенный список стратегий ( &lt;code&gt;git merge-recursive&lt;/code&gt; при слиянии одной головы, &lt;code&gt;git merge-octopus&lt;/code&gt; в противном случае).</target>
        </trans-unit>
        <trans-unit id="e15a6801b533c61848133f0481a1499ec359e784" translate="yes" xml:space="preserve">
          <source>Use the given note message (instead of prompting). If multiple &lt;code&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs. Lines starting with &lt;code&gt;#&lt;/code&gt; and empty lines other than a single line between paragraphs will be stripped out.</source>
          <target state="translated">Используйте данное сообщение-заметку (вместо подсказки). Если указано несколько параметров &lt;code&gt;-m&lt;/code&gt; , их значения объединяются в отдельные абзацы. Строки, начинающиеся с символа &lt;code&gt;#&lt;/code&gt; , и пустые строки, отличные от одной строки между абзацами, будут удалены.</target>
        </trans-unit>
        <trans-unit id="2301e57be484e5bf3374c6061960726be52acd3f" translate="yes" xml:space="preserve">
          <source>Use the given tag message (instead of prompting). If multiple &lt;code&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs. Implies &lt;code&gt;-a&lt;/code&gt; if none of &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; is given.</source>
          <target state="translated">Используйте данное сообщение тега (вместо запроса). Если указано несколько параметров &lt;code&gt;-m&lt;/code&gt; , их значения объединяются в отдельные абзацы. Подразумевается &lt;code&gt;-a&lt;/code&gt; , если не &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; ни одно из &lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt; или -u &amp;lt;keyid&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="52a6c166f490dbb0be0d25b65f46015f7e67e623" translate="yes" xml:space="preserve">
          <source>Use the interactive patch selection interface to chose which changes to commit. See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for details.</source>
          <target state="translated">Используйте интерактивный интерфейс выбора патча, чтобы выбрать, какие изменения следует зафиксировать. Подробнее см. &lt;a href=&quot;git-add&quot;&gt;Git-add [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7db128e87ada4e1ec3f3340d8431acfc429f3677" translate="yes" xml:space="preserve">
          <source>Use the merge resolution program specified by &amp;lt;tool&amp;gt;. Valid values include emerge, gvimdiff, kdiff3, meld, vimdiff, and tortoisemerge. Run &lt;code&gt;git mergetool --tool-help&lt;/code&gt; for the list of valid &amp;lt;tool&amp;gt; settings.</source>
          <target state="translated">Используйте программу разрешения слияния, указанную &amp;lt;tool&amp;gt;. Допустимые значения: emerge, gvimdiff, kdiff3, meld, vimdiff и tortoisemerge. Запустите &lt;code&gt;git mergetool --tool-help&lt;/code&gt; , чтобы получить список допустимых настроек &amp;lt;tool&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="047156e36b9d6e8b2155d32a029545b1b026f10e" translate="yes" xml:space="preserve">
          <source>Use the multi-pack-index file to track multiple packfiles using a single index. See &lt;a href=&quot;multi-pack-index&quot;&gt;the multi-pack-index design document&lt;/a&gt;.</source>
          <target state="translated">Используйте файл multi-pack-index для отслеживания нескольких файлов pack-файлов с помощью одного индекса. См. &lt;a href=&quot;multi-pack-index&quot;&gt;Проектный документ с несколькими индексами&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bac5b4ccbcc396e691c8ba8f2af89d4f60c9270" translate="yes" xml:space="preserve">
          <source>Use the same output mode as &lt;a href=&quot;git-annotate&quot;&gt;git-annotate[1]&lt;/a&gt; (Default: off).</source>
          <target state="translated">Используйте тот же режим вывода, что и &lt;a href=&quot;git-annotate&quot;&gt;git-annotate [1]&lt;/a&gt; (по умолчанию: выключено).</target>
        </trans-unit>
        <trans-unit id="0ed67a2ecd3a9ee96ae4cd7dcb45f48a2cf84bf4" translate="yes" xml:space="preserve">
          <source>Use the selected commit message without launching an editor. For example, &lt;code&gt;git commit --amend --no-edit&lt;/code&gt; amends a commit without changing its commit message.</source>
          <target state="translated">Использовать выбранное сообщение фиксации без запуска редактора. Например, &lt;code&gt;git commit --amend --no-edit&lt;/code&gt; изменяет коммит, не изменяя его сообщение о фиксации.</target>
        </trans-unit>
        <trans-unit id="8e65c034e7da87d64be153e02b39a8529bd16f67" translate="yes" xml:space="preserve">
          <source>Use the source ref that matches &lt;code&gt;master&lt;/code&gt; (e.g. &lt;code&gt;refs/heads/master&lt;/code&gt;) to update the ref that matches &lt;code&gt;satellite/master&lt;/code&gt; (most probably &lt;code&gt;refs/remotes/satellite/master&lt;/code&gt;) in the &lt;code&gt;mothership&lt;/code&gt; repository; do the same for &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;satellite/dev&lt;/code&gt;.</source>
          <target state="translated">Используйте ссылку на источник, которая соответствует &lt;code&gt;master&lt;/code&gt; (например, &lt;code&gt;refs/heads/master&lt;/code&gt; ), чтобы обновить ссылку, которая соответствует &lt;code&gt;satellite/master&lt;/code&gt; (наиболее вероятно, &lt;code&gt;refs/remotes/satellite/master&lt;/code&gt; ) в репозитории &lt;code&gt;mothership&lt;/code&gt; платы; сделайте то же самое для &lt;code&gt;dev&lt;/code&gt; и &lt;code&gt;satellite/dev&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
