<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="7f65f9810b42bc29820c9b18c26064984a955e8e" translate="yes" xml:space="preserve">
          <source>As with the case to record your own changes, you can use &lt;code&gt;-a&lt;/code&gt; option to save typing. One difference is that during a merge resolution, you cannot use &lt;code&gt;git commit&lt;/code&gt; with pathnames to alter the order the changes are committed, because the merge should be recorded as a single commit. In fact, the command refuses to run when given pathnames (but see &lt;code&gt;-i&lt;/code&gt; option).</source>
          <target state="translated">Как и в случае с записью собственных изменений, вы можете использовать параметр &lt;code&gt;-a&lt;/code&gt; , чтобы сохранить ввод. Одно отличие состоит в том, что во время разрешения слияния вы не можете использовать &lt;code&gt;git commit&lt;/code&gt; с именами путей для изменения порядка фиксации изменений, потому что слияние должно быть записано как одно коммит. Фактически, команда отказывается запускаться при заданных путях (но см. &lt;code&gt;-i&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b22aaf02415c185eaf98c36bda4bb6f6375b4276" translate="yes" xml:space="preserve">
          <source>As yet another alternative, the &lt;a href=&quot;git-show-branch&quot;&gt;git-show-branch[1]&lt;/a&gt; command lists the commits reachable from its arguments with a display on the left-hand side that indicates which arguments that commit is reachable from. So, if you run something like</source>
          <target state="translated">В качестве еще одной альтернативы команда &lt;a href=&quot;git-show-branch&quot;&gt;git-show-branch [1]&lt;/a&gt; перечисляет коммиты, доступные по ее аргументам, с отображением в левой части, которое указывает, из каких аргументов, для которых доступна фиксация. Итак, если вы запустите что-то вроде</target>
        </trans-unit>
        <trans-unit id="ab55ac3413eea0cf585d324d891a90eb1c44a9c7" translate="yes" xml:space="preserve">
          <source>As you can see, a commit is defined by:</source>
          <target state="translated">Как видите,коммит определяется:</target>
        </trans-unit>
        <trans-unit id="6777c5e47b1bbdf59716ff3b0a0a681c16313dcb" translate="yes" xml:space="preserve">
          <source>As you can see, a commit shows who made the latest change, what they did, and why.</source>
          <target state="translated">Как видите,коммит показывает,кто внес последние изменения,что они сделали и почему.</target>
        </trans-unit>
        <trans-unit id="a0f1d03e1580f855020045fffe8e5647f3b9c420" translate="yes" xml:space="preserve">
          <source>As you can see, a tree object contains a list of entries, each with a mode, object type, SHA-1 name, and name, sorted by name. It represents the contents of a single directory tree.</source>
          <target state="translated">Как видите,древовидный объект содержит список записей,каждая из которых имеет режим,тип объекта,имя SHA-1 и имя,отсортированное по имени.Он представляет собой содержимое одного дерева каталогов.</target>
        </trans-unit>
        <trans-unit id="ec8afd8db14f6b2c4703101087783a19cada8ee5" translate="yes" xml:space="preserve">
          <source>As you can see, this tells us which branch we&amp;rsquo;re currently on, and it tells us this by naming a file under the .git directory, which itself contains a SHA-1 name referring to a commit object, which we can examine with cat-file:</source>
          <target state="translated">Как видите, это говорит нам, в какой ветке мы сейчас находимся, и это говорит нам об этом, называя файл в каталоге .git, который сам содержит имя SHA-1, относящееся к объекту фиксации, который мы можем изучить с помощью кот-файл:</target>
        </trans-unit>
        <trans-unit id="7345319011443769ac795138deb4faa77176b52c" translate="yes" xml:space="preserve">
          <source>Ask git-credential to give us a username and password for this description. This is done by running &lt;code&gt;git credential fill&lt;/code&gt;, feeding the description from step (1) to its standard input. The complete credential description (including the credential per se, i.e. the login and password) will be produced on standard output, like:</source>
          <target state="translated">Попросите git-credential дать нам имя пользователя и пароль для этого описания. Для этого нужно запустить &lt;code&gt;git credential fill&lt;/code&gt; , передав описание с шага (1) на стандартный ввод. Полное описание учетных данных (включая учетные данные как таковые, то есть логин и пароль) будет выведено на стандартный вывод, например:</target>
        </trans-unit>
        <trans-unit id="353866df360a6151213ae26714b0b27ee93959c9" translate="yes" xml:space="preserve">
          <source>Ask the user to confirm that a patch set should actually be sent to SVN. For each patch, one may answer &quot;yes&quot; (accept this patch), &quot;no&quot; (discard this patch), &quot;all&quot; (accept all patches), or &quot;quit&quot;.</source>
          <target state="translated">Попросите пользователя подтвердить,что набор патчей действительно должен быть отправлен в SVN.На каждый патч можно ответить &quot;да&quot; (принять этот патч),&quot;нет&quot; (отбросить этот патч),&quot;все&quot; (принять все патчи)или &quot;уйти&quot;.</target>
        </trans-unit>
        <trans-unit id="74885a8f797e3dd4d74ed362a01fa5f6e719e159" translate="yes" xml:space="preserve">
          <source>Associating multiple Arch branches to one Git branch is possible; the result will make the most sense only if no commits are made to the first branch, after the second branch is created. Still, this is useful to convert Arch repositories that had been rotated periodically.</source>
          <target state="translated">Возможна привязка нескольких ветвей Arch к одной ветке Git'а;результат будет иметь наибольший смысл только в том случае,если не будут сделаны коммиты в первой ветке,после того,как будет создана вторая ветка.Тем не менее,это полезно для преобразования Arch-репозиториев,которые периодически вращались.</target>
        </trans-unit>
        <trans-unit id="3fae130157899ed03a40dd2250aa34f89aff67c5" translate="yes" xml:space="preserve">
          <source>Assume the following history exists and the current branch is &quot;&lt;code&gt;master&lt;/code&gt;&quot;:</source>
          <target state="translated">Предположим, что существует следующая история и текущая ветвь является &amp;laquo; &lt;code&gt;master&lt;/code&gt; &amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="faa8cbaa5281b0af933b5133552cbab39bea906e" translate="yes" xml:space="preserve">
          <source>Assume the following history exists and the current branch is &quot;topic&quot;:</source>
          <target state="translated">Предположим,что следующая история существует,а текущая ветка является &quot;темой&quot;:</target>
        </trans-unit>
        <trans-unit id="3cd2aff8a20d9db05868ff5d3b79174e0521391d" translate="yes" xml:space="preserve">
          <source>Assume the output looks like this:</source>
          <target state="translated">Предположим,что результат выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="97613cb38d31b0bbed31ce68ca2dcace37e030ff" translate="yes" xml:space="preserve">
          <source>Assume you have a tarball project.tar.gz with your initial work. You can place it under Git revision control as follows.</source>
          <target state="translated">Предположим,у вас есть проект tarball.tar.gz с вашей первоначальной работой.Вы можете поместить его под контроль ревизий Git'а следующим образом.</target>
        </trans-unit>
        <trans-unit id="679231bf1096aa234d1b1628f62bacea198b2922" translate="yes" xml:space="preserve">
          <source>Assume you have local changes in &quot;master&quot;, but you need to refetch &quot;r2&quot;.</source>
          <target state="translated">Предположим,что у вас есть локальные изменения в &quot;мастере&quot;,но вам нужно перезагрузить &quot;r2&quot;.</target>
        </trans-unit>
        <trans-unit id="be7f011565f1c258dd11dc44833bb09a98dcf45f" translate="yes" xml:space="preserve">
          <source>Assume you want to transfer the history from a repository R1 on machine A to another repository R2 on machine B. For whatever reason, direct connection between A and B is not allowed, but we can move data from A to B via some mechanism (CD, email, etc.). We want to update R2 with development made on the branch master in R1.</source>
          <target state="translated">Предположим,вы хотите перенести историю из репозитория R1 на машине A в другой репозиторий R2 на машине B.По какой-то причине прямая связь между A и B не разрешена,но мы можем перенести данные из A в B с помощью какого-нибудь механизма (CD,электронная почта и т.д.).Мы хотим обновить R2 с помощью разработки,сделанной на мастере ветки в R1.</target>
        </trans-unit>
        <trans-unit id="2183deafca588db3e5f3e1c7cf0d56a53d10c987" translate="yes" xml:space="preserve">
          <source>Assume your existing repo is at /home/alice/myproject. Create a new &quot;bare&quot; repository (a repository without a working tree) and fetch your project into it:</source>
          <target state="translated">Предположим,что ваше существующее репо находится в /домашнем/ледяном/гипроекте.Создайте новый &quot;голый&quot; репозиторий (репозиторий без рабочего дерева)и загрузите в него свой проект:</target>
        </trans-unit>
        <trans-unit id="28e522eb4dcb1a9410bd8273e0683d16ad9d1887" translate="yes" xml:space="preserve">
          <source>Assume your personal repository is in the directory &lt;code&gt;~/proj&lt;/code&gt;. We first create a new clone of the repository and tell &lt;code&gt;git daemon&lt;/code&gt; that it is meant to be public:</source>
          <target state="translated">Предположим, ваш личный репозиторий находится в каталоге &lt;code&gt;~/proj&lt;/code&gt; . Сначала мы создаем новый клон репозитория и &lt;code&gt;git daemon&lt;/code&gt; что он должен быть общедоступным:</target>
        </trans-unit>
        <trans-unit id="2f08c00864cc26377518c6e9b880162905e8d349" translate="yes" xml:space="preserve">
          <source>Assuming that gitweb is installed to &lt;code&gt;/var/www/perl&lt;/code&gt;, the following Apache configuration (for mod_perl 2.x) is suitable.</source>
          <target state="translated">Предполагая, что gitweb установлен в &lt;code&gt;/var/www/perl&lt;/code&gt; , подходит следующая конфигурация Apache (для mod_perl 2.x).</target>
        </trans-unit>
        <trans-unit id="f21b72294adb0bdfa94f142e28bd7e66d94e6e2e" translate="yes" xml:space="preserve">
          <source>Assuming the submodule has a Git directory at &lt;code&gt;$GIT_DIR/modules/foo/&lt;/code&gt; and a working directory at &lt;code&gt;path/to/bar/&lt;/code&gt;, the superproject tracks the submodule via a &lt;code&gt;gitlink&lt;/code&gt; entry in the tree at &lt;code&gt;path/to/bar&lt;/code&gt; and an entry in its &lt;code&gt;.gitmodules&lt;/code&gt; file (see &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;) of the form &lt;code&gt;submodule.foo.path = path/to/bar&lt;/code&gt;.</source>
          <target state="translated">Предполагая, что подмодуль имеет каталог Git в &lt;code&gt;$GIT_DIR/modules/foo/&lt;/code&gt; и рабочий каталог по &lt;code&gt;path/to/bar/&lt;/code&gt; , суперпроект отслеживает подмодуль через запись &lt;code&gt;gitlink&lt;/code&gt; в дереве по &lt;code&gt;path/to/bar&lt;/code&gt; и запись в его &lt;code&gt;.gitmodules&lt;/code&gt; файл (см. &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; ) вида &lt;code&gt;submodule.foo.path = path/to/bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60da90e959e19c4160d1646a608d2bc5b787c602" translate="yes" xml:space="preserve">
          <source>Assuming you are using the merge approach discussed above, when you are releasing your project you will need to do some additional branch management work.</source>
          <target state="translated">Если предположить,что вы используете подход слияния,описанный выше,то при выпуске проекта вам понадобится выполнить некоторые дополнительные работы по управлению филиалами.</target>
        </trans-unit>
        <trans-unit id="1388e5cd4892a287239160f51404821c63ca478d" translate="yes" xml:space="preserve">
          <source>At any point you can view the history of your changes using</source>
          <target state="translated">В любой момент вы можете просмотреть историю ваших изменений,используя</target>
        </trans-unit>
        <trans-unit id="e40d41f48140a6f9c8ed7743f53a14cc49f4d4d6" translate="yes" xml:space="preserve">
          <source>At any point you may use the &lt;code&gt;--abort&lt;/code&gt; option to abort this process and return mywork to the state it had before you started the rebase:</source>
          <target state="translated">В любой момент вы можете использовать параметр &lt;code&gt;--abort&lt;/code&gt; , чтобы прервать этот процесс и вернуть мою работу в состояние, которое было до того, как вы начали перебазирование:</target>
        </trans-unit>
        <trans-unit id="21e6c111ed6dea301f6219c21f04088d951095f1" translate="yes" xml:space="preserve">
          <source>At any time, we can create a new commit using &lt;code&gt;git commit&lt;/code&gt; (without the &quot;-a&quot; option), and verify that the state committed only includes the changes stored in the index file, not the additional change that is still only in our working tree:</source>
          <target state="translated">В любое время мы можем создать новую фиксацию с помощью &lt;code&gt;git commit&lt;/code&gt; (без параметра &amp;laquo;-a&amp;raquo;) и убедиться, что зафиксированное состояние включает только изменения, хранящиеся в индексном файле, а не дополнительное изменение, которое все еще находится только в нашей рабочей дерево:</target>
        </trans-unit>
        <trans-unit id="c62227c162304e2658e4b654489602aed406e046" translate="yes" xml:space="preserve">
          <source>At the beginning, the content of the index will be identical to that of the HEAD. The command &lt;code&gt;git diff --cached&lt;/code&gt;, which shows the difference between the HEAD and the index, should therefore produce no output at that point.</source>
          <target state="translated">Вначале содержание указателя будет идентично содержанию HEAD. Таким образом, команда &lt;code&gt;git diff --cached&lt;/code&gt; , показывающая разницу между HEAD и индексом, не должна выводить никаких результатов.</target>
        </trans-unit>
        <trans-unit id="8edc58a934b3ed21297a24f7c0434615621064c8" translate="yes" xml:space="preserve">
          <source>At this point the index file still has all the WIP changes you committed as &lt;code&gt;snapshot WIP&lt;/code&gt;. This updates the index to show your WIP files as uncommitted.</source>
          <target state="translated">На этом этапе индексный файл все еще содержит все изменения WIP, которые вы зафиксировали как &lt;code&gt;snapshot WIP&lt;/code&gt; . Это обновит индекс, чтобы показать ваши файлы WIP как незафиксированные.</target>
        </trans-unit>
        <trans-unit id="6fb30ce8f93c559deaf24b4ad05d6dda3c1a1ac8" translate="yes" xml:space="preserve">
          <source>At this point there are basically 2 ways to drive the search. It can be driven manually by the user or it can be driven automatically by a script or a command.</source>
          <target state="translated">На данный момент существует,по сути,2 способа управления поиском.Он может управляться вручную пользователем или автоматически с помощью скрипта или команды.</target>
        </trans-unit>
        <trans-unit id="73d7e84e91592f3766bf21a35fce90d676b02b60" translate="yes" xml:space="preserve">
          <source>At this point we can see what the commit does, check it out (if it&amp;rsquo;s not already checked out) or tinker with it, for example:</source>
          <target state="translated">На этом этапе мы можем увидеть, что делает коммит, проверить его (если он еще не получен) или поработать с ним, например:</target>
        </trans-unit>
        <trans-unit id="9821aa659e4d6623e87210d9f79f8fb8048ff5ce" translate="yes" xml:space="preserve">
          <source>At this point you could delete the experimental branch with</source>
          <target state="translated">На данный момент вы можете удалить экспериментальную ветку с помощью кнопки</target>
        </trans-unit>
        <trans-unit id="9f18a8a14c3813ef07a4e4179ae90618a19f07d0" translate="yes" xml:space="preserve">
          <source>At this point you should know everything necessary to read the man pages for any of the git commands; one good place to start would be with the commands mentioned in &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt;. You should be able to find any unknown jargon in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">На этом этапе вы должны знать все необходимое, чтобы читать страницы руководства по любой из команд git; лучше всего начать с команд, упомянутых в &lt;a href=&quot;giteveryday&quot;&gt;giteveryday [7]&lt;/a&gt; . Вы должны найти любой неизвестный жаргон в &lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="870751f448af1f37fa82b626c9d940e8d540a997" translate="yes" xml:space="preserve">
          <source>At this point, &lt;code&gt;git diff&lt;/code&gt; shows the changes cleanly merged as in the previous example, as well as the changes in the conflicted files. Edit and resolve the conflict and mark it resolved with &lt;code&gt;git add&lt;/code&gt; as usual:</source>
          <target state="translated">На этом этапе &lt;code&gt;git diff&lt;/code&gt; показывает изменения, полностью объединенные, как в предыдущем примере, а также изменения в конфликтующих файлах. Отредактируйте и разрешите конфликт и отметьте его разрешенным с помощью &lt;code&gt;git add&lt;/code&gt; как обычно:</target>
        </trans-unit>
        <trans-unit id="1c8e0f856e1b344e50a8f9f6370e6aeaf4be3455" translate="yes" xml:space="preserve">
          <source>At this point, you could use &lt;code&gt;pull&lt;/code&gt; to merge your changes back in; the result would create a new merge commit, like this:</source>
          <target state="translated">На этом этапе вы можете использовать &lt;code&gt;pull&lt;/code&gt; для повторного объединения ваших изменений; в результате будет создан новый коммит слияния, например:</target>
        </trans-unit>
        <trans-unit id="0cd76265a60d161772d69d7db5cee25c535ce122" translate="yes" xml:space="preserve">
          <source>At this time, the &lt;code&gt;merge&lt;/code&gt; command will &lt;strong&gt;always&lt;/strong&gt; use the &lt;code&gt;recursive&lt;/code&gt; merge strategy for regular merges, and &lt;code&gt;octopus&lt;/code&gt; for octopus merges, with no way to choose a different one. To work around this, an &lt;code&gt;exec&lt;/code&gt; command can be used to call &lt;code&gt;git merge&lt;/code&gt; explicitly, using the fact that the labels are worktree-local refs (the ref &lt;code&gt;refs/rewritten/onto&lt;/code&gt; would correspond to the label &lt;code&gt;onto&lt;/code&gt;, for example).</source>
          <target state="translated">В это время команда &lt;code&gt;merge&lt;/code&gt; &lt;strong&gt;всегда&lt;/strong&gt; будет использовать &lt;code&gt;recursive&lt;/code&gt; стратегию слияния для обычных слияний и &lt;code&gt;octopus&lt;/code&gt; для слияний осьминога, без возможности выбрать другую. Чтобы обойти это, можно использовать команду &lt;code&gt;exec&lt;/code&gt; для явного вызова &lt;code&gt;git merge&lt;/code&gt; , используя тот факт, что метки являются локальными для рабочего дерева ссылками (например, ref &lt;code&gt;refs/rewritten/onto&lt;/code&gt; rewritten / on будет соответствовать метке &lt;code&gt;onto&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c05aeaaa9fcd28f51dfdd6a6420e663787cde8e1" translate="yes" xml:space="preserve">
          <source>Attempt authentication without seeking a username or password. This can be used to attempt GSS-Negotiate authentication without specifying a username in the URL, as libcurl normally requires a username for authentication.</source>
          <target state="translated">Попытка аутентификации без поиска имени пользователя или пароля.Это может быть использовано для попытки GSS-Negotiate аутентификации без указания имени пользователя в URL,так как libcurl обычно требует имя пользователя для аутентификации.</target>
        </trans-unit>
        <trans-unit id="b7ef94beb2ddaab144a55b166c213b4001e85f5a" translate="yes" xml:space="preserve">
          <source>Attempt to auto-register archives at &lt;code&gt;http://mirrors.sourcecontrol.net&lt;/code&gt; This is particularly useful with the -D option.</source>
          <target state="translated">Попытка автоматически зарегистрировать архивы на &lt;code&gt;http://mirrors.sourcecontrol.net&lt;/code&gt; Это особенно полезно с параметром -D.</target>
        </trans-unit>
        <trans-unit id="7d9e2779fbfa7bc1835b11ad0c4ebabfce18ac06" translate="yes" xml:space="preserve">
          <source>Attempt to detect merges based on the commit message with a custom regex. It can be used with &lt;code&gt;-m&lt;/code&gt; to enable the default regexes as well. You must escape forward slashes.</source>
          <target state="translated">Попытка обнаружить слияния на основе сообщения фиксации с настраиваемым регулярным выражением. Его можно использовать с &lt;code&gt;-m&lt;/code&gt; , чтобы также включить регулярные выражения по умолчанию. Вы должны избегать косой черты.</target>
        </trans-unit>
        <trans-unit id="b8801ab881aa4eb66128b4665e3908eb4d237716" translate="yes" xml:space="preserve">
          <source>Attempt to detect merges based on the commit message. This option will enable default regexes that try to capture the source branch name from the commit message.</source>
          <target state="translated">Попытка обнаружить слияния на основе сообщения о фиксации.Эта опция включает регексы по умолчанию,которые пытаются захватить имя ветки-источника из сообщения фиксации.</target>
        </trans-unit>
        <trans-unit id="8811bcf98c754b208d76412300be8b3f7a7a0962" translate="yes" xml:space="preserve">
          <source>Attempt to use AUTH SSL/TLS and encrypted data transfers when connecting via regular FTP protocol. This might be needed if the FTP server requires it for security reasons or you wish to connect securely whenever remote FTP server supports it. Default is false since it might trigger certificate verification errors on misconfigured servers.</source>
          <target state="translated">Попытайтесь использовать AUTH SSL/TLS и зашифрованную передачу данных при подключении по обычному протоколу FTP.Это может понадобиться,если FTP-сервер требует этого из соображений безопасности или вы хотите безопасно подключаться всякий раз,когда удаленный FTP-сервер поддерживает это.По умолчанию это ложь,так как она может вызвать ошибки при проверке сертификата на неправильно настроенных серверах.</target>
        </trans-unit>
        <trans-unit id="653466560b06acd7928eb1dabc7b9fa724a015d3" translate="yes" xml:space="preserve">
          <source>Attempts to recreate empty directories that core Git cannot track based on information in $GIT_DIR/svn/&amp;lt;refname&amp;gt;/unhandled.log files. Empty directories are automatically recreated when using &quot;git svn clone&quot; and &quot;git svn rebase&quot;, so &quot;mkdirs&quot; is intended for use after commands like &quot;git checkout&quot; or &quot;git reset&quot;. (See the svn-remote.&amp;lt;name&amp;gt;.automkdirs config file option for more information.)</source>
          <target state="translated">Попытки воссоздать пустые каталоги, которые ядро ​​Git не может отслеживать на основе информации в файлах $ GIT_DIR / svn / &amp;lt;refname&amp;gt; /unhandled.log. Пустые каталоги автоматически воссоздаются при использовании &amp;laquo;git svn clone&amp;raquo; и &amp;laquo;git svn rebase&amp;raquo;, поэтому &amp;laquo;mkdirs&amp;raquo; предназначен для использования после таких команд, как &amp;laquo;git checkout&amp;raquo; или &amp;laquo;git reset&amp;raquo;. (Для получения дополнительной информации см. Параметр файла конфигурации svn-remote. &amp;lt;name&amp;gt; .automkdirs.)</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="6945a05135c86ba329a2113c1a6c328943460d7a" translate="yes" xml:space="preserve">
          <source>Augment the output of all queried config options with the origin type (file, standard input, blob, command line) and the actual origin (config file path, ref, or blob id if applicable).</source>
          <target state="translated">Дополнение вывода всех опрашиваемых конфигурационных опций с типом источника (файл,стандартный вход,блок,командная строка)и фактическим происхождением (путь к конфигурационному файлу,ссылка или blob id,если применимо).</target>
        </trans-unit>
        <trans-unit id="d01bdb4337dbc4feb334d71a4ce4b2957ce12b06" translate="yes" xml:space="preserve">
          <source>Author and committer information is taken from the following environment variables, if set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">Authors</target>
        </trans-unit>
        <trans-unit id="3a3b18a78fb302a466d9706ed638e25ca72e2b20" translate="yes" xml:space="preserve">
          <source>Automatically bisect a broken build between v1.2 and HEAD:</source>
          <target state="translated">Автоматически биссектрис ломаного билда между v1.2 и HEAD:</target>
        </trans-unit>
        <trans-unit id="b961e5ffc1b4a2335ddafbf9005a05ec9394a9ac" translate="yes" xml:space="preserve">
          <source>Automatically bisect a broken test case:</source>
          <target state="translated">Автоматически биссектрис сломанного тестового корпуса:</target>
        </trans-unit>
        <trans-unit id="efbd5b3ba20268a44c57d801ed284c730cc6da62" translate="yes" xml:space="preserve">
          <source>Automatically bisect a test failure between origin and HEAD:</source>
          <target state="translated">Автоматически биссектрис ошибки теста между оригиналом и HEAD:</target>
        </trans-unit>
        <trans-unit id="305f7f7499890d95ab081f6ff6a94a43fd8f7472" translate="yes" xml:space="preserve">
          <source>Automatically bisect with temporary modifications (hot-fix):</source>
          <target state="translated">Автоматический биссектрис с временными изменениями (горячее исправление):</target>
        </trans-unit>
        <trans-unit id="f3ce497b64c12f23e2601126336fc2efac214445" translate="yes" xml:space="preserve">
          <source>Automatically correct and execute mistyped commands after waiting for the given number of deciseconds (0.1 sec). If more than one command can be deduced from the entered text, nothing will be executed. If the value of this option is negative, the corrected command will be executed immediately. If the value is 0 - the command will be just shown but not executed. This is the default.</source>
          <target state="translated">Автоматически исправлять и выполнять ошибочные команды после ожидания заданного количества децисекунд (0.1 секунды).Если из введенного текста можно вывести несколько команд,то ничего не будет выполнено.Если значение этой опции отрицательное,то исправленная команда будет выполнена немедленно.Если значение 0-команда будет просто показана,но не выполнена.По умолчанию это значение является значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c95bbf7a5ca8016973d83b1a1be57b0354ee0b3c" translate="yes" xml:space="preserve">
          <source>Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run rebase on a dirty worktree. However, use with care: the final stash application after a successful rebase might result in non-trivial conflicts.</source>
          <target state="translated">Автоматически создайте временную заначку до начала операции и применяйте ее после ее окончания.Это означает,что на грязном рабочем дереве можно запустить rebase.Однако,используйте с осторожностью:окончательное применение тайника после успешного выполнения ребейза может привести к нетривиальным конфликтам.</target>
        </trans-unit>
        <trans-unit id="cdfa0a080ceaba7371e2c4f216b1a9549ed01683" translate="yes" xml:space="preserve">
          <source>Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run the operation on a dirty worktree. However, use with care: the final stash application after a successful merge might result in non-trivial conflicts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172ed809f35e71e5eeb8f45359fa6e87d4adb464" translate="yes" xml:space="preserve">
          <source>Automatically enter the &lt;code&gt;Amend Last Commit&lt;/code&gt; mode of the interface.</source>
          <target state="translated">Автоматический &lt;code&gt;Amend Last Commit&lt;/code&gt; режим изменения последней фиксации интерфейса.</target>
        </trans-unit>
        <trans-unit id="ea4a15096a50442dde0b46a87fa45d92f2d785b9" translate="yes" xml:space="preserve">
          <source>Automatically reschedule &lt;code&gt;exec&lt;/code&gt; commands that failed. This only makes sense in interactive mode (or when an &lt;code&gt;--exec&lt;/code&gt; option was provided).</source>
          <target state="translated">Автоматически перепланировать &lt;code&gt;exec&lt;/code&gt; команды , которые не удалось. Это имеет смысл только в интерактивном режиме (или когда была &lt;code&gt;--exec&lt;/code&gt; опция --exec ).</target>
        </trans-unit>
        <trans-unit id="49d8a969b318bfe4bd71c313d20f34515eed00b4" translate="yes" xml:space="preserve">
          <source>Automatically reschedule &lt;code&gt;exec&lt;/code&gt; commands that failed. This only makes sense in interactive mode (or when an &lt;code&gt;--exec&lt;/code&gt; option was provided). This is the same as specifying the &lt;code&gt;--reschedule-failed-exec&lt;/code&gt; option.</source>
          <target state="translated">Автоматически перепланировать &lt;code&gt;exec&lt;/code&gt; команды , которые не удалось. Это имеет смысл только в интерактивном режиме (или когда была &lt;code&gt;--exec&lt;/code&gt; опция --exec ). Это то же самое, что указать параметр &lt;code&gt;--reschedule-failed-exec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ac3fef9b72ebf093fec8697b2ecc321af38b99" translate="yes" xml:space="preserve">
          <source>Automating</source>
          <target state="translated">Automating</target>
        </trans-unit>
        <trans-unit id="91b5703f47ead0e97d542b1a3caaad3f90e51a85" translate="yes" xml:space="preserve">
          <source>Avatar support. When this feature is enabled, views such as &quot;shortlog&quot; or &quot;commit&quot; will display an avatar associated with the email of each committer and author.</source>
          <target state="translated">Поддержка Аватара.Когда эта функция включена,такие просмотры,как &quot;shortlog&quot; или &quot;commit&quot; будут отображать аватар,связанный с электронной почтой каждого коммиттера и автора.</target>
        </trans-unit>
        <trans-unit id="c6d2705a42ecaf3f83b93f2bb10c67222bc9051b" translate="yes" xml:space="preserve">
          <source>Avoid using these constructs, or do so with extreme caution.</source>
          <target state="translated">Избегайте использования этих конструкций или делайте это с крайней осторожностью.</target>
        </trans-unit>
        <trans-unit id="58d07623af97c330a561d59f75b429cfa3bf0d0e" translate="yes" xml:space="preserve">
          <source>Avoiding bug prone merges</source>
          <target state="translated">Избежать слияния жуков</target>
        </trans-unit>
        <trans-unit id="e75c3f820aba1b207ca074d2c527699299d0d6c8" translate="yes" xml:space="preserve">
          <source>Avoiding repetition</source>
          <target state="translated">Предотвращение повторения</target>
        </trans-unit>
        <trans-unit id="8c9b7d07bde7114458252fe7c7c79eff561fa5a3" translate="yes" xml:space="preserve">
          <source>Avoiding testing a commit</source>
          <target state="translated">Избегая тестирования коммита</target>
        </trans-unit>
        <trans-unit id="b6679b7397715a4a559a3f90cd5da98012c5192b" translate="yes" xml:space="preserve">
          <source>Avoiding untestable commits</source>
          <target state="translated">Избегание неопровержимых обязательств</target>
        </trans-unit>
        <trans-unit id="c06045f474b6de45fbcfae00e6444b3eed002fd3" translate="yes" xml:space="preserve">
          <source>BBChop is like &lt;code&gt;git bisect&lt;/code&gt; (or equivalent), but works when your bug is intermittent. That is, it works in the presence of false negatives (when a version happens to work this time even though it contains the bug). It assumes that there are no false positives (in principle, the same approach would work, but adding it may be non-trivial).</source>
          <target state="translated">BBChop похож на &lt;code&gt;git bisect&lt;/code&gt; (или эквивалент), но работает, когда ошибка возникает периодически. То есть он работает при наличии ложноотрицательных результатов (когда на этот раз работает версия, даже если она содержит ошибку). Предполагается, что нет ложных срабатываний (в принципе, работает тот же подход, но его добавление может быть нетривиальным).</target>
        </trans-unit>
        <trans-unit id="58da1ac28249462c67af1a7a678bbb84e64c5732" translate="yes" xml:space="preserve">
          <source>Back in the compose window: add whatever other text you wish to the message, complete the addressing and subject fields, and press send.</source>
          <target state="translated">Вернитесь в окно компоновки:добавьте к сообщению любой другой текст,заполните поля адреса и темы и нажмите кнопку отправить.</target>
        </trans-unit>
        <trans-unit id="0e4c8fb0c7c0f01878ae288a3240d6945abd9968" translate="yes" xml:space="preserve">
          <source>Back when this document was originally written, many porcelain commands were shell scripts. For simplicity, it still uses them as examples to illustrate how plumbing is fit together to form the porcelain commands. The source tree includes some of these scripts in contrib/examples/ for reference. Although these are not implemented as shell scripts anymore, the description of what the plumbing layer commands do is still valid.</source>
          <target state="translated">В те времена,когда этот документ был изначально написан,многие команды из фарфора были скриптами оболочки.Для простоты он до сих пор использует их в качестве примеров,чтобы проиллюстрировать,как водопроводная система сочетается друг с другом для формирования фарфоровых команд.Дерево исходных текстов содержит некоторые из этих сценариев в contrib/examples/для справки.Хотя они больше не реализуются в качестве сценариев оболочки,описание того,что делают команды водопроводного уровня,всё ещё актуально.</target>
        </trans-unit>
        <trans-unit id="3cd5a2617e84a99ed87281238ca40ff62c45eb00" translate="yes" xml:space="preserve">
          <source>Backend extra options</source>
          <target state="translated">Дополнительные опции бэкэнда</target>
        </trans-unit>
        <trans-unit id="68cec68bccaee9cd80346d9802ee1e4fe905591f" translate="yes" xml:space="preserve">
          <source>Backend for fast Git data importers</source>
          <target state="translated">Бэкэнд для быстрых импортеров Git-данных</target>
        </trans-unit>
        <trans-unit id="332ccbbf6a93a641f5828315e15dfb5ba3534887" translate="yes" xml:space="preserve">
          <source>Background refresh</source>
          <target state="translated">Обновление фона</target>
        </trans-unit>
        <trans-unit id="3768e81347249432d7250e290eff2b7dcfb031aa" translate="yes" xml:space="preserve">
          <source>Backwards compatibility with &lt;code&gt;crlf&lt;/code&gt; attribute</source>
          <target state="translated">Обратная совместимость с &lt;code&gt;crlf&lt;/code&gt; атрибутом</target>
        </trans-unit>
        <trans-unit id="0f4f796a2c073cee4b5657a9746bebeb8b591e9a" translate="yes" xml:space="preserve">
          <source>Base URL for relative URLs in pages generated by gitweb, (e.g. &lt;code&gt;$logo&lt;/code&gt;, &lt;code&gt;$favicon&lt;/code&gt;, &lt;code&gt;@stylesheets&lt;/code&gt; if they are relative URLs), needed and used &lt;code&gt;&amp;lt;base href=&quot;$base_url&quot;&amp;gt;&lt;/code&gt; only for URLs with nonempty PATH_INFO. Usually gitweb sets its value correctly, and there is no need to set this variable, e.g. to $my_uri or &quot;/&quot;. See &lt;code&gt;$per_request_config&lt;/code&gt; if you need to override it anyway.</source>
          <target state="translated">Базовый URL-адрес для относительных URL-адресов на страницах, созданных gitweb (например, &lt;code&gt;$logo&lt;/code&gt; , &lt;code&gt;$favicon&lt;/code&gt; , &lt;code&gt;@stylesheets&lt;/code&gt; , если они являются относительными URL-адресами), необходим и используется &lt;code&gt;&amp;lt;base href=&quot;$base_url&quot;&amp;gt;&lt;/code&gt; только для URL-адресов с непустым PATH_INFO. Обычно gitweb устанавливает свое значение правильно, и нет необходимости устанавливать эту переменную, например, в $ my_uri или &quot;/&quot;. См. &lt;code&gt;$per_request_config&lt;/code&gt; если вам все равно нужно его переопределить.</target>
        </trans-unit>
        <trans-unit id="097ac79311bf794decc7505841440135a2fcc1ec" translate="yes" xml:space="preserve">
          <source>Base tree information</source>
          <target state="translated">Информация о базовом дереве</target>
        </trans-unit>
        <trans-unit id="41acf5ab02f1a6facad6c843b7f1be13be76b889" translate="yes" xml:space="preserve">
          <source>Basic Command Messages</source>
          <target state="translated">Основные командные сообщения</target>
        </trans-unit>
        <trans-unit id="32df76cf3cbd146d03819bb90c4b2e01188b5795" translate="yes" xml:space="preserve">
          <source>Basic Snapshotting</source>
          <target state="translated">Базовые снимки</target>
        </trans-unit>
        <trans-unit id="8f3df0ee4c430ab18f213f1998c456e450457574" translate="yes" xml:space="preserve">
          <source>Basic bisect commands: start, bad, good</source>
          <target state="translated">Основные бисектные команды:старт,плохо,хорошо.</target>
        </trans-unit>
        <trans-unit id="4c8d5fdc5db9950cf7bea592d196bad4f803b3fb" translate="yes" xml:space="preserve">
          <source>Basic examples</source>
          <target state="translated">Основные примеры</target>
        </trans-unit>
        <trans-unit id="8edc4390b3f014a72c7bad2082d4af28321b0a0d" translate="yes" xml:space="preserve">
          <source>Basically, the initial version of &lt;code&gt;git log&lt;/code&gt; was a shell script:</source>
          <target state="translated">По сути, первоначальная версия &lt;code&gt;git log&lt;/code&gt; была сценарием оболочки:</target>
        </trans-unit>
        <trans-unit id="434712fddf7623f4187c1faf83b1bb6fa207c805" translate="yes" xml:space="preserve">
          <source>Batch output</source>
          <target state="translated">Пакетный выход</target>
        </trans-unit>
        <trans-unit id="09375d82ef48456f50bfb9b6b51c1eb3256d2719" translate="yes" xml:space="preserve">
          <source>Be a little more verbose and show remote url after name. NOTE: This must be placed between &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;subcommand&lt;/code&gt;.</source>
          <target state="translated">Будьте более подробными и показывайте удаленный URL после имени. ПРИМЕЧАНИЕ: Это должно быть помещено между &lt;code&gt;remote&lt;/code&gt; и &lt;code&gt;subcommand&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05ae4f9773fc15757112e4e005a53743a8b9b6cb" translate="yes" xml:space="preserve">
          <source>Be a little more verbose and show remote url after name. NOTE: This must be placed between &lt;code&gt;remote&lt;/code&gt; and subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c658e70993b255c8802b7997e9b78d1f1aa3285" translate="yes" xml:space="preserve">
          <source>Be aware that commits that the old version of example/master pointed at may be lost, as we saw in the previous section.</source>
          <target state="translated">Имейте в виду,что коммиты,на которые указывает старая версия примера/мастера,могут быть потеряны,как мы видели в предыдущем разделе.</target>
        </trans-unit>
        <trans-unit id="f1a69fc5e5785e6c85861e4893e3a9a94deb0c9c" translate="yes" xml:space="preserve">
          <source>Be careful with that last command: in addition to losing any changes in the working directory, it will also remove all later commits from this branch. If this branch is the only branch containing those commits, they will be lost. Also, don&amp;rsquo;t use &lt;code&gt;git reset&lt;/code&gt; on a publicly-visible branch that other developers pull from, as it will force needless merges on other developers to clean up the history. If you need to undo changes that you have pushed, use &lt;code&gt;git revert&lt;/code&gt; instead.</source>
          <target state="translated">Будьте осторожны с этой последней командой: помимо потери любых изменений в рабочем каталоге, она также удалит все последующие коммиты из этой ветки. Если эта ветка - единственная, содержащая эти коммиты, они будут потеряны. Кроме того, не используйте &lt;code&gt;git reset&lt;/code&gt; в общедоступной ветке, из которой извлекают другие разработчики, так как это заставит других разработчиков выполнять ненужные слияния для очистки истории. Если вам нужно отменить внесенные вами изменения, используйте вместо этого &lt;code&gt;git revert&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a106ab03cbfb468582a31c86875853bbaafe530d" translate="yes" xml:space="preserve">
          <source>Be chatty.</source>
          <target state="translated">Будь болтлив.</target>
        </trans-unit>
        <trans-unit id="0226bfbddcb9791bd20d59aa488cf4bfb67ab797" translate="yes" xml:space="preserve">
          <source>Be more quiet when creating or deleting a branch, suppressing non-error messages.</source>
          <target state="translated">Будьте более тихими при создании или удалении ветки,подавляя сообщения,не содержащие ошибок.</target>
        </trans-unit>
        <trans-unit id="925261c1087472fc24273a6f0433e6dab581a46e" translate="yes" xml:space="preserve">
          <source>Be pedantic (paranoid) when applying patches. Invokes patch with --fuzz=0</source>
          <target state="translated">Будь педантичным (параноиком),когда накладываешь пластыри.Вызывает патч с --fuzz=0.</target>
        </trans-unit>
        <trans-unit id="5a76ff079f12b1a74eb9b1c43645e96dd86361c1" translate="yes" xml:space="preserve">
          <source>Be quiet, only report errors, but not the files that are successfully removed.</source>
          <target state="translated">Будьте спокойны,сообщайте только об ошибках,но не о файлах,которые успешно удалены.</target>
        </trans-unit>
        <trans-unit id="3b0a3e777f7a9dd999ab064af69bac80ddbc5083" translate="yes" xml:space="preserve">
          <source>Be quiet, only report errors. The default behavior is set by the &lt;code&gt;reset.quiet&lt;/code&gt; config option. &lt;code&gt;--quiet&lt;/code&gt; and &lt;code&gt;--no-quiet&lt;/code&gt; will override the default behavior.</source>
          <target state="translated">Молчи, сообщай только об ошибках. Поведение по умолчанию устанавливается &lt;code&gt;reset.quiet&lt;/code&gt; конфигурации reset.quiet . &lt;code&gt;--quiet&lt;/code&gt; и &lt;code&gt;--no-quiet&lt;/code&gt; отменяют поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="4f313b181847f334463e2b9b9cfece6969bdba71" translate="yes" xml:space="preserve">
          <source>Be quiet.</source>
          <target state="translated">Спокойно.</target>
        </trans-unit>
        <trans-unit id="57fac52c9e565c186d12f20b18e356a6357e3a35" translate="yes" xml:space="preserve">
          <source>Be quiet. Implies --no-stat.</source>
          <target state="translated">Помолчи.Смешно-нет-нет-нет.</target>
        </trans-unit>
        <trans-unit id="35516ed1ed9df26f7366465685509e0334c0b48a" translate="yes" xml:space="preserve">
          <source>Be quiet. Only print error messages.</source>
          <target state="translated">Помолчи.Печатайте только сообщения об ошибках.</target>
        </trans-unit>
        <trans-unit id="89978c5e1540e90f998db2cd0eadcb073170d060" translate="yes" xml:space="preserve">
          <source>Be verbose about what is going on, including progress status.</source>
          <target state="translated">Будьте многословны о том,что происходит,в том числе о состоянии прогресса.</target>
        </trans-unit>
        <trans-unit id="4e80f48c004a90076351b14f311e5f6e4c744c6f" translate="yes" xml:space="preserve">
          <source>Be verbose.</source>
          <target state="translated">Будь многословен.</target>
        </trans-unit>
        <trans-unit id="e38a34eb197b14381b23c4e10c689eabe1fdd749" translate="yes" xml:space="preserve">
          <source>Be verbose. Implies --stat.</source>
          <target state="translated">Будь многословен.Смешанные-штат.</target>
        </trans-unit>
        <trans-unit id="d448b8a2b9d0f1627827f1dfcde2eef631321fa0" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;--&lt;/code&gt; disambiguates revisions and paths in some commands, it cannot be used for those commands to separate options and revisions. You can use &lt;code&gt;--end-of-options&lt;/code&gt; for this (it also works for commands that do not distinguish between revisions in paths, in which case it is simply an alias for &lt;code&gt;--&lt;/code&gt;).</source>
          <target state="translated">Поскольку &lt;code&gt;--&lt;/code&gt; устраняет неоднозначность ревизий и путей в некоторых командах, его нельзя использовать для этих команд для разделения опций и ревизий. Вы можете использовать для этого &lt;code&gt;--end-of-options&lt;/code&gt; (он также работает для команд, которые не различают ревизии в путях, и в этом случае это просто псевдоним для &lt;code&gt;--&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ed27c3aa81ab7c3b7b68607b6265fd75466941ef" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;git rebase&lt;/code&gt; replays each commit from the working branch on top of the &amp;lt;upstream&amp;gt; branch using the given strategy, using the &lt;code&gt;ours&lt;/code&gt; strategy simply empties all patches from the &amp;lt;branch&amp;gt;, which makes little sense.</source>
          <target state="translated">Поскольку &lt;code&gt;git rebase&lt;/code&gt; воспроизводит каждую фиксацию из рабочей ветки поверх ветки &amp;lt;upstream&amp;gt;, используя заданную стратегию, использование &lt;code&gt;ours&lt;/code&gt; стратегии просто очищает все патчи из &amp;lt;branch&amp;gt;, что не имеет большого смысла.</target>
        </trans-unit>
        <trans-unit id="611de3be2abb35df567ae0fa30747c7d8e2e7993" translate="yes" xml:space="preserve">
          <source>Because importing commits from other Git repositories is much faster than importing them from p4, a mechanism exists to find p4 changes first in Git remotes. If branches exist under &lt;code&gt;refs/remote/origin/p4&lt;/code&gt;, those will be fetched and used when syncing from p4. This variable can be set to &lt;code&gt;false&lt;/code&gt; to disable this behavior.</source>
          <target state="translated">Поскольку импорт коммитов из других репозиториев Git происходит намного быстрее, чем их импорт из p4, существует механизм, позволяющий сначала находить изменения p4 в пультах Git. Если ветки существуют в &lt;code&gt;refs/remote/origin/p4&lt;/code&gt; , они будут извлечены и использованы при синхронизации с p4. Для этой переменной можно установить значение &lt;code&gt;false&lt;/code&gt; , чтобы отключить такое поведение.</target>
        </trans-unit>
        <trans-unit id="8b27b448c938b73dbdadc78ef0ba4dafccd89967" translate="yes" xml:space="preserve">
          <source>Because of this rule, version bumps should be kept to an absolute minimum. Instead, we generally prefer these strategies:</source>
          <target state="translated">Благодаря этому правилу,шишки версий должны быть сведены к абсолютному минимуму.Вместо этого мы,как правило,предпочитаем такие стратегии:</target>
        </trans-unit>
        <trans-unit id="9d9f1c640b4582c4a49afdb8c70b2833e5da2875" translate="yes" xml:space="preserve">
          <source>Because text conversion can be slow, especially when doing a large number of them with &lt;code&gt;git log -p&lt;/code&gt;, Git provides a mechanism to cache the output and use it in future diffs. To enable caching, set the &quot;cachetextconv&quot; variable in your diff driver&amp;rsquo;s config. For example:</source>
          <target state="translated">Поскольку преобразование текста может быть медленным, особенно при выполнении большого их количества с помощью &lt;code&gt;git log -p&lt;/code&gt; , Git предоставляет механизм для кеширования вывода и использования его в будущих различиях. Чтобы включить кеширование, установите переменную cachetextconv в конфигурации вашего драйвера diff. Например:</target>
        </trans-unit>
        <trans-unit id="0cc6b3eb8dba093f368da6924e1615ce67ee83a2" translate="yes" xml:space="preserve">
          <source>Because this example lets the shell expand the asterisk (i.e. you are listing the files explicitly), it does not consider &lt;code&gt;subdir/git-foo.sh&lt;/code&gt;.</source>
          <target state="translated">Поскольку этот пример позволяет оболочке раскрыть звездочку (т.е. вы явно перечисляете файлы), он не учитывает &lt;code&gt;subdir/git-foo.sh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6959f8959917da0048164f701d2c1653881d1c94" translate="yes" xml:space="preserve">
          <source>Because this example lets the shell expand the asterisk (i.e. you are listing the files explicitly), it does not remove &lt;code&gt;subdir/git-foo.sh&lt;/code&gt;.</source>
          <target state="translated">Поскольку этот пример позволяет оболочке раскрывать звездочку (т.е. вы явно перечисляете файлы), он не удаляет &lt;code&gt;subdir/git-foo.sh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19c5affce108c66b3b01079a5ffc874aa2199c4e" translate="yes" xml:space="preserve">
          <source>Because you&amp;rsquo;re asking for raw output, you&amp;rsquo;ll now get something like</source>
          <target state="translated">Поскольку вы запрашиваете необработанный вывод, теперь вы получите что-то вроде</target>
        </trans-unit>
        <trans-unit id="6c83aee082a9b203ae0a8b1d789ef54ecb5119e2" translate="yes" xml:space="preserve">
          <source>Because your branch did not contain anything more than what had already been merged into the &lt;code&gt;master&lt;/code&gt; branch, the merge operation did not actually do a merge. Instead, it just updated the top of the tree of your branch to that of the &lt;code&gt;master&lt;/code&gt; branch. This is often called &lt;code&gt;fast-forward&lt;/code&gt; merge.</source>
          <target state="translated">Поскольку ваша ветка не содержала ничего, кроме того, что уже было объединено в &lt;code&gt;master&lt;/code&gt; ветвь, операция слияния фактически не выполняла слияние. Вместо этого он просто обновил верхнюю часть дерева вашей ветки до вершины &lt;code&gt;master&lt;/code&gt; ветки. Это часто называют слиянием с &lt;code&gt;fast-forward&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870bf9816d9b0c5ffd88b816d5bee6377c654145" translate="yes" xml:space="preserve">
          <source>Before 2.17, the untracked cache had a bug where replacing a directory with a symlink to another directory could cause it to incorrectly show files tracked by git as untracked. See the &quot;status: add a failing test showing a core.untrackedCache bug&quot; commit to git.git. A workaround for that is (and this might work for other undiscovered bugs in the future):</source>
          <target state="translated">До 2.17 в неотслеживаемом кэше была ошибка,при которой замена каталога на symlink на другой каталог могла привести к тому,что он некорректно отображал файлы,отслеживаемые git'ом,как неотслеживаемые.Смотрите коммит &quot;status:add a fail test showing a core.untrackedCache bug&quot; в git.git.Обходной путь для этого-это (и это может сработать для других не обнаруженных ошибок в будущем):</target>
        </trans-unit>
        <trans-unit id="201415c3562a156d29edac8b78dcea637cbede90" translate="yes" xml:space="preserve">
          <source>Before Git invokes a hook, it changes its working directory to either $GIT_DIR in a bare repository or the root of the working tree in a non-bare repository. An exception are hooks triggered during a push (&lt;code&gt;pre-receive&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;post-receive&lt;/code&gt;, &lt;code&gt;post-update&lt;/code&gt;, &lt;code&gt;push-to-checkout&lt;/code&gt;) which are always executed in $GIT_DIR.</source>
          <target state="translated">Прежде чем Git вызовет ловушку, он изменяет свой рабочий каталог либо на $ GIT_DIR в чистом репозитории, либо на корень рабочего дерева в репозитории, отличном от чистого. Исключением являются перехватчики, запускаемые во время push ( &lt;code&gt;pre-receive&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , &lt;code&gt;post-receive&lt;/code&gt; , &lt;code&gt;post-update&lt;/code&gt; , &lt;code&gt;push-to-checkout&lt;/code&gt; ), которые всегда выполняются в $ GIT_DIR.</target>
        </trans-unit>
        <trans-unit id="5cb683352fd365c05d1a2f3a901dc43ac75f481f" translate="yes" xml:space="preserve">
          <source>Before Git v2.0, the default prefix was &quot;&quot; (no prefix). This meant that SVN-tracking refs were put at &quot;refs/remotes/*&quot;, which is incompatible with how Git&amp;rsquo;s own remote-tracking refs are organized. If you still want the old default, you can get it by passing &lt;code&gt;--prefix &quot;&quot;&lt;/code&gt; on the command line (&lt;code&gt;--prefix=&quot;&quot;&lt;/code&gt; may not work if your Perl&amp;rsquo;s Getopt::Long is &amp;lt; v2.37).</source>
          <target state="translated">До Git v2.0 префиксом по умолчанию был &amp;laquo;&amp;raquo; (без префикса). Это означало, что ссылки для отслеживания SVN были помещены в &quot;refs / remotes / *&quot;, что несовместимо с тем, как организованы собственные ссылки удаленного отслеживания Git. Если вам по-прежнему нужно старое значение по умолчанию, вы можете получить его, передав &lt;code&gt;--prefix &quot;&quot;&lt;/code&gt; в командной строке ( &lt;code&gt;--prefix=&quot;&quot;&lt;/code&gt; может не работать, если Getopt :: Long вашего Perl &amp;lt;v2.37).</target>
        </trans-unit>
        <trans-unit id="c9087c912c36612c549b23a216e2ca49dd6b41fb" translate="yes" xml:space="preserve">
          <source>Before any patches are applied, ORIG_HEAD is set to the tip of the current branch. This is useful if you have problems with multiple commits, like running &lt;code&gt;git am&lt;/code&gt; on the wrong branch or an error in the commits that is more easily fixed by changing the mailbox (e.g. errors in the &quot;From:&quot; lines).</source>
          <target state="translated">Перед применением каких-либо патчей ORIG_HEAD устанавливается в конец текущей ветви. Это полезно, если у вас есть проблемы с несколькими коммитами, например, с запуском &lt;code&gt;git am&lt;/code&gt; в неправильной ветке или ошибкой в ​​коммитах, которую легче исправить, изменив почтовый ящик (например, ошибки в строках &amp;laquo;От:&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="21c90195abdd4404631a1dbe99e365dc5749da75" translate="yes" xml:space="preserve">
          <source>Before any ref is updated, if $GIT_DIR/hooks/pre-receive file exists and is executable, it will be invoked once with no parameters. The standard input of the hook will be one line per ref to be updated:</source>
          <target state="translated">Перед обновлением любой ссылки,если файл $GIT_DIR/hooks/pre-receive существует и является исполняемым,он будет вызван один раз без параметров.Стандартным входным параметром крючка будет одна строка на каждую обновляемую ссылку:</target>
        </trans-unit>
        <trans-unit id="add64b4c118b3f9ba1a8f5777c12299edaee08fe" translate="yes" xml:space="preserve">
          <source>Before applying outside changes, you should get your own work in good shape and committed locally, so it will not be clobbered if there are conflicts. See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt; will stop without doing anything when local uncommitted changes overlap with files that &lt;code&gt;git pull&lt;/code&gt;/&lt;code&gt;git merge&lt;/code&gt; may need to update.</source>
          <target state="translated">Перед применением внешних изменений вы должны привести свою собственную работу в хорошее состояние и зафиксировать локально, чтобы она не была затерта в случае конфликтов. См. Также &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; . &lt;code&gt;git pull&lt;/code&gt; и &lt;code&gt;git merge&lt;/code&gt; останутся без каких-либо действий, когда локальные незафиксированные изменения перекрываются с файлами, которые, возможно, потребуется обновить с помощью &lt;code&gt;git pull&lt;/code&gt; / &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b4786a5cabe8cc8e9d6176c7a8f4c8ac1126f56" translate="yes" xml:space="preserve">
          <source>Before creating any commits, you should introduce yourself to Git. The easiest way to do so is to use &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;:</source>
          <target state="translated">Прежде чем создавать какие-либо коммиты, вам следует познакомиться с Git. Самый простой способ сделать это - использовать &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="fda40fac347bfbef9972589a0b7125a0c0bcff59" translate="yes" xml:space="preserve">
          <source>Before discussing another option, &lt;code&gt;--show-pulls&lt;/code&gt;, we need to create a new example history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0407957d0e82cce71a4172b7606149052dc8e0c6" translate="yes" xml:space="preserve">
          <source>Before each ref is updated, if $GIT_DIR/hooks/update file exists and is executable, it is invoked once per ref, with three parameters:</source>
          <target state="translated">Перед каждым обновлением ссылки,если файл $GIT_DIR/hooks/update существует и является исполняемым,он вызывается один раз за ссылку,с тремя параметрами:</target>
        </trans-unit>
        <trans-unit id="19ac0c97c048cb907215a798a4fb3cdaff4d9a6f" translate="yes" xml:space="preserve">
          <source>Before fetching, remove any local tags that no longer exist on the remote if &lt;code&gt;--prune&lt;/code&gt; is enabled. This option should be used more carefully, unlike &lt;code&gt;--prune&lt;/code&gt; it will remove any local references (local tags) that have been created. This option is a shorthand for providing the explicit tag refspec along with &lt;code&gt;--prune&lt;/code&gt;, see the discussion about that in its documentation.</source>
          <target state="translated">Перед загрузкой удалите все локальные теги, которых больше нет на удаленном компьютере, если включен параметр &lt;code&gt;--prune&lt;/code&gt; . Этот параметр следует использовать более осторожно, в отличие от &lt;code&gt;--prune&lt;/code&gt; , он удалит все локальные ссылки (локальные теги), которые были созданы. Этот параметр является сокращением для предоставления явного тега refspec вместе с &lt;code&gt;--prune&lt;/code&gt; , см. Обсуждение этого в его документации.</target>
        </trans-unit>
        <trans-unit id="8e73bf59416129baf4984229453394f0315b226d" translate="yes" xml:space="preserve">
          <source>Before fetching, remove any remote-tracking references that no longer exist on the remote. Tags are not subject to pruning if they are fetched only because of the default tag auto-following or due to a --tags option. However, if tags are fetched due to an explicit refspec (either on the command line or in the remote configuration, for example if the remote was cloned with the --mirror option), then they are also subject to pruning. Supplying &lt;code&gt;--prune-tags&lt;/code&gt; is a shorthand for providing the tag refspec.</source>
          <target state="translated">Перед загрузкой удалите все ссылки удаленного отслеживания, которых больше нет на пульте дистанционного управления. Теги не подлежат сокращению, если они выбираются только из-за автоматического отслеживания тегов по умолчанию или из-за опции --tags. Однако, если теги выбираются из-за явного refspec (либо в командной строке, либо в удаленной конфигурации, например, если удаленный компьютер был клонирован с параметром --mirror), они также подлежат сокращению. Поставка &lt;code&gt;--prune-tags&lt;/code&gt; является обобщающим для предоставления тега refspec.</target>
        </trans-unit>
        <trans-unit id="0a0fe23adf5213b01d47b6f6f762c51483096baa" translate="yes" xml:space="preserve">
          <source>Before making a commit out of staged contents so far, stage the contents of paths given on the command line as well. This is usually not what you want unless you are concluding a conflicted merge.</source>
          <target state="translated">Перед тем,как сделать фиксацию из инсценированного содержимого,выполните также фиксацию содержимого путей,указанных в командной строке.Обычно это не то,что вам нужно,если только вы не заключаете противоречивое слияние.</target>
        </trans-unit>
        <trans-unit id="c77aea15ac35dd0f59cc96b6055cd1857904fd59" translate="yes" xml:space="preserve">
          <source>Before moving the index into its final destination create an empty .keep file for the associated pack file. This option is usually necessary with --stdin to prevent a simultaneous &lt;code&gt;git repack&lt;/code&gt; process from deleting the newly constructed pack and index before refs can be updated to use objects contained in the pack.</source>
          <target state="translated">Перед перемещением индекса в его конечное место назначения создайте пустой файл .keep для связанного файла пакета. Эта опция обычно необходима с --stdin, чтобы предотвратить одновременное удаление заново созданного пакета и индекса в процессе &lt;code&gt;git repack&lt;/code&gt; до того, как ссылки можно будет обновить для использования объектов, содержащихся в пакете.</target>
        </trans-unit>
        <trans-unit id="1684b3761b33822ae0ce64e85db5417e09a004a4" translate="yes" xml:space="preserve">
          <source>Before opening a compose window, use Edit&amp;rarr;Account Settings to uncheck the &quot;Compose messages in HTML format&quot; setting in the &quot;Composition &amp;amp; Addressing&quot; panel of the account to be used to send the patch.</source>
          <target state="translated">Перед тем как открыть окно создания, используйте Правка &amp;rarr; Настройки учетной записи, чтобы снять отметку с параметра &amp;laquo;Создавать сообщения в формате HTML&amp;raquo; на панели &amp;laquo;Состав и адресация&amp;raquo; учетной записи, которая будет использоваться для отправки патча.</target>
        </trans-unit>
        <trans-unit id="4236fe92cbd33fabad183244090db7c652c48ab2" translate="yes" xml:space="preserve">
          <source>Before processing any input, load the marks specified in &amp;lt;file&amp;gt;. The input file must exist, must be readable, and must use the same format as produced by --export-marks.</source>
          <target state="translated">Перед обработкой любого ввода загрузите метки, указанные в &amp;lt;file&amp;gt;. Входной файл должен существовать, быть доступным для чтения и иметь тот же формат, что и --export-mark.</target>
        </trans-unit>
        <trans-unit id="293840b5790c8dfe363015950d52920cf320165c" translate="yes" xml:space="preserve">
          <source>Before processing any input, load the marks specified in &amp;lt;file&amp;gt;. The input file must exist, must be readable, and must use the same format as produced by --export-marks. Multiple options may be supplied to import more than one set of marks. If a mark is defined to different values, the last file wins.</source>
          <target state="translated">Перед обработкой любого ввода загрузите метки, указанные в &amp;lt;file&amp;gt;. Входной файл должен существовать, быть доступным для чтения и иметь тот же формат, что и --export-mark. Для импорта более одного набора меток может быть предоставлено несколько опций. Если для метки заданы разные значения, побеждает последний файл.</target>
        </trans-unit>
        <trans-unit id="6ec1c5712ad3f679b2da84284672de74a981a5d9" translate="yes" xml:space="preserve">
          <source>Before sourcing it, your script should set up a few variables; &lt;code&gt;USAGE&lt;/code&gt; (and &lt;code&gt;LONG_USAGE&lt;/code&gt;, if any) is used to define message given by &lt;code&gt;usage()&lt;/code&gt; shell function. &lt;code&gt;SUBDIRECTORY_OK&lt;/code&gt; can be set if the script can run from a subdirectory of the working tree (some commands do not).</source>
          <target state="translated">Перед его поиском ваш скрипт должен установить несколько переменных; &lt;code&gt;USAGE&lt;/code&gt; (и &lt;code&gt;LONG_USAGE&lt;/code&gt; , если есть) используется для определения сообщения, передаваемого функцией оболочки &lt;code&gt;usage()&lt;/code&gt; . &lt;code&gt;SUBDIRECTORY_OK&lt;/code&gt; может быть установлен, если сценарий может запускаться из подкаталога рабочего дерева (некоторые команды этого не делают).</target>
        </trans-unit>
        <trans-unit id="c54227fb5e450fcf91fd096bb9f0a84e555b6148" translate="yes" xml:space="preserve">
          <source>Before starting rebase, stash local modifications away (see &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;) if needed, and apply the stash entry when done. &lt;code&gt;--no-autostash&lt;/code&gt; is useful to override the &lt;code&gt;rebase.autoStash&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Перед запуском перебазирования при необходимости спрячьте локальные изменения (см. &lt;a href=&quot;git-stash&quot;&gt;Git-stash [1]&lt;/a&gt; ) и примените запись stash, когда закончите. &lt;code&gt;--no-autostash&lt;/code&gt; полезен для переопределения &lt;code&gt;rebase.autoStash&lt;/code&gt; конфигурации rebase.autoStash (см. &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="20a98eb8f5ae5eb6921d2e55163fa9540eded227" translate="yes" xml:space="preserve">
          <source>Before starting, verify that there is corruption, and figure out where it is with &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;; this may be time-consuming.</source>
          <target state="translated">Перед тем как начать, проверьте наличие повреждений и выясните, где они находятся, с помощью &lt;a href=&quot;git-fsck&quot;&gt;git-fsck [1]&lt;/a&gt; ; это может занять много времени.</target>
        </trans-unit>
        <trans-unit id="197ebbc21bdf962ed1c382324d4f3dcec04005ba" translate="yes" xml:space="preserve">
          <source>Before the colon may be anything that names a commit, and after it may be any path to a file tracked by Git.</source>
          <target state="translated">До двоеточия может быть что угодно,что называет коммит,а после него может быть любой путь к файлу,отслеживаемый Git'ом.</target>
        </trans-unit>
        <trans-unit id="0b4c2c97b5d492d26987ff45d09af0bb0c545781" translate="yes" xml:space="preserve">
          <source>Behave as if &lt;code&gt;git rev-parse&lt;/code&gt; was invoked from the &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; subdirectory of the working tree. Any relative filenames are resolved as if they are prefixed by &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; and will be printed in that form.</source>
          <target state="translated">Вести себя так, как если бы &lt;code&gt;git rev-parse&lt;/code&gt; был вызван из подкаталога &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; рабочего дерева. Любые относительные имена файлов разрешаются так, как если бы они начинались с префикса &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; , и будут напечатаны в этой форме.</target>
        </trans-unit>
        <trans-unit id="d02e70ae5f9ffc8904b317a23e079b2151794572" translate="yes" xml:space="preserve">
          <source>Behave as normal citool, but instead of making a commit simply terminate with a zero exit code. It still checks that the index does not contain any unmerged entries, so you can use it as a GUI version of &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool[1]&lt;/a&gt;</source>
          <target state="translated">Ведите себя как обычный citool, но вместо фиксации просто завершите работу с нулевым кодом выхода. Он по-прежнему проверяет, не содержит ли индекс не связанных записей, поэтому вы можете использовать его как версию &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool [1]&lt;/a&gt; с графическим интерфейсом.</target>
        </trans-unit>
        <trans-unit id="1e338425ed36637ba6fc8582364ec79dbafaa8d3" translate="yes" xml:space="preserve">
          <source>Behavioral differences</source>
          <target state="translated">Поведенческие различия</target>
        </trans-unit>
        <trans-unit id="f0f0d8dfa2a076d1fea883054912f530ebc927c2" translate="yes" xml:space="preserve">
          <source>Besides blobs, trees, and commits, the only remaining type of object is a &quot;tag&quot;, which we won&amp;rsquo;t discuss here; refer to &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; for details.</source>
          <target state="translated">Помимо капель, деревьев и коммитов, единственным оставшимся типом объекта является &amp;laquo;тег&amp;raquo;, который мы здесь обсуждать не будем; обратитесь к &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; за подробностями.</target>
        </trans-unit>
        <trans-unit id="6077f120aaceb5046721fb58c100f8432db9b449" translate="yes" xml:space="preserve">
          <source>Besides specifying a range of commits that should be listed using the special notations explained in the description, additional commit limiting may be applied.</source>
          <target state="translated">Кроме указания диапазона коммитов,которые должны быть перечислены с использованием специальных нотаций,описанных в описании,могут быть применены дополнительные ограничения коммитов.</target>
        </trans-unit>
        <trans-unit id="5d284c47fc77be8e46a6b104d3f25aff12fd50b7" translate="yes" xml:space="preserve">
          <source>Best bisecting practices</source>
          <target state="translated">Передовые методы биссекции</target>
        </trans-unit>
        <trans-unit id="6bc3ae89d4cbb3ba42878fb25652862ae42aa5fe" translate="yes" xml:space="preserve">
          <source>Beware that the default for &lt;code&gt;git send-email&lt;/code&gt; is to thread emails itself. If you want &lt;code&gt;git format-patch&lt;/code&gt; to take care of threading, you will want to ensure that threading is disabled for &lt;code&gt;git send-email&lt;/code&gt;.</source>
          <target state="translated">Помните, что по умолчанию для &lt;code&gt;git send-email&lt;/code&gt; используется сама цепочка писем. Если вы хотите, чтобы &lt;code&gt;git format-patch&lt;/code&gt; заботился о потоковой передаче, вам нужно убедиться, что потоки отключены для &lt;code&gt;git send-email&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="945fefcb0d1953c9bddf033fe3e99288cf86cd4d" translate="yes" xml:space="preserve">
          <source>Bidirectional operation between a Subversion repository and Git</source>
          <target state="translated">Двунаправленная операция между репозиторием Subversion и Git'ом</target>
        </trans-unit>
        <trans-unit id="6f22ed9717123d2ce9d3d667f975fb97ec48ef54" translate="yes" xml:space="preserve">
          <source>Binary files are searched as well.</source>
          <target state="translated">Поиск бинарных файлов также выполняется.</target>
        </trans-unit>
        <trans-unit id="8e08702a04bb0e3631c0db1c03ac41d9b78e02c9" translate="yes" xml:space="preserve">
          <source>Bisect log and bisect replay</source>
          <target state="translated">Повторение журнала биссектов и бисектов</target>
        </trans-unit>
        <trans-unit id="caafd94a0cc48f8af98290661863ae3463dcd188" translate="yes" xml:space="preserve">
          <source>Bisect reset</source>
          <target state="translated">сброс бисекта</target>
        </trans-unit>
        <trans-unit id="cfe9732e61ea56b98e10d88f828ff42f6e52d08e" translate="yes" xml:space="preserve">
          <source>Bisect run</source>
          <target state="translated">бисектный пробег</target>
        </trans-unit>
        <trans-unit id="e7eb00dc48d63079c3871fc0a679fc1160511d2f" translate="yes" xml:space="preserve">
          <source>Bisect skip</source>
          <target state="translated">скачок бисекта</target>
        </trans-unit>
        <trans-unit id="5887bb0558b5608c8166ca0492b459bf81b4ac9e" translate="yes" xml:space="preserve">
          <source>Bisect visualize/view</source>
          <target state="translated">Визуализация/представление бисектов</target>
        </trans-unit>
        <trans-unit id="5adebf631a26d512accb5dd4088829dcb8650be4" translate="yes" xml:space="preserve">
          <source>Bisecting between Z and D* would hit a single culprit commit Y*, and understanding why Y* was broken would probably be easier.</source>
          <target state="translated">Переключение между Z и D*ударит по одиночному преступнику,и понять,почему Y*была сломана,вероятно,будет проще.</target>
        </trans-unit>
        <trans-unit id="e52337c43cc4b33ac0d524be43e0ee7aabfe896f" translate="yes" xml:space="preserve">
          <source>Bisecting build failures</source>
          <target state="translated">Тяжёлые строительные неудачи</target>
        </trans-unit>
        <trans-unit id="247595ab20eacd2b287d2671e0cd44ffe5d63f96" translate="yes" xml:space="preserve">
          <source>Bisecting sporadic bugs</source>
          <target state="translated">размножение спорадических ошибок</target>
        </trans-unit>
        <trans-unit id="c849a8d6d5f17f13126d2a3ffa47e78949cbd571" translate="yes" xml:space="preserve">
          <source>Bisection Helpers</source>
          <target state="translated">помощники по бисекции</target>
        </trans-unit>
        <trans-unit id="81ab75db6833dc6c35d461635f7c0fa8e4339b5c" translate="yes" xml:space="preserve">
          <source>Bisection algorithm</source>
          <target state="translated">алгоритм бисекции</target>
        </trans-unit>
        <trans-unit id="1073b9bc85c670179e7dcf4cfd5cd0b022c46d78" translate="yes" xml:space="preserve">
          <source>Bisection algorithm debugging</source>
          <target state="translated">отладка алгоритма бисекции</target>
        </trans-unit>
        <trans-unit id="2146a76855ff13537405bb4dc1d3e621b6d2530e" translate="yes" xml:space="preserve">
          <source>Bisection algorithm discussed</source>
          <target state="translated">обсуждённый алгоритм бисекции</target>
        </trans-unit>
        <trans-unit id="3e65a55a7b3fcaab5f39381d806f63fcab2ecabb" translate="yes" xml:space="preserve">
          <source>BitKeeper/cvsps speak for &quot;&lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt;&quot;. Since Git does not store changes, but states, it really does not make sense to use the term &quot;changesets&quot; with Git.</source>
          <target state="translated">BitKeeper / cvsps означает &amp;laquo; &lt;a href=&quot;#def_commit&quot;&gt;фиксацию&lt;/a&gt; &amp;raquo;. Поскольку Git не хранит изменения, а утверждает, на самом деле нет смысла использовать термин &amp;laquo;наборы изменений&amp;raquo; в Git.</target>
        </trans-unit>
        <trans-unit id="57bd2a9f31bd11a6f563b358aadd2a286592b86a" translate="yes" xml:space="preserve">
          <source>Blank lines are ignored, and lines that don&amp;rsquo;t match this specification are used as option group headers (start the line with a space to create such lines on purpose).</source>
          <target state="translated">Пустые строки игнорируются, а строки, не соответствующие этой спецификации, используются в качестве заголовков группы параметров (начните строку с пробела, чтобы создать такие строки специально).</target>
        </trans-unit>
        <trans-unit id="5327cbfdb1bf8f5a47bca233a1bde391d44b215a" translate="yes" xml:space="preserve">
          <source>Blank lines are ignored, so they can be used as separators for readability.</source>
          <target state="translated">Пустые строки игнорируются,поэтому их можно использовать как разделители для удобочитаемости.</target>
        </trans-unit>
        <trans-unit id="d7077b7354ef7afaa6b1de41b77813742be4c707" translate="yes" xml:space="preserve">
          <source>Blob Object</source>
          <target state="translated">Капля-объект</target>
        </trans-unit>
        <trans-unit id="f04feb5337017d625e39e5a69c692bf6273fb704" translate="yes" xml:space="preserve">
          <source>Blocks of moved text are detected as in &lt;code&gt;blocks&lt;/code&gt; mode. The blocks are painted using either the &lt;code&gt;color.diff.{old,new}Moved&lt;/code&gt; color or &lt;code&gt;color.diff.{old,new}MovedAlternative&lt;/code&gt;. The change between the two colors indicates that a new block was detected.</source>
          <target state="translated">Блоки перемещаемого текста определяются как в режиме &lt;code&gt;blocks&lt;/code&gt; . Блоки окрашиваются с использованием либо &lt;code&gt;color.diff.{old,new}Moved&lt;/code&gt; color, либо &lt;code&gt;color.diff.{old,new}MovedAlternative&lt;/code&gt; . Изменение между двумя цветами указывает на то, что обнаружен новый блок.</target>
        </trans-unit>
        <trans-unit id="f42755e1f80735be0fde7ac7e2cbeb956df2c96e" translate="yes" xml:space="preserve">
          <source>Blocks of moved text of at least 20 alphanumeric characters are detected greedily. The detected blocks are painted using either the &lt;code&gt;color.diff.{old,new}Moved&lt;/code&gt; color. Adjacent blocks cannot be told apart.</source>
          <target state="translated">Блоки перемещенного текста длиной не менее 20 буквенно-цифровых символов обнаруживаются жадно. Обнаруженные блоки окрашиваются с использованием либо &lt;code&gt;color.diff.{old,new}Moved&lt;/code&gt; Цвет перемещен . Смежные блоки нельзя отличить друг от друга.</target>
        </trans-unit>
        <trans-unit id="66547f4a0e63cd4ad00756855db6ddba1142e4d3" translate="yes" xml:space="preserve">
          <source>Bob begins with:</source>
          <target state="translated">Боб начинает:</target>
        </trans-unit>
        <trans-unit id="bcf42567e6f70a4579bf8687eb5f4e62c5870c89" translate="yes" xml:space="preserve">
          <source>Bob then makes some changes and commits them:</source>
          <target state="translated">Затем Боб вносит некоторые изменения и совершает их:</target>
        </trans-unit>
        <trans-unit id="d0685c88b15694d30796d8493ed6c8ce3e6b4b74" translate="yes" xml:space="preserve">
          <source>Boolean false literals are &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; and the empty string.</source>
          <target state="translated">Логические ложные литералы - это &lt;code&gt;no&lt;/code&gt; , &lt;code&gt;off&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; и пустая строка.</target>
        </trans-unit>
        <trans-unit id="c8e93181a2c2334cd611c796a9d2346e913aadda" translate="yes" xml:space="preserve">
          <source>Boolean true literals are &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;1&lt;/code&gt;. Also, a variable defined without &lt;code&gt;= &amp;lt;value&amp;gt;&lt;/code&gt; is taken as true.</source>
          <target state="translated">Логические истинные литералы - это &lt;code&gt;yes&lt;/code&gt; , &lt;code&gt;on&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;1&lt;/code&gt; . Кроме того, переменная, определенная без &lt;code&gt;= &amp;lt;value&amp;gt;&lt;/code&gt; , принимается как истинная.</target>
        </trans-unit>
        <trans-unit id="f03ce708ae8563bbe292f147105bcbebd35fdd1f" translate="yes" xml:space="preserve">
          <source>Boolean value indicating if the submodule is of interest to git commands. This config option takes precedence over the submodule.active config option. See &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules[7]&lt;/a&gt; for details.</source>
          <target state="translated">Логическое значение, указывающее, представляет ли подмодуль интерес для команд git. Этот параметр конфигурации имеет приоритет над параметром конфигурации submodule.active. См. Подробности в &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40de397dbe4a181644b13a510b500ba0dfa90dc8" translate="yes" xml:space="preserve">
          <source>Boolean variable which defines if large files are automatically pushed to a server.</source>
          <target state="translated">Булева переменная,которая определяет,будут ли большие файлы автоматически передаваться на сервер.</target>
        </trans-unit>
        <trans-unit id="edb8137a3de82e7f1ab7c05bad252ac0da09a46a" translate="yes" xml:space="preserve">
          <source>Boolean. When true &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted from PERF output. May be overridden by the &lt;code&gt;GIT_TRACE2_PERF_BRIEF&lt;/code&gt; environment variable. Defaults to false.</source>
          <target state="translated">Boolean. Когда истинное &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; и поля &lt;code&gt;line&lt;/code&gt; опускаются из вывода PERF. Может быть переопределено переменной среды &lt;code&gt;GIT_TRACE2_PERF_BRIEF&lt;/code&gt; . По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="e7da8527471f3ea2c3faf910dfb4b6accdd8c262" translate="yes" xml:space="preserve">
          <source>Boolean. When true &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted from event output. May be overridden by the &lt;code&gt;GIT_TRACE2_EVENT_BRIEF&lt;/code&gt; environment variable. Defaults to false.</source>
          <target state="translated">Boolean. Когда истинное &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; и поля &lt;code&gt;line&lt;/code&gt; опускаются из вывода событий. Может быть переопределено переменной окружения &lt;code&gt;GIT_TRACE2_EVENT_BRIEF&lt;/code&gt; . По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="d6cb13ebbd3c085c01cd755d0c697831e337b51f" translate="yes" xml:space="preserve">
          <source>Boolean. When true &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted from normal output. May be overridden by the &lt;code&gt;GIT_TRACE2_BRIEF&lt;/code&gt; environment variable. Defaults to false.</source>
          <target state="translated">Boolean. Когда истинное &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; и поля &lt;code&gt;line&lt;/code&gt; опускаются из нормального вывода. Может быть переопределено переменной окружения &lt;code&gt;GIT_TRACE2_BRIEF&lt;/code&gt; . По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="2c3dcfd71724f2fb257997b8beb70ed9ac8363b1" translate="yes" xml:space="preserve">
          <source>Boolean. When true Git will print error messages when a trace target destination cannot be opened for writing. By default, these errors are suppressed and tracing is silently disabled. May be overridden by the &lt;code&gt;GIT_TRACE2_DST_DEBUG&lt;/code&gt; environment variable.</source>
          <target state="translated">Boolean. При значении true Git будет печатать сообщения об ошибках, когда целевой объект трассировки не может быть открыт для записи. По умолчанию эти ошибки подавляются, и трассировка автоматически отключается. Может быть переопределено переменной среды &lt;code&gt;GIT_TRACE2_DST_DEBUG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5522e55cd06bc09c2f312c8e91e3e9369d6fed7" translate="yes" xml:space="preserve">
          <source>Borrow the objects from reference repositories specified with the &lt;code&gt;--reference&lt;/code&gt; options only to reduce network transfer, and stop borrowing from them after a clone is made by making necessary local copies of borrowed objects. This option can also be used when cloning locally from a repository that already borrows objects from another repository&amp;mdash;​the new repository will borrow objects from the same repository, and this option can be used to stop the borrowing.</source>
          <target state="translated">Заимствовать объекты из эталонных репозиториев, указанных с помощью параметров &lt;code&gt;--reference&lt;/code&gt; , только для уменьшения передачи по сети и прекращать заимствование из них после создания клона путем создания необходимых локальных копий заимствованных объектов. Эту опцию также можно использовать при локальном клонировании из репозитория, который уже заимствует объекты из другого репозитория - новый репозиторий будет заимствовать объекты из того же репозитория, и эту опцию можно использовать для остановки заимствования.</target>
        </trans-unit>
        <trans-unit id="5694355a4e9f21af75bfd457be1c695646467936" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;--cacheinfo&lt;/code&gt; and &lt;code&gt;--info-only&lt;/code&gt; behave similarly: the index is updated but the object database isn&amp;rsquo;t. &lt;code&gt;--cacheinfo&lt;/code&gt; is useful when the object is in the database but the file isn&amp;rsquo;t available locally. &lt;code&gt;--info-only&lt;/code&gt; is useful when the file is available, but you do not wish to update the object database.</source>
          <target state="translated">И &lt;code&gt;--cacheinfo&lt;/code&gt; , и &lt;code&gt;--info-only&lt;/code&gt; ведут себя одинаково: индекс обновляется, а база данных объектов - нет. &lt;code&gt;--cacheinfo&lt;/code&gt; полезен, когда объект находится в базе данных, но файл недоступен локально. &lt;code&gt;--info-only&lt;/code&gt; полезно, когда файл доступен, но вы не хотите обновлять базу данных объектов.</target>
        </trans-unit>
        <trans-unit id="210e82ac599d9d8944e3c5eb9d03d4a4abcf7207" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;plink&lt;/code&gt; and &lt;code&gt;alink&lt;/code&gt; point outside the tree, so they would respectively print:</source>
          <target state="translated">Оба &lt;code&gt;plink&lt;/code&gt; и &lt;code&gt;alink&lt;/code&gt; точка вне дерева, так что они будут соответственно печати:</target>
        </trans-unit>
        <trans-unit id="9a953a9b4782d5c56832edbe239c8ec4aaa470f8" translate="yes" xml:space="preserve">
          <source>Both fixes are tested well, and at this point, you want to merge in both of them. You could merge in &lt;code&gt;diff-fix&lt;/code&gt; first and then &lt;code&gt;commit-fix&lt;/code&gt; next, like this:</source>
          <target state="translated">Оба исправления хорошо протестированы, и на этом этапе вы хотите объединить их оба. Вы можете сначала объединить &lt;code&gt;diff-fix&lt;/code&gt; , а затем &lt;code&gt;commit-fix&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="9af6db9f29dd4e151f33497260a5a0b8ba4e0513" translate="yes" xml:space="preserve">
          <source>Both ofs-delta and ref-delta store the &quot;delta&quot; to be applied to another object (called &lt;code&gt;base object&lt;/code&gt;) to reconstruct the object. The difference between them is, ref-delta directly encodes 20-byte base object name. If the base object is in the same pack, ofs-delta encodes the offset of the base object in the pack instead.</source>
          <target state="translated">И ofs-delta, и ref-delta хранят &amp;laquo;дельту&amp;raquo;, которая будет применяться к другому объекту (так называемому &lt;code&gt;base object&lt;/code&gt; ) для восстановления объекта. Разница между ними в том, что ref-delta напрямую кодирует 20-байтовое имя базового объекта. Если базовый объект находится в том же пакете, ofs-delta вместо этого кодирует смещение базового объекта в пакете.</target>
        </trans-unit>
        <trans-unit id="70067b173cdeaaf22d52d43a160f5295eccba4fc" translate="yes" xml:space="preserve">
          <source>Both ofs-delta and ref-delta store the &quot;delta&quot; to be applied to another object (called &lt;code&gt;base object&lt;/code&gt;) to reconstruct the object. The difference between them is, ref-delta directly encodes base object name. If the base object is in the same pack, ofs-delta encodes the offset of the base object in the pack instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68fc1d55d49e0827f78d9949a9c5a2eecaf05eb" translate="yes" xml:space="preserve">
          <source>Both settings can be overridden on the command line by using the &quot;--ignore-submodules&quot; option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">Обе настройки можно переопределить в командной строке с помощью параметра &amp;laquo;--ignore-submodules&amp;raquo;. Этот параметр не влияет на команды &lt;code&gt;git submodule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bb1e035fa86f5b4222d3ab1eb33c1658eed9a23" translate="yes" xml:space="preserve">
          <source>Both standard output and standard error output are forwarded to &lt;code&gt;git send-pack&lt;/code&gt; on the other end, so you can simply &lt;code&gt;echo&lt;/code&gt; messages for the user.</source>
          <target state="translated">И стандартный вывод, и стандартный вывод ошибок перенаправляются на другой конец в &lt;code&gt;git send-pack&lt;/code&gt; , так что вы можете просто &lt;code&gt;echo&lt;/code&gt; сообщения для пользователя.</target>
        </trans-unit>
        <trans-unit id="7c76084a5f517b3242aa149971fbcce3ceb62c61" translate="yes" xml:space="preserve">
          <source>Both the &amp;lt;eolinfo&amp;gt; in the index (&quot;i/&amp;lt;eolinfo&amp;gt;&quot;) and in the working tree (&quot;w/&amp;lt;eolinfo&amp;gt;&quot;) are shown for regular files, followed by the (&quot;attr/&amp;lt;eolattr&amp;gt;&quot;).</source>
          <target state="translated">И &amp;lt;eolinfo&amp;gt; в индексе (&amp;laquo;i / &amp;lt;eolinfo&amp;gt;&amp;raquo;), и в рабочем дереве (&amp;laquo;w / &amp;lt;eolinfo&amp;gt;&amp;raquo;) показаны для обычных файлов, за которыми следует (&amp;laquo;attr / &amp;lt;eolattr&amp;gt;&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="c634179a023801afb75e60cfb7d88f35c1e83a21" translate="yes" xml:space="preserve">
          <source>Both the symlink &amp;amp; realpath versions of paths will be matched outside of &lt;code&gt;$GIT_DIR&lt;/code&gt;. E.g. if ~/git is a symlink to /mnt/storage/git, both &lt;code&gt;gitdir:~/git&lt;/code&gt; and &lt;code&gt;gitdir:/mnt/storage/git&lt;/code&gt; will match.</source>
          <target state="translated">Версии путей как символьных, так и реальных путей будут сопоставляться вне &lt;code&gt;$GIT_DIR&lt;/code&gt; . Например, если ~ / git является символической &lt;code&gt;gitdir:/mnt/storage/git&lt;/code&gt; будут совпадать как &lt;code&gt;gitdir:~/git&lt;/code&gt; ,так и gitdir: / mnt / storage / git .</target>
        </trans-unit>
        <trans-unit id="fb26b800dd56fd61a55a4281547b9e60ac65a113" translate="yes" xml:space="preserve">
          <source>Branch Headers</source>
          <target state="translated">Заголовки филиалов</target>
        </trans-unit>
        <trans-unit id="6e15a503d2a4c17b67a8c3c7f34c58a07a49a276" translate="yes" xml:space="preserve">
          <source>Branch description, can be edited with &lt;code&gt;git branch --edit-description&lt;/code&gt;. Branch description is automatically added in the format-patch cover letter or request-pull summary.</source>
          <target state="translated">Описание ветки, можно редактировать с помощью &lt;code&gt;git branch --edit-description&lt;/code&gt; . Описание ветки автоматически добавляется в сопроводительное письмо с исправлением формата или в сводку запроса.</target>
        </trans-unit>
        <trans-unit id="5bec4527e15afa13a84c736e3c723988984e6324" translate="yes" xml:space="preserve">
          <source>Branch detection</source>
          <target state="translated">Обнаружение отделения</target>
        </trans-unit>
        <trans-unit id="f63ceca75fd06c6b871dea1a79cac70839c63882" translate="yes" xml:space="preserve">
          <source>Branch management for a release</source>
          <target state="translated">Отраслевое управление для выпуска</target>
        </trans-unit>
        <trans-unit id="50637014a89740451f5074b5c0e9645bb5f5e1e3" translate="yes" xml:space="preserve">
          <source>Branch management for next and pu after a feature release</source>
          <target state="translated">Управление филиалами для следующего и pu после выпуска функции</target>
        </trans-unit>
        <trans-unit id="847b5d9af115c8e50f1c00175c8525563c7e932f" translate="yes" xml:space="preserve">
          <source>Branch management for next and seen after a feature release</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbca9c5458a752e67c3b22c7754c8dd03612ff9c" translate="yes" xml:space="preserve">
          <source>Branch of repository to add as submodule. The name of the branch is recorded as &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; in &lt;code&gt;.gitmodules&lt;/code&gt; for &lt;code&gt;update --remote&lt;/code&gt;. A special value of &lt;code&gt;.&lt;/code&gt; is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository. If the option is not specified, it defaults to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">Ветвь репозитория, которую нужно добавить как подмодуль. Имя ветки записывается как &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; в &lt;code&gt;.gitmodules&lt;/code&gt; для &lt;code&gt;update --remote&lt;/code&gt; . Особая ценность &lt;code&gt;.&lt;/code&gt; используется, чтобы указать, что имя ветки в подмодуле должно совпадать с именем текущей ветки в текущем репозитории. Если опция не указана, по умолчанию используется &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b69ea5570ecde693b275ccf40b6be842c78a8726" translate="yes" xml:space="preserve">
          <source>Branch of repository to add as submodule. The name of the branch is recorded as &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; in &lt;code&gt;.gitmodules&lt;/code&gt; for &lt;code&gt;update --remote&lt;/code&gt;. A special value of &lt;code&gt;.&lt;/code&gt; is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository. If the option is not specified, it defaults to the remote &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3db6088987588160d14194fc92edec728f16ab3" translate="yes" xml:space="preserve">
          <source>Branch off of a specific tag.</source>
          <target state="translated">Отделение от конкретной метки.</target>
        </trans-unit>
        <trans-unit id="a41d6fc58b77cd15fdc95f9b8068f3bedb454bc6" translate="yes" xml:space="preserve">
          <source>Branch to checkout; if it refers to a branch (i.e., a name that, when prepended with &quot;refs/heads/&quot;, is a valid ref), then that branch is checked out. Otherwise, if it refers to a valid commit, your &lt;code&gt;HEAD&lt;/code&gt; becomes &quot;detached&quot; and you are no longer on any branch (see below for details).</source>
          <target state="translated">Переход к кассе; если он ссылается на ветку (то есть имя, которое после добавления &amp;laquo;refs / Heads /&amp;raquo; является действительной ссылкой), то эта ветка проверяется. В противном случае, если он относится к действительной фиксации, ваш &lt;code&gt;HEAD&lt;/code&gt; становится &amp;laquo;отсоединенным&amp;raquo;, и вы больше не находитесь ни в одной ветке (подробности см. Ниже).</target>
        </trans-unit>
        <trans-unit id="8b21526e9a7ba9f6110db09d1bb17e93bbda77fa" translate="yes" xml:space="preserve">
          <source>Branch to switch to.</source>
          <target state="translated">Бранч переключиться на.</target>
        </trans-unit>
        <trans-unit id="79cd2f09f7574ee3c255526cc9dfc53740a35d6b" translate="yes" xml:space="preserve">
          <source>Branch updates can be forced with --force, but it&amp;rsquo;s recommended that this only be used on an otherwise quiet repository. Using --force is not necessary for an initial import into an empty repository.</source>
          <target state="translated">Обновления веток можно принудительно выполнить с помощью --force, но рекомендуется использовать это только в тихом репозитории. Использование --force не обязательно для первоначального импорта в пустой репозиторий.</target>
        </trans-unit>
        <trans-unit id="e985dfb396afc27ce07bbb1b298aa21e35e0ea0d" translate="yes" xml:space="preserve">
          <source>Branches are cheap and easy, so this is a good way to try something out.</source>
          <target state="translated">Филиалы дешевы и просты,так что это хороший способ попробовать что-нибудь.</target>
        </trans-unit>
        <trans-unit id="879b754d99bf64defbd79d89d51b97c6e52dfbf4" translate="yes" xml:space="preserve">
          <source>Branches are classified as active and inactive. The memory usage of the two classes is significantly different.</source>
          <target state="translated">Филиалы классифицируются как активные и неактивные.Использование памяти этими двумя классами существенно отличается.</target>
        </trans-unit>
        <trans-unit id="19038dfa38a59c4f1be05e3d92e0f1bca8b5557f" translate="yes" xml:space="preserve">
          <source>Branches in Git are really nothing more than pointers into the Git object database from within the &lt;code&gt;.git/refs/&lt;/code&gt; subdirectory, and as we already discussed, the &lt;code&gt;HEAD&lt;/code&gt; branch is nothing but a symlink to one of these object pointers.</source>
          <target state="translated">Ветви в Git на самом деле являются не чем иным, как указателями на базу данных объектов Git из подкаталога &lt;code&gt;.git/refs/&lt;/code&gt; , и, как мы уже обсуждали, ветвь &lt;code&gt;HEAD&lt;/code&gt; - не что иное, как символическая ссылка на один из этих указателей на объекты.</target>
        </trans-unit>
        <trans-unit id="125404877d39f029f0e27e0fb84f104c52bd667b" translate="yes" xml:space="preserve">
          <source>Branches on which no commits have been made are not imported.</source>
          <target state="translated">Филиалы,в которых не было сделано никаких обязательств,не импортируются.</target>
        </trans-unit>
        <trans-unit id="415a16be057cec5701bb9e0fd3bff5400f270979" translate="yes" xml:space="preserve">
          <source>Branches, remote-tracking branches, and tags are all references to commits. All references are named with a slash-separated path name starting with &lt;code&gt;refs&lt;/code&gt;; the names we&amp;rsquo;ve been using so far are actually shorthand:</source>
          <target state="translated">Ветви, ветки удаленного отслеживания и теги - все это ссылки на коммиты. Все ссылки называются разделенными косой чертой путем, начиная с &lt;code&gt;refs&lt;/code&gt; ; имена, которые мы использовали до сих пор, на самом деле являются сокращениями:</target>
        </trans-unit>
        <trans-unit id="b3d9b26ec0345692adbda512336186fddd0ce297" translate="yes" xml:space="preserve">
          <source>Branching and Merging</source>
          <target state="translated">Ветвление и слияние</target>
        </trans-unit>
        <trans-unit id="15e01902c81d07c3b90042ff2531422b8b3d1b86" translate="yes" xml:space="preserve">
          <source>Break complete rewrite changes into pairs of delete and create. This serves two purposes:</source>
          <target state="translated">Полное перезаписывание изменений в пары удалить и создать.Это служит двум целям:</target>
        </trans-unit>
        <trans-unit id="672fc0738ea8c1007bcaceee5284378a52766797" translate="yes" xml:space="preserve">
          <source>Browse the &lt;code&gt;modules&lt;/code&gt; available. It will give you a list of the heads in the repository. You will not be able to browse the tree from there. Only the heads.</source>
          <target state="translated">Просмотрите доступные &lt;code&gt;modules&lt;/code&gt; . Он даст вам список голов в репозитории. Вы не сможете просматривать дерево оттуда. Только головы.</target>
        </trans-unit>
        <trans-unit id="abb2e552cc2091e364809101c300cc4143caaa39" translate="yes" xml:space="preserve">
          <source>Browsing every revision of the repository.</source>
          <target state="translated">Просмотр каждой ревизии репозитория.</target>
        </trans-unit>
        <trans-unit id="f92f422e95f0fd94e3584d36660177eaf6c3a90d" translate="yes" xml:space="preserve">
          <source>Browsing revisions</source>
          <target state="translated">Просмотр пересмотров</target>
        </trans-unit>
        <trans-unit id="6d55509876929eae63b680c2015c0e8dcd714d8d" translate="yes" xml:space="preserve">
          <source>Buffering happens as documented under the &lt;code&gt;GIT_FLUSH&lt;/code&gt; option in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;. The caller is responsible for avoiding deadlocks caused by overfilling an input buffer or reading from an empty output buffer.</source>
          <target state="translated">Буферизация происходит, как &lt;code&gt;GIT_FLUSH&lt;/code&gt; параметре GIT_FLUSH в &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; . Вызывающая сторона отвечает за предотвращение взаимоблокировок, вызванных переполнением входного буфера или чтением из пустого выходного буфера.</target>
        </trans-unit>
        <trans-unit id="c8eea1b80ba437eb2c7d9d8e4a7a1c0c36ddce4e" translate="yes" xml:space="preserve">
          <source>Bugs</source>
          <target state="translated">Bugs</target>
        </trans-unit>
        <trans-unit id="30410812dc9752c13886986132ffab9500651b55" translate="yes" xml:space="preserve">
          <source>Bugs in the implementation of overlap mappings exist. If multiple depot paths map through overlays to the same location in the repository, &lt;code&gt;git p4&lt;/code&gt; can choose the wrong one. This is hard to solve without dedicating a client spec just for &lt;code&gt;git p4&lt;/code&gt;.</source>
          <target state="translated">Существуют ошибки в реализации сопоставлений перекрытия. Если несколько путей депо отображаются через наложения в одно и то же место в репозитории, &lt;code&gt;git p4&lt;/code&gt; может выбрать неправильный. Это трудно решить, не выделив спецификацию клиента только для &lt;code&gt;git p4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c875875a4eba5d2b4104ba5b53fe3484e74b27e" translate="yes" xml:space="preserve">
          <source>Build a tree-object from ls-tree formatted text</source>
          <target state="translated">Построить древовидный объект из ls-дерева отформатированного текста</target>
        </trans-unit>
        <trans-unit id="043dc36933914b47740e7f5065ce440656dbe0ca" translate="yes" xml:space="preserve">
          <source>Build pack index file for an existing packed archive</source>
          <target state="translated">Построить файл индекса пакета для существующего упакованного архива</target>
        </trans-unit>
        <trans-unit id="8dd0ad60c49a72540d98588b5b0558fd314e85ee" translate="yes" xml:space="preserve">
          <source>Built-in 3-way merge driver is used to merge the contents in a way similar to &lt;code&gt;merge&lt;/code&gt; command of &lt;code&gt;RCS&lt;/code&gt; suite. This is suitable for ordinary text files.</source>
          <target state="translated">Встроенный 3-сторонний драйвер слияния используется для слияния содержимого аналогично команде &lt;code&gt;merge&lt;/code&gt; пакета &lt;code&gt;RCS&lt;/code&gt; . Это подходит для обычных текстовых файлов.</target>
        </trans-unit>
        <trans-unit id="0829c07e98ca5098038c31cb2a5b51c3902a8814" translate="yes" xml:space="preserve">
          <source>Built-in merge drivers</source>
          <target state="translated">Встроенные драйверы слияния</target>
        </trans-unit>
        <trans-unit id="fe507ac4ab5d31826c1b03d804bf3ff265bad65b" translate="yes" xml:space="preserve">
          <source>Bundling your work together</source>
          <target state="translated">Объединение вашей работы в единое целое</target>
        </trans-unit>
        <trans-unit id="25fde7a2ceaafceba047201a41d303d6c07bd23d" translate="yes" xml:space="preserve">
          <source>But BBChop is independent of any VCS and it would be easier for Git users to have something integrated in Git.</source>
          <target state="translated">Но BBChop не зависит от каких-либо ВКС,и пользователям Git'а было бы проще иметь что-то интегрированное в Git.</target>
        </trans-unit>
        <trans-unit id="f7eefc5fb4183d567fceb246626226ef9afb8bf2" translate="yes" xml:space="preserve">
          <source>But Ingo Molnar and H. Peter Anvin (another well known linux kernel developer) both complained that sometimes the best bisection points all happened to be in an area where all the commits are untestable. And in this case the user was asked to test many untestable commits, which could be very inefficient.</source>
          <target state="translated">Но Инго Молнар (Ingo Molnar)и Х.Питер Анвин (H.Peter Anvin)(другой известный разработчик ядра linux)оба жаловались,что иногда лучшие бисексуальные очки оказываются в области,где все коммиты неоспоримы.И в этом случае пользователю было предложено протестировать множество непроверяемых коммитов,что может быть очень неэффективно.</target>
        </trans-unit>
        <trans-unit id="74140d3773084e209fc43c63f870a2ce5abd4ea1" translate="yes" xml:space="preserve">
          <source>But if you have pushed things out (or others could just read your repository directly), then others will have already seen the old tag. In that case you can do one of two things:</source>
          <target state="translated">Но если вы вытолкнули вещи (или другие могли просто читать ваш репозиторий напрямую),тогда другие уже увидят старый тег.В этом случае вы можете сделать одну из двух вещей:</target>
        </trans-unit>
        <trans-unit id="66013f3cefed95fb73f834fded3820e6a1071c28" translate="yes" xml:space="preserve">
          <source>But if you try to push, you will attempt to update the branch (that now points at A) with commit B. This does &lt;code&gt;not&lt;/code&gt; fast-forward. If you did so, the changes introduced by commit A will be lost, because everybody will now start building on top of B.</source>
          <target state="translated">Но если вы пытаетесь толкать, вы будете пытаться обновить ветку (что теперь указывает на А) с фиксации B. Это делает &lt;code&gt;not&lt;/code&gt; быстро вперед. Если вы это сделаете, изменения, внесенные коммитом A, будут потеряны, потому что теперь все начнут строить поверх B.</target>
        </trans-unit>
        <trans-unit id="fd8e45cbd58877735e25105978c0aca9791da6ee" translate="yes" xml:space="preserve">
          <source>But in some repository setups, you may have several related but separate groups of ref tips, with clients tending to fetch those groups independently. For example, imagine that you are hosting several &quot;forks&quot; of a repository in a single shared object store, and letting clients view them as separate repositories through &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; or separate repos using the alternates mechanism. A naive repack may find that the optimal delta for an object is against a base that is only found in another fork. But when a client fetches, they will not have the base object, and we&amp;rsquo;ll have to find a new delta on the fly.</source>
          <target state="translated">Но в некоторых настройках репозитория у вас может быть несколько связанных, но отдельных групп рекомендаций, и клиенты стремятся получить эти группы независимо. Например, представьте, что вы размещаете несколько &amp;laquo;ответвлений&amp;raquo; репозитория в одном хранилище общих объектов и позволяете клиентам просматривать их как отдельные репозитории через &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; или отдельные репозитории с использованием альтернативного механизма. Наивный переупаковщик может обнаружить, что оптимальная дельта для объекта соответствует базе, которая находится только в другом форке. Но когда клиент выполняет выборку, у него не будет базового объекта, и нам придется на лету находить новую дельту.</target>
        </trans-unit>
        <trans-unit id="a02a23b585c823168e0aade261aba54b02ee9df4" translate="yes" xml:space="preserve">
          <source>But now we can do</source>
          <target state="translated">Но теперь мы можем сделать</target>
        </trans-unit>
        <trans-unit id="d83b34d996269d86f487bc1b1bf210759565be26" translate="yes" xml:space="preserve">
          <source>But the above ways to work around untestable areas are a little bit clunky. Using special branches is nice because these branches can be shared by developers like usual branches, but the risk is that people will get many such branches. And it disrupts the normal &quot;git bisect&quot; work-flow. So, if you want to use &quot;git bisect run&quot; completely automatically, you have to add special code in your script to restart bisection in the special branches.</source>
          <target state="translated">Но вышеперечисленные способы работы на непроверенных участках немного неуклюжи.Использование специальных веток приятно,потому что эти ветки могут быть общими для разработчиков,как и обычные ветки,но риск состоит в том,что люди получат много таких веток.И это нарушает нормальную работу &quot;git-биссекта&quot;.Так что,если вы хотите использовать &quot;запуск git-биссекта&quot; полностью автоматически,вам нужно добавить специальный код в ваш скрипт,чтобы перезапустить биссектрису в специальных ветках.</target>
        </trans-unit>
        <trans-unit id="d51bf10c62a548cc7f488f7d7c601612ef19bfbf" translate="yes" xml:space="preserve">
          <source>But there are other ways to refer to commits. You can use any initial part of the name that is long enough to uniquely identify the commit:</source>
          <target state="translated">Но есть и другие способы ссылаться на коммиты.Вы можете использовать любую начальную часть имени,достаточно длинную,чтобы однозначно идентифицировать коммит:</target>
        </trans-unit>
        <trans-unit id="7cbb3ccd9eb2da169028fcad03ea4127b40731fc" translate="yes" xml:space="preserve">
          <source>But this is wrong because at step 1) a) we keep only the ancestors of the bad commit. So we get more information when a commit is marked as &quot;bad&quot;, because we also know that the ancestors of the previous &quot;bad&quot; commit that are not ancestors of the new &quot;bad&quot; commit are not the first bad commit. We don&amp;rsquo;t know if they are good or bad, but we know that they are not the first bad commit because they are not ancestor of the new &quot;bad&quot; commit.</source>
          <target state="translated">Но это неправильно, потому что на шаге 1) а) мы сохраняем только предков плохой фиксации. Таким образом, мы получаем больше информации, когда фиксация помечена как &amp;laquo;плохая&amp;raquo;, потому что мы также знаем, что предки предыдущей &amp;laquo;плохой&amp;raquo; фиксации, которые не являются предками новой &amp;laquo;плохой&amp;raquo; фиксации, не являются первой плохой фиксацией. Мы не знаем, хорошие они или плохие, но мы знаем, что это не первая плохая фиксация, потому что они не являются предками новой &amp;laquo;плохой&amp;raquo; фиксации.</target>
        </trans-unit>
        <trans-unit id="e9cd8c15ffc7ac156f5f412fb85c3db80183014e" translate="yes" xml:space="preserve">
          <source>But we can guess that improving on existing software is very costly because you have to watch out for regressions. At least this would make the above studies consistent among themselves.</source>
          <target state="translated">Но мы можем догадаться,что улучшение существующего программного обеспечения является очень дорогостоящим,потому что вы должны следить за регрессиями.По крайней мере,это сделало бы вышеперечисленные исследования согласованными между собой.</target>
        </trans-unit>
        <trans-unit id="01400b0b75aa93032834530c59a576c885a202c7" translate="yes" xml:space="preserve">
          <source>But what happens if the first bad commit is &quot;B&quot; and if it has been fixed in the &quot;main&quot; branch by commit &quot;F&quot;?</source>
          <target state="translated">Но что произойдёт,если первый плохой коммит будет &quot;B&quot; и если он был исправлен в &quot;основной&quot; ветке коммитом &quot;F&quot;?</target>
        </trans-unit>
        <trans-unit id="2333cc37236068d07ee88795051fd2e9ba955821" translate="yes" xml:space="preserve">
          <source>But you can use &lt;code&gt;reset --keep&lt;/code&gt; to remove the unwanted commit after you switched to &lt;code&gt;branch2&lt;/code&gt;.</source>
          <target state="translated">Но вы можете использовать &lt;code&gt;reset --keep&lt;/code&gt; , чтобы удалить нежелательную фиксацию после переключения на &lt;code&gt;branch2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d0b3a86464faedd1c461b3e2ac63fc4ba06661b" translate="yes" xml:space="preserve">
          <source>But you decided that the topic branch is not ready for public consumption yet. &quot;pull&quot; or &quot;merge&quot; always leaves the original tip of the current branch in &lt;code&gt;ORIG_HEAD&lt;/code&gt;, so resetting hard to it brings your index file and the working tree back to that state, and resets the tip of the branch to that commit.</source>
          <target state="translated">Но вы решили, что тематическая ветка еще не готова для публичного использования. &amp;laquo;pull&amp;raquo; или &amp;laquo;merge&amp;raquo; всегда оставляет исходную вершину текущей ветки в &lt;code&gt;ORIG_HEAD&lt;/code&gt; , поэтому жесткий сброс возвращает ваш индексный файл и рабочее дерево в это состояние и сбрасывает кончик ветки до этой фиксации.</target>
        </trans-unit>
        <trans-unit id="ec1fc17da64a933cb8c9dafb08caa5e756b65a2b" translate="yes" xml:space="preserve">
          <source>By adding a glob that matches the names of integration branches to this multi-valued configuration variable, the default merge message computed for merges into these integration branches will omit &quot;into &amp;lt;branch name&amp;gt;&quot; from its title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58a4c0205c696c7f9950dee21d8c3e1a3d8c1de" translate="yes" xml:space="preserve">
          <source>By default (or if &lt;code&gt;--no-reapply-cherry-picks&lt;/code&gt; is given), these commits will be automatically dropped. Because this necessitates reading all upstream commits, this can be expensive in repos with a large number of upstream commits that need to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ba832b59818b9d406aeb54ba66e145b5697021" translate="yes" xml:space="preserve">
          <source>By default (without --all or --tags) &lt;code&gt;git describe&lt;/code&gt; only shows annotated tags. For more information about creating annotated tags see the -a and -s options to &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию (без --all или --tags) &lt;code&gt;git describe&lt;/code&gt; показывает только аннотированные теги. Для получения дополнительной информации о создании аннотированных тегов см. Параметры -a и -s для &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2aacef9af72c222fb1b6acf47a0fa851e92d4733" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;git fetch&lt;/code&gt; refuses to update the head which corresponds to the current branch. This flag disables the check. This is purely for the internal use for &lt;code&gt;git pull&lt;/code&gt; to communicate with &lt;code&gt;git fetch&lt;/code&gt;, and unless you are implementing your own Porcelain you are not supposed to use it.</source>
          <target state="translated">По умолчанию &lt;code&gt;git fetch&lt;/code&gt; отказывается обновлять заголовок, соответствующий текущей ветке. Этот флаг отключает проверку. Это чисто для внутреннего использования &lt;code&gt;git pull&lt;/code&gt; для связи с &lt;code&gt;git fetch&lt;/code&gt; , и если вы не реализуете свой собственный Porcelain, вы не должны его использовать.</target>
        </trans-unit>
        <trans-unit id="1d408902dc303f6c00a1b0f596a5c28e377e82f7" translate="yes" xml:space="preserve">
          <source>By default Git will look for your hooks in the &lt;code&gt;$GIT_DIR/hooks&lt;/code&gt; directory. Set this to different path, e.g. &lt;code&gt;/etc/git/hooks&lt;/code&gt;, and Git will try to find your hooks in that directory, e.g. &lt;code&gt;/etc/git/hooks/pre-receive&lt;/code&gt; instead of in &lt;code&gt;$GIT_DIR/hooks/pre-receive&lt;/code&gt;.</source>
          <target state="translated">По умолчанию Git будет искать ваши хуки в &lt;code&gt;$GIT_DIR/hooks&lt;/code&gt; . Установите другой путь, например &lt;code&gt;/etc/git/hooks&lt;/code&gt; , и Git попытается найти ваши хуки в этом каталоге, например &lt;code&gt;/etc/git/hooks/pre-receive&lt;/code&gt; , а не в &lt;code&gt;$GIT_DIR/hooks/pre-receive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2707cacda66e328227d997bd98a14207b5d80af5" translate="yes" xml:space="preserve">
          <source>By default a &amp;lt;ref&amp;gt; not starting with refs/ is treated as the name of a remote-tracking branch (under refs/remotes/). This behavior can be modified using the --import-local option.</source>
          <target state="translated">По умолчанию &amp;lt;ref&amp;gt;, не начинающийся с refs /, рассматривается как имя ветки удаленного отслеживания (в разделе refs / remotes /). Это поведение можно изменить с помощью параметра --import-local.</target>
        </trans-unit>
        <trans-unit id="9fda6ea140eac0d5f03c38d0b89c06bf6c01dbaa" translate="yes" xml:space="preserve">
          <source>By default all Git repositories under &lt;code&gt;$projectroot&lt;/code&gt; are visible and available to gitweb. The list of projects is generated by default by scanning the &lt;code&gt;$projectroot&lt;/code&gt; directory for Git repositories (for object databases to be more exact; gitweb is not interested in a working area, and is best suited to showing &quot;bare&quot; repositories).</source>
          <target state="translated">По умолчанию все репозитории Git в &lt;code&gt;$projectroot&lt;/code&gt; видны и доступны для gitweb. Список проектов по умолчанию создается путем сканирования &lt;code&gt;$projectroot&lt;/code&gt; на предмет наличия репозиториев Git (точнее, для объектных баз данных; gitweb не интересует рабочая область и лучше всего подходит для отображения &amp;laquo;голых&amp;raquo; репозиториев).</target>
        </trans-unit>
        <trans-unit id="7d4dbfd64b78e6eb7460def3863c1e38e1d55fa2" translate="yes" xml:space="preserve">
          <source>By default all Git repositories under &lt;code&gt;$projectroot&lt;/code&gt; are visible and available to gitweb. You can however configure how gitweb controls access to repositories.</source>
          <target state="translated">По умолчанию все репозитории Git в &lt;code&gt;$projectroot&lt;/code&gt; видны и доступны для gitweb. Однако вы можете настроить, как gitweb контролирует доступ к репозиториям.</target>
        </trans-unit>
        <trans-unit id="6b749c474f0e8be473f5227adae69d6b82e99699" translate="yes" xml:space="preserve">
          <source>By default entries added by &quot;git add -N&quot; appear as an existing empty file in &quot;git diff&quot; and a new file in &quot;git diff --cached&quot;. This option makes the entry appear as a new file in &quot;git diff&quot; and non-existent in &quot;git diff --cached&quot;. This option could be reverted with &lt;code&gt;--ita-visible-in-index&lt;/code&gt;. Both options are experimental and could be removed in future.</source>
          <target state="translated">По умолчанию записи, добавленные с помощью &amp;laquo;git add -N&amp;raquo;, отображаются как существующий пустой файл в &amp;laquo;git diff&amp;raquo; и новый файл в &amp;laquo;git diff --cached&amp;raquo;. Эта опция заставляет запись отображаться как новый файл в &amp;laquo;git diff&amp;raquo; и не существовать в &amp;laquo;git diff --cached&amp;raquo;. Этот параметр можно &lt;code&gt;--ita-visible-in-index&lt;/code&gt; с помощью --ita-visible-in-index . Оба варианта являются экспериментальными и могут быть удалены в будущем.</target>
        </trans-unit>
        <trans-unit id="f92479038911d91ec691ca1995b6f59bbf4d3495" translate="yes" xml:space="preserve">
          <source>By default it uses SQLite databases in the Git directory, named &lt;code&gt;gitcvs.&amp;lt;module_name&amp;gt;.sqlite&lt;/code&gt;. Note that the SQLite backend creates temporary files in the same directory as the database file on write so it might not be enough to grant the users using &lt;code&gt;git-cvsserver&lt;/code&gt; write access to the database file without granting them write access to the directory, too.</source>
          <target state="translated">По умолчанию он использует базы данных SQLite в каталоге Git с именем &lt;code&gt;gitcvs.&amp;lt;module_name&amp;gt;.sqlite&lt;/code&gt; . Обратите внимание, что серверная часть SQLite создает временные файлы в том же каталоге, что и файл базы данных при записи, поэтому может быть недостаточно предоставить пользователям, использующим &lt;code&gt;git-cvsserver&lt;/code&gt; , доступ на запись к файлу базы данных, не предоставляя им также доступ на запись в каталог.</target>
        </trans-unit>
        <trans-unit id="c6b06e8b566ecf1a19a23c408ec4ad0c91c68502" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;man&lt;/code&gt; program will be used to display the manual page, but the &lt;code&gt;man.viewer&lt;/code&gt; configuration variable may be used to choose other display programs (see below).</source>
          <target state="translated">По умолчанию программа &lt;code&gt;man&lt;/code&gt; будет использоваться для отображения страницы руководства, но &lt;code&gt;man.viewer&lt;/code&gt; конфигурации man.viewer может использоваться для выбора других программ отображения (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="2e5b50ac3c7c5c555c2ca84f458ac39569a0ee21" translate="yes" xml:space="preserve">
          <source>By default the command records the date from the e-mail message as the commit author date, and uses the time of commit creation as the committer date. This allows the user to lie about the author date by using the same value as the committer date.</source>
          <target state="translated">По умолчанию команда записывает дату из почтового сообщения как дату автора коммита и использует время создания коммита как дату коммиттера.Это позволяет пользователю солгать о дате создания коммита,используя то же значение,что и дата коммиттера.</target>
        </trans-unit>
        <trans-unit id="eb47d162dbfc8bcd3a02f766bf35ff994d86e7f7" translate="yes" xml:space="preserve">
          <source>By default the command records the date from the e-mail message as the commit author date, and uses the time of commit creation as the committer date. This allows the user to lie about the committer date by using the same value as the author date.</source>
          <target state="translated">По умолчанию команда записывает дату из почтового сообщения как дату автора коммита и использует время создания коммита как дату коммиттера.Это позволяет пользователю солгать о дате коммиттера,используя то же значение,что и дата автора.</target>
        </trans-unit>
        <trans-unit id="6aeb14014b871b17a9d4f0da107bb610e5ea0157" translate="yes" xml:space="preserve">
          <source>By default the command shows all refs that match &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt;. This option makes it stop after showing that many refs.</source>
          <target state="translated">По умолчанию команда показывает все ссылки, соответствующие &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; . Эта опция останавливает его после показа такого количества ссылок.</target>
        </trans-unit>
        <trans-unit id="7d63d3915d070cca4c5d36e324ecb4a7f6a0679f" translate="yes" xml:space="preserve">
          <source>By default the command will try to detect the patch format automatically. This option allows the user to bypass the automatic detection and specify the patch format that the patch(es) should be interpreted as. Valid formats are mbox, mboxrd, stgit, stgit-series and hg.</source>
          <target state="translated">По умолчанию команда попытается определить формат патча автоматически.Эта опция позволяет пользователю обойти автоматическое обнаружение и указать формат патча,под которым патч(и)должен интерпретироваться.Допустимые форматы:mbox,mboxrd,stgit,stgit-series и hg.</target>
        </trans-unit>
        <trans-unit id="ee6799585dabe2a3016ffbe61452694b948c3ff6" translate="yes" xml:space="preserve">
          <source>By default the hooks directory is &lt;code&gt;$GIT_DIR/hooks&lt;/code&gt;, but that can be changed via the &lt;code&gt;core.hooksPath&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">По умолчанию каталог хуков - &lt;code&gt;$GIT_DIR/hooks&lt;/code&gt; , но его можно изменить с помощью &lt;code&gt;core.hooksPath&lt;/code&gt; конфигурации core.hooksPath (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1e420d062677a0d01238cac1bc0b0f93a32eaab8" translate="yes" xml:space="preserve">
          <source>By default the new trailer will appear at the end of all the existing trailers. If there is no existing trailer, the new trailer will appear after the commit message part of the output, and, if there is no line with only spaces at the end of the commit message part, one blank line will be added before the new trailer.</source>
          <target state="translated">По умолчанию новый прицеп появляется в конце всех существующих прицепов.Если нет существующего прицепа,новый прицеп появится после части сообщения о фиксации,а если в конце части сообщения о фиксации нет строки,содержащей только пробелы,то перед новым прицепом будет добавлена одна пустая строка.</target>
        </trans-unit>
        <trans-unit id="64ba0ec6c1bed38e21fc7f4f4a0aef9c8ebe7286" translate="yes" xml:space="preserve">
          <source>By default the server leaves the &lt;code&gt;-k&lt;/code&gt; mode blank for all files, which causes the CVS client to treat them as a text files, subject to end-of-line conversion on some platforms.</source>
          <target state="translated">По умолчанию сервер оставляет поле &lt;code&gt;-k&lt;/code&gt; пустым для всех файлов, из-за чего клиент CVS рассматривает их как текстовые файлы с учетом преобразования в конце строки на некоторых платформах.</target>
        </trans-unit>
        <trans-unit id="54dcb4758211c9d2e362cc73ee7a92ca62d914ac" translate="yes" xml:space="preserve">
          <source>By default this file controls only which projects are &lt;strong&gt;visible&lt;/strong&gt; on projects list page (note that entries that do not point to correctly recognized Git repositories won&amp;rsquo;t be displayed by gitweb). Even if a project is not visible on projects list page, you can view it nevertheless by hand-crafting a gitweb URL. By setting &lt;code&gt;$strict_export&lt;/code&gt; configuration variable (see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) to true value you can allow viewing only of repositories also shown on the overview page (i.e. only projects explicitly listed in projects list file will be accessible).</source>
          <target state="translated">По умолчанию этот файл управляет только тем, какие проекты &lt;strong&gt;отображаются&lt;/strong&gt; на странице списка проектов (обратите внимание, что записи, не указывающие на правильно распознанные репозитории Git, не будут отображаться gitweb). Даже если проект не отображается на странице списка проектов, вы, тем не менее, можете просмотреть его, вручную создав URL-адрес gitweb. Устанавливая &lt;code&gt;$strict_export&lt;/code&gt; переменной конфигурации (см &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt; ) к истинному значению вы можете разрешить просмотр только хранилищ также показанных на главной странице (т.е. только проекты явно перечисленных в списке проектов файл будет доступен).</target>
        </trans-unit>
        <trans-unit id="eff6e029914fd799d6a59537c15d9f46e8d635a6" translate="yes" xml:space="preserve">
          <source>By default when &lt;code&gt;--all&lt;/code&gt; is specified, reflogs from all working trees are processed. This option limits the processing to reflogs from the current working tree only.</source>
          <target state="translated">По умолчанию, когда указан &lt;code&gt;--all&lt;/code&gt; , обрабатываются рефлоги из всех рабочих деревьев. Эта опция ограничивает обработку рефлогами только из текущего рабочего дерева.</target>
        </trans-unit>
        <trans-unit id="898aa5511bdcc79b6cc36a9d8f0c7e7e9ffc1277" translate="yes" xml:space="preserve">
          <source>By default when fetching from a shallow repository, &lt;code&gt;git fetch&lt;/code&gt; refuses refs that require updating .git/shallow. This option updates .git/shallow and accept such refs.</source>
          <target state="translated">По умолчанию при выборке из мелкого репозитория &lt;code&gt;git fetch&lt;/code&gt; отклоняет ссылки, требующие обновления .git / shallow. Эта опция обновляет .git / shallow и принимает такие ссылки.</target>
        </trans-unit>
        <trans-unit id="8a946900900b0969e5566670798dfa0b25059b02" translate="yes" xml:space="preserve">
          <source>By default, &quot;updateInstead&quot; will refuse the push if the working tree or the index have any difference from the HEAD, but the &lt;code&gt;push-to-checkout&lt;/code&gt; hook can be used to customize this. See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию updateInstead откажется от отправки, если рабочее дерево или индекс имеют какое-либо отличие от HEAD, но для настройки этого можно использовать ловушку &lt;code&gt;push-to-checkout&lt;/code&gt; . См. &lt;a href=&quot;githooks&quot;&gt;Githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccc06ea9e45b9e60a670cf461c22563d24643639" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; creates packs that use delta-base offset. If you need to share your repository with Git older than version 1.4.4, either directly or via a dumb protocol such as http, then you need to set this option to &quot;false&quot; and repack. Access from old Git versions over the native protocol are unaffected by this option.</source>
          <target state="translated">По умолчанию &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; создает пакеты, в которых используется смещение дельта-базы. Если вам нужно поделиться своим репозиторием с Git старше версии 1.4.4, либо напрямую, либо через немой протокол, такой как http, тогда вам нужно установить для этой опции значение &amp;laquo;false&amp;raquo; и перепаковать. Эта опция не влияет на доступ из старых версий Git по собственному протоколу.</target>
        </trans-unit>
        <trans-unit id="207b9ec4a7354c6cbc08217ef08c22e3683c8d13" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; and &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; show files which are not currently tracked by Git. Directories which contain only untracked files, are shown with the directory name only. Showing untracked files means that Git needs to lstat() all the files in the whole repository, which might be slow on some systems. So, this variable controls how the commands displays the untracked files. Possible values are:</source>
          <target state="translated">По умолчанию &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; и &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; показывают файлы, которые в настоящее время не отслеживаются Git. Каталоги, содержащие только неотслеживаемые файлы, отображаются только с именем каталога. Отображение неотслеживаемых файлов означает, что Git необходимо выполнить lstat () для всех файлов во всем репозитории, что может быть медленным в некоторых системах. Итак, эта переменная управляет тем, как команды отображают неотслеживаемые файлы. Возможные значения:</target>
        </trans-unit>
        <trans-unit id="0594913527635a38d7d1da1f58cf2049e0d81ae9" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; shows paths relative to the current directory. Setting this variable to &lt;code&gt;false&lt;/code&gt; shows paths relative to the repository root (this was the default for Git prior to v1.5.4).</source>
          <target state="translated">По умолчанию &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; показывает пути относительно текущего каталога. Установка для этой переменной значения &lt;code&gt;false&lt;/code&gt; показывает пути относительно корня репозитория (это было по умолчанию для Git до v1.5.4).</target>
        </trans-unit>
        <trans-unit id="93044cb17b41f6ff0ab9ae102eca02ce8d5cdb16" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;add&lt;/code&gt; checks out &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt;, however, &lt;code&gt;--no-checkout&lt;/code&gt; can be used to suppress checkout in order to make customizations, such as configuring sparse-checkout. See &quot;Sparse checkout&quot; in &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию &lt;code&gt;add&lt;/code&gt; check out &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , однако, &lt;code&gt;--no-checkout&lt;/code&gt; можно использовать для подавления извлечения, чтобы сделать настройки, такие как настройка sparse-checkout. См. &amp;laquo;Редкая проверка&amp;raquo; в &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6911782a1bf788b96e52d6283b9603906afd385" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;add&lt;/code&gt; refuses to create a new working tree when &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a branch name and is already checked out by another working tree, or if &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is already assigned to some working tree but is missing (for instance, if &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; was deleted manually). This option overrides these safeguards. To add a missing but locked working tree path, specify &lt;code&gt;--force&lt;/code&gt; twice.</source>
          <target state="translated">По умолчанию &lt;code&gt;add&lt;/code&gt; отказывается создавать новое рабочее дерево, если &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; является именем ветви и уже извлечено другим рабочим деревом, или если &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; уже назначен какому-либо рабочему дереву, но отсутствует (например, если &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; был удален вручную). Эта опция отменяет эти меры безопасности. Чтобы добавить отсутствующий, но заблокированный путь к рабочему дереву, дважды укажите &lt;code&gt;--force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6808cb2e8497f1a21da404e6487ab0df6e47fd0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git add&lt;/code&gt; will warn when adding an embedded repository to the index without using &lt;code&gt;git submodule add&lt;/code&gt; to create an entry in &lt;code&gt;.gitmodules&lt;/code&gt;. This option will suppress the warning (e.g., if you are manually performing operations on submodules).</source>
          <target state="translated">По умолчанию &lt;code&gt;git add&lt;/code&gt; будет предупреждать при добавлении встроенного репозитория в индекс без использования &lt;code&gt;git submodule add&lt;/code&gt; для создания записи в &lt;code&gt;.gitmodules&lt;/code&gt; . Эта опция подавит предупреждение (например, если вы вручную выполняете операции с подмодулями).</target>
        </trans-unit>
        <trans-unit id="9f7a911ab745fcc1ecc2d75cf5b4666d5616a0f2" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git am&lt;/code&gt; will fail if the patch does not apply cleanly. When set to true, this setting tells &lt;code&gt;git am&lt;/code&gt; to fall back on 3-way merge if the patch records the identity of blobs it is supposed to apply to and we have those blobs available locally (equivalent to giving the &lt;code&gt;--3way&lt;/code&gt; option from the command line). Defaults to &lt;code&gt;false&lt;/code&gt;. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию &lt;code&gt;git am&lt;/code&gt; завершится ошибкой, если исправление не применимо правильно. Если установлено значение true, этот параметр указывает &lt;code&gt;git am&lt;/code&gt; вернуться к 3-стороннему слиянию, если патч записывает идентичность blob-объектов, к которым он должен применяться, и у нас есть эти &lt;code&gt;--3way&lt;/code&gt; доступные локально (что эквивалентно предоставлению опции -3way из командная строка). По умолчанию - &lt;code&gt;false&lt;/code&gt; . См. &lt;a href=&quot;git-am&quot;&gt;Git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04d5b79eb2c1cc00ec23b84308367755078f2519" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git apply&lt;/code&gt; expects that the patch being applied is a unified diff with at least one line of context. This provides good safety measures, but breaks down when applying a diff generated with &lt;code&gt;--unified=0&lt;/code&gt;. To bypass these checks use &lt;code&gt;--unidiff-zero&lt;/code&gt;.</source>
          <target state="translated">По умолчанию &lt;code&gt;git apply&lt;/code&gt; ожидает, что применяемый патч представляет собой унифицированный diff с хотя бы одной строкой контекста. Это обеспечивает хорошие меры безопасности, но не работает при применении diff, созданного с &lt;code&gt;--unified=0&lt;/code&gt; . Чтобы обойти эти проверки, используйте &lt;code&gt;--unidiff-zero&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc5e77409adaefd524775157d3aa209b06e80ef9" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git diff-tree --stdin&lt;/code&gt; does not show differences for merge commits. With this flag, it shows differences to that commit from all of its parents. See also &lt;code&gt;-c&lt;/code&gt;.</source>
          <target state="translated">По умолчанию &lt;code&gt;git diff-tree --stdin&lt;/code&gt; не показывает различия для коммитов слияния. С этим флагом он показывает отличия этого коммита от всех его родителей. См. Также &lt;code&gt;-c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44f438a687f3c8843b562164d423119ef0393e39" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git diff-tree --stdin&lt;/code&gt; shows differences, either in machine-readable form (without &lt;code&gt;-p&lt;/code&gt;) or in patch form (with &lt;code&gt;-p&lt;/code&gt;). This output can be suppressed. It is only useful with &lt;code&gt;-v&lt;/code&gt; flag.</source>
          <target state="translated">По умолчанию &lt;code&gt;git diff-tree --stdin&lt;/code&gt; показывает различия либо в машиночитаемой форме (без &lt;code&gt;-p&lt;/code&gt; ), либо в форме патча (с &lt;code&gt;-p&lt;/code&gt; ). Этот вывод можно подавить. Это полезно только с флагом &lt;code&gt;-v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40ac50c3f37c319af999ce66ed951594dd739e7b" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git log&lt;/code&gt; does not generate any diff output. The options below can be used to show the changes made by each commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ecfd2369ab83f2851da4837d8f55ae828a688b" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git merge&lt;/code&gt; command refuses to merge histories that do not share a common ancestor. This option can be used to override this safety when merging histories of two projects that started their lives independently. As that is a very rare occasion, no configuration variable to enable this by default exists and will not be added.</source>
          <target state="translated">По умолчанию команда &lt;code&gt;git merge&lt;/code&gt; отказывается объединять истории, не имеющие общего предка. Эта опция может использоваться для отмены этой безопасности при объединении историй двух проектов, которые начали свою жизнь независимо. Поскольку это очень редкий случай, конфигурационная переменная для включения этого по умолчанию не существует и не будет добавлена.</target>
        </trans-unit>
        <trans-unit id="c206e08a568b5af4b242b43f3b62e41c9c2a00a0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git status&lt;/code&gt; will automatically refresh the index, updating the cached stat information from the working tree and writing out the result. Writing out the updated index is an optimization that isn&amp;rsquo;t strictly necessary (&lt;code&gt;status&lt;/code&gt; computes the values for itself, but writing them out is just to save subsequent programs from repeating our computation). When &lt;code&gt;status&lt;/code&gt; is run in the background, the lock held during the write may conflict with other simultaneous processes, causing them to fail. Scripts running &lt;code&gt;status&lt;/code&gt; in the background should consider using &lt;code&gt;git --no-optional-locks status&lt;/code&gt; (see &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for details).</source>
          <target state="translated">По умолчанию &lt;code&gt;git status&lt;/code&gt; автоматически обновляет индекс, обновляя кешированную статистическую информацию из рабочего дерева и записывая результат. Запись обновленного индекса - это оптимизация, которая не является строго необходимой ( &lt;code&gt;status&lt;/code&gt; вычисляет значения для себя, но записывает их только для того, чтобы избежать повторения наших вычислений в последующих программах). Когда &lt;code&gt;status&lt;/code&gt; выполняется в фоновом режиме, блокировка, удерживаемая во время записи, может конфликтовать с другими одновременными процессами, вызывая их сбой. Скрипты, выполняющие &lt;code&gt;status&lt;/code&gt; в фоновом режиме, должны учитывать использование &lt;code&gt;git --no-optional-locks status&lt;/code&gt; (подробности см. В &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0166a80c7cb65bd63925a576fc16b6b5666a6f97" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git tag&lt;/code&gt; in sign-with-default mode (-s) will use your committer identity (of the form &lt;code&gt;Your Name &amp;lt;your@email.address&amp;gt;&lt;/code&gt;) to find a key. If you want to use a different default key, you can specify it in the repository configuration as follows:</source>
          <target state="translated">По умолчанию &lt;code&gt;git tag&lt;/code&gt; в режиме входа по умолчанию (-s) будет использовать ваше &lt;code&gt;Your Name &amp;lt;your@email.address&amp;gt;&lt;/code&gt; (в форме Ваше имя &amp;lt;your@email.address&amp;gt; ) для поиска ключа. Если вы хотите использовать другой ключ по умолчанию, вы можете указать его в конфигурации репозитория следующим образом:</target>
        </trans-unit>
        <trans-unit id="ab2e2876fa31ec281a3a2c1b794b7dec91ae3790" translate="yes" xml:space="preserve">
          <source>By default, Git determines the command line arguments to use based on the basename of the configured SSH command (configured using the environment variable &lt;code&gt;GIT_SSH&lt;/code&gt; or &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; or the config setting &lt;code&gt;core.sshCommand&lt;/code&gt;). If the basename is unrecognized, Git will attempt to detect support of OpenSSH options by first invoking the configured SSH command with the &lt;code&gt;-G&lt;/code&gt; (print configuration) option and will subsequently use OpenSSH options (if that is successful) or no options besides the host and remote command (if it fails).</source>
          <target state="translated">По умолчанию Git определяет используемые аргументы командной строки на основе базового имени настроенной команды SSH (настроенной с использованием переменной среды &lt;code&gt;GIT_SSH&lt;/code&gt; или &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; или параметра конфигурации &lt;code&gt;core.sshCommand&lt;/code&gt; ). Если базовое имя не распознано, Git попытается обнаружить поддержку параметров OpenSSH, сначала вызвав настроенную команду SSH с параметром &lt;code&gt;-G&lt;/code&gt; (конфигурация печати), и впоследствии будет использовать параметры OpenSSH (в случае успеха) или никакие параметры, кроме хоста и удаленная команда (в случае неудачи).</target>
        </trans-unit>
        <trans-unit id="b85b0c2bab173615caaf4bbe66c1c28d30e786cc" translate="yes" xml:space="preserve">
          <source>By default, Git does not consider the &quot;path&quot; component of an http URL to be worth matching via external helpers. This means that a credential stored for &lt;code&gt;https://example.com/foo.git&lt;/code&gt; will also be used for &lt;code&gt;https://example.com/bar.git&lt;/code&gt;. If you do want to distinguish these cases, set this option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">По умолчанию Git не считает, что компонент &amp;laquo;путь&amp;raquo; URL-адреса http заслуживает сопоставления с помощью внешних помощников. Это означает, что учетные данные, хранящиеся для &lt;code&gt;https://example.com/foo.git&lt;/code&gt; , также будут использоваться для &lt;code&gt;https://example.com/bar.git&lt;/code&gt; . Если вы хотите различать эти случаи, установите для этого параметра значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffe1eaf4d1c9cc64df80a6b16dfbf1fa771b52c9" translate="yes" xml:space="preserve">
          <source>By default, Git does not create an extra merge commit when merging a commit that is a descendant of the current commit. Instead, the tip of the current branch is fast-forwarded. When set to &lt;code&gt;false&lt;/code&gt;, this variable tells Git to create an extra merge commit in such a case (equivalent to giving the &lt;code&gt;--no-ff&lt;/code&gt; option from the command line). When set to &lt;code&gt;only&lt;/code&gt;, only such fast-forward merges are allowed (equivalent to giving the &lt;code&gt;--ff-only&lt;/code&gt; option from the command line).</source>
          <target state="translated">По умолчанию Git не создает дополнительную фиксацию слияния при слиянии фиксации, которая является потомком текущей фиксации. Вместо этого выполняется быстрая перемотка конца текущей ветви. Если установлено значение &lt;code&gt;false&lt;/code&gt; , эта переменная сообщает Git о необходимости создания в этом случае дополнительной фиксации слияния (эквивалентно &lt;code&gt;--no-ff&lt;/code&gt; параметра --no-ff из командной строки). Если установлено значение &lt;code&gt;only&lt;/code&gt; , разрешены только такие слияния с быстрой перемоткой вперед (эквивалентно &lt;code&gt;--ff-only&lt;/code&gt; параметра --ff-only из командной строки).</target>
        </trans-unit>
        <trans-unit id="32c0486f322ae0e4678fa0824298d7c086e9ee4f" translate="yes" xml:space="preserve">
          <source>By default, Git does not create an extra merge commit when merging a commit that is a descendant of the current commit. Instead, the tip of the current branch is fast-forwarded. When set to &lt;code&gt;false&lt;/code&gt;, this variable tells Git to create an extra merge commit in such a case (equivalent to giving the &lt;code&gt;--no-ff&lt;/code&gt; option from the command line). When set to &lt;code&gt;only&lt;/code&gt;, only such fast-forward merges are allowed (equivalent to giving the &lt;code&gt;--ff-only&lt;/code&gt; option from the command line). This setting overrides &lt;code&gt;merge.ff&lt;/code&gt; when pulling.</source>
          <target state="translated">По умолчанию Git не создает дополнительную фиксацию слияния при слиянии фиксации, которая является потомком текущей фиксации. Вместо этого выполняется быстрая перемотка конца текущей ветви. Если установлено значение &lt;code&gt;false&lt;/code&gt; , эта переменная сообщает Git о необходимости создания в этом случае дополнительной фиксации слияния (эквивалентно &lt;code&gt;--no-ff&lt;/code&gt; параметра --no-ff из командной строки). Если установлено значение &lt;code&gt;only&lt;/code&gt; , разрешены только такие слияния с быстрой перемоткой вперед (эквивалентно &lt;code&gt;--ff-only&lt;/code&gt; параметра --ff-only из командной строки). Этот параметр переопределяет &lt;code&gt;merge.ff&lt;/code&gt; при извлечении .</target>
        </trans-unit>
        <trans-unit id="e39ec591fb076f73ed5744e6cef724be12b06bb7" translate="yes" xml:space="preserve">
          <source>By default, Git uses the same style as the one used by the &quot;merge&quot; program from the RCS suite to present such a conflicted hunk, like this:</source>
          <target state="translated">По умолчанию Git использует тот же стиль,что и программа &quot;слияния&quot; из набора RCS,чтобы представить такой конфликтный ханк,как этот:</target>
        </trans-unit>
        <trans-unit id="632bd7b7934c758c995d70fcf0643a53a17ef93c" translate="yes" xml:space="preserve">
          <source>By default, Git will report, to the server, commits reachable from all local refs to find common commits in an attempt to reduce the size of the to-be-received packfile. If specified, Git will only report commits reachable from the given tips. This is useful to speed up fetches when the user knows which local ref is likely to have commits in common with the upstream ref being fetched.</source>
          <target state="translated">По умолчанию Git сообщает серверу о коммитах,доступных из всех локальных ссылок,чтобы найти общие коммиты в попытке уменьшить размер получаемого файла пакета.Если указано,то Git будет сообщать только о коммитах,доступных из приведённых советов.Это полезно для ускорения получения,когда пользователь знает,какой из локальных ссылок,скорее всего,будет содержать коммиты,общие с получаемым исходным документом.</target>
        </trans-unit>
        <trans-unit id="ec00d75621e8cccd0e732ba6afc6d14548cb8a4e" translate="yes" xml:space="preserve">
          <source>By default, Thunderbird will both wrap emails as well as flag them as being &lt;code&gt;format=flowed&lt;/code&gt;, both of which will make the resulting email unusable by Git.</source>
          <target state="translated">По умолчанию Thunderbird будет как переносить электронные письма, так и помечать их как &lt;code&gt;format=flowed&lt;/code&gt; , что сделает полученное письмо непригодным для использования Git.</target>
        </trans-unit>
        <trans-unit id="cb931511b378f47ed0453a8a3e156978cca15ca4" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;token&amp;gt;:&amp;lt;value&amp;gt;&lt;/code&gt; argument given using &lt;code&gt;--trailer&lt;/code&gt; will be appended after the existing trailers only if the last trailer has a different (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair (or if there is no existing trailer). The &amp;lt;token&amp;gt; and &amp;lt;value&amp;gt; parts will be trimmed to remove starting and trailing whitespace, and the resulting trimmed &amp;lt;token&amp;gt; and &amp;lt;value&amp;gt; will appear in the message like this:</source>
          <target state="translated">По умолчанию аргумент &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;token&amp;gt;:&amp;lt;value&amp;gt;&lt;/code&gt; , заданный с помощью &lt;code&gt;--trailer&lt;/code&gt; , будет добавлен после существующих трейлеров, только если последний трейлер имеет другую пару (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;). (или при отсутствии трейлера). Части &amp;lt;token&amp;gt; и &amp;lt;value&amp;gt; будут обрезаны, чтобы удалить начальные и конечные пробелы, и полученные обрезанные &amp;lt;token&amp;gt; и &amp;lt;value&amp;gt; появятся в сообщении следующим образом:</target>
        </trans-unit>
        <trans-unit id="434e3c7441379e0ab27bf268d6dee72f73412814" translate="yes" xml:space="preserve">
          <source>By default, a patch that affects outside the working area (either a Git controlled working tree, or the current working directory when &quot;git apply&quot; is used as a replacement of GNU patch) is rejected as a mistake (or a mischief).</source>
          <target state="translated">По умолчанию патч,влияющий за пределами рабочей области (либо управляемое Git'ом рабочее дерево,либо текущая рабочая директория,когда в качестве замены патча GNU используется &quot;git application&quot;),отклоняется как ошибка (или озорство).</target>
        </trans-unit>
        <trans-unit id="ea0000563105721871c07339b879614c007bc152" translate="yes" xml:space="preserve">
          <source>By default, a rebase will simply drop merge commits from the todo list, and put the rebased commits into a single, linear branch. With &lt;code&gt;--rebase-merges&lt;/code&gt;, the rebase will instead try to preserve the branching structure within the commits that are to be rebased, by recreating the merge commits. Any resolved merge conflicts or manual amendments in these merge commits will have to be resolved/re-applied manually.</source>
          <target state="translated">По умолчанию перебазирование просто удаляет коммиты слияния из списка задач и помещает перебазированные коммиты в единую линейную ветвь. С &lt;code&gt;--rebase-merges&lt;/code&gt; , перебазирование вместо этого будет пытаться сохранить структуру ветвления внутри коммитов, которые должны быть перебазированы, путем воссоздания коммитов слияния. Любые разрешенные конфликты слияния или ручные поправки в этих слияниях необходимо будет разрешить / повторно применить вручную.</target>
        </trans-unit>
        <trans-unit id="92f108d472fe60a4c0a9d93474bd0154c5c0a9e2" translate="yes" xml:space="preserve">
          <source>By default, all working trees will be examined by the following options when there are more than one (see &lt;a href=&quot;git-worktree&quot;&gt;git-worktree[1]&lt;/a&gt;): &lt;code&gt;--all&lt;/code&gt;, &lt;code&gt;--reflog&lt;/code&gt; and &lt;code&gt;--indexed-objects&lt;/code&gt;. This option forces them to examine the current working tree only.</source>
          <target state="translated">По умолчанию все рабочие деревья будут проверяться с помощью следующих параметров, если их несколько (см. &lt;a href=&quot;git-worktree&quot;&gt;Git-worktree [1]&lt;/a&gt; ): &lt;code&gt;--all&lt;/code&gt; , &lt;code&gt;--reflog&lt;/code&gt; и &lt;code&gt;--indexed-objects&lt;/code&gt; . Эта опция заставляет их проверять только текущее рабочее дерево.</target>
        </trans-unit>
        <trans-unit id="1feea061cb833e84202a29cce6b0929662b79ff4" translate="yes" xml:space="preserve">
          <source>By default, any branch can be used as the source for a &lt;code&gt;git p4 submit&lt;/code&gt; operation. This configuration variable, if set, permits only the named branches to be used as submit sources. Branch names must be the short names (no &quot;refs/heads/&quot;), and should be separated by commas (&quot;,&quot;), with no spaces.</source>
          <target state="translated">По умолчанию любая ветка может использоваться в качестве источника для операции &lt;code&gt;git p4 submit&lt;/code&gt; . Эта переменная конфигурации, если она установлена, разрешает использовать только названные ветви в качестве источников отправки. Имена веток должны быть короткими (без &amp;laquo;refs / heads /&amp;raquo;) и должны быть разделены запятыми (&amp;laquo;,&amp;raquo;) без пробелов.</target>
        </trans-unit>
        <trans-unit id="cb82df8bc2b9bbd18ae6db77878aee5f1360ef3d" translate="yes" xml:space="preserve">
          <source>By default, any of the given pathnames which match an ignore pattern will be output, one per line. If no pattern matches a given path, nothing will be output for that path; this means that path will not be ignored.</source>
          <target state="translated">По умолчанию будет выведено любое из заданных имен,которые соответствуют шаблону игнорирования,по одному на строку.Если ни один паттерн не соответствует заданному пути,то ничего не будет выведено для этого пути;это означает,что путь не будет проигнорирован.</target>
        </trans-unit>
        <trans-unit id="9840f412411908e4167e9b89fe91af90f41421dd" translate="yes" xml:space="preserve">
          <source>By default, any tag that points into the histories being fetched is also fetched; the effect is to fetch tags that point at branches that you are interested in. This default behavior can be changed by using the --tags or --no-tags options or by configuring remote.&amp;lt;name&amp;gt;.tagOpt. By using a refspec that fetches tags explicitly, you can fetch tags that do not point into branches you are interested in as well.</source>
          <target state="translated">По умолчанию также выбирается любой тег, указывающий на извлекаемые истории; эффект заключается в получении тегов, которые указывают на интересующие вас ветви. Это поведение по умолчанию можно изменить с помощью параметров --tags или --no-tags или путем настройки remote. &amp;lt;name&amp;gt; .tagOpt. Используя refspec, который явно выбирает теги, вы можете получать теги, которые также не указывают на интересующие вас ветви.</target>
        </trans-unit>
        <trans-unit id="859edf72ede027900910837f2758e52dd7b73b08" translate="yes" xml:space="preserve">
          <source>By default, cherry-picking a commit with an empty message will fail. This option overrides that behavior, allowing commits with empty messages to be cherry picked.</source>
          <target state="translated">По умолчанию,вишнёвый выбор фиксации с пустым сообщением будет неудачным.Эта опция отменяет такое поведение,позволяя вишнёвым выбирать коммиты с пустыми сообщениями.</target>
        </trans-unit>
        <trans-unit id="c2ea9611dc2821c1e170c93c6a453dad2dd69c2d" translate="yes" xml:space="preserve">
          <source>By default, cherry-picking an empty commit will fail, indicating that an explicit invocation of &lt;code&gt;git commit
--allow-empty&lt;/code&gt; is required. This option overrides that behavior, allowing empty commits to be preserved automatically in a cherry-pick. Note that when &quot;--ff&quot; is in effect, empty commits that meet the &quot;fast-forward&quot; requirement will be kept even without this option. Note also, that use of this option only keeps commits that were initially empty (i.e. the commit recorded the same tree as its parent). Commits which are made empty due to a previous commit are dropped. To force the inclusion of those commits use &lt;code&gt;--keep-redundant-commits&lt;/code&gt;.</source>
          <target state="translated">По умолчанию выбор вишни для пустой фиксации завершится ошибкой, что указывает на необходимость явного вызова &lt;code&gt;git commit --allow-empty&lt;/code&gt; . Эта опция переопределяет такое поведение, позволяя автоматически сохранять пустые коммиты в избранном. Обратите внимание, что когда действует &amp;laquo;--ff&amp;raquo;, пустые коммиты, отвечающие требованию &amp;laquo;быстрой перемотки вперед&amp;raquo;, будут сохраняться даже без этой опции. Также обратите внимание, что использование этой опции сохраняет только те коммиты, которые изначально были пустыми (т.е. коммит записал то же дерево, что и его родительский элемент). Коммиты, ставшие пустыми из-за предыдущего коммита, отбрасываются. Чтобы принудительно включить эти коммиты, используйте &lt;code&gt;--keep-redundant-commits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99709c182dff4928785c30a9c26112a6276f34d2" translate="yes" xml:space="preserve">
          <source>By default, each output file is numbered sequentially from 1, and uses the first line of the commit message (massaged for pathname safety) as the filename. With the &lt;code&gt;--numbered-files&lt;/code&gt; option, the output file names will only be numbers, without the first line of the commit appended. The names of the output files are printed to standard output, unless the &lt;code&gt;--stdout&lt;/code&gt; option is specified.</source>
          <target state="translated">По умолчанию каждый выходной файл нумеруется последовательно, начиная с 1, и в качестве имени файла использует первую строку сообщения фиксации (помеченного для безопасности имени пути). С параметром &lt;code&gt;--numbered-files&lt;/code&gt; имена выходных файлов будут только числами без добавления первой строки фиксации. Имена файлов вывода выводятся на стандартный вывод, если не указана опция &lt;code&gt;--stdout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d27fcf4c77eeb925cb728d43582e85b263ea253" translate="yes" xml:space="preserve">
          <source>By default, files recorded in the index but not checked out are reported as deleted. This flag makes &lt;code&gt;git diff-index&lt;/code&gt; say that all non-checked-out files are up to date.</source>
          <target state="translated">По умолчанию файлы, записанные в индекс, но не извлеченные, сообщаются как удаленные. Этот флаг заставляет &lt;code&gt;git diff-index&lt;/code&gt; сообщать, что все невырегистрированные файлы обновлены.</target>
        </trans-unit>
        <trans-unit id="96d263210b58deac758523391a09d64f715778b1" translate="yes" xml:space="preserve">
          <source>By default, git checks if a branch is force-updated during fetch. Pass --no-show-forced-updates or set fetch.showForcedUpdates to false to skip this check for performance reasons. If used during &lt;code&gt;git-pull&lt;/code&gt; the --ff-only option will still check for forced updates before attempting a fast-forward update. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию git проверяет, обновляется ли ветка принудительно во время выборки. Передайте --no-show-force-updates или установите для fetch.showForcedUpdates значение false, чтобы пропустить эту проверку из соображений производительности. Если используется во время &lt;code&gt;git-pull&lt;/code&gt; , параметр --ff-only все равно будет проверять наличие принудительных обновлений перед попыткой быстрого обновления. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bcd22a0eaa98a42d194f3bb1ae51915a7ffdb1a6" translate="yes" xml:space="preserve">
          <source>By default, git checks if a branch is force-updated during fetch. This can be disabled through fetch.showForcedUpdates, but the --show-forced-updates option guarantees this check occurs. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию git проверяет, обновляется ли ветка принудительно во время выборки. Это можно отключить с помощью fetch.showForcedUpdates, но параметр --show-force-updates гарантирует, что эта проверка произойдет. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd1e0c76aa334eb061df6d08bfae08afe6a12c47" translate="yes" xml:space="preserve">
          <source>By default, git-receive-pack will advertise the atomic push capability to its clients. If you don&amp;rsquo;t want to advertise this capability, set this variable to false.</source>
          <target state="translated">По умолчанию git-receive-pack объявляет своим клиентам возможность атомарного push. Если вы не хотите рекламировать эту возможность, установите для этой переменной значение false.</target>
        </trans-unit>
        <trans-unit id="1a975a4b5c6ec62cbf8bcd46f9c353ac381aea16" translate="yes" xml:space="preserve">
          <source>By default, git-receive-pack will run &quot;git-gc --auto&quot; after receiving data from git-push and updating refs. You can stop it by setting this variable to false.</source>
          <target state="translated">По умолчанию,git-recept-pack будет запускать &quot;git-gc --auto&quot; после получения данных от git-push и обновления ссылок.Вы можете остановить его,установив эту переменную в false.</target>
        </trans-unit>
        <trans-unit id="5b0b6ce94f774ad8adadd56d738f2417c24f77c0" translate="yes" xml:space="preserve">
          <source>By default, if &lt;code&gt;--staged&lt;/code&gt; is given, the contents are restored from &lt;code&gt;HEAD&lt;/code&gt;, otherwise from the index. Use &lt;code&gt;--source&lt;/code&gt; to restore from a different commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70c8c423de4cae10f96eacc568cc485314e2875" translate="yes" xml:space="preserve">
          <source>By default, notes are saved to and read from &lt;code&gt;refs/notes/commits&lt;/code&gt;, but this default can be overridden. See the OPTIONS, CONFIGURATION, and ENVIRONMENT sections below. If this ref does not exist, it will be quietly created when it is first needed to store a note.</source>
          <target state="translated">По умолчанию заметки сохраняются и читаются из &lt;code&gt;refs/notes/commits&lt;/code&gt; , но это значение по умолчанию можно изменить. См. Разделы &amp;laquo;ОПЦИИ&amp;raquo;, &amp;laquo;КОНФИГУРАЦИЯ&amp;raquo; и &amp;laquo;СРЕДА&amp;raquo; ниже. Если этот ref не существует, он будет незаметно создан при первой необходимости для сохранения заметки.</target>
        </trans-unit>
        <trans-unit id="7db5a2446c4341c306923f095d2e7f8486b88ca6" translate="yes" xml:space="preserve">
          <source>By default, only &lt;code&gt;upload-pack&lt;/code&gt; service is enabled, which serves &lt;code&gt;git fetch-pack&lt;/code&gt; and &lt;code&gt;git ls-remote&lt;/code&gt; clients, which are invoked from &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;git pull&lt;/code&gt;, and &lt;code&gt;git clone&lt;/code&gt;.</source>
          <target state="translated">По умолчанию включена только служба &lt;code&gt;upload-pack&lt;/code&gt; , которая обслуживает клиентов &lt;code&gt;git fetch-pack&lt;/code&gt; и &lt;code&gt;git ls-remote&lt;/code&gt; , которые вызываются из &lt;code&gt;git fetch&lt;/code&gt; , &lt;code&gt;git pull&lt;/code&gt; и &lt;code&gt;git clone&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1846d634d738a19049ad205d84e7a2d6c7d9843" translate="yes" xml:space="preserve">
          <source>By default, only tags on fetched branches are imported (see &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;).</source>
          <target state="translated">По умолчанию импортируются только теги выбранных веток (см. &lt;a href=&quot;git-fetch&quot;&gt;Git-fetch [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="330929bfac5b0158d7117057a21f395479839e07" translate="yes" xml:space="preserve">
          <source>By default, only the &lt;code&gt;upload-pack&lt;/code&gt; service is enabled, which serves &lt;code&gt;git fetch-pack&lt;/code&gt; and &lt;code&gt;git ls-remote&lt;/code&gt; clients, which are invoked from &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;git pull&lt;/code&gt;, and &lt;code&gt;git clone&lt;/code&gt;. If the client is authenticated, the &lt;code&gt;receive-pack&lt;/code&gt; service is enabled, which serves &lt;code&gt;git send-pack&lt;/code&gt; clients, which is invoked from &lt;code&gt;git push&lt;/code&gt;.</source>
          <target state="translated">По умолчанию включена только служба &lt;code&gt;upload-pack&lt;/code&gt; , которая обслуживает клиентов &lt;code&gt;git fetch-pack&lt;/code&gt; и &lt;code&gt;git ls-remote&lt;/code&gt; , которые вызываются из &lt;code&gt;git fetch&lt;/code&gt; , &lt;code&gt;git pull&lt;/code&gt; и &lt;code&gt;git clone&lt;/code&gt; . Если клиент аутентифицирован, включена служба &lt;code&gt;receive-pack&lt;/code&gt; , которая обслуживает клиентов &lt;code&gt;git send-pack&lt;/code&gt; , которые вызываются из &lt;code&gt;git push&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0265af70a38c5e98df8aec91888bb8ebd90e0b3b" translate="yes" xml:space="preserve">
          <source>By default, or when &lt;code&gt;no-rebase-cousins&lt;/code&gt; was specified, commits which do not have &lt;code&gt;&amp;lt;upstream&amp;gt;&lt;/code&gt; as direct ancestor will keep their original branch point, i.e. commits that would be excluded by &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;'s &lt;code&gt;--ancestry-path&lt;/code&gt; option will keep their original ancestry by default. If the &lt;code&gt;rebase-cousins&lt;/code&gt; mode is turned on, such commits are instead rebased onto &lt;code&gt;&amp;lt;upstream&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;lt;onto&amp;gt;&lt;/code&gt;, if specified).</source>
          <target state="translated">По умолчанию, или когда &lt;code&gt;no-rebase-cousins&lt;/code&gt; не было указано, фиксаций , которые не имеют &lt;code&gt;&amp;lt;upstream&amp;gt;&lt;/code&gt; как прямой предок будет держать свою первоначальную точку ветвления, то есть берет на себя обязательство , что будет исключен по &lt;a href=&quot;git-log&quot;&gt;GIT-журнал [1]&lt;/a&gt; &amp;laquo;s &lt;code&gt;--ancestry-path&lt;/code&gt; опция path по умолчанию сохранит их исходное происхождение. Если включен режим &lt;code&gt;rebase-cousins&lt;/code&gt; , такие коммиты вместо этого перебазируются на &lt;code&gt;&amp;lt;upstream&amp;gt;&lt;/code&gt; (или &lt;code&gt;&amp;lt;onto&amp;gt;&lt;/code&gt; , если указано).</target>
        </trans-unit>
        <trans-unit id="37d300d0f44033465a93b6aee94bab48b54dbf53" translate="yes" xml:space="preserve">
          <source>By default, p4 branches are stored in &lt;code&gt;refs/remotes/p4/&lt;/code&gt;, where they will be treated as remote-tracking branches by &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; and other commands. This option instead puts p4 branches in &lt;code&gt;refs/heads/p4/&lt;/code&gt;. Note that future sync operations must specify &lt;code&gt;--import-local&lt;/code&gt; as well so that they can find the p4 branches in refs/heads.</source>
          <target state="translated">По умолчанию ветки p4 хранятся в &lt;code&gt;refs/remotes/p4/&lt;/code&gt; , где &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; и другие команды будут рассматривать их как ветки удаленного отслеживания . Эта опция вместо этого помещает ветки p4 в &lt;code&gt;refs/heads/p4/&lt;/code&gt; . Обратите внимание, что будущие операции синхронизации также должны указывать &lt;code&gt;--import-local&lt;/code&gt; , чтобы они могли найти ветки p4 в refs / Heads.</target>
        </trans-unit>
        <trans-unit id="52600650ec12082f5a2bcdafd01bd7a6322055cf" translate="yes" xml:space="preserve">
          <source>By default, rebasing commits with an empty message will fail. This option overrides that behavior, allowing commits with empty messages to be rebased.</source>
          <target state="translated">По умолчанию,перезагрузка коммитов с пустым сообщением будет неудачной.Эта опция отменяет такое поведение,позволяя выполнять коммиты с пустыми сообщениями.</target>
        </trans-unit>
        <trans-unit id="aab8804804be7a1049e7aa89e2807caa0461793c" translate="yes" xml:space="preserve">
          <source>By default, running a command such as &lt;code&gt;git fast-export
master~5..master&lt;/code&gt; will not include the commit master~5 and will make master~4 no longer have master~5 as a parent (though both the old master~4 and new master~4 will have all the same files). Use --reference-excluded-parents to instead have the stream refer to commits in the excluded range of history by their sha1sum. Note that the resulting stream can only be used by a repository which already contains the necessary parent commits.</source>
          <target state="translated">По умолчанию выполнение такой команды, как &lt;code&gt;git fast-export master~5..master&lt;/code&gt; не будет включать мастер фиксации ~ 5 и сделает master ~ 4 более не имеющим master ~ 5 в качестве родительского (хотя и старый master ~ 4, и новый мастер ~ 4 будет иметь все те же файлы). Используйте --reference-excluded-parent, чтобы вместо этого поток ссылался на коммиты в исключенном диапазоне истории по их sha1sum. Обратите внимание, что полученный поток может использоваться только репозиторием, который уже содержит необходимые родительские коммиты.</target>
        </trans-unit>
        <trans-unit id="d83beffd98b552e4707fcc4f203041336c446345" translate="yes" xml:space="preserve">
          <source>By default, shows the tags, heads, and remote refs.</source>
          <target state="translated">По умолчанию отображаются теги,головы и удаленные ссылки.</target>
        </trans-unit>
        <trans-unit id="9534d3a85e2055ad7b75dcf81f0ec911d150730a" translate="yes" xml:space="preserve">
          <source>By default, tabs are expanded in pretty formats that indent the log message by 4 spaces (i.e. &lt;code&gt;medium&lt;/code&gt;, which is the default, &lt;code&gt;full&lt;/code&gt;, and &lt;code&gt;fuller&lt;/code&gt;).</source>
          <target state="translated">По умолчанию вкладки разворачиваются в красивых форматах, в которых сообщение журнала отступает на 4 пробела (т.е. &lt;code&gt;medium&lt;/code&gt; , по умолчанию, &lt;code&gt;full&lt;/code&gt; и &lt;code&gt;fuller&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8c576d24c20a06a3fa3293a553efd1880bf67bd" translate="yes" xml:space="preserve">
          <source>By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally. This option disables this automatic tag following. The default behavior for a remote may be specified with the remote.&amp;lt;name&amp;gt;.tagOpt setting. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">По умолчанию теги, указывающие на объекты, загруженные из удаленного репозитория, выбираются и сохраняются локально. Эта опция отключает автоматическое отслеживание тегов. Поведение по умолчанию для пульта дистанционного управления можно указать с помощью параметра remote. &amp;lt;name&amp;gt; .tagOpt. См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffdb9a1efc1700312a38f928a2009acf370d9974" translate="yes" xml:space="preserve">
          <source>By default, the branches and their commits are shown in reverse chronological order. This option makes them appear in topological order (i.e., descendant commits are shown before their parents).</source>
          <target state="translated">По умолчанию ветки и их коммиты показаны в обратном хронологическом порядке.Эта опция заставляет их появляться в топологическом порядке (т.е.коммиты потомков показываются перед родителями).</target>
        </trans-unit>
        <trans-unit id="7d6c7baaf0bf9e427c6cfd338efdec2fba7e7759" translate="yes" xml:space="preserve">
          <source>By default, the command outputs warning messages but applies the patch. When &lt;code&gt;git-apply&lt;/code&gt; is used for statistics and not applying a patch, it defaults to &lt;code&gt;nowarn&lt;/code&gt;.</source>
          <target state="translated">По умолчанию команда выводит предупреждающие сообщения, но применяет исправление. Когда &lt;code&gt;git-apply&lt;/code&gt; используется для статистики, а не для применения патча, по умолчанию используется &lt;code&gt;nowarn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a611e350871da16559e274274576dfaf4df893f3" translate="yes" xml:space="preserve">
          <source>By default, the command passes &lt;code&gt;--delta-base-offset&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;; this typically results in slightly smaller packs, but the generated packs are incompatible with versions of Git older than version 1.4.4. If you need to share your repository with such ancient Git versions, either directly or via the dumb http protocol, then you need to set the configuration variable &lt;code&gt;repack.UseDeltaBaseOffset&lt;/code&gt; to &quot;false&quot; and repack. Access from old Git versions over the native protocol is unaffected by this option as the conversion is performed on the fly as needed in that case.</source>
          <target state="translated">По умолчанию команда передает параметр &lt;code&gt;--delta-base-offset&lt;/code&gt; в &lt;code&gt;git pack-objects&lt;/code&gt; ; обычно это приводит к немного меньшим размерам пакетов, но сгенерированные пакеты несовместимы с версиями Git старше версии 1.4.4. Если вам нужно поделиться своим репозиторием с такими древними версиями Git, либо напрямую, либо через тупой протокол http, вам нужно установить для переменной конфигурации &lt;code&gt;repack.UseDeltaBaseOffset&lt;/code&gt; значение &amp;laquo;false&amp;raquo; и перепаковать. Эта опция не влияет на доступ из старых версий Git по собственному протоколу, поскольку в этом случае преобразование выполняется на лету.</target>
        </trans-unit>
        <trans-unit id="4f861a2e54471285f5e27b71719f8d0cdb51509e" translate="yes" xml:space="preserve">
          <source>By default, the command shows the filename for each match. &lt;code&gt;-h&lt;/code&gt; option is used to suppress this output. &lt;code&gt;-H&lt;/code&gt; is there for completeness and does not do anything except it overrides &lt;code&gt;-h&lt;/code&gt; given earlier on the command line.</source>
          <target state="translated">По умолчанию команда показывает имя файла для каждого совпадения. &lt;code&gt;-h&lt;/code&gt; используется для подавления этого вывода. &lt;code&gt;-H&lt;/code&gt; предназначен для полноты и ничего не делает, кроме как переопределяет &lt;code&gt;-h&lt;/code&gt; , указанный ранее в командной строке.</target>
        </trans-unit>
        <trans-unit id="13a9b6e24e13c9eb4f96f597a6a5cd1c71b0690a" translate="yes" xml:space="preserve">
          <source>By default, the commands above can be executed only with the &lt;code&gt;-c&lt;/code&gt; option; the shell is not interactive.</source>
          <target state="translated">По умолчанию приведенные выше команды могут выполняться только с параметром &lt;code&gt;-c&lt;/code&gt; ; оболочка не интерактивна.</target>
        </trans-unit>
        <trans-unit id="96284dfd9f407661b68729a78fcd24af10b360fa" translate="yes" xml:space="preserve">
          <source>By default, the commits are shown in reverse chronological order.</source>
          <target state="translated">По умолчанию коммиты отображаются в обратном хронологическом порядке.</target>
        </trans-unit>
        <trans-unit id="41e61e3f14f2f076835cbd248b96763ec755aaf1" translate="yes" xml:space="preserve">
          <source>By default, the configuration flag &lt;code&gt;receive.denyNonFastForwards&lt;/code&gt; is enabled in shared repositories, so that you cannot force a non fast-forwarding push into it.</source>
          <target state="translated">По умолчанию флаг конфигурации &lt;code&gt;receive.denyNonFastForwards&lt;/code&gt; включен в общих репозиториях, так что вы не можете принудительно отправить в него push без быстрой перемотки.</target>
        </trans-unit>
        <trans-unit id="96f5a0af42c4430da235fb8eb151d52244069b6f" translate="yes" xml:space="preserve">
          <source>By default, the notes shown are from the notes refs listed in the &lt;code&gt;core.notesRef&lt;/code&gt; and &lt;code&gt;notes.displayRef&lt;/code&gt; variables (or corresponding environment overrides). See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">По умолчанию показанные заметки взяты из &lt;code&gt;core.notesRef&lt;/code&gt; на заметки, перечисленных в переменных core.notesRef и &lt;code&gt;notes.displayRef&lt;/code&gt; (или соответствующих переопределениях среды). См. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="720f82840fb154598c30c373c9317d22846223a4" translate="yes" xml:space="preserve">
          <source>By default, the output omits merges that are reachable from only one tip being shown. This option makes them visible.</source>
          <target state="translated">По умолчанию выходные данные опускаются при слиянии,которое достижимо только из одного отображаемого наконечника.Этот параметр делает их видимыми.</target>
        </trans-unit>
        <trans-unit id="5af8b38407e84c0cf68e927bffe60812fcb3c4e9" translate="yes" xml:space="preserve">
          <source>By default, the repository &quot;config&quot; file is shared across all working trees. If the config variables &lt;code&gt;core.bare&lt;/code&gt; or &lt;code&gt;core.worktree&lt;/code&gt; are already present in the config file, they will be applied to the main working trees only.</source>
          <target state="translated">По умолчанию конфигурационный файл репозитория является общим для всех рабочих деревьев. Если переменные конфигурации &lt;code&gt;core.bare&lt;/code&gt; или &lt;code&gt;core.worktree&lt;/code&gt; уже присутствуют в файле конфигурации, они будут применены только к основным рабочим деревьям.</target>
        </trans-unit>
        <trans-unit id="1d794a43930ea258acdc77025c8009e643f727f7" translate="yes" xml:space="preserve">
          <source>By default, the repository &lt;code&gt;config&lt;/code&gt; file is shared across all working trees. If the config variables &lt;code&gt;core.bare&lt;/code&gt; or &lt;code&gt;core.worktree&lt;/code&gt; are already present in the config file, they will be applied to the main working trees only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973434bf7e817a557d276186c33c139503bc7733" translate="yes" xml:space="preserve">
          <source>By default, the restore sources for working tree and the index are the index and &lt;code&gt;HEAD&lt;/code&gt; respectively. &lt;code&gt;--source&lt;/code&gt; could be used to specify a commit as the restore source.</source>
          <target state="translated">По умолчанию источниками восстановления для рабочего дерева и индекса являются индекс и &lt;code&gt;HEAD&lt;/code&gt; соответственно. &lt;code&gt;--source&lt;/code&gt; можно использовать для указания фиксации в качестве источника восстановления.</target>
        </trans-unit>
        <trans-unit id="6198a2f3a4209e82ce868cd683f2d31abc69a314" translate="yes" xml:space="preserve">
          <source>By default, the sparse-checkout file uses the same syntax as &lt;code&gt;.gitignore&lt;/code&gt; files.</source>
          <target state="translated">По умолчанию файл sparse-checkout использует тот же синтаксис, что &lt;code&gt;.gitignore&lt;/code&gt; файлы .gitignore .</target>
        </trans-unit>
        <trans-unit id="22a25d0b8a2e5ce87fbc59e939918c48f09b2958" translate="yes" xml:space="preserve">
          <source>By default, the subject of a single patch is &quot;[PATCH] &quot; followed by the concatenation of lines from the commit message up to the first blank line (see the DISCUSSION section of &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;).</source>
          <target state="translated">По умолчанию тема одного патча - &amp;laquo;[PATCH]&amp;raquo;, за которой следует объединение строк от сообщения фиксации до первой пустой строки (см. Раздел ОБСУЖДЕНИЕ в &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9704a5c766445678507f7af7f587edd379d84cf0" translate="yes" xml:space="preserve">
          <source>By default, this uses the same built-in 3-way merge driver as is the case when the &lt;code&gt;merge&lt;/code&gt; attribute is set. However, the &lt;code&gt;merge.default&lt;/code&gt; configuration variable can name different merge driver to be used with paths for which the &lt;code&gt;merge&lt;/code&gt; attribute is unspecified.</source>
          <target state="translated">По умолчанию здесь используется тот же встроенный драйвер трехстороннего слияния, что и в случае, когда установлен атрибут &lt;code&gt;merge&lt;/code&gt; . Однако в переменной конфигурации &lt;code&gt;merge.default&lt;/code&gt; можно указать другой драйвер слияния, который будет использоваться с путями, для которых атрибут &lt;code&gt;merge&lt;/code&gt; не указан.</target>
        </trans-unit>
        <trans-unit id="fb719865937ac64c446567c5ed40eaa328116bc6" translate="yes" xml:space="preserve">
          <source>By default, this will return your tree to the commit that was checked out before &lt;code&gt;git bisect start&lt;/code&gt;. (A new &lt;code&gt;git bisect start&lt;/code&gt; will also do that, as it cleans up the old bisection state.)</source>
          <target state="translated">По умолчанию это вернет ваше дерево в коммит, который был извлечен до &lt;code&gt;git bisect start&lt;/code&gt; . (Новый &lt;code&gt;git bisect start&lt;/code&gt; также сделает это, поскольку он очищает старое состояние bisect .)</target>
        </trans-unit>
        <trans-unit id="d0131180d6acb72b151d5763656b5ee5ec67d9f6" translate="yes" xml:space="preserve">
          <source>By default, tracked files are not shown at all since they are not subject to exclude rules; but see &amp;lsquo;--no-index&amp;rsquo;.</source>
          <target state="translated">По умолчанию отслеживаемые файлы вообще не отображаются, поскольку для них не действуют правила исключения; но смотрите '--no-index'.</target>
        </trans-unit>
        <trans-unit id="055c65bfcac14882dd3e00e849a98c92a82c1b80" translate="yes" xml:space="preserve">
          <source>By default, when a file &lt;code&gt;path&lt;/code&gt; exists in the index, &lt;code&gt;git update-index&lt;/code&gt; refuses an attempt to add &lt;code&gt;path/file&lt;/code&gt;. Similarly if a file &lt;code&gt;path/file&lt;/code&gt; exists, a file &lt;code&gt;path&lt;/code&gt; cannot be added. With --replace flag, existing entries that conflict with the entry being added are automatically removed with warning messages.</source>
          <target state="translated">По умолчанию, когда &lt;code&gt;path&lt;/code&gt; к файлу существует в индексе, &lt;code&gt;git update-index&lt;/code&gt; отклоняет попытку добавить &lt;code&gt;path/file&lt;/code&gt; . Аналогично, если &lt;code&gt;path/file&lt;/code&gt; к файлу / файлу существует, &lt;code&gt;path&lt;/code&gt; к файлу добавить нельзя. С флагом --replace существующие записи, которые конфликтуют с добавляемой, автоматически удаляются с предупреждениями.</target>
        </trans-unit>
        <trans-unit id="299147d01326bdbf4534148e9d9d3fd6c07e2d71" translate="yes" xml:space="preserve">
          <source>By default, when running &lt;code&gt;git sparse-checkout init&lt;/code&gt;, the root directory is added as a parent pattern. At this point, the sparse-checkout file contains the following patterns:</source>
          <target state="translated">По умолчанию при запуске &lt;code&gt;git sparse-checkout init&lt;/code&gt; корневой каталог добавляется как родительский шаблон. На этом этапе файл разреженной проверки содержит следующие шаблоны:</target>
        </trans-unit>
        <trans-unit id="783945c123405237e5678d472e74b9fc2e2ebcbd" translate="yes" xml:space="preserve">
          <source>By default, when tracing is activated, Git redacts the values of cookies, the &quot;Authorization:&quot; header, and the &quot;Proxy-Authorization:&quot; header. Set this variable to &lt;code&gt;0&lt;/code&gt; to prevent this redaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93102cd6e4e7e1fd617df0a6116a6e8dabe44d67" translate="yes" xml:space="preserve">
          <source>By design, Git treats data trusted to it with caution. However, even in the absence of bugs in Git itself, it is still possible that hardware or operating system errors could corrupt data.</source>
          <target state="translated">По своей конструкции Git с осторожностью относится к данным,которым он доверяет.Однако даже при отсутствии ошибок в самом Git'е всё равно возможно,что аппаратные ошибки или ошибки операционной системы могут привести к повреждению данных.</target>
        </trans-unit>
        <trans-unit id="0405b4cdacdc12c8e141d09b19a221661400dcb6" translate="yes" xml:space="preserve">
          <source>By examining &lt;code&gt;t/.gitattributes&lt;/code&gt; (which is in the same directory as the path in question), Git finds that the first line matches. &lt;code&gt;merge&lt;/code&gt; attribute is set. It also finds that the second line matches, and attributes &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; are unset.</source>
          <target state="translated">Изучив &lt;code&gt;t/.gitattributes&lt;/code&gt; (который находится в том же каталоге, что и рассматриваемый путь), Git обнаруживает, что первая строка совпадает. &lt;code&gt;merge&lt;/code&gt; атрибут слияния . Он также обнаруживает, что вторая строка совпадает, а атрибуты &lt;code&gt;foo&lt;/code&gt; и &lt;code&gt;bar&lt;/code&gt; не установлены.</target>
        </trans-unit>
        <trans-unit id="6019b6edc3f8183a9650b814f1e96d2397d6c92e" translate="yes" xml:space="preserve">
          <source>By now, you know what the index is (and find the corresponding data structures in &lt;code&gt;cache.h&lt;/code&gt;), and that there are just a couple of object types (blobs, trees, commits and tags) which inherit their common structure from &lt;code&gt;struct object&lt;/code&gt;, which is their first member (and thus, you can cast e.g. &lt;code&gt;(struct object *)commit&lt;/code&gt; to achieve the &lt;code&gt;same&lt;/code&gt; as &lt;code&gt;&amp;amp;commit&amp;rarr;object&lt;/code&gt;, i.e. get at the object name and flags).</source>
          <target state="translated">К настоящему моменту вы знаете, что такое индекс (и найдете соответствующие структуры данных в &lt;code&gt;cache.h&lt;/code&gt; ), и что существует всего несколько типов объектов (капли, деревья, коммиты и теги), которые наследуют свою общую структуру от &lt;code&gt;struct object&lt;/code&gt; , который является их первым членом (и, таким образом, вы можете преобразовать, например, &lt;code&gt;(struct object *)commit&lt;/code&gt; для достижения того &lt;code&gt;same&lt;/code&gt; что &lt;code&gt;&amp;amp;commit&amp;rarr;object&lt;/code&gt; , т.е. получить имя объекта и флаги).</target>
        </trans-unit>
        <trans-unit id="a2527de53eca60aedafd214cc771f0facd3ab5eb" translate="yes" xml:space="preserve">
          <source>By now, you know what the index is (and find the corresponding data structures in &lt;code&gt;cache.h&lt;/code&gt;), and that there are just a couple of object types (blobs, trees, commits and tags) which inherit their common structure from &lt;code&gt;struct object&lt;/code&gt;, which is their first member (and thus, you can cast e.g. &lt;code&gt;(struct object *)commit&lt;/code&gt; to achieve the &lt;code&gt;same&lt;/code&gt; as &lt;code&gt;&amp;amp;commit-&amp;gt;object&lt;/code&gt;, i.e. get at the object name and flags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc0a0343ad2fdcba9cb4eccfe4e06a4bbef7383" translate="yes" xml:space="preserve">
          <source>By replacing the command &quot;pick&quot; with the command &quot;edit&quot;, you can tell &lt;code&gt;git rebase&lt;/code&gt; to stop after applying that commit, so that you can edit the files and/or the commit message, amend the commit, and continue rebasing.</source>
          <target state="translated">Заменив команду &amp;laquo;pick&amp;raquo; на команду &amp;laquo;edit&amp;raquo;, вы можете указать &lt;code&gt;git rebase&lt;/code&gt; остановиться после применения этой фиксации, чтобы вы могли редактировать файлы и / или сообщение фиксации, изменять фиксацию и продолжать перебазирование.</target>
        </trans-unit>
        <trans-unit id="38723ef3d6552eb371410d9afcccdbb440b0f54e" translate="yes" xml:space="preserve">
          <source>By setting this variable to a string, &lt;code&gt;git receive-pack&lt;/code&gt; will accept a &lt;code&gt;git push --signed&lt;/code&gt; and verifies it by using a &quot;nonce&quot; protected by HMAC using this string as a secret key.</source>
          <target state="translated">Установив для этой переменной строку, &lt;code&gt;git receive-pack&lt;/code&gt; примет &lt;code&gt;git push --signed&lt;/code&gt; и проверит его, используя &quot;nonce&quot;, защищенный HMAC, используя эту строку в качестве секретного ключа.</target>
        </trans-unit>
        <trans-unit id="b0ec84a28e8863d61bfe49155bbc56f1b080a18a" translate="yes" xml:space="preserve">
          <source>By specifying &lt;code&gt;base&lt;/code&gt; as the limit, you can avoid listing commits between &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;topic&lt;/code&gt;:</source>
          <target state="translated">Указав &lt;code&gt;base&lt;/code&gt; как предел, вы можете избежать перечисления коммитов между &lt;code&gt;base&lt;/code&gt; и &lt;code&gt;topic&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bac0dcb4a691d6bbb7adf78bc3225e969e991ed2" translate="yes" xml:space="preserve">
          <source>By specifying a single suffix in this variable, any tagname containing that suffix will appear before the corresponding main release. E.g. if the variable is set to &quot;-rc&quot;, then all &quot;1.0-rcX&quot; tags will appear before &quot;1.0&quot;. If specified multiple times, once per suffix, then the order of suffixes in the configuration will determine the sorting order of tagnames with those suffixes. E.g. if &quot;-pre&quot; appears before &quot;-rc&quot; in the configuration, then all &quot;1.0-preX&quot; tags will be listed before any &quot;1.0-rcX&quot; tags. The placement of the main release tag relative to tags with various suffixes can be determined by specifying the empty suffix among those other suffixes. E.g. if the suffixes &quot;-rc&quot;, &quot;&quot;, &quot;-ck&quot; and &quot;-bfs&quot; appear in the configuration in this order, then all &quot;v4.8-rcX&quot; tags are listed first, followed by &quot;v4.8&quot;, then &quot;v4.8-ckX&quot; and finally &quot;v4.8-bfsX&quot;.</source>
          <target state="translated">Указав один суффикс в этой переменной,любое имя,содержащее этот суффикс,появится перед соответствующим главным релизом.Например,если переменная установлена в &quot;-rc&quot;,то перед &quot;1.0&quot; появятся все тэги &quot;1.0-rcX&quot;.Если задать несколько раз,один раз на суффикс,то порядок следования суффиксов в конфигурации будет определять порядок сортировки магнетических имен с этими суффиксами.Например,если &quot;-pre&quot; появится перед &quot;-rc&quot; в конфигурации,то все тэги &quot;1.0-preX&quot; будут перечислены перед любыми тэгами &quot;1.0-rcX&quot;.Расположение основного тега выпуска относительно тегов с различными суффиксами может быть определено путем указания пустого суффикса среди этих суффиксов.Например,если суффиксы &quot;-rc&quot;,&quot;&quot;,&quot;-ck&quot; и &quot;-bfs&quot; появляются в конфигурации в таком порядке,то сначала перечисляются все тэги &quot;v4.8-rcX&quot;,затем &quot;v4.8&quot;,затем &quot;v4.8-ckX&quot; и,наконец,&quot;v4.8-bfsX&quot;.</target>
        </trans-unit>
        <trans-unit id="73d10606466530ea834324e2af3cd4f5fdf3b7ef" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; arguments, e.g., path limiters, you can limit the set of revisions which get rewritten. However, positive refs on the command line are distinguished: we don&amp;rsquo;t let them be excluded by such limiters. For this purpose, they are instead rewritten to point at the nearest ancestor that was not excluded.</source>
          <target state="translated">Используя аргументы &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; , например ограничители пути, вы можете ограничить набор ревизий, которые будут перезаписаны. Однако положительные ссылки в командной строке различаются: мы не позволяем исключать их такими ограничителями. Для этого они вместо этого переписываются так, чтобы указывать на ближайшего предка, который не был исключен.</target>
        </trans-unit>
        <trans-unit id="2fbc7b3eb43b76b2746e664c28cb9ad054eb9a86" translate="yes" xml:space="preserve">
          <source>Bypass the post-rewrite hook.</source>
          <target state="translated">Обойти крюк после перезаписи.</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="2b7976aa8c8ee62577557b0faf6cd45c7d87d599" translate="yes" xml:space="preserve">
          <source>C: copy of a file into a new one</source>
          <target state="translated">C:копирование файла в новый.</target>
        </trans-unit>
        <trans-unit id="8cb2e80198d1a22ece7b2150ad287e7b39ba33cd" translate="yes" xml:space="preserve">
          <source>CHUNK DATA:</source>
          <target state="translated">CHUNK DATA:</target>
        </trans-unit>
        <trans-unit id="9da2b59eccc71e5c2791bd9f721e6de7f9e4a527" translate="yes" xml:space="preserve">
          <source>CHUNK LOOKUP:</source>
          <target state="translated">CHUNK LOOKUP:</target>
        </trans-unit>
        <trans-unit id="025c408a5504f0e808d096b14c696e6a19ee3cbf" translate="yes" xml:space="preserve">
          <source>CONTENT_TYPE</source>
          <target state="translated">CONTENT_TYPE</target>
        </trans-unit>
        <trans-unit id="45649b220c5ae097eced7a136897aeb49a47599c" translate="yes" xml:space="preserve">
          <source>CRLF Line Ending Conversions</source>
          <target state="translated">Преобразования для окончательной обработки линий CRLF</target>
        </trans-unit>
        <trans-unit id="4d982ea44c2ace64324fd7fbacbc4c4d91f3e200" translate="yes" xml:space="preserve">
          <source>CRLF conversion bears a slight chance of corrupting data. When it is enabled, Git will convert CRLF to LF during commit and LF to CRLF during checkout. A file that contains a mixture of LF and CRLF before the commit cannot be recreated by Git. For text files this is the right thing to do: it corrects line endings such that we have only LF line endings in the repository. But for binary files that are accidentally classified as text the conversion can corrupt data.</source>
          <target state="translated">Преобразование CRLF несет в себе небольшую вероятность повреждения данных.Когда он включен,Git будет конвертировать CRLF в LF во время коммита и LF в CRLF во время проверки.Файл,содержащий смесь LF и CRLF перед коммитом,не может быть воссоздан Git'ом.Для текстовых файлов это правильно:он исправляет окончания строк так,чтобы в репозитории были только окончания LF-строк.Но для двоичных файлов,случайно классифицированных как текстовые,преобразование может привести к повреждению данных.</target>
        </trans-unit>
        <trans-unit id="b2dadeb076c332a230cd3f419ccce73fc473e9b1" translate="yes" xml:space="preserve">
          <source>CVS 1.11.17 on MacOSX (from Fink package)</source>
          <target state="translated">CVS 1.11.17 на MacOSX (из пакета Fink)</target>
        </trans-unit>
        <trans-unit id="31ba0d2766dea7911d9b0133542d1dae7c40d21b" translate="yes" xml:space="preserve">
          <source>CVS 1.12.9 on Debian</source>
          <target state="translated">CVS 1.12.9 в Debian</target>
        </trans-unit>
        <trans-unit id="c10230da83b7ef151899f83d727ffc465e699ce7" translate="yes" xml:space="preserve">
          <source>CVS by default uses the Unix username when writing its commit logs. Using this option and an author-conv-file maps the name recorded in CVS to author name, e-mail and optional time zone:</source>
          <target state="translated">CVS по умолчанию использует имя пользователя Unix при написании своих журналов коммитов.Используя эту опцию и файл автора-conv-файл сопоставляет имя,записанное в CVS,с именем автора,электронной почтой и дополнительным часовым поясом:</target>
        </trans-unit>
        <trans-unit id="edcdc296b2872a295927e706b64b0873d75bd7e8" translate="yes" xml:space="preserve">
          <source>CVS clients cannot tag, branch or perform Git merges.</source>
          <target state="translated">Клиенты CVS не могут помечать,разветвлять или выполнять Git-слияния.</target>
        </trans-unit>
        <trans-unit id="98b46c65d5bf63821f6ce6bd595bdc32473d951c" translate="yes" xml:space="preserve">
          <source>CVS module/Git head name</source>
          <target state="translated">CVS модуль/название головки</target>
        </trans-unit>
        <trans-unit id="49adb1e8c5b17953ca229c40061a8d1bb5bb8b5e" translate="yes" xml:space="preserve">
          <source>CVS users are accustomed to giving a group of developers commit access to a common repository. As we&amp;rsquo;ve seen, this is also possible with Git. However, the distributed nature of Git allows other development models, and you may want to first consider whether one of them might be a better fit for your project.</source>
          <target state="translated">Пользователи CVS привыкли предоставлять группе разработчиков доступ к общему репозиторию для коммитов. Как мы видели, это также возможно с Git. Однако распределенный характер Git позволяет использовать другие модели разработки, и вы можете сначала подумать, может ли одна из них лучше подходить для вашего проекта.</target>
        </trans-unit>
        <trans-unit id="aed153eb92fac6b914dbc191a216beb300201f66" translate="yes" xml:space="preserve">
          <source>CVS-style shared repository.</source>
          <target state="translated">Общий репозиторий в стиле CVS.</target>
        </trans-unit>
        <trans-unit id="f52ad32f29f6847c4f98f4be5fc01986743d4aae" translate="yes" xml:space="preserve">
          <source>Cache credentials in memory for a short period of time. See &lt;a href=&quot;git-credential-cache&quot;&gt;git-credential-cache[1]&lt;/a&gt; for details.</source>
          <target state="translated">Кэшируйте учетные данные в памяти на короткий период времени. Подробнее см. &lt;a href=&quot;git-credential-cache&quot;&gt;Git-credential-cache [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68d01495331ef3ec55abb430492aa431fb98900b" translate="yes" xml:space="preserve">
          <source>Cached mode</source>
          <target state="translated">режим кэширования</target>
        </trans-unit>
        <trans-unit id="bc41c881675379eb55dc52ac754cd0a47e293c0b" translate="yes" xml:space="preserve">
          <source>Caching. Textconv caching can speed up repeated diffs, such as those you might trigger by running &lt;code&gt;git log -p&lt;/code&gt;.</source>
          <target state="translated">Кэширование. Кэширование Textconv может ускорить повторяющиеся различия, например те, которые вы можете запустить, запустив &lt;code&gt;git log -p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3bd71fe43527e264035373707bb05e34bacabd4" translate="yes" xml:space="preserve">
          <source>Call the corresponding server-side command to support the client&amp;rsquo;s &lt;code&gt;git push&lt;/code&gt;, &lt;code&gt;git fetch&lt;/code&gt;, or &lt;code&gt;git archive --remote&lt;/code&gt; request.</source>
          <target state="translated">Вызовите соответствующую серверную команду для поддержки клиентских &lt;code&gt;git push&lt;/code&gt; , &lt;code&gt;git fetch&lt;/code&gt; или &lt;code&gt;git archive --remote&lt;/code&gt; request.</target>
        </trans-unit>
        <trans-unit id="3907fb8eaa84bdb8f3cc45ad006023c90615ad1f" translate="yes" xml:space="preserve">
          <source>Can attempt to connect to &lt;code&gt;git receive-pack&lt;/code&gt; (for pushing), &lt;code&gt;git upload-pack&lt;/code&gt;, etc for communication using git&amp;rsquo;s native packfile protocol. This requires a bidirectional, full-duplex connection.</source>
          <target state="translated">Может попытаться подключиться к &lt;code&gt;git receive-pack&lt;/code&gt; (для отправки), &lt;code&gt;git upload-pack&lt;/code&gt; и т. Д. Для связи с использованием собственного протокола git packfile. Для этого требуется двунаправленное полнодуплексное соединение.</target>
        </trans-unit>
        <trans-unit id="0c6fd80a7557d1e5d2aaff98df3b675a4f3e3e9e" translate="yes" xml:space="preserve">
          <source>Can be overridden by the &lt;code&gt;GIT_PROXY_COMMAND&lt;/code&gt; environment variable (which always applies universally, without the special &quot;for&quot; handling).</source>
          <target state="translated">Может быть переопределено переменной окружения &lt;code&gt;GIT_PROXY_COMMAND&lt;/code&gt; (которая всегда применяется универсально, без специальной обработки &amp;laquo;для&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="0f39962decf24e67df63f769ebf7a91027019ae1" translate="yes" xml:space="preserve">
          <source>Can be overridden by the &lt;code&gt;GIT_SSL_CIPHER_LIST&lt;/code&gt; environment variable. To force git to use libcurl&amp;rsquo;s default cipher list and ignore any explicit http.sslCipherList option, set &lt;code&gt;GIT_SSL_CIPHER_LIST&lt;/code&gt; to the empty string.</source>
          <target state="translated">Может быть переопределено переменной среды &lt;code&gt;GIT_SSL_CIPHER_LIST&lt;/code&gt; . Чтобы заставить git использовать список шифров по умолчанию libcurl и игнорировать любой явный параметр http.sslCipherList, установите для &lt;code&gt;GIT_SSL_CIPHER_LIST&lt;/code&gt; пустую строку.</target>
        </trans-unit>
        <trans-unit id="29d57ff400cc012cacf16bd510a83a1f80c69dcf" translate="yes" xml:space="preserve">
          <source>Can be overridden by the &lt;code&gt;GIT_SSL_VERSION&lt;/code&gt; environment variable. To force git to use libcurl&amp;rsquo;s default ssl version and ignore any explicit http.sslversion option, set &lt;code&gt;GIT_SSL_VERSION&lt;/code&gt; to the empty string.</source>
          <target state="translated">Может быть переопределено переменной среды &lt;code&gt;GIT_SSL_VERSION&lt;/code&gt; . Чтобы заставить git использовать версию ssl по умолчанию для libcurl и игнорировать любые явные параметры http.sslversion, установите &lt;code&gt;GIT_SSL_VERSION&lt;/code&gt; в пустую строку.</target>
        </trans-unit>
        <trans-unit id="8710d5603018e270e9135bc9b07e18583e6e40b7" translate="yes" xml:space="preserve">
          <source>Can be overridden with the &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; environment variable.</source>
          <target state="translated">Может быть переопределено с помощью переменной среды &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3ab6f60ab10fc57456b8912494e28284fd290bc" translate="yes" xml:space="preserve">
          <source>Can be set using the &lt;code&gt;GITWEB_SITENAME&lt;/code&gt; at build time. Unset by default.</source>
          <target state="translated">Можно установить с помощью &lt;code&gt;GITWEB_SITENAME&lt;/code&gt; во время сборки. По умолчанию не задано.</target>
        </trans-unit>
        <trans-unit id="217827b02c2eeb06477e279b6b6efc5d7d10ed39" translate="yes" xml:space="preserve">
          <source>Can be used in conjunction with &lt;code&gt;--single-branch&lt;/code&gt; to clone and maintain a branch with no references other than a single cloned branch. This is useful e.g. to maintain minimal clones of the default branch of some repository for search indexing.</source>
          <target state="translated">Может использоваться вместе с &lt;code&gt;--single-branch&lt;/code&gt; для клонирования и поддержки ветки без ссылок, кроме одной клонированной ветки. Это полезно, например, для поддержки минимальных клонов ветки по умолчанию некоторого репозитория для индексации поиска.</target>
        </trans-unit>
        <trans-unit id="a9691ee782e933498eb75769eeec906fc37e3a47" translate="yes" xml:space="preserve">
          <source>Can discover remote refs and output objects reachable from them as a stream in fast-import format.</source>
          <target state="translated">Может обнаруживать удаленные ссылки и выводить объекты,доступные из них в виде потока в формате быстрого импорта.</target>
        </trans-unit>
        <trans-unit id="90035edf92bee77fbf7fe329bbc961839dc96080" translate="yes" xml:space="preserve">
          <source>Can discover remote refs and push local commits and the history leading up to them to new or existing remote refs.</source>
          <target state="translated">Может обнаруживать удаленные ссылки и нажимать на локальные коммиты и историю,ведущую к ним,к новым или существующим удаленным ссылкам.</target>
        </trans-unit>
        <trans-unit id="138c5e6b546882127de4e82d6394ea6b4a6a09ca" translate="yes" xml:space="preserve">
          <source>Can discover remote refs and push specified objects from a fast-import stream to remote refs.</source>
          <target state="translated">Может обнаруживать удаленные ссылки и переталкивать заданные объекты из потока быстрого импорта в удаленные ссылки.</target>
        </trans-unit>
        <trans-unit id="b4530b46452bf0ddccff90b10194b6dc8dee0aff" translate="yes" xml:space="preserve">
          <source>Can discover remote refs and transfer objects reachable from them to the local object store.</source>
          <target state="translated">Может обнаруживать удаленные ссылки и передавать объекты,доступные из них,в локальное хранилище объектов.</target>
        </trans-unit>
        <trans-unit id="7decaa19c2a5956f9383448e881b3336964a5bef" translate="yes" xml:space="preserve">
          <source>Can guarantee that when a clone is requested, the received pack is self contained and is connected.</source>
          <target state="translated">Может гарантировать,что при запросе клона,полученная упаковка является самоподдерживающейся и подключенной.</target>
        </trans-unit>
        <trans-unit id="b7ebace43478348d6004d061ea665f140df1bb53" translate="yes" xml:space="preserve">
          <source>Can try to connect to &lt;code&gt;git upload-pack&lt;/code&gt; (for fetching), &lt;code&gt;git receive-pack&lt;/code&gt;, etc for communication using the Git&amp;rsquo;s native packfile protocol. This requires a bidirectional, full-duplex connection.</source>
          <target state="translated">Можно попробовать подключиться к &lt;code&gt;git upload-pack&lt;/code&gt; (для выборки), &lt;code&gt;git receive-pack&lt;/code&gt; и т. Д. Для связи с использованием собственного протокола Git packfile. Для этого требуется двунаправленное полнодуплексное соединение.</target>
        </trans-unit>
        <trans-unit id="4cb14361f0a5ad881a24c94d8c006e5f643d8a87" translate="yes" xml:space="preserve">
          <source>Cancel the operation and return to the pre-sequence state.</source>
          <target state="translated">Отмените операцию и вернитесь в состояние предварительной последовательности.</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="20243c460d0e899aa2ea919e5a33ddf3fc3c28ee" translate="yes" xml:space="preserve">
          <source>Capabilities for Fetching</source>
          <target state="translated">Возможности для получения</target>
        </trans-unit>
        <trans-unit id="2cf429aa6c517aac8e25fa8619402627623a5d1f" translate="yes" xml:space="preserve">
          <source>Capabilities for Pushing</source>
          <target state="translated">Возможности для толкания</target>
        </trans-unit>
        <trans-unit id="a02cd245f4a5359f48f45e974d4d2aeb3f737ec2" translate="yes" xml:space="preserve">
          <source>Capability advertisement</source>
          <target state="translated">Реклама возможностей</target>
        </trans-unit>
        <trans-unit id="fbb741f1d3fe925738bd52e124aa5bcdfaec72b5" translate="yes" xml:space="preserve">
          <source>Case 3 is slightly tricky and needs explanation. The result from this rule logically should be to remove the path if the user staged the removal of the path and then switching to a new branch. That however will prevent the initial checkout from happening, so the rule is modified to use M (new tree) only when the content of the index is empty. Otherwise the removal of the path is kept as long as $H and $M are the same.</source>
          <target state="translated">Дело 3 немного запутанное и нуждается в объяснении.Результатом этого правила логически должно быть удаление пути,если пользователь инсценировал удаление пути,а затем переключился на новую ветку.Это,однако,предотвратит первичную проверку,поэтому правило модифицируется таким образом,чтобы использовать M (новое дерево)только тогда,когда содержимое индекса пустое.В противном случае удаление пути сохраняется до тех пор,пока $H и $M одинаковы.</target>
        </trans-unit>
        <trans-unit id="e09c27f67e4fbebb877a3f28eee7f79c8bd9d162" translate="yes" xml:space="preserve">
          <source>Case insensitive match.</source>
          <target state="translated">Нечувствительное к делу совпадение.</target>
        </trans-unit>
        <trans-unit id="3ba6868684fb15f285ba371e8f8692f5e6c1b769" translate="yes" xml:space="preserve">
          <source>Cause the logical variables to be listed. In addition, all the variables of the Git configuration file .git/config are listed as well. (However, the configuration variables listing functionality is deprecated in favor of &lt;code&gt;git config -l&lt;/code&gt;.)</source>
          <target state="translated">Вызвать список логических переменных. Кроме того, перечислены все переменные конфигурационного файла Git .git / config. (Однако функция перечисления переменных конфигурации устарела в пользу &lt;code&gt;git config -l&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="b783ff5188b18ab4ca3191c5116581bc5ecb01a2" translate="yes" xml:space="preserve">
          <source>Causes fast-import to echo the entire line to its own standard output. This command is optional and is not needed to perform an import.</source>
          <target state="translated">Вызывает быстрый импорт для эхосигнала всей линии на собственный стандартный выход.Эта команда является необязательной и не требуется для выполнения импорта.</target>
        </trans-unit>
        <trans-unit id="12b02e08644454fc1547d338b5de4943ef66f77b" translate="yes" xml:space="preserve">
          <source>Causes fast-import to print a blob in &lt;code&gt;cat-file --batch&lt;/code&gt; format to the file descriptor set with &lt;code&gt;--cat-blob-fd&lt;/code&gt; or &lt;code&gt;stdout&lt;/code&gt; if unspecified.</source>
          <target state="translated">Заставляет быстрый импорт печатать большой двоичный &lt;code&gt;cat-file --batch&lt;/code&gt; формате cat-file --batch в файловый дескриптор, установленный с помощью &lt;code&gt;--cat-blob-fd&lt;/code&gt; или &lt;code&gt;stdout&lt;/code&gt; , если он не указан .</target>
        </trans-unit>
        <trans-unit id="b8e75699b5276c39faaefd045a6a5b904b73ada6" translate="yes" xml:space="preserve">
          <source>Causes fast-import to print a blob to a file descriptor previously arranged with the &lt;code&gt;--cat-blob-fd&lt;/code&gt; argument. The command otherwise has no impact on the current import; its main purpose is to retrieve blobs that may be in fast-import&amp;rsquo;s memory but not accessible from the target repository.</source>
          <target state="translated">Заставляет быстрый импорт печатать большой двоичный объект в файловый дескриптор, предварительно &lt;code&gt;--cat-blob-fd&lt;/code&gt; с помощью аргумента --cat-blob-fd . В противном случае команда не влияет на текущий импорт; его основная цель - получить капли, которые могут находиться в памяти быстрого импорта, но недоступны из целевого репозитория.</target>
        </trans-unit>
        <trans-unit id="7ec5756843c97a7c2f1df63914ede6a2099f489a" translate="yes" xml:space="preserve">
          <source>Causes fast-import to print a line describing a directory entry in &lt;code&gt;ls-tree&lt;/code&gt; format to the file descriptor set with &lt;code&gt;--cat-blob-fd&lt;/code&gt; or &lt;code&gt;stdout&lt;/code&gt; if unspecified.</source>
          <target state="translated">Заставляет быстрый импорт печатать строку, описывающую запись каталога в формате &lt;code&gt;ls-tree&lt;/code&gt; , в файловый дескриптор, установленный с помощью &lt;code&gt;--cat-blob-fd&lt;/code&gt; или &lt;code&gt;stdout&lt;/code&gt; , если не указано иное .</target>
        </trans-unit>
        <trans-unit id="886958bd2ea3f9b4ef6490b2b36e023c05b21b29" translate="yes" xml:space="preserve">
          <source>Causes fast-import to print the SHA-1 corresponding to a mark to stdout or to the file descriptor previously arranged with the &lt;code&gt;--cat-blob-fd&lt;/code&gt; argument. The command otherwise has no impact on the current import; its purpose is to retrieve SHA-1s that later commits might want to refer to in their commit messages.</source>
          <target state="translated">Заставляет быстрый импорт печатать SHA-1, соответствующий метке в stdout или дескриптору файла, предварительно &lt;code&gt;--cat-blob-fd&lt;/code&gt; с помощью аргумента --cat-blob-fd . В противном случае команда не влияет на текущий импорт; его цель - получить SHA-1, на которые позже может понадобиться ссылаться в сообщениях коммитов.</target>
        </trans-unit>
        <trans-unit id="a62399ea6471f58f0ac3e20d903be4ac533d6d4e" translate="yes" xml:space="preserve">
          <source>Causes fast-import to print the SHA-1 corresponding to a mark to the file descriptor set with &lt;code&gt;--cat-blob-fd&lt;/code&gt;, or &lt;code&gt;stdout&lt;/code&gt; if unspecified.</source>
          <target state="translated">Заставляет быстрый импорт печатать SHA-1, соответствующий метке в файловом дескрипторе, установленном с помощью &lt;code&gt;--cat-blob-fd&lt;/code&gt; или &lt;code&gt;stdout&lt;/code&gt; , если не указано.</target>
        </trans-unit>
        <trans-unit id="b482598ddd71627c6a7b2ff32a0b59803f8fd34f" translate="yes" xml:space="preserve">
          <source>Causes fast-import to print the entire &lt;code&gt;progress&lt;/code&gt; line unmodified to its standard output channel (file descriptor 1) when the command is processed from the input stream. The command otherwise has no impact on the current import, or on any of fast-import&amp;rsquo;s internal state.</source>
          <target state="translated">Причины быстро импортировать , чтобы напечатать весь &lt;code&gt;progress&lt;/code&gt; линии неизмененной на стандартный канал вывода (дескриптор файла 1) , когда команда обрабатывается из входного потока. В противном случае команда не влияет ни на текущий импорт, ни на какое-либо внутреннее состояние быстрого импорта.</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="62c56e9140b73b971227c6e095597a6888ab6f0b" translate="yes" xml:space="preserve">
          <source>Certain operations by Git can be influenced by assigning particular attributes to a path. Currently, the following operations are attributes-aware.</source>
          <target state="translated">На некоторые операции Git'а можно повлиять,назначив определённые атрибуты пути.В настоящее время следующие операции являются атрибутивными.</target>
        </trans-unit>
        <trans-unit id="ce89ebfc7c6f30e38c61f750189a14aac995df3f" translate="yes" xml:space="preserve">
          <source>Change daemon&amp;rsquo;s uid and gid before entering the service loop. When only &lt;code&gt;--user&lt;/code&gt; is given without &lt;code&gt;--group&lt;/code&gt;, the primary group ID for the user is used. The values of the option are given to &lt;code&gt;getpwnam(3)&lt;/code&gt; and &lt;code&gt;getgrnam(3)&lt;/code&gt; and numeric IDs are not supported.</source>
          <target state="translated">Измените uid и gid демона перед входом в цикл обслуживания. Когда &lt;code&gt;--user&lt;/code&gt; только --user без &lt;code&gt;--group&lt;/code&gt; , используется идентификатор основной группы для пользователя. Значения этой опции передаются &lt;code&gt;getpwnam(3)&lt;/code&gt; и &lt;code&gt;getgrnam(3)&lt;/code&gt; а числовые идентификаторы не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="f8d5e6dcdbe26b10de586e21b98816e7aa3c05a4" translate="yes" xml:space="preserve">
          <source>Change output color. Followed by &lt;code&gt;:&amp;lt;colorname&amp;gt;&lt;/code&gt;, where color names are described under Values in the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;. For example, &lt;code&gt;%(color:bold red)&lt;/code&gt;.</source>
          <target state="translated">Измените выходной цвет. За ним следует &lt;code&gt;:&amp;lt;colorname&amp;gt;&lt;/code&gt; , где названия цветов описаны в разделе &amp;laquo;Значения&amp;raquo; раздела &amp;laquo;КОНФИГУРАЦИОННЫЙ ФАЙЛ&amp;raquo; &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; . Например, &lt;code&gt;%(color:bold red)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e718f5f36cc4b622f94d06a68422a543373288f" translate="yes" xml:space="preserve">
          <source>Changed Tracked Entries</source>
          <target state="translated">Измененные записи с отслеживанием</target>
        </trans-unit>
        <trans-unit id="a838ac0a12d74a72136f3630d86af0c9b1c990e6" translate="yes" xml:space="preserve">
          <source>Changes URLs for the remote. Sets first URL for remote &amp;lt;name&amp;gt; that matches regex &amp;lt;oldurl&amp;gt; (first URL if no &amp;lt;oldurl&amp;gt; is given) to &amp;lt;newurl&amp;gt;. If &amp;lt;oldurl&amp;gt; doesn&amp;rsquo;t match any URL, an error occurs and nothing is changed.</source>
          <target state="translated">Меняет URL-адреса для удаленного. Устанавливает первый URL-адрес для удаленного &amp;lt;name&amp;gt;, который соответствует регулярному выражению &amp;lt;oldurl&amp;gt; (первый URL-адрес, если &amp;lt;oldurl&amp;gt; не указан), равным &amp;lt;newurl&amp;gt;. Если &amp;lt;oldurl&amp;gt; не соответствует ни одному URL-адресу, возникает ошибка и ничего не изменяется.</target>
        </trans-unit>
        <trans-unit id="5f81b14c458a3f96e356b0db1d9a8184d3aa46df" translate="yes" xml:space="preserve">
          <source>Changes between the index and your last commit; what you would be committing if you run &quot;git commit&quot; without &quot;-a&quot; option.</source>
          <target state="translated">Изменения между индексом и вашим последним коммитом;что вы будете делать,если запустите &quot;git-комммит&quot; без опции &quot;-a&quot;.</target>
        </trans-unit>
        <trans-unit id="c2b554b2b0f0318db4bfdd8caad455aa5f11a835" translate="yes" xml:space="preserve">
          <source>Changes between the tips of the topic and the master branches.</source>
          <target state="translated">Изменения между подсказками темы и основными ветвями.</target>
        </trans-unit>
        <trans-unit id="bb16f58635d0a49bf7d13f03eb1b1023bc073b68" translate="yes" xml:space="preserve">
          <source>Changes in the working tree not yet staged for the next commit.</source>
          <target state="translated">Изменения в рабочем дереве,которые еще не инсценированы для следующего коммита.</target>
        </trans-unit>
        <trans-unit id="7ac9e8718cf2c5d1390484c758626a70c63f62f2" translate="yes" xml:space="preserve">
          <source>Changes in the working tree since your last commit; what you would be committing if you run &quot;git commit -a&quot;</source>
          <target state="translated">Изменения в рабочем дереве с момента последнего коммита;что вы будете фиксировать,если запустите &quot;git-комммит -a&quot;;что вы будете фиксировать,если запустите &quot;git-комммит -a&quot;.</target>
        </trans-unit>
        <trans-unit id="959e8030a92b92d7979097ada92148067be55d31" translate="yes" xml:space="preserve">
          <source>Changes that occurred on the master branch since when the topic branch was started off it.</source>
          <target state="translated">Изменения,которые произошли на основной ветке с момента запуска тематической ветки.</target>
        </trans-unit>
        <trans-unit id="dcc9e0a603da36a49c01908e321b093eae90c8fa" translate="yes" xml:space="preserve">
          <source>Changes the list of branches tracked by the named remote. This can be used to track a subset of the available remote branches after the initial setup for a remote.</source>
          <target state="translated">Изменяет список веток,отслеживаемых именованным пультом дистанционного управления.Это может быть использовано для отслеживания подмножества доступных удаленных веток после первоначальной настройки для удаленного устройства.</target>
        </trans-unit>
        <trans-unit id="0bccb8c649445d0e9e5ceb6a829109a7f170728f" translate="yes" xml:space="preserve">
          <source>Changes the verbosity of messages displayed by the helper. A value of 0 for &amp;lt;n&amp;gt; means that processes operate quietly, and the helper produces only error output. 1 is the default level of verbosity, and higher values of &amp;lt;n&amp;gt; correspond to the number of -v flags passed on the command line.</source>
          <target state="translated">Изменяет уровень детализации сообщений, отображаемых помощником. Значение 0 для &amp;lt;n&amp;gt; означает, что процессы работают тихо, и помощник выдает только ошибку. 1 - уровень детализации по умолчанию, а более высокие значения &amp;lt;n&amp;gt; соответствуют количеству флагов -v, переданных в командной строке.</target>
        </trans-unit>
        <trans-unit id="dd3116927a9e7dd7238b571d53ce2cf77fe23ee1" translate="yes" xml:space="preserve">
          <source>Changesets from p4 are imported using Git fast-import.</source>
          <target state="translated">Изменения из p4 импортируются с помощью Git fast-import.</target>
        </trans-unit>
        <trans-unit id="cab94268d38355d76ce36a45e9bc285de9460c51" translate="yes" xml:space="preserve">
          <source>Changing gitweb&amp;rsquo;s behavior</source>
          <target state="translated">Изменение поведения gitweb</target>
        </trans-unit>
        <trans-unit id="1e7847382a16c8079c307e0f617f25cfce7cb965" translate="yes" xml:space="preserve">
          <source>Changing gitweb&amp;rsquo;s look</source>
          <target state="translated">Изменение внешнего вида gitweb</target>
        </trans-unit>
        <trans-unit id="5812a54bc86041329c11b2c54c0ad4f0c8785223" translate="yes" xml:space="preserve">
          <source>Character encoding the commit messages are converted to when running &lt;code&gt;git log&lt;/code&gt; and friends.</source>
          <target state="translated">Кодировка символов в сообщениях фиксации преобразуется при запуске &lt;code&gt;git log&lt;/code&gt; и друзей.</target>
        </trans-unit>
        <trans-unit id="1ae63f6ea8b36d3c621f3c26e7c68c400e2fdc6f" translate="yes" xml:space="preserve">
          <source>Character encoding the commit messages are stored in; Git itself does not care per se, but this information is necessary e.g. when importing commits from emails or in the gitk graphical history browser (and possibly at other places in the future or in other porcelains). See e.g. &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;. Defaults to &lt;code&gt;utf-8&lt;/code&gt;.</source>
          <target state="translated">Кодировка символов, в которой хранятся сообщения фиксации; Сам Git не заботится сам по себе, но эта информация необходима, например, при импорте коммитов из писем или в графическом браузере истории gitk (и, возможно, в других местах в будущем или в других фарфорах). См., Например, &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt; . По умолчанию используется &lt;code&gt;utf-8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d76545473270b409d5ad4bb0d1fe44d81e97f58" translate="yes" xml:space="preserve">
          <source>Check for corruption:</source>
          <target state="translated">Проверьте на коррупцию:</target>
        </trans-unit>
        <trans-unit id="b7d8cdc518631e2251ad5f880bdb559475d2d3c6" translate="yes" xml:space="preserve">
          <source>Check if &amp;lt;path&amp;gt; is a valid repository or a gitfile that points at a valid repository, and print the location of the repository. If &amp;lt;path&amp;gt; is a gitfile then the resolved path to the real repository is printed.</source>
          <target state="translated">Проверьте, является ли &amp;lt;path&amp;gt; допустимым репозиторием или gitfile, указывающим на действительный репозиторий, и распечатайте местоположение репозитория. Если &amp;lt;path&amp;gt; является gitfile, то печатается разрешенный путь к реальному репозиторию.</target>
        </trans-unit>
        <trans-unit id="e60019605e61c29f438d2140b618df2fa7a2cf81" translate="yes" xml:space="preserve">
          <source>Check if the command would error out, without updating the index or the files in the working tree for real.</source>
          <target state="translated">Проверьте,не приведет ли команда к ошибке,без реального обновления индекса или файлов в рабочем дереве.</target>
        </trans-unit>
        <trans-unit id="03d22f18e900d425734c737c0518f14811d19a56" translate="yes" xml:space="preserve">
          <source>Check if the first &amp;lt;commit&amp;gt; is an ancestor of the second &amp;lt;commit&amp;gt;, and exit with status 0 if true, or with status 1 if not. Errors are signaled by a non-zero status that is not 1.</source>
          <target state="translated">Проверьте, является ли первый &amp;lt;commit&amp;gt; предком второго &amp;lt;commit&amp;gt;, и выйдите со статусом 0, если истинно, или со статусом 1, если нет. Об ошибках сигнализирует ненулевое состояние, отличное от 1.</target>
        </trans-unit>
        <trans-unit id="83e838c1d2166b2d88caf18328aef0c7567d558a" translate="yes" xml:space="preserve">
          <source>Check not just objects in GIT_OBJECT_DIRECTORY ($GIT_DIR/objects), but also the ones found in alternate object pools listed in GIT_ALTERNATE_OBJECT_DIRECTORIES or $GIT_DIR/objects/info/alternates, and in packed Git archives found in $GIT_DIR/objects/pack and corresponding pack subdirectories in alternate object pools. This is now default; you can turn it off with --no-full.</source>
          <target state="translated">Проверяйте не только объекты в GIT_OBJECT_DIRECTORY ($GIT_DIR/объекты),но и объекты из альтернативных пулов объектов,перечисленных в GIT_ALTERNATE_OBJECT_DIRECTORIES или $GIT_DIR/объекты/инфо/альтернативы,а также упакованные Git-архивы,находящиеся в $GIT_DIR/объектах/пакетах и соответствующих подкаталогах пакетов в альтернативных объектных пулах.Теперь это значение установлено по умолчанию;вы можете отключить его с помощью --no-full.</target>
        </trans-unit>
        <trans-unit id="e79b0680caa2ca1906fd2adf6eaff8974f4a2257" translate="yes" xml:space="preserve">
          <source>Check only the connectivity of reachable objects, making sure that any objects referenced by a reachable tag, commit, or tree is present. This speeds up the operation by avoiding reading blobs entirely (though it does still check that referenced blobs exist). This will detect corruption in commits and trees, but not do any semantic checks (e.g., for format errors). Corruption in blob objects will not be detected at all.</source>
          <target state="translated">Проверяйте только связность достижимых объектов,убедившись,что все объекты,на которые ссылается тег,коммит или дерево,присутствуют.Это ускоряет операцию,полностью избегая чтения блоков (хотя все же проверяет наличие блоков,на которые есть ссылки).Это позволит обнаружить повреждения в коммитах и деревьях,но не делать никаких семантических проверок (например,на наличие ошибок форматирования).Повреждения в объектах блобов не будут обнаружены вообще.</target>
        </trans-unit>
        <trans-unit id="1059c6a2d1e02e3f2100e501993e9695ffee2a93" translate="yes" xml:space="preserve">
          <source>Check that the change you made is no longer visible, since it was made on the experimental branch and you&amp;rsquo;re back on the master branch.</source>
          <target state="translated">Убедитесь, что внесенное вами изменение больше не отображается, поскольку оно было внесено в экспериментальную ветвь, а вы вернулись в главную ветку.</target>
        </trans-unit>
        <trans-unit id="283494db1332f5a5bdeebb22027e88d6ecd9fccd" translate="yes" xml:space="preserve">
          <source>Check the GPG signature of commits</source>
          <target state="translated">Проверьте GPG подпись коммитов</target>
        </trans-unit>
        <trans-unit id="9942c8361d672deabca4bf9b4378db88e5831693" translate="yes" xml:space="preserve">
          <source>Check the GPG signature of tags</source>
          <target state="translated">Проверьте подпись тегов GPG</target>
        </trans-unit>
        <trans-unit id="06577cf94f38a79b885fc18bdd8c2be1bcd96e2b" translate="yes" xml:space="preserve">
          <source>Check the validity of a signed commit object by passing the signature to &lt;code&gt;gpg --verify&lt;/code&gt; and show the output.</source>
          <target state="translated">Проверьте действительность подписанного объекта фиксации, передав подпись в &lt;code&gt;gpg --verify&lt;/code&gt; и покажите результат.</target>
        </trans-unit>
        <trans-unit id="73422e6d03195802a17e28660f8c31a3d87204d7" translate="yes" xml:space="preserve">
          <source>Check whether two branches point at the same history</source>
          <target state="translated">Проверьте,указывают ли две ветки на одну и ту же историю</target>
        </trans-unit>
        <trans-unit id="7a3ffea957d19415bf259687b6fc87b1ce4c0522" translate="yes" xml:space="preserve">
          <source>Check your xinetd(8) documentation and setup, this is from a Fedora system. Others might be different.</source>
          <target state="translated">Проверьте документацию и настройку xinetd(8),это из системы Fedora.Другие могут быть другими.</target>
        </trans-unit>
        <trans-unit id="6515762734c69625b8244e79b73529d8fd67b97e" translate="yes" xml:space="preserve">
          <source>Checking for patch corruption</source>
          <target state="translated">Проверка на наличие патч-коррозии</target>
        </trans-unit>
        <trans-unit id="c722b668af2290a67a3950339daf5303bf70266c" translate="yes" xml:space="preserve">
          <source>Checking merge bases</source>
          <target state="translated">Проверка баз слияния</target>
        </trans-unit>
        <trans-unit id="fa7ccb17065ab13f50e5f4aa48f888b7f36943e2" translate="yes" xml:space="preserve">
          <source>Checking out an old version of a file</source>
          <target state="translated">Проверка старой версии файла</target>
        </trans-unit>
        <trans-unit id="4285903ce1710560050a0803b330dcd049bfbfef" translate="yes" xml:space="preserve">
          <source>Checking the repository for corruption</source>
          <target state="translated">Проверка репозитория на наличие коррупции</target>
        </trans-unit>
        <trans-unit id="2ac84684aef52ff693250170ef43a76e48af3284" translate="yes" xml:space="preserve">
          <source>Checking whitespace errors</source>
          <target state="translated">Проверка ошибок пробела</target>
        </trans-unit>
        <trans-unit id="527933c1f680ec617db3dd975f754535f385100b" translate="yes" xml:space="preserve">
          <source>Checking-out and checking-in</source>
          <target state="translated">Выезд и проверка</target>
        </trans-unit>
        <trans-unit id="49265102fbdeaea303ebc0238044241c00c923d0" translate="yes" xml:space="preserve">
          <source>Checklist for shrinking a repository</source>
          <target state="translated">Контрольный список для сокращения репозитория</target>
        </trans-unit>
        <trans-unit id="ce166f9433a0a0acaace5836679192e776275599" translate="yes" xml:space="preserve">
          <source>Checks if a given &lt;code&gt;refname&lt;/code&gt; is acceptable, and exits with a non-zero status if it is not.</source>
          <target state="translated">Проверяет, допустимо ли данное имя &lt;code&gt;refname&lt;/code&gt; , и завершает работу с ненулевым статусом, если это не так.</target>
        </trans-unit>
        <trans-unit id="3e78b611c92e074aefd3477b078d67a70bbe5ddb" translate="yes" xml:space="preserve">
          <source>Checksums and object ids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8021a065c8c671df3a58cb63e7469b8167a446a" translate="yes" xml:space="preserve">
          <source>Child Process Messages</source>
          <target state="translated">Сообщения детского процесса</target>
        </trans-unit>
        <trans-unit id="5091e72502f618e2b372fcb37e80054927942ac3" translate="yes" xml:space="preserve">
          <source>Child Processes</source>
          <target state="translated">Детские процессы</target>
        </trans-unit>
        <trans-unit id="c8895429bfc3ae045740a98bd7892c21d37107b3" translate="yes" xml:space="preserve">
          <source>Choose a diff algorithm. The variants are as follows:</source>
          <target state="translated">Выберите дифференциальный алгоритм.Варианты выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="59db2d4b9fea86d4c731a426cb932a15c94c9596" translate="yes" xml:space="preserve">
          <source>Choosing textconv versus external diff</source>
          <target state="translated">Выбор textconv по сравнению с внешними различиями</target>
        </trans-unit>
        <trans-unit id="613b7dff145eefd66d417456a88da290b004ada8" translate="yes" xml:space="preserve">
          <source>Chunk header format is modified to prevent people from accidentally feeding it to &lt;code&gt;patch -p1&lt;/code&gt;. Combined diff format was created for review of merge commit changes, and was not meant to be applied. The change is similar to the change in the extended &lt;code&gt;index&lt;/code&gt; header:</source>
          <target state="translated">Формат заголовка &lt;code&gt;patch -p1&lt;/code&gt; изменен, чтобы люди случайно не загрузили его в patch -p1 . Комбинированный формат сравнения был создан для проверки изменений фиксации слияния и не предназначался для применения. Изменение аналогично изменению в заголовке расширенного &lt;code&gt;index&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="42dcbc11ebcca8013128e188e07a667fd189817d" translate="yes" xml:space="preserve">
          <source>Cleans the working tree by recursively removing files that are not under version control, starting from the current directory.</source>
          <target state="translated">Очищает рабочее дерево,рекурсивно удаляя из текущего каталога файлы,не находящиеся под контролем версий.</target>
        </trans-unit>
        <trans-unit id="f2d831c9f71cd3ff7b3b6c7c49408fcedc1e2e96" translate="yes" xml:space="preserve">
          <source>Cleanup unnecessary files and optimize the local repository</source>
          <target state="translated">Очистка ненужных файлов и оптимизация локального репозитория</target>
        </trans-unit>
        <trans-unit id="94f8adfaa49f4f08c745b4d0d2c62d9ba66072a5" translate="yes" xml:space="preserve">
          <source>Clearly this work-flow uses the virtuous circle between test suites and &quot;git bisect&quot;. In fact it makes it the standard procedure to deal with regression.</source>
          <target state="translated">Очевидно,что в этом рабочем потоке используется добродетельный круг между тестовыми наборами и &quot;гит-бисектом&quot;.Фактически,это делает его стандартной процедурой для работы с регрессией.</target>
        </trans-unit>
        <trans-unit id="119db12fc152f2f55488f08da986c3c46bdf64a9" translate="yes" xml:space="preserve">
          <source>Clears any list of &quot;To:&quot;, &quot;Cc:&quot;, &quot;Bcc:&quot; addresses previously set via config.</source>
          <target state="translated">Очищает любой список адресов &quot;To:&quot;,&quot;Cc:&quot;,&quot;Bcc:&quot;,ранее установленных через config.</target>
        </trans-unit>
        <trans-unit id="cf4a0e26c9f93f0530be9fa71dab1af1cbaa231f" translate="yes" xml:space="preserve">
          <source>Clears the previously read value of &lt;code&gt;sendemail.identity&lt;/code&gt; set via config, if any.</source>
          <target state="translated">Очищает ранее прочитанное значение &lt;code&gt;sendemail.identity&lt;/code&gt; , установленное через config, если оно есть.</target>
        </trans-unit>
        <trans-unit id="90944cef36d3464ed0283d5129626cf4ab8fc85b" translate="yes" xml:space="preserve">
          <source>Click on New Mail.</source>
          <target state="translated">Нажмите на Новую почту.</target>
        </trans-unit>
        <trans-unit id="89585875df151078ae7b77d81e2bd1b067e7d065" translate="yes" xml:space="preserve">
          <source>Client spec</source>
          <target state="translated">Спецификация клиента</target>
        </trans-unit>
        <trans-unit id="55e7359e50be70477f290b070978067b2a01b4d1" translate="yes" xml:space="preserve">
          <source>Client specified as an option to all p4 commands, with &lt;code&gt;-c &amp;lt;client&amp;gt;&lt;/code&gt;, including the client spec.</source>
          <target state="translated">Клиент, указанный в качестве опции для всех команд p4, с &lt;code&gt;-c &amp;lt;client&amp;gt;&lt;/code&gt; , включая спецификацию клиента.</target>
        </trans-unit>
        <trans-unit id="80c2bc0ea4027c7a64da85db4dd1237d395876ca" translate="yes" xml:space="preserve">
          <source>Clients known to work</source>
          <target state="translated">Клиенты,известные своей работой</target>
        </trans-unit>
        <trans-unit id="74d55b5e93bc1fa20e1ae7e006b74220ee6a2f8c" translate="yes" xml:space="preserve">
          <source>Clients may &lt;code&gt;not&lt;/code&gt; use other sha1 expressions, even if the end result is reachable. E.g., neither a relative commit like &lt;code&gt;master^&lt;/code&gt; nor a literal sha1 like &lt;code&gt;abcd1234&lt;/code&gt; is allowed, even if the result is reachable from the refs.</source>
          <target state="translated">Клиенты &lt;code&gt;not&lt;/code&gt; могут использовать другие выражения sha1, даже если конечный результат достижим. Например, ни относительная фиксация, например &lt;code&gt;master^&lt;/code&gt; ни буквальный sha1, например &lt;code&gt;abcd1234&lt;/code&gt; , недопустимы, даже если результат доступен из ссылок.</target>
        </trans-unit>
        <trans-unit id="5c33076e8c658be1dfe63e1df1ac676b47602d66" translate="yes" xml:space="preserve">
          <source>Clients may request a commit or tree that is pointed to directly by a ref. E.g., &lt;code&gt;git archive --remote=origin v1.0&lt;/code&gt;.</source>
          <target state="translated">Клиенты могут запросить фиксацию или дерево, на которое напрямую указывает ссылка. Например, &lt;code&gt;git archive --remote=origin v1.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbed12af7936ed3ad4075cea19b034f51ea55c2c" translate="yes" xml:space="preserve">
          <source>Clients may request a sub-tree within a commit or tree using the &lt;code&gt;ref:path&lt;/code&gt; syntax. E.g., &lt;code&gt;git archive --remote=origin v1.0:Documentation&lt;/code&gt;.</source>
          <target state="translated">Клиенты могут запросить поддерево внутри фиксации или дерева, используя синтаксис &lt;code&gt;ref:path&lt;/code&gt; . Например, &lt;code&gt;git archive --remote=origin v1.0:Documentation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9839e8d4aa3c14e4b54e191e51eb2179e4fdaa19" translate="yes" xml:space="preserve">
          <source>Clients should now be able to check out the project. Use the CVS &lt;code&gt;module&lt;/code&gt; name to indicate what Git &lt;code&gt;head&lt;/code&gt; you want to check out. This also sets the name of your newly checked-out directory, unless you tell it otherwise with &lt;code&gt;-d &amp;lt;dir_name&amp;gt;&lt;/code&gt;. For example, this checks out &lt;code&gt;master&lt;/code&gt; branch to the &lt;code&gt;project-master&lt;/code&gt; directory:</source>
          <target state="translated">Теперь клиенты должны иметь возможность проверить проект. Используйте CVS &lt;code&gt;module&lt;/code&gt; имя , чтобы указать , что Git &lt;code&gt;head&lt;/code&gt; вы хотите проверить. Это также устанавливает имя вашего недавно извлеченного каталога, если вы не &lt;code&gt;-d &amp;lt;dir_name&amp;gt;&lt;/code&gt; иное с помощью -d &amp;lt;dir_name&amp;gt; . Например, это проверяет &lt;code&gt;master&lt;/code&gt; ветвь в каталог &lt;code&gt;project-master&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d8cdb573350de78596e4852bc9cacfc94e8d17ed" translate="yes" xml:space="preserve">
          <source>Clone</source>
          <target state="translated">Clone</target>
        </trans-unit>
        <trans-unit id="d69c0c434d503834765604d22b28037bee413bfc" translate="yes" xml:space="preserve">
          <source>Clone a repository into a new directory</source>
          <target state="translated">Клонировать репозиторий в новый каталог</target>
        </trans-unit>
        <trans-unit id="8b7342cb68e63a734e787beefc74dd4c8bf74d08" translate="yes" xml:space="preserve">
          <source>Clone a repository:</source>
          <target state="translated">Клонируй хранилище:</target>
        </trans-unit>
        <trans-unit id="e3bdbcd4fc3a4b615a5be68aca4686a1e8d61dd3" translate="yes" xml:space="preserve">
          <source>Clone and sync variables</source>
          <target state="translated">Клонирование и синхронизация переменных</target>
        </trans-unit>
        <trans-unit id="fc5a57d2c10be47f020b40eb294f6e546edcb1fb" translate="yes" xml:space="preserve">
          <source>Clone from upstream while borrowing from an existing local directory:</source>
          <target state="translated">Клонирование из верхнего течения при заимствовании из существующего локального каталога:</target>
        </trans-unit>
        <trans-unit id="31427bc4154831dc13e03739efd0e5c8ceee16ff" translate="yes" xml:space="preserve">
          <source>Clone from upstream:</source>
          <target state="translated">Клон из верхнего течения:</target>
        </trans-unit>
        <trans-unit id="40d0639c1781d7a9c100ef0a6d2c0dcfcc6b282c" translate="yes" xml:space="preserve">
          <source>Clone it with &lt;code&gt;git clone file:///path/to/repo&lt;/code&gt;. The clone will not have the removed objects. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;. (Note that cloning with a plain path just hardlinks everything!)</source>
          <target state="translated">Клонируйте его с помощью &lt;code&gt;git clone file:///path/to/repo&lt;/code&gt; . У клона не будет удаленных объектов. См. &lt;a href=&quot;git-clone&quot;&gt;Git-clone [1]&lt;/a&gt; . (Обратите внимание, что клонирование с использованием простого пути просто связывает все жестко!)</target>
        </trans-unit>
        <trans-unit id="25701c0360e9d04455f2222c02f2b66094990098" translate="yes" xml:space="preserve">
          <source>Clone only the history leading to the tip of a single branch, either specified by the &lt;code&gt;--branch&lt;/code&gt; option or the primary branch remote&amp;rsquo;s &lt;code&gt;HEAD&lt;/code&gt; points at. Further fetches into the resulting repository will only update the remote-tracking branch for the branch this option was used for the initial cloning. If the HEAD at the remote did not point at any branch when &lt;code&gt;--single-branch&lt;/code&gt; clone was made, no remote-tracking branch is created.</source>
          <target state="translated">Клонируйте только историю, ведущую к вершине одной ветки, которая либо указана параметром &lt;code&gt;--branch&lt;/code&gt; , либо &lt;code&gt;HEAD&lt;/code&gt; первичного удаленного ветки указывает на. Дальнейшие загрузки в результирующий репозиторий обновят только ветку удаленного отслеживания для ветки, которая использовалась для первоначального клонирования. Если HEAD на удаленном компьютере не указывает ни на какую ветвь при &lt;code&gt;--single-branch&lt;/code&gt; клона --single-branch, ветвь удаленного отслеживания не создается.</target>
        </trans-unit>
        <trans-unit id="7a471e90dac3e294ddb7787043d7eb11c0e7a242" translate="yes" xml:space="preserve">
          <source>Clone options</source>
          <target state="translated">Варианты клонирования</target>
        </trans-unit>
        <trans-unit id="0befa381e0a34bfc395f53162eefbad3dae21f70" translate="yes" xml:space="preserve">
          <source>Clone the upstream and work on it. Feed changes to upstream.</source>
          <target state="translated">Клонируй вверх по течению и работай над этим.Подача изменений в восходящем течении.</target>
        </trans-unit>
        <trans-unit id="4b6b25b2b84758722a0670042a124566ce1d193f" translate="yes" xml:space="preserve">
          <source>Clones a repository into a newly created directory, creates remote-tracking branches for each branch in the cloned repository (visible using &lt;code&gt;git branch --remotes&lt;/code&gt;), and creates and checks out an initial branch that is forked from the cloned repository&amp;rsquo;s currently active branch.</source>
          <target state="translated">Клонирует репозиторий во вновь созданный каталог, создает ветки удаленного отслеживания для каждой ветки в клонированном репозитории (отображается с помощью &lt;code&gt;git branch --remotes&lt;/code&gt; ), а также создает и проверяет начальную ветку, которая разветвляется из текущей активной ветки клонированного репозитория.</target>
        </trans-unit>
        <trans-unit id="df1a2527d982b2181fc5936a0c039535ce1accdb" translate="yes" xml:space="preserve">
          <source>Cloning or syncing does not require a p4 client; file contents are collected using &lt;code&gt;p4 print&lt;/code&gt;.</source>
          <target state="translated">Для клонирования или синхронизации не требуется клиент p4; содержимое файла собирается с помощью &lt;code&gt;p4 print&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53e412082749509777418e5cdc87503adeb4bf14" translate="yes" xml:space="preserve">
          <source>Collect and show committer identities instead of authors.</source>
          <target state="translated">Собирать и показывать коммиттеры вместо авторов.</target>
        </trans-unit>
        <trans-unit id="752dedb02a973d0d43ace0dca55082bee051171e" translate="yes" xml:space="preserve">
          <source>Collect information for user to file a bug report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccaafaced7e706bc2bd06241362e04977c0cd36" translate="yes" xml:space="preserve">
          <source>Colon-delimited list of refs or globs indicating which refs, in addition to the default from &lt;code&gt;core.notesRef&lt;/code&gt; or &lt;code&gt;GIT_NOTES_REF&lt;/code&gt;, to read notes from when showing commit messages. This overrides the &lt;code&gt;notes.displayRef&lt;/code&gt; setting.</source>
          <target state="translated">Разделенный двоеточиями список ссылок или глобусов, указывающих, какие ссылки, помимо стандартных из &lt;code&gt;core.notesRef&lt;/code&gt; или &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; , следует читать примечания при отображении сообщений фиксации. Это отменяет настройку &lt;code&gt;notes.displayRef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b13a61ccbe64b645a15179edff14e97b6ecd8c00" translate="yes" xml:space="preserve">
          <source>Color branches to highlight current, local, and remote-tracking branches. The value must be always (the default), never, or auto.</source>
          <target state="translated">Цветные ветки для выделения текущих,локальных и удаленных отслеживаемых ветвей.Значение должно быть всегда (по умолчанию),никогда или автоматически.</target>
        </trans-unit>
        <trans-unit id="b15070a1530d4c810f05017f7f35501b365479b6" translate="yes" xml:space="preserve">
          <source>Color the status sign (one of these: &lt;code&gt;*&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;) of each commit corresponding to the branch it&amp;rsquo;s in. The value must be always (the default), never, or auto.</source>
          <target state="translated">Раскрасьте знак состояния (один из следующих: &lt;code&gt;*&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; ) каждой фиксации, соответствующей ветке, в которой он находится. Значение должно быть всегда (по умолчанию), никогда или автоматически.</target>
        </trans-unit>
        <trans-unit id="51d8265f4f18e755692a71f862affd712731021e" translate="yes" xml:space="preserve">
          <source>Colors may also be given as numbers between 0 and 255; these use ANSI 256-color mode (but note that not all terminals may support this). If your terminal supports it, you may also specify 24-bit RGB values as hex, like &lt;code&gt;#ff0ab3&lt;/code&gt;.</source>
          <target state="translated">Цвета также могут быть указаны в виде чисел от 0 до 255; они используют режим ANSI 256 цветов (но учтите, что не все терминалы могут его поддерживать). Если ваш терминал поддерживает это, вы также можете указать 24-битные значения RGB как шестнадцатеричные, например &lt;code&gt;#ff0ab3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ae0d23566f06a8646ef3abdd586851a9e465cd" translate="yes" xml:space="preserve">
          <source>Combined diff format</source>
          <target state="translated">Комбинированный диф-формат</target>
        </trans-unit>
        <trans-unit id="5bb60f78b33e9a4f091db8f97f338043390512bd" translate="yes" xml:space="preserve">
          <source>Combining test suites, git bisect and other systems together</source>
          <target state="translated">Сочетание тестовых наборов,гит-бисектов и других систем вместе</target>
        </trans-unit>
        <trans-unit id="4a4a4bb517ec5013313be130afe65f9c77f0eaea" translate="yes" xml:space="preserve">
          <source>Coming from a system such as Perforce or Subversion this should be quite simple, as the fast-import mark can also be the Perforce changeset number or the Subversion revision number.</source>
          <target state="translated">В такой системе,как Perforce или Subversion,это должно быть довольно просто,так как метка быстрого импорта может быть также номером changeset Perforce или номером ревизии Subversion.</target>
        </trans-unit>
        <trans-unit id="b894fab4f168cef475b1c68a083475614077b1e5" translate="yes" xml:space="preserve">
          <source>Coming up with the correct shell snippet to do the filtering you want is sometimes difficult unless you&amp;rsquo;re just doing a trivial modification such as deleting a couple files. Unfortunately, people often learn if the snippet is right or wrong by trying it out, but the rightness or wrongness can vary depending on special circumstances (spaces in filenames, non-ascii filenames, funny author names or emails, invalid timezones, presence of grafts or replace objects, etc.), meaning they may have to wait a long time, hit an error, then restart. The performance of git-filter-branch is so bad that this cycle is painful, reducing the time available to carefully re-check (to say nothing about what it does to the patience of the person doing the rewrite even if they do technically have more time available). This problem is extra compounded because errors from broken filters may not be shown for a long time and/or get lost in a sea of output. Even worse, broken filters often just result in silent incorrect rewrites.</source>
          <target state="translated">Придумывать правильный фрагмент оболочки для выполнения нужной фильтрации иногда бывает сложно, если только вы не выполняете тривиальную модификацию, например, удаление пары файлов. К сожалению, люди часто узнают, является ли фрагмент правильным или неправильным, попробовав его, но правильность или неправильность может варьироваться в зависимости от особых обстоятельств (пробелы в именах файлов, имена файлов не в формате ascii, смешные имена авторов или электронные письма, недопустимые часовые пояса, наличие графтов или заменить объекты и т. д.), то есть им, возможно, придется ждать долгое время, обнаруживать ошибку, а затем перезапускать. Производительность git-filter-branch настолько плохая, что этот цикл становится болезненным, сокращая время, доступное для тщательной повторной проверки (не говоря уже о том, что он делает с терпением человека, выполняющего перезапись, даже если у него технически больше время доступно).Эта проблема усугубляется тем, что ошибки из-за неработающих фильтров могут не отображаться в течение длительного времени и / или теряться в море результатов. Хуже того, сломанные фильтры часто приводят к тихой неправильной перезаписи.</target>
        </trans-unit>
        <trans-unit id="8fb52c1564722a1fe5f6cf4e3d44bce48182e716" translate="yes" xml:space="preserve">
          <source>Command Detail Messages</source>
          <target state="translated">Подробные командные сообщения</target>
        </trans-unit>
        <trans-unit id="f7e08456d089a047ccd465ae00e5bf2544bfdac7" translate="yes" xml:space="preserve">
          <source>Command Details</source>
          <target state="translated">Командная информация</target>
        </trans-unit>
        <trans-unit id="84cf71d717103c00cc33f4f16f173970104ae46e" translate="yes" xml:space="preserve">
          <source>Command aliases for the &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; command wrapper - e.g. after defining &lt;code&gt;alias.last = cat-file commit HEAD&lt;/code&gt;, the invocation &lt;code&gt;git last&lt;/code&gt; is equivalent to &lt;code&gt;git cat-file commit HEAD&lt;/code&gt;. To avoid confusion and troubles with script usage, aliases that hide existing Git commands are ignored. Arguments are split by spaces, the usual shell quoting and escaping is supported. A quote pair or a backslash can be used to quote them.</source>
          <target state="translated">Псевдонимы команд для оболочки команды &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; - например, после определения &lt;code&gt;alias.last = cat-file commit HEAD&lt;/code&gt; , вызов &lt;code&gt;git last&lt;/code&gt; эквивалентен &lt;code&gt;git cat-file commit HEAD&lt;/code&gt; . Чтобы избежать путаницы и проблем с использованием скриптов, псевдонимы, скрывающие существующие команды Git, игнорируются. Аргументы разделяются пробелами, поддерживаются обычные кавычки и экранирование оболочки. Для их цитирования можно использовать пару кавычек или обратную косую черту.</target>
        </trans-unit>
        <trans-unit id="bb334d175dc8351e4e643438be75bf5083df9523" translate="yes" xml:space="preserve">
          <source>Command and arguments are separated by an unescaped space.</source>
          <target state="translated">Команда и аргументы разделены свободным пространством.</target>
        </trans-unit>
        <trans-unit id="bd186454b9919f30925b251fcf7e4e52ca77972c" translate="yes" xml:space="preserve">
          <source>Command request</source>
          <target state="translated">Командный запрос</target>
        </trans-unit>
        <trans-unit id="fa701362a88f56992e33094194fa924ccdfa36dc" translate="yes" xml:space="preserve">
          <source>Command to be run each time gitk has to determine the revision range to show. The command is expected to print on its standard output a list of additional revisions to be shown, one per line. Use this instead of explicitly specifying a &lt;code&gt;&amp;lt;revision range&amp;gt;&lt;/code&gt; if the set of commits to show may vary between refreshes.</source>
          <target state="translated">Команда запускается каждый раз, когда gitk должен определить отображаемый диапазон ревизий. Ожидается, что команда напечатает на своем стандартном выходе список дополнительных ревизий, которые будут отображаться, по одной в каждой строке. Используйте это вместо явного указания &lt;code&gt;&amp;lt;revision range&amp;gt;&lt;/code&gt; , если набор отображаемых коммитов может различаться между обновлениями.</target>
        </trans-unit>
        <trans-unit id="d073f0ac32697a8093342645a8234491e985e6ff" translate="yes" xml:space="preserve">
          <source>Command used to setup a tunnel to the IMAP server through which commands will be piped instead of using a direct network connection to the server. Required when imap.host is not set.</source>
          <target state="translated">Команда,используемая для установки туннеля к IMAP серверу,через который будут передаваться команды вместо использования прямого сетевого соединения с сервером.Требуется,когда imap.host не установлен.</target>
        </trans-unit>
        <trans-unit id="5fbae08a3e549b8259aa734268f8fc50962c7173" translate="yes" xml:space="preserve">
          <source>Command-line interface conventions</source>
          <target state="translated">Соглашения об интерфейсе командной строки</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="5415f180d40029f0ddfc48b35f157e8ad10f48bc" translate="yes" xml:space="preserve">
          <source>Commands are given by the caller on the helper&amp;rsquo;s standard input, one per line.</source>
          <target state="translated">Команды вводятся вызывающим пользователем на стандартном вводе помощника, по одной в каждой строке.</target>
        </trans-unit>
        <trans-unit id="03880aa7f8436e082afca33e516cbcd9355d3554" translate="yes" xml:space="preserve">
          <source>Commands such as &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; that let you edit messages by launching an editor use the value of this variable when it is set, and the environment variable &lt;code&gt;GIT_EDITOR&lt;/code&gt; is not set. See &lt;a href=&quot;git-var&quot;&gt;git-var[1]&lt;/a&gt;.</source>
          <target state="translated">Такие команды, как &lt;code&gt;commit&lt;/code&gt; и &lt;code&gt;tag&lt;/code&gt; которые позволяют редактировать сообщения путем запуска редактора, используют значение этой переменной, если она установлена, а переменная среды &lt;code&gt;GIT_EDITOR&lt;/code&gt; не установлена. См. &lt;a href=&quot;git-var&quot;&gt;Git-var [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0abcd0747bb8576b597002ab49f39285f1f4ef29" translate="yes" xml:space="preserve">
          <source>Commands such as &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; that let you edit messages consider a line that begins with this character commented, and removes them after the editor returns (default &lt;code&gt;#&lt;/code&gt;).</source>
          <target state="translated">Такие команды, как &lt;code&gt;commit&lt;/code&gt; и &lt;code&gt;tag&lt;/code&gt; которые позволяют редактировать сообщения, рассматривают строку, начинающуюся с этого символа, как прокомментированную, и удаляют их после возврата из редактора ( &lt;code&gt;#&lt;/code&gt; по умолчанию ).</target>
        </trans-unit>
        <trans-unit id="6030cf68b2071379f06ab06312828ccb10c46868" translate="yes" xml:space="preserve">
          <source>Commands that output paths (e.g. &lt;code&gt;ls-files&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;), will quote &quot;unusual&quot; characters in the pathname by enclosing the pathname in double-quotes and escaping those characters with backslashes in the same way C escapes control characters (e.g. &lt;code&gt;\t&lt;/code&gt; for TAB, &lt;code&gt;\n&lt;/code&gt; for LF, &lt;code&gt;\\&lt;/code&gt; for backslash) or bytes with values larger than 0x80 (e.g. octal &lt;code&gt;\302\265&lt;/code&gt; for &quot;micro&quot; in UTF-8). If this variable is set to false, bytes higher than 0x80 are not considered &quot;unusual&quot; any more. Double-quotes, backslash and control characters are always escaped regardless of the setting of this variable. A simple space character is not considered &quot;unusual&quot;. Many commands can output pathnames completely verbatim using the &lt;code&gt;-z&lt;/code&gt; option. The default value is true.</source>
          <target state="translated">Команды, которые выводят пути (например, &lt;code&gt;ls-files&lt;/code&gt; , &lt;code&gt;diff&lt;/code&gt; ), будут заключать в кавычки &quot;необычные&quot; символы в имени пути, заключая имя пути в двойные кавычки и экранируя эти символы обратной косой чертой так же, как C экранирует управляющие символы (например, &lt;code&gt;\t&lt;/code&gt; для TAB , &lt;code&gt;\n&lt;/code&gt; для LF, &lt;code&gt;\\&lt;/code&gt; для обратной косой черты) или байты со значениями больше 0x80 (например, восьмеричное &lt;code&gt;\302\265&lt;/code&gt; для &amp;laquo;микро&amp;raquo; в UTF-8). Если для этой переменной установлено значение false, байты выше 0x80 больше не считаются &amp;laquo;необычными&amp;raquo;. Двойные кавычки, обратная косая черта и управляющие символы всегда экранируются независимо от значения этой переменной. Простой символ пробела не считается &amp;laquo;необычным&amp;raquo;.Многие команды могут выводить имена путей полностью дословно, используя &lt;code&gt;-z&lt;/code&gt; вариант. Значение по умолчанию верно.</target>
        </trans-unit>
        <trans-unit id="240a8b9ba4498383936942814599bad7b6fd9115" translate="yes" xml:space="preserve">
          <source>Commands that support the enhanced option parser accepts unique prefix of a long option as if it is fully spelled out, but use this with a caution. For example, &lt;code&gt;git commit --amen&lt;/code&gt; behaves as if you typed &lt;code&gt;git commit --amend&lt;/code&gt;, but that is true only until a later version of Git introduces another option that shares the same prefix, e.g. &lt;code&gt;git commit --amenity&lt;/code&gt; option.</source>
          <target state="translated">Команды, поддерживающие расширенный синтаксический анализатор параметров, принимают уникальный префикс длинного параметра, как если бы он был полностью прописан, но используйте это с осторожностью. Например, &lt;code&gt;git commit --amen&lt;/code&gt; ведет себя так, как если бы вы набрали &lt;code&gt;git commit --amend&lt;/code&gt; , но это верно только до тех пор, пока в более поздней версии Git не появится другой параметр с таким же префиксом, например, параметр &lt;code&gt;git commit --amenity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40539e4d461e31ee218fa661fb2b14e246e5b1ba" translate="yes" xml:space="preserve">
          <source>Commands that support the enhanced option parser allow you to aggregate short options. This means that you can for example use &lt;code&gt;git rm -rf&lt;/code&gt; or &lt;code&gt;git clean -fdx&lt;/code&gt;.</source>
          <target state="translated">Команды, поддерживающие расширенный синтаксический анализатор параметров, позволяют агрегировать короткие параметры. Это означает, что вы можете, например, использовать &lt;code&gt;git rm -rf&lt;/code&gt; или &lt;code&gt;git clean -fdx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3f5763bea669fa755ce44d52b210df9afaf62df" translate="yes" xml:space="preserve">
          <source>Commands which have the enhanced option parser activated all understand a couple of magic command-line options:</source>
          <target state="translated">Команды,в которых активирован расширенный парсер опций,понимают пару волшебных опций командной строки:</target>
        </trans-unit>
        <trans-unit id="1164e5e23a09019a23028b34e0716555534c7c84" translate="yes" xml:space="preserve">
          <source>Comment lines appearing within the &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; part of &lt;code&gt;data&lt;/code&gt; commands are always taken to be part of the body of the data and are therefore never ignored by fast-import. This makes it safe to import any file/message content whose lines might start with &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="translated">Строки комментариев , появляющиеся в &lt;code&gt;&amp;lt;raw&amp;gt;&lt;/code&gt; части &lt;code&gt;data&lt;/code&gt; команд всегда берутся часть тела данных и не поэтому никогда не игнорировали быстрый импорт. Это делает безопасным импорт любого содержимого файла / сообщения, строки которого могут начинаться с &lt;code&gt;#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a91a1b2d9c14de30d84e97a50ebe0d84ec870d0d" translate="yes" xml:space="preserve">
          <source>Commit Exclusions</source>
          <target state="translated">Обязательные исключения</target>
        </trans-unit>
        <trans-unit id="d05672f731c8973c38856897c1597b273795a8b8" translate="yes" xml:space="preserve">
          <source>Commit Formatting</source>
          <target state="translated">Обязательное форматирование</target>
        </trans-unit>
        <trans-unit id="dd5ce850ad942688eb2a5bc300a25747c87232f5" translate="yes" xml:space="preserve">
          <source>Commit Limiting</source>
          <target state="translated">Ограничение обязательств</target>
        </trans-unit>
        <trans-unit id="b518afb06183e6dd261846ce6b7c3883dfb90753" translate="yes" xml:space="preserve">
          <source>Commit Object</source>
          <target state="translated">объект коммисии</target>
        </trans-unit>
        <trans-unit id="d0a18b5ae3a3d7dd2d18ac07312a3fb851663f8e" translate="yes" xml:space="preserve">
          <source>Commit Ordering</source>
          <target state="translated">совершение заказа</target>
        </trans-unit>
        <trans-unit id="56db2f16b9009b18c00586ca09141e3f326e2939" translate="yes" xml:space="preserve">
          <source>Commit Rewording</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e9094af761c78deb267d59e41cd349f42db60f" translate="yes" xml:space="preserve">
          <source>Commit all reference updates queued for the transaction, ending the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf42eef97d741d8fac1d744839ed812ca253ade6" translate="yes" xml:space="preserve">
          <source>Commit automatically if the patch applied cleanly. It will not commit if any hunks fail to apply or there were other problems.</source>
          <target state="translated">Автоматическая фиксация,если патч нанесен чисто.Он не будет фиксироваться,если какой-нибудь hunks не смог применить или возникли другие проблемы.</target>
        </trans-unit>
        <trans-unit id="d6fc46793322e7555ef7eec902c3baf2d380d288" translate="yes" xml:space="preserve">
          <source>Commit each diff from the current branch directly to the SVN repository, and then rebase or reset (depending on whether or not there is a diff between SVN and head). This will create a revision in SVN for each commit in Git.</source>
          <target state="translated">Зафиксируйте каждое расхождение из текущей ветки непосредственно в SVN-репозиторий,а затем перебазируйте или сбросьте (в зависимости от того,есть ли разница между SVN и головой или нет).Это создаст ревизию в SVN для каждой фиксации в Git'е.</target>
        </trans-unit>
        <trans-unit id="32d864cf4da09ae0ccb717144326eeb4d87e8ec8" translate="yes" xml:space="preserve">
          <source>Commit information</source>
          <target state="translated">Заниматься сбором информации</target>
        </trans-unit>
        <trans-unit id="cdf751d893db0a24e80b369d44da2bfa908750cb" translate="yes" xml:space="preserve">
          <source>Commit log messages are typically encoded in UTF-8, but other extended ASCII encodings are also supported. This includes ISO-8859-x, CP125x and many others, but &lt;code&gt;not&lt;/code&gt; UTF-16/32, EBCDIC and CJK multi-byte encodings (GBK, Shift-JIS, Big5, EUC-x, CP9xx etc.).</source>
          <target state="translated">Сообщения журнала фиксации обычно кодируются в UTF-8, но также поддерживаются другие расширенные кодировки ASCII. Это включает в себя ISO-8859-x, CP125x и многие другие, но &lt;code&gt;not&lt;/code&gt; многобайтовые кодировки UTF-16/32, EBCDIC и CJK (GBK, Shift-JIS, Big5, EUC-x, CP9xx и т. Д.).</target>
        </trans-unit>
        <trans-unit id="a8ef9cdaba51b8bab239b7175f652bb22d7bc77a" translate="yes" xml:space="preserve">
          <source>Commit messages (even if they are all UTF-8) by default become corrupted due to not being updated &amp;mdash; any references to other commit hashes in commit messages will now refer to no-longer-extant commits.</source>
          <target state="translated">Сообщения фиксации (даже если все они UTF-8) по умолчанию становятся поврежденными из-за того, что не обновляются - любые ссылки на другие хэши фиксации в сообщениях фиксации теперь будут относиться к несуществующим коммитам.</target>
        </trans-unit>
        <trans-unit id="a0d43ade6a679ebd3be023e33c0ed655845a2385" translate="yes" xml:space="preserve">
          <source>Commit notes are blobs containing extra information about an object (usually information to supplement a commit&amp;rsquo;s message). These blobs are taken from notes refs. A notes ref is usually a branch which contains &quot;files&quot; whose paths are the object names for the objects they describe, with some directory separators included for performance reasons &lt;sup&gt;[&lt;a href=&quot;#_footnote_1&quot; id=&quot;_footnoteref_1&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt;.</source>
          <target state="translated">Заметки о фиксации - это большие двоичные объекты, содержащие дополнительную информацию об объекте (обычно информацию, дополняющую сообщение фиксации). Эти капли взяты из примечаний исх. Ссылка примечания обычно представляет собой ветвь, которая содержит &amp;laquo;файлы&amp;raquo;, пути которых являются именами объектов, которые они описывают, с некоторыми разделителями каталогов, включенными по соображениям производительности &lt;sup&gt;[ &lt;a href=&quot;#_footnote_1&quot; id=&quot;_footnoteref_1&quot;&gt;1&lt;/a&gt; ]&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="217104e18a0c907f96ea2b24a19144c9ed0cdcc1" translate="yes" xml:space="preserve">
          <source>Commit notes are blobs containing extra information about an object (usually information to supplement a commit&amp;rsquo;s message). These blobs are taken from notes refs. A notes ref is usually a branch which contains &quot;files&quot; whose paths are the object names for the objects they describe, with some directory separators included for performance reasons &lt;sup&gt;[&lt;a href=&quot;#_footnotedef_1&quot; id=&quot;_footnoteref_1&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340dec00f8e27e530fc4429d17a96a5706fe14b1" translate="yes" xml:space="preserve">
          <source>Commit objects created with the above setting record the value of &lt;code&gt;i18n.commitEncoding&lt;/code&gt; in its &lt;code&gt;encoding&lt;/code&gt; header. This is to help other people who look at them later. Lack of this header implies that the commit log message is encoded in UTF-8.</source>
          <target state="translated">Объекты фиксации, созданные с помощью вышеуказанного параметра, записывают значение &lt;code&gt;i18n.commitEncoding&lt;/code&gt; в свой заголовок &lt;code&gt;encoding&lt;/code&gt; . Это поможет другим людям, которые посмотрят на них позже. Отсутствие этого заголовка означает, что сообщение журнала фиксации закодировано в UTF-8.</target>
        </trans-unit>
        <trans-unit id="3e636bd205abbae562ddd3b2c8e7ad0ad71d57b9" translate="yes" xml:space="preserve">
          <source>Commit the now-current index with whatever commit message is appropriate now.</source>
          <target state="translated">Зафиксируйте текущий индекс с любым сообщением о фиксации сейчас.</target>
        </trans-unit>
        <trans-unit id="0d30e12bd35c1bbb537786b722f71f7710203505" translate="yes" xml:space="preserve">
          <source>Commit the superproject:</source>
          <target state="translated">Сделай суперпроект:</target>
        </trans-unit>
        <trans-unit id="c2ba6e6758d4e077ba6384de032e88b129ac1452" translate="yes" xml:space="preserve">
          <source>Commit to end at (defaults to HEAD). This names the commit at the tip of the history you are asking to be pulled.</source>
          <target state="translated">Обязательство по окончании (по умолчанию-HEAD).Это название коммита на кончике истории,который вы просите вытянуть.</target>
        </trans-unit>
        <trans-unit id="5d83b220e2a717b4332302a14b01dfcf38b82250" translate="yes" xml:space="preserve">
          <source>Commit to start at. This names a commit that is already in the upstream history.</source>
          <target state="translated">Обязательно начни с этого.Это называет коммит,который уже есть в истории восходящего потока.</target>
        </trans-unit>
        <trans-unit id="58a3fb0fa9151eaf5eb44aad642ac139bbd8d0a3" translate="yes" xml:space="preserve">
          <source>Commit to this SVN URL (the full path). This is intended to allow existing &lt;code&gt;git svn&lt;/code&gt; repositories created with one transport method (e.g. &lt;code&gt;svn://&lt;/code&gt; or &lt;code&gt;http://&lt;/code&gt; for anonymous read) to be reused if a user is later given access to an alternate transport method (e.g. &lt;code&gt;svn+ssh://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;) for commit.</source>
          <target state="translated">Зафиксируйте этот URL-адрес SVN (полный путь). Это предназначено для того, чтобы существующие репозитории &lt;code&gt;git svn&lt;/code&gt; , созданные с помощью одного транспортного метода (например, &lt;code&gt;svn://&lt;/code&gt; или &lt;code&gt;http://&lt;/code&gt; для анонимного чтения), можно было повторно использовать, если пользователю позже будет предоставлен доступ к альтернативному методу транспорта (например, &lt;code&gt;svn+ssh://&lt;/code&gt; или &lt;code&gt;https://&lt;/code&gt; ) для фиксации.</target>
        </trans-unit>
        <trans-unit id="5d95f392f7b327e450a5cff3a7d0d778dd7bb17a" translate="yes" xml:space="preserve">
          <source>Commit-ish object names to describe. Defaults to HEAD if omitted.</source>
          <target state="translated">Названия объектов в стиле Commit-ish для описания.По умолчанию HEAD,если опущено.</target>
        </trans-unit>
        <trans-unit id="806d7e617bf08278640b3918df6eb314e00c91ba" translate="yes" xml:space="preserve">
          <source>Commits A and B would no longer belong to a branch with a symbolic name, and so would be unreachable. As such, these commits would be removed by a &lt;code&gt;git gc&lt;/code&gt; command on the origin repository.</source>
          <target state="translated">Коммиты A и B больше не будут принадлежать ветке с символическим именем, а значит, будут недоступны. Таким образом, эти коммиты будут удалены командой &lt;code&gt;git gc&lt;/code&gt; в исходном репозитории.</target>
        </trans-unit>
        <trans-unit id="cd34e82ef88e8c2479cf92c1c7e01e1f9402380d" translate="yes" xml:space="preserve">
          <source>Commits are included if they are not TREESAME to any parent (though this can be changed, see &lt;code&gt;--sparse&lt;/code&gt; below). If the commit was a merge, and it was TREESAME to one parent, follow only that parent. (Even if there are several TREESAME parents, follow only one of them.) Otherwise, follow all parents.</source>
          <target state="translated">Коммиты включаются, если они не являются TREESAME для какого-либо родителя (хотя это можно изменить, см. &lt;code&gt;--sparse&lt;/code&gt; ниже). Если фиксация была слиянием, и это было TREESAME для одного родителя, следовать только за этим родителем. (Даже если родителей TREESAME несколько, следуйте только за одним из них.) В противном случае следуйте за всеми родителями.</target>
        </trans-unit>
        <trans-unit id="639abedb72340eed90c014868e55014692d325d7" translate="yes" xml:space="preserve">
          <source>Commits modifying the given &amp;lt;paths&amp;gt; are selected.</source>
          <target state="translated">Выбраны коммиты, изменяющие указанные &amp;lt;пути&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="e092c6ca44bf3dcd26785c6425ee818e873ea1fd" translate="yes" xml:space="preserve">
          <source>Commits that are referred by some branch or tag are selected.</source>
          <target state="translated">Выбираются комментарии,на которые ссылается какое-либо ответвление или тег.</target>
        </trans-unit>
        <trans-unit id="6d094219b19302ca10342a1d1eec0568558c2bd8" translate="yes" xml:space="preserve">
          <source>Commits that are walked are included if they are not TREESAME to any parent.</source>
          <target state="translated">Коммиты,которые проходят,включаются,если они не являются TREESAME для любого родителя.</target>
        </trans-unit>
        <trans-unit id="ef7e9aac4d19855b4ef3c8efc0ae0f7c81184b39" translate="yes" xml:space="preserve">
          <source>Commits the diff of two tree-ish arguments from the command-line. This command does not rely on being inside a &lt;code&gt;git svn
init&lt;/code&gt;-ed repository. This command takes three arguments, (a) the original tree to diff against, (b) the new tree result, (c) the URL of the target Subversion repository. The final argument (URL) may be omitted if you are working from a &lt;code&gt;git svn&lt;/code&gt;-aware repository (that has been &lt;code&gt;init&lt;/code&gt;-ed with &lt;code&gt;git svn&lt;/code&gt;). The -r&amp;lt;revision&amp;gt; option is required for this.</source>
          <target state="translated">Фиксирует различие двух древовидных аргументов из командной строки. Эта команда не требует нахождения внутри репозитория &lt;code&gt;git svn init&lt;/code&gt; -ed. Эта команда принимает три аргумента: (а) исходное дерево для сравнения, (б) результат нового дерева, (в) URL-адрес целевого репозитория Subversion. Последний аргумент (URL) может быть опущен, если вы работаете из репозитория &lt;code&gt;git svn&lt;/code&gt; -aware (который был &lt;code&gt;init&lt;/code&gt; с помощью &lt;code&gt;git svn&lt;/code&gt; ). Для этого требуется опция -r &amp;lt;revision&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="958e7e955e68b84d191b41f660f0af907a1a26e7" translate="yes" xml:space="preserve">
          <source>Commits to cherry-pick. For a more complete list of ways to spell commits, see &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;. Sets of commits can be passed but no traversal is done by default, as if the &lt;code&gt;--no-walk&lt;/code&gt; option was specified, see &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;. Note that specifying a range will feed all &amp;lt;commit&amp;gt;&amp;hellip;​ arguments to a single revision walk (see a later example that uses &lt;code&gt;maint master..next&lt;/code&gt;).</source>
          <target state="translated">Делает выбор в пользу вишенки. Более полный список способов &lt;a href=&quot;gitrevisions&quot;&gt;коммитов&lt;/a&gt; по буквам см. В gitrevisions [7] . Наборы коммитов можно передавать, но по умолчанию обход не выполняется, как если бы была указана опция &lt;code&gt;--no-walk&lt;/code&gt; , см. &lt;a href=&quot;git-rev-list&quot;&gt;Git-rev-list [1]&lt;/a&gt; . Обратите внимание, что при указании диапазона все аргументы &amp;lt;commit&amp;gt;&amp;hellip; &lt;code&gt;maint master..next&lt;/code&gt; ревизии (см. Более поздний пример, в котором используется maint master..next ).</target>
        </trans-unit>
        <trans-unit id="dbab89c03eabe421a0f756d1774250a10ff8a483" translate="yes" xml:space="preserve">
          <source>Commits to revert. For a more complete list of ways to spell commit names, see &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;. Sets of commits can also be given but no traversal is done by default, see &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; and its &lt;code&gt;--no-walk&lt;/code&gt; option.</source>
          <target state="translated">Совершает возврат. Для более полного списка способов &lt;a href=&quot;gitrevisions&quot;&gt;написания&lt;/a&gt; имен коммитов см. Gitrevisions [7] . Также можно &lt;a href=&quot;git-rev-list&quot;&gt;указать&lt;/a&gt; наборы коммитов, но по умолчанию обход не выполняется, см. Git-rev-list [1] и его параметр &lt;code&gt;--no-walk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49656a8c34bd2a56ea7b1c4c19ee41def8e375e6" translate="yes" xml:space="preserve">
          <source>Commits, usually other branch heads, to merge into our branch. Specifying more than one commit will create a merge with more than two parents (affectionately called an Octopus merge).</source>
          <target state="translated">Соединится с нашим филиалом,как правило,с главами других филиалов.Указание нескольких коммитов создаст слияние с более чем двумя родителями (ласково называемое слиянием с Octopus).</target>
        </trans-unit>
        <trans-unit id="c73e3ca2125dd6b66724a23fd1d9404dae439c7b" translate="yes" xml:space="preserve">
          <source>Committing everything directly on the integration branches leads to many problems: Bad commits cannot be undone, so they must be reverted one by one, which creates confusing histories and further error potential when you forget to revert part of a group of changes. Working in parallel mixes up the changes, creating further confusion.</source>
          <target state="translated">Обязательство все делать непосредственно на интеграционных ветвях приводит к множеству проблем:Плохие коммиты не могут быть отменены,поэтому они должны быть возвращены один за другим,что создаёт путаницу в истории и дальнейший потенциал ошибки,когда вы забываете вернуть часть группы изменений.Работа в параллельном режиме смешивает изменения,создавая дополнительную путаницу.</target>
        </trans-unit>
        <trans-unit id="fe3255bd451d3471e881939414843a91c1360c6e" translate="yes" xml:space="preserve">
          <source>Committing git state</source>
          <target state="translated">Состояние зажима</target>
        </trans-unit>
        <trans-unit id="429882fbdbb00bcd134816d89830eb4242096534" translate="yes" xml:space="preserve">
          <source>Common Git shell script setup code</source>
          <target state="translated">Общий код установки скрипта Git'а</target>
        </trans-unit>
        <trans-unit id="8a9ecfa5494a6336bbbe04b6056604a3b2505855" translate="yes" xml:space="preserve">
          <source>Common Key/Value Pairs</source>
          <target state="translated">Общие пары ключ/значение</target>
        </trans-unit>
        <trans-unit id="1af5706ae88f10b9ead3cfff1d78f59757380eca" translate="yes" xml:space="preserve">
          <source>Common diff options</source>
          <target state="translated">Общие различия в вариантах</target>
        </trans-unit>
        <trans-unit id="17cfc9441a242e68c384e9b5b8cf9a0e4a24fffd" translate="yes" xml:space="preserve">
          <source>Common unit suffixes of &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;g&lt;/code&gt; are supported.</source>
          <target state="translated">Поддерживаются общие суффиксы единиц измерения &lt;code&gt;k&lt;/code&gt; , &lt;code&gt;m&lt;/code&gt; или &lt;code&gt;g&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d454855d2445672da925706dc840080c654c187" translate="yes" xml:space="preserve">
          <source>Compare a tree to the working tree or index</source>
          <target state="translated">Сравните дерево с рабочим деревом или индексом</target>
        </trans-unit>
        <trans-unit id="b052eee7a70522f76de64441f0532b8b978732a8" translate="yes" xml:space="preserve">
          <source>Compare the commits specified by the two ranges, where &lt;code&gt;&amp;lt;range1&amp;gt;&lt;/code&gt; is considered an older version of &lt;code&gt;&amp;lt;range2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Сравните коммиты, указанные в двух диапазонах, где &lt;code&gt;&amp;lt;range1&amp;gt;&lt;/code&gt; считается более старой версией &lt;code&gt;&amp;lt;range2&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbedfc6f6fea6e33a27f5f1a33053dbff1a37614" translate="yes" xml:space="preserve">
          <source>Compare the version before the last commit and the last commit.</source>
          <target state="translated">Сравните версию перед последним коммитом и последний коммит.</target>
        </trans-unit>
        <trans-unit id="108964900757319250c09d41bf5206fee17fbebf" translate="yes" xml:space="preserve">
          <source>Compare the working tree with the &quot;base&quot; version (stage #1), &quot;our branch&quot; (stage #2) or &quot;their branch&quot; (stage #3). The index contains these stages only for unmerged entries i.e. while resolving conflicts. See &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree[1]&lt;/a&gt; section &quot;3-Way Merge&quot; for detailed information.</source>
          <target state="translated">Сравните рабочее дерево с &amp;laquo;базовой&amp;raquo; версией (этап №1), &amp;laquo;нашей веткой&amp;raquo; (этап №2) или &amp;laquo;своей веткой&amp;raquo; (этап №3). Указатель содержит эти этапы только для несвязанных записей, т.е. при разрешении конфликтов. См. &lt;a href=&quot;git-read-tree&quot;&gt;Git-read-tree [1]&lt;/a&gt; раздел &amp;laquo;3-стороннее слияние&amp;raquo; для получения подробной информации.</target>
        </trans-unit>
        <trans-unit id="417383ec38892ec59642ec5eded68ccdbddd54d0" translate="yes" xml:space="preserve">
          <source>Compare to &lt;code&gt;--full-history&lt;/code&gt; without rewriting above. Note that &lt;code&gt;E&lt;/code&gt; was pruned away because it is TREESAME, but the parent list of P was rewritten to contain &lt;code&gt;E&lt;/code&gt;'s parent &lt;code&gt;I&lt;/code&gt;. The same happened for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;, and &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">Сравните с &lt;code&gt;--full-history&lt;/code&gt; без переписывания выше. Обратите внимание , что &lt;code&gt;E&lt;/code&gt; была подрезать прочь , потому что это TREESAME, но родительский список P был переписан , чтобы содержать &lt;code&gt;E&lt;/code&gt; родителю &amp;laquo;s &lt;code&gt;I&lt;/code&gt; . То же самое произошло для &lt;code&gt;C&lt;/code&gt; и &lt;code&gt;N&lt;/code&gt; , и &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; и &lt;code&gt;Q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4186f0f14c1670feb8e3a98bffba021e85440c5e" translate="yes" xml:space="preserve">
          <source>Compare two commit ranges (e.g. two versions of a branch)</source>
          <target state="translated">Сравните два диапазона коммитов (например,две версии ветки).</target>
        </trans-unit>
        <trans-unit id="efcf6f2f0a57938476e9e49afce7ef20662e5045" translate="yes" xml:space="preserve">
          <source>Compares files in the working tree and the index</source>
          <target state="translated">Сравнивает файлы в рабочем дереве с индексом</target>
        </trans-unit>
        <trans-unit id="b51a5025d034c563fd7e4cf2f1781edb403c8a61" translate="yes" xml:space="preserve">
          <source>Compares the content and mode of blobs found via two tree objects</source>
          <target state="translated">Сравнивает содержание и режим блоков,найденных с помощью двух древовидных объектов</target>
        </trans-unit>
        <trans-unit id="4bed9c3374f6538cd59dc69ff688ff3c6921c3b0" translate="yes" xml:space="preserve">
          <source>Compares the content and mode of the blobs found in a tree object with the corresponding tracked files in the working tree, or with the corresponding paths in the index. When &amp;lt;path&amp;gt; arguments are present, compares only paths matching those patterns. Otherwise all tracked files are compared.</source>
          <target state="translated">Сравнивает содержимое и режим больших двоичных объектов, найденных в объекте дерева, с соответствующими отслеживаемыми файлами в рабочем дереве или с соответствующими путями в индексе. Когда присутствуют аргументы &amp;lt;path&amp;gt;, сравниваются только пути, соответствующие этим шаблонам. В противном случае сравниваются все отслеживаемые файлы.</target>
        </trans-unit>
        <trans-unit id="37c34b145e3b8ab67ff7b61ff3d11d3a3ac26e63" translate="yes" xml:space="preserve">
          <source>Compares the content and mode of the blobs found via two tree objects.</source>
          <target state="translated">Сравнивает содержание и режим блоков,найденных с помощью двух древовидных объектов.</target>
        </trans-unit>
        <trans-unit id="7bbeb5d1d5d86904df9d33155d8ac31a0ac700db" translate="yes" xml:space="preserve">
          <source>Compares the files in the working tree and the index. When paths are specified, compares only those named paths. Otherwise all entries in the index are compared. The output format is the same as for &lt;code&gt;git diff-index&lt;/code&gt; and &lt;code&gt;git diff-tree&lt;/code&gt;.</source>
          <target state="translated">Сравнивает файлы в рабочем дереве и индексе. Когда пути указаны, сравнивает только те именованные пути. В противном случае сравниваются все записи в указателе. Формат вывода такой же, как для &lt;code&gt;git diff-index&lt;/code&gt; и &lt;code&gt;git diff-tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f362db0c69868c1d491d62f5976e73dedfebf2ca" translate="yes" xml:space="preserve">
          <source>Comparing blobs or trees that have been replaced with those that replace them will not work properly. And using &lt;code&gt;git reset --hard&lt;/code&gt; to go back to a replaced commit will move the branch to the replacement commit instead of the replaced commit.</source>
          <target state="translated">Сравнение капель или деревьев, которые были заменены, с теми, которые их заменили, не будет работать должным образом. А использование &lt;code&gt;git reset --hard&lt;/code&gt; для возврата к замененной фиксации переместит ветку в заменяющую фиксацию вместо замененной фиксации.</target>
        </trans-unit>
        <trans-unit id="e0150129e57bff1f18c9fdecdc5f6497b9177eb2" translate="yes" xml:space="preserve">
          <source>Comparing branches</source>
          <target state="translated">Сравнительные филиалы</target>
        </trans-unit>
        <trans-unit id="275ba455480c0eb203a002756ce88295e425384f" translate="yes" xml:space="preserve">
          <source>Comparing with arbitrary commits</source>
          <target state="translated">В сравнении с произвольными обязательствами</target>
        </trans-unit>
        <trans-unit id="0623cdc962e5b3ec3734b834b479126f0b30d78b" translate="yes" xml:space="preserve">
          <source>Complete list of all commands</source>
          <target state="translated">Полный список всех команд</target>
        </trans-unit>
        <trans-unit id="09a81cc081fc6614431d0059db9771c7f435cba4" translate="yes" xml:space="preserve">
          <source>Components which are missing from the URL (e.g., there is no username in the example above) will be left unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678bc9ada07c728ccee1f48de02cb28152653f42" translate="yes" xml:space="preserve">
          <source>Composing</source>
          <target state="translated">Composing</target>
        </trans-unit>
        <trans-unit id="3a4b462b90ad947c014f566102a2e5a0dd92671e" translate="yes" xml:space="preserve">
          <source>Comprehensive reference documentation is available through the man pages, or &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt; command. For example, for the command &lt;code&gt;git clone &amp;lt;repo&amp;gt;&lt;/code&gt;, you can either use:</source>
          <target state="translated">Исчерпывающая справочная документация доступна на страницах руководства или &lt;a href=&quot;git-help&quot;&gt;с помощью&lt;/a&gt; команды git-help [1] . Например, для команды &lt;code&gt;git clone &amp;lt;repo&amp;gt;&lt;/code&gt; вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="90ae7930698f6a9514e277afc75b1efe24fb78ff" translate="yes" xml:space="preserve">
          <source>Compress $GIT_DIR/svn/&amp;lt;refname&amp;gt;/unhandled.log files and remove $GIT_DIR/svn/&amp;lt;refname&amp;gt;/index files.</source>
          <target state="translated">Сожмите файлы $ GIT_DIR / svn / &amp;lt;refname&amp;gt; /unhandled.log и удалите файлы $ GIT_DIR / svn / &amp;lt;refname&amp;gt; / index.</target>
        </trans-unit>
        <trans-unit id="af5758a107c963e9444cff5454d146835b9b660b" translate="yes" xml:space="preserve">
          <source>Compute object ID and optionally creates a blob from a file</source>
          <target state="translated">Вычислите идентификатор объекта и,опционально,создайте блок из файла</target>
        </trans-unit>
        <trans-unit id="01c4a7d17645c800690175029629fd7aeb958298" translate="yes" xml:space="preserve">
          <source>Compute the best common ancestors of all supplied commits, in preparation for an n-way merge. This mimics the behavior of &lt;code&gt;git show-branch --merge-base&lt;/code&gt;.</source>
          <target state="translated">Вычислите лучших общих предков всех предоставленных коммитов для подготовки к n-стороннему слиянию. Это имитирует поведение &lt;code&gt;git show-branch --merge-base&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bde35c0f2dc15b67baddfc39466c5eba5799786" translate="yes" xml:space="preserve">
          <source>Compute the dirstat numbers by counting the lines that have been removed from the source, or added to the destination. This ignores the amount of pure code movements within a file. In other words, rearranging lines in a file is not counted as much as other changes. This is the default behavior when no parameter is given.</source>
          <target state="translated">Вычислите номера диршатов путем подсчета строк,которые были удалены из источника или добавлены к месту назначения.При этом игнорируется количество чистых движений кода внутри файла.Другими словами,переупорядочивание строк в файле не учитывается столько,сколько другие изменения.Это поведение по умолчанию,когда параметр не задан.</target>
        </trans-unit>
        <trans-unit id="d5135b971c817889635eeca2e7a1431f33e06f37" translate="yes" xml:space="preserve">
          <source>Compute the dirstat numbers by counting the number of files changed. Each changed file counts equally in the dirstat analysis. This is the computationally cheapest &lt;code&gt;--dirstat&lt;/code&gt; behavior, since it does not have to look at the file contents at all.</source>
          <target state="translated">Вычислите числа dirstat, посчитав количество измененных файлов. Каждый измененный файл одинаково учитывается при анализе dirstat. Это наиболее дешевое с точки &lt;code&gt;--dirstat&lt;/code&gt; вычислений поведение --dirstat , так как ему вообще не нужно просматривать содержимое файла.</target>
        </trans-unit>
        <trans-unit id="3058cd552896436a63e7fe6f202c943042969930" translate="yes" xml:space="preserve">
          <source>Compute the dirstat numbers by doing the regular line-based diff analysis, and summing the removed/added line counts. (For binary files, count 64-byte chunks instead, since binary files have no natural concept of lines). This is a more expensive &lt;code&gt;--dirstat&lt;/code&gt; behavior than the &lt;code&gt;changes&lt;/code&gt; behavior, but it does count rearranged lines within a file as much as other changes. The resulting output is consistent with what you get from the other &lt;code&gt;--*stat&lt;/code&gt; options.</source>
          <target state="translated">Вычислите числа dirstat, выполнив обычный анализ различий на основе строк и суммируя количество удаленных / добавленных строк. (Для двоичных файлов вместо этого подсчитывайте 64-байтовые фрагменты, поскольку двоичные файлы не имеют естественного представления о строках). Это более дорогостоящее поведение &lt;code&gt;--dirstat&lt;/code&gt; , чем поведение &lt;code&gt;changes&lt;/code&gt; , но оно учитывает переупорядоченные строки в файле так же, как и другие изменения. Полученный результат согласуется с тем, что вы получаете от других опций &lt;code&gt;--*stat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a0b0a16b974bf1fed36c439dfbdefde29d32d7c" translate="yes" xml:space="preserve">
          <source>Compute unique ID for a patch</source>
          <target state="translated">Вычислите уникальный идентификатор патча</target>
        </trans-unit>
        <trans-unit id="8998103614864fe1630f3c6a0063c614dbc4eadb" translate="yes" xml:space="preserve">
          <source>Computes the object ID value for an object with specified type with the contents of the named file (which can be outside of the work tree), and optionally writes the resulting object into the object database. Reports its object ID to its standard output. When &amp;lt;type&amp;gt; is not specified, it defaults to &quot;blob&quot;.</source>
          <target state="translated">Вычисляет значение идентификатора объекта для объекта указанного типа с содержимым указанного файла (который может находиться за пределами рабочего дерева) и, при необходимости, записывает полученный объект в базу данных объектов. Сообщает свой идентификатор объекта в стандартный вывод. Если &amp;lt;type&amp;gt; не указан, по умолчанию используется значение &amp;laquo;blob&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="937949a3d933696c9d4185384073018afe774033" translate="yes" xml:space="preserve">
          <source>Concatenates the contents of said Makefiles in the head of the branch &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">Объединяет содержимое указанных файлов Makefile в заголовок &lt;code&gt;master&lt;/code&gt; ветки .</target>
        </trans-unit>
        <trans-unit id="7d484eb61cfd5469110c2312d1ec91512fe53e6a" translate="yes" xml:space="preserve">
          <source>Conceptually there are only four object types: commit, tree, tag and blob. However to save space, an object could be stored as a &quot;delta&quot; of another &quot;base&quot; object. These representations are assigned new types ofs-delta and ref-delta, which is only valid in a pack file.</source>
          <target state="translated">Концептуально существует только четыре типа объектов:коммит,дерево,тег и блок.Однако,чтобы сэкономить место,объект может храниться как &quot;дельта&quot; другого &quot;базового&quot; объекта.Этим представлениям присваиваются новые типы &quot;дельта&quot; и &quot;ref-delta&quot;,которые действительны только в пакетном файле.</target>
        </trans-unit>
        <trans-unit id="f9ce6c77a92950f557622abcc328a5c52bc5ce16" translate="yes" xml:space="preserve">
          <source>Conceptually, &lt;code&gt;git write-tree&lt;/code&gt; sync()s the current index contents into a set of tree files. In order to have that match what is actually in your directory right now, you need to have done a &lt;code&gt;git update-index&lt;/code&gt; phase before you did the &lt;code&gt;git write-tree&lt;/code&gt;.</source>
          <target state="translated">По сути, &lt;code&gt;git write-tree&lt;/code&gt; sync () помещает текущее содержимое индекса в набор файлов дерева. Чтобы это соответствовало тому, что на самом деле находится в вашем каталоге прямо сейчас, вам необходимо выполнить фазу &lt;code&gt;git update-index&lt;/code&gt; до того, как вы сделаете &lt;code&gt;git write-tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ca3e3f6198d8db66027f645ef57e4ac30e9a37f" translate="yes" xml:space="preserve">
          <source>Conceptually, the feature enters at an unstable branch (usually &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;pu&lt;/code&gt;), and &quot;graduates&quot; to &lt;code&gt;master&lt;/code&gt; for the next release once it is considered stable enough.</source>
          <target state="translated">Концептуально функция входит в нестабильную ветвь (обычно &lt;code&gt;next&lt;/code&gt; или &lt;code&gt;pu&lt;/code&gt; ) и &amp;laquo;завершается&amp;raquo; для &lt;code&gt;master&lt;/code&gt; в следующем выпуске, когда она считается достаточно стабильной.</target>
        </trans-unit>
        <trans-unit id="f6ef470943762cee844729c89f18b4378eb7782a" translate="yes" xml:space="preserve">
          <source>Conceptually, the feature enters at an unstable branch (usually &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;seen&lt;/code&gt;), and &quot;graduates&quot; to &lt;code&gt;master&lt;/code&gt; for the next release once it is considered stable enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="c144db8f4732a9347031a1b40f149e52d91f565f" translate="yes" xml:space="preserve">
          <source>Concrete example</source>
          <target state="translated">Конкретный пример</target>
        </trans-unit>
        <trans-unit id="1805d25f90c97785232c09de6be3d92c9bae4482" translate="yes" xml:space="preserve">
          <source>Conditional includes</source>
          <target state="translated">Условное условие включает в себя</target>
        </trans-unit>
        <trans-unit id="1eca678ae2103e84056e13fabe651ada3207805a" translate="yes" xml:space="preserve">
          <source>Cone pattern set</source>
          <target state="translated">Набор конусов</target>
        </trans-unit>
        <trans-unit id="eb7272ff2c451e4d56ff0b5035c89e6773552a2b" translate="yes" xml:space="preserve">
          <source>Config file-only options</source>
          <target state="translated">Настройка параметров только для файлов</target>
        </trans-unit>
        <trans-unit id="422fb4b2c323c56fc618406ee76b1fefb87edd1b" translate="yes" xml:space="preserve">
          <source>Config variables</source>
          <target state="translated">Переменные Config</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="acdba8395423767de730ee1b75436df3a0ebc87e" translate="yes" xml:space="preserve">
          <source>Configuration file</source>
          <target state="translated">Файл конфигурации</target>
        </trans-unit>
        <trans-unit id="70c34b77eccd45b690bac76f834e5695507ca571" translate="yes" xml:space="preserve">
          <source>Configuration mechanism</source>
          <target state="translated">Механизм конфигурации</target>
        </trans-unit>
        <trans-unit id="f4d40d6c54ed064cd5675e2b020be36dc38807c6" translate="yes" xml:space="preserve">
          <source>Configuration options</source>
          <target state="translated">Опции конфигурации</target>
        </trans-unit>
        <trans-unit id="38b23d1375544f4a68ea9228188041f47459e054" translate="yes" xml:space="preserve">
          <source>Configuration variables</source>
          <target state="translated">Переменные конфигурации</target>
        </trans-unit>
        <trans-unit id="8a66ea31ab3d6b079e67d729ad34365bb857146f" translate="yes" xml:space="preserve">
          <source>Configure a &quot;tar.xz&quot; format for making LZMA-compressed tarfiles. You can use it specifying &lt;code&gt;--format=tar.xz&lt;/code&gt;, or by creating an output file like &lt;code&gt;-o foo.tar.xz&lt;/code&gt;.</source>
          <target state="translated">Настройте формат tar.xz для создания файлов tar, сжатых LZMA. Вы можете использовать его , задающий &lt;code&gt;--format=tar.xz&lt;/code&gt; , или путем создания выходного файла , как &lt;code&gt;-o foo.tar.xz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6a6815a7f24dfffdb1d929dd323aaec05a9ab47" translate="yes" xml:space="preserve">
          <source>Configure a &lt;code&gt;fix&lt;/code&gt; trailer with a key that contains a &lt;code&gt;#&lt;/code&gt; and no space after this character, and show how it works:</source>
          <target state="translated">Сконфигурируйте трейлер &lt;code&gt;fix&lt;/code&gt; с ключом, который содержит &lt;code&gt;#&lt;/code&gt; и без пробела после этого символа, и покажите, как это работает:</target>
        </trans-unit>
        <trans-unit id="ce90c0bc932e5f1df9b68ee7ec6c0da58d747ea5" translate="yes" xml:space="preserve">
          <source>Configure a &lt;code&gt;see&lt;/code&gt; trailer with a command to show the subject of a commit that is related, and show how it works:</source>
          <target state="translated">Настройте трейлер &lt;code&gt;see&lt;/code&gt; с помощью команды, чтобы показать тему связанной фиксации и показать, как она работает:</target>
        </trans-unit>
        <trans-unit id="c9ccaafdcef74174cf7734bdb6a6d7caabe83888" translate="yes" xml:space="preserve">
          <source>Configure a &lt;code&gt;sign&lt;/code&gt; trailer with a &lt;code&gt;Signed-off-by&lt;/code&gt; key, and then add two of these trailers to a message:</source>
          <target state="translated">Настройте трейлер &lt;code&gt;sign&lt;/code&gt; с &lt;code&gt;Signed-off-by&lt;/code&gt; ключа подписи , а затем добавьте два из этих трейлеров в сообщение:</target>
        </trans-unit>
        <trans-unit id="e0f5abc21cdfc10087712a4df06b45d6f1ed9b35" translate="yes" xml:space="preserve">
          <source>Configure a &lt;code&gt;sign&lt;/code&gt; trailer with a command to automatically add a 'Signed-off-by: ' with the author information only if there is no 'Signed-off-by: ' already, and show how it works:</source>
          <target state="translated">Сконфигурируйте трейлер &lt;code&gt;sign&lt;/code&gt; с помощью команды для автоматического добавления поля &amp;laquo;Подписано:&amp;raquo; с информацией об авторе только в том случае, если еще не было &amp;laquo;Подписан:&amp;raquo;, и покажите, как это работает:</target>
        </trans-unit>
        <trans-unit id="f50c440d2f6f9060cd052adb1632feec1a0c614d" translate="yes" xml:space="preserve">
          <source>Configure a commit template with some trailers with empty values (using sed to show and keep the trailing spaces at the end of the trailers), then configure a commit-msg hook that uses &lt;code&gt;git interpret-trailers&lt;/code&gt; to remove trailers with empty values and to add a &lt;code&gt;git-version&lt;/code&gt; trailer:</source>
          <target state="translated">Сконфигурируйте шаблон фиксации с некоторыми трейлерами с пустыми значениями (используя sed для отображения и сохранения конечных пробелов в конце трейлеров), затем настройте ловушку commit-msg, которая использует &lt;code&gt;git interpret-trailers&lt;/code&gt; для удаления трейлеров с пустыми значениями и добавления &lt;code&gt;git-version&lt;/code&gt; трейлера:</target>
        </trans-unit>
        <trans-unit id="3f6c615a6da0f7262f6f2dbcc08ecf276b931a9e" translate="yes" xml:space="preserve">
          <source>Configure your general composition window to not wrap.</source>
          <target state="translated">Настройте общее окно композиции так,чтобы оно не заворачивалось.</target>
        </trans-unit>
        <trans-unit id="3551290f2193aa1e636343f0cbcbc633f639f8c4" translate="yes" xml:space="preserve">
          <source>Configure your mail server composition as plain text: Edit&amp;hellip;​Account Settings&amp;hellip;​Composition &amp;amp; Addressing, uncheck &quot;Compose Messages in HTML&quot;.</source>
          <target state="translated">Сконфигурируйте состав вашего почтового сервера как обычный текст: Edit&amp;hellip; Account Settings&amp;hellip; Composition &amp;amp; Addressing, снимите галочку с &amp;laquo;Compose Messages in HTML&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="3e29b2ee31b493715ce39183ea79ba9aca718b3b" translate="yes" xml:space="preserve">
          <source>Configured remote-tracking branches</source>
          <target state="translated">Настроенные дистанционно отслеживаемые ветки</target>
        </trans-unit>
        <trans-unit id="4976060b350e89ec5dfdb2a1c1950efb45f52bc3" translate="yes" xml:space="preserve">
          <source>Configuring database backend</source>
          <target state="translated">Настройка бэкэнда базы данных</target>
        </trans-unit>
        <trans-unit id="c983b7934801a3688ed66b5498ab09519448fc97" translate="yes" xml:space="preserve">
          <source>Configuring gitweb features</source>
          <target state="translated">Настройка gitweb-функций</target>
        </trans-unit>
        <trans-unit id="40e0a19569f8f1844d5a471098cc89ca36d5ca64" translate="yes" xml:space="preserve">
          <source>Configuring remote-tracking branches</source>
          <target state="translated">Настройка удаленных отслеживающих филиалов</target>
        </trans-unit>
        <trans-unit id="9e40cad468539cb8231b63b11fdb5df741e2d14b" translate="yes" xml:space="preserve">
          <source>Confirm just before sending:</source>
          <target state="translated">Подтвердите перед отправкой:</target>
        </trans-unit>
        <trans-unit id="ecda02ba517320c0b15d176b3e447e83063fff66" translate="yes" xml:space="preserve">
          <source>Conflict markers are left in the problematic files, and after you resolve the conflicts manually, you can update the index with the contents and run Git commit, as you normally would when creating a new file.</source>
          <target state="translated">Маркеры конфликтов оставлены в проблемных файлах,и после того,как вы разрешите конфликты вручную,вы можете обновить индекс содержимым и запустить Git-комммит,как это обычно бывает при создании нового файла.</target>
        </trans-unit>
        <trans-unit id="b82d334ed6758888e34c8a34df72370a5d90993b" translate="yes" xml:space="preserve">
          <source>Conflicts can occur when applying a commit to p4. When this happens, the default behavior (&quot;ask&quot;) is to prompt whether to skip this commit and continue, or quit. This option can be used to bypass the prompt, causing conflicting commits to be automatically skipped, or to quit trying to apply commits, without prompting.</source>
          <target state="translated">Конфликты могут возникать при применении коммита к p4.Когда это происходит,поведение по умолчанию (&quot;ask&quot;)-это запрос о том,пропустить ли коммит и продолжить,или выйти из него.Эта опция может быть использована для обхода запроса,вызывающего автоматический пропуск конфликтующих коммитов,или для выхода из попытки применения коммитов без подсказки.</target>
        </trans-unit>
        <trans-unit id="d9246582c40c7034c419d5e149871effa77f01da" translate="yes" xml:space="preserve">
          <source>Connects to given service. Standard input and standard output of helper are connected to specified service (git prefix is included in service name so e.g. fetching uses &lt;code&gt;git-upload-pack&lt;/code&gt; as service) on remote side. Valid replies to this command are empty line (connection established), &lt;code&gt;fallback&lt;/code&gt; (no smart transport support, fall back to dumb transports) and just exiting with error message printed (can&amp;rsquo;t connect, don&amp;rsquo;t bother trying to fall back). After line feed terminating the positive (empty) response, the output of service starts. After the connection ends, the remote helper exits.</source>
          <target state="translated">Подключается к данной услуге. Стандартный ввод и стандартный вывод помощника подключаются к указанной службе (префикс git включен в имя службы, поэтому, например, при &lt;code&gt;git-upload-pack&lt;/code&gt; используется git-upload-pack как служба) на удаленной стороне. Допустимые ответы на эту команду: пустая строка (соединение установлено), &lt;code&gt;fallback&lt;/code&gt; (без поддержки интеллектуального транспорта, откат к тупому транспорту) и просто выход с напечатанным сообщением об ошибке (не удается подключиться, не пытайтесь откатиться). После того, как перевод строки завершает положительный (пустой) ответ, запускается вывод службы. После завершения соединения удаленный помощник завершает работу.</target>
        </trans-unit>
        <trans-unit id="ab69689298b341c622fdf07baf6d7935162cc21e" translate="yes" xml:space="preserve">
          <source>Consider &lt;code&gt;.gitattributes&lt;/code&gt; in the index only, ignoring the working tree.</source>
          <target state="translated">Учитывайте &lt;code&gt;.gitattributes&lt;/code&gt; только в индексе, игнорируя рабочее дерево.</target>
        </trans-unit>
        <trans-unit id="2e9b2aca01cec344e42ddb2f6c4d43d446641ec6" translate="yes" xml:space="preserve">
          <source>Consider any object recorded in the index also as a head node for an unreachability trace.</source>
          <target state="translated">Рассмотрим любой объект,записанный в индексе,также как головной узел для недостижимой трассы.</target>
        </trans-unit>
        <trans-unit id="5dd8963c37ba70016cc97181d1437d9d279837cb" translate="yes" xml:space="preserve">
          <source>Consider only commits that are enough to explain how the files that match the specified paths came to be.</source>
          <target state="translated">Рассмотрим только коммиты,которых достаточно,чтобы объяснить,как появились файлы,соответствующие указанным путям.</target>
        </trans-unit>
        <trans-unit id="ba0254d514d0f2ca6e4ebd12fd91b2a48fa85b1d" translate="yes" xml:space="preserve">
          <source>Consider the following .gitmodules file:</source>
          <target state="translated">Рассмотрим следующий файл .gitmodules:</target>
        </trans-unit>
        <trans-unit id="8a3a2dda249f0930d1314682106ca1561464766d" translate="yes" xml:space="preserve">
          <source>Consider the limiting patterns to be Perl-compatible regular expressions.</source>
          <target state="translated">Рассмотрим ограничивающие шаблоны как Perl-совместимые регулярные выражения.</target>
        </trans-unit>
        <trans-unit id="d3cbcdfc580ee16544a677fdcaea7364f6ffede7" translate="yes" xml:space="preserve">
          <source>Consider the limiting patterns to be basic regular expressions; this is the default.</source>
          <target state="translated">Считайте ограничивающие шаблоны основными регулярными выражениями;это стандартное выражение.</target>
        </trans-unit>
        <trans-unit id="cc80930760a8dae17ccff09b94b94b8c2a73e3d6" translate="yes" xml:space="preserve">
          <source>Consider the limiting patterns to be extended regular expressions instead of the default basic regular expressions.</source>
          <target state="translated">Рассмотрим ограничивающие шаблоны,которые будут расширены регулярными выражениями вместо основных регулярных выражений по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0bd0c2e95b3ce3558e3f029a387e02dcaec9fc10" translate="yes" xml:space="preserve">
          <source>Consider the limiting patterns to be fixed strings (don&amp;rsquo;t interpret pattern as a regular expression).</source>
          <target state="translated">Считайте ограничивающие шаблоны фиксированными строками (не интерпретируйте шаблон как регулярное выражение).</target>
        </trans-unit>
        <trans-unit id="ce08a982fc80bf880f9e5e7fbbc19290d0e13642" translate="yes" xml:space="preserve">
          <source>Consider this history:</source>
          <target state="translated">Рассмотрим эту историю:</target>
        </trans-unit>
        <trans-unit id="6e0518d23c6b434e11a17284519d985d575f8d5b" translate="yes" xml:space="preserve">
          <source>Considers adding content from all git-*.sh scripts:</source>
          <target state="translated">Рассматривает добавление контента из всех git-*.sh скриптов:</target>
        </trans-unit>
        <trans-unit id="aa183b32e2469308bcac751961ddf4f45522d312" translate="yes" xml:space="preserve">
          <source>Construct a commit message for use with &lt;code&gt;rebase --autosquash&lt;/code&gt;. The commit message subject line is taken from the specified commit with a prefix of &quot;squash! &quot;. Can be used with additional commit message options (&lt;code&gt;-m&lt;/code&gt;/&lt;code&gt;-c&lt;/code&gt;/&lt;code&gt;-C&lt;/code&gt;/&lt;code&gt;-F&lt;/code&gt;). See &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;rebase --autosquash&lt;/code&gt; сообщение фиксации для использования с rebase --autosquash . Строка темы сообщения коммита берется из указанного коммита с префиксом &amp;laquo;сквош!&amp;raquo;. Может использоваться с дополнительными параметрами сообщения фиксации ( &lt;code&gt;-m&lt;/code&gt; / &lt;code&gt;-c&lt;/code&gt; / &lt;code&gt;-C&lt;/code&gt; / &lt;code&gt;-F&lt;/code&gt; ). Подробнее см. &lt;a href=&quot;git-rebase&quot;&gt;Git-rebase [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="613af883ed6da1442ba9d47b0f082fab42f334c7" translate="yes" xml:space="preserve">
          <source>Construct a commit message for use with &lt;code&gt;rebase --autosquash&lt;/code&gt;. The commit message will be the subject line from the specified commit with a prefix of &quot;fixup! &quot;. See &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;rebase --autosquash&lt;/code&gt; сообщение фиксации для использования с rebase --autosquash . Сообщение фиксации будет строкой темы из указанного коммита с префиксом &amp;laquo;fixup!&amp;raquo;. Подробнее см. &lt;a href=&quot;git-rebase&quot;&gt;Git-rebase [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26410cb72d41a741e69a55d63cb8badf7f0b0bd2" translate="yes" xml:space="preserve">
          <source>Contains administrative data for linked working trees. Each subdirectory contains the working tree-related part of a linked working tree. This directory is ignored if $GIT_COMMON_DIR is set, in which case &quot;$GIT_COMMON_DIR/worktrees&quot; will be used instead.</source>
          <target state="translated">Содержит административные данные для связанных рабочих деревьев.Каждый подкаталог содержит связанную с рабочим деревом часть связанного рабочего дерева.Этот каталог игнорируется,если установлен $GIT_COMMON_DIR,в этом случае вместо него будет использоваться &quot;$GIT_COMMON_DIR/рабочие деревья&quot;.</target>
        </trans-unit>
        <trans-unit id="926bb57bf277ea775a3bccb0602b810a03d08da9" translate="yes" xml:space="preserve">
          <source>Contains the git-repositories of the submodules.</source>
          <target state="translated">Содержит гит-репозитории субмодулей.</target>
        </trans-unit>
        <trans-unit id="2017a3b0e62c7744478a46c444d4d27cb868b22a" translate="yes" xml:space="preserve">
          <source>Content which does not differ between the index and working tree may be shown on context lines, beginning with a &quot; &quot; (space). You can stage context lines for removal by converting the space to a &quot;-&quot;. The resulting working tree file will appear to re-add the content.</source>
          <target state="translated">Содержание,которое не отличается от индекса и рабочего дерева,может быть показано на контекстных строках,начинающихся с &quot; &quot; (пробел).Строки контекста для удаления могут быть установлены путем преобразования пробела в &quot;-&quot;.Полученный файл рабочего дерева появится для повторного добавления содержимого.</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="475c13751eb255f66e4aec9a66a81a56d379a598" translate="yes" xml:space="preserve">
          <source>Continue listing the history of a file beyond renames (works only for a single file).</source>
          <target state="translated">Продолжайте перечислять историю файла,не ограничиваясь переименованием (работает только для одного файла).</target>
        </trans-unit>
        <trans-unit id="4798719de8c426782f7160e2b872b0281bb19c57" translate="yes" xml:space="preserve">
          <source>Continue the operation in progress using the information in &lt;code&gt;.git/sequencer&lt;/code&gt;. Can be used to continue after resolving conflicts in a failed cherry-pick or revert.</source>
          <target state="translated">Продолжите выполняемую операцию, используя информацию в &lt;code&gt;.git/sequencer&lt;/code&gt; . Может использоваться для продолжения после разрешения конфликтов при неудачном выборе или возврате.</target>
        </trans-unit>
        <trans-unit id="75e8c6f43c030fe85b04f600a5aefef84d4215ca" translate="yes" xml:space="preserve">
          <source>Continue the rebase with &lt;code&gt;git rebase --continue&lt;/code&gt;.</source>
          <target state="translated">Продолжите перебазирование с помощью &lt;code&gt;git rebase --continue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbb3e402bf66bc40e025c029cebd9e3786831d84" translate="yes" xml:space="preserve">
          <source>Continuing with our test-project, let&amp;rsquo;s modify file.txt again:</source>
          <target state="translated">Продолжая наш тестовый проект, давайте еще раз изменим file.txt:</target>
        </trans-unit>
        <trans-unit id="6f930d8a34d56a441268a0623f0c037df7494b75" translate="yes" xml:space="preserve">
          <source>Control GSSAPI credential delegation. The delegation is disabled by default in libcurl since version 7.21.7. Set parameter to tell the server what it is allowed to delegate when it comes to user credentials. Used with GSS/kerberos. Possible values are:</source>
          <target state="translated">Контролируйте делегирование полномочий ГССАПИ.Делегирование отключено по умолчанию в libcurl начиная с версии 7.21.7.Установите параметр,указывающий серверу,что разрешено делегировать,когда речь идет об учетных данных пользователей.Используется с GSS/kerberos.Возможные значения:</target>
        </trans-unit>
        <trans-unit id="732c632643ca337cd77cc6d082dfc0d1c8e3c9e5" translate="yes" xml:space="preserve">
          <source>Control how information about the commits in the local repository is sent when negotiating the contents of the packfile to be sent by the server. Set to &quot;skipping&quot; to use an algorithm that skips commits in an effort to converge faster, but may result in a larger-than-necessary packfile; The default is &quot;default&quot; which instructs Git to use the default algorithm that never skips commits (unless the server has acknowledged it or one of its descendants). If &lt;code&gt;feature.experimental&lt;/code&gt; is enabled, then this setting defaults to &quot;skipping&quot;. Unknown values will cause &lt;code&gt;git fetch&lt;/code&gt; to error out.</source>
          <target state="translated">Управляйте тем, как информация о коммитах в локальном репозитории отправляется при согласовании содержимого файла пакета, которое будет отправлено сервером. Установите значение &amp;laquo;пропуск&amp;raquo;, чтобы использовать алгоритм, который пропускает коммиты в попытке сойтись быстрее, но может привести к тому, что pack-файл окажется больше необходимого; Значение по умолчанию - &amp;laquo;default&amp;raquo;, что указывает Git использовать алгоритм по умолчанию, который никогда не пропускает фиксации (если только сервер или один из его потомков не подтвердил это). Если опция &lt;code&gt;feature.experimental&lt;/code&gt; включена, то по умолчанию этот параметр установлен на &amp;laquo;пропуск&amp;raquo;. Неизвестные значения вызовут ошибку &lt;code&gt;git fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae71e6ee5d07ac322bf2300466d8fa2871661c2" translate="yes" xml:space="preserve">
          <source>Control how information about the commits in the local repository is sent when negotiating the contents of the packfile to be sent by the server. Set to &quot;skipping&quot; to use an algorithm that skips commits in an effort to converge faster, but may result in a larger-than-necessary packfile; or set to &quot;noop&quot; to not send any information at all, which will almost certainly result in a larger-than-necessary packfile, but will skip the negotiation step. The default is &quot;default&quot; which instructs Git to use the default algorithm that never skips commits (unless the server has acknowledged it or one of its descendants). If &lt;code&gt;feature.experimental&lt;/code&gt; is enabled, then this setting defaults to &quot;skipping&quot;. Unknown values will cause &lt;code&gt;git fetch&lt;/code&gt; to error out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2d757e789e92329feff3e9e393ffe1cf9826bc" translate="yes" xml:space="preserve">
          <source>Control how ref update status is printed. Valid values are &lt;code&gt;full&lt;/code&gt; and &lt;code&gt;compact&lt;/code&gt;. Default value is &lt;code&gt;full&lt;/code&gt;. See section OUTPUT in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for detail.</source>
          <target state="translated">Управляйте печатью статуса обновления ссылки. Допустимые значения &lt;code&gt;full&lt;/code&gt; и &lt;code&gt;compact&lt;/code&gt; . Значение по умолчанию &lt;code&gt;full&lt;/code&gt; . См. Подробности в разделе ВЫХОД в &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e05cd92bb18e6dbe129763361ebf98f054218bc" translate="yes" xml:space="preserve">
          <source>Control the order in which files appear in the output. This overrides the &lt;code&gt;diff.orderFile&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). To cancel &lt;code&gt;diff.orderFile&lt;/code&gt;, use &lt;code&gt;-O/dev/null&lt;/code&gt;.</source>
          <target state="translated">Управляйте порядком, в котором файлы появляются на выходе. Это переопределяет &lt;code&gt;diff.orderFile&lt;/code&gt; конфигурации diff.orderFile (см. &lt;a href=&quot;git-config&quot;&gt;Git-config [1]&lt;/a&gt; ). Чтобы отменить &lt;code&gt;diff.orderFile&lt;/code&gt; , используйте &lt;code&gt;-O/dev/null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95cfa5bd9ed3c9eff692bd91fe02de0af906819b" translate="yes" xml:space="preserve">
          <source>Controlling access to Git repositories</source>
          <target state="translated">Управление доступом к Git-репозиториям</target>
        </trans-unit>
        <trans-unit id="302680d7e637a6c4d28c5bc8380af3a8487a3fd0" translate="yes" xml:space="preserve">
          <source>Controlling the daemon</source>
          <target state="translated">Управление демоном</target>
        </trans-unit>
        <trans-unit id="5f8b43605d2bc36ca036762a54d85472bbaf393e" translate="yes" xml:space="preserve">
          <source>Controls addition of &lt;code&gt;In-Reply-To&lt;/code&gt; and &lt;code&gt;References&lt;/code&gt; headers to make the second and subsequent mails appear as replies to the first. Also controls generation of the &lt;code&gt;Message-Id&lt;/code&gt; header to reference.</source>
          <target state="translated">Управляет добавлением заголовков &lt;code&gt;In-Reply-To&lt;/code&gt; и &lt;code&gt;References&lt;/code&gt; , чтобы второе и последующие письма отображались как ответы на первое. Также контролирует создание заголовка &lt;code&gt;Message-Id&lt;/code&gt; для ссылки.</target>
        </trans-unit>
        <trans-unit id="2d73e883baf4d5a02fe3808167b349dacd41e248" translate="yes" xml:space="preserve">
          <source>Controls the amount of output shown by the recursive merge strategy. Level 0 outputs nothing except a final error message if conflicts were detected. Level 1 outputs only conflicts, 2 outputs conflicts and file changes. Level 5 and above outputs debugging information. The default is level 2. Can be overridden by the &lt;code&gt;GIT_MERGE_VERBOSITY&lt;/code&gt; environment variable.</source>
          <target state="translated">Управляет объемом вывода, отображаемым стратегией рекурсивного слияния. Уровень 0 ничего не выводит, кроме последнего сообщения об ошибке, если обнаружены конфликты. Уровень 1 выводит только конфликты, 2 выводит конфликты и изменения файлов. Уровень 5 и выше выводит отладочную информацию. По умолчанию - уровень 2. Может быть переопределен переменной среды &lt;code&gt;GIT_MERGE_VERBOSITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d76ea066512503130cc69199cf2d62634818fae1" translate="yes" xml:space="preserve">
          <source>Controls whether one-level refnames are accepted (i.e., refnames that do not contain multiple &lt;code&gt;/&lt;/code&gt;-separated components). The default is &lt;code&gt;--no-allow-onelevel&lt;/code&gt;.</source>
          <target state="translated">Управляет тем, принимаются ли одноуровневые имена ссылок (т. Е. Имена ссылок, которые не содержат нескольких компонентов , разделенных &lt;code&gt;/&lt;/code&gt; ). По умолчанию - &lt;code&gt;--no-allow-onelevel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65d9a75f19717f80d02990ede6313f9c8dc92c2a" translate="yes" xml:space="preserve">
          <source>Controls which diff tool is used by &lt;a href=&quot;git-difftool&quot;&gt;git-difftool[1]&lt;/a&gt; when the -g/--gui flag is specified. This variable overrides the value configured in &lt;code&gt;merge.guitool&lt;/code&gt;. The list below shows the valid built-in values. Any other value is treated as a custom diff tool and requires that a corresponding difftool.&amp;lt;guitool&amp;gt;.cmd variable is defined.</source>
          <target state="translated">Управляет тем, какой инструмент сравнения используется &lt;a href=&quot;git-difftool&quot;&gt;git-difftool [1],&lt;/a&gt; если указан флаг -g / - gui. Эта переменная имеет приоритет над значением, &lt;code&gt;merge.guitool&lt;/code&gt; в merge.guitool . В списке ниже показаны действительные встроенные значения. Любое другое значение рассматривается как настраиваемый инструмент сравнения и требует определения соответствующей переменной difftool. &amp;lt;guitool&amp;gt; .cmd.</target>
        </trans-unit>
        <trans-unit id="866c417f86e708b803c2ccd6543f9e30d5664def" translate="yes" xml:space="preserve">
          <source>Controls which diff tool is used by &lt;a href=&quot;git-difftool&quot;&gt;git-difftool[1]&lt;/a&gt;. This variable overrides the value configured in &lt;code&gt;merge.tool&lt;/code&gt;. The list below shows the valid built-in values. Any other value is treated as a custom diff tool and requires that a corresponding difftool.&amp;lt;tool&amp;gt;.cmd variable is defined.</source>
          <target state="translated">Управляет тем, какой инструмент сравнения используется &lt;a href=&quot;git-difftool&quot;&gt;git-difftool [1]&lt;/a&gt; . Эта переменная имеет приоритет над значением, &lt;code&gt;merge.tool&lt;/code&gt; в merge.tool . В списке ниже показаны действительные встроенные значения. Любое другое значение рассматривается как настраиваемый инструмент сравнения и требует определения соответствующей переменной difftool. &amp;lt;tool&amp;gt; .cmd.</target>
        </trans-unit>
        <trans-unit id="5cb013e070a3b4cddc50474dc321b1da7ea13759" translate="yes" xml:space="preserve">
          <source>Controls which merge tool is used by &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool[1]&lt;/a&gt; when the -g/--gui flag is specified. The list below shows the valid built-in values. Any other value is treated as a custom merge tool and requires that a corresponding mergetool.&amp;lt;guitool&amp;gt;.cmd variable is defined.</source>
          <target state="translated">Управляет тем, какой инструмент слияния используется &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool [1],&lt;/a&gt; если указан флаг -g / - gui. В списке ниже показаны действительные встроенные значения. Любое другое значение рассматривается как настраиваемый инструмент слияния и требует определения соответствующей переменной mergetool. &amp;lt;guitool&amp;gt; .cmd.</target>
        </trans-unit>
        <trans-unit id="18ee15c4e31cbcbd84b87172e325dafb065adff0" translate="yes" xml:space="preserve">
          <source>Controls which merge tool is used by &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool[1]&lt;/a&gt;. The list below shows the valid built-in values. Any other value is treated as a custom merge tool and requires that a corresponding mergetool.&amp;lt;tool&amp;gt;.cmd variable is defined.</source>
          <target state="translated">Управляет тем, какой инструмент слияния используется &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool [1]&lt;/a&gt; . В списке ниже показаны действительные встроенные значения. Любое другое значение рассматривается как настраиваемый инструмент слияния и требует определения соответствующей переменной mergetool. &amp;lt;tool&amp;gt; .cmd.</target>
        </trans-unit>
        <trans-unit id="474792f82dd9247329dbb1b3dcfbbed1c865f4c2" translate="yes" xml:space="preserve">
          <source>Controls which parts of the cover letter will be automatically populated using the branch&amp;rsquo;s description.</source>
          <target state="translated">Управляет тем, какие части сопроводительного письма будут автоматически заполняться с использованием описания ветки.</target>
        </trans-unit>
        <trans-unit id="c3102343a37aa52f6a069dc8bc5f12c9420d06d2" translate="yes" xml:space="preserve">
          <source>Conventions for public functions and macros</source>
          <target state="translated">Конвенции о государственных функциях и макросах</target>
        </trans-unit>
        <trans-unit id="24ce25558484789421068a0f3fdf9552add6eb44" translate="yes" xml:space="preserve">
          <source>Conversely, text files that Git does not detect can have normalization enabled manually.</source>
          <target state="translated">И наоборот,текстовые файлы,которые Git не обнаруживает,могут быть включены вручную.</target>
        </trans-unit>
        <trans-unit id="e49f6aaa8529aed7e4294b528b8e93971284c07e" translate="yes" xml:space="preserve">
          <source>Convert raw file data into a blob, for future use in a &lt;code&gt;commit&lt;/code&gt; command. This command is optional and is not needed to perform an import.</source>
          <target state="translated">Преобразуйте необработанные данные файла в большой двоичный объект для будущего использования в команде &lt;code&gt;commit&lt;/code&gt; . Эта команда является необязательной и не требуется для выполнения импорта.</target>
        </trans-unit>
        <trans-unit id="93865ee1f19358443956a81b8175d73f301958b3" translate="yes" xml:space="preserve">
          <source>Convert token &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; in the anonymized output. If &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; is omitted, map &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; to itself (i.e., do not anonymize it). See the section on &lt;code&gt;ANONYMIZING&lt;/code&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c15e3645b0a2e6438456f892ca0f7bb2ab425e" translate="yes" xml:space="preserve">
          <source>Convert underscores in tag and branch names to dots.</source>
          <target state="translated">Преобразование подчеркиваний в именах тегов и филиалов в точки.</target>
        </trans-unit>
        <trans-unit id="717ec262f5a03d7fab61894de5327ed8b2dce9d6" translate="yes" xml:space="preserve">
          <source>Copy a branch and the corresponding reflog.</source>
          <target state="translated">Скопируйте ветку и соответствующий рефлог.</target>
        </trans-unit>
        <trans-unit id="d010ed84eae444d5db43ea15cd0c22cd88feae0f" translate="yes" xml:space="preserve">
          <source>Copy files from the index to the working tree</source>
          <target state="translated">Скопировать файлы из индекса в рабочее дерево</target>
        </trans-unit>
        <trans-unit id="c76ee4ad9dd156a08ecfefcfcb1c22de051a4c57" translate="yes" xml:space="preserve">
          <source>Copy over the packed files from &quot;project lead&quot; public repository to your public repository, unless the &quot;project lead&quot; repository lives on the same machine as yours. In the latter case, you can use &lt;code&gt;objects/info/alternates&lt;/code&gt; file to point at the repository you are borrowing from.</source>
          <target state="translated">Скопируйте упакованные файлы из общедоступного репозитория &amp;laquo;ведущего проекта&amp;raquo; в свой общедоступный репозиторий, если только репозиторий &amp;laquo;ведущего проекта&amp;raquo; не находится на том же компьютере, что и ваш. В последнем случае вы можете использовать файл &lt;code&gt;objects/info/alternates&lt;/code&gt; , чтобы указать на репозиторий, из которого вы заимствуете.</target>
        </trans-unit>
        <trans-unit id="d8b3dca28c0ddf8873f77c43f29755622d908cce" translate="yes" xml:space="preserve">
          <source>Copy the Message-ID header at the end of the commit message. This is useful in order to associate commits with mailing list discussions.</source>
          <target state="translated">Скопируйте заголовок Message-ID в конце сообщения о фиксации.Это полезно для того,чтобы ассоциировать коммиты с обсуждениями в списке рассылки.</target>
        </trans-unit>
        <trans-unit id="5a3f70a82898c2a8456ad61672927bc441665238" translate="yes" xml:space="preserve">
          <source>Copy the modified files to a temporary location and perform a directory diff on them. This mode never prompts before launching the diff tool.</source>
          <target state="translated">Скопируйте измененные файлы во временное место и выполните для них дифференциал директорий.В этом режиме никогда не появляется подсказка перед запуском программы сравнения.</target>
        </trans-unit>
        <trans-unit id="c190e9af114c74dc1cae547f652783f706162e52" translate="yes" xml:space="preserve">
          <source>Copy the notes for the first object onto the second object (defaults to HEAD). Abort if the second object already has notes, or if the first object has none (use -f to overwrite existing notes to the second object). This subcommand is equivalent to: &lt;code&gt;git notes add [-f] -C $(git notes list &amp;lt;from-object&amp;gt;) &amp;lt;to-object&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Скопируйте примечания для первого объекта на второй объект (по умолчанию HEAD). Отменить, если у второго объекта уже есть заметки, или если у первого объекта их нет (используйте -f, чтобы перезаписать существующие заметки для второго объекта). Эта подкоманда эквивалентна: &lt;code&gt;git notes add [-f] -C $(git notes list &amp;lt;from-object&amp;gt;) &amp;lt;to-object&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f67d1ba5e94aaa446c4cd38a50c12bd9c63d60dc" translate="yes" xml:space="preserve">
          <source>Copying repositories</source>
          <target state="translated">Копирование репозиториев</target>
        </trans-unit>
        <trans-unit id="36e54cbb8f2eeebb702575f30e1a34b2297f308c" translate="yes" xml:space="preserve">
          <source>Core git executable to use. By default set to &lt;code&gt;$GIT_BINDIR/git&lt;/code&gt;, which in turn is by default set to &lt;code&gt;$(bindir)/git&lt;/code&gt;. If you use Git installed from a binary package, you should usually set this to &quot;/usr/bin/git&quot;. This can just be &quot;git&quot; if your web server has a sensible PATH; from security point of view it is better to use absolute path to git binary. If you have multiple Git versions installed it can be used to choose which one to use. Must be (correctly) set for gitweb to be able to work.</source>
          <target state="translated">Исполняемый файл ядра git для использования. По умолчанию установлено значение &lt;code&gt;$GIT_BINDIR/git&lt;/code&gt; , которое, в свою очередь, по умолчанию установлено в &lt;code&gt;$(bindir)/git&lt;/code&gt; . Если вы используете Git, установленный из двоичного пакета, вам обычно следует установить для него значение &amp;laquo;/ usr / bin / git&amp;raquo;. Это может быть просто &quot;git&quot;, если ваш веб-сервер имеет разумный PATH; с точки зрения безопасности лучше использовать абсолютный путь к двоичному файлу git. Если у вас установлено несколько версий Git, вы можете выбрать, какую из них использовать. Должен быть (правильно) установлен, чтобы gitweb мог работать.</target>
        </trans-unit>
        <trans-unit id="85a8806cd8d64571a9c2262e310bf038f08a1274" translate="yes" xml:space="preserve">
          <source>Count changes in a child directory for the parent directory as well. Note that when using &lt;code&gt;cumulative&lt;/code&gt;, the sum of the percentages reported may exceed 100%. The default (non-cumulative) behavior can be specified with the &lt;code&gt;noncumulative&lt;/code&gt; parameter.</source>
          <target state="translated">Подсчитайте изменения в дочернем каталоге и для родительского каталога. Обратите внимание, что при использовании &lt;code&gt;cumulative&lt;/code&gt; сумма сообщаемых процентов может превышать 100%. Поведение по умолчанию (не кумулятивное) можно указать с &lt;code&gt;noncumulative&lt;/code&gt; параметра некумулятивности .</target>
        </trans-unit>
        <trans-unit id="492f2e2be05a1aa8d8af437be99e7dacb8d4f9d0" translate="yes" xml:space="preserve">
          <source>Count unpacked number of objects and their disk consumption</source>
          <target state="translated">Подсчитать количество неупакованных объектов и их потребление на диске</target>
        </trans-unit>
        <trans-unit id="763b234fba543bb2523cf09d67150c10446b45b7" translate="yes" xml:space="preserve">
          <source>Countermand &lt;code&gt;commit.gpgSign&lt;/code&gt; configuration variable that is set to force each and every commit to be signed.</source>
          <target state="translated">&lt;code&gt;commit.gpgSign&lt;/code&gt; конфигурации Countermand commit.gpgSign, которая установлена ​​для принудительной подписи каждого коммита.</target>
        </trans-unit>
        <trans-unit id="6096cddc00ec928df60a796e3d4cfb0bb68acdbe" translate="yes" xml:space="preserve">
          <source>Counting the number of commits on a branch</source>
          <target state="translated">Подсчёт количества коммитов на ветке</target>
        </trans-unit>
        <trans-unit id="5c28a68396ec48f8ddfeca624f27118d20e2f2ea" translate="yes" xml:space="preserve">
          <source>Crash reports</source>
          <target state="translated">Сообщения об авариях</target>
        </trans-unit>
        <trans-unit id="97b6cc167e6a90cd26177184d37208b481756eef" translate="yes" xml:space="preserve">
          <source>Create &amp;lt;ref&amp;gt; with &amp;lt;newvalue&amp;gt; after verifying it does not exist. The given &amp;lt;newvalue&amp;gt; may not be zero.</source>
          <target state="translated">Создайте &amp;lt;ref&amp;gt; с &amp;lt;newvalue&amp;gt;, убедившись, что он не существует. Данное &amp;lt;новое значение&amp;gt; не может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="821a77e6f90a06fed7c0ea5afb5c7aa03a8e4a48" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; and checkout &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; into it. The new working directory is linked to the current repository, sharing everything except working directory specific files such as &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, etc. As a convenience, &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; may be a bare &quot;&lt;code&gt;-&lt;/code&gt;&quot;, which is synonymous with &lt;code&gt;@{-1}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3e6679c48a19f8a3804fc16c43252c9d4a1106" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; and checkout &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; into it. The new working directory is linked to the current repository, sharing everything except working directory specific files such as HEAD, index, etc. &lt;code&gt;-&lt;/code&gt; may also be specified as &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt;; it is synonymous with &lt;code&gt;@{-1}&lt;/code&gt;.</source>
          <target state="translated">Создайте &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; и отметьте в нем &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; . Новый рабочий каталог связан с текущим репозиторием, разделяя все, кроме файлов, специфичных для рабочего каталога, таких как HEAD, index и т. Д. &lt;code&gt;-&lt;/code&gt; также можно указать как &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; ; это синоним &lt;code&gt;@{-1}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="918c3c2a066586184896c329601a42f88338b5c6" translate="yes" xml:space="preserve">
          <source>Create a &quot;thin&quot; pack by omitting the common objects between a sender and a receiver in order to reduce network transfer. This option only makes sense in conjunction with --stdout.</source>
          <target state="translated">Создайте &quot;тонкий&quot; пакет,пропустив общие объекты между отправителем и получателем,чтобы уменьшить передачу по сети.Эта опция имеет смысл только в сочетании с --stdout.</target>
        </trans-unit>
        <trans-unit id="ec9cb277fe09464e753dba1a9c058b6a9566ff6f" translate="yes" xml:space="preserve">
          <source>Create a /path/to/my/codebase/.git directory.</source>
          <target state="translated">Создайте каталог /path/to/my/codebase/.git.</target>
        </trans-unit>
        <trans-unit id="c0a6d61d3fd0fcaf6c684be3f4ae17d7a1fadcb9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;shallow&lt;/code&gt; clone with a history truncated to the specified number of commits. Implies &lt;code&gt;--single-branch&lt;/code&gt; unless &lt;code&gt;--no-single-branch&lt;/code&gt; is given to fetch the histories near the tips of all branches. If you want to clone submodules shallowly, also pass &lt;code&gt;--shallow-submodules&lt;/code&gt;.</source>
          <target state="translated">Создайте &lt;code&gt;shallow&lt;/code&gt; клон с историей, усеченной до указанного количества коммитов. Подразумевает &lt;code&gt;--single-branch&lt;/code&gt; , если &lt;code&gt;--no-single-branch&lt;/code&gt; не задан для извлечения историй около концов всех ветвей. Если вы хотите неглубоко клонировать подмодули, также передайте &lt;code&gt;--shallow-submodules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efb2e81b939b9a77d43ecb93b07dc1f2ed7276af" translate="yes" xml:space="preserve">
          <source>Create a Zip archive that contains the contents of the latest commit on the current branch. Note that the output format is inferred by the extension of the output file.</source>
          <target state="translated">Создайте Zip-архив,содержащий содержимое последнего коммита в текущей ветке.Обратите внимание,что формат вывода выводится по расширению выходного файла.</target>
        </trans-unit>
        <trans-unit id="98ed6a63ab53ebc7b5cb53eddb5b05ee6e17c097" translate="yes" xml:space="preserve">
          <source>Create a bare repository to publish your changes to the public:</source>
          <target state="translated">Создайте &quot;голый&quot; репозиторий для публикации ваших изменений в общедоступном месте:</target>
        </trans-unit>
        <trans-unit id="8ecd6ae5a1546c899c5e4d339f3b41e08bfa5878" translate="yes" xml:space="preserve">
          <source>Create a bare repository. If &lt;code&gt;GIT_DIR&lt;/code&gt; environment is not set, it is set to the current working directory.</source>
          <target state="translated">Создайте пустой репозиторий. Если среда &lt;code&gt;GIT_DIR&lt;/code&gt; не установлена, она устанавливается в текущий рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="8d2657b83c3c9eabb4154adbe14301af394e1de8" translate="yes" xml:space="preserve">
          <source>Create a branch in the SVN repository.</source>
          <target state="translated">Создайте ветку в репозитории SVN.</target>
        </trans-unit>
        <trans-unit id="9535ca3b3bba3d55a9a78d2e5a327a9df5b9b7ac" translate="yes" xml:space="preserve">
          <source>Create a compressed tarball for v1.4.0 release, but without a global extended pax header.</source>
          <target state="translated">Создайте сжатый тарбол для релиза v1.4.0,но без глобального расширенного заголовка пакета.</target>
        </trans-unit>
        <trans-unit id="b5319dfc6eb9dc4a079ba2789cc4bdb586f57276" translate="yes" xml:space="preserve">
          <source>Create a compressed tarball for v1.4.0 release.</source>
          <target state="translated">Создайте сжатый тарбол для релиза v1.4.0.</target>
        </trans-unit>
        <trans-unit id="faa66e3a606f56a97105d3be717d6c143b22dab2" translate="yes" xml:space="preserve">
          <source>Create a graft commit. A new commit is created with the same content as &amp;lt;commit&amp;gt; except that its parents will be [&amp;lt;parent&amp;gt;&amp;hellip;​] instead of &amp;lt;commit&amp;gt;'s parents. A replacement ref is then created to replace &amp;lt;commit&amp;gt; with the newly created commit. Use &lt;code&gt;--convert-graft-file&lt;/code&gt; to convert a &lt;code&gt;$GIT_DIR/info/grafts&lt;/code&gt; file and use replace refs instead.</source>
          <target state="translated">Создайте фиксацию прививки. Создается новый коммит с тем же содержанием, что и &amp;lt;commit&amp;gt;, за исключением того, что его родителями будут [&amp;lt;parent&amp;gt;&amp;hellip;] вместо родителей &amp;lt;commit&amp;gt;. Затем создается замещающая ссылка для замены &amp;lt;commit&amp;gt; вновь созданной фиксацией. Используйте &lt;code&gt;--convert-graft-file&lt;/code&gt; , чтобы преобразовать файл &lt;code&gt;$GIT_DIR/info/grafts&lt;/code&gt; и вместо этого используйте replace refs.</target>
        </trans-unit>
        <trans-unit id="571580d25d73e20010dd7b861b6579499c2d2548" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;orphan&lt;/code&gt; branch, named &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt;. All tracked files are removed.</source>
          <target state="translated">Создайте новую &lt;code&gt;orphan&lt;/code&gt; ветку с именем &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; . Все отслеживаемые файлы удаляются.</target>
        </trans-unit>
        <trans-unit id="4e15c57fd9f8556efdaf616337a8d6e6219013e8" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;orphan&lt;/code&gt; branch, named &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt;, started from &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; and switch to it. The first commit made on this new branch will have no parents and it will be the root of a new history totally disconnected from all the other branches and commits.</source>
          <target state="translated">Создайте новую &lt;code&gt;orphan&lt;/code&gt; ветку с именем &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; , начатую с &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; , и переключитесь на нее. Первая фиксация, сделанная в этой новой ветке, не будет иметь родителей, и она будет корнем новой истории, полностью отключенной от всех других веток и коммитов.</target>
        </trans-unit>
        <trans-unit id="74397bf89a3d7366727db29fa6dec88cf03174e1" translate="yes" xml:space="preserve">
          <source>Create a new Git repository from an existing p4 repository using &lt;code&gt;git p4 clone&lt;/code&gt;, giving it one or more p4 depot paths. Incorporate new commits from p4 changes with &lt;code&gt;git p4 sync&lt;/code&gt;. The &lt;code&gt;sync&lt;/code&gt; command is also used to include new branches from other p4 depot paths. Submit Git changes back to p4 using &lt;code&gt;git p4 submit&lt;/code&gt;. The command &lt;code&gt;git p4 rebase&lt;/code&gt; does a sync plus rebases the current branch onto the updated p4 remote branch.</source>
          <target state="translated">Создайте новый репозиторий Git из существующего репозитория p4 с помощью &lt;code&gt;git p4 clone&lt;/code&gt; , задав ему один или несколько путей депо p4. Включение новых коммитов из изменений p4 с помощью &lt;code&gt;git p4 sync&lt;/code&gt; . Команда &lt;code&gt;sync&lt;/code&gt; также используется для включения новых веток из других путей депо p4. Отправьте изменения Git обратно на p4 с помощью &lt;code&gt;git p4 submit&lt;/code&gt; . Команда &lt;code&gt;git p4 rebase&lt;/code&gt; выполняет синхронизацию и перемещает текущую ветку на обновленную удаленную ветку p4.</target>
        </trans-unit>
        <trans-unit id="32283e2eb1bd521d20f1290e2eaa64ee550622d7" translate="yes" xml:space="preserve">
          <source>Create a new branch head pointing to one of these versions and check it out using &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt;:</source>
          <target state="translated">Создайте новую ветку, указывающую на одну из этих версий, и проверьте ее с помощью &lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4de51286c04f5ea0c9795b4b604e6322cb3596eb" translate="yes" xml:space="preserve">
          <source>Create a new branch named &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; starting at &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt; before switching to the branch. This is a convenient shortcut for:</source>
          <target state="translated">Перед переключением на ветвь создайте новую ветку с именем &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; начиная с &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt; . Это удобный ярлык для:</target>
        </trans-unit>
        <trans-unit id="adb753b3b1e8742e8dfb04c8a3bbb9df0384a74c" translate="yes" xml:space="preserve">
          <source>Create a new branch named &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; and start it at &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt;; see &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Создайте новую ветку с именем &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; и запустите ее с &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; ; подробности см. в &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f67db00a28beeae8e81324408bce6703c7ea6026" translate="yes" xml:space="preserve">
          <source>Create a new commit containing the current contents of the index and the given log message describing the changes. The new commit is a direct child of HEAD, usually the tip of the current branch, and the branch is updated to point to it (unless no branch is associated with the working tree, in which case HEAD is &quot;detached&quot; as described in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;).</source>
          <target state="translated">Создайте новую фиксацию, содержащую текущее содержимое индекса и данное сообщение журнала, описывающее изменения. Новая фиксация является прямым потомком HEAD, обычно вершиной текущей ветки, и ветка обновляется так, чтобы указывать на нее (если с рабочим деревом не связана ни одна ветка, в этом случае HEAD &amp;laquo;отсоединяется&amp;raquo;, как описано в &lt;a href=&quot;git-checkout&quot;&gt;git -каут [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="775d2ff1f35d4b43a574ee93495db02f2d8cbc5e" translate="yes" xml:space="preserve">
          <source>Create a new commit object</source>
          <target state="translated">Создать новый объект коммита</target>
        </trans-unit>
        <trans-unit id="ed82c0a774a3c01694b195d2170f6d11389fd2c2" translate="yes" xml:space="preserve">
          <source>Create a new location. See the notes below for details on how to choose the right protocol.</source>
          <target state="translated">Создать новое место.См.примечания ниже для получения подробной информации о том,как выбрать правильный протокол.</target>
        </trans-unit>
        <trans-unit id="6b44ae75f523438b3f2cff76c3ac2f27de583720" translate="yes" xml:space="preserve">
          <source>Create a new pack-file containing objects in small pack-files referenced by the multi-pack-index. If the size given by the &lt;code&gt;--batch-size=&amp;lt;size&amp;gt;&lt;/code&gt; argument is zero, then create a pack containing all objects referenced by the multi-pack-index. For a non-zero batch size, Select the pack-files by examining packs from oldest-to-newest, computing the &quot;expected size&quot; by counting the number of objects in the pack referenced by the multi-pack-index, then divide by the total number of objects in the pack and multiply by the pack size. We select packs with expected size below the batch size until the set of packs have total expected size at least the batch size, or all pack-files are considered. If only one pack-file is selected, then do nothing. If a new pack-file is created, rewrite the multi-pack-index to reference the new pack-file. A later run of &lt;code&gt;git multi-pack-index expire&lt;/code&gt; will delete the pack-files that were part of this batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8524608a0d692976af91ac05836567c4a22e40c7" translate="yes" xml:space="preserve">
          <source>Create a new pack-file containing objects in small pack-files referenced by the multi-pack-index. If the size given by the &lt;code&gt;--batch-size=&amp;lt;size&amp;gt;&lt;/code&gt; argument is zero, then create a pack containing all objects referenced by the multi-pack-index. For a non-zero batch size, Select the pack-files by examining packs from oldest-to-newest, computing the &quot;expected size&quot; by counting the number of objects in the pack referenced by the multi-pack-index, then divide by the total number of objects in the pack and multiply by the pack size. We select packs with expected size below the batch size until the set of packs have total expected size at least the batch size. If the total size does not reach the batch size, then do nothing. If a new pack- file is created, rewrite the multi-pack-index to reference the new pack-file. A later run of &lt;code&gt;git multi-pack-index expire&lt;/code&gt; will delete the pack-files that were part of this batch.</source>
          <target state="translated">Создайте новый пакет-файл, содержащий объекты в небольших пакетных файлах, на которые ссылается multi-pack-index. Если размер задан параметром &lt;code&gt;--batch-size=&amp;lt;size&amp;gt;&lt;/code&gt; аргумент равен нулю, затем создайте пакет, содержащий все объекты, на которые ссылается multi-pack-index. Для ненулевого размера пакета выберите файлы пакета, изучив пакеты от самых старых до самых новых, вычислив &amp;laquo;ожидаемый размер&amp;raquo; путем подсчета количества объектов в пакете, на которые ссылается индекс multi-pack, затем разделите на общее количество предметов в упаковке и умножьте на размер упаковки. Мы выбираем пакеты с ожидаемым размером ниже размера партии до тех пор, пока общий ожидаемый размер набора пакетов не будет не меньше размера партии. Если общий размер не достигает размера партии, ничего не предпринимайте. Если создается новый pack-файл, перепишите multi-pack-index, чтобы он ссылался на новый pack-файл. При более позднем запуске &lt;code&gt;git multi-pack-index expire&lt;/code&gt; будут удалены файлы пакетов, которые были частью этого пакета.</target>
        </trans-unit>
        <trans-unit id="9c41169f0fcbee00370950fd445a3c201d3fc72d" translate="yes" xml:space="preserve">
          <source>Create a packed archive of objects</source>
          <target state="translated">Создать упакованный архив объектов</target>
        </trans-unit>
        <trans-unit id="aeccdf3a7f8e818b38876ba10e91ea37e1459401" translate="yes" xml:space="preserve">
          <source>Create a placeholder file in the local Git repository for each empty directory fetched from Subversion. This includes directories that become empty by removing all entries in the Subversion repository (but not the directory itself). The placeholder files are also tracked and removed when no longer necessary.</source>
          <target state="translated">Создавайте файл-плацдарм в локальном Git-репозитории для каждого пустого каталога,полученного из Subversion.Сюда входят каталоги,которые становятся пустыми,удаляя все записи в репозитории Subversion (но не сам каталог).Файлы-плацдармов также отслеживаются и удаляются,когда в них больше нет необходимости.</target>
        </trans-unit>
        <trans-unit id="b0b2f30f73f128bf11ff805dcea18e4929006e9b" translate="yes" xml:space="preserve">
          <source>Create a reflog for the tag. To globally enable reflogs for tags, see &lt;code&gt;core.logAllRefUpdates&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;. The negated form &lt;code&gt;--no-create-reflog&lt;/code&gt; only overrides an earlier &lt;code&gt;--create-reflog&lt;/code&gt;, but currently does not negate the setting of &lt;code&gt;core.logAllRefUpdates&lt;/code&gt;.</source>
          <target state="translated">Создайте рефлог для тега. Чтобы глобально включить рефлоги для тегов, см. &lt;code&gt;core.logAllRefUpdates&lt;/code&gt; в &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; . Отрицательная форма &lt;code&gt;--no-create-reflog&lt;/code&gt; только переопределяет более раннюю &lt;code&gt;--create-reflog&lt;/code&gt; , но в настоящее время не отменяет настройку &lt;code&gt;core.logAllRefUpdates&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c95e8dd01a1c19533d3be2260c095f09f00ed3d" translate="yes" xml:space="preserve">
          <source>Create a shallow clone with a history after the specified time.</source>
          <target state="translated">Создайте неглубокий клон с историей после указанного времени.</target>
        </trans-unit>
        <trans-unit id="81a994e450296531fc46153834310318c564b7aa" translate="yes" xml:space="preserve">
          <source>Create a shallow clone with a history, excluding commits reachable from a specified remote branch or tag. This option can be specified multiple times.</source>
          <target state="translated">Создайте неглубокий клон с историей,исключая коммиты,доступные из указанной удаленной ветки или тега.Эта опция может быть указана несколько раз.</target>
        </trans-unit>
        <trans-unit id="543a21269e742ae7ebc9058bf397ba34f632562d" translate="yes" xml:space="preserve">
          <source>Create a stash entry (which is a regular commit object) and return its object name, without storing it anywhere in the ref namespace. This is intended to be useful for scripts. It is probably not the command you want to use; see &quot;push&quot; above.</source>
          <target state="translated">Создайте засекреченную запись (которая является обычным объектом коммита)и верните ему имя объекта,не сохраняя его нигде в пространстве имён.Это предназначено для использования в скриптах.Скорее всего,это не та команда,которую вы хотите использовать;смотрите &quot;push&quot; выше.</target>
        </trans-unit>
        <trans-unit id="b36a0ee3d907a9108a54a206fff8047195a2242d" translate="yes" xml:space="preserve">
          <source>Create a tag by using the tags_subdir instead of the branches_subdir specified during git svn init.</source>
          <target state="translated">Создайте тег,используя tags_subdir вместо branches_subdir,заданного при git svn init.</target>
        </trans-unit>
        <trans-unit id="d1e89b6bf885576f5776e13a6adbdccbb0c64b51" translate="yes" xml:space="preserve">
          <source>Create a tag in the SVN repository. This is a shorthand for &lt;code&gt;branch -t&lt;/code&gt;.</source>
          <target state="translated">Создайте тег в репозитории SVN. Это сокращение от &lt;code&gt;branch -t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f83eaaff0df7b915922dc3a5427d0b2485d874b0" translate="yes" xml:space="preserve">
          <source>Create a tar archive that contains the contents of the latest commit on the current branch, and extract it in the &lt;code&gt;/var/tmp/junk&lt;/code&gt; directory.</source>
          <target state="translated">Создайте tar-архив, содержащий содержимое последней фиксации в текущей ветке, и извлеките его в каталог &lt;code&gt;/var/tmp/junk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79432159892c99c66a4b92db80f46b317928f9e7" translate="yes" xml:space="preserve">
          <source>Create a topic branch and develop.</source>
          <target state="translated">Создайте тематическую ветку и развивайте.</target>
        </trans-unit>
        <trans-unit id="3c6e23e4bafb619b381ac21bdc202b4da275dceb" translate="yes" xml:space="preserve">
          <source>Create a tree object from the current index</source>
          <target state="translated">Создать древовидный объект из текущего индекса</target>
        </trans-unit>
        <trans-unit id="199cc87a17f205a9debb1daf10f2cfd04f927e64" translate="yes" xml:space="preserve">
          <source>Create an archive of files from a named tree</source>
          <target state="translated">Создать архив файлов из именованного дерева</target>
        </trans-unit>
        <trans-unit id="11842098ab38c4b23c00972df92c03d934dd00f4" translate="yes" xml:space="preserve">
          <source>Create an empty Git repository or reinitialize an existing one</source>
          <target state="translated">Создайте пустой Git-репозиторий или повторно инициализируйте существующий.</target>
        </trans-unit>
        <trans-unit id="4bf9b028076fc8c72d20bdece3ec7191ce92cd0a" translate="yes" xml:space="preserve">
          <source>Create and switch to a new branch at the same time:</source>
          <target state="translated">Создайте и переключитесь на новую ветку одновременно:</target>
        </trans-unit>
        <trans-unit id="e2fd9501d48be0c26b22e7150b7353eff7148f41" translate="yes" xml:space="preserve">
          <source>Create multipart/mixed attachment, the first part of which is the commit message and the patch itself in the second part, with &lt;code&gt;Content-Disposition: attachment&lt;/code&gt;.</source>
          <target state="translated">Создайте составное / смешанное вложение, первая часть которого - это сообщение фиксации, а сам патч - во второй части, с &lt;code&gt;Content-Disposition: attachment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09cc7488a79d34bbf5d70e088375c60a2a44d3fc" translate="yes" xml:space="preserve">
          <source>Create multipart/mixed attachment, the first part of which is the commit message and the patch itself in the second part, with &lt;code&gt;Content-Disposition: inline&lt;/code&gt;.</source>
          <target state="translated">Создайте составное / смешанное вложение, первая часть которого - это сообщение фиксации, а сам патч - во второй части с &lt;code&gt;Content-Disposition: inline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fbaabd2de6436a9809de570bfef7e43943388cb" translate="yes" xml:space="preserve">
          <source>Create or update a branch with a new commit, recording one logical change to the project.</source>
          <target state="translated">Создать или обновить ветку с новым коммитом,записав в проект одно логическое изменение.</target>
        </trans-unit>
        <trans-unit id="b926e4f1bd2c9ddbabaf20296d6e0bdae2102d0d" translate="yes" xml:space="preserve">
          <source>Create parent folders. This parameter is equivalent to the parameter --parents on svn cp commands and is useful for non-standard repository layouts.</source>
          <target state="translated">Создайте родительские папки.Этот параметр эквивалентен параметру --parents на командах svn cp и полезен для нестандартной компоновки хранилища.</target>
        </trans-unit>
        <trans-unit id="008d223ce25dddb7eb7d24c361668074bbed6dad" translate="yes" xml:space="preserve">
          <source>Create the branch &lt;code&gt;experimental&lt;/code&gt; in the &lt;code&gt;origin&lt;/code&gt; repository by copying the current &lt;code&gt;master&lt;/code&gt; branch. This form is only needed to create a new branch or tag in the remote repository when the local name and the remote name are different; otherwise, the ref name on its own will work.</source>
          <target state="translated">Создайте &lt;code&gt;experimental&lt;/code&gt; ветвь в &lt;code&gt;origin&lt;/code&gt; репозитории, скопировав текущую &lt;code&gt;master&lt;/code&gt; ветвь. Эта форма нужна только для создания новой ветки или тега в удаленном репозитории, когда локальное имя и удаленное имя отличаются; в противном случае имя ссылки будет работать само по себе.</target>
        </trans-unit>
        <trans-unit id="157f2dfeff99612ce2fdbdc6f8123dc09aa74a0b" translate="yes" xml:space="preserve">
          <source>Create the branch&amp;rsquo;s reflog. This activates recording of all changes made to the branch ref, enabling use of date based sha1 expressions such as &quot;&amp;lt;branchname&amp;gt;@{yesterday}&quot;. Note that in non-bare repositories, reflogs are usually enabled by default by the &lt;code&gt;core.logAllRefUpdates&lt;/code&gt; config option. The negated form &lt;code&gt;--no-create-reflog&lt;/code&gt; only overrides an earlier &lt;code&gt;--create-reflog&lt;/code&gt;, but currently does not negate the setting of &lt;code&gt;core.logAllRefUpdates&lt;/code&gt;.</source>
          <target state="translated">Создайте рефлог ветки. Это активирует запись всех изменений, внесенных в ссылку ветки, что позволяет использовать выражения sha1 на основе даты, такие как &amp;laquo;&amp;lt;имя-ветви&amp;gt; @ {вчера}&amp;raquo;. Обратите внимание, что в репозиториях без оболочки рефлоги обычно включены по умолчанию с помощью &lt;code&gt;core.logAllRefUpdates&lt;/code&gt; конфигурации core.logAllRefUpdates . Отрицательная форма &lt;code&gt;--no-create-reflog&lt;/code&gt; только переопределяет более раннюю &lt;code&gt;--create-reflog&lt;/code&gt; , но в настоящее время не отменяет настройку &lt;code&gt;core.logAllRefUpdates&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e2b0a6de869fa2e1ebef49223a669515c01db9f" translate="yes" xml:space="preserve">
          <source>Create the new branch&amp;rsquo;s reflog; see &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Создайте рефлог новой ветки; подробности см. в &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="770931923d2f84baa80a7c6281d4bb0c7e7ff5dc" translate="yes" xml:space="preserve">
          <source>Create, list, delete or verify a tag object signed with GPG</source>
          <target state="translated">Создать,составить список,удалить или проверить объект метки,подписанный GPG.</target>
        </trans-unit>
        <trans-unit id="884d013fa41e619bec3679b144edae3781c7f0c5" translate="yes" xml:space="preserve">
          <source>Create, list, delete refs to replace objects</source>
          <target state="translated">Создать,составить список,удалить ссылки для замены объектов.</target>
        </trans-unit>
        <trans-unit id="b126e5a5d6c912b3969ba9d70dcd92e7124db848" translate="yes" xml:space="preserve">
          <source>Creates (or recreates) the named branch, optionally starting from a specific revision. The reset command allows a frontend to issue a new &lt;code&gt;from&lt;/code&gt; command for an existing branch, or to create a new branch from an existing commit without creating a new commit.</source>
          <target state="translated">Создает (или воссоздает) названную ветку, необязательно начиная с определенной ревизии. Команда сброса позволяет веб-интерфейсу выдать новую команду &lt;code&gt;from&lt;/code&gt; для существующей ветки или создать новую ветку из существующей фиксации без создания новой фиксации.</target>
        </trans-unit>
        <trans-unit id="999e99d0bbec6ceb96391dfde9cf6cc8fcd81661" translate="yes" xml:space="preserve">
          <source>Creates a file holding the contents of the blob specified by sha1. It returns the name of the temporary file in the following format: .merge_file_XXXXX</source>
          <target state="translated">Создает файл,в котором хранится содержимое блока,указанного sha1.Возвращает имя временного файла в следующем формате:.merge_file_XXXXX</target>
        </trans-unit>
        <trans-unit id="09d3cd201fc386ccac2ad9f5c22bafbf8bdbb2f4" translate="yes" xml:space="preserve">
          <source>Creates a local branch, &lt;code&gt;master&lt;/code&gt; from this remote and checks it out.</source>
          <target state="translated">Создает локальную ветку &lt;code&gt;master&lt;/code&gt; с этого пульта и проверяет ее.</target>
        </trans-unit>
        <trans-unit id="7f64654581811c2b404b1b8dce4e1e1130a9678f" translate="yes" xml:space="preserve">
          <source>Creates a new branch or updates an existing branch by creating a new commit and updating the branch to point at the newly created commit.</source>
          <target state="translated">Создает новое ответвление или обновляет существующее,создавая новый коммит и обновляя ответвление,чтобы указать на вновь созданный коммит.</target>
        </trans-unit>
        <trans-unit id="1d59a731f68874f36286c257dc8063d7c2d003c5" translate="yes" xml:space="preserve">
          <source>Creates a new commit object based on the provided tree object and emits the new commit object id on stdout. The log message is read from the standard input, unless &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt; options are given.</source>
          <target state="translated">Создает новый объект фиксации на основе предоставленного объекта дерева и передает новый идентификатор объекта фиксации на стандартный вывод. Сообщение журнала читается со стандартного ввода, если не указаны параметры &lt;code&gt;-m&lt;/code&gt; или &lt;code&gt;-F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47450bdc6c156b7e9d8dff8eb5153c36f0034363" translate="yes" xml:space="preserve">
          <source>Creates a tag object</source>
          <target state="translated">Создает объект тега</target>
        </trans-unit>
        <trans-unit id="befea765dea04bdbe90515b52ec037d05fcd654f" translate="yes" xml:space="preserve">
          <source>Creates a temporary file with a blob&amp;rsquo;s contents</source>
          <target state="translated">Создает временный файл с содержимым большого двоичного объекта</target>
        </trans-unit>
        <trans-unit id="352027cd4f1050e7a8d58f4759fd4887117240f0" translate="yes" xml:space="preserve">
          <source>Creates a tree object using the current index. The name of the new tree object is printed to standard output.</source>
          <target state="translated">Создает древовидный объект по текущему индексу.Имя нового объекта дерева выводится на стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="7652dba54710524ad06e288b0394d9ec8f781534" translate="yes" xml:space="preserve">
          <source>Creates an annotated tag object from an existing commit or branch. Lightweight tags are not supported by this command, as they are not recommended for recording meaningful points in time.</source>
          <target state="translated">Создает аннотированный объект-тег из существующего коммита или ветки.Легковесные теги не поддерживаются этой командой,так как они не рекомендуются для записи значимых моментов во времени.</target>
        </trans-unit>
        <trans-unit id="94955619715d4d7ab1e29b4a0777170b742991c7" translate="yes" xml:space="preserve">
          <source>Creates an annotated tag referring to a specific commit. To create lightweight (non-annotated) tags see the &lt;code&gt;reset&lt;/code&gt; command below.</source>
          <target state="translated">Создает аннотированный тег, относящийся к определенной фиксации. Чтобы создать легкие (не аннотированные) теги, см. &lt;code&gt;reset&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="1c5caa9b586b6725b423618f01dee45981d01339" translate="yes" xml:space="preserve">
          <source>Creates an archive of the specified format containing the tree structure for the named tree, and writes it out to the standard output. If &amp;lt;prefix&amp;gt; is specified it is prepended to the filenames in the archive.</source>
          <target state="translated">Создает архив указанного формата, содержащий древовидную структуру для именованного дерева, и выводит его на стандартный вывод. Если указан &amp;lt;префикс&amp;gt;, он добавляется к именам файлов в архиве.</target>
        </trans-unit>
        <trans-unit id="902be57432c35cdc5fd0ebc974090ec5fe10886f" translate="yes" xml:space="preserve">
          <source>Creates an empty Git repository in a subdirectory called &lt;code&gt;project&lt;/code&gt;.</source>
          <target state="translated">Создает пустой репозиторий Git в подкаталоге с именем &lt;code&gt;project&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5bd8f97656dc6346e6c11ca45adb1cb8cf3739a" translate="yes" xml:space="preserve">
          <source>Creates and checks out a new branch named &lt;code&gt;&amp;lt;branchname&amp;gt;&lt;/code&gt; starting from the commit at which the &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; was originally created, applies the changes recorded in &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; to the new working tree and index. If that succeeds, and &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is a reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;, it then drops the &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbbe8fe0fb510b54456d0e5f7552d0ff50cdb17" translate="yes" xml:space="preserve">
          <source>Creates and checks out a new branch named &lt;code&gt;&amp;lt;branchname&amp;gt;&lt;/code&gt; starting from the commit at which the &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; was originally created, applies the changes recorded in &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; to the new working tree and index. If that succeeds, and &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is a reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;, it then drops the &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt;. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, applies the latest one.</source>
          <target state="translated">Создает и &lt;code&gt;&amp;lt;branchname&amp;gt;&lt;/code&gt; новую ветку с именем &amp;lt;branchname&amp;gt;, начиная с фиксации, в которой был первоначально создан &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; , применяет изменения, записанные в &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; , к новому рабочему дереву и индексу. Если это удается и &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; является ссылкой в ​​форме &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; , он затем отбрасывает &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; . Если &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; не задан, применяется последний.</target>
        </trans-unit>
        <trans-unit id="817de4fcd985997655ed18eb9db24df013f605f3" translate="yes" xml:space="preserve">
          <source>Creates graft commits for all entries in &lt;code&gt;$GIT_DIR/info/grafts&lt;/code&gt; and deletes that file upon success. The purpose is to help users with transitioning off of the now-deprecated graft file.</source>
          <target state="translated">Создает фиксации graft для всех записей в &lt;code&gt;$GIT_DIR/info/grafts&lt;/code&gt; и удаляет этот файл в случае успеха. Цель состоит в том, чтобы помочь пользователям отказаться от уже устаревшего графт-файла.</target>
        </trans-unit>
        <trans-unit id="dffa1bc89fe4773c581e2bab0e59b1fe8148dfd2" translate="yes" xml:space="preserve">
          <source>Creates the branch &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; and start it at &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt;; if it already exists, then reset it to &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt;. This is equivalent to running &quot;git branch&quot; with &quot;-f&quot;; see &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Создает ветку &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; и запускает ее в &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; ; если он уже существует, то сбросьте его до &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; . Это эквивалентно запуску &amp;laquo;git branch&amp;raquo; с &amp;laquo;-f&amp;raquo;; подробности см. в &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="051c90bf7349afef9519ebfd754be98e47ed9dee" translate="yes" xml:space="preserve">
          <source>Creating a branch in such a configuration requires disambiguating which location to use using the -d or --destination flag:</source>
          <target state="translated">Создание ветки в такой конфигурации требует дезактивации,какое место использовать,с помощью флага -d или --destination:</target>
        </trans-unit>
        <trans-unit id="e6bedfd34ce489d63a7de42dd785dfdc0700c1e9" translate="yes" xml:space="preserve">
          <source>Creating a changelog and tarball for a software release</source>
          <target state="translated">Создание журнала изменений и тарбола для выпуска программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="c40a17b4008177323999b06c207c30d124e6c258" translate="yes" xml:space="preserve">
          <source>Creating a git repository</source>
          <target state="translated">Создание git-репозитория</target>
        </trans-unit>
        <trans-unit id="040db03d97cbb631e8d9e6687acd4b2ef2582aa9" translate="yes" xml:space="preserve">
          <source>Creating a new Git repository couldn&amp;rsquo;t be easier: all Git repositories start out empty, and the only thing you need to do is find yourself a subdirectory that you want to use as a working tree - either an empty one for a totally new project, or an existing working tree that you want to import into Git.</source>
          <target state="translated">Создать новый репозиторий Git очень просто: все репозитории Git начинаются пустыми, и единственное, что вам нужно сделать, это найти подкаталог, который вы хотите использовать в качестве рабочего дерева - либо пустой для совершенно нового проекта. или существующее рабочее дерево, которое вы хотите импортировать в Git.</target>
        </trans-unit>
        <trans-unit id="00e49b6089f98df76d1261d9c963ee126709d119" translate="yes" xml:space="preserve">
          <source>Creating a new branch</source>
          <target state="translated">Создание нового филиала</target>
        </trans-unit>
        <trans-unit id="c39cd6567c9d07f33e0b16412b2e647902776ceb" translate="yes" xml:space="preserve">
          <source>Creating a new commit takes three steps:</source>
          <target state="translated">Создание нового обязательства состоит из трех шагов:</target>
        </trans-unit>
        <trans-unit id="8ab78a3735f73dea4916eb1431c8608a2d083ad2" translate="yes" xml:space="preserve">
          <source>Creating a new commit that reverts an earlier change is very easy; just pass the &lt;a href=&quot;git-revert&quot;&gt;git-revert[1]&lt;/a&gt; command a reference to the bad commit; for example, to revert the most recent commit:</source>
          <target state="translated">Создать новую фиксацию, которая отменяет более раннее изменение, очень просто; просто передайте команде &lt;a href=&quot;git-revert&quot;&gt;git-revert [1]&lt;/a&gt; ссылку на плохую фиксацию; например, чтобы отменить самую последнюю фиксацию:</target>
        </trans-unit>
        <trans-unit id="324b268505a0bd944ee2d5d30c8a3d50fc28d90f" translate="yes" xml:space="preserve">
          <source>Creating a new repository</source>
          <target state="translated">Создание нового репозитория</target>
        </trans-unit>
        <trans-unit id="36dbdbb03a117f7df33bdb409d5809a8b5ea5e6e" translate="yes" xml:space="preserve">
          <source>Creating a new repository from scratch is very easy:</source>
          <target state="translated">Создать новый репозиторий с нуля очень просто:</target>
        </trans-unit>
        <trans-unit id="88eec46a3edc17fddca4fd44d28bb64f8780df72" translate="yes" xml:space="preserve">
          <source>Creating a tree object is trivial, and is done with &lt;code&gt;git write-tree&lt;/code&gt;. There are no options or other input: &lt;code&gt;git write-tree&lt;/code&gt; will take the current index state, and write an object that describes that whole index. In other words, we&amp;rsquo;re now tying together all the different filenames with their contents (and their permissions), and we&amp;rsquo;re creating the equivalent of a Git &quot;directory&quot; object:</source>
          <target state="translated">Создание объекта дерева тривиально и выполняется с помощью &lt;code&gt;git write-tree&lt;/code&gt; . Нет никаких опций или другого ввода: &lt;code&gt;git write-tree&lt;/code&gt; возьмет текущее состояние индекса и напишет объект, который описывает весь этот индекс. Другими словами, теперь мы связываем вместе все разные имена файлов с их содержимым (и их разрешениями), и мы создаем эквивалент объекта &amp;laquo;каталога&amp;raquo; Git:</target>
        </trans-unit>
        <trans-unit id="719e91bca781d7da4469d32275de7f00e97366b0" translate="yes" xml:space="preserve">
          <source>Creating an archive</source>
          <target state="translated">Создание архива</target>
        </trans-unit>
        <trans-unit id="57d940de5ca0935e018fd03ec556851a3258029c" translate="yes" xml:space="preserve">
          <source>Creating good commit messages</source>
          <target state="translated">Создание хороших сообщений о коммитете</target>
        </trans-unit>
        <trans-unit id="d793460efe87481af6fc2a69bf4007ae5b376697" translate="yes" xml:space="preserve">
          <source>Creating replacement objects</source>
          <target state="translated">Создание объектов для замены</target>
        </trans-unit>
        <trans-unit id="ab3dc2ecc52838a3e77a21918b25403d09705634" translate="yes" xml:space="preserve">
          <source>Creating tags</source>
          <target state="translated">Создание тегов</target>
        </trans-unit>
        <trans-unit id="b0acbd1aa53ddfa814233d47e25a83dac45b77c7" translate="yes" xml:space="preserve">
          <source>Creating the commit using the content you told Git about in step 2.</source>
          <target state="translated">Создание коммита с использованием содержимого,о котором вы рассказали Git'у в шаге 2.</target>
        </trans-unit>
        <trans-unit id="4d969b5791f8a038b7f947a6c2bb33127dd04018" translate="yes" xml:space="preserve">
          <source>Creating the perfect patch series</source>
          <target state="translated">Создание идеальной серии патчей</target>
        </trans-unit>
        <trans-unit id="a2955539fd234d4e940b20d8a9e91ef656e850f2" translate="yes" xml:space="preserve">
          <source>Creating, deleting, and modifying branches is quick and easy; here&amp;rsquo;s a summary of the commands:</source>
          <target state="translated">Создание, удаление и изменение веток выполняется быстро и легко; вот краткое изложение команд:</target>
        </trans-unit>
        <trans-unit id="3c7835c41262e0651be74f2c3160cc75a963df48" translate="yes" xml:space="preserve">
          <source>Credential contexts</source>
          <target state="translated">Основные условия</target>
        </trans-unit>
        <trans-unit id="e937ff4d2bc216cfc4de72aa94ecda9f1b6485b0" translate="yes" xml:space="preserve">
          <source>Credential helpers are programs executed by Git to fetch or save credentials from and to long-term storage (where &quot;long-term&quot; is simply longer than a single Git process; e.g., credentials may be stored in-memory for a few minutes, or indefinitely on disk).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458543c678ae3dd16b97b21c03b00e9eaaddd45b" translate="yes" xml:space="preserve">
          <source>Credential helpers to cache or store passwords, or to interact with a system password wallet or keychain.</source>
          <target state="translated">Помощники для кэширования или хранения паролей,а также для взаимодействия с системным кошельком с паролями или связкой ключей.</target>
        </trans-unit>
        <trans-unit id="2fe8ef32f03f0033712fed8d5429cd4799dc6471" translate="yes" xml:space="preserve">
          <source>Credential helpers, on the other hand, are external programs from which Git can request both usernames and passwords; they typically interface with secure storage provided by the OS or other programs.</source>
          <target state="translated">С другой стороны,основные помощники-это внешние программы,от которых Git может запрашивать как имена пользователей,так и пароли;как правило,они взаимодействуют с защищённым хранилищем,предоставляемым операционной системой или другими программами.</target>
        </trans-unit>
        <trans-unit id="d62300d6222786cbbaa983d6e9106aadd99d8d3d" translate="yes" xml:space="preserve">
          <source>Credential storage will by default write to the first existing file in the list. If none of these files exist, &lt;code&gt;~/.git-credentials&lt;/code&gt; will be created and written to.</source>
          <target state="translated">Хранилище учетных данных по умолчанию будет записывать в первый существующий файл в списке. Если ни один из этих файлов не существует, будут созданы и записаны &lt;code&gt;~/.git-credentials&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdcc78e86a10c02802811b9eb8dc2446a5f35189" translate="yes" xml:space="preserve">
          <source>Currently a dummy fall-through function implemented as a wrapper around &lt;code&gt;printf(1)&lt;/code&gt; with variables expanded by the &lt;a href=&quot;git-sh-i18n--envsubst&quot;&gt;git-sh-i18n--envsubst[1]&lt;/a&gt; helper. Will be replaced by a real gettext implementation in a later version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e47cc9d61ac64c248d54da47cefec3c90e34c9" translate="yes" xml:space="preserve">
          <source>Currently a dummy fall-through function implemented as a wrapper around &lt;code&gt;printf(1)&lt;/code&gt; with variables expanded by the git-sh-i18n{litdd}envsubst[1] helper. Will be replaced by a real gettext implementation in a later version.</source>
          <target state="translated">В настоящее время фиктивная функция провала, реализованная как оболочка вокруг &lt;code&gt;printf(1)&lt;/code&gt; с переменными, расширенными с помощью помощника git-sh-i18n {litdd} envsubst [1]. В более поздних версиях будет заменена реальной реализацией gettext.</target>
        </trans-unit>
        <trans-unit id="87c8476a8fe8246e9cc89649a2d435a7d613617a" translate="yes" xml:space="preserve">
          <source>Currently a dummy fall-through function implemented as a wrapper around &lt;code&gt;printf(1)&lt;/code&gt;. Will be replaced by a real gettext implementation in a later version.</source>
          <target state="translated">В настоящее время фиктивная функция провала, реализованная как оболочка вокруг &lt;code&gt;printf(1)&lt;/code&gt; . В более поздних версиях будет заменена реальной реализацией gettext.</target>
        </trans-unit>
        <trans-unit id="d0a323c8531b99ccfcb3b5693dd52db2df3f23ff" translate="yes" xml:space="preserve">
          <source>Currently available providers are &lt;strong&gt;&quot;gravatar&quot;&lt;/strong&gt; and &lt;strong&gt;&quot;picon&quot;&lt;/strong&gt;. Only one provider at a time can be selected (&lt;code&gt;default&lt;/code&gt; is one element list). If an unknown provider is specified, the feature is disabled. &lt;strong&gt;Note&lt;/strong&gt; that some providers might require extra Perl packages to be installed; see &lt;code&gt;gitweb/INSTALL&lt;/code&gt; for more details.</source>
          <target state="translated">В настоящее время доступны провайдеры &lt;strong&gt;&amp;laquo;gravatar&amp;raquo;&lt;/strong&gt; и &lt;strong&gt;&amp;laquo;picon&amp;raquo;&lt;/strong&gt; . Одновременно может быть выбран только один поставщик (по &lt;code&gt;default&lt;/code&gt; - список из одного элемента). Если указан неизвестный поставщик, функция отключена. &lt;strong&gt;Обратите внимание,&lt;/strong&gt; что некоторые поставщики могут потребовать установки дополнительных пакетов Perl; см. &lt;code&gt;gitweb/INSTALL&lt;/code&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="717fdd8a8fe2000b9c0c629f6c5d467ecf014cfe" translate="yes" xml:space="preserve">
          <source>Currently for internal use only. Set a prefix which gives a path from above a repository down to its root. One use is to give submodules context about the superproject that invoked it.</source>
          <target state="translated">В настоящее время только для внутреннего пользования.Установите префикс,который дает путь от репозитория сверху до его корня.Одно из применений-дать подмодулям контекст о вызывавшем его суперпроекте.</target>
        </trans-unit>
        <trans-unit id="44c98bf149dc1ad4ae7705ea185729a070e4f82e" translate="yes" xml:space="preserve">
          <source>Currently recognized fields are:</source>
          <target state="translated">В настоящее время признаны поля:</target>
        </trans-unit>
        <trans-unit id="96e2ac5c1dd546ca41ecd7f60aa78cd7c4c66ca3" translate="yes" xml:space="preserve">
          <source>Currently the command updates the following files. Please see &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for description of what they are for:</source>
          <target state="translated">В настоящее время команда обновляет следующие файлы. Пожалуйста, смотрите &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5],&lt;/a&gt; чтобы узнать, для чего они нужны:</target>
        </trans-unit>
        <trans-unit id="58cad17f651d6b9e5474187d9de4ce3c98aebe87" translate="yes" xml:space="preserve">
          <source>Currently this is used by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; and &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when &lt;code&gt;git checkout &amp;lt;something&amp;gt;&lt;/code&gt; or &lt;code&gt;git switch &amp;lt;something&amp;gt;&lt;/code&gt; will checkout the &lt;code&gt;&amp;lt;something&amp;gt;&lt;/code&gt; branch on another remote, and by &lt;a href=&quot;git-worktree&quot;&gt;git-worktree[1]&lt;/a&gt; when &lt;code&gt;git worktree add&lt;/code&gt; refers to a remote branch. This setting might be used for other checkout-like commands or functionality in the future.</source>
          <target state="translated">В настоящее время это используется &lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt; и &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1],&lt;/a&gt; когда &lt;code&gt;git checkout &amp;lt;something&amp;gt;&lt;/code&gt; или &lt;code&gt;git switch &amp;lt;something&amp;gt;&lt;/code&gt; будет &lt;a href=&quot;git-worktree&quot;&gt;проверять&lt;/a&gt; ветку &lt;code&gt;&amp;lt;something&amp;gt;&lt;/code&gt; на другом удаленном компьютере, и git-worktree [1], когда &lt;code&gt;git worktree add&lt;/code&gt; относится к удаленной ветке. Этот параметр может быть использован для других команд или функций, подобных оформлению заказа, в будущем.</target>
        </trans-unit>
        <trans-unit id="5c5b7b525cb2eea52baefaf69e3b28ebe43a1b5d" translate="yes" xml:space="preserve">
          <source>Currently, this is always &quot;r1&quot; for the main repository. This field is in anticipation of in-proc submodules in the future.</source>
          <target state="translated">В настоящее время это всегда &quot;r1&quot; для основного репозитория.Это поле находится в ожидании внутрипроектных субмодулей в будущем.</target>
        </trans-unit>
        <trans-unit id="071b814c810acef4a305418b7617eb91825385c2" translate="yes" xml:space="preserve">
          <source>Custom helpers</source>
          <target state="translated">Клиентские помощники</target>
        </trans-unit>
        <trans-unit id="441c592e043641e18ffb271284d516b14fe37bc0" translate="yes" xml:space="preserve">
          <source>Custom macro attributes can be defined only in top-level gitattributes files (&lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt;, the &lt;code&gt;.gitattributes&lt;/code&gt; file at the top level of the working tree, or the global or system-wide gitattributes files), not in &lt;code&gt;.gitattributes&lt;/code&gt; files in working tree subdirectories. The built-in macro attribute &quot;binary&quot; is equivalent to:</source>
          <target state="translated">Пользовательские атрибуты макроса могут быть определены только в файлах gitattributes верхнего уровня ( &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; , файл &lt;code&gt;.gitattributes&lt;/code&gt; на верхнем уровне рабочего дерева или глобальные или общесистемные файлы gitattributes), но не в файлах &lt;code&gt;.gitattributes&lt;/code&gt; в подкаталогах рабочего дерева. Встроенный атрибут макроса &amp;laquo;двоичный&amp;raquo; эквивалентен:</target>
        </trans-unit>
        <trans-unit id="3e39087b89619b8882da1dce388a569a8e549573" translate="yes" xml:space="preserve">
          <source>Customizing word diff</source>
          <target state="translated">Настройка слова diff</target>
        </trans-unit>
        <trans-unit id="a28effa0c8276898e045b96b9d1ba0f760229cf5" translate="yes" xml:space="preserve">
          <source>Cute name for &lt;a href=&quot;#def_core_git&quot;&gt;core Git&lt;/a&gt;.</source>
          <target state="translated">Симпатичное название для &lt;a href=&quot;#def_core_git&quot;&gt;ядра Git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7033e3578a96d1e9400e567b4c0c23cd21d2c6e2" translate="yes" xml:space="preserve">
          <source>Cute name for programs and program suites depending on &lt;a href=&quot;#def_core_git&quot;&gt;core Git&lt;/a&gt;, presenting a high level access to core Git. Porcelains expose more of a &lt;a href=&quot;#def_SCM&quot;&gt;SCM&lt;/a&gt; interface than the &lt;a href=&quot;#def_plumbing&quot;&gt;plumbing&lt;/a&gt;.</source>
          <target state="translated">Симпатичное название для программ и программных пакетов в зависимости от &lt;a href=&quot;#def_core_git&quot;&gt;ядра Git&lt;/a&gt; , представляющее высокий уровень доступа к ядру Git. Фарфор открывает больше интерфейса &lt;a href=&quot;#def_SCM&quot;&gt;SCM,&lt;/a&gt; чем &lt;a href=&quot;#def_plumbing&quot;&gt;водопровод&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c276dc0072d6e81f335296db56eec5a1bdc2bed9" translate="yes" xml:space="preserve">
          <source>Cutting down bisection by giving more parameters to bisect start</source>
          <target state="translated">Уменьшение биссектриса путем задания большего количества параметров для запуска биссектриса</target>
        </trans-unit>
        <trans-unit id="9e78b27ca0bc764cd94adfc012f3ea2c4c32e8ff" translate="yes" xml:space="preserve">
          <source>D: deletion of a file</source>
          <target state="translated">D:удаление файла</target>
        </trans-unit>
        <trans-unit id="4ecdb0fd037d3dafe4f4e2a354bcfe9ed6b3a537" translate="yes" xml:space="preserve">
          <source>DAG</source>
          <target state="translated">DAG</target>
        </trans-unit>
        <trans-unit id="5a7759c99cc9f0c4d7897147bc310328ba1b2ac4" translate="yes" xml:space="preserve">
          <source>Dangling objects</source>
          <target state="translated">Дующие предметы</target>
        </trans-unit>
        <trans-unit id="d8788504c151968602d8ccc8fc1d2150b059a336" translate="yes" xml:space="preserve">
          <source>Data Messages</source>
          <target state="translated">Сообщения данных</target>
        </trans-unit>
        <trans-unit id="4b1f2d8717c44b631b95852544cce5392a548364" translate="yes" xml:space="preserve">
          <source>Data events are tagged with the active thread name. They are used to report the per-thread parameters.</source>
          <target state="translated">События данных помечены именем активного потока.Они используются для отчета о параметрах каждого потока.</target>
        </trans-unit>
        <trans-unit id="4bee01a9236d0c6bfb9a9c78d868c75e8d0aa93e" translate="yes" xml:space="preserve">
          <source>Data messages added to a region.</source>
          <target state="translated">Сообщения о данных,добавленные в регион.</target>
        </trans-unit>
        <trans-unit id="e5169e0ca17e29bbdf784cf8e268aafa8934e51d" translate="yes" xml:space="preserve">
          <source>Data written to stdin of the specified &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is assumed to be sent to a git:// server, git-upload-pack, git-receive-pack or git-upload-archive (depending on situation), and data read from stdout of &amp;lt;command&amp;gt; is assumed to be received from the same service.</source>
          <target state="translated">Предполагается, что данные, записанные на стандартный ввод указанного &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; , отправляются на сервер git: //, git-upload-pack, git-receive-pack или git-upload-archive (в зависимости от ситуации), а данные считываются из stdout &amp;lt;command&amp;gt; предполагается получить от той же службы.</target>
        </trans-unit>
        <trans-unit id="ce4b9abd8c39b6edc1077cdc5fbd525d6784cc17" translate="yes" xml:space="preserve">
          <source>Database backend</source>
          <target state="translated">Бэкэнд базы данных</target>
        </trans-unit>
        <trans-unit id="88e3b202bead5498b3c26df9a24b06dbb71997e1" translate="yes" xml:space="preserve">
          <source>Database name. The exact meaning depends on the selected database driver, for SQLite this is a filename. Supports variable substitution (see below). May not contain semicolons (&lt;code&gt;;&lt;/code&gt;). Default: &lt;code&gt;%Ggitcvs.%m.sqlite&lt;/code&gt;</source>
          <target state="translated">Имя базы данных. Точное значение зависит от выбранного драйвера базы данных, для SQLite это имя файла. Поддерживает подстановку переменных (см. Ниже). Не может содержать точки с запятой ( &lt;code&gt;;&lt;/code&gt; ). По умолчанию: &lt;code&gt;%Ggitcvs.%m.sqlite&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec7281a9f03369f6fca87bc704dcd61eb8d42fc2" translate="yes" xml:space="preserve">
          <source>Database password. Only useful if setting &lt;code&gt;dbDriver&lt;/code&gt;, since SQLite has no concept of database passwords.</source>
          <target state="translated">Пароль базы данных. Полезно только при установке &lt;code&gt;dbDriver&lt;/code&gt; , поскольку SQLite не имеет понятия паролей базы данных.</target>
        </trans-unit>
        <trans-unit id="6cb047cae02c9bba7b0e3391be2c746d7c4c4487" translate="yes" xml:space="preserve">
          <source>Database table name prefix. Prepended to the names of any database tables used, allowing a single database to be used for several repositories. Supports variable substitution (see &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt; for details). Any non-alphabetic characters will be replaced with underscores.</source>
          <target state="translated">Префикс имени таблицы базы данных. Добавляется к именам любых используемых таблиц базы данных, что позволяет использовать одну базу данных для нескольких репозиториев. Поддерживает подстановку переменных (подробности см. В &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; ). Любые неалфавитные символы будут заменены подчеркиванием.</target>
        </trans-unit>
        <trans-unit id="ba01b17d3115051f1a477d09b8cec632c83f89d1" translate="yes" xml:space="preserve">
          <source>Database table name prefix. Supports variable substitution (see below). Any non-alphabetic characters will be replaced with underscores.</source>
          <target state="translated">Префикс имени таблицы базы данных.Поддерживает подстановку переменных (см.ниже).Любые неалфавитные символы будут заменены подчеркиваниями.</target>
        </trans-unit>
        <trans-unit id="a13030629fc1c33a937c268b335dcb627627128f" translate="yes" xml:space="preserve">
          <source>Database used by git-cvsserver to cache revision information derived from the Git repository. The exact meaning depends on the used database driver, for SQLite (which is the default driver) this is a filename. Supports variable substitution (see &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt; for details). May not contain semicolons (&lt;code&gt;;&lt;/code&gt;). Default: &lt;code&gt;%Ggitcvs.%m.sqlite&lt;/code&gt;</source>
          <target state="translated">База данных, используемая git-cvsserver для кэширования информации о версии, полученной из репозитория Git. Точное значение зависит от используемого драйвера базы данных, для SQLite (который является драйвером по умолчанию) это имя файла. Поддерживает подстановку переменных (подробности см. В &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; ). Не может содержать точки с запятой ( &lt;code&gt;;&lt;/code&gt; ). По умолчанию: &lt;code&gt;%Ggitcvs.%m.sqlite&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb3915ed16cfcd6e4965fc92e19dfdb3f354cb3d" translate="yes" xml:space="preserve">
          <source>Database user and password. Only useful if setting &lt;code&gt;gitcvs.dbDriver&lt;/code&gt;, since SQLite has no concept of database users and/or passwords. &lt;code&gt;gitcvs.dbUser&lt;/code&gt; supports variable substitution (see &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt; for details).</source>
          <target state="translated">Пользователь базы данных и пароль. Полезно только при установке &lt;code&gt;gitcvs.dbDriver&lt;/code&gt; , поскольку SQLite не имеет понятия о пользователях базы данных и / или паролях. &lt;code&gt;gitcvs.dbUser&lt;/code&gt; поддерживает подстановку переменных (подробности см. в &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="161446d05bce5c35b9bb58271e5e12dbad31f437" translate="yes" xml:space="preserve">
          <source>Database user. Only useful if setting &lt;code&gt;dbDriver&lt;/code&gt;, since SQLite has no concept of database users. Supports variable substitution (see below).</source>
          <target state="translated">Пользователь базы данных. Полезно только при установке &lt;code&gt;dbDriver&lt;/code&gt; , поскольку SQLite не имеет понятия о пользователях базы данных. Поддерживает подстановку переменных (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="3fcd7b7ae338d342a7674f84f0c1f730e65ba9c0" translate="yes" xml:space="preserve">
          <source>Date Formats</source>
          <target state="translated">Форматы даты</target>
        </trans-unit>
        <trans-unit id="adf2309d1c810bb87f6dbfe62284445270cc7ea8" translate="yes" xml:space="preserve">
          <source>Date formats</source>
          <target state="translated">Форматы даты</target>
        </trans-unit>
        <trans-unit id="8dd9c41bb94ad9101ba89e79d1af605fb457f638" translate="yes" xml:space="preserve">
          <source>Debug gitignore / exclude files</source>
          <target state="translated">Отладка gitignore/исключение файлов</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="49a655454d59f6253c27bfd18c23a18e1916a070" translate="yes" xml:space="preserve">
          <source>Debugging would be easier if the fallback configuration file (&lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) and environment variable to override its location (&lt;code&gt;GITWEB_CONFIG_SYSTEM&lt;/code&gt;) had names reflecting their &quot;fallback&quot; role. The current names are kept to avoid breaking working setups.</source>
          <target state="translated">Отладка была бы проще, если бы резервный файл конфигурации ( &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ) и переменная среды для переопределения его местоположения ( &lt;code&gt;GITWEB_CONFIG_SYSTEM&lt;/code&gt; ) имели имена, отражающие их &amp;laquo;резервную&amp;raquo; роль. Текущие имена сохраняются, чтобы избежать нарушения рабочих настроек.</target>
        </trans-unit>
        <trans-unit id="25623d3d6597110b3dc53adcb06a990460c0bdc2" translate="yes" xml:space="preserve">
          <source>Decide not to merge. The only clean-ups you need are to reset the index file to the &lt;code&gt;HEAD&lt;/code&gt; commit to reverse 2. and to clean up working tree changes made by 2. and 3.; &lt;code&gt;git merge --abort&lt;/code&gt; can be used for this.</source>
          <target state="translated">Решите не сливаться. Единственное, что вам нужно, это сбросить индексный файл до фиксации &lt;code&gt;HEAD&lt;/code&gt; , чтобы отменить 2. и очистить изменения рабочего дерева, сделанные 2. и 3 .; &lt;code&gt;git merge --abort&lt;/code&gt; можно использовать git merge --abort .</target>
        </trans-unit>
        <trans-unit id="461dd8f77b9a26481c7b52783d8ce19864c00a87" translate="yes" xml:space="preserve">
          <source>Deepen or shorten the history of a shallow repository to exclude commits reachable from a specified remote branch or tag. This option can be specified multiple times.</source>
          <target state="translated">Углубить или сократить историю неглубокого репозитория,чтобы исключить коммиты,доступные из указанного удаленного ответвления или метки.Эта опция может быть указана несколько раз.</target>
        </trans-unit>
        <trans-unit id="fc0ba6fe75550f8aa46ad04018df5509f99a82b6" translate="yes" xml:space="preserve">
          <source>Deepen or shorten the history of a shallow repository to include all reachable commits after &amp;lt;date&amp;gt;.</source>
          <target state="translated">Углубить или сократить историю мелкого репозитория, чтобы включить все доступные коммиты после &amp;lt;дата&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b85c21ce1c36df4fd97d8d980d2975325f47caee" translate="yes" xml:space="preserve">
          <source>Deepens the history of a shallow repository based on time.</source>
          <target state="translated">Углубляет историю неглубокого репозитория,основанного на времени.</target>
        </trans-unit>
        <trans-unit id="0b2ab70fb2f23273e2c8d92c10b43dfc891dac12" translate="yes" xml:space="preserve">
          <source>Deepens the history of a shallow repository excluding ref. Multiple options add up.</source>
          <target state="translated">Углубляет историю неглубокого репозитория за исключением ссылки.Складывается несколько опций.</target>
        </trans-unit>
        <trans-unit id="e87814f404c8c230e2c89d6eeca5b7883036cc70" translate="yes" xml:space="preserve">
          <source>Deepens the history of a shallow repository relative to current boundary. Only valid when used with &quot;option depth&quot;.</source>
          <target state="translated">Углубляет историю неглубокого хранилища относительно текущей границы.Действительно только при использовании с &quot;опционной глубиной&quot;.</target>
        </trans-unit>
        <trans-unit id="919906ebf6455d2b9a3b4a65ed3f4d4732631f26" translate="yes" xml:space="preserve">
          <source>Deepens the history of a shallow repository.</source>
          <target state="translated">Углубляет историю неглубокого хранилища.</target>
        </trans-unit>
        <trans-unit id="3a0a0372c4178042ae74a7b526723e3fc6d8263f" translate="yes" xml:space="preserve">
          <source>Deeper technical details are often marked as Notes, which you can skip on your first reading.</source>
          <target state="translated">Более глубокие технические детали часто отмечаются как Примечания,которые можно пропустить при первом чтении.</target>
        </trans-unit>
        <trans-unit id="c4f869ad0eb5d764449c5b4f72c2193187ec9d1f" translate="yes" xml:space="preserve">
          <source>Default backend to use for rebasing. Possible choices are &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;merge&lt;/code&gt;. In the future, if the merge backend gains all remaining capabilities of the apply backend, this setting may become unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20e487318f9399c04b2a3d79bfe7af0545b07ad" translate="yes" xml:space="preserve">
          <source>Default behavior is to replace at most one line. This replaces all lines matching the key (and optionally the value_regex).</source>
          <target state="translated">Поведение по умолчанию-замена максимум одной строки.Это заменяет все строки,соответствующие ключу (и,опционально,значение_regex).</target>
        </trans-unit>
        <trans-unit id="749b51b1c09b9f840f85503ac08122dc83ca64a1" translate="yes" xml:space="preserve">
          <source>Default behaviour</source>
          <target state="translated">Поведение по умолчанию</target>
        </trans-unit>
        <trans-unit id="169920c54a1f81ff4c7f4ea2f9bc3ec52999c692" translate="yes" xml:space="preserve">
          <source>Default category for projects for which none is specified. If this is set to the empty string, such projects will remain uncategorized and listed at the top, above categorized projects. Used only if project categories are enabled, which means if &lt;code&gt;$projects_list_group_categories&lt;/code&gt; is true. By default set to &quot;&quot; (empty string).</source>
          <target state="translated">Категория по умолчанию для проектов, для которых ничего не указано. Если для этого параметра задана пустая строка, такие проекты останутся без категорий и будут перечислены вверху над категоризованными проектами. Используется только в том случае, если включены категории проектов, что означает, что &lt;code&gt;$projects_list_group_categories&lt;/code&gt; истинно. По умолчанию установлено значение &amp;laquo;&amp;raquo; (пустая строка).</target>
        </trans-unit>
        <trans-unit id="9a7724b74acb9022ccf2c23f91703070df10d1ad" translate="yes" xml:space="preserve">
          <source>Default charset for text files. If this is not set, the web server configuration will be used. Unset by default.</source>
          <target state="translated">Кодировка по умолчанию для текстовых файлов.Если она не установлена,будет использоваться конфигурация веб-сервера.По умолчанию не установлена.</target>
        </trans-unit>
        <trans-unit id="f158e700b844e38a0dc931109afe37923be30e86" translate="yes" xml:space="preserve">
          <source>Default for the &lt;code&gt;--format&lt;/code&gt; option. (See &lt;code&gt;Pretty Formats&lt;/code&gt; above.) Defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">По умолчанию для параметра &lt;code&gt;--format&lt;/code&gt; . (См. Выше &quot; &lt;code&gt;Pretty Formats&lt;/code&gt; .) По умолчанию - &lt;code&gt;medium&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="218b9a84e8b1c5c4d3bddc9fdedc0acd32221314" translate="yes" xml:space="preserve">
          <source>Default format for human-readable dates. (Compare the &lt;code&gt;--date&lt;/code&gt; option.) Defaults to &quot;default&quot;, which means to write dates like &lt;code&gt;Sat May 8 19:35:34 2010 -0500&lt;/code&gt;.</source>
          <target state="translated">Формат по умолчанию для удобочитаемых дат. (Сравните параметр &lt;code&gt;--date&lt;/code&gt; .) По умолчанию используется значение &amp;laquo;default&amp;raquo;, что означает запись таких дат, как &lt;code&gt;Sat May 8 19:35:34 2010 -0500&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba0eb309e5345eec5c3b84841217719e93588d00" translate="yes" xml:space="preserve">
          <source>Default is 1 MiB if NO_MMAP was set at compile time, otherwise 32 MiB on 32 bit platforms and 1 GiB on 64 bit platforms. This should be reasonable for all users/operating systems. You probably do not need to adjust this value.</source>
          <target state="translated">По умолчанию 1 Мб,если при компиляции был установлен NO_MMAP,в противном случае 32 Мб на 32-х битных платформах и 1 Гигабайт на 64-х битных платформах.Это должно быть разумно для всех пользователей/операционных систем.Скорее всего,вам не нужно изменять это значение.</target>
        </trans-unit>
        <trans-unit id="d9147e34112ee790abb9f9db27d98b411473bac1" translate="yes" xml:space="preserve">
          <source>Default is 256 MiB on 32 bit platforms and 32 TiB (effectively unlimited) on 64 bit platforms. This should be reasonable for all users/operating systems, except on the largest projects. You probably do not need to adjust this value.</source>
          <target state="translated">По умолчанию 256 Мб на 32-х битных платформах и 32 Тб (фактически неограниченный)на 64-х битных платформах.Это должно быть разумно для всех пользователей/операционных систем,за исключением крупнейших проектов.Скорее всего,вам не придется корректировать это значение.</target>
        </trans-unit>
        <trans-unit id="4e49064ea050150a0f08182ce6ea67e133f00a9b" translate="yes" xml:space="preserve">
          <source>Default is 512 MiB on all platforms. This should be reasonable for most projects as source code and other text files can still be delta compressed, but larger binary media files won&amp;rsquo;t be.</source>
          <target state="translated">По умолчанию 512 МБ на всех платформах. Это должно быть разумным для большинства проектов, так как исходный код и другие текстовые файлы могут по-прежнему подвергаться дельта-сжатию, но большие двоичные файлы мультимедиа - нет.</target>
        </trans-unit>
        <trans-unit id="dda4dcbc7195d800c473af9dc2bffe5e2a28d17c" translate="yes" xml:space="preserve">
          <source>Default is 96 MiB on all platforms. This should be reasonable for all users/operating systems, except on the largest projects. You probably do not need to adjust this value.</source>
          <target state="translated">По умолчанию 96 Мб на всех платформах.Это должно быть разумно для всех пользователей/операционных систем,за исключением крупнейших проектов.Скорее всего,вам не нужно корректировать это значение.</target>
        </trans-unit>
        <trans-unit id="41aaa0897fbd85df874ab9d046a41b0b5b6fcbb7" translate="yes" xml:space="preserve">
          <source>Default is the value of &lt;code&gt;sendemail.confirm&lt;/code&gt; configuration value; if that is unspecified, default to &lt;code&gt;auto&lt;/code&gt; unless any of the suppress options have been specified, in which case default to &lt;code&gt;compose&lt;/code&gt;.</source>
          <target state="translated">По умолчанию используется значение конфигурации &lt;code&gt;sendemail.confirm&lt;/code&gt; ; если это не указано, по умолчанию используется &lt;code&gt;auto&lt;/code&gt; , если не указан какой-либо из параметров подавления, и в этом случае по умолчанию &lt;code&gt;compose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3569c1c552117db58dc989b670cc81e2f0b5eea8" translate="yes" xml:space="preserve">
          <source>Default is the value of &lt;code&gt;sendemail.suppresscc&lt;/code&gt; configuration value; if that is unspecified, default to &lt;code&gt;self&lt;/code&gt; if --suppress-from is specified, as well as &lt;code&gt;body&lt;/code&gt; if --no-signed-off-cc is specified.</source>
          <target state="translated">По умолчанию используется значение конфигурации &lt;code&gt;sendemail.suppresscc&lt;/code&gt; ; если это не указано, по умолчанию используется &lt;code&gt;self&lt;/code&gt; , если указано --suppress-from, а также &lt;code&gt;body&lt;/code&gt; если указано --no -signed-off-cc.</target>
        </trans-unit>
        <trans-unit id="3d9cf7354837a1e6f3330509773c724888f83eee" translate="yes" xml:space="preserve">
          <source>Default is the value of &lt;code&gt;sendemail.validate&lt;/code&gt;; if this is not set, default to &lt;code&gt;--validate&lt;/code&gt;.</source>
          <target state="translated">По умолчанию используется значение &lt;code&gt;sendemail.validate&lt;/code&gt; ; если он не установлен, по умолчанию &lt;code&gt;--validate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56e75db08a7bfbfa3cf0e2da2dfaa6006039a1d9" translate="yes" xml:space="preserve">
          <source>Default is the value of the &lt;code&gt;sendemail.transferEncoding&lt;/code&gt; configuration value; if that is unspecified, default to &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">По умолчанию используется значение конфигурации &lt;code&gt;sendemail.transferEncoding&lt;/code&gt; ; если это не указано, по умолчанию используется &lt;code&gt;auto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64e9c61ef316384afc27b43382c7032d837b6c45" translate="yes" xml:space="preserve">
          <source>Default mimetype for the blob_plain (raw) view, if mimetype checking doesn&amp;rsquo;t result in some other type; by default &quot;text/plain&quot;. Gitweb guesses mimetype of a file to display based on extension of its filename, using &lt;code&gt;$mimetypes_file&lt;/code&gt; (if set and file exists) and &lt;code&gt;/etc/mime.types&lt;/code&gt; files (see &lt;strong&gt;mime.types&lt;/strong&gt;(5) manpage; only filename extension rules are supported by gitweb).</source>
          <target state="translated">Тип mimetype по умолчанию для представления blob_plain (raw), если проверка mimetype не привела к другому типу; по умолчанию &amp;laquo;текст / обычный&amp;raquo;. Gitweb угадывает mimetype файла для отображения на основе расширения его имени файла, используя файлы &lt;code&gt;$mimetypes_file&lt;/code&gt; (если установлен и файл существует) и &lt;code&gt;/etc/mime.types&lt;/code&gt; (см. &lt;strong&gt;Справочную страницу mime.types&lt;/strong&gt; (5); поддерживаются только правила расширения имени файла GitWeb).</target>
        </trans-unit>
        <trans-unit id="a652e3e440b54f22526cd10c4e33c94f21d2c36b" translate="yes" xml:space="preserve">
          <source>Default mode</source>
          <target state="translated">Режим по умолчанию</target>
        </trans-unit>
        <trans-unit id="acfd9cc6edb5212a1b417bbccf2370d2aa946d1d" translate="yes" xml:space="preserve">
          <source>Default value is &quot;project&quot;. Unknown value means unsorted.</source>
          <target state="translated">Значение по умолчанию-&quot;проект&quot;.Неизвестное значение означает неотсортированное.</target>
        </trans-unit>
        <trans-unit id="d13eeb854d667ceefdf012fc9e848fc81153988f" translate="yes" xml:space="preserve">
          <source>Default value of ordering of projects on projects list page, which means the ordering used if you don&amp;rsquo;t explicitly sort projects list (if there is no &quot;o&quot; CGI query parameter in the URL). Valid values are &quot;none&quot; (unsorted), &quot;project&quot; (projects are by project name, i.e. path to repository relative to &lt;code&gt;$projectroot&lt;/code&gt;), &quot;descr&quot; (project description), &quot;owner&quot;, and &quot;age&quot; (by date of most current commit).</source>
          <target state="translated">Значение по умолчанию для упорядочивания проектов на странице списка проектов, что означает порядок, используемый, если вы явно не сортируете список проектов (если в URL-адресе нет параметра запроса CGI &amp;laquo;o&amp;raquo;). Допустимые значения: &amp;laquo;none&amp;raquo; (несортированный), &amp;laquo;project&amp;raquo; (проекты по имени проекта, т. &lt;code&gt;$projectroot&lt;/code&gt; Путь к репозиторию относительно $ projectroot ), &amp;laquo;descr&amp;raquo; (описание проекта), &amp;laquo;owner&amp;raquo; и &amp;laquo;age&amp;raquo; (по дате самый последний коммит).</target>
        </trans-unit>
        <trans-unit id="8ac357056e8ed36929d1a15c1654ca84f035985a" translate="yes" xml:space="preserve">
          <source>Default values for &amp;lt;repository&amp;gt; and &amp;lt;branch&amp;gt; are read from the &quot;remote&quot; and &quot;merge&quot; configuration for the current branch as set by &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt;&lt;code&gt;--track&lt;/code&gt;.</source>
          <target state="translated">Значения по умолчанию для &amp;lt;repository&amp;gt; и &amp;lt;branch&amp;gt; считываются из конфигурации &amp;laquo;удаленного&amp;raquo; и &amp;laquo;слияния&amp;raquo; для текущей ветви, как установлено &lt;a href=&quot;git-branch&quot;&gt;git-branch [1] &lt;/a&gt; &lt;code&gt;--track&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83771af0d9e990cfd4209b40879c5dd720b86a4b" translate="yes" xml:space="preserve">
          <source>Defaults to false.</source>
          <target state="translated">По умолчанию-ложь.</target>
        </trans-unit>
        <trans-unit id="6daf684c4aa7d6effe6c46260cf795487441628a" translate="yes" xml:space="preserve">
          <source>Defaults to false. If this is set to a non zero number or true (identical to -1 or an unlimited number), the submodule summary will be enabled and a summary of commits for modified submodules will be shown (see --summary-limit option of &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;). Please note that the summary output command will be suppressed for all submodules when &lt;code&gt;diff.ignoreSubmodules&lt;/code&gt; is set to &lt;code&gt;all&lt;/code&gt; or only for those submodules where &lt;code&gt;submodule.&amp;lt;name&amp;gt;.ignore=all&lt;/code&gt;. The only exception to that rule is that status and commit will show staged submodule changes. To also view the summary for ignored submodules you can either use the --ignore-submodules=dirty command-line option or the &lt;code&gt;git submodule summary&lt;/code&gt; command, which shows a similar output but does not honor these settings.</source>
          <target state="translated">По умолчанию - false. Если для него установлено ненулевое число или истина (идентично -1 или неограниченное число), сводка подмодуля будет включена, и будет показана сводка коммитов для измененных подмодулей (см. Параметр --summary-limit в &lt;a href=&quot;git-submodule&quot;&gt;git- подмодуль [1]&lt;/a&gt; ). Обратите внимание, что команда итогового вывода будет подавлена ​​для всех подмодулей, если для &lt;code&gt;diff.ignoreSubmodules&lt;/code&gt; задано значение &lt;code&gt;all&lt;/code&gt; или только для тех подмодулей, где &lt;code&gt;submodule.&amp;lt;name&amp;gt;.ignore=all&lt;/code&gt; . Единственным исключением из этого правила является то, что статус и фиксация будут отображать поэтапные изменения подмодуля. Чтобы также просмотреть сводку для проигнорированных подмодулей, вы можете использовать параметр командной строки --ignore-submodules = dirty или &lt;code&gt;git submodule summary&lt;/code&gt; команда, которая показывает аналогичный вывод, но не учитывает эти настройки.</target>
        </trans-unit>
        <trans-unit id="c1010884442d5e06536e1ee0f4d961539164dc8e" translate="yes" xml:space="preserve">
          <source>Defines a URL from which the submodule repository can be cloned. This may be either an absolute URL ready to be passed to &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or (if it begins with ./ or ../) a location relative to the superproject&amp;rsquo;s origin repository.</source>
          <target state="translated">Определяет URL-адрес, из которого можно клонировать репозиторий подмодулей. Это может быть либо абсолютный URL-адрес, готовый к передаче в &lt;a href=&quot;git-clone&quot;&gt;git-clone [1],&lt;/a&gt; либо (если он начинается с ./ или ../) местоположение относительно исходного репозитория суперпроекта.</target>
        </trans-unit>
        <trans-unit id="7eec12b7977eefefa22fa2534e2c96073288e53c" translate="yes" xml:space="preserve">
          <source>Defines a human-readable name for a custom low-level merge driver. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Определяет удобочитаемое имя для настраиваемого низкоуровневого драйвера слияния. Подробнее см. &lt;a href=&quot;gitattributes&quot;&gt;Gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e9ca6f11c09da4d43e81ad293147f43b5584aa" translate="yes" xml:space="preserve">
          <source>Defines how wide the commit message window is in the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. &quot;75&quot; is the default.</source>
          <target state="translated">Определяет ширину окна сообщения фиксации в &lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; . &amp;laquo;75&amp;raquo; - значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="8f256827cbc850fb3bdad834aa2364767d096745" translate="yes" xml:space="preserve">
          <source>Defines the action &lt;code&gt;git push&lt;/code&gt; should take if no refspec is explicitly given. Different values are well-suited for specific workflows; for instance, in a purely central workflow (i.e. the fetch source is equal to the push destination), &lt;code&gt;upstream&lt;/code&gt; is probably what you want. Possible values are:</source>
          <target state="translated">Определяет действие, которое &lt;code&gt;git push&lt;/code&gt; должен предпринять, если явно не указан refspec. Различные значения хорошо подходят для определенных рабочих процессов; например, в чисто централизованном рабочем процессе (т. е. источник выборки совпадает с местом назначения push), вероятно, вам нужен &lt;code&gt;upstream&lt;/code&gt; поток. Возможные значения:</target>
        </trans-unit>
        <trans-unit id="fa5a260857f4dcd659067f9cae013659cbddf760" translate="yes" xml:space="preserve">
          <source>Defines the action &lt;code&gt;git push&lt;/code&gt; should take if no refspec is given (whether from the command-line, config, or elsewhere). Different values are well-suited for specific workflows; for instance, in a purely central workflow (i.e. the fetch source is equal to the push destination), &lt;code&gt;upstream&lt;/code&gt; is probably what you want. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4188e24ee4c51e0130a50e687a2164cdec0105c9" translate="yes" xml:space="preserve">
          <source>Defines the command that implements a custom low-level merge driver. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Определяет команду, реализующую настраиваемый драйвер слияния низкого уровня. Подробнее см. &lt;a href=&quot;gitattributes&quot;&gt;Gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="70c9d97cb193a6213d042cd9cd1b6638dde57f03" translate="yes" xml:space="preserve">
          <source>Defines the default update procedure for the named submodule, i.e. how the submodule is updated by &quot;git submodule update&quot; command in the superproject. This is only used by &lt;code&gt;git
submodule init&lt;/code&gt; to initialize the configuration variable of the same name. Allowed values here are &lt;code&gt;checkout&lt;/code&gt;, &lt;code&gt;rebase&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt; or &lt;code&gt;none&lt;/code&gt;. See description of &lt;code&gt;update&lt;/code&gt; command in &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt; for their meaning. For security reasons, the &lt;code&gt;!command&lt;/code&gt; form is not accepted here.</source>
          <target state="translated">Определяет процедуру обновления по умолчанию для названного подмодуля, то есть то, как подмодуль обновляется командой &amp;laquo;git submodule update&amp;raquo; в суперпроекте. Это используется только &lt;code&gt;git submodule init&lt;/code&gt; для инициализации одноименной переменной конфигурации. Допустимые значения: &lt;code&gt;checkout&lt;/code&gt; , &lt;code&gt;rebase&lt;/code&gt; , &lt;code&gt;merge&lt;/code&gt; или &lt;code&gt;none&lt;/code&gt; . Их значение см. В описании команды &lt;code&gt;update&lt;/code&gt; в &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; . По соображениям безопасности форма &lt;code&gt;!command&lt;/code&gt; не принимается.</target>
        </trans-unit>
        <trans-unit id="90471e779c375b0a1c4452c6d06b08a0b6dc6757" translate="yes" xml:space="preserve">
          <source>Defines the path, relative to the top-level directory of the Git working tree, where the submodule is expected to be checked out. The path name must not end with a &lt;code&gt;/&lt;/code&gt;. All submodule paths must be unique within the .gitmodules file.</source>
          <target state="translated">Определяет путь относительно каталога верхнего уровня рабочего дерева Git, где ожидается извлечение подмодуля. Имя пути не должно заканчиваться на &lt;code&gt;/&lt;/code&gt; . Все пути к подмодулям должны быть уникальными в файле .gitmodules.</target>
        </trans-unit>
        <trans-unit id="b4ca29387dcb9b04d487429eaa7be9fc96326e7a" translate="yes" xml:space="preserve">
          <source>Defines under what circumstances &quot;git status&quot; and the diff family show a submodule as modified. The following values are supported:</source>
          <target state="translated">Определяет,при каких обстоятельствах &quot;git-статус&quot; и diff-семейство показывают субмодуль в модифицированном виде.Поддерживаются следующие значения:</target>
        </trans-unit>
        <trans-unit id="7943cfcce8d9f75d29b4fa34e3b6ac1f1de5b3ae" translate="yes" xml:space="preserve">
          <source>Defines under what circumstances &quot;git status&quot; and the diff family show a submodule as modified. When set to &quot;all&quot;, it will never be considered modified (but it will nonetheless show up in the output of status and commit when it has been staged), &quot;dirty&quot; will ignore all changes to the submodules work tree and takes only differences between the HEAD of the submodule and the commit recorded in the superproject into account. &quot;untracked&quot; will additionally let submodules with modified tracked files in their work tree show up. Using &quot;none&quot; (the default when this option is not set) also shows submodules that have untracked files in their work tree as changed. This setting overrides any setting made in .gitmodules for this submodule, both settings can be overridden on the command line by using the &quot;--ignore-submodules&quot; option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">Определяет, при каких обстоятельствах &amp;laquo;git status&amp;raquo; и семейство diff показывают подмодуль как измененный. Если установлено значение &amp;laquo;все&amp;raquo;, он никогда не будет считаться измененным (но, тем не менее, будет отображаться в выводе статуса и фиксации, когда он был поставлен), &amp;laquo;грязный&amp;raquo; будет игнорировать все изменения в дереве работы подмодулей и принимать только различия между HEAD подмодуля и фиксацией, записанной в суперпроекте. &amp;laquo;untracked&amp;raquo; дополнительно позволяет отображать подмодули с измененными отслеживаемыми файлами в их рабочем дереве. Использование &amp;laquo;none&amp;raquo; (по умолчанию, когда этот параметр не установлен) также показывает подмодули, в рабочем дереве которых есть неотслеживаемые файлы, как измененные. Этот параметр переопределяет любые настройки, сделанные в .gitmodules для этого подмодуля, оба параметра могут быть переопределены в командной строке, используя &quot;--ignore-submodules &quot;. &lt;code&gt;git submodule&lt;/code&gt; Этот параметр не влияет на команды подмодуля git .</target>
        </trans-unit>
        <trans-unit id="e1fef4851ecba56a95f304dccae2b919c9e6d073" translate="yes" xml:space="preserve">
          <source>Defines which attributes to assign to a path, similar to per-directory &lt;code&gt;.gitattributes&lt;/code&gt; files. See also: &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;.</source>
          <target state="translated">Определяет, какие атрибуты назначать пути, аналогично файлам &lt;code&gt;.gitattributes&lt;/code&gt; для каждого каталога . См. Также: &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7011f57e8da17dd35f52484933047dc4fb201acb" translate="yes" xml:space="preserve">
          <source>Defines, together with branch.&amp;lt;name&amp;gt;.remote, the upstream branch for the given branch. It tells &lt;code&gt;git fetch&lt;/code&gt;/&lt;code&gt;git pull&lt;/code&gt;/&lt;code&gt;git rebase&lt;/code&gt; which branch to merge and can also affect &lt;code&gt;git push&lt;/code&gt; (see push.default). When in branch &amp;lt;name&amp;gt;, it tells &lt;code&gt;git fetch&lt;/code&gt; the default refspec to be marked for merging in FETCH_HEAD. The value is handled like the remote part of a refspec, and must match a ref which is fetched from the remote given by &quot;branch.&amp;lt;name&amp;gt;.remote&quot;. The merge information is used by &lt;code&gt;git pull&lt;/code&gt; (which at first calls &lt;code&gt;git fetch&lt;/code&gt;) to lookup the default branch for merging. Without this option, &lt;code&gt;git pull&lt;/code&gt; defaults to merge the first refspec fetched. Specify multiple values to get an octopus merge. If you wish to setup &lt;code&gt;git pull&lt;/code&gt; so that it merges into &amp;lt;name&amp;gt; from another branch in the local repository, you can point branch.&amp;lt;name&amp;gt;.merge to the desired branch, and use the relative path setting &lt;code&gt;.&lt;/code&gt; (a period) for branch.&amp;lt;name&amp;gt;.remote.</source>
          <target state="translated">Определяет вместе с branch. &amp;lt;name&amp;gt; .remote восходящую ветвь для данной ветки. Он сообщает &lt;code&gt;git fetch&lt;/code&gt; / &lt;code&gt;git pull&lt;/code&gt; / &lt;code&gt;git rebase&lt;/code&gt; , какую ветвь следует объединить, а также может влиять на &lt;code&gt;git push&lt;/code&gt; (см. Push.default). Находясь в ветке &amp;lt;name&amp;gt;, он сообщает &lt;code&gt;git fetch&lt;/code&gt; , что refspec по умолчанию должен быть отмечен для слияния в FETCH_HEAD. Значение обрабатывается так же, как и удаленная часть refspec, и должно соответствовать ссылке, полученной с удаленного устройства, заданного &quot;branch. &amp;lt;name&amp;gt; .remote&quot;. Информация о слиянии используется &lt;code&gt;git pull&lt;/code&gt; (который сначала вызывает &lt;code&gt;git fetch&lt;/code&gt; ) для поиска ветки по умолчанию для слияния. Без этой опции &lt;code&gt;git pull&lt;/code&gt; по умолчанию объединяет первый полученный refspec. Укажите несколько значений, чтобы получить слияние осьминога. Если вы хотите настроить &lt;code&gt;git pull&lt;/code&gt; так, чтобы он сливался с &amp;lt;name&amp;gt; из другой ветки в локальном репозитории, вы можете указать branch. &amp;lt;name&amp;gt; .merge на нужную ветку и использовать настройку относительного пути &lt;code&gt;.&lt;/code&gt; (точка) для branch. &amp;lt;name&amp;gt; .remote.</target>
        </trans-unit>
        <trans-unit id="f11af95383d16d6bd1e7925886e81b428b4cbfea" translate="yes" xml:space="preserve">
          <source>Defining a custom hunk-header</source>
          <target state="translated">Определение пользовательского заголовка</target>
        </trans-unit>
        <trans-unit id="ca3594ffd9ab11c72c2e8d78b4c8b59973682e4f" translate="yes" xml:space="preserve">
          <source>Defining a custom merge driver</source>
          <target state="translated">Определение пользовательского драйвера слияния</target>
        </trans-unit>
        <trans-unit id="9708d6426545c2cece09aff33765fae2b095ca8b" translate="yes" xml:space="preserve">
          <source>Defining an external diff driver</source>
          <target state="translated">Определение внешнего диффузионного драйвера</target>
        </trans-unit>
        <trans-unit id="eeff7bb1e3fba8a2873ef88f8308472b5d5082ff" translate="yes" xml:space="preserve">
          <source>Defining attributes per path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c022d1a19819ea36656f34517c46cf40cc0616" translate="yes" xml:space="preserve">
          <source>Defining macro attributes</source>
          <target state="translated">Определение макроатрибутов</target>
        </trans-unit>
        <trans-unit id="6bc10970bef0d1a497b62db2ecbaba494c65fd0f" translate="yes" xml:space="preserve">
          <source>Defining submodule properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40047a3b93162ae49d16e0fd58c1fcd8942970b" translate="yes" xml:space="preserve">
          <source>Deinitialized submodule: A &lt;code&gt;gitlink&lt;/code&gt;, and a &lt;code&gt;.gitmodules&lt;/code&gt; entry, but no submodule working directory. The submodule&amp;rsquo;s Git directory may be there as after deinitializing the Git directory is kept around. The directory which is supposed to be the working directory is empty instead.</source>
          <target state="translated">Деинициализированный подмодуль: &lt;code&gt;gitlink&lt;/code&gt; и &lt;code&gt;.gitmodules&lt;/code&gt; , но без рабочего каталога подмодуля. Каталог Git подмодуля может быть там, так как после деинициализации каталог Git сохраняется. Вместо этого каталог, который должен быть рабочим каталогом, пуст.</target>
        </trans-unit>
        <trans-unit id="b4c200bb0d1f7ba2b7c3e166470a4cb39be0daab" translate="yes" xml:space="preserve">
          <source>Delay</source>
          <target state="translated">Delay</target>
        </trans-unit>
        <trans-unit id="ce169dc044a35b855e4edb1b1a97682afa804f83" translate="yes" xml:space="preserve">
          <source>Delete &amp;lt;ref&amp;gt; after verifying it exists with &amp;lt;oldvalue&amp;gt;, if given. If given, &amp;lt;oldvalue&amp;gt; may not be zero.</source>
          <target state="translated">Удалите &amp;lt;ref&amp;gt; после проверки его существования с помощью &amp;lt;oldvalue&amp;gt;, если он указан. Если задано, &amp;lt;oldvalue&amp;gt; не может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="4a38bab2ae9dd8b2cb4a0dc3ff8ff31445d9e605" translate="yes" xml:space="preserve">
          <source>Delete a branch. The branch must be fully merged in its upstream branch, or in &lt;code&gt;HEAD&lt;/code&gt; if no upstream was set with &lt;code&gt;--track&lt;/code&gt; or &lt;code&gt;--set-upstream-to&lt;/code&gt;.</source>
          <target state="translated">Удалить ветку. Ветвь должна быть полностью объединена в свою восходящую ветвь или в &lt;code&gt;HEAD&lt;/code&gt; , если восходящий &lt;code&gt;--track&lt;/code&gt; не был установлен с помощью --track или &lt;code&gt;--set-upstream-to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9f3df8cb2d062f0173b4dadd305c9e0eadc7f1f" translate="yes" xml:space="preserve">
          <source>Delete an unneeded branch</source>
          <target state="translated">Удалить ненужную ветку</target>
        </trans-unit>
        <trans-unit id="3627df6f5c316b48c9a0e828b45ee4b23f9a149d" translate="yes" xml:space="preserve">
          <source>Delete existing replace refs for the given objects.</source>
          <target state="translated">Удалить существующие ссылки на замену для данных объектов.</target>
        </trans-unit>
        <trans-unit id="6b8d128c004ee953175f88ab766106d4cfa01d06" translate="yes" xml:space="preserve">
          <source>Delete existing tags with the given names.</source>
          <target state="translated">Удалить существующие теги с заданными именами.</target>
        </trans-unit>
        <trans-unit id="ec34ecd3e43b7835223d180bb5b62d7a1f50ff85" translate="yes" xml:space="preserve">
          <source>Delete the &quot;test&quot; branch even if the &quot;master&quot; branch (or whichever branch is currently checked out) does not have all commits from the test branch.</source>
          <target state="translated">Удалите &quot;тестовую&quot; ветку,даже если &quot;главная&quot; ветка (или какая бы ветка ни была извлечена на данный момент)не имеет всех коммитов из &quot;тестовой&quot; ветки.</target>
        </trans-unit>
        <trans-unit id="5060fa25753a50b8acf6be2071a5d6f5afc4acd3" translate="yes" xml:space="preserve">
          <source>Delete the pack-files that are tracked by the MIDX file, but have no objects referenced by the MIDX. Rewrite the MIDX file afterward to remove all references to these pack-files.</source>
          <target state="translated">Удалите пакетные файлы,которые отслеживаются MIDX-файлом,но не имеют объектов,на которые ссылается MIDX-файл.После этого перезапишите MIDX-файл,чтобы удалить все ссылки на эти пакетные файлы.</target>
        </trans-unit>
        <trans-unit id="34a0e7fb9687c81637f401d26cc5a141535336e8" translate="yes" xml:space="preserve">
          <source>Delete the remote-tracking branches &quot;todo&quot;, &quot;html&quot; and &quot;man&quot;. The next &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;pull&lt;/code&gt; will create them again unless you configure them not to. See &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Удалите ветки удаленного отслеживания &amp;laquo;todo&amp;raquo;, &amp;laquo;html&amp;raquo; и &amp;laquo;man&amp;raquo;. При следующем &lt;code&gt;fetch&lt;/code&gt; или &lt;code&gt;pull&lt;/code&gt; будут созданы снова, если вы не настроите их иначе . См. &lt;a href=&quot;git-fetch&quot;&gt;Git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48060c17f13289e334a3727f4f1de95de800b004" translate="yes" xml:space="preserve">
          <source>Delete the symbolic ref &amp;lt;name&amp;gt;.</source>
          <target state="translated">Удалите символическую ссылку &amp;lt;имя&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="0b8a7c3943e03f2a2e8f697e98962af3bfbc2534" translate="yes" xml:space="preserve">
          <source>Deleted submodule: A submodule can be deleted by running &lt;code&gt;git rm &amp;lt;submodule path&amp;gt; &amp;amp;&amp;amp; git commit&lt;/code&gt;. This can be undone using &lt;code&gt;git revert&lt;/code&gt;.</source>
          <target state="translated">Удаленный подмодуль: подмодуль можно удалить, выполнив &lt;code&gt;git rm &amp;lt;submodule path&amp;gt; &amp;amp;&amp;amp; git commit&lt;/code&gt; . Это можно отменить с помощью &lt;code&gt;git revert&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbae550cd78e8e22873a526e5dae0892e13b85e4" translate="yes" xml:space="preserve">
          <source>Deletes stale references associated with &amp;lt;name&amp;gt;. By default, stale remote-tracking branches under &amp;lt;name&amp;gt; are deleted, but depending on global configuration and the configuration of the remote we might even prune local tags that haven&amp;rsquo;t been pushed there. Equivalent to &lt;code&gt;git
fetch --prune &amp;lt;name&amp;gt;&lt;/code&gt;, except that no new references will be fetched.</source>
          <target state="translated">Удаляет устаревшие ссылки, связанные с &amp;lt;name&amp;gt;. По умолчанию устаревшие ветки удаленного отслеживания в &amp;lt;name&amp;gt; удаляются, но в зависимости от глобальной конфигурации и конфигурации удаленного мы можем даже удалить локальные теги, которые не были туда помещены. Эквивалентно &lt;code&gt;git fetch --prune &amp;lt;name&amp;gt;&lt;/code&gt; , за исключением того, что новые ссылки загружаться не будут.</target>
        </trans-unit>
        <trans-unit id="24d8888ac9265ebf12b5751431da3b3a66a3bc35" translate="yes" xml:space="preserve">
          <source>Delimited format</source>
          <target state="translated">Разграниченный формат</target>
        </trans-unit>
        <trans-unit id="b2cf66f0df0d42ad5ab4aaeb19f2b65bda3f8e44" translate="yes" xml:space="preserve">
          <source>Delta compression will not be attempted for blobs for paths with the attribute &lt;code&gt;delta&lt;/code&gt; set to false.</source>
          <target state="translated">Дельта-сжатие не будет выполняться для больших двоичных объектов для путей, для которых для атрибута &lt;code&gt;delta&lt;/code&gt; установлено значение false.</target>
        </trans-unit>
        <trans-unit id="06d8459b781df550338ff8874296d04e07653551" translate="yes" xml:space="preserve">
          <source>Delta islands</source>
          <target state="translated">острова Дельты</target>
        </trans-unit>
        <trans-unit id="1c00a92357090dcc2a4a087a5faeaa3dd4ef60a6" translate="yes" xml:space="preserve">
          <source>Delta islands solve this problem by allowing you to group your refs into distinct &quot;islands&quot;. Pack-objects computes which objects are reachable from which islands, and refuses to make a delta from an object &lt;code&gt;A&lt;/code&gt; against a base which is not present in all of &lt;code&gt;A&lt;/code&gt;'s islands. This results in slightly larger packs (because we miss some delta opportunities), but guarantees that a fetch of one island will not have to recompute deltas on the fly due to crossing island boundaries.</source>
          <target state="translated">Дельта-острова решают эту проблему, позволяя вам сгруппировать ваших рефери в отдельные &amp;laquo;острова&amp;raquo;. Pack-objects вычисляет, какие объекты достижимы с каких островов, и отказывается делать дельту от объекта &lt;code&gt;A&lt;/code&gt; относительно базы, которая присутствует не на всех островах &lt;code&gt;A&lt;/code&gt; .Это приводит к немного большим группам (потому что мы упускаем некоторые возможности дельты), но гарантирует, что выборка одного острова не должна пересчитывать дельты на лету из-за пересечения границ острова.</target>
        </trans-unit>
        <trans-unit id="89e6ba5af92c1476da557467d420cb383ed75bc2" translate="yes" xml:space="preserve">
          <source>Deltified representation</source>
          <target state="translated">Делифицированное представление</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="fcd6a0d5490f96a9ee2d3abff638da71da537fbf" translate="yes" xml:space="preserve">
          <source>Depending on the operation, git will use one of the following refspecs, if you don&amp;rsquo;t provide one on the command line. &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; is the name of this file in &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; and &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; defaults to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">В зависимости от операции git будет использовать одну из следующих спецификаций ссылок, если вы не укажете ее в командной строке. &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; - это имя этого файла в &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; а &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; по умолчанию - &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea16e3702c686bd547a284907194ee7b4ffac191" translate="yes" xml:space="preserve">
          <source>Depot path syntax</source>
          <target state="translated">синтаксис пути депо</target>
        </trans-unit>
        <trans-unit id="1983f893b78285086fe35838f9f2f81d38d4d745" translate="yes" xml:space="preserve">
          <source>Deprecated alias for &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt;.</source>
          <target state="translated">Устаревший псевдоним для &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05b4a62238617bb5a4be973f552dc324fff173a4" translate="yes" xml:space="preserve">
          <source>Deprecated alias for &lt;code&gt;sendemail.smtpEncryption = ssl&lt;/code&gt;.</source>
          <target state="translated">Устаревший псевдоним для &lt;code&gt;sendemail.smtpEncryption = ssl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4db2bebc38aa1316eeea066286d1da6378d7b28" translate="yes" xml:space="preserve">
          <source>Deprecated alias for &lt;code&gt;versionsort.suffix&lt;/code&gt;. Ignored if &lt;code&gt;versionsort.suffix&lt;/code&gt; is set.</source>
          <target state="translated">Устаревший псевдоним для &lt;code&gt;versionsort.suffix&lt;/code&gt; . Игнорируется, если установлен файл &lt;code&gt;versionsort.suffix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d156ce209204264f931768dbe9676b2798b77199" translate="yes" xml:space="preserve">
          <source>Deprecated synonym for &lt;code&gt;find-renames=&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Устарел синоним для &lt;code&gt;find-renames=&amp;lt;n&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f08e2766ccb54250d4b3556b2590b15bf5d66a82" translate="yes" xml:space="preserve">
          <source>Dereference tags into object IDs as well. They will be shown with &quot;^{}&quot; appended.</source>
          <target state="translated">Тэги перенаправляются и на идентификаторы объектов.Они будут показаны с добавлением &quot;^{}&quot;.</target>
        </trans-unit>
        <trans-unit id="19ab5a2b07f917835d2a43707ceb85ed7b98a04e" translate="yes" xml:space="preserve">
          <source>Describe the patterns in the sparse-checkout file.</source>
          <target state="translated">Опишите шаблоны в файле разреженной проверки.</target>
        </trans-unit>
        <trans-unit id="3adaea2f7c94d999c480c31a9d97431cd4a29972" translate="yes" xml:space="preserve">
          <source>Describe the state of the working tree. When the working tree matches HEAD, the output is the same as &quot;git describe HEAD&quot;. If the working tree has local modification &quot;-dirty&quot; is appended to it. If a repository is corrupt and Git cannot determine if there is local modification, Git will error out, unless &amp;lsquo;--broken&amp;rsquo; is given, which appends the suffix &quot;-broken&quot; instead.</source>
          <target state="translated">Опишите состояние рабочего дерева. Когда рабочее дерево соответствует HEAD, вывод будет таким же, как &amp;laquo;git describe HEAD&amp;raquo;. Если у рабочего дерева есть локальная модификация, к нему добавляется &amp;laquo;-dirty&amp;raquo;. Если репозиторий поврежден и Git не может определить, есть ли локальная модификация, Git выдаст ошибку, если только не указан --broken, который вместо этого добавляет суффикс &amp;laquo;-broken&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="d6cee108138bd9a1ce855b1d73c719745374ce44" translate="yes" xml:space="preserve">
          <source>Design details</source>
          <target state="translated">Детали дизайна</target>
        </trans-unit>
        <trans-unit id="7e2d8329f700e85ec6f60947dd853588b3fee1c7" translate="yes" xml:space="preserve">
          <source>Designed with http and stateless-rpc in mind. With clear flush semantics the http remote helper can simply act as a proxy</source>
          <target state="translated">Разработан с учетом http и stateless-rpc.С четкой семантикой flush удаленный помощник http может просто выступать в качестве прокси-сервера</target>
        </trans-unit>
        <trans-unit id="a30dd6eb385d802e85851897aa84247984d6f5fe" translate="yes" xml:space="preserve">
          <source>Detach from the shell. Implies --syslog.</source>
          <target state="translated">Отсоединяйся от снаряда.Подразумевает-слоган.</target>
        </trans-unit>
        <trans-unit id="e5497c96dfd8b989db42ae40a552822ac0beda8b" translate="yes" xml:space="preserve">
          <source>Detached head</source>
          <target state="translated">Отделенная голова</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="67aa19cf55a723bbb26944cac78345fab055b208" translate="yes" xml:space="preserve">
          <source>Detect copies as well as renames. See also &lt;code&gt;--find-copies-harder&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is specified, it has the same meaning as for &lt;code&gt;-M&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Обнаруживать копии, а также переименовывать. См. Также &lt;code&gt;--find-copies-harder&lt;/code&gt; . Если указано &lt;code&gt;n&lt;/code&gt; , оно имеет то же значение, что и &lt;code&gt;-M&amp;lt;n&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01c2501577dd3675d86bed17ffb08591c732fcb7" translate="yes" xml:space="preserve">
          <source>Detect copies harder. See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;. A boolean.</source>
          <target state="translated">Обнаруживать копии труднее. См. &lt;a href=&quot;git-diff&quot;&gt;Git-diff [1]&lt;/a&gt; . Логическое значение.</target>
        </trans-unit>
        <trans-unit id="1b3059b4d74c2df5e3146bf7b20891041e88ba9a" translate="yes" xml:space="preserve">
          <source>Detect copies. See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;. This can be true, false, or a score as expected by &lt;code&gt;git diff -C&lt;/code&gt;.</source>
          <target state="translated">Обнаруживать копии. См. &lt;a href=&quot;git-diff&quot;&gt;Git-diff [1]&lt;/a&gt; . Это может быть истина, ложь или оценка, как ожидается от &lt;code&gt;git diff -C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1070111ce881d033aa11a2603f524ec35d0cf5af" translate="yes" xml:space="preserve">
          <source>Detect moved or copied lines within a file. When a commit moves or copies a block of lines (e.g. the original file has A and then B, and the commit changes it to B and then A), the traditional &lt;code&gt;blame&lt;/code&gt; algorithm notices only half of the movement and typically blames the lines that were moved up (i.e. B) to the parent and assigns blame to the lines that were moved down (i.e. A) to the child commit. With this option, both groups of lines are blamed on the parent by running extra passes of inspection.</source>
          <target state="translated">Обнаружение перемещенных или скопированных строк в файле. При фиксации переместить или скопировать блок строк (например , исходный файл имеет A , а затем B, и зафиксировать изменения его B , а затем A), традиционные &lt;code&gt;blame&lt;/code&gt; алгоритма уведомления только половина движения и обычно винит линии , которые были перемещается вверх (то есть B) к родительскому и назначает вину строкам, которые были перемещены вниз (то есть A) к дочернему коммиту. При использовании этой опции обе группы линий перекладываются на родительский объект путем выполнения дополнительных проходов проверки.</target>
        </trans-unit>
        <trans-unit id="1b96566ef127f8d019345c2f29a72c790e874b75" translate="yes" xml:space="preserve">
          <source>Detect renames. If &lt;code&gt;n&lt;/code&gt; is specified, it is a threshold on the similarity index (i.e. amount of addition/deletions compared to the file&amp;rsquo;s size). For example, &lt;code&gt;-M90%&lt;/code&gt; means Git should consider a delete/add pair to be a rename if more than 90% of the file hasn&amp;rsquo;t changed. Without a &lt;code&gt;%&lt;/code&gt; sign, the number is to be read as a fraction, with a decimal point before it. I.e., &lt;code&gt;-M5&lt;/code&gt; becomes 0.5, and is thus the same as &lt;code&gt;-M50%&lt;/code&gt;. Similarly, &lt;code&gt;-M05&lt;/code&gt; is the same as &lt;code&gt;-M5%&lt;/code&gt;. To limit detection to exact renames, use &lt;code&gt;-M100%&lt;/code&gt;. The default similarity index is 50%.</source>
          <target state="translated">Обнаружение переименований. Если указано &lt;code&gt;n&lt;/code&gt; , это порог индекса сходства (т.е. количества добавлений / удалений по сравнению с размером файла). Например, &lt;code&gt;-M90%&lt;/code&gt; означает, что Git должен рассматривать пару удаления / добавления как переименование, если более 90% файла не изменилось. Без знака &lt;code&gt;%&lt;/code&gt; число следует читать как дробь с десятичной точкой перед ним. &lt;code&gt;-M5&lt;/code&gt; есть -M5 становится 0,5 и, таким образом, совпадает с &lt;code&gt;-M50%&lt;/code&gt; . Точно так же &lt;code&gt;-M05&lt;/code&gt; совпадает с &lt;code&gt;-M5%&lt;/code&gt; . Чтобы ограничить обнаружение точным переименованием, используйте &lt;code&gt;-M100%&lt;/code&gt; . Индекс сходства по умолчанию - 50%.</target>
        </trans-unit>
        <trans-unit id="6d7e84e2caa06e6a8098c62271376428c6e7bd4b" translate="yes" xml:space="preserve">
          <source>Detect renames. See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;. Renames will be represented in p4 using explicit &lt;code&gt;move&lt;/code&gt; operations. There is no corresponding option to detect copies, but there are variables for both moves and copies.</source>
          <target state="translated">Обнаружение переименований. См. &lt;a href=&quot;git-diff&quot;&gt;Git-diff [1]&lt;/a&gt; . Переименования будут представлены в p4 с использованием явных операций &lt;code&gt;move&lt;/code&gt; . Нет соответствующей опции для обнаружения копий, но есть переменные как для перемещений, так и для копий.</target>
        </trans-unit>
        <trans-unit id="5ffd73e1a52e577bf08689eed36f6c4de2377e40" translate="yes" xml:space="preserve">
          <source>Detect renames. See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;. This can be true, false, or a score as expected by &lt;code&gt;git diff -M&lt;/code&gt;.</source>
          <target state="translated">Обнаружение переименований. См. &lt;a href=&quot;git-diff&quot;&gt;Git-diff [1]&lt;/a&gt; . Это может быть истина, ложь или оценка, как ожидается от &lt;code&gt;git diff -M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eef9174ad5648c91981effc420fca59fc15dfb0" translate="yes" xml:space="preserve">
          <source>Determine the reference name to use for a new branch:</source>
          <target state="translated">Определите имя ссылки для использования в новой ветке:</target>
        </trans-unit>
        <trans-unit id="2fd1f63eeed6a134512b420d9c8a0d335169ab6d" translate="yes" xml:space="preserve">
          <source>Determine whether there are commits in &lt;code&gt;&amp;lt;head&amp;gt;..&amp;lt;upstream&amp;gt;&lt;/code&gt; that are equivalent to those in the range &lt;code&gt;&amp;lt;limit&amp;gt;..&amp;lt;head&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Определите, есть ли в &lt;code&gt;&amp;lt;head&amp;gt;..&amp;lt;upstream&amp;gt;&lt;/code&gt; коммиты , эквивалентные коммитам в диапазоне &lt;code&gt;&amp;lt;limit&amp;gt;..&amp;lt;head&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3dd19e2791ee2ded730804490298d3d980bfa4d" translate="yes" xml:space="preserve">
          <source>Determines if &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; should trust the file modification timestamp or not. By default the timestamps are not trusted.</source>
          <target state="translated">Определяет, должен ли &lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; доверять метке времени модификации файла или нет. По умолчанию отметкам времени не доверяют.</target>
        </trans-unit>
        <trans-unit id="e154fe8e767c839e2059b235fd308381f6d8cea3" translate="yes" xml:space="preserve">
          <source>Determines if &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; shows untracked files in the file list. The default is &quot;true&quot;.</source>
          <target state="translated">Определяет, показывает ли &lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; неотслеживаемые файлы в списке файлов. По умолчанию установлено &amp;laquo;true&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="3f3ff5df4fcb4c5f3c82bb56b168b10367f53dcc" translate="yes" xml:space="preserve">
          <source>Determines if new branches created with &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; should default to tracking remote branches with matching names or not. Default: &quot;false&quot;.</source>
          <target state="translated">Определяет, должны ли новые ветки, созданные с помощью &lt;a href=&quot;git-gui&quot;&gt;git-gui [1], по&lt;/a&gt; умолчанию отслеживать удаленные ветки с совпадающими именами или нет. По умолчанию: &amp;laquo;ложь&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2f06095b37712166bde39a43d96d1f0785678946" translate="yes" xml:space="preserve">
          <source>Determines what to do about the untracked cache feature of the index. It will be kept, if this variable is unset or set to &lt;code&gt;keep&lt;/code&gt;. It will automatically be added if set to &lt;code&gt;true&lt;/code&gt;. And it will automatically be removed, if set to &lt;code&gt;false&lt;/code&gt;. Before setting it to &lt;code&gt;true&lt;/code&gt;, you should check that mtime is working properly on your system. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;. &lt;code&gt;keep&lt;/code&gt; by default, unless &lt;code&gt;feature.manyFiles&lt;/code&gt; is enabled which sets this setting to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">Определяет, что делать с функцией неотслеживаемого кеша индекса. Он будет сохранен, если эта переменная не установлена ​​или будет &lt;code&gt;keep&lt;/code&gt; . Если установлено значение &lt;code&gt;true&lt;/code&gt; , оно будет добавлено автоматически . И он будет автоматически удален, если установлен в &lt;code&gt;false&lt;/code&gt; . Перед тем как установить для него значение &lt;code&gt;true&lt;/code&gt; , вы должны убедиться, что mtime правильно работает в вашей системе. См. &lt;a href=&quot;git-update-index&quot;&gt;Git-update-index [1]&lt;/a&gt; . &lt;code&gt;keep&lt;/code&gt; по умолчанию, если не включен параметр &lt;code&gt;feature.manyFiles&lt;/code&gt; , который по умолчанию устанавливает для этого параметра значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64ca3fdabc3574a39df154eb5758766a9b3dabde" translate="yes" xml:space="preserve">
          <source>Developing against a shared repository</source>
          <target state="translated">Разработка на основе общего репозитория</target>
        </trans-unit>
        <trans-unit id="4359a6a8e374a18f2b4c156842b9c3a0fec4c744" translate="yes" xml:space="preserve">
          <source>Developing with git</source>
          <target state="translated">Развивающийся с git</target>
        </trans-unit>
        <trans-unit id="a7a451f70e401e1b204facb3a3e4f97e68c2b291" translate="yes" xml:space="preserve">
          <source>Development cost</source>
          <target state="translated">Стоимость разработки</target>
        </trans-unit>
        <trans-unit id="a2efcf35d137bb5a7503ecfbad3617a7e3a45807" translate="yes" xml:space="preserve">
          <source>Die if the pack contains broken links. For internal use only.</source>
          <target state="translated">Умирает,если пакет содержит разбитые ссылки.Только для внутреннего использования.</target>
        </trans-unit>
        <trans-unit id="c1ab34d973a0a532c231ce665c73c7ea8acc0a78" translate="yes" xml:space="preserve">
          <source>Die if the pack contains broken objects. For internal use only.</source>
          <target state="translated">Умирает,если в пачке находятся сломанные предметы.Только для внутреннего использования.</target>
        </trans-unit>
        <trans-unit id="d986c34724963dfe3d695e6191fc573a97f2025e" translate="yes" xml:space="preserve">
          <source>Die with error code != 0 when a reference is undefined, instead of printing &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Умереть с кодом ошибки! = 0, если ссылка не определена, вместо печати &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78795c9d90cdad9316079a8696dae908d814a635" translate="yes" xml:space="preserve">
          <source>Die, if the pack contains broken objects or links.</source>
          <target state="translated">Умереть,если пакет содержит сломанные объекты или ссылки.</target>
        </trans-unit>
        <trans-unit id="98ae64918b361ad15c4c43eb611e71c996a3c9bc" translate="yes" xml:space="preserve">
          <source>Die, if the pack is larger than &amp;lt;size&amp;gt;.</source>
          <target state="translated">Умрите, если пачка больше &amp;lt;размер&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="cd98a991a043eaea48f8e37b61339dac2bfa9ec4" translate="yes" xml:space="preserve">
          <source>Diff Formatting</source>
          <target state="translated">Дифф-форматирование</target>
        </trans-unit>
        <trans-unit id="de7932e0191749b8b9963fe2d05250ad20e02e5f" translate="yes" xml:space="preserve">
          <source>Diff against the &quot;base&quot; version, &quot;our branch&quot; or &quot;their branch&quot; respectively. With these options, diffs for merged entries are not shown.</source>
          <target state="translated">Различайтесь с &quot;базовой&quot; версией,&quot;нашей веткой&quot; или &quot;их веткой&quot; соответственно.При использовании этих опций различия для слитых записей не отображаются.</target>
        </trans-unit>
        <trans-unit id="d39943b940373b977991e15fc719e23de47c6ceb" translate="yes" xml:space="preserve">
          <source>Diff format for merges</source>
          <target state="translated">Дифф-формат для слияний</target>
        </trans-unit>
        <trans-unit id="3df1676524ddf0754323048bbcc379e44af54c67" translate="yes" xml:space="preserve">
          <source>Diff formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654f69ec27f8d4e0f2ecb2d08ba20e4caaa5cbd4" translate="yes" xml:space="preserve">
          <source>Diff is shown using the specified diff driver. Each driver may specify one or more options, as described in the following section. The options for the diff driver &quot;foo&quot; are defined by the configuration variables in the &quot;diff.foo&quot; section of the Git config file.</source>
          <target state="translated">Дифф отображается с помощью указанного драйвера diff.Каждый драйвер может указать один или несколько вариантов,как описано в следующем разделе.Опции для diff-драйвера &quot;foo&quot; определяются конфигурационными переменными в разделе &quot;diff.foo&quot; конфигурационного файла Git'а.</target>
        </trans-unit>
        <trans-unit id="e9752af49676495496d54c49d4451c932889ab3e" translate="yes" xml:space="preserve">
          <source>Diffcore-break: for splitting up complete rewrites</source>
          <target state="translated">Диффкор-брейк:для разделения полных перезаписей</target>
        </trans-unit>
        <trans-unit id="f8cbeab8828f936b2faf8e2c773445ac763403ab" translate="yes" xml:space="preserve">
          <source>Diffcore-merge-broken: for putting complete rewrites back together</source>
          <target state="translated">Diffcore-merge-broken:за полное переписывание обратно.</target>
        </trans-unit>
        <trans-unit id="037fc9af4089dca681837ff54ffb59e13b625177" translate="yes" xml:space="preserve">
          <source>Diffcore-order: for sorting the output based on filenames</source>
          <target state="translated">Diffcore-order:для сортировки вывода по именам файлов.</target>
        </trans-unit>
        <trans-unit id="93ec538cb6f31f250a629fbfef107579093c9275" translate="yes" xml:space="preserve">
          <source>Diffcore-pickaxe: for detecting addition/deletion of specified string</source>
          <target state="translated">Diffcore-pickaxe:для обнаружения добавления/удаления указанной строки</target>
        </trans-unit>
        <trans-unit id="be51b7621711d155d6251fd428e07de999420e36" translate="yes" xml:space="preserve">
          <source>Diffcore-rename: for detecting renames and copies</source>
          <target state="translated">Диффкорное переименование:для обнаружения переименований и копий.</target>
        </trans-unit>
        <trans-unit id="339450e1f1c9c473dd2ab70ee2a31028e8f96d6e" translate="yes" xml:space="preserve">
          <source>Directed acyclic graph. The &lt;a href=&quot;#def_commit_object&quot;&gt;commit objects&lt;/a&gt; form a directed acyclic graph, because they have parents (directed), and the graph of commit objects is acyclic (there is no &lt;a href=&quot;#def_chain&quot;&gt;chain&lt;/a&gt; which begins and ends with the same &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt;).</source>
          <target state="translated">Направленный ациклический граф. &lt;a href=&quot;#def_commit_object&quot;&gt;Фиксации объекты&lt;/a&gt; образуют ориентированный ациклический граф, потому что они имеют родитель (направленный), и график фиксации объектов ациклический (нет &lt;a href=&quot;#def_chain&quot;&gt;цепи&lt;/a&gt; , которая начинается и заканчивается с тем же &lt;a href=&quot;#def_object&quot;&gt;объектом&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c625315e724838d98d1c1aabd8894d579826b898" translate="yes" xml:space="preserve">
          <source>Directly insert the specified info into the index. For backward compatibility, you can also give these three arguments as three separate parameters, but new users are encouraged to use a single-parameter form.</source>
          <target state="translated">Непосредственно вставьте указанную информацию в индекс.Для обратной совместимости вы также можете указать эти три аргумента в качестве трех отдельных параметров,но новым пользователям рекомендуется использовать однопараметрическую форму.</target>
        </trans-unit>
        <trans-unit id="9885bf10483d3b24cb6bcd826a7eb7299ae266e3" translate="yes" xml:space="preserve">
          <source>Directory in which to place the individual messages.</source>
          <target state="translated">Каталог,в который помещаются отдельные сообщения.</target>
        </trans-unit>
        <trans-unit id="bdcdfee6c90a03fd94f3c634dadb758ff39de642" translate="yes" xml:space="preserve">
          <source>Directory rename detection</source>
          <target state="translated">Обнаружение переименования каталога</target>
        </trans-unit>
        <trans-unit id="aa2b3e6516957862f26d56361af6f4de78735eee" translate="yes" xml:space="preserve">
          <source>Directory rename detection works with the merge backend to provide you warnings in such cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0e7bc3f2d3ebf022d4ca57e3f30fa5aada7044" translate="yes" xml:space="preserve">
          <source>Directory rename heuristics are enabled in the merge and interactive backends. Due to the lack of accurate tree information, directory rename detection is disabled in the am backend.</source>
          <target state="translated">При слиянии и интерактивных бэкэндов включена эвристика переименования каталогов.Из-за отсутствия точной информации о дереве,определение переименования каталогов отключено в бэкэнде am.</target>
        </trans-unit>
        <trans-unit id="8016592b1dadffa6a4ff10aa4ea912d754ba679a" translate="yes" xml:space="preserve">
          <source>Disable SMTP authentication. Short hand for &lt;code&gt;--smtp-auth=none&lt;/code&gt;</source>
          <target state="translated">Отключите аутентификацию SMTP. Сокращение для &lt;code&gt;--smtp-auth=none&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8effb38233ed8f993bad8ba7def3e4c7198d5381" translate="yes" xml:space="preserve">
          <source>Disable all charset re-coding of the metadata.</source>
          <target state="translated">Отключите перекодирование всех кодовых таблиц метаданных.</target>
        </trans-unit>
        <trans-unit id="bff793fc9150fa9cc2d296006f1d7ecf24724c75" translate="yes" xml:space="preserve">
          <source>Disable all logging.</source>
          <target state="translated">Отключить все лесозаготовки.</target>
        </trans-unit>
        <trans-unit id="6a02367b3dfa3269f43aabd8b369dc39498517bc" translate="yes" xml:space="preserve">
          <source>Disable all output of the program. Implies &lt;code&gt;--exit-code&lt;/code&gt;.</source>
          <target state="translated">Отключите весь вывод программы. Подразумевается &lt;code&gt;--exit-code&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d72da5aaef63acc8729bbf0d8f490956106bf35b" translate="yes" xml:space="preserve">
          <source>Disable output of diffs for merge commits (default). Useful to override &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, or &lt;code&gt;--cc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ffdeb8d93ba1775007aefed8ede380f65dc5fc" translate="yes" xml:space="preserve">
          <source>Disable recursive fetching of submodules (this has the same effect as using the &lt;code&gt;--recurse-submodules=no&lt;/code&gt; option).</source>
          <target state="translated">Отключить рекурсивную выборку подмодулей (имеет тот же эффект, что и использование параметра &lt;code&gt;--recurse-submodules=no&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9197fea967c3dddcae2815fd5c61af7013500ac4" translate="yes" xml:space="preserve">
          <source>Disable sparse checkout support even if &lt;code&gt;core.sparseCheckout&lt;/code&gt; is true.</source>
          <target state="translated">Отключите поддержку разреженной проверки, даже если &lt;code&gt;core.sparseCheckout&lt;/code&gt; имеет значение true.</target>
        </trans-unit>
        <trans-unit id="90bc67ccb52fc4f00ea5bb7d3ea677b5d866b7a3" translate="yes" xml:space="preserve">
          <source>Disable the &lt;code&gt;core.sparseCheckout&lt;/code&gt; config setting, and restore the working directory to include all files. Leaves the sparse-checkout file intact so a later &lt;code&gt;git sparse-checkout init&lt;/code&gt; command may return the working directory to the same state.</source>
          <target state="translated">Отключите &lt;code&gt;core.sparseCheckout&lt;/code&gt; конфигурации core.sparseCheckout и восстановите рабочий каталог, включив в него все файлы. Оставляет файл sparse-checkout нетронутым, поэтому более поздняя команда &lt;code&gt;git sparse-checkout init&lt;/code&gt; может вернуть рабочий каталог в то же состояние.</target>
        </trans-unit>
        <trans-unit id="850c7ae0114510cb68dad1845148d77f171826d0" translate="yes" xml:space="preserve">
          <source>Disable the automatic rebase after all commits have been successfully submitted. Can also be set with git-p4.disableRebase.</source>
          <target state="translated">Отключите автоматический сброс после того,как все коммиты будут успешно отправлены.Также может быть установлен git-p4.disableRebase.</target>
        </trans-unit>
        <trans-unit id="70abb355de69ea1d7f24feac052795b5a3ce287a" translate="yes" xml:space="preserve">
          <source>Disable the automatic sync of p4/master from Perforce after commits have been submitted. Implies --disable-rebase. Can also be set with git-p4.disableP4Sync. Sync with origin/master still goes ahead if possible.</source>
          <target state="translated">Отключить автоматическую синхронизацию p4/master из Perforce после отправки коммитов.Подразумевает-отключить ребазирование.Также может быть установлена с помощью git-p4.disableP4Sync.Синхронизация с origin/master всё ещё продолжается,если это возможно.</target>
        </trans-unit>
        <trans-unit id="81f65186f299582e8d75d06c846cd0089af76798" translate="yes" xml:space="preserve">
          <source>Disable the creation of an attachment, overriding the configuration setting.</source>
          <target state="translated">Отключите создание вложения,переопределив настройки конфигурации.</target>
        </trans-unit>
        <trans-unit id="bf4cee356cf7010ff2baed05e8bfe18333a1862b" translate="yes" xml:space="preserve">
          <source>Disable the indent heuristic.</source>
          <target state="translated">Выведите из строя эвристический отпечаток.</target>
        </trans-unit>
        <trans-unit id="ca23a42f95c7adc909029c511091f97b9f4f227c" translate="yes" xml:space="preserve">
          <source>Disable the output shown by --stats, making fast-import usually be silent when it is successful. However, if the import stream has directives intended to show user output (e.g. &lt;code&gt;progress&lt;/code&gt; directives), the corresponding messages will still be shown.</source>
          <target state="translated">Отключите вывод, отображаемый --stats, чтобы быстрый импорт обычно не запускался, когда он успешен. Однако, если поток импорта директивы предназначены , чтобы показать выход пользователя (например , &lt;code&gt;progress&lt;/code&gt; директивы), соответствующие сообщения будут все равно будут отображаться.</target>
        </trans-unit>
        <trans-unit id="10ad29909e3f37bb2f27c987f74a4679173f8135" translate="yes" xml:space="preserve">
          <source>Disable the use of format=flowed: Edit..Preferences..Advanced..Config Editor. Search for &quot;mailnews.send_plaintext_flowed&quot;. Toggle it to make sure it is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Отключите использование format = flowed: Edit..Preferences..Advanced..Config Editor. Найдите &quot;mailnews.send_plaintext_flowed&quot;. Переключите его, чтобы убедиться, что установлено значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="858dc1d60e7e85d31f91783e5cf3256c04a8098e" translate="yes" xml:space="preserve">
          <source>Disable word diff again.</source>
          <target state="translated">Отключить слово &quot;diff&quot; снова.</target>
        </trans-unit>
        <trans-unit id="52c6bf677e030bd9b9c77d01d12b29e894c5d472" translate="yes" xml:space="preserve">
          <source>Disables the &lt;code&gt;renormalize&lt;/code&gt; option. This overrides the &lt;code&gt;merge.renormalize&lt;/code&gt; configuration variable.</source>
          <target state="translated">Отключает опцию &lt;code&gt;renormalize&lt;/code&gt; . Это переопределяет переменную конфигурации &lt;code&gt;merge.renormalize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="493a0332cb486f682d77bc8e837afda65d0ed478" translate="yes" xml:space="preserve">
          <source>Disallow external diff drivers.</source>
          <target state="translated">Запретить внешние диффузоры.</target>
        </trans-unit>
        <trans-unit id="ede3a1ef0a8990ff80cb58919eb8be7140b4f5fa" translate="yes" xml:space="preserve">
          <source>Discard the specified revision as well, keeping the nearest parent instead.</source>
          <target state="translated">Отбросьте и указанную ревизию,сохранив вместо нее ближайшую родительскую.</target>
        </trans-unit>
        <trans-unit id="8fb937b602b4f2ef21c7fab00ac15de3b3ba49ea" translate="yes" xml:space="preserve">
          <source>Discussion</source>
          <target state="translated">Discussion</target>
        </trans-unit>
        <trans-unit id="f1c3b4b6756e9452cf8283101c3b08d9ce1ba40d" translate="yes" xml:space="preserve">
          <source>Discussion on fork-point mode</source>
          <target state="translated">Обсуждение режима точки вилки</target>
        </trans-unit>
        <trans-unit id="cb8eae11c31d8b3c1e7747fe036d2ab3b1d1b780" translate="yes" xml:space="preserve">
          <source>Display branch listing in columns. See configuration variable column.branch for option syntax.&lt;code&gt;--column&lt;/code&gt; and &lt;code&gt;--no-column&lt;/code&gt; without options are equivalent to &lt;code&gt;always&lt;/code&gt; and &lt;code&gt;never&lt;/code&gt; respectively.</source>
          <target state="translated">Отображение списка веток в столбцах. См. Синтаксис опции в переменной конфигурации column.branch. &lt;code&gt;--column&lt;/code&gt; и &lt;code&gt;--no-column&lt;/code&gt; без параметров эквивалентны &lt;code&gt;always&lt;/code&gt; и &lt;code&gt;never&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="25deb208645941865b584087b241dc58f16bb18f" translate="yes" xml:space="preserve">
          <source>Display data in columns</source>
          <target state="translated">Отображение данных в столбцах</target>
        </trans-unit>
        <trans-unit id="00fa8df96d22edc1ad7e63a08b37f36b16a61d74" translate="yes" xml:space="preserve">
          <source>Display diffs for the current state of the resolution. It is useful for tracking what has changed while the user is resolving conflicts. Additional arguments are passed directly to the system &lt;code&gt;diff&lt;/code&gt; command installed in PATH.</source>
          <target state="translated">Отображение различий для текущего состояния разрешения. Это полезно для отслеживания того, что изменилось, пока пользователь разрешает конфликты. Дополнительные аргументы передаются непосредственно в системную команду &lt;code&gt;diff&lt;/code&gt; , установленную в PATH.</target>
        </trans-unit>
        <trans-unit id="a0cdcc7c7b07a8e4a90c3d5151fd195fb7223cf9" translate="yes" xml:space="preserve">
          <source>Display gitattributes information</source>
          <target state="translated">Отображать информацию о гитатрибутах</target>
        </trans-unit>
        <trans-unit id="941f2ea6c160e300fb40d6a55431420274d37d56" translate="yes" xml:space="preserve">
          <source>Display help information about Git</source>
          <target state="translated">Отобразить справочную информацию о Git</target>
        </trans-unit>
        <trans-unit id="5a9a3798add08be0e1f47ed8edfc2983b20e1a95" translate="yes" xml:space="preserve">
          <source>Display manual page for the command in the &lt;code&gt;info&lt;/code&gt; format. The &lt;code&gt;info&lt;/code&gt; program will be used for that purpose.</source>
          <target state="translated">Вывести справочную страницу для команды в &lt;code&gt;info&lt;/code&gt; формате. Для этого будет использована &lt;code&gt;info&lt;/code&gt; программа.</target>
        </trans-unit>
        <trans-unit id="e1ec38994d3bd8f0be2469bcb050567ebcdb5526" translate="yes" xml:space="preserve">
          <source>Display manual page for the command in the &lt;code&gt;man&lt;/code&gt; format. This option may be used to override a value set in the &lt;code&gt;help.format&lt;/code&gt; configuration variable.</source>
          <target state="translated">Вывести справочную страницу для команды в формате &lt;code&gt;man&lt;/code&gt; . Эта опция может использоваться для переопределения значения, установленного в переменной конфигурации &lt;code&gt;help.format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92ffa56daac223805fbe702e38ef997d8109fbdd" translate="yes" xml:space="preserve">
          <source>Display manual page for the command in the &lt;code&gt;web&lt;/code&gt; (HTML) format. A web browser will be used for that purpose.</source>
          <target state="translated">Отобразить справочную страницу для команды в формате &lt;code&gt;web&lt;/code&gt; (HTML). Для этого будет использоваться веб-браузер.</target>
        </trans-unit>
        <trans-unit id="f3b82a6e6a357a0bf9773d3a79c96ba1e61e31cb" translate="yes" xml:space="preserve">
          <source>Display or do not display detailed ahead/behind counts for the branch relative to its upstream branch. Defaults to true.</source>
          <target state="translated">Отображать или не отображать детальные подсчеты перед/назад по ветке относительно ее верхнего ответвления.По умолчанию равен true.</target>
        </trans-unit>
        <trans-unit id="f65810bba6d242e31829fe1b50da76b80381c4b9" translate="yes" xml:space="preserve">
          <source>Display some basic statistics about the objects fast-import has created, the packfiles they were stored into, and the memory used by fast-import during this run. Showing this output is currently the default, but can be disabled with --quiet.</source>
          <target state="translated">Отображение базовой статистики о созданных объектах fast-import,пакетах,в которые они были сохранены,и памяти,используемой fast-import во время этого запуска.Отображение этого вывода в настоящее время является стандартным,но может быть отключено с помощью --quiet.</target>
        </trans-unit>
        <trans-unit id="64158f1a0a1ec112852f04c5185015874a0e4c81" translate="yes" xml:space="preserve">
          <source>Display specific annotated tag (tag object).</source>
          <target state="translated">Отображение конкретного аннотированного тега (объекта тега).</target>
        </trans-unit>
        <trans-unit id="c6c2de616f34899ad73b615717fbe54f7ad5df4c" translate="yes" xml:space="preserve">
          <source>Display tag listing in columns. See configuration variable column.tag for option syntax.&lt;code&gt;--column&lt;/code&gt; and &lt;code&gt;--no-column&lt;/code&gt; without options are equivalent to &lt;code&gt;always&lt;/code&gt; and &lt;code&gt;never&lt;/code&gt; respectively.</source>
          <target state="translated">Отображение списка тегов в столбцах. См. Синтаксис опции в переменной конфигурации column.tag. &lt;code&gt;--column&lt;/code&gt; и &lt;code&gt;--no-column&lt;/code&gt; без параметров эквивалентны &lt;code&gt;always&lt;/code&gt; и &lt;code&gt;never&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="1a3622cde828191996e0ecf195f03d03b3ec44d7" translate="yes" xml:space="preserve">
          <source>Display the currently running version of &lt;code&gt;git gui&lt;/code&gt;.</source>
          <target state="translated">Показать текущую версию &lt;code&gt;git gui&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93da4437ffd9aa5715f14a3f0dacdb3439b3cf81" translate="yes" xml:space="preserve">
          <source>Display the full sha1s in the output listing rather than abbreviating them.</source>
          <target state="translated">Отображать полные sha1s в выходном листе,а не сокращать их.</target>
        </trans-unit>
        <trans-unit id="9f1c97cf9d8e74c2fc80265ab817ac9d7b832aa6" translate="yes" xml:space="preserve">
          <source>Display untracked files in columns. See configuration variable column.status for option syntax.&lt;code&gt;--column&lt;/code&gt; and &lt;code&gt;--no-column&lt;/code&gt; without options are equivalent to &lt;code&gt;always&lt;/code&gt; and &lt;code&gt;never&lt;/code&gt; respectively.</source>
          <target state="translated">Отображать неотслеживаемые файлы в столбцах. См. Синтаксис опции в переменной конфигурации column.status. &lt;code&gt;--column&lt;/code&gt; и &lt;code&gt;--no-column&lt;/code&gt; без параметров эквивалентны &lt;code&gt;always&lt;/code&gt; и &lt;code&gt;never&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="7092e241896d60ac87e32bb3193290cccc38af84" translate="yes" xml:space="preserve">
          <source>Display usage.</source>
          <target state="translated">Использование дисплея.</target>
        </trans-unit>
        <trans-unit id="7079ee902153dd291ddf916bbe088b722407f696" translate="yes" xml:space="preserve">
          <source>Displays changes in a repository or a selected set of commits. This includes visualizing the commit graph, showing information related to each commit, and the files in the trees of each revision.</source>
          <target state="translated">Отображает изменения в репозитории или выбранный набор коммитов.Это включает визуализацию графика фиксации,отображение информации,связанной с каждой фиксацией,и файлов в деревьях каждой ревизии.</target>
        </trans-unit>
        <trans-unit id="298c129f2e50c144c7e71d42c00becc8dea6a583" translate="yes" xml:space="preserve">
          <source>Displays paths that have differences between the index file and the current HEAD commit, paths that have differences between the working tree and the index file, and paths in the working tree that are not tracked by Git (and are not ignored by &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;). The first are what you &lt;code&gt;would&lt;/code&gt; commit by running &lt;code&gt;git commit&lt;/code&gt;; the second and third are what you &lt;code&gt;could&lt;/code&gt; commit by running &lt;code&gt;git add&lt;/code&gt; before running &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">Отображает пути, которые имеют различия между индексным файлом и текущим фиксацией HEAD, пути, которые имеют различия между рабочим деревом и индексным файлом, а также пути в рабочем дереве, которые не отслеживаются Git (и не игнорируются &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; ). Первый - это то, что вы &lt;code&gt;would&lt;/code&gt; зафиксировали, запустив &lt;code&gt;git commit&lt;/code&gt; ; второй и третий - это то, что вы &lt;code&gt;could&lt;/code&gt; зафиксировать, запустив &lt;code&gt;git add&lt;/code&gt; перед запуском &lt;code&gt;git commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a629570fab6639c414ba6b626507dad99fc801af" translate="yes" xml:space="preserve">
          <source>Displays references available in a local repository along with the associated commit IDs. Results can be filtered using a pattern and tags can be dereferenced into object IDs. Additionally, it can be used to test whether a particular ref exists.</source>
          <target state="translated">Отображает ссылки,доступные в локальном репозитории вместе с соответствующими идентификаторами коммитов.Результаты могут быть отфильтрованы с использованием шаблона,а теги могут быть разыменованы в идентификаторы объектов.Дополнительно,это может быть использовано для проверки существования конкретной ссылки.</target>
        </trans-unit>
        <trans-unit id="552e170818d4ff73bae847a17956173c4cb34b11" translate="yes" xml:space="preserve">
          <source>Displays references available in a remote repository along with the associated commit IDs.</source>
          <target state="translated">Отображает ссылки,доступные в удалённом репозитории вместе с соответствующими идентификаторами коммитов.</target>
        </trans-unit>
        <trans-unit id="96528dc0170b433d5bf734338e53f84118e8892f" translate="yes" xml:space="preserve">
          <source>Displays summary about given repository. This is the default command if no action is specified in URL, and only repository is specified.</source>
          <target state="translated">Отображает сводку о данном репозитории.Это команда по умолчанию,если в URL не указано ни одного действия,а указан только репозиторий.</target>
        </trans-unit>
        <trans-unit id="a0bdba2bfb43b133e65f6e75b6b8767f5a655c4d" translate="yes" xml:space="preserve">
          <source>Distributed workflows</source>
          <target state="translated">Распределённые рабочие процессы</target>
        </trans-unit>
        <trans-unit id="862f8a0b24f2fede02b5c7614fea634d5e3205d5" translate="yes" xml:space="preserve">
          <source>Do everything except actually send the emails.</source>
          <target state="translated">Делайте все,кроме как на самом деле посылайте электронные письма.</target>
        </trans-unit>
        <trans-unit id="c0cf7c46b6d09d46245bbf190b286bb681387914" translate="yes" xml:space="preserve">
          <source>Do everything except actually send the updates.</source>
          <target state="translated">Делайте все,кроме отправки обновлений.</target>
        </trans-unit>
        <trans-unit id="2391ab0a15e29de8c553f138bc9a5e5e1eff2f5d" translate="yes" xml:space="preserve">
          <source>Do not GPG-sign commit, to countermand a &lt;code&gt;--gpg-sign&lt;/code&gt; option given earlier on the command line.</source>
          <target state="translated">Не использовать GPG-подписывать коммит, чтобы отменить параметр &lt;code&gt;--gpg-sign&lt;/code&gt; , указанный ранее в командной строке.</target>
        </trans-unit>
        <trans-unit id="e60712f9f236c24928017c46a4121b75b37250b5" translate="yes" xml:space="preserve">
          <source>Do not actually prune any entries; just show what would have been pruned.</source>
          <target state="translated">Не подрезайте записи,просто покажите,что было бы подрезано.</target>
        </trans-unit>
        <trans-unit id="c1e5372fe0faa123824db425165ec2fea2793861" translate="yes" xml:space="preserve">
          <source>Do not add the Message-ID header to the commit message. &lt;code&gt;no-message-id&lt;/code&gt; is useful to override &lt;code&gt;am.messageid&lt;/code&gt;.</source>
          <target state="translated">Не добавляйте заголовок Message-ID в сообщение фиксации. &lt;code&gt;no-message-id&lt;/code&gt; полезен для переопределения &lt;code&gt;am.messageid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57e3f3ba3ed0b684d610d78f35decbf2d82cbdb0" translate="yes" xml:space="preserve">
          <source>Do not assume that the remote repository is complete in its current state, and verify all objects in the entire local ref&amp;rsquo;s history exist in the remote repository.</source>
          <target state="translated">Не предполагайте, что удаленный репозиторий завершен в своем текущем состоянии, и убедитесь, что все объекты в истории всей локальной ссылки существуют в удаленном репозитории.</target>
        </trans-unit>
        <trans-unit id="90fec1270ba2d2b20ae4223418ef68e2bfdd8b58" translate="yes" xml:space="preserve">
          <source>Do not change the message at all.</source>
          <target state="translated">Не изменяйте сообщение вообще.</target>
        </trans-unit>
        <trans-unit id="08226113a8a9e7f80d0cdebc9507aad8bbcea024" translate="yes" xml:space="preserve">
          <source>Do not checkout the new working tree at each iteration of the bisection process. Instead just update a special reference named &lt;code&gt;BISECT_HEAD&lt;/code&gt; to make it point to the commit that should be tested.</source>
          <target state="translated">Не проверяйте новое рабочее дерево на каждой итерации процесса деления пополам. Вместо этого просто обновите специальную ссылку с именем &lt;code&gt;BISECT_HEAD&lt;/code&gt; , чтобы она указывала на фиксацию, которую следует протестировать.</target>
        </trans-unit>
        <trans-unit id="032bbf4a51cb5f8b4c87bc5a87ccbf7ce7d9972e" translate="yes" xml:space="preserve">
          <source>Do not complain about a failed merge program (a merge program failure usually indicates conflicts during the merge). This is for porcelains which might want to emit custom messages.</source>
          <target state="translated">Не жалуйтесь на неудачную программу слияния (сбой программы слияния обычно указывает на конфликты во время слияния).Это для фарфора,который может захотеть выдать пользовательские сообщения.</target>
        </trans-unit>
        <trans-unit id="828652d2b0b568421d6c7e9bbf13386dea23e106" translate="yes" xml:space="preserve">
          <source>Do not consider commits that are referenced only by an entry in a reflog to be reachable. This option is meant only to search for commits that used to be in a ref, but now aren&amp;rsquo;t, but are still in that corresponding reflog.</source>
          <target state="translated">Не считайте коммиты, на которые ссылается только запись в журнале ссылок, достижимыми. Эта опция предназначена только для поиска коммитов, которые раньше были в справочнике, но теперь нет, но все еще находятся в соответствующем рефлоге.</target>
        </trans-unit>
        <trans-unit id="e869fbf733c283b771007d82b91f9b0969cfb747" translate="yes" xml:space="preserve">
          <source>Do not consider it an error to request removing notes from an object that does not have notes attached to it.</source>
          <target state="translated">Не считайте ошибкой запрос на удаление примечаний с объекта,к которому не прикреплены примечания.</target>
        </trans-unit>
        <trans-unit id="1ecb147f602b4581f87540a29b063aa61604b712" translate="yes" xml:space="preserve">
          <source>Do not consider tags matching the given &lt;code&gt;glob(7)&lt;/code&gt; pattern, excluding the &quot;refs/tags/&quot; prefix. If used with &lt;code&gt;--all&lt;/code&gt;, it also does not consider local branches and remote-tracking references matching the pattern, excluding respectively &quot;refs/heads/&quot; and &quot;refs/remotes/&quot; prefix; references of other types are never considered. If given multiple times, a list of patterns will be accumulated and tags matching any of the patterns will be excluded. When combined with --match a tag will be considered when it matches at least one --match pattern and does not match any of the --exclude patterns. Use &lt;code&gt;--no-exclude&lt;/code&gt; to clear and reset the list of patterns.</source>
          <target state="translated">Не рассматривать теги, соответствующие заданному шаблону &lt;code&gt;glob(7)&lt;/code&gt; , за исключением префикса &quot;refs / tags /&quot;. При использовании с &lt;code&gt;--all&lt;/code&gt; также не учитываются локальные ветки и ссылки удаленного отслеживания, соответствующие шаблону, за исключением соответственно префикса &amp;laquo;refs / heads /&amp;raquo; и &amp;laquo;refs / remotes /&amp;raquo;; ссылки других типов никогда не рассматриваются. Если задано несколько раз, будет накапливаться список шаблонов, и теги, соответствующие любому из шаблонов, будут исключены. В сочетании с --match тег будет рассматриваться, если он соответствует хотя бы одному шаблону --match и не соответствует ни одному из шаблонов --exclude. Используйте &lt;code&gt;--no-exclude&lt;/code&gt; , чтобы очистить и сбросить список шаблонов.</target>
        </trans-unit>
        <trans-unit id="037f30ef5e84974359cf44c16519221f2879783e" translate="yes" xml:space="preserve">
          <source>Do not create a commit, but show a list of paths that are to be committed, paths with local changes that will be left uncommitted and paths that are untracked.</source>
          <target state="translated">Не создавайте фиксацию,а покажите список путей,которые должны быть зафиксированы,пути с локальными изменениями,которые будут оставлены без фиксации,и пути,которые не будут отслежены.</target>
        </trans-unit>
        <trans-unit id="8cc46cc75e4001540bdd6b36d05862e218e46c47" translate="yes" xml:space="preserve">
          <source>Do not create objects in the object database for all &amp;lt;file&amp;gt; arguments that follow this flag; just insert their object IDs into the index.</source>
          <target state="translated">Не создавайте объекты в базе данных объектов для всех аргументов &amp;lt;file&amp;gt;, следующих за этим флагом; просто вставьте их идентификаторы объектов в индекс.</target>
        </trans-unit>
        <trans-unit id="7cb5295efb5286a379b8d83e6238db5f1ea1b2fa" translate="yes" xml:space="preserve">
          <source>Do not fetch remotely; only run &lt;code&gt;git rebase&lt;/code&gt; against the last fetched commit from the upstream SVN.</source>
          <target state="translated">Не получать удаленно; запускайте &lt;code&gt;git rebase&lt;/code&gt; только против последнего полученного коммита из вышестоящего SVN.</target>
        </trans-unit>
        <trans-unit id="97bf9439cf9070cedb99b3389632fc0fbbcf9edf" translate="yes" xml:space="preserve">
          <source>Do not honor textconv filter settings. This is the default.</source>
          <target state="translated">Не принимайте во внимание настройки фильтра преобразования текста.Это настройка по умолчанию.</target>
        </trans-unit>
        <trans-unit id="642b94f1b0f16f8086c6d9b3c2a88d58a07a371f" translate="yes" xml:space="preserve">
          <source>Do not ignore whitespace when performing move detection.</source>
          <target state="translated">Не игнорируйте пробелы при обнаружении движения.</target>
        </trans-unit>
        <trans-unit id="59383a29c043832ab98b518f841a638207c2a6f4" translate="yes" xml:space="preserve">
          <source>Do not ignore whitespace when performing move detection. This can be used to override configuration settings. It is the same as &lt;code&gt;--color-moved-ws=no&lt;/code&gt;.</source>
          <target state="translated">Не игнорируйте пробелы при обнаружении движения. Это можно использовать для переопределения параметров конфигурации. Это то же самое, что и &lt;code&gt;--color-moved-ws=no&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9b8ad508a1efad0691851330497788c20711761" translate="yes" xml:space="preserve">
          <source>Do not include a patch that matches a commit in &amp;lt;until&amp;gt;..&amp;lt;since&amp;gt;. This will examine all patches reachable from &amp;lt;since&amp;gt; but not from &amp;lt;until&amp;gt; and compare them with the patches being generated, and any patch that matches is ignored.</source>
          <target state="translated">Не включайте патч, соответствующий фиксации в &amp;lt;until&amp;gt; .. &amp;lt;since&amp;gt;. Это проверит все патчи, доступные из &amp;lt;since&amp;gt;, но не из &amp;lt;until&amp;gt;, и сравнит их с генерируемыми патчами, и любой соответствующий патч будет проигнорирован.</target>
        </trans-unit>
        <trans-unit id="06c89fdde45df9764a8423e7bd3a2334bae4fdd3" translate="yes" xml:space="preserve">
          <source>Do not include refs matching &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; that the next &lt;code&gt;--all&lt;/code&gt;, &lt;code&gt;--branches&lt;/code&gt;, &lt;code&gt;--tags&lt;/code&gt;, &lt;code&gt;--remotes&lt;/code&gt;, or &lt;code&gt;--glob&lt;/code&gt; would otherwise consider. Repetitions of this option accumulate exclusion patterns up to the next &lt;code&gt;--all&lt;/code&gt;, &lt;code&gt;--branches&lt;/code&gt;, &lt;code&gt;--tags&lt;/code&gt;, &lt;code&gt;--remotes&lt;/code&gt;, or &lt;code&gt;--glob&lt;/code&gt; option (other options or arguments do not clear accumulated patterns).</source>
          <target state="translated">Не включайте ссылки, соответствующие &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; , которые в противном случае &lt;code&gt;--glob&lt;/code&gt; бы следующие &lt;code&gt;--all&lt;/code&gt; , &lt;code&gt;--branches&lt;/code&gt; , &lt;code&gt;--tags&lt;/code&gt; , &lt;code&gt;--remotes&lt;/code&gt; или --glob . Повторения этой опции накапливают шаблоны исключения до следующего параметра &lt;code&gt;--all&lt;/code&gt; , &lt;code&gt;--branches&lt;/code&gt; , &lt;code&gt;--tags&lt;/code&gt; , &lt;code&gt;--remotes&lt;/code&gt; или &lt;code&gt;--glob&lt;/code&gt; (другие параметры или аргументы не очищают накопленные шаблоны).</target>
        </trans-unit>
        <trans-unit id="56a32ccb3c1f1c18304a762968ab21163044c5c3" translate="yes" xml:space="preserve">
          <source>Do not include the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; in the commit message template when using an editor to prepare the default commit message.</source>
          <target state="translated">Не включайте вывод &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; в шаблон сообщения фиксации при использовании редактора для подготовки сообщения фиксации по умолчанию.</target>
        </trans-unit>
        <trans-unit id="6b5bd4195c1d74a2912285d2c4eb0c2dba4c1afa" translate="yes" xml:space="preserve">
          <source>Do not interpret any more arguments as options.</source>
          <target state="translated">Больше не интерпретируйте аргументы как опции.</target>
        </trans-unit>
        <trans-unit id="e5da1b4ac510b79eb35b9d691f72663928bb7698" translate="yes" xml:space="preserve">
          <source>Do not invoke &lt;code&gt;git unpack-objects&lt;/code&gt; on received data, but create a single packfile out of it instead, and store it in the object database. If provided twice then the pack is locked against repacking.</source>
          <target state="translated">Не вызывайте &lt;code&gt;git unpack-objects&lt;/code&gt; для полученных данных, а вместо этого создайте из него один pack-файл и сохраните его в базе данных объектов. Если предусмотрено дважды, упаковка заблокирована от переупаковки.</target>
        </trans-unit>
        <trans-unit id="beae705e0d7e9c4e2c66edfac5f5628c8ca8684b" translate="yes" xml:space="preserve">
          <source>Do not issue an error message if the &amp;lt;name&amp;gt; is not a symbolic ref but a detached HEAD; instead exit with non-zero status silently.</source>
          <target state="translated">Не выдавать сообщение об ошибке, если &amp;lt;name&amp;gt; не является символической ссылкой, а является отдельной HEAD; вместо этого выйдите с ненулевым статусом молча.</target>
        </trans-unit>
        <trans-unit id="25d9eebc562b1a06ce597634bc396c0323e9fb5d" translate="yes" xml:space="preserve">
          <source>Do not keep commits that start empty before the rebase (i.e. that do not change anything from its parent) in the result. The default is to keep commits which start empty, since creating such commits requires passing the --allow-empty override flag to &lt;code&gt;git commit&lt;/code&gt;, signifying that a user is very intentionally creating such a commit and thus wants to keep it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96f65c98da537beaa0a86a4d3aea2125b47b691" translate="yes" xml:space="preserve">
          <source>Do not limit the listing to the current working directory. Implies --full-name.</source>
          <target state="translated">Не ограничивайте список текущей рабочей директорией.Подразумевает-полное имя.</target>
        </trans-unit>
        <trans-unit id="0ec876803cf466a9324414e97bc9d68e8edc56a9" translate="yes" xml:space="preserve">
          <source>Do not list empty directories. Has no effect without --directory.</source>
          <target state="translated">Не указывайте пустые каталоги.Не действует без --каталога.</target>
        </trans-unit>
        <trans-unit id="96b8b2c721697c15e0778ab602142e2343cf1855" translate="yes" xml:space="preserve">
          <source>Do not list one-line descriptions from the actual commits being merged.</source>
          <target state="translated">Не перечислять однострочные описания из фактически объединяемых коммитов.</target>
        </trans-unit>
        <trans-unit id="50c8933f0d365d96e0aba5401a78a6eff6e0fcc0" translate="yes" xml:space="preserve">
          <source>Do not merge to downstream except with a good reason: upstream API changes affect your branch; your branch no longer merges to upstream cleanly; etc.</source>
          <target state="translated">Не производите слияний с нисходящим потоком,кроме как по уважительной причине:изменения API вверх по течению влияют на ваше ответвление;ваше ответвление больше не будет чисто сливаться с восходящим потоком и т.д.</target>
        </trans-unit>
        <trans-unit id="20453559ed97130ebcc8684bdfc96d4e211050a6" translate="yes" xml:space="preserve">
          <source>Do not notice anything as error.</source>
          <target state="translated">Не замечайте ничего как ошибку.</target>
        </trans-unit>
        <trans-unit id="6c8215f8ad086bc4c804beee0595714130addff4" translate="yes" xml:space="preserve">
          <source>Do not output contents of changes in binary files, instead display a notice that those files changed. Patches generated using this option cannot be applied properly, but they are still useful for code review.</source>
          <target state="translated">Не выводите содержимое изменений в двоичных файлах,а предупреждайте об их изменении.Патчи,сгенерированные с помощью этой опции,не могут быть применены должным образом,но они все равно полезны для просмотра кода.</target>
        </trans-unit>
        <trans-unit id="2523ea10fe468312c71da3f45d33ec2f934186fc" translate="yes" xml:space="preserve">
          <source>Do not output flag parameters.</source>
          <target state="translated">Не выводите параметры флага.</target>
        </trans-unit>
        <trans-unit id="97d9ab4b88ae45778b7b3d001e321ad0dc14c371" translate="yes" xml:space="preserve">
          <source>Do not output flags and parameters meant for &lt;code&gt;git rev-list&lt;/code&gt; command.</source>
          <target state="translated">Не выводить флаги и параметры, предназначенные для команды &lt;code&gt;git rev-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f763f44ab0f0b262c4086b5b655e472e8e1fbc54" translate="yes" xml:space="preserve">
          <source>Do not output flags and parameters not meant for &lt;code&gt;git rev-list&lt;/code&gt; command.</source>
          <target state="translated">Не выводить флаги и параметры, не предназначенные для команды &lt;code&gt;git rev-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08b6c73b9a5b9ae8b10db84ed02aa9ff12c3dacb" translate="yes" xml:space="preserve">
          <source>Do not output matched lines; instead, exit with status 0 when there is a match and with non-zero status when there isn&amp;rsquo;t.</source>
          <target state="translated">Не выводить совпадающие строки; вместо этого выйдите со статусом 0, если совпадение есть, и с ненулевым статусом, когда его нет.</target>
        </trans-unit>
        <trans-unit id="ee712c84633a2927c1551bcb0103dc0873b40235" translate="yes" xml:space="preserve">
          <source>Do not output non-flag parameters.</source>
          <target state="translated">Не выводите не флаговые параметры.</target>
        </trans-unit>
        <trans-unit id="803c0ba19a9790046951938b8c5d1389018a1cc7" translate="yes" xml:space="preserve">
          <source>Do not pay attention to ignored files specified via the &lt;code&gt;.gitignore&lt;/code&gt; mechanism. Only useful when searching files in the current directory with &lt;code&gt;--no-index&lt;/code&gt;.</source>
          <target state="translated">Не обращайте внимания на игнорируемые файлы, указанные через механизм &lt;code&gt;.gitignore&lt;/code&gt; . Полезно только при поиске файлов в текущем каталоге с помощью &lt;code&gt;--no-index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac83dbcf3d4693958a0fe122034c7cc31b273fa9" translate="yes" xml:space="preserve">
          <source>Do not perform optional operations that require locks. This is equivalent to setting the &lt;code&gt;GIT_OPTIONAL_LOCKS&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Не выполняйте дополнительные операции, требующие блокировок. Это эквивалентно установке &lt;code&gt;GIT_OPTIONAL_LOCKS&lt;/code&gt; к &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3857914d38ac6fc1cf3a0581728d470a65e02771" translate="yes" xml:space="preserve">
          <source>Do not pipe Git output into a pager.</source>
          <target state="translated">Не подключайте выход Git в пейджер.</target>
        </trans-unit>
        <trans-unit id="d083af3d8a98a88b0736219c9a712ace923e74ce" translate="yes" xml:space="preserve">
          <source>Do not print any progress information.</source>
          <target state="translated">Не печатайте информацию о ходе работы.</target>
        </trans-unit>
        <trans-unit id="4f306796a802facf6a3ec8eb763307ebdfcd6b65" translate="yes" xml:space="preserve">
          <source>Do not print any results to stdout. When combined with &lt;code&gt;--verify&lt;/code&gt; this can be used to silently check if a reference exists.</source>
          <target state="translated">Не выводить результаты на стандартный вывод. В сочетании с &lt;code&gt;--verify&lt;/code&gt; это можно использовать для автоматической проверки наличия ссылки.</target>
        </trans-unit>
        <trans-unit id="d36888af86796f130618636768f7e10c682f8ef3" translate="yes" xml:space="preserve">
          <source>Do not print commits with more than one parent. This is exactly the same as &lt;code&gt;--max-parents=1&lt;/code&gt;.</source>
          <target state="translated">Не печатайте коммиты с более чем одним родителем. Это в точности то же самое, что и &lt;code&gt;--max-parents=1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca4c10c14f4ba2f9f3e2f89755711c5fc9a52157" translate="yes" xml:space="preserve">
          <source>Do not print remote URL to stderr.</source>
          <target state="translated">Не печатайте удаленный URL в stderr.</target>
        </trans-unit>
        <trans-unit id="808049e7ffec5b6e655b6a9d9ae72d8ecb3de856" translate="yes" xml:space="preserve">
          <source>Do not print the names of the generated files to standard output.</source>
          <target state="translated">Не печатайте имена сгенерированных файлов для стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="bc87e43a7d98a5c7571b51e67897a36a4ca8ab2b" translate="yes" xml:space="preserve">
          <source>Do not prompt before launching a diff tool.</source>
          <target state="translated">Не подскажите,прежде чем запускать инструмент сравнения.</target>
        </trans-unit>
        <trans-unit id="2138cd0cdb77e09db32e703a72fd51381cd4185f" translate="yes" xml:space="preserve">
          <source>Do not prune any loose objects.</source>
          <target state="translated">Не подрезайте свободные предметы.</target>
        </trans-unit>
        <trans-unit id="4ab3f3b957170dab775cfb00bbc8606872c3ea09" translate="yes" xml:space="preserve">
          <source>Do not rebase the tree against p4/master following a submit.</source>
          <target state="translated">После подачи заявки не меняйте дерево на p4/master.</target>
        </trans-unit>
        <trans-unit id="ee64f5e74349135c206f878ac8dae99d11617c4a" translate="yes" xml:space="preserve">
          <source>Do not remove &lt;code&gt;\r&lt;/code&gt; from lines ending with &lt;code&gt;\r\n&lt;/code&gt;.</source>
          <target state="translated">Не удаляйте &lt;code&gt;\r&lt;/code&gt; из строк, заканчивающихся на &lt;code&gt;\r\n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f6ac36312ee3d608ed232e28cf93ff206d0103e" translate="yes" xml:space="preserve">
          <source>Do not remove anything; just report the object names whose notes would be removed.</source>
          <target state="translated">Ничего не удаляйте,просто сообщите имена объектов,заметки которых будут удалены.</target>
        </trans-unit>
        <trans-unit id="e1b8d19002620396e3e17ca0d394f58c32270c15" translate="yes" xml:space="preserve">
          <source>Do not remove anything; just report what it would remove.</source>
          <target state="translated">Ничего не удаляйте,просто сообщите,что бы он удалил.</target>
        </trans-unit>
        <trans-unit id="04f9e0c42631154ae3b06c4af5993cc618a97379" translate="yes" xml:space="preserve">
          <source>Do not remove skip-worktree (AKA &quot;index-only&quot;) entries even when the &lt;code&gt;--remove&lt;/code&gt; option was specified.</source>
          <target state="translated">Не удаляйте записи skip-worktree (также известные как index-only), даже если была &lt;code&gt;--remove&lt;/code&gt; опция --remove .</target>
        </trans-unit>
        <trans-unit id="4b9504bc1ba7b31d1b6d4966504b5b4e06f71072" translate="yes" xml:space="preserve">
          <source>Do not report commits up to (and including) limit.</source>
          <target state="translated">Не сообщайте о нарушениях,не превышающих (и не превышающих)лимит.</target>
        </trans-unit>
        <trans-unit id="01c55be9743ceb727e1460223caf6f63698fc951" translate="yes" xml:space="preserve">
          <source>Do not set up &quot;upstream&quot; configuration, even if the &lt;code&gt;branch.autoSetupMerge&lt;/code&gt; configuration variable is true.</source>
          <target state="translated">Не настраивайте &amp;laquo;восходящую&amp;raquo; конфигурацию, даже если &lt;code&gt;branch.autoSetupMerge&lt;/code&gt; конфигурации branch.autoSetupMerge имеет значение true.</target>
        </trans-unit>
        <trans-unit id="1128ceb9ee850f084ee9c90bbc32c35e1a0677f6" translate="yes" xml:space="preserve">
          <source>Do not set up &quot;upstream&quot; configuration, even if the branch.autoSetupMerge configuration variable is true.</source>
          <target state="translated">Не настраивайте конфигурацию &quot;upstream&quot;,даже если конфигурационная переменная branch.autoSetupMerge верна.</target>
        </trans-unit>
        <trans-unit id="040575d6c90a48f5c39a665aeb7044e9eb43b684" translate="yes" xml:space="preserve">
          <source>Do not show a diffstat as part of the rebase process.</source>
          <target state="translated">Не показывайте дифстат как часть процесса фальцовки.</target>
        </trans-unit>
        <trans-unit id="6441f1c36e56fb2fa459a5f0796f9c305a9cf68e" translate="yes" xml:space="preserve">
          <source>Do not show any source or destination prefix.</source>
          <target state="translated">Не показывайте префикс источника или пункта назначения.</target>
        </trans-unit>
        <trans-unit id="c24868a69fc39c6ac2b9ca770ce8aa6841828fe0" translate="yes" xml:space="preserve">
          <source>Do not show naming strings for each commit.</source>
          <target state="translated">Не показывайте именные строки для каждого коммита.</target>
        </trans-unit>
        <trans-unit id="8fa5b27db8fcf759f01b0280edfd6b3431051bf3" translate="yes" xml:space="preserve">
          <source>Do not show notes. This negates the above &lt;code&gt;--notes&lt;/code&gt; option, by resetting the list of notes refs from which notes are shown. Options are parsed in the order given on the command line, so e.g. &quot;--notes --notes=foo --no-notes --notes=bar&quot; will only show notes from &quot;refs/notes/bar&quot;.</source>
          <target state="translated">Не показывать заметки. Это отменяет &lt;code&gt;--notes&lt;/code&gt; выше опцию --notes , сбрасывая список примечаний, из которых отображаются примечания. Параметры анализируются в порядке, указанном в командной строке, поэтому, например, &amp;laquo;--notes --notes = foo --no-notes --notes = bar&amp;raquo; будут отображать только заметки из &amp;laquo;refs / notes / bar&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9b02c841f1914bb7e6442db5b21cd8ed24132388" translate="yes" xml:space="preserve">
          <source>Do not show peeled tags or pseudorefs like &lt;code&gt;HEAD&lt;/code&gt; in the output.</source>
          <target state="translated">Не показывать очищенные теги или псевдорефы, такие как &lt;code&gt;HEAD&lt;/code&gt; , в выводе.</target>
        </trans-unit>
        <trans-unit id="2e0add30bcab4fc1d372892ee84a569922f89e58" translate="yes" xml:space="preserve">
          <source>Do not show the progress.</source>
          <target state="translated">Не показывайте прогресс.</target>
        </trans-unit>
        <trans-unit id="bb40d4a42e4bfb4ff33aaa6fa93d55da54d2c4f4" translate="yes" xml:space="preserve">
          <source>Do not strip/add &lt;code&gt;[PATCH]&lt;/code&gt; from the first line of the commit log message.</source>
          <target state="translated">Не удаляйте / не добавляйте &lt;code&gt;[PATCH]&lt;/code&gt; из первой строки сообщения журнала фиксации.</target>
        </trans-unit>
        <trans-unit id="aa99438dbaa0b24c2ee497186eaab642c50dd94c" translate="yes" xml:space="preserve">
          <source>Do not sync p4/master with Perforce following a submit. Implies git-p4.disableRebase.</source>
          <target state="translated">Не синхронизируйте p4/master с Perforce после отправки.Подразумевает git-p4.disableRebase.</target>
        </trans-unit>
        <trans-unit id="7b33c8101974f45df18e3e02278464887692318a" translate="yes" xml:space="preserve">
          <source>Do not treat &lt;code&gt;---&lt;/code&gt; as the end of the commit message. Use this when you know your input contains just the commit message itself (and not an email or the output of &lt;code&gt;git format-patch&lt;/code&gt;).</source>
          <target state="translated">Не воспринимайте &lt;code&gt;---&lt;/code&gt; как конец сообщения фиксации. Используйте это, если вы знаете, что ваш ввод содержит только само сообщение фиксации (а не электронное письмо или вывод &lt;code&gt;git format-patch&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="be1e8c28e0eca20ad17d3a007d8e373df410066a" translate="yes" xml:space="preserve">
          <source>Do not treat root commits as boundaries in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">Не рассматривайте корневые коммиты как границы в &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; . По умолчанию этот параметр равен false.</target>
        </trans-unit>
        <trans-unit id="1ff1f1d3f9c5e718776c8b3b20fdd0d08c30cdae" translate="yes" xml:space="preserve">
          <source>Do not treat root commits as boundaries. This can also be controlled via the &lt;code&gt;blame.showRoot&lt;/code&gt; config option.</source>
          <target state="translated">Не относитесь к корневым коммитам как к границам. Это также можно контролировать с помощью &lt;code&gt;blame.showRoot&lt;/code&gt; конфигурации blame.showRoot .</target>
        </trans-unit>
        <trans-unit id="24a9efa9a70e1fda7e6a923e07fce62a5dfc6f39" translate="yes" xml:space="preserve">
          <source>Do not trust the line counts in the hunk headers, but infer them by inspecting the patch (e.g. after editing the patch without adjusting the hunk headers appropriately).</source>
          <target state="translated">Не доверяйте счету строк в заголовках хакеров,а делайте выводы,проверяя патч (например,после редактирования патча без соответствующей настройки заголовков хакеров).</target>
        </trans-unit>
        <trans-unit id="ab779b8d99fe56229fa093a46cdef1a09efa24ca" translate="yes" xml:space="preserve">
          <source>Do not try &amp;lt;directory&amp;gt;/.git/ if &amp;lt;directory&amp;gt; is no Git directory.</source>
          <target state="translated">Не пытайтесь использовать &amp;lt;directory&amp;gt; /.git/, если &amp;lt;directory&amp;gt; не является каталогом Git.</target>
        </trans-unit>
        <trans-unit id="5c47444dc7f2fc014cd4e67acdf260f62a7c8e62" translate="yes" xml:space="preserve">
          <source>Do not try to update submodules. This option is only respected when passed before --refresh.</source>
          <target state="translated">Не пытайтесь обновлять субмодули.Эта опция соблюдается только при передаче перед --refresh.</target>
        </trans-unit>
        <trans-unit id="2177408392188ae81b2d122883b73ab471a2d934" translate="yes" xml:space="preserve">
          <source>Do not update the server information with &lt;code&gt;git update-server-info&lt;/code&gt;. This option skips updating local catalog files needed to publish this repository (or a direct copy of it) over HTTP or FTP. See &lt;a href=&quot;git-update-server-info&quot;&gt;git-update-server-info[1]&lt;/a&gt;.</source>
          <target state="translated">Не обновляйте информацию о сервере с помощью &lt;code&gt;git update-server-info&lt;/code&gt; . Эта опция пропускает обновление файлов локального каталога, необходимого для публикации этого репозитория (или его прямой копии) через HTTP или FTP. См. &lt;a href=&quot;git-update-server-info&quot;&gt;Git-update-server-info [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5053c19fad3601db22669a9dc4a1e312a5878c5e" translate="yes" xml:space="preserve">
          <source>Do not use any ref whose name matches a given shell pattern. The pattern can be one of branch name, tag name or fully qualified ref name. If given multiple times, a ref will be excluded when it matches any of the given patterns. When used together with --refs, a ref will be used as a match only when it matches at least one --refs pattern and does not match any --exclude patterns. Use &lt;code&gt;--no-exclude&lt;/code&gt; to clear the list of exclude patterns.</source>
          <target state="translated">Не используйте ссылки, имя которых соответствует заданному шаблону оболочки. Шаблон может быть одним из имени ветки, имени тега или полного имени ссылки. Если дано несколько раз, ссылка будет исключена, если она соответствует любому из заданных шаблонов. При использовании вместе с --refs ссылка будет использоваться в качестве совпадения, только если она соответствует хотя бы одному шаблону --refs и не соответствует ни одному шаблону --exclude. Используйте &lt;code&gt;--no-exclude&lt;/code&gt; , чтобы очистить список шаблонов исключения.</target>
        </trans-unit>
        <trans-unit id="267f50c7506b016b112f51819982f3c9ad863c01" translate="yes" xml:space="preserve">
          <source>Do not use branch names, but only tags to name the commits</source>
          <target state="translated">Не используйте имена филиалов,а только теги для названий коммитов.</target>
        </trans-unit>
        <trans-unit id="5e1b9e0ae819ac2e51b8b3ec6d4f3a636596bd47" translate="yes" xml:space="preserve">
          <source>Do not use local URLs here if you plan to publish your superproject!</source>
          <target state="translated">Не используйте здесь локальные URL,если вы планируете опубликовать свой суперпроект!</target>
        </trans-unit>
        <trans-unit id="2120668c1016ed8353ecc179a2be3de457f3b18c" translate="yes" xml:space="preserve">
          <source>Do not use replacement refs to replace Git objects. See &lt;a href=&quot;git-replace&quot;&gt;git-replace[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Не используйте заменяющие ссылки для замены объектов Git. См. &lt;a href=&quot;git-replace&quot;&gt;Git-replace [1]&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="46609390af561170d35a55596a89f9a47d125a47" translate="yes" xml:space="preserve">
          <source>Do not use the --amend option of &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; on a change you&amp;rsquo;ve already dcommitted. It is considered bad practice to --amend commits you&amp;rsquo;ve already pushed to a remote repository for other users, and dcommit with SVN is analogous to that.</source>
          <target state="translated">Не используйте параметр --amend команды &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; для изменения, которое вы уже подтвердили. Считается плохой практикой --amend коммиты, которые вы уже отправили в удаленный репозиторий для других пользователей, и dcommit с SVN аналогичен этому.</target>
        </trans-unit>
        <trans-unit id="6b2f85cff30ddf16b20f53be5327aa0354418c7a" translate="yes" xml:space="preserve">
          <source>Do not verify the pack contents; only show the histogram of delta chain length. With &lt;code&gt;--verbose&lt;/code&gt;, list of objects is also shown.</source>
          <target state="translated">Не проверяйте содержимое упаковки; показать только гистограмму длины дельта-цепи. С &lt;code&gt;--verbose&lt;/code&gt; также отображается список объектов.</target>
        </trans-unit>
        <trans-unit id="a72712d97eed5eb258082e78ab4de395a4c06778" translate="yes" xml:space="preserve">
          <source>Do nothing; only show what would happen</source>
          <target state="translated">Ничего не делай,только покажи,что случится.</target>
        </trans-unit>
        <trans-unit id="c577d001dfd39377917177f9d18813c77808015f" translate="yes" xml:space="preserve">
          <source>Do some work in the newly created Git repository:</source>
          <target state="translated">Выполните некоторые работы в недавно созданном Git-репозитории:</target>
        </trans-unit>
        <trans-unit id="d54d62a688502dd57d02a2d25bcfc45fa6646725" translate="yes" xml:space="preserve">
          <source>Do we want to maintain that ability or simply write to the existing Trace2 targets (and convert &amp;lt;key&amp;gt; to a &quot;category&quot;).</source>
          <target state="translated">Хотим ли мы сохранить эту способность или просто писать в существующие цели Trace2 (и преобразовывать &amp;lt;key&amp;gt; в &amp;laquo;категорию&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="93e5f9e78ae780b1443364c8b7bf637aab6beb2e" translate="yes" xml:space="preserve">
          <source>Do your work in your repository on &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">Работайте в своем репозитории в &lt;code&gt;master&lt;/code&gt; ветке.</target>
        </trans-unit>
        <trans-unit id="5732ac98ebf7d9e51cffa639f3f3c4cdaefb04a8" translate="yes" xml:space="preserve">
          <source>Does not have a default value; you must configure this variable to enable note rewriting.</source>
          <target state="translated">Не имеет значения по умолчанию;вы должны настроить эту переменную,чтобы включить перезапись нот.</target>
        </trans-unit>
        <trans-unit id="2a5f7374d914462e8df26d1af49c06790c2a1cc2" translate="yes" xml:space="preserve">
          <source>Does not have a default value; you must configure this variable to enable note rewriting. Set it to &lt;code&gt;refs/notes/commits&lt;/code&gt; to enable rewriting for the default commit notes.</source>
          <target state="translated">Не имеет значения по умолчанию; вы должны настроить эту переменную, чтобы включить перезапись заметок. Установите его на &lt;code&gt;refs/notes/commits&lt;/code&gt; , чтобы разрешить перезапись для заметок фиксации по умолчанию.</target>
        </trans-unit>
        <trans-unit id="42b7d5032e74e82b8de24d902e036f1902672dbe" translate="yes" xml:space="preserve">
          <source>Does not touch the index file or the working tree at all (but resets the head to &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;, just like all modes do). This leaves all your changed files &quot;Changes to be committed&quot;, as &lt;code&gt;git status&lt;/code&gt; would put it.</source>
          <target state="translated">Не затрагивает индексный файл или рабочее дерево (но сбрасывает заголовок на &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; , как и все режимы). Это оставляет все ваши измененные файлы &amp;laquo;Изменения должны быть зафиксированы&amp;raquo;, как &lt;code&gt;git status&lt;/code&gt; бы git status .</target>
        </trans-unit>
        <trans-unit id="b8aff1882bc4744bec2ac3cf958c11aa9673615c" translate="yes" xml:space="preserve">
          <source>Does this seem a bit complicated? It &lt;strong&gt;should&lt;/strong&gt; be. There is no way that it would be correct to just &quot;fix&quot; it automatically. People need to know that their tags might have been changed.</source>
          <target state="translated">Это кажется немного сложным? Так и &lt;strong&gt;должно&lt;/strong&gt; быть. Нет никакого способа, чтобы было бы правильно просто &amp;laquo;исправить&amp;raquo; это автоматически. Люди должны знать, что их теги могли быть изменены.</target>
        </trans-unit>
        <trans-unit id="61f5489636e8756fab43669da94d9c6eb1552eb4" translate="yes" xml:space="preserve">
          <source>Doing a &lt;code&gt;git describe&lt;/code&gt; on a tag-name will just show the tag name:</source>
          <target state="translated">Выполнение &lt;code&gt;git describe&lt;/code&gt; для имени тега просто покажет имя тега:</target>
        </trans-unit>
        <trans-unit id="4b69a1e19eb2053bb173df0509ff0e4b7b042821" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t actually add the file(s), just show if they exist and/or will be ignored.</source>
          <target state="translated">Фактически не добавляйте файл (ы), просто покажите, существуют ли они и / или будут ли они проигнорированы.</target>
        </trans-unit>
        <trans-unit id="f54d87f7c2ff7fc56cad12eba47750dc91bee0b4" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t actually remove any file(s). Instead, just show if they exist in the index and would otherwise be removed by the command.</source>
          <target state="translated">На самом деле не удаляйте никакие файлы. Вместо этого просто покажите, существуют ли они в индексе и в противном случае были бы удалены командой.</target>
        </trans-unit>
        <trans-unit id="3c2e4a22e8795c4f8e08b8be88d75867a6768a7f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t actually remove any objects, only show those that would have been removed.</source>
          <target state="translated">На самом деле не удаляйте никакие объекты, а показывайте только те, которые были бы удалены.</target>
        </trans-unit>
        <trans-unit id="8a190a462c45d47d231a38f49fbd7f2f651bc199" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t actually remove anything, just show what would be done.</source>
          <target state="translated">На самом деле ничего не удаляйте, просто покажите, что будет сделано.</target>
        </trans-unit>
        <trans-unit id="788dd7013c132044903c150a0852f5a8328a9d58" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t add the file(s), but only refresh their stat() information in the index.</source>
          <target state="translated">Не добавляйте файлы, а только обновляйте их информацию stat () в индексе.</target>
        </trans-unit>
        <trans-unit id="f4886df5278511a526465d27599221df6718296c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allow recursing into subdirectories</source>
          <target state="translated">Не разрешать повторный переход в подкаталоги</target>
        </trans-unit>
        <trans-unit id="2b7948ae75b37ecb202b98940fbd260554ad9c60" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t apply changes to files matching the given path pattern. This can be useful when importing patchsets, where you want to exclude certain files or directories.</source>
          <target state="translated">Не применять изменения к файлам, соответствующим заданному шаблону пути. Это может быть полезно при импорте наборов исправлений, когда вы хотите исключить определенные файлы или каталоги.</target>
        </trans-unit>
        <trans-unit id="2f2b3b379c55090808ba7e10cb915259f5f77fb1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t bother trying to optimize the frontend to stick to one branch at a time during an import. Although doing so might be slightly faster for fast-import, it tends to increase the complexity of the frontend code considerably.</source>
          <target state="translated">Не пытайтесь оптимизировать интерфейс так, чтобы он придерживался одной ветки за раз во время импорта. Хотя это может быть немного быстрее для быстрого импорта, это имеет тенденцию значительно увеличивать сложность кода внешнего интерфейса.</target>
        </trans-unit>
        <trans-unit id="9fcb0638343c39672840bc9fb655ac9cf336ccdb" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t check for &lt;code&gt;gitcvs.enabled&lt;/code&gt; in config. You also have to specify a list of allowed directories (see below) if you want to use this option.</source>
          <target state="translated">Не проверяйте &lt;code&gt;gitcvs.enabled&lt;/code&gt; в конфигурации. Вы также должны указать список разрешенных каталогов (см. Ниже), если хотите использовать эту опцию.</target>
        </trans-unit>
        <trans-unit id="f17e0ba24864a0b6291f2e5b252834a0764b0842" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t checkout new files, only refresh files already checked out.</source>
          <target state="translated">Не извлекайте новые файлы, а только обновляйте уже извлеченные файлы.</target>
        </trans-unit>
        <trans-unit id="22dcca7d230068e332b541f07dc3e71c28dc5b04" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t clone any tags, and set &lt;code&gt;remote.&amp;lt;remote&amp;gt;.tagOpt=--no-tags&lt;/code&gt; in the config, ensuring that future &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt; operations won&amp;rsquo;t follow any tags. Subsequent explicit tag fetches will still work, (see &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;).</source>
          <target state="translated">Не клонируйте никакие теги и установите &lt;code&gt;remote.&amp;lt;remote&amp;gt;.tagOpt=--no-tags&lt;/code&gt; в конфигурации, гарантируя, что будущие операции &lt;code&gt;git pull&lt;/code&gt; и &lt;code&gt;git fetch&lt;/code&gt; не будут следовать никаким тегам. Последующие явные выборки тегов по-прежнему будут работать (см. &lt;a href=&quot;git-fetch&quot;&gt;Git-fetch [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3928941c430ea9498986b54cb54f9b256c71e581" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t confuse that object with the file &lt;code&gt;hello&lt;/code&gt; itself. The object is literally just those specific &lt;strong&gt;contents&lt;/strong&gt; of the file, and however much you later change the contents in file &lt;code&gt;hello&lt;/code&gt;, the object we just looked at will never change. Objects are immutable.</source>
          <target state="translated">Не путайте этот объект с самим файлом &lt;code&gt;hello&lt;/code&gt; . Объект буквально представляет собой конкретное &lt;strong&gt;содержимое&lt;/strong&gt; файла, и сколько бы вы впоследствии ни изменили содержимое в файле &lt;code&gt;hello&lt;/code&gt; , объект, который мы только что рассмотрели, никогда не изменится. Объекты неизменны.</target>
        </trans-unit>
        <trans-unit id="cf554901f1ba37dc7b685eec286604a92a0846c0" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t look in the index when undertaking the checks. This can be used to debug why a path became tracked by e.g. &lt;code&gt;git add .&lt;/code&gt; and was not ignored by the rules as expected by the user or when developing patterns including negation to match a path previously added with &lt;code&gt;git add -f&lt;/code&gt;.</source>
          <target state="translated">Не заглядывайте в указатель при проведении проверок. Это можно использовать для отладки, почему путь отслеживался, например, с помощью &lt;code&gt;git add .&lt;/code&gt; и не игнорировался правилами, как ожидалось пользователем, или при разработке шаблонов, включая отрицание, для соответствия пути, ранее добавленному с помощью &lt;code&gt;git add -f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a869b3f77007c08fe64b3ee7ff33b9bfbbe7c94" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t match the pattern in binary files.</source>
          <target state="translated">Не соответствовать шаблону в двоичных файлах.</target>
        </trans-unit>
        <trans-unit id="5a5ec41a36a96759ae5f2ddb0abb3aacee88e9b9" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t output anything, just set exit status. This is only valid with a single pathname.</source>
          <target state="translated">Ничего не выводите, просто установите статус выхода. Это действительно только для одного пути.</target>
        </trans-unit>
        <trans-unit id="c7bdd135c2e86877ecc2a31a6eaa651f0cae6dc5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t print anything to standard output. This form is primarily meant to allow the caller to test the exit status to see if a range of objects is fully connected (or not). It is faster than redirecting stdout to &lt;code&gt;/dev/null&lt;/code&gt; as the output does not have to be formatted.</source>
          <target state="translated">Не печатайте ничего на стандартный вывод. Эта форма в первую очередь предназначена для того, чтобы позволить вызывающему абоненту проверить статус выхода, чтобы увидеть, полностью ли подключен (или нет) диапазон объектов. Это быстрее, чем перенаправление stdout в &lt;code&gt;/dev/null&lt;/code&gt; ,так как вывод не нужно форматировать.</target>
        </trans-unit>
        <trans-unit id="0fe178924f571848754ae3ca5c4cf62bf5caeff8" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t prompt before each invocation of the merge resolution program. This is the default if the merge resolution program is explicitly specified with the &lt;code&gt;--tool&lt;/code&gt; option or with the &lt;code&gt;merge.tool&lt;/code&gt; configuration variable.</source>
          <target state="translated">Не запрашивать перед каждым вызовом программы разрешения слияния. Это значение по умолчанию, если программа разрешения слияния явно указана с параметром &lt;code&gt;--tool&lt;/code&gt; или с переменной конфигурации &lt;code&gt;merge.tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa836ce110cb6ce4b0a545e26c40cb721f663696" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t require an exact match if given an SVN revision, instead find the commit corresponding to the state of the SVN repository (on the current branch) at the specified revision.</source>
          <target state="translated">Не требуйте точного совпадения, если дана ревизия SVN, вместо этого найдите фиксацию, соответствующую состоянию репозитория SVN (в текущей ветке) в указанной ревизии.</target>
        </trans-unit>
        <trans-unit id="30faa3ecbc3ccb0ab260167231bedadc40f9ae9d" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t require an exact match if given an SVN revision; if there is not an exact match return the closest match searching forward in the history.</source>
          <target state="translated">Не требовать точного совпадения, если дана ревизия SVN; если нет точного совпадения, вернуть ближайшее совпадение, ищущее вперед в истории.</target>
        </trans-unit>
        <trans-unit id="ef2daf7d2683c0bf520ff3f8d38713d17a81ee22" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t require objects present in packs from alternate object directories to be present in local packs.</source>
          <target state="translated">Не требуется, чтобы объекты, находящиеся в пакетах из альтернативных каталогов объектов, присутствовали в локальных пакетах.</target>
        </trans-unit>
        <trans-unit id="e1e770659b3cd4fc8fd1b8c1f885e57fa2890f04" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t rescan the working directory for changes after the tool finishes execution.</source>
          <target state="translated">Не выполняйте повторное сканирование рабочего каталога на предмет изменений после завершения работы инструмента.</target>
        </trans-unit>
        <trans-unit id="1955458ea299c15696f62795bf10129efdff9000" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the standard ignore rules (see &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;), but still use the ignore rules given with &lt;code&gt;-e&lt;/code&gt; options from the command line. This allows removing all untracked files, including build products. This can be used (possibly in conjunction with &lt;code&gt;git restore&lt;/code&gt; or &lt;code&gt;git reset&lt;/code&gt;) to create a pristine working directory to test a clean build.</source>
          <target state="translated">Не используйте стандартные правила игнорирования (см. &lt;a href=&quot;gitignore&quot;&gt;Gitignore [5]&lt;/a&gt; ), но все же используйте правила игнорирования, заданные с опциями &lt;code&gt;-e&lt;/code&gt; из командной строки. Это позволяет удалить все неотслеживаемые файлы, включая продукты сборки. Это можно использовать (возможно, вместе с &lt;code&gt;git restore&lt;/code&gt; или &lt;code&gt;git reset&lt;/code&gt; ) для создания нетронутого рабочего каталога для проверки чистой сборки.</target>
        </trans-unit>
        <trans-unit id="95e3ebfd9dfe40579e0e7bb35d42c2f1d1029d68" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t worry about the fact that the file that the &lt;code&gt;HEAD&lt;/code&gt; link points to doesn&amp;rsquo;t even exist yet &amp;mdash; you haven&amp;rsquo;t created the commit that will start your &lt;code&gt;HEAD&lt;/code&gt; development branch yet.</source>
          <target state="translated">Не беспокойтесь о том, что файл, на который указывает ссылка &lt;code&gt;HEAD&lt;/code&gt; , еще даже не существует - вы еще не создали коммит, который запустит вашу ветку разработки &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1da5527fefac2ac016e63872cd219c0c8262438e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t write objects with broken content or links.</source>
          <target state="translated">Не пишите объекты с неработающим содержимым или ссылками.</target>
        </trans-unit>
        <trans-unit id="e7a1a9f0e0a5a192e64b7762fcd9606f05d43ef7" translate="yes" xml:space="preserve">
          <source>Dotted Range Notations</source>
          <target state="translated">Нотации точечного диапазона</target>
        </trans-unit>
        <trans-unit id="fe1f0cdd2295f0fc3d04581839d09ed55a16a282" translate="yes" xml:space="preserve">
          <source>Download from a remote Git repository via HTTP</source>
          <target state="translated">Загрузка из удалённого Git-репозитория по HTTP</target>
        </trans-unit>
        <trans-unit id="836b914c612e9d15306b7c7c51825eb694378b40" translate="yes" xml:space="preserve">
          <source>Download objects and refs from another repository</source>
          <target state="translated">Скачать объекты и ссылки из другого репозитория</target>
        </trans-unit>
        <trans-unit id="8d0359221c31b38a499fab5fd3539fb10094e3f5" translate="yes" xml:space="preserve">
          <source>Downloader from http and https URL first obtains the topmost commit object name from the remote site by looking at the specified refname under &lt;code&gt;repo.git/refs/&lt;/code&gt; directory, and then tries to obtain the commit object by downloading from &lt;code&gt;repo.git/objects/xx/xxx...&lt;/code&gt; using the object name of that commit object. Then it reads the commit object to find out its parent commits and the associate tree object; it repeats this process until it gets all the necessary objects. Because of this behavior, they are sometimes also called &lt;code&gt;commit walkers&lt;/code&gt;.</source>
          <target state="translated">Загрузчик из URL-адресов http и https сначала получает имя самого верхнего объекта фиксации с удаленного сайта, просматривая указанное имя ссылки в &lt;code&gt;repo.git/refs/&lt;/code&gt; , а затем пытается получить объект фиксации путем загрузки из &lt;code&gt;repo.git/objects/xx/xxx...&lt;/code&gt; используя имя объекта этого объекта фиксации. Затем он читает объект фиксации, чтобы определить его родительский коммит и связанный объект дерева; он повторяет этот процесс, пока не получит все необходимые объекты. Из-за такого поведения их иногда также называют &amp;laquo; &lt;code&gt;commit walkers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="412ca0a4593b6bb25e0ce340f46f24955e9564f1" translate="yes" xml:space="preserve">
          <source>Downloads a remote Git repository via HTTP.</source>
          <target state="translated">Скачивание удалённого Git-репозитория по HTTP.</target>
        </trans-unit>
        <trans-unit id="d85415280c4796b4419737c81adcd5229edbb60b" translate="yes" xml:space="preserve">
          <source>Draw a text-based graphical representation of the commit history on the left hand side of the output. This may cause extra lines to be printed in between commits, in order for the graph history to be drawn properly. Cannot be combined with &lt;code&gt;--no-walk&lt;/code&gt;.</source>
          <target state="translated">Нарисуйте текстовое графическое представление истории фиксации в левой части вывода. Это может привести к тому, что между фиксациями будут напечатаны дополнительные строки, чтобы история графика отображалась правильно. Не может сочетаться с &lt;code&gt;--no-walk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9a3e66d069ffbfcdae00ac848d80a3d7117cd5f" translate="yes" xml:space="preserve">
          <source>Driving a bisection automatically</source>
          <target state="translated">Автоматическое вождение бисекса</target>
        </trans-unit>
        <trans-unit id="8c3114460a846e0f3462ade2fcc59d06117961f0" translate="yes" xml:space="preserve">
          <source>Driving a bisection manually</source>
          <target state="translated">Вождение бисекса вручную</target>
        </trans-unit>
        <trans-unit id="cae458d58531d4d41393b21599b7e5c5946ef1f2" translate="yes" xml:space="preserve">
          <source>Dry run. Check the pack file without actually unpacking the objects.</source>
          <target state="translated">Сухой прогон.Проверьте файл пакета без фактической распаковки объектов.</target>
        </trans-unit>
        <trans-unit id="5c890eaf0d21c06618fd87da2696a29e291c6564" translate="yes" xml:space="preserve">
          <source>Due to historical reasons a relative &lt;code&gt;filename&lt;/code&gt; is first searched relative to the current directory for &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;clone&lt;/code&gt; and relative to the root of the working tree for &lt;code&gt;fetch&lt;/code&gt;. If &lt;code&gt;filename&lt;/code&gt; is not found, it is searched like any other command in &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">По историческим причинам относительное &lt;code&gt;filename&lt;/code&gt; сначала ищется относительно текущего каталога для &lt;code&gt;init&lt;/code&gt; и &lt;code&gt;clone&lt;/code&gt; и относительно корня рабочего дерева для &lt;code&gt;fetch&lt;/code&gt; . Если &lt;code&gt;filename&lt;/code&gt; не найдено, оно ищется как любая другая команда в &lt;code&gt;$PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ad95c4fe8f7afde6130611f6d6b430e519d5657" translate="yes" xml:space="preserve">
          <source>Due to limitations of the current implementation, some configuration variables do not take effect until after the initial fetch and checkout. Configuration variables known to not take effect are: &lt;code&gt;remote.&amp;lt;name&amp;gt;.mirror&lt;/code&gt; and &lt;code&gt;remote.&amp;lt;name&amp;gt;.tagOpt&lt;/code&gt;. Use the corresponding &lt;code&gt;--mirror&lt;/code&gt; and &lt;code&gt;--no-tags&lt;/code&gt; options instead.</source>
          <target state="translated">Из-за ограничений текущей реализации некоторые переменные конфигурации не вступают в силу до тех пор, пока не будут выполнены первоначальная выборка и проверка. Известно, что переменные конфигурации не вступают в силу: &lt;code&gt;remote.&amp;lt;name&amp;gt;.mirror&lt;/code&gt; и &lt;code&gt;remote.&amp;lt;name&amp;gt;.tagOpt&lt;/code&gt; . &lt;code&gt;--mirror&lt;/code&gt; используйте соответствующие параметры --mirror и --no &lt;code&gt;--no-tags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d45f204a58b5658a36a8173fede6b8a78f6ae4f4" translate="yes" xml:space="preserve">
          <source>Due to the immutable nature of Git objects, old objects can be archived into shared, read-only directories. This variable specifies a &quot;:&quot; separated (on Windows &quot;;&quot; separated) list of Git object directories which can be used to search for Git objects. New objects will not be written to these directories.</source>
          <target state="translated">Благодаря неизменной природе объектов Git'а,старые объекты могут быть заархивированы в общие,доступные только для чтения каталоги.Эта переменная задаёт разделенный &quot;:&quot; (на Windows &quot;;&quot; разделенный)список каталогов объектов Git'а,которые могут быть использованы для поиска объектов Git'а.Новые объекты в эти каталоги записываться не будут.</target>
        </trans-unit>
        <trans-unit id="0f5d7ad945110923c581691c469acfd9049cddb1" translate="yes" xml:space="preserve">
          <source>Due to the lack of accurate tree information (arising from constructing fake ancestors with the limited information available in patches), directory rename detection is disabled in the apply backend. Disabled directory rename detection means that if one side of history renames a directory and the other adds new files to the old directory, then the new files will be left behind in the old directory without any warning at the time of rebasing that you may want to move these files into the new directory.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
