<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="go">
    <body>
      <group id="go">
        <trans-unit id="4729b3f8428d27fe7962c988912499dee821e961" translate="yes" xml:space="preserve">
          <source>Close finishes writing the zip file by writing the central directory. It does not close the underlying writer.</source>
          <target state="translated">Закрытие завершает запись zip-файла,записывая центральный каталог.При этом не закрывается лежащий в основе записывающее устройство.</target>
        </trans-unit>
        <trans-unit id="f8c5f7e41ae46e45fdb752f5060f8f1c692afd60" translate="yes" xml:space="preserve">
          <source>Close flushes and closes the writer.</source>
          <target state="translated">Закрывает смыв и закрывает писателя.</target>
        </trans-unit>
        <trans-unit id="a176e6e0b76092540fa57054871f1d181440c357" translate="yes" xml:space="preserve">
          <source>Close immediately closes all active net.Listeners and any connections in state StateNew, StateActive, or StateIdle. For a graceful shutdown, use Shutdown.</source>
          <target state="translated">Закрыть немедленно закрывает все активные net.Listeners и любые соединения в StateNew,StateActive или StateIdle.Для грациозного завершения работы используйте функцию Shutdown (Выключение).</target>
        </trans-unit>
        <trans-unit id="fe447e0ee4298c5937baf1a06d93345aa464fbd5" translate="yes" xml:space="preserve">
          <source>Close returns any error returned from closing the Server's underlying Listener(s).</source>
          <target state="translated">Close возвращает любую ошибку,возвращенную при закрытии основного слушателя(ов)сервера.</target>
        </trans-unit>
        <trans-unit id="ebef25a1a35880c50df3b65075b191c54c634f29" translate="yes" xml:space="preserve">
          <source>Close returns the connection to the connection pool. All operations after a Close will return with ErrConnDone. Close is safe to call concurrently with other operations and will block until all other operations finish. It may be useful to first cancel any used context and then call close directly after.</source>
          <target state="translated">Закрыть возвращает соединение в пул соединений.Все операции после Close возвращаются с помощью ErrConnDone.Close безопасно вызывать одновременно с другими операциями и будет блокировать до тех пор,пока все остальные операции не закончатся.Может быть полезно сначала отменить любой использованный контекст,а затем сразу после этого вызвать функцию Закрыть.</target>
        </trans-unit>
        <trans-unit id="37eb62a0940cfdcee1af7061b837f9799f402796" translate="yes" xml:space="preserve">
          <source>Close shuts down the server and blocks until all outstanding requests on this server have completed.</source>
          <target state="translated">Закрывает сервер и блокирует его до тех пор,пока все оставшиеся запросы на этом сервере не будут завершены.</target>
        </trans-unit>
        <trans-unit id="f8fbcf4b32e3ff8e88655f1d0a5b7d15a237aeb7" translate="yes" xml:space="preserve">
          <source>Close stops listening on the TCP address. Already Accepted connections are not closed.</source>
          <target state="translated">Закрытие останавливает прослушивание TCP-адреса.Уже принятые соединения не закрыты.</target>
        </trans-unit>
        <trans-unit id="d08ec13311a2751b4b2525f7b1f553c0ef38c594" translate="yes" xml:space="preserve">
          <source>Close stops listening on the Unix address. Already accepted connections are not closed.</source>
          <target state="translated">Закрытие прекращает прослушивание Unix-адреса.Уже принятые соединения не закрыты.</target>
        </trans-unit>
        <trans-unit id="389d20cf359b73e0e7980ec6fac9aa975d57569a" translate="yes" xml:space="preserve">
          <source>CloseClientConnections closes any open HTTP connections to the test Server.</source>
          <target state="translated">CloseClientConnections закрывает любые открытые HTTP-соединения с тестовым сервером.</target>
        </trans-unit>
        <trans-unit id="261f4fda459d0516a122cc5d4396c6dc486f9e9c" translate="yes" xml:space="preserve">
          <source>CloseIdleConnections closes any connections on its Transport which were previously connected from previous requests but are now sitting idle in a &quot;keep-alive&quot; state. It does not interrupt any connections currently in use.</source>
          <target state="translated">CloseIdleConnections закрывает все соединения на своем Транспорте,которые были ранее соединены с предыдущими запросами,но теперь находятся в бездействующем состоянии.Он не прерывает текущие соединения.</target>
        </trans-unit>
        <trans-unit id="98cdec9e3ed766ae575089db46108dde804402bf" translate="yes" xml:space="preserve">
          <source>CloseIdleConnections closes any connections which were previously connected from previous requests but are now sitting idle in a &quot;keep-alive&quot; state. It does not interrupt any connections currently in use.</source>
          <target state="translated">CloseIdleConnections закрывает все соединения,которые ранее были подключены из предыдущих запросов,но теперь находятся в состоянии &quot;keep-alive&quot;.Он не прерывает текущие соединения.</target>
        </trans-unit>
        <trans-unit id="cd124a0e692a348dba461a3358554e58e81ecbd1" translate="yes" xml:space="preserve">
          <source>CloseRead shuts down the reading side of the TCP connection. Most callers should just use Close.</source>
          <target state="translated">CloseRead отключает сторону считывания TCP-соединения.Большинство абонентов должны просто использовать Close.</target>
        </trans-unit>
        <trans-unit id="44bd7cea9ee27035c3ae1c56d08cfc3f4f5d4af4" translate="yes" xml:space="preserve">
          <source>CloseRead shuts down the reading side of the Unix domain connection. Most callers should just use Close.</source>
          <target state="translated">CloseRead отключает сторону чтения соединения с доменом Unix.Большинство абонентов должны просто использовать Close.</target>
        </trans-unit>
        <trans-unit id="c99ee46f4965c6ae12155ff0c3acac929ea2d2ba" translate="yes" xml:space="preserve">
          <source>CloseWithError always returns nil.</source>
          <target state="translated">CloseWithError всегда возвращает ноль.</target>
        </trans-unit>
        <trans-unit id="7cb57262be19b34a83137a915ff126b817e8cd84" translate="yes" xml:space="preserve">
          <source>CloseWithError closes the reader; subsequent writes to the write half of the pipe will return the error err.</source>
          <target state="translated">CloseWithError закрывает читатель;последующая запись в записывающую половину трубы вернет ошибку.</target>
        </trans-unit>
        <trans-unit id="323f38f99d402fc8898abc494103623650f844e1" translate="yes" xml:space="preserve">
          <source>CloseWithError closes the writer; subsequent reads from the read half of the pipe will return no bytes and the error err, or EOF if err is nil.</source>
          <target state="translated">CloseWithError закрывает записывающее устройство;последующие чтения из прочитанной половины трубы не возвращают ни одного байта,а ошибка err,или EOF,если err равен нулю.</target>
        </trans-unit>
        <trans-unit id="ff06e07199eeb62edb44267acc81531d3b78ba33" translate="yes" xml:space="preserve">
          <source>CloseWithError never overwrites the previous error if it exists and always returns nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cb9bc4e7dc627b7e88dd6fc70819d95287b7de" translate="yes" xml:space="preserve">
          <source>CloseWrite shuts down the writing side of the TCP connection. Most callers should just use Close.</source>
          <target state="translated">CloseWrite отключает сторону записи TCP-соединения.Большинство абонентов должны просто использовать Close.</target>
        </trans-unit>
        <trans-unit id="8b5fa14df50780ec1f98f4b1599b904896412a44" translate="yes" xml:space="preserve">
          <source>CloseWrite shuts down the writing side of the Unix domain connection. Most callers should just use Close.</source>
          <target state="translated">CloseWrite отключает сторону записи Unix-домена.Большинство абонентов должны просто использовать Close.</target>
        </trans-unit>
        <trans-unit id="12c02b4b8ced685856a49bdd3fa95819cddecdb4" translate="yes" xml:space="preserve">
          <source>CloseWrite shuts down the writing side of the connection. It should only be called once the handshake has completed and does not call CloseWrite on the underlying connection. Most callers should just use Close.</source>
          <target state="translated">CloseWrite отключает сторону записи соединения.Оно должно быть вызвано только после завершения рукопожатия и не вызывает CloseWrite на основной стороне соединения.Большинство абонентов должны просто использовать Close (Закрыть).</target>
        </trans-unit>
        <trans-unit id="025c9e3cff2e6d4f799242ed81fe111ea5df8d42" translate="yes" xml:space="preserve">
          <source>Closer is the interface that wraps the basic Close method.</source>
          <target state="translated">Ближе-интерфейс,обертывающий основной метод Close.</target>
        </trans-unit>
        <trans-unit id="bf86a4428400033e41e83adaf8fcd42c758c9a66" translate="yes" xml:space="preserve">
          <source>Cmd is a convenience method that sends a command after waiting its turn in the pipeline. The command text is the result of formatting format with args and appending \r\n. Cmd returns the id of the command, for use with StartResponse and EndResponse.</source>
          <target state="translated">Cmd-это удобный метод,который посылает команду после ожидания ее очереди в трубопроводе.Текст команды является результатом форматирования с помощью аргументов и добавления \r\n.Cmd возвращает id команды для использования с StartResponse и EndResponse.</target>
        </trans-unit>
        <trans-unit id="c4df69b916cd12f7de468263676e94c5c75d74be" translate="yes" xml:space="preserve">
          <source>Cmd represents an external command being prepared or run.</source>
          <target state="translated">Cmd представляет собой внешнюю команду,которая готовится или запускается.</target>
        </trans-unit>
        <trans-unit id="8341f2d7cc5348428398c452871f044231d072b1" translate="yes" xml:space="preserve">
          <source>Cmd.CombinedOutput</source>
          <target state="translated">Cmd.CombinedOutput</target>
        </trans-unit>
        <trans-unit id="b49f432e04db8bb6f0ff26554d0c04cd2474b188" translate="yes" xml:space="preserve">
          <source>Cmd.Output</source>
          <target state="translated">Cmd.Output</target>
        </trans-unit>
        <trans-unit id="0d9082730686869c07fbf083f9d88bceb2781e29" translate="yes" xml:space="preserve">
          <source>Cmd.Run</source>
          <target state="translated">Cmd.Run</target>
        </trans-unit>
        <trans-unit id="58d8e5abab254c9f803a0fbf81ec5a80f295d3f6" translate="yes" xml:space="preserve">
          <source>Cmd.Start</source>
          <target state="translated">Cmd.Start</target>
        </trans-unit>
        <trans-unit id="7d1c537c3fedeb55a89bcf9247fbaee7db539a47" translate="yes" xml:space="preserve">
          <source>Cmd.StderrPipe</source>
          <target state="translated">Cmd.StderrPipe</target>
        </trans-unit>
        <trans-unit id="e1e9157b17d06c02c7b6351858c7dc306f264ffa" translate="yes" xml:space="preserve">
          <source>Cmd.StdinPipe</source>
          <target state="translated">Cmd.StdinPipe</target>
        </trans-unit>
        <trans-unit id="426cc9ae5b0f1bc8c33ffa706427366531644c95" translate="yes" xml:space="preserve">
          <source>Cmd.StdoutPipe</source>
          <target state="translated">Cmd.StdoutPipe</target>
        </trans-unit>
        <trans-unit id="7da7ae25e3ce7a764681c94e7a21a14faa2a048f" translate="yes" xml:space="preserve">
          <source>Cmdline responds with the running program's command line, with arguments separated by NUL bytes. The package initialization registers it as /debug/pprof/cmdline.</source>
          <target state="translated">Cmdline отвечает командной строкой выполняющейся программы,аргументы которой разделены NUL байтами.Инициализация пакета регистрирует его как /debug/pprof/cmdline.</target>
        </trans-unit>
        <trans-unit id="e499091b6f0f3957334468fbd916d761cc79bbf6" translate="yes" xml:space="preserve">
          <source>Cmp compares x and y and returns:</source>
          <target state="translated">Cmp сравнивает x и y и возвращает:</target>
        </trans-unit>
        <trans-unit id="f8bfa3d3867edbba78ae419fddd813026c9ccc33" translate="yes" xml:space="preserve">
          <source>CmpAbs compares the absolute values of x and y and returns:</source>
          <target state="translated">CmpAbs сравнивает абсолютные значения x и y и возвращает:</target>
        </trans-unit>
        <trans-unit id="57049c5e8c996230fc39d709b36268d07f37c357" translate="yes" xml:space="preserve">
          <source>CmsgLen returns the value to store in the Len field of the Cmsghdr structure, taking into account any necessary alignment.</source>
          <target state="translated">CmsgLen возвращает значение для хранения в поле Len структуры Cmsghdr с учетом любого необходимого выравнивания.</target>
        </trans-unit>
        <trans-unit id="3ab8b85fb5b07863e8d88db990fae36dc884bec8" translate="yes" xml:space="preserve">
          <source>CmsgSpace returns the number of bytes an ancillary element with payload of the passed data length occupies.</source>
          <target state="translated">CmsgSpace возвращает количество байт,которое занимает вспомогательный элемент с полезной нагрузкой длины передаваемых данных.</target>
        </trans-unit>
        <trans-unit id="48325d7b0e0596e2c4e51ec147f486ed8c008263" translate="yes" xml:space="preserve">
          <source>Code Effect Property: &quot;... only code specified by the template author should run as a result of injecting the template output into a page and all code specified by the template author should run as a result of the same.&quot;</source>
          <target state="translated">Код Эффект Свойство:&quot;...только код,указанный автором шаблона,должен выполняться в результате внедрения вывода шаблона на страницу,и весь код,указанный автором шаблона,должен выполняться в результате того же самого&quot;.</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="6b14d7cd0be2bfa55cd088eb8efaed3cb2199731" translate="yes" xml:space="preserve">
          <source>Color can convert itself to alpha-premultiplied 16-bits per channel RGBA. The conversion may be lossy.</source>
          <target state="translated">Цвет может преобразовываться в альфа-преумножаемый 16 бит на канал RGBA.Преобразование может быть с потерями.</target>
        </trans-unit>
        <trans-unit id="9fd162f1f3146515349a168ad0c0bee532290150" translate="yes" xml:space="preserve">
          <source>ColorModel implements the Image interface.</source>
          <target state="translated">ColorModel реализует интерфейс изображения.</target>
        </trans-unit>
        <trans-unit id="98107aade8283409c4e0728cc2278d75e786fabe" translate="yes" xml:space="preserve">
          <source>ColumnConverter may be optionally implemented by Stmt if the statement is aware of its own columns' types and can convert from any type to a driver Value.</source>
          <target state="translated">ColumnConverter может быть опционально реализован Stmt,если оператору известны собственные типы колонок и он может преобразовывать их из любого типа в Значение драйвера.</target>
        </trans-unit>
        <trans-unit id="d5c3da66a9ea9f5f89916fe885dde7b78b155333" translate="yes" xml:space="preserve">
          <source>ColumnType contains the name and type of a column.</source>
          <target state="translated">ColumnType содержит название и тип колонки.</target>
        </trans-unit>
        <trans-unit id="f1efdea11843f07d3a2895f7ecdd3254afb2b05f" translate="yes" xml:space="preserve">
          <source>ColumnTypes returns column information such as column type, length, and nullable. Some information may not be available from some drivers.</source>
          <target state="translated">ColumnTypes возвращает информацию о типе колонки,такую как тип колонки,ее длина и nullable.Некоторая информация может быть недоступна из некоторых драйверов.</target>
        </trans-unit>
        <trans-unit id="a7b0a72c46f57d4aaacd8fb638f17124f271db49" translate="yes" xml:space="preserve">
          <source>Columns returns the column names. Columns returns an error if the rows are closed.</source>
          <target state="translated">Колонки возвращают названия колонок.Колонки возвращают ошибку,если строки закрыты.</target>
        </trans-unit>
        <trans-unit id="ef0c9247ce98d2d969ab4480bf85645f18a4849a" translate="yes" xml:space="preserve">
          <source>Combination of fork and exec, careful to be thread safe.</source>
          <target state="translated">Комбинация вилки и исполнения,бережно относитесь к резьбе.</target>
        </trans-unit>
        <trans-unit id="7490336ab129f1a9b38c44a15f2efc1193a790bb" translate="yes" xml:space="preserve">
          <source>CombinedOutput runs the command and returns its combined standard output and standard error.</source>
          <target state="translated">CombinedOutput выполняет команду и возвращает ее комбинированный стандартный вывод и стандартную ошибку.</target>
        </trans-unit>
        <trans-unit id="ba546d35dfd34c127cd8bc57f35ce0b69f3c2efb" translate="yes" xml:space="preserve">
          <source>Comma is the field delimiter.</source>
          <target state="translated">Запятая-это разделитель полей.</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="9331e1a8ab2aef9b980540768d06019630abf1c7" translate="yes" xml:space="preserve">
          <source>Command (Environment)</source>
          <target state="translated">Командование (Окружающая среда)</target>
        </trans-unit>
        <trans-unit id="c2efc4b10527a5dc4a84c585a3102ee37add55b4" translate="yes" xml:space="preserve">
          <source>Command line flag syntax</source>
          <target state="translated">Синтаксис флага командной строки</target>
        </trans-unit>
        <trans-unit id="63fa526b0ed74d3db6d8290c146d52ec2eac85fb" translate="yes" xml:space="preserve">
          <source>Command returns the Cmd struct to execute the named program with the given arguments.</source>
          <target state="translated">Команда возвращает структуру Cmd для выполнения именованной программы с заданными аргументами.</target>
        </trans-unit>
        <trans-unit id="3abae9e919fccff46e1815da877737ecf731b82f" translate="yes" xml:space="preserve">
          <source>CommandContext</source>
          <target state="translated">CommandContext</target>
        </trans-unit>
        <trans-unit id="e0905d26f91536a32a803b5ba92c26b9a1cc54f0" translate="yes" xml:space="preserve">
          <source>CommandContext is like Command but includes a context.</source>
          <target state="translated">CommandContext похож на Command,но включает в себя контекст.</target>
        </trans-unit>
        <trans-unit id="4fe0d3f2a541495d49598b4c3afabfa5ee1e04f4" translate="yes" xml:space="preserve">
          <source>CommandLine is the default set of command-line flags, parsed from os.Args. The top-level functions such as BoolVar, Arg, and so on are wrappers for the methods of CommandLine.</source>
          <target state="translated">CommandLine-это набор флагов командной строки по умолчанию,разобранный из os.Args.Функции верхнего уровня,такие как BoolVar,Arg и т.д.являются обёртками для методов CommandLine.</target>
        </trans-unit>
        <trans-unit id="b87781df7cecba61ce8de025314ef45104db43ee" translate="yes" xml:space="preserve">
          <source>CommandNode holds a command (a pipeline inside an evaluating action).</source>
          <target state="translated">CommandNode содержит команду (конвейер внутри оценивающего действия).</target>
        </trans-unit>
        <trans-unit id="72ffbd722c89aeb2c836acf3f0c44afff50be407" translate="yes" xml:space="preserve">
          <source>CommentMap</source>
          <target state="translated">CommentMap</target>
        </trans-unit>
        <trans-unit id="a75531c33f09b6698d805430cabdb3a738714d38" translate="yes" xml:space="preserve">
          <source>Comments returns the list of comment groups in the comment map. The result is sorted in source order.</source>
          <target state="translated">Комментарии возвращает список групп комментариев на карте комментариев.Результат отсортирован в исходном порядке.</target>
        </trans-unit>
        <trans-unit id="75dbcaa738947f57e870bbe9a0b593ed1429157b" translate="yes" xml:space="preserve">
          <source>Commit commits the transaction.</source>
          <target state="translated">Обязательство совершить сделку.</target>
        </trans-unit>
        <trans-unit id="ead23952f81edf09bb71f62ad1b348959ed375c9" translate="yes" xml:space="preserve">
          <source>Common HTTP methods.</source>
          <target state="translated">Общие методы HTTP.</target>
        </trans-unit>
        <trans-unit id="88d67b2df02a2b0f12c80994d6833df71942c623" translate="yes" xml:space="preserve">
          <source>Common durations. There is no definition for units of Day or larger to avoid confusion across daylight savings time zone transitions.</source>
          <target state="translated">Общая продолжительность.Нет определения единиц дня и больше,чтобы избежать путаницы при переходе из одного светового пояса в другой.</target>
        </trans-unit>
        <trans-unit id="184f39007c639489786070aa25bca08ce4764bc0" translate="yes" xml:space="preserve">
          <source>CommonType holds elements of all types. It is a historical artifact, kept for binary compatibility and exported only for the benefit of the package's encoding of type descriptors. It is not intended for direct use by clients.</source>
          <target state="translated">CommonType содержит элементы всех типов.Это исторический артефакт,хранящийся для бинарной совместимости и экспортируемый только для пользы от кодировки дескрипторов типов пакета.Он не предназначен для непосредственного использования клиентами.</target>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">Community</target>
        </trans-unit>
        <trans-unit id="d41102eb4b9de6b7bae3f5e306780351400ba6cc" translate="yes" xml:space="preserve">
          <source>Compact appends to dst the JSON-encoded src with insignificant space characters elided.</source>
          <target state="translated">Компактное приложение к dst JSON-кодированному src с незначительными пробелами элидированных символов.</target>
        </trans-unit>
        <trans-unit id="4b1b7e3488c6acd7e9ce9eb7f6b22d083ee3ad86" translate="yes" xml:space="preserve">
          <source>Comparable reports whether values of type T are comparable.</source>
          <target state="translated">Сравнительные отчеты о том,сопоставимы ли значения типа T.</target>
        </trans-unit>
        <trans-unit id="8d105cf44d3926289e65c1c83d8e37cb23fd049e" translate="yes" xml:space="preserve">
          <source>Compare</source>
          <target state="translated">Compare</target>
        </trans-unit>
        <trans-unit id="a87372512a9a5360900cc7c5a33b6e3e93e823d3" translate="yes" xml:space="preserve">
          <source>Compare (Search)</source>
          <target state="translated">Сравнить (Поиск)</target>
        </trans-unit>
        <trans-unit id="ad63be5eee8e54dee7704f35acb0ba003f3c69ff" translate="yes" xml:space="preserve">
          <source>Compare is included only for symmetry with package bytes. It is usually clearer and always faster to use the built-in string comparison operators ==, &amp;lt;, &amp;gt;, and so on.</source>
          <target state="translated">Сравнение включено только для симметрии с байтами пакета. Обычно проще и быстрее использовать встроенные операторы сравнения строк ==, &amp;lt;,&amp;gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="80addebf328bcb3bd2c3c1645d4d89e7132d58cd" translate="yes" xml:space="preserve">
          <source>Compare returns an integer comparing two byte slices lexicographically. The result will be 0 if a==b, -1 if a &amp;lt; b, and +1 if a &amp;gt; b. A nil argument is equivalent to an empty slice.</source>
          <target state="translated">Compare возвращает целое число, сравнивая лексикографически два байтовых среза. Результатом будет 0, если a == b, -1, если a &amp;lt;b, и +1, если a&amp;gt; b. Аргумент nil эквивалентен пустому срезу.</target>
        </trans-unit>
        <trans-unit id="5df35de4203e8da0393ad78d4e9938f7d7d27e38" translate="yes" xml:space="preserve">
          <source>Compare returns an integer comparing two strings lexicographically. The result will be 0 if a==b, -1 if a &amp;lt; b, and +1 if a &amp;gt; b.</source>
          <target state="translated">Compare возвращает целое число, сравнивая две строки лексикографически. Результатом будет 0, если a == b, -1, если a &amp;lt;b, и +1, если a&amp;gt; b.</target>
        </trans-unit>
        <trans-unit id="f8e32b8f4321d2754d7b192fb3758e3b419a9f9c" translate="yes" xml:space="preserve">
          <source>Compare returns the result of the comparison x op y. The comparison must be defined for the operands. If one of the operands is Unknown, the result is false.</source>
          <target state="translated">Сравнение возвращает результат сравнения x op y.Сравнение должно быть определено для операндов.Если один из операндов неизвестен,результат будет ложным.</target>
        </trans-unit>
        <trans-unit id="910ec23407bde52c30ee4b60de00ef973b43f80f" translate="yes" xml:space="preserve">
          <source>CompareAndSwapInt32 executes the compare-and-swap operation for an int32 value.</source>
          <target state="translated">CompareAndSwapInt32 выполняет операцию сравнения и замены для значения int32.</target>
        </trans-unit>
        <trans-unit id="45d6c43b2c49df7ae06cb50a00c7e8b8915268cf" translate="yes" xml:space="preserve">
          <source>CompareAndSwapInt64 executes the compare-and-swap operation for an int64 value.</source>
          <target state="translated">CompareAndSwapInt64 выполняет операцию сравнения и замены для значения int64.</target>
        </trans-unit>
        <trans-unit id="80d6539a495248c2ad93b44c9b160da516bc7385" translate="yes" xml:space="preserve">
          <source>CompareAndSwapPointer executes the compare-and-swap operation for a unsafe.Pointer value.</source>
          <target state="translated">CompareAndSwapPointer выполняет операцию сравнения и замены для небезопасного значения.Pointer.</target>
        </trans-unit>
        <trans-unit id="08b11a167dff4b888f467bc21d9300ca565d08f6" translate="yes" xml:space="preserve">
          <source>CompareAndSwapUint32 executes the compare-and-swap operation for a uint32 value.</source>
          <target state="translated">CompareAndSwapUint32 выполняет операцию сравнения и замены для значения uint32.</target>
        </trans-unit>
        <trans-unit id="e65fd9c97eea0a869d816095871991bfeac0d5f9" translate="yes" xml:space="preserve">
          <source>CompareAndSwapUint64 executes the compare-and-swap operation for a uint64 value.</source>
          <target state="translated">CompareAndSwapUint64 выполняет операцию сравнения и замены для значения uint64.</target>
        </trans-unit>
        <trans-unit id="fd8ad0ca49f8af09303cdda4c902f6a9b14029ce" translate="yes" xml:space="preserve">
          <source>CompareAndSwapUintptr executes the compare-and-swap operation for a uintptr value.</source>
          <target state="translated">CompareAndSwapUintptr выполняет операцию сравнения и замены для значения uintptr.</target>
        </trans-unit>
        <trans-unit id="e46ab4b32fa2f629f5362ccdb0c33a816b4b7aef" translate="yes" xml:space="preserve">
          <source>Compatibility: Any future changes to hash or crypto packages will endeavor to maintain compatibility with state encoded using previous versions. That is, any released versions of the packages should be able to decode data written with any previously released version, subject to issues such as security fixes. See the Go compatibility document for background: &lt;a href=&quot;https://golang.org/doc/go1compat&quot;&gt;https://golang.org/doc/go1compat&lt;/a&gt;</source>
          <target state="translated">Совместимость: любые будущие изменения хеш-пакетов или криптографических пакетов будут стремиться поддерживать совместимость с состоянием, закодированным с использованием предыдущих версий. То есть любые выпущенные версии пакетов должны иметь возможность декодировать данные, записанные с помощью любой ранее выпущенной версии, с учетом таких проблем, как исправления безопасности. См. Справочную информацию в документе о совместимости с Go: &lt;a href=&quot;https://golang.org/doc/go1compat&quot;&gt;https://golang.org/doc/go1compat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="954806623263eec83965435d4b03d56697b9e46d" translate="yes" xml:space="preserve">
          <source>Compatibility: Any future changes to the package will endeavor to maintain compatibility with streams encoded using previous versions. That is, any released version of this package should be able to decode data written with any previously released version, subject to issues such as security fixes. See the Go compatibility document for background: &lt;a href=&quot;https://golang.org/doc/go1compat&quot;&gt;https://golang.org/doc/go1compat&lt;/a&gt;</source>
          <target state="translated">Совместимость: любые будущие изменения в пакете будут направлены на поддержание совместимости с потоками, закодированными с использованием предыдущих версий. То есть любая выпущенная версия этого пакета должна иметь возможность декодировать данные, записанные с любой ранее выпущенной версией, с учетом таких проблем, как исправления безопасности. См. Справочную информацию в документе о совместимости с Go: &lt;a href=&quot;https://golang.org/doc/go1compat&quot;&gt;https://golang.org/doc/go1compat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0baebc95c01171c0c52e34f8d0b193a89bd2a16d" translate="yes" xml:space="preserve">
          <source>Compile compiles the regexp into a program to be executed. The regexp should have been simplified already (returned from re.Simplify).</source>
          <target state="translated">Скомпилируйте регенерацию в программу,которая будет выполняться.Регеxp уже должен был быть упрощен (возвращается из re.Simplify).</target>
        </trans-unit>
        <trans-unit id="5ebbdcb3f12368feddbe44f5bdd110e3044ea9e4" translate="yes" xml:space="preserve">
          <source>Compile parses a regular expression and returns, if successful, a Regexp object that can be used to match against text.</source>
          <target state="translated">Скомпилируйте регулярное выражение и,в случае успеха,верните объект Regexp,который может быть использован для сравнения с текстом.</target>
        </trans-unit>
        <trans-unit id="cee12e4c020c15df0e0265d183f5996a7256de50" translate="yes" xml:space="preserve">
          <source>CompilePOSIX is like Compile but restricts the regular expression to POSIX ERE (egrep) syntax and changes the match semantics to leftmost-longest.</source>
          <target state="translated">CompilePOSIX похож на Compile,но ограничивает регулярное выражение синтаксисом POSIX ERE (egrep)и изменяет семантику матча на самую длинную слева.</target>
        </trans-unit>
        <trans-unit id="5e03d68306e0c19856edf7366f977bbbed7ddfc9" translate="yes" xml:space="preserve">
          <source>Compiler is the name of the compiler toolchain that built the running binary. Known toolchains are:</source>
          <target state="translated">Компилятор-это имя инструментального цепочки компилятора,который собрал запущенный двоичный файл.Известны цепочки инструментов:</target>
        </trans-unit>
        <trans-unit id="e22f98d93ae817ec1259f4d4b7bb21830ff51f40" translate="yes" xml:space="preserve">
          <source>Complete computes the interface's method set. It must be called by users of NewInterfaceType and NewInterface after the interface's embedded types are fully defined and before using the interface type in any way other than to form other types. Complete returns the receiver.</source>
          <target state="translated">Завершите вычисление набора методов интерфейса.Он должен быть вызван пользователями NewInterfaceType и NewInterface после того,как типы встроенных интерфейсов будут полностью определены,и перед использованием типа интерфейса любым другим способом,кроме как для формирования других типов.Полный возвращает приемник.</target>
        </trans-unit>
        <trans-unit id="b830166abbeef6c580e084458bea9fe726363f1a" translate="yes" xml:space="preserve">
          <source>Complete computes the interface's method set. It must be called by users of NewInterfaceType and NewInterface after the interface's embedded types are fully defined and before using the interface type in any way other than to form other types. The interface must not contain duplicate methods or a panic occurs. Complete returns the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f7244e495625b4cee683d43e3d4155851069d0" translate="yes" xml:space="preserve">
          <source>Complex returns v's underlying value, as a complex128. It panics if v's Kind is not Complex64 or Complex128</source>
          <target state="translated">Комплекс возвращает базовую стоимость v,как комплекс128.Он паникует,если v's Kind не является Complex64 или Complex128.</target>
        </trans-unit>
        <trans-unit id="1e5c0a1accf821336b517c8f9a6d139c6eec6f93" translate="yes" xml:space="preserve">
          <source>ComplexType is here for the purposes of documentation only. It is a stand-in for either complex type: complex64 or complex128.</source>
          <target state="translated">ComplexType здесь только для документации.Он является дублером для любого типа ComplexType:complex64 или complex128.</target>
        </trans-unit>
        <trans-unit id="0393f2fc81c87a0dafffd5b2077e514e08d44e60" translate="yes" xml:space="preserve">
          <source>Composites:</source>
          <target state="translated">Composites:</target>
        </trans-unit>
        <trans-unit id="6330cf629c30461620e73f64161faf03c4f6bc05" translate="yes" xml:space="preserve">
          <source>Compression methods.</source>
          <target state="translated">Методы сжатия.</target>
        </trans-unit>
        <trans-unit id="dd07f0f2be8ef65d73e0d3b0811ef58ea8daca19" translate="yes" xml:space="preserve">
          <source>Cond implements a condition variable, a rendezvous point for goroutines waiting for or announcing the occurrence of an event.</source>
          <target state="translated">Cond реализует переменную состояния,точку встречи для гориллонов,ожидающих или объявляющих о наступлении события.</target>
        </trans-unit>
        <trans-unit id="b8d15477b0af65c5951b32f8d79c3115615594d0" translate="yes" xml:space="preserve">
          <source>Config (KeyLogWriter)</source>
          <target state="translated">Конфигурация (KeyLogWriter)</target>
        </trans-unit>
        <trans-unit id="cde347fdf3f046790e6dd217677a4ff572a16904" translate="yes" xml:space="preserve">
          <source>Config (VerifyConnection)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e807e5a6200a3f39396feeb57c8d54139d104a3" translate="yes" xml:space="preserve">
          <source>Config holds an image's color model and dimensions.</source>
          <target state="translated">Config содержит цветовую модель и размеры изображения.</target>
        </trans-unit>
        <trans-unit id="6b74bd988d5a3ea14e1b3df314b2481dce7147bf" translate="yes" xml:space="preserve">
          <source>Conj returns the complex conjugate of x.</source>
          <target state="translated">Conj возвращает комплексный конъюгат x.</target>
        </trans-unit>
        <trans-unit id="c9aeb439eaab9aac64aeb1a4cefd295f624e1753" translate="yes" xml:space="preserve">
          <source>Conn is a connection to a database. It is not used concurrently by multiple goroutines.</source>
          <target state="translated">Подключение-это подключение к базе данных.Оно не используется одновременно несколькими горутинами.</target>
        </trans-unit>
        <trans-unit id="1b1029621a91138c59ede0769c17c76de3d476a1" translate="yes" xml:space="preserve">
          <source>Conn is a generic stream-oriented network connection.</source>
          <target state="translated">Подключение-это общее потоково-ориентированное сетевое соединение.</target>
        </trans-unit>
        <trans-unit id="0742e4736e59fa33890eb7f9409476b2970b8342" translate="yes" xml:space="preserve">
          <source>Conn is assumed to be stateful.</source>
          <target state="translated">Считается,что Конн-это статичный человек.</target>
        </trans-unit>
        <trans-unit id="19cb8b53c681806d63b63016497ea6a71f949b9d" translate="yes" xml:space="preserve">
          <source>Conn is implemented by some types in the net and os packages to provide access to the underlying file descriptor or handle.</source>
          <target state="translated">Коннектор реализован некоторыми типами пакетов net и os для обеспечения доступа к дескриптору или дескриптору,лежащему в основе файла.</target>
        </trans-unit>
        <trans-unit id="d5e466ea632370cac21d90b7f4f09fae73dc2ed1" translate="yes" xml:space="preserve">
          <source>Conn represents a single database connection rather than a pool of database connections. Prefer running queries from DB unless there is a specific need for a continuous single database connection.</source>
          <target state="translated">Соединение представляет собой единое соединение с БД,а не пул соединений с БД.Предпочтителено выполнять запросы из БД,если нет особой необходимости в непрерывном одиночном соединении с БД.</target>
        </trans-unit>
        <trans-unit id="08d452c612a33917a07ea957a4e2e63fa7d35e0f" translate="yes" xml:space="preserve">
          <source>Conn returns a single connection by either opening a new connection or returning an existing connection from the connection pool. Conn will block until either a connection is returned or ctx is canceled. Queries run on the same Conn will be run in the same database session.</source>
          <target state="translated">Conn возвращает одно соединение,либо открывая новое соединение,либо возвращая существующее соединение из пула соединений.Соединение будет блокироваться до тех пор,пока не будет возвращено либо соединение,либо ctx не будет отменено.Запросы,выполняемые по тому же самому соединению,будут выполняться в том же сеансе работы с БД.</target>
        </trans-unit>
        <trans-unit id="1a6c492eb2dd2d9a3974d02d68dfa500550dd3dd" translate="yes" xml:space="preserve">
          <source>Conn, a convenient packaging of Reader, Writer, and Pipeline for use with a single network connection.</source>
          <target state="translated">Подключение,удобная упаковка Читатель,пишущий инструмент и трубопровод для использования с одним сетевым подключением.</target>
        </trans-unit>
        <trans-unit id="85591a22c37013bf743fa31976eceaaa6316c3f2" translate="yes" xml:space="preserve">
          <source>Conn.BeginTx</source>
          <target state="translated">Conn.BeginTx</target>
        </trans-unit>
        <trans-unit id="5cf5eb76abc574b7772bf9ab1e8c6d4fea476438" translate="yes" xml:space="preserve">
          <source>Conn.ExecContext</source>
          <target state="translated">Conn.ExecContext</target>
        </trans-unit>
        <trans-unit id="c158ecf9ec2479e6846915d8cb9fe6d3cbd4ca47" translate="yes" xml:space="preserve">
          <source>ConnBeginTx enhances the Conn interface with context and TxOptions.</source>
          <target state="translated">ConnBeginTx улучшает интерфейс Conn с помощью контекста и TxOptions.</target>
        </trans-unit>
        <trans-unit id="cc1ce7b126fb8c452695e0fb899404e6512c196b" translate="yes" xml:space="preserve">
          <source>ConnPrepareContext enhances the Conn interface with context.</source>
          <target state="translated">ConnPrepareContext расширяет интерфейс Conn с контекстом.</target>
        </trans-unit>
        <trans-unit id="dd0a434e24a3e815d5fcde63b2103c735bf86e75" translate="yes" xml:space="preserve">
          <source>ConnectionState records basic TLS details about the connection.</source>
          <target state="translated">ConnectionState записывает основные сведения о соединении по протоколу TLS.</target>
        </trans-unit>
        <trans-unit id="ec4590fa3842e170ce672f8a3f9663ce18f220b4" translate="yes" xml:space="preserve">
          <source>ConnectionState returns basic TLS details about the connection.</source>
          <target state="translated">ConnectionState возвращает основные сведения о соединении по протоколу TLS.</target>
        </trans-unit>
        <trans-unit id="3382413c31457bfa590d655f61e74261287ccc28" translate="yes" xml:space="preserve">
          <source>Constant folding computes the exact constant value (constant.Value) for every expression (ast.Expr) that is a compile-time constant. Use Info.Types[expr].Value for the results of constant folding.</source>
          <target state="translated">Постоянное складывание вычисляет точное значение константы (constant.Value)для каждого выражения (ast.Expr),которое является константой времени компиляции.Используйте Info.Types[expr].Value для получения результатов константного сгибания.</target>
        </trans-unit>
        <trans-unit id="834dc3729f5137013cad26135140ed953b36f94d" translate="yes" xml:space="preserve">
          <source>ConstantTimeByteEq returns 1 if x == y and 0 otherwise.</source>
          <target state="translated">ConstantTimeByteEq возвращает 1,если x ==y и 0 в противном случае.</target>
        </trans-unit>
        <trans-unit id="3558d9d7a00f451a48ef2972f41f8686803a0e24" translate="yes" xml:space="preserve">
          <source>ConstantTimeCompare returns 1 if the two slices, x and y, have equal contents and 0 otherwise. The time taken is a function of the length of the slices and is independent of the contents.</source>
          <target state="translated">ConstantTimeCompare возвращает 1,если два среза,x и y,имеют одинаковое содержимое,и 0 в противном случае.Время зависит от длины ломтиков и не зависит от их содержимого.</target>
        </trans-unit>
        <trans-unit id="88c252edbf2eca3cb91bb29e951cb5ca95bae6aa" translate="yes" xml:space="preserve">
          <source>ConstantTimeCopy copies the contents of y into x (a slice of equal length) if v == 1. If v == 0, x is left unchanged. Its behavior is undefined if v takes any other value.</source>
          <target state="translated">ConstantTimeCopy копирует содержимое y в x (срез одинаковой длины),если v ==1.Если v ==0,то x остается без изменений.Его поведение не определено,если v принимает любое другое значение.</target>
        </trans-unit>
        <trans-unit id="ff7a225b92c492d7dc1f43d3aec5a53c49890771" translate="yes" xml:space="preserve">
          <source>ConstantTimeEq returns 1 if x == y and 0 otherwise.</source>
          <target state="translated">ConstantTimeEq возвращает 1,если x ==y и 0 в противном случае.</target>
        </trans-unit>
        <trans-unit id="7e6cda7519c219248a0508d2822b6c702c671a99" translate="yes" xml:space="preserve">
          <source>ConstantTimeLessOrEq returns 1 if x &amp;lt;= y and 0 otherwise. Its behavior is undefined if x or y are negative or &amp;gt; 2**31 - 1.</source>
          <target state="translated">ConstantTimeLessOrEq возвращает 1, если x &amp;lt;= y, и 0 в противном случае. Его поведение не определено, если x или y отрицательны или&amp;gt; 2 ** 31 - 1.</target>
        </trans-unit>
        <trans-unit id="8097a05c2ae8e15642a918a2dfd5de0ec4d3229d" translate="yes" xml:space="preserve">
          <source>ConstantTimeSelect returns x if v == 1 and y if v == 0. Its behavior is undefined if v takes any other value.</source>
          <target state="translated">ConstantTimeSelect возвращает x if v ==1 и y if v ==0.Его поведение не определено,если v принимает любое другое значение.</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="2fcb5061de485a74f3977289cc41179ec8ab431f" translate="yes" xml:space="preserve">
          <source>Constants describing the Accuracy of a Float.</source>
          <target state="translated">Константы,описывающие точность поплавка.</target>
        </trans-unit>
        <trans-unit id="046dff50bc71ac1e0509d7f6f6e5ffad1fc87642" translate="yes" xml:space="preserve">
          <source>Constants to identify various tar formats.</source>
          <target state="translated">Константы для идентификации различных форматов смол.</target>
        </trans-unit>
        <trans-unit id="555424611e16923e575afc6f5fc122e1c2a19159" translate="yes" xml:space="preserve">
          <source>ConstraintViolationError results when a requested usage is not permitted by a certificate. For example: checking a signature when the public key isn't a certificate signing key.</source>
          <target state="translated">ConstraintViolationError приводит к ошибке,когда запрашиваемое использование не разрешено сертификатом.Например:проверка подписи,когда открытый ключ не является ключом подписи сертификата.</target>
        </trans-unit>
        <trans-unit id="33e15d008d511f3101566a2e25203ef2a3f605a0" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="translated">Contains</target>
        </trans-unit>
        <trans-unit id="7e044f963947fee78187d2c8a9c3fc9f40ab582e" translate="yes" xml:space="preserve">
          <source>Contains reports whether pos is within the scope's extent. The result is guaranteed to be valid only if the type-checked AST has complete position information.</source>
          <target state="translated">Содержит отчёты о том,в пределах ли сферы применения.Результат гарантированно будет действительным только в том случае,если проверенный тип AST имеет полную информацию о позиции.</target>
        </trans-unit>
        <trans-unit id="c2b64d04b858878f66705aa586f7fa9e41fa1f23" translate="yes" xml:space="preserve">
          <source>Contains reports whether subslice is within b.</source>
          <target state="translated">Содержит сообщения о том,находится ли подсветка в пределах b.</target>
        </trans-unit>
        <trans-unit id="5e18f046f19b6a654d4cf4ca8d98e9f26e42d9b0" translate="yes" xml:space="preserve">
          <source>Contains reports whether substr is within s.</source>
          <target state="translated">Содержит отчеты о том,находится ли подложка в пределах s.</target>
        </trans-unit>
        <trans-unit id="6abdd6add896a729ee1aad307b9af57bdd6cad51" translate="yes" xml:space="preserve">
          <source>Contains reports whether the network includes ip.</source>
          <target state="translated">Содержит отчеты о том,включает ли сеть ip.</target>
        </trans-unit>
        <trans-unit id="f7cae610cac616dec3e9ae05c0c03197e4d666b4" translate="yes" xml:space="preserve">
          <source>ContainsAny</source>
          <target state="translated">ContainsAny</target>
        </trans-unit>
        <trans-unit id="877abb973dc781a3c8fa066aa0b824607b6f8b34" translate="yes" xml:space="preserve">
          <source>ContainsAny reports whether any Unicode code points in chars are within s.</source>
          <target state="translated">ContainsAny сообщает,находятся ли какие-либо точки кода Юникод в символах в пределах s.</target>
        </trans-unit>
        <trans-unit id="6caee33a35e9d91f330ffd6a91207ad4b9338f0d" translate="yes" xml:space="preserve">
          <source>ContainsAny reports whether any of the UTF-8-encoded code points in chars are within b.</source>
          <target state="translated">ContainsAny сообщает,находится ли какой-либо из кодированных в UTF-8 точек на графиках в пределах b.</target>
        </trans-unit>
        <trans-unit id="7b7debe6ccf4ad9133e2542cad231bda0c85355b" translate="yes" xml:space="preserve">
          <source>ContainsRune</source>
          <target state="translated">ContainsRune</target>
        </trans-unit>
        <trans-unit id="81a6dc8ca3b6d8a1950b7ae7f379f764b29d9034" translate="yes" xml:space="preserve">
          <source>ContainsRune reports whether the Unicode code point r is within s.</source>
          <target state="translated">ContainsRune сообщает,находится ли точка r кода Юникода в пределах s.</target>
        </trans-unit>
        <trans-unit id="dc1ff477a4e2194cf3761b5cdca699f501e9f919" translate="yes" xml:space="preserve">
          <source>ContainsRune reports whether the rune is contained in the UTF-8-encoded byte slice b.</source>
          <target state="translated">ContainsRune сообщает,содержится ли руна в UTF-8-кодированном байтовом срезе b.</target>
        </trans-unit>
        <trans-unit id="d08542aeb2bfc8fbad4f388086aa29696fcb3614" translate="yes" xml:space="preserve">
          <source>Context returns the request's context. To change the context, use WithContext.</source>
          <target state="translated">Контекст возвращает контекст запроса.Чтобы изменить контекст,используйте WithContext.</target>
        </trans-unit>
        <trans-unit id="1ca89f9f2a2036011eb5b4d2c57c4771153bb83e" translate="yes" xml:space="preserve">
          <source>Context's methods may be called by multiple goroutines simultaneously.</source>
          <target state="translated">Методы контекста могут быть вызваны несколькими горутинами одновременно.</target>
        </trans-unit>
        <trans-unit id="c161cba0ca1d50bd8851cc88a3794c809cbe6fbe" translate="yes" xml:space="preserve">
          <source>ContextClientTrace returns the ClientTrace associated with the provided context. If none, it returns nil.</source>
          <target state="translated">ContextClientTrace возвращает ClientTrace,связанную с предоставленным контекстом.Если нет,возвращается ноль.</target>
        </trans-unit>
        <trans-unit id="049c25129edc0e21a3c2b9240307623c8b16b3e6" translate="yes" xml:space="preserve">
          <source>Contexts</source>
          <target state="translated">Contexts</target>
        </trans-unit>
        <trans-unit id="cfb055ddaa6fd827855b9a19519a485e47403121" translate="yes" xml:space="preserve">
          <source>Conversion between RGB and Y'CbCr is lossy and there are multiple, slightly different formulae for converting between the two. This package follows the JFIF specification at &lt;a href=&quot;https://www.w3.org/Graphics/JPEG/jfif3.pdf&quot;&gt;https://www.w3.org/Graphics/JPEG/jfif3.pdf&lt;/a&gt;.</source>
          <target state="translated">Преобразование между RGB и Y'CbCr происходит с потерями, и существует несколько, немного разных формул для преобразования между ними. Этот пакет соответствует спецификации JFIF по адресу &lt;a href=&quot;https://www.w3.org/Graphics/JPEG/jfif3.pdf&quot;&gt;https://www.w3.org/Graphics/JPEG/jfif3.pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b24506d2330c3e5aaf3eed9ee049df2b2edfc2e" translate="yes" xml:space="preserve">
          <source>Conversion of a uintptr back to Pointer is not valid in general.</source>
          <target state="translated">Преобразование uintptr обратно в Pointer вообще недействительно.</target>
        </trans-unit>
        <trans-unit id="8b30242b973b465aec017dbe20811af00636e0e2" translate="yes" xml:space="preserve">
          <source>Convert returns the palette color closest to c in Euclidean R,G,B space.</source>
          <target state="translated">Convert возвращает цвет палитры ближе всего к c в евклидовом пространстве R,G,B.</target>
        </trans-unit>
        <trans-unit id="7c65e78e2cfee0137de5015d96d98123ad8d7b4a" translate="yes" xml:space="preserve">
          <source>Convert returns the value v converted to type t. If the usual Go conversion rules do not allow conversion of the value v to type t, Convert panics.</source>
          <target state="translated">Преобразование возвращает преобразованное значение v к типу t.Если обычные правила преобразования Go не позволяют преобразовать значение v к типу t,то выполните преобразование паники.</target>
        </trans-unit>
        <trans-unit id="e60c6764e20f1ce7accef0e79715fc6de73a21bc" translate="yes" xml:space="preserve">
          <source>ConvertibleTo reports whether a value of type V is convertible to a value of type T.</source>
          <target state="translated">ConvertibleTo сообщает,является ли значение типа V конвертируемым в значение типа T.</target>
        </trans-unit>
        <trans-unit id="483087e44afa8d5285f534d77323c3706428debe" translate="yes" xml:space="preserve">
          <source>Converting a Pointer to a uintptr produces the memory address of the value pointed at, as an integer. The usual use for such a uintptr is to print it.</source>
          <target state="translated">При преобразовании указателя в uintptr получается адрес памяти значения,на которое он указывает,как целое число.Обычным использованием такого uintptr является его вывод на печать.</target>
        </trans-unit>
        <trans-unit id="0018fef4e5fd6fb8ccad98bd3a6b012fe3ed5ae1" translate="yes" xml:space="preserve">
          <source>Cookie returns the named cookie provided in the request or ErrNoCookie if not found. If multiple cookies match the given name, only one cookie will be returned.</source>
          <target state="translated">Cookie-файл возвращает указанный в запросе cookie-файл или ErrNoCookie,если он не найден.Если несколько куки-файлов совпадают с заданным именем,возвращается только один куки-файл.</target>
        </trans-unit>
        <trans-unit id="6444e3dab3b536b14d051c8ddab84942f9d59bd8" translate="yes" xml:space="preserve">
          <source>Cookies implements the Cookies method of the http.CookieJar interface.</source>
          <target state="translated">Cookies реализует метод Cookies интерфейса http.CookieJar.</target>
        </trans-unit>
        <trans-unit id="26998c84ce084428cbc2c95f6c5034ef7327f4b6" translate="yes" xml:space="preserve">
          <source>Cookies parses and returns the HTTP cookies sent with the request.</source>
          <target state="translated">Cookies анализируют и возвращают HTTP-куки,отправленные с запросом.</target>
        </trans-unit>
        <trans-unit id="d4ee61025f9549bad8b3c189b6b5351e6c5ca43e" translate="yes" xml:space="preserve">
          <source>Cookies parses and returns the cookies set in the Set-Cookie headers.</source>
          <target state="translated">Cookie-файлы анализируют и возвращают cookie-файлы,установленные в заголовках Set-Cookie.</target>
        </trans-unit>
        <trans-unit id="af74f7c5362aaee985bf8cda3dd75fc80751ce51" translate="yes" xml:space="preserve">
          <source>Copy</source>
          <target state="translated">Copy</target>
        </trans-unit>
        <trans-unit id="beb7d87db9d906cbb94fdddddfd16ebd8200101e" translate="yes" xml:space="preserve">
          <source>Copy copies from src to dst until either EOF is reached on src or an error occurs. It returns the number of bytes copied and the first error encountered while copying, if any.</source>
          <target state="translated">Копировать копии из src в dst до тех пор,пока не будет достигнута EOF на src или не произойдет ошибка.Она возвращает количество скопированных байтов и первую ошибку,возникшую при копировании,если таковая имела место.</target>
        </trans-unit>
        <trans-unit id="0205f10e265d450db71d0231c94dcdd7ee2bcc22" translate="yes" xml:space="preserve">
          <source>Copy copies the contents of src into dst until either dst has been filled or src has been exhausted. It returns the number of elements copied. Dst and src each must have kind Slice or Array, and dst and src must have the same element type.</source>
          <target state="translated">Копируйте содержимое src в dst до тех пор,пока не будет заполнен dst или не будет исчерпан src.Возвращает количество скопированных элементов.Dst и src должны иметь тип Slice или Array,а dst и src должны иметь одинаковый тип элементов.</target>
        </trans-unit>
        <trans-unit id="c25087d7936e391bf0bd9a9677daefa0a23fe1f1" translate="yes" xml:space="preserve">
          <source>Copy creates a new copy of CharData.</source>
          <target state="translated">Копия создает новую копию CharData.</target>
        </trans-unit>
        <trans-unit id="7d2399aedb628cc2f8d794a248d5f004528fd643" translate="yes" xml:space="preserve">
          <source>Copy creates a new copy of Comment.</source>
          <target state="translated">Копия создает новую копию Комментария.</target>
        </trans-unit>
        <trans-unit id="5521199a98d40388c239495432fdbee20e2c5e5a" translate="yes" xml:space="preserve">
          <source>Copy creates a new copy of Directive.</source>
          <target state="translated">Копия создает новую копию Директивы.</target>
        </trans-unit>
        <trans-unit id="214634d191d287336b71314070bded70f76703ef" translate="yes" xml:space="preserve">
          <source>Copy creates a new copy of ProcInst.</source>
          <target state="translated">Копия создает новую копию ProcInst.</target>
        </trans-unit>
        <trans-unit id="bac561e70b5c6132e566c02dab0a7d6e620b7ddf" translate="yes" xml:space="preserve">
          <source>Copy creates a new copy of StartElement.</source>
          <target state="translated">Copy создает новую копию StartElement.</target>
        </trans-unit>
        <trans-unit id="348b21aa3d99a8eb531490f0d789fa2d48407193" translate="yes" xml:space="preserve">
          <source>Copy returns a copy of the Tree. Any parsing state is discarded.</source>
          <target state="translated">Копия возвращает копию Дерева.Любое состояние разбора отбрасывается.</target>
        </trans-unit>
        <trans-unit id="b348613df7330d48a6b69a341a32bc0c4d80dfdd" translate="yes" xml:space="preserve">
          <source>Copy returns a new Regexp object copied from re. Calling Longest on one copy does not affect another.</source>
          <target state="translated">Copy возвращает новый объект Regexp,скопированный из re.Призыв Дольше всего на одной копии не влияет на другую.</target>
        </trans-unit>
        <trans-unit id="af6ad9f4b7202c4d4aa702fa0d11e6e42c64f298" translate="yes" xml:space="preserve">
          <source>Copy sets z to x, with the same precision, rounding mode, and accuracy as x, and returns z. x is not changed even if z and x are the same.</source>
          <target state="translated">Скопируйте наборы от z до x,с той же точностью,в режиме скругления и с той же точностью,что и x,и возвращайте z.x не меняется,даже если z и x одинаковы.</target>
        </trans-unit>
        <trans-unit id="f5c9b724b033d22904dbdaaf4685127002553b21" translate="yes" xml:space="preserve">
          <source>CopyBuffer</source>
          <target state="translated">CopyBuffer</target>
        </trans-unit>
        <trans-unit id="c080972ed295a6ebb4d7b3256e9d876139134f56" translate="yes" xml:space="preserve">
          <source>CopyBuffer is identical to Copy except that it stages through the provided buffer (if one is required) rather than allocating a temporary one. If buf is nil, one is allocated; otherwise if it has zero length, CopyBuffer panics.</source>
          <target state="translated">CopyBuffer идентичен Copy за исключением того,что он проходит через предоставленный буфер (если он необходим),а не выделяет временный.Если buf равен нулю,то выделяется один,в противном случае,если он имеет нулевую длину,то CopyBuffer паникует.</target>
        </trans-unit>
        <trans-unit id="4b11eea990602e0e5d0830c823c94048f539c384" translate="yes" xml:space="preserve">
          <source>CopyBytesToGo copies bytes from src to dst. It panics if src is not an Uint8Array or Uint8ClampedArray. It returns the number of bytes copied, which will be the minimum of the lengths of src and dst.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a2ca5d029e1c6970f41b82af47bb9334769ec9" translate="yes" xml:space="preserve">
          <source>CopyBytesToGo copies bytes from the Uint8Array src to dst. It returns the number of bytes copied, which will be the minimum of the lengths of src and dst. CopyBytesToGo panics if src is not an Uint8Array.</source>
          <target state="translated">CopyBytesToGo копирует байты из Uint8Array src в dst.Возвращает количество скопированных байт,которое будет минимальной длиной src и dst.CopyBytesToGo паникует,если src не является Uint8Array.</target>
        </trans-unit>
        <trans-unit id="7e96ae95886f83419e39ea928bd56cf62b051cf9" translate="yes" xml:space="preserve">
          <source>CopyBytesToJS copies bytes from src to dst. It panics if dst is not an Uint8Array or Uint8ClampedArray. It returns the number of bytes copied, which will be the minimum of the lengths of src and dst.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573547021c7d36d69889e15a8a5f480e4cd25fc9" translate="yes" xml:space="preserve">
          <source>CopyBytesToJS copies bytes from src to the Uint8Array dst. It returns the number of bytes copied, which will be the minimum of the lengths of src and dst. CopyBytesToJS panics if dst is not an Uint8Array.</source>
          <target state="translated">CopyBytesToJS копирует байты из src в Uint8Array dst.Возвращает количество скопированных байт,которое будет минимальной длиной src и dst.CopyBytesToJS паникует,если dst не является Uint8Array.</target>
        </trans-unit>
        <trans-unit id="39f366d8412f678e42a26af03a84764a3832b915" translate="yes" xml:space="preserve">
          <source>CopyN</source>
          <target state="translated">CopyN</target>
        </trans-unit>
        <trans-unit id="13eabe7df064bd68331ec1a12076fce45e9a8949" translate="yes" xml:space="preserve">
          <source>CopyN copies n bytes (or until an error) from src to dst. It returns the number of bytes copied and the earliest error encountered while copying. On return, written == n if and only if err == nil.</source>
          <target state="translated">CopyN копирует n байт (или до ошибки)из src в dst.Возвращает количество скопированных байтов и самую раннюю ошибку,обнаруженную при копировании.По возвращении записывается ==n if и только если ошибка ==nil.</target>
        </trans-unit>
        <trans-unit id="4ea8264f41296a8535f3b62b02085fb7501b655e" translate="yes" xml:space="preserve">
          <source>CopyToken returns a copy of a Token.</source>
          <target state="translated">CopyToken возвращает копию жетона.</target>
        </trans-unit>
        <trans-unit id="0e64d2479aee5c07df8f1c3541ef5c532e3faeb2" translate="yes" xml:space="preserve">
          <source>Copysign</source>
          <target state="translated">Copysign</target>
        </trans-unit>
        <trans-unit id="0e28ad46ee857280975524037035d0acdc5ccadd" translate="yes" xml:space="preserve">
          <source>Copysign returns a value with the magnitude of x and the sign of y.</source>
          <target state="translated">Знак копирования возвращает значение с амплитудой x и знаком y.</target>
        </trans-unit>
        <trans-unit id="95b49c2102dc476ebba131d7df167779ccb26544" translate="yes" xml:space="preserve">
          <source>Cos</source>
          <target state="translated">Cos</target>
        </trans-unit>
        <trans-unit id="b17b655c0904cccb87f841850df53a8ab3c54287" translate="yes" xml:space="preserve">
          <source>Cos returns the cosine of the radian argument x.</source>
          <target state="translated">Потому что возвращает косинус аргумента радиан x.</target>
        </trans-unit>
        <trans-unit id="a29bcf5033d335ce37060453688404db858a88c0" translate="yes" xml:space="preserve">
          <source>Cos returns the cosine of x.</source>
          <target state="translated">Потому что возвращает косинус Х.</target>
        </trans-unit>
        <trans-unit id="4b5b1efaa30aed45f32d083d3a9f4d02f9581898" translate="yes" xml:space="preserve">
          <source>Cosh</source>
          <target state="translated">Cosh</target>
        </trans-unit>
        <trans-unit id="7aea87b623bfac6726a31f524f1570268bf8bb6a" translate="yes" xml:space="preserve">
          <source>Cosh returns the hyperbolic cosine of x.</source>
          <target state="translated">Кош возвращает гиперболический косинус Х.</target>
        </trans-unit>
        <trans-unit id="3751692394bf977f68d6c8a2af76f83b39dcbe23" translate="yes" xml:space="preserve">
          <source>Cot returns the cotangent of x.</source>
          <target state="translated">Кот возвращает кокангент Х.</target>
        </trans-unit>
        <trans-unit id="66e12969c225cc6d65e18210488acb826eba907e" translate="yes" xml:space="preserve">
          <source>Count</source>
          <target state="translated">Count</target>
        </trans-unit>
        <trans-unit id="1edea34aa8c9a40389f9082a08e14e29cd4eba14" translate="yes" xml:space="preserve">
          <source>Count counts the number of non-overlapping instances of sep in s. If sep is an empty slice, Count returns 1 + the number of UTF-8-encoded code points in s.</source>
          <target state="translated">Счетчик подсчитывает количество не перекрывающихся экземпляров sep в s.Если sep-пустой кусок,то счетчик возвращает 1+количество кодированных в UTF-8 пунктов в s.</target>
        </trans-unit>
        <trans-unit id="2c7abecb94f08682b3b62e7992cd7849a1d85d24" translate="yes" xml:space="preserve">
          <source>Count counts the number of non-overlapping instances of substr in s. If substr is an empty string, Count returns 1 + the number of Unicode code points in s.</source>
          <target state="translated">Счетчик подсчитывает количество неперекрывающихся экземпляров подстроки в с.Если подстрока пустая,счетчик возвращает 1+количество точек кода Юникода в с.</target>
        </trans-unit>
        <trans-unit id="41ab0173ab585bf8ee18604bba14b3111d20d350" translate="yes" xml:space="preserve">
          <source>Count returns the number of execution stacks currently in the profile.</source>
          <target state="translated">Счетчик возвращает количество стеков исполнения,находящихся в профиле в данный момент.</target>
        </trans-unit>
        <trans-unit id="58c837e82670670080ba36b5dc5750591cb43079" translate="yes" xml:space="preserve">
          <source>Cover records information about test coverage checking. NOTE: This struct is internal to the testing infrastructure and may change. It is not covered (yet) by the Go 1 compatibility guidelines.</source>
          <target state="translated">Записи о покрытии информации о проверке покрытия теста.ПРИМЕЧАНИЕ:Эта структура является внутренней для инфраструктуры тестирования и может измениться.Она не покрывается (пока)руководством по совместимости Go 1.</target>
        </trans-unit>
        <trans-unit id="be3f9c856b47a0e2f143dc72ed2fd31648da50af" translate="yes" xml:space="preserve">
          <source>CoverBlock records the coverage data for a single basic block. The fields are 1-indexed, as in an editor: The opening line of the file is number 1, for example. Columns are measured in bytes. NOTE: This struct is internal to the testing infrastructure and may change. It is not covered (yet) by the Go 1 compatibility guidelines.</source>
          <target state="translated">CoverBlock записывает данные покрытия для одного базового блока.Поля являются 1-индексированными,как в редакторе:Например,открывающая строка файла-номер 1.Столбцы измеряются в байтах.ПРИМЕЧАНИЕ:Данная структура является внутренней для инфраструктуры тестирования и может изменяться.Она не покрывается (пока)руководством по совместимости с Go 1.</target>
        </trans-unit>
        <trans-unit id="3d8612ba9657742f096cb1c88efe53acf35604d3" translate="yes" xml:space="preserve">
          <source>CoverMode reports what the test coverage mode is set to. The values are &quot;set&quot;, &quot;count&quot;, or &quot;atomic&quot;. The return value will be empty if test coverage is not enabled.</source>
          <target state="translated">CoverMode сообщает,для чего установлен режим тестового покрытия.Значения &quot;set&quot;,&quot;count&quot; или &quot;atomic&quot;.Возвращаемое значение будет пустым,если тестовое покрытие не включено.</target>
        </trans-unit>
        <trans-unit id="7b80d4e5292251354aefa94b883cdce6faedc160" translate="yes" xml:space="preserve">
          <source>Coverage reports the current code coverage as a fraction in the range [0, 1]. If coverage is not enabled, Coverage returns 0.</source>
          <target state="translated">Покрытие сообщает текущее покрытие кода как дробь в диапазоне [0,1].Если покрытие не включено,Coverage возвращает 0.</target>
        </trans-unit>
        <trans-unit id="5be357b2b552293d3974bb945edcdd3d1f19d288" translate="yes" xml:space="preserve">
          <source>Create adds a file to the zip file using the provided name. It returns a Writer to which the file contents should be written. The file contents will be compressed using the Deflate method. The name must be a relative path: it must not start with a drive letter (e.g. C:) or leading slash, and only forward slashes are allowed. To create a directory instead of a file, add a trailing slash to the name. The file's contents must be written to the io.Writer before the next call to Create, CreateHeader, or Close.</source>
          <target state="translated">Создать добавляет файл в zip-файл,используя предоставленное имя.Он возвращает Writer,в который должно быть записано содержимое файла.Содержимое файла будет сжато методом Deflate.Имя должно быть относительным:оно не должно начинаться с буквы диска (например,C:)или ведущей косой черты,разрешены только прямые косые черты.Чтобы создать каталог вместо файла,добавьте к имени трейлинговую косую черту.Содержимое файла должно быть записано в io.Writer перед следующим вызовом Create,CreateHeader или Close.</target>
        </trans-unit>
        <trans-unit id="b9ad0c9c5822dfd8e33287f85e0053746b9a1d8c" translate="yes" xml:space="preserve">
          <source>Create creates or truncates the named file. If the file already exists, it is truncated. If the file does not exist, it is created with mode 0666 (before umask). If successful, methods on the returned File can be used for I/O; the associated file descriptor has mode O_RDWR. If there is an error, it will be of type *PathError.</source>
          <target state="translated">Создает или усекает именованный файл.Если файл уже существует,он усекается.Если файл не существует,он создается в режиме 0666 (до маски).В случае успеха,методы на возвращаемом файле могут быть использованы для ввода/вывода;соответствующий файловый дескриптор имеет режим O_RDWR.В случае ошибки он будет иметь тип *PathError.</target>
        </trans-unit>
        <trans-unit id="1b465234e2012ae44b3245299f320c50140d6940" translate="yes" xml:space="preserve">
          <source>CreateCRL returns a DER encoded CRL, signed by this Certificate, that contains the given list of revoked certificates.</source>
          <target state="translated">CreateCRL возвращает DER закодированный CRL,подписанный этим сертификатом,который содержит данный список отозванных сертификатов.</target>
        </trans-unit>
        <trans-unit id="b8628c9b06db422c5fa609b650cab7ab2c9d7d80" translate="yes" xml:space="preserve">
          <source>CreateCertificate creates a new X.509v3 certificate based on a template. The following members of template are used:</source>
          <target state="translated">CreateCertificate создает новый сертификат X.509v3 на основе шаблона.Используются следующие члены шаблона:</target>
        </trans-unit>
        <trans-unit id="73c01ccfb480001ffa3c411d49610d7de6487d44" translate="yes" xml:space="preserve">
          <source>CreateCertificateRequest creates a new certificate request based on a template. The following members of template are used:</source>
          <target state="translated">CreateCertificateRequest создает новый запрос сертификата на основе шаблона.Используются следующие члены шаблона:</target>
        </trans-unit>
        <trans-unit id="0c10d1e701a1ded06204ed87d7c168c5ecc136a8" translate="yes" xml:space="preserve">
          <source>CreateFormField calls CreatePart with a header using the given field name.</source>
          <target state="translated">CreateFormField Calls CreatePart с заголовком,использующим имя данного поля.</target>
        </trans-unit>
        <trans-unit id="53037004a6a76e3b70492980878a44bda2d363cb" translate="yes" xml:space="preserve">
          <source>CreateFormFile is a convenience wrapper around CreatePart. It creates a new form-data header with the provided field name and file name.</source>
          <target state="translated">CreateFormFile-это удобная обертка вокруг CreatePart.Она создает новый заголовок формы-данных с предоставленным именем поля и файла.</target>
        </trans-unit>
        <trans-unit id="9d1649722dbb1b219b1b7b37cdfc28c7f3c99574" translate="yes" xml:space="preserve">
          <source>CreateHeader adds a file to the zip archive using the provided FileHeader for the file metadata. Writer takes ownership of fh and may mutate its fields. The caller must not modify fh after calling CreateHeader.</source>
          <target state="translated">CreateHeader добавляет файл в zip-архив,используя предоставленный FileHeader для метаданных файла.Писатель получает право собственности на fh и может мутировать его поля.Звонящий не должен изменять fh после вызова CreateHeader.</target>
        </trans-unit>
        <trans-unit id="3285ffa2e28574fc6f309813b4ff68aff6bdde1e" translate="yes" xml:space="preserve">
          <source>CreatePart creates a new multipart section with the provided header. The body of the part should be written to the returned Writer. After calling CreatePart, any previous part may no longer be written to.</source>
          <target state="translated">CreatePart создает новую многочастичную секцию с предоставленным заголовком.Тело части должно быть записано в возвращаемый Writer.После вызова CreatePart,любая предыдущая часть не может быть записана.</target>
        </trans-unit>
        <trans-unit id="d63af3ed8d8a30604ee56038f3001e2db89c2338" translate="yes" xml:space="preserve">
          <source>CreateRevocationList creates a new X.509 v2 Certificate Revocation List, according to RFC 5280, based on template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a50bbc334f201429fba3c65d621a9109ba53dd" translate="yes" xml:space="preserve">
          <source>Credential holds user and group identities to be assumed by a child process started by StartProcess.</source>
          <target state="translated">Credential удерживает идентификационные данные пользователей и групп,которые будут приняты дочерним процессом,запущенным StartProcess.</target>
        </trans-unit>
        <trans-unit id="2387616d5263d298421004495f585b27c0b5f292" translate="yes" xml:space="preserve">
          <source>Crit logs a message with severity LOG_CRIT, ignoring the severity passed to New.</source>
          <target state="translated">Записывает в журнал сообщение со степенью тяжести LOG_CRIT,игнорируя степень тяжести,переданную New.</target>
        </trans-unit>
        <trans-unit id="b00b9e8f709739fdb419a61ad788ae6cd5c543db" translate="yes" xml:space="preserve">
          <source>Ctz32 counts trailing (low-order) zeroes, and if all are zero, then 32.</source>
          <target state="translated">Ctz32 считает трейлинговые (низкого порядка)нули,а если все нулевые,то 32.</target>
        </trans-unit>
        <trans-unit id="93b80f5eb281e63bbdd5e4cb006c6e407851c617" translate="yes" xml:space="preserve">
          <source>Ctz64 counts trailing (low-order) zeroes, and if all are zero, then 64.</source>
          <target state="translated">Ctz64 считает трейлинговые (низкого порядка)нули,а если все нулевые,то 64.</target>
        </trans-unit>
        <trans-unit id="f360a645e3031852f77e3ee38c6b9e9ae5132853" translate="yes" xml:space="preserve">
          <source>Ctz8 returns the number of trailing zero bits in x; the result is 8 for x == 0.</source>
          <target state="translated">Ctz8 возвращает количество трейлинговых нулевых битов в x;результат 8 для x ==0.</target>
        </trans-unit>
        <trans-unit id="186a4ac4b5e83e7a09290593db86c1ac147b44e3" translate="yes" xml:space="preserve">
          <source>Current returns the current user.</source>
          <target state="translated">Текущий возвращает текущего пользователя.</target>
        </trans-unit>
        <trans-unit id="046f17348f9f906b4db2ced159222fabbc9be2e8" translate="yes" xml:space="preserve">
          <source>Currently only the responder role is supported.</source>
          <target state="translated">В настоящее время поддерживается только роль респондента.</target>
        </trans-unit>
        <trans-unit id="ddc0402f7a41556c97834c86c42fb8d452886c5f" translate="yes" xml:space="preserve">
          <source>Currently plugins are only supported on Linux and macOS. Please report any issues.</source>
          <target state="translated">В настоящее время плагины поддерживаются только под Linux и MacOS.Пожалуйста,сообщайте о любых проблемах.</target>
        </trans-unit>
        <trans-unit id="e13e5636737ade36dde5edd323fb09d5656849a3" translate="yes" xml:space="preserve">
          <source>Currently plugins are only supported on Linux, FreeBSD, and macOS. Please report any issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba7859fdac5d2aff950209f094dd563445b9cf8" translate="yes" xml:space="preserve">
          <source>CurveID is the type of a TLS identifier for an elliptic curve. See &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8&quot;&gt;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8&lt;/a&gt;.</source>
          <target state="translated">CurveID - это тип TLS-идентификатора эллиптической кривой. См. &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8&quot;&gt;Https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="446785414e4504abe5ec1c9315a5bfdfeeaa65b9" translate="yes" xml:space="preserve">
          <source>CurveParams contains the parameters of an elliptic curve and also provides a generic, non-constant time implementation of Curve.</source>
          <target state="translated">CurveParams содержит параметры эллиптической кривой,а также обеспечивает общую,не зависящую от времени реализацию кривой.</target>
        </trans-unit>
        <trans-unit id="854ee953a12f6750d2f08f38118ba7df90d83bdc" translate="yes" xml:space="preserve">
          <source>DB is a database handle representing a pool of zero or more underlying connections. It's safe for concurrent use by multiple goroutines.</source>
          <target state="translated">БД-это дескриптор базы данных,представляющий собой пул нулевых и более базовых соединений.Она безопасна для одновременного использования несколькими горутинами.</target>
        </trans-unit>
        <trans-unit id="2f09e7aa35471aff41600b45ae44cf426463a2f4" translate="yes" xml:space="preserve">
          <source>DB.BeginTx</source>
          <target state="translated">DB.BeginTx</target>
        </trans-unit>
        <trans-unit id="3438f449cf114423437931b85b59a20310743baa" translate="yes" xml:space="preserve">
          <source>DB.ExecContext</source>
          <target state="translated">DB.ExecContext</target>
        </trans-unit>
        <trans-unit id="4aef1f529992ef7bd420a755b7f2a4dc07114a5a" translate="yes" xml:space="preserve">
          <source>DB.PingContext</source>
          <target state="translated">DB.PingContext</target>
        </trans-unit>
        <trans-unit id="014f16301351fe7114ed2958ee3525ac47050c48" translate="yes" xml:space="preserve">
          <source>DB.Prepare</source>
          <target state="translated">DB.Prepare</target>
        </trans-unit>
        <trans-unit id="e1974d7b34d29bc8a688d9f9e7d5ec7d48b32785" translate="yes" xml:space="preserve">
          <source>DB.Query (MultipleResultSets)</source>
          <target state="translated">DB.Query (MultipleResultSet)</target>
        </trans-unit>
        <trans-unit id="3fac6432252b873f3e946e93a10e5043368270d0" translate="yes" xml:space="preserve">
          <source>DB.QueryContext</source>
          <target state="translated">DB.QueryContext</target>
        </trans-unit>
        <trans-unit id="c09ea214d64b802519f42c1121ca2d585ae10183" translate="yes" xml:space="preserve">
          <source>DB.QueryRowContext</source>
          <target state="translated">DB.QueryRowContext</target>
        </trans-unit>
        <trans-unit id="062f2d0e3b266bc2766487d180f93108c3093e01" translate="yes" xml:space="preserve">
          <source>DBStats contains database statistics.</source>
          <target state="translated">DBStats содержит статистику базы данных.</target>
        </trans-unit>
        <trans-unit id="b22c78e263cb9da0783e024b9041b95e30c3fd7e" translate="yes" xml:space="preserve">
          <source>DEFLATE is suitable for transmitting compressed data across the network.</source>
          <target state="translated">DEFLATE подходит для передачи сжатых данных по сети.</target>
        </trans-unit>
        <trans-unit id="6af7313c68e1a507942c8bee4f518b61d590aa88" translate="yes" xml:space="preserve">
          <source>DES is cryptographically broken and should not be used for secure applications.</source>
          <target state="translated">DES криптографически сломан и не должен использоваться в защищенных приложениях.</target>
        </trans-unit>
        <trans-unit id="a7c0828ff50d909531c4a019b63724f3f819cb6e" translate="yes" xml:space="preserve">
          <source>DNSConfigError represents an error reading the machine's DNS configuration. (No longer used; kept for compatibility.)</source>
          <target state="translated">DNSConfigError представляет собой ошибку чтения конфигурации DNS машины.(Больше не используется;сохраняется для совместимости).</target>
        </trans-unit>
        <trans-unit id="0df21b6b932ef4553f314a2223c92a1fd8610f2a" translate="yes" xml:space="preserve">
          <source>DNSDoneInfo contains information about the results of a DNS lookup.</source>
          <target state="translated">DNSDoneInfo содержит информацию о результатах DNS поиска.</target>
        </trans-unit>
        <trans-unit id="bc71ea6ab70a230a454b764448619c3ce8a1b674" translate="yes" xml:space="preserve">
          <source>DNSError represents a DNS lookup error.</source>
          <target state="translated">Ошибка DNSError представляет собой ошибку DNS поиска.</target>
        </trans-unit>
        <trans-unit id="e565458ee90bae74c1103c0b4dba206d05e11b0c" translate="yes" xml:space="preserve">
          <source>DNSStartInfo contains information about a DNS request.</source>
          <target state="translated">DNSStartInfo содержит информацию о DNS-запросе.</target>
        </trans-unit>
        <trans-unit id="bd1616e9afd3f1b8cb1bc3466e944671742326c0" translate="yes" xml:space="preserve">
          <source>DT_FLAGS values.</source>
          <target state="translated">Значения DT_FLAGS.</target>
        </trans-unit>
        <trans-unit id="eb9fd8102c5656418aee4dc0dab53238b17f6eec" translate="yes" xml:space="preserve">
          <source>DWARF returns the DWARF debug information for the Mach-O file.</source>
          <target state="translated">DWARF возвращает отладочную информацию DWARF для файла Mach-O.</target>
        </trans-unit>
        <trans-unit id="44e21ef2fb7f3aeea7da384ee4026d7b21cfb109" translate="yes" xml:space="preserve">
          <source>DWARF version 4 distinguishes attribute value classes more finely than previous versions of DWARF. The reader will disambiguate coarser classes from earlier versions of DWARF into the appropriate DWARF 4 class. For example, DWARF 2 uses &quot;constant&quot; for constants as well as all types of section offsets, but the reader will canonicalize attributes in DWARF 2 files that refer to section offsets to one of the Class*Ptr classes, even though these classes were only defined in DWARF 3.</source>
          <target state="translated">DWARF версии 4 отличает классы значений атрибутов более тонко,чем предыдущие версии DWARF.Читатель различит более грубые классы из предыдущих версий DWARF в соответствующий класс DWARF 4.Например,DWARF 2 использует &quot;константу&quot; для констант,а также все типы смещений секций,но читатель будет канонизировать атрибуты в файлах DWARF 2,которые относятся к смещениям секций в одном из классов Class*Ptr,даже если эти классы были определены только в DWARF 3.</target>
        </trans-unit>
        <trans-unit id="af1c6592f23da912c4adb4e08b65b073609bb89a" translate="yes" xml:space="preserve">
          <source>Data is found in Header.Ident[EI_DATA] and Header.Data.</source>
          <target state="translated">Данные находятся в Header.Ident[EI_DATA]и Header.Data.</target>
        </trans-unit>
        <trans-unit id="13ca24289e70a941b8b696bdff0abf87b99534a8" translate="yes" xml:space="preserve">
          <source>Data issues a DATA command to the server and returns a writer that can be used to write the mail headers and body. The caller should close the writer before calling any more methods on c. A call to Data must be preceded by one or more calls to Rcpt.</source>
          <target state="translated">Данные выдают команду DATA на сервер и возвращают записывающее устройство,которое может быть использовано для записи почтовых заголовков и тела.Звонящий должен закрыть записывающее устройство перед вызовом любых других методов c.Вызову Data должен предшествовать один или несколько вызовов Rcpt.</target>
        </trans-unit>
        <trans-unit id="c93ed1b3e1e4d4276c13585e691d22da36a26d7d" translate="yes" xml:space="preserve">
          <source>Data reads and returns the contents of the ELF section. Even if the section is stored compressed in the ELF file, Data returns uncompressed data.</source>
          <target state="translated">Данные считываются и возвращаются в раздел ELF.Даже если секция хранится в сжатом виде в файле ELF,Data возвращает несжатые данные.</target>
        </trans-unit>
        <trans-unit id="fb762c577e910ca34f7f6a619fca3236b8e65a78" translate="yes" xml:space="preserve">
          <source>Data reads and returns the contents of the Mach-O section.</source>
          <target state="translated">Данные считываются и возвращаются к содержимому раздела Mach-O.</target>
        </trans-unit>
        <trans-unit id="44cd1191853d4999e06b3841282ce1e62b05ad52" translate="yes" xml:space="preserve">
          <source>Data reads and returns the contents of the PE section s.</source>
          <target state="translated">Данные считываются и возвращаются к содержимому секции заземления s.</target>
        </trans-unit>
        <trans-unit id="8d131a5630dfb89ad0914d47cac99e85517e0f18" translate="yes" xml:space="preserve">
          <source>Data reads and returns the contents of the Plan 9 a.out section.</source>
          <target state="translated">Данные считываются и возвращаются к содержанию раздела Plan 9 a.out.</target>
        </trans-unit>
        <trans-unit id="4e4adf3b85e43c16f7986aa10f34f35072f6eea1" translate="yes" xml:space="preserve">
          <source>Data reads and returns the contents of the segment.</source>
          <target state="translated">Данные считываются и возвращаются к содержимому сегмента.</target>
        </trans-unit>
        <trans-unit id="9f79ddac999330fab22c9a79fd22e8012029e050" translate="yes" xml:space="preserve">
          <source>Data represents the DWARF debugging information loaded from an executable file (for example, an ELF or Mach-O executable).</source>
          <target state="translated">Данные представляют собой отладочную информацию DWARF,загружаемую из исполняемого файла (например,ELF или Mach-O исполняемый файл).</target>
        </trans-unit>
        <trans-unit id="c6bc8adab78b04c6b3688d1e1ff626160d863530" translate="yes" xml:space="preserve">
          <source>DataErrReader changes the way errors are handled by a Reader. Normally, a Reader returns an error (typically EOF) from the first Read call after the last piece of data is read. DataErrReader wraps a Reader and changes its behavior so the final error is returned along with the final data, instead of in the first call after the final data.</source>
          <target state="translated">DataErrReader изменяет способ обработки ошибок Читателем.Обычно Считывающее устройство возвращает ошибку (обычно EOF)при первом вызове Считывания после считывания последней части данных.DataErrReader обертывает считывающее устройство и изменяет его поведение,поэтому окончательная ошибка возвращается вместе с окончательными данными,а не при первом вызове после считывания последней части данных.</target>
        </trans-unit>
        <trans-unit id="5eb9616bdfbeffc11e87fe7230443e52f6bea614" translate="yes" xml:space="preserve">
          <source>DataOffset returns the offset of the file's possibly-compressed data, relative to the beginning of the zip file.</source>
          <target state="translated">DataOffset возвращает смещение возможно сжатых данных файла относительно начала zip-файла.</target>
        </trans-unit>
        <trans-unit id="e09d2f8039589d9ae6e6561e5dcd42da64f6928d" translate="yes" xml:space="preserve">
          <source>Database drivers may implement DriverContext for access to contexts and to parse the name only once for a pool of connections, instead of once per connection.</source>
          <target state="translated">Драйверы баз данных могут реализовать DriverContext для доступа к контекстам и разбора имени только один раз для пула соединений,а не один раз для каждого соединения.</target>
        </trans-unit>
        <trans-unit id="73570fc5828e9254e320eeb24fbd8b1ead4beb2e" translate="yes" xml:space="preserve">
          <source>DatabaseTypeName returns the database system name of the column type. If an empty string is returned the driver type name is not supported. Consult your driver documentation for a list of driver data types. Length specifiers are not included. Common type include &quot;VARCHAR&quot;, &quot;TEXT&quot;, &quot;NVARCHAR&quot;, &quot;DECIMAL&quot;, &quot;BOOL&quot;, &quot;INT&quot;, &quot;BIGINT&quot;.</source>
          <target state="translated">DatabaseTypeName возвращает системное имя БД типа столбца.Если возвращается пустая строка,то имя типа драйвера не поддерживается.Список типов данных драйверов можно найти в документации на драйверы.Спецификаторы длины не включены.К общим типам относятся &quot;VARCHAR&quot;,&quot;TEXT&quot;,&quot;NVARCHAR&quot;,&quot;DECIMAL&quot;,&quot;BOOL&quot;,&quot;INT&quot;,&quot;BIGINT&quot;.</target>
        </trans-unit>
        <trans-unit id="63fcacd015b5563886ac82e97060064408d120bb" translate="yes" xml:space="preserve">
          <source>DatabaseTypeName returns the database system name of the column type. If an empty string is returned, then the driver type name is not supported. Consult your driver documentation for a list of driver data types. Length specifiers are not included. Common type names include &quot;VARCHAR&quot;, &quot;TEXT&quot;, &quot;NVARCHAR&quot;, &quot;DECIMAL&quot;, &quot;BOOL&quot;, &quot;INT&quot;, and &quot;BIGINT&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="159c09d3aeadb72b1f5514f38a813eb4c5b0683a" translate="yes" xml:space="preserve">
          <source>Date panics if loc is nil.</source>
          <target state="translated">Свидание с паникой,если Лок ноль.</target>
        </trans-unit>
        <trans-unit id="b8ae8791f875e5c0659aa843bd5208912c32d54d" translate="yes" xml:space="preserve">
          <source>Date parses the Date header field.</source>
          <target state="translated">Дата разбирает поле заголовка &quot;Дата&quot;.</target>
        </trans-unit>
        <trans-unit id="7d0982177e2a17b0a887ab4e3c2bcc10514bc3a0" translate="yes" xml:space="preserve">
          <source>Date returns the Time corresponding to</source>
          <target state="translated">Дата возвращает Время,соответствующее</target>
        </trans-unit>
        <trans-unit id="19811d3575925e21d39da4f63d5d36e7f8d5e6a6" translate="yes" xml:space="preserve">
          <source>Date returns the year, month, and day in which t occurs.</source>
          <target state="translated">Дата возвращает год,месяц и день,в который происходит t.</target>
        </trans-unit>
        <trans-unit id="51777aaad416543ccd0b64993945fa0970cfeed2" translate="yes" xml:space="preserve">
          <source>Day returns the day of the month specified by t.</source>
          <target state="translated">День возвращает день месяца,указанный t.</target>
        </trans-unit>
        <trans-unit id="e2d32bd4b73e4ca6a3fbaa06924f8e5adf4021c4" translate="yes" xml:space="preserve">
          <source>Deadline reports the time at which the test binary will have exceeded the timeout specified by the -timeout flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b4ce5abf04cac4f6b56fb7b5ca2f32ee8f6950" translate="yes" xml:space="preserve">
          <source>DeadlineExceeded is the error returned by Context.Err when the context's deadline passes.</source>
          <target state="translated">DeadlineExceeded-это ошибка,возвращаемая Context.Err при истечении срока действия контекста.</target>
        </trans-unit>
        <trans-unit id="00dbeaa14d4aaefd27f0b729c8572efea591c54d" translate="yes" xml:space="preserve">
          <source>Debug logs a message with severity LOG_DEBUG, ignoring the severity passed to New.</source>
          <target state="translated">Отладка регистрирует сообщение со степенью тяжести LOG_DEBUG,игнорируя степень тяжести,переданную New.</target>
        </trans-unit>
        <trans-unit id="fcbfaca68a329233bc04528ed643e96af823c8d1" translate="yes" xml:space="preserve">
          <source>Debugging support</source>
          <target state="translated">Поддержка отладки</target>
        </trans-unit>
        <trans-unit id="290f9cdf409ce3485bc3ebf61922e97b96ab6dba" translate="yes" xml:space="preserve">
          <source>DecimalSize returns the scale and precision of a decimal type. If not applicable or if not supported ok is false.</source>
          <target state="translated">DecimalSize возвращает шкалу и точность десятичного типа.Если не применимо или если не поддерживается ok-это ложь.</target>
        </trans-unit>
        <trans-unit id="df50d3b937b66b95438db0baeefd22f2c1fa73b6" translate="yes" xml:space="preserve">
          <source>Decode</source>
          <target state="translated">Decode</target>
        </trans-unit>
        <trans-unit id="2191bd1edaed1f948c446e5e5051b352674263c5" translate="yes" xml:space="preserve">
          <source>Decode decodes an RFC 2047 encoded-word.</source>
          <target state="translated">Декодируйте кодированное слово RFC 2047.</target>
        </trans-unit>
        <trans-unit id="c663a98c9ac4bdfaf7570d06109ce1220330af72" translate="yes" xml:space="preserve">
          <source>Decode decodes an image that has been encoded in a registered format. The string returned is the format name used during format registration. Format registration is typically done by an init function in the codec- specific package.</source>
          <target state="translated">Декодируйте декодированное изображение в зарегистрированном формате.Возвращаемая строка-это имя формата,используемое при регистрации формата.Регистрация формата обычно выполняется функцией init в специфическом для кодека пакете.</target>
        </trans-unit>
        <trans-unit id="be2862aea68bddc3797cc61a25b04a065153d058" translate="yes" xml:space="preserve">
          <source>Decode decodes src into DecodedLen(len(src)) bytes, returning the actual number of bytes written to dst.</source>
          <target state="translated">Декодирует src в байты DecodedLen(len(src)),возвращая фактическое количество записанных байтов в dst.</target>
        </trans-unit>
        <trans-unit id="9459e2df37f9d7b79d9c22b47888407d5cae69bd" translate="yes" xml:space="preserve">
          <source>Decode decodes src into dst, returning both the number of bytes written to dst and the number consumed from src. If src contains invalid ascii85 data, Decode will return the number of bytes successfully written and a CorruptInputError. Decode ignores space and control characters in src. Often, ascii85-encoded data is wrapped in &amp;lt;~ and ~&amp;gt; symbols. Decode expects these to have been stripped by the caller.</source>
          <target state="translated">Decode декодирует src в dst, возвращая как количество байтов, записанных в dst, так и количество, потребленное из src. Если src содержит недопустимые данные ascii85, Decode вернет количество успешно записанных байтов и CorruptInputError. Decode игнорирует пробелы и управляющие символы в src. Часто данные в кодировке ascii85 заключаются в символы &amp;lt;~ и ~&amp;gt;. Decode ожидает, что они были удалены вызывающим абонентом.</target>
        </trans-unit>
        <trans-unit id="f4e08a18b5e0596336160230bc4fa0088423d426" translate="yes" xml:space="preserve">
          <source>Decode decodes src using the encoding enc. It writes at most DecodedLen(len(src)) bytes to dst and returns the number of bytes written. If src contains invalid base32 data, it will return the number of bytes successfully written and CorruptInputError. New line characters (\r and \n) are ignored.</source>
          <target state="translated">Декодируйте декодирование src с помощью кодировочного инкапсулирования.Он записывает в dst максимум байт DecodedLen(len(src))и возвращает количество записанных байт.Если src содержит недействительные данные base32,то он вернет количество успешно записанных байт и CorruptInputError.Новые символы строки (\r и \n)игнорируются.</target>
        </trans-unit>
        <trans-unit id="49467dca1e0d0001bc71fa1ac5e9147e30acd4c0" translate="yes" xml:space="preserve">
          <source>Decode decodes src using the encoding enc. It writes at most DecodedLen(len(src)) bytes to dst and returns the number of bytes written. If src contains invalid base64 data, it will return the number of bytes successfully written and CorruptInputError. New line characters (\r and \n) are ignored.</source>
          <target state="translated">Декодируйте декодирование src с помощью кодировочного инкапсулирования.Он записывает в dst максимум байт DecodedLen(len(src))и возвращает количество записанных байт.Если src содержит недействительные данные base64,то он вернет количество успешно записанных байт и CorruptInputError.Новые символы строки (\r и \n)игнорируются.</target>
        </trans-unit>
        <trans-unit id="0f1335189afa4a7c6f3ae9a3d92e18b92bfef1e8" translate="yes" xml:space="preserve">
          <source>Decode expects that src contains only hexadecimal characters and that src has even length. If the input is malformed, Decode returns the number of bytes decoded before the error.</source>
          <target state="translated">Декодирование предполагает,что src содержит только шестнадцатеричные символы,и что src имеет четную длину.Если ввод неверен,Decode возвращает количество байт,декодированных до ошибки.</target>
        </trans-unit>
        <trans-unit id="800876565052483ae20792dbb4cd593c7c3b8846" translate="yes" xml:space="preserve">
          <source>Decode reads a GIF image from r and returns the first embedded image as an image.Image.</source>
          <target state="translated">Декодирование считывает GIF-изображение из r и возвращает первое встроенное изображение в виде image.Image.</target>
        </trans-unit>
        <trans-unit id="cbac39d9a826fbc5afe7154ac34bd2df498566b4" translate="yes" xml:space="preserve">
          <source>Decode reads a JPEG image from r and returns it as an image.Image.</source>
          <target state="translated">Декодирование считывает JPEG изображение из r и возвращает его как image.Image.</target>
        </trans-unit>
        <trans-unit id="1e54593218bc1af392b920a78974a97581bf2c1c" translate="yes" xml:space="preserve">
          <source>Decode reads a PNG image from r and returns it as an image.Image. The type of Image returned depends on the PNG contents.</source>
          <target state="translated">Декодирование считывает PNG-изображение из r и возвращает его как image.image.Тип возвращаемого изображения зависит от содержимого PNG.</target>
        </trans-unit>
        <trans-unit id="fd5abcbefea9089a4ce5a4a52a242638dfec04e7" translate="yes" xml:space="preserve">
          <source>Decode reads the next JSON-encoded value from its input and stores it in the value pointed to by v.</source>
          <target state="translated">Decode считывает со своего входа следующее JSON-кодированное значение и записывает его в значение,на которое указывает v.</target>
        </trans-unit>
        <trans-unit id="9d1df86160a0f777c4ef84d3e5e05362d86ed78c" translate="yes" xml:space="preserve">
          <source>Decode reads the next value from the input stream and stores it in the data represented by the empty interface value. If e is nil, the value will be discarded. Otherwise, the value underlying e must be a pointer to the correct type for the next data item received. If the input is at EOF, Decode returns io.EOF and does not modify e.</source>
          <target state="translated">Декодирование считывает следующее значение из входного потока и сохраняет его в данных,представленных пустым значением интерфейса.Если e равно нулю,то значение будет отброшено.В противном случае,значение,лежащее в основе e,должно быть указателем на правильный тип для следующего полученного элемента данных.Если вход находится в EOF,Decode возвращает io.EOF и не изменяет e.</target>
        </trans-unit>
        <trans-unit id="24fe9f25ab1a2483c4e260dc7fcba6455fbea3ba" translate="yes" xml:space="preserve">
          <source>Decode returns the Unicode code point sequence represented by the UTF-16 encoding s.</source>
          <target state="translated">Декод возвращает последовательность точек кода Юникод,представленную кодировкой UTF-16.</target>
        </trans-unit>
        <trans-unit id="f00520e26a1f23f03c003d00547bb432a3a235dc" translate="yes" xml:space="preserve">
          <source>Decode will find the next PEM formatted block (certificate, private key etc) in the input. It returns that block and the remainder of the input. If no PEM data is found, p is nil and the whole of the input is returned in rest.</source>
          <target state="translated">Декодирование найдет на входе следующий блок формата PEM (сертификат,личный ключ и т.д.).Он возвращает этот блок и оставшуюся часть входа.Если данные PEM не найдены,то p равен нулю,а весь вход возвращается в остатке.</target>
        </trans-unit>
        <trans-unit id="6b302987dc20b61b9749892b479e69a5e336abe4" translate="yes" xml:space="preserve">
          <source>Decode works like Unmarshal, except it reads the decoder stream to find the start element.</source>
          <target state="translated">Декодирование работает как Unmarshal,за исключением того,что он читает поток декодера,чтобы найти стартовый элемент.</target>
        </trans-unit>
        <trans-unit id="30e37be960ab676eab0d765515fe1771dae55149" translate="yes" xml:space="preserve">
          <source>DecodeAll reads a GIF image from r and returns the sequential frames and timing information.</source>
          <target state="translated">DecodeAll считывает GIF-изображение с r и возвращает последовательные кадры и хронометражную информацию.</target>
        </trans-unit>
        <trans-unit id="f4e7173f24924751aa452948d7c6dfbb2edeac9e" translate="yes" xml:space="preserve">
          <source>DecodeConfig decodes the color model and dimensions of an image that has been encoded in a registered format. The string returned is the format name used during format registration. Format registration is typically done by an init function in the codec-specific package.</source>
          <target state="translated">DecodeConfig декодирует цветовую модель и размеры изображения,которое было закодировано в зарегистрированном формате.Возвращаемая строка-это имя формата,используемое при регистрации формата.Регистрация формата обычно выполняется функцией init в специфическом для кодека пакете.</target>
        </trans-unit>
        <trans-unit id="b9adb0fd972eb06c032b93d684f65d570cdcabda" translate="yes" xml:space="preserve">
          <source>DecodeConfig returns the color model and dimensions of a JPEG image without decoding the entire image.</source>
          <target state="translated">DecodeConfig возвращает цветовую модель и размеры изображения в формате JPEG без декодирования всего изображения.</target>
        </trans-unit>
        <trans-unit id="d3a5c1fae5c349d3734ae4489d6aecc2426c5ac7" translate="yes" xml:space="preserve">
          <source>DecodeConfig returns the color model and dimensions of a PNG image without decoding the entire image.</source>
          <target state="translated">DecodeConfig возвращает цветовую модель и размеры PNG-изображения без декодирования всего изображения.</target>
        </trans-unit>
        <trans-unit id="cbf91fca372aef697adf69e21434c0270fdba345" translate="yes" xml:space="preserve">
          <source>DecodeConfig returns the global color model and dimensions of a GIF image without decoding the entire image.</source>
          <target state="translated">DecodeConfig возвращает глобальную цветовую модель и размеры GIF-изображения без декодирования всего изображения.</target>
        </trans-unit>
        <trans-unit id="a1eb5cc06614fd4437a26a4a1653271c12295a5e" translate="yes" xml:space="preserve">
          <source>DecodeElement works like Unmarshal except that it takes a pointer to the start XML element to decode into v. It is useful when a client reads some raw XML tokens itself but also wants to defer to Unmarshal for some elements.</source>
          <target state="translated">DecodeElement работает подобно Unmarshal,за исключением того,что для декодирования в v.Он полезен,когда клиент сам читает некоторые необработанные XML-маркеры,но также хочет перейти на Unmarshal для некоторых элементов.</target>
        </trans-unit>
        <trans-unit id="16713e78705fc06f8e05be74c5067eb69b310b90" translate="yes" xml:space="preserve">
          <source>DecodeHeader decodes all encoded-words of the given string. It returns an error if and only if CharsetReader of d returns an error.</source>
          <target state="translated">DecodeHeader декодирует все закодированные слова данной строки.Он возвращает ошибку,если и только если CharsetReader из d возвращает ошибку.</target>
        </trans-unit>
        <trans-unit id="b8e172ef50e9276e57b5335bf4faa51bee2741d8" translate="yes" xml:space="preserve">
          <source>DecodeLastRune</source>
          <target state="translated">DecodeLastRune</target>
        </trans-unit>
        <trans-unit id="3ae3ba953157b1585814d3fce39e0a50852e7948" translate="yes" xml:space="preserve">
          <source>DecodeLastRune unpacks the last UTF-8 encoding in p and returns the rune and its width in bytes. If p is empty it returns (RuneError, 0). Otherwise, if the encoding is invalid, it returns (RuneError, 1). Both are impossible results for correct, non-empty UTF-8.</source>
          <target state="translated">DecodeLastRune распаковывает последнюю кодировку UTF-8 в p и возвращает руну и её ширину в байтах.Если p пустая,возвращается (RuneError,0).В противном случае,если кодировка недействительна,возвращается (RuneError,1).Оба результата невозможны для корректного,непустого UTF-8.</target>
        </trans-unit>
        <trans-unit id="5bc57e376dc0f134c4bfab7438a8b69c1e50c7e0" translate="yes" xml:space="preserve">
          <source>DecodeLastRuneInString</source>
          <target state="translated">DecodeLastRuneInString</target>
        </trans-unit>
        <trans-unit id="a8a8169059d7047067fb3a3b04fe37855654bbaa" translate="yes" xml:space="preserve">
          <source>DecodeLastRuneInString is like DecodeLastRune but its input is a string. If s is empty it returns (RuneError, 0). Otherwise, if the encoding is invalid, it returns (RuneError, 1). Both are impossible results for correct, non-empty UTF-8.</source>
          <target state="translated">DecodeLastRuneInString похож на DecodeLastRune,но его вход-строка.Если s пустая,то она возвращается (RuneError,0).В противном случае,если кодировка недействительна,она возвращается (RuneError,1).Оба результата невозможны для корректного,непустого UTF-8.</target>
        </trans-unit>
        <trans-unit id="0c840a2944c7b78051c2f4d24c001bb3db7586d2" translate="yes" xml:space="preserve">
          <source>DecodeRune</source>
          <target state="translated">DecodeRune</target>
        </trans-unit>
        <trans-unit id="ebe1a4295199ea56faf52e25cbf7c1b995fb5581" translate="yes" xml:space="preserve">
          <source>DecodeRune returns the UTF-16 decoding of a surrogate pair. If the pair is not a valid UTF-16 surrogate pair, DecodeRune returns the Unicode replacement code point U+FFFD.</source>
          <target state="translated">DecodeRune возвращает декодирование UTF-16 суррогатной пары.Если пара не является действительной суррогатной парой UTF-16,DecodeRune возвращает кодовую точку U+FFFD для замены Unicode.</target>
        </trans-unit>
        <trans-unit id="1cf3960cee32acc9ec4f47da069c9ab188d23f22" translate="yes" xml:space="preserve">
          <source>DecodeRune unpacks the first UTF-8 encoding in p and returns the rune and its width in bytes. If p is empty it returns (RuneError, 0). Otherwise, if the encoding is invalid, it returns (RuneError, 1). Both are impossible results for correct, non-empty UTF-8.</source>
          <target state="translated">DecodeRune распаковывает первую кодировку UTF-8 в p и возвращает руну и её ширину в байтах.Если p пустая,то возвращается (RuneError,0).В противном случае,если кодировка недействительна,возвращается (RuneError,1).Оба результата невозможны для корректного,непустого UTF-8.</target>
        </trans-unit>
        <trans-unit id="88cfb2ee82f7d9405832cfa50700196812107d51" translate="yes" xml:space="preserve">
          <source>DecodeRuneInString</source>
          <target state="translated">DecodeRuneInString</target>
        </trans-unit>
        <trans-unit id="4d4647dc4c9636993df78e7b7af6c3ed7bc1b87f" translate="yes" xml:space="preserve">
          <source>DecodeRuneInString is like DecodeRune but its input is a string. If s is empty it returns (RuneError, 0). Otherwise, if the encoding is invalid, it returns (RuneError, 1). Both are impossible results for correct, non-empty UTF-8.</source>
          <target state="translated">DecodeRuneInString похож на DecodeRune,но его вход-это строка.Если s пустая,то она возвращается (RuneError,0).В противном случае,если кодировка недействительна,она возвращается (RuneError,1).Оба результата невозможны для корректного,непустого UTF-8.</target>
        </trans-unit>
        <trans-unit id="745e8eb6ad128aef996ff9d7b991cd3156884887" translate="yes" xml:space="preserve">
          <source>DecodeString</source>
          <target state="translated">DecodeString</target>
        </trans-unit>
        <trans-unit id="a2995ec38a1c149f49a43c3725e4ad8ab6ccd917" translate="yes" xml:space="preserve">
          <source>DecodeString expects that src contains only hexadecimal characters and that src has even length. If the input is malformed, DecodeString returns the bytes decoded before the error.</source>
          <target state="translated">DecodeString ожидает,что src содержит только шестнадцатеричные символы,а src имеет четную длину.Если ввод неверен,DecodeString возвращает байты,декодированные до ошибки.</target>
        </trans-unit>
        <trans-unit id="28b43cb23d14fc7963d139c1d5ae99c19fcc2059" translate="yes" xml:space="preserve">
          <source>DecodeString returns the bytes represented by the base32 string s.</source>
          <target state="translated">DecodeString возвращает байты,представленные строкой base32 s.</target>
        </trans-unit>
        <trans-unit id="bf0c084f0da6a7f9bfbaeea805ea061f148fa74e" translate="yes" xml:space="preserve">
          <source>DecodeString returns the bytes represented by the base64 string s.</source>
          <target state="translated">DecodeString возвращает байты,представленные строкой s base64.</target>
        </trans-unit>
        <trans-unit id="56ca5d4a132d23d7b5bfe286e9414cf1733e1fd7" translate="yes" xml:space="preserve">
          <source>DecodeString returns the bytes represented by the hexadecimal string s.</source>
          <target state="translated">DecodeString возвращает байты,представленные шестнадцатеричной строкой s.</target>
        </trans-unit>
        <trans-unit id="673f927f28506c494b47dc9326f68e21fe962028" translate="yes" xml:space="preserve">
          <source>DecodeValue reads the next value from the input stream. If v is the zero reflect.Value (v.Kind() == Invalid), DecodeValue discards the value. Otherwise, it stores the value into v. In that case, v must represent a non-nil pointer to data or be an assignable reflect.Value (v.CanSet()) If the input is at EOF, DecodeValue returns io.EOF and does not modify v.</source>
          <target state="translated">DecodeValue считывает следующее значение из входного потока.Если v-нулевое отражение.Value (v.Kind()==Invalid),то DecodeValue сбрасывает это значение.В противном случае,он сохраняет значение в v.В этом случае v должна представлять нулевой указатель на данные или быть присваиваемым reflect.Value (v.CanSet())Если вход находится в EOF,DecodeValue возвращает io.EOF и не модифицирует v.</target>
        </trans-unit>
        <trans-unit id="2ee37cdba307bd5c5065d5683f7caa610723e58f" translate="yes" xml:space="preserve">
          <source>DecodedLen returns the length of a decoding of x source bytes. Specifically, it returns x / 2.</source>
          <target state="translated">DecodedLen возвращает длину декодирования исходных байтов x.В частности,возвращает x/2.</target>
        </trans-unit>
        <trans-unit id="be5f0b99888068a2482a86b50382454ef22b14f5" translate="yes" xml:space="preserve">
          <source>DecodedLen returns the maximum length in bytes of the decoded data corresponding to n bytes of base32-encoded data.</source>
          <target state="translated">DecodedLen возвращает максимальную длину в байтах декодированных данных,соответствующую n байтам данных,закодированных в base32.</target>
        </trans-unit>
        <trans-unit id="f6813385272ace1ce0fb064215644848699dad2c" translate="yes" xml:space="preserve">
          <source>DecodedLen returns the maximum length in bytes of the decoded data corresponding to n bytes of base64-encoded data.</source>
          <target state="translated">DecodedLen возвращает максимальную длину в байтах декодированных данных,соответствующую n байтам данных в base64-кодировке.</target>
        </trans-unit>
        <trans-unit id="7be2f0f143224d91c1d79bb0d11cb4d0a2c69cde" translate="yes" xml:space="preserve">
          <source>Decoder</source>
          <target state="translated">Decoder</target>
        </trans-unit>
        <trans-unit id="996bd0771aab35e5131c87bd200dc9468eb01de6" translate="yes" xml:space="preserve">
          <source>Decoder.Decode (Stream)</source>
          <target state="translated">Декодер.Декодирование (Поток)</target>
        </trans-unit>
        <trans-unit id="faf9a389ba774205e867958c9afe08f731ca89bb" translate="yes" xml:space="preserve">
          <source>Decoder.Token</source>
          <target state="translated">Decoder.Token</target>
        </trans-unit>
        <trans-unit id="db7ab43dcdcfcb47bfa27b64166db401a89736c7" translate="yes" xml:space="preserve">
          <source>DecodingError represents an error during the decoding of the symbol table.</source>
          <target state="translated">DecodingError представляет собой ошибку при декодировании таблицы символов.</target>
        </trans-unit>
        <trans-unit id="0b94875d5ae7b9c3094dfb94beb7d5de130a33ce" translate="yes" xml:space="preserve">
          <source>Decrypt decrypts ciphertext with priv. If opts is nil or of type *PKCS1v15DecryptOptions then PKCS #1 v1.5 decryption is performed. Otherwise opts must have type *OAEPOptions and OAEP decryption is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dcf05d5aa284e84069d30f83d263bbffd81d4e" translate="yes" xml:space="preserve">
          <source>Decrypt decrypts ciphertext with priv. If opts is nil or of type *PKCS1v15DecryptOptions then PKCS#1 v1.5 decryption is performed. Otherwise opts must have type *OAEPOptions and OAEP decryption is done.</source>
          <target state="translated">Дешифровка расшифровывает шифрованный текст с помощью priv.Если параметр равен нулю или имеет тип *PKCS1v15DecryptOptions,то выполняется расшифровка PKCS#1 v1.5.В противном случае опции должны иметь тип *OAEPOptions и расшифровка OAEP выполняется.</target>
        </trans-unit>
        <trans-unit id="c8fb78d92446f4f89c55adea7b4c51873a0fe712" translate="yes" xml:space="preserve">
          <source>DecryptOAEP</source>
          <target state="translated">DecryptOAEP</target>
        </trans-unit>
        <trans-unit id="0cd489336e048225cfa022050936a5c58e2960d4" translate="yes" xml:space="preserve">
          <source>DecryptOAEP decrypts ciphertext using RSA-OAEP.</source>
          <target state="translated">DecryptOAEP расшифровывает шифрованный текст с помощью RSA-OAEP.</target>
        </trans-unit>
        <trans-unit id="32272700b3ba6f69208e5dfe18a0bcc77bf36bf3" translate="yes" xml:space="preserve">
          <source>DecryptPEMBlock takes a password encrypted PEM block and the password used to encrypt it and returns a slice of decrypted DER encoded bytes. It inspects the DEK-Info header to determine the algorithm used for decryption. If no DEK-Info header is present, an error is returned. If an incorrect password is detected an IncorrectPasswordError is returned. Because of deficiencies in the encrypted-PEM format, it's not always possible to detect an incorrect password. In these cases no error will be returned but the decrypted DER bytes will be random noise.</source>
          <target state="translated">DecryptPEMBlock берет зашифрованный паролем PEM-блок и пароль,используемый для его шифрования,и возвращает кусок зашифрованного DER-байта.Он проверяет DEK-Info заголовок для определения алгоритма,используемого для расшифровки.Если заголовок DEK-Info отсутствует,возвращается ошибка.При обнаружении неверного пароля возвращается сообщение об ошибке IncorrectPasswordError.Из-за недостатков зашифрованного PEM-формата не всегда удается обнаружить неверный пароль.В этих случаях ошибка не возвращается,но расшифрованные байты DER будут представлять собой случайный шум.</target>
        </trans-unit>
        <trans-unit id="8267792c1d86b133c1f8480a3f569d09faf980b4" translate="yes" xml:space="preserve">
          <source>DecryptPKCS1v15 decrypts a plaintext using RSA and the padding scheme from PKCS #1 v1.5. If rand != nil, it uses RSA blinding to avoid timing side-channel attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ec5d72084471d9fb9aaf2dccd71a7a1ffbaa60" translate="yes" xml:space="preserve">
          <source>DecryptPKCS1v15 decrypts a plaintext using RSA and the padding scheme from PKCS#1 v1.5. If rand != nil, it uses RSA blinding to avoid timing side-channel attacks.</source>
          <target state="translated">DecryptPKCS1v15 расшифровывает обычный текст с помощью RSA и схемы подкладки из PKCS#1 v1.5.Если rand !=nil,то он использует RSA-ослепление,чтобы избежать временных атак по боковым каналам.</target>
        </trans-unit>
        <trans-unit id="1723fb53bff3596074c056ebc7f6bdfb8a16cfcd" translate="yes" xml:space="preserve">
          <source>DecryptPKCS1v15SessionKey</source>
          <target state="translated">DecryptPKCS1v15SessionKey</target>
        </trans-unit>
        <trans-unit id="24a8f2fc9c60d6d24ff8cc8415c7c8b3fa33528f" translate="yes" xml:space="preserve">
          <source>DecryptPKCS1v15SessionKey decrypts a session key using RSA and the padding scheme from PKCS #1 v1.5. If rand != nil, it uses RSA blinding to avoid timing side-channel attacks. It returns an error if the ciphertext is the wrong length or if the ciphertext is greater than the public modulus. Otherwise, no error is returned. If the padding is valid, the resulting plaintext message is copied into key. Otherwise, key is unchanged. These alternatives occur in constant time. It is intended that the user of this function generate a random session key beforehand and continue the protocol with the resulting value. This will remove any possibility that an attacker can learn any information about the plaintext. See &amp;ldquo;Chosen Ciphertext Attacks Against Protocols Based on the RSA Encryption Standard PKCS #1&amp;rdquo;, Daniel Bleichenbacher, Advances in Cryptology (Crypto '98).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5034a4dbba2441d68b5bba30749025b8a62d6758" translate="yes" xml:space="preserve">
          <source>DecryptPKCS1v15SessionKey decrypts a session key using RSA and the padding scheme from PKCS#1 v1.5. If rand != nil, it uses RSA blinding to avoid timing side-channel attacks. It returns an error if the ciphertext is the wrong length or if the ciphertext is greater than the public modulus. Otherwise, no error is returned. If the padding is valid, the resulting plaintext message is copied into key. Otherwise, key is unchanged. These alternatives occur in constant time. It is intended that the user of this function generate a random session key beforehand and continue the protocol with the resulting value. This will remove any possibility that an attacker can learn any information about the plaintext. See &amp;ldquo;Chosen Ciphertext Attacks Against Protocols Based on the RSA Encryption Standard PKCS #1&amp;rdquo;, Daniel Bleichenbacher, Advances in Cryptology (Crypto '98).</source>
          <target state="translated">DecryptPKCS1v15SessionKey расшифровывает сеансовый ключ, используя RSA и схему заполнения из PKCS # 1 v1.5. Если rand! = Nil, он использует ослепление RSA, чтобы избежать атак по побочным каналам по времени. Он возвращает ошибку, если зашифрованный текст имеет неправильную длину или если зашифрованный текст больше, чем общедоступный модуль. В противном случае ошибка не возвращается. Если заполнение допустимо, результирующее текстовое сообщение копируется в ключ. В противном случае ключ не меняется. Эти альтернативы происходят в постоянное время. Предполагается, что пользователь этой функции заранее сгенерирует случайный сеансовый ключ и продолжит выполнение протокола с полученным значением. Это устранит любую возможность того, что злоумышленник сможет узнать какую-либо информацию об открытом тексте. См. &amp;laquo;Атаки по выбранному зашифрованному тексту на протоколы, основанные на стандарте шифрования RSA PKCS # 1&amp;raquo;, Даниэль Блейхенбахер,Достижения в криптологии (Crypto '98).</target>
        </trans-unit>
        <trans-unit id="42a6dfe4c2e189c8de29f15cddcf7cf9dba25238" translate="yes" xml:space="preserve">
          <source>Decrypter is an interface for an opaque private key that can be used for asymmetric decryption operations. An example would be an RSA key kept in a hardware module.</source>
          <target state="translated">Дешифровщик-это интерфейс для непрозрачного приватного ключа,который может быть использован для асимметричных операций дешифровки.Примером может служить RSA ключ,хранящийся в аппаратном модуле.</target>
        </trans-unit>
        <trans-unit id="b7ae957644bea42b7ff65d51f99ce49cb83fd388" translate="yes" xml:space="preserve">
          <source>DeepEqual reports whether x and y are &amp;ldquo;deeply equal,&amp;rdquo; defined as follows. Two values of identical type are deeply equal if one of the following cases applies. Values of distinct types are never deeply equal.</source>
          <target state="translated">DeepEqual сообщает, являются ли x и y &amp;laquo;полностью равными&amp;raquo;, что определяется следующим образом. Два значения одного и того же типа полностью равны, если применяется один из следующих случаев. Ценности разных типов никогда не бывают полностью равными.</target>
        </trans-unit>
        <trans-unit id="d88594116663c9d491607d208f07eaf0d91b8568" translate="yes" xml:space="preserve">
          <source>DefPredeclaredTestFuncs defines the assert and trace built-ins. These built-ins are intended for debugging and testing of this package only.</source>
          <target state="translated">DefPredeclaredTestFuncs определяет установку и трассировку встроенных элементов.Эти сборки предназначены только для отладки и тестирования данного пакета.</target>
        </trans-unit>
        <trans-unit id="a034168ac1ac48bea6ed331fcaa43cff83c78c4c" translate="yes" xml:space="preserve">
          <source>Default behavior of signals in Go programs</source>
          <target state="translated">Поведение сигналов по умолчанию в программах Go</target>
        </trans-unit>
        <trans-unit id="5a5930ff9b687f979b109248d33bd87544c6441a" translate="yes" xml:space="preserve">
          <source>Default is the default Context for builds. It uses the GOARCH, GOOS, GOROOT, and GOPATH environment variables if set, or else the compiled code's GOARCH, GOOS, and GOROOT.</source>
          <target state="translated">По умолчанию это Контекст по умолчанию для сборок.Он использует переменные окружения GOARCH,GOOS,GOROOT и GOPATH,если они установлены,или же скомпилированный код GOARCH,GOOS и GOROOT.</target>
        </trans-unit>
        <trans-unit id="72e5e6d9fc404c78f1caf70dbc4a96064e7c0a25" translate="yes" xml:space="preserve">
          <source>Default returns an Importer for the compiler that built the running binary. If available, the result implements types.ImporterFrom.</source>
          <target state="translated">По умолчанию возвращает импортер для компилятора,который собрал запущенный двоичный файл.Если доступно,то результат реализует type.ImporterFrom.</target>
        </trans-unit>
        <trans-unit id="ec9d9531a88729b86031d49234703db1873e5fde" translate="yes" xml:space="preserve">
          <source>Default returns the default &quot;typed&quot; type for an &quot;untyped&quot; type; it returns the incoming type for all other types. The default type for untyped nil is untyped nil.</source>
          <target state="translated">По умолчанию возвращает тип по умолчанию &quot;typed&quot; для типа &quot;untyped&quot;;возвращает входящий тип для всех остальных типов.По умолчанию тип &quot;untyped nil&quot; является типом &quot;untyped nil&quot;.</target>
        </trans-unit>
        <trans-unit id="a32a9ab63a855b6d134feb2b19c4b8ed98d5511f" translate="yes" xml:space="preserve">
          <source>DefaultClient is the default Client and is used by Get, Head, and Post.</source>
          <target state="translated">DefaultClient является клиентом по умолчанию и используется Get,Head и Post.</target>
        </trans-unit>
        <trans-unit id="fa23924b211ce5cb27ec1d2387da0f7a6637db67" translate="yes" xml:space="preserve">
          <source>DefaultMask returns the default IP mask for the IP address ip. Only IPv4 addresses have default masks; DefaultMask returns nil if ip is not a valid IPv4 address.</source>
          <target state="translated">DefaultMask возвращает маску IP по умолчанию для IP-адреса ip.Только IPv4-адреса имеют маски по умолчанию;Маска по умолчанию возвращает ноль,если ip не является действительным IPv4-адресом.</target>
        </trans-unit>
        <trans-unit id="e06a50030e5f43ee5b24b6931b868b3e071ca071" translate="yes" xml:space="preserve">
          <source>DefaultMaxHeaderBytes is the maximum permitted size of the headers in an HTTP request. This can be overridden by setting Server.MaxHeaderBytes.</source>
          <target state="translated">DefaultMaxHeaderBytes-это максимально допустимый размер заголовков в HTTP-запросе.Это можно переопределить настройкой Server.MaxHeaderBytes.</target>
        </trans-unit>
        <trans-unit id="636a0952f2f8473680d4e7cc7eb53279b90ac029" translate="yes" xml:space="preserve">
          <source>DefaultMaxIdleConnsPerHost is the default value of Transport's MaxIdleConnsPerHost.</source>
          <target state="translated">DefaultMaxIdleConnsPerHost-это значение по умолчанию MaxIdleConnsPerHost на транспорте.</target>
        </trans-unit>
        <trans-unit id="0b44788c36bdae15408049002f004c79915e5e4d" translate="yes" xml:space="preserve">
          <source>DefaultParameterConverter is the default implementation of ValueConverter that's used when a Stmt doesn't implement ColumnConverter.</source>
          <target state="translated">DefaultParameterConverter-это реализация ValueConverter по умолчанию,которая используется,когда Stmt не реализует ColumnConverter.</target>
        </trans-unit>
        <trans-unit id="2eacc041065f99c81cc8f5fd899b6fc82a35c5b3" translate="yes" xml:space="preserve">
          <source>DefaultParameterConverter returns its argument directly if IsValue(arg). Otherwise, if the argument implements Valuer, its Value method is used to return a Value. As a fallback, the provided argument's underlying type is used to convert it to a Value: underlying integer types are converted to int64, floats to float64, bool, string, and []byte to themselves. If the argument is a nil pointer, ConvertValue returns a nil Value. If the argument is a non-nil pointer, it is dereferenced and ConvertValue is called recursively. Other types are an error.</source>
          <target state="translated">DefaultParameterConverter возвращает свой аргумент напрямую,если IsValue(arg).В противном случае,если аргумент реализует Valuer,его метод Value используется для возврата Value.В качестве запасного варианта тип,лежащий в основе аргумента,используется для приведения его к Value:лежащие в основе целые типы преобразуются в int64,floats-в float64,bool,string и []byte-в себя.Если аргумент является нулевым указателем,ConvertValue возвращает нулевое значение.Если аргумент является нулевым указателем,то он разыменовывается и ConvertValue вызывается рекурсивно.Остальные типы являются ошибкой.</target>
        </trans-unit>
        <trans-unit id="5f213734fb7e3669ea6cde1adb844c4352398832" translate="yes" xml:space="preserve">
          <source>DefaultQuality is the default quality encoding parameter.</source>
          <target state="translated">DefaultQuality-параметр кодирования качества по умолчанию.</target>
        </trans-unit>
        <trans-unit id="38d9675d6a9519fefbcc46ae56e43608c28aa568" translate="yes" xml:space="preserve">
          <source>DefaultRemoteAddr is the default remote address to return in RemoteAddr if an explicit DefaultRemoteAddr isn't set on ResponseRecorder.</source>
          <target state="translated">DefaultRemoteAddr-это удаленный адрес по умолчанию для возврата в RemoteAddr,если явный DefaultRemoteAddr не установлен в ResponseRecorder.</target>
        </trans-unit>
        <trans-unit id="6ee5c05653051c51f271a77afcb53f5d1e6c059a" translate="yes" xml:space="preserve">
          <source>DefaultResolver is the resolver used by the package-level Lookup functions and by Dialers without a specified Resolver.</source>
          <target state="translated">DefaultResolver-это резольвер,используемый функциями поиска на уровне пакетов и дозвонщиками без указанного резольвера.</target>
        </trans-unit>
        <trans-unit id="d5ebe0e1b713e364b784eb80c7a317d8d294f9a0" translate="yes" xml:space="preserve">
          <source>DefaultServeMux is the default ServeMux used by Serve.</source>
          <target state="translated">DefaultServeMux является ServeMux по умолчанию используется ServeMux.</target>
        </trans-unit>
        <trans-unit id="e263e8bc5cd83dd3c4b95718e56ae0981b0cc5d2" translate="yes" xml:space="preserve">
          <source>DefaultServer is the default instance of *Server.</source>
          <target state="translated">DefaultServer является экземпляром *Server по умолчанию.</target>
        </trans-unit>
        <trans-unit id="372f5d0502fa7b598a3ec0b732f37219d19fac76" translate="yes" xml:space="preserve">
          <source>DefaultTransport is the default implementation of Transport and is used by DefaultClient. It establishes network connections as needed and caches them for reuse by subsequent calls. It uses HTTP proxies as directed by the $HTTP_PROXY and $NO_PROXY (or $http_proxy and $no_proxy) environment variables.</source>
          <target state="translated">DefaultTransport является реализацией Transport по умолчанию и используется DefaultClient.Он устанавливает сетевые соединения по мере необходимости и кэширует их для повторного использования последующими вызовами.Он использует HTTP прокси в соответствии с указаниями переменных окружения $HTTP_PROXY и $NO_PROXY (или $http_proxy и $no_proxy).</target>
        </trans-unit>
        <trans-unit id="afd8250a6d786e6fc36b7943762248db8114871c" translate="yes" xml:space="preserve">
          <source>Define flags using flag.String(), Bool(), Int(), etc.</source>
          <target state="translated">Определите флаги,используя flag.String(),Bool(),Int()и т.д..</target>
        </trans-unit>
        <trans-unit id="59702ad1f8b86127487509bba28cce815f45cb43" translate="yes" xml:space="preserve">
          <source>DefinedTemplates returns a string listing the defined templates, prefixed by the string &quot;; defined templates are: &quot;. If there are none, it returns the empty string. For generating an error message here and in html/template.</source>
          <target state="translated">DefinedTemplates возвращает строку,содержащую список определенных шаблонов,префиксом к которым является строка &quot;;определенные шаблоны-это те шаблоны,которые были определены:&quot;.Если их нет,возвращается пустая строка.Для генерации сообщения об ошибке здесь и в html/template.</target>
        </trans-unit>
        <trans-unit id="0ef9206feec84a2fab3e1d763ed437ba19bc8059" translate="yes" xml:space="preserve">
          <source>DefinedTemplates returns a string listing the defined templates, prefixed by the string &quot;; defined templates are: &quot;. If there are none, it returns the empty string. Used to generate an error message.</source>
          <target state="translated">DefinedTemplates возвращает строку,содержащую список определенных шаблонов,префиксом к которым является строка &quot;;определенные шаблоны-это те шаблоны,которые были определены:&quot;.Если их нет,возвращается пустая строка.Используется для генерации сообщения об ошибке.</target>
        </trans-unit>
        <trans-unit id="eb57645975348dea1039fb97dc2b2b89c0be776d" translate="yes" xml:space="preserve">
          <source>Del deletes the values associated with key.</source>
          <target state="translated">Del удаляет значения,связанные с ключом.</target>
        </trans-unit>
        <trans-unit id="857c30a3f9faee13278e31d18a439b577b3f1737" translate="yes" xml:space="preserve">
          <source>Del deletes the values associated with key. The key is case insensitive; it is canonicalized by CanonicalHeaderKey.</source>
          <target state="translated">Del удаляет значения,связанные с ключом.Ключ не чувствителен к регистру;он канонизирован CanonicalHeaderKey.</target>
        </trans-unit>
        <trans-unit id="2f7c858ff141d7fef3418ae36b43cc7a74036332" translate="yes" xml:space="preserve">
          <source>Delete deletes the JavaScript property p of value v. It panics if v is not a JavaScript object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344d7532f4d066a3be32162f19300bafca7e706e" translate="yes" xml:space="preserve">
          <source>Delete deletes the given key from the map.</source>
          <target state="translated">Удалить удаляет данную клавишу с карты.</target>
        </trans-unit>
        <trans-unit id="0084056bfddcb6daf1843876f6cd9d7b3ea00fa3" translate="yes" xml:space="preserve">
          <source>Delete deletes the value for a key.</source>
          <target state="translated">Удалить удаляет значение для ключа.</target>
        </trans-unit>
        <trans-unit id="d5efbe5b092d83811fac07a9464c08df78f1c725" translate="yes" xml:space="preserve">
          <source>Delims sets the action delimiters to the specified strings, to be used in subsequent calls to Parse, ParseFiles, or ParseGlob. Nested template definitions will inherit the settings. An empty delimiter stands for the corresponding default: {{ or }}. The return value is the template, so calls can be chained.</source>
          <target state="translated">Delims устанавливает разделители действий для указанных строк,которые будут использоваться в последующих вызовах Parse,ParseFiles или ParseGlob.Вложенные определения шаблонов наследуют настройки.Пустой разделитель обозначает соответствующее значение по умолчанию:{{или }}.Возвращаемое значение-шаблон,поэтому вызовы могут быть цепочки.</target>
        </trans-unit>
        <trans-unit id="31fea7c88227fcd4f765a38f852f853c5cec5b28" translate="yes" xml:space="preserve">
          <source>Denom returns the denominator of x; it is always &amp;gt; 0. The result is a reference to x's denominator, unless x is an uninitialized (zero value) Rat, in which case the result is a new Int of value 1. (To initialize x, any operation that sets x will do, including x.Set(x).) If the result is a reference to x's denominator it may change if a new value is assigned to x, and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0d4298e3ba9dd9990445a4ef4e8a6cd12c5f4f" translate="yes" xml:space="preserve">
          <source>Denom returns the denominator of x; it is always &amp;gt; 0. The result is a reference to x's denominator; it may change if a new value is assigned to x, and vice versa.</source>
          <target state="translated">Denom возвращает знаменатель x; он всегда&amp;gt; 0. Результат является ссылкой на знаменатель x; он может измениться, если x будет присвоено новое значение, и наоборот.</target>
        </trans-unit>
        <trans-unit id="0b8eeb4cd02c6a77b7f55a05d7bd3c8acc59c71d" translate="yes" xml:space="preserve">
          <source>Denom returns the denominator of x; x must be Int, Float, or Unknown. If x is Unknown, or if it is too large or small to represent as a fraction, the result is Unknown. Otherwise the result is an Int &amp;gt;= 1.</source>
          <target state="translated">Denom возвращает знаменатель x; x должен быть Int, Float или Unknown. Если x имеет значение Unknown, или если оно слишком велико или мало для представления в виде дроби, результатом будет Unknown. В противном случае результатом будет Int&amp;gt; = 1.</target>
        </trans-unit>
        <trans-unit id="02dfda4f203755036a797366a5e270c14beadf5b" translate="yes" xml:space="preserve">
          <source>Depending on the HTTP client software, HTTP protocol version, and any intermediaries between the client and the Go server, it may not be possible to read from the Request.Body after writing to the ResponseWriter. Cautious handlers should read the Request.Body first, and then reply.</source>
          <target state="translated">В зависимости от программного обеспечения HTTP-клиента,версии протокола HTTP и любых посредников между клиентом и Go-сервером,после записи в ResponseWriter,может оказаться невозможным прочитать из файла Request.Body.Осторожные обработчики должны сначала прочитать Request.Body,а затем ответить.</target>
        </trans-unit>
        <trans-unit id="51ff8b9c366b37de75e0a219f6054e295296daec" translate="yes" xml:space="preserve">
          <source>Deprecated: Drivers should implement ExecerContext instead.</source>
          <target state="translated">Искренне:Драйверы должны реализовать ExecerContext вместо этого.</target>
        </trans-unit>
        <trans-unit id="d4d3a3d65ddeed121ddbee894f4a71e4f38ef5f4" translate="yes" xml:space="preserve">
          <source>Deprecated: Drivers should implement NamedValueChecker.</source>
          <target state="translated">Искренне:Драйверы должны внедрить NamedValueChecker.</target>
        </trans-unit>
        <trans-unit id="8c65d9b0a5c2499f69091385e530d0488f264354" translate="yes" xml:space="preserve">
          <source>Deprecated: Drivers should implement QueryerContext instead.</source>
          <target state="translated">Искренне:Драйверы должны реализовать QueryerContext вместо этого.</target>
        </trans-unit>
        <trans-unit id="fd55ed21fcef6e8036c179ed17978a5eb1bc511c" translate="yes" xml:space="preserve">
          <source>Deprecated: HasPrefix does not respect path boundaries and does not ignore case when required.</source>
          <target state="translated">Искренне:HasPrefix не уважает границы путей и не игнорирует регистр,когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="1b6314119e2a70e822325ecc07d6f3bcf87fad5a" translate="yes" xml:space="preserve">
          <source>Deprecated: In earlier releases, when using a Regexp in multiple goroutines, giving each goroutine its own copy helped to avoid lock contention. As of Go 1.12, using Copy is no longer necessary to avoid lock contention. Copy may still be appropriate if the reason for its use is to make two copies with different Longest settings.</source>
          <target state="translated">Искренне:В более ранних релизах,при использовании Regexp в нескольких goroutines,предоставление каждой goroutine своей копии помогло избежать блокировки разногласий.Начиная с версии 1.12,использование Copy больше не требуется,чтобы избежать борьбы с блокировкой.Копия все еще может быть уместна,если причина ее использования состоит в том,чтобы сделать две копии с разными настройками длины.</target>
        </trans-unit>
        <trans-unit id="196baba74aa7f3fe660f08b7ea54fa454a6f0a4a" translate="yes" xml:space="preserve">
          <source>Deprecated: NameToCertificate only allows associating a single certificate with a given name. Leave that field nil to let the library select the first compatible chain from Certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9637414855ddbc727fc7477deb59945461f257c8" translate="yes" xml:space="preserve">
          <source>Deprecated: No longer returned.</source>
          <target state="translated">Искренне:Больше не возвращается.</target>
        </trans-unit>
        <trans-unit id="0fd839aca1062d0406d212ed9c29a708a99c5ae4" translate="yes" xml:space="preserve">
          <source>Deprecated: No longer used; kept for compatibility.</source>
          <target state="translated">Искренне:Больше не используется;сохранено для совместимости.</target>
        </trans-unit>
        <trans-unit id="3c3790917f28a2ba29e0716702d6e5bf036726c8" translate="yes" xml:space="preserve">
          <source>Deprecated: Not all errors in the http package related to protocol errors are of type ProtocolError.</source>
          <target state="translated">Искренне:Не все ошибки в http-пакете,связанные с протокольными ошибками,относятся к типу ProtocolError.</target>
        </trans-unit>
        <trans-unit id="490458aa5011ab7b075523616154746f03267643" translate="yes" xml:space="preserve">
          <source>Deprecated: Reader is not used by the image/jpeg package and should not be used by others. It is kept for compatibility.</source>
          <target state="translated">Искренне:Reader не используется в пакете image/jpeg и не должен использоваться другими.Он сохраняется для совместимости.</target>
        </trans-unit>
        <trans-unit id="58781567b2fb92c443f90638b4d662c4329af403" translate="yes" xml:space="preserve">
          <source>Deprecated: Reset can't guarantee that the key will be entirely removed from the process's memory.</source>
          <target state="translated">Искренне:Сброс не может гарантировать,что ключ будет полностью удален из памяти процесса.</target>
        </trans-unit>
        <trans-unit id="43ac2e35f199dfb76444834868effa77e8fa4427" translate="yes" xml:space="preserve">
          <source>Deprecated: Use BytePtrFromString instead.</source>
          <target state="translated">Искренне:Вместо этого используйте BytePtrFromString.</target>
        </trans-unit>
        <trans-unit id="51efd02191b9f71984ba76cbf148870f02e1d8c6" translate="yes" xml:space="preserve">
          <source>Deprecated: Use ByteSliceFromString instead.</source>
          <target state="translated">Искренне:Вместо этого используйте ByteSliceFromString.</target>
        </trans-unit>
        <trans-unit id="fd4b3efcc65217311972673c02ffe9a5cb88dfaf" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Client or Transport in package net/http instead.</source>
          <target state="translated">Искренне:Используйте Клиента или Транспорт в пакетной сети/http вместо этого.</target>
        </trans-unit>
        <trans-unit id="d6270f7239a09518438a88d37dad394b15480fb8" translate="yes" xml:space="preserve">
          <source>Deprecated: Use EmbeddedType which is not restricted to defined (*Named) types.</source>
          <target state="translated">Искренне:Используйте EmbeddedType,который не ограничен определенными (*Named)типами.</target>
        </trans-unit>
        <trans-unit id="7bc19f31fefb5069bf157150b156e0dbda6a5cff" translate="yes" xml:space="preserve">
          <source>Deprecated: Use ForCompiler, which populates a FileSet with the positions of objects created by the importer.</source>
          <target state="translated">Искренне:Используйте ForCompiler,который заполняет FileSet с позициями объектов,созданных импортером.</target>
        </trans-unit>
        <trans-unit id="dea355e8883ce226aad79e4df0b17269bf068a57" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Modified instead.</source>
          <target state="translated">Искренне:Используйте вместо этого Modified.</target>
        </trans-unit>
        <trans-unit id="dd51e4444ff9f93d6d490f4c8fbbe80d17a8f7ed" translate="yes" xml:space="preserve">
          <source>Deprecated: Use NewInterfaceType instead which allows any (even non-defined) interface types to be embedded. This is necessary for interfaces that embed alias type names referring to non-defined (literal) interface types.</source>
          <target state="translated">Искренне:Вместо этого используйте NewInterfaceType,который позволяет встраивать любые (даже неопределенные)типы интерфейсов.Это необходимо для интерфейсов,которые встраивают имена псевдонимов типов,относящихся к неопределенным (буквальным)типам интерфейсов.</target>
        </trans-unit>
        <trans-unit id="86a0a87c06d3b24ae7ba083e47038c07c1ec8a45" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Request.WithContext to create a request with a cancelable context instead. CancelRequest cannot cancel HTTP/2 requests.</source>
          <target state="translated">Искренне:Используйте Request.WithContext для создания запроса с отменяемым контекстом.CancelRequest не может отменять HTTP/2 запросы.</target>
        </trans-unit>
        <trans-unit id="5afbed661568f02f17be5136af0d00c63dacdf0f" translate="yes" xml:space="preserve">
          <source>Deprecated: Use SlicePtrFromStrings instead.</source>
          <target state="translated">Искренне:Вместо этого используйте SlicePtrFromStrings.</target>
        </trans-unit>
        <trans-unit id="9307fd6cc4683ebcdd10ed61846d3a8429d1b79d" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Table's LineToPC method instead.</source>
          <target state="translated">Искренне:Вместо этого используйте метод Table's LineToPC.</target>
        </trans-unit>
        <trans-unit id="4b5050bfb6e04ec77adc6d71cc882c7de1e14526" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Table's PCToLine method instead.</source>
          <target state="translated">Искренне:Вместо этого используйте метод PCToLine в Таблице.</target>
        </trans-unit>
        <trans-unit id="77cf9f471d6e42edcc6f260a374bb70bfa7adebe" translate="yes" xml:space="preserve">
          <source>Deprecated: Use a literal image.Point{} instead.</source>
          <target state="translated">Искренне:Используйте буквальное изображение.Точка{}вместо этого.</target>
        </trans-unit>
        <trans-unit id="b7397111f5533c968cd65f5e2523d33d9faff03a" translate="yes" xml:space="preserve">
          <source>Deprecated: Use a literal image.Rectangle{} instead.</source>
          <target state="translated">Искренне:Используйте буквальное изображение.Прямоугольник{}вместо него.</target>
        </trans-unit>
        <trans-unit id="9937088a55d8dc88ef8ad92ad476b97d1a2fb40f" translate="yes" xml:space="preserve">
          <source>Deprecated: Use golang.org/x/net/bpf instead.</source>
          <target state="translated">Искренне:Вместо этого используйте golang.org/x/net/bpf.</target>
        </trans-unit>
        <trans-unit id="010b83223f03b61cbd0b1c78b7f4b00afcddc45f" translate="yes" xml:space="preserve">
          <source>Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.</source>
          <target state="translated">Искренне:Используйте io.SeekStart,io.SeekCurrent и io.SeekEnd.</target>
        </trans-unit>
        <trans-unit id="0648b8785f1680a3e97220e8e055c5d37df0480e" translate="yes" xml:space="preserve">
          <source>Deprecated: Use the Client or Transport in package net/http instead.</source>
          <target state="translated">Искренне:Вместо этого используйте Клиента или Транспорт в пакетной сети/http.</target>
        </trans-unit>
        <trans-unit id="d53617ac7890494a0c834838f0476b520d4862ac" translate="yes" xml:space="preserve">
          <source>Deprecated: Use the Server in package net/http instead.</source>
          <target state="translated">Искренне:Вместо этого используйте сервер в пакетной сети/http.</target>
        </trans-unit>
        <trans-unit id="987c7abf6daadd7b7fb6e6f3bb5e77607927d16a" translate="yes" xml:space="preserve">
          <source>Deprecated: Use the runtime/pprof package, or the handlers in the net/http/pprof package, or the testing package's -test.cpuprofile flag instead.</source>
          <target state="translated">Искренне:Используйте runtime/pprof пакет,или обработчики в net/http/pprof пакете,или флаг тестового пакета -test.cpuprofile вместо него.</target>
        </trans-unit>
        <trans-unit id="5826c738c43e68ce8820a4cf4d6fa1df350e65a6" translate="yes" xml:space="preserve">
          <source>Deprecated: the CloseNotifier interface predates Go's context package. New code should use Request.Context instead.</source>
          <target state="translated">Исключено:интерфейс CloseNotifier предшествует контекстному пакету Go.Новый код должен использовать Request.Context.</target>
        </trans-unit>
        <trans-unit id="cb2a5b2d0ed3d2503d1117d6b88d116db1a5c733" translate="yes" xml:space="preserve">
          <source>Deprecated: this package is locked down. Callers should use the corresponding package in the golang.org/x/sys repository instead. That is also where updates required by new systems or versions should be applied. See &lt;a href=&quot;https://golang.org/s/go1.4-syscall&quot;&gt;https://golang.org/s/go1.4-syscall&lt;/a&gt; for more information.</source>
          <target state="translated">Устарело: этот пакет заблокирован. Вместо этого вызывающим абонентам следует использовать соответствующий пакет в репозитории golang.org/x/sys. Здесь также должны применяться обновления, необходимые для новых систем или версий. См. &lt;a href=&quot;https://golang.org/s/go1.4-syscall&quot;&gt;Https://golang.org/s/go1.4-syscall&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="11f97aa680aa5a60014104f440129ac907153497" translate="yes" xml:space="preserve">
          <source>DetectContentType implements the algorithm described at &lt;a href=&quot;https://mimesniff.spec.whatwg.org/&quot;&gt;https://mimesniff.spec.whatwg.org/&lt;/a&gt; to determine the Content-Type of the given data. It considers at most the first 512 bytes of data. DetectContentType always returns a valid MIME type: if it cannot determine a more specific one, it returns &quot;application/octet-stream&quot;.</source>
          <target state="translated">DetectContentType реализует алгоритм, описанный на &lt;a href=&quot;https://mimesniff.spec.whatwg.org/&quot;&gt;https://mimesniff.spec.whatwg.org/,&lt;/a&gt; для определения Content-Type заданных данных. Он учитывает не более первых 512 байтов данных. DetectContentType всегда возвращает действительный тип MIME: если он не может определить более конкретный тип, он возвращает &amp;laquo;application / octet-stream&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="367a791e4c8a0aab798febfdd40fb481c8e6a937" translate="yes" xml:space="preserve">
          <source>DevNull is the name of the operating system's &amp;ldquo;null device.&amp;rdquo; On Unix-like systems, it is &quot;/dev/null&quot;; on Windows, &quot;NUL&quot;.</source>
          <target state="translated">DevNull - это имя &amp;laquo;нулевого устройства&amp;raquo; операционной системы. В Unix-подобных системах это &amp;laquo;/ dev / null&amp;raquo;; в Windows &quot;NUL&quot;.</target>
        </trans-unit>
        <trans-unit id="646a9a5d7a2127190c66269d0c3f2e8f50421ce8" translate="yes" xml:space="preserve">
          <source>Dial</source>
          <target state="translated">Dial</target>
        </trans-unit>
        <trans-unit id="3245bf7894677b66fa0f65579149d4be55a013bd" translate="yes" xml:space="preserve">
          <source>Dial connects to a JSON-RPC server at the specified network address.</source>
          <target state="translated">Dial подключается к JSON-RPC серверу по указанному сетевому адресу.</target>
        </trans-unit>
        <trans-unit id="f3c54da882e49624393be65dcafa09fa8930a181" translate="yes" xml:space="preserve">
          <source>Dial connects to an RPC server at the specified network address.</source>
          <target state="translated">Dial подключается к серверу RPC по указанному сетевому адресу.</target>
        </trans-unit>
        <trans-unit id="8126f72193c0616ba2ad5a2d20b0d0af08ee30f4" translate="yes" xml:space="preserve">
          <source>Dial connects to the address on the named network.</source>
          <target state="translated">Dial подключается к адресу в именованной сети.</target>
        </trans-unit>
        <trans-unit id="501b84f9fa1edcd3533366e2dba0373c80935d15" translate="yes" xml:space="preserve">
          <source>Dial connects to the given address on the given network using net.Dial and then returns a new Conn for the connection.</source>
          <target state="translated">Dial подключается к данному адресу в данной сети с помощью net.Dial и затем возвращает новый Connect для подключения.</target>
        </trans-unit>
        <trans-unit id="629d1f8b2277de65270cc2dc9ddd66fb911949dd" translate="yes" xml:space="preserve">
          <source>Dial connects to the given network address and initiates a TLS handshake, returning the resulting TLS connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23287419cc64eb396429ad69a3f427b7d7d40ed6" translate="yes" xml:space="preserve">
          <source>Dial connects to the given network address using net.Dial and then initiates a TLS handshake, returning the resulting TLS connection. Dial interprets a nil configuration as equivalent to the zero configuration; see the documentation of Config for the defaults.</source>
          <target state="translated">Dial подключается к заданному сетевому адресу с помощью net.Dial,а затем инициирует квитирование TLS,возвращая результирующее TLS-соединение.Dial интерпретирует нулевую конфигурацию как эквивалент нулевой конфигурации;см.документацию Config для установок по умолчанию.</target>
        </trans-unit>
        <trans-unit id="555b7c0fb1e8bb60be8d6c97d4ce69eaf35fb532" translate="yes" xml:space="preserve">
          <source>Dial establishes a connection to a log daemon by connecting to address raddr on the specified network. Each write to the returned writer sends a log message with the facility and severity (from priority) and tag. If tag is empty, the os.Args[0] is used. If network is empty, Dial will connect to the local syslog server. Otherwise, see the documentation for net.Dial for valid values of network and raddr.</source>
          <target state="translated">Dial устанавливает соединение с демоном журнала,подключаясь по адресу raddr в указанной сети.Каждая запись возвращаемому записывающему устройству посылает сообщение журнала с указанием объекта и серьезности (от приоритета)и тега.Если тег пуст,используется os.Args[0].Если сеть пуста,Dial подключится к локальному серверу syslog.В противном случае,смотрите документацию для net.Dial,чтобы узнать действительные значения сети и raddr.</target>
        </trans-unit>
        <trans-unit id="916c7b288099112169b38ebc1753110c3b18e4dd" translate="yes" xml:space="preserve">
          <source>Dial returns a new Client connected to an SMTP server at addr. The addr must include a port, as in &quot;mail.example.com:smtp&quot;.</source>
          <target state="translated">Dial возвращает новый Клиент,подключенный к SMTP-серверу по адресу addr.Адрес должен включать порт,как в &quot;mail.example.com:smtp&quot;.</target>
        </trans-unit>
        <trans-unit id="c336c24a8e7cb3e6692055b20290d453c602efca" translate="yes" xml:space="preserve">
          <source>DialContext connects to the address on the named network using the provided context.</source>
          <target state="translated">DialContext соединяется с адресом в именованной сети,используя предоставленный контекст.</target>
        </trans-unit>
        <trans-unit id="ae5b323ca5a220e4cf001739db8d8ac51f2298b1" translate="yes" xml:space="preserve">
          <source>DialContext connects to the given network address and initiates a TLS handshake, returning the resulting TLS connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fc387cd20218ed3d2f01c35c59633f45a5f29c" translate="yes" xml:space="preserve">
          <source>DialHTTP connects to an HTTP RPC server at the specified network address listening on the default HTTP RPC path.</source>
          <target state="translated">DialHTTP подключается к серверу HTTP RPC по указанному сетевому адресу,прослушивая по умолчанию путь HTTP RPC.</target>
        </trans-unit>
        <trans-unit id="166f35fbbfb2abc139813e788b55c8bb3893b155" translate="yes" xml:space="preserve">
          <source>DialHTTPPath connects to an HTTP RPC server at the specified network address and path.</source>
          <target state="translated">DialHTTPPath подключается к серверу HTTP RPC по указанному сетевому адресу и пути.</target>
        </trans-unit>
        <trans-unit id="054234eb6c33ff43797ebf07806d1abf2116d2cd" translate="yes" xml:space="preserve">
          <source>DialIP acts like Dial for IP networks.</source>
          <target state="translated">DialIP действует как Dial для IP сетей.</target>
        </trans-unit>
        <trans-unit id="60f40280b1c83bdee5b7b3218861565670c7b947" translate="yes" xml:space="preserve">
          <source>DialTCP acts like Dial for TCP networks.</source>
          <target state="translated">DialTCP действует как Dial для сетей TCP.</target>
        </trans-unit>
        <trans-unit id="c77aaf097ede2da3e55ab000126fc5ce2b944418" translate="yes" xml:space="preserve">
          <source>DialTimeout acts like Dial but takes a timeout.</source>
          <target state="translated">DialTimeout действует как DialTimeout,но требует тайм-аута.</target>
        </trans-unit>
        <trans-unit id="723db5642572fd8814d20074653b8583436a95be" translate="yes" xml:space="preserve">
          <source>DialUDP acts like Dial for UDP networks.</source>
          <target state="translated">DialUDP действует как Dial для UDP сетей.</target>
        </trans-unit>
        <trans-unit id="b1188516daa0242a5dee9e07a8ce04b8dfddd6c9" translate="yes" xml:space="preserve">
          <source>DialUnix acts like Dial for Unix networks.</source>
          <target state="translated">DialUnix действует как Dial для Unix сетей.</target>
        </trans-unit>
        <trans-unit id="9d97dd8e372e50745923f0e793e9a1ea3377bd43" translate="yes" xml:space="preserve">
          <source>DialWithDialer connects to the given network address using dialer.Dial and then initiates a TLS handshake, returning the resulting TLS connection. Any timeout or deadline given in the dialer apply to connection and TLS handshake as a whole.</source>
          <target state="translated">DialWithDialer соединяется с заданным сетевым адресом с помощью dialer.Dialer,а затем инициирует TLS рукопожатие,возвращая результирующее TLS-соединение.Любой таймаут или крайний срок,заданный в дозвонщике,применяется к соединению и TLS рукопожатию в целом.</target>
        </trans-unit>
        <trans-unit id="04d0c73b173305efd4d7c731d37276a56782e447" translate="yes" xml:space="preserve">
          <source>DialWithDialer interprets a nil configuration as equivalent to the zero configuration; see the documentation of Config for the defaults.</source>
          <target state="translated">DialWithDialer интерпретирует нулевую конфигурацию как эквивалент нулевой;см.документацию Config для установок по умолчанию.</target>
        </trans-unit>
        <trans-unit id="fa68fd39daa853b2a30820e7a2999d6f3712e7fb" translate="yes" xml:space="preserve">
          <source>Dialer</source>
          <target state="translated">Dialer</target>
        </trans-unit>
        <trans-unit id="99143916135312bd685cf2dd8c1b05de07ff1455" translate="yes" xml:space="preserve">
          <source>Dialer dials TLS connections given a configuration and a Dialer for the underlying connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d6677c3103daea8bffe4b57b26ace50fc9cfec" translate="yes" xml:space="preserve">
          <source>Dim</source>
          <target state="translated">Dim</target>
        </trans-unit>
        <trans-unit id="5180c70f6c14847253e8a19f2d62329e26995c8f" translate="yes" xml:space="preserve">
          <source>Dim returns the maximum of x-y or 0.</source>
          <target state="translated">Dim возвращает максимум x-y или 0.</target>
        </trans-unit>
        <trans-unit id="84c6b9acefa0f4f9e57b58581d5a75e315eb3f2d" translate="yes" xml:space="preserve">
          <source>Dir</source>
          <target state="translated">Dir</target>
        </trans-unit>
        <trans-unit id="2f3878a27be08b90f79ff7ead675653eced9d5fc" translate="yes" xml:space="preserve">
          <source>Dir returns all but the last element of path, typically the path's directory. After dropping the final element using Split, the path is Cleaned and trailing slashes are removed. If the path is empty, Dir returns &quot;.&quot;. If the path consists entirely of slashes followed by non-slash bytes, Dir returns a single slash. In any other case, the returned path does not end in a slash.</source>
          <target state="translated">Dir возвращает все элементы пути,кроме последнего,обычно это каталог пути.После удаления последнего элемента с помощью Split,путь очищается,а трейлинговые слэши удаляются.Если путь пустой,Dir возвращает &quot;...&quot;.Если путь полностью состоит из косых черт,за которыми следуют байты без косых черт,Dir возвращает единственную косую черту.В любом другом случае возвращаемый путь не заканчивается на косой чертеже.</target>
        </trans-unit>
        <trans-unit id="cd0f5615772352273bc79d68b22a60277288ae87" translate="yes" xml:space="preserve">
          <source>Dir returns all but the last element of path, typically the path's directory. After dropping the final element, Dir calls Clean on the path and trailing slashes are removed. If the path is empty, Dir returns &quot;.&quot;. If the path consists entirely of separators, Dir returns a single separator. The returned path does not end in a separator unless it is the root directory.</source>
          <target state="translated">Dir возвращает все элементы пути,кроме последнего,обычно это каталог пути.После удаления последнего элемента,Dir вызывает Clean на пути,а трейлинговые слэши удаляются.Если путь пустой,Dir возвращает &quot;...&quot;.Если путь полностью состоит из разделителей,Dir возвращает единственный разделитель.Возвращаемый путь не заканчивается на разделителе,если только он не является корневым каталогом.</target>
        </trans-unit>
        <trans-unit id="a478722b7b31bb4fb26d02a9daa9b39abbff8e70" translate="yes" xml:space="preserve">
          <source>Dir returns the direction of channel c.</source>
          <target state="translated">Дир возвращает направление канала c.</target>
        </trans-unit>
        <trans-unit id="15a5a91e72d8cd7ecd875b2fde5f18520f1865d0" translate="yes" xml:space="preserve">
          <source>DisallowUnknownFields causes the Decoder to return an error when the destination is a struct and the input contains object keys which do not match any non-ignored, exported fields in the destination.</source>
          <target state="translated">DisallowUnknownFields приводит к тому,что декодер возвращает ошибку,когда назначение является структурой,а входные данные содержат ключи объектов,которые не совпадают ни с какими не заимствованными экспортированными полями в назначении.</target>
        </trans-unit>
        <trans-unit id="0a9e638c9210f5f7c0d1bf542f9e88607a9db164" translate="yes" xml:space="preserve">
          <source>Discard is an io.Writer on which all Write calls succeed without doing anything.</source>
          <target state="translated">Discard-это io.Writer,на котором все звонки Write успешно выполняются,ничего не делая.</target>
        </trans-unit>
        <trans-unit id="3151e5b42c76f7786c34b10ee6b91843bc323edd" translate="yes" xml:space="preserve">
          <source>Discard skips the next n bytes, returning the number of bytes discarded.</source>
          <target state="translated">Отбрасывание пропускает следующие n байтов,возвращая количество отбракованных байтов.</target>
        </trans-unit>
        <trans-unit id="f6ce0f4b9310f95ee6e03e8cc37d8051d56938ac" translate="yes" xml:space="preserve">
          <source>Discussion:</source>
          <target state="translated">Discussion:</target>
        </trans-unit>
        <trans-unit id="1fc629db1dfea7dd1d7478cd49f0d67c695a2f09" translate="yes" xml:space="preserve">
          <source>Disposal Methods.</source>
          <target state="translated">Методы утилизации.</target>
        </trans-unit>
        <trans-unit id="5ec7907f27bd994c3fb8583301b913b0b6813a3a" translate="yes" xml:space="preserve">
          <source>Div returns the quotient and remainder of (hi, lo) divided by y: quo = (hi, lo)/y, rem = (hi, lo)%y with the dividend bits' upper half in parameter hi and the lower half in parameter lo. Div panics for y == 0 (division by zero) or y &amp;lt;= hi (quotient overflow).</source>
          <target state="translated">Div возвращает частное и остаток от (hi, lo), деленного на y: quo = (hi, lo) / y, rem = (hi, lo)% y с верхней половиной делимых битов в параметре hi и нижней половиной в параметр lo. Div паники для y == 0 (деление на ноль) или y &amp;lt;= hi (переполнение частного).</target>
        </trans-unit>
        <trans-unit id="4fc57c9c02ed421c232712ba11343274d994963e" translate="yes" xml:space="preserve">
          <source>Div returns the vector p/k.</source>
          <target state="translated">Div возвращает вектор p/k.</target>
        </trans-unit>
        <trans-unit id="426cf990e0000e9ee258d2aab672481be1e61f9f" translate="yes" xml:space="preserve">
          <source>Div sets z to the quotient x/y for y != 0 and returns z. If y == 0, a division-by-zero run-time panic occurs. Div implements Euclidean division (unlike Go); see DivMod for more details.</source>
          <target state="translated">Div устанавливает z в коэффициент x/y для y !=0 и возвращает z.Если y ==0,то происходит паника при делении на ноль.Div реализует Евклидово деление (в отличие от Go);подробнее см.в DivMod.</target>
        </trans-unit>
        <trans-unit id="6969f247b499f527d10065936434631c47245711" translate="yes" xml:space="preserve">
          <source>Div32 returns the quotient and remainder of (hi, lo) divided by y: quo = (hi, lo)/y, rem = (hi, lo)%y with the dividend bits' upper half in parameter hi and the lower half in parameter lo. Div32 panics for y == 0 (division by zero) or y &amp;lt;= hi (quotient overflow).</source>
          <target state="translated">Div32 возвращает частное и остаток от (hi, lo), деленного на y: quo = (hi, lo) / y, rem = (hi, lo)% y с верхней половиной делимых битов в параметре hi и нижней половиной в параметр lo. Div32 срабатывает при y == 0 (деление на ноль) или y &amp;lt;= hi (переполнение частного).</target>
        </trans-unit>
        <trans-unit id="64a140393f99aaa8275c3c523c2f0109eb59db32" translate="yes" xml:space="preserve">
          <source>Div64 returns the quotient and remainder of (hi, lo) divided by y: quo = (hi, lo)/y, rem = (hi, lo)%y with the dividend bits' upper half in parameter hi and the lower half in parameter lo. Div64 panics for y == 0 (division by zero) or y &amp;lt;= hi (quotient overflow).</source>
          <target state="translated">Div64 возвращает частное и остаток от (hi, lo), деленного на y: quo = (hi, lo) / y, rem = (hi, lo)% y с верхней половиной делимых битов в параметре hi и нижней половиной в параметр lo. Div64 паникует для y == 0 (деление на ноль) или y &amp;lt;= hi (переполнение частного).</target>
        </trans-unit>
        <trans-unit id="73ee7e85e1219c9b6dd08a952c5d23488d8e580c" translate="yes" xml:space="preserve">
          <source>DivMod implements Euclidean division and modulus (unlike Go):</source>
          <target state="translated">DivMod реализует евклидовое деление и модуль (в отличие от Go):</target>
        </trans-unit>
        <trans-unit id="2b680c8f7a354b5f639fb527648d9d63d8ccda98" translate="yes" xml:space="preserve">
          <source>DivMod sets z to the quotient x div y and m to the modulus x mod y and returns the pair (z, m) for y != 0. If y == 0, a division-by-zero run-time panic occurs.</source>
          <target state="translated">DivMod устанавливает z в коэффициент x div y и m в модуль x mod y и возвращает пару (z,m)для y !=0.Если y ==0,то происходит паника при делении на ноль.</target>
        </trans-unit>
        <trans-unit id="421c2fc2a2b84517678db9c2f442e9b0eb047ffd" translate="yes" xml:space="preserve">
          <source>Do calls f for each entry in the map. The map is locked during the iteration, but existing entries may be concurrently updated.</source>
          <target state="translated">Вызовите f для каждой записи на карте.Во время итерации карта заблокирована,но существующие записи могут быть одновременно обновлены.</target>
        </trans-unit>
        <trans-unit id="344fdccb01551fd2cf446ded60ac44948ea45c54" translate="yes" xml:space="preserve">
          <source>Do calls f for each exported variable. The global variable map is locked during the iteration, but existing entries may be concurrently updated.</source>
          <target state="translated">Do вызывает f для каждой экспортируемой переменной.Карта глобальной переменной блокируется во время итерации,но существующие записи могут быть одновременно обновлены.</target>
        </trans-unit>
        <trans-unit id="73df66c109e56751b22dc4bded18343160cef6a4" translate="yes" xml:space="preserve">
          <source>Do calls f with a copy of the parent context with the given labels added to the parent's label map. Goroutines spawned while executing f will inherit the augmented label-set. Each key/value pair in labels is inserted into the label map in the order provided, overriding any previous value for the same key. The augmented label map will be set for the duration of the call to f and restored once f returns.</source>
          <target state="translated">Делайте вызовы f с копией родительского контекста с заданными метками,добавленными в родительскую карту меток.Горютины,порожденные во время выполнения f,унаследуют расширенный набор меток.Каждая пара ключ/значение в метках вставляется в карту меток в указанном порядке,перекрывая любое предыдущее значение для того же ключа.Карта меток с расширенными значениями будет установлена на время вызова на f и восстановлена после возврата f.</target>
        </trans-unit>
        <trans-unit id="d59f412ffbd80005134f93bcc238950f4b573d7d" translate="yes" xml:space="preserve">
          <source>Do calls function f on each element of the ring, in forward order. The behavior of Do is undefined if f changes *r.</source>
          <target state="translated">Выполняйте вызов функции f на каждом элементе кольца в прямом порядке.Поведение Do не определено,если f изменяется *r.</target>
        </trans-unit>
        <trans-unit id="4aae39793ad1559304a62b480983270ecdafd252" translate="yes" xml:space="preserve">
          <source>Do calls the function f if and only if Do is being called for the first time for this instance of Once. In other words, given</source>
          <target state="translated">Do вызывает функцию f,если и только если Do вызывается впервые для данного случая Once.Другими словами,учитывая</target>
        </trans-unit>
        <trans-unit id="8fc83ea5ac46597554232c0c42033d14a7416d33" translate="yes" xml:space="preserve">
          <source>Do is convenience method that writes a request and reads a response.</source>
          <target state="translated">Do-это удобный метод,который записывает запрос и читает ответ.</target>
        </trans-unit>
        <trans-unit id="83ae63c0144eed839424d121a195436a02591450" translate="yes" xml:space="preserve">
          <source>Do is intended for initialization that must be run exactly once. Since f is niladic, it may be necessary to use a function literal to capture the arguments to a function to be invoked by Do:</source>
          <target state="translated">Do предназначена для инициализации,которая должна быть выполнена ровно один раз.Так как f ниладическая,может потребоваться использование функции literal для захвата аргументов в функцию,которая будет вызвана Do:</target>
        </trans-unit>
        <trans-unit id="171db7265264382a4470c716c800cfeaf865b910" translate="yes" xml:space="preserve">
          <source>Do not pass a nil Context, even if a function permits it. Pass context.TODO if you are unsure about which Context to use.</source>
          <target state="translated">Не передавайте Контекст &quot;ноль&quot;,даже если функция это разрешает.Передавайте context.TODO,если вы не уверены в том,какой контекст использовать.</target>
        </trans-unit>
        <trans-unit id="403473243ae753314d3e7c6e5efb971fec3919ed" translate="yes" xml:space="preserve">
          <source>Do not store Contexts inside a struct type; instead, pass a Context explicitly to each function that needs it. The Context should be the first parameter, typically named ctx:</source>
          <target state="translated">Не храните Контексты внутри типа структуры;вместо этого передайте Контекст явно каждой функции,которая в нем нуждается.Контекст должен быть первым параметром,обычно называемым ctx:</target>
        </trans-unit>
        <trans-unit id="d7779aca2e90b3ef06e0e59e88b36b9294187c5a" translate="yes" xml:space="preserve">
          <source>Do sends an HTTP request and returns an HTTP response, following policy (such as redirects, cookies, auth) as configured on the client.</source>
          <target state="translated">Do посылает HTTP-запрос и возвращает HTTP-ответ,следуя политике (например,перенаправление,куки-файлы,auth),настроенной на клиенте.</target>
        </trans-unit>
        <trans-unit id="53a040ce848c0973a1eaf2705fea9e3c16c10f29" translate="yes" xml:space="preserve">
          <source>Done decrements the WaitGroup counter by one.</source>
          <target state="translated">Сделал декреты о счетчике WaitGroup по одному.</target>
        </trans-unit>
        <trans-unit id="5d8a8a3c5fe2e401e493c36ab14b008c0145b4a3" translate="yes" xml:space="preserve">
          <source>Dot encoding is a common framing used for data blocks in text protocols such as SMTP. The data consists of a sequence of lines, each of which ends in &quot;\r\n&quot;. The sequence itself ends at a line containing just a dot: &quot;.\r\n&quot;. Lines beginning with a dot are escaped with an additional dot to avoid looking like the end of the sequence.</source>
          <target state="translated">Точное кодирование-это обычный фреймворк,используемый для блоков данных в текстовых протоколах,таких как SMTP.Данные состоят из последовательности строк,каждая из которых заканчивается на &quot;\r\n&quot;.Сама последовательность заканчивается строкой,содержащей только точку:&quot;.\r\n&quot;.Строки,начинающиеся с точки,экранируются дополнительной точкой,чтобы не выглядеть как конец последовательности.</target>
        </trans-unit>
        <trans-unit id="dfa5cb276f9495e5d4c9e33568c4e7fe494cb1c1" translate="yes" xml:space="preserve">
          <source>DotNode holds the special identifier '.'.</source>
          <target state="translated">DotNode содержит специальный идентификатор '...'.</target>
        </trans-unit>
        <trans-unit id="45d81c0de8e57188c73733729e426e2cc8e21bc9" translate="yes" xml:space="preserve">
          <source>DotReader returns a new Reader that satisfies Reads using the decoded text of a dot-encoded block read from r. The returned Reader is only valid until the next call to a method on r.</source>
          <target state="translated">DotReader возвращает новый Читатель,который удовлетворяет Reads,используя декодированный текст блока,закодированного точкой,считанного из r.Возвращаемый Читатель действителен только до следующего вызова метода на r.</target>
        </trans-unit>
        <trans-unit id="5f12978969ba09aae6377b8a8b1e656b9e301cf7" translate="yes" xml:space="preserve">
          <source>DotWriter returns a writer that can be used to write a dot-encoding to w. It takes care of inserting leading dots when necessary, translating line-ending \n into \r\n, and adding the final .\r\n line when the DotWriter is closed. The caller should close the DotWriter before the next call to a method on w.</source>
          <target state="translated">DotWriter возвращает writeer,который может быть использован для записи кодировки точки в w.Он заботится о вставке ведущих точек,когда это необходимо,переводя \n в \r\n и добавляя окончательную строку .\r\n,когда DotWriter закрыт.Звонящий должен закрыть DotWriter перед следующим вызовом метода на w.</target>
        </trans-unit>
        <trans-unit id="34df04156d8c13982c47017e9978f653e9f12cc7" translate="yes" xml:space="preserve">
          <source>Draw calls DrawMask with a nil mask.</source>
          <target state="translated">Draw calls DrawMask с нулевой маской.</target>
        </trans-unit>
        <trans-unit id="4b5e532be0920a0453cdc54d04b9169084ccdf0e" translate="yes" xml:space="preserve">
          <source>Draw implements the Drawer interface by calling the Draw function with this Op.</source>
          <target state="translated">Draw реализует интерфейс Draw,вызывая функцию Draw с помощью данной опции.</target>
        </trans-unit>
        <trans-unit id="095366335bb273e4a2ea61cb6fd7f32f8d19f685" translate="yes" xml:space="preserve">
          <source>DrawMask aligns r.Min in dst with sp in src and mp in mask and then replaces the rectangle r in dst with the result of a Porter-Duff composition. A nil mask is treated as opaque.</source>
          <target state="translated">DrawMask выравнивает r.Min в dst с sp в src и mp в маске,а затем заменяет прямоугольник r в dst результатом композиции Porter-Duff.Нулевая маска считается непрозрачной.</target>
        </trans-unit>
        <trans-unit id="69353508254d7fc67f1bc0d561821973e8541c4b" translate="yes" xml:space="preserve">
          <source>Drawer (FloydSteinberg)</source>
          <target state="translated">Ящик (ФлойдСтейнберг)</target>
        </trans-unit>
        <trans-unit id="8253364d6d713de9b550787176c132b382c33930" translate="yes" xml:space="preserve">
          <source>Drawer contains the Draw method.</source>
          <target state="translated">Drawer содержит метод Draw.</target>
        </trans-unit>
        <trans-unit id="ca04bd4da9fe0c03ee57c4703ae1e82be8d6e722" translate="yes" xml:space="preserve">
          <source>Driver is the interface that must be implemented by a database driver.</source>
          <target state="translated">Драйвер-это интерфейс,который должен быть реализован драйвером базы данных.</target>
        </trans-unit>
        <trans-unit id="9f645d42b5568aea825206b8e697ea66dab57c60" translate="yes" xml:space="preserve">
          <source>Driver returns the database's underlying driver.</source>
          <target state="translated">Водитель возвращает базовый драйвер базы данных.</target>
        </trans-unit>
        <trans-unit id="5a00d50aef5aea9e2710b9f36a21127df22306c7" translate="yes" xml:space="preserve">
          <source>Drivers returns a sorted list of the names of the registered drivers.</source>
          <target state="translated">Водители возвращают отсортированный список имен зарегистрированных водителей.</target>
        </trans-unit>
        <trans-unit id="2abae0c55704de2aa26c34322b4e8c275aa1bc7c" translate="yes" xml:space="preserve">
          <source>Drivers that do not support context cancellation will not return until after the query is completed.</source>
          <target state="translated">Драйверы,не поддерживающие отмену контекста,не вернутся до тех пор,пока запрос не будет завершен.</target>
        </trans-unit>
        <trans-unit id="d8d218c02974bb1de20e1d664e3a90526498d120" translate="yes" xml:space="preserve">
          <source>Dump</source>
          <target state="translated">Dump</target>
        </trans-unit>
        <trans-unit id="1efe71a094bc514414a290528c9e86553e7520b4" translate="yes" xml:space="preserve">
          <source>Dump returns a string that contains a hex dump of the given data. The format of the hex dump matches the output of `hexdump -C` on the command line.</source>
          <target state="translated">Dump возвращает строку,содержащую шестнадцатеричный дамп данных.Формат шестнадцатиричного дампа соответствует выводу `hexdump -C` в командной строке.</target>
        </trans-unit>
        <trans-unit id="a3b283785980f70b0d4303b4bc4c441375213c3f" translate="yes" xml:space="preserve">
          <source>DumpRequest</source>
          <target state="translated">DumpRequest</target>
        </trans-unit>
        <trans-unit id="3de7dbfc307f5235c1d6b683c171950e7f1ffd23" translate="yes" xml:space="preserve">
          <source>DumpRequest returns the given request in its HTTP/1.x wire representation. It should only be used by servers to debug client requests. The returned representation is an approximation only; some details of the initial request are lost while parsing it into an http.Request. In particular, the order and case of header field names are lost. The order of values in multi-valued headers is kept intact. HTTP/2 requests are dumped in HTTP/1.x form, not in their original binary representations.</source>
          <target state="translated">DumpRequest возвращает заданный запрос в своем представлении провода HTTP/1.x.Он должен использоваться серверами только для отладки клиентских запросов.Возвращаемое представление является лишь аппроксимацией,некоторые детали исходного запроса теряются при его разборе в http.Request.В частности,теряются порядок и регистр имен полей заголовков.Сохраняется порядок значений в многозначных заголовках.Запросы HTTP/2 дампингуются в виде HTTP/1.x,а не в их оригинальных двоичных представлениях.</target>
        </trans-unit>
        <trans-unit id="8617a69fd95544d86b25db256370774190ace264" translate="yes" xml:space="preserve">
          <source>DumpRequestOut</source>
          <target state="translated">DumpRequestOut</target>
        </trans-unit>
        <trans-unit id="76f5ce4e85d9829f54cc4eca908b5ee3db848cc0" translate="yes" xml:space="preserve">
          <source>DumpRequestOut is like DumpRequest but for outgoing client requests. It includes any headers that the standard http.Transport adds, such as User-Agent.</source>
          <target state="translated">DumpRequestOut похож на DumpRequest,но для исходящих запросов клиентов.Он включает в себя любые заголовки,которые добавляет стандартный http.Transport,например User-Agent.</target>
        </trans-unit>
        <trans-unit id="fab002c74edbf53a695bff854b73691ee5ff49db" translate="yes" xml:space="preserve">
          <source>DumpResponse</source>
          <target state="translated">DumpResponse</target>
        </trans-unit>
        <trans-unit id="b5cb2fa3b185da1849224df819e33e22048bed0a" translate="yes" xml:space="preserve">
          <source>DumpResponse is like DumpRequest but dumps a response.</source>
          <target state="translated">DumpResponse похожа на DumpRequest,но сбрасывает ответ.</target>
        </trans-unit>
        <trans-unit id="ca6f5764b6bb205859885185dfc165c84ecff79a" translate="yes" xml:space="preserve">
          <source>Dumper</source>
          <target state="translated">Dumper</target>
        </trans-unit>
        <trans-unit id="2d77075aac1401c0e2be5db28c0ababd2d200f0f" translate="yes" xml:space="preserve">
          <source>Dumper returns a WriteCloser that writes a hex dump of all written data to w. The format of the dump matches the output of `hexdump -C` on the command line.</source>
          <target state="translated">Dumper возвращает WriteCloser,который записывает шестнадцатиричный дамп всех записанных данных в w.Формат дампов соответствует выводу `hexdump -C` в командной строке.</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="d39bc61f4df92670a47d7dbb0340a26919244359" translate="yes" xml:space="preserve">
          <source>Duration defines a time.Duration flag with specified name, default value, and usage string. The return value is the address of a time.Duration variable that stores the value of the flag. The flag accepts a value acceptable to time.ParseDuration.</source>
          <target state="translated">Продолжительность определяет флаг time.Duration с указанным именем,значением по умолчанию и строкой использования.Возвращаемое значение-это адрес переменной time.Duration,которая хранит значение флага.Флаг принимает значение,приемлемое для time.ParseDuration.</target>
        </trans-unit>
        <trans-unit id="5195f3e65af1376bff8d2aff52391b3e64e72714" translate="yes" xml:space="preserve">
          <source>Duration flags accept any input valid for time.ParseDuration.</source>
          <target state="translated">Флаги длительности допускают любой ввод,действительный в течение времени.</target>
        </trans-unit>
        <trans-unit id="1e5d634713acf3a5ece781c540b83969479fdedd" translate="yes" xml:space="preserve">
          <source>Duration.Hours</source>
          <target state="translated">Duration.Hours</target>
        </trans-unit>
        <trans-unit id="2c1d62d4bb9ed259d65dad912f99ab2031510c6d" translate="yes" xml:space="preserve">
          <source>Duration.Microseconds</source>
          <target state="translated">Duration.Microseconds</target>
        </trans-unit>
        <trans-unit id="e57edc698610dc3ec891f225a3bbb7cd9e3f5900" translate="yes" xml:space="preserve">
          <source>Duration.Milliseconds</source>
          <target state="translated">Duration.Milliseconds</target>
        </trans-unit>
        <trans-unit id="767678f246489f2d369059f5a4e433ba83f27dc4" translate="yes" xml:space="preserve">
          <source>Duration.Minutes</source>
          <target state="translated">Duration.Minutes</target>
        </trans-unit>
        <trans-unit id="15796e7613718dc9316e8a9259c9d1872dc9d2c5" translate="yes" xml:space="preserve">
          <source>Duration.Nanoseconds</source>
          <target state="translated">Duration.Nanoseconds</target>
        </trans-unit>
        <trans-unit id="1621f40b95946ff6207b9c656512e487ad66ce32" translate="yes" xml:space="preserve">
          <source>Duration.Round</source>
          <target state="translated">Duration.Round</target>
        </trans-unit>
        <trans-unit id="6557fa3a9db485bd65efba25bd2fc6fec3d0de9b" translate="yes" xml:space="preserve">
          <source>Duration.Seconds</source>
          <target state="translated">Duration.Seconds</target>
        </trans-unit>
        <trans-unit id="c5f06d8a52e2242c2cad632dade4de2fcd473e3a" translate="yes" xml:space="preserve">
          <source>Duration.String</source>
          <target state="translated">Duration.String</target>
        </trans-unit>
        <trans-unit id="565c13e1bc7186cba22a3e856369e0913d16cff5" translate="yes" xml:space="preserve">
          <source>Duration.Truncate</source>
          <target state="translated">Duration.Truncate</target>
        </trans-unit>
        <trans-unit id="53a5653f95d5c0243363897afbc01308538ab04d" translate="yes" xml:space="preserve">
          <source>DurationVar defines a time.Duration flag with specified name, default value, and usage string. The argument p points to a time.Duration variable in which to store the value of the flag. The flag accepts a value acceptable to time.ParseDuration.</source>
          <target state="translated">DurationVar определяет флаг time.Duration с указанным именем,значением по умолчанию и строкой использования.Аргумент p указывает на переменную time.Duration,в которой будет храниться значение флага.Флаг принимает значение,приемлемое для time.ParseDuration.</target>
        </trans-unit>
        <trans-unit id="96fcaca56da697a54efbf68b6f544825c513abfd" translate="yes" xml:space="preserve">
          <source>During a particular build, the following words are satisfied:</source>
          <target state="translated">Во время выполнения конкретного теста удовлетворяются следующие слова:</target>
        </trans-unit>
        <trans-unit id="6bfb7cfcb687419a46176f2be1f3191cd5d7b4b4" translate="yes" xml:space="preserve">
          <source>During execution functions are found in two function maps: first in the template, then in the global function map. By default, no functions are defined in the template but the Funcs method can be used to add them.</source>
          <target state="translated">Во время выполнения функции находятся в двух картах функций:сначала в шаблоне,затем в глобальной карте функций.По умолчанию в шаблоне функции не определены,но для их добавления можно использовать метод Funcs.</target>
        </trans-unit>
        <trans-unit id="7df0b06929972c9b30315986c52f79ebdf35f7e8" translate="yes" xml:space="preserve">
          <source>Dx returns r's width.</source>
          <target state="translated">Dx возвращает ширину r.</target>
        </trans-unit>
        <trans-unit id="f41c6da4d6741acc126c0422196933be598f6153" translate="yes" xml:space="preserve">
          <source>Dy returns r's height.</source>
          <target state="translated">Ди возвращает высоту.</target>
        </trans-unit>
        <trans-unit id="32b6bc7918b98bfd40dd37e996810216132462b9" translate="yes" xml:space="preserve">
          <source>Dyn.Tag</source>
          <target state="translated">Dyn.Tag</target>
        </trans-unit>
        <trans-unit id="5222f10256a08491c36be3639e64bc2ebff12623" translate="yes" xml:space="preserve">
          <source>DynString returns the strings listed for the given tag in the file's dynamic section.</source>
          <target state="translated">DynString возвращает строки,перечисленные для данного тега в динамической секции файла.</target>
        </trans-unit>
        <trans-unit id="db202bdad98e296b9a3563abcfa107dc6f7dc00b" translate="yes" xml:space="preserve">
          <source>DynamicSymbols returns the dynamic symbol table for f. The symbols will be listed in the order they appear in f.</source>
          <target state="translated">DynamicSymbols возвращает таблицу динамических символов для f.Символы будут перечислены в порядке их появления в f.</target>
        </trans-unit>
        <trans-unit id="4c378c0dd0f7970369ff718ef4a5dbb0ea2f5ff7" translate="yes" xml:space="preserve">
          <source>ELF32 Compression header.</source>
          <target state="translated">ELF32 Компрессионный заголовок.</target>
        </trans-unit>
        <trans-unit id="d9805c8c21043a51a02b54b3aeec72a98f35ab90" translate="yes" xml:space="preserve">
          <source>ELF32 Dynamic structure. The &quot;.dynamic&quot; section contains an array of them.</source>
          <target state="translated">ELF32 Динамическая структура.Раздел &quot;.dynamic&quot; содержит их массив.</target>
        </trans-unit>
        <trans-unit id="01cfc9c73c1836df918dbdb1ff394e536b5e750e" translate="yes" xml:space="preserve">
          <source>ELF32 File header.</source>
          <target state="translated">ELF32 Заголовок файла.</target>
        </trans-unit>
        <trans-unit id="a95b78b9e8d26713e54bc7d6dbf4a94c300ad3cc" translate="yes" xml:space="preserve">
          <source>ELF32 Program header.</source>
          <target state="translated">Заголовок программы ELF32.</target>
        </trans-unit>
        <trans-unit id="2562dbbf0dcee0f2e54eb9f48338f7def8b4bbc4" translate="yes" xml:space="preserve">
          <source>ELF32 Relocations that don't need an addend field.</source>
          <target state="translated">ELF32 Релокации,которые не нуждаются в дополнительном поле.</target>
        </trans-unit>
        <trans-unit id="794563b14439e28188bc640bdadb9bb63d680d95" translate="yes" xml:space="preserve">
          <source>ELF32 Relocations that need an addend field.</source>
          <target state="translated">ELF32 Релокации,которые нуждаются в дополнительном поле.</target>
        </trans-unit>
        <trans-unit id="cd616263209dd900d196fadf9047398dfd2521b2" translate="yes" xml:space="preserve">
          <source>ELF32 Section header.</source>
          <target state="translated">ELF32 заголовок секции.</target>
        </trans-unit>
        <trans-unit id="3e8a6d1fbb884fcd546a737b6627f180033dfe18" translate="yes" xml:space="preserve">
          <source>ELF32 Symbol.</source>
          <target state="translated">Символ ELF32.</target>
        </trans-unit>
        <trans-unit id="95e34cade68c612b8b31a15c7b0be30ee7d2c449" translate="yes" xml:space="preserve">
          <source>ELF64 Compression header.</source>
          <target state="translated">Заголовок сжатия ELF64.</target>
        </trans-unit>
        <trans-unit id="8bff0b09a1d753cf9e7269a9f278d58013217bfa" translate="yes" xml:space="preserve">
          <source>ELF64 Dynamic structure. The &quot;.dynamic&quot; section contains an array of them.</source>
          <target state="translated">ELF64 Динамическая структура.Раздел &quot;.dynamic&quot; содержит их массив.</target>
        </trans-unit>
        <trans-unit id="c53643c180d85eb5f05c20f66f7443ee9f9d2d90" translate="yes" xml:space="preserve">
          <source>ELF64 Program header.</source>
          <target state="translated">Заголовок программы ELF64.</target>
        </trans-unit>
        <trans-unit id="d53dc77020d82faf2a8fb56ce571eac7a4c406fd" translate="yes" xml:space="preserve">
          <source>ELF64 Section header.</source>
          <target state="translated">Заголовок секции ELF64.</target>
        </trans-unit>
        <trans-unit id="8b38ac0b54bc34aaae042028741c36e4940cce07" translate="yes" xml:space="preserve">
          <source>ELF64 file header.</source>
          <target state="translated">Заголовок файла ELF64.</target>
        </trans-unit>
        <trans-unit id="429907c0b3e6b47962dd713a0f45efbc999d98d2" translate="yes" xml:space="preserve">
          <source>ELF64 relocations that don't need an addend field.</source>
          <target state="translated">Перемещения ELF64,которые не нуждаются в дополнительном поле.</target>
        </trans-unit>
        <trans-unit id="0c6ddbd3dc62aa9dd229b61e1dbcf4930eb356c0" translate="yes" xml:space="preserve">
          <source>ELF64 relocations that need an addend field.</source>
          <target state="translated">Перемещения ELF64,для которых требуется дополнительное поле.</target>
        </trans-unit>
        <trans-unit id="8185d8c0b42b58b3e2cb27fd3b6a714d1ecb3d6b" translate="yes" xml:space="preserve">
          <source>ELF64 symbol table entries.</source>
          <target state="translated">Записи в таблице символов ELF64.</target>
        </trans-unit>
        <trans-unit id="c1ef067c48898a4eb1b2ec281361b9d7232d849b" translate="yes" xml:space="preserve">
          <source>EOF is the error returned by Read when no more input is available. Functions should return EOF only to signal a graceful end of input. If the EOF occurs unexpectedly in a structured data stream, the appropriate error is either ErrUnexpectedEOF or some other error giving more detail.</source>
          <target state="translated">EOF-это ошибка,возвращаемая при считывании,когда больше нет доступа к входу.Функции должны возвращать EOF только для того,чтобы сигнализировать о грациозном окончании входа.Если EOF происходит неожиданно в структурированном потоке данных,то соответствующей ошибкой является ErrUnexpectedEOF или какая-либо другая ошибка,дающая более подробную информацию.</target>
        </trans-unit>
        <trans-unit id="b9b211da674bf7d5d2d22532b4017302669c9ac7" translate="yes" xml:space="preserve">
          <source>Each Cond has an associated Locker L (often a *Mutex or *RWMutex), which must be held when changing the condition and when calling the Wait method.</source>
          <target state="translated">Каждый Cond имеет ассоциированный Locker L (часто *Mutex или *RWMutex),который должен удерживаться при изменении условия и при вызове метода Wait.</target>
        </trans-unit>
        <trans-unit id="4e52e02d18303ae982c6630c3a803a841b76db7a" translate="yes" xml:space="preserve">
          <source>Each ExtraNames entry is encoded as an individual RDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ce2a7553dfc359fede4c116e264e25c2fea211" translate="yes" xml:space="preserve">
          <source>Each Float value also has a precision, rounding mode, and accuracy. The precision is the maximum number of mantissa bits available to represent the value. The rounding mode specifies how a result should be rounded to fit into the mantissa bits, and accuracy describes the rounding error with respect to the exact result.</source>
          <target state="translated">Каждое значение поплавка также имеет точность,режим округления и точность.Точность-это максимальное количество мантиссовых бит,доступное для представления значения.Режим округления определяет,как результат должен быть округлен,чтобы соответствовать биту мантиссы,а точность описывает погрешность округления относительно точного результата.</target>
        </trans-unit>
        <trans-unit id="c22b6da18b15dfcb152711437d1c5b6b668025fa" translate="yes" xml:space="preserve">
          <source>Each Profile has a unique name. A few profiles are predefined:</source>
          <target state="translated">Каждый профиль имеет уникальное имя.Предопределено несколько профилей:</target>
        </trans-unit>
        <trans-unit id="d27822f6c94a0fc0349a0c96e70c540078b10e05" translate="yes" xml:space="preserve">
          <source>Each Time has associated with it a Location, consulted when computing the presentation form of the time, such as in the Format, Hour, and Year methods. The methods Local, UTC, and In return a Time with a specific location. Changing the location in this way changes only the presentation; it does not change the instant in time being denoted and therefore does not affect the computations described in earlier paragraphs.</source>
          <target state="translated">Каждое время ассоциировалось с Местоположением,с которым консультировались при расчете формы представления времени,например,в методах формата,часа и года.Методы Локальный,UTC и Взамен Время с определенным местоположением.Изменение местоположения таким образом изменяет только презентацию;это не меняет обозначаемое время и,следовательно,не влияет на расчеты,описанные в предыдущих параграфах.</target>
        </trans-unit>
        <trans-unit id="18b4e64eee2924ca83b54ba5d82d34968349afb6" translate="yes" xml:space="preserve">
          <source>Each directory listed in the Go path must have a prescribed structure:</source>
          <target state="translated">Каждый каталог,перечисленный в пути Go,должен иметь предписанную структуру:</target>
        </trans-unit>
        <trans-unit id="11a47e0b159e036354bb03ab8fec410aa5efbc37" translate="yes" xml:space="preserve">
          <source>Each span of unindented non-blank lines is converted into a single paragraph. There is one exception to the rule: a span that consists of a single line, is followed by another paragraph span, begins with a capital letter, and contains no punctuation other than parentheses and commas is formatted as a heading.</source>
          <target state="translated">Каждый пролет непустых строк конвертируется в один абзац.Есть одно исключение из правила:пролет,состоящий из одной строки,за которым следует другой пролет абзаца,начинающийся с большой буквы и не содержащий знаков препинания,кроме круглых скобок,и запятых,форматируется в виде заголовка.</target>
        </trans-unit>
        <trans-unit id="64b283319794ff9f90a2b889c357e1eadff02062" translate="yes" xml:space="preserve">
          <source>Each subtest and sub-benchmark has a unique name: the combination of the name of the top-level test and the sequence of names passed to Run, separated by slashes, with an optional trailing sequence number for disambiguation.</source>
          <target state="translated">Каждый подтест и подцентр имеет уникальное имя:комбинация имени теста верхнего уровня и последовательности имен,передаваемых в Run,разделенная косой чертой,с дополнительным номером последовательности трейлинга для дезамбигурации.</target>
        </trans-unit>
        <trans-unit id="f64692308609e7cd9aa6b965c0976bf09ca797d9" translate="yes" xml:space="preserve">
          <source>Each template is named by a string specified when it is created. Also, each template is associated with zero or more other templates that it may invoke by name; such associations are transitive and form a name space of templates.</source>
          <target state="translated">Каждый шаблон называется строкой,указанной при его создании.Кроме того,каждый шаблон ассоциируется с нулем или несколькими другими шаблонами,которые он может вызывать по имени;такие ассоциации являются переходными и образуют пространство имен шаблонов.</target>
        </trans-unit>
        <trans-unit id="dfe068281c7912e37aff13438f1165b9cae6281c" translate="yes" xml:space="preserve">
          <source>Each write is written to each listed writer, one at a time. If a listed writer returns an error, that overall write operation stops and returns the error; it does not continue down the list.</source>
          <target state="translated">Каждая запись пишется каждому из перечисленных писателей,по одному.Если указанный записывающее устройство возвращает ошибку,то общая операция записи останавливается и возвращает ошибку;она не продолжается вниз по списку.</target>
        </trans-unit>
        <trans-unit id="8fea9dce2cfc1e5514afba8c4f79122c1f6660c7" translate="yes" xml:space="preserve">
          <source>Edge cases for s and sep (for example, empty strings) are handled as described in the documentation for Split.</source>
          <target state="translated">Крайние случаи для s и sep (например,пустые строки)обрабатываются так,как описано в документации для Split.</target>
        </trans-unit>
        <trans-unit id="e37e08f3d79b0b879d0cbc05f9e597346cc0a476" translate="yes" xml:space="preserve">
          <source>Edge cases for s and sep (for example, empty strings) are handled as described in the documentation for SplitAfter.</source>
          <target state="translated">Крайние случаи для s и sep (например,пустые строки)обрабатываются так,как описано в документации для SplitAfter.</target>
        </trans-unit>
        <trans-unit id="62b526e2f1b563d78f9affc599c0f080c53c3770" translate="yes" xml:space="preserve">
          <source>Elem returns element type of array a.</source>
          <target state="translated">Элем возвращает тип элемента массива a.</target>
        </trans-unit>
        <trans-unit id="2c8688004f9a6c08c6f8b553e5f27b9522194baf" translate="yes" xml:space="preserve">
          <source>Elem returns the element type for the given pointer p.</source>
          <target state="translated">Элем возвращает тип элемента для данного указателя p.</target>
        </trans-unit>
        <trans-unit id="4d8af3898701d186c1b2aa25d7c01ba7a6c647ba" translate="yes" xml:space="preserve">
          <source>Elem returns the element type of channel c.</source>
          <target state="translated">Элем возвращает тип элемента канала c.</target>
        </trans-unit>
        <trans-unit id="06df7045855a339d28ddf7bceaed3a18eca395ea" translate="yes" xml:space="preserve">
          <source>Elem returns the element type of map m.</source>
          <target state="translated">Элем возвращает тип элемента карты m.</target>
        </trans-unit>
        <trans-unit id="1d9476b48442b612f54821e3019f01f37bd352c7" translate="yes" xml:space="preserve">
          <source>Elem returns the element type of slice s.</source>
          <target state="translated">Элем возвращает тип элемента ломтик s.</target>
        </trans-unit>
        <trans-unit id="6b3b30426371820daeb94800f4f247d67b378492" translate="yes" xml:space="preserve">
          <source>Elem returns the value that the interface v contains or that the pointer v points to. It panics if v's Kind is not Interface or Ptr. It returns the zero Value if v is nil.</source>
          <target state="translated">Элем возвращает значение,которое содержит интерфейс v или на которое указывает указатель v.Он паникует,если v's Kind не является интерфейсом или Ptr.Он возвращает нулевое значение,если v равно нулю.</target>
        </trans-unit>
        <trans-unit id="362386365af358238b7934a96826d937830ebf3a" translate="yes" xml:space="preserve">
          <source>Element is an element of a linked list.</source>
          <target state="translated">Элемент является элементом связанного списка.</target>
        </trans-unit>
        <trans-unit id="3d304236b20204aaee01a3be7e8fa030c924f00d" translate="yes" xml:space="preserve">
          <source>Elements omitted from the value are assumed to be zero or, when zero is impossible, one, so parsing &quot;3:04pm&quot; returns the time corresponding to Jan 1, year 0, 15:04:00 UTC (note that because the year is 0, this time is before the zero Time). Years must be in the range 0000..9999. The day of the week is checked for syntax but it is otherwise ignored.</source>
          <target state="translated">Элементы,опущенные из значения,считаются равными нулю или,когда ноль невозможен,единице,поэтому при разборе &quot;3:04 вечера&quot; возвращается время,соответствующее 1 января,году 0,15:04:00 UTC (обратите внимание,что из-за того,что год равен 0,это время находится до времени нуля).Годы должны быть в диапазоне 0000...9999.День недели проверяется на синтаксис,но в противном случае он игнорируется.</target>
        </trans-unit>
        <trans-unit id="714dc931f98b9f53a323ada665f744f785f104e3" translate="yes" xml:space="preserve">
          <source>Embedded reports whether the variable is an embedded field.</source>
          <target state="translated">Встроенные отчеты о том,является ли переменная встроенным полем.</target>
        </trans-unit>
        <trans-unit id="1a91fd75faca93aa3f92e6209ae4a04b05729483" translate="yes" xml:space="preserve">
          <source>Embedded returns the i'th embedded defined (*Named) type of interface t for 0 &amp;lt;= i &amp;lt; t.NumEmbeddeds(). The result is nil if the i'th embedded type is not a defined type.</source>
          <target state="translated">Embedded возвращает i-й встроенный определенный (* Named) тип интерфейса t для 0 &amp;lt;= i &amp;lt;t.NumEmbeddeds (). Результат равен нулю, если i-й встроенный тип не является определенным типом.</target>
        </trans-unit>
        <trans-unit id="2ad1755ca44b573afbc8198d2b54e334f6a6b246" translate="yes" xml:space="preserve">
          <source>EmbeddedType returns the i'th embedded type of interface t for 0 &amp;lt;= i &amp;lt; t.NumEmbeddeds().</source>
          <target state="translated">EmbeddedType возвращает i-й встроенный тип интерфейса t для 0 &amp;lt;= i &amp;lt;t.NumEmbeddeds ().</target>
        </trans-unit>
        <trans-unit id="fbca94fd7fa6bc879ff012dca165d33cc17634f8" translate="yes" xml:space="preserve">
          <source>Emerg logs a message with severity LOG_EMERG, ignoring the severity passed to New.</source>
          <target state="translated">Emerg регистрирует сообщение со степенью тяжести LOG_EMERG,игнорируя степень тяжести,переданную New.</target>
        </trans-unit>
        <trans-unit id="669c16620b7df41e107993839f261f8e6f1e78cd" translate="yes" xml:space="preserve">
          <source>Empty lines are never continued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208dc8efabe1038228cedca52f60b871bf5c8251" translate="yes" xml:space="preserve">
          <source>Empty reports whether t is the empty interface.</source>
          <target state="translated">Пустые сообщения о том,является ли t пустым интерфейсом.</target>
        </trans-unit>
        <trans-unit id="bf63858a4ff105075e4707dac909a52be21cbc8f" translate="yes" xml:space="preserve">
          <source>Empty reports whether t is the empty interface. The interface must have been completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6164cdafbad9c2d77fab44868057e1a865dab256" translate="yes" xml:space="preserve">
          <source>Empty reports whether the rectangle contains no points.</source>
          <target state="translated">Пустой сообщает,не содержит ли прямоугольник точек.</target>
        </trans-unit>
        <trans-unit id="aa1a82640541370ae1891158035802a1ac918358" translate="yes" xml:space="preserve">
          <source>Empty strings:</source>
          <target state="translated">Пустые струны:</target>
        </trans-unit>
        <trans-unit id="1e0a04a02a4b36d462dfbd7a50f1ba95ab97db02" translate="yes" xml:space="preserve">
          <source>EmptyOpContext returns the zero-width assertions satisfied at the position between the runes r1 and r2. Passing r1 == -1 indicates that the position is at the beginning of the text. Passing r2 == -1 indicates that the position is at the end of the text.</source>
          <target state="translated">EmptyOpContext возвращает утверждения нулевой ширины в позиции между рунами r1 и r2.Передача r1 ==-1 означает,что позиция находится в начале текста.Передача r2 ==-1 означает,что позиция находится в конце текста.</target>
        </trans-unit>
        <trans-unit id="782e817cf07d938d62f7f0517e130f19ec6b4cf1" translate="yes" xml:space="preserve">
          <source>Encode</source>
          <target state="translated">Encode</target>
        </trans-unit>
        <trans-unit id="28107c7a586749b6433a5733b287757fb842042a" translate="yes" xml:space="preserve">
          <source>Encode calls Flush before returning.</source>
          <target state="translated">Кодировка звонков Флеш перед возвращением.</target>
        </trans-unit>
        <trans-unit id="8075b5e09ea3f63f78c89a2ddc490859d0c31bf8" translate="yes" xml:space="preserve">
          <source>Encode encodes src into EncodedLen(len(src)) bytes of dst. As a convenience, it returns the number of bytes written to dst, but this value is always EncodedLen(len(src)). Encode implements hexadecimal encoding.</source>
          <target state="translated">Кодирует src в байты EncodedLen(len(src))dst.Для удобства возвращает количество байт,записанных в dst,но это значение всегда EncodedLen(len(src)).В кодировке реализована шестнадцатеричная кодировка.</target>
        </trans-unit>
        <trans-unit id="bad1f060c6238760ff000a670071a44f8806160b" translate="yes" xml:space="preserve">
          <source>Encode encodes src into at most MaxEncodedLen(len(src)) bytes of dst, returning the actual number of bytes written.</source>
          <target state="translated">Кодирует src максимум в MaxEncodedLen(len(src))байт dst,возвращая фактическое количество записанных байт.</target>
        </trans-unit>
        <trans-unit id="eb047c3c3d4f31e4290959040afdbcc1d45c6483" translate="yes" xml:space="preserve">
          <source>Encode encodes src using the encoding enc, writing EncodedLen(len(src)) bytes to dst.</source>
          <target state="translated">Кодирует src,используя EncodedLen(len(src)),записывая байты EncodedLen(len(src))в dst.</target>
        </trans-unit>
        <trans-unit id="37cb8fb5926768be9ba7db2b847e6b4f7e61df93" translate="yes" xml:space="preserve">
          <source>Encode encodes the values into &amp;ldquo;URL encoded&amp;rdquo; form (&quot;bar=baz&amp;amp;foo=quux&quot;) sorted by key.</source>
          <target state="translated">Кодировать кодирует значения в форму &amp;laquo;закодированный URL&amp;raquo; (&amp;laquo;bar = baz &amp;amp; foo = quux&amp;raquo;), отсортированные по ключу.</target>
        </trans-unit>
        <trans-unit id="3cacdbbc19179ef246a49e3b221538113b7b2aea" translate="yes" xml:space="preserve">
          <source>Encode returns the UTF-16 encoding of the Unicode code point sequence s.</source>
          <target state="translated">Код возвращает кодировку UTF-16 последовательности точек кода Юникода s.</target>
        </trans-unit>
        <trans-unit id="7e733c09d68cd91421a4d1814d8e874c9b899a79" translate="yes" xml:space="preserve">
          <source>Encode returns the encoded-word form of s. If s is ASCII without special characters, it is returned unchanged. The provided charset is the IANA charset name of s. It is case insensitive.</source>
          <target state="translated">Код возвращает кодированное слово в форме s.Если s-это ASCII без специальных символов,он возвращается без изменений.Поставляемая кодовая страница-это имя кодовой страницы IANA s.Она не чувствительна к регистру.</target>
        </trans-unit>
        <trans-unit id="cb435f969670ff1e290f4a330dd20e7ada06128c" translate="yes" xml:space="preserve">
          <source>Encode transmits the data item represented by the empty interface value, guaranteeing that all necessary type information has been transmitted first. Passing a nil pointer to Encoder will panic, as they cannot be transmitted by gob.</source>
          <target state="translated">Код передает элемент данных,представленный пустым значением интерфейса,гарантируя,что сначала будет передана вся необходимая информация о типе.Передача нулевого указателя кодировщику вызовет панику,так как они не могут быть переданы при помощи кубика.</target>
        </trans-unit>
        <trans-unit id="82052ebc621525b1a00e64a785a78506cb678614" translate="yes" xml:space="preserve">
          <source>Encode writes the Image m to w in GIF format.</source>
          <target state="translated">Кодировка записывает изображение m в w в формате GIF.</target>
        </trans-unit>
        <trans-unit id="37c9bfb263c03b8e0db64db584d5ef43161f60ee" translate="yes" xml:space="preserve">
          <source>Encode writes the Image m to w in JPEG 4:2:0 baseline format with the given options. Default parameters are used if a nil *Options is passed.</source>
          <target state="translated">Кодировка записывает изображение m в w в базовом формате JPEG 4:2:0 с заданными опциями.Параметры по умолчанию используются,если передано nil *Options.</target>
        </trans-unit>
        <trans-unit id="b163cff27e48e422e82d5a5f5dd2edfa89cd1991" translate="yes" xml:space="preserve">
          <source>Encode writes the Image m to w in PNG format.</source>
          <target state="translated">Кодировка записывает изображение m в w в формате PNG.</target>
        </trans-unit>
        <trans-unit id="a5cbca07b15679a333d2f3c1093e760dc8fed50b" translate="yes" xml:space="preserve">
          <source>Encode writes the Image m to w in PNG format. Any Image may be encoded, but images that are not image.NRGBA might be encoded lossily.</source>
          <target state="translated">Кодировка записывает изображение m в w в формате PNG.Любое изображение может быть закодировано,но изображения,которые не являются image.NRGBA могут быть закодированы с потерями.</target>
        </trans-unit>
        <trans-unit id="9c8d80de5513517293c9312bce84a60a51e18c30" translate="yes" xml:space="preserve">
          <source>Encode writes the JSON encoding of v to the stream, followed by a newline character.</source>
          <target state="translated">Кодирует JSON кодировку v в поток,за которой следует символ новой строки.</target>
        </trans-unit>
        <trans-unit id="3431bd1ddef07774c0075a0d8cf7cdb745dd66d0" translate="yes" xml:space="preserve">
          <source>Encode writes the PEM encoding of b to out.</source>
          <target state="translated">Код записывает PEM кодировку из b в out.</target>
        </trans-unit>
        <trans-unit id="fc285ed2b0a9eba61cc91978b1228dfe4899cae1" translate="yes" xml:space="preserve">
          <source>Encode writes the XML encoding of v to the stream.</source>
          <target state="translated">Кодировка записывает XML кодировку v в поток.</target>
        </trans-unit>
        <trans-unit id="1290fb5a5c4f28124f4f2167306908f4b7e3cd0b" translate="yes" xml:space="preserve">
          <source>EncodeAll writes the images in g to w in GIF format with the given loop count and delay between frames.</source>
          <target state="translated">EncodeAll записывает изображения в формате g-w в GIF с заданным количеством циклов и задержкой между кадрами.</target>
        </trans-unit>
        <trans-unit id="ff1901b308e73262ddff5a1580f7534a541e698b" translate="yes" xml:space="preserve">
          <source>EncodeElement calls Flush before returning.</source>
          <target state="translated">EncodeElement вызывает Flush перед возвращением.</target>
        </trans-unit>
        <trans-unit id="c581857a42291416b5012a1bfc65819fabcce520" translate="yes" xml:space="preserve">
          <source>EncodeElement writes the XML encoding of v to the stream, using start as the outermost tag in the encoding.</source>
          <target state="translated">EncodeElement записывает XML кодировку v в поток,используя start в качестве крайнего тега в кодировке.</target>
        </trans-unit>
        <trans-unit id="ab51517ca16e7a4e5eb7b8d3ac937d2b26f7b298" translate="yes" xml:space="preserve">
          <source>EncodeRune</source>
          <target state="translated">EncodeRune</target>
        </trans-unit>
        <trans-unit id="4f528704d795134046c2e2331ad94b8db1da56a1" translate="yes" xml:space="preserve">
          <source>EncodeRune returns the UTF-16 surrogate pair r1, r2 for the given rune. If the rune is not a valid Unicode code point or does not need encoding, EncodeRune returns U+FFFD, U+FFFD.</source>
          <target state="translated">EncodeRune возвращает суррогатную пару UTF-16 r1,r2 для данной руны.Если руна не является действительной точкой кода Юникода или не требует кодирования,EncodeRune возвращает U+FFFD,U+FFFD.</target>
        </trans-unit>
        <trans-unit id="c8221ae44d390e63454c4282bd9104822f9a4df9" translate="yes" xml:space="preserve">
          <source>EncodeRune writes into p (which must be large enough) the UTF-8 encoding of the rune. It returns the number of bytes written.</source>
          <target state="translated">EncodeRune записывает в p (которая должна быть достаточно большой)кодировку UTF-8 руны.Возвращает количество записанных байт.</target>
        </trans-unit>
        <trans-unit id="ea5fe709be23ce3bc5ba98960e96ced13416a04d" translate="yes" xml:space="preserve">
          <source>EncodeToMemory returns the PEM encoding of b.</source>
          <target state="translated">EncodeToMemory возвращает PEM кодировку b.</target>
        </trans-unit>
        <trans-unit id="324c8a3fb19979327232b44bb8a31c381b37697d" translate="yes" xml:space="preserve">
          <source>EncodeToString</source>
          <target state="translated">EncodeToString</target>
        </trans-unit>
        <trans-unit id="3dfcea8813ae6722c184e6e06a17982d9d632f08" translate="yes" xml:space="preserve">
          <source>EncodeToString returns the base32 encoding of src.</source>
          <target state="translated">EncodeToString возвращает базовую32 кодировку src.</target>
        </trans-unit>
        <trans-unit id="3bc135cc3be76ce5df9e8fd7f905545938abd518" translate="yes" xml:space="preserve">
          <source>EncodeToString returns the base64 encoding of src.</source>
          <target state="translated">EncodeToString возвращает базовую64-кодировку src.</target>
        </trans-unit>
        <trans-unit id="f3843839ed2a2f00b8aef2ea4e6ecf9c9ab4e04b" translate="yes" xml:space="preserve">
          <source>EncodeToString returns the hexadecimal encoding of src.</source>
          <target state="translated">EncodeToString возвращает шестнадцатеричную кодировку src.</target>
        </trans-unit>
        <trans-unit id="19fcb6484006494d394978f1704e4ed9b4f5539f" translate="yes" xml:space="preserve">
          <source>EncodeToken allows writing a ProcInst with Target set to &quot;xml&quot; only as the first token in the stream.</source>
          <target state="translated">EncodeToken позволяет написать ProcInst с установленным в Target значением &quot;xml&quot; только как первый маркер в потоке.</target>
        </trans-unit>
        <trans-unit id="3c85b7ab7de6f179653955c1c25494b973fd6239" translate="yes" xml:space="preserve">
          <source>EncodeToken does not call Flush, because usually it is part of a larger operation such as Encode or EncodeElement (or a custom Marshaler's MarshalXML invoked during those), and those will call Flush when finished. Callers that create an Encoder and then invoke EncodeToken directly, without using Encode or EncodeElement, need to call Flush when finished to ensure that the XML is written to the underlying writer.</source>
          <target state="translated">EncodeToken не вызывает Flush,потому что обычно он является частью более крупной операции,такой как Encode или EncodeElement (или пользовательского MarshalXML маркера,вызываемого во время этих операций),и по ее завершении маркеры будут вызывать Flush.Звонящие,которые создают Encoder,а затем вызывают EncodeToken напрямую,без использования Encode или EncodeElement,должны вызвать Flush по окончании операции,чтобы убедиться,что XML был записан на соответствующий пишущий файл.</target>
        </trans-unit>
        <trans-unit id="05059e24e38c8fd05c7837bf618707c5627060c0" translate="yes" xml:space="preserve">
          <source>EncodeToken writes the given XML token to the stream. It returns an error if StartElement and EndElement tokens are not properly matched.</source>
          <target state="translated">EncodeToken записывает заданный XML-токен в поток.Он возвращает ошибку,если маркеры StartElement и EndElement не совпадают должным образом.</target>
        </trans-unit>
        <trans-unit id="0947a3c8c9b8bcd8c44bdd10335e323cd1ea461b" translate="yes" xml:space="preserve">
          <source>EncodeValue transmits the data item represented by the reflection value, guaranteeing that all necessary type information has been transmitted first. Passing a nil pointer to EncodeValue will panic, as they cannot be transmitted by gob.</source>
          <target state="translated">EncodeValue передает элемент данных,представленный значением отражения,гарантируя,что вся необходимая информация типа была передана первой.Передача нулевого указателя на EncodeValue вызовет панику,так как они не могут быть переданы при помощи кубика.</target>
        </trans-unit>
        <trans-unit id="854b241316ad3d39a8ee266c3a44ddee623c1784" translate="yes" xml:space="preserve">
          <source>EncodedLen returns the length in bytes of the base32 encoding of an input buffer of length n.</source>
          <target state="translated">EncodedLen возвращает длину в байтах базовой32 кодировки входного буфера длиной n.</target>
        </trans-unit>
        <trans-unit id="8a4f417b33e58db9c0c31f29eff4ddd8669f0b97" translate="yes" xml:space="preserve">
          <source>EncodedLen returns the length in bytes of the base64 encoding of an input buffer of length n.</source>
          <target state="translated">EncodedLen возвращает длину в байтах базовой64-кодировки входного буфера длиной n.</target>
        </trans-unit>
        <trans-unit id="485a353fee0c882183777b5b5993044af3a1bc75" translate="yes" xml:space="preserve">
          <source>EncodedLen returns the length of an encoding of n source bytes. Specifically, it returns n * 2.</source>
          <target state="translated">EncodedLen возвращает длину кодировки n исходных байтов.В частности,возвращается n*2.</target>
        </trans-unit>
        <trans-unit id="7dca2524a7e133f2714375c509deec12458fd552" translate="yes" xml:space="preserve">
          <source>Encoder</source>
          <target state="translated">Encoder</target>
        </trans-unit>
        <trans-unit id="2b7ddfe809165179e7cd2edadb5a1ced8b769f0f" translate="yes" xml:space="preserve">
          <source>Encoder configures encoding PNG images.</source>
          <target state="translated">Кодировщик настраивает кодирование изображений PNG.</target>
        </trans-unit>
        <trans-unit id="ea245bab86e7e7cf2fd8d813fc2e95cb74506589" translate="yes" xml:space="preserve">
          <source>EncoderBuffer holds the buffers used for encoding PNG images.</source>
          <target state="translated">EncoderBuffer удерживает буферы,используемые для кодирования изображений PNG.</target>
        </trans-unit>
        <trans-unit id="0fc95babeebbbdab367284399ffa521502bf0828" translate="yes" xml:space="preserve">
          <source>EncoderBufferPool is an interface for getting and returning temporary instances of the EncoderBuffer struct. This can be used to reuse buffers when encoding multiple images.</source>
          <target state="translated">EncoderBufferPool представляет собой интерфейс для получения и возврата временных экземпляров структуры EncoderBuffer.Он может быть использован для повторного использования буферов при кодировании нескольких изображений.</target>
        </trans-unit>
        <trans-unit id="c2226a4e1fe15dc87148f967dace15e6586e72c4" translate="yes" xml:space="preserve">
          <source>Encoding Details</source>
          <target state="translated">Подробности кодирования</target>
        </trans-unit>
        <trans-unit id="8ca66aaccc75b682fb570d9fde3184c72d629e9c" translate="yes" xml:space="preserve">
          <source>Encoding.DecodeString</source>
          <target state="translated">Encoding.DecodeString</target>
        </trans-unit>
        <trans-unit id="614b34c455deb2c2a0b4963d69801751d69a4b89" translate="yes" xml:space="preserve">
          <source>Encoding.EncodeToString</source>
          <target state="translated">Encoding.EncodeToString</target>
        </trans-unit>
        <trans-unit id="321539e50d8c1a12cfc511582d9e7c710284774f" translate="yes" xml:space="preserve">
          <source>EncryptOAEP</source>
          <target state="translated">EncryptOAEP</target>
        </trans-unit>
        <trans-unit id="0bf129deb5a96b559ca75907380b4d67e23a7c95" translate="yes" xml:space="preserve">
          <source>EncryptOAEP encrypts the given message with RSA-OAEP.</source>
          <target state="translated">EncryptOAEP шифрует данное сообщение с помощью RSA-OAEP.</target>
        </trans-unit>
        <trans-unit id="6b690d741feab568e68ed01d4029afb22005c9ca" translate="yes" xml:space="preserve">
          <source>EncryptPEMBlock returns a PEM block of the specified type holding the given DER-encoded data encrypted with the specified algorithm and password.</source>
          <target state="translated">EncryptPEMBlock возвращает PEM-блок указанного типа,содержащий данные,зашифрованные с помощью заданного алгоритма и пароля в DER-кодировке.</target>
        </trans-unit>
        <trans-unit id="fd27ac4708502cb57f465257f0dac3343fb711d7" translate="yes" xml:space="preserve">
          <source>EncryptPKCS1v15 encrypts the given message with RSA and the padding scheme from PKCS #1 v1.5. The message must be no longer than the length of the public modulus minus 11 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e11b5091381ca592414c841e33cc24a6a12dbfc" translate="yes" xml:space="preserve">
          <source>EncryptPKCS1v15 encrypts the given message with RSA and the padding scheme from PKCS#1 v1.5. The message must be no longer than the length of the public modulus minus 11 bytes.</source>
          <target state="translated">EncryptPKCS1v15 шифрует данное сообщение с помощью RSA и схемы заполнения из PKCS#1 v1.5.Длина сообщения не должна превышать длину публичного модуля минус 11 байт.</target>
        </trans-unit>
        <trans-unit id="67f8660b6ee6f64ee979595238eebbe3f14e32b1" translate="yes" xml:space="preserve">
          <source>End marks the end of the operation represented by the Task.</source>
          <target state="translated">Конец обозначает конец операции,представленной Заданием.</target>
        </trans-unit>
        <trans-unit id="0eb51238ae16cda9710b593b0fe1c30e79e170be" translate="yes" xml:space="preserve">
          <source>End marks the end of the traced code region.</source>
          <target state="translated">Конец обозначает конец трассируемой области кода.</target>
        </trans-unit>
        <trans-unit id="fd4f40a6a53acbe4c60d207d7edd5710b46ca090" translate="yes" xml:space="preserve">
          <source>End returns the corresponding XML end element.</source>
          <target state="translated">End возвращает соответствующий конечный элемент XML.</target>
        </trans-unit>
        <trans-unit id="f1740f46ed43f406a6103daf9f32866a26a80d41" translate="yes" xml:space="preserve">
          <source>EndRequest notifies p that the request with the given id has been sent (or, if this is a server, received).</source>
          <target state="translated">EndRequest уведомляет p о том,что запрос с заданным id был отправлен (или,если это сервер,получен).</target>
        </trans-unit>
        <trans-unit id="6e2e995a27065f521aa0378954a6196f51dbb39f" translate="yes" xml:space="preserve">
          <source>EndResponse notifies p that the response with the given id has been received (or, if this is a server, sent).</source>
          <target state="translated">EndResponse уведомляет p,что ответ с заданным id был получен (или,если это сервер,отправлен).</target>
        </trans-unit>
        <trans-unit id="1d41e80c567cafec80d99e67b6763b670b344af0" translate="yes" xml:space="preserve">
          <source>Entry 0 is always nil, since file index 0 represents &quot;no file&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fffc0a3145721a08d65aaabc9b277262428177" translate="yes" xml:space="preserve">
          <source>Entry returns the entry address of the function.</source>
          <target state="translated">Ввод возвращает адрес ввода функции.</target>
        </trans-unit>
        <trans-unit id="f68f172a7016b7818d2dab5107eab4fa604b31d7" translate="yes" xml:space="preserve">
          <source>Environ returns a copy of strings representing the environment, in the form &quot;key=value&quot;.</source>
          <target state="translated">Environ возвращает копию строк,представляющих окружение,в виде &quot;key=value&quot;.</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">Переменные среды</target>
        </trans-unit>
        <trans-unit id="045f71994ee68b9a868e51f44a880e8642e83557" translate="yes" xml:space="preserve">
          <source>Eq reports whether p and q are equal.</source>
          <target state="translated">Eq сообщает,равны ли p и q.</target>
        </trans-unit>
        <trans-unit id="d543b9a23b302f4f4fb69164e3e63071f6ee7f20" translate="yes" xml:space="preserve">
          <source>Eq reports whether r and s contain the same set of points. All empty rectangles are considered equal.</source>
          <target state="translated">Eq сообщает,содержат ли r и s один и тот же набор точек.Все пустые прямоугольники считаются равными.</target>
        </trans-unit>
        <trans-unit id="a472ce8d19d10484177dabb05deb4ee299058a0c" translate="yes" xml:space="preserve">
          <source>Equal</source>
          <target state="translated">Equal</target>
        </trans-unit>
        <trans-unit id="d008b976622977894ad1256a169eda07f451f5cf" translate="yes" xml:space="preserve">
          <source>Equal compares two MACs for equality without leaking timing information.</source>
          <target state="translated">Равенство сравнивает два ПДК для равенства без утечки информации о времени.</target>
        </trans-unit>
        <trans-unit id="26406bd3b947d0c8a8751c20420b77c92f9cfb01" translate="yes" xml:space="preserve">
          <source>Equal reports whether a and b are the same length and contain the same bytes. A nil argument is equivalent to an empty slice.</source>
          <target state="translated">Равные сообщения о том,что a и b имеют одинаковую длину и содержат одинаковые байты.Аргумент &quot;ноль&quot; эквивалентен пустому срезу.</target>
        </trans-unit>
        <trans-unit id="9338a726f14837219e3f0b5160e801035363d7a6" translate="yes" xml:space="preserve">
          <source>Equal reports whether ip and x are the same IP address. An IPv4 address and that same address in IPv6 form are considered to be equal.</source>
          <target state="translated">Равные отчеты о том,являются ли ip и x одним и тем же IP-адресом.Адрес IPv4 и этот же адрес в форме IPv6 считаются равными.</target>
        </trans-unit>
        <trans-unit id="e236086365a108f382942e0e763834a0bce968eb" translate="yes" xml:space="preserve">
          <source>Equal reports whether oi and other represent the same identifier.</source>
          <target state="translated">Равные отчеты о том,представляют ли oi и другие одинаковые идентификаторы.</target>
        </trans-unit>
        <trans-unit id="db2e4eecaa4a5a14708c90f6a2195e69f045ff54" translate="yes" xml:space="preserve">
          <source>Equal reports whether priv and x have equivalent values. It ignores Precomputed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f6a5a4d31e0fc41fe88d2afe276b5d9c0b2082" translate="yes" xml:space="preserve">
          <source>Equal reports whether priv and x have the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71fc1eb6426faf4c13aea1472b71925e4d06c01" translate="yes" xml:space="preserve">
          <source>Equal reports whether pub and x have the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1871b89edc21087f0c972b71d0af0383183bbc" translate="yes" xml:space="preserve">
          <source>Equal reports whether t and u represent the same time instant. Two times can be equal even if they are in different locations. For example, 6:00 +0200 CEST and 4:00 UTC are Equal. See the documentation on the Time type for the pitfalls of using == with Time values; most code should use Equal instead.</source>
          <target state="translated">Равные отчеты о том,представляют ли t и u одно и то же мгновение времени.Два раза могут быть равны,даже если они находятся в разных местах.Например,6:00 +0200 CEST и 4:00 UTC равны.О подводных камнях использования ==со значениями Time смотрите документацию по типу Time;в большинстве случаев код должен использовать Equal.</target>
        </trans-unit>
        <trans-unit id="096bbf4cea8daa0a52be52e90f33989f1fdcaa58" translate="yes" xml:space="preserve">
          <source>Equal reports whether t and u represent the same time instant. Two times can be equal even if they are in different locations. For example, 6:00 +0200 and 4:00 UTC are Equal. See the documentation on the Time type for the pitfalls of using == with Time values; most code should use Equal instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cfff5340c0037cc227c3c8375ad1960639be42" translate="yes" xml:space="preserve">
          <source>Equal reports whether v and w are equal according to JavaScript's === operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901b20b6e47f8875259f27573f49fab5bbd14942" translate="yes" xml:space="preserve">
          <source>Equal reports whether x and y have identical structure.</source>
          <target state="translated">Равные отчеты о том,имеют ли x и y одинаковую структуру.</target>
        </trans-unit>
        <trans-unit id="2acbd072fc0cea3dbceb299edaa5f0267951a317" translate="yes" xml:space="preserve">
          <source>EqualFold</source>
          <target state="translated">EqualFold</target>
        </trans-unit>
        <trans-unit id="eed7060e10c06b3be3fad568938e5007b9b6cdd4" translate="yes" xml:space="preserve">
          <source>EqualFold reports whether s and t, interpreted as UTF-8 strings, are equal under Unicode case-folding, which is a more general form of case-insensitivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3cf184644e462de0ae310758745d4172f640f1" translate="yes" xml:space="preserve">
          <source>EqualFold reports whether s and t, interpreted as UTF-8 strings, are equal under Unicode case-folding.</source>
          <target state="translated">EqualFold сообщает,равны ли s и t,интерпретируемые как строки UTF-8,в случае Unicode case-фолдинга.</target>
        </trans-unit>
        <trans-unit id="a45c873903030f443476751c44e9df07e6be3d31" translate="yes" xml:space="preserve">
          <source>Erf returns the error function of x.</source>
          <target state="translated">Erf возвращает функцию ошибки x.</target>
        </trans-unit>
        <trans-unit id="ee0699badf2b941a080ee739ed6ea1875f351847" translate="yes" xml:space="preserve">
          <source>Erfc returns the complementary error function of x.</source>
          <target state="translated">Erfc возвращает функцию дополнительной ошибки x.</target>
        </trans-unit>
        <trans-unit id="18bdc77cc7ccf01894d60882c01638586652a838" translate="yes" xml:space="preserve">
          <source>Erfcinv returns the inverse of Erfc(x).</source>
          <target state="translated">Erfcinv возвращает обратное значение Erfc(x).</target>
        </trans-unit>
        <trans-unit id="bb7f9017bf886c8e3d8bef46625d5e9ffc1f9661" translate="yes" xml:space="preserve">
          <source>Erfinv returns the inverse error function of x.</source>
          <target state="translated">Erfinv возвращает функцию обратной ошибки x.</target>
        </trans-unit>
        <trans-unit id="cd9ef49ac603b471db58d8995717ed1a3762d907" translate="yes" xml:space="preserve">
          <source>Err logs a message with severity LOG_ERR, ignoring the severity passed to New.</source>
          <target state="translated">Ошибка записывает сообщение со степенью тяжести LOG_ERR,игнорируя степень тяжести,переданную New.</target>
        </trans-unit>
        <trans-unit id="df5bb850e3b7913454e7774e322a2938bbcef6a7" translate="yes" xml:space="preserve">
          <source>Err provides a way for wrapping packages to check for query errors without calling Scan. Err returns the error, if any, that was encountered while running the query. If this error is not nil, this error will also be returned from Scan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5578cd7bcdf826276ecb1f2f28645e2bbb50359e" translate="yes" xml:space="preserve">
          <source>Err returns an error equivalent to this error list. If the list is empty, Err returns nil.</source>
          <target state="translated">Err возвращает ошибку,эквивалентную данному списку ошибок.Если список пуст,Err возвращает ноль.</target>
        </trans-unit>
        <trans-unit id="832f241be017d872e00d3180f6d33f40fd5570e6" translate="yes" xml:space="preserve">
          <source>Err returns the error, if any, that was encountered during iteration. Err may be called after an explicit or implicit Close.</source>
          <target state="translated">Err возвращает ошибку,если таковая имела место во время итерации.Err может быть вызвана после явного или неявного Close.</target>
        </trans-unit>
        <trans-unit id="a4df7d7cbdf62192ee825ad1260a51e02a37a319" translate="yes" xml:space="preserve">
          <source>Err returns the first non-EOF error that was encountered by the Scanner.</source>
          <target state="translated">Err возвращает первую не-EOF ошибку,с которой столкнулся сканер.</target>
        </trans-unit>
        <trans-unit id="d7c28ecb0558af18edf16f6cdb309e8e1c3a8d97" translate="yes" xml:space="preserve">
          <source>ErrAbortHandler is a sentinel panic value to abort a handler. While any panic from ServeHTTP aborts the response to the client, panicking with ErrAbortHandler also suppresses logging of a stack trace to the server's error log.</source>
          <target state="translated">ErrAbortHandler-это паническое значение для отмены обработчика.В то время как любая паника от ServeHTTP прерывает ответ клиенту,паника с ErrAbortHandler также подавляет протоколирование трассировки стека в журнал ошибок сервера.</target>
        </trans-unit>
        <trans-unit id="2c93b5da38ab3884dabe8401ec5789cf9954b24e" translate="yes" xml:space="preserve">
          <source>ErrBadConn should be returned by a driver to signal to the sql package that a driver.Conn is in a bad state (such as the server having earlier closed the connection) and the sql package should retry on a new connection.</source>
          <target state="translated">ErrBadConn должен быть возвращен драйвером,чтобы сообщить sql-пакету,что драйвер.Conn находится в плохом состоянии (например,сервер,ранее закрывший соединение)и sql-пакет должен повторить попытку нового соединения.</target>
        </trans-unit>
        <trans-unit id="e3b44f0681b8df29aaf90b891286d09878a539aa" translate="yes" xml:space="preserve">
          <source>ErrBadPattern indicates a pattern was malformed.</source>
          <target state="translated">ErrBadPattern указывает на то,что шаблон был некорректен.</target>
        </trans-unit>
        <trans-unit id="3ee1109d6fff6aa1a95dd2ace67b7df2a7334ba3" translate="yes" xml:space="preserve">
          <source>ErrBodyReadAfterClose is returned when reading a Request or Response Body after the body has been closed. This typically happens when the body is read after an HTTP Handler calls WriteHeader or Write on its ResponseWriter.</source>
          <target state="translated">ErrBodyReadAfterClose возвращается при чтении тела запроса или ответа после закрытия тела.Обычно это происходит при чтении тела после того,как HTTP-обработчик вызывает WriteHeader или Write в своем ResponseWriter.</target>
        </trans-unit>
        <trans-unit id="162a55fce73b60c104f7cc8f11a8072e1ddfd29f" translate="yes" xml:space="preserve">
          <source>ErrClosedPipe is the error used for read or write operations on a closed pipe.</source>
          <target state="translated">ErrClosedPipe-это ошибка,используемая для операций чтения или записи на закрытой трубе.</target>
        </trans-unit>
        <trans-unit id="a4639f7f94b9cb5f412fc7548161f523a7e7f666" translate="yes" xml:space="preserve">
          <source>ErrConnClosed is returned by Read when a handler attempts to read the body of a request after the connection to the web server has been closed.</source>
          <target state="translated">ErrConnClosed возвращается командой Read,когда обработчик пытается прочитать тело запроса после завершения соединения с веб-сервером.</target>
        </trans-unit>
        <trans-unit id="221637ad516409a2ecb2517d32f79d74a258bc09" translate="yes" xml:space="preserve">
          <source>ErrConnDone is returned by any operation that is performed on a connection that has already been returned to the connection pool.</source>
          <target state="translated">ErrConnDone возвращается любой операцией,которая выполняется над соединением,уже возвращенным в пул соединений.</target>
        </trans-unit>
        <trans-unit id="46bfe6cb80875e0ea2a181d7f7d549f4d0d82aed" translate="yes" xml:space="preserve">
          <source>ErrDecryption represents a failure to decrypt a message. It is deliberately vague to avoid adaptive attacks.</source>
          <target state="translated">ErrDecryption представляет собой невозможность расшифровки сообщения.Она намеренно расплывчата,чтобы избежать адаптивных атак.</target>
        </trans-unit>
        <trans-unit id="467746adad5f690d7f559fbcf7439e5e4f657411" translate="yes" xml:space="preserve">
          <source>ErrFinalToken is a special sentinel error value. It is intended to be returned by a Split function to indicate that the token being delivered with the error is the last token and scanning should stop after this one. After ErrFinalToken is received by Scan, scanning stops with no error. The value is useful to stop processing early or when it is necessary to deliver a final empty token. One could achieve the same behavior with a custom error value but providing one here is tidier. See the emptyFinalToken example for a use of this value.</source>
          <target state="translated">ErrFinalToken-это специальное значение ошибки sendinel.Оно предназначено для возврата функцией Split,чтобы показать,что поставляемый с ошибкой токен является последним токеном,и сканирование должно быть прекращено после этого.После получения ErrFinalToken функцией Scan сканирование останавливается без ошибки.Значение полезно для того,чтобы остановить обработку досрочно или когда необходимо доставить конечный пустой токен.Такого же поведения можно добиться и при использовании пользовательского значения ошибки,но предоставление такого значения здесь более аккуратно.Пример использования этого значения см.в примере emptyFinalToken.</target>
        </trans-unit>
        <trans-unit id="35aae77fc96792e0a9dd68b7fe9b4104a92752c1" translate="yes" xml:space="preserve">
          <source>ErrFormat indicates that decoding encountered an unknown format.</source>
          <target state="translated">ErrFormat указывает на то,что декодирование столкнулось с неизвестным форматом.</target>
        </trans-unit>
        <trans-unit id="6a8939df51dea8dd69540b21d1442b1df7f644f5" translate="yes" xml:space="preserve">
          <source>ErrHandlerTimeout is returned on ResponseWriter Write calls in handlers which have timed out.</source>
          <target state="translated">ErrHandlerTimeout возвращается при вызове ResponseWriter Write в обработчиках,имеющих тайм-аут.</target>
        </trans-unit>
        <trans-unit id="1683829261143c7257662e5011cf7aaa6a67fd8d" translate="yes" xml:space="preserve">
          <source>ErrHelp is the error returned if the -help or -h flag is invoked but no such flag is defined.</source>
          <target state="translated">ErrHelp-это ошибка,возвращаемая в случае вызова флага -help или -h,но не определения такого флага.</target>
        </trans-unit>
        <trans-unit id="477f520a57de43c26991dd9257c5ef86e299cbab" translate="yes" xml:space="preserve">
          <source>ErrInvalidMediaParameter is returned by ParseMediaType if the media type value was found but there was an error parsing the optional parameters</source>
          <target state="translated">ErrInvalidMediaParameter возвращается ParseMediaType,если значение типа носителя было найдено,но произошла ошибка при разборе дополнительных параметров.</target>
        </trans-unit>
        <trans-unit id="7ccacb88c4d1c0e333f4ecd81bc1d3d9c559f2b7" translate="yes" xml:space="preserve">
          <source>ErrInvalidPublicKey results when a public key is not usable by this code. FIPS is quite strict about the format of DSA keys, but other code may be less so. Thus, when using keys which may have been generated by other code, this error must be handled.</source>
          <target state="translated">ErrInvalidPublicKey выдает результаты,когда публичный ключ не может быть использован этим кодом.FIPS достаточно строго относится к формату DSA-ключей,но другой код может быть менее строгим.Таким образом,при использовании ключей,которые могли быть сгенерированы другим кодом,эта ошибка должна быть обработана.</target>
        </trans-unit>
        <trans-unit id="d88a127fa27de6b24dcaf66add63be95ef25d2bc" translate="yes" xml:space="preserve">
          <source>ErrLength reports an attempt to decode an odd-length input using Decode or DecodeString. The stream-based Decoder returns io.ErrUnexpectedEOF instead of ErrLength.</source>
          <target state="translated">ErrLength сообщает о попытке декодирования входа нечетной длины с помощью Decode или DecodeString.Потоковый декодер возвращает io.ErrUnexpectedEOF вместо ErrLength.</target>
        </trans-unit>
        <trans-unit id="f3c0b0fa96d60cc99b6dbc86bf7d89c3ad78d6c6" translate="yes" xml:space="preserve">
          <source>ErrLineTooLong is returned when reading malformed chunked data with lines that are too long.</source>
          <target state="translated">ErrLineTooLong возвращается при чтении некорректно заполненных данных со слишком длинными строками.</target>
        </trans-unit>
        <trans-unit id="dcde473ed62f7785c3bf6c7d17ee1b065b625a36" translate="yes" xml:space="preserve">
          <source>ErrLineTooLong is returned when reading request or response bodies with malformed chunked encoding.</source>
          <target state="translated">ErrLineTooLong возвращается при чтении тел запросов или ответов с неправильной кусочковой кодировкой.</target>
        </trans-unit>
        <trans-unit id="970c2996a4a5c886310565be53697c5b45faa359" translate="yes" xml:space="preserve">
          <source>ErrMessageTooLarge is returned by ReadForm if the message form data is too large to be processed.</source>
          <target state="translated">ErrMessageTooLarge возвращается ReadForm,если данные формы сообщения слишком велики для обработки.</target>
        </trans-unit>
        <trans-unit id="0ebd73e79cdedfe1cacf57c19778bb47d85fc59f" translate="yes" xml:space="preserve">
          <source>ErrMessageTooLong is returned when attempting to encrypt a message which is too large for the size of the public key.</source>
          <target state="translated">ErrMessageTooLong возвращается при попытке зашифровать сообщение,которое слишком велико для размера публичного ключа.</target>
        </trans-unit>
        <trans-unit id="5f19c673f1a254310103a3c25dcfcd25e3b0451a" translate="yes" xml:space="preserve">
          <source>ErrMissingFile is returned by FormFile when the provided file field name is either not present in the request or not a file field.</source>
          <target state="translated">ErrMissingFile возвращается с помощью FormFile,когда указанное имя поля файла либо отсутствует в запросе,либо не является полем файла.</target>
        </trans-unit>
        <trans-unit id="879d59d2bd412781a3e7f8ffb1ed3e0a6f25ef0a" translate="yes" xml:space="preserve">
          <source>ErrNoCookie is returned by Request's Cookie method when a cookie is not found.</source>
          <target state="translated">ErrNoCookie возвращается методом Cookie запроса,когда cookie-файл не найден.</target>
        </trans-unit>
        <trans-unit id="69a1cf815e40b87d0d5f8fcbbe42eafeab4e1e2f" translate="yes" xml:space="preserve">
          <source>ErrNoLocation is returned by Response's Location method when no Location header is present.</source>
          <target state="translated">ErrNoLocation возвращается методом &quot;Местоположение&quot; при отсутствии заголовка &quot;Местоположение&quot;.</target>
        </trans-unit>
        <trans-unit id="6beea860c8a1449ccac135d4acb1d55a17d0f093" translate="yes" xml:space="preserve">
          <source>ErrNoProgress is returned by some clients of an io.Reader when many calls to Read have failed to return any data or error, usually the sign of a broken io.Reader implementation.</source>
          <target state="translated">ErrNoProgress возвращается некоторыми клиентами io.Reader,когда во многих вызовах на чтение не удалось вернуть данные или ошибку,обычно признак сломанной реализации io.Reader.</target>
        </trans-unit>
        <trans-unit id="392e43865d190f068ab972465b9d359af1b64f08" translate="yes" xml:space="preserve">
          <source>ErrNoRows is returned by Scan when QueryRow doesn't return a row. In such a case, QueryRow returns a placeholder *Row value that defers this error until a Scan.</source>
          <target state="translated">ErrNoRows возвращается при сканировании,когда QueryRow не возвращает строку.В таком случае QueryRow возвращает плейсхолдер *значение строки,которое откладывает эту ошибку до Scan.</target>
        </trans-unit>
        <trans-unit id="488229e1ec35b45cf4ccfde5a62d823f94c24690" translate="yes" xml:space="preserve">
          <source>ErrNoSymbols is returned by File.Symbols and File.DynamicSymbols if there is no such section in the File.</source>
          <target state="translated">ErrNoSymbols возвращается File.Symbols и File.DynamicSymbols,если в файле нет такого раздела.</target>
        </trans-unit>
        <trans-unit id="7533ee8d0b68fb55e112826d6a1c2915f2123d1c" translate="yes" xml:space="preserve">
          <source>ErrNotFat is returned from NewFatFile or OpenFat when the file is not a universal binary but may be a thin binary, based on its magic number.</source>
          <target state="translated">ErrNotFat возвращается из NewFatFile или OpenFat,когда файл не является универсальным бинарным,но может быть тонким бинарным,основываясь на его магическом номере.</target>
        </trans-unit>
        <trans-unit id="aa8869522b92bbf57b0f1c062434e0c2d23cc0b5" translate="yes" xml:space="preserve">
          <source>ErrNotFound is the error resulting if a path search failed to find an executable file.</source>
          <target state="translated">ErrNotFound-это ошибка,возникающая в том случае,если при поиске пути не удалось найти исполняемый файл.</target>
        </trans-unit>
        <trans-unit id="f6a111d069dccbba2d2a3a237c054d532919f96c" translate="yes" xml:space="preserve">
          <source>ErrRange indicates that a value is out of range for the target type.</source>
          <target state="translated">ErrRange указывает на то,что значение для типа цели находится вне диапазона.</target>
        </trans-unit>
        <trans-unit id="12fcce22c0e1998899b62846f27fda0ba160dd35" translate="yes" xml:space="preserve">
          <source>ErrRemoveArgument may be returned from NamedValueChecker to instruct the sql package to not pass the argument to the driver query interface. Return when accepting query specific options or structures that aren't SQL query arguments.</source>
          <target state="translated">ErrRemoveArgument может быть возвращен из NamedValueChecker,чтобы указать sql-пакету не передавать аргумент интерфейсу запроса драйвера.Возвращается при принятии определенных опций или структур запроса,которые не являются аргументами SQL-запроса.</target>
        </trans-unit>
        <trans-unit id="037e83f30e9892945c577cf7fa14541b33afb5a6" translate="yes" xml:space="preserve">
          <source>ErrRequestAborted is returned by Read when a handler attempts to read the body of a request that has been aborted by the web server.</source>
          <target state="translated">ErrRequestAborted возвращается командой Read,когда обработчик пытается прочитать тело запроса,который был прерван веб-сервером.</target>
        </trans-unit>
        <trans-unit id="c70ae4f2182147bf876f436b7f75c0552f6c6b60" translate="yes" xml:space="preserve">
          <source>ErrServerClosed is returned by the Server's Serve, ServeTLS, ListenAndServe, and ListenAndServeTLS methods after a call to Shutdown or Close.</source>
          <target state="translated">ErrServerClosed возвращается методами сервера Serve,ServeTLS,ListenAndServe и ListenAndServeTLS после вызова метода Shutdown или Close.</target>
        </trans-unit>
        <trans-unit id="7ebe2c84541d847b1195492aec2d9b2f7a4c010e" translate="yes" xml:space="preserve">
          <source>ErrShortBuffer means that a read required a longer buffer than was provided.</source>
          <target state="translated">ErrShortBuffer означает,что для чтения требовалось больше буфера,чем было предоставлено.</target>
        </trans-unit>
        <trans-unit id="982fdbcbb882e9752207ac23622fa80a8e4ff13c" translate="yes" xml:space="preserve">
          <source>ErrShortWrite means that a write accepted fewer bytes than requested but failed to return an explicit error.</source>
          <target state="translated">ErrShortWrite означает,что при записи было принято меньшее количество байт,чем запрашивалось,но не была возвращена явная ошибка.</target>
        </trans-unit>
        <trans-unit id="e693fa44dc23f2e964c4c957cddff0c6c414e4de" translate="yes" xml:space="preserve">
          <source>ErrSkip may be returned by some optional interfaces' methods to indicate at runtime that the fast path is unavailable and the sql package should continue as if the optional interface was not implemented. ErrSkip is only supported where explicitly documented.</source>
          <target state="translated">ErrSkip может быть возвращен некоторыми опциональными методами интерфейсов,чтобы указать во время выполнения,что быстрый путь недоступен,и sql-пакет должен продолжить работу так,как если бы опциональный интерфейс не был реализован.ErrSkip поддерживается только при явном документировании.</target>
        </trans-unit>
        <trans-unit id="da9be2949ec46b11aafe4f6565a64184a6259c6a" translate="yes" xml:space="preserve">
          <source>ErrSkipAltProtocol is a sentinel error value defined by Transport.RegisterProtocol.</source>
          <target state="translated">ErrSkipAltProtocol-это значение ошибки отправителя,определяемое Transport.RegisterProtocol.</target>
        </trans-unit>
        <trans-unit id="0984c259498693b4323da793215e73f865780771" translate="yes" xml:space="preserve">
          <source>ErrSyntax indicates that a value does not have the right syntax for the target type.</source>
          <target state="translated">ErrSyntax указывает,что значение не имеет правильного синтаксиса для целевого типа.</target>
        </trans-unit>
        <trans-unit id="72e2bf17148743cd6ab904b3de93ecbe65b459aa" translate="yes" xml:space="preserve">
          <source>ErrTooLarge is passed to panic if memory cannot be allocated to store data in a buffer.</source>
          <target state="translated">ErrTooLarge передается в панику,если память не может быть выделена для хранения данных в буфере.</target>
        </trans-unit>
        <trans-unit id="568c0d2bb32eccd175defcb03344b9a16c508bab" translate="yes" xml:space="preserve">
          <source>ErrTxDone is returned by any operation that is performed on a transaction that has already been committed or rolled back.</source>
          <target state="translated">ErrTxDone возвращается любой операцией,которая выполняется по уже совершенной или откатившейся транзакции.</target>
        </trans-unit>
        <trans-unit id="1f229a1dfc7838f7986b848144af2ffc585c4245" translate="yes" xml:space="preserve">
          <source>ErrUnexpectedEOF means that EOF was encountered in the middle of reading a fixed-size block or data structure.</source>
          <target state="translated">ErrUnexpectedEOF означает,что EOF встречалась в середине чтения блока фиксированного размера или структуры данных.</target>
        </trans-unit>
        <trans-unit id="bfe4f94706eef4c62e93268b91a8df4ee481c805" translate="yes" xml:space="preserve">
          <source>ErrUnknownPC is the error returned by LineReader.ScanPC when the seek PC is not covered by any entry in the line table.</source>
          <target state="translated">ErrUnknownPC-это ошибка,возвращаемая LineReader.ScanPC,когда компьютер поиска не покрыт ни одной записью в таблице строк.</target>
        </trans-unit>
        <trans-unit id="f3ccd127227d246ff29c38b3be735853002e0e90" translate="yes" xml:space="preserve">
          <source>ErrUnsupportedAlgorithm results from attempting to perform an operation that involves algorithms that are not currently implemented.</source>
          <target state="translated">ErrUnsupportedAlgorithm-результат попытки выполнения операции,в которой задействованы алгоритмы,не реализованные на данный момент.</target>
        </trans-unit>
        <trans-unit id="7cda7d2974e4a55a6e31e7b06730353820c8cd09" translate="yes" xml:space="preserve">
          <source>ErrUseLastResponse can be returned by Client.CheckRedirect hooks to control how redirects are processed. If returned, the next request is not sent and the most recent response is returned with its body unclosed.</source>
          <target state="translated">ErrUseLastResponse может быть возвращен Client.CheckRedirect hooks для контроля того,как обрабатываются перенаправления.В случае возврата,следующий запрос не отправляется,а последний ответ возвращается с незакрытым телом.</target>
        </trans-unit>
        <trans-unit id="71263e34d33b79a9329c92364062be99c3eee17e" translate="yes" xml:space="preserve">
          <source>ErrVerification represents a failure to verify a signature. It is deliberately vague to avoid adaptive attacks.</source>
          <target state="translated">ErrVerification (Проверка ошибок)представляет собой невозможность проверки подписи.Она намеренно расплывчата,чтобы избежать адаптивных атак.</target>
        </trans-unit>
        <trans-unit id="6c04dd7f6d847865d8008f59f14ce0415f1fd8dd" translate="yes" xml:space="preserve">
          <source>Errno values can be tested against error values from the os package using errors.Is. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8d01914ee372bf834727e843061ee1afe40a5a" translate="yes" xml:space="preserve">
          <source>Error describes a problem encountered during template Escaping.</source>
          <target state="translated">Ошибка описывает проблему,возникающую во время выполнения шаблона Escaping.</target>
        </trans-unit>
        <trans-unit id="1e74398cca4fe010a9f1160a55d2897886f3d1e9" translate="yes" xml:space="preserve">
          <source>Error implements the error interface.</source>
          <target state="translated">Ошибка реализует интерфейс ошибки.</target>
        </trans-unit>
        <trans-unit id="90eef0a8fff1769f0f058ec32118067d335eaa54" translate="yes" xml:space="preserve">
          <source>Error is equivalent to Log followed by Fail.</source>
          <target state="translated">Ошибка эквивалентна записи в журнал с последующим отказом.</target>
        </trans-unit>
        <trans-unit id="b7f32ee8831e87a9144a1603a0333481dce77381" translate="yes" xml:space="preserve">
          <source>Error is returned by LookPath when it fails to classify a file as an executable.</source>
          <target state="translated">Ошибка возвращается LookPath,когда файл не может быть классифицирован как исполняемый файл.</target>
        </trans-unit>
        <trans-unit id="db662ec10d72905a869274d663c6b1180e4b7f54" translate="yes" xml:space="preserve">
          <source>Error replies to the request with the specified error message and HTTP code. It does not otherwise end the request; the caller should ensure no further writes are done to w. The error message should be plain text.</source>
          <target state="translated">Ошибка в ответе на запрос с указанным сообщением об ошибке и HTTP-кодом.В противном случае он не завершает запрос;вызывающий абонент должен удостовериться,что больше никаких записей не будет сделано на w.Сообщение об ошибке должно быть простым текстом.</target>
        </trans-unit>
        <trans-unit id="a20fb2871b74c1de6e727401f6fd828785f1c240" translate="yes" xml:space="preserve">
          <source>Error reports an error and the operation and URL that caused it.</source>
          <target state="translated">Ошибка сообщает об ошибке,а также о вызвавшей ее операции и URL-адресе.</target>
        </trans-unit>
        <trans-unit id="830c2e692ebb0efc91ade52379d7380987d0d567" translate="yes" xml:space="preserve">
          <source>Error reports any error that has occurred during a previous Write or Flush.</source>
          <target state="translated">Ошибка сообщает об ошибке,возникшей во время предыдущей записи или промывки.</target>
        </trans-unit>
        <trans-unit id="dde0e5cd72639f435d3e7e7fe156ee2ed9879da4" translate="yes" xml:space="preserve">
          <source>Error returns an error string formatted as follows: filename:line:column: message</source>
          <target state="translated">Error возвращает строку ошибки,отформатированную следующим образом:filename:line:column:message</target>
        </trans-unit>
        <trans-unit id="3cfee321593df904c4289a896a7927d4777c6a34" translate="yes" xml:space="preserve">
          <source>Error returns the string representation of a ParseError.</source>
          <target state="translated">Ошибка возвращает строковое представление ParseError.</target>
        </trans-unit>
        <trans-unit id="f4df304fede26c34b36b8acbaaecd004589ae2b8" translate="yes" xml:space="preserve">
          <source>Error wraps a JavaScript error.</source>
          <target state="translated">Ошибка завершает ошибку JavaScript.</target>
        </trans-unit>
        <trans-unit id="c17edc5bbb79fd1e93107557c864f6c73e9e1224" translate="yes" xml:space="preserve">
          <source>Error, which represents a numeric error response from a server.</source>
          <target state="translated">Ошибка,которая представляет собой ответ сервера на числовую ошибку.</target>
        </trans-unit>
        <trans-unit id="f872a6e0e103dae88045f618b47fc615ea682e89" translate="yes" xml:space="preserve">
          <source>ErrorCode is a code for a kind of error.</source>
          <target state="translated">ErrorCode-это код разновидности ошибки.</target>
        </trans-unit>
        <trans-unit id="3bfa44b797d3ade2b7a4edbc0e05cd336b90f6a5" translate="yes" xml:space="preserve">
          <source>ErrorContext returns a textual representation of the location of the node in the input text. The receiver is only used when the node does not have a pointer to the tree inside, which can occur in old code.</source>
          <target state="translated">ErrorContext возвращает текстовое представление о расположении узла во входном тексте.Приемник используется только в том случае,если внутри узла нет указателя на дерево,что может встречаться в старом коде.</target>
        </trans-unit>
        <trans-unit id="01a6e986d714bdcbd3255e42cd49913ead495f07" translate="yes" xml:space="preserve">
          <source>ErrorHandling defines how FlagSet.Parse behaves if the parse fails.</source>
          <target state="translated">ErrorHandling определяет поведение FlagSet.Parse в случае неудачи при разборе.</target>
        </trans-unit>
        <trans-unit id="c0a58bb2b918c9b5569f8008794279639061de21" translate="yes" xml:space="preserve">
          <source>ErrorHandling returns the error handling behavior of the flag set.</source>
          <target state="translated">ErrorHandling возвращает поведение обработки ошибок установленного флага.</target>
        </trans-unit>
        <trans-unit id="4c21e41d45c9255229a7163ff53874920a784296" translate="yes" xml:space="preserve">
          <source>ErrorList implements the sort Interface.</source>
          <target state="translated">ErrorList реализует интерфейс сортировки.</target>
        </trans-unit>
        <trans-unit id="bf56558c66e9c3ca353563d687f7c3cd65731f27" translate="yes" xml:space="preserve">
          <source>ErrorList is a list of *Errors. The zero value for an ErrorList is an empty ErrorList ready to use.</source>
          <target state="translated">ErrorList-это список *Ошибок.Нулевое значение для ErrorList'а-это пустой ErrorList,готовый к использованию.</target>
        </trans-unit>
        <trans-unit id="ce0231916da28ea14cfedf1872fc204b2ae63815" translate="yes" xml:space="preserve">
          <source>Errorf</source>
          <target state="translated">Errorf</target>
        </trans-unit>
        <trans-unit id="fdd0d6f0778f1bf5d95080356d64d20bdae12d81" translate="yes" xml:space="preserve">
          <source>Errorf formats according to a format specifier and returns the string as a value that satisfies error.</source>
          <target state="translated">Ошибка формата в соответствии со спецификатором формата и возвращает строку в качестве значения,удовлетворяющего ошибке.</target>
        </trans-unit>
        <trans-unit id="f7da546253e843f1211156126fe7b9153417337c" translate="yes" xml:space="preserve">
          <source>Errorf is equivalent to Logf followed by Fail.</source>
          <target state="translated">Ошибка эквивалентна Logf с последующим отказом.</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="c7b5ebe0a47f4e9da35a4772302352a81e9e531f" translate="yes" xml:space="preserve">
          <source>Errors returned by Scanner.</source>
          <target state="translated">Ошибки,возвращаемые сканером.</target>
        </trans-unit>
        <trans-unit id="bc4101c3209c725e09b7f9a752ff1e460a3f708b" translate="yes" xml:space="preserve">
          <source>Errors returned from this package may be tested against these errors with errors.Is.</source>
          <target state="translated">Ошибки,возвращаемые из данного пакета,могут быть протестированы на наличие этих ошибок с помощью файла errors.Is.</target>
        </trans-unit>
        <trans-unit id="0a52e06ca8bcf58f3e4f4015d46888503fa4edb2" translate="yes" xml:space="preserve">
          <source>Errors used by the HTTP server.</source>
          <target state="translated">Ошибки,используемые HTTP-сервером.</target>
        </trans-unit>
        <trans-unit id="b113dd3f232b8b88d2860ca5e8f37a70242825e5" translate="yes" xml:space="preserve">
          <source>Escape is like EscapeText but omits the error return value. It is provided for backwards compatibility with Go 1.0. Code targeting Go 1.1 or later should use EscapeText.</source>
          <target state="translated">Escape похож на EscapeText,но опускает значение возврата ошибки.Он предусмотрен для обратной совместимости с Go 1.0.Код,нацеленный на Go 1.1 или более позднюю версию,должен использовать EscapeText.</target>
        </trans-unit>
        <trans-unit id="72b96ac1177bd0ab8e6a9ffb4c48e44560500452" translate="yes" xml:space="preserve">
          <source>Escape sequences:</source>
          <target state="translated">Последовательности побега:</target>
        </trans-unit>
        <trans-unit id="7232262c5c0c1b2288a34e3da1ce712bfb760b49" translate="yes" xml:space="preserve">
          <source>EscapeString</source>
          <target state="translated">EscapeString</target>
        </trans-unit>
        <trans-unit id="3a32d6d4d267bdae71baa4ebb4864da534840bc0" translate="yes" xml:space="preserve">
          <source>EscapeString escapes special characters like &quot;&amp;lt;&quot; to become &quot;&amp;amp;lt;&quot;. It escapes only five such characters: &amp;lt;, &amp;gt;, &amp;amp;, ' and &quot;. UnescapeString(EscapeString(s)) == s always holds, but the converse isn't always true.</source>
          <target state="translated">EscapeString экранирует специальные символы, такие как &amp;laquo;&amp;lt;&amp;raquo;, чтобы превратить их в &amp;laquo;&amp;amp; lt;&amp;raquo;. Он экранирует только пять таких символов: &amp;lt;,&amp;gt;, &amp;amp;, 'и &quot;. UnescapeString (EscapeString (s)) == s всегда выполняется, но обратное не всегда верно.</target>
        </trans-unit>
        <trans-unit id="2d03f838319f2b58cce7d4023faf3595f32ebc4a" translate="yes" xml:space="preserve">
          <source>EscapeText writes to w the properly escaped XML equivalent of the plain text data s.</source>
          <target state="translated">EscapeText записывает в правильно экранированный XML эквивалент простых текстовых данных s.</target>
        </trans-unit>
        <trans-unit id="75dc444f0a860ef85100ffab90e1df890462d53a" translate="yes" xml:space="preserve">
          <source>EscapedFragment returns the escaped form of u.Fragment. In general there are multiple possible escaped forms of any fragment. EscapedFragment returns u.RawFragment when it is a valid escaping of u.Fragment. Otherwise EscapedFragment ignores u.RawFragment and computes an escaped form on its own. The String method uses EscapedFragment to construct its result. In general, code should call EscapedFragment instead of reading u.RawFragment directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16488cf3f3e8d2bcd7180af8373e57e18ef4565" translate="yes" xml:space="preserve">
          <source>EscapedPath returns the escaped form of u.Path. In general there are multiple possible escaped forms of any path. EscapedPath returns u.RawPath when it is a valid escaping of u.Path. Otherwise EscapedPath ignores u.RawPath and computes an escaped form on its own. The String and RequestURI methods use EscapedPath to construct their results. In general, code should call EscapedPath instead of reading u.RawPath directly.</source>
          <target state="translated">EscapedPath возвращает сбежавшую форму u.Path.В общем,существует несколько возможных экзекутивных форм любого пути.EscapedPath возвращает u.RawPath,когда он является действительным экранированием u.Path.В противном случае EscapedPath игнорирует u.RawPath и самостоятельно вычисляет экранированную форму.Методы String и RequestURI используют EscapedPath для построения своих результатов.В общем случае,код должен вызывать EscapedPath вместо того,чтобы читать u.RawPath напрямую.</target>
        </trans-unit>
        <trans-unit id="f6f139cba9287a2764afe8ce53317ff229147fba" translate="yes" xml:space="preserve">
          <source>Eval returns the type and, if constant, the value for the expression expr, evaluated at position pos of package pkg, which must have been derived from type-checking an AST with complete position information relative to the provided file set.</source>
          <target state="translated">Eval возвращает тип и,если константа,значение для выражения expr,вычисленного в позиции pos пакета pkg,которое должно было быть получено в результате проверки типа AST с полной информацией о позиции относительно предоставленного набора файлов.</target>
        </trans-unit>
        <trans-unit id="87826c86d178d2561f85e648340af0f4ea8c5e2c" translate="yes" xml:space="preserve">
          <source>EvalSymlinks returns the path name after the evaluation of any symbolic links. If path is relative the result will be relative to the current directory, unless one of the components is an absolute symbolic link. EvalSymlinks calls Clean on the result.</source>
          <target state="translated">EvalSymlinks возвращает имя пути после оценки любых символических связей.Если путь относительный,результат будет относительным к текущей директории,если только один из компонентов не является абсолютной символической связью.EvalSymlinks вызывает чистый результат.</target>
        </trans-unit>
        <trans-unit id="e74e7ce3c8abf4b80ec56864d1aae4c5480b2b01" translate="yes" xml:space="preserve">
          <source>Even if ReadAt returns n &amp;lt; len(p), it may use all of p as scratch space during the call. If some data is available but not len(p) bytes, ReadAt blocks until either all the data is available or an error occurs. In this respect ReadAt is different from Read.</source>
          <target state="translated">Даже если ReadAt возвращает n &amp;lt;len (p), он может использовать все p как временное пространство во время вызова. Если доступны некоторые данные, но нет len (p) байтов, ReadAt блокируется до тех пор, пока не будут доступны все данные или не возникнет ошибка. В этом отношении ReadAt отличается от Read.</target>
        </trans-unit>
        <trans-unit id="53a0efcd9116915108429249f6aa89cdbb04bf0f" translate="yes" xml:space="preserve">
          <source>Even when enabled, the server may not change its identity between handshakes (i.e. the leaf certificate must be the same). Additionally, concurrent handshake and application data flow is not permitted so renegotiation can only be used with protocols that synchronise with the renegotiation, such as HTTPS.</source>
          <target state="translated">Даже при включенной опции сервер не может изменять свою идентичность между рукопожатиями (т.е.сертификат листа должен быть одинаковым).К тому же,одновременное рукопожатие и поток данных приложения не разрешены,поэтому перезаключение может использоваться только с протоколами,которые синхронизируются с перезаключением,такими как HTTPS.</target>
        </trans-unit>
        <trans-unit id="3d5018b93eece7f2c1a96b6ceca3400cc6e309bc" translate="yes" xml:space="preserve">
          <source>Every Conn must be returned to the database pool after use by calling Conn.Close.</source>
          <target state="translated">Каждый коннектор должен быть возвращен в пул базы данных после использования,позвонив по номеру Conn.Close.</target>
        </trans-unit>
        <trans-unit id="c28d71b80a20b83e9ae50e1509e418c92187dbf4" translate="yes" xml:space="preserve">
          <source>Every call to Scan, even the first one, must be preceded by a call to Next.</source>
          <target state="translated">Каждому вызову на сканирование,даже первому,должен предшествовать вызов на Next.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="f5af771da8b361a4e20bdb4283e0ac7caf8c0814" translate="yes" xml:space="preserve">
          <source>Example (AllSignals)</source>
          <target state="translated">Пример (AllSignals)</target>
        </trans-unit>
        <trans-unit id="6806ae76e866d9ef5bbaa313ab8f14edf232f6fa" translate="yes" xml:space="preserve">
          <source>Example (Append)</source>
          <target state="translated">Пример (Приложение)</target>
        </trans-unit>
        <trans-unit id="2e52ba657e1b1589c7457e9586b538cbfb8d8c4e" translate="yes" xml:space="preserve">
          <source>Example (Autoescaping)</source>
          <target state="translated">Пример (Автоматическая настройка)</target>
        </trans-unit>
        <trans-unit id="7bda2f591e5fdf06e6bb949dbf8645e95567d697" translate="yes" xml:space="preserve">
          <source>Example (Basic)</source>
          <target state="translated">Пример (базовый)</target>
        </trans-unit>
        <trans-unit id="18996c4947f797f81043a2613612654fc43160d3" translate="yes" xml:space="preserve">
          <source>Example (BinaryMarshaler)</source>
          <target state="translated">Пример (BinaryMarshaler)</target>
        </trans-unit>
        <trans-unit id="b4b588f9f28576812b88bb06ca68e301889fa949" translate="yes" xml:space="preserve">
          <source>Example (Block)</source>
          <target state="translated">Пример (блок)</target>
        </trans-unit>
        <trans-unit id="486a8544d68d11f1bed88d4bb0fdc87e371d41c9" translate="yes" xml:space="preserve">
          <source>Example (ComplexNumbers)</source>
          <target state="translated">Пример (сложные номера)</target>
        </trans-unit>
        <trans-unit id="433e8e80995b40ab0d35f03a174da56c17e5e244" translate="yes" xml:space="preserve">
          <source>Example (Config)</source>
          <target state="translated">Пример (Конфигурация)</target>
        </trans-unit>
        <trans-unit id="d37ffa9f063e6d5deddd48321eb1adc9ceaf4696" translate="yes" xml:space="preserve">
          <source>Example (Custom)</source>
          <target state="translated">Пример (Custom)</target>
        </trans-unit>
        <trans-unit id="7dd768f1c2d0eb858e6c8e62318f88b0d2a37a94" translate="yes" xml:space="preserve">
          <source>Example (CustomMarshalJSON)</source>
          <target state="translated">Пример (CustomMarshalJSON)</target>
        </trans-unit>
        <trans-unit id="ecd803477953d919a56abf6a7054c61d8b4903e9" translate="yes" xml:space="preserve">
          <source>Example (CustomMarshalXML)</source>
          <target state="translated">Пример (CustomMarshalXML)</target>
        </trans-unit>
        <trans-unit id="eb7e7661a541a8aedff29b426a0dd8cee77d6d26" translate="yes" xml:space="preserve">
          <source>Example (DecodeConfig)</source>
          <target state="translated">Пример (DecodeConfig)</target>
        </trans-unit>
        <trans-unit id="5285988ca0c88d03cdaaaa1c0ed6f2b7317d2b93" translate="yes" xml:space="preserve">
          <source>Example (Decrypt)</source>
          <target state="translated">Пример (расшифровка)</target>
        </trans-unit>
        <trans-unit id="8fab16bc38953ce26f6b67557a190e125af0e87e" translate="yes" xml:space="preserve">
          <source>Example (DescendingOrder)</source>
          <target state="translated">Пример (DescendingOrder)</target>
        </trans-unit>
        <trans-unit id="6aecf1f00d18e968d03c6704bef266c1e4be5098" translate="yes" xml:space="preserve">
          <source>Example (Dictionary)</source>
          <target state="translated">Пример (словарь)</target>
        </trans-unit>
        <trans-unit id="fae255c02ba68cd1a00c21d5947bde15712ef6e0" translate="yes" xml:space="preserve">
          <source>Example (DotFileHiding)</source>
          <target state="translated">Пример (DotFileHiding)</target>
        </trans-unit>
        <trans-unit id="2e9d6fa89cbf924c21d5a93c189431a8cd1dde68" translate="yes" xml:space="preserve">
          <source>Example (EConvergents)</source>
          <target state="translated">Пример (EConvergents)</target>
        </trans-unit>
        <trans-unit id="c4faca1b381d29b5f4b6ce88f79758aa6cf95bb8" translate="yes" xml:space="preserve">
          <source>Example (Elastic)</source>
          <target state="translated">Пример (упругий)</target>
        </trans-unit>
        <trans-unit id="2232d3397afd70f4f6faa419a87bb103725a6b36" translate="yes" xml:space="preserve">
          <source>Example (EmptyFinalToken)</source>
          <target state="translated">Пример (EmptyFinalToken)</target>
        </trans-unit>
        <trans-unit id="51b210ff3c89e11d54a69e7bd9044e45171fa6c7" translate="yes" xml:space="preserve">
          <source>Example (EncodeDecode)</source>
          <target state="translated">Пример (EncodeDecode)</target>
        </trans-unit>
        <trans-unit id="10f49227bc5c8828198ffe23c70506a5f6a14a6c" translate="yes" xml:space="preserve">
          <source>Example (Encrypt)</source>
          <target state="translated">Пример (Шифр)</target>
        </trans-unit>
        <trans-unit id="b1b7ef7af49d199e71d1b9a202304c0e1dd03579" translate="yes" xml:space="preserve">
          <source>Example (Environment)</source>
          <target state="translated">Пример (Окружающая среда)</target>
        </trans-unit>
        <trans-unit id="76e13d7110768fb2adda2eab178cd24782e70e9f" translate="yes" xml:space="preserve">
          <source>Example (Errorf)</source>
          <target state="translated">Пример (Ошибка)</target>
        </trans-unit>
        <trans-unit id="dda6c202ca36dceb2b8b1d371c82caea78806bb1" translate="yes" xml:space="preserve">
          <source>Example (Escape)</source>
          <target state="translated">Пример (Побег)</target>
        </trans-unit>
        <trans-unit id="d5078acaa6d91c20f1a5940604b3be21cb88297f" translate="yes" xml:space="preserve">
          <source>Example (Fibonacci)</source>
          <target state="translated">Пример (Фибоначчи)</target>
        </trans-unit>
        <trans-unit id="82dc50226403d5da3e74bc047330883ad45a5d00" translate="yes" xml:space="preserve">
          <source>Example (File)</source>
          <target state="translated">Пример (Файл)</target>
        </trans-unit>
        <trans-unit id="f3933078451957ce04020c47152b2a4ae30e2df1" translate="yes" xml:space="preserve">
          <source>Example (FloydSteinberg)</source>
          <target state="translated">Пример (ФлойдСтейнберг)</target>
        </trans-unit>
        <trans-unit id="81d329cbb08482151d8388b6f96dc57574cc5a00" translate="yes" xml:space="preserve">
          <source>Example (Formats)</source>
          <target state="translated">Пример (форматы)</target>
        </trans-unit>
        <trans-unit id="48e4af16c19b828060331cd71f3957538f43c01d" translate="yes" xml:space="preserve">
          <source>Example (Func)</source>
          <target state="translated">Пример (Функция)</target>
        </trans-unit>
        <trans-unit id="e1803da930d85a7a40a33aabbb44bda9fd29a3f1" translate="yes" xml:space="preserve">
          <source>Example (Get)</source>
          <target state="translated">Пример (Получить)</target>
        </trans-unit>
        <trans-unit id="efa53360ab365a081c7d8e5c13b9d92b709140dc" translate="yes" xml:space="preserve">
          <source>Example (Glob)</source>
          <target state="translated">Пример (Глобус)</target>
        </trans-unit>
        <trans-unit id="de8457876a6a77bbf5b422c1200fc039c3c52879" translate="yes" xml:space="preserve">
          <source>Example (HTTP2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0927fdc649164da429d59c70828557b2f212892" translate="yes" xml:space="preserve">
          <source>Example (Helpers)</source>
          <target state="translated">Пример (Помощники)</target>
        </trans-unit>
        <trans-unit id="e1cb4393a3dce67d491085d8c93e591a037aa410" translate="yes" xml:space="preserve">
          <source>Example (HttpServer)</source>
          <target state="translated">Пример (HttpServer)</target>
        </trans-unit>
        <trans-unit id="bc877cc87aa7e57c6e4d6bac364478fe54fd7edc" translate="yes" xml:space="preserve">
          <source>Example (IntHeap)</source>
          <target state="translated">Пример (IntHeap)</target>
        </trans-unit>
        <trans-unit id="15ea46b6e1ae2d0c7afa15e89076c2e1ef33cfa9" translate="yes" xml:space="preserve">
          <source>Example (Interface)</source>
          <target state="translated">Пример (интерфейс)</target>
        </trans-unit>
        <trans-unit id="d0d4f4103b1fb18ad85139309cb4da67e48bc81b" translate="yes" xml:space="preserve">
          <source>Example (Is)</source>
          <target state="translated">Пример (есть)</target>
        </trans-unit>
        <trans-unit id="fafb22a01b61327379ae19ec71339a55898fd95a" translate="yes" xml:space="preserve">
          <source>Example (IsIdentRune)</source>
          <target state="translated">Пример (IsIdentRune)</target>
        </trans-unit>
        <trans-unit id="6c67c38b6ae2ba0542052e51c7fa5202c83f63ad" translate="yes" xml:space="preserve">
          <source>Example (KeyLogWriter)</source>
          <target state="translated">Пример (KeyLogWriter)</target>
        </trans-unit>
        <trans-unit id="998c85b7ec2d08d9dc6fbaeea75396700152f3e2" translate="yes" xml:space="preserve">
          <source>Example (Lines)</source>
          <target state="translated">Пример (Линии)</target>
        </trans-unit>
        <trans-unit id="90c6690a74615337a8d95f6ad9e2df85db4dc8aa" translate="yes" xml:space="preserve">
          <source>Example (Marshal)</source>
          <target state="translated">Пример (маршал)</target>
        </trans-unit>
        <trans-unit id="b7987a90c2edd7b9efbeddd99750be769396ba11" translate="yes" xml:space="preserve">
          <source>Example (Minimal)</source>
          <target state="translated">Пример (минимальный)</target>
        </trans-unit>
        <trans-unit id="220dbd2f9c761374b94c2985ffb67973ec244f5e" translate="yes" xml:space="preserve">
          <source>Example (Mode)</source>
          <target state="translated">Пример (режим)</target>
        </trans-unit>
        <trans-unit id="71eaa954d5eaf1e8a901ae6af51e6ef38075023b" translate="yes" xml:space="preserve">
          <source>Example (Multi)</source>
          <target state="translated">Пример (множественный)</target>
        </trans-unit>
        <trans-unit id="29d3242dd03f86b89326a2d3af5d45c9e4b8df60" translate="yes" xml:space="preserve">
          <source>Example (MultipleResultSets)</source>
          <target state="translated">Пример (MultipleResultSet)</target>
        </trans-unit>
        <trans-unit id="d67ff39099c16f9727841f2b1d55d6a7d937ca63" translate="yes" xml:space="preserve">
          <source>Example (OpenDBCLI)</source>
          <target state="translated">Пример (OpenDBCLI)</target>
        </trans-unit>
        <trans-unit id="6649fceda9c8f47bc7fd24801bfc5e3a67a4b690" translate="yes" xml:space="preserve">
          <source>Example (OpenDBService)</source>
          <target state="translated">Пример (OpenDBService)</target>
        </trans-unit>
        <trans-unit id="c804c1a3dde5f5d5992fdc8708de4fc1ac6587eb" translate="yes" xml:space="preserve">
          <source>Example (Options)</source>
          <target state="translated">Пример (Опции)</target>
        </trans-unit>
        <trans-unit id="9aee0ec2e25c149d8d268bc5cb8650bcd19596fb" translate="yes" xml:space="preserve">
          <source>Example (Pad)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcf50c51e83b6b841682aca36a2d5adaab448fa" translate="yes" xml:space="preserve">
          <source>Example (Parsefiles)</source>
          <target state="translated">Пример (Парсефайлы)</target>
        </trans-unit>
        <trans-unit id="f31a14315872f7d5ad4b31b0b814af75bcd37346" translate="yes" xml:space="preserve">
          <source>Example (Printers)</source>
          <target state="translated">Пример (Принтеры)</target>
        </trans-unit>
        <trans-unit id="76286390b82f9465aa1db504336b58a0882e7789" translate="yes" xml:space="preserve">
          <source>Example (PriorityQueue)</source>
          <target state="translated">Пример (PriorityQueue)</target>
        </trans-unit>
        <trans-unit id="64c31a2d546e425660696075602e9c55ede932f9" translate="yes" xml:space="preserve">
          <source>Example (Put)</source>
          <target state="translated">Пример (Put)</target>
        </trans-unit>
        <trans-unit id="d9b68d9bdb509763e088e0d350491fe1ff9bf03c" translate="yes" xml:space="preserve">
          <source>Example (Rand)</source>
          <target state="translated">Пример (Рэнд)</target>
        </trans-unit>
        <trans-unit id="fd2979c4537d222cfc623fbc541e78e448137665" translate="yes" xml:space="preserve">
          <source>Example (ReadMostly)</source>
          <target state="translated">Пример (ReadMostly)</target>
        </trans-unit>
        <trans-unit id="b3e59e19171ce2c63c7a8904bd2f9921fb22a142" translate="yes" xml:space="preserve">
          <source>Example (Reader)</source>
          <target state="translated">Пример (Читатель)</target>
        </trans-unit>
        <trans-unit id="39d966a83ff5b0a8a61283590badb1a431bd7d77" translate="yes" xml:space="preserve">
          <source>Example (Reset)</source>
          <target state="translated">Пример (Сброс)</target>
        </trans-unit>
        <trans-unit id="f7b91d630287948e0bfeba35eefba5c01f1107af" translate="yes" xml:space="preserve">
          <source>Example (RetrievePositionInfo)</source>
          <target state="translated">Пример (RetrievePositionInfo)</target>
        </trans-unit>
        <trans-unit id="6d421c1f51583522754be7b57506ff4663194c40" translate="yes" xml:space="preserve">
          <source>Example (Roundtrip)</source>
          <target state="translated">Пример (Roundtrip)</target>
        </trans-unit>
        <trans-unit id="997ee2d41b2c768a3ff8dd1b07a7450ed4680d2e" translate="yes" xml:space="preserve">
          <source>Example (Search)</source>
          <target state="translated">Пример (Поиск)</target>
        </trans-unit>
        <trans-unit id="26c8d95221bd62d1c6dd0e843baad8cbebaa0442" translate="yes" xml:space="preserve">
          <source>Example (Share)</source>
          <target state="translated">Пример (Поделиться)</target>
        </trans-unit>
        <trans-unit id="3abb8dfd074ee9afbe60f6cdd246feccb1d11c79" translate="yes" xml:space="preserve">
          <source>Example (Shift)</source>
          <target state="translated">Пример (Shift)</target>
        </trans-unit>
        <trans-unit id="f4341e44bdeed6e7db74742550dcb962bdc52498" translate="yes" xml:space="preserve">
          <source>Example (SlicesInUnison)</source>
          <target state="translated">Пример (SlicesInUnison)</target>
        </trans-unit>
        <trans-unit id="09b2fe12f7c6e61ddb30325458425fd3d42ba3e7" translate="yes" xml:space="preserve">
          <source>Example (SortKeys)</source>
          <target state="translated">Пример (SortKeys)</target>
        </trans-unit>
        <trans-unit id="a161b3dcacaf6f0af657412f43ec2e2697b4a566" translate="yes" xml:space="preserve">
          <source>Example (SortMultiKeys)</source>
          <target state="translated">Пример (SortMultiKeys)</target>
        </trans-unit>
        <trans-unit id="c700c72cd356078aa83dc80aa5da8bd42f5ee825" translate="yes" xml:space="preserve">
          <source>Example (SortWrapper)</source>
          <target state="translated">Пример (SortWrapper)</target>
        </trans-unit>
        <trans-unit id="a8bfb7061aa11f61ba7f0066df210a3c29777f98" translate="yes" xml:space="preserve">
          <source>Example (Sqrt2)</source>
          <target state="translated">Пример (Sqrt2)</target>
        </trans-unit>
        <trans-unit id="ebe403bbbdd2c63efdc5a9bb1601bc9f45a978c6" translate="yes" xml:space="preserve">
          <source>Example (Stream)</source>
          <target state="translated">Пример (поток)</target>
        </trans-unit>
        <trans-unit id="abbe3138d0178ab55ff211013783fb8af592cb7d" translate="yes" xml:space="preserve">
          <source>Example (StripPrefix)</source>
          <target state="translated">Пример (StripPrefix)</target>
        </trans-unit>
        <trans-unit id="6c16b94480edd0345910083abc5a6c549ce236af" translate="yes" xml:space="preserve">
          <source>Example (Suffix)</source>
          <target state="translated">Пример (суффикс)</target>
        </trans-unit>
        <trans-unit id="d15caef05f8ff9c74dc0547060823c024dc99f58" translate="yes" xml:space="preserve">
          <source>Example (Synchronization)</source>
          <target state="translated">Пример (Синхронизация)</target>
        </trans-unit>
        <trans-unit id="a62f50ab20b1bf896520eb1f4cc5a1db4ed324b5" translate="yes" xml:space="preserve">
          <source>Example (TextMarshalJSON)</source>
          <target state="translated">Пример (TextMarshalJSON)</target>
        </trans-unit>
        <trans-unit id="fbd08593ac14b413e0da05c752b1367b5127acc2" translate="yes" xml:space="preserve">
          <source>Example (TextMarshalXML)</source>
          <target state="translated">Пример (TextMarshalXML)</target>
        </trans-unit>
        <trans-unit id="8e5dd403c2a724dfe512bb193bca762b97020dce" translate="yes" xml:space="preserve">
          <source>Example (Trailers)</source>
          <target state="translated">Пример (Прицепы)</target>
        </trans-unit>
        <trans-unit id="748d838b8683a8f8d192b01d4d7d3a81f783d636" translate="yes" xml:space="preserve">
          <source>Example (TrailingTab)</source>
          <target state="translated">Пример (TrailingTab)</target>
        </trans-unit>
        <trans-unit id="c00eeea2ab162f08ebf0ba7ecdde22954780f472" translate="yes" xml:space="preserve">
          <source>Example (Unmarshal)</source>
          <target state="translated">Пример (Unmarshal)</target>
        </trans-unit>
        <trans-unit id="553cb8898521d88b48c39b9422a097ee092a0266" translate="yes" xml:space="preserve">
          <source>Example (VerifyConnection)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abde4525b91ff7ce0bef5c781d4706ee97ee0b8" translate="yes" xml:space="preserve">
          <source>Example (Whitespace)</source>
          <target state="translated">Пример (Whitespace)</target>
        </trans-unit>
        <trans-unit id="bbda3fcec0c984c4deccac6441b82d6551be8728" translate="yes" xml:space="preserve">
          <source>Example (Words)</source>
          <target state="translated">Пример (Слова)</target>
        </trans-unit>
        <trans-unit id="d5cf5e438485427250b065bf74fba906e865dd71" translate="yes" xml:space="preserve">
          <source>Example (WriterReader)</source>
          <target state="translated">Пример (WriterReader)</target>
        </trans-unit>
        <trans-unit id="d30cd049e881e721a3e90310e35fd42bd393ca0d" translate="yes" xml:space="preserve">
          <source>Example demonstrates the use of the trace package to trace the execution of a Go program. The trace output will be written to the file trace.out</source>
          <target state="translated">Пример демонстрирует использование пакета трассировки для трассировки выполнения программы Go.Вывод трассы будет записан в файл trace.out.</target>
        </trans-unit>
        <trans-unit id="f2573490205ec3fa3c52174ceabc13d098ee040e" translate="yes" xml:space="preserve">
          <source>Example functions without output comments are compiled but not executed.</source>
          <target state="translated">Примеры функций без выходных комментариев компилируются,но не выполняются.</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="23f9d603e16f8ef16b61cb7dd71733745d6dc774" translate="yes" xml:space="preserve">
          <source>Example use:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="f4f8f48cf4d5e9a2b5fdf509e391d114af54249a" translate="yes" xml:space="preserve">
          <source>ExampleExp computes Euler's identity.</source>
          <target state="translated">ExampleExp вычисляет личность Эйлера.</target>
        </trans-unit>
        <trans-unit id="e6ef84e4017d4e3a3b6e6f5fb063732f932d208e" translate="yes" xml:space="preserve">
          <source>ExampleInfo prints various facts recorded by the type checker in a types.Info struct: definitions of and references to each named object, and the type, value, and mode of every expression in the package.</source>
          <target state="translated">ПримерInfo печатает различные факты,записанные проверочным устройством типов в типе.Информационная структура:определения и ссылки на каждый именованный объект,а также тип,значение и режим каждого выражения в пакете.</target>
        </trans-unit>
        <trans-unit id="cb4bbe727d61b7f53c2e2ee56f081e85812a2931" translate="yes" xml:space="preserve">
          <source>ExampleMethodSet prints the method sets of various types.</source>
          <target state="translated">ПримерМетодНастройка печатает наборы методов различных типов.</target>
        </trans-unit>
        <trans-unit id="46027e906ab7b86a83cef5107b917049326109ed" translate="yes" xml:space="preserve">
          <source>ExampleMultiKeys demonstrates a technique for sorting a struct type using different sets of multiple fields in the comparison. We chain together &quot;Less&quot; functions, each of which compares a single field.</source>
          <target state="translated">ExampleMultiKeys демонстрирует методику сортировки типа структуры с использованием различных наборов множественных полей при сравнении.Мы связываем в цепочку &quot;Меньше&quot; функций,каждая из которых сравнивает одно поле.</target>
        </trans-unit>
        <trans-unit id="193e8ade5e79f30df0f3c6123d817327cd4b8cce" translate="yes" xml:space="preserve">
          <source>ExampleScope prints the tree of Scopes of a package created from a set of parsed files.</source>
          <target state="translated">ExampleScope распечатывает дерево Scopes пакета,созданного из набора разобранных файлов.</target>
        </trans-unit>
        <trans-unit id="8c65e0caab54f4a2e226c019adde6010c7ba6016" translate="yes" xml:space="preserve">
          <source>ExampleSortKeys demonstrates a technique for sorting a struct type using programmable sort criteria.</source>
          <target state="translated">ПримерSortKeys демонстрирует методику сортировки типа структуры по программируемым критериям сортировки.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7be87e9fdaec2ce2e3677aba2da5b665e394bd18" translate="yes" xml:space="preserve">
          <source>Examples found in _test.go files are associated with the corresponding type, function, method, or the package, based on their name. If the example has a suffix in its name, it is set in the Example.Suffix field. Examples with malformed names are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f8a2b98443a4dd938fd26ea0bb96b2061a1486" translate="yes" xml:space="preserve">
          <source>Examples of struct field tags and their meanings:</source>
          <target state="translated">Примеры тегов структурных полей и их значений:</target>
        </trans-unit>
        <trans-unit id="36aeb481d0cd156bf8f93ce11b20dafd7c23cb5e" translate="yes" xml:space="preserve">
          <source>Examples returns the examples found in testFiles, sorted by Name field. The Order fields record the order in which the examples were encountered. The Suffix field is not populated when Examples is called directly, it is only populated by NewFromFiles for examples it finds in _test.go files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3868550c47675aee1b65322c0a530356bac93476" translate="yes" xml:space="preserve">
          <source>Examples returns the examples found in the files, sorted by Name field. The Order fields record the order in which the examples were encountered.</source>
          <target state="translated">Примеры возвращают примеры,найденные в файлах,отсортированные по полю Name.Поля Order записывают порядок,в котором встречались примеры.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="2139b5f270ff75a838ef994f1a7c0702593e500d" translate="yes" xml:space="preserve">
          <source>Except for reading the body, handlers should not modify the provided Request.</source>
          <target state="translated">Кроме чтения тела,обработчики не должны изменять предоставленный Запрос.</target>
        </trans-unit>
        <trans-unit id="d972e775d3ec8bbf70216136812cfc2aa6c6c1f2" translate="yes" xml:space="preserve">
          <source>Except when printed using the verbs %T and %p, special formatting considerations apply for operands that implement certain interfaces. In order of application:</source>
          <target state="translated">За исключением печати с использованием глаголов %T и %p,для операндов,реализующих определенные интерфейсы,применяются специальные соображения по форматированию.В порядке применения:</target>
        </trans-unit>
        <trans-unit id="663fbbe8a5ab797134d5a3e798a619fc2b622e8a" translate="yes" xml:space="preserve">
          <source>Exec executes a prepared statement with the given arguments and returns a Result summarizing the effect of the statement.</source>
          <target state="translated">Exec выполняет подготовленное заявление с заданными аргументами и возвращает Результат,суммирующий эффект заявления.</target>
        </trans-unit>
        <trans-unit id="b2e416ff8481c94b506d5f1d3e462de40111511e" translate="yes" xml:space="preserve">
          <source>Exec executes a query that doesn't return rows. For example: an INSERT and UPDATE.</source>
          <target state="translated">Exec выполняет запрос,который не возвращает строки.Например:INSERT и UPDATE.</target>
        </trans-unit>
        <trans-unit id="f3c42d65910e9f7b2f5399cc46977eb6b49601aa" translate="yes" xml:space="preserve">
          <source>Exec executes a query without returning any rows. The args are for any placeholder parameters in the query.</source>
          <target state="translated">Exec выполняет запрос без возврата строк.Аргументами являются любые параметры плейсхолдера в запросе.</target>
        </trans-unit>
        <trans-unit id="68b4576f203991257daca46f8ba57ce5bc9b1e71" translate="yes" xml:space="preserve">
          <source>Exec invokes the execve(2) system call.</source>
          <target state="translated">Exec вызывает системный вызов исполнителя(2).</target>
        </trans-unit>
        <trans-unit id="f74f4301002ea9d1c1563f1fa536de299c417471" translate="yes" xml:space="preserve">
          <source>Exec may return ErrSkip.</source>
          <target state="translated">Exec может вернуть ErrSkip.</target>
        </trans-unit>
        <trans-unit id="b927a0c4f27f7c2245dd620e36187bf80c3d0e50" translate="yes" xml:space="preserve">
          <source>ExecContext executes a prepared statement with the given arguments and returns a Result summarizing the effect of the statement.</source>
          <target state="translated">ExecContext выполняет подготовленное утверждение с заданными аргументами и возвращает Результат,суммирующий эффект утверждения.</target>
        </trans-unit>
        <trans-unit id="9d0bd4f3ae9832eb93898d324b87a29a1346fa77" translate="yes" xml:space="preserve">
          <source>ExecContext executes a query that doesn't return rows. For example: an INSERT and UPDATE.</source>
          <target state="translated">ExecContext выполняет запрос,который не возвращает строки.Например:INSERT и UPDATE.</target>
        </trans-unit>
        <trans-unit id="fcecac057ade8a549a93af9d19f63ed3d3a1e5e8" translate="yes" xml:space="preserve">
          <source>ExecContext executes a query without returning any rows. The args are for any placeholder parameters in the query.</source>
          <target state="translated">ExecContext выполняет запрос без возврата строк.Аргументами являются любые параметры плейсхолдеров в запросе.</target>
        </trans-unit>
        <trans-unit id="28385547a6dc992edbb21722af7149817bf1e882" translate="yes" xml:space="preserve">
          <source>ExecError is the custom error type returned when Execute has an error evaluating its template. (If a write error occurs, the actual error is returned; it will not be of type ExecError.)</source>
          <target state="translated">ExecError-это пользовательский тип ошибки,возвращаемый,когда Execute имеет ошибку,оценивающую его шаблон.(В случае ошибки записи возвращается фактическая ошибка;она не будет иметь тип ExecError).</target>
        </trans-unit>
        <trans-unit id="f8cd14bc64afac06caa8a1276637b7f9488463ea" translate="yes" xml:space="preserve">
          <source>Execer is an optional interface that may be implemented by a Conn.</source>
          <target state="translated">Execer является дополнительным интерфейсом,который может быть реализован с помощью Conn.</target>
        </trans-unit>
        <trans-unit id="5c1ff5cf4051fbd8da0a29e75b0f05215a476e06" translate="yes" xml:space="preserve">
          <source>ExecerContext is an optional interface that may be implemented by a Conn.</source>
          <target state="translated">ExecerContext-это дополнительный интерфейс,который может быть реализован с помощью Conn.</target>
        </trans-unit>
        <trans-unit id="4a3be90db73ae31f1fa874b8e8b95f6320af4ec1" translate="yes" xml:space="preserve">
          <source>ExecerContext may return ErrSkip.</source>
          <target state="translated">ExecerContext может вернуть ErrSkip.</target>
        </trans-unit>
        <trans-unit id="116fbe2364a9d887fc69eaade708bc7fe63a456c" translate="yes" xml:space="preserve">
          <source>ExecerContext must honor the context timeout and return when the context is canceled.</source>
          <target state="translated">ExecerContext должен учитывать таймаут контекста и возвращаться,когда контекст отменяется.</target>
        </trans-unit>
        <trans-unit id="3b13379f2972a85ae6473933a27341217bb8895b" translate="yes" xml:space="preserve">
          <source>Executable is not supported on nacl.</source>
          <target state="translated">Исполняемый файл не поддерживается на nacl.</target>
        </trans-unit>
        <trans-unit id="e9ae4cbb34da99d02173a7dcb28dd93c5dce7f5d" translate="yes" xml:space="preserve">
          <source>Executable returns an absolute path unless an error occurred.</source>
          <target state="translated">Executable возвращает абсолютный путь,если только не произошла ошибка.</target>
        </trans-unit>
        <trans-unit id="adec63f8f562d73a545ecff88acb5d043aea120d" translate="yes" xml:space="preserve">
          <source>Executable returns the path name for the executable that started the current process. There is no guarantee that the path is still pointing to the correct executable. If a symlink was used to start the process, depending on the operating system, the result might be the symlink or the path it pointed to. If a stable result is needed, path/filepath.EvalSymlinks might help.</source>
          <target state="translated">Executable возвращает имя пути для исполняемого файла,который запустил текущий процесс.Нет гарантии,что путь все еще указывает на правильный исполняемый файл.Если для запуска процесса использовалась сим-ссылка,в зависимости от операционной системы,результатом может быть сим-ссылка или путь,на который она указывала.Если необходим стабильный результат,может помочь путь/файлpath.EvalSymlinkks.</target>
        </trans-unit>
        <trans-unit id="7294a8cb458c8e65f536967bf6b4d79b8c096c55" translate="yes" xml:space="preserve">
          <source>Execute applies a parsed template to the specified data object, and writes the output to wr. If an error occurs executing the template or writing its output, execution stops, but partial results may already have been written to the output writer. A template may be executed safely in parallel, although if parallel executions share a Writer the output may be interleaved.</source>
          <target state="translated">Execute применяет разобранный шаблон к указанному объекту данных и записывает вывод в wr.Если возникает ошибка при выполнении шаблона или записи его вывода,выполнение останавливается,но частичные результаты,возможно,уже были записаны в выходной записывающее устройство.Шаблон может безопасно выполняться параллельно,хотя если параллельное выполнение выполняется совместно с Writer,вывод может быть чередующимся.</target>
        </trans-unit>
        <trans-unit id="d8ab91b77ffead5cde7f6f24acf146ee0201982a" translate="yes" xml:space="preserve">
          <source>Execute applies a parsed template to the specified data object, writing the output to wr. If an error occurs executing the template or writing its output, execution stops, but partial results may already have been written to the output writer. A template may be executed safely in parallel, although if parallel executions share a Writer the output may be interleaved.</source>
          <target state="translated">Execute применяет разобранный шаблон к указанному объекту данных,записывая вывод в wr.Если возникает ошибка при выполнении шаблона или записи его вывода,то выполнение останавливается,но частичные результаты,возможно,уже были записаны в выходной записывающее устройство.Шаблон может безопасно выполняться параллельно,хотя если параллельное выполнение выполняется совместно с Writer,вывод может быть чередующимся.</target>
        </trans-unit>
        <trans-unit id="caa7fd65efa38167472fbe062e9cd8ed9345685c" translate="yes" xml:space="preserve">
          <source>ExecuteTemplate applies the template associated with t that has the given name to the specified data object and writes the output to wr. If an error occurs executing the template or writing its output, execution stops, but partial results may already have been written to the output writer. A template may be executed safely in parallel, although if parallel executions share a Writer the output may be interleaved.</source>
          <target state="translated">ExecuteTemplate применяет шаблон,связанный с t,который имеет заданное имя к указанному объекту данных и записывает вывод в wr.Если возникает ошибка при выполнении шаблона или записи его вывода,выполнение останавливается,но частичные результаты,возможно,уже были записаны в выходной записывающее устройство.Шаблон может безопасно выполняться параллельно,хотя если параллельное выполнение выполняется совместно с Writer,вывод может быть чередующимся.</target>
        </trans-unit>
        <trans-unit id="d5e15a34c9961f0a802784591faae9d82e65ab11" translate="yes" xml:space="preserve">
          <source>Exit causes the current program to exit with the given status code. Conventionally, code zero indicates success, non-zero an error. The program terminates immediately; deferred functions are not run.</source>
          <target state="translated">Выход приводит к выходу текущей программы с заданным кодом состояния.Традиционно,код ноль указывает на успех,ненулевой-на ошибку.Программа немедленно завершает работу,отложенные функции не выполняются.</target>
        </trans-unit>
        <trans-unit id="323cb868fc9882809ab8fcf5b777ebf834c84081" translate="yes" xml:space="preserve">
          <source>ExitCode returns the exit code of the exited process, or -1 if the process hasn't exited or was terminated by a signal.</source>
          <target state="translated">ExitCode возвращает код завершения завершенного процесса,или -1,если процесс не завершился или был прерван сигналом.</target>
        </trans-unit>
        <trans-unit id="bca7074b049716c77d327197e75adfe965e8630d" translate="yes" xml:space="preserve">
          <source>Exited reports whether the program has exited.</source>
          <target state="translated">Выходные отчеты о том,вышла ли программа из программы.</target>
        </trans-unit>
        <trans-unit id="5871b8d86fba0af13c05dc83a5e5933bb7903327" translate="yes" xml:space="preserve">
          <source>Exp</source>
          <target state="translated">Exp</target>
        </trans-unit>
        <trans-unit id="510ebbd48ca70ddfb27143ea5c2bad2d44f10597" translate="yes" xml:space="preserve">
          <source>Exp returns e**x, the base-e exponential of x.</source>
          <target state="translated">Exp возвращает e**x,базовый e экспоненциальный x.</target>
        </trans-unit>
        <trans-unit id="819216a314daa46d457f6cb2b754e5c282f0d0ee" translate="yes" xml:space="preserve">
          <source>Exp sets z = x**y mod |m| (i.e. the sign of m is ignored), and returns z. If m == nil or m == 0, z = x**y unless y &amp;lt;= 0 then z = 1. If m != 0, y &amp;lt; 0, and x and m are not relatively prime, z is unchanged and nil is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95aa110ed338c85b885ee58002691284514da3af" translate="yes" xml:space="preserve">
          <source>Exp sets z = x**y mod |m| (i.e. the sign of m is ignored), and returns z. If m == nil or m == 0, z = x**y unless y &amp;lt;= 0 then z = 1. If m &amp;gt; 0, y &amp;lt; 0, and x and n are not relatively prime, z is unchanged and nil is returned.</source>
          <target state="translated">Exp устанавливает z = x ** y mod | m | (т.е. знак m игнорируется) и возвращает z. Если m == nil или m == 0, z = x ** y, если y &amp;lt;= 0, то z = 1. Если m&amp;gt; 0, y &amp;lt;0, а x и n не являются взаимно простыми, z не изменяется и nil возвращается.</target>
        </trans-unit>
        <trans-unit id="210a47f22b336b9e11b90dccaad9a2e3c0276fcc" translate="yes" xml:space="preserve">
          <source>Exp2</source>
          <target state="translated">Exp2</target>
        </trans-unit>
        <trans-unit id="ea1f0ddfdecd3517aad8d1a91705ef531de70942" translate="yes" xml:space="preserve">
          <source>Exp2 returns 2**x, the base-2 exponential of x.</source>
          <target state="translated">Exp2 возвращает 2**x,базовый-2 экспоненциальный x.</target>
        </trans-unit>
        <trans-unit id="862a985d8f0da4e95960d25b159f9e9e124d15f5" translate="yes" xml:space="preserve">
          <source>ExpFloat64 returns an exponentially distributed float64 in the range (0, +math.MaxFloat64] with an exponential distribution whose rate parameter (lambda) is 1 and whose mean is 1/lambda (1) from the default Source. To produce a distribution with a different rate parameter, callers can adjust the output using:</source>
          <target state="translated">ExpFloat64 возвращает экспоненциально распределенный float64 в диапазоне (0,+math.MaxFloat64)с экспоненциальным распределением,параметр скорости (лямбда)которого равен 1,а среднее значение 1/лямбда (1)из источника по умолчанию.Чтобы получить распределение с другим параметром скорости,вызывающие абоненты могут настроить выход с помощью:</target>
        </trans-unit>
        <trans-unit id="da4e3aea659a15d7397bad8de4e0bdaee5767774" translate="yes" xml:space="preserve">
          <source>ExpFloat64 returns an exponentially distributed float64 in the range (0, +math.MaxFloat64] with an exponential distribution whose rate parameter (lambda) is 1 and whose mean is 1/lambda (1). To produce a distribution with a different rate parameter, callers can adjust the output using:</source>
          <target state="translated">ExpFloat64 возвращает экспоненциально распределенный float64 в диапазоне (0,+math.MaxFloat64)с экспоненциальным распределением,параметр скорости (лямбда)которого равен 1,а среднее-1/лямбда (1).Чтобы получить распределение с другим параметром скорости,вызывающие абоненты могут настроить выход с помощью:</target>
        </trans-unit>
        <trans-unit id="9869e506c38f643f1fe985347c015deace6baa22" translate="yes" xml:space="preserve">
          <source>Expand</source>
          <target state="translated">Expand</target>
        </trans-unit>
        <trans-unit id="e8b52c66c070329e5def2fa05af7b37abc20b0c6" translate="yes" xml:space="preserve">
          <source>Expand appends template to dst and returns the result; during the append, Expand replaces variables in the template with corresponding matches drawn from src. The match slice should have been returned by FindSubmatchIndex.</source>
          <target state="translated">Expand добавляет шаблон в dst и возвращает результат;во время добавления Expand заменяет переменные в шаблоне на соответствующие совпадения,полученные из src.Слайс совпадений должен был быть возвращен FindSubmatchIndex.</target>
        </trans-unit>
        <trans-unit id="ea00d9e907ef2f65f476a8e5a1f543fd9142d2a2" translate="yes" xml:space="preserve">
          <source>Expand replaces ${var} or $var in the string based on the mapping function. For example, os.ExpandEnv(s) is equivalent to os.Expand(s, os.Getenv).</source>
          <target state="translated">Expand заменяет ${var}или $var в строке на основе функции отображения.Например,os.ExpandEnv(s)эквивалентно os.Expand(s,os.Getenv).</target>
        </trans-unit>
        <trans-unit id="61b36934002dfcd75585031913256f6e1ddb79f5" translate="yes" xml:space="preserve">
          <source>ExpandEnv</source>
          <target state="translated">ExpandEnv</target>
        </trans-unit>
        <trans-unit id="6389ca0cb471c7cb629f85955e0325ee99607a54" translate="yes" xml:space="preserve">
          <source>ExpandEnv replaces ${var} or $var in the string according to the values of the current environment variables. References to undefined variables are replaced by the empty string.</source>
          <target state="translated">ExpandEnv заменяет ${var}или $var в строке в соответствии со значениями переменных текущего окружения.Ссылки на неопределенные переменные заменяются на пустую строку.</target>
        </trans-unit>
        <trans-unit id="92843cc46bc54c2861399f972b67d13993534275" translate="yes" xml:space="preserve">
          <source>ExpandString is like Expand but the template and source are strings. It appends to and returns a byte slice in order to give the calling code control over allocation.</source>
          <target state="translated">ExpandString похож на Expand,но шаблон и источник-это строки.Он добавляет и возвращает срез байта,чтобы дать вызывающему коду контроль над распределением.</target>
        </trans-unit>
        <trans-unit id="251a582ce62bfefda6c673fcd37e8d59e05a2922" translate="yes" xml:space="preserve">
          <source>Expired connections may be closed lazily before reuse.</source>
          <target state="translated">Просроченные соединения могут быть лениво закрыты перед повторным использованием.</target>
        </trans-unit>
        <trans-unit id="481e2978ff7b371bd03a0ef6010a75e8c6fd03e9" translate="yes" xml:space="preserve">
          <source>Explicit argument indexes:</source>
          <target state="translated">Индексы явных аргументов:</target>
        </trans-unit>
        <trans-unit id="a560a4789cca42ae8b0ecb7e313e3dc7fdad381d" translate="yes" xml:space="preserve">
          <source>ExplicitMethod returns the i'th explicitly declared method of interface t for 0 &amp;lt;= i &amp;lt; t.NumExplicitMethods(). The methods are ordered by their unique Id.</source>
          <target state="translated">ExplicitMethod возвращает i-й явно объявленный метод интерфейса t для 0 &amp;lt;= i &amp;lt;t.NumExplicitMethods (). Методы упорядочены по их уникальному идентификатору.</target>
        </trans-unit>
        <trans-unit id="ecb86881f951179445ed42ff4652a7bc2018af23" translate="yes" xml:space="preserve">
          <source>Expm1</source>
          <target state="translated">Expm1</target>
        </trans-unit>
        <trans-unit id="210f18d7d2dca82962d73d77b3cb6405a7e3ec3b" translate="yes" xml:space="preserve">
          <source>Expm1 returns e**x - 1, the base-e exponential of x minus 1. It is more accurate than Exp(x) - 1 when x is near zero.</source>
          <target state="translated">Expm1 возвращает e**x-1,базовый-экспоненциальный x минус 1.Он точнее,чем Exp(x)-1,когда x близок к нулю.</target>
        </trans-unit>
        <trans-unit id="8fbca60a155d19143993926486ce4e88d6422189" translate="yes" xml:space="preserve">
          <source>Exponent and precision limits.</source>
          <target state="translated">Ограничения по экспоненте и точности.</target>
        </trans-unit>
        <trans-unit id="4480a118f418f1021763f928c23e7ee08b91b4bb" translate="yes" xml:space="preserve">
          <source>ExportKeyingMaterial returns length bytes of exported key material in a new slice as defined in RFC 5705. If context is nil, it is not used as part of the seed. If the connection was set to allow renegotiation via Config.Renegotiation, this function will return an error.</source>
          <target state="translated">ExportKeyingMaterial возвращает длинные байты экспортируемого ключевого материала в новом срезе,как определено в RFC 5705.Если контекст равен нулю,то он не используется как часть семени.Если было установлено соединение,разрешающее пересогласование через Config.Renegotiation,данная функция вернет ошибку.</target>
        </trans-unit>
        <trans-unit id="5548a6e6a833cb04c8f11cf10934171fef992a89" translate="yes" xml:space="preserve">
          <source>Exported reports whether the object is exported (starts with a capital letter). It doesn't take into account whether the object is in a local (function) scope or not.</source>
          <target state="translated">Экспортируемый объект сообщает,экспортируется ли он (начинается с большой буквы).При этом не учитывается,находится ли объект в локальной (функциональной)области видимости или нет.</target>
        </trans-unit>
        <trans-unit id="5c95f3a80a2e18bac3dc7cc110e89646c904993c" translate="yes" xml:space="preserve">
          <source>ExprString returns the (possibly shortened) string representation for x. Shortened representations are suitable for user interfaces but may not necessarily follow Go syntax.</source>
          <target state="translated">ExprString возвращает (возможно,укороченное)строковое представление для x.Укороченные представления подходят для пользовательских интерфейсов,но не обязательно следуют синтаксису Go.</target>
        </trans-unit>
        <trans-unit id="74653975deaee88d4b0d4bc9bd71866d307248ad" translate="yes" xml:space="preserve">
          <source>Ext</source>
          <target state="translated">Ext</target>
        </trans-unit>
        <trans-unit id="fa3fed82b4272b5f7259531edfdcd5e9f6c21ba8" translate="yes" xml:space="preserve">
          <source>Ext returns the file name extension used by path. The extension is the suffix beginning at the final dot in the final element of path; it is empty if there is no dot.</source>
          <target state="translated">Расширение возвращает расширение имени файла,используемое по пути.Расширение-это суффикс,начинающийся с конечной точки в последнем элементе пути;если точки нет,то она пуста.</target>
        </trans-unit>
        <trans-unit id="50a89f2dbf1cde287eb428e1ff050f98aebee55f" translate="yes" xml:space="preserve">
          <source>Ext returns the file name extension used by path. The extension is the suffix beginning at the final dot in the final slash-separated element of path; it is empty if there is no dot.</source>
          <target state="translated">Расширение возвращает расширение имени файла,используемое по пути.Расширение-это суффикс,начинающийся с конечной точки в последнем элементе пути,разделенном косой чертой;он пуст,если точки нет.</target>
        </trans-unit>
        <trans-unit id="c784f4a2ddacb355b9ec53f45e6f9e5b26f8ef62" translate="yes" xml:space="preserve">
          <source>ExtKeyUsage represents an extended set of actions that are valid for a given key. Each of the ExtKeyUsage* constants define a unique action.</source>
          <target state="translated">ExtKeyUsage представляет собой расширенный набор действий,действительных для данного ключа.Каждая из констант ExtKeyUsage*определяет уникальное действие.</target>
        </trans-unit>
        <trans-unit id="caf85fd048e02a11c54f8e5a543cc54c32a75ac8" translate="yes" xml:space="preserve">
          <source>Extended Key Usage values are enforced down a chain, so an intermediate or root that enumerates EKUs prevents a leaf from asserting an EKU not in that list.</source>
          <target state="translated">Значения Extended Key Usage применяются по цепочке,поэтому промежуточный или корневой элемент,который перечисляет EKU,не позволяет листу утверждать,что EKU нет в этом списке.</target>
        </trans-unit>
        <trans-unit id="6d6966d840a8220de008be4f3eed1157c72df574" translate="yes" xml:space="preserve">
          <source>Extended Key Usage values are enforced nested down a chain, so an intermediate or root that enumerates EKUs prevents a leaf from asserting an EKU not in that list. (While this is not specified, it is common practice in order to limit the types of certificates a CA can issue.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d231fb333d7ce02bca636a53ff3662ee9b31d0e" translate="yes" xml:space="preserve">
          <source>Extension reports whether an extension is support by the server. The extension name is case-insensitive. If the extension is supported, Extension also returns a string that contains any parameters the server specifies for the extension.</source>
          <target state="translated">Расширение сообщает,поддерживается ли оно сервером.Имя расширения не зависит от регистра.Если расширение поддерживается,Extension также возвращает строку,содержащую любые параметры,указанные сервером для этого расширения.</target>
        </trans-unit>
        <trans-unit id="ace6ecb8af6a3359dd0ee95e26152ccb34af5460" translate="yes" xml:space="preserve">
          <source>Extension represents the ASN.1 structure of the same name. See RFC 5280, section 4.2.</source>
          <target state="translated">Расширение представляет собой одноименную структуру ASN.1.См.RFC 5280,раздел 4.2.</target>
        </trans-unit>
        <trans-unit id="31959200e26a22be03bc0bb47ef68bbf9b24bab3" translate="yes" xml:space="preserve">
          <source>Extensions are looked up first case-sensitively, then case-insensitively.</source>
          <target state="translated">Расширения просматриваются сначала чувствительно к регистру,затем нечувствительно к регистру.</target>
        </trans-unit>
        <trans-unit id="1cbba6001e28100d482f6a6299792705c6215e5a" translate="yes" xml:space="preserve">
          <source>ExtensionsByType returns the extensions known to be associated with the MIME type typ. The returned extensions will each begin with a leading dot, as in &quot;.html&quot;. When typ has no associated extensions, ExtensionsByType returns an nil slice.</source>
          <target state="translated">ExtensionsByType возвращает расширения,известные как связанные с типом MIME.Каждое из возвращаемых расширений будет начинаться с ведущей точки,как в &quot;.html&quot;.Если тип не имеет ассоциированных расширений,ExtensionsByType возвращает нулевой срез.</target>
        </trans-unit>
        <trans-unit id="8aad579fa6a17330a51ba206c40c063267220aca" translate="yes" xml:space="preserve">
          <source>FMA returns x * y + z, computed with only one rounding. (That is, FMA returns the fused multiply-add of x, y, and z.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f92bb33922145bd437972bd7334d66d54fc74c" translate="yes" xml:space="preserve">
          <source>Fail marks the function as having failed but continues execution.</source>
          <target state="translated">Сбой отмечает,что функция отказала,но продолжает выполнение.</target>
        </trans-unit>
        <trans-unit id="c96da18b07e966a06683f2215098b994edf8d8a8" translate="yes" xml:space="preserve">
          <source>FailNow marks the function as having failed and stops its execution by calling runtime.Goexit (which then runs all deferred calls in the current goroutine). Execution will continue at the next test or benchmark. FailNow must be called from the goroutine running the test or benchmark function, not from other goroutines created during the test. Calling FailNow does not stop those other goroutines.</source>
          <target state="translated">FailNow помечает функцию как неудачную и останавливает ее выполнение вызовом runtime.Goexit (который затем запускает все отложенные вызовы в текущем goroutine).Выполнение будет продолжено на следующем тесте или бенчмарке.FailNow должен быть вызван из гортани,выполняющей функцию теста или бенчмарка,а не из других гортаней,созданных во время теста.Вызов FailNow не останавливает этих других goroutine.</target>
        </trans-unit>
        <trans-unit id="01a2572255742baf72eacb416d97e18b48d912c5" translate="yes" xml:space="preserve">
          <source>Failed reports whether the function has failed.</source>
          <target state="translated">Неудачный отчет о том,что функция не работает.</target>
        </trans-unit>
        <trans-unit id="158e2280504673822ca1dd07952532cc4d1da5a7" translate="yes" xml:space="preserve">
          <source>Fatal is equivalent to Log followed by FailNow.</source>
          <target state="translated">Fatal эквивалентен Log,за которым следует FailNow.</target>
        </trans-unit>
        <trans-unit id="59eb8d095a56a5d642425c97f87d097bf1a29e0c" translate="yes" xml:space="preserve">
          <source>Fatal is equivalent to Print() followed by a call to os.Exit(1).</source>
          <target state="translated">Фатальный вариант эквивалентен функции Print()с последующим вызовом os.Exit(1).</target>
        </trans-unit>
        <trans-unit id="1b648a69f1114f39bd45b11c4cb17246fbb28c1b" translate="yes" xml:space="preserve">
          <source>Fatal is equivalent to l.Print() followed by a call to os.Exit(1).</source>
          <target state="translated">Фатальный результат эквивалентен l.Print()с последующим вызовом os.Exit(1).</target>
        </trans-unit>
        <trans-unit id="821293c77a8a8bf8b0fca5f95004d9fc65b67208" translate="yes" xml:space="preserve">
          <source>Fatalf is equivalent to Logf followed by FailNow.</source>
          <target state="translated">Fatalf эквивалентен Logf,за которым следует FailNow.</target>
        </trans-unit>
        <trans-unit id="83255ac37e112e05058d8a28ec8b155f3e9d2e47" translate="yes" xml:space="preserve">
          <source>Fatalf is equivalent to Printf() followed by a call to os.Exit(1).</source>
          <target state="translated">Fatalf эквивалентна Printf()с последующим вызовом os.Exit(1).</target>
        </trans-unit>
        <trans-unit id="8571875ef68d4b9deea013c46be5e95e7550519a" translate="yes" xml:space="preserve">
          <source>Fatalf is equivalent to l.Printf() followed by a call to os.Exit(1).</source>
          <target state="translated">Fatalf эквивалентна l.Printf()с последующим вызовом os.Exit(1).</target>
        </trans-unit>
        <trans-unit id="e48e9dcadd0241869c65df99078d16d774bed84d" translate="yes" xml:space="preserve">
          <source>Fatalln is equivalent to Println() followed by a call to os.Exit(1).</source>
          <target state="translated">Fatalln эквивалентен Println()с последующим вызовом os.Exit(1).</target>
        </trans-unit>
        <trans-unit id="7df0d59b5e282da60574bc47edaa9526f95c3b6d" translate="yes" xml:space="preserve">
          <source>Fatalln is equivalent to l.Println() followed by a call to os.Exit(1).</source>
          <target state="translated">Fatalln эквивалентен l.Println()с последующим вызовом os.Exit(1).</target>
        </trans-unit>
        <trans-unit id="0cb27ee0cfbf9af89a40e300698ac1dde2642f55" translate="yes" xml:space="preserve">
          <source>FcntlFlock performs a fcntl syscall for the F_GETLK, F_SETLK or F_SETLKW command.</source>
          <target state="translated">FcntlFlock выполняет syscall fcntl для команды F_GETLK,F_SETLK или F_SETLKW.</target>
        </trans-unit>
        <trans-unit id="cb72a865b5feb1394b8952b8f15d42e68aa3981b" translate="yes" xml:space="preserve">
          <source>Fd returns the integer Unix file descriptor referencing the open file. The file descriptor is valid only until f.Close is called or f is garbage collected. On Unix systems this will cause the SetDeadline methods to stop working.</source>
          <target state="translated">Fd возвращает целочисленный Unix-файловый дескриптор,ссылающийся на открытый файл.Дескриптор файла действителен только до тех пор,пока не будет вызван f.Close или f не будет собран мусор.На Unix-системах это приведет к остановке работы методов SetDeadline.</target>
        </trans-unit>
        <trans-unit id="d61d809eab07312ae05f8f709b84547398d2efdf" translate="yes" xml:space="preserve">
          <source>Field returns the i'th field for 0 &amp;lt;= i &amp;lt; NumFields().</source>
          <target state="translated">Поле возвращает i-е поле для 0 &amp;lt;= i &amp;lt;NumFields ().</target>
        </trans-unit>
        <trans-unit id="261d167c68d467f10d820edc6286e66bbb21759b" translate="yes" xml:space="preserve">
          <source>Field returns the i'th field of the struct v. It panics if v's Kind is not Struct or i is out of range.</source>
          <target state="translated">Поле возвращает i-ое поле структуры v.Оно паникует,если v's Kind не является Struct или i находится вне зоны действия.</target>
        </trans-unit>
        <trans-unit id="4c791e0a7e5bd33b119b2f78289ee593a7501c42" translate="yes" xml:space="preserve">
          <source>FieldByIndex returns the nested field corresponding to index. It panics if v's Kind is not struct.</source>
          <target state="translated">FieldByIndex возвращает вложенное поле,соответствующее индексу.Он паникует,если v's Kind не структурирован.</target>
        </trans-unit>
        <trans-unit id="8183a55fec39ebd325b9f393dccbc786cb50e104" translate="yes" xml:space="preserve">
          <source>FieldByName and related functions consider struct field names to be equal if the names are equal, even if they are unexported names originating in different packages. The practical effect of this is that the result of t.FieldByName(&quot;x&quot;) is not well defined if the struct type t contains multiple fields named x (embedded from different packages). FieldByName may return one of the fields named x or may report that there are none. See &lt;a href=&quot;https://golang.org/issue/4876&quot;&gt;https://golang.org/issue/4876&lt;/a&gt; for more details.</source>
          <target state="translated">FieldByName и связанные функции считают, что имена полей структуры равны, если имена равны, даже если это неэкспортированные имена, происходящие из разных пакетов. Практический эффект этого заключается в том, что результат t.FieldByName (&quot;x&quot;) не определен должным образом, если тип структуры t содержит несколько полей с именем x (встроенных из разных пакетов). FieldByName может возвращать одно из полей с именем x или может сообщать, что их нет. См. &lt;a href=&quot;https://golang.org/issue/4876&quot;&gt;Https://golang.org/issue/4876&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="64a2508218e09b64bdd0d9e7f24c36121018ee1f" translate="yes" xml:space="preserve">
          <source>FieldByName returns the struct field with the given name. It returns the zero Value if no field was found. It panics if v's Kind is not struct.</source>
          <target state="translated">FieldByName возвращает поле структуры с заданным именем.Возвращает нулевое значение,если поле не найдено.Он паникует,если v's Kind не является struct.</target>
        </trans-unit>
        <trans-unit id="d05b4005e71684b698845fc4189a49e33cd3e7f3" translate="yes" xml:space="preserve">
          <source>FieldByNameFunc returns the struct field with a name that satisfies the match function. It panics if v's Kind is not struct. It returns the zero Value if no field was found.</source>
          <target state="translated">FieldByNameFunc возвращает поле структуры с именем,удовлетворяющим функции соответствия.Она паникует,если v's Kind не является struct.Она возвращает нулевое значение,если поле не найдено.</target>
        </trans-unit>
        <trans-unit id="7c99e9b1642562e3e1353bb454e3388fb902c996" translate="yes" xml:space="preserve">
          <source>FieldNode holds a field (identifier starting with '.'). The names may be chained ('.x.y'). The period is dropped from each ident.</source>
          <target state="translated">FieldNode содержит поле (идентификатор,начинающийся с '.').Имена могут быть цепочечными ('.x.y').Период выпадает из каждого идентификатора.</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="b282c4f43da573ed9235e6d31c0129363fbd6a56" translate="yes" xml:space="preserve">
          <source>Fields interprets s as a sequence of UTF-8-encoded code points. It splits the slice s around each instance of one or more consecutive white space characters, as defined by unicode.IsSpace, returning a slice of subslices of s or an empty slice if s contains only white space.</source>
          <target state="translated">Поля интерпретируют s как последовательность кодированных в кодировке UTF-8 точек.Она разделяет фрагменты s вокруг каждого экземпляра одного или нескольких последовательных пробельных символов,как определено в unicode.IsSpace,возвращая фрагмент сублислов s или пустой фрагмент,если s содержит только пробелы белого цвета.</target>
        </trans-unit>
        <trans-unit id="11942ab8089728dea08ce9ed92990aab227d9b83" translate="yes" xml:space="preserve">
          <source>Fields splits the string s around each instance of one or more consecutive white space characters, as defined by unicode.IsSpace, returning a slice of substrings of s or an empty slice if s contains only white space.</source>
          <target state="translated">Поля разбивают строку s вокруг каждого экземпляра одного или нескольких последовательных пробельных символов,как определено в юникоде.IsSpace,возвращая фрагмент подстроки s или пустой фрагмент,если s содержит только пробелы белого цвета.</target>
        </trans-unit>
        <trans-unit id="1cddbffb0a4099caf5fcbfd9135dbe9cc1348312" translate="yes" xml:space="preserve">
          <source>Fields which start and stop with the quote character &quot; are called quoted-fields. The beginning and ending quote are not part of the field.</source>
          <target state="translated">Поля,которые начинаются и заканчиваются символом кавычки,называются кавычками.Начальная и конечная кавычки не являются частью поля.</target>
        </trans-unit>
        <trans-unit id="0ed084c27b5c1cc1510b75a6eea5cceac8dc8568" translate="yes" xml:space="preserve">
          <source>FieldsFunc</source>
          <target state="translated">FieldsFunc</target>
        </trans-unit>
        <trans-unit id="77deb011addc0b77675cb66ce5be40d953d48dc6" translate="yes" xml:space="preserve">
          <source>FieldsFunc interprets s as a sequence of UTF-8-encoded code points. It splits the slice s at each run of code points c satisfying f(c) and returns a slice of subslices of s. If all code points in s satisfy f(c), or len(s) == 0, an empty slice is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1198e81508f52e5775684dce71da3bd307817aaf" translate="yes" xml:space="preserve">
          <source>FieldsFunc interprets s as a sequence of UTF-8-encoded code points. It splits the slice s at each run of code points c satisfying f(c) and returns a slice of subslices of s. If all code points in s satisfy f(c), or len(s) == 0, an empty slice is returned. FieldsFunc makes no guarantees about the order in which it calls f(c). If f does not return consistent results for a given c, FieldsFunc may crash.</source>
          <target state="translated">FieldsFunc интерпретирует s как последовательность кодированных в кодировке UTF-8 точек.Она разделяет ломтик s на каждую последовательность точек кода c,удовлетворяющих f(c),и возвращает ломтик с подсловами s.Если все точки кода в s удовлетворяют f(c),или len(s)==0,возвращается пустой ломтик.FieldsFunc не дает никаких гарантий относительно порядка,в котором он вызывает f(c).Если f не возвращает последовательные результаты для данной c,FieldsFunc может аварийно завершить свою работу.</target>
        </trans-unit>
        <trans-unit id="ff942e5665ccbe9a059bd7e03c39e790740aa544" translate="yes" xml:space="preserve">
          <source>FieldsFunc makes no guarantees about the order in which it calls f(c) and assumes that f always returns the same value for a given c.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c072b10eb204acdb276cf21a72514c958961d6" translate="yes" xml:space="preserve">
          <source>FieldsFunc splits the string s at each run of Unicode code points c satisfying f(c) and returns an array of slices of s. If all code points in s satisfy f(c) or the string is empty, an empty slice is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fef0b1adf312085c03264cc3bf92c0ae08947f" translate="yes" xml:space="preserve">
          <source>FieldsFunc splits the string s at each run of Unicode code points c satisfying f(c) and returns an array of slices of s. If all code points in s satisfy f(c) or the string is empty, an empty slice is returned. FieldsFunc makes no guarantees about the order in which it calls f(c). If f does not return consistent results for a given c, FieldsFunc may crash.</source>
          <target state="translated">FieldsFunc разбивает строку s на каждую последовательность точек кода Юникода c,удовлетворяющих f(c)и возвращает массив срезов s.Если все точки кода в s удовлетворяют f(c)или строка пуста,возвращается пустой срез.FieldsFunc не дает никаких гарантий относительно порядка,в котором он вызывает f(c).Если f не возвращает последовательные результаты для данной c,FieldsFunc может аварийно завершить работу.</target>
        </trans-unit>
        <trans-unit id="84f4c98b71a6a2f1e7b377a8676e629c9740fd5f" translate="yes" xml:space="preserve">
          <source>File is an interface to access the file part of a multipart message. Its contents may be either stored in memory or on disk. If stored on disk, the File's underlying concrete type will be an *os.File.</source>
          <target state="translated">Файл-это интерфейс для доступа к файловой части сообщения,состоящего из нескольких частей.Его содержимое может быть сохранено как в памяти,так и на диске.Если файл хранится на диске,то его конкретный тип будет *os.File.</target>
        </trans-unit>
        <trans-unit id="3b7e7234ecd572c448fdc94c6036d0727036b79d" translate="yes" xml:space="preserve">
          <source>File represents an open file descriptor.</source>
          <target state="translated">Файл представляет собой открытый дескриптор файла.</target>
        </trans-unit>
        <trans-unit id="73835fd64cea7fb721059e67256305a0d198b5ab" translate="yes" xml:space="preserve">
          <source>File returns a copy of the underlying os.File. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.</source>
          <target state="translated">Файл возвращает копию базового os.File.Звонящий обязан закрыть f,когда он закончит.Закрытие c не влияет на f,а закрытие f не влияет на c.</target>
        </trans-unit>
        <trans-unit id="8cfa002fa0ca7b105692672f60881822088c5ccd" translate="yes" xml:space="preserve">
          <source>File returns a copy of the underlying os.File. It is the caller's responsibility to close f when finished. Closing l does not affect f, and closing f does not affect l.</source>
          <target state="translated">Файл возвращает копию базового os.File.Звонящий обязан закрыть f,когда он закончит.Закрытие l не влияет на f,а закрытие f не влияет на l.</target>
        </trans-unit>
        <trans-unit id="a964559e347c1b7accfdbfdb5331a705f9a38368" translate="yes" xml:space="preserve">
          <source>File returns the file that contains the position p. If no such file is found (for instance for p == NoPos), the result is nil.</source>
          <target state="translated">Файл возвращает файл,содержащий позицию p.Если такой файл не найден (например,для p ==NoPos),результат равен нулю.</target>
        </trans-unit>
        <trans-unit id="8455c6bba2e3b76773e19fb487214e00c0eda43e" translate="yes" xml:space="preserve">
          <source>FileConn returns a copy of the network connection corresponding to the open file f. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.</source>
          <target state="translated">FileConn возвращает копию сетевого соединения,соответствующую открытому файлу f.Звонящий отвечает за закрытие f по окончании.Закрытие c не влияет на f,а закрытие f не влияет на c.</target>
        </trans-unit>
        <trans-unit id="a22e3976fc002f08d409b21bc3b2057de6ee7bb5" translate="yes" xml:space="preserve">
          <source>FileExports reports whether there are exported declarations.</source>
          <target state="translated">FileExports сообщает,есть ли экспортированные декларации.</target>
        </trans-unit>
        <trans-unit id="3ddddfe5effd9cc3d49c7434638dbf7088ae876d" translate="yes" xml:space="preserve">
          <source>FileExports trims the AST for a Go source file in place such that only exported nodes remain: all top-level identifiers which are not exported and their associated information (such as type, initial value, or function body) are removed. Non-exported fields and methods of exported types are stripped. The File.Comments list is not changed.</source>
          <target state="translated">FileExports обновляет AST для исходного файла Go таким образом,что остаются только экспортированные узлы:все не экспортированные идентификаторы верхнего уровня и связанная с ними информация (например,тип,начальное значение или тело функции)удаляются.Неэкспортируемые поля и методы экспортируемых типов удаляются.Список File.Comments не изменяется.</target>
        </trans-unit>
        <trans-unit id="30db9abebdd92f5b7518cf1f5bbb9879a131845c" translate="yes" xml:space="preserve">
          <source>FileHeader describes a file within a zip file. See the zip spec for details.</source>
          <target state="translated">FileHeader описывает файл внутри zip-файла.Подробности см.в спецификации zip-файла.</target>
        </trans-unit>
        <trans-unit id="4d421452fb7f6f8f21ef4ba78426b17cbfd53ec7" translate="yes" xml:space="preserve">
          <source>FileInfo returns an os.FileInfo for the FileHeader.</source>
          <target state="translated">FileInfo возвращает os.FileInfo для FileHeader.</target>
        </trans-unit>
        <trans-unit id="df3ff5122dc6f633a02486f869c65c492c72e91a" translate="yes" xml:space="preserve">
          <source>FileInfo returns an os.FileInfo for the Header.</source>
          <target state="translated">FileInfo возвращает os.FileInfo для заголовка.</target>
        </trans-unit>
        <trans-unit id="10f4523b7a78ead3725e69f92cdfe5b5d0be7c78" translate="yes" xml:space="preserve">
          <source>FileInfoHeader creates a partially-populated FileHeader from an os.FileInfo. Because os.FileInfo's Name method returns only the base name of the file it describes, it may be necessary to modify the Name field of the returned header to provide the full path name of the file. If compression is desired, callers should set the FileHeader.Method field; it is unset by default.</source>
          <target state="translated">FileInfoHeader создает частично заселенный FileHeader из os.FileInfo.Поскольку метод os.FileInfo's Name возвращает только базовое имя файла,который он описывает,может потребоваться изменить поле Name возвращаемого заголовка,чтобы указать полное имя пути к файлу.Если необходимо сжатие,то вызывающие абоненты должны установить поле FileHeader.Method;по умолчанию оно не установлено.</target>
        </trans-unit>
        <trans-unit id="bade8efb0bdf22a697f4860acaff901dcdf7cd40" translate="yes" xml:space="preserve">
          <source>FileInfoHeader creates a partially-populated Header from fi. If fi describes a symlink, FileInfoHeader records link as the link target. If fi describes a directory, a slash is appended to the name.</source>
          <target state="translated">FileInfoHeader создает частично заполненный заголовок из fi.Если fi описывает сим-ссылку,FileInfoHeader записывает ссылку как цель ссылки.Если fi описывает каталог,к имени добавляется косая черта.</target>
        </trans-unit>
        <trans-unit id="0e337ae6931880d7e580a328902c201076b51624" translate="yes" xml:space="preserve">
          <source>FileLine returns the file name and line number of the source code corresponding to the program counter pc. The result will not be accurate if pc is not a program counter within f.</source>
          <target state="translated">FileLine возвращает имя файла и номер строки исходного кода,соответствующего счетчику программы pc.Результат не будет точным,если pc не является программным счетчиком в пределах f.</target>
        </trans-unit>
        <trans-unit id="82b2edf71f3991c324095b35a106fb747b15b499" translate="yes" xml:space="preserve">
          <source>FileListener returns a copy of the network listener corresponding to the open file f. It is the caller's responsibility to close ln when finished. Closing ln does not affect f, and closing f does not affect ln.</source>
          <target state="translated">FileListener возвращает копию сетевого прослушивателя,соответствующую открытому файлу f.Звонящий отвечает за закрытие ln по окончании работы.Закрытие ln не влияет на f,а закрытие f не влияет на ln.</target>
        </trans-unit>
        <trans-unit id="0b25eeca51a2e908f97898c9ef3aefb4ac120d01" translate="yes" xml:space="preserve">
          <source>FileMode</source>
          <target state="translated">FileMode</target>
        </trans-unit>
        <trans-unit id="aa6abe93ec8b861e41dbb5d680eb1abac76bc118" translate="yes" xml:space="preserve">
          <source>FileName returns the filename parameter of the Part's Content-Disposition header.</source>
          <target state="translated">FileName возвращает параметр имени файла заголовка Content-Disposition части.</target>
        </trans-unit>
        <trans-unit id="ab442735e84d773b25b014f5d105c04cedc7c9de" translate="yes" xml:space="preserve">
          <source>FilePacketConn returns a copy of the packet network connection corresponding to the open file f. It is the caller's responsibility to close f when finished. Closing c does not affect f, and closing f does not affect c.</source>
          <target state="translated">FilePacketConn возвращает копию пакетного сетевого соединения,соответствующего открытому файлу f.Звонящий отвечает за закрытие f по окончании.Закрытие c не влияет на f,а закрытие f не влияет на c.</target>
        </trans-unit>
        <trans-unit id="93afd50ecd9277958b5e979e54d840040f44f617" translate="yes" xml:space="preserve">
          <source>FileServer</source>
          <target state="translated">FileServer</target>
        </trans-unit>
        <trans-unit id="6b1c6f5fe976e57e9903b48c0ae3364dd14af1bf" translate="yes" xml:space="preserve">
          <source>FileServer (DotFileHiding)</source>
          <target state="translated">FileServer (DotFileHiding)</target>
        </trans-unit>
        <trans-unit id="4d2a840c48e0d07f28c7b78564c1dff9913edbe7" translate="yes" xml:space="preserve">
          <source>FileServer (StripPrefix)</source>
          <target state="translated">FileServer (StripPrefix)</target>
        </trans-unit>
        <trans-unit id="d2e3e689f0d74cd94b082adc56551c527c3d7331" translate="yes" xml:space="preserve">
          <source>FileServer returns a handler that serves HTTP requests with the contents of the file system rooted at root.</source>
          <target state="translated">FileServer возвращает обработчик,который обслуживает HTTP-запросы с содержимым файловой системы,корневой стороной которой является корень.</target>
        </trans-unit>
        <trans-unit id="b05ffc1d15462ca6f99d23dad5504fcb24e01652" translate="yes" xml:space="preserve">
          <source>Filenames containing a certificate and matching private key for the server must be provided if neither the Server's TLSConfig.Certificates nor TLSConfig.GetCertificate are populated. If the certificate is signed by a certificate authority, the certFile should be the concatenation of the server's certificate, any intermediates, and the CA's certificate.</source>
          <target state="translated">Имена файлов,содержащих сертификат и соответствующий частный ключ сервера,должны быть предоставлены,если ни TLSConfig.Certificates сервера,ни TLSConfig.GetCertificate сервера не заполнены.Если сертификат подписан центром сертификации,то certFile должен быть конкатеннацией сертификата сервера,любых посредников и сертификата центра сертификации.</target>
        </trans-unit>
        <trans-unit id="73595851a6091a7492042c8776979e91c6d3c91f" translate="yes" xml:space="preserve">
          <source>Files checks the provided files as part of the checker's package.</source>
          <target state="translated">Файлы проверяют предоставленные файлы как часть пакета проверки.</target>
        </trans-unit>
        <trans-unit id="f2677f06472fc0feb492ada82a2c4649c4e1df36" translate="yes" xml:space="preserve">
          <source>Files containing a certificate and matching private key for the server must be provided if neither the Server's TLSConfig.Certificates nor TLSConfig.GetCertificate are populated. If the certificate is signed by a certificate authority, the certFile should be the concatenation of the server's certificate, any intermediates, and the CA's certificate.</source>
          <target state="translated">Файлы,содержащие сертификат и соответствующий частный ключ сервера,должны быть предоставлены,если ни TLSConfig.Certificates сервера,ни TLSConfig.GetCertificate сервера не заполнены.Если сертификат подписан центром сертификации,то certFile должен быть конкатеннацией сертификата сервера,любых посредников и сертификата центра сертификации.</target>
        </trans-unit>
        <trans-unit id="5e509fe0addedea68b64c5b0175672be70d59e89" translate="yes" xml:space="preserve">
          <source>Files returns the file name table of this compilation unit as of the current position in the line table. The file name table may be referenced from attributes in this compilation unit such as AttrDeclFile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b9b62ab260f2308e9b093a7911d09a04032958" translate="yes" xml:space="preserve">
          <source>FillBytes sets buf to the absolute value of x, storing it as a zero-extended big-endian byte slice, and returns buf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916600c69a73c67f62481a2e3b48aac8b70b5d49" translate="yes" xml:space="preserve">
          <source>FillFromRDNSequence populates n from the provided RDNSequence. Multi-entry RDNs are flattened, all entries are added to the relevant n fields, and the grouping is not preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c30ef34cd44738f2300a9d1c8d2644305bfe659" translate="yes" xml:space="preserve">
          <source>Filter eliminates documentation for names that don't pass through the filter f. TODO(gri): Recognize &quot;Type.Method&quot; as a name.</source>
          <target state="translated">Фильтр устраняет документацию для имен,которые не проходят через фильтр f.TODO(gri):Распознает &quot;Type.Method&quot; как имя.</target>
        </trans-unit>
        <trans-unit id="8fe9542ddb9636eaf7f6d18a2a5c93cd3e032943" translate="yes" xml:space="preserve">
          <source>Filter returns a new comment map consisting of only those entries of cmap for which a corresponding node exists in the AST specified by node.</source>
          <target state="translated">Фильтр возвращает новую карту комментариев,состоящую только из тех записей cmap,для которых в заданном узлом AST существует соответствующий узел.</target>
        </trans-unit>
        <trans-unit id="99334f5ff24d09e0e43146c7ab17eed8e9e83ed8" translate="yes" xml:space="preserve">
          <source>FilterDecl reports whether there are any declared names left after filtering.</source>
          <target state="translated">FilterDecl сообщает,остались ли после фильтрации объявленные имена.</target>
        </trans-unit>
        <trans-unit id="a98ad9f1ce33b85f6650faa2d18060284cd00443" translate="yes" xml:space="preserve">
          <source>FilterDecl trims the AST for a Go declaration in place by removing all names (including struct field and interface method names, but not from parameter lists) that don't pass through the filter f.</source>
          <target state="translated">FilterDecl убирает AST для объявления Go,удаляя все имена (включая имена структурных полей и методов интерфейса,но не из списков параметров),которые не проходят через фильтр f.</target>
        </trans-unit>
        <trans-unit id="c1ed367ffc6ba55dd5b60bff81664a2c439a8484" translate="yes" xml:space="preserve">
          <source>FilterFile reports whether there are any top-level declarations left after filtering.</source>
          <target state="translated">FilterFile сообщает,остались ли после фильтрации какие-либо декларации верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="7a9fa766ec80d5d59f245ed962a927a61c070075" translate="yes" xml:space="preserve">
          <source>FilterFile trims the AST for a Go file in place by removing all names from top-level declarations (including struct field and interface method names, but not from parameter lists) that don't pass through the filter f. If the declaration is empty afterwards, the declaration is removed from the AST. Import declarations are always removed. The File.Comments list is not changed.</source>
          <target state="translated">FilterFile убирает AST для Go файла,удаляя все имена из деклараций верхнего уровня (включая имена структурных полей и методов интерфейса,но не из списков параметров),которые не проходят через фильтр f.Если после этого декларация пуста,то она удаляется из AST.Импортные декларации всегда удаляются.Список File.Comments не изменяется.</target>
        </trans-unit>
        <trans-unit id="616d0d4a74fcef85e72d4edac004eabd14b32293" translate="yes" xml:space="preserve">
          <source>FilterPackage reports whether there are any top-level declarations left after filtering.</source>
          <target state="translated">FilterPackage сообщает,остались ли после фильтрации какие-либо декларации верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="cc812cc8b170b6479d3dcdf5fdfae2947c9e732a" translate="yes" xml:space="preserve">
          <source>FilterPackage trims the AST for a Go package in place by removing all names from top-level declarations (including struct field and interface method names, but not from parameter lists) that don't pass through the filter f. If the declaration is empty afterwards, the declaration is removed from the AST. The pkg.Files list is not changed, so that file names and top-level package comments don't get lost.</source>
          <target state="translated">FilterPackage убирает AST для пакета Go,удаляя все имена из деклараций верхнего уровня (включая имена полей структуры и методов интерфейса,но не из списков параметров),которые не проходят через фильтр f.Если после этого декларация пуста,то она удаляется из AST.Список файлов pkg.Files не изменяется,поэтому имена файлов и комментарии к пакетам верхнего уровня не теряются.</target>
        </trans-unit>
        <trans-unit id="64167db3c8ee867d45eebbc9c53b064e2bb836d4" translate="yes" xml:space="preserve">
          <source>Finalizers are run in dependency order: if A points at B, both have finalizers, and they are otherwise unreachable, only the finalizer for A runs; once A is freed, the finalizer for B can run. If a cyclic structure includes a block with a finalizer, that cycle is not guaranteed to be garbage collected and the finalizer is not guaranteed to run, because there is no ordering that respects the dependencies.</source>
          <target state="translated">Финишизаторы выполняются в порядке зависимости:если точки A в точке B,у обоих есть финишизаторы,и в противном случае они недоступны,то запускается только финишизатор для прогонов A;как только A освобождается,может запуститься финишизатор для прогонов B.Если в циклическую структуру входит блок с финализатором,то этот цикл не гарантированно будет собрать мусор,а финализатор не гарантированно будет запущен,потому что нет порядка следования,который бы учитывал зависимости.</target>
        </trans-unit>
        <trans-unit id="04c286b7e901d165a790bb4d85625ee624e6c5de" translate="yes" xml:space="preserve">
          <source>Finally, *Int, *Rat, and *Float satisfy the fmt package's Scanner interface for scanning and (except for *Rat) the Formatter interface for formatted printing.</source>
          <target state="translated">Наконец,*Int,*Rat и *Float удовлетворяют интерфейсу сканера fmt пакета для сканирования и (за исключением *Rat)интерфейсу форматирования для форматированной печати.</target>
        </trans-unit>
        <trans-unit id="26ec87dd2b9f83faa210cf241d5b474c8a62da6b" translate="yes" xml:space="preserve">
          <source>Finally, any occurrences of slash are replaced by Separator.</source>
          <target state="translated">Наконец,любые случаи косой черты заменяются на Separator.</target>
        </trans-unit>
        <trans-unit id="2e283acb4f254ad8296a8a754d3d7b44acc43a52" translate="yes" xml:space="preserve">
          <source>Finally, each message created by a call to Encode is preceded by an encoded unsigned integer count of the number of bytes remaining in the message. After the initial type name, interface values are wrapped the same way; in effect, the interface value acts like a recursive invocation of Encode.</source>
          <target state="translated">Наконец,каждому сообщению,созданному в результате вызова Encode,предшествует кодированное неподписанное целое число байт,оставшихся в сообщении.После первоначального имени типа,значения интерфейса обертываются таким же образом;по сути,значение интерфейса действует как рекурсивный вызов Encode.</target>
        </trans-unit>
        <trans-unit id="26fb85ce34e42f69c76353a6f2b051f404c7f2c9" translate="yes" xml:space="preserve">
          <source>Find returns a slice holding the text of the leftmost match in b of the regular expression. A return value of nil indicates no match.</source>
          <target state="translated">Find возвращает фрагмент,удерживающий текст самого левого совпадения в регулярном выражении b.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="3939b43a8656fedf8c713b119be8032947dc3ecd" translate="yes" xml:space="preserve">
          <source>FindAll is the 'All' version of Find; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAll-это 'All' версия Find;она возвращает часть всех последовательных совпадений выражения,как определено описанием 'All' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="36cb8b2ff6a76516bc1c892450ee61ae3139b098" translate="yes" xml:space="preserve">
          <source>FindAllIndex is the 'All' version of FindIndex; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllIndex-это версия FindIndex 'All';она возвращает часть всех последовательных совпадений выражения,как определено описанием 'All' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="f5f37301641ba46ce0b020d50232dcdae9f0dad0" translate="yes" xml:space="preserve">
          <source>FindAllIndex returns a sorted list of non-overlapping matches of the regular expression r, where a match is a pair of indices specifying the matched slice of x.Bytes(). If n &amp;lt; 0, all matches are returned in successive order. Otherwise, at most n matches are returned and they may not be successive. The result is nil if there are no matches, or if n == 0.</source>
          <target state="translated">FindAllIndex возвращает отсортированный список неперекрывающихся совпадений регулярного выражения r, где совпадение - это пара индексов, определяющих согласованный фрагмент x.Bytes (). Если n &amp;lt;0, все совпадения возвращаются в последовательном порядке. В противном случае возвращается не более n совпадений, и они могут быть непоследовательными. Результат равен нулю, если совпадений нет или если n == 0.</target>
        </trans-unit>
        <trans-unit id="9de88adfecc3f20e0c2ffdbb0f036f7a79d80f3b" translate="yes" xml:space="preserve">
          <source>FindAllString is the 'All' version of FindString; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllString-это 'All' версия FindString;она возвращает часть всех последовательных совпадений выражения,как определено описанием 'All' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="50f5df0a72b99ef5ef4ba48205043bd703872dd1" translate="yes" xml:space="preserve">
          <source>FindAllStringIndex is the 'All' version of FindStringIndex; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllStringIndex-это версия FindStringIndex 'All';она возвращает часть всех последовательных совпадений выражения,как определено описанием 'All' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="fd030004e8ba710e67858c9136cb59800b720d8e" translate="yes" xml:space="preserve">
          <source>FindAllStringSubmatch is the 'All' version of FindStringSubmatch; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllStringSubmatch-это версия FindStringSubmatch 'All';она возвращает кусок всех последовательных совпадений выражения,как определено описанием 'All' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="866672036e7565c5590c34ec3cdc6d2f77a921c5" translate="yes" xml:space="preserve">
          <source>FindAllStringSubmatchIndex is the 'All' version of FindStringSubmatchIndex; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllStringSubmatchIndex-это 'Все' версия FindStringSubmatchIndex;он возвращает кусок всех последовательных совпадений выражения,как определено описанием 'Все' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="3be6622b78b7a355447dee918503ed5111144cd3" translate="yes" xml:space="preserve">
          <source>FindAllSubmatch is the 'All' version of FindSubmatch; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllSubmatch-это 'Все' версия FindSubmatch;она возвращает кусок всех последовательных совпадений выражения,как определено описанием 'Все' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="c52ee6c792ee96296da432c07ce6bac841f99f98" translate="yes" xml:space="preserve">
          <source>FindAllSubmatchIndex is the 'All' version of FindSubmatchIndex; it returns a slice of all successive matches of the expression, as defined by the 'All' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindAllSubmatchIndex-это 'Все' версия FindSubmatchIndex;он возвращает кусок всех последовательных совпадений выражения,как определено описанием 'Все' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="42e5b0dfb84ada5e535dcd7bb2807e917d046ce8" translate="yes" xml:space="preserve">
          <source>FindIndex returns a two-element slice of integers defining the location of the leftmost match in b of the regular expression. The match itself is at b[loc[0]:loc[1]]. A return value of nil indicates no match.</source>
          <target state="translated">FindIndex возвращает двухэлементный срез целых чисел,определяющий местоположение самого левого совпадения в b регулярного выражения.Само совпадение находится в b[loc[0]:loc[1]].Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="5e8a7de41165a099a274921bab815b24b2852407" translate="yes" xml:space="preserve">
          <source>FindProcess looks for a running process by its pid.</source>
          <target state="translated">FindProcess ищет запущенный процесс по своему пиду.</target>
        </trans-unit>
        <trans-unit id="4911a1ccdd694282d198f0794f5539db98ac7df1" translate="yes" xml:space="preserve">
          <source>FindReaderIndex returns a two-element slice of integers defining the location of the leftmost match of the regular expression in text read from the RuneReader. The match text was found in the input stream at byte offset loc[0] through loc[1]-1. A return value of nil indicates no match.</source>
          <target state="translated">FindReaderIndex возвращает двухэлементный срез целых чисел,определяющий расположение крайнего левого совпадения регулярного выражения в тексте,читаемом из RuneReader.Соответствующий текст найден во входном потоке при смещении байтов loc[0]через loc[1]-1.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="1d35aea7e01a3055400cfb5abc273aa2a48d9a9f" translate="yes" xml:space="preserve">
          <source>FindReaderSubmatchIndex returns a slice holding the index pairs identifying the leftmost match of the regular expression of text read by the RuneReader, and the matches, if any, of its subexpressions, as defined by the 'Submatch' and 'Index' descriptions in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindReaderSubmatchIndex возвращает фрагмент,содержащий индексные пары,идентифицирующие самое левое совпадение регулярного выражения текста,прочитанного RuneReader,и совпадения,если таковые имеются,его подвыражения,как это определено описаниями 'Submatch' и 'Index' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="e9a327cf77fbaf9bbe1a604d4bcf583f4d07fb1a" translate="yes" xml:space="preserve">
          <source>FindString returns a string holding the text of the leftmost match in s of the regular expression. If there is no match, the return value is an empty string, but it will also be empty if the regular expression successfully matches an empty string. Use FindStringIndex or FindStringSubmatch if it is necessary to distinguish these cases.</source>
          <target state="translated">FindString возвращает строку,удерживающую текст самого левого совпадения в s регулярного выражения.Если совпадений нет,возвращаемое значение является пустой строкой,но оно также будет пустым,если регулярное выражение успешно совпадет с пустой строкой.Используйте FindStringIndex или FindStringSubmatch,если необходимо различать эти случаи.</target>
        </trans-unit>
        <trans-unit id="531bff01dd38db5d072dffaff07b7a369f4e48aa" translate="yes" xml:space="preserve">
          <source>FindStringIndex returns a two-element slice of integers defining the location of the leftmost match in s of the regular expression. The match itself is at s[loc[0]:loc[1]]. A return value of nil indicates no match.</source>
          <target state="translated">FindStringIndex возвращает двухэлементный срез целых чисел,определяющий расположение крайнего левого совпадения в s регулярного выражения.Само совпадение находится в s[loc[0]:loc[1]].Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="a789ded76b89d56fcfc993f95abd7a8461164bf2" translate="yes" xml:space="preserve">
          <source>FindStringSubmatch returns a slice of strings holding the text of the leftmost match of the regular expression in s and the matches, if any, of its subexpressions, as defined by the 'Submatch' description in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindStringSubmatch возвращает кусок строки,содержащей текст самого левого совпадения регулярного выражения в s и совпадения,если таковые имеются,его подвыражения,как определено описанием 'Submatch' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="716a3ff38a9d712fef426438e6f03f83ab81e7b5" translate="yes" xml:space="preserve">
          <source>FindStringSubmatchIndex returns a slice holding the index pairs identifying the leftmost match of the regular expression in s and the matches, if any, of its subexpressions, as defined by the 'Submatch' and 'Index' descriptions in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindStringSubmatchIndex возвращает фрагмент,содержащий пары индексов,идентифицирующие самое левое совпадение регулярного выражения в s и совпадения,если таковые имеются,его подвыражения,как это определено описаниями 'Submatch' и 'Index' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="ffa69da36fb7ee45dba39b18243a0f710f826bb2" translate="yes" xml:space="preserve">
          <source>FindSubmatch returns a slice of slices holding the text of the leftmost match of the regular expression in b and the matches, if any, of its subexpressions, as defined by the 'Submatch' descriptions in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindSubmatch возвращает фрагмент фрагментов,содержащих текст самого левого совпадения регулярного выражения в b и совпадения,если таковые имеются,его подвыражения,как определено описанием 'Submatch' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="7965df00e3cbe474d92d31bb0bd5221f067573f7" translate="yes" xml:space="preserve">
          <source>FindSubmatchIndex returns a slice holding the index pairs identifying the leftmost match of the regular expression in b and the matches, if any, of its subexpressions, as defined by the 'Submatch' and 'Index' descriptions in the package comment. A return value of nil indicates no match.</source>
          <target state="translated">FindSubmatchIndex возвращает фрагмент,содержащий пары индексов,идентифицирующие самое левое совпадение регулярного выражения в b и совпадения,если таковые имеются,его подвыражения,как это определено описаниями 'Submatch' и 'Index' в комментарии к пакету.Возвращаемое значение nil указывает на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="316c8fcfd0429ed17b8857dd6ccdd403f5640491" translate="yes" xml:space="preserve">
          <source>Fix re-establishes the heap ordering after the element at index i has changed its value. Changing the value of the element at index i and then calling Fix is equivalent to, but less expensive than, calling Remove(h, i) followed by a Push of the new value. The complexity is O(log n) where n = h.Len().</source>
          <target state="translated">Исправление восстанавливает порядок кучи после того,как элемент в индексе i изменил свое значение.Изменение значения элемента в индексе i и последующий вызов Fix эквивалентны,но дешевле,чем вызов Remove(h,i)с последующим толчком нового значения.Сложность заключается в O(log n),где n=h.Len().</target>
        </trans-unit>
        <trans-unit id="3d7cfcda1db5ca5e3bcb0a9677bf0dd4d80ac6e4" translate="yes" xml:space="preserve">
          <source>FixedZone</source>
          <target state="translated">FixedZone</target>
        </trans-unit>
        <trans-unit id="d8dd9f2c3ea7d8b26856edf904ee0771c7d5fc47" translate="yes" xml:space="preserve">
          <source>FixedZone returns a Location that always uses the given zone name and offset (seconds east of UTC).</source>
          <target state="translated">FixedZone возвращает Местоположение,которое всегда использует заданное имя зоны и смещение (в секундах к востоку от UTC).</target>
        </trans-unit>
        <trans-unit id="08425e752eb21d741faf32b7c85e71d44fa0561c" translate="yes" xml:space="preserve">
          <source>Flag names must be unique within a FlagSet. An attempt to define a flag whose name is already in use will cause a panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7a643e1bb2320ed4f231588740bf7ac2e291cd" translate="yes" xml:space="preserve">
          <source>Flag parsing stops just before the first non-flag argument (&quot;-&quot; is a non-flag argument) or after the terminator &quot;--&quot;.</source>
          <target state="translated">Разбор флага прекращается непосредственно перед первым нефлаговым аргументом (&quot;-&quot;-это нефлаговый аргумент)или после терминатора &quot;--&quot;.</target>
        </trans-unit>
        <trans-unit id="6fdd311ef8e9ef566cf48b8fece102302ba2cc48" translate="yes" xml:space="preserve">
          <source>Flags are ignored by verbs that do not expect them. For example there is no alternate decimal format, so %#d and %d behave identically.</source>
          <target state="translated">Флаги игнорируются глаголами,которые их не ожидают.Например,нет альтернативного десятичного формата,поэтому %#d и %d ведут себя одинаково.</target>
        </trans-unit>
        <trans-unit id="af3386ff8f43c1696f153b0da6ee0a837cb1976a" translate="yes" xml:space="preserve">
          <source>Flags control the behavior of the parser and record information about regexp context.</source>
          <target state="translated">Флаги контролируют поведение синтаксического анализатора и записывают информацию о контексте регенерации.</target>
        </trans-unit>
        <trans-unit id="16c488a94448ea7f6f8bcea47a1cbbb9b2216fc9" translate="yes" xml:space="preserve">
          <source>Flags may then be used directly. If you're using the flags themselves, they are all pointers; if you bind to variables, they're values.</source>
          <target state="translated">Флаги можно использовать непосредственно.Если вы используете сами флаги,то все они являются указателями;если вы привязываете их к переменным,то это значения.</target>
        </trans-unit>
        <trans-unit id="8b5f3f5f47f0c72df0bc10a5003e3c8534841d99" translate="yes" xml:space="preserve">
          <source>Flags returns the output flags for the logger.</source>
          <target state="translated">Флаги возвращают выходные флаги для регистратора.</target>
        </trans-unit>
        <trans-unit id="f6c4e9587ed10cf97056188e5fee0abe91201a63" translate="yes" xml:space="preserve">
          <source>Flags returns the output flags for the logger. The flag bits are Ldate, Ltime, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab784ad102a2c124d297f0684145d0588e53e2ce" translate="yes" xml:space="preserve">
          <source>Flags returns the output flags for the standard logger.</source>
          <target state="translated">Флаги возвращают флаги вывода для стандартного регистратора.</target>
        </trans-unit>
        <trans-unit id="2fc6ca1c2bb40c98076e96a0885f4d91179665d9" translate="yes" xml:space="preserve">
          <source>Flags returns the output flags for the standard logger. The flag bits are Ldate, Ltime, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49886552d225c91289351966a030fb2ce1479645" translate="yes" xml:space="preserve">
          <source>Flags to OpenFile wrapping those of the underlying system. Not all flags may be implemented on a given system.</source>
          <target state="translated">Флаги к OpenFile,обертывающие флаги базовой системы.Не все флаги могут быть реализованы в данной системе.</target>
        </trans-unit>
        <trans-unit id="e4dce7c8ab9c22a7b9475e937cb3027b98a99140" translate="yes" xml:space="preserve">
          <source>Float (Shift)</source>
          <target state="translated">Поплавок (Shift)</target>
        </trans-unit>
        <trans-unit id="44e98719e5ce5b2d4401b4abb5dc0f8819be8a88" translate="yes" xml:space="preserve">
          <source>Float is a 64-bit float variable that satisfies the Var interface.</source>
          <target state="translated">Float-64-битная переменная с плавающей запятой,удовлетворяющая интерфейсу Var.</target>
        </trans-unit>
        <trans-unit id="10efe1f5142078fa491d28fd6eb4b8558bc300d7" translate="yes" xml:space="preserve">
          <source>Float returns the value v as a float64. It panics if v is not a JavaScript number.</source>
          <target state="translated">Float возвращает значение v как float64.Он паникует,если v не является JavaScript номером.</target>
        </trans-unit>
        <trans-unit id="8ce5b8413e70edd589cd645e2e4c3403f1aae941" translate="yes" xml:space="preserve">
          <source>Float returns v's underlying value, as a float64. It panics if v's Kind is not Float32 or Float64</source>
          <target state="translated">Float возвращает базовое значение v,как float64.Он паникует,если v's Kind не является Float32 или Float64.</target>
        </trans-unit>
        <trans-unit id="eeec2beb5f657aee9f544ee180ec6e738a4d2d1a" translate="yes" xml:space="preserve">
          <source>Float.Add</source>
          <target state="translated">Float.Add</target>
        </trans-unit>
        <trans-unit id="ad02b5997c5669d53745f3d1c236de0ca407890e" translate="yes" xml:space="preserve">
          <source>Float.Cmp</source>
          <target state="translated">Float.Cmp</target>
        </trans-unit>
        <trans-unit id="fec48acd5df26f0383b2951f8c9e9ae9c4ff8998" translate="yes" xml:space="preserve">
          <source>Float.Scan</source>
          <target state="translated">Float.Scan</target>
        </trans-unit>
        <trans-unit id="b29933c6b53142cadd8d7b922f23fae52793b020" translate="yes" xml:space="preserve">
          <source>Float32 returns the float32 value nearest to x. If x is too small to be represented by a float32 (|x| &amp;lt; math.SmallestNonzeroFloat32), the result is (0, Below) or (-0, Above), respectively, depending on the sign of x. If x is too large to be represented by a float32 (|x| &amp;gt; math.MaxFloat32), the result is (+Inf, Above) or (-Inf, Below), depending on the sign of x.</source>
          <target state="translated">Float32 возвращает ближайшее к x значение float32. Если x слишком мало для представления float32 (| x | &amp;lt;math.SmallestNonzeroFloat32), результатом будет (0, Ниже) или (-0, Выше), соответственно, в зависимости от знака x. Если x слишком велик для представления float32 (| x |&amp;gt; math.MaxFloat32), результатом будет (+ Inf, Above) или (-Inf, Lower), в зависимости от знака x.</target>
        </trans-unit>
        <trans-unit id="f0d283c114b964a75d4c408e464182f402cb0b18" translate="yes" xml:space="preserve">
          <source>Float32 returns the nearest float32 value for x and a bool indicating whether f represents x exactly. If the magnitude of x is too large to be represented by a float32, f is an infinity and exact is false. The sign of f always matches the sign of x, even if f == 0.</source>
          <target state="translated">Float32 возвращает ближайшее значение float32 для x и шерсть,указывающую,точно ли f представляет x.Если величина x слишком велика,чтобы быть представленным с плавающей точкой32,то f-это бесконечность,а точность-ложь.Знак f всегда совпадает со знаком x,даже если f ==0.</target>
        </trans-unit>
        <trans-unit id="eb048248df2600ce9ef5e83d147f9a17ca26adc9" translate="yes" xml:space="preserve">
          <source>Float32 returns, as a float32, a pseudo-random number in [0.0,1.0) from the default Source.</source>
          <target state="translated">Float32 возвращает в качестве float32 псевдослучайное число в [0.0,1.0]из источника по умолчанию.</target>
        </trans-unit>
        <trans-unit id="119557e6710e4b086bbd4a2b0b1939505b2ba07f" translate="yes" xml:space="preserve">
          <source>Float32 returns, as a float32, a pseudo-random number in [0.0,1.0).</source>
          <target state="translated">Float32 возвращает,как float32,псевдослучайное число в [0.0,1.0].</target>
        </trans-unit>
        <trans-unit id="4b84b66f83430db58763aa54b8b6d03936e54bbe" translate="yes" xml:space="preserve">
          <source>Float32Val is like Float64Val but for float32 instead of float64.</source>
          <target state="translated">Float32Val похож на Float64Val,но для float32 вместо float64.</target>
        </trans-unit>
        <trans-unit id="105737d03460ae3ded6de0ef2ecd36f638e30d1b" translate="yes" xml:space="preserve">
          <source>Float32bits returns the IEEE 754 binary representation of f, with the sign bit of f and the result in the same bit position. Float32bits(Float32frombits(x)) == x.</source>
          <target state="translated">Float32bits возвращает в IEEE 754 двоичное представление f,со знаковым битом f и результатом в той же самой позиции бита.Float32bits(Float32frombits(x))==x.</target>
        </trans-unit>
        <trans-unit id="7a6760b22e35a08f8123f6341f83087ea51bc753" translate="yes" xml:space="preserve">
          <source>Float32frombits returns the floating-point number corresponding to the IEEE 754 binary representation b, with the sign bit of b and the result in the same bit position. Float32frombits(Float32bits(x)) == x.</source>
          <target state="translated">Float32frombits возвращает число с плавающей точкой,соответствующее двоичному представлению IEEE 754 b,со знаковым битом b и результатом в той же самой позиции бита.Float32frombits(Float32bits(x))==x.</target>
        </trans-unit>
        <trans-unit id="e33f8d6b4fe7a74df8d041793f6b8728167aa373" translate="yes" xml:space="preserve">
          <source>Float64 defines a float64 flag with specified name, default value, and usage string. The return value is the address of a float64 variable that stores the value of the flag.</source>
          <target state="translated">Float64 определяет флаг float64 с указанным именем,значением по умолчанию и строкой использования.Возвращаемое значение-это адрес переменной float64,в которой хранится значение флага.</target>
        </trans-unit>
        <trans-unit id="932e539e33ca068476000955a48af619cccb5721" translate="yes" xml:space="preserve">
          <source>Float64 returns the float64 value nearest to x. If x is too small to be represented by a float64 (|x| &amp;lt; math.SmallestNonzeroFloat64), the result is (0, Below) or (-0, Above), respectively, depending on the sign of x. If x is too large to be represented by a float64 (|x| &amp;gt; math.MaxFloat64), the result is (+Inf, Above) or (-Inf, Below), depending on the sign of x.</source>
          <target state="translated">Float64 возвращает значение float64, ближайшее к x. Если x слишком мало для представления float64 (| x | &amp;lt;math.SmallestNonzeroFloat64), результатом будет (0, Ниже) или (-0, Выше), соответственно, в зависимости от знака x. Если x слишком велик для представления float64 (| x |&amp;gt; math.MaxFloat64), результатом будет (+ Inf, Above) или (-Inf, Lower), в зависимости от знака x.</target>
        </trans-unit>
        <trans-unit id="9246cdfb5427d2669759af0d644a975a43bcf09a" translate="yes" xml:space="preserve">
          <source>Float64 returns the nearest float64 value for x and a bool indicating whether f represents x exactly. If the magnitude of x is too large to be represented by a float64, f is an infinity and exact is false. The sign of f always matches the sign of x, even if f == 0.</source>
          <target state="translated">Float64 возвращает ближайшее значение float64 для x и bool,указывающее,точно ли f представляет x.Если величина x слишком велика,чтобы быть представленным с плавающей точкой,то f-это бесконечность,а точность-ложь.Знак f всегда совпадает со знаком x,даже если f ==0.</target>
        </trans-unit>
        <trans-unit id="fb72db19ea2b309695153285bf2c38294276e222" translate="yes" xml:space="preserve">
          <source>Float64 returns the number as a float64.</source>
          <target state="translated">Float64 возвращает число как float64.</target>
        </trans-unit>
        <trans-unit id="20e645bfba6b519f6d6f9f504b9c2a836ed66b68" translate="yes" xml:space="preserve">
          <source>Float64 returns, as a float64, a pseudo-random number in [0.0,1.0) from the default Source.</source>
          <target state="translated">Float64 возвращает,как float64,псевдослучайное число в [0.0,1.0)из источника по умолчанию.</target>
        </trans-unit>
        <trans-unit id="39abd5b0f47630ce640acfdfa7a56a26bd48772c" translate="yes" xml:space="preserve">
          <source>Float64 returns, as a float64, a pseudo-random number in [0.0,1.0).</source>
          <target state="translated">Float64 возвращает,как float64,псевдослучайное число в [0.0,1.0).</target>
        </trans-unit>
        <trans-unit id="653daf75fab3a49fdd7213b2a24c9eb000e8f80b" translate="yes" xml:space="preserve">
          <source>Float64Slice attaches the methods of Interface to []float64, sorting in increasing order (not-a-number values are treated as less than other values).</source>
          <target state="translated">Float64Slice присоединяет методы интерфейса к []float64,сортируя в порядке возрастания (значения не-а числа рассматриваются как меньшие,чем другие значения).</target>
        </trans-unit>
        <trans-unit id="6d5aaf48b420a680701da91064c2099910f7a459" translate="yes" xml:space="preserve">
          <source>Float64Val returns the nearest Go float64 value of x and whether the result is exact; x must be numeric or an Unknown, but not Complex. For values too small (too close to 0) to represent as float64, Float64Val silently underflows to 0. The result sign always matches the sign of x, even for 0. If x is Unknown, the result is (0, false).</source>
          <target state="translated">Float64Val возвращает ближайшее к Go float64 значение x и точный ли результат;x должен быть числовым или Неизвестным,но не Сложным.Для значений слишком маленьких (слишком близких к 0),чтобы представлять как float64,Float64Val молчаливо опускается ниже 0.Знак результата всегда совпадает со знаком x,даже для 0.Если x неизвестен,то результат будет (0,false).</target>
        </trans-unit>
        <trans-unit id="f480bc564117c47157609272dad009564b4f9701" translate="yes" xml:space="preserve">
          <source>Float64Var defines a float64 flag with specified name, default value, and usage string. The argument p points to a float64 variable in which to store the value of the flag.</source>
          <target state="translated">Float64Var определяет флаг float64 с указанным именем,значением по умолчанию и строкой использования.Аргумент p указывает на переменную float64,в которой будет храниться значение флага.</target>
        </trans-unit>
        <trans-unit id="5b76d09c27fdfd38a6732c012baed4272833ca08" translate="yes" xml:space="preserve">
          <source>Float64bits returns the IEEE 754 binary representation of f, with the sign bit of f and the result in the same bit position, and Float64bits(Float64frombits(x)) == x.</source>
          <target state="translated">Float64bits возвращает в IEEE 754 двоичное представление f,со знаковым битом f и результатом в той же битовой позиции,а Float64bits(Float64frombits(x))==x.</target>
        </trans-unit>
        <trans-unit id="13821cdc42fa2ea9b35bbae95ee0c4f0016322fc" translate="yes" xml:space="preserve">
          <source>Float64frombits returns the floating-point number corresponding to the IEEE 754 binary representation b, with the sign bit of b and the result in the same bit position. Float64frombits(Float64bits(x)) == x.</source>
          <target state="translated">Float64frombits возвращает число с плавающей точкой,соответствующее двоичному представлению IEEE 754 b,со знаковым битом b и результатом в той же самой позиции бита.Float64frombits(Float64bits(x))==x.</target>
        </trans-unit>
        <trans-unit id="9528abfae7394b5c9ba7f685b93bd097bf04d6fb" translate="yes" xml:space="preserve">
          <source>Float64s</source>
          <target state="translated">Float64s</target>
        </trans-unit>
        <trans-unit id="6d807816d1f16d759e0177078b58ba0a3f78cc89" translate="yes" xml:space="preserve">
          <source>Float64s sorts a slice of float64s in increasing order (not-a-number values are treated as less than other values).</source>
          <target state="translated">Float64s сортирует кусочек float64s в порядке возрастания (значения без номера рассматриваются как меньшие по сравнению с другими значениями).</target>
        </trans-unit>
        <trans-unit id="423599a7986fad94bdc1d6990e093d25432d1712" translate="yes" xml:space="preserve">
          <source>Float64sAreSorted</source>
          <target state="translated">Float64sAreSorted</target>
        </trans-unit>
        <trans-unit id="4b88d9ca0f421f91022935615e41cacbe0162795" translate="yes" xml:space="preserve">
          <source>Float64sAreSorted tests whether a slice of float64s is sorted in increasing order (not-a-number values are treated as less than other values).</source>
          <target state="translated">Float64sAreSorted проверяет,отсортирован ли кусок float64s в порядке возрастания (значения не по нулям рассматриваются как меньшие,чем другие значения).</target>
        </trans-unit>
        <trans-unit id="2d47ae20529c410d30f8acaae289ca9d51484938" translate="yes" xml:space="preserve">
          <source>FloatString returns a string representation of x in decimal form with prec digits of precision after the radix point. The last digit is rounded to nearest, with halves rounded away from zero.</source>
          <target state="translated">FloatString возвращает строковое представление x в десятичном виде с прецизионными разрядами точности после точки радиуса.Последняя цифра округляется до ближайшей,половина округляется от нуля.</target>
        </trans-unit>
        <trans-unit id="05a1f94d542ff10ae04a25aa8e277a76154c76d0" translate="yes" xml:space="preserve">
          <source>FloatType is here for the purposes of documentation only. It is a stand-in for either float type: float32 or float64.</source>
          <target state="translated">FloatType здесь только для документации.Он является дублером для любого типа float:float32 или float64.</target>
        </trans-unit>
        <trans-unit id="062cea8bd0e8167673b6851fa82870b7db8d7c76" translate="yes" xml:space="preserve">
          <source>Floating point, integer, and Number values encode as JSON numbers.</source>
          <target state="translated">Значения с плавающей точкой,целое и число кодируются как JSON-номера.</target>
        </trans-unit>
        <trans-unit id="d8d6ee865f2a29fd1629088910ea491c9698ff5c" translate="yes" xml:space="preserve">
          <source>Floating-point and complex constituents:</source>
          <target state="translated">Плавучая точка и сложные составляющие:</target>
        </trans-unit>
        <trans-unit id="b844d202032ef470ba06e9916c2c520ac0ae8998" translate="yes" xml:space="preserve">
          <source>Floating-point limit values. Max is the largest finite value representable by the type. SmallestNonzero is the smallest positive, non-zero value representable by the type.</source>
          <target state="translated">Предельные значения с плавающей точкой.Макс-наибольшее конечное значение,представляемое по типу.Наименьшее ненулевое значение-наименьшее положительное,ненулевое значение,представляемое по типу.</target>
        </trans-unit>
        <trans-unit id="58315571a008eb8b389dc1e86460decd0968399f" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are always sent as a representation of a float64 value. That value is converted to a uint64 using math.Float64bits. The uint64 is then byte-reversed and sent as a regular unsigned integer. The byte-reversal means the exponent and high-precision part of the mantissa go first. Since the low bits are often zero, this can save encoding bytes. For instance, 17.0 is encoded in only three bytes (FE 31 40).</source>
          <target state="translated">Числа с плавающей точкой всегда посылаются как представление значения с плавающей точкой64.Это значение преобразуется в uint64 с помощью math.Float64bits.Затем uint64 перепроверяется байтами и передается как обычное беззнаковое целое число.Байт-обратный перевод означает,что сначала идет экспонента и высокоточная часть мантиссы.Так как младшие биты часто равны нулю,то это может сэкономить байты кодировки.Например,17.0 кодируется всего в трех байтах (FE 31 40).</target>
        </trans-unit>
        <trans-unit id="7db82f74092fc3160e6bc0d9e9bd4849c5c06c0f" translate="yes" xml:space="preserve">
          <source>Floor</source>
          <target state="translated">Floor</target>
        </trans-unit>
        <trans-unit id="ecdffd0cc36f2aad9aef8da98d7fbdd7cd3a98c8" translate="yes" xml:space="preserve">
          <source>Floor returns the greatest integer value less than or equal to x.</source>
          <target state="translated">Floor возвращает наибольшее целое значение меньше или равное x.</target>
        </trans-unit>
        <trans-unit id="563e65b909d8ae6e49711cd799a32c5eb753dc00" translate="yes" xml:space="preserve">
          <source>FloydSteinberg is a Drawer that is the Src Op with Floyd-Steinberg error diffusion.</source>
          <target state="translated">FloydSteinberg-это Drawer,который является Src Op с диффузией ошибок Floyd-Steinberg.</target>
        </trans-unit>
        <trans-unit id="589b0d2e5704bd529f61be95ef5544d324be7a14" translate="yes" xml:space="preserve">
          <source>Flush finishes writing the current file's block padding. The current file must be fully written before Flush can be called.</source>
          <target state="translated">Флеш заканчивает запись блока блока текущего файла.Текущий файл должен быть полностью записан перед вызовом Flush.</target>
        </trans-unit>
        <trans-unit id="843ff9ecc07dad8fd240920fbaff659c8bd3b2af" translate="yes" xml:space="preserve">
          <source>Flush flushes any buffered XML to the underlying writer. See the EncodeToken documentation for details about when it is necessary.</source>
          <target state="translated">Промойте любой буферизованный XML к основному пишущему устройству.Подробнее о том,когда это необходимо,смотрите документацию EncodeToken.</target>
        </trans-unit>
        <trans-unit id="7757e81dddaaa31ce1e5de4d9b235a8f3a0853cd" translate="yes" xml:space="preserve">
          <source>Flush flushes any buffered data to the underlying writer. Calling Flush is not normally necessary; calling Close is sufficient.</source>
          <target state="translated">Промойте все буферизованные данные к базовому пишущему устройству.Вызов Flush обычно не требуется,достаточно вызова Close.</target>
        </trans-unit>
        <trans-unit id="96dda344b5d691957686f7fdb72b5295f5fa20bb" translate="yes" xml:space="preserve">
          <source>Flush flushes any pending compressed data to the underlying writer.</source>
          <target state="translated">Промойте все отложенные сжатые данные в соответствующий записывающее устройство.</target>
        </trans-unit>
        <trans-unit id="3d5ed753caad4196a8e88cd94331064662192c20" translate="yes" xml:space="preserve">
          <source>Flush flushes any pending data to the underlying writer. It is useful mainly in compressed network protocols, to ensure that a remote reader has enough data to reconstruct a packet. Flush does not return until the data has been written. Calling Flush when there is no pending data still causes the Writer to emit a sync marker of at least 4 bytes. If the underlying writer returns an error, Flush returns that error.</source>
          <target state="translated">Промойте все отложенные данные в соответствующий записывающее устройство.Это полезно в основном в сжатых сетевых протоколах,чтобы гарантировать,что удаленный читатель имеет достаточно данных для восстановления пакета.Flush не возвращается до тех пор,пока данные не будут записаны.Вызов Flush,когда отложенные данные все еще отсутствуют,приводит к тому,что записывающее устройство выдает маркер синхронизации размером не менее 4 байт.Если записывающее устройство возвращает ошибку,Flush возвращает ее.</target>
        </trans-unit>
        <trans-unit id="18258ea43eb9026bfa3ba6a07c0a3a31739171f2" translate="yes" xml:space="preserve">
          <source>Flush flushes the Writer to its underlying io.Writer.</source>
          <target state="translated">Промойте Писателя к его основному io.Writer.</target>
        </trans-unit>
        <trans-unit id="729311d07e8c1334af4a5f862a0dd14b0dd93238" translate="yes" xml:space="preserve">
          <source>Flush implements http.Flusher. To test whether Flush was called, see rw.Flushed.</source>
          <target state="translated">Флеш-орудия http.Flushher.Чтобы проверить,назывался ли Flush,см.rw.Flush.</target>
        </trans-unit>
        <trans-unit id="5d24f3ea0b3c10e2043b05ee2cd79df1306cedcb" translate="yes" xml:space="preserve">
          <source>Flush should be called after the last call to Write to ensure that any data buffered in the Writer is written to output. Any incomplete escape sequence at the end is considered complete for formatting purposes.</source>
          <target state="translated">Flush следует вызывать после последнего вызова Write,чтобы убедиться,что все данные,заложенные в Writer,будут записаны на вывод.Любая неполная экранирующая последовательность в конце считается полной для целей форматирования.</target>
        </trans-unit>
        <trans-unit id="ea94514228dc595c44d2b25610d0fa2d54b246e4" translate="yes" xml:space="preserve">
          <source>Flush writes any buffered data to the underlying io.Writer.</source>
          <target state="translated">Flush записывает любые буферизованные данные в основной io.Writer.</target>
        </trans-unit>
        <trans-unit id="ae89e3b744d5bf8ef751ee2c788427617846f85a" translate="yes" xml:space="preserve">
          <source>Flush writes any buffered data to the underlying io.Writer. To check if an error occurred during the Flush, call Error.</source>
          <target state="translated">Flush записывает любые буферизованные данные в основной io.Writer.Чтобы проверить,не произошла ли ошибка во время Flush,вызовите Error.</target>
        </trans-unit>
        <trans-unit id="9f472a0c2c904654bddc286404214aebce731987" translate="yes" xml:space="preserve">
          <source>FlushAfterChunkWriter signals from the caller of NewChunkedWriter that each chunk should be followed by a flush. It is used by the http.Transport code to keep the buffering behavior for headers and trailers, but flush out chunks aggressively in the middle for request bodies which may be generated slowly. See Issue 6574.</source>
          <target state="translated">FlushAfterChunkWriter сигнализирует вызывающему абоненту NewChunkedWriter,что за каждым фрагментом должен следовать флеш.Он используется http.Transport кодом для сохранения поведения буферизации для заголовков и трейлеров,но агрессивно вымывает куски посередине для тел запросов,которые могут генерироваться медленно.См.выпуск 6574.</target>
        </trans-unit>
        <trans-unit id="772a9c77dc26ab2b684cccb97da47b2e2cdf95ac" translate="yes" xml:space="preserve">
          <source>FoldCategory maps a category name to a table of code points outside the category that are equivalent under simple case folding to code points inside the category. If there is no entry for a category name, there are no such points.</source>
          <target state="translated">FoldCategory сопоставляет название категории с таблицей кодовых точек вне категории,которые эквивалентны при простом сворачивании в регистр кодовых точек внутри категории.Если для названия категории нет записи,то таких точек нет.</target>
        </trans-unit>
        <trans-unit id="3df43e93d81327f2c6837f681b29802a81ed9d8c" translate="yes" xml:space="preserve">
          <source>FoldScript maps a script name to a table of code points outside the script that are equivalent under simple case folding to code points inside the script. If there is no entry for a script name, there are no such points.</source>
          <target state="translated">FoldScript отображает имя скрипта в таблицу кодовых точек за пределами скрипта,которые эквивалентны при простом сворачивании в регистр кодовых точек внутри скрипта.Если для имени скрипта нет записи,то таких точек нет.</target>
        </trans-unit>
        <trans-unit id="2a306a62652b9cfbec638f004e0203911d315836" translate="yes" xml:space="preserve">
          <source>For IP networks, the network must be &quot;ip&quot;, &quot;ip4&quot; or &quot;ip6&quot; followed by a colon and a literal protocol number or a protocol name, and the address has the form &quot;host&quot;. The host must be a literal IP address or a literal IPv6 address with zone. It depends on each operating system how the operating system behaves with a non-well known protocol number such as &quot;0&quot; or &quot;255&quot;.</source>
          <target state="translated">Для IP-сетей сеть должна быть &quot;ip&quot;,&quot;ip4&quot; или &quot;ip6&quot;,за которым следует двоеточие и буквальный номер протокола или имя протокола,а адрес имеет форму &quot;host&quot;.Хост должен быть буквальным IP-адресом или буквальным IPv6-адресом с зоной.Это зависит от каждой операционной системы,как операционная система ведет себя с не очень известным номером протокола,таким как &quot;0&quot; или &quot;255&quot;.</target>
        </trans-unit>
        <trans-unit id="a986939ec86bd91233d7b82449d187d316efcfcb" translate="yes" xml:space="preserve">
          <source>For POST, PUT, and PATCH requests, it also parses the request body as a form and puts the results into both r.PostForm and r.Form. Request body parameters take precedence over URL query string values in r.Form.</source>
          <target state="translated">Для POST,PUT и PATCH запросов он также разбирает тело запроса как форму и помещает результаты в r.PostForm и r.Form.Параметры тела запроса имеют приоритет над значениями строки URL запроса в r.Form.</target>
        </trans-unit>
        <trans-unit id="225b1c801f3e5dbb06167528a23dd7b472f86786" translate="yes" xml:space="preserve">
          <source>For POST, PUT, and PATCH requests, it also reads the request body, parses it as a form and puts the results into both r.PostForm and r.Form. Request body parameters take precedence over URL query string values in r.Form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961435f4e8342868021020dbf9e49c6cd0fb855a" translate="yes" xml:space="preserve">
          <source>For TCP and UDP networks, the address has the form &quot;host:port&quot;. The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in &quot;[2001:db8::1]:80&quot; or &quot;[fe80::1%zone]:80&quot;. The zone specifies the scope of the literal IPv6 address as defined in RFC 4007. The functions JoinHostPort and SplitHostPort manipulate a pair of host and port in this form. When using TCP, and the host resolves to multiple IP addresses, Dial will try each IP address in order until one succeeds.</source>
          <target state="translated">Для TCP и UDP сетей адрес имеет форму &quot;host:port&quot;.Хост должен быть буквальным IP-адресом или именем хоста,которое может быть преобразовано в IP-адрес.Порт должен быть буквальным номером порта или именем службы.Если хост является буквальным IPv6 адресом,то он должен быть заключен в квадратные скобки,как в &quot;[2001:db8::1]:80&quot; или &quot;[fe80::1%-зона]:80&quot;.Зона задает границы буквального IPv6-адреса,как определено в RFC 4007.Функции JoinHostPort и SplitHostPort манипулируют парой хостов и портов в этом виде.При использовании TCP,и хост разрешает несколько IP-адресов,Dial будет пробовать каждый IP-адрес в порядке до тех пор,пока один из них не завершится успешно.</target>
        </trans-unit>
        <trans-unit id="03c81916838d3414948e1c22f701e5ce4a3a4855" translate="yes" xml:space="preserve">
          <source>For TCP networks, if the host in the address parameter is empty or a literal unspecified IP address, Listen listens on all available unicast and anycast IP addresses of the local system. To only use IPv4, use network &quot;tcp4&quot;. The address can use a host name, but this is not recommended, because it will create a listener for at most one of the host's IP addresses. If the port in the address parameter is empty or &quot;0&quot;, as in &quot;127.0.0.1:&quot; or &quot;[::1]:0&quot;, a port number is automatically chosen. The Addr method of Listener can be used to discover the chosen port.</source>
          <target state="translated">Для TCP сетей,если хост в параметре адреса пустой или буквально неопределенный IP-адрес,Listen прослушивает все доступные одноадресные и широковещательные IP-адреса локальной системы.Чтобы использовать только IPv4,используйте сеть &quot;tcp4&quot;.Адрес может использовать имя хоста,но это не рекомендуется,так как это создаст слушателя для большинства IP-адресов хостов.Если порт в параметре адреса пустой или &quot;0&quot;,как в &quot;127.0.0.1:&quot; или &quot;[::1]:0&quot;,то номер порта выбирается автоматически.Для обнаружения выбранного порта можно использовать метод Addr Listener.</target>
        </trans-unit>
        <trans-unit id="bc11a7bec3f66f8d391db1eaf65bf359662c3096" translate="yes" xml:space="preserve">
          <source>For TCP, UDP and IP networks, if the host is empty or a literal unspecified IP address, as in &quot;:80&quot;, &quot;0.0.0.0:80&quot; or &quot;[::]:80&quot; for TCP and UDP, &quot;&quot;, &quot;0.0.0.0&quot; or &quot;::&quot; for IP, the local system is assumed.</source>
          <target state="translated">Для TCP,UDP и IP сетей,если хост пуст или буквально не указан IP-адрес,как в &quot;:80&quot;,&quot;0.0.0.0:80&quot; или &quot;[::]:80&quot; для TCP и UDP,&quot;&quot;,&quot;0.0.0.0&quot; или &quot;::&quot; для IP,то предполагается,что локальная система.</target>
        </trans-unit>
        <trans-unit id="f2ddf19f5cd72f2d3b549235c60d91767535d03b" translate="yes" xml:space="preserve">
          <source>For UDP and IP networks, if the host in the address parameter is empty or a literal unspecified IP address, ListenPacket listens on all available IP addresses of the local system except multicast IP addresses. To only use IPv4, use network &quot;udp4&quot; or &quot;ip4:proto&quot;. The address can use a host name, but this is not recommended, because it will create a listener for at most one of the host's IP addresses. If the port in the address parameter is empty or &quot;0&quot;, as in &quot;127.0.0.1:&quot; or &quot;[::1]:0&quot;, a port number is automatically chosen. The LocalAddr method of PacketConn can be used to discover the chosen port.</source>
          <target state="translated">Для UDP и IP сетей,если хост в параметре адреса пуст или буквально неопределенный IP-адрес,ListenPacket прослушивает все доступные IP-адреса локальной системы,за исключением многоадресных IP-адресов.Чтобы использовать только IPv4,используйте сеть &quot;udp4&quot; или &quot;ip4:proto&quot;.Адрес может использовать имя хоста,но это не рекомендуется,так как это создаст прослушиватель для большинства IP-адресов хостов.Если порт в параметре адреса пустой или &quot;0&quot;,как в &quot;127.0.0.1:&quot; или &quot;[::1]:0&quot;,то номер порта выбирается автоматически.Для обнаружения выбранного порта можно использовать метод LocalAddr PacketConn.</target>
        </trans-unit>
        <trans-unit id="4aa2c0bd0a7ad04b8f9986a2d00cc56ef314d18a" translate="yes" xml:space="preserve">
          <source>For Unix networks, the address must be a file system path.</source>
          <target state="translated">Для сетей Unix адрес должен быть указан как путь к файловой системе.</target>
        </trans-unit>
        <trans-unit id="6cd90d9b68fe83f1b691af955f9ccbfffd46f969" translate="yes" xml:space="preserve">
          <source>For a description of the testing flags, see &lt;a href=&quot;https://golang.org/cmd/go/#hdr-Testing_flags&quot;&gt;https://golang.org/cmd/go/#hdr-Testing_flags&lt;/a&gt;</source>
          <target state="translated">Описание флагов тестирования см. На &lt;a href=&quot;https://golang.org/cmd/go/#hdr-Testing_flags&quot;&gt;https://golang.org/cmd/go/#hdr-Testing_flags.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73db7630962b7d9bfe80901d992afe02ab8d444e" translate="yes" xml:space="preserve">
          <source>For a more concise way to create NamedArg values, see the Named function.</source>
          <target state="translated">Более краткий способ создания значений NamedArg см.в разделе Функция NamedArg.</target>
        </trans-unit>
        <trans-unit id="2e93a7b63c6c1c22251cdfa7d2125bbcb4c1d807" translate="yes" xml:space="preserve">
          <source>For a study of the facility in action, visit</source>
          <target state="translated">Для изучения объекта в действии посетите</target>
        </trans-unit>
        <trans-unit id="ea8b0e15d8c10094163cd876f62393b64628d456" translate="yes" xml:space="preserve">
          <source>For a timer created with AfterFunc(d, f), if t.Stop returns false, then the timer has already expired and the function f has been started in its own goroutine; Stop does not wait for f to complete before returning. If the caller needs to know whether f is completed, it must coordinate with f explicitly.</source>
          <target state="translated">Для таймера,созданного с помощью AfterFunc(d,f),если t.Stop возвращает false,то таймер уже истек и функция f была запущена в своем собственном goroutine;Stop не ждет завершения f перед возвращением.Если вызывающему абоненту необходимо знать,завершена ли функция f,то он должен явно согласовывать ее с f.</target>
        </trans-unit>
        <trans-unit id="adbed43366f7734c782e1358f999b46beb1e3fca" translate="yes" xml:space="preserve">
          <source>For a tutorial, see &lt;a href=&quot;https://golang.org/s/types-tutorial&quot;&gt;https://golang.org/s/types-tutorial&lt;/a&gt;.</source>
          <target state="translated">Учебное пособие см. На &lt;a href=&quot;https://golang.org/s/types-tutorial&quot;&gt;https://golang.org/s/types-tutorial&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e18ade19ed4a3115a9d9e3c880c80a5a49514530" translate="yes" xml:space="preserve">
          <source>For all requests, ParseForm parses the raw query from the URL and updates r.Form.</source>
          <target state="translated">Для всех запросов ParseForm разбирает исходный запрос с URL и обновляет r.Form.</target>
        </trans-unit>
        <trans-unit id="a78bb4acd6502d15dc3957871fac3c0be9d9b00b" translate="yes" xml:space="preserve">
          <source>For an abstract method, Recv returns the enclosing interface either as a *Named or an *Interface. Due to embedding, an interface may contain methods whose receiver type is a different interface.</source>
          <target state="translated">Для абстрактного метода Recv возвращает интерфейс в виде *Named или *Interface.Из-за встраивания интерфейс может содержать методы,тип приемника которых отличается от интерфейса.</target>
        </trans-unit>
        <trans-unit id="4e330719ad337b4c9602641929cab60cae09925d" translate="yes" xml:space="preserve">
          <source>For an outgoing client request, the context controls the entire lifetime of a request and its response: obtaining a connection, sending the request, and reading the response headers and body.</source>
          <target state="translated">Для запроса исходящего клиента контекст контролирует весь срок жизни запроса и его ответа:получение соединения,отправка запроса и чтение заголовков и тела ответа.</target>
        </trans-unit>
        <trans-unit id="d8c341cebb2371fc4554d9fb0c6e54c2c5900936" translate="yes" xml:space="preserve">
          <source>For base 0, an underscore character &amp;ldquo;_&amp;rdquo; may appear between a base prefix and an adjacent digit, and between successive digits; such underscores do not change the value of the number, or the returned digit count. Incorrect placement of underscores is reported as an error if there are no other errors. If base != 0, underscores are not recognized and thus terminate scanning like any other character that is not a valid radix point or digit.</source>
          <target state="translated">Для базового 0 символ подчеркивания &amp;laquo;_&amp;raquo; может появляться между базовым префиксом и соседней цифрой, а также между последовательными цифрами; такие подчеркивания не изменяют ни значение числа, ни количество возвращаемых цифр. Неправильное размещение подчеркиваний сообщается как ошибка, если нет других ошибок. Если base! = 0, символы подчеркивания не распознаются и, таким образом, завершают сканирование, как любой другой символ, который не является действительной точкой или цифрой системы счисления.</target>
        </trans-unit>
        <trans-unit id="e5942b37cf590ae4aabd1b760f075ef90fd1c294" translate="yes" xml:space="preserve">
          <source>For base 0, an underscore character &amp;ldquo;_&amp;rdquo; may appear between a base prefix and an adjacent digit, and between successive digits; such underscores do not change the value of the number. Incorrect placement of underscores is reported as an error if there are no other errors. If base != 0, underscores are not recognized and act like any other character that is not a valid digit.</source>
          <target state="translated">Для базового 0 символ подчеркивания &amp;laquo;_&amp;raquo; может появляться между базовым префиксом и соседней цифрой, а также между последовательными цифрами; такие подчеркивания не изменяют значение числа. Неправильное размещение подчеркиваний сообщается как ошибка, если нет других ошибок. Если base! = 0, символы подчеркивания не распознаются и действуют как любой другой символ, который не является допустимой цифрой.</target>
        </trans-unit>
        <trans-unit id="5f1ac8df1f8e77c9fdc27bc0637f8b872484b6a1" translate="yes" xml:space="preserve">
          <source>For base 0, the number prefix determines the actual base: A prefix of &amp;ldquo;0b&amp;rdquo; or &amp;ldquo;0B&amp;rdquo; selects base 2, &amp;ldquo;0o&amp;rdquo; or &amp;ldquo;0O&amp;rdquo; selects base 8, and &amp;ldquo;0x&amp;rdquo; or &amp;ldquo;0X&amp;rdquo; selects base 16. Otherwise, the actual base is 10 and no prefix is accepted. The octal prefix &quot;0&quot; is not supported (a leading &quot;0&quot; is simply considered a &quot;0&quot;).</source>
          <target state="translated">Для базы 0 префикс числа определяет фактическую базу: префикс &amp;laquo;0b&amp;raquo; или &amp;laquo;0B&amp;raquo; выбирает базу 2, &amp;laquo;0o&amp;raquo; или &amp;laquo;0O&amp;raquo; выбирает базу 8, а &amp;laquo;0x&amp;raquo; или &amp;laquo;0X&amp;raquo; выбирает базу 16. В противном случае , фактическое основание - 10, префикс не принимается. Восьмеричный префикс &amp;laquo;0&amp;raquo; не поддерживается (начальный &amp;laquo;0&amp;raquo; просто считается &amp;laquo;0&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="8da96f7777bef60314c708eb513a45527fc86e1a" translate="yes" xml:space="preserve">
          <source>For bases &amp;lt;= 36, lower and upper case letters are considered the same: The letters 'a' to 'z' and 'A' to 'Z' represent digit values 10 to 35. For bases &amp;gt; 36, the upper case letters 'A' to 'Z' represent the digit values 36 to 61.</source>
          <target state="translated">Для оснований &amp;lt;= 36 строчные и прописные буквы считаются одинаковыми: буквы от &amp;laquo;a&amp;raquo; до &amp;laquo;z&amp;raquo; и от &amp;laquo;A&amp;raquo; до &amp;laquo;Z&amp;raquo; представляют собой цифровые значения от 10 до 35. Для оснований&amp;gt; 36 буквы верхнего регистра &amp;raquo; Буквы от A до Z представляют собой цифровые значения от 36 до 61.</target>
        </trans-unit>
        <trans-unit id="1cda30f1e34e7fc3ab26bca0abe9bc827de94de0" translate="yes" xml:space="preserve">
          <source>For calls ForCompiler with a new FileSet.</source>
          <target state="translated">Для звонков в ForCompiler с новым FileSet.</target>
        </trans-unit>
        <trans-unit id="7777ccd24b8bd654eee8980ccc52774364f6122b" translate="yes" xml:space="preserve">
          <source>For compatibility with Go 1.0, Symbols omits the null symbol at index 0. After retrieving the symbols as symtab, an externally supplied index x corresponds to symtab[x-1], not symtab[x].</source>
          <target state="translated">Для совместимости с Go 1.0,Symbols опускает нулевой символ в индексе 0.После получения символов в виде симтаба,внешне поставляемый индекс x соответствует симтабу[x-1],а не симтабу[x].</target>
        </trans-unit>
        <trans-unit id="bd3f39afacd60fc39b35ccda1637af8ff2e8c205" translate="yes" xml:space="preserve">
          <source>For compatibility with Symbols, DynamicSymbols omits the null symbol at index 0. After retrieving the symbols as symtab, an externally supplied index x corresponds to symtab[x-1], not symtab[x].</source>
          <target state="translated">Для совместимости с Symbols,DynamicSymbols опускает нулевой символ в индексе 0.После получения символов в виде симтаба,внешне поставляемый индекс x соответствует симтабу[x-1],а не симтабу[x].</target>
        </trans-unit>
        <trans-unit id="ceff07027a0562aae7bcfc8fafd438b3054bb3ea" translate="yes" xml:space="preserve">
          <source>For complex numbers, the width and precision apply to the two components independently and the result is parenthesized, so %f applied to 1.2+3.4i produces (1.200000+3.400000i).</source>
          <target state="translated">Для комплексных чисел ширина и точность применяются к двум компонентам независимо друг от друга,а результат получается в скобках,поэтому %f применяется к 1.2+3.4i производит (1.200000+3.400000i).</target>
        </trans-unit>
        <trans-unit id="9b540b6ad368c9fd7ce41d2cd5a4983671593e81" translate="yes" xml:space="preserve">
          <source>For compound objects, the elements are printed using these rules, recursively, laid out like this:</source>
          <target state="translated">Для составных объектов элементы распечатываются по этим правилам,рекурсивно,выкладываются таким образом:</target>
        </trans-unit>
        <trans-unit id="33fb692c25f138c6447e3086029bcccc81bc7da5" translate="yes" xml:space="preserve">
          <source>For compound operands such as slices and structs, the format applies to the elements of each operand, recursively, not to the operand as a whole. Thus %q will quote each element of a slice of strings, and %6.2f will control formatting for each element of a floating-point array.</source>
          <target state="translated">Для составных операндов,таких как фрагменты и структуры,формат применяется к элементам каждого операнда,рекурсивно,а не к операнду в целом.Таким образом,%q процитирует каждый элемент среза строки,а %6.2f будет управлять форматированием для каждого элемента массива с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="5cab5826d638fdbcb2ad7a5200731c473b3d7274" translate="yes" xml:space="preserve">
          <source>For control over HTTP client headers, redirect policy, and other settings, create a Client:</source>
          <target state="translated">Для управления заголовками HTTP-клиента,политикой перенаправления и другими параметрами создайте Клиента:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
