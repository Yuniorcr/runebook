<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="go">
    <body>
      <group id="go">
        <trans-unit id="43243a35f64e5a44f10f6f545e132e24f618a10f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/runtime/trace/annotation.go&quot;&gt;annotation.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/runtime/trace/trace.go&quot;&gt;trace.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/runtime/trace/annotation.go&quot;&gt;annotation.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/runtime/trace/trace.go&quot;&gt;trace.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2297083b24020edce2c657ecf507d3b8c2764f3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/sort/search.go&quot;&gt;search.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/slice.go&quot;&gt;slice.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/slice_go113.go&quot;&gt;slice_go113.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/sort.go&quot;&gt;sort.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/zfuncversion.go&quot;&gt;zfuncversion.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/sort/search.go&quot;&gt;search.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/slice.go&quot;&gt;slice.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/slice_go113.go&quot;&gt;slice_go113.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/sort.go&quot;&gt;sort.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sort/zfuncversion.go&quot;&gt;zfuncversion.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c42781a1c35782fa7b09a1c4e3c0cc00792c05c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/strconv/atob.go&quot;&gt;atob.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoc.go&quot;&gt;atoc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atof.go&quot;&gt;atof.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoi.go&quot;&gt;atoi.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ctoa.go&quot;&gt;ctoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/decimal.go&quot;&gt;decimal.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/eisel_lemire.go&quot;&gt;eisel_lemire.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/extfloat.go&quot;&gt;extfloat.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ftoa.go&quot;&gt;ftoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/isprint.go&quot;&gt;isprint.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/itoa.go&quot;&gt;itoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/quote.go&quot;&gt;quote.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/strconv/atob.go&quot;&gt;atob.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoc.go&quot;&gt;atoc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atof.go&quot;&gt;atof.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoi.go&quot;&gt;atoi.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ctoa.go&quot;&gt;ctoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/decimal.go&quot;&gt;decimal.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/eisel_lemire.go&quot;&gt;eisel_lemire.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/extfloat.go&quot;&gt;extfloat.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ftoa.go&quot;&gt;ftoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/isprint.go&quot;&gt;isprint.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/itoa.go&quot;&gt;itoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/quote.go&quot;&gt;quote.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88514306c90453356f4c4fa4e0a53e0e8bd9494f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/strconv/atob.go&quot;&gt;atob.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoc.go&quot;&gt;atoc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atof.go&quot;&gt;atof.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoi.go&quot;&gt;atoi.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ctoa.go&quot;&gt;ctoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/decimal.go&quot;&gt;decimal.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/extfloat.go&quot;&gt;extfloat.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ftoa.go&quot;&gt;ftoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/isprint.go&quot;&gt;isprint.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/itoa.go&quot;&gt;itoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/quote.go&quot;&gt;quote.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/strconv/atob.go&quot;&gt;atob.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoc.go&quot;&gt;atoc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atof.go&quot;&gt;atof.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoi.go&quot;&gt;atoi.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ctoa.go&quot;&gt;ctoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/decimal.go&quot;&gt;decimal.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/extfloat.go&quot;&gt;extfloat.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ftoa.go&quot;&gt;ftoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/isprint.go&quot;&gt;isprint.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/itoa.go&quot;&gt;itoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/quote.go&quot;&gt;quote.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0757d9b43fbc5beff1deeab1150c8fa64b52e9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/strconv/atob.go&quot;&gt;atob.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atof.go&quot;&gt;atof.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoi.go&quot;&gt;atoi.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/decimal.go&quot;&gt;decimal.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/extfloat.go&quot;&gt;extfloat.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ftoa.go&quot;&gt;ftoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/isprint.go&quot;&gt;isprint.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/itoa.go&quot;&gt;itoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/quote.go&quot;&gt;quote.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/strconv/atob.go&quot;&gt;atob.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atof.go&quot;&gt;atof.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/atoi.go&quot;&gt;atoi.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/decimal.go&quot;&gt;decimal.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/extfloat.go&quot;&gt;extfloat.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/ftoa.go&quot;&gt;ftoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/isprint.go&quot;&gt;isprint.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/itoa.go&quot;&gt;itoa.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strconv/quote.go&quot;&gt;quote.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02075c66c61b4305dbb5c0ade81d0d69aab5ffe4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/strings/builder.go&quot;&gt;builder.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/compare.go&quot;&gt;compare.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/reader.go&quot;&gt;reader.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/replace.go&quot;&gt;replace.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/search.go&quot;&gt;search.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/strings.go&quot;&gt;strings.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/strings/builder.go&quot;&gt;builder.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/compare.go&quot;&gt;compare.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/reader.go&quot;&gt;reader.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/replace.go&quot;&gt;replace.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/search.go&quot;&gt;search.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/strings/strings.go&quot;&gt;strings.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f32bb9c8d2d6d1182b637cd5d57d32548efac5f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/sync/atomic/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/atomic/value.go&quot;&gt;value.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/sync/atomic/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/atomic/value.go&quot;&gt;value.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2bfe8dc535a60e13a37df96f5e77747c5e564d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/sync/cond.go&quot;&gt;cond.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/map.go&quot;&gt;map.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/mutex.go&quot;&gt;mutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/once.go&quot;&gt;once.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/pool.go&quot;&gt;pool.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/poolqueue.go&quot;&gt;poolqueue.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/runtime.go&quot;&gt;runtime.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/runtime2.go&quot;&gt;runtime2.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/rwmutex.go&quot;&gt;rwmutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/waitgroup.go&quot;&gt;waitgroup.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/sync/cond.go&quot;&gt;cond.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/map.go&quot;&gt;map.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/mutex.go&quot;&gt;mutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/once.go&quot;&gt;once.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/pool.go&quot;&gt;pool.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/poolqueue.go&quot;&gt;poolqueue.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/runtime.go&quot;&gt;runtime.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/runtime2.go&quot;&gt;runtime2.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/rwmutex.go&quot;&gt;rwmutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/waitgroup.go&quot;&gt;waitgroup.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1737a096c0291fdc419a351b4c18ab1c2c60bfbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/sync/cond.go&quot;&gt;cond.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/map.go&quot;&gt;map.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/mutex.go&quot;&gt;mutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/once.go&quot;&gt;once.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/pool.go&quot;&gt;pool.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/poolqueue.go&quot;&gt;poolqueue.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/runtime.go&quot;&gt;runtime.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/rwmutex.go&quot;&gt;rwmutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/waitgroup.go&quot;&gt;waitgroup.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/sync/cond.go&quot;&gt;cond.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/map.go&quot;&gt;map.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/mutex.go&quot;&gt;mutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/once.go&quot;&gt;once.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/pool.go&quot;&gt;pool.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/poolqueue.go&quot;&gt;poolqueue.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/runtime.go&quot;&gt;runtime.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/rwmutex.go&quot;&gt;rwmutex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/sync/waitgroup.go&quot;&gt;waitgroup.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d061d19a59eb280e57a7e7f87521357b089b0f17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/syscall/dirent.go&quot;&gt;dirent.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/endian_little.go&quot;&gt;endian_little.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/env_unix.go&quot;&gt;env_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_linux.go&quot;&gt;exec_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_unix.go&quot;&gt;exec_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/flock.go&quot;&gt;flock.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/lsf_linux.go&quot;&gt;lsf_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/msan0.go&quot;&gt;msan0.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/net.go&quot;&gt;net.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/netlink_linux.go&quot;&gt;netlink_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/setuidgid_linux.go&quot;&gt;setuidgid_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sock_cloexec_linux.go&quot;&gt;sock_cloexec_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_linux.go&quot;&gt;sockcmsg_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_unix.go&quot;&gt;sockcmsg_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_unix_other.go&quot;&gt;sockcmsg_unix_other.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/str.go&quot;&gt;str.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall.go&quot;&gt;syscall.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_dup2_linux.go&quot;&gt;syscall_dup2_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux.go&quot;&gt;syscall_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux_amd64.go&quot;&gt;syscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_unix.go&quot;&gt;syscall_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/time_nofake.go&quot;&gt;time_nofake.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/timestruct.go&quot;&gt;timestruct.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zerrors_linux_amd64.go&quot;&gt;zerrors_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsyscall_linux_amd64.go&quot;&gt;zsyscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsysnum_linux_amd64.go&quot;&gt;zsysnum_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/ztypes_linux_amd64.go&quot;&gt;ztypes_linux_amd64.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/syscall/dirent.go&quot;&gt;dirent.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/endian_little.go&quot;&gt;endian_little.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/env_unix.go&quot;&gt;env_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_linux.go&quot;&gt;exec_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_unix.go&quot;&gt;exec_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/flock.go&quot;&gt;flock.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/lsf_linux.go&quot;&gt;lsf_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/msan0.go&quot;&gt;msan0.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/net.go&quot;&gt;net.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/netlink_linux.go&quot;&gt;netlink_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/setuidgid_linux.go&quot;&gt;setuidgid_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sock_cloexec_linux.go&quot;&gt;sock_cloexec_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_linux.go&quot;&gt;sockcmsg_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_unix.go&quot;&gt;sockcmsg_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_unix_other.go&quot;&gt;sockcmsg_unix_other.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/str.go&quot;&gt;str.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall.go&quot;&gt;syscall.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_dup2_linux.go&quot;&gt;syscall_dup2_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux.go&quot;&gt;syscall_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux_amd64.go&quot;&gt;syscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_unix.go&quot;&gt;syscall_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/time_nofake.go&quot;&gt;time_nofake.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/timestruct.go&quot;&gt;timestruct.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zerrors_linux_amd64.go&quot;&gt;zerrors_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsyscall_linux_amd64.go&quot;&gt;zsyscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsysnum_linux_amd64.go&quot;&gt;zsysnum_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/ztypes_linux_amd64.go&quot;&gt;ztypes_linux_amd64.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa7cd10aa56ce12921abb65cdea26fd86039240b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/syscall/dirent.go&quot;&gt;dirent.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/endian_little.go&quot;&gt;endian_little.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/env_unix.go&quot;&gt;env_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_linux.go&quot;&gt;exec_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_unix.go&quot;&gt;exec_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/flock.go&quot;&gt;flock.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/lsf_linux.go&quot;&gt;lsf_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/msan0.go&quot;&gt;msan0.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/net.go&quot;&gt;net.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/netlink_linux.go&quot;&gt;netlink_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/setuidgid_linux.go&quot;&gt;setuidgid_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_linux.go&quot;&gt;sockcmsg_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_unix.go&quot;&gt;sockcmsg_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/str.go&quot;&gt;str.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall.go&quot;&gt;syscall.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux.go&quot;&gt;syscall_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux_amd64.go&quot;&gt;syscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_unix.go&quot;&gt;syscall_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/timestruct.go&quot;&gt;timestruct.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zerrors_linux_amd64.go&quot;&gt;zerrors_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsyscall_linux_amd64.go&quot;&gt;zsyscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsysnum_linux_amd64.go&quot;&gt;zsysnum_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/ztypes_linux_amd64.go&quot;&gt;ztypes_linux_amd64.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/syscall/dirent.go&quot;&gt;dirent.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/endian_little.go&quot;&gt;endian_little.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/env_unix.go&quot;&gt;env_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_linux.go&quot;&gt;exec_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/exec_unix.go&quot;&gt;exec_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/flock.go&quot;&gt;flock.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/lsf_linux.go&quot;&gt;lsf_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/msan0.go&quot;&gt;msan0.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/net.go&quot;&gt;net.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/netlink_linux.go&quot;&gt;netlink_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/setuidgid_linux.go&quot;&gt;setuidgid_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_linux.go&quot;&gt;sockcmsg_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/sockcmsg_unix.go&quot;&gt;sockcmsg_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/str.go&quot;&gt;str.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall.go&quot;&gt;syscall.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux.go&quot;&gt;syscall_linux.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_linux_amd64.go&quot;&gt;syscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/syscall_unix.go&quot;&gt;syscall_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/timestruct.go&quot;&gt;timestruct.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zerrors_linux_amd64.go&quot;&gt;zerrors_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsyscall_linux_amd64.go&quot;&gt;zsyscall_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/zsysnum_linux_amd64.go&quot;&gt;zsysnum_linux_amd64.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/ztypes_linux_amd64.go&quot;&gt;ztypes_linux_amd64.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e248637ca827ba0fee2748cca49f7fbc4c43eee3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/syscall/js/func.go&quot;&gt;func.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/js/js.go&quot;&gt;js.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/syscall/js/func.go&quot;&gt;func.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/syscall/js/js.go&quot;&gt;js.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46fed19306bf09d06cbcaea4df26f30ffd5c4fee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/testing/allocs.go&quot;&gt;allocs.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/benchmark.go&quot;&gt;benchmark.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/cover.go&quot;&gt;cover.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/example.go&quot;&gt;example.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/match.go&quot;&gt;match.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/run_example.go&quot;&gt;run_example.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/testing.go&quot;&gt;testing.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/testing/allocs.go&quot;&gt;allocs.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/benchmark.go&quot;&gt;benchmark.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/cover.go&quot;&gt;cover.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/example.go&quot;&gt;example.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/match.go&quot;&gt;match.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/run_example.go&quot;&gt;run_example.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/testing.go&quot;&gt;testing.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4094790beae1fc68f4b3b370e93ffc9d162754c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/testing/fstest/mapfs.go&quot;&gt;mapfs.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/fstest/testfs.go&quot;&gt;testfs.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/testing/fstest/mapfs.go&quot;&gt;mapfs.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/fstest/testfs.go&quot;&gt;testfs.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e47d640ecb94e78a00ddf0b9f17b9d992d4f289" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/testing/iotest/logger.go&quot;&gt;logger.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/iotest/reader.go&quot;&gt;reader.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/iotest/writer.go&quot;&gt;writer.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/testing/iotest/logger.go&quot;&gt;logger.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/iotest/reader.go&quot;&gt;reader.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/testing/iotest/writer.go&quot;&gt;writer.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b09e83c79273db778194fa2008f49e72aeab13b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/text/template/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/exec.go&quot;&gt;exec.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/funcs.go&quot;&gt;funcs.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/helper.go&quot;&gt;helper.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/option.go&quot;&gt;option.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/template.go&quot;&gt;template.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/text/template/doc.go&quot;&gt;doc.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/exec.go&quot;&gt;exec.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/funcs.go&quot;&gt;funcs.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/helper.go&quot;&gt;helper.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/option.go&quot;&gt;option.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/template.go&quot;&gt;template.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eba4a554cbe2baa25bab8da1daf44509aa256e49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/text/template/parse/lex.go&quot;&gt;lex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/parse/node.go&quot;&gt;node.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/parse/parse.go&quot;&gt;parse.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/text/template/parse/lex.go&quot;&gt;lex.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/parse/node.go&quot;&gt;node.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/text/template/parse/parse.go&quot;&gt;parse.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d9afcbb78d06b5d6992c5a5e0a2550b0a60f563" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/time/format.go&quot;&gt;format.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/sleep.go&quot;&gt;sleep.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/sys_unix.go&quot;&gt;sys_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/tick.go&quot;&gt;tick.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/time.go&quot;&gt;time.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/zoneinfo.go&quot;&gt;zoneinfo.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/zoneinfo_read.go&quot;&gt;zoneinfo_read.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/zoneinfo_unix.go&quot;&gt;zoneinfo_unix.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/time/format.go&quot;&gt;format.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/sleep.go&quot;&gt;sleep.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/sys_unix.go&quot;&gt;sys_unix.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/tick.go&quot;&gt;tick.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/time.go&quot;&gt;time.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/zoneinfo.go&quot;&gt;zoneinfo.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/zoneinfo_read.go&quot;&gt;zoneinfo_read.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/zoneinfo_unix.go&quot;&gt;zoneinfo_unix.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afba5a3c1c6b907f1ed2e4b2d0202986ce0c8ac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/time/tzdata/tzdata.go&quot;&gt;tzdata.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/tzdata/zipdata.go&quot;&gt;zipdata.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/time/tzdata/tzdata.go&quot;&gt;tzdata.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/time/tzdata/zipdata.go&quot;&gt;zipdata.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2747fe50dee1be8468c1055e14e570dc351cbc87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/src/unicode/casetables.go&quot;&gt;casetables.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/digit.go&quot;&gt;digit.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/graphic.go&quot;&gt;graphic.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/letter.go&quot;&gt;letter.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/tables.go&quot;&gt;tables.go&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/src/unicode/casetables.go&quot;&gt;casetables.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/digit.go&quot;&gt;digit.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/graphic.go&quot;&gt;graphic.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/letter.go&quot;&gt;letter.go&lt;/a&gt;&lt;a href=&quot;https://golang.org/src/unicode/tables.go&quot;&gt;tables.go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98e4d86e5f0508d897fb3d252ad9682a8197ed11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/wiki/Projects&quot;&gt;Projects at the Go Wiki&lt;/a&gt; - a curated list of Go projects.</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/wiki/Projects&quot;&gt;Projects at the Go Wiki&lt;/a&gt; - тщательно подобранный список проектов Go.</target>
        </trans-unit>
        <trans-unit id="87c8c5f22168e35a7209786d9f862c2f517a2149" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev&quot;&gt;Pkg.go.dev&lt;/a&gt; - the Go package discovery site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9836822ada308ef020a2bd4a16eb492ff80dee5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/benchmarks&quot;&gt;benchmarks&lt;/a&gt; &amp;mdash; benchmarks to measure Go as it is developed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a640658d8c4135175f411123c0d7acf30d324bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/blog&quot;&gt;blog&lt;/a&gt; &amp;mdash; &lt;a href=&quot;https://blog.golang.org&quot;&gt;blog.golang.org&lt;/a&gt;'s implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2d5618b73feed2f47a05f8e9ef7533571f06d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/build&quot;&gt;build&lt;/a&gt; &amp;mdash; &lt;a href=&quot;https://build.golang.org&quot;&gt;build.golang.org&lt;/a&gt;'s implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6a7169c9f5a86dea6104b2943176fde4e87930" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/crypto&quot;&gt;crypto&lt;/a&gt; &amp;mdash; additional cryptography packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7405b69c849ca4afa48badbfdd3bb59cbec123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/debug&quot;&gt;debug&lt;/a&gt; &amp;mdash; an experimental debugger for Go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6530115871714a1723eebaced73d1a6854b7272" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/exp&quot;&gt;exp&lt;/a&gt; &amp;mdash; experimental and deprecated packages (handle with care; may change without warning).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b78144dd1b018c54ee1a229ed359c8bc39e812" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/image&quot;&gt;image&lt;/a&gt; &amp;mdash; additional imaging packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fcd4e5a8bed8457212e81c79f5bf5c14823be1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/mobile&quot;&gt;mobile&lt;/a&gt; &amp;mdash; experimental support for Go on mobile platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5f6fe5b0bb9cc6779d1283e658dafd510a6553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/net&quot;&gt;net&lt;/a&gt; &amp;mdash; additional networking packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ea5708f315296004b1ccf0a4f764fd8f752993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/perf&quot;&gt;perf&lt;/a&gt; &amp;mdash; packages and tools for performance measurement, storage, and analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418e6231239343c8131ef82ebde23ec234e74e36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/pkgsite&quot;&gt;pkgsite&lt;/a&gt; &amp;mdash; home of the pkg.go.dev website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7074c25e343ec494841f72f201ec200af7797fdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/review&quot;&gt;review&lt;/a&gt; &amp;mdash; a tool for working with Gerrit code reviews.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdb2f7de7afe4b8ff208644e6379d3e239c61e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/sync&quot;&gt;sync&lt;/a&gt; &amp;mdash; additional concurrency primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5da88449e243e340013cfe628525e22594b789" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/sys&quot;&gt;sys&lt;/a&gt; &amp;mdash; packages for making system calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255042cddd05199abd1ed110ead949a61548165e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/text&quot;&gt;text&lt;/a&gt; &amp;mdash; packages for working with text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e037c4a001f446e022acdc99b041192f2f248ed5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/time&quot;&gt;time&lt;/a&gt; &amp;mdash; additional time packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f414d4ae1759045a59ff6a7e3f88cedfa1a03051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/tools&quot;&gt;tools&lt;/a&gt; &amp;mdash; godoc, goimports, gorename, and other tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb13ddef29b3416f4a7417539c5b6e2476664ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pkg.go.dev/golang.org/x/tour&quot;&gt;tour&lt;/a&gt; &amp;mdash; &lt;a href=&quot;https://tour.golang.org&quot;&gt;tour.golang.org&lt;/a&gt;'s implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd728c1d0c504dbec492943ca8e74e081796110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rawgit.com/mikesamuel/sanitized-jquery-templates/trunk/safetemplate.html#problem_definition&quot;&gt;https://rawgit.com/mikesamuel/sanitized-jquery-templates/trunk/safetemplate.html#problem_definition&lt;/a&gt; defines &quot;safe&quot; as used by this package.</source>
          <target state="translated">&lt;a href=&quot;https://rawgit.com/mikesamuel/sanitized-jquery-templates/trunk/safetemplate.html#problem_definition&quot;&gt;https://rawgit.com/mikesamuel/sanitized-jquery-templates/trunk/safetemplate.html#problem_definition&lt;/a&gt; определяет &amp;laquo;безопасный&amp;raquo;, используемый в этом пакете.</target>
        </trans-unit>
        <trans-unit id="c919ab787e33855057ab4da89511287a977f3f0b" translate="yes" xml:space="preserve">
          <source>A &quot;p&quot; or &quot;P&quot; exponent indicates a base 2 (rather then base 10) exponent; for instance, &quot;0x1.fffffffffffffp1023&quot; (using base 0) represents the maximum float64 value. For hexadecimal mantissae, the exponent character must be one of 'p' or 'P', if present (an &quot;e&quot; or &quot;E&quot; exponent indicator cannot be distinguished from a mantissa digit).</source>
          <target state="translated">Экспонент &quot;p&quot; или &quot;P&quot; обозначает базовый 2 (а не базовый 10);например,&quot;0x1.fffffffffffffp1023&quot; (с использованием базового 0)представляет собой максимальное значение float64.Для шестнадцатеричных мантисс символ экспоненты должен быть одним из 'p' или 'P',если он присутствует (индикатор экспоненты &quot;e&quot; или &quot;E&quot; нельзя отличить от цифры мантиссы).</target>
        </trans-unit>
        <trans-unit id="7f22cd942350982f2026d30093126395e0f4e2ce" translate="yes" xml:space="preserve">
          <source>A //go:embed directive above a variable declaration specifies which files to embed, using one or more path.Match patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4d19eb24a3ed0b6c164421a09d6b64f88f5562" translate="yes" xml:space="preserve">
          <source>A BadDecl node is a placeholder for a declaration containing syntax errors for which a correct declaration node cannot be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1123f6aad96443b92187d542899cc95b9bb2fe32" translate="yes" xml:space="preserve">
          <source>A BadDecl node is a placeholder for declarations containing syntax errors for which no correct declaration nodes can be created.</source>
          <target state="translated">Узел BadDecl-это место для объявлений,содержащих синтаксические ошибки,для которых нельзя создать правильные узлы объявлений.</target>
        </trans-unit>
        <trans-unit id="f1b508926f2e750f76d43dad619ee622b521de7b" translate="yes" xml:space="preserve">
          <source>A BadExpr node is a placeholder for an expression containing syntax errors for which a correct expression node cannot be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfeb402a68dc1a9b5372f3908c42874cd09a220" translate="yes" xml:space="preserve">
          <source>A BadExpr node is a placeholder for expressions containing syntax errors for which no correct expression nodes can be created.</source>
          <target state="translated">Узел BadExpr-это месторасположение для выражений,содержащих синтаксические ошибки,для которых невозможно создать правильные узлы выражений.</target>
        </trans-unit>
        <trans-unit id="7eb045abea7688d577a2f4aa68d42b63d688f628" translate="yes" xml:space="preserve">
          <source>A BadStmt node is a placeholder for statements containing syntax errors for which no correct statement nodes can be created.</source>
          <target state="translated">Узел BadStmt-это хранилище операторов,содержащих синтаксические ошибки,для которых невозможно создать правильные операторы.</target>
        </trans-unit>
        <trans-unit id="a09691e16560521f59b5e41dfa68af0b91ddf921" translate="yes" xml:space="preserve">
          <source>A Basic represents a basic type.</source>
          <target state="translated">Базовый тип представляет собой базовый тип.</target>
        </trans-unit>
        <trans-unit id="4e96e9fa6016f0735848cb5e83d084a95898493d" translate="yes" xml:space="preserve">
          <source>A BasicLit node represents a literal of basic type.</source>
          <target state="translated">Узел BasicLit представляет собой литерал базового типа.</target>
        </trans-unit>
        <trans-unit id="f0d28c34a4273c4c205bdbd169e7a24e79d3af70" translate="yes" xml:space="preserve">
          <source>A BasicType holds fields common to all basic types.</source>
          <target state="translated">BasicType содержит поля,общие для всех базовых типов.</target>
        </trans-unit>
        <trans-unit id="4aaf562bb9c344cab2878d8a67694cab58f267fe" translate="yes" xml:space="preserve">
          <source>A BinaryExpr node represents a binary expression.</source>
          <target state="translated">Узел BinaryExpr представляет собой двоичное выражение.</target>
        </trans-unit>
        <trans-unit id="c75800e242cb7940cab3ce54f7f2ee89e873c3a1" translate="yes" xml:space="preserve">
          <source>A Block represents a PEM encoded structure.</source>
          <target state="translated">Блок представляет собой PEM закодированную структуру.</target>
        </trans-unit>
        <trans-unit id="6eb1e62ee558fbb06e309b0a1474fe5590194eb9" translate="yes" xml:space="preserve">
          <source>A Block represents an implementation of block cipher using a given key. It provides the capability to encrypt or decrypt individual blocks. The mode implementations extend that capability to streams of blocks.</source>
          <target state="translated">Блок представляет собой реализацию блочного шифра с использованием заданного ключа.Он предоставляет возможность шифрования или расшифровки отдельных блоков.Режимы реализации расширяют эту возможность на потоки блоков.</target>
        </trans-unit>
        <trans-unit id="b09c35891b54fa0138a8d1707cf64366451f1193" translate="yes" xml:space="preserve">
          <source>A BlockMode represents a block cipher running in a block-based mode (CBC, ECB etc).</source>
          <target state="translated">BlockMode представляет собой блочный шифр,работающий в блочном режиме (CBC,ECB и т.д.).</target>
        </trans-unit>
        <trans-unit id="8dfe588d503302439640a67e38197d5d027bab2f" translate="yes" xml:space="preserve">
          <source>A BlockStmt node represents a braced statement list.</source>
          <target state="translated">Узел BlockStmt представляет собой скрепленный список операторов.</target>
        </trans-unit>
        <trans-unit id="a6596c287920a60f833a744c8df6d962e72ea7d5" translate="yes" xml:space="preserve">
          <source>A BoolType represents a boolean type.</source>
          <target state="translated">BoolType представляет собой булевый тип.</target>
        </trans-unit>
        <trans-unit id="f359d441ebb4d88e77ab94131c369de596c1ee19" translate="yes" xml:space="preserve">
          <source>A BranchStmt node represents a break, continue, goto, or fallthrough statement.</source>
          <target state="translated">Узел BranchStmt представляет собой заявление о прорыве,продолжении,переходе или падении.</target>
        </trans-unit>
        <trans-unit id="3fb505f6912b6b4ddfb95346dfcc6a9c7667dc18" translate="yes" xml:space="preserve">
          <source>A Buffer is a variable-sized buffer of bytes with Read and Write methods. The zero value for Buffer is an empty buffer ready to use.</source>
          <target state="translated">Буфер-это буфер байт переменного размера с помощью методов Read и Write.Нулевое значение для буфера-это пустой буфер,готовый к использованию.</target>
        </trans-unit>
        <trans-unit id="1461605a0709414441624bd277a7be479b6f6011" translate="yes" xml:space="preserve">
          <source>A BufferPool is an interface for getting and returning temporary byte slices for use by io.CopyBuffer.</source>
          <target state="translated">BufferPool-это интерфейс для получения и возврата временных срезов байтов для использования io.CopyBuffer.</target>
        </trans-unit>
        <trans-unit id="b6d17c51ac02141341d0a91f23ea17ed19e01909" translate="yes" xml:space="preserve">
          <source>A Builder is used to efficiently build a string using Write methods. It minimizes memory copying. The zero value is ready to use. Do not copy a non-zero Builder.</source>
          <target state="translated">Строитель используется для эффективного построения строки с помощью методов Write.Он минимизирует копирование памяти.Нулевое значение готово к использованию.Не копировать ненулевой Builder.</target>
        </trans-unit>
        <trans-unit id="037cb25e954c2c0cb7d3dbedf060bc007d0e89cd" translate="yes" xml:space="preserve">
          <source>A Builtin represents a built-in function. Builtins don't have a valid type.</source>
          <target state="translated">Builtin представляет собой встроенную функцию.Сборщики не имеют правильного типа.</target>
        </trans-unit>
        <trans-unit id="892968a868a7e4a907bd63b74cc7f80a6a88354c" translate="yes" xml:space="preserve">
          <source>A ByteOrder specifies how to convert byte sequences into 16-, 32-, or 64-bit unsigned integers.</source>
          <target state="translated">ByteOrder указывает,как преобразовывать байтовые последовательности в 16-,32-или 64-битные целые числа без знака.</target>
        </trans-unit>
        <trans-unit id="6e655396894e089ec7bd8b95669d2a7e9ddcfcd0" translate="yes" xml:space="preserve">
          <source>A CallExpr node represents an expression followed by an argument list.</source>
          <target state="translated">Узел CallExpr представляет собой выражение,за которым следует список аргументов.</target>
        </trans-unit>
        <trans-unit id="64a8f488b495e864ba78bb0d182f77c49a17af80" translate="yes" xml:space="preserve">
          <source>A CancelFunc tells an operation to abandon its work. A CancelFunc does not wait for the work to stop. A CancelFunc may be called by multiple goroutines simultaneously. After the first call, subsequent calls to a CancelFunc do nothing.</source>
          <target state="translated">CancelFunc говорит операции отказаться от своей работы.CancelFunc не ждет остановки работы.CancelFunc может быть вызван несколькими горутинами одновременно.После первого вызова последующие вызовы CancelFunc ничего не делают.</target>
        </trans-unit>
        <trans-unit id="1b10cf9ceb81b6bc3b8dcabe10017a6a967fe252" translate="yes" xml:space="preserve">
          <source>A CaseClause represents a case of an expression or type switch statement.</source>
          <target state="translated">CaseClause представляет собой случай выражения или оператора переключения типа.</target>
        </trans-unit>
        <trans-unit id="3df0336a740616143abfbd052730d859e0747a00" translate="yes" xml:space="preserve">
          <source>A Certificate is a chain of one or more certificates, leaf first.</source>
          <target state="translated">Сертификат-это цепочка из одного или нескольких сертификатов,сначала листик.</target>
        </trans-unit>
        <trans-unit id="6ce79efd48b66ecd681a102ece34c5f01f30b6bb" translate="yes" xml:space="preserve">
          <source>A Certificate represents an X.509 certificate.</source>
          <target state="translated">Сертификат представляет собой сертификат X.509.</target>
        </trans-unit>
        <trans-unit id="dacc044ff83252e8da8b7c83ac652df96b4a7263" translate="yes" xml:space="preserve">
          <source>A Chan represents a channel type.</source>
          <target state="translated">Чан представляет собой тип канала.</target>
        </trans-unit>
        <trans-unit id="489cc0d6b95ec8b9ebbf24e11966fa69854f5cb9" translate="yes" xml:space="preserve">
          <source>A ChanDir value indicates a channel direction.</source>
          <target state="translated">Значение ChanDir указывает направление канала.</target>
        </trans-unit>
        <trans-unit id="070a85a0a8fd173d8b11a96f53495cdee7edbae6" translate="yes" xml:space="preserve">
          <source>A ChanType node represents a channel type.</source>
          <target state="translated">Узел ChanType представляет собой тип канала.</target>
        </trans-unit>
        <trans-unit id="2aad134ce320508a2ed662401c3a35abf0301e47" translate="yes" xml:space="preserve">
          <source>A CharData represents XML character data (raw text), in which XML escape sequences have been replaced by the characters they represent.</source>
          <target state="translated">CharData представляет собой данные XML-символов (необработанный текст),в которых экранирующие последовательности XML были заменены символами,которые они представляют.</target>
        </trans-unit>
        <trans-unit id="cc58af40e127ae636ebfd4b1dab058b1f5ba3059" translate="yes" xml:space="preserve">
          <source>A CharType represents a signed character type.</source>
          <target state="translated">CharType представляет собой подписанный тип символов.</target>
        </trans-unit>
        <trans-unit id="7571ca3899875977a8c2e856f154d99ef71130b0" translate="yes" xml:space="preserve">
          <source>A CheckEqualError is the result CheckEqual finding an error.</source>
          <target state="translated">CheckEqualError-это результат поиска ошибки CheckEqual.</target>
        </trans-unit>
        <trans-unit id="e5e6d49e7769874182960864050ac2745252cf02" translate="yes" xml:space="preserve">
          <source>A CheckError is the result of Check finding an error.</source>
          <target state="translated">CheckError-результат поиска ошибки CheckError.</target>
        </trans-unit>
        <trans-unit id="e40b1d8be51a7ea43b64ef548b13353308a4f9f7" translate="yes" xml:space="preserve">
          <source>A Checker maintains the state of the type checker. It must be created with NewChecker.</source>
          <target state="translated">Устройство проверки поддерживает состояние устройства проверки типа.Оно должно быть создано с помощью NewChecker.</target>
        </trans-unit>
        <trans-unit id="f430ceb71dc6fb2459e64f75abc35fb2c2dcc962" translate="yes" xml:space="preserve">
          <source>A Cipher is an instance of RC4 using a particular key.</source>
          <target state="translated">Шифр-это экземпляр RC4,использующий определенный ключ.</target>
        </trans-unit>
        <trans-unit id="cebfde1712e5a042e0276018aed63bffa5b48954" translate="yes" xml:space="preserve">
          <source>A Class is the DWARF 4 class of an attribute value.</source>
          <target state="translated">Класс-это класс DWARF 4 значения атрибута.</target>
        </trans-unit>
        <trans-unit id="fe94b934cba52a3f0f37c36e65520044cdec12c3" translate="yes" xml:space="preserve">
          <source>A Client is an HTTP client. Its zero value (DefaultClient) is a usable client that uses DefaultTransport.</source>
          <target state="translated">Клиент-это HTTP-клиент.Его нулевое значение (DefaultClient)является удобным клиентом,который использует DefaultTransport.</target>
        </trans-unit>
        <trans-unit id="dff10f0c9a02b3533a2c5ff6f1aa4ea18efc93c0" translate="yes" xml:space="preserve">
          <source>A Client is higher-level than a RoundTripper (such as Transport) and additionally handles HTTP details such as cookies and redirects.</source>
          <target state="translated">Клиент имеет более высокий уровень,чем RoundTripper (например,Transport),и дополнительно обрабатывает детали HTTP,такие как cookie-файлы и переадресации.</target>
        </trans-unit>
        <trans-unit id="7476021d61e8a0df9fbc63c7ca0b91cd642f328e" translate="yes" xml:space="preserve">
          <source>A Client represents a client connection to an SMTP server.</source>
          <target state="translated">Клиент представляет собой соединение клиента с SMTP-сервером.</target>
        </trans-unit>
        <trans-unit id="b71630fa521f0999628fd58f1a5f36c35682c154" translate="yes" xml:space="preserve">
          <source>A ClientCodec implements writing of RPC requests and reading of RPC responses for the client side of an RPC session. The client calls WriteRequest to write a request to the connection and calls ReadResponseHeader and ReadResponseBody in pairs to read responses. The client calls Close when finished with the connection. ReadResponseBody may be called with a nil argument to force the body of the response to be read and then discarded. See NewClient's comment for information about concurrent access.</source>
          <target state="translated">ClientCodec реализует запись запросов RPC и чтение ответов RPC для клиентской стороны сеанса RPC.Клиент вызывает WriteRequest для записи запроса на соединение и вызывает ReadResponseHeader и ReadResponseBody парами для чтения ответов.Клиент звонит Закрыть по завершении соединения.ReadResponseBody может быть вызвано с нулевым аргументом,чтобы заставить тело ответа быть прочитанным,а затем отброшенным.Информацию о параллельном доступе см.в комментарии NewClient.</target>
        </trans-unit>
        <trans-unit id="360c604b631953905f3f4216c2aa9c0493f9a5c4" translate="yes" xml:space="preserve">
          <source>A Cmd cannot be reused after calling its Run, Output or CombinedOutput methods.</source>
          <target state="translated">Cmd не может быть повторно использован после вызова методов Run,Output или CombinedOutput.</target>
        </trans-unit>
        <trans-unit id="5f9b0eb470afbfa84ac3e6bd695f6f7547e25e63" translate="yes" xml:space="preserve">
          <source>A CommClause node represents a case of a select statement.</source>
          <target state="translated">Узел CommClause представляет собой случай выборочного утверждения.</target>
        </trans-unit>
        <trans-unit id="126d1d49a2d0aecea067ab9d4f53c05821460337" translate="yes" xml:space="preserve">
          <source>A Comment node represents a single //-style or /*-style comment.</source>
          <target state="translated">Узел Комментарий представляет собой один //или /*комментарий.</target>
        </trans-unit>
        <trans-unit id="102b0aae1b692037597357ab6c34e305a5d50abf" translate="yes" xml:space="preserve">
          <source>A Comment represents an XML comment of the form &amp;lt;!--comment--&amp;gt;. The bytes do not include the &amp;lt;!-- and --&amp;gt; comment markers.</source>
          <target state="translated">Комментарий представляет собой XML-комментарий в форме &amp;lt;! - comment -&amp;gt;. Байты не включают маркеры комментариев &amp;lt;! - и -&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f01ed0a912eea13962aa863979815ef144c0e12e" translate="yes" xml:space="preserve">
          <source>A CommentGroup represents a sequence of comments with no other tokens and no empty lines between.</source>
          <target state="translated">Группа Комментарии представляет собой последовательность комментариев без других маркеров и без пустых строк между ними.</target>
        </trans-unit>
        <trans-unit id="6618446c717172eb2ba87e09ce048aad816582b5" translate="yes" xml:space="preserve">
          <source>A CommentMap maps an AST node to a list of comment groups associated with it. See NewCommentMap for a description of the association.</source>
          <target state="translated">Карта CommentMap сопоставляет узел AST со списком связанных с ним групп комментариев.Описание ассоциации см.в разделе NewCommentMap.</target>
        </trans-unit>
        <trans-unit id="4541544833c16b1a72e733c00fdf848bd8e1ec5a" translate="yes" xml:space="preserve">
          <source>A CommentedNode bundles an AST node and corresponding comments. It may be provided as argument to any of the Fprint functions.</source>
          <target state="translated">Узел CommentedNode объединяет узел AST и соответствующие комментарии.Он может быть предоставлен в качестве аргумента к любой из функций Fprint.</target>
        </trans-unit>
        <trans-unit id="b25bec4a4f00e250f1372003588c09e5587d686b" translate="yes" xml:space="preserve">
          <source>A CommonType holds fields common to multiple types. If a field is not known or not applicable for a given type, the zero value is used.</source>
          <target state="translated">CommonType содержит поля,общие для нескольких типов.Если поле неизвестно или неприменимо для данного типа,используется нулевое значение.</target>
        </trans-unit>
        <trans-unit id="aff877fa9d1c634f1772007c128f36f1bc62e322" translate="yes" xml:space="preserve">
          <source>A ComplexType represents a complex floating point type.</source>
          <target state="translated">Тип ComplexType представляет собой сложный тип с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="c1232fe7484bfb4ee0095518475648ab13064a76" translate="yes" xml:space="preserve">
          <source>A CompositeLit node represents a composite literal.</source>
          <target state="translated">Узел CompositeLit представляет собой композитный буквально.</target>
        </trans-unit>
        <trans-unit id="0f70c579d931c29aa9cde9de4f1cce6833035c9f" translate="yes" xml:space="preserve">
          <source>A Compressor returns a new compressing writer, writing to w. The WriteCloser's Close method must be used to flush pending data to w. The Compressor itself must be safe to invoke from multiple goroutines simultaneously, but each returned writer will be used only by one goroutine at a time.</source>
          <target state="translated">Компрессор возвращает новый компрессор,записывая в w.Метод WriteCloser's Close должен использоваться для промывки отложенных данных в w.Компрессор сам должен быть безопасен для вызова нескольких горутинов одновременно,но каждый возвращаемый горутин будет использоваться только одним горутином за раз.</target>
        </trans-unit>
        <trans-unit id="d87124c080041826540d92b145f7667559b16d7f" translate="yes" xml:space="preserve">
          <source>A Cond must not be copied after first use.</source>
          <target state="translated">Конд нельзя копировать после первого использования.</target>
        </trans-unit>
        <trans-unit id="74cea2d83b96c716a3176b36089838f2190c82b3" translate="yes" xml:space="preserve">
          <source>A Config node controls the output of Fprint.</source>
          <target state="translated">Узел Config управляет выводом отпечатка.</target>
        </trans-unit>
        <trans-unit id="3c229591d56e4195e752fc2d9b259e9760a5c33b" translate="yes" xml:space="preserve">
          <source>A Config specifies the configuration for type checking. The zero value for Config is a ready-to-use default configuration.</source>
          <target state="translated">A Config определяет конфигурацию для проверки типа.Нулевое значение для Config-это готовая к использованию конфигурация по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c0f1b53b3d403749973328df58e12a575ec9a7b0" translate="yes" xml:space="preserve">
          <source>A Config structure contains options for running a test.</source>
          <target state="translated">Структура Config содержит опции для выполнения теста.</target>
        </trans-unit>
        <trans-unit id="c121cae17514d3fa4cae135216ea38cbdf6bbce1" translate="yes" xml:space="preserve">
          <source>A Config structure is used to configure a TLS client or server. After one has been passed to a TLS function it must not be modified. A Config may be reused; the tls package will also not modify it.</source>
          <target state="translated">Структура Config используется для настройки TLS клиента или сервера.После передачи одной из функций TLS ее нельзя изменять.Конфигурация может быть использована повторно;пакет tls также не будет ее изменять.</target>
        </trans-unit>
        <trans-unit id="c3a452893d512c39ccf07d91afb2d3c4d36420f8" translate="yes" xml:space="preserve">
          <source>A Conn must call Close to return the connection to the database pool and may do so concurrently with a running query.</source>
          <target state="translated">Соединение должно вызвать Close для возврата соединения к пулу баз данных и может сделать это одновременно с выполняющимся запросом.</target>
        </trans-unit>
        <trans-unit id="e7232532e891cd146be604b1b6ed41fa6024cd94" translate="yes" xml:space="preserve">
          <source>A Conn represents a secured connection. It implements the net.Conn interface.</source>
          <target state="translated">Соединение представляет собой защищенное соединение.Он реализует интерфейс net.Conn.</target>
        </trans-unit>
        <trans-unit id="8a98021e4777c07cc886aaaaaab3e86d5dd758f8" translate="yes" xml:space="preserve">
          <source>A Conn represents a textual network protocol connection. It consists of a Reader and Writer to manage I/O and a Pipeline to sequence concurrent requests on the connection. These embedded types carry methods with them; see the documentation of those types for details.</source>
          <target state="translated">Соединение представляет собой текстовое сетевое протокол-соединение.Оно состоит из устройства чтения и записи для управления входами/выходами и конвейера для последовательности одновременных запросов по соединению.Эти встроенные типы несут в себе методы;подробнее см.документацию по этим типам.</target>
        </trans-unit>
        <trans-unit id="c4b224256a6ca255a6fb91fd1197343ba6039ae2" translate="yes" xml:space="preserve">
          <source>A ConnState represents the state of a client connection to a server. It's used by the optional Server.ConnState hook.</source>
          <target state="translated">ConnState представляет собой состояние соединения клиента с сервером.Оно используется дополнительным крюком Server.ConnState.</target>
        </trans-unit>
        <trans-unit id="e31df198984a84556e29056f951a830f56b070b2" translate="yes" xml:space="preserve">
          <source>A Connector can be passed to sql.OpenDB, to allow drivers to implement their own sql.DB constructors, or returned by DriverContext's OpenConnector method, to allow drivers access to context and to avoid repeated parsing of driver configuration.</source>
          <target state="translated">Коннектор может быть передан в sql.OpenDB,чтобы дать драйверам возможность реализовать свои собственные конструкторы sql.DB,или возвращен методом DriverContext OpenConnector,чтобы дать драйверам доступ к контексту и избежать повторного разбора конфигурации драйвера.</target>
        </trans-unit>
        <trans-unit id="044be90e3e3147d4e037da6309a7d2e940ba3c36" translate="yes" xml:space="preserve">
          <source>A Connector represents a driver in a fixed configuration and can create any number of equivalent Conns for use by multiple goroutines.</source>
          <target state="translated">Коннектор представляет собой драйвер в фиксированной конфигурации и может создавать любое количество эквивалентных Conns для использования несколькими goroutines.</target>
        </trans-unit>
        <trans-unit id="da4a343554925a1ddbea469e235e1555605d99a5" translate="yes" xml:space="preserve">
          <source>A Const represents a declared constant.</source>
          <target state="translated">Конст представляет собой объявленную константу.</target>
        </trans-unit>
        <trans-unit id="4500800489d0c022304032a2e4a5cc3ccd1e4757" translate="yes" xml:space="preserve">
          <source>A Context carries a deadline, a cancellation signal, and other values across API boundaries.</source>
          <target state="translated">Контекст несет в себе предельный срок,сигнал отмены и другие значения через границы API.</target>
        </trans-unit>
        <trans-unit id="ad739093c7c2952b6f8d06103b8320cc9d3d6ee6" translate="yes" xml:space="preserve">
          <source>A Context specifies the supporting context for a build.</source>
          <target state="translated">Контекст определяет поддерживающий контекст для сборки.</target>
        </trans-unit>
        <trans-unit id="345b60f4218aab4a9e89ba61ffe19ba47293618c" translate="yes" xml:space="preserve">
          <source>A Cookie represents an HTTP cookie as sent in the Set-Cookie header of an HTTP response or the Cookie header of an HTTP request.</source>
          <target state="translated">Cookie представляет собой HTTP-куки-файл,отправленный в заголовке Set-Cookie ответа HTTP или в заголовке Cookie HTTP-запроса.</target>
        </trans-unit>
        <trans-unit id="439511987886b735bcc48bb82e45d11fb45c8e80" translate="yes" xml:space="preserve">
          <source>A CookieJar manages storage and use of cookies in HTTP requests.</source>
          <target state="translated">CookieJar управляет хранением и использованием куки-файлов в HTTP-запросах.</target>
        </trans-unit>
        <trans-unit id="9dbc27b974673707e8a2f913fec96abcb0bae1ca" translate="yes" xml:space="preserve">
          <source>A CorruptInputError reports the presence of corrupt input at a given offset.</source>
          <target state="translated">CorruptInputError сообщает о наличии поврежденного входа при заданном смещении.</target>
        </trans-unit>
        <trans-unit id="2a774110c2f1a711b8627926a4c791b50d477e36" translate="yes" xml:space="preserve">
          <source>A Cpu is a Mach-O cpu type.</source>
          <target state="translated">Cpu-это Mach-O cpu типа.</target>
        </trans-unit>
        <trans-unit id="c8d753e7b1724d6b84a9e41195ecce8524401784" translate="yes" xml:space="preserve">
          <source>A Curve represents a short-form Weierstrass curve with a=-3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8833559ac0ea08bb6631d4af289d3312b520f0" translate="yes" xml:space="preserve">
          <source>A Curve represents a short-form Weierstrass curve with a=-3. See &lt;a href=&quot;https://www.hyperelliptic.org/EFD/g1p/auto-shortw.html&quot;&gt;https://www.hyperelliptic.org/EFD/g1p/auto-shortw.html&lt;/a&gt;</source>
          <target state="translated">Кривая представляет собой сокращенную кривую Вейерштрасса с a = -3. См. &lt;a href=&quot;https://www.hyperelliptic.org/EFD/g1p/auto-shortw.html&quot;&gt;Https://www.hyperelliptic.org/EFD/g1p/auto-shortw.html.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d334a921cf08b96ed08ebbd1348bd4502b8cbff" translate="yes" xml:space="preserve">
          <source>A DeclStmt node represents a declaration in a statement list.</source>
          <target state="translated">Узел DeclStmt представляет собой декларацию в списке утверждений.</target>
        </trans-unit>
        <trans-unit id="7fc0e178afca45507a82048502fc3190729e7a51" translate="yes" xml:space="preserve">
          <source>A Decoder manages the receipt of type and data information read from the remote side of a connection. It is safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Декодер управляет получением информации о типе и данных,считываемых с удаленной стороны соединения.Он безопасен для одновременного использования несколькими горутинами.</target>
        </trans-unit>
        <trans-unit id="aaa935f1cb5a55ee24b563854564808c1c7b94ab" translate="yes" xml:space="preserve">
          <source>A Decoder reads and decodes JSON values from an input stream.</source>
          <target state="translated">Декодер считывает и декодирует JSON-значения из входного потока.</target>
        </trans-unit>
        <trans-unit id="6a0ff998ca32c8d66166ff01613dc1c8be7bbffd" translate="yes" xml:space="preserve">
          <source>A Decoder represents an XML parser reading a particular input stream. The parser assumes that its input is encoded in UTF-8.</source>
          <target state="translated">Декодер представляет собой парсер XML,читающий определенный входной поток.Синтаксический анализатор предполагает,что его входной поток закодирован в UTF-8.</target>
        </trans-unit>
        <trans-unit id="fa6eac4594c2e9110158777fdd5ccd573d3725c4" translate="yes" xml:space="preserve">
          <source>A Decompressor returns a new decompressing reader, reading from r. The ReadCloser's Close method must be used to release associated resources. The Decompressor itself must be safe to invoke from multiple goroutines simultaneously, but each returned reader will be used only by one goroutine at a time.</source>
          <target state="translated">Декомпрессор возвращает новый распаковывающий читатель,читая из r.Метод ReadCloser's Close должен использоваться для освобождения связанных с ним ресурсов.Декомпрессор сам должен быть безопасен для одновременного вызова нескольких горутинов,но каждый возвращаемый читатель будет использоваться только одним горутином за раз.</target>
        </trans-unit>
        <trans-unit id="3177b45a687e697befcd3f3f2594b30a3ecf0c86" translate="yes" xml:space="preserve">
          <source>A DeferStmt node represents a defer statement.</source>
          <target state="translated">Узел DeferStmt представляет собой заявление об отсрочке.</target>
        </trans-unit>
        <trans-unit id="b67d05f625ac987a07f0eb01489bee222c70495e" translate="yes" xml:space="preserve">
          <source>A Delim is a JSON array or object delimiter, one of [ ] { or }.</source>
          <target state="translated">Делим-это JSON-массив или разделитель объектов,один из[]{или }.</target>
        </trans-unit>
        <trans-unit id="3528f7cabfe02dad4395c36da0f26da2899865f1" translate="yes" xml:space="preserve">
          <source>A Dialer contains options for connecting to an address.</source>
          <target state="translated">Дозвонщик содержит опции для подключения к адресу.</target>
        </trans-unit>
        <trans-unit id="6408d9ab2f66c0a4e6e86f5a54d85c61373257b3" translate="yes" xml:space="preserve">
          <source>A Dir implements FileSystem using the native file system restricted to a specific directory tree.</source>
          <target state="translated">Dir реализует FileSystem,используя собственную файловую систему,ограниченную определенным деревом каталогов.</target>
        </trans-unit>
        <trans-unit id="b05d796014a4b1046f9fcaa22015c45c277c3814" translate="yes" xml:space="preserve">
          <source>A DirEntry is an entry read from a directory (using the ReadDir function or a File's ReadDir method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59efb4eecdc3808688696ac9535728f4ad09d026" translate="yes" xml:space="preserve">
          <source>A DirEntry is an entry read from a directory (using the ReadDir function or a ReadDirFile's ReadDir method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86e22f5699c7e88fdb174b30fabf27d65d245e3" translate="yes" xml:space="preserve">
          <source>A Directive represents an XML directive of the form &amp;lt;!text&amp;gt;. The bytes do not include the &amp;lt;! and &amp;gt; markers.</source>
          <target state="translated">Директива представляет собой директиву XML в форме &amp;lt;! Text&amp;gt;. Байты не включают &amp;lt;! и&amp;gt; маркеры.</target>
        </trans-unit>
        <trans-unit id="f0be171834370163d199abe38b806da6288a68ad" translate="yes" xml:space="preserve">
          <source>A DotDotDotType represents the variadic ... function parameter.</source>
          <target state="translated">Тип DotDotDotType представляет собой вариант параметра ...функции.</target>
        </trans-unit>
        <trans-unit id="6384d5f5a370c8e493c8712f20d49ae8b99cc150" translate="yes" xml:space="preserve">
          <source>A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.</source>
          <target state="translated">Длительность представляет собой прошедшее время между двумя мгновениями в виде числа int64 наносекунды.Представление ограничивает наибольшую продолжительность представления примерно 290 годами.</target>
        </trans-unit>
        <trans-unit id="5ecdfd7bc84be9f2d17a162b33d49b58be95285e" translate="yes" xml:space="preserve">
          <source>A Dylib represents a Mach-O load dynamic library command.</source>
          <target state="translated">Dylib представляет собой команду динамической библиотеки загрузки Mach-O.</target>
        </trans-unit>
        <trans-unit id="0acd35cd81a153e22929826effaf5c42378d0fea" translate="yes" xml:space="preserve">
          <source>A DylibCmd is a Mach-O load dynamic library command.</source>
          <target state="translated">DylibCmd-это команда динамической библиотеки загрузки Mach-O.</target>
        </trans-unit>
        <trans-unit id="2bb7617e0174a9893ba90aa3aabb8948c586903b" translate="yes" xml:space="preserve">
          <source>A Dysymtab represents a Mach-O dynamic symbol table command.</source>
          <target state="translated">Dysymtab представляет собой команду таблицы динамических символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="a3d7d413601467bbc9c94994480cf4597efe0894" translate="yes" xml:space="preserve">
          <source>A DysymtabCmd is a Mach-O dynamic symbol table command.</source>
          <target state="translated">DysymtabCmd-это команда таблицы динамических символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="0df08f2b1aaf090c6e60a692d9f1a3e5e77aad17" translate="yes" xml:space="preserve">
          <source>A FatArch is a Mach-O File inside a FatFile.</source>
          <target state="translated">FatArch-это файл Mach-O внутри FatFile.</target>
        </trans-unit>
        <trans-unit id="feab8100790b52cb094e5b75b69875ccd9ff711e" translate="yes" xml:space="preserve">
          <source>A FatArchHeader represents a fat header for a specific image architecture.</source>
          <target state="translated">FatArchHeader представляет жирный заголовок для конкретной архитектуры изображения.</target>
        </trans-unit>
        <trans-unit id="b79b4d3682257c685c1bf7a92b274c21d4a76b36" translate="yes" xml:space="preserve">
          <source>A FatFile is a Mach-O universal binary that contains at least one architecture.</source>
          <target state="translated">FatFile-это универсальный бинарный файл Mach-O,который содержит как минимум одну архитектуру.</target>
        </trans-unit>
        <trans-unit id="39a6737a2fd79f471ed1f017391abd2beae09609" translate="yes" xml:space="preserve">
          <source>A Field is a single attribute/value pair in an Entry.</source>
          <target state="translated">Поле-это один атрибут/пара значений в записи.</target>
        </trans-unit>
        <trans-unit id="45548081441583b2b52c076e664e8a1b9b5bfb95" translate="yes" xml:space="preserve">
          <source>A Field represents a Field declaration list in a struct type, a method list in an interface type, or a parameter/result declaration in a signature. Field.Names is nil for unnamed parameters (parameter lists which only contain types) and embedded struct fields. In the latter case, the field name is the type name.</source>
          <target state="translated">Поле представляет собой список деклараций полей в типе структуры,список методов в типе интерфейса или декларацию параметров/результатов в подписи.Field.Names-ноль для безымянных параметров (списки параметров,которые содержат только типы)и встроенных полей структуры.В последнем случае именем поля является имя типа.</target>
        </trans-unit>
        <trans-unit id="6dd0ed32ad3016ad5f04a116fae45f9934e70025" translate="yes" xml:space="preserve">
          <source>A FieldFilter may be provided to Fprint to control the output.</source>
          <target state="translated">Для управления выходом в Fprint может быть установлен FieldFilter.</target>
        </trans-unit>
        <trans-unit id="b1c9353c6215676d705e43fd5de613dde8e8e192" translate="yes" xml:space="preserve">
          <source>A FieldList represents a list of Fields, enclosed by parentheses or braces.</source>
          <target state="translated">Список полей представляет собой список полей,заключенный в скобки или фигурные скобки.</target>
        </trans-unit>
        <trans-unit id="c37cc883e1e912226df4c951571e7fa7ce2829b4" translate="yes" xml:space="preserve">
          <source>A File is a handle for a file belonging to a FileSet. A File has a name, size, and line offset table.</source>
          <target state="translated">Файл-это ручка для файла,принадлежащего FileSet.Файл имеет имя,размер и таблицу смещения строк.</target>
        </trans-unit>
        <trans-unit id="9ee0630d03f6a617ea080bc8a24478c90c5e33fb" translate="yes" xml:space="preserve">
          <source>A File is a single file in a ZIP archive. The file information is in the embedded FileHeader. The file content can be accessed by calling Open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a9870762bd470aa21565f1e367e985eaadbc5" translate="yes" xml:space="preserve">
          <source>A File is returned by a FileSystem's Open method and can be served by the FileServer implementation.</source>
          <target state="translated">Файл возвращается методом FileSystem's Open и может обслуживаться реализацией FileServer.</target>
        </trans-unit>
        <trans-unit id="933657418db475690f900fc0cb038c8ec20fa23f" translate="yes" xml:space="preserve">
          <source>A File node represents a Go source file.</source>
          <target state="translated">Файловый узел представляет собой исходный файл Go.</target>
        </trans-unit>
        <trans-unit id="2afc7a63ddbc6cb554c3d1efc43110516b55f864" translate="yes" xml:space="preserve">
          <source>A File provides access to a single file. The File interface is the minimum implementation required of the file. A file may implement additional interfaces, such as ReadDirFile, ReaderAt, or Seeker, to provide additional or optimized functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88092327b3f39b704b7d9dafd634ca25e188e4c7" translate="yes" xml:space="preserve">
          <source>A File represents an open ELF file.</source>
          <target state="translated">Файл представляет собой открытый ELF-файл.</target>
        </trans-unit>
        <trans-unit id="65e617a52a2a3202382d475d890e7de2c4e15f40" translate="yes" xml:space="preserve">
          <source>A File represents an open Mach-O file.</source>
          <target state="translated">Файл представляет собой открытый файл Mach-O.</target>
        </trans-unit>
        <trans-unit id="705c0d822b227bbdfb608bdb5b0dd5b1341bcaf4" translate="yes" xml:space="preserve">
          <source>A File represents an open PE file.</source>
          <target state="translated">Файл представляет собой открытый PE-файл.</target>
        </trans-unit>
        <trans-unit id="e8041758a835e2e671f1edd9a36a5c0717c227b6" translate="yes" xml:space="preserve">
          <source>A File represents an open Plan 9 a.out file.</source>
          <target state="translated">Файл представляет собой открытый файл плана 9 a.out.</target>
        </trans-unit>
        <trans-unit id="1b02261788cea23a7e13cd4df1998baba9a3f063" translate="yes" xml:space="preserve">
          <source>A FileHeader describes a file part of a multipart request.</source>
          <target state="translated">FileHeader описывает файловую часть запроса,состоящего из нескольких частей.</target>
        </trans-unit>
        <trans-unit id="3e9ebbcbf6bf5d2e7a5168723d1cd92457a28d9c" translate="yes" xml:space="preserve">
          <source>A FileHeader represents a Mach-O file header.</source>
          <target state="translated">FileHeader представляет собой заголовок файла Mach-O.</target>
        </trans-unit>
        <trans-unit id="c464dfa1166cb87240fc924ea37de926c8387ff0" translate="yes" xml:space="preserve">
          <source>A FileHeader represents a Plan 9 a.out file header.</source>
          <target state="translated">FileHeader представляет собой заголовок файла Plan 9 a.out.</target>
        </trans-unit>
        <trans-unit id="44f8b75b12734f33f611a1d8eac4363a03be63e4" translate="yes" xml:space="preserve">
          <source>A FileHeader represents an ELF file header.</source>
          <target state="translated">FileHeader представляет собой заголовок файла ELF.</target>
        </trans-unit>
        <trans-unit id="de6784d1f1cbed04559df2db8caf5220c3d40a51" translate="yes" xml:space="preserve">
          <source>A FileInfo describes a file and is returned by Stat and Lstat.</source>
          <target state="translated">FileInfo описывает файл и возвращается Stat и Lstat.</target>
        </trans-unit>
        <trans-unit id="aaa73d34b400d1c4a285b82620fb6d3a5e71dc3c" translate="yes" xml:space="preserve">
          <source>A FileInfo describes a file and is returned by Stat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256e3c3b330f9698a158d9ebc412d515e72f62ef" translate="yes" xml:space="preserve">
          <source>A FileMode represents a file's mode and permission bits. The bits have the same definition on all systems, so that information about files can be moved from one system to another portably. Not all bits apply to all systems. The only required bit is ModeDir for directories.</source>
          <target state="translated">Режим FileMode представляет собой режим работы файла и биты разрешений.Биты имеют одинаковое определение на всех системах,так что информация о файлах может переноситься с одной системы на другую порционно.Не все биты применимы ко всем системам.Единственный требуемый бит-это ModeDir для каталогов.</target>
        </trans-unit>
        <trans-unit id="071474a5e59c2cbe4022eddafca1945a74b7de9b" translate="yes" xml:space="preserve">
          <source>A FileSet represents a set of source files. Methods of file sets are synchronized; multiple goroutines may invoke them concurrently.</source>
          <target state="translated">FileSet представляет собой набор исходных файлов.Методы набора файлов синхронизированы;несколько горизонтов могут вызывать их одновременно.</target>
        </trans-unit>
        <trans-unit id="0b2dd840727f49f9eba8be4237966f01f435fad4" translate="yes" xml:space="preserve">
          <source>A FileSystem implements access to a collection of named files. The elements in a file path are separated by slash ('/', U+002F) characters, regardless of host operating system convention.</source>
          <target state="translated">FileSystem реализует доступ к коллекции именованных файлов.Элементы в пути к файлу разделены символами косая черта ('/',U+002F),независимо от соглашения с хостовой операционной системой.</target>
        </trans-unit>
        <trans-unit id="123d2a4f6256f0c161a1a3b1c9530ec27791da3a" translate="yes" xml:space="preserve">
          <source>A FileSystem implements access to a collection of named files. The elements in a file path are separated by slash ('/', U+002F) characters, regardless of host operating system convention. See the FileServer function to convert a FileSystem to a Handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a9e5c4832223d5a011e8dddc53aa5d75c7f4d4" translate="yes" xml:space="preserve">
          <source>A Flag accepts any data and is set to true if present.</source>
          <target state="translated">Флаг принимает любые данные и устанавливается в true,если они присутствуют.</target>
        </trans-unit>
        <trans-unit id="9fa93680f639a304c47bdf98c8a62274d8186d35" translate="yes" xml:space="preserve">
          <source>A Flag represents the state of a flag.</source>
          <target state="translated">Флаг представляет собой состояние флага.</target>
        </trans-unit>
        <trans-unit id="234f76bb20d5f9eec0d53dcc77b2a13d82eadf61" translate="yes" xml:space="preserve">
          <source>A FlagSet represents a set of defined flags. The zero value of a FlagSet has no name and has ContinueOnError error handling.</source>
          <target state="translated">FlagSet представляет собой набор определенных флагов.Нулевое значение FlagSet не имеет имени и имеет функцию обработки ошибок ContinueOnError.</target>
        </trans-unit>
        <trans-unit id="5288f46811dffeaa7ea61e19365d12c9632b9778" translate="yes" xml:space="preserve">
          <source>A FloatType represents a floating point type.</source>
          <target state="translated">FloatType представляет собой тип с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="0b1e4bc4cb382e2c275611b3238464917e62a22d" translate="yes" xml:space="preserve">
          <source>A ForStmt represents a for statement.</source>
          <target state="translated">ForStmt представляет собой заявление.</target>
        </trans-unit>
        <trans-unit id="0c2fc1a03e93ae8b537c5962f0b0b7762e61aaf4" translate="yes" xml:space="preserve">
          <source>A FormatError reports that the input is not a valid JPEG.</source>
          <target state="translated">FormatError сообщает,что входной сигнал не является действительным JPEG.</target>
        </trans-unit>
        <trans-unit id="6fad07f1b5a1dbeefd78d7d2f7d158225dd26546" translate="yes" xml:space="preserve">
          <source>A FormatError reports that the input is not a valid PNG.</source>
          <target state="translated">FormatError сообщает,что входной сигнал не является действительным PNG.</target>
        </trans-unit>
        <trans-unit id="dc9cb9f874380cdd581f85bc7cca4178b91bf7ca" translate="yes" xml:space="preserve">
          <source>A Func collects information about a single function.</source>
          <target state="translated">Функция собирает информацию об одной функции.</target>
        </trans-unit>
        <trans-unit id="49cb9decf874b456f0efef0977636083343d1115" translate="yes" xml:space="preserve">
          <source>A Func represents a Go function in the running binary.</source>
          <target state="translated">Функция представляет собой функцию Go в работающем двоичном коде.</target>
        </trans-unit>
        <trans-unit id="11647ec5e44e1c0de00d02c89c294903e5e1dff5" translate="yes" xml:space="preserve">
          <source>A Func represents a declared function, concrete method, or abstract (interface) method. Its Type() is always a *Signature. An abstract method may belong to many interfaces due to embedding.</source>
          <target state="translated">Функция представляет собой объявленную функцию,конкретный метод или абстрактный (интерфейсный)метод.Его Type()всегда является *Подписью.Благодаря встраиванию абстрактный метод может принадлежать ко многим интерфейсам.</target>
        </trans-unit>
        <trans-unit id="e94aa8231cb387fe4a10412ff3ac134dd8f4c188" translate="yes" xml:space="preserve">
          <source>A FuncDecl node represents a function declaration.</source>
          <target state="translated">Узел FuncDecl представляет собой декларацию функций.</target>
        </trans-unit>
        <trans-unit id="94e066c3ac487a79d47768c2220a49644d0bf184" translate="yes" xml:space="preserve">
          <source>A FuncLit node represents a function literal.</source>
          <target state="translated">Узел FuncLit представляет собой буквальную функцию.</target>
        </trans-unit>
        <trans-unit id="09e2235228768330e677d304af97960b02fdd8c5" translate="yes" xml:space="preserve">
          <source>A FuncType node represents a function type.</source>
          <target state="translated">Узел FuncType представляет собой тип функции.</target>
        </trans-unit>
        <trans-unit id="dec14bd2e595d84c173c9bf0c1df71b1223eddb0" translate="yes" xml:space="preserve">
          <source>A FuncType represents a function type.</source>
          <target state="translated">FuncType представляет собой тип функции.</target>
        </trans-unit>
        <trans-unit id="987651ff41c347596f94cc565b5f05d25059c2c5" translate="yes" xml:space="preserve">
          <source>A GenDecl node (generic declaration node) represents an import, constant, type or variable declaration. A valid Lparen position (Lparen.IsValid()) indicates a parenthesized declaration.</source>
          <target state="translated">Узел GenDecl (узел общей декларации)представляет собой импорт,константу,декларацию типа или переменной.Действительная позиция Lparen (Lparen.IsValid())указывает на декларацию в скобках.</target>
        </trans-unit>
        <trans-unit id="9ebbcb57a5319bb37519fc330de793ad98efdcc2" translate="yes" xml:space="preserve">
          <source>A Generator can generate random values of its own type.</source>
          <target state="translated">Генератор может генерировать случайные значения своего типа.</target>
        </trans-unit>
        <trans-unit id="f7392f9c16fbf06ab7c6da260bf4fbc760032bca" translate="yes" xml:space="preserve">
          <source>A GlobFS is a file system with a Glob method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5be6dbdc273931973aa00fee70bb05d983c538" translate="yes" xml:space="preserve">
          <source>A GoStmt node represents a go statement.</source>
          <target state="translated">Узел GoStmt представляет собой заявление GoStmt.</target>
        </trans-unit>
        <trans-unit id="ead9a9b0d839e98932b0f6df6d7a5bcac06a117e" translate="yes" xml:space="preserve">
          <source>A Handler responds to an HTTP request.</source>
          <target state="translated">Обработчик отвечает на HTTP-запрос.</target>
        </trans-unit>
        <trans-unit id="1137ce84e7b2173907b2beb75a048008a6d1a1fd" translate="yes" xml:space="preserve">
          <source>A HardwareAddr represents a physical hardware address.</source>
          <target state="translated">HardwareAddr представляет собой физический аппаратный адрес.</target>
        </trans-unit>
        <trans-unit id="c9320e532171c850b14082c900a145afe8441404" translate="yes" xml:space="preserve">
          <source>A Hash computes a seeded hash of a byte sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239b8206fa3c13412576b7d00c33187540cdc221" translate="yes" xml:space="preserve">
          <source>A Hash is not safe for concurrent use by multiple goroutines, but a Seed is. If multiple goroutines must compute the same seeded hash, each can declare its own Hash and call SetSeed with a common Seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66aa09d50694e8606590bbd853e20a5cf82fa277" translate="yes" xml:space="preserve">
          <source>A Header represents a single header in a tar archive. Some fields may not be populated.</source>
          <target state="translated">Заголовок представляет собой один заголовок в архиве смолы.Некоторые поля могут быть не заполнены.</target>
        </trans-unit>
        <trans-unit id="a628db49b644e43a3caa5d22dfaed6a4347d3671" translate="yes" xml:space="preserve">
          <source>A Header represents the key-value pairs in a mail message header.</source>
          <target state="translated">Заголовок представляет пары ключ-значение в заголовке почтового сообщения.</target>
        </trans-unit>
        <trans-unit id="80136957adb9f160575a77527ac0cff8fd0f4621" translate="yes" xml:space="preserve">
          <source>A Header represents the key-value pairs in an HTTP header.</source>
          <target state="translated">Заголовок представляет пары ключ-значение в заголовке HTTP.</target>
        </trans-unit>
        <trans-unit id="5c29d59b81052100c179f70c4a67ff5067616d1b" translate="yes" xml:space="preserve">
          <source>A KeyValueExpr node represents (key : value) pairs in composite literals.</source>
          <target state="translated">Узел KeyValueExpr представляет (ключ:значение)пары в составных буквах.</target>
        </trans-unit>
        <trans-unit id="e8df5878bb0e127b0ade93df9aeeb99a31d76beb" translate="yes" xml:space="preserve">
          <source>A Kind represents the specific kind of type that a Type represents. The zero Kind is not a valid kind.</source>
          <target state="translated">Вид представляет собой специфический тип,который представляет тип.Нулевой тип не является действительным.</target>
        </trans-unit>
        <trans-unit id="17ad9a62d94b60c7b9f57fee9752262c3aabb885" translate="yes" xml:space="preserve">
          <source>A Label represents a declared label. Labels don't have a type.</source>
          <target state="translated">Этикетка представляет собой заявленную этикетку.У этикеток нет шрифта.</target>
        </trans-unit>
        <trans-unit id="7c46c66dc93e06bd07a9972be686c8a8ccb6cbaf" translate="yes" xml:space="preserve">
          <source>A LabeledStmt node represents a labeled statement.</source>
          <target state="translated">Узел LabeledStmt представляет собой маркированное заявление.</target>
        </trans-unit>
        <trans-unit id="fd993e336f0b681922292ae796d58612702dde0c" translate="yes" xml:space="preserve">
          <source>A LimitedReader reads from R but limits the amount of data returned to just N bytes. Each call to Read updates N to reflect the new amount remaining. Read returns EOF when N &amp;lt;= 0 or when the underlying R returns EOF.</source>
          <target state="translated">LimitedReader читает из R, но ограничивает объем возвращаемых данных до N байтов. Каждый вызов Read обновляет N, чтобы отразить новую оставшуюся сумму. Чтение возвращает EOF, когда N &amp;lt;= 0 или когда базовый R возвращает EOF.</target>
        </trans-unit>
        <trans-unit id="ae901c0f03f89889b69882a9a6cb3cf314dfa370" translate="yes" xml:space="preserve">
          <source>A LineEntry is a row in a DWARF line table.</source>
          <target state="translated">LineEntry-это строка в DWARF-таблице строк.</target>
        </trans-unit>
        <trans-unit id="8b5b21c9cee22599568846d4db957ad7b4308aac" translate="yes" xml:space="preserve">
          <source>A LineFile is a source file referenced by a DWARF line table entry.</source>
          <target state="translated">LineFile-это исходный файл,на который ссылается запись таблицы строк DWARF.</target>
        </trans-unit>
        <trans-unit id="67c775091aa03ac7f074c1f43b66b9020494df47" translate="yes" xml:space="preserve">
          <source>A LineReader reads a sequence of LineEntry structures from a DWARF &quot;line&quot; section for a single compilation unit. LineEntries occur in order of increasing PC and each LineEntry gives metadata for the instructions from that LineEntry's PC to just before the next LineEntry's PC. The last entry will have its EndSequence field set.</source>
          <target state="translated">LineReader считывает последовательность структур LineEntry из &quot;линейной&quot; секции DWARF для одной единицы компиляции.LineEntries происходят в порядке возрастания ПК,и каждая LineEntry выдаёт метаданные для инструкций с этого ПК непосредственно перед следующим ПК LineEntry.Последняя запись будет иметь свой набор полей EndSequence.</target>
        </trans-unit>
        <trans-unit id="732f9020aab568e65bf527050a453f3db3f95343" translate="yes" xml:space="preserve">
          <source>A LineReaderPos represents a position in a line table.</source>
          <target state="translated">LineReaderPos представляет собой позицию в линейной таблице.</target>
        </trans-unit>
        <trans-unit id="2c1eec29b34e8edeb556d192a830487d8f9953c5" translate="yes" xml:space="preserve">
          <source>A LineTable is a data structure mapping program counters to line numbers.</source>
          <target state="translated">LineTable-это структура данных,сопоставляющая счетчики программы с номерами линий.</target>
        </trans-unit>
        <trans-unit id="660bb86f96243fdd09f53c12cec51a542f1df102" translate="yes" xml:space="preserve">
          <source>A Listener is a generic network listener for stream-oriented protocols.</source>
          <target state="translated">Прослушиватель-это общий сетевой прослушиватель для потоково-ориентированных протоколов.</target>
        </trans-unit>
        <trans-unit id="4249368f5406670bcb59c0da03a6cead7099cb8f" translate="yes" xml:space="preserve">
          <source>A Load represents any Mach-O load command.</source>
          <target state="translated">Загрузка представляет собой любую команду загрузки Mach-O.</target>
        </trans-unit>
        <trans-unit id="a677c9d8c8b2e116341c7310869a6eddad18fb38" translate="yes" xml:space="preserve">
          <source>A LoadBytes is the uninterpreted bytes of a Mach-O load command.</source>
          <target state="translated">LoadBytes-это неинтерпретированные байты команды загрузки Mach-O.</target>
        </trans-unit>
        <trans-unit id="e4e8327c6dd261427fb252f08dc735a316819bd2" translate="yes" xml:space="preserve">
          <source>A LoadCmd is a Mach-O load command.</source>
          <target state="translated">LoadCmd-это команда загрузки Mach-O.</target>
        </trans-unit>
        <trans-unit id="de22bbb1e6bed3a2831a2b27a98bb521911db92a" translate="yes" xml:space="preserve">
          <source>A Location maps time instants to the zone in use at that time. Typically, the Location represents the collection of time offsets in use in a geographical area, such as CEST and CET for central Europe.</source>
          <target state="translated">A Местоположение отображает время в мгновение ока на используемую в то время зону.Как правило,Местоположение представляет собой набор временных коррективов,используемых в географическом районе,например,CEST и CET для Центральной Европы.</target>
        </trans-unit>
        <trans-unit id="33ab9763fb8fae6caa0aeaa939c5f11f4240c8a6" translate="yes" xml:space="preserve">
          <source>A Location maps time instants to the zone in use at that time. Typically, the Location represents the collection of time offsets in use in a geographical area. For many Locations the time offset varies depending on whether daylight savings time is in use at the time instant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e29abdad9487b902fd4f90738f02f8576cb3d7e" translate="yes" xml:space="preserve">
          <source>A Locker represents an object that can be locked and unlocked.</source>
          <target state="translated">Блокировка представляет собой объект,который может быть заблокирован и разблокирован.</target>
        </trans-unit>
        <trans-unit id="9dcd5e9754f765ea5f5fe27dc49c6d83fe4fae5b" translate="yes" xml:space="preserve">
          <source>A Logger represents an active logging object that generates lines of output to an io.Writer. Each logging operation makes a single call to the Writer's Write method. A Logger can be used simultaneously from multiple goroutines; it guarantees to serialize access to the Writer.</source>
          <target state="translated">Логгер представляет собой активный объект протоколирования,который генерирует строки для вывода на io.Writer.Каждая операция протоколирования производит один вызов метода Writer's Write.Логгер может использоваться одновременно из нескольких goroutines;он гарантирует сериализовать доступ к Writer.</target>
        </trans-unit>
        <trans-unit id="487666de9e9a85c5d9356cc5cf81a3f898319e56" translate="yes" xml:space="preserve">
          <source>A Lookup function returns a reader to access package data for a given import path, or an error if no matching package is found.</source>
          <target state="translated">Функция Lookup возвращает читателю доступ к данным пакета для заданного пути импорта,или ошибку,если соответствующий пакет не найден.</target>
        </trans-unit>
        <trans-unit id="d0c2fe60534ab38b9f6eff1d8a7f8316ae318de2" translate="yes" xml:space="preserve">
          <source>A MIMEHeader represents a MIME-style header mapping keys to sets of values.</source>
          <target state="translated">MIMEHeader представляет собой MIME-клавиши отображения заголовков к наборам значений.</target>
        </trans-unit>
        <trans-unit id="622676ae57a63cdd4f63cf5d044541da87280d44" translate="yes" xml:space="preserve">
          <source>A Map represents a map type.</source>
          <target state="translated">Карта представляет собой тип карты.</target>
        </trans-unit>
        <trans-unit id="e2963f2183225a30dfaeae611c129ded79777942" translate="yes" xml:space="preserve">
          <source>A MapFS is a simple in-memory file system for use in tests, represented as a map from path names (arguments to Open) to information about the files or directories they represent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0ad14a39e50668ba7fb687a162b63de60f4aec" translate="yes" xml:space="preserve">
          <source>A MapFile describes a single file in a MapFS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7049fcfd9e1c276e6fb9a68c8637a2f14ff913c1" translate="yes" xml:space="preserve">
          <source>A MapIter is an iterator for ranging over a map. See Value.MapRange.</source>
          <target state="translated">MapIter-это итератор,позволяющий перемещаться по карте.См.раздел Value.MapRange.</target>
        </trans-unit>
        <trans-unit id="3993e367e0709848b06c8418048cd1fd43363eb0" translate="yes" xml:space="preserve">
          <source>A MapType node represents a map type.</source>
          <target state="translated">Узел MapType представляет собой тип карты.</target>
        </trans-unit>
        <trans-unit id="79cb9a3cdf800543257c71ff431c6c3132c71d91" translate="yes" xml:space="preserve">
          <source>A MarshalerError represents an error from calling a MarshalJSON or MarshalText method.</source>
          <target state="translated">MarshalerError представляет собой ошибку при вызове метода MarshalJSON или MarshalText.</target>
        </trans-unit>
        <trans-unit id="50fe2f21d711b0be55d76651cc008c7c5ed77cab" translate="yes" xml:space="preserve">
          <source>A MemProfileRecord describes the live objects allocated by a particular call sequence (stack trace).</source>
          <target state="translated">MemProfileRecord описывает живые объекты,выделенные определенной последовательностью вызовов (трасса стека).</target>
        </trans-unit>
        <trans-unit id="38f79d159c830caf08bfe0d93506b8d5225e9aeb" translate="yes" xml:space="preserve">
          <source>A MemStats records statistics about the memory allocator.</source>
          <target state="translated">В MemStats записывается статистика о выделении памяти.</target>
        </trans-unit>
        <trans-unit id="c5a8857d4132dff66ceaae33ce8008ebbeba4c4f" translate="yes" xml:space="preserve">
          <source>A Message represents a parsed mail message.</source>
          <target state="translated">Сообщение представляет собой разобранное почтовое сообщение.</target>
        </trans-unit>
        <trans-unit id="1b2aa75f290a4b618dbec620b1977caee89888e1" translate="yes" xml:space="preserve">
          <source>A MethodSet is an ordered set of concrete or abstract (interface) methods; a method is a MethodVal selection, and they are ordered by ascending m.Obj().Id(). The zero value for a MethodSet is a ready-to-use empty method set.</source>
          <target state="translated">Набор MethodSet-это упорядоченный набор конкретных или абстрактных (интерфейсных)методов;метод-это выборка MethodVal,и они упорядочены по возрастанию m.Obj().Id().Нулевое значение для метода MethodSet-это готовый к использованию набор пустых методов.</target>
        </trans-unit>
        <trans-unit id="e93d6d78eddbae4e7fad7a6a0ca260a0ccf86c67" translate="yes" xml:space="preserve">
          <source>A Mode value is a set of flags (or 0). They control printing.</source>
          <target state="translated">Значение режима-это набор флагов (или 0).Они управляют печатью.</target>
        </trans-unit>
        <trans-unit id="909b6ff9f9762f14bdb401dcb300258f57bf1c0e" translate="yes" xml:space="preserve">
          <source>A Mode value is a set of flags (or 0). They control the amount of source code parsed and other optional parser functionality.</source>
          <target state="translated">Значение режима-это набор флагов (или 0).Они управляют количеством разобранного исходного кода и другими дополнительными функциями парсера.</target>
        </trans-unit>
        <trans-unit id="acbe3072fb44246dc2f2f9161a57bc0fa3f9ebfd" translate="yes" xml:space="preserve">
          <source>A Month specifies a month of the year (January = 1, ...).</source>
          <target state="translated">Месяц указывает месяц года (Январь=1,...).</target>
        </trans-unit>
        <trans-unit id="2d2089df68698ac7feab420a1c41c5fc327b3dac" translate="yes" xml:space="preserve">
          <source>A Mutex is a mutual exclusion lock. The zero value for a Mutex is an unlocked mutex.</source>
          <target state="translated">Мутекс-это замок взаимного исключения.Нулевое значение для Мьютекса-разблокированный мьютекс.</target>
        </trans-unit>
        <trans-unit id="7ea74f6825074782367f3065384e5f974abea778" translate="yes" xml:space="preserve">
          <source>A Mutex must not be copied after first use.</source>
          <target state="translated">Мутекс нельзя копировать после первого использования.</target>
        </trans-unit>
        <trans-unit id="5d293e79fd0c88cc0ff4965a2c2b6a9bcc2c6ddd" translate="yes" xml:space="preserve">
          <source>A Name represents an XML name (Local) annotated with a name space identifier (Space). In tokens returned by Decoder.Token, the Space identifier is given as a canonical URL, not the short prefix used in the document being parsed.</source>
          <target state="translated">Имя представляет собой имя XML (Local),аннотированное идентификатором пространства имен (Space).В токенах,возвращаемых Decoder.Token,идентификатор пробела дается в виде канонического URL,а не в виде короткого префикса,используемого при разборе документа.</target>
        </trans-unit>
        <trans-unit id="d2a35c8ef18f02eb6678ba34eacf3ba11a633953" translate="yes" xml:space="preserve">
          <source>A Named represents a named type.</source>
          <target state="translated">A Named представляет собой именованный тип.</target>
        </trans-unit>
        <trans-unit id="bad92076aa525c820eebcc24b8c3805b37fbfbe9" translate="yes" xml:space="preserve">
          <source>A NamedArg is a named argument. NamedArg values may be used as arguments to Query or Exec and bind to the corresponding named parameter in the SQL statement.</source>
          <target state="translated">A NamedArg-это именной аргумент.Значения NamedArg могут быть использованы в качестве аргументов для Query или Exec и привязки к соответствующему именованному параметру в SQL-операторе.</target>
        </trans-unit>
        <trans-unit id="b11131cc805ed1ab6e3f58bee92b0fe2c5fa87f5" translate="yes" xml:space="preserve">
          <source>A Node is an element in the parse tree. The interface is trivial. The interface contains an unexported method so that only types local to this package can satisfy it.</source>
          <target state="translated">Узел-это элемент дерева разбора.Интерфейс тривиален.Интерфейс содержит неисследованный метод,так что только типы,локальные для данного пакета,могут удовлетворить его.</target>
        </trans-unit>
        <trans-unit id="e51a98d9262519707b6bbbedbe4fa1f5c63ac898" translate="yes" xml:space="preserve">
          <source>A NotExpr represents the expression !X (the negation of X).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a72472f993ff8c5c76aed9654461ad595b3054" translate="yes" xml:space="preserve">
          <source>A Note represents a marked comment starting with &quot;MARKER(uid): note body&quot;. Any note with a marker of 2 or more upper case [A-Z] letters and a uid of at least one character is recognized. The &quot;:&quot; following the uid is optional. Notes are collected in the Package.Notes map indexed by the notes marker.</source>
          <target state="translated">Примечание представляет собой помеченный комментарий,начинающийся с &quot;MARKER(uid):тело примечания&quot;.Любая заметка с маркером,состоящим из 2 или более прописных букв [A-Z]и uid хотя бы из одного символа,распознается.Следующий за uid символ &quot;:&quot; является необязательным.Заметки собираются на карте &quot;Package.Notes&quot;,индексированной маркером заметки.</target>
        </trans-unit>
        <trans-unit id="b87cef5499b5faeaad54c5a5f5e0e7973e06869e" translate="yes" xml:space="preserve">
          <source>A NumError records a failed conversion.</source>
          <target state="translated">NumError записывает неудачное преобразование.</target>
        </trans-unit>
        <trans-unit id="11a76b8e336e5f32dd052064b8407eb081806fc1" translate="yes" xml:space="preserve">
          <source>A Number represents a JSON number literal.</source>
          <target state="translated">Номер представляет собой буквальное число JSON.</target>
        </trans-unit>
        <trans-unit id="202f3eabb7fc2deaa907f4e98ee641e11f3ba612" translate="yes" xml:space="preserve">
          <source>A Once must not be copied after first use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df70dd442167e536bbc2f2719a1ff6771d9746a" translate="yes" xml:space="preserve">
          <source>A PB is used by RunParallel for running parallel benchmarks.</source>
          <target state="translated">PB используется RunParallel для запуска параллельных бенчмарков.</target>
        </trans-unit>
        <trans-unit id="28cce0d7447d20a26f79cc7de8f2ffb5f6cea243" translate="yes" xml:space="preserve">
          <source>A Package describes a Go package.</source>
          <target state="translated">Пакет описывает пакет &quot;Go&quot;.</target>
        </trans-unit>
        <trans-unit id="02c5b186c0d9829ef0b314c7d197a99b06cc08aa" translate="yes" xml:space="preserve">
          <source>A Package describes the Go package found in a directory.</source>
          <target state="translated">Пакет описывает пакет &quot;Go&quot;,находящийся в каталоге.</target>
        </trans-unit>
        <trans-unit id="f7c6a2c88c2a925b1bb13b3770480bc4b1e2f8ba" translate="yes" xml:space="preserve">
          <source>A Package node represents a set of source files collectively building a Go package.</source>
          <target state="translated">Узел пакета представляет собой набор исходных файлов,собирающих пакет Go.</target>
        </trans-unit>
        <trans-unit id="b80c490a82963253ea198d8237d2b88bfeb3fb8f" translate="yes" xml:space="preserve">
          <source>A ParenExpr node represents a parenthesized expression.</source>
          <target state="translated">Узел ParenExpr представляет собой выражение в скобках.</target>
        </trans-unit>
        <trans-unit id="32dd285c0ed7aac470e40a0806903efe3cbc3142" translate="yes" xml:space="preserve">
          <source>A ParseError is returned for parsing errors. Line numbers are 1-indexed and columns are 0-indexed.</source>
          <target state="translated">Для ошибок при разборе возвращается ParseError.Номера строк 1-индексированы,столбцы 0-индексированы.</target>
        </trans-unit>
        <trans-unit id="48c4f65b46772ce507deaf319632461e9a6e8fdd" translate="yes" xml:space="preserve">
          <source>A ParseError is the error type of literal network address parsers.</source>
          <target state="translated">ParseError-это тип ошибки буквального анализатора сетевых адресов.</target>
        </trans-unit>
        <trans-unit id="1d6824c6cf712cde9f9af9dccccc1da24901cb92" translate="yes" xml:space="preserve">
          <source>A Part represents a single part in a multipart body.</source>
          <target state="translated">Часть представляет собой единую часть в многокомпонентном корпусе.</target>
        </trans-unit>
        <trans-unit id="dfbcc0e114727389cb8279668c19d2287bd264b1" translate="yes" xml:space="preserve">
          <source>A PipeReader is the read half of a pipe.</source>
          <target state="translated">PipeReader-это прочитанная половина трубы.</target>
        </trans-unit>
        <trans-unit id="9a19697f20ff89cf7a057258dbab42f40577989a" translate="yes" xml:space="preserve">
          <source>A PipeWriter is the write half of a pipe.</source>
          <target state="translated">PipeWriter-это пишущая половина трубы.</target>
        </trans-unit>
        <trans-unit id="acf94f04062b96beb777e42fe455475a158fb691" translate="yes" xml:space="preserve">
          <source>A Pipeline manages a pipelined in-order request/response sequence.</source>
          <target state="translated">Трубопровод управляет последовательностью запросов/ответов по заказу.</target>
        </trans-unit>
        <trans-unit id="f6f05dedc14eb801e2b7f04687804ef382acb51d" translate="yes" xml:space="preserve">
          <source>A PkgName represents an imported Go package. PkgNames don't have a type.</source>
          <target state="translated">PkgName представляет собой импортированный пакет Go.У PkgNames нет типа.</target>
        </trans-unit>
        <trans-unit id="607046c718991e5cb3d6ed4816dc42aea8d71afc" translate="yes" xml:space="preserve">
          <source>A Point is an X, Y coordinate pair. The axes increase right and down.</source>
          <target state="translated">Точка-это пара координат X,Y.Оси увеличиваются вправо и вниз.</target>
        </trans-unit>
        <trans-unit id="768a88aa5e8bc4257378b5f3eb8e284db1c2866f" translate="yes" xml:space="preserve">
          <source>A Pointer represents a pointer type.</source>
          <target state="translated">Указатель представляет собой тип указателя.</target>
        </trans-unit>
        <trans-unit id="7ed4f38838cc5e5bef3db6e4277a894844db4ea3" translate="yes" xml:space="preserve">
          <source>A Pool is a set of temporary objects that may be individually saved and retrieved.</source>
          <target state="translated">Пул-это набор временных объектов,которые могут быть сохранены и восстановлены по отдельности.</target>
        </trans-unit>
        <trans-unit id="9590c606b3343da60b471a73764edc1f4d765202" translate="yes" xml:space="preserve">
          <source>A Pool is safe for use by multiple goroutines simultaneously.</source>
          <target state="translated">Бассейн безопасен для использования несколькими гориллами одновременно.</target>
        </trans-unit>
        <trans-unit id="5b2599ed95be6202d4666b2852d55218a76b0d8a" translate="yes" xml:space="preserve">
          <source>A Pool must not be copied after first use.</source>
          <target state="translated">Бассейн не должен быть скопирован после первого использования.</target>
        </trans-unit>
        <trans-unit id="d8fd9c4a12bc6fc10b6879d22ea87ecc71842c25" translate="yes" xml:space="preserve">
          <source>A PrivateKey represents an RSA key</source>
          <target state="translated">PrivateKey представляет собой ключ RSA</target>
        </trans-unit>
        <trans-unit id="7f7e88b0c38cbd0d62f840c3829e6e5bc2b140c6" translate="yes" xml:space="preserve">
          <source>A ProcInst represents an XML processing instruction of the form &amp;lt;?target inst?&amp;gt;</source>
          <target state="translated">ProcInst представляет собой инструкцию обработки XML в форме &amp;lt;? Target inst?&amp;gt;</target>
        </trans-unit>
        <trans-unit id="edd41d0f8525a0b5ab2821d1add949d3f2b61e7c" translate="yes" xml:space="preserve">
          <source>A Profile is a collection of stack traces showing the call sequences that led to instances of a particular event, such as allocation. Packages can create and maintain their own profiles; the most common use is for tracking resources that must be explicitly closed, such as files or network connections.</source>
          <target state="translated">Профиль-это набор трасс стека,показывающих последовательности вызовов,которые привели к определенным событиям,например,к распределению.Пакеты могут создавать и поддерживать свои собственные профили;наиболее часто используется для отслеживания ресурсов,которые должны быть явно закрыты,например,файлы или сетевые соединения.</target>
        </trans-unit>
        <trans-unit id="f7ad9992477be411f2a70474056f365c9cf6755d" translate="yes" xml:space="preserve">
          <source>A Profile's methods can be called from multiple goroutines simultaneously.</source>
          <target state="translated">Методы профиля могут быть вызваны из нескольких горутинов одновременно.</target>
        </trans-unit>
        <trans-unit id="36aae9f1173dd65c1ae807cca4a4b207b2c93026" translate="yes" xml:space="preserve">
          <source>A Prog is a compiled regular expression program.</source>
          <target state="translated">Prog-это скомпилированная программа регулярных выражений.</target>
        </trans-unit>
        <trans-unit id="77c6b957fd156c74c873357c407dbfd5609bc6a5" translate="yes" xml:space="preserve">
          <source>A Prog represents a single ELF program header in an ELF binary.</source>
          <target state="translated">Prog представляет собой один заголовок программы ELF в двоичном файле ELF.</target>
        </trans-unit>
        <trans-unit id="d3afa7d31fec2d457dace7f415ebe339b6173396" translate="yes" xml:space="preserve">
          <source>A ProgHeader represents a single ELF program header.</source>
          <target state="translated">ProgHeader представляет собой единый заголовок программы ELF.</target>
        </trans-unit>
        <trans-unit id="a668757fb0cd173dc1eca56fe18304f67be91ed0" translate="yes" xml:space="preserve">
          <source>A ProtocolError describes a protocol violation such as an invalid response or a hung-up connection.</source>
          <target state="translated">Ошибка протокола (ProtocolError)описывает нарушение протокола,например,недействительный ответ или зависание соединения.</target>
        </trans-unit>
        <trans-unit id="f6b39dc81130cc794cc964502f8f09dded02f3b0" translate="yes" xml:space="preserve">
          <source>A PtrType represents a pointer type.</source>
          <target state="translated">PtrType представляет собой тип указателя.</target>
        </trans-unit>
        <trans-unit id="dcb21686aafe13c9342b5eb4d71053646debb6a6" translate="yes" xml:space="preserve">
          <source>A PublicKey represents the public part of an RSA key.</source>
          <target state="translated">Публичный ключ представляет публичную часть ключа RSA.</target>
        </trans-unit>
        <trans-unit id="6f4e8d1859ff0d3e7c1427e6e64066e900cad3cb" translate="yes" xml:space="preserve">
          <source>A QualType represents a type that has the C/C++ &quot;const&quot;, &quot;restrict&quot;, or &quot;volatile&quot; qualifier.</source>
          <target state="translated">QualType представляет тип,который имеет C/C++квалификацию &quot;const&quot;,&quot;limit&quot; или &quot;volatile&quot;.</target>
        </trans-unit>
        <trans-unit id="ebdeaadb141050dca0205834e1f70052f8794133" translate="yes" xml:space="preserve">
          <source>A Qualifier controls how named package-level objects are printed in calls to TypeString, ObjectString, and SelectionString.</source>
          <target state="translated">Qualifier управляет тем,как именованные объекты пакетного уровня печатаются в вызовах TypeString,ObjectString и SelectionString.</target>
        </trans-unit>
        <trans-unit id="9938b28874a070149d52e6d6227a0422577f7a32" translate="yes" xml:space="preserve">
          <source>A RWMutex is a reader/writer mutual exclusion lock. The lock can be held by an arbitrary number of readers or a single writer. The zero value for a RWMutex is an unlocked mutex.</source>
          <target state="translated">RWMutex-это блокировка взаимного исключения читателя/записывающего устройства.Блокировка может удерживаться произвольным количеством считывателей или одним пишущим устройством.Нулевое значение для RWMutex-разблокированный мьютекс.</target>
        </trans-unit>
        <trans-unit id="293a28f976ca91641319ee6ab2cb3a59843417d8" translate="yes" xml:space="preserve">
          <source>A RWMutex must not be copied after first use.</source>
          <target state="translated">RWMutex нельзя копировать после первого использования.</target>
        </trans-unit>
        <trans-unit id="4a44a812184753ee800df2d3024080a1d07ae0b6" translate="yes" xml:space="preserve">
          <source>A Rand is a source of random numbers.</source>
          <target state="translated">Рэнд-источник случайных чисел.</target>
        </trans-unit>
        <trans-unit id="a6beab053e966a50e6a7d98a758b86f986af4670" translate="yes" xml:space="preserve">
          <source>A RangeStmt represents a for statement with a range clause.</source>
          <target state="translated">RangeStmt представляет собой заявление о диапазоне с оговоркой.</target>
        </trans-unit>
        <trans-unit id="5fca0333648aed85f5f684d09865e5a2e91742f5" translate="yes" xml:space="preserve">
          <source>A Rat represents a quotient a/b of arbitrary precision. The zero value for a Rat represents the value 0.</source>
          <target state="translated">Крыса представляет собой коэффициент a/b произвольной точности.Нулевое значение для Крысы представляет собой значение 0.</target>
        </trans-unit>
        <trans-unit id="315d29aa160f5e0113bda9fb7a05adf019e99e29" translate="yes" xml:space="preserve">
          <source>A RawConn is a raw network connection.</source>
          <target state="translated">RawConn-это необработанное сетевое соединение.</target>
        </trans-unit>
        <trans-unit id="1eecc4b388581b7f5af4d0ab92eb3236267e13d7" translate="yes" xml:space="preserve">
          <source>A RawValue represents an undecoded ASN.1 object.</source>
          <target state="translated">RawValue представляет собой недекодированный объект ASN.1.</target>
        </trans-unit>
        <trans-unit id="400e8022f774c8f5cc0f2dfa36ab85bd51911c3a" translate="yes" xml:space="preserve">
          <source>A ReadCloser is a Reader that must be closed when no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075c6276f6595c071bd7b2bf85ed74ad9ee6fe8d" translate="yes" xml:space="preserve">
          <source>A ReadDirFile is a directory file whose entries can be read with the ReadDir method. Every directory file should implement this interface. (It is permissible for any file to implement this interface, but if so ReadDir should return an error for non-directories.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe251d5b99328d7ccb132b5e39275c6ea7e2859" translate="yes" xml:space="preserve">
          <source>A ReadError reports an error encountered while reading input.</source>
          <target state="translated">ReadError сообщает об ошибке,возникшей при чтении входных данных.</target>
        </trans-unit>
        <trans-unit id="ce0546f89447c6257999da2fc59e1b4d0147b988" translate="yes" xml:space="preserve">
          <source>A Reader allows reading Entry structures from a DWARF &amp;ldquo;info&amp;rdquo; section. The Entry structures are arranged in a tree. The Reader's Next function return successive entries from a pre-order traversal of the tree. If an entry has children, its Children field will be true, and the children follow, terminated by an Entry with Tag 0.</source>
          <target state="translated">Reader позволяет читать структуры Entry из раздела &amp;laquo;info&amp;raquo; DWARF. Структуры Entry расположены в виде дерева. Функция Reader's Next возвращает последовательные записи из предварительного обхода дерева. Если у записи есть дочерние элементы, ее поле &amp;laquo;Дети&amp;raquo; будет истинным, а дочерние элементы будут следовать, завершившись записью с тегом 0.</target>
        </trans-unit>
        <trans-unit id="e809231f8a76ae01fe2ed56c6d3370831ff40ccc" translate="yes" xml:space="preserve">
          <source>A Reader implements convenience methods for reading requests or responses from a text protocol network connection.</source>
          <target state="translated">Читатель реализует удобные методы чтения запросов или ответов от сетевого соединения по текстовому протоколу.</target>
        </trans-unit>
        <trans-unit id="a6a7c4a017e93aa40c296520616cda5f285e0277" translate="yes" xml:space="preserve">
          <source>A Reader implements the io.Reader, io.ReaderAt, io.ByteReader, io.ByteScanner, io.RuneReader, io.RuneScanner, io.Seeker, and io.WriterTo interfaces by reading from a string. The zero value for Reader operates like a Reader of an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a71eb177c7cde85aefa079833b1150b094f2eaa" translate="yes" xml:space="preserve">
          <source>A Reader implements the io.Reader, io.ReaderAt, io.Seeker, io.WriterTo, io.ByteScanner, and io.RuneScanner interfaces by reading from a string. The zero value for Reader operates like a Reader of an empty string.</source>
          <target state="translated">Читатель реализует интерфейсы io.Reader,io.ReaderAt,io.Seeker,io.WriterTo,io.ByteScanner и io.RuneScanner путем чтения из строки.Нулевое значение для Reader работает как Читатель пустой строки.</target>
        </trans-unit>
        <trans-unit id="b153ea88d2a4e327aa4d80158226897a894e3c2a" translate="yes" xml:space="preserve">
          <source>A Reader implements the io.Reader, io.ReaderAt, io.WriterTo, io.Seeker, io.ByteScanner, and io.RuneScanner interfaces by reading from a byte slice. Unlike a Buffer, a Reader is read-only and supports seeking. The zero value for Reader operates like a Reader of an empty slice.</source>
          <target state="translated">Читатель реализует интерфейсы io.Reader,io.ReaderAt,io.WriterTo,io.Seeker,io.ByteScanner и io.RuneScanner путем чтения из среза байта.В отличие от буфера,Reader доступен только для чтения и поддерживает поиск.Нулевое значение для Читателя работает как Читатель пустого среза.</target>
        </trans-unit>
        <trans-unit id="b70395118bec2588dcb78aa1e8af11b79076bd1c" translate="yes" xml:space="preserve">
          <source>A Reader is an io.Reader that can be read to retrieve uncompressed data from a gzip-format compressed file.</source>
          <target state="translated">Читатель-это программа io.Reader,которую можно прочитать для получения несжатых данных из сжатого файла gzip-формата.</target>
        </trans-unit>
        <trans-unit id="6574274b38b0f064ff925e7d46ed95bf437111cb" translate="yes" xml:space="preserve">
          <source>A Reader reads records from a CSV-encoded file.</source>
          <target state="translated">Читатель читает записи из файла в CSV-кодировке.</target>
        </trans-unit>
        <trans-unit id="abedb01e30ef5f2b92d42e19278035624fa1b8ad" translate="yes" xml:space="preserve">
          <source>A Reader serves content from a ZIP archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a6e31825ec2c6300d4782fb0ecf058c691b2e5" translate="yes" xml:space="preserve">
          <source>A Rectangle contains the points with Min.X &amp;lt;= X &amp;lt; Max.X, Min.Y &amp;lt;= Y &amp;lt; Max.Y. It is well-formed if Min.X &amp;lt;= Max.X and likewise for Y. Points are always well-formed. A rectangle's methods always return well-formed outputs for well-formed inputs.</source>
          <target state="translated">Прямоугольник содержит точки с Min.X &amp;lt;= X &amp;lt;Max.X, Min.Y &amp;lt;= Y &amp;lt;Max.Y. Он правильно сформирован, если Min.X &amp;lt;= Max.X и аналогично для Y. Точки всегда правильно сформированы. Методы прямоугольника всегда возвращают правильно сформированные выходные данные для правильно сформированных входных данных.</target>
        </trans-unit>
        <trans-unit id="962040a6acd2d013b3cda593f3034f3a6e474cf7" translate="yes" xml:space="preserve">
          <source>A Rectangle is also an Image whose bounds are the rectangle itself. At returns color.Opaque for points in the rectangle and color.Transparent otherwise.</source>
          <target state="translated">Прямоугольник-это также Изображение,границами которого является сам прямоугольник.При возврате color.Opaque для точек прямоугольника и color.Transparent иначе.</target>
        </trans-unit>
        <trans-unit id="2b5c4eab8e85410a86bdda5dd0182e066f957435" translate="yes" xml:space="preserve">
          <source>A Regexp is a node in a regular expression syntax tree.</source>
          <target state="translated">Регеxp-это узел в синтаксическом дереве регулярных выражений.</target>
        </trans-unit>
        <trans-unit id="7ab3983fd4df5bd9eb6fbef83870bc471fcc712a" translate="yes" xml:space="preserve">
          <source>A Reloc represents a Mach-O relocation.</source>
          <target state="translated">Передислокация представляет собой передислокацию Мак-О.</target>
        </trans-unit>
        <trans-unit id="067dded24908e2b71937b6360c614e63e5a89809" translate="yes" xml:space="preserve">
          <source>A Request represents an HTTP request received by a server or to be sent by a client.</source>
          <target state="translated">Запрос представляет собой HTTP-запрос,полученный сервером или подлежащий отправке клиентом.</target>
        </trans-unit>
        <trans-unit id="9e19cc3384dc7e2b431205075ec657c82d42a386" translate="yes" xml:space="preserve">
          <source>A Resolver looks up names and numbers.</source>
          <target state="translated">Резольвер ищет имена и номера.</target>
        </trans-unit>
        <trans-unit id="7410206ba9c0a6090136ffb7158eee5593d03484" translate="yes" xml:space="preserve">
          <source>A ResponseWriter interface is used by an HTTP handler to construct an HTTP response.</source>
          <target state="translated">Интерфейс ResponseWriter используется обработчиком HTTP для построения ответа HTTP.</target>
        </trans-unit>
        <trans-unit id="ace923e0c585e748ba7f88a0368066757a465f2f" translate="yes" xml:space="preserve">
          <source>A ResponseWriter may not be used after the Handler.ServeHTTP method has returned.</source>
          <target state="translated">Запрещается использовать ResponseWriter после возвращения метода Handler.ServeHTTP.</target>
        </trans-unit>
        <trans-unit id="2ac628cf85fa1a2f24b07d813066e77d55459bb7" translate="yes" xml:space="preserve">
          <source>A Result summarizes an executed SQL command.</source>
          <target state="translated">Результат суммирует выполненную команду SQL.</target>
        </trans-unit>
        <trans-unit id="c7bc644e767da0cf2307a7193ba0f77e968aacb8" translate="yes" xml:space="preserve">
          <source>A ReturnStmt node represents a return statement.</source>
          <target state="translated">Узел ReturnStmt представляет собой оператор возврата.</target>
        </trans-unit>
        <trans-unit id="ae584cddb6e2177562bbac06546bb6633cf3019c" translate="yes" xml:space="preserve">
          <source>A Ring is an element of a circular list, or ring. Rings do not have a beginning or end; a pointer to any ring element serves as reference to the entire ring. Empty rings are represented as nil Ring pointers. The zero value for a Ring is a one-element ring with a nil Value.</source>
          <target state="translated">Кольцо-это элемент круглого списка,или кольца.Кольца не имеют ни начала,ни конца;указатель на любой элемент кольца служит ссылкой на все кольцо.Пустые кольца представлены в виде нулевых указателей на кольцо.Нулевым значением для Кольца является одноэлементное кольцо с нулевым значением.</target>
        </trans-unit>
        <trans-unit id="a6d02af23b0348ce707674db889668b02af5f81f" translate="yes" xml:space="preserve">
          <source>A RoundTripper must be safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Круглый триппер должен быть безопасен для одновременного использования несколькими гориллами.</target>
        </trans-unit>
        <trans-unit id="45bdd1ec7ab84bc9a9dd66a47c77c47f5715b87c" translate="yes" xml:space="preserve">
          <source>A Rpath represents a Mach-O rpath command.</source>
          <target state="translated">Rpath представляет собой команду Mach-O rpath.</target>
        </trans-unit>
        <trans-unit id="15e64f8a4c2bf9029f12ea9d5e18a15877b7259c" translate="yes" xml:space="preserve">
          <source>A RpathCmd is a Mach-O rpath command.</source>
          <target state="translated">RpathCmd-это команда Mach-O rpath.</target>
        </trans-unit>
        <trans-unit id="595b91253eb5007d2507eef2c21f6da710950881" translate="yes" xml:space="preserve">
          <source>A Scanner holds the scanner's internal state while processing a given text. It can be allocated as part of another data structure but must be initialized via Init before use.</source>
          <target state="translated">Сканер удерживает внутреннее состояние сканера во время обработки заданного текста.Он может быть выделен как часть другой структуры данных,но должен быть инициализирован через Init перед использованием.</target>
        </trans-unit>
        <trans-unit id="1c32b624023b90bc977bdef0e2337de1ae290d39" translate="yes" xml:space="preserve">
          <source>A Scanner implements reading of Unicode characters and tokens from an io.Reader.</source>
          <target state="translated">Сканер реализует чтение символов и маркеров Unicode из io.Reader.</target>
        </trans-unit>
        <trans-unit id="c61b7eab5a0a8103327245dad118019da84e7373" translate="yes" xml:space="preserve">
          <source>A Scope maintains a set of objects and links to its containing (parent) and contained (children) scopes. Objects may be inserted and looked up by name. The zero value for Scope is a ready-to-use empty scope.</source>
          <target state="translated">Scope поддерживает набор объектов и ссылки на его содержащие (родительские)и содержащиеся (дочерние)диапазоны.Объекты могут быть вставлены и просмотрены по имени.Нулевое значение для Scope-это готовая к использованию пустая область видимости.</target>
        </trans-unit>
        <trans-unit id="5dea048da594f1517d32f220dcf473582500285f" translate="yes" xml:space="preserve">
          <source>A Scope maintains the set of named language entities declared in the scope and a link to the immediately surrounding (outer) scope.</source>
          <target state="translated">Scope поддерживает набор именованных языковых объектов,объявленных в области применения,и ссылку на непосредственно окружающую (внешнюю)область применения.</target>
        </trans-unit>
        <trans-unit id="183af69f58c3ed305371155a329e5a16e682146d" translate="yes" xml:space="preserve">
          <source>A Section represents a single section in a Plan 9 a.out file.</source>
          <target state="translated">Раздел представляет собой отдельный раздел в файле a.out плана 9.</target>
        </trans-unit>
        <trans-unit id="48d020e310b3bb2149d4b253ff0bb1536d07bfa4" translate="yes" xml:space="preserve">
          <source>A Section represents a single section in an ELF file.</source>
          <target state="translated">Раздел представляет собой одну секцию в ELF-файле.</target>
        </trans-unit>
        <trans-unit id="3fa1bd710855f38346943cd85be2ea9687a123fb" translate="yes" xml:space="preserve">
          <source>A Section32 is a 32-bit Mach-O section header.</source>
          <target state="translated">Секция 32-это 32-битный заголовок секции Mach-O.</target>
        </trans-unit>
        <trans-unit id="471e980a91ca2daa3de25530d4f089577d149d78" translate="yes" xml:space="preserve">
          <source>A Section64 is a 64-bit Mach-O section header.</source>
          <target state="translated">A Section64 представляет собой 64-битный заголовок секции Mach-O.</target>
        </trans-unit>
        <trans-unit id="781b43f0370a047bcf6b158f7205d75f7f66770a" translate="yes" xml:space="preserve">
          <source>A SectionHeader represents a single ELF section header.</source>
          <target state="translated">Руководитель секции представляет собой один заголовок секции ELF.</target>
        </trans-unit>
        <trans-unit id="07693bb5a841d984aad8deaaf713cc85716d2183" translate="yes" xml:space="preserve">
          <source>A SectionHeader represents a single Plan 9 a.out section header. This structure doesn't exist on-disk, but eases navigation through the object file.</source>
          <target state="translated">Руководитель секции представляет собой единый заголовок секции плана 9.Такая структура не существует на диске,но облегчает навигацию по объекту.</target>
        </trans-unit>
        <trans-unit id="d9486fac46f019d4f1201f0b8cf3bc219bd398d7" translate="yes" xml:space="preserve">
          <source>A Seed is a random value that selects the specific hash function computed by a Hash. If two Hashes use the same Seeds, they will compute the same hash values for any given input. If two Hashes use different Seeds, they are very likely to compute distinct hash values for any given input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc88e5cd8be2ff37b94d3d2df5e8d450d21440aa" translate="yes" xml:space="preserve">
          <source>A Seed must be initialized by calling MakeSeed. The zero seed is uninitialized and not valid for use with Hash's SetSeed method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c503cb0621b37172392fa6c3e6e663892bdb9" translate="yes" xml:space="preserve">
          <source>A Segment represents a Mach-O 32-bit or 64-bit load segment command.</source>
          <target state="translated">Сегмент представляет собой 32-битную или 64-битную команду Mach-O загрузочного сегмента.</target>
        </trans-unit>
        <trans-unit id="18f470aa3a2494edbc8228ed690b8ca00e2cd060" translate="yes" xml:space="preserve">
          <source>A Segment32 is a 32-bit Mach-O segment load command.</source>
          <target state="translated">Segment32-это 32-битная команда загрузки сегмента Mach-O.</target>
        </trans-unit>
        <trans-unit id="b49f656e7f0d6c4de103c56d20f5a3e5d46474b4" translate="yes" xml:space="preserve">
          <source>A Segment64 is a 64-bit Mach-O segment load command.</source>
          <target state="translated">Segment64-это 64-битная команда загрузки сегмента Mach-O.</target>
        </trans-unit>
        <trans-unit id="8c1bca7547e5328a2c0e7d510860150c5b02204d" translate="yes" xml:space="preserve">
          <source>A SegmentHeader is the header for a Mach-O 32-bit or 64-bit load segment command.</source>
          <target state="translated">SegmentHeader-это заголовок 32-битной или 64-битной команды Mach-O для загрузочного сегмента.</target>
        </trans-unit>
        <trans-unit id="4d907e1938e53c3566dbf156d7cc0eaeb9f4968d" translate="yes" xml:space="preserve">
          <source>A SelectCase describes a single case in a select operation. The kind of case depends on Dir, the communication direction.</source>
          <target state="translated">Случай выбора описывает один случай в выбранной операции.Вид случая зависит от Dir,направления связи.</target>
        </trans-unit>
        <trans-unit id="a5415c574177ffe2984e71be71022c8ec6f1d638" translate="yes" xml:space="preserve">
          <source>A SelectDir describes the communication direction of a select case.</source>
          <target state="translated">SelectDir описывает направление связи для выбранного случая.</target>
        </trans-unit>
        <trans-unit id="2ba8168e2f95a5a9fb4142454ff98456bc69b2ed" translate="yes" xml:space="preserve">
          <source>A SelectStmt node represents a select statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbf8ec346b8e7b76dd78b3b87697c7317615faf" translate="yes" xml:space="preserve">
          <source>A Selection describes a selector expression x.f. For the declarations:</source>
          <target state="translated">Выделение описывает селекторное выражение x.f.Для объявлений:</target>
        </trans-unit>
        <trans-unit id="35b647fb865db0783355629fb40dee0621ff1bfa" translate="yes" xml:space="preserve">
          <source>A SelectorExpr node represents an expression followed by a selector.</source>
          <target state="translated">Узел SelectorExpr представляет собой выражение,за которым следует селектор.</target>
        </trans-unit>
        <trans-unit id="639e64492ddcf47a6e3a3dbf49f424478ccc6fd1" translate="yes" xml:space="preserve">
          <source>A SendStmt node represents a send statement.</source>
          <target state="translated">Узел SendStmt представляет собой отчет об отправке.</target>
        </trans-unit>
        <trans-unit id="0a812544b1079cbac724176753c97cbdce588634" translate="yes" xml:space="preserve">
          <source>A Server defines parameters for running an HTTP server. The zero value for Server is a valid configuration.</source>
          <target state="translated">Сервер определяет параметры для запуска HTTP-сервера.Нулевое значение для Сервера является действительной конфигурацией.</target>
        </trans-unit>
        <trans-unit id="8bbd12c651b1aff76a953db8334d88ca84465ea1" translate="yes" xml:space="preserve">
          <source>A Server is an HTTP server listening on a system-chosen port on the local loopback interface, for use in end-to-end HTTP tests.</source>
          <target state="translated">Сервер-это HTTP-сервер,прослушивающий выбранный системой порт на локальном интерфейсе обратной связи для использования в сквозных HTTP-тестах.</target>
        </trans-unit>
        <trans-unit id="aaf263fed591626847e1114341fce50da6dde5fb" translate="yes" xml:space="preserve">
          <source>A ServerCodec implements reading of RPC requests and writing of RPC responses for the server side of an RPC session. The server calls ReadRequestHeader and ReadRequestBody in pairs to read requests from the connection, and it calls WriteResponse to write a response back. The server calls Close when finished with the connection. ReadRequestBody may be called with a nil argument to force the body of the request to be read and discarded. See NewClient's comment for information about concurrent access.</source>
          <target state="translated">ServerCodec реализует чтение запросов RPC и запись ответов RPC для серверной стороны сеанса RPC.Сервер парами вызывает ReadRequestHeader и ReadRequestBody для чтения запросов от соединения,а также вызывает WriteResponse для записи ответа обратно.Сервер вызывает Close (Закрыть)по завершении соединения.ReadRequestBody может быть вызван с нулевым аргументом,чтобы заставить тело запроса быть прочитанным и отброшенным.Информацию о параллельном доступе см.в комментарии NewClient.</target>
        </trans-unit>
        <trans-unit id="38c132ba907f3f5c1ee1b2d34f64a031db7fb85b" translate="yes" xml:space="preserve">
          <source>A SetupError is the result of an error in the way that check is being used, independent of the functions being tested.</source>
          <target state="translated">Ошибка SetupError является результатом ошибки при использовании проверки,независимо от проверяемых функций.</target>
        </trans-unit>
        <trans-unit id="0aaa1aa571361e67fd65645ce946b3e93ab82465" translate="yes" xml:space="preserve">
          <source>A Signal is a number describing a process signal. It implements the os.Signal interface.</source>
          <target state="translated">Сигнал-это число,описывающее сигнал процесса.Он реализует интерфейс os.Signal.</target>
        </trans-unit>
        <trans-unit id="04aa060d55406e6823576f5f8a2fed5ce02d26bc" translate="yes" xml:space="preserve">
          <source>A Signal represents an operating system signal. The usual underlying implementation is operating system-dependent: on Unix it is syscall.Signal.</source>
          <target state="translated">Сигнал представляет собой сигнал операционной системы.Обычная базовая реализация зависит от операционной системы:в Unix это syscall.Signal.</target>
        </trans-unit>
        <trans-unit id="e443d13756dc18de92ff330dd034a22130131309" translate="yes" xml:space="preserve">
          <source>A Signature represents a (non-builtin) function or method type. The receiver is ignored when comparing signatures for identity.</source>
          <target state="translated">Подпись представляет собой (не встроенную)функцию или тип метода.При сравнении подписей для идентификации приемник игнорируется.</target>
        </trans-unit>
        <trans-unit id="4dded7ba2e7f9fa90c63253a6511fa6ac894ca85" translate="yes" xml:space="preserve">
          <source>A Slice represents a slice type.</source>
          <target state="translated">Кусок представляет собой тип куска.</target>
        </trans-unit>
        <trans-unit id="0cc61dfcd6baa6831ffb27354e736c63b5b553ad" translate="yes" xml:space="preserve">
          <source>A SliceExpr node represents an expression followed by slice indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c662a701f4e4fc76cf429b1959cb955efb9d925" translate="yes" xml:space="preserve">
          <source>A Source represents a source of uniformly-distributed pseudo-random int64 values in the range [0, 1&amp;lt;&amp;lt;63).</source>
          <target state="translated">Источник представляет собой источник равномерно распределенных псевдослучайных значений int64 в диапазоне [0, 1 &amp;lt;&amp;lt; 63).</target>
        </trans-unit>
        <trans-unit id="cf9e74a9757b6a7e7e07d6bcbab6c27faa8392c2" translate="yes" xml:space="preserve">
          <source>A Source64 is a Source that can also generate uniformly-distributed pseudo-random uint64 values in the range [0, 1&amp;lt;&amp;lt;64) directly. If a Rand r's underlying Source s implements Source64, then r.Uint64 returns the result of one call to s.Uint64 instead of making two calls to s.Int63.</source>
          <target state="translated">Source64 - это источник, который также может напрямую генерировать равномерно распределенные псевдослучайные значения uint64 в диапазоне [0, 1 &amp;lt;&amp;lt; 64). Если базовый Source s Rand r реализует Source64, то r.Uint64 возвращает результат одного вызова s.Uint64 вместо выполнения двух вызовов s.Int63.</target>
        </trans-unit>
        <trans-unit id="cd32d7d89b2a30a05c1bb5eebdbd13fc02c7ae72" translate="yes" xml:space="preserve">
          <source>A StackRecord describes a single execution stack.</source>
          <target state="translated">StackRecord описывает один стек исполнения.</target>
        </trans-unit>
        <trans-unit id="b0008c9536d181c46b815624f062ebf9594778bc" translate="yes" xml:space="preserve">
          <source>A StarExpr node represents an expression of the form &quot;*&quot; Expression. Semantically it could be a unary &quot;*&quot; expression, or a pointer type.</source>
          <target state="translated">Узел StarExpr представляет собой выражение формы &quot;*&quot;.Семантически это может быть унарное выражение &quot;*&quot;,или тип указателя.</target>
        </trans-unit>
        <trans-unit id="c32c7cbdc0d7be886e97676c71afe750a62dcc10" translate="yes" xml:space="preserve">
          <source>A StartElement represents an XML start element.</source>
          <target state="translated">StartElement представляет собой стартовый элемент XML.</target>
        </trans-unit>
        <trans-unit id="d3f5333a8f279000698b36d8765ab216069ca0fc" translate="yes" xml:space="preserve">
          <source>A StatFS is a file system with a Stat method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea14341705e92c45b1e240d763674f51e6d52411" translate="yes" xml:space="preserve">
          <source>A Stream represents a stream cipher.</source>
          <target state="translated">Поток представляет собой шифр потока.</target>
        </trans-unit>
        <trans-unit id="7b669677d01d549cc1c73f158a189264271f5702" translate="yes" xml:space="preserve">
          <source>A Struct represents a struct type.</source>
          <target state="translated">Структура представляет собой тип структуры.</target>
        </trans-unit>
        <trans-unit id="28e97007759f43396752d2c0cba6cdef18c34c87" translate="yes" xml:space="preserve">
          <source>A StructField describes a single field in a struct.</source>
          <target state="translated">StructField описывает одно поле в структуре.</target>
        </trans-unit>
        <trans-unit id="6ead7ec43f94a3a8ab253c977717cf4787ddce82" translate="yes" xml:space="preserve">
          <source>A StructField represents a field in a struct, union, or C++ class type.</source>
          <target state="translated">Поле StructField представляет собой поле в типе структуры,объединения или класса C++.</target>
        </trans-unit>
        <trans-unit id="e939c47706fd4781a8efbe363efe9716fe2daf90" translate="yes" xml:space="preserve">
          <source>A StructTag is the tag string in a struct field.</source>
          <target state="translated">StructTag-это строка тега в поле структуры.</target>
        </trans-unit>
        <trans-unit id="8da8d40653f50508ed698ba3d6f35b64ae2e53e8" translate="yes" xml:space="preserve">
          <source>A StructType node represents a struct type.</source>
          <target state="translated">Узел StructType представляет собой тип структуры.</target>
        </trans-unit>
        <trans-unit id="fea2245244b33d39ec55d7990a22c73eb242ee3a" translate="yes" xml:space="preserve">
          <source>A StructType represents a struct, union, or C++ class type.</source>
          <target state="translated">StructType представляет собой тип структуры,объединения или класса C++.</target>
        </trans-unit>
        <trans-unit id="29e34b1f6b5269b0f812703eca0e45a915de37c5" translate="yes" xml:space="preserve">
          <source>A StructuralError is returned when the bzip2 data is found to be syntactically invalid.</source>
          <target state="translated">Ошибка StructuralError возвращается,когда данные bzip2 оказываются синтаксически недействительными.</target>
        </trans-unit>
        <trans-unit id="67e45ed1c74af0e85d151af6cd24db62c07cd291" translate="yes" xml:space="preserve">
          <source>A StructuralError suggests that the ASN.1 data is valid, but the Go type which is receiving it doesn't match.</source>
          <target state="translated">StructuralError предполагает,что данные ASN.1 действительны,но тип Go,который их получает,не совпадает.</target>
        </trans-unit>
        <trans-unit id="3cc25fa72129ba03b23f7077499eb5a8cbf8d11c" translate="yes" xml:space="preserve">
          <source>A SubFS is a file system with a Sub method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db304c4567f1e28ed11e586a2eabe4ea9391a66" translate="yes" xml:space="preserve">
          <source>A SwitchStmt node represents an expression switch statement.</source>
          <target state="translated">Узел SwitchStmt представляет собой оператор переключения выражений.</target>
        </trans-unit>
        <trans-unit id="1015b6c5506bb94ff4d458f55084fdca10ca635b" translate="yes" xml:space="preserve">
          <source>A Sym represents a single symbol table entry.</source>
          <target state="translated">Символ представляет собой единственную запись в таблице символов.</target>
        </trans-unit>
        <trans-unit id="98cd40470d9a8f6a0f6bdd00fde0756e94d9ebd2" translate="yes" xml:space="preserve">
          <source>A Symbol is a Mach-O 32-bit or 64-bit symbol table entry.</source>
          <target state="translated">Символ-это 32-битная или 64-битная запись в таблице символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="a671a2dbcf33c7f008c2e71b0630c5384653e90b" translate="yes" xml:space="preserve">
          <source>A Symbol is a pointer to a variable or function.</source>
          <target state="translated">Символ-это указатель на переменную или функцию.</target>
        </trans-unit>
        <trans-unit id="789708f9c12833d6c1014d903e31cb12724b33b8" translate="yes" xml:space="preserve">
          <source>A Symbol represents an entry in a Plan 9 a.out symbol table section.</source>
          <target state="translated">Символ представляет собой запись в разделе таблицы символов Plan 9 a.out.</target>
        </trans-unit>
        <trans-unit id="95c21f4091681c4ef2bad327d6377640dd105e88" translate="yes" xml:space="preserve">
          <source>A Symbol represents an entry in an ELF symbol table section.</source>
          <target state="translated">Символ представляет собой запись в разделе таблицы символов ELF.</target>
        </trans-unit>
        <trans-unit id="bd868f6dc8223d50a3f572a145afcdd64d4e3ae6" translate="yes" xml:space="preserve">
          <source>A Symtab represents a Mach-O symbol table command.</source>
          <target state="translated">Симтаб представляет собой команду таблицы символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="0fd4f1bb011d721fb420bad06209aa869812c00d" translate="yes" xml:space="preserve">
          <source>A SymtabCmd is a Mach-O symbol table command.</source>
          <target state="translated">SymtabCmd-это команда таблицы символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="ef2a77a6f406a105103b5a2c79bd38d08956b562" translate="yes" xml:space="preserve">
          <source>A SyntaxError is a description of a JSON syntax error.</source>
          <target state="translated">SyntaxError-это описание синтаксической ошибки JSON.</target>
        </trans-unit>
        <trans-unit id="8ecc0efe90262065156930a38612a23cd5162913" translate="yes" xml:space="preserve">
          <source>A SyntaxError reports a syntax error in a parsed build expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce23a19325afbda7b493c3ee485c5402ddf0cba" translate="yes" xml:space="preserve">
          <source>A SyntaxError represents a syntax error in the XML input stream.</source>
          <target state="translated">SyntaxError представляет собой синтаксическую ошибку во входном потоке XML.</target>
        </trans-unit>
        <trans-unit id="d6563aa54653e994476c1c43bdfb9b8d0eb52cc1" translate="yes" xml:space="preserve">
          <source>A SyntaxError suggests that the ASN.1 data is invalid.</source>
          <target state="translated">Синтаксическая ошибка предполагает,что данные ASN.1 недействительны.</target>
        </trans-unit>
        <trans-unit id="94dc0c91ffcffa6687bf49f7b86aa6e830c1c493" translate="yes" xml:space="preserve">
          <source>A Tag is the classification (the type) of an Entry.</source>
          <target state="translated">Метка-это классификация (тип)записи.</target>
        </trans-unit>
        <trans-unit id="78339e6e8c8c37bdaa024d946579bef5c72b02cb" translate="yes" xml:space="preserve">
          <source>A TagExpr is an Expr for the single tag Tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef54809c1f809bbc81d739791141ba6bfe3195c9" translate="yes" xml:space="preserve">
          <source>A TagPathError represents an error in the unmarshaling process caused by the use of field tags with conflicting paths.</source>
          <target state="translated">Ошибка TagPathError представляет собой ошибку в процессе размагничивания,вызванную использованием тегов полей с конфликтующими путями.</target>
        </trans-unit>
        <trans-unit id="cfb867f01ef9d999c5c50506e719de9fc48804c0" translate="yes" xml:space="preserve">
          <source>A Thread is a Mach-O thread state command.</source>
          <target state="translated">Нить-это команда состояния потока Mach-O.</target>
        </trans-unit>
        <trans-unit id="129d21daaddda060621e735faa8ab3ff96c26d17" translate="yes" xml:space="preserve">
          <source>A Ticker holds a channel that delivers &amp;ldquo;ticks&amp;rdquo; of a clock at intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbde58d5e793d50fa510fe7375c9fb3e32dfb16" translate="yes" xml:space="preserve">
          <source>A Ticker holds a channel that delivers `ticks' of a clock at intervals.</source>
          <target state="translated">Тикер удерживает канал,который доставляет &quot;палочки&quot; часов с интервалами.</target>
        </trans-unit>
        <trans-unit id="7f209a91b1ce9aba11e7fca4188986d7bf919dd4" translate="yes" xml:space="preserve">
          <source>A Time represents an instant in time with nanosecond precision.</source>
          <target state="translated">Время представляет собой мгновение во времени с точностью до наносекунды.</target>
        </trans-unit>
        <trans-unit id="3b9cb2430925b635deca781b19b6624315647aa5" translate="yes" xml:space="preserve">
          <source>A Time value can be used by multiple goroutines simultaneously except that the methods GobDecode, UnmarshalBinary, UnmarshalJSON and UnmarshalText are not concurrency-safe.</source>
          <target state="translated">Значение времени может быть использовано несколькими горутинами одновременно,за исключением того,что методы GobDecode,UnmarshalBinary,UnmarshalJSON и UnmarshalText не являются одновременно безопасными.</target>
        </trans-unit>
        <trans-unit id="cdc605aba7b8cec3ee2c08a379778b18a8f897da" translate="yes" xml:space="preserve">
          <source>A Token holds a value of one of these types:</source>
          <target state="translated">Токен имеет значение одного из этих типов:</target>
        </trans-unit>
        <trans-unit id="e2538ba1b9edad5eed06dfc85f6e5a8fed234c97" translate="yes" xml:space="preserve">
          <source>A Token is an interface holding one of the token types: StartElement, EndElement, CharData, Comment, ProcInst, or Directive.</source>
          <target state="translated">Токен-это интерфейс,содержащий один из типов токена:StartElement,EndElement,CharData,Comment,ProcInst или Directive.</target>
        </trans-unit>
        <trans-unit id="75ea4973f3f3069985d057a27a7af063dfd40223" translate="yes" xml:space="preserve">
          <source>A TokenReader is anything that can decode a stream of XML tokens, including a Decoder.</source>
          <target state="translated">TokenReader-это все,что может декодировать поток XML-токенов,включая декодер.</target>
        </trans-unit>
        <trans-unit id="ef695f4304becb34a738bb8be42552a70be630fa" translate="yes" xml:space="preserve">
          <source>A Transport is a low-level primitive for making HTTP and HTTPS requests. For high-level functionality, such as cookies and redirects, see Client.</source>
          <target state="translated">Транспорт является низкоуровневым примитивом для выполнения HTTP и HTTPS запросов.Информацию о функциональности высокого уровня,например,о кукисах и перенаправлении,см.в разделе Клиент.</target>
        </trans-unit>
        <trans-unit id="205d177ec942d6309a89adfffdf8a8e4074a7f7b" translate="yes" xml:space="preserve">
          <source>A Tuple represents an ordered list of variables; a nil *Tuple is a valid (empty) tuple. Tuples are used as components of signatures and to represent the type of multiple assignments; they are not first class types of Go.</source>
          <target state="translated">Кортеж представляет собой упорядоченный список переменных;ноль *кортеж является действительным (пустым)кортежом.Кортежи используются в качестве компонентов сигнатур и для представления типа множественных присваиваний;они не являются первоклассными типами Go.</target>
        </trans-unit>
        <trans-unit id="14a29b6908dc38e24f0ef8e838d5a62da69e0160" translate="yes" xml:space="preserve">
          <source>A Type conventionally represents a pointer to any of the specific Type structures (CharType, StructType, etc.).</source>
          <target state="translated">Тип условно представляет собой указатель на любую из специфических структур типа (CharType,StructType и т.д.).</target>
        </trans-unit>
        <trans-unit id="cd759fa17460fa844a3ecf99a0899b837ea8810c" translate="yes" xml:space="preserve">
          <source>A Type is the Mach-O file type, e.g. an object file, executable, or dynamic library.</source>
          <target state="translated">Тип-это тип файла Mach-O,например,объектный файл,исполняемый файл или динамическая библиотека.</target>
        </trans-unit>
        <trans-unit id="7532bdeeed1f2b0e0e0f4a6bd401f739887f16a6" translate="yes" xml:space="preserve">
          <source>A Type represents a type of Go. All types implement the Type interface.</source>
          <target state="translated">Тип представляет собой тип Go.Все типы реализуют интерфейс Type.</target>
        </trans-unit>
        <trans-unit id="7719074f08defb90cf90e8a5c8093d6476b4e065" translate="yes" xml:space="preserve">
          <source>A TypeAssertExpr node represents an expression followed by a type assertion.</source>
          <target state="translated">Узел TypeAssertExpr представляет собой выражение,за которым следует утверждение типа.</target>
        </trans-unit>
        <trans-unit id="d7ee401043d765de08c455c9883bfd1233d24461" translate="yes" xml:space="preserve">
          <source>A TypeAssertionError explains a failed type assertion.</source>
          <target state="translated">Ошибка TypeAssertionError объясняет неудачное утверждение типа.</target>
        </trans-unit>
        <trans-unit id="bae8ad7f1e3b4dc01bc94d3eb7567f3b017542b9" translate="yes" xml:space="preserve">
          <source>A TypeName represents a name for a (defined or alias) type.</source>
          <target state="translated">TypeName представляет собой имя для (определенного или псевдонима)типа.</target>
        </trans-unit>
        <trans-unit id="2d9b19b626ba29ca522df11faf9d4d8dfae59037" translate="yes" xml:space="preserve">
          <source>A TypeSpec node represents a type declaration (TypeSpec production).</source>
          <target state="translated">Узел TypeSpec представляет собой декларацию типа (производство TypeSpec).</target>
        </trans-unit>
        <trans-unit id="591ac82285f41b8adcd7c12d777865c2fc155d90" translate="yes" xml:space="preserve">
          <source>A TypeSwitchStmt node represents a type switch statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d788b79782d20ca5644b516cf51099212dd89634" translate="yes" xml:space="preserve">
          <source>A TypedefType represents a named type.</source>
          <target state="translated">TypedefType представляет собой именованный тип.</target>
        </trans-unit>
        <trans-unit id="8a7264b7221a5f1d236f683a66cc15a2dd787040" translate="yes" xml:space="preserve">
          <source>A URL represents a parsed URL (technically, a URI reference).</source>
          <target state="translated">URL представляет собой разобранный URL (технически-ссылка на URI).</target>
        </trans-unit>
        <trans-unit id="ad174328a1ff4a8b79959dd713d7b3d469c42e43" translate="yes" xml:space="preserve">
          <source>A UcharType represents an unsigned character type.</source>
          <target state="translated">UcharType представляет собой беззнаковый символьный тип.</target>
        </trans-unit>
        <trans-unit id="4e89dd3d467f282d2875f2c6ed05833cce1e25ec" translate="yes" xml:space="preserve">
          <source>A UintType represents an unsigned integer type.</source>
          <target state="translated">UintType представляет собой беззнаковый целочисленный тип.</target>
        </trans-unit>
        <trans-unit id="b1738f8b111b46e92286205e5eb8213ffeca4422" translate="yes" xml:space="preserve">
          <source>A UnaryExpr node represents a unary expression. Unary &quot;*&quot; expressions are represented via StarExpr nodes.</source>
          <target state="translated">Узел UnaryExpr представляет собой унарное выражение.Унарные выражения &quot;*&quot; представлены через узлы StarExpr.</target>
        </trans-unit>
        <trans-unit id="3bbaa096ad1d0fa36610df8d2e4300b924364ad4" translate="yes" xml:space="preserve">
          <source>A Value can be used concurrently by multiple goroutines provided that the underlying Go value can be used concurrently for the equivalent direct operations.</source>
          <target state="translated">Значение Go может быть использовано одновременно несколькими goroutines при условии,что базовое значение Go может быть использовано одновременно для эквивалентных прямых операций.</target>
        </trans-unit>
        <trans-unit id="c45c278af71e2d7167507a12e5fa02bf92962a49" translate="yes" xml:space="preserve">
          <source>A Value must not be copied after first use.</source>
          <target state="translated">Значение не должно быть скопировано после первого использования.</target>
        </trans-unit>
        <trans-unit id="518c031b906d8366c9070eedabcd5d99e9858715" translate="yes" xml:space="preserve">
          <source>A Value provides an atomic load and store of a consistently typed value. The zero value for a Value returns nil from Load. Once Store has been called, a Value must not be copied.</source>
          <target state="translated">Значение обеспечивает атомную загрузку и сохранение последовательно набранного значения.Нулевое значение для Значения возвращает ноль от Загрузки.После вызова Хранилища значение не должно быть скопировано.</target>
        </trans-unit>
        <trans-unit id="704872c27dd11d1ea76e6e4ee6bb7625a22ead66" translate="yes" xml:space="preserve">
          <source>A Value represents the value of a Go constant.</source>
          <target state="translated">Значение представляет собой значение константы Go.</target>
        </trans-unit>
        <trans-unit id="35a6c26e4d0d39784db5b414382430945210b01d" translate="yes" xml:space="preserve">
          <source>A ValueError occurs when a Value method is invoked on a Value that does not support it. Such cases are documented in the description of each method.</source>
          <target state="translated">Ошибка ValueError возникает,когда метод Value вызывается на значение,которое не поддерживает его.Такие случаи документируются в описании каждого метода.</target>
        </trans-unit>
        <trans-unit id="211fb5033eea94f990c18370408afc6e4744bebf" translate="yes" xml:space="preserve">
          <source>A ValueSpec node represents a constant or variable declaration (ConstSpec or VarSpec production).</source>
          <target state="translated">Узел ValueSpec представляет собой константу или переменную декларацию (ConstSpec или VarSpec производства).</target>
        </trans-unit>
        <trans-unit id="6f61d7e37b3871edd50ca3a74b20b5673f75481c" translate="yes" xml:space="preserve">
          <source>A Variable represents a declared variable (including function parameters and results, and struct fields).</source>
          <target state="translated">Переменная представляет собой объявленную переменную (включая параметры и результаты функции,а также поля структуры).</target>
        </trans-unit>
        <trans-unit id="cc9292dda86c62967d8590b7f8274a4d6182bbac" translate="yes" xml:space="preserve">
          <source>A Visitor's Visit method is invoked for each node encountered by Walk. If the result visitor w is not nil, Walk visits each of the children of node with the visitor w, followed by a call of w.Visit(nil).</source>
          <target state="translated">Метод Visitor's Visit вызывается для каждого узла,встреченного Walk.Если результат посетителя w не равен нулю,Walk посещает каждого из дочерних узлов с посетителем w,после чего вызывается w.Visit(nil).</target>
        </trans-unit>
        <trans-unit id="076ae0767034cf704db98525420b8ce59d22a34b" translate="yes" xml:space="preserve">
          <source>A VoidType represents the C void type.</source>
          <target state="translated">VoidType представляет тип C void.</target>
        </trans-unit>
        <trans-unit id="85b56369886ad646746df4d1fecb50f680892b5f" translate="yes" xml:space="preserve">
          <source>A WaitGroup must not be copied after first use.</source>
          <target state="translated">Нельзя копировать WaitGroup после первого использования.</target>
        </trans-unit>
        <trans-unit id="5a86443f6e4c40a98aca5444ee468b15ace4abb9" translate="yes" xml:space="preserve">
          <source>A WaitGroup waits for a collection of goroutines to finish. The main goroutine calls Add to set the number of goroutines to wait for. Then each of the goroutines runs and calls Done when finished. At the same time, Wait can be used to block until all goroutines have finished.</source>
          <target state="translated">WaitGroup ждет,когда закончится коллекция goroutines.Основные звонки горутинов Добавить,чтобы установить количество горутинов,которые будут ждать.Затем каждый из гурутинов бежит и звонит Готово по окончании.В то же время,Wait можно использовать,чтобы заблокировать до тех пор,пока все гориллы не закончат.</target>
        </trans-unit>
        <trans-unit id="9ca4582ad63d50714d5b43b34c6ab0dd13e67819" translate="yes" xml:space="preserve">
          <source>A Weekday specifies a day of the week (Sunday = 0, ...).</source>
          <target state="translated">День недели определяет день недели (воскресенье=0,...).</target>
        </trans-unit>
        <trans-unit id="d03ea25e0944467c9c41cc98d93b797a4d51dd5d" translate="yes" xml:space="preserve">
          <source>A Word represents a single digit of a multi-precision unsigned integer.</source>
          <target state="translated">Слово представляет собой единственную цифру многоточного беззнакового целого.</target>
        </trans-unit>
        <trans-unit id="62446931282b9ac19aa0593be90e15a541acfc8a" translate="yes" xml:space="preserve">
          <source>A WordDecoder decodes MIME headers containing RFC 2047 encoded-words.</source>
          <target state="translated">WordDecoder декодирует MIME-заголовки,содержащие кодированные слова RFC 2047.</target>
        </trans-unit>
        <trans-unit id="3473f163231f1c313bb3aa97735626a5a618dbb5" translate="yes" xml:space="preserve">
          <source>A WordEncoder is an RFC 2047 encoded-word encoder.</source>
          <target state="translated">WordEncoder-это кодировщик RFC 2047.</target>
        </trans-unit>
        <trans-unit id="fe9276a229c981418c6948f78d1275b1c9fd2413" translate="yes" xml:space="preserve">
          <source>A WriteError reports an error encountered while writing output.</source>
          <target state="translated">WriteError сообщает об ошибке,возникшей при записи вывода.</target>
        </trans-unit>
        <trans-unit id="921437c78574f3763c875d8ad66a7a5155e90433" translate="yes" xml:space="preserve">
          <source>A Writer generates multipart messages.</source>
          <target state="translated">Писатель генерирует многочастичные сообщения.</target>
        </trans-unit>
        <trans-unit id="8b5e497607507a45b86dfd8d4d2fb980d92c3ad6" translate="yes" xml:space="preserve">
          <source>A Writer implements convenience methods for writing requests or responses to a text protocol network connection.</source>
          <target state="translated">Writer реализует удобные методы написания запросов или ответов на сетевое соединение с текстовым протоколом.</target>
        </trans-unit>
        <trans-unit id="dee10f306a0eaf4b16b88e2100cc5d77b7c0bc69" translate="yes" xml:space="preserve">
          <source>A Writer is a connection to a syslog server.</source>
          <target state="translated">Writer-это соединение с сервером syslog.</target>
        </trans-unit>
        <trans-unit id="4363ba1b66a07da1208c09d9517f251ba73b90f3" translate="yes" xml:space="preserve">
          <source>A Writer is a filter that inserts padding around tab-delimited columns in its input to align them in the output.</source>
          <target state="translated">Writer-это фильтр,который вставляет на входе подкладку вокруг столбцов,разделенных табуляцией,чтобы выровнять их в выводе.</target>
        </trans-unit>
        <trans-unit id="16a9d12a37b527fe37685b62e1a1f5da51add8c1" translate="yes" xml:space="preserve">
          <source>A Writer is a quoted-printable writer that implements io.WriteCloser.</source>
          <target state="translated">Writer (Писатель)-это программа для чтения цитат,реализующая io.WriteCloser.</target>
        </trans-unit>
        <trans-unit id="0b5fc9bd20310af4833aa25ebe029221c38240f6" translate="yes" xml:space="preserve">
          <source>A Writer is an io.WriteCloser. Writes to a Writer are compressed and written to w.</source>
          <target state="translated">Писатель-это io.WriteCloser.Записи в Writer сжимаются и записываются в w.</target>
        </trans-unit>
        <trans-unit id="03cec7474cfa008a6959e6f93e904ad74a1674d1" translate="yes" xml:space="preserve">
          <source>A Writer must be initialized with a call to Init. The first parameter (output) specifies the filter output. The remaining parameters control the formatting:</source>
          <target state="translated">Писатель должен быть инициализирован звонком в Init.Первый параметр (выход)задает выходной сигнал фильтра.Остальные параметры управляют форматированием:</target>
        </trans-unit>
        <trans-unit id="5465ae3ddfd70d1be5f5967ba8de154a01cefd5b" translate="yes" xml:space="preserve">
          <source>A Writer takes data written to it and writes the compressed form of that data to an underlying writer (see NewWriter).</source>
          <target state="translated">Writer принимает записанные на него данные и записывает их в сжатом виде в соответствующий записывающее устройство (см.NewWriter).</target>
        </trans-unit>
        <trans-unit id="410a82fcce98e6fc886559574359b0fbe2e5eb6f" translate="yes" xml:space="preserve">
          <source>A Writer writes records using CSV encoding.</source>
          <target state="translated">Писатель записывает записи,используя CSV-кодировку.</target>
        </trans-unit>
        <trans-unit id="48e7df2a646f4525d607dc7a30a82a5f83098c9f" translate="yes" xml:space="preserve">
          <source>A Zipf generates Zipf distributed variates.</source>
          <target state="translated">Zipf генерирует распределенные варианты Zipf.</target>
        </trans-unit>
        <trans-unit id="0760dc9daa80e90d6d4229331a1af0e6683b9072" translate="yes" xml:space="preserve">
          <source>A benchmark ends when its Benchmark function returns or calls any of the methods FailNow, Fatal, Fatalf, SkipNow, Skip, or Skipf. Those methods must be called only from the goroutine running the Benchmark function. The other reporting methods, such as the variations of Log and Error, may be called simultaneously from multiple goroutines.</source>
          <target state="translated">Эталон заканчивается,когда его функция эталона возвращает или вызывает любой из методов FailNow,Fatal,Fatalf,SkipNow,Skip или Skipf.Эти методы должны вызываться только из goroutine,выполняющего функцию эталона.Другие методы,такие как вариации Журнала и Ошибки,могут быть вызваны одновременно из нескольких goroutine.</target>
        </trans-unit>
        <trans-unit id="3eb7ac8d55d19c14bff60fcd03e9b73b76f2c42e" translate="yes" xml:space="preserve">
          <source>A boolean is encoded within an unsigned integer: 0 for false, 1 for true.</source>
          <target state="translated">Булевой элемент закодирован внутри беззнакового целого:0 для ложного,1 для истинного.</target>
        </trans-unit>
        <trans-unit id="f01fce8b92a9885648984ba16014b68a79d5e744" translate="yes" xml:space="preserve">
          <source>A build constraint is evaluated as the OR of space-separated options. Each option evaluates as the AND of its comma-separated terms. Each term consists of letters, digits, underscores, and dots. A term may be negated with a preceding !. For example, the build constraint:</source>
          <target state="translated">Ограничение построения оценивается как &quot;ИЛИ&quot; опций,разделенных пробелами.Каждый вариант оценивается как AND его терминов,разделенных запятыми.Каждый термин состоит из букв,цифр,подчеркивания и точек.Термин может быть сведен к предыдущему !...Например,ограничение на построение:</target>
        </trans-unit>
        <trans-unit id="65b5e15b8c1208e1ebae02236d460f4be7aeb5f2" translate="yes" xml:space="preserve">
          <source>A build constraint, also known as a build tag, is a line comment that begins</source>
          <target state="translated">Ограничение на сборку,также известное как тег сборки,представляет собой комментарий к строке,который начинается с</target>
        </trans-unit>
        <trans-unit id="b9e79cabff6c03ded7ab173d941b59e4c2fcc202" translate="yes" xml:space="preserve">
          <source>A call to ValueOf returns a Value representing the run-time data. Zero takes a Type and returns a Value representing a zero value for that type.</source>
          <target state="translated">Вызов ValueOf возвращает Значение,представляющее данные о выполнении.Ноль принимает тип и возвращает значение,представляющее нулевое значение для этого типа.</target>
        </trans-unit>
        <trans-unit id="36fdba5c705a01b336f31fab629a866bbfaa8f78" translate="yes" xml:space="preserve">
          <source>A canonical name is the final name after following zero or more CNAME records. LookupCNAME does not return an error if host does not contain DNS &quot;CNAME&quot; records, as long as host resolves to address records.</source>
          <target state="translated">Каноническое имя-это окончательное имя,следующее за нулем или несколькими записями CNAME.LookupCNAME не возвращает ошибку,если хост не содержит записей DNS &quot;CNAME&quot;,до тех пор,пока хост разрешает адресные записи.</target>
        </trans-unit>
        <trans-unit id="f7fc23252b8a8444204611f4f0f8eaee345d5cd3" translate="yes" xml:space="preserve">
          <source>A client wishing to use the service establishes a connection and then invokes NewClient on the connection. The convenience function Dial (DialHTTP) performs both steps for a raw network connection (an HTTP connection). The resulting Client object has two methods, Call and Go, that specify the service and method to call, a pointer containing the arguments, and a pointer to receive the result parameters.</source>
          <target state="translated">Клиент,желающий воспользоваться сервисом,устанавливает соединение,а затем вызывает NewClient на соединение.Функция удобства Dial (DialHTTP)выполняет оба шага для необработанного сетевого соединения (HTTP-соединение).В результирующем объекте Client есть два метода,Call и Go,которые задают сервис и метод вызова,указатель,содержащий аргументы,и указатель для получения параметров результата.</target>
        </trans-unit>
        <trans-unit id="260ac7a6348d4616a04fa117e8bbf40248a2aac8" translate="yes" xml:space="preserve">
          <source>A comment group g is associated with a node n if:</source>
          <target state="translated">Группа комментариев g связана с узлом n if:</target>
        </trans-unit>
        <trans-unit id="6201e2e8d36ed27d9f67af4f5dbcdce26a23ab67" translate="yes" xml:space="preserve">
          <source>A common idiom is to merge the check for nil return with the check that the value has the expected dynamic type, as in:</source>
          <target state="translated">Общая идиома состоит в том,чтобы объединить проверку на нулевой возврат с проверкой на то,что значение имеет ожидаемый динамический тип,как,например:</target>
        </trans-unit>
        <trans-unit id="ba5d21f25f75193bb1322654b338552fadea1382" translate="yes" xml:space="preserve">
          <source>A common use of Search is to find the index i for a value x in a sorted, indexable data structure such as an array or slice. In this case, the argument f, typically a closure, captures the value to be searched for, and how the data structure is indexed and ordered.</source>
          <target state="translated">Обычным использованием поиска является поиск индекса i для значения x в отсортированной,индексируемой структуре данных,такой как массив или срез.В этом случае аргумент f,обычно закрытие,фиксирует искомое значение,а также то,как индексируется и упорядочивается структура данных.</target>
        </trans-unit>
        <trans-unit id="33d3c617a7ed73a514301da6251e17e5ab959ed1" translate="yes" xml:space="preserve">
          <source>A csv file contains zero or more records of one or more fields per record. Each record is separated by the newline character. The final record may optionally be followed by a newline character.</source>
          <target state="translated">Файл csv содержит ноль или несколько записей одного или нескольких полей на запись.Каждая запись разделена символом новой строки.Окончательная запись может сопровождаться символом новой строки.</target>
        </trans-unit>
        <trans-unit id="b7caa085f191233dadd6ec8fb642202edd158870" translate="yes" xml:space="preserve">
          <source>A daylight savings time transition skips or repeats times. For example, in the United States, March 13, 2011 2:15am never occurred, while November 6, 2011 1:15am occurred twice. In such cases, the choice of time zone, and therefore the time, is not well-defined. Date returns a time that is correct in one of the two zones involved in the transition, but it does not guarantee which.</source>
          <target state="translated">Переход на летнее время пропускает или повторяет время.Например,в Соединенных Штатах 13 марта 2011 года 2:15 утра никогда не происходило,а 6 ноября 2011 года 1:15 утра происходило дважды.В таких случаях выбор часового пояса,а,следовательно,и времени,не имеет четкого определения.Дата возвращает время,которое является правильным в одном из двух зон,участвующих в переходе,но это не гарантирует,какие.</target>
        </trans-unit>
        <trans-unit id="57af6fb36a3adf8a96b4592de464282206245987" translate="yes" xml:space="preserve">
          <source>A deadline is an absolute time after which I/O operations fail with an error instead of blocking. The deadline applies to all future and pending I/O, not just the immediately following call to Read or Write. After a deadline has been exceeded, the connection can be refreshed by setting a deadline in the future.</source>
          <target state="translated">Срок-это абсолютное время,по истечении которого операции ввода/вывода не блокируются,а терпят неудачу с ошибкой.Этот срок применяется ко всем будущим и будущим операциям ввода/вывода,а не только к немедленному вызову функции Чтения или Запись.По истечении срока можно обновить соединение,установив крайний срок в будущем.</target>
        </trans-unit>
        <trans-unit id="b53aa31dad4e2a94a06aac6f9f3bda2dcb94ebf7" translate="yes" xml:space="preserve">
          <source>A decimal point followed by one or more zeros represents a fractional second, printed to the given number of decimal places. A decimal point followed by one or more nines represents a fractional second, printed to the given number of decimal places, with trailing zeros removed. When parsing (only), the input may contain a fractional second field immediately after the seconds field, even if the layout does not signify its presence. In that case a decimal point followed by a maximal series of digits is parsed as a fractional second.</source>
          <target state="translated">Десятичная точка,за которой следует один или несколько нулей,представляет собой дробную секунду,выведенную на заданное число десятичных разрядов.Десятичная точка,за которой следует одна или более девяток,представляет собой дробную секунду,выведенную на заданное число десятичных разрядов,с удалением скользящих нулей.При разборе (только)входное поле может содержать поле дробной секунды непосредственно после поля секунд,даже если макет не указывает на его наличие.В этом случае десятичная точка,за которой следует максимальный ряд цифр,разбирается как дробная секунда.</target>
        </trans-unit>
        <trans-unit id="4eb1aaf5c04383e503526b587e3b53b0e3115f2d" translate="yes" xml:space="preserve">
          <source>A different subset of the mode bits are used, depending on the operating system.</source>
          <target state="translated">В зависимости от операционной системы используются различные подмножества битов режима.</target>
        </trans-unit>
        <trans-unit id="8aee15dc1cb6f51da0900bf8773758523f3cab92" translate="yes" xml:space="preserve">
          <source>A file may have multiple build constraints. The overall constraint is the AND of the individual constraints. That is, the build constraints:</source>
          <target state="translated">Файл может иметь несколько ограничений на сборку.Общее ограничение-это И индивидуальных ограничений.То есть,ограничений на сборку:</target>
        </trans-unit>
        <trans-unit id="e5aebd71375f9513b2e98191249a7900f2298da7" translate="yes" xml:space="preserve">
          <source>A finalizer may run as soon as an object becomes unreachable. In order to use finalizers correctly, the program must ensure that the object is reachable until it is no longer required. Objects stored in global variables, or that can be found by tracing pointers from a global variable, are reachable. For other objects, pass the object to a call of the KeepAlive function to mark the last point in the function where the object must be reachable.</source>
          <target state="translated">Финишизатор может запуститься,как только объект станет недоступен.Чтобы правильно использовать финализаторы,программа должна обеспечить доступность объекта до тех пор,пока в нем нет необходимости.Объекты,которые хранятся в глобальных переменных или которые могут быть найдены с помощью указателей из глобальной переменной,являются достижимыми.Для других объектов передайте объект на вызов функции KeepAlive,чтобы отметить последнюю точку в функции,где объект должен быть доступен.</target>
        </trans-unit>
        <trans-unit id="da1a6a99a449a5ea3376991cc3b251fd40ae595a" translate="yes" xml:space="preserve">
          <source>A fractional second is represented by adding a period and zeros to the end of the seconds section of layout string, as in &quot;15:04:05.000&quot; to format a time stamp with millisecond precision.</source>
          <target state="translated">Дробная секунда представлена добавлением периода и нулей в конец секции секунды строки раскладки,как в &quot;15:04:05.000&quot; для форматирования метки времени с точностью до миллисекунды.</target>
        </trans-unit>
        <trans-unit id="e965d0f5f3f1435750b42e46c8ff14170f8ed15c" translate="yes" xml:space="preserve">
          <source>A fuller picture</source>
          <target state="translated">Более полное представление</target>
        </trans-unit>
        <trans-unit id="2437bd04b669e4858c568d7a7b556cfc526d919f" translate="yes" xml:space="preserve">
          <source>A goroutine should call LockOSThread before calling OS services or non-Go library functions that depend on per-thread state.</source>
          <target state="translated">Горитин должен позвонить в LockOSThread,прежде чем звонить в службы операционной системы или в библиотечные функции,не входящие в состав Go,которые зависят от состояния каждой отдельной нити.</target>
        </trans-unit>
        <trans-unit id="4dcdf2a31c8cc2a191ea807a386fd6fa6b19641b" translate="yes" xml:space="preserve">
          <source>A heap is a common way to implement a priority queue. To build a priority queue, implement the Heap interface with the (negative) priority as the ordering for the Less method, so Push adds items while Pop removes the highest-priority item from the queue. The Examples include such an implementation; the file example_pq_test.go has the complete source.</source>
          <target state="translated">Куча-это обычный способ реализации приоритетной очереди.Чтобы построить очередь приоритетов,реализуйте интерфейс Heap с (отрицательным)приоритетом в качестве порядка следования для метода Less,поэтому Push добавляет элементы,в то время как Pop удаляет из очереди элемент с наивысшим приоритетом.Примеры включают такую реализацию;файл example_pq_test.go имеет полный исходный код.</target>
        </trans-unit>
        <trans-unit id="d16ad196fde70693ff0f37d80fffc0b333fedfdf" translate="yes" xml:space="preserve">
          <source>A line consisting of only white space is never continued.</source>
          <target state="translated">Линия,состоящая только из белого пространства,никогда не продолжается.</target>
        </trans-unit>
        <trans-unit id="afc9f8d3242f5eaf04e2e9b3c363b4deec607569" translate="yes" xml:space="preserve">
          <source>A list of cipher suite IDs that are, or have been, implemented by this package.</source>
          <target state="translated">Список идентификаторов набора шифров,которые реализованы или были реализованы данным пакетом.</target>
        </trans-unit>
        <trans-unit id="dd3ef60e1f91534e9d091bd4d798b2f024b79ceb" translate="yes" xml:space="preserve">
          <source>A literal IPv6 address in hostport must be enclosed in square brackets, as in &quot;[::1]:80&quot;, &quot;[::1%lo0]:80&quot;.</source>
          <target state="translated">Буквальный адрес IPv6 в хостпорте должен быть заключен в квадратные скобки,как &quot;[::1]:80&quot;,&quot;[::1%lo0]:80&quot;.</target>
        </trans-unit>
        <trans-unit id="5dc7cfeeb708df0f962816ce176c0c581f7f3bc1" translate="yes" xml:space="preserve">
          <source>A locked Mutex is not associated with a particular goroutine. It is allowed for one goroutine to lock a Mutex and then arrange for another goroutine to unlock it.</source>
          <target state="translated">Замкнутый Мутекс не связан с определенным горутином.Допускается,чтобы один горутекс заблокировал Мьютекс,а затем чтобы другой горутекс разблокировал его.</target>
        </trans-unit>
        <trans-unit id="ac3d8ec28edd54aa88cf818d84291bb78f42ac35" translate="yes" xml:space="preserve">
          <source>A lookup function must be provided for correct module-aware operation. Deprecated: If lookup is nil, for backwards-compatibility, the importer will attempt to resolve imports in the $GOPATH workspace.</source>
          <target state="translated">Для корректной работы с учетом особенностей модуля должна быть предусмотрена функция поиска.Исключено:Если lookup равен нулю,для обратной совместимости импортер попытается разрешить импорт в рабочей области $GOPATH.</target>
        </trans-unit>
        <trans-unit id="4af7a8e5ef9812183582f7353a58a98b1bf43580" translate="yes" xml:space="preserve">
          <source>A missing element or empty attribute value will be unmarshaled as a zero value. If the field is a slice, a zero value will be appended to the field. Otherwise, the field will be set to its zero value.</source>
          <target state="translated">Пропущенный элемент или значение пустого атрибута будет немаркировано как нулевое значение.Если поле является срезом,то к нему будет добавлено нулевое значение.В противном случае,поле будет установлено в нулевое значение.</target>
        </trans-unit>
        <trans-unit id="0ac280bb5d8ac59db8eaef236e57eb4b54256151" translate="yes" xml:space="preserve">
          <source>A mode value is a set of flags (or 0). Modes control parser behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facf040ac7eba8fb44518815fa41c78439754caa" translate="yes" xml:space="preserve">
          <source>A mode value is a set of flags (or 0). They control scanner behavior.</source>
          <target state="translated">Значение режима-это набор флагов (или 0).Они управляют поведением сканера.</target>
        </trans-unit>
        <trans-unit id="25cf3a2ce55598fd47c06f8dc8fba0d37cd2cc75" translate="yes" xml:space="preserve">
          <source>A nil *Resolver is equivalent to a zero Resolver.</source>
          <target state="translated">Ноль *Резолвер эквивалентен нулевому резольверу.</target>
        </trans-unit>
        <trans-unit id="e9f2c7f03c9badde39c7a80393c1376e7c03c61a" translate="yes" xml:space="preserve">
          <source>A nil URL and nil error are returned if no proxy is defined in the environment, or a proxy should not be used for the given request, as defined by NO_PROXY.</source>
          <target state="translated">Возвращается нулевой URL и нулевая ошибка,если в среде не определен прокси,или прокси не должен использоваться для данного запроса,как определено в NO_PROXY.</target>
        </trans-unit>
        <trans-unit id="eab5d59cf31afe135bcedd98e1fb7a9d4aa7fe2b" translate="yes" xml:space="preserve">
          <source>A non-nil FieldFilter f may be provided to control the output: struct fields for which f(fieldname, fieldvalue) is true are printed; all others are filtered from the output. Unexported struct fields are never printed.</source>
          <target state="translated">Для управления выводом может быть предоставлен ненулевой FieldFilter f:поля структуры,для которых f(имя поля,fieldvalue)истинно,печатаются;все остальные отфильтровываются из вывода.Неэкспортированные поля структуры никогда не печатаются.</target>
        </trans-unit>
        <trans-unit id="dad360f25cca4579e42ac746bdde335602ae158f" translate="yes" xml:space="preserve">
          <source>A nonzero finite Float represents a multi-precision floating point number</source>
          <target state="translated">Ненулевое конечное число с плавающей точкой представляет собой многоточное число с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="67f20c1e684209c8ed072b03f5dbc6b88dfcdb75" translate="yes" xml:space="preserve">
          <source>A note about ZIP64:</source>
          <target state="translated">Записка о ZIP64:</target>
        </trans-unit>
        <trans-unit id="0193cd5e0ae6282f7f2b77354e1b2d5316564350" translate="yes" xml:space="preserve">
          <source>A note about floats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567bb53b185e88e525e4138c042b8ddb8af9e0fd" translate="yes" xml:space="preserve">
          <source>A numeric netdns setting, as in GODEBUG=netdns=1, causes the resolver to print debugging information about its decisions. To force a particular resolver while also printing debugging information, join the two settings by a plus sign, as in GODEBUG=netdns=go+1.</source>
          <target state="translated">Настройка числовых нетдns,как в GODEBUG=нетдns=1,заставляет резольвер печатать отладочную информацию о своих решениях.Чтобы заставить определенный резольвер печатать отладочную информацию,соедините две настройки знаком плюс,как в GODEBUG=netdns=go+1.</target>
        </trans-unit>
        <trans-unit id="a1e9d7b7caa6b6f7b48c88742eade61d0fb9b1a3" translate="yes" xml:space="preserve">
          <source>A package is complete if its scope contains (at least) all exported objects; otherwise it is incomplete.</source>
          <target state="translated">Пакет является полным,если в его объеме содержатся (по крайней мере)все экспортируемые объекты;в противном случае он является неполным.</target>
        </trans-unit>
        <trans-unit id="ac46e64bcf537621373bd5b22cf93ce7bcad324a" translate="yes" xml:space="preserve">
          <source>A pair of (consecutive) backticks (`) is converted to a unicode left quote (&amp;ldquo;), and a pair of (consecutive) single quotes (') is converted to a unicode right quote (&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2eb8ed0def3b86fafe13f7d6fcbec9f7035334a" translate="yes" xml:space="preserve">
          <source>A pipeline inside an action may initialize a variable to capture the result. The initialization has syntax</source>
          <target state="translated">Трубопровод внутри действия может инициализировать переменную,чтобы захватить результат.Инициализация имеет синтаксис</target>
        </trans-unit>
        <trans-unit id="159568cd8af281aa06ef8c37825fa46265e15546" translate="yes" xml:space="preserve">
          <source>A pipeline is a possibly chained sequence of &quot;commands&quot;. A command is a simple value (argument) or a function or method call, possibly with multiple arguments:</source>
          <target state="translated">Трубопровод-это,возможно,цепочечная последовательность &quot;команд&quot;.Команда-это простое значение (аргумент)или вызов функции или метода,возможно,с несколькими аргументами:</target>
        </trans-unit>
        <trans-unit id="37a982db72ea1fb9ba66b22f1af9be32523e2a43" translate="yes" xml:space="preserve">
          <source>A pipeline may be &quot;chained&quot; by separating a sequence of commands with pipeline characters '|'. In a chained pipeline, the result of each command is passed as the last argument of the following command. The output of the final command in the pipeline is the value of the pipeline.</source>
          <target state="translated">Трубопровод может быть &quot;прикован&quot; путем разделения последовательности команд с символами трубопровода '|'.В цепочке результат каждой команды передается в качестве последнего аргумента следующей команды.Выходом конечной команды в цепочке является значение цепочки.</target>
        </trans-unit>
        <trans-unit id="e435d830501b57692560d08004b34491160b2337" translate="yes" xml:space="preserve">
          <source>A pipelined server can use the same calls to ensure that responses computed in parallel are written in the correct order.</source>
          <target state="translated">Трубопроводный сервер может использовать одни и те же вызовы,чтобы гарантировать,что ответы,вычисленные параллельно,записываются в правильном порядке.</target>
        </trans-unit>
        <trans-unit id="c49361545d95418f04cbcdcf2b2ab41b7a40c811" translate="yes" xml:space="preserve">
          <source>A plugin is a Go main package with exported functions and variables that has been built with:</source>
          <target state="translated">Плагин-это пакет Go main с экспортированными функциями и переменными,с помощью которого был собран:</target>
        </trans-unit>
        <trans-unit id="81f9a7dada15598723e182d4050df9eb32499489" translate="yes" xml:space="preserve">
          <source>A preset dictionary can be used to improve the compression ratio. The downside to using a dictionary is that the compressor and decompressor must agree in advance what dictionary to use.</source>
          <target state="translated">Для улучшения степени сжатия можно использовать словарь предустановленных параметров.Недостатком использования словаря является то,что компрессор и декомпрессор должны заранее договориться о том,какой словарь использовать.</target>
        </trans-unit>
        <trans-unit id="947f86e05fc12ea1145d41f40f9588a79a2d1df5" translate="yes" xml:space="preserve">
          <source>A public suffix list implementation is in the package golang.org/x/net/publicsuffix.</source>
          <target state="translated">Реализация публичного суффикса находится в пакете golang.org/x/net/publicsuffix.</target>
        </trans-unit>
        <trans-unit id="f5a4f3b805b19490b13c81014b70583343cfccf0" translate="yes" xml:space="preserve">
          <source>A region is for logging a time interval during a goroutine's execution. By definition, a region starts and ends in the same goroutine. Regions can be nested to represent subintervals. For example, the following code records four regions in the execution trace to trace the durations of sequential steps in a cappuccino making operation.</source>
          <target state="translated">Область предназначена для регистрации временного интервала во время исполнения горутина.По определению,область начинается и заканчивается в одном и том же горутине.Регионы могут быть вложены для представления суб-интервалов.Например,следующий код записывает четыре области в трассу исполнения,чтобы проследить длительность последовательных шагов в операции по изготовлению капучино.</target>
        </trans-unit>
        <trans-unit id="19e9496f5feeba3316d5f9c892e638126465f862" translate="yes" xml:space="preserve">
          <source>A sample benchmark function looks like this:</source>
          <target state="translated">Образец функции эталона выглядит так:</target>
        </trans-unit>
        <trans-unit id="64d7f2b7d8c639b9703cb9c512522716406ca71c" translate="yes" xml:space="preserve">
          <source>A segment of text may be escaped by bracketing it with Escape characters. The tabwriter passes escaped text segments through unchanged. In particular, it does not interpret any tabs or line breaks within the segment. If the StripEscape flag is set, the Escape characters are stripped from the output; otherwise they are passed through as well. For the purpose of formatting, the width of the escaped text is always computed excluding the Escape characters.</source>
          <target state="translated">Отрезок текста может быть экранирован путем заключения его в скобки с помощью символов Escape.Табулятор передает сегменты экранированного текста без изменений.В частности,он не интерпретирует никакие табуляции или разрывы строк внутри сегмента.Если установлен флаг StripEscape,то символы Escape удаляются из вывода;в противном случае они также пропускаются.Для целей форматирования ширина экранированного текста всегда вычисляется без учета символов Escape.</target>
        </trans-unit>
        <trans-unit id="cbf67455e625a319934ff3db6f4e7765c384f850" translate="yes" xml:space="preserve">
          <source>A server implementation will often provide a simple, type-safe wrapper for the client.</source>
          <target state="translated">Серверная реализация часто предоставляет простую,безопасную для типа обертку для клиента.</target>
        </trans-unit>
        <trans-unit id="5fe1bd315f5a675d22edfe1287dcef7a18f2ebf5" translate="yes" xml:space="preserve">
          <source>A set of constants for precedence-based expression parsing. Non-operators have lowest precedence, followed by operators starting with precedence 1 up to unary operators. The highest precedence serves as &quot;catch-all&quot; precedence for selector, indexing, and other operator and delimiter tokens.</source>
          <target state="translated">Набор констант для разбора выражений на основе прецедентов.Неоператоры имеют наименьший приоритет,за ними следуют операторы,начинающиеся с приоритета 1 до унарных операторов.Наибольший приоритет служит &quot;перехватывающим&quot; приоритетом для токенов селектора,индексирования и других операторов и разделителей.</target>
        </trans-unit>
        <trans-unit id="d3f475688772a3727780325202b67ed9bcfba627" translate="yes" xml:space="preserve">
          <source>A signed integer, i, is encoded within an unsigned integer, u. Within u, bits 1 upward contain the value; bit 0 says whether they should be complemented upon receipt. The encode algorithm looks like this:</source>
          <target state="translated">Подписанное целое число,i,закодировано внутри беззнакового целого,u.Внутри u,биты 1 вверх содержат значение;бит 0 говорит о том,должны ли они быть дополнены при получении.Алгоритм кодирования выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="6c6185e40ebf683daf5fbd59be060f229f28d552" translate="yes" xml:space="preserve">
          <source>A simple implementation of TestMain is:</source>
          <target state="translated">Простая реализация TestMain:</target>
        </trans-unit>
        <trans-unit id="afdf12aec718dd4999cbe7ecda6d1bb5b3e50e14" translate="yes" xml:space="preserve">
          <source>A simple test function looks like this:</source>
          <target state="translated">Простая тестовая функция выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="92ea7ad194070845bcee235ee4cd7d7c3a7afe32" translate="yes" xml:space="preserve">
          <source>A simple way to create wrapped errors is to call fmt.Errorf and apply the %w verb to the error argument:</source>
          <target state="translated">Простой способ создания обернутых ошибок-вызвать fmt.Errorf и применить к аргументу об ошибке глагол %w:</target>
        </trans-unit>
        <trans-unit id="69d7e4afbc359dbfa554c3437471beab838e64ea" translate="yes" xml:space="preserve">
          <source>A single goroutine runs all finalizers for a program, sequentially. If a finalizer must run for a long time, it should do so by starting a new goroutine.</source>
          <target state="translated">Один горутин запускает все финализаторы для программы,последовательно.Если финализатор должен работать долгое время,он должен сделать это,запустив новую горутину.</target>
        </trans-unit>
        <trans-unit id="998765c2e36e31f6015a02a4149186686a19882c" translate="yes" xml:space="preserve">
          <source>A source position is represented by a Position value. A position is valid if Line &amp;gt; 0.</source>
          <target state="translated">Исходная позиция представлена ​​значением Position. Позиция действительна, если Line&amp;gt; 0.</target>
        </trans-unit>
        <trans-unit id="bf46d56633e189cdf4290bc8e9e419edaafcd303" translate="yes" xml:space="preserve">
          <source>A span of indented lines is converted into a &amp;lt;pre&amp;gt; block, with the common indent prefix removed.</source>
          <target state="translated">Диапазон строк с отступом преобразуется в блок &amp;lt;pre&amp;gt; с удалением общего префикса отступа.</target>
        </trans-unit>
        <trans-unit id="23ed42dff836502e8a3c882497b88d19de475752" translate="yes" xml:space="preserve">
          <source>A special Unknown value may be used when a value is unknown due to an error. Operations on unknown values produce unknown values unless specified otherwise.</source>
          <target state="translated">Специальное значение &quot;Неизвестно&quot; может быть использовано,если значение неизвестно из-за ошибки.Операции с неизвестными значениями приводят к получению неизвестных значений,если не указано иное.</target>
        </trans-unit>
        <trans-unit id="39c3619132ff27692be31f7370bad818ba2f7ae2" translate="yes" xml:space="preserve">
          <source>A stream of gobs is self-describing. Each data item in the stream is preceded by a specification of its type, expressed in terms of a small set of predefined types. Pointers are not transmitted, but the things they point to are transmitted; that is, the values are flattened. Nil pointers are not permitted, as they have no value. Recursive types work fine, but recursive values (data with cycles) are problematic. This may change.</source>
          <target state="translated">Поток вариаций самоочищает.Каждому элементу данных в потоке предшествует спецификация его типа,выраженная в терминах небольшого набора предопределенных типов.Указатели не передаются,но передаются вещи,на которые они указывают,т.е.значения сглаживаются.Нулевые указатели не допускаются,так как они не имеют значения.Рекурсивные типы работают нормально,но рекурсивные значения (данные с циклами)проблематичны.Это может измениться.</target>
        </trans-unit>
        <trans-unit id="71de669748bcf101bd8bd68f5e95383f0e17c03d" translate="yes" xml:space="preserve">
          <source>A subbenchmark is like any other benchmark. A benchmark that calls Run at least once will not be measured itself and will be called once with N=1.</source>
          <target state="translated">Суббенчмарк,как и любой другой бенчмарк.Бенчмарк,который хотя бы один раз вызывает Run,не будет измеряться сам по себе и будет вызываться один раз с N=1.</target>
        </trans-unit>
        <trans-unit id="c7c8c5a16c89f340d07d186a6221473d049ea1a6" translate="yes" xml:space="preserve">
          <source>A successful Copy returns err == nil, not err == EOF. Because Copy is defined to read from src until EOF, it does not treat an EOF from Read as an error to be reported.</source>
          <target state="translated">Успешная Копия возвращает err ==nil,not err ==EOF.Так как Copy определено как читать из src до EOF,она не рассматривает EOF из Read как ошибку,о которой нужно сообщить.</target>
        </trans-unit>
        <trans-unit id="1b2067ff10a529e4ca642d4b746a82a3c56ab2f4" translate="yes" xml:space="preserve">
          <source>A task is a higher-level component that aids tracing of logical operations such as an RPC request, an HTTP request, or an interesting local operation which may require multiple goroutines working together. Since tasks can involve multiple goroutines, they are tracked via a context.Context object. NewTask creates a new task and embeds it in the returned context.Context object. Log messages and regions are attached to the task, if any, in the Context passed to Log and WithRegion.</source>
          <target state="translated">Задача-это компонент более высокого уровня,позволяющий отслеживать логические операции,такие как запрос RPC,HTTP или интересную локальную операцию,которая может потребовать совместной работы нескольких горизонтов.Так как задачи могут включать в себя несколько горизонтов,они отслеживаются через контекстный объект Context.NewTask создает новую задачу и встраивает ее в возвращаемый объект context.Context.Сообщения журнала и области прикреплены к задаче,если таковые имеются,в Контексте,переданном в Log и WithRegion.</target>
        </trans-unit>
        <trans-unit id="1ee23ed297d8a4efee537f23283818e2de1f476f" translate="yes" xml:space="preserve">
          <source>A template may be executed directly or through ExecuteTemplate, which executes an associated template identified by name. To invoke our example above, we might write,</source>
          <target state="translated">Шаблон может быть выполнен непосредственно или через ExecuteTemplate,который выполняет связанный с ним шаблон,идентифицированный по имени.Чтобы сослаться на наш пример выше,мы можем написать,</target>
        </trans-unit>
        <trans-unit id="2ee08d9d80bebe4fc53065d91023da1f3f13f8ce" translate="yes" xml:space="preserve">
          <source>A template may use a template invocation to instantiate another associated template; see the explanation of the &quot;template&quot; action above. The name must be that of a template associated with the template that contains the invocation.</source>
          <target state="translated">Шаблон может использовать вызов шаблона для конкретизации другого связанного с ним шаблона;см.объяснение действия &quot;шаблон&quot; выше.Имя должно совпадать с именем шаблона,связанного с шаблоном,который содержит вызов.</target>
        </trans-unit>
        <trans-unit id="efdc8c7bbd155802920fdf599596729921196f95" translate="yes" xml:space="preserve">
          <source>A test ends when its Test function returns or calls any of the methods FailNow, Fatal, Fatalf, SkipNow, Skip, or Skipf. Those methods, as well as the Parallel method, must be called only from the goroutine running the Test function.</source>
          <target state="translated">Тест завершается,когда функция теста возвращает или вызывает любой из методов FailNow,Fatal,Fatalf,SkipNow,Skip или Skipf.Эти методы,также как и метод Parallel,должны вызываться только из горутина,выполняющего функцию теста.</target>
        </trans-unit>
        <trans-unit id="a8d282a7f8e7544e2aa2bcaa602cc973c7e5c659" translate="yes" xml:space="preserve">
          <source>A transaction must end with a call to Commit or Rollback.</source>
          <target state="translated">Сделка должна заканчиваться звонком в компанию Commit или Rollback.</target>
        </trans-unit>
        <trans-unit id="3320956e1450f29dc681f22efeb9962f889d2fa1" translate="yes" xml:space="preserve">
          <source>A type, typically a collection, that satisfies sort.Interface can be sorted by the routines in this package. The methods require that the elements of the collection be enumerated by an integer index.</source>
          <target state="translated">Тип,обычно коллекция,удовлетворяющая сортировке.Интерфейс может быть отсортирован по подпрограммам,представленным в данном пакете.Методы требуют,чтобы элементы коллекции перечислялись по целочисленному индексу.</target>
        </trans-unit>
        <trans-unit id="a26264b4c327dfcbc3830f08e7c5eca9935077d1" translate="yes" xml:space="preserve">
          <source>A uintptr is an integer, not a reference. Converting a Pointer to a uintptr creates an integer value with no pointer semantics. Even if a uintptr holds the address of some object, the garbage collector will not update that uintptr's value if the object moves, nor will that uintptr keep the object from being reclaimed.</source>
          <target state="translated">uintptr-это целое число,а не ссылка.При преобразовании указателя в uintptr создается целое значение без семантики указателя.Даже если в uintptr содержится адрес какого-то объекта,сборщик мусора не будет обновлять значение uintptr,если объект перемещается,и uintptr не будет препятствовать его возврату.</target>
        </trans-unit>
        <trans-unit id="60de15bb31497f8a101bfbdc15deafcffe0040e6" translate="yes" xml:space="preserve">
          <source>A valid signature is indicated by returning a nil error. digest must be the result of hashing the input message using the given hash function. The opts argument may be nil, in which case sensible defaults are used. opts.Hash is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6357f4b1d95e0ce37eebd11835deedd5ee68808" translate="yes" xml:space="preserve">
          <source>A value can be one of several &quot;attribute classes&quot; defined by DWARF. The Go types corresponding to each class are:</source>
          <target state="translated">Значение может быть одним из нескольких &quot;классов атрибутов&quot;,определенных DWARF.Каждому классу соответствуют типы Go:</target>
        </trans-unit>
        <trans-unit id="6ca0e97732ee145c6b13c705a240bbab4a01b83c" translate="yes" xml:space="preserve">
          <source>A variable's scope extends to the &quot;end&quot; action of the control structure (&quot;if&quot;, &quot;with&quot;, or &quot;range&quot;) in which it is declared, or to the end of the template if there is no such control structure. A template invocation does not inherit variables from the point of its invocation.</source>
          <target state="translated">Область действия переменной распространяется на &quot;конечное&quot; действие структуры управления (&quot;если&quot;,&quot;с&quot; или &quot;диапазон&quot;),в котором она объявлена,или на конец шаблона,если такая структура управления отсутствует.Призыв шаблона не наследует переменные от точки его вызова.</target>
        </trans-unit>
        <trans-unit id="277f2ef6de143a1e0bb8964486b9103bd5a3dfcf" translate="yes" xml:space="preserve">
          <source>A very simplified example showing where KeepAlive is required:</source>
          <target state="translated">Очень упрощенный пример,показывающий,где требуется KeepAlive:</target>
        </trans-unit>
        <trans-unit id="eebb7aaedcbbc7945cea32525b4cdf890bdf1fc6" translate="yes" xml:space="preserve">
          <source>A wrapped function triggered during a call from Go to JavaScript gets executed on the same goroutine. A wrapped function triggered by JavaScript's event loop gets executed on an extra goroutine. Blocking operations in the wrapped function will block the event loop. As a consequence, if one wrapped function blocks, other wrapped funcs will not be processed. A blocking function should therefore explicitly start a new goroutine.</source>
          <target state="translated">Завернутая функция,запущенная во время вызова из Go в JavaScript,выполняется на том же самом goroutine.Оберточная функция,вызванная циклом обработки событий JavaScript,выполняется на дополнительном горутине.Блокирующие операции в оберточной функции будут блокировать цикл обработки событий.Как следствие,если одна обернутая функция блокирует,то другие обернутые функции не будут обрабатываться.Поэтому блокирующая функция должна явно запускать новый горутин.</target>
        </trans-unit>
        <trans-unit id="8e11b9a7861656f839cf023235f454d8751a6b44" translate="yes" xml:space="preserve">
          <source>A zero value for t means I/O operations will not time out.</source>
          <target state="translated">Нулевое значение для t означает,что операции ввода/вывода не будут прерываться.</target>
        </trans-unit>
        <trans-unit id="49015c1a0e4eec28a8e64a69c22aab5605a9ed24" translate="yes" xml:space="preserve">
          <source>AEAD is a cipher mode providing authenticated encryption with associated data. For a description of the methodology, see</source>
          <target state="translated">AEAD-это режим шифрования,обеспечивающий аутентифицированное шифрование с соответствующими данными.Описание методики см.</target>
        </trans-unit>
        <trans-unit id="6386009a221e1f55418b7cdc3ea6e0081e79ebfc" translate="yes" xml:space="preserve">
          <source>AIX requires a larger stack for syscalls.</source>
          <target state="translated">AIX требует более крупного стека для системных головок.</target>
        </trans-unit>
        <trans-unit id="a103500548f73a0f49e73232e6ab381788940bd2" translate="yes" xml:space="preserve">
          <source>AOffset returns the index of the first element of A that corresponds to the pixel at (x, y).</source>
          <target state="translated">AOffset возвращает индекс первого элемента A,который соответствует пикселю на (x,y).</target>
        </trans-unit>
        <trans-unit id="a3a55e32c78ce3caeb7ecef53c05aa71e685921c" translate="yes" xml:space="preserve">
          <source>ASCII character classes:</source>
          <target state="translated">Классы знаков ASCII:</target>
        </trans-unit>
        <trans-unit id="dfa0d565701c5ffd212df5f6c41e07c13104217e" translate="yes" xml:space="preserve">
          <source>ASN.1 class types represent the namespace of the tag.</source>
          <target state="translated">Типы классов ASN.1 представляют собой пространство имён тега.</target>
        </trans-unit>
        <trans-unit id="94a132b5e73edb52effd7e957ed89df7719d6948" translate="yes" xml:space="preserve">
          <source>ASN.1 tags represent the type of the following object.</source>
          <target state="translated">Метки ASN.1 представляют собой тип следующего объекта.</target>
        </trans-unit>
        <trans-unit id="fafb344d4664552bfbe22ad591e49b7c95b5c8a5" translate="yes" xml:space="preserve">
          <source>Abs</source>
          <target state="translated">Abs</target>
        </trans-unit>
        <trans-unit id="19946b96a18fb5a61fbdcba6ee58a2bae2a9f4fd" translate="yes" xml:space="preserve">
          <source>Abs returns an absolute representation of path. If the path is not absolute it will be joined with the current working directory to turn it into an absolute path. The absolute path name for a given file is not guaranteed to be unique. Abs calls Clean on the result.</source>
          <target state="translated">Эбс возвращает абсолютное представление пути.Если путь не абсолютный,то он будет соединен с текущей рабочей директорией,чтобы превратить его в абсолютный путь.Абсолютное имя пути для данного файла не гарантированно является уникальным.Эбс вызывает чистый результат.</target>
        </trans-unit>
        <trans-unit id="98c1dba71e48002668b64c9af03e2c7ed77c3775" translate="yes" xml:space="preserve">
          <source>Abs returns the absolute value (also called the modulus) of x.</source>
          <target state="translated">Abs возвращает абсолютное значение (также называемое модулем)x.</target>
        </trans-unit>
        <trans-unit id="ea6f0b4dac884978efb8a2a3ce802681b993d2d8" translate="yes" xml:space="preserve">
          <source>Abs returns the absolute value of x.</source>
          <target state="translated">Эбс возвращает абсолютное значение x.</target>
        </trans-unit>
        <trans-unit id="852b904fc647c005799087d9e0034bfb32f26290" translate="yes" xml:space="preserve">
          <source>Abs sets z to the (possibly rounded) value |x| (the absolute value of x) and returns z.</source>
          <target state="translated">Abs устанавливает z в (возможно,округленное)значение |x| (абсолютное значение x)и возвращает z.</target>
        </trans-unit>
        <trans-unit id="b3ca403f8d39ff7d494165748328771f2b7bbdb5" translate="yes" xml:space="preserve">
          <source>Abs sets z to |x| (the absolute value of x) and returns z.</source>
          <target state="translated">Abs устанавливает z на |x| (абсолютное значение x)и возвращает z.</target>
        </trans-unit>
        <trans-unit id="b3397fc6849a3177e96f3dc3f920d47867094eeb" translate="yes" xml:space="preserve">
          <source>Acc returns the accuracy of x produced by the most recent operation, unless explicitly documented otherwise by that operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae77eeba4d31564d88f515ff5369514989cb2f2d" translate="yes" xml:space="preserve">
          <source>Acc returns the accuracy of x produced by the most recent operation.</source>
          <target state="translated">Acc возвращает точность х,полученную в результате последней операции.</target>
        </trans-unit>
        <trans-unit id="0362299cc7e336214cb347eec2f94f2bdb92e7da" translate="yes" xml:space="preserve">
          <source>Accept accepts connections on the listener and serves requests for each incoming connection. Accept blocks until the listener returns a non-nil error. The caller typically invokes Accept in a go statement.</source>
          <target state="translated">Принимает соединения на приемнике и обслуживает запросы на каждое входящее соединение.Принимать блоки до тех пор,пока слушатель не вернет ошибку без нулевой отметки.Обычно вызывающий абонент вызывает функцию Accept (Принять)в операторе go.</target>
        </trans-unit>
        <trans-unit id="57eaa16ddc7c7646a44dc64075488d9952239919" translate="yes" xml:space="preserve">
          <source>Accept accepts connections on the listener and serves requests to DefaultServer for each incoming connection. Accept blocks; the caller typically invokes it in a go statement.</source>
          <target state="translated">Принимает соединения на слушателе и обслуживает запросы к DefaultServer для каждого входящего соединения.Принимать блоки;вызывающий абонент обычно вызывает его в операторе go.</target>
        </trans-unit>
        <trans-unit id="423f068caff20db5aabcaa680f972ba550429b79" translate="yes" xml:space="preserve">
          <source>Accept implements the Accept method in the Listener interface. Returned connections will be of type *UnixConn.</source>
          <target state="translated">Принять реализует метод Принять в интерфейсе приемника.Возвращаемые соединения будут иметь тип *UnixConn.</target>
        </trans-unit>
        <trans-unit id="7e027066959a798df007c741aaa3722942174acb" translate="yes" xml:space="preserve">
          <source>Accept implements the Accept method in the Listener interface; it waits for the next call and returns a generic Conn.</source>
          <target state="translated">Accept реализует метод Accept в интерфейсе приемника;он ждет следующего вызова и возвращает общий коннектор.</target>
        </trans-unit>
        <trans-unit id="7f0dc51c4dcc23b2474ab41ecb5ead25a053962d" translate="yes" xml:space="preserve">
          <source>AcceptTCP accepts the next incoming call and returns the new connection.</source>
          <target state="translated">AcceptTCP принимает следующий входящий вызов и возвращает новое соединение.</target>
        </trans-unit>
        <trans-unit id="afbe83d1557a2732b88156a14bcd7fec9705a897" translate="yes" xml:space="preserve">
          <source>AcceptUnix accepts the next incoming call and returns the new connection.</source>
          <target state="translated">AcceptUnix принимает следующий входящий звонок и возвращает новое соединение.</target>
        </trans-unit>
        <trans-unit id="a1204f16b1e7a74c87931ad0f07bf33ea0b083d5" translate="yes" xml:space="preserve">
          <source>Accuracy describes the rounding error produced by the most recent operation that generated a Float value, relative to the exact value.</source>
          <target state="translated">Точность описывает погрешность округления,вызванную последней операцией,в результате которой было сгенерировано значение поплавка по отношению к точному значению.</target>
        </trans-unit>
        <trans-unit id="a3a86c10c26f951f6f2f070ab18bc1cb2a65e440" translate="yes" xml:space="preserve">
          <source>Acos</source>
          <target state="translated">Acos</target>
        </trans-unit>
        <trans-unit id="9ec162a3f0eb0d539229eaef831d34b303a9dc5e" translate="yes" xml:space="preserve">
          <source>Acos returns the arccosine, in radians, of x.</source>
          <target state="translated">Акос возвращает арккозин,в радианах,x.</target>
        </trans-unit>
        <trans-unit id="7a975a4c783d13717e86d77c53ecde8ac7934025" translate="yes" xml:space="preserve">
          <source>Acos returns the inverse cosine of x.</source>
          <target state="translated">Акос возвращает обратный косинус x.</target>
        </trans-unit>
        <trans-unit id="cf25bedca9a3b72e65c01ff90e81f6a09baa5d69" translate="yes" xml:space="preserve">
          <source>Acosh</source>
          <target state="translated">Acosh</target>
        </trans-unit>
        <trans-unit id="473dc4a14e53c4e4b4da1925bd0307c4f77ea728" translate="yes" xml:space="preserve">
          <source>Acosh returns the inverse hyperbolic cosine of x.</source>
          <target state="translated">Акош возвращает обратный гиперболический косинус x.</target>
        </trans-unit>
        <trans-unit id="34ab3eeafa84c841f51a4ab029c76137c950219d" translate="yes" xml:space="preserve">
          <source>ActionNode holds an action (something bounded by delimiters). Control actions have their own nodes; ActionNode represents simple ones such as field evaluations and parenthesized pipelines.</source>
          <target state="translated">ActionNode содержит действие (нечто ограниченное разделителями).Действия управления имеют свои собственные узлы;ActionNode представляет собой простые объекты,такие как полевые оценки и трубопроводы в скобках.</target>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">Actions</target>
        </trans-unit>
        <trans-unit id="e10171b115b80f0812f3bc6096a1b7a8d483bee0" translate="yes" xml:space="preserve">
          <source>Add adds an Error with given position and error message to an ErrorList.</source>
          <target state="translated">Добавить в ErrorList ошибку с заданной позицией и сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="fc94957ebb8a3766a3ddd6d8708dd83346338038" translate="yes" xml:space="preserve">
          <source>Add adds delta to the *Int value stored under the given map key.</source>
          <target state="translated">Добавьте дельту к значению *Int,сохраненному под данным ключом карты.</target>
        </trans-unit>
        <trans-unit id="15b0f7deabf48f6522decffbdc31da06a1ce200f" translate="yes" xml:space="preserve">
          <source>Add adds delta to v.</source>
          <target state="translated">Добавить дельту к v.</target>
        </trans-unit>
        <trans-unit id="00d98d0fbeab0413ea8bf940cbb8eed92cb4cf17" translate="yes" xml:space="preserve">
          <source>Add adds delta, which may be negative, to the WaitGroup counter. If the counter becomes zero, all goroutines blocked on Wait are released. If the counter goes negative, Add panics.</source>
          <target state="translated">Добавьте в счетчик WaitGroup дельту,которая может быть отрицательной.Если счетчик становится равным нулю,то все горы,заблокированные на Wait,освобождаются.Если счетчик становится отрицательным,добавьте панику.</target>
        </trans-unit>
        <trans-unit id="06d67ceb15cbe764f4e2559821764917fc9be46e" translate="yes" xml:space="preserve">
          <source>Add adds the current execution stack to the profile, associated with value. Add stores value in an internal map, so value must be suitable for use as a map key and will not be garbage collected until the corresponding call to Remove. Add panics if the profile already contains a stack for value.</source>
          <target state="translated">Добавляет в профиль текущий стек выполнения,связанный со значением.Добавить значение хранит его во внутренней карте,поэтому значение должно быть пригодно для использования в качестве ключа карты и не будет собираться мусор до тех пор,пока не будет выполнен соответствующий вызов Remove.Добавить панику,если профиль уже содержит стек значений.</target>
        </trans-unit>
        <trans-unit id="a7fe05fac6821303f4013d3a0551fa7da8da7b91" translate="yes" xml:space="preserve">
          <source>Add adds the key, value pair to the header. It appends to any existing values associated with key.</source>
          <target state="translated">Добавьте ключ,пару значений в заголовок.Он добавляет к любым существующим значениям,связанным с ключом.</target>
        </trans-unit>
        <trans-unit id="5f1b2275acb843bf0e477760c4f63abe02e338d9" translate="yes" xml:space="preserve">
          <source>Add adds the key, value pair to the header. It appends to any existing values associated with key. The key is case insensitive; it is canonicalized by CanonicalHeaderKey.</source>
          <target state="translated">Добавьте ключ,пару значений в заголовок.Он добавляет к любым существующим значениям,связанным с ключом.Ключ не чувствителен к регистру;он канонизирован CanonicalHeaderKey.</target>
        </trans-unit>
        <trans-unit id="0faf3a11d8aff451702ae67094983396accac447" translate="yes" xml:space="preserve">
          <source>Add adds the named field (which should start with a period) to the end of the chain.</source>
          <target state="translated">Добавьте в конец цепочки именованное поле (которое должно начинаться с периода).</target>
        </trans-unit>
        <trans-unit id="278b0456faaade1119bfe47b6df98c28eccf61ea" translate="yes" xml:space="preserve">
          <source>Add adds the value to key. It appends to any existing values associated with key.</source>
          <target state="translated">Добавьте ценность ключа.Оно добавляется к любым существующим значениям,связанным с ключом.</target>
        </trans-unit>
        <trans-unit id="b6f60549ee0cfc5f32434c271b42c44b06989961" translate="yes" xml:space="preserve">
          <source>Add returns the rectangle r translated by p.</source>
          <target state="translated">Добавить возвращает прямоугольник r,переведенный на p.</target>
        </trans-unit>
        <trans-unit id="585629a6740dccaf70f625ce04affb8226c66b7f" translate="yes" xml:space="preserve">
          <source>Add returns the sum with carry of x, y and carry: sum = x + y + carry. The carry input must be 0 or 1; otherwise the behavior is undefined. The carryOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Добавить возвращает сумму с переносом x,y и переносит:сумма=x+y+перенос.Вход переноса должен быть 0 или 1;в противном случае поведение не определено.Гарантируется,что выходной сигнал переноса будет 0 или 1.</target>
        </trans-unit>
        <trans-unit id="0afa824f30d215458f4a419b67e46124f7493469" translate="yes" xml:space="preserve">
          <source>Add returns the time t+d.</source>
          <target state="translated">Add возвращает время t+d.</target>
        </trans-unit>
        <trans-unit id="c95f0248051392a11a12a05cf81cce547a8b8244" translate="yes" xml:space="preserve">
          <source>Add returns the vector p+q.</source>
          <target state="translated">Add возвращает вектор p+q.</target>
        </trans-unit>
        <trans-unit id="ba245a71af4ccdd1f591263ac6536305db2bed13" translate="yes" xml:space="preserve">
          <source>Add sets z to the rounded sum x+y and returns z. If z's precision is 0, it is changed to the larger of x's or y's precision before the operation. Rounding is performed according to z's precision and rounding mode; and z's accuracy reports the result error relative to the exact (not rounded) result. Add panics with ErrNaN if x and y are infinities with opposite signs. The value of z is undefined in that case.</source>
          <target state="translated">Добавьте наборы z к округленной сумме x+y и верните z.Если точность z равна 0,то перед операцией она меняется на большую из x или y.Округление выполняется в соответствии с точностью z и режимом округления;а точность z сообщает об ошибке результата относительно точного (не округленного)результата.Добавьте панику с ErrNaN,если x и y-бесконечности с противоположными знаками.Значение z в этом случае не определено.</target>
        </trans-unit>
        <trans-unit id="00590074ebcc2f548e280599ea5c32c80f81328b" translate="yes" xml:space="preserve">
          <source>Add sets z to the sum x+y and returns z.</source>
          <target state="translated">Добавьте наборы z к сумме x+y и возвращайте z.</target>
        </trans-unit>
        <trans-unit id="19b629dca8e7cec87881e6e14e8d485f3a76d996" translate="yes" xml:space="preserve">
          <source>Add32 returns the sum with carry of x, y and carry: sum = x + y + carry. The carry input must be 0 or 1; otherwise the behavior is undefined. The carryOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Add32 возвращает сумму с переносом x,y и переносом:сумма=x+y+перенос.Вход переноса должен быть 0 или 1,в противном случае поведение не определено.Гарантируется,что выходной сигнал переноса будет 0 или 1.</target>
        </trans-unit>
        <trans-unit id="5e4e45028b02f584b4a95d4b8950f85261cbe854" translate="yes" xml:space="preserve">
          <source>Add64 returns the sum with carry of x, y and carry: sum = x + y + carry. The carry input must be 0 or 1; otherwise the behavior is undefined. The carryOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Add64 возвращает сумму с переносом x,y и переносом:сумма=x+y+перенос.Вход переноса должен быть 0 или 1,в противном случае поведение не определено.Гарантируется,что выходной сигнал переноса будет 0 или 1.</target>
        </trans-unit>
        <trans-unit id="6c9c92bcc797de932d07b084cf008348cb858dd9" translate="yes" xml:space="preserve">
          <source>AddCert adds a certificate to a pool.</source>
          <target state="translated">AddCert добавляет сертификат в пул.</target>
        </trans-unit>
        <trans-unit id="0a9b8624a8f1758a2161fd22c09c59c0e306d4b0" translate="yes" xml:space="preserve">
          <source>AddCookie adds a cookie to the request. Per RFC 6265 section 5.4, AddCookie does not attach more than one Cookie header field. That means all cookies, if any, are written into the same line, separated by semicolon.</source>
          <target state="translated">AddCookie добавляет куки к запросу.В соответствии с разделом 5.4 RFC 6265,AddCookie не прикрепляет более одного поля заголовка Cookie.Это означает,что все куки-файлы,если таковые имеются,записываются в одну и ту же строку,разделенную точкой с запятой.</target>
        </trans-unit>
        <trans-unit id="56654626c2de77a962a391834c7fd81bfd34139b" translate="yes" xml:space="preserve">
          <source>AddCookie adds a cookie to the request. Per RFC 6265 section 5.4, AddCookie does not attach more than one Cookie header field. That means all cookies, if any, are written into the same line, separated by semicolon. AddCookie only sanitizes c's name and value, and does not sanitize a Cookie header already present in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e189525dfaea0418dd309a6cb7ebfcae4199a62e" translate="yes" xml:space="preserve">
          <source>AddDate normalizes its result in the same way that Date does, so, for example, adding one month to October 31 yields December 1, the normalized form for November 31.</source>
          <target state="translated">AddDate нормализует свой результат таким же образом,как и Date,так,например,прибавив к 31 октября один месяц к доходности 1 декабря,нормализованной форме на 31 ноября.</target>
        </trans-unit>
        <trans-unit id="ea940d1bbc1f192f224ace60353e0b1750927e23" translate="yes" xml:space="preserve">
          <source>AddDate returns the time corresponding to adding the given number of years, months, and days to t. For example, AddDate(-1, 2, 3) applied to January 1, 2011 returns March 4, 2010.</source>
          <target state="translated">AddDate возвращает время,соответствующее добавлению заданного количества лет,месяцев и дней к t.Например,AddDate(-1,2,3),применяемая к 1 января 2011 года возвращает 4 марта 2010 года.</target>
        </trans-unit>
        <trans-unit id="de1dbc1a1a38094582ff758395d64a9379927734" translate="yes" xml:space="preserve">
          <source>AddExtensionType sets the MIME type associated with the extension ext to typ. The extension should begin with a leading dot, as in &quot;.html&quot;.</source>
          <target state="translated">AddExtensionType устанавливает MIME тип,ассоциированный с расширением.Расширение должно начинаться с ведущей точки,как в &quot;.html&quot;.</target>
        </trans-unit>
        <trans-unit id="f552f87900c0ec0fe5963b96881b2772f3c33e1f" translate="yes" xml:space="preserve">
          <source>AddFile adds a new file with a given filename, base offset, and file size to the file set s and returns the file. Multiple files may have the same name. The base offset must not be smaller than the FileSet's Base(), and size must not be negative. As a special case, if a negative base is provided, the current value of the FileSet's Base() is used instead.</source>
          <target state="translated">AddFile добавляет новый файл с заданным именем,смещением базы и размером файла в набор s и возвращает файл.Несколько файлов могут иметь одно и то же имя.Базовое смещение не должно быть меньше,чем в функции FileSet's Base(),и размер не должен быть отрицательным.В особом случае,если предоставляется отрицательное смещение,вместо него используется текущее значение функции FileSet's Base().</target>
        </trans-unit>
        <trans-unit id="1fedd35de06c52dffbb471fbdba27aee8feba58b" translate="yes" xml:space="preserve">
          <source>AddFloat adds delta to the *Float value stored under the given map key.</source>
          <target state="translated">AddFloat добавляет дельту к значению *Float,хранящемуся под данной клавишей карты.</target>
        </trans-unit>
        <trans-unit id="5858ca5305a5b0fe80c5593ab2bd856981293e79" translate="yes" xml:space="preserve">
          <source>AddInt32 atomically adds delta to *addr and returns the new value.</source>
          <target state="translated">AddInt32 атоматически добавляет дельту к *addr и возвращает новое значение.</target>
        </trans-unit>
        <trans-unit id="9c4f53ee7feeae5d257b849acc7471b425441121" translate="yes" xml:space="preserve">
          <source>AddInt64 atomically adds delta to *addr and returns the new value.</source>
          <target state="translated">AddInt64 атоматически добавляет дельту к *addr и возвращает новое значение.</target>
        </trans-unit>
        <trans-unit id="36840a2c5d6044dbaa823fcba841f49af7e9d928" translate="yes" xml:space="preserve">
          <source>AddLine adds the line offset for a new line. The line offset must be larger than the offset for the previous line and smaller than the file size; otherwise the line offset is ignored.</source>
          <target state="translated">AddLine добавляет смещение линии для новой линии.Смещение линии должно быть больше,чем смещение для предыдущей линии и меньше,чем размер файла;в противном случае смещение линии игнорируется.</target>
        </trans-unit>
        <trans-unit id="c0567d75e1a38f2b988111fee478d46f4c2f3ebb" translate="yes" xml:space="preserve">
          <source>AddLineColumnInfo adds alternative file, line, and column number information for a given file offset. The offset must be larger than the offset for the previously added alternative line info and smaller than the file size; otherwise the information is ignored.</source>
          <target state="translated">AddLineColumnInfo добавляет альтернативную информацию о файле,строке и номере колонки для заданного смещения файла.Смещение должно быть больше,чем смещение для ранее добавленной альтернативной информации о строке и меньше,чем размер файла;в противном случае информация игнорируется.</target>
        </trans-unit>
        <trans-unit id="ac4fdb78ce37a0820e1c7d77936fa4f818920bc5" translate="yes" xml:space="preserve">
          <source>AddLineColumnInfo is typically used to register alternative position information for line directives such as //line filename:line:column.</source>
          <target state="translated">AddLineColumnInfo обычно используется для регистрации альтернативной информации о позиции для директив строки,таких как //line filename:line:column.</target>
        </trans-unit>
        <trans-unit id="ffb7d16d246eb3ce399562af53b609c59c5c46e3" translate="yes" xml:space="preserve">
          <source>AddLineInfo is like AddLineColumnInfo with a column = 1 argument. It is here for backward-compatibility for code prior to Go 1.11.</source>
          <target state="translated">AddLineInfo похожа на AddLineColumnInfo со столбцом=1 аргумент.Здесь для обратной совместимости кода до Go 1.11.</target>
        </trans-unit>
        <trans-unit id="ab9c2ef1f35d0ef6c0161dd82448b4d74b1c9558" translate="yes" xml:space="preserve">
          <source>AddMethod adds method m unless it is already in the method list.</source>
          <target state="translated">AddMethod добавляет метод m,если он уже не находится в списке методов.</target>
        </trans-unit>
        <trans-unit id="44f221eb4e24f17d42e5bea8d5c27e1378d7d1cc" translate="yes" xml:space="preserve">
          <source>AddParseTree adds parse tree for template with given name and associates it with t. If the template does not already exist, it will create a new one. If the template does exist, it will be replaced.</source>
          <target state="translated">AddParseTree добавляет дерево разбора для шаблона с заданным именем и связывает его с t.Если шаблон еще не существует,он создаст новое.Если шаблон действительно существует,он будет заменен.</target>
        </trans-unit>
        <trans-unit id="fa814f7aa9538fe65074b6dd9bc3fed3d86acfae" translate="yes" xml:space="preserve">
          <source>AddParseTree associates the argument parse tree with the template t, giving it the specified name. If the template has not been defined, this tree becomes its definition. If it has been defined and already has that name, the existing definition is replaced; otherwise a new template is created, defined, and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2afd490c78d79c03722b8ea7f5bce321e908078" translate="yes" xml:space="preserve">
          <source>AddParseTree creates a new template with the name and parse tree and associates it with t.</source>
          <target state="translated">AddParseTree создает новый шаблон с именем и деревом разбора и связывает его с t.</target>
        </trans-unit>
        <trans-unit id="c4de69a26ff1b5ecf076eb003d3a3839cfa2161b" translate="yes" xml:space="preserve">
          <source>AddSection adds another DWARF section by name. The name should be a DWARF section name such as &quot;.debug_addr&quot;, &quot;.debug_str_offsets&quot;, and so forth. This approach is used for new DWARF sections added in DWARF 5 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7233a75408cb93190ed8d7f01c6ae4749187bad2" translate="yes" xml:space="preserve">
          <source>AddTypes will add one .debug_types section to the DWARF data. A typical object with DWARF version 4 debug info will have multiple .debug_types sections. The name is used for error reporting only, and serves to distinguish one .debug_types section from another.</source>
          <target state="translated">AddTypes добавит в данные DWARF одну секцию .debug_types.Типичный объект с DWARF версии 4 будет иметь несколько секций с .debug_types.Это имя используется только для сообщения об ошибках и служит для того,чтобы отличать одну секцию .debug_types от другой.</target>
        </trans-unit>
        <trans-unit id="7731b23781c2390384d6e6975bfd5e70c3626d3b" translate="yes" xml:space="preserve">
          <source>AddUint32 atomically adds delta to *addr and returns the new value. To subtract a signed positive constant value c from x, do AddUint32(&amp;amp;x, ^uint32(c-1)). In particular, to decrement x, do AddUint32(&amp;amp;x, ^uint32(0)).</source>
          <target state="translated">AddUint32 атомарно добавляет дельту к * addr и возвращает новое значение. Чтобы вычесть положительное постоянное значение c со знаком из x, выполните AddUint32 (&amp;amp; x, ^ uint32 (c-1)). В частности, чтобы уменьшить x, выполните AddUint32 (&amp;amp; x, ^ uint32 (0)).</target>
        </trans-unit>
        <trans-unit id="d25bd4fd8252711152a39b3307b6d0eea26273a5" translate="yes" xml:space="preserve">
          <source>AddUint64 atomically adds delta to *addr and returns the new value. To subtract a signed positive constant value c from x, do AddUint64(&amp;amp;x, ^uint64(c-1)). In particular, to decrement x, do AddUint64(&amp;amp;x, ^uint64(0)).</source>
          <target state="translated">AddUint64 атомарно добавляет дельту к * addr и возвращает новое значение. Чтобы вычесть положительное постоянное значение c со знаком из x, выполните AddUint64 (&amp;amp; x, ^ uint64 (c-1)). В частности, чтобы уменьшить x, выполните AddUint64 (&amp;amp; x, ^ uint64 (0)).</target>
        </trans-unit>
        <trans-unit id="190af1abbf968aed5f57b4bc0b0e928d872bce0e" translate="yes" xml:space="preserve">
          <source>AddUintptr atomically adds delta to *addr and returns the new value.</source>
          <target state="translated">AddUintptr атоматически добавляет дельту к *addr и возвращает новое значение.</target>
        </trans-unit>
        <trans-unit id="c0e76ffa9ef9504f9f128ec85ee5c8a4cf06c03b" translate="yes" xml:space="preserve">
          <source>Adding the file will set the file set's Base() value to base + size + 1 as the minimum base value for the next file. The following relationship exists between a Pos value p for a given file offset offs:</source>
          <target state="translated">При добавлении файла в качестве минимального базового значения для следующего файла будет установлено значение Base()в наборе файлов+размер+1.Между значением p позиции для заданного смещения файла существует следующая зависимость:</target>
        </trans-unit>
        <trans-unit id="df900036bb7195309dce533c4d0b19c0a6bb6aa8" translate="yes" xml:space="preserve">
          <source>Additional extensions may be handled by clients.</source>
          <target state="translated">Дополнительные расширения могут быть обработаны клиентами.</target>
        </trans-unit>
        <trans-unit id="286cb9fdf0d392fc50790805d404a305f0ef765d" translate="yes" xml:space="preserve">
          <source>Additionally, files containing a certificate and matching private key for the server must be provided. If the certificate is signed by a certificate authority, the certFile should be the concatenation of the server's certificate, any intermediates, and the CA's certificate.</source>
          <target state="translated">Кроме того,должны быть предоставлены файлы,содержащие сертификат и соответствующий закрытый ключ для сервера.Если сертификат подписан центром сертификации,то certFile должен быть связующим звеном между сертификатом сервера,любыми промежуточными звеньями и сертификатом центра сертификации.</target>
        </trans-unit>
        <trans-unit id="af076ce467f191403f88e869bec4629019ff387d" translate="yes" xml:space="preserve">
          <source>Additionally, if Notify is called, and Windows sends CTRL_CLOSE_EVENT, CTRL_LOGOFF_EVENT or CTRL_SHUTDOWN_EVENT to the process, Notify will return syscall.SIGTERM. Unlike Control-C and Control-Break, Notify does not change process behavior when either CTRL_CLOSE_EVENT, CTRL_LOGOFF_EVENT or CTRL_SHUTDOWN_EVENT is received - the process will still get terminated unless it exits. But receiving syscall.SIGTERM will give the process an opportunity to clean up before termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239d133a84587b1f7b4e745e2f11b398b53b3f15" translate="yes" xml:space="preserve">
          <source>Addr represents a network end point address.</source>
          <target state="translated">Аддр представляет собой адрес конечной точки сети.</target>
        </trans-unit>
        <trans-unit id="607466f9e7067a542b3e6feb6ba15f2a6069324c" translate="yes" xml:space="preserve">
          <source>Addr returns a pointer value representing the address of v. It panics if CanAddr() returns false. Addr is typically used to obtain a pointer to a struct field or slice element in order to call a method that requires a pointer receiver.</source>
          <target state="translated">Addr возвращает значение указателя,представляющее адрес v.Он паникует,если CanAddr()возвращает false.Обычно Addr используется для получения указателя на поле структуры или элемент среза для вызова метода,требующего приемника указателя.</target>
        </trans-unit>
        <trans-unit id="8172f3ce94b65e80356707d217486354f76500a8" translate="yes" xml:space="preserve">
          <source>Addr returns the listener's network address, a *TCPAddr. The Addr returned is shared by all invocations of Addr, so do not modify it.</source>
          <target state="translated">Addr возвращает сетевой адрес слушателя,*TCPAddr.Возвращаемый Addr разделяется всеми вызовами Addr,поэтому не модифицируйте его.</target>
        </trans-unit>
        <trans-unit id="d5668cd5de55531b485b11a427f6aafc99df086b" translate="yes" xml:space="preserve">
          <source>Addr returns the listener's network address. The Addr returned is shared by all invocations of Addr, so do not modify it.</source>
          <target state="translated">Addr возвращает сетевой адрес слушателя.Возвращаемый Addr разделяется всеми вызовами Addr,поэтому не изменяйте его.</target>
        </trans-unit>
        <trans-unit id="bd1232cd9a9fc08fd91a563f464ef4974a2c19c0" translate="yes" xml:space="preserve">
          <source>Address represents a single mail address. An address such as &quot;Barry Gibbs &amp;lt;bg@example.com&amp;gt;&quot; is represented as Address{Name: &quot;Barry Gibbs&quot;, Address: &quot;bg@example.com&quot;}.</source>
          <target state="translated">Адрес представляет собой один почтовый адрес. Такой адрес, как &amp;laquo;Барри Гиббс &amp;lt;bg@example.com&amp;gt;&amp;raquo;, представлен как Адрес {Имя: &amp;laquo;Барри Гиббс&amp;raquo;, Адрес: &amp;laquo;bg@example.com&amp;raquo;}.</target>
        </trans-unit>
        <trans-unit id="31092091ef6169e771115e3f9fb45fb917a09f6a" translate="yes" xml:space="preserve">
          <source>AddressList parses the named header field as a list of addresses.</source>
          <target state="translated">AddressList разбирает именованное поле заголовка как список адресов.</target>
        </trans-unit>
        <trans-unit id="1428b03f1babcfa0815c042e31c28898d265ee15" translate="yes" xml:space="preserve">
          <source>AddressSize returns the size in bytes of addresses in the current compilation unit.</source>
          <target state="translated">AddressSize возвращает размер в байтах адресов в текущем модуле компиляции.</target>
        </trans-unit>
        <trans-unit id="f60869ac80093a039f471c4424eaf534fefaa9db" translate="yes" xml:space="preserve">
          <source>Addressable reports whether the corresponding expression is addressable (&lt;a href=&quot;https://golang.org/ref/spec#Address_operators&quot;&gt;https://golang.org/ref/spec#Address_operators&lt;/a&gt;).</source>
          <target state="translated">Addressable сообщает, можно ли адресовать соответствующее выражение ( &lt;a href=&quot;https://golang.org/ref/spec#Address_operators&quot;&gt;https://golang.org/ref/spec#Address_operators&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2390852967aa96229ea563fa30b9c73a89cdae59" translate="yes" xml:space="preserve">
          <source>Addrs returns a list of unicast interface addresses for a specific interface.</source>
          <target state="translated">Addrs возвращает список адресов одноадресного интерфейса для конкретного интерфейса.</target>
        </trans-unit>
        <trans-unit id="79ba5e1b3f99abfd54ef8d839ba12bd2ac4d79cb" translate="yes" xml:space="preserve">
          <source>After</source>
          <target state="translated">After</target>
        </trans-unit>
        <trans-unit id="51266c52e2ef76298b0634e50f0e5ca518d1596f" translate="yes" xml:space="preserve">
          <source>After a call to Close, all operations on the connection fail with ErrConnDone.</source>
          <target state="translated">После вызова команды &quot;Закрыть&quot; все операции по соединению с ErrConnDone заканчиваются неудачей.</target>
        </trans-unit>
        <trans-unit id="4e242d525b986cfee6163e2d5e94dae6540d54c0" translate="yes" xml:space="preserve">
          <source>After a call to Commit or Rollback, all operations on the transaction fail with ErrTxDone.</source>
          <target state="translated">После вызова команды Commit или Rollback все операции по транзакции завершаются ошибкой ErrTxDone.</target>
        </trans-unit>
        <trans-unit id="9b7cc0b202b5a6cf175ea12cda51cc3b5c865a50" translate="yes" xml:space="preserve">
          <source>After all flags are defined, call</source>
          <target state="translated">После того,как все флаги будут определены,позвоните</target>
        </trans-unit>
        <trans-unit id="b11552cc3a06865b41f4c91326ff7e31f9e7baf0" translate="yes" xml:space="preserve">
          <source>After calling NextResultSet, the Next method should always be called before scanning. If there are further result sets they may not have rows in the result set.</source>
          <target state="translated">После вызова NextResultSet,метод Next всегда должен вызываться перед сканированием.При наличии следующих результирующих множеств они могут не иметь строк в результирующем множестве.</target>
        </trans-unit>
        <trans-unit id="fc109254d6837e645dfea4e00b401bd7b8f10009" translate="yes" xml:space="preserve">
          <source>After changing its configuration, the caller should call Start or StartTLS.</source>
          <target state="translated">После изменения конфигурации вызывающий абонент должен вызвать Start или StartTLS.</target>
        </trans-unit>
        <trans-unit id="654d1a15299a9b595ffcb08b8df7cdadf64b5c19" translate="yes" xml:space="preserve">
          <source>After parsing b, any bytes that were leftover and not used to fill val will be returned in rest. When parsing a SEQUENCE into a struct, any trailing elements of the SEQUENCE that do not have matching fields in val will not be included in rest, as these are considered valid elements of the SEQUENCE and not trailing data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902382debcdaed0b05dacf789c63d2774e1d7805" translate="yes" xml:space="preserve">
          <source>After parsing, the arguments following the flags are available as the slice flag.Args() or individually as flag.Arg(i). The arguments are indexed from 0 through flag.NArg()-1.</source>
          <target state="translated">После разбора аргументы,следующие за флагами,доступны как slice flag.Args()или индивидуально как flag.Arg(i).Аргументы индексируются от 0 до flag.NArg()-1.</target>
        </trans-unit>
        <trans-unit id="e674fa09a206a679decde5943633b89478d3d84d" translate="yes" xml:space="preserve">
          <source>After passing it to NewFile, fd may become invalid under the same conditions described in the comments of the Fd method, and the same constraints apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1b011e660c77ea973c7163c2f73dcca65df333" translate="yes" xml:space="preserve">
          <source>After reports whether the time instant t is after u.</source>
          <target state="translated">После сообщений о том,что момент времени t находится после u.</target>
        </trans-unit>
        <trans-unit id="8e172e56ebdd816679ce623111d437357fa222a7" translate="yes" xml:space="preserve">
          <source>After waits for the duration to elapse and then sends the current time on the returned channel. It is equivalent to NewTimer(d).C. The underlying Timer is not recovered by the garbage collector until the timer fires. If efficiency is a concern, use NewTimer instead and call Timer.Stop if the timer is no longer needed.</source>
          <target state="translated">После истечения времени ожидания и последующей отправки текущего времени по возвращаемому каналу.Это эквивалентно NewTimer(d).C.Таймер,лежащий в основе,не восстанавливается сборщиком мусора до тех пор,пока таймер не загорится.Если эффективность является проблемой,используйте вместо этого NewTimer и позвоните в Timer.Stop,если таймер больше не нужен.</target>
        </trans-unit>
        <trans-unit id="e4c3a4e3ecbfcb3d8ebe9bb146b442a17039a6e4" translate="yes" xml:space="preserve">
          <source>AfterFunc waits for the duration to elapse and then calls f in its own goroutine. It returns a Timer that can be used to cancel the call using its Stop method.</source>
          <target state="translated">AfterFunc ждет,пока истечет его продолжительность,а затем вызывает f в своем собственном горутине.Он возвращает таймер,который может быть использован для отмены вызова с помощью метода Stop.</target>
        </trans-unit>
        <trans-unit id="52203fa166bcb814e34b7bfd717ce5e34da01f93" translate="yes" xml:space="preserve">
          <source>Alert logs a message with severity LOG_ALERT, ignoring the severity passed to New.</source>
          <target state="translated">Предупреждение регистрирует сообщение со строгостью LOG_ALERT,игнорируя строгость,переданную New.</target>
        </trans-unit>
        <trans-unit id="cf50c6d0c4f08187d0f0ca8d3062d2660efd4a9b" translate="yes" xml:space="preserve">
          <source>AlgorithmIdentifier represents the ASN.1 structure of the same name. See RFC 5280, section 4.1.1.2.</source>
          <target state="translated">АлгоритмИдентификатор представляет собой одноименную структуру ASN.1.См.RFC 5280,раздел 4.1.1.2.</target>
        </trans-unit>
        <trans-unit id="3a2ca48b60bd6b1a14d6a2ac1a6041efe4ba7a9d" translate="yes" xml:space="preserve">
          <source>Alignof takes an expression x of any type and returns the required alignment of a hypothetical variable v as if v was declared via var v = x. It is the largest value m such that the address of v is always zero mod m. It is the same as the value returned by reflect.TypeOf(x).Align(). As a special case, if a variable s is of struct type and f is a field within that struct, then Alignof(s.f) will return the required alignment of a field of that type within a struct. This case is the same as the value returned by reflect.TypeOf(s.f).FieldAlign(). The return value of Alignof is a Go constant.</source>
          <target state="translated">Alignof принимает выражение x любого типа и возвращает требуемое выравнивание гипотетической переменной v,как если бы v была объявлена через var v=x.Это самое большое значение m,так что адрес v всегда равен нулю mod m.Это то же самое значение,что и значение,возвращаемое функцией reflect.TypeOf(x).Align().В особом случае,если переменная s имеет тип struct,а f является полем внутри этой структуры,то Alignof(s.f)вернет требуемое выравнивание поля этого типа внутри структуры.Этот случай совпадает со значением,возвращаемым функцией reflect.TypeOf(s.f).FieldAlign().Возвращаемое значение Alignof является константой Go.</target>
        </trans-unit>
        <trans-unit id="6dd2631470df922a18ced4ba1130846e8c3b73b1" translate="yes" xml:space="preserve">
          <source>All Conn implementations should implement the following interfaces: Pinger, SessionResetter, and Validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b76a535f3a824bc0e7af6e39f77b353583e557" translate="yes" xml:space="preserve">
          <source>All arguments to be scanned must be either pointers to basic types or implementations of the Scanner interface.</source>
          <target state="translated">Все аргументы для сканирования должны быть либо указателями на основные типы,либо реализацией интерфейса сканера.</target>
        </trans-unit>
        <trans-unit id="fd50e92141f0c87dd15f20814b591a9a5618309e" translate="yes" xml:space="preserve">
          <source>All bits of the Sum64 result are close to uniformly and independently distributed, so it can be safely reduced by using bit masking, shifting, or modular arithmetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efe4c6fa30457a9aff5de61e746ace1b26467a8" translate="yes" xml:space="preserve">
          <source>All characters are UTF-8-encoded code points.</source>
          <target state="translated">Все символы имеют кодировку UTF-8.</target>
        </trans-unit>
        <trans-unit id="2314ab5383e8c5b7223fc5076bd94c65406b693b" translate="yes" xml:space="preserve">
          <source>All declaration nodes implement the Decl interface.</source>
          <target state="translated">Все узлы декларации реализуют интерфейс Decl.</target>
        </trans-unit>
        <trans-unit id="f71fdc2653fada1accdfeb2fa2bec4f375c3fa23" translate="yes" xml:space="preserve">
          <source>All errors begin with the string &quot;%!&quot; followed sometimes by a single character (the verb) and end with a parenthesized description.</source>
          <target state="translated">Все ошибки начинаются со строки &quot;%!&quot;,за которой иногда следует один символ (глагол),а заканчиваются описанием в круглых скобках.</target>
        </trans-unit>
        <trans-unit id="fd9c7fa09e8a564e3b85ff4c24ae90b2ff55599f" translate="yes" xml:space="preserve">
          <source>All errors that arise visiting files and directories are filtered by fn: see the WalkFunc documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241ffa8e200e3f1a491bc4dcaca50d3d16ad9d1a" translate="yes" xml:space="preserve">
          <source>All errors that arise visiting files and directories are filtered by fn: see the fs.WalkDirFunc documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea399ca9139a5569fa2c17121e21527d0f13e27" translate="yes" xml:space="preserve">
          <source>All expression nodes implement the Expr interface.</source>
          <target state="translated">Все узлы выражений реализуют интерфейс Expr.</target>
        </trans-unit>
        <trans-unit id="439bb2dad8a28e5fb2b434cb4e6612e2a16c7b96" translate="yes" xml:space="preserve">
          <source>All init functions are run on the startup thread. Calling LockOSThread from an init function will cause the main function to be invoked on that thread.</source>
          <target state="translated">Все входные функции выполняются в резьбе ввода в эксплуатацию.Вызов LockOSThread из функции init приведет к вызову основной функции в этом потоке.</target>
        </trans-unit>
        <trans-unit id="97c6b4dd788d20932f24c2193fdad47d4daae398" translate="yes" xml:space="preserve">
          <source>All node types implement the Node interface.</source>
          <target state="translated">Все типы узлов реализуют интерфейс Node.</target>
        </trans-unit>
        <trans-unit id="6f0c09894c725d3c9e77a6a63f1453b76eef2346" translate="yes" xml:space="preserve">
          <source>All other slices and arrays are sent as an unsigned count followed by that many elements using the standard gob encoding for their type, recursively.</source>
          <target state="translated">Все остальные фрагменты и массивы посылаются как неподписанный счет,за которым следует столько элементов,использующих стандартную кодировку gob для их типа,рекурсивно.</target>
        </trans-unit>
        <trans-unit id="c07c04f887e8fd6a45cc8003575f59395c10470b" translate="yes" xml:space="preserve">
          <source>All returns a slice of containing metric descriptions for all supported metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9146cc320b30397d729a875d3b4f8e2bc63e8c3" translate="yes" xml:space="preserve">
          <source>All statement nodes implement the Stmt interface.</source>
          <target state="translated">Все узлы оператора реализуют интерфейс Stmt.</target>
        </trans-unit>
        <trans-unit id="65ae9abe1fa8712f97e1beed2b48172fff49a778" translate="yes" xml:space="preserve">
          <source>All the hash.Hash implementations returned by this package also implement encoding.BinaryMarshaler and encoding.BinaryUnmarshaler to marshal and unmarshal the internal state of the hash.</source>
          <target state="translated">Во всех реализациях hash.Hash,возвращаемых этим пакетом,также реализованы кодировка.BinaryMarshaler и кодировка.BinaryUnmarshaler для выделения и разделения внутреннего состояния хэша.</target>
        </trans-unit>
        <trans-unit id="a012ad6e122a6b4838c9ef8c1d66082acb7fe44c" translate="yes" xml:space="preserve">
          <source>AllThreadsSyscall is intended for emulating simultaneous process-wide state changes that require consistently modifying per-thread state of the Go runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683000ce92fd6581da14b61e96fbf78c2c722af2" translate="yes" xml:space="preserve">
          <source>AllThreadsSyscall is unaware of any threads that are launched explicitly by cgo linked code, so the function always returns ENOTSUP in binaries that use cgo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48814b23f777d0a8543e9a870656ab45ff609520" translate="yes" xml:space="preserve">
          <source>AllThreadsSyscall performs a syscall on each OS thread of the Go runtime. It first invokes the syscall on one thread. Should that invocation fail, it returns immediately with the error status. Otherwise, it invokes the syscall on all of the remaining threads in parallel. It will terminate the program if it observes any invoked syscall's return value differs from that of the first invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b107adc0b40f180bab823d7e51724b5e3d3c7f09" translate="yes" xml:space="preserve">
          <source>AllThreadsSyscall6 is like AllThreadsSyscall, but extended to six arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4b09053ce6dc1a057246d17d4fec0360be7d1c" translate="yes" xml:space="preserve">
          <source>AllocedBytesPerOp returns the &quot;B/op&quot; metric, which is calculated as r.MemBytes / r.N.</source>
          <target state="translated">AllocedBytesPerOp возвращает метрику &quot;B/op&quot;,которая вычисляется как r.MemBytes/r.N.</target>
        </trans-unit>
        <trans-unit id="12b2fa12ce7cf5b9e4f9ed48969a1983e0d1d5d2" translate="yes" xml:space="preserve">
          <source>AllocsPerOp returns the &quot;allocs/op&quot; metric, which is calculated as r.MemAllocs / r.N.</source>
          <target state="translated">AllocsPerOp возвращает метрику &quot;сплавы/оп&quot;,которая рассчитывается как r.MemAllocs/r.N.</target>
        </trans-unit>
        <trans-unit id="badcac1ab432ee1a8a56581e11ba0e5ab9790707" translate="yes" xml:space="preserve">
          <source>AllocsPerRun returns the average number of allocations during calls to f. Although the return value has type float64, it will always be an integral value.</source>
          <target state="translated">AllocsPerRun возвращает среднее количество распределений при вызове на f.Хотя возвращаемое значение имеет тип float64,оно всегда будет интегральным значением.</target>
        </trans-unit>
        <trans-unit id="69f8869e42decf1676089266f7f518cee77fd0af" translate="yes" xml:space="preserve">
          <source>AllocsPerRun sets GOMAXPROCS to 1 during its measurement and will restore it before returning.</source>
          <target state="translated">AllocsPerRun устанавливает GOMAXPROCS на 1 во время измерения и восстанавливает его перед возвращением.</target>
        </trans-unit>
        <trans-unit id="2b842b60e3487e1d9cdc7af135ff6ba6435574c8" translate="yes" xml:space="preserve">
          <source>Alpha is an in-memory image whose At method returns color.Alpha values.</source>
          <target state="translated">Альфа-это изображение в памяти,которое в At-методе возвращает значения color.Alpha.</target>
        </trans-unit>
        <trans-unit id="1d6556da37edadf737283b435a625d47b77b00a4" translate="yes" xml:space="preserve">
          <source>Alpha represents an 8-bit alpha color.</source>
          <target state="translated">Альфа представляет собой 8-битный альфа-цвет.</target>
        </trans-unit>
        <trans-unit id="eb7ce30976aff039c4b314b9299fbf3b51bf4b5f" translate="yes" xml:space="preserve">
          <source>Alpha16 is an in-memory image whose At method returns color.Alpha16 values.</source>
          <target state="translated">Альфа16-это изображение в памяти,которое в At-методе возвращает значения color.Alpha16.</target>
        </trans-unit>
        <trans-unit id="17f51a9d20c648e3a8adb401d7734bd7422b79ee" translate="yes" xml:space="preserve">
          <source>Alpha16 represents a 16-bit alpha color.</source>
          <target state="translated">Альфа16 представляет собой 16-битный альфа-цвет.</target>
        </trans-unit>
        <trans-unit id="fb30b27f413d64a9fb0cbb842f0d9c65ea0f6942" translate="yes" xml:space="preserve">
          <source>Alternatively, new values can be allocated and initialized with factory functions of the form:</source>
          <target state="translated">Кроме того,новые значения могут быть назначены и инициализированы с помощью заводских функций формы:</target>
        </trans-unit>
        <trans-unit id="e05fd011282817682b1c22d0d70a09154585c4c3" translate="yes" xml:space="preserve">
          <source>Although the package provides access to low-level networking primitives, most clients will need only the basic interface provided by the Dial, Listen, and Accept functions and the associated Conn and Listener interfaces. The crypto/tls package uses the same interfaces and similar Dial and Listen functions.</source>
          <target state="translated">Хотя пакет предоставляет доступ к сетевым примитивам низкого уровня,большинству клиентов понадобится только базовый интерфейс,предоставляемый функциями Dial,Listen,Accept и связанными с ними интерфейсами Conn и Listener.Пакет crypto/tls использует те же самые интерфейсы и аналогичные функции Dial и Listen.</target>
        </trans-unit>
        <trans-unit id="4aa6f271ecce01c74386f5cab4917b581ae9b6f4" translate="yes" xml:space="preserve">
          <source>An ASN.1 BIT STRING can be written to a BitString.</source>
          <target state="translated">ASN.1 BIT STRING может быть записано на BitString.</target>
        </trans-unit>
        <trans-unit id="3b05462a8e3ed73d565469132de236aba1a72def" translate="yes" xml:space="preserve">
          <source>An ASN.1 ENUMERATED can be written to an Enumerated.</source>
          <target state="translated">ASN.1 ENUMERATED может быть записано в Перечень.</target>
        </trans-unit>
        <trans-unit id="260b18862b10ae0e74a033b94545c3cf7cd4c55e" translate="yes" xml:space="preserve">
          <source>An ASN.1 INTEGER can be written to an int, int32, int64, or *big.Int (from the math/big package). If the encoded value does not fit in the Go type, Unmarshal returns a parse error.</source>
          <target state="translated">ASN.1 INTEGER может быть написан на int,int32,int64 или *big.Int (из пакета math/big).Если кодированное значение не укладывается в тип Go,Unmarshal возвращает ошибку разбора.</target>
        </trans-unit>
        <trans-unit id="869b61cb05b1b3e5bee725f577f97c0c1cafb3d4" translate="yes" xml:space="preserve">
          <source>An ASN.1 OBJECT IDENTIFIER can be written to an ObjectIdentifier.</source>
          <target state="translated">ИДЕНТИФАЙФИРАТОР ОБЪЕКТА ASN.1 может быть написан на ИДЕНТИФАЙФЕР ОБЪЕКТА.</target>
        </trans-unit>
        <trans-unit id="8230571aad1a64236469fadfb2ef0cabb863fbcb" translate="yes" xml:space="preserve">
          <source>An ASN.1 OCTET STRING can be written to a []byte.</source>
          <target state="translated">ASN.1 OCTET STRING может быть записано в []байт.</target>
        </trans-unit>
        <trans-unit id="bf2bca6ff0b4d0bb1c60638a2ca6cf2e275df6be" translate="yes" xml:space="preserve">
          <source>An ASN.1 PrintableString, IA5String, or NumericString can be written to a string.</source>
          <target state="translated">ASN.1 PrintableString,IA5String или NumericString могут быть записаны в строку.</target>
        </trans-unit>
        <trans-unit id="7e49fd50438627ac23f6a9e8691fbef9762a320b" translate="yes" xml:space="preserve">
          <source>An ASN.1 SEQUENCE OF x or SET OF x can be written to a slice if an x can be written to the slice's element type.</source>
          <target state="translated">ASN.1 УСТАНОВКА Х или УСТАНОВКА Х может быть записано на ломтик,если х может быть записано на элементный тип ломтика.</target>
        </trans-unit>
        <trans-unit id="faa0a794464c52980812f881a6f05ec60e65cbab" translate="yes" xml:space="preserve">
          <source>An ASN.1 SEQUENCE or SET can be written to a struct if each of the elements in the sequence can be written to the corresponding element in the struct.</source>
          <target state="translated">ASN.1 SEQUENCE или SET могут быть записаны в структуру,если каждый из элементов в последовательности может быть записан в соответствующий элемент структуры.</target>
        </trans-unit>
        <trans-unit id="ad20aa7b03987bad2cf797451b15b47646f20ae5" translate="yes" xml:space="preserve">
          <source>An ASN.1 UTCTIME or GENERALIZEDTIME can be written to a time.Time.</source>
          <target state="translated">ASN.1 UTCTIME или GENERALIZEDTIME (ВРЕМЯ РАЗМЕЩЕНИЯ И ГЕНЕРАЛИЗОВАНИЯ)может быть написано во врем.времени.</target>
        </trans-unit>
        <trans-unit id="36aadf8f5498a5d6a7f99a8402775cb348c8f6b5" translate="yes" xml:space="preserve">
          <source>An AddrType represents a machine address type.</source>
          <target state="translated">AddrType представляет собой тип адреса машины.</target>
        </trans-unit>
        <trans-unit id="8d75f2635e147e42345dfd716713a80c0faf359b" translate="yes" xml:space="preserve">
          <source>An AddressParser is an RFC 5322 address parser.</source>
          <target state="translated">AddressParser-это адресный парсер RFC 5322.</target>
        </trans-unit>
        <trans-unit id="e2fbb9820697f51b88d8870d7a4b6966137d0017" translate="yes" xml:space="preserve">
          <source>An AndExpr represents the expression X &amp;amp;&amp;amp; Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751b64ea00145591b831c86aeec73c9cd6e3f193" translate="yes" xml:space="preserve">
          <source>An Array represents an array type.</source>
          <target state="translated">Массив представляет собой тип массива.</target>
        </trans-unit>
        <trans-unit id="e83f825cc4b7a3b11c3d536847a9172d88cd97a4" translate="yes" xml:space="preserve">
          <source>An ArrayType node represents an array or slice type.</source>
          <target state="translated">Узел ArrayType представляет собой массив или тип среза.</target>
        </trans-unit>
        <trans-unit id="8ac61edaef43e2f85c83e7b3205dbe82f5419012" translate="yes" xml:space="preserve">
          <source>An ArrayType represents a fixed size array type.</source>
          <target state="translated">ArrayType представляет собой тип массива фиксированного размера.</target>
        </trans-unit>
        <trans-unit id="857c276d40ff85b22398af4e95f15e17dfc3761e" translate="yes" xml:space="preserve">
          <source>An AssignStmt node represents an assignment or a short variable declaration.</source>
          <target state="translated">Узел AssignStmt представляет собой присваивание или короткое объявление переменной.</target>
        </trans-unit>
        <trans-unit id="e8de9651bc85b5cadec1c2186fcfc45df4325dc7" translate="yes" xml:space="preserve">
          <source>An Attr identifies the attribute type in a DWARF Entry's Field.</source>
          <target state="translated">Attr идентифицирует тип атрибута в поле ввода DWARF.</target>
        </trans-unit>
        <trans-unit id="a039b716fe768e4a98f3c47ea1a43617424d2cb0" translate="yes" xml:space="preserve">
          <source>An Attr represents an attribute in an XML element (Name=Value).</source>
          <target state="translated">Attr представляет собой атрибут в XML элементе (Name=Value).</target>
        </trans-unit>
        <trans-unit id="1b862e215532b08f8993adb353e29f24b113d0d2" translate="yes" xml:space="preserve">
          <source>An Ellipsis node stands for the &quot;...&quot; type in a parameter list or the &quot;...&quot; length in an array type.</source>
          <target state="translated">Эллипсисный узел обозначает тип &quot;...&quot; в списке параметров или &quot;...&quot; длину в типе массива.</target>
        </trans-unit>
        <trans-unit id="206e1d6d2930e4b55272a8c2ace302d5bebb4d6b" translate="yes" xml:space="preserve">
          <source>An EmptyOp specifies a kind or mixture of zero-width assertions.</source>
          <target state="translated">EmptyOp определяет вид или смесь утверждений нулевой ширины.</target>
        </trans-unit>
        <trans-unit id="79b1e78fcc680965fe6e575d14194a8c78459d1e" translate="yes" xml:space="preserve">
          <source>An EmptyStmt node represents an empty statement. The &quot;position&quot; of the empty statement is the position of the immediately following (explicit or implicit) semicolon.</source>
          <target state="translated">Узел EmptyStmt представляет собой пустое утверждение.Позиция&quot; пустого оператора-это позиция ближайшей следующей (явной или неявной)точки с запятой.</target>
        </trans-unit>
        <trans-unit id="cc21548a00526537378e03c232e946ddafc77006" translate="yes" xml:space="preserve">
          <source>An Encoder manages the transmission of type and data information to the other side of a connection. It is safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Кодировщик управляет передачей информации о типе и данных на другую сторону соединения.Он безопасен для одновременного использования несколькими горутинами.</target>
        </trans-unit>
        <trans-unit id="7ec5724a97180ce1fa9f610646dede20f58de73b" translate="yes" xml:space="preserve">
          <source>An Encoder writes JSON values to an output stream.</source>
          <target state="translated">Кодировщик записывает JSON-значения в выходной поток.</target>
        </trans-unit>
        <trans-unit id="44a80ad51642ec26186393b48e82a0a974e794a4" translate="yes" xml:space="preserve">
          <source>An Encoder writes XML data to an output stream.</source>
          <target state="translated">Кодировщик записывает XML-данные в выходной поток.</target>
        </trans-unit>
        <trans-unit id="cd93c235f0bd9a74ea8b32e43f217fd3a3bd805a" translate="yes" xml:space="preserve">
          <source>An Encoding is a radix 32 encoding/decoding scheme, defined by a 32-character alphabet. The most common is the &quot;base32&quot; encoding introduced for SASL GSSAPI and standardized in RFC 4648. The alternate &quot;base32hex&quot; encoding is used in DNSSEC.</source>
          <target state="translated">Схема кодирования/декодирования-это схема кодирования/декодирования радиусом 32,определяемая 32-символьным алфавитом.Наиболее распространенной является кодировка &quot;base32&quot;,введенная для SASL GSSAPI и стандартизованная в RFC 4648.Альтернативная кодировка &quot;base32hex&quot; используется в DNSSEC.</target>
        </trans-unit>
        <trans-unit id="5c6f72e4757281a321975587e037d0edc0910a0b" translate="yes" xml:space="preserve">
          <source>An Encoding is a radix 64 encoding/decoding scheme, defined by a 64-character alphabet. The most common encoding is the &quot;base64&quot; encoding defined in RFC 4648 and used in MIME (RFC 2045) and PEM (RFC 1421). RFC 4648 also defines an alternate encoding, which is the standard encoding with - and _ substituted for + and /.</source>
          <target state="translated">Кодирование-это схема кодирования/декодирования радиксом 64,определяемая 64-символьным алфавитом.Наиболее распространенной кодировкой является кодировка &quot;base64&quot;,определенная в RFC 4648 и используемая в MIME (RFC 2045)и PEM (RFC 1421).RFC 4648 также определяет альтернативную кодировку,которая является стандартной кодировкой с-и _,заменяющей+и /.</target>
        </trans-unit>
        <trans-unit id="f9fc159c5bbba125ca80971575038639e4c30e15" translate="yes" xml:space="preserve">
          <source>An EndElement represents an XML end element.</source>
          <target state="translated">EndElement представляет собой конечный элемент XML.</target>
        </trans-unit>
        <trans-unit id="c2933f1f28cbba0bc7344ba80287c65dff0bc30f" translate="yes" xml:space="preserve">
          <source>An EnumType represents an enumerated type. The only indication of its native integer type is its ByteSize (inside CommonType).</source>
          <target state="translated">EnumType представляет собой перечисленный тип.Единственным указанием на родной целочисленный тип является его ByteSize (внутри CommonType).</target>
        </trans-unit>
        <trans-unit id="b79e9324c93170d0ebbe1508dc6c4fcc8e187b01" translate="yes" xml:space="preserve">
          <source>An EnumValue represents a single enumeration value.</source>
          <target state="translated">Значение EnumValue представляет собой единое перечислительное значение.</target>
        </trans-unit>
        <trans-unit id="9ec3768c8ebcfbb9ce9b3c7a117577939cc3fb5a" translate="yes" xml:space="preserve">
          <source>An Enumerated is represented as a plain int.</source>
          <target state="translated">Перечисленное представлено в виде простого инт.</target>
        </trans-unit>
        <trans-unit id="f06294438639908dac8d5e188fdee9a4acee8b91" translate="yes" xml:space="preserve">
          <source>An ErrNaN panic is raised by a Float operation that would lead to a NaN under IEEE-754 rules. An ErrNaN implements the error interface.</source>
          <target state="translated">Панику ErrNaN поднимает операция Float,которая приведет к NaN по правилам IEEE-754.ErrNaN реализует интерфейс ошибок.</target>
        </trans-unit>
        <trans-unit id="f54d7aa37ca74152ff50d53a4a9eb371bd8fc6f6" translate="yes" xml:space="preserve">
          <source>An Errno is an unsigned number describing an error condition. It implements the error interface. The zero Errno is by convention a non-error, so code to convert from Errno to error should use:</source>
          <target state="translated">Errno-это беззнаковое число,описывающее состояние ошибки.Он реализует интерфейс ошибки.Нулевой Errno по условию не является ошибкой,поэтому код для преобразования из Errno в ошибку должен использоваться:</target>
        </trans-unit>
        <trans-unit id="512d38ad90ecdbb223905a3c98396bc761092f77" translate="yes" xml:space="preserve">
          <source>An Error describes a failure to parse a regular expression and gives the offending expression.</source>
          <target state="translated">Ошибка описывает неспособность разобрать регулярное выражение и дает оскорбительное выражение.</target>
        </trans-unit>
        <trans-unit id="1c853d687301eacbdc70fc7b2069d367a181575f" translate="yes" xml:space="preserve">
          <source>An Error describes a type-checking error; it implements the error interface. A &quot;soft&quot; error is an error that still permits a valid interpretation of a package (such as &quot;unused variable&quot;); &quot;hard&quot; errors may lead to unpredictable behavior if ignored.</source>
          <target state="translated">Ошибка описывает ошибку проверки типа;она реализует интерфейс ошибки.Мягкая&quot; ошибка-это ошибка,которая все еще позволяет правильно интерпретировать пакет (например,&quot;неиспользуемая переменная&quot;);&quot;жесткие&quot; ошибки могут привести к непредсказуемому поведению,если их игнорировать.</target>
        </trans-unit>
        <trans-unit id="9d28234f48490b0ef3b8db38b651b8397ba38df3" translate="yes" xml:space="preserve">
          <source>An Error represents a network error.</source>
          <target state="translated">Ошибка представляет собой сетевую ошибку.</target>
        </trans-unit>
        <trans-unit id="f652324f5503064eba1ee715c7833fbf6d566dc0" translate="yes" xml:space="preserve">
          <source>An Error represents a numeric error response from a server.</source>
          <target state="translated">Ошибка представляет собой ответ сервера на числовую ошибку.</target>
        </trans-unit>
        <trans-unit id="3769e7ac9e5605d81e8490caf08cd40057870dac" translate="yes" xml:space="preserve">
          <source>An ErrorCode describes a failure to parse a regular expression.</source>
          <target state="translated">ErrorCode описывает невозможность разбора регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="54a91464923f2af9618f528d284b1f1da0c9208c" translate="yes" xml:space="preserve">
          <source>An ErrorHandler may be provided to Scanner.Init. If a syntax error is encountered and a handler was installed, the handler is called with a position and an error message. The position points to the beginning of the offending token.</source>
          <target state="translated">ErrorHandler может быть предоставлен в Scanner.Init.В случае обнаружения синтаксической ошибки и установки обработчика,вызывается обработчик с позицией и сообщением об ошибке.Позиция указывает на начало атакующей лексемы.</target>
        </trans-unit>
        <trans-unit id="24a7817e69ae447e63261c2dd340c4bdb534b1ae" translate="yes" xml:space="preserve">
          <source>An ErrorList implements the error interface.</source>
          <target state="translated">ErrorList реализует интерфейс ошибки.</target>
        </trans-unit>
        <trans-unit id="8386dd5696de787382b0b9b9bedbc5b15351fb0b" translate="yes" xml:space="preserve">
          <source>An Example represents an example function found in a source files.</source>
          <target state="translated">Пример представляет собой пример функции,найденной в исходных файлах.</target>
        </trans-unit>
        <trans-unit id="cd403f90e99c96d4fbce5b3d5851197b0ca4223e" translate="yes" xml:space="preserve">
          <source>An Example represents an example function found in a test source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215350db86b77b9a2e2e1f96152b7e43551b80ea" translate="yes" xml:space="preserve">
          <source>An ExitError reports an unsuccessful exit by a command.</source>
          <target state="translated">ExitError сообщает о неудачном выходе по команде.</target>
        </trans-unit>
        <trans-unit id="0ab7067a6c3f15c3ea54dee44e0bb706dd3a90ae" translate="yes" xml:space="preserve">
          <source>An Expr is a build tag constraint expression. The underlying concrete type is *AndExpr, *OrExpr, *NotExpr, or *TagExpr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bc8f57d6f82bf73794821b6ff5dd43d87bda94" translate="yes" xml:space="preserve">
          <source>An ExprStmt node represents a (stand-alone) expression in a statement list.</source>
          <target state="translated">Узел ExprStmt представляет собой (автономное)выражение в списке операторов.</target>
        </trans-unit>
        <trans-unit id="327713a9dfbd6a1c37df0f9f2491b6045b44bb2f" translate="yes" xml:space="preserve">
          <source>An FS is a read-only collection of files, usually initialized with a //go:embed directive. When declared without a //go:embed directive, an FS is an empty file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35876ab6ea3576e3775e1b1a001a96919c62e5b7" translate="yes" xml:space="preserve">
          <source>An FS is a read-only value, so it is safe to use from multiple goroutines simultaneously and also safe to assign values of type FS to each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052dce2cc648050e9d6e8e38eb8ad5c01e947173" translate="yes" xml:space="preserve">
          <source>An FS provides access to a hierarchical file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1088189e4db6e193143ddf5d3de9c7c46bc88d" translate="yes" xml:space="preserve">
          <source>An IP is a single IP address, a slice of bytes. Functions in this package accept either 4-byte (IPv4) or 16-byte (IPv6) slices as input.</source>
          <target state="translated">IP-это один IP-адрес,кусок байта.Функции данного пакета принимают на вход либо 4-байтовые (IPv4),либо 16-байтовые (IPv6)ломтики.</target>
        </trans-unit>
        <trans-unit id="5ee413fb49e920eaeb667d475d84bffedb2967a4" translate="yes" xml:space="preserve">
          <source>An IP mask is an IP address.</source>
          <target state="translated">Маска IP-это IP-адрес.</target>
        </trans-unit>
        <trans-unit id="3dbc20d656da3507f2ad2280100243d469091105" translate="yes" xml:space="preserve">
          <source>An IPMask is a bitmask that can be used to manipulate IP addresses for IP addressing and routing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f236b320eae23c3c4580d036703570dfc8db5aef" translate="yes" xml:space="preserve">
          <source>An IPNet represents an IP network.</source>
          <target state="translated">IPNet представляет собой IP-сеть.</target>
        </trans-unit>
        <trans-unit id="07af42d11561f0b970bb0742d7b092bd5695998a" translate="yes" xml:space="preserve">
          <source>An Ident node represents an identifier.</source>
          <target state="translated">Узел &quot;Идентификатор&quot; представляет собой идентификатор.</target>
        </trans-unit>
        <trans-unit id="c2482695edf6a726d25800b1f5cb476bfe9e0a58" translate="yes" xml:space="preserve">
          <source>An IfStmt node represents an if statement.</source>
          <target state="translated">Узел IfStmt представляет собой оператор if.</target>
        </trans-unit>
        <trans-unit id="c7d5dd87613417535deb3ae897d0824e60e9bcea" translate="yes" xml:space="preserve">
          <source>An ImportMode controls the behavior of the Import method.</source>
          <target state="translated">Режим импорта контролирует поведение метода импорта.</target>
        </trans-unit>
        <trans-unit id="a4e20307642879f4fdb91b301c0d6f19a4723e93" translate="yes" xml:space="preserve">
          <source>An ImportSpec node represents a single package import.</source>
          <target state="translated">Узел ImportSpec представляет собой импорт одного пакета.</target>
        </trans-unit>
        <trans-unit id="ccedf83855a15222c8ed0224e1f53221340331a4" translate="yes" xml:space="preserve">
          <source>An Importer resolves import paths to Packages.</source>
          <target state="translated">Импортер решает пути импорта к пакетам.</target>
        </trans-unit>
        <trans-unit id="b2a2d275c65b3d0e5e8ceb4d48a4fa4fe4798662" translate="yes" xml:space="preserve">
          <source>An Importer resolves import paths to package Objects. The imports map records the packages already imported, indexed by package id (canonical import path). An Importer must determine the canonical import path and check the map to see if it is already present in the imports map. If so, the Importer can return the map entry. Otherwise, the Importer should load the package data for the given path into a new *Object (pkg), record pkg in the imports map, and then return pkg.</source>
          <target state="translated">Импортер решает пути импорта к пакету &quot;Объекты&quot;.Карта импорта записывает уже импортированные пакеты,проиндексированные по идентификатору пакета (канонический путь импорта).Импортер должен определить канонический путь импорта и проверить карту,чтобы убедиться,что она уже присутствует на карте импорта.Если это так,то импортер может вернуть запись карты.В противном случае,импортер должен загрузить данные пакета для данного пути в новый *Объект (pkg),записать pkg на карту импорта,а затем вернуть pkg.</target>
        </trans-unit>
        <trans-unit id="bb537684eda993b55ae12814f6e808e9b7a235b7" translate="yes" xml:space="preserve">
          <source>An ImporterFrom resolves import paths to packages; it supports vendoring per &lt;a href=&quot;https://golang.org/s/go15vendor&quot;&gt;https://golang.org/s/go15vendor&lt;/a&gt;. Use go/importer to obtain an ImporterFrom implementation.</source>
          <target state="translated">ImporterFrom разрешает пути импорта к пакетам; он поддерживает поставку по &lt;a href=&quot;https://golang.org/s/go15vendor&quot;&gt;https://golang.org/s/go15vendor&lt;/a&gt; . Используйте go / importer, чтобы получить реализацию ImporterFrom.</target>
        </trans-unit>
        <trans-unit id="931853ab43b1b36b6477762f5b19f92fa830addc" translate="yes" xml:space="preserve">
          <source>An IncDecStmt node represents an increment or decrement statement.</source>
          <target state="translated">Узел IncDecStmt представляет собой оператор инкремента или декремента.</target>
        </trans-unit>
        <trans-unit id="35521006ace24c0ca8c1e6cad86fda47cb06ccbf" translate="yes" xml:space="preserve">
          <source>An IndexExpr node represents an expression followed by an index.</source>
          <target state="translated">Узел IndexExpr представляет собой выражение,за которым следует индекс.</target>
        </trans-unit>
        <trans-unit id="57b3f9d24fd3aa52a3788875d37b03e4f951d8ca" translate="yes" xml:space="preserve">
          <source>An Initializer describes a package-level variable, or a list of variables in case of a multi-valued initialization expression, and the corresponding initialization expression.</source>
          <target state="translated">Инициализатор описывает переменную пакетного уровня,или список переменных в случае многозначного выражения инициализации,и соответствующее выражение инициализации.</target>
        </trans-unit>
        <trans-unit id="c2a741c70d22c89f47e118e4368257a7e0a43877" translate="yes" xml:space="preserve">
          <source>An InsecureAlgorithmError</source>
          <target state="translated">Небезопасный алгоритмОшибка</target>
        </trans-unit>
        <trans-unit id="027885a33bbe913fc2ba3f477aabca3489b887a5" translate="yes" xml:space="preserve">
          <source>An Inst is a single instruction in a regular expression program.</source>
          <target state="translated">Инсталляция-это одна инструкция в программе регулярных выражений.</target>
        </trans-unit>
        <trans-unit id="fbb1591cae4924ecbe2d034ef239f8d53abbc342" translate="yes" xml:space="preserve">
          <source>An InstOp is an instruction opcode.</source>
          <target state="translated">InstOp-это опкод инструкции.</target>
        </trans-unit>
        <trans-unit id="4c1f11a6f7984a33db3a30b990c76a548954c071" translate="yes" xml:space="preserve">
          <source>An Int represents a signed multi-precision integer. The zero value for an Int represents the value 0.</source>
          <target state="translated">Int представляет собой знаковое многоточное целое число.Нулевое значение для Int представляет собой значение 0.</target>
        </trans-unit>
        <trans-unit id="e81c158b5c560f087dc1cc6acd0467ac2c1656b5" translate="yes" xml:space="preserve">
          <source>An IntType represents a signed integer type.</source>
          <target state="translated">IntType представляет собой знаковый целочисленный тип.</target>
        </trans-unit>
        <trans-unit id="1a7d36f9197d92f53c3f8f9081d074e38f25eb00" translate="yes" xml:space="preserve">
          <source>An Interface represents an interface type.</source>
          <target state="translated">Интерфейс представляет собой тип интерфейса.</target>
        </trans-unit>
        <trans-unit id="eec19b90e5f6546bd2083657d09b42c2c1c31024" translate="yes" xml:space="preserve">
          <source>An InterfaceType node represents an interface type.</source>
          <target state="translated">Узел InterfaceType представляет собой тип интерфейса.</target>
        </trans-unit>
        <trans-unit id="576712f6b5e2f51d02da2f20787f20734e4aa8fb" translate="yes" xml:space="preserve">
          <source>An InternalError reports an error in the flate code itself.</source>
          <target state="translated">InternalError сообщает об ошибке в самом flate-коде.</target>
        </trans-unit>
        <trans-unit id="d632bf503e0a72f63034068d3a35848739d860dd" translate="yes" xml:space="preserve">
          <source>An InvalidUnmarshalError describes an invalid argument passed to Unmarshal. (The argument to Unmarshal must be a non-nil pointer.)</source>
          <target state="translated">НедействительныйUnmarshalError описывает недействительный аргумент,переданный в Unmarshal.(Аргумент,передаваемый в Unmarshal,должен быть нулевым указателем).</target>
        </trans-unit>
        <trans-unit id="355520c16460a4d672b0833e1be85108ccb16b48" translate="yes" xml:space="preserve">
          <source>An MX represents a single DNS MX record.</source>
          <target state="translated">MX представляет собой одну запись DNS MX.</target>
        </trans-unit>
        <trans-unit id="c7737461dc6a0486b2bcc5cd7ba812b4baec53c6" translate="yes" xml:space="preserve">
          <source>An NS represents a single DNS NS record.</source>
          <target state="translated">NS представляет собой единую DNS NS запись.</target>
        </trans-unit>
        <trans-unit id="fc31b1339a10ac6c5590f7699997d397c8058593" translate="yes" xml:space="preserve">
          <source>An Nlist32 is a Mach-O 32-bit symbol table entry.</source>
          <target state="translated">Nlist32-это 32-битная запись в таблице символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="ddae24f43b24e969e52011bccfbf41b821e176a8" translate="yes" xml:space="preserve">
          <source>An Nlist64 is a Mach-O 64-bit symbol table entry.</source>
          <target state="translated">Nlist64-это запись в таблице 64-битных символов Mach-O.</target>
        </trans-unit>
        <trans-unit id="5c07e8659a0b25b73eae3edf1d2bd807dad03f31" translate="yes" xml:space="preserve">
          <source>An Obj represents a collection of functions in a symbol table.</source>
          <target state="translated">Объект представляет собой набор функций в таблице символов.</target>
        </trans-unit>
        <trans-unit id="1805e3ce80f418cf89c636249f4d5a84033d5060" translate="yes" xml:space="preserve">
          <source>An Object describes a named language entity such as a package, constant, type, variable, function (incl. methods), or label.</source>
          <target state="translated">Объект описывает именованный языковой объект,такой как пакет,константа,тип,переменная,функция (включая методы)или метка.</target>
        </trans-unit>
        <trans-unit id="ebcf6a2cb490f823e627d6f4f840a47671387779" translate="yes" xml:space="preserve">
          <source>An Object describes a named language entity such as a package, constant, type, variable, function (incl. methods), or label. All objects implement the Object interface.</source>
          <target state="translated">Объект описывает именованный языковой объект,такой как пакет,константа,тип,переменная,функция (включая методы)или метка.Все объекты реализуют интерфейс Object.</target>
        </trans-unit>
        <trans-unit id="c2a6feda5d42e0f3ed1aa8a3be809a70c3599d2b" translate="yes" xml:space="preserve">
          <source>An ObjectIdentifier represents an ASN.1 OBJECT IDENTIFIER.</source>
          <target state="translated">ОбъектИдентификатор представляет собой ИДЕНТИФИРАТОР ОБЪЕКТА ASN.1.</target>
        </trans-unit>
        <trans-unit id="25a8b4525236ef00b360d07cb19827944df7a067" translate="yes" xml:space="preserve">
          <source>An Offset represents the location of an Entry within the DWARF info. (See Reader.Seek.)</source>
          <target state="translated">Смещение представляет собой местоположение записи в информации DWARF.(См.Reader.Seek.)</target>
        </trans-unit>
        <trans-unit id="ac3f6fd5c5f4020fe745e9df601334d103e434f6" translate="yes" xml:space="preserve">
          <source>An Op is a single regular expression operator.</source>
          <target state="translated">Оп-это один оператор регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="3435c4996265182d3875b687f770097274f33210" translate="yes" xml:space="preserve">
          <source>An OrExpr represents the expression X || Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0314a12979f35374da5a5f6df2c7d8b530e55186" translate="yes" xml:space="preserve">
          <source>An SRV represents a single DNS SRV record.</source>
          <target state="translated">SRV представляет собой одну SRV-запись DNS.</target>
        </trans-unit>
        <trans-unit id="2409c4611787fa12fc74e051bb517f08b144ce6f" translate="yes" xml:space="preserve">
          <source>An SelectStmt node represents a select statement.</source>
          <target state="translated">Узел SelectStmt представляет собой оператор выбора.</target>
        </trans-unit>
        <trans-unit id="41596e8b76edc639db644d1e3dc2c1dd81459d07" translate="yes" xml:space="preserve">
          <source>An SliceExpr node represents an expression followed by slice indices.</source>
          <target state="translated">Узел SliceExpr представляет собой выражение,за которым следуют индексы срезов.</target>
        </trans-unit>
        <trans-unit id="ed46c8e20af1ec33b3449cc621457b646d93171d" translate="yes" xml:space="preserve">
          <source>An TypeSwitchStmt node represents a type switch statement.</source>
          <target state="translated">Узел TypeSwitchStmt представляет собой операцию переключения типа.</target>
        </trans-unit>
        <trans-unit id="8e3ece4dfd5d5307131c8573c8e34ed46191a7bf" translate="yes" xml:space="preserve">
          <source>An UnmarshalError represents an error in the unmarshaling process.</source>
          <target state="translated">UnmarshalError представляет собой ошибку в процессе размагничивания.</target>
        </trans-unit>
        <trans-unit id="868232dcab51d8cfeb408a9b9149e92c12b71d90" translate="yes" xml:space="preserve">
          <source>An UnmarshalFieldError describes a JSON object key that led to an unexported (and therefore unwritable) struct field.</source>
          <target state="translated">UnmarshalFieldError описывает JSON-объектный ключ,который привел к неисследованному (и,следовательно,неписаному)полю структуры.</target>
        </trans-unit>
        <trans-unit id="737b56eeaf44e2dc73cc5f508d01fd01025fa4b2" translate="yes" xml:space="preserve">
          <source>An UnmarshalTypeError describes a JSON value that was not appropriate for a value of a specific Go type.</source>
          <target state="translated">UnmarshalTypeError описывает JSON-значение,которое не подходит для значения определенного типа Go.</target>
        </trans-unit>
        <trans-unit id="dbb12df0d8594699910ded263bdda73074faccc3" translate="yes" xml:space="preserve">
          <source>An UnspecifiedType represents an implicit, unknown, ambiguous or nonexistent type.</source>
          <target state="translated">UnspecifiedType представляет собой неявный,неизвестный,двусмысленный или несуществующий тип.</target>
        </trans-unit>
        <trans-unit id="127495d0dcb94690f6b42f4443962cedbb7bc317" translate="yes" xml:space="preserve">
          <source>An UnsupportedError reports that the input uses a valid but unimplemented JPEG feature.</source>
          <target state="translated">UnsupportedError сообщает,что на входе используется действительная,но не реализованная функция JPEG.</target>
        </trans-unit>
        <trans-unit id="b6cface443329dd52d1ffaa72664f6e7fd32f48b" translate="yes" xml:space="preserve">
          <source>An UnsupportedError reports that the input uses a valid but unimplemented PNG feature.</source>
          <target state="translated">UnsupportedError сообщает,что на входе используется действительная,но не реализованная функция PNG.</target>
        </trans-unit>
        <trans-unit id="50c033636c681ef23f5703353e7b6b548ee31e57" translate="yes" xml:space="preserve">
          <source>An UnsupportedType is a placeholder returned in situations where we encounter a type that isn't supported.</source>
          <target state="translated">UnsupportedType-это плейсхолдер,возвращаемый в ситуациях,когда мы сталкиваемся с типом,который не поддерживается.</target>
        </trans-unit>
        <trans-unit id="9f010dd73bd76eac970f2fad6de4d1d072e049eb" translate="yes" xml:space="preserve">
          <source>An UnsupportedTypeError is returned by Marshal when attempting to encode an unsupported value type.</source>
          <target state="translated">Ошибка UnsupportedTypeError возвращается маршалом при попытке кодирования неподдерживаемого типа значений.</target>
        </trans-unit>
        <trans-unit id="75d849048a92851acd93a76c3b75ed5d1649b641" translate="yes" xml:space="preserve">
          <source>An UnsupportedValueError is returned by Marshal when attempting to encode an unsupported value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cf6dbd651aa1fc24dab4ed83f94d2cc501a8bb" translate="yes" xml:space="preserve">
          <source>An alpha-premultiplied color component C has been scaled by alpha (A), so has valid values 0 &amp;lt;= C &amp;lt;= A.</source>
          <target state="translated">Предварительно умноженный на альфа-канал цветовой компонент C был масштабирован по альфа-каналу (A), поэтому имеет допустимые значения 0 &amp;lt;= C &amp;lt;= A.</target>
        </trans-unit>
        <trans-unit id="96f36f26c07cd97ba2148d75c909d9ff85455a78" translate="yes" xml:space="preserve">
          <source>An analogous set of functions scans formatted text to yield values. Scan, Scanf and Scanln read from os.Stdin; Fscan, Fscanf and Fscanln read from a specified io.Reader; Sscan, Sscanf and Sscanln read from an argument string.</source>
          <target state="translated">Аналогичный набор функций сканирует форматированный текст для получения значений.Сканировать,сканировать и сканировать из os.Stdin;Fscan,Fscanf и Fscanln читать из указанного io.Reader;Sscan,Sscanf и Sscanln читать из строки аргумента.</target>
        </trans-unit>
        <trans-unit id="dd590ec64bdbd07328cd1648202f3c4d0652fcaa" translate="yes" xml:space="preserve">
          <source>An appropriate use of a Pool is to manage a group of temporary items silently shared among and potentially reused by concurrent independent clients of a package. Pool provides a way to amortize allocation overhead across many clients.</source>
          <target state="translated">Правильным использованием пула является управление группой временных элементов,бесшумно разделяемых и потенциально повторно используемых параллельными независимыми клиентами пакета.Пул дает возможность амортизировать накладные расходы многих клиентов.</target>
        </trans-unit>
        <trans-unit id="e7a6c66066c63a7b13fb3633463450779dc83697" translate="yes" xml:space="preserve">
          <source>An argument is a simple value, denoted by one of the following.</source>
          <target state="translated">Аргумент представляет собой простое значение,обозначаемое одним из следующих.</target>
        </trans-unit>
        <trans-unit id="f9834be44e753f9b0833b74dd8442f2593d02903" translate="yes" xml:space="preserve">
          <source>An empty Dir is treated as &quot;.&quot;.</source>
          <target state="translated">Пустой Дир считается &quot;...&quot;.</target>
        </trans-unit>
        <trans-unit id="3c1d4dbd141f152659ded0ed62d6fc32f149bd0b" translate="yes" xml:space="preserve">
          <source>An empty method means &quot;GET&quot;.</source>
          <target state="translated">Пустой метод означает &quot;GET&quot;.</target>
        </trans-unit>
        <trans-unit id="cd4d28837904807a903cbe5476bdc10de0744eb7" translate="yes" xml:space="preserve">
          <source>An encoding is invalid if it is incorrect UTF-8, encodes a rune that is out of range, or is not the shortest possible UTF-8 encoding for the value. No other validation is performed.</source>
          <target state="translated">Кодировка недействительна,если это неправильная кодировка UTF-8,кодирует руну,которая находится вне диапазона,или не является самой короткой кодировкой UTF-8 для значения.Другая валидация не выполняется.</target>
        </trans-unit>
        <trans-unit id="97559fea881eb99df8b5b805bce6db58884baa12" translate="yes" xml:space="preserve">
          <source>An entry is a sequence of attribute/value pairs.</source>
          <target state="translated">Запись представляет собой последовательность пар атрибут/значение.</target>
        </trans-unit>
        <trans-unit id="70ec8bed891e692083a35e67a8a08047708ac061" translate="yes" xml:space="preserve">
          <source>An error is considered to match a target if it is equal to that target or if it implements a method Is(error) bool such that Is(target) returns true.</source>
          <target state="translated">Ошибка считается равной цели,если она равна этой цели или если она реализует метод Is(error)bool таким образом,что Is(target)возвращает true.</target>
        </trans-unit>
        <trans-unit id="b1a208abffd28eb07ba78aa217f3028c63ddac28" translate="yes" xml:space="preserve">
          <source>An error is returned if caused by client policy (such as CheckRedirect), or failure to speak HTTP (such as a network connectivity problem). A non-2xx status code doesn't cause an error.</source>
          <target state="translated">Ошибка возвращается,если она вызвана политикой клиента (например,CheckRedirect),или неспособностью говорить по HTTP (например,проблема сетевого подключения).Код статуса,отличный от 2xx,не вызывает ошибки.</target>
        </trans-unit>
        <trans-unit id="486bd0cc019a78e61c1e7988575a296022dde327" translate="yes" xml:space="preserve">
          <source>An error is returned if pos is not within the package or if the node cannot be type-checked.</source>
          <target state="translated">Ошибка возвращается,если pos отсутствует в пакете или узел не может быть проверен на тип.</target>
        </trans-unit>
        <trans-unit id="33f2fbaf6070ae69f9aa39421d7912bcc2d2cb21" translate="yes" xml:space="preserve">
          <source>An error is returned if the Client's CheckRedirect function fails or if there was an HTTP protocol error. A non-2xx response doesn't cause an error. Any returned error will be of type *url.Error. The url.Error value's Timeout method will report true if request timed out or was canceled.</source>
          <target state="translated">Ошибка возвращается в случае отказа функции CheckRedirect клиента или ошибки протокола HTTP.Ответ не-2xx не приводит к ошибке.Любая возвращаемая ошибка будет иметь тип *url.Error.Метод таймаута значения url.Error будет равен true,если запрос был выполнен по таймауту или отменен.</target>
        </trans-unit>
        <trans-unit id="8cab24d7dd180e630e383d3bc3b4d99cb0d500f5" translate="yes" xml:space="preserve">
          <source>An error is returned if the Client's CheckRedirect function fails or if there was an HTTP protocol error. A non-2xx response doesn't cause an error. Any returned error will be of type *url.Error. The url.Error value's Timeout method will report true if the request timed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29559e83fd57f697a87f8f6c23a1408199321367" translate="yes" xml:space="preserve">
          <source>An error is returned if there were too many redirects or if there was an HTTP protocol error. A non-2xx response doesn't cause an error. Any returned error will be of type *url.Error. The url.Error value's Timeout method will report true if request timed out or was canceled.</source>
          <target state="translated">Ошибка возвращается,если было слишком много переадресаций или если произошла ошибка протокола HTTP.Ответ без 2xx не приводит к ошибке.Любая возвращаемая ошибка будет иметь тип *url.Error.Метод таймаута значения url.Error будет равен true,если запрос был выполнен по таймауту или отменен.</target>
        </trans-unit>
        <trans-unit id="ca4e973640c5414c2d9178d60dc8605a5b8a5d60" translate="yes" xml:space="preserve">
          <source>An error matches target if the error's concrete value is assignable to the value pointed to by target, or if the error has a method As(interface{}) bool such that As(target) returns true. In the latter case, the As method is responsible for setting target.</source>
          <target state="translated">Ошибка соответствует цели,если конкретному значению ошибки присваивается значение,на которое указывает цель,или если ошибка имеет метод As(interface{})bool,который возвращает значение As(target)true.В последнем случае метод As отвечает за установку цели.</target>
        </trans-unit>
        <trans-unit id="2ec1daa84976e0d0488f1ebd412c66b0f689386a" translate="yes" xml:space="preserve">
          <source>An error returned after a timeout fails will implement the Timeout method, and calling the Timeout method will return true. The PathError and SyscallError types implement the Timeout method. In general, call IsTimeout to test whether an error indicates a timeout.</source>
          <target state="translated">Ошибка,возвращаемая после неудачи таймаута,реализует метод Timeout,а вызов метода Timeout возвращает true.Типы PathError и SyscallError реализуют метод Timeout.В общем случае,вызов IsTimeout позволяет проверить,указывает ли ошибка на таймаут.</target>
        </trans-unit>
        <trans-unit id="120954aaeca348b08f2969c8dd12029b889adaa3" translate="yes" xml:space="preserve">
          <source>An error type might provide an As method so it can be treated as if it were a different error type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edf4a4ecd5ec433bc33357047be9b6d01283f4c" translate="yes" xml:space="preserve">
          <source>An error type might provide an Is method so it can be treated as equivalent to an existing error. For example, if MyError defines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b785d2e40c6b05c4a7dedaf9a7985d62dd9c0c" translate="yes" xml:space="preserve">
          <source>An example of good use of a Pool is in the fmt package, which maintains a dynamically-sized store of temporary output buffers. The store scales under load (when many goroutines are actively printing) and shrinks when quiescent.</source>
          <target state="translated">Примером хорошего использования пула является пакет fmt,который поддерживает динамический размер хранилища временных выходных буферов.Хранилище масштабируется под нагрузкой (когда многие гориллы активно печатают)и сжимается в состоянии покоя.</target>
        </trans-unit>
        <trans-unit id="5d1ac1bff5d82335919eca7792226149f6974601" translate="yes" xml:space="preserve">
          <source>An expectCode &amp;lt;= 0 disables the check of the status code.</source>
          <target state="translated">ExpectCode &amp;lt;= 0 отключает проверку кода состояния.</target>
        </trans-unit>
        <trans-unit id="b885b02299d18da02728c260e15d739888aa2a45" translate="yes" xml:space="preserve">
          <source>An idle timeout can be implemented by repeatedly extending the deadline after successful Read or Write calls.</source>
          <target state="translated">Таймаут простоя может быть реализован путем многократного продления срока после успешных вызовов чтения или записи.</target>
        </trans-unit>
        <trans-unit id="1cbbc2ec490246526ad100a2c6324a053f0978c8" translate="yes" xml:space="preserve">
          <source>An implementation of Interface can be sorted by the routines in this package. The methods refer to elements of the underlying collection by integer index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30b3b786ad798c3290738b4c4b125b52d06a251" translate="yes" xml:space="preserve">
          <source>An implementation that always returns &quot;&quot; is valid and may be useful for testing but it is not secure: it means that the HTTP server for foo.com can set a cookie for bar.com.</source>
          <target state="translated">Реализация,которая всегда возвращает &quot;&quot; является действительной и может быть полезна для тестирования,но она не является безопасной:это означает,что HTTP-сервер для foo.com может установить cookie для bar.com.</target>
        </trans-unit>
        <trans-unit id="47c9f3a025dffe9123fd4bfd7373fe411e63cc3f" translate="yes" xml:space="preserve">
          <source>An internal function but exported because it is cross-package; part of the implementation of the &quot;go test&quot; command.</source>
          <target state="translated">Внутренняя функция,но экспортируется,так как является кросс-пакетом;часть реализации команды &quot;go test&quot;.</target>
        </trans-unit>
        <trans-unit id="036afd05688102f6ee86356229e3c79c56ec575a" translate="yes" xml:space="preserve">
          <source>An internal type but exported because it is cross-package; part of the implementation of the &quot;go test&quot; command.</source>
          <target state="translated">Внутренний тип,но экспортируется,так как является кросс-пакетом;часть реализации команды &quot;go test&quot;.</target>
        </trans-unit>
        <trans-unit id="442649c59c72ffcf9dd32a6c63fcf97e0bbbf3e5" translate="yes" xml:space="preserve">
          <source>An unsigned integer is sent one of two ways. If it is less than 128, it is sent as a byte with that value. Otherwise it is sent as a minimal-length big-endian (high byte first) byte stream holding the value, preceded by one byte holding the byte count, negated. Thus 0 is transmitted as (00), 7 is transmitted as (07) and 256 is transmitted as (FE 01 00).</source>
          <target state="translated">Беззнаковое целое число посылается одним из двух способов.Если оно меньше 128,оно посылается в виде байта с этим значением.В противном случае оно посылается в виде потока байт минимальной длины big-endian (старший байт первым)со значением,которому предшествует один байт со значением счетчика байтов,отрицательный.Таким образом,0 передается как (00),7 передается как (07)и 256 передается как (FE 01 00).</target>
        </trans-unit>
        <trans-unit id="7a76817319296468bf39d1d78d770edaaa1f1d0b" translate="yes" xml:space="preserve">
          <source>And sets z = x &amp;amp; y and returns z.</source>
          <target state="translated">И устанавливает z = x &amp;amp; y и возвращает z.</target>
        </trans-unit>
        <trans-unit id="4fe7a64501f902a2a15dc8d7ef88b7a3c8758b53" translate="yes" xml:space="preserve">
          <source>AndNot sets z = x &amp;amp;^ y and returns z.</source>
          <target state="translated">AndNot устанавливает z = x &amp;amp; ^ y и возвращает z.</target>
        </trans-unit>
        <trans-unit id="104eadd84d40efc537cbdaed98695f14d3c410ae" translate="yes" xml:space="preserve">
          <source>Anonymous reports whether the variable is an embedded field. Same as Embedded; only present for backward-compatibility.</source>
          <target state="translated">Анонимный сообщает,является ли переменная встроенным полем.То же,что и Embedded;присутствует только для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="b34123eb0681a84b4e38ef46e880e0d9d4e93ff2" translate="yes" xml:space="preserve">
          <source>Anonymous struct fields are usually marshaled as if their inner exported fields were fields in the outer struct, subject to the usual Go visibility rules amended as described in the next paragraph. An anonymous struct field with a name given in its JSON tag is treated as having that name, rather than being anonymous. An anonymous struct field of interface type is treated the same as having that type as its name, rather than being anonymous.</source>
          <target state="translated">Анонимные поля структуры обычно маршируются так,как если бы их внутренние экспортируемые поля были полями во внешней структуре,с учетом обычных правил видимости Go,измененных,как описано в следующем параграфе.Анонимное структурное поле с именем,указанным в его JSON-теге,рассматривается как имеющее такое имя,а не как анонимное.Поле анонимного структурного типа интерфейса рассматривается как имеющее такое же имя,как и его название,а не как анонимное.</target>
        </trans-unit>
        <trans-unit id="afb9e365ac6bc69254b413683db8417c15044c6f" translate="yes" xml:space="preserve">
          <source>Any item stored in the Pool may be removed automatically at any time without notification. If the Pool holds the only reference when this happens, the item might be deallocated.</source>
          <target state="translated">Любой элемент,хранящийся в Пуле,может быть автоматически удален в любое время без уведомления.Если в Пуле хранится единственная ссылка на этот пункт,он может быть удален.</target>
        </trans-unit>
        <trans-unit id="a6b643cc8e0850db50e55740276d22f185017d81" translate="yes" xml:space="preserve">
          <source>Any mutations to the returned pool are not written to disk and do not affect any other pool returned by SystemCertPool.</source>
          <target state="translated">Любые мутации в возвращаемом пуле не записываются на диск и не влияют на любой другой пул,возвращаемый SystemCertPool.</target>
        </trans-unit>
        <trans-unit id="224f9d3dc95f39b31b4695465f7bb92d23f66b43" translate="yes" xml:space="preserve">
          <source>Any of the above ASN.1 values can be written to an interface{}. The value stored in the interface has the corresponding Go type. For integers, that type is int64.</source>
          <target state="translated">Любое из вышеперечисленных значений ASN.1 может быть записано в интерфейс{}.Значение,сохраненное в интерфейсе,имеет соответствующий тип Go.Для целых чисел это тип int64.</target>
        </trans-unit>
        <trans-unit id="791f38485d078e4250fe65d69d579ce6058e5ed8" translate="yes" xml:space="preserve">
          <source>Any returned error will be of type *url.Error. The url.Error value's Timeout method will report true if request timed out or was canceled.</source>
          <target state="translated">Любая возвращаемая ошибка будет иметь тип *url.Error.Метод таймаута значения url.Error будет равен true,если запрос был выполнен по таймауту или отменен.</target>
        </trans-unit>
        <trans-unit id="12810041e8799641fa0564b3d08f00a640e526e5" translate="yes" xml:space="preserve">
          <source>Append appends the string representation of x, as generated by x.Text(base), to buf and returns the extended buffer.</source>
          <target state="translated">Добавляет к buf строковое представление x,сгенерированное x.Text(base),и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="991b56073f752ea70afd5d3245c19ae4ca5aea47" translate="yes" xml:space="preserve">
          <source>Append appends the values x to a slice s and returns the resulting slice. As in Go, each x's value must be assignable to the slice's element type.</source>
          <target state="translated">Приложение добавляет значения x к кусочку s и возвращает полученный кусочек.Как и в Go,каждое значение x должно быть присвоено типу элемента среза.</target>
        </trans-unit>
        <trans-unit id="8a6738f1f149fb1b688951727ba8a4eb62d6e849" translate="yes" xml:space="preserve">
          <source>Append appends to buf the string form of the floating-point number x, as generated by x.Text, and returns the extended buffer.</source>
          <target state="translated">В приложение buf добавляется строковая форма числа x с плавающей точкой,генерируемого x.Text,и возвращается расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="dc7406a7e262f6f8144c95e8a9ab9e772e4587d4" translate="yes" xml:space="preserve">
          <source>AppendBool</source>
          <target state="translated">AppendBool</target>
        </trans-unit>
        <trans-unit id="8e6c1bde028847a8f50865559cf63e4d8dcb8db9" translate="yes" xml:space="preserve">
          <source>AppendBool appends &quot;true&quot; or &quot;false&quot;, according to the value of b, to dst and returns the extended buffer.</source>
          <target state="translated">AppendBool добавляет &quot;true&quot; или &quot;false&quot;,в соответствии со значением b,в dst и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="014e6c46b60f6356c8ae4eb44946bcc39c683ed5" translate="yes" xml:space="preserve">
          <source>AppendBool, AppendFloat, AppendInt, and AppendUint are similar but append the formatted value to a destination slice.</source>
          <target state="translated">AppendBool,AppendFloat,AppendInt и AppendUint похожи,но добавляют отформатированное значение к целевому срезу.</target>
        </trans-unit>
        <trans-unit id="cbf71c71617cb5b06bbe72a027a40a50e99d7ac7" translate="yes" xml:space="preserve">
          <source>AppendCertsFromPEM attempts to parse a series of PEM encoded certificates. It appends any certificates found to s and reports whether any certificates were successfully parsed.</source>
          <target state="translated">AppendCertsFromPEM пытается разобрать серию зашифрованных сертификатов PEM.Он добавляет любые найденные сертификаты к s и сообщает об успешном разборе сертификатов.</target>
        </trans-unit>
        <trans-unit id="ef209b42fc5cf6c80a711f0e8fdac2c151f89421" translate="yes" xml:space="preserve">
          <source>AppendFloat</source>
          <target state="translated">AppendFloat</target>
        </trans-unit>
        <trans-unit id="1e82a7a839e480035dfa637aa1bc5055d24e100b" translate="yes" xml:space="preserve">
          <source>AppendFloat appends the string form of the floating-point number f, as generated by FormatFloat, to dst and returns the extended buffer.</source>
          <target state="translated">AppendFloat добавляет в dst строковую форму числа с плавающей точкой f,генерируемого FormatFloat,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="b06ef363cdc72d800a1b0e2f4d789a51ed28e9cc" translate="yes" xml:space="preserve">
          <source>AppendFormat is like Format but appends the textual representation to b and returns the extended buffer.</source>
          <target state="translated">AppendFormat похож на Format,но добавляет текстовое представление к b и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="fa7c3675c344d224694cdd3e00f46904a1a198c2" translate="yes" xml:space="preserve">
          <source>AppendInt</source>
          <target state="translated">AppendInt</target>
        </trans-unit>
        <trans-unit id="d2b187db6c308fc1702924e2f1e633509db15a41" translate="yes" xml:space="preserve">
          <source>AppendInt appends the string form of the integer i, as generated by FormatInt, to dst and returns the extended buffer.</source>
          <target state="translated">AppendInt добавляет к dst строковую форму целого числа i,генерируемого FormatInt,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="1ec9b89a50366169935f696b1a52bab9ad93ce11" translate="yes" xml:space="preserve">
          <source>AppendQuote</source>
          <target state="translated">AppendQuote</target>
        </trans-unit>
        <trans-unit id="cf8e7dfc01c8eb2ae61af0decdd8abe4db2493e3" translate="yes" xml:space="preserve">
          <source>AppendQuote appends a double-quoted Go string literal representing s, as generated by Quote, to dst and returns the extended buffer.</source>
          <target state="translated">AppendQuote добавляет в dst строковый литерал Go в двойных кавычках,представляющий собой s,генерируемый Quote,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="aac9680f9b8d54a2e691b9fc4814576b43aa1597" translate="yes" xml:space="preserve">
          <source>AppendQuoteRune</source>
          <target state="translated">AppendQuoteRune</target>
        </trans-unit>
        <trans-unit id="4affe2726aa0af79866bcac727b0aa02165283e7" translate="yes" xml:space="preserve">
          <source>AppendQuoteRune appends a single-quoted Go character literal representing the rune, as generated by QuoteRune, to dst and returns the extended buffer.</source>
          <target state="translated">AppendQuoteRune добавляет в dst одноцифровой символ Go,представляющий руну,сгенерированную QuoteRune,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="5cc72aa0b6d1a3e6331f053030965add24d59d99" translate="yes" xml:space="preserve">
          <source>AppendQuoteRuneToASCII</source>
          <target state="translated">AppendQuoteRuneToASCII</target>
        </trans-unit>
        <trans-unit id="d3afb68811f96e790a1e9d00f7edaa6a56c7ecf3" translate="yes" xml:space="preserve">
          <source>AppendQuoteRuneToASCII appends a single-quoted Go character literal representing the rune, as generated by QuoteRuneToASCII, to dst and returns the extended buffer.</source>
          <target state="translated">AppendQuoteRuneToASCII добавляет в dst одноцифровой буквенный символ Go,представляющий руну,сгенерированную QuoteRuneToASCII,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="63575dcb5767538ce900b5ecffc6e375340ae2db" translate="yes" xml:space="preserve">
          <source>AppendQuoteRuneToGraphic appends a single-quoted Go character literal representing the rune, as generated by QuoteRuneToGraphic, to dst and returns the extended buffer.</source>
          <target state="translated">AppendQuoteRuneToGraphic добавляет в dst одноцифровой буквенный символ Go,представляющий руну,сгенерированную QuoteRuneToGraphic,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="e4edf5c0ada10bc45e0e1cd667a7f4ca233f2d8a" translate="yes" xml:space="preserve">
          <source>AppendQuoteToASCII</source>
          <target state="translated">AppendQuoteToASCII</target>
        </trans-unit>
        <trans-unit id="4af83e8c6f92cae36f17c055e1dad65cafe24a88" translate="yes" xml:space="preserve">
          <source>AppendQuoteToASCII appends a double-quoted Go string literal representing s, as generated by QuoteToASCII, to dst and returns the extended buffer.</source>
          <target state="translated">AppendQuoteToASCII добавляет к dst двойные кавычки строкового литерала Go,представляющего s,генерируемого QuoteToASCII,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="0614344e66308abc1fa3774e3b165f0a5a6ba86e" translate="yes" xml:space="preserve">
          <source>AppendQuoteToGraphic appends a double-quoted Go string literal representing s, as generated by QuoteToGraphic, to dst and returns the extended buffer.</source>
          <target state="translated">AppendQuoteToGraphic добавляет в dst двойные кавычки строковый литерал Go,представляющий s,генерируемый QuoteToGraphic,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="4293b6e547f1114c134ce72872c3d683ab6de3b4" translate="yes" xml:space="preserve">
          <source>AppendSlice appends a slice t to a slice s and returns the resulting slice. The slices s and t must have the same element type.</source>
          <target state="translated">AppendSlice добавляет фрагмент t к фрагменту s и возвращает полученный фрагмент.Фрагменты s и t должны иметь один и тот же тип элемента.</target>
        </trans-unit>
        <trans-unit id="b94bccf4bd646055e30b89dcc1a6bb69c63264a1" translate="yes" xml:space="preserve">
          <source>AppendUint</source>
          <target state="translated">AppendUint</target>
        </trans-unit>
        <trans-unit id="1a848ce1ccb2943fb03b2a97a183e1e001204d7f" translate="yes" xml:space="preserve">
          <source>AppendUint appends the string form of the unsigned integer i, as generated by FormatUint, to dst and returns the extended buffer.</source>
          <target state="translated">AppendUint добавляет к dst строковую форму беззнакового целого i,генерируемого FormatUint,и возвращает расширенный буфер.</target>
        </trans-unit>
        <trans-unit id="5ceb03c6f5e7370ed7befcfaa3e743fb64b5ef4c" translate="yes" xml:space="preserve">
          <source>ArbitraryType is here for the purposes of documentation only and is not actually part of the unsafe package. It represents the type of an arbitrary Go expression.</source>
          <target state="translated">Произвольный тип приведен здесь только для документации и на самом деле не является частью небезопасного пакета.Он представляет собой тип произвольного выражения Go.</target>
        </trans-unit>
        <trans-unit id="5f584feba6cf3361b02c7c81dcebd1e32a75415e" translate="yes" xml:space="preserve">
          <source>ArchChar returns &quot;?&quot; and an error. In earlier versions of Go, the returned string was used to derive the compiler and linker tool names, the default object file suffix, and the default linker output name. As of Go 1.5, those strings no longer vary by architecture; they are compile, link, .o, and a.out, respectively.</source>
          <target state="translated">ArchChar возвращает &quot;?&quot; и ошибку.В более ранних версиях Go возвращаемая строка использовалась для получения имен компилятора и компоновщика,суффикса объектного файла по умолчанию и выходного имени компоновщика по умолчанию.Начиная с версии Go 1.5,эти строки больше не меняются в зависимости от архитектуры;это компиляция,компоновка,.o и a.out соответственно.</target>
        </trans-unit>
        <trans-unit id="7fd33dbad703e2baacd65220f1dee6594a39c3e1" translate="yes" xml:space="preserve">
          <source>Arg returns the i'th argument. Arg(0) is the first remaining argument after flags have been processed. Arg returns an empty string if the requested element does not exist.</source>
          <target state="translated">Арг возвращает аргумент.Arg(0)является первым оставшимся аргументом после обработки флагов.Аргумент возвращает пустую строку,если запрашиваемый элемент не существует.</target>
        </trans-unit>
        <trans-unit id="6e87e53727801bfc878272fae45c5972e2148db1" translate="yes" xml:space="preserve">
          <source>Arg returns the i'th command-line argument. Arg(0) is the first remaining argument after flags have been processed. Arg returns an empty string if the requested element does not exist.</source>
          <target state="translated">Арг возвращает аргумент командной строки.Arg(0)является первым оставшимся аргументом после обработки флагов.Аргумент возвращает пустую строку,если запрашиваемый элемент не существует.</target>
        </trans-unit>
        <trans-unit id="f057c07f8a3d2900b501ed0ba97a2c798c10c131" translate="yes" xml:space="preserve">
          <source>Args hold the command-line arguments, starting with the program name.</source>
          <target state="translated">Арги содержат аргументы командной строки,начинающиеся с имени программы.</target>
        </trans-unit>
        <trans-unit id="5d6577266006e170c0a00f0095a742e5ff6a8b83" translate="yes" xml:space="preserve">
          <source>Args returns the non-flag arguments.</source>
          <target state="translated">Арги возвращают не флаговые аргументы.</target>
        </trans-unit>
        <trans-unit id="0d50601b6e19d9bb6ca5607eb536c9755a196001" translate="yes" xml:space="preserve">
          <source>Args returns the non-flag command-line arguments.</source>
          <target state="translated">Арги возвращают не флаг аргументы командной строки.</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="dcac9467b61958dfc8fb2a284d9809101d3387e5" translate="yes" xml:space="preserve">
          <source>Arguments may evaluate to any type; if they are pointers the implementation automatically indirects to the base type when required. If an evaluation yields a function value, such as a function-valued field of a struct, the function is not invoked automatically, but it can be used as a truth value for an if action and the like. To invoke it, use the call function, defined below.</source>
          <target state="translated">Аргументы могут вычисляться к любому типу;если они являются указателями,то при необходимости реализация автоматически направляется к базовому типу.Если оценка дает значение функции,например,поле функции в структуре,то функция не вызывается автоматически,но может быть использована в качестве значения истины для действия if и тому подобное.Чтобы вызвать ее,используйте функцию вызова,описанную ниже.</target>
        </trans-unit>
        <trans-unit id="03cb1ef1a4caa26d25a6105558ad623367ea6a38" translate="yes" xml:space="preserve">
          <source>Arithmetic expressions are typically written as a sequence of individual method calls, with each call corresponding to an operation. The receiver denotes the result and the method arguments are the operation's operands. For instance, given three *Int values a, b and c, the invocation</source>
          <target state="translated">Арифметические выражения,как правило,записываются как последовательность отдельных вызовов методов,при этом каждый вызов соответствует операции.Приемник обозначает результат,а аргументами метода являются операнды операции.Например,при наличии трех *Int значений a,b и c,вызов</target>
        </trans-unit>
        <trans-unit id="918a4da47d7ebb48a08cab34e3e485f64e61c032" translate="yes" xml:space="preserve">
          <source>Array and slice values encode as JSON arrays, except that []byte encodes as a base64-encoded string, and a nil slice encodes as the null JSON value.</source>
          <target state="translated">Значения массива и среза кодируются как JSON-массивы,за исключением того,что []байт кодируется как строка,закодированная в base64,а нулевой срез кодируется как нулевое JSON-значение.</target>
        </trans-unit>
        <trans-unit id="a680524eecee442cefa352a7c38f566b7e119c31" translate="yes" xml:space="preserve">
          <source>Array values are deeply equal when their corresponding elements are deeply equal.</source>
          <target state="translated">Значения массивов глубоко равны,когда соответствующие им элементы глубоко равны.</target>
        </trans-unit>
        <trans-unit id="66b6d7c835c7970d9fefaada6f3b7756c4c96afd" translate="yes" xml:space="preserve">
          <source>ArrayOf returns the array type with the given count and element type. For example, if t represents int, ArrayOf(5, t) represents [5]int.</source>
          <target state="translated">ArrayOf возвращает тип массива с заданным количеством и типом элемента.Например,если t представляет int,ArrayOf(5,t)представляет [5]int.</target>
        </trans-unit>
        <trans-unit id="9d31985fda87b26d6554bcfbfe7dbc398b51917e" translate="yes" xml:space="preserve">
          <source>As</source>
          <target state="translated">As</target>
        </trans-unit>
        <trans-unit id="77b9a4ab5fb6f3aa2a4543e5c9523108a1e28b09" translate="yes" xml:space="preserve">
          <source>As DeepEqual traverses the data values it may find a cycle. The second and subsequent times that DeepEqual compares two pointer values that have been compared before, it treats the values as equal rather than examining the values to which they point. This ensures that DeepEqual terminates.</source>
          <target state="translated">По мере того,как DeepEqual обходит значения данных,он может найти цикл.Второй и последующий раз,когда DeepEqual сравнивает два значения указателей,которые были сравнены ранее,он рассматривает значения как равные,вместо того,чтобы рассматривать значения,на которые они указывают.Это гарантирует,что DeepEqual завершит цикл.</target>
        </trans-unit>
        <trans-unit id="1f89b3dd3c1c69217bf124fbccf0c5ae01c49e89" translate="yes" xml:space="preserve">
          <source>As Read calls Handshake, in order to prevent indefinite blocking a deadline must be set for both Read and Write before Read is called when the handshake has not yet completed. See SetDeadline, SetReadDeadline, and SetWriteDeadline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb0e5186639b7cb78f58eac8356f997ba8e37ce" translate="yes" xml:space="preserve">
          <source>As Write calls Handshake, in order to prevent indefinite blocking a deadline must be set for both Read and Write before Write is called when the handshake has not yet completed. See SetDeadline, SetReadDeadline, and SetWriteDeadline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7ffd2e67a06f0d880944cd2d92620233b1c05a" translate="yes" xml:space="preserve">
          <source>As a consequence, if one wrapped function blocks, JavaScript's event loop is blocked until that function returns. Hence, calling any async JavaScript API, which requires the event loop, like fetch (http.Client), will cause an immediate deadlock. Therefore a blocking function should explicitly start a new goroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b56f8d462bf82502c735c3c1eade6e22b30a7c4" translate="yes" xml:space="preserve">
          <source>As a more whimsical example, this program guesses your number:</source>
          <target state="translated">В качестве более причудливого примера,эта программа угадывает ваш номер:</target>
        </trans-unit>
        <trans-unit id="bff88475604e0dd205ad66a54a59842b94885110" translate="yes" xml:space="preserve">
          <source>As a precaution, ServeFile will reject requests where r.URL.Path contains a &quot;..&quot; path element; this protects against callers who might unsafely use filepath.Join on r.URL.Path without sanitizing it and then use that filepath.Join result as the name argument.</source>
          <target state="translated">В качестве меры предосторожности ServeFile будет отклонять запросы,где r.URL.Path содержит элемент &quot;...&quot; пути;это защищает от вызывающих абонентов,которые могут небезопасно использовать filepath.Join на r.URL.Path,не дезинфицируя его,а затем использовать результат filepath.Join в качестве аргумента имени.</target>
        </trans-unit>
        <trans-unit id="77472da4c838d9f4435720e43e4f65598662d3e5" translate="yes" xml:space="preserve">
          <source>As a special case, attributes with the namespace &quot;xmlns&quot; are always treated as containing URLs. Given the excerpts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39e7711059649948e083fed172dc43cfc73eaaf" translate="yes" xml:space="preserve">
          <source>As a special case, if req.URL.Host is &quot;localhost&quot; (with or without a port number), then a nil URL and nil error will be returned.</source>
          <target state="translated">В особом случае,если req.URL.Host является &quot;локальным хостом&quot; (с номером порта или без него),то будет возвращен нулевой URL и нулевая ошибка.</target>
        </trans-unit>
        <trans-unit id="0a9520700e06b3fd7ed2d281b4e5489b3a38746f" translate="yes" xml:space="preserve">
          <source>As a special case, if the &quot;Content-Transfer-Encoding&quot; header has a value of &quot;quoted-printable&quot;, that header is instead hidden and the body is transparently decoded during Read calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae690189964440e45359a1c6c51db6559b11980b" translate="yes" xml:space="preserve">
          <source>As a special case, if the field tag is &quot;-&quot;, the field is always omitted. Note that a field with name &quot;-&quot; can still be generated using the tag &quot;-,&quot;.</source>
          <target state="translated">В особом случае,если тег поля-&quot;-&quot;,поле всегда опускается.Обратите внимание,что поле с именем &quot;-&quot; все равно может быть сгенерировано с помощью тега &quot;-,&quot;.</target>
        </trans-unit>
        <trans-unit id="e60c59152c193360fae3f60276c9948866292a43" translate="yes" xml:space="preserve">
          <source>As a special case, it is legal to append a string to a byte slice, like this:</source>
          <target state="translated">В качестве особого случая,легально добавлять строку к кусочку байта,вот так:</target>
        </trans-unit>
        <trans-unit id="564379e4b2f47f0c0856088856fe399c4a7ce7d9" translate="yes" xml:space="preserve">
          <source>As a special case, src can have kind String if the element type of dst is kind Uint8.</source>
          <target state="translated">В особом случае,src может иметь тип kind String,если типом элемента dst является тип Uint8.</target>
        </trans-unit>
        <trans-unit id="f8c66ee4ab43b3719db19be5d1e8b263afc3c332" translate="yes" xml:space="preserve">
          <source>As a special case, the returned file server redirects any request ending in &quot;/index.html&quot; to the same path, without the final &quot;index.html&quot;.</source>
          <target state="translated">В особом случае,возвращаемый файловый сервер перенаправляет любой запрос,заканчивающийся на &quot;/index.html&quot;,по тому же самому пути,без конечного &quot;index.html&quot;.</target>
        </trans-unit>
        <trans-unit id="d8d2a65426f019571cda2e844f72a95605d9994a" translate="yes" xml:space="preserve">
          <source>As an alternative, see the f.SyscallConn method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cd9de94cfb605c56ea7c7a305ef94aa8e800ad" translate="yes" xml:space="preserve">
          <source>As another special case, ServeFile redirects any request where r.URL.Path ends in &quot;/index.html&quot; to the same path, without the final &quot;index.html&quot;. To avoid such redirects either modify the path or use ServeContent.</source>
          <target state="translated">В качестве еще одного особого случая,ServeFile перенаправляет любой запрос,где r.URL.Path заканчивается на &quot;/index.html&quot;,на тот же самый путь,без конечного &quot;index.html&quot;.Чтобы избежать таких переадресаций либо измените путь,либо используйте ServeContent.</target>
        </trans-unit>
        <trans-unit id="c22915584feea30271ccd5462bc99d8717677963" translate="yes" xml:space="preserve">
          <source>As finds the first error in err's chain that matches target, and if so, sets target to that error value and returns true.</source>
          <target state="translated">As находит первую ошибку в цепочке ошибок,которая совпадает с целевой,и если да,то устанавливает целевое значение этой ошибки и возвращает true.</target>
        </trans-unit>
        <trans-unit id="9f452521f0cfeaaa41704e22fd9e578445134242" translate="yes" xml:space="preserve">
          <source>As finds the first error in err's chain that matches target, and if so, sets target to that error value and returns true. Otherwise, it returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc527904b5762369a3f475f72b0dc996cabb70c" translate="yes" xml:space="preserve">
          <source>As in the cases above, it is invalid to store the result before the conversion:</source>
          <target state="translated">Как и в вышеприведенных случаях,сохранение результата до конвертации является недействительным:</target>
        </trans-unit>
        <trans-unit id="aaf43f02c8be260818b1d2cfc8d762dc44ca7c4c" translate="yes" xml:space="preserve">
          <source>As in the previous case, the reflect data structures SliceHeader and StringHeader declare the field Data as a uintptr to keep callers from changing the result to an arbitrary type without first importing &quot;unsafe&quot;. However, this means that SliceHeader and StringHeader are only valid when interpreting the content of an actual slice or string value.</source>
          <target state="translated">Как и в предыдущем случае,отражающие структуры данных SliceHeader и StringHeader декларируют поле Data как uintptr,чтобы удержать звонящих от изменения результата на произвольный тип без предварительного импорта &quot;небезопасного&quot;.Однако это означает,что SliceHeader и StringHeader действительны только при интерпретации содержимого действительного значения среза или строки.</target>
        </trans-unit>
        <trans-unit id="0814383f282cf297a3420c416669326d1d7c0318" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, metric keys are strings. Their format is simple and well-defined, designed to be both human and machine readable. It is split into two components, separated by a colon: a rooted path and a unit. The choice to include the unit in the key is motivated by compatibility: if a metric's unit changes, its semantics likely did also, and a new key should be introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef34955be134b88be5b2311769c11e8da724a8b" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, os.ReadDir is a more efficient and correct choice: it returns a list of fs.DirEntry instead of fs.FileInfo, and it returns partial results in the case of an error midway through reading a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfb05f35681fe94b04d0227b64e7fe4bdc2daab" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, the same functionality is now provided by package io or package os, and those implementations should be preferred in new code. See the specific function documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513d038bff7e58a6a5bce69ba033cc01cdc40ae2" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, this function simply calls io.NopCloser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2448bedc1610952ad45272180d162f1f4c6e5c6a" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, this function simply calls io.ReadAll.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c92c5a2233fe9ab8985003d89b0f10a9e0df728" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, this function simply calls os.ReadFile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfeecbf195e8d6648b18d66b6d7710f2251db15" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, this function simply calls os.WriteFile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98c89cad1eac1e48fa3389a15399b4c12ece47f" translate="yes" xml:space="preserve">
          <source>As of Go 1.16, this value is simply io.Discard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c27858b3442fc0bee7882f1bb69b22f67a266cb" translate="yes" xml:space="preserve">
          <source>As of Go 1.8, ProbablyPrime(0) is allowed and applies only a Baillie-PSW test. Before Go 1.8, ProbablyPrime applied only the Miller-Rabin tests, and ProbablyPrime(0) panicked.</source>
          <target state="translated">Начиная с Go 1.8,ProbablePrime(0)разрешен и применяется только тест Baillie-PSW.До Go 1.8,ProbablyPrime применял только тесты Миллера-Рабина,и ProbablyPrime(0)запаниковал.</target>
        </trans-unit>
        <trans-unit id="e7b4491e3912148482adb16859f32c2fa9f34180" translate="yes" xml:space="preserve">
          <source>As panics if target is not a non-nil pointer to either a type that implements error, or to any interface type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd4351c985c8d810139dead9123e042560e4b66" translate="yes" xml:space="preserve">
          <source>As returned by NewReader, a Reader expects input conforming to RFC 4180. The exported fields can be changed to customize the details before the first call to Read or ReadAll.</source>
          <target state="translated">По возвращении NewReader,Читатель ожидает,что входной сигнал соответствует RFC 4180.Экспортированные поля могут быть изменены для настройки деталей перед первым вызовом Read или ReadAll.</target>
        </trans-unit>
        <trans-unit id="8e146a063bece1e3d2e6bbe0b5fda136eb3a8802" translate="yes" xml:space="preserve">
          <source>As returned by NewWriter, a Writer writes records terminated by a newline and uses ',' as the field delimiter. The exported fields can be changed to customize the details before the first call to Write or WriteAll.</source>
          <target state="translated">Как возвращает NewWriter,Writer записывает записи,завершенные новой строкой,и использует ',' в качестве разделителя полей.Экспортируемые поля могут быть изменены для настройки деталей перед первым вызовом Write или WriteAll.</target>
        </trans-unit>
        <trans-unit id="f7df27550c12511e83c255cdee5cd115de36801a" translate="yes" xml:space="preserve">
          <source>As this uses the math/rand package, it must not be used for security-sensitive work. Use crypto/rand.Int instead.</source>
          <target state="translated">Так как при этом используется пакет math/rand,он не должен использоваться для работы,связанной с безопасностью.Вместо этого используйте crypto/rand.Int.</target>
        </trans-unit>
        <trans-unit id="2cd259da2c4b6fea04004fe9f9885ac522790abc" translate="yes" xml:space="preserve">
          <source>As unwraps its first argument sequentially looking for an error that can be assigned to its second argument, which must be a pointer. If it succeeds, it performs the assignment and returns true. Otherwise, it returns false. The form</source>
          <target state="translated">По мере разворачивания его первый аргумент последовательно ищет ошибку,которая может быть присвоена его второму аргументу,который должен быть указателем.В случае успеха,он выполняет присваивание и возвращает true.В противном случае он возвращает false.Форма</target>
        </trans-unit>
        <trans-unit id="8374f63c4cc91790e10a17540248859e2c43749e" translate="yes" xml:space="preserve">
          <source>As will panic if target is not a non-nil pointer to either a type that implements error, or to any interface type. As returns false if err is nil.</source>
          <target state="translated">Также будет паника,если цель не является нулевым указателем ни на тип,реализующий ошибку,ни на любой тип интерфейса.As возвращает false,если ошибка равна нулю.</target>
        </trans-unit>
        <trans-unit id="e12a672c4a03c1f366a655654dd82547f4c192b6" translate="yes" xml:space="preserve">
          <source>As with Mutexes, a locked RWMutex is not associated with a particular goroutine. One goroutine may RLock (Lock) a RWMutex and then arrange for another goroutine to RUnlock (Unlock) it.</source>
          <target state="translated">Как и в случае с Мьютексами,заблокированный RWMutex не ассоциируется с определенным горутином.Один горутин может RLock (Блокировать)RWMutex,а затем устроить для другого горутина RUnlock (Разблокировать)его.</target>
        </trans-unit>
        <trans-unit id="3f21579b78a9211097bade1507cf7d1061aef2af" translate="yes" xml:space="preserve">
          <source>Asin</source>
          <target state="translated">Asin</target>
        </trans-unit>
        <trans-unit id="5bad1e47810824babb31078e94077c5944ed414b" translate="yes" xml:space="preserve">
          <source>Asin returns the arcsine, in radians, of x.</source>
          <target state="translated">Асин возвращает арксинус в радиусе x.</target>
        </trans-unit>
        <trans-unit id="42f92a72e30529e672dc5d2bdb4e52a1e80b51ed" translate="yes" xml:space="preserve">
          <source>Asin returns the inverse sine of x.</source>
          <target state="translated">Асин возвращает обратный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный синусоидальный.</target>
        </trans-unit>
        <trans-unit id="ad5ced2b521e057f06b0f8b74356c5357ee0c1b5" translate="yes" xml:space="preserve">
          <source>Asinh</source>
          <target state="translated">Asinh</target>
        </trans-unit>
        <trans-unit id="6b958528f6028414e36bacd2591d4b6be481f7b4" translate="yes" xml:space="preserve">
          <source>Asinh returns the inverse hyperbolic sine of x.</source>
          <target state="translated">Асин возвращает обратный гиперболический синус x.</target>
        </trans-unit>
        <trans-unit id="88ff212e4044fa4ecfe39d2c2662e15ee5065576" translate="yes" xml:space="preserve">
          <source>AssertableTo reports whether a value of type V can be asserted to have type T.</source>
          <target state="translated">AssertableTo сообщает,можно ли утверждать,что значение типа V имеет тип T.</target>
        </trans-unit>
        <trans-unit id="b7e50e603d8ca37cb77d5d576d4a7b54854bdbbc" translate="yes" xml:space="preserve">
          <source>AssignNode holds a list of variable names, possibly with chained field accesses. The dollar sign is part of the (first) name.</source>
          <target state="translated">AssignNode содержит список имен переменных,возможно,с цепочечными доступами к полям.Знак доллара является частью (первого)имени.</target>
        </trans-unit>
        <trans-unit id="ec3e8c371a10dbed4fea0329ff6a11ce3cbd6f29" translate="yes" xml:space="preserve">
          <source>Assignable reports whether the corresponding expression is assignable to (provided a value of the right type).</source>
          <target state="translated">Присваивается отчет о том,присваивается ли соответствующее выражение (при условии присвоения значения правильного типа).</target>
        </trans-unit>
        <trans-unit id="bd5a07eeed4108b05189ea3b918384a565a62707" translate="yes" xml:space="preserve">
          <source>AssignableTo reports whether a value of type V is assignable to a variable of type T.</source>
          <target state="translated">AssignableTo сообщает,присваивается ли значение типа V переменной типа T.</target>
        </trans-unit>
        <trans-unit id="073f06f859d560b94308665c74b394553a4cb550" translate="yes" xml:space="preserve">
          <source>Associated templates</source>
          <target state="translated">Соответствующие шаблоны</target>
        </trans-unit>
        <trans-unit id="121e4049fd559093314fa7baa93a29ee9ee41472" translate="yes" xml:space="preserve">
          <source>Assuming {{.}} is `O'Reilly: How are &amp;lt;i&amp;gt;you&amp;lt;/i&amp;gt;?`, the table below shows how {{.}} appears when used in the context to the left.</source>
          <target state="translated">Предполагая, что {{.}} - это `O'Reilly: How are &amp;lt;i&amp;gt; you &amp;lt;/i&amp;gt;?`, В таблице ниже показано, как {{.}} Появляется при использовании в контексте слева.</target>
        </trans-unit>
        <trans-unit id="746de06dfc27875c233a16bc538c38c9e6d17830" translate="yes" xml:space="preserve">
          <source>At implements the Image interface.</source>
          <target state="translated">На реализует интерфейс &quot;Изображение&quot;.</target>
        </trans-unit>
        <trans-unit id="a60dd7bc9b32af28f00b9d0d9bb8fa49524604ad" translate="yes" xml:space="preserve">
          <source>At parse time each {{.}} is overwritten to add escaping functions as necessary. In this case it becomes</source>
          <target state="translated">При разборе каждая {{.}}перезаписывается для добавления экранирующих функций по мере необходимости.В этом случае он становится</target>
        </trans-unit>
        <trans-unit id="065243bc78ccf8f2ee7c8d7202c512e520eaaa4e" translate="yes" xml:space="preserve">
          <source>At parse time the attribute will be treated as if it were just &quot;href&quot;. So at parse time the template becomes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e3eceea09e99bbe6f86edd4f16394f742e1175" translate="yes" xml:space="preserve">
          <source>At parse time they become:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c768384f5ab946e2671bd5332081db4467e2d17" translate="yes" xml:space="preserve">
          <source>At parse time this becomes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0afca5b2f066f8034ea0fbbfa4603da7e5cc29" translate="yes" xml:space="preserve">
          <source>At returns the bit at the given index. If the index is out of range it returns false.</source>
          <target state="translated">При возврате бита по данному индексу.Если индекс находится вне диапазона,то возвращается false.</target>
        </trans-unit>
        <trans-unit id="42341bc94e9e432ac7ed1df54f5e5cefe525e01c" translate="yes" xml:space="preserve">
          <source>At returns the i'th method in s for 0 &amp;lt;= i &amp;lt; s.Len().</source>
          <target state="translated">At возвращает i-й метод в s для 0 &amp;lt;= i &amp;lt;s.Len ().</target>
        </trans-unit>
        <trans-unit id="77c9122bd7d1bb2ad8f2ac38d7b8b3292183a2ac" translate="yes" xml:space="preserve">
          <source>At returns the i'th variable of tuple t.</source>
          <target state="translated">При возврате переменной tuple t.</target>
        </trans-unit>
        <trans-unit id="1b17e31210b8e43c3d1e1c222717ddf79de31d1e" translate="yes" xml:space="preserve">
          <source>At this point, clients can see a service &quot;Arith&quot; with methods &quot;Arith.Multiply&quot; and &quot;Arith.Divide&quot;. To invoke one, a client first dials the server:</source>
          <target state="translated">На данный момент клиенты могут увидеть услугу &quot;Арит&quot; с помощью методов &quot;Арит.умножить&quot; и &quot;Арит.разделить&quot;.Для вызова одного из них клиент сначала набирает номер сервера:</target>
        </trans-unit>
        <trans-unit id="629848d109abb16cacec52ea5ca0dc3eddfe0f61" translate="yes" xml:space="preserve">
          <source>Atan</source>
          <target state="translated">Atan</target>
        </trans-unit>
        <trans-unit id="c50e85584d7681c5aba445dde84464172eb36a4c" translate="yes" xml:space="preserve">
          <source>Atan returns the arctangent, in radians, of x.</source>
          <target state="translated">Атан возвращает аркангент в радиусе x.</target>
        </trans-unit>
        <trans-unit id="0c11076c24ca507422c2e7e78169bc402e507472" translate="yes" xml:space="preserve">
          <source>Atan returns the inverse tangent of x.</source>
          <target state="translated">Атан возвращает обратный тангенс Х.</target>
        </trans-unit>
        <trans-unit id="90c852f25296e9373d22d6d648bd28708c31cbec" translate="yes" xml:space="preserve">
          <source>Atan2</source>
          <target state="translated">Atan2</target>
        </trans-unit>
        <trans-unit id="63a222caf5c6142da57e1b301f3487b179288ab4" translate="yes" xml:space="preserve">
          <source>Atan2 returns the arc tangent of y/x, using the signs of the two to determine the quadrant of the return value.</source>
          <target state="translated">Atan2 возвращает касательную дуги y/x,используя знаки обоих для определения квадранта возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="6ce5901b2d008f90c0bf7e89db8b95255eacee6a" translate="yes" xml:space="preserve">
          <source>Atanh</source>
          <target state="translated">Atanh</target>
        </trans-unit>
        <trans-unit id="8f20e96a43909d1a86e1589070972405040e354c" translate="yes" xml:space="preserve">
          <source>Atanh returns the inverse hyperbolic tangent of x.</source>
          <target state="translated">Атан возвращает обратный гиперболический тангенс Х.</target>
        </trans-unit>
        <trans-unit id="3c51e7a1c54b1f53de6e7c0fd3b84cdb88ba42e1" translate="yes" xml:space="preserve">
          <source>Atoi</source>
          <target state="translated">Atoi</target>
        </trans-unit>
        <trans-unit id="a117e4e38bf32f2974a89f461d6056635052cfb0" translate="yes" xml:space="preserve">
          <source>Atoi is equivalent to ParseInt(s, 10, 0), converted to type int.</source>
          <target state="translated">Atoi эквивалентно ParseInt(s,10,0),приведенному к типу int.</target>
        </trans-unit>
        <trans-unit id="9126f09b1713910b4d3a69d102dd9587b4610486" translate="yes" xml:space="preserve">
          <source>Attempting to receive into these types will draw a decode error:</source>
          <target state="translated">Попытка получения в эти типы приведет к ошибке декодирования:</target>
        </trans-unit>
        <trans-unit id="5152403a7269d216ae8f4ea3b4b7a658797c9d36" translate="yes" xml:space="preserve">
          <source>AttrField returns the Field associated with attribute Attr in Entry, or nil if there is no such attribute.</source>
          <target state="translated">AttrField возвращает поле,связанное с атрибутом Attr в Entry,или nil,если такого атрибута нет.</target>
        </trans-unit>
        <trans-unit id="9ae0f439833163a3ddeedb35a68c62f7f5934a05" translate="yes" xml:space="preserve">
          <source>AttributeTypeAndValue mirrors the ASN.1 structure of the same name in RFC 5280, Section 4.1.2.4.</source>
          <target state="translated">AttributeTypeAndValue отражает одноименную структуру ASN.1 в RFC 5280,раздел 4.1.2.4.</target>
        </trans-unit>
        <trans-unit id="2ec0ad7b2c80ec04692a3797f2bbc0ec3042876b" translate="yes" xml:space="preserve">
          <source>AttributeTypeAndValueSET represents a set of ASN.1 sequences of AttributeTypeAndValue sequences from RFC 2986 (PKCS #10).</source>
          <target state="translated">AttributeTypeAndValueSET представляет собой набор ASN.1 последовательностей AttributeTypeAndValue из RFC 2986 (PKCS #10).</target>
        </trans-unit>
        <trans-unit id="6ac9e41cbb428a4ffbfe1eab6d339a53ee428688" translate="yes" xml:space="preserve">
          <source>Attributes with a namespace are treated as if they had no namespace. Given the excerpt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dace1e8c248d4f2663a3146820d6fa8f0645716" translate="yes" xml:space="preserve">
          <source>Auth authenticates a client using the provided authentication mechanism. A failed authentication closes the connection. Only servers that advertise the AUTH extension support this function.</source>
          <target state="translated">Auth аутентифицирует клиента,используя предоставленный механизм аутентификации.Неудачная аутентификация закрывает соединение.Только серверы,которые рекламируют расширение AUTH,поддерживают эту функцию.</target>
        </trans-unit>
        <trans-unit id="76ecb9e901daf9a93bba425a3a690af96a11bc07" translate="yes" xml:space="preserve">
          <source>Auth is implemented by an SMTP authentication mechanism.</source>
          <target state="translated">Auth реализован механизмом SMTP-аутентификации.</target>
        </trans-unit>
        <trans-unit id="bf0ed01eae13fda7bf984cbae649794a647f7d90" translate="yes" xml:space="preserve">
          <source>Available reports whether the given hash function is linked into the binary.</source>
          <target state="translated">Доступные отчеты о том,связана ли данная хэш-функция с двоичным кодом.</target>
        </trans-unit>
        <trans-unit id="9a9ecdcb8faf4f6fafd06e9771061d704142a340" translate="yes" xml:space="preserve">
          <source>Available returns how many bytes are unused in the buffer.</source>
          <target state="translated">Доступно возвращает количество неиспользованных байт в буфере.</target>
        </trans-unit>
        <trans-unit id="ee148636f87031dd785d5275b1cbdf15a231b5a3" translate="yes" xml:space="preserve">
          <source>B is a type passed to Benchmark functions to manage benchmark timing and to specify the number of iterations to run.</source>
          <target state="translated">B-это тип,передаваемый функциям бенчмарка для управления временем бенчмарка и указания количества выполняемых итераций.</target>
        </trans-unit>
        <trans-unit id="281039689fe09086452a06fde13b577021f53925" translate="yes" xml:space="preserve">
          <source>B.ReportMetric</source>
          <target state="translated">B.ReportMetric</target>
        </trans-unit>
        <trans-unit id="9735fb9f071a76bf96e03bb1c83afc5962a297bd" translate="yes" xml:space="preserve">
          <source>B.RunParallel</source>
          <target state="translated">B.RunParallel</target>
        </trans-unit>
        <trans-unit id="b352c33a80325aa5fb2ae226450e350d636f2327" translate="yes" xml:space="preserve">
          <source>BUG(rsc): The rule Title uses for word boundaries does not handle Unicode punctuation properly.</source>
          <target state="translated">BUG(rsc):Правило Title,используемое для границ слов,не корректно обрабатывает знаки препинания Юникода.</target>
        </trans-unit>
        <trans-unit id="f4b82c251d3f9879cefc981c46207be3e496ae01" translate="yes" xml:space="preserve">
          <source>Back returns the last element of list l or nil if the list is empty.</source>
          <target state="translated">Назад возвращает последний элемент списка l или nil,если список пуст.</target>
        </trans-unit>
        <trans-unit id="db678d849360d59ad5f56340bc8559ccb08f51dd" translate="yes" xml:space="preserve">
          <source>Background returns a non-nil, empty Context. It is never canceled, has no values, and has no deadline. It is typically used by the main function, initialization, and tests, and as the top-level Context for incoming requests.</source>
          <target state="translated">Фон возвращает нулевой,пустой Контекст.Он никогда не отменяется,не имеет значений и не имеет срока годности.Обычно он используется основной функцией,инициализацией и тестированием,а также в качестве Контекста верхнего уровня для входящих запросов.</target>
        </trans-unit>
        <trans-unit id="077fe9c54ed5ed26fa547f4ded3ef9a9bb066d65" translate="yes" xml:space="preserve">
          <source>Base</source>
          <target state="translated">Base</target>
        </trans-unit>
        <trans-unit id="0885011e0986be0085d2d4d1e06d03585dc94622" translate="yes" xml:space="preserve">
          <source>Base returns the base offset of file f as registered with AddFile.</source>
          <target state="translated">Base возвращает базовое смещение файла f,как зарегистрировано в AddFile.</target>
        </trans-unit>
        <trans-unit id="72eb5d9f9166fd131965cf967a0725b84747d8a2" translate="yes" xml:space="preserve">
          <source>Base returns the last element of path. Trailing path separators are removed before extracting the last element. If the path is empty, Base returns &quot;.&quot;. If the path consists entirely of separators, Base returns a single separator.</source>
          <target state="translated">База возвращает последний элемент пути.Перед извлечением последнего элемента удаляются разделители пути.Если путь пуст,Base возвращает &quot;...&quot;.Если путь полностью состоит из разделителей,Base возвращает единственный разделитель.</target>
        </trans-unit>
        <trans-unit id="730ef2dc0cbbd72e56b0f126a32b827069f4b3d9" translate="yes" xml:space="preserve">
          <source>Base returns the last element of path. Trailing slashes are removed before extracting the last element. If the path is empty, Base returns &quot;.&quot;. If the path consists entirely of slashes, Base returns &quot;/&quot;.</source>
          <target state="translated">База возвращает последний элемент пути.Отслеживающие слеши удаляются перед извлечением последнего элемента.Если контур пуст,Base возвращает &quot;...&quot;.Если контур целиком состоит из косых черт,Base возвращает &quot;/&quot;.</target>
        </trans-unit>
        <trans-unit id="f6e297784364859b17a6c3c7c606bb16913b7cdc" translate="yes" xml:space="preserve">
          <source>Base returns the minimum base offset that must be provided to AddFile when adding the next file.</source>
          <target state="translated">Base возвращает минимальное смещение базы,которое должно быть предоставлено AddFile при добавлении следующего файла.</target>
        </trans-unit>
        <trans-unit id="99eb4008013599132cd3e27c5fb83407d85919a5" translate="yes" xml:space="preserve">
          <source>BaseName returns the symbol name without the package or receiver name.</source>
          <target state="translated">BaseName возвращает имя символа без имени пакета или приемника.</target>
        </trans-unit>
        <trans-unit id="e43eaab116942fbe79dd46a07719c75b728c8d47" translate="yes" xml:space="preserve">
          <source>BasicAuth returns the username and password provided in the request's Authorization header, if the request uses HTTP Basic Authentication. See RFC 2617, Section 2.</source>
          <target state="translated">BasicAuth возвращает имя пользователя и пароль,указанные в заголовке запроса Авторизация,если запрос использует HTTP базовую аутентификацию.См.RFC 2617,раздел 2.</target>
        </trans-unit>
        <trans-unit id="366b21a60efe866654ff1d4abe0a6348b62eb4bd" translate="yes" xml:space="preserve">
          <source>BasicInfo is a set of flags describing properties of a basic type.</source>
          <target state="translated">BasicInfo-это набор флагов,описывающих свойства базового типа.</target>
        </trans-unit>
        <trans-unit id="de3ed59db1b7a02aa019b4d63cd7924f0ff03037" translate="yes" xml:space="preserve">
          <source>BasicKind describes the kind of basic type.</source>
          <target state="translated">BasicKind описывает тип базового типа.</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="a559837e1ca8160c6adbcc9d6e61ffb4253f8979" translate="yes" xml:space="preserve">
          <source>Be aware that calling Sign with an attacker-controlled PrivateKey may require an arbitrary amount of CPU.</source>
          <target state="translated">Имейте в виду,что для вызова Сигнала с PrivateKey,контролируемого злоумышленником,может потребоваться произвольное количество процессора.</target>
        </trans-unit>
        <trans-unit id="a579e80e86d1e7d0159d880e6b8fbe6e97090888" translate="yes" xml:space="preserve">
          <source>Because Unmarshal uses the reflect package, it can only assign to exported (upper case) fields. Unmarshal uses a case-sensitive comparison to match XML element names to tag values and struct field names.</source>
          <target state="translated">Поскольку Unmarshal использует пакет отражения,он может назначать только экспортируемые (в верхнем регистре)поля.Unmarshal использует регистрозависимое сравнение,чтобы сопоставить имена XML-элементов со значениями тегов и структурировать имена полей.</target>
        </trans-unit>
        <trans-unit id="523d61a0fa00dd823c410985160019d3fd2694f7" translate="yes" xml:space="preserve">
          <source>Because associated templates share underlying data, template construction cannot be done safely in parallel. Once the templates are constructed, they can be executed in parallel.</source>
          <target state="translated">Поскольку соответствующие шаблоны обмениваются базовыми данными,параллельное построение шаблонов не может быть безопасным.После того,как шаблоны построены,их можно выполнять параллельно.</target>
        </trans-unit>
        <trans-unit id="c48bfaadf8cd2cdc8bb489f610161c315416f443" translate="yes" xml:space="preserve">
          <source>Because c.L is not locked when Wait first resumes, the caller typically cannot assume that the condition is true when Wait returns. Instead, the caller should Wait in a loop:</source>
          <target state="translated">Поскольку c.L не блокируется при первом возобновлении Wait,вызывающий абонент обычно не может предполагать,что условие истинно,когда Wait возвращается.Вместо этого вызывающий абонент должен ждать в цикле:</target>
        </trans-unit>
        <trans-unit id="c54914271c00fc66938747e3c3b7008bdc4689f3" translate="yes" xml:space="preserve">
          <source>Because compilation units can describe multiple regions of the executable, in the worst case SeekPC must search through all the ranges in all the compilation units. Each call to SeekPC starts the search at the compilation unit of the last call, so in general looking up a series of PCs will be faster if they are sorted. If the caller wishes to do repeated fast PC lookups, it should build an appropriate index using the Ranges method.</source>
          <target state="translated">Поскольку модули компиляции могут описывать несколько областей исполняемого файла,в худшем случае SeekPC должен выполнить поиск по всем диапазонам во всех модулях компиляции.Каждый вызов SeekPC начинает поиск в модуле компиляции последнего вызова,так что в общем поиск серии ПК будет быстрее,если они отсортированы.Если вызывающий абонент хочет выполнить повторный быстрый поиск по ПК,он должен построить соответствующий индекс с помощью метода Ranges.</target>
        </trans-unit>
        <trans-unit id="f624f6937df7b930caaacba36f0e003303314362" translate="yes" xml:space="preserve">
          <source>Because no call to Do returns until the one call to f returns, if f causes Do to be called, it will deadlock.</source>
          <target state="translated">Потому что ни один вызов на Do не возвращается до тех пор,пока не вернется вызов на f,если на f будет вызван вызов на Do,то он зайдет в тупик.</target>
        </trans-unit>
        <trans-unit id="10e6b41f775d08ce6bc91138d6c2ffbef503d1d6" translate="yes" xml:space="preserve">
          <source>Because the monotonic clock reading has no meaning outside the current process, the serialized forms generated by t.GobEncode, t.MarshalBinary, t.MarshalJSON, and t.MarshalText omit the monotonic clock reading, and t.Format provides no format for it. Similarly, the constructors time.Date, time.Parse, time.ParseInLocation, and time.Unix, as well as the unmarshalers t.GobDecode, t.UnmarshalBinary. t.UnmarshalJSON, and t.UnmarshalText always create times with no monotonic clock reading.</source>
          <target state="translated">Поскольку чтение монотонных часов не имеет смысла вне текущего процесса,сериализованные формы,генерируемые t.GobEncode,t.MarshalBinary,t.MarshalJSON,и t.MarshalText,опускают чтение монотонных часов,а t.Format не предоставляет для него никакого формата.Аналогично,конструкторы time.Date,time.Parse,time.ParseInLocation и time.Unix,а также немаршалеры t.GobDecode,t.UnmarshalBinary.t.UnmarshalJSON и t.UnmarshalText всегда создают времена без считывания монотонных часов.</target>
        </trans-unit>
        <trans-unit id="2931b27564afddbb3dd2ae5bab9920e7ef6ed41b" translate="yes" xml:space="preserve">
          <source>Because these interfaces and primitives wrap lower-level operations with various implementations, unless otherwise informed clients should not assume they are safe for parallel execution.</source>
          <target state="translated">Поскольку эти интерфейсы и примитивы обёртывают низкоуровневые операции с различными реализациями,если только информированные клиенты не предполагают,что они безопасны для параллельного выполнения,они не должны предполагать,что они безопасны для параллельного выполнения.</target>
        </trans-unit>
        <trans-unit id="35fcba4a31cbe45a039eaa4f4cccf00b01bffed2" translate="yes" xml:space="preserve">
          <source>Before Go 1.2, an InvalidUTF8Error was returned by Marshal when attempting to encode a string value with invalid UTF-8 sequences. As of Go 1.2, Marshal instead coerces the string to valid UTF-8 by replacing invalid bytes with the Unicode replacement rune U+FFFD.</source>
          <target state="translated">Перед Go 1.2 при попытке кодирования строкового значения с недействительными последовательностями UTF-8 Маршал возвращал InvalidUTF8Error.Начиная с версии 1.2,Маршал вместо этого принуждает строку к действительному UTF-8,заменяя недействительные байты руной U+FFFD с заменой Unicode.</target>
        </trans-unit>
        <trans-unit id="27478232731be1bfbeb9336618ea6bd3499ef977" translate="yes" xml:space="preserve">
          <source>Before a connection is returned to the connection pool after use, IsValid is called if implemented. Before a connection is reused for another query, ResetSession is called if implemented. If a connection is never returned to the connection pool but immediately reused, then ResetSession is called prior to reuse but IsValid is not called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73598333463e9f5f45d82a86c218e8031e1759c" translate="yes" xml:space="preserve">
          <source>Before calling UnlockOSThread, the caller must ensure that the OS thread is suitable for running other goroutines. If the caller made any permanent changes to the state of the thread that would affect other goroutines, it should not call this function and thus leave the goroutine locked to the OS thread until the goroutine (and hence the thread) exits.</source>
          <target state="translated">Перед вызовом UnlockOSThread вызывающий абонент должен убедиться,что поток операционной системы подходит для запуска других горилл.Если вызывающий абонент внес постоянные изменения в состояние нити,которые могли бы повлиять на других горутинов,он не должен вызывать эту функцию и,таким образом,оставлять горутину заблокированной в нити ОС до тех пор,пока горутина (и,следовательно,нить)не выйдет из нее.</target>
        </trans-unit>
        <trans-unit id="c8e6ffc3c30540fb4fc792e9d4357fe97560a188" translate="yes" xml:space="preserve">
          <source>Before reports whether the time instant t is before u.</source>
          <target state="translated">Перед тем,как сообщить,находится ли момент времени t перед u.</target>
        </trans-unit>
        <trans-unit id="606149b36fd31d7cdbc22b8147b6e250b63644a8" translate="yes" xml:space="preserve">
          <source>Begin starts a transaction. The default isolation level is dependent on the driver.</source>
          <target state="translated">Начинайте сделку.Уровень изоляции по умолчанию зависит от драйвера.</target>
        </trans-unit>
        <trans-unit id="7cd63441add5782709d8f334b556a5c9fa7bdc37" translate="yes" xml:space="preserve">
          <source>BeginTx starts a transaction.</source>
          <target state="translated">BeginTx начинает сделку.</target>
        </trans-unit>
        <trans-unit id="585dfb879aa41e91c69b3ef22e8de318a2e0e792" translate="yes" xml:space="preserve">
          <source>Below is the full list of supported metrics, ordered lexicographically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3207514bf6d3821c848dd10bdfa8d78bb40dcea3" translate="yes" xml:space="preserve">
          <source>Benchmark benchmarks a single function. It is useful for creating custom benchmarks that do not use the &quot;go test&quot; command.</source>
          <target state="translated">Контрольные показатели одной функции.Она полезна для создания пользовательских бенчмарков,не использующих команду &quot;go test&quot;.</target>
        </trans-unit>
        <trans-unit id="e030fd6d03700a56260bd837de91d33a65e0ca39" translate="yes" xml:space="preserve">
          <source>BenchmarkResult contains the results of a benchmark run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f46ac72b3634f96c6860b1ed26d9d4cd71d21aa" translate="yes" xml:space="preserve">
          <source>Benchmarks</source>
          <target state="translated">Benchmarks</target>
        </trans-unit>
        <trans-unit id="595a85b5dfe37bb8ea10dd65bbf5df54240ef01f" translate="yes" xml:space="preserve">
          <source>BigEndian is the big-endian implementation of ByteOrder.</source>
          <target state="translated">BigEndian-это биг-ендийская реализация ByteOrder.</target>
        </trans-unit>
        <trans-unit id="1a8e46c0c273a4b21db3dc88b0bc1fa8455576e3" translate="yes" xml:space="preserve">
          <source>Binary-Only Packages</source>
          <target state="translated">Бинарные пакеты</target>
        </trans-unit>
        <trans-unit id="cb0f451964a92b1951caeba948c48201789ad9ee" translate="yes" xml:space="preserve">
          <source>BinaryMarshaler is the interface implemented by an object that can marshal itself into a binary form.</source>
          <target state="translated">BinaryMarshaler-это интерфейс,реализованный объектом,который может преобразовывать себя в двоичную форму.</target>
        </trans-unit>
        <trans-unit id="8d76f4817cb16f671ca5aee534556905d021cc99" translate="yes" xml:space="preserve">
          <source>BinaryOp</source>
          <target state="translated">BinaryOp</target>
        </trans-unit>
        <trans-unit id="921645dac207c4f83f06bce30493a71396088bbe" translate="yes" xml:space="preserve">
          <source>BinaryOp returns the result of the binary expression x op y. The operation must be defined for the operands. If one of the operands is Unknown, the result is Unknown. BinaryOp doesn't handle comparisons or shifts; use Compare or Shift instead.</source>
          <target state="translated">BinaryOp возвращает результат двоичного выражения x op y.Операция должна быть определена для операндов.Если один из операндов неизвестен,то результат будет Неизвестен.BinaryOp не обрабатывает сравнения или сдвиги;вместо этого используйте Compare или Shift.</target>
        </trans-unit>
        <trans-unit id="aadd7b0b0b5fb55d09fc3d06572f282dff2441a6" translate="yes" xml:space="preserve">
          <source>BinaryUnmarshaler is the interface implemented by an object that can unmarshal a binary representation of itself.</source>
          <target state="translated">BinaryUnmarshaler-это интерфейс,реализованный объектом,который может размагничивать двоичное представление себя.</target>
        </trans-unit>
        <trans-unit id="bbc8be299a236737ac4bcd6e0b8a8942dcf2d6e6" translate="yes" xml:space="preserve">
          <source>BindToDevice binds the socket associated with fd to device.</source>
          <target state="translated">BindToDevice привязывает гнездо,связанное с fd к устройству.</target>
        </trans-unit>
        <trans-unit id="16d18c58d40584999fc8105b9b042e87422089ab" translate="yes" xml:space="preserve">
          <source>Binomial sets z to the binomial coefficient of (n, k) and returns z.</source>
          <target state="translated">Биномиальный набор z равен биномиальному коэффициенту (n,k)и возвращает z.</target>
        </trans-unit>
        <trans-unit id="5ddd24fa4c794f9b329dfacec18d2187e2964355" translate="yes" xml:space="preserve">
          <source>Bit returns the value of the i'th bit of x. That is, it returns (x&amp;gt;&amp;gt;i)&amp;amp;1. The bit index i must be &amp;gt;= 0.</source>
          <target state="translated">Bit возвращает значение i-го бита x. То есть он возвращает (x &amp;gt;&amp;gt; i) &amp;amp; 1. Битовый индекс i должен быть&amp;gt; = 0.</target>
        </trans-unit>
        <trans-unit id="6bc8c103293d835982059015b02530a9dce7c7fe" translate="yes" xml:space="preserve">
          <source>BitLen returns the length of the absolute value of x in bits. The bit length of 0 is 0.</source>
          <target state="translated">BitLen возвращает длину абсолютного значения x в битах.Длина бита 0 равна 0.</target>
        </trans-unit>
        <trans-unit id="249f28fd5304db8d7893c5941b0e5c6d36dcae80" translate="yes" xml:space="preserve">
          <source>BitLen returns the number of bits required to represent the absolute value x in binary representation; x must be an Int or an Unknown. If x is Unknown, the result is 0.</source>
          <target state="translated">BitLen возвращает количество битов,необходимое для представления абсолютного значения x в двоичном представлении;x должно быть Int или Unknown.Если x неизвестно,то результат равен 0.</target>
        </trans-unit>
        <trans-unit id="ecd1fdf628a58ae78c5a7dd496f33ee72ff11255" translate="yes" xml:space="preserve">
          <source>BitString is the structure to use when you want an ASN.1 BIT STRING type. A bit string is padded up to the nearest byte in memory and the number of valid bits is recorded. Padding bits will be zero.</source>
          <target state="translated">BitString-это структура для использования,когда вам нужен тип ASN.1 BIT STRING.Битовая строка помещается в память до ближайшего байта,и записывается количество допустимых битов.Биты подстановки будут равны нулю.</target>
        </trans-unit>
        <trans-unit id="9b86ce6cb2c2b41799ca1c79001b25b6a71ae1d0" translate="yes" xml:space="preserve">
          <source>Bits provides raw (unchecked but fast) access to x by returning its absolute value as a little-endian Word slice. The result and x share the same underlying array. Bits is intended to support implementation of missing low-level Int functionality outside this package; it should be avoided otherwise.</source>
          <target state="translated">Биты обеспечивают необработанный (неконтролируемый,но быстрый)доступ к x,возвращая его абсолютное значение в виде маленького кусочка Word.Результат и x имеют один и тот же базовый массив.Биты предназначены для поддержки реализации недостающей низкоуровневой Int-функциональности вне данного пакета;в противном случае этого следует избегать.</target>
        </trans-unit>
        <trans-unit id="8785e8d0d70df9ef411a1a99b4e2008220100ed8" translate="yes" xml:space="preserve">
          <source>Blank lines are ignored. A line with only whitespace characters (excluding the ending newline character) is not considered a blank line.</source>
          <target state="translated">Пустые строки игнорируются.Строка,содержащая только пробелы (исключая заканчивающийся символ новой строки),не считается пустой строкой.</target>
        </trans-unit>
        <trans-unit id="ab40b9553b86d8db879c49ff4725f0be1d518336" translate="yes" xml:space="preserve">
          <source>BlockProfile returns n, the number of records in the current blocking profile. If len(p) &amp;gt;= n, BlockProfile copies the profile into p and returns n, true. If len(p) &amp;lt; n, BlockProfile does not change p and returns n, false.</source>
          <target state="translated">BlockProfile возвращает n - количество записей в текущем профиле блокировки. Если len (p)&amp;gt; = n, BlockProfile копирует профиль в p и возвращает n, true. Если len (p) &amp;lt;n, BlockProfile не изменяет p и возвращает n, false.</target>
        </trans-unit>
        <trans-unit id="6ae50f5c12fe5e00104f9ffadf5daeabfcf4ed33" translate="yes" xml:space="preserve">
          <source>BlockProfileRecord describes blocking events originated at a particular call sequence (stack trace).</source>
          <target state="translated">BlockProfileRecord описывает блокирование событий,происходящих при определенной последовательности вызовов (трасса стека).</target>
        </trans-unit>
        <trans-unit id="e6c06bd024e6e8bb8c0ce4424e852fc0364e474a" translate="yes" xml:space="preserve">
          <source>BlockSize returns h's block size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ef7e3c2654f8573a1d7a67091280baf14e7241" translate="yes" xml:space="preserve">
          <source>Bool defines a bool flag with specified name, default value, and usage string. The return value is the address of a bool variable that stores the value of the flag.</source>
          <target state="translated">Bool определяет флаг bool с указанным именем,значением по умолчанию и строкой использования.Возвращаемое значение-это адрес переменной bool,в которой хранится значение флага.</target>
        </trans-unit>
        <trans-unit id="7e6896885d6315609679d245d2070ffe8fed4e1b" translate="yes" xml:space="preserve">
          <source>Bool is a ValueConverter that converts input values to bools.</source>
          <target state="translated">Bool-это конвертер значений,который преобразует входные значения в пулы.</target>
        </trans-unit>
        <trans-unit id="0fb9432e73dd047df304b2009b6c3b825667d954" translate="yes" xml:space="preserve">
          <source>Bool returns the value v as a bool. It panics if v is not a JavaScript boolean.</source>
          <target state="translated">Шерсть возвращает значение v как шерсть.Он паникует,если v не является JavaScript булевым.</target>
        </trans-unit>
        <trans-unit id="10b302964452c62c167d20c7d6a6eb54f65b9ba5" translate="yes" xml:space="preserve">
          <source>Bool returns v's underlying value. It panics if v's kind is not Bool.</source>
          <target state="translated">Бул возвращает базовую стоимость v.Паника,если Визитёры-не Бул.</target>
        </trans-unit>
        <trans-unit id="b37fb77c4eb8b7e67beea7dd6aa3c0cab362ce86" translate="yes" xml:space="preserve">
          <source>BoolNode holds a boolean constant.</source>
          <target state="translated">BoolNode держит булевую константу.</target>
        </trans-unit>
        <trans-unit id="f8e8a6bce6cf09d8bab71de479256430c4f50e55" translate="yes" xml:space="preserve">
          <source>BoolVal returns the Go boolean value of x, which must be a Bool or an Unknown. If x is Unknown, the result is false.</source>
          <target state="translated">BoolVal возвращает Go булевое значение x,которое должно быть Bool или Unknown.Если x равно Неизвестно,то результат будет ложным.</target>
        </trans-unit>
        <trans-unit id="499f2e8136043fcef09799424f98d1389a945e55" translate="yes" xml:space="preserve">
          <source>BoolVar defines a bool flag with specified name, default value, and usage string. The argument p points to a bool variable in which to store the value of the flag.</source>
          <target state="translated">BoolVar определяет флаг bool с указанным именем,значением по умолчанию и строкой использования.Аргумент p указывает на переменную bool,в которой будет храниться значение флага.</target>
        </trans-unit>
        <trans-unit id="4b0e763b67dea569e511a23d06447d965f06236f" translate="yes" xml:space="preserve">
          <source>Boolean values encode as JSON booleans.</source>
          <target state="translated">Булевы значения кодируются как JSON булеаны.</target>
        </trans-unit>
        <trans-unit id="6f9fa2ad669da3999136da1456c5f3ffdf720ead" translate="yes" xml:space="preserve">
          <source>Boolean:</source>
          <target state="translated">Boolean:</target>
        </trans-unit>
        <trans-unit id="ad90391bd80e58d8341d23f6811679989eed45ac" translate="yes" xml:space="preserve">
          <source>Boundary returns the Writer's boundary.</source>
          <target state="translated">Граница возвращает границу Писателя.</target>
        </trans-unit>
        <trans-unit id="5dc9bacd4c58f9399b9dc87bc63dfb5fb7a6e59e" translate="yes" xml:space="preserve">
          <source>Bounds implements the Image interface.</source>
          <target state="translated">Bounds реализует интерфейс Image.</target>
        </trans-unit>
        <trans-unit id="069d396f187de1e68cab3317f5cd2814eb7568af" translate="yes" xml:space="preserve">
          <source>BranchNode is the common representation of if, range, and with.</source>
          <target state="translated">BranchNode-это общее представление &quot;если&quot;,&quot;диапазон&quot; и &quot;с&quot;.</target>
        </trans-unit>
        <trans-unit id="615bed871d5779af80e4a6136fa4239d3c7ccc9b" translate="yes" xml:space="preserve">
          <source>Breakpoint executes a breakpoint trap.</source>
          <target state="translated">Точка останова выполняет ловушку точки останова.</target>
        </trans-unit>
        <trans-unit id="37081c9403a25124ca889860df85a0ae7029759e" translate="yes" xml:space="preserve">
          <source>Broadcast wakes all goroutines waiting on c.</source>
          <target state="translated">Трансляция пробуждает всех гориллонов,ждущих на Си.</target>
        </trans-unit>
        <trans-unit id="0abe955e9259954b391f714f51cf3c32c1931de6" translate="yes" xml:space="preserve">
          <source>Bswap32 returns its input with byte order reversed 0x01020304 -&amp;gt; 0x04030201</source>
          <target state="translated">Bswap32 возвращает свой ввод с обратным порядком байтов 0x01020304 -&amp;gt; 0x04030201</target>
        </trans-unit>
        <trans-unit id="71a400796b8b7bbe45d37b744a62ead19991004e" translate="yes" xml:space="preserve">
          <source>Bswap64 returns its input with byte order reversed 0x0102030405060708 -&amp;gt; 0x0807060504030201</source>
          <target state="translated">Bswap64 возвращает свой ввод с обратным порядком байтов 0x0102030405060708 -&amp;gt; 0x0807060504030201</target>
        </trans-unit>
        <trans-unit id="c9309adffb005748ce6e64dc6b8674515cf4efae" translate="yes" xml:space="preserve">
          <source>Buf is where the traceback information should be stored. It should be PC values, such that Buf[0] is the PC of the caller, Buf[1] is the PC of that function's caller, and so on. Max is the maximum number of entries to store. The function should store a zero to indicate the top of the stack, or that the caller is on a different stack, presumably a Go stack.</source>
          <target state="translated">Buf-это то место,где должна храниться информация об отслеживании.Это должны быть значения ПК,такие,что Buf[0]является ПК вызывающего абонента,Buf[1]-ПК вызывающего абонента этой функции,и так далее.Макс-это максимальное количество записей для хранения.Функция должна хранить ноль,указывающий на вершину стека,или на то,что вызывающий абонент находится на другом стеке,предположительно на стеке Go.</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="448f56ed42119d7161dde9d81e02ab567a38fe41" translate="yes" xml:space="preserve">
          <source>Buffer (Reader)</source>
          <target state="translated">Буфер (Читатель)</target>
        </trans-unit>
        <trans-unit id="cd5168b55c7b32a8963df048d61974c2aede7b92" translate="yes" xml:space="preserve">
          <source>Buffer panics if it is called after scanning has started.</source>
          <target state="translated">Буферная паника,если она вызвана после начала сканирования.</target>
        </trans-unit>
        <trans-unit id="551e1ba8b3e746ffe206860acb967584c81dae61" translate="yes" xml:space="preserve">
          <source>Buffer sets the initial buffer to use when scanning and the maximum size of buffer that may be allocated during scanning. The maximum token size is the larger of max and cap(buf). If max &amp;lt;= cap(buf), Scan will use this buffer only and do no allocation.</source>
          <target state="translated">Buffer устанавливает начальный буфер для использования при сканировании и максимальный размер буфера, который может быть выделен во время сканирования. Максимальный размер токена больше из максимального и максимального (buf). Если max &amp;lt;= cap (buf), сканирование будет использовать только этот буфер и не будет выделять его.</target>
        </trans-unit>
        <trans-unit id="7786e411f44f29f5cd2ea124227ff0c6b6c7a891" translate="yes" xml:space="preserve">
          <source>Buffer.Bytes</source>
          <target state="translated">Buffer.Bytes</target>
        </trans-unit>
        <trans-unit id="d7fbc5efb24a4bec1ee1e0286f6eb89f2f88ad86" translate="yes" xml:space="preserve">
          <source>Buffer.Grow</source>
          <target state="translated">Buffer.Grow</target>
        </trans-unit>
        <trans-unit id="13e05f0025f22f2c210feebd6f6764eb9ab9107a" translate="yes" xml:space="preserve">
          <source>Buffer.Len</source>
          <target state="translated">Buffer.Len</target>
        </trans-unit>
        <trans-unit id="4d131002dacad1f34909e2d34d9e19d16cc5e060" translate="yes" xml:space="preserve">
          <source>Buffered returns a reader of the data remaining in the Decoder's buffer. The reader is valid until the next call to Decode.</source>
          <target state="translated">Буферизованный возвращает читателю данные,оставшиеся в буфере декодера.Считыватель действителен до следующего вызова программы Decode.</target>
        </trans-unit>
        <trans-unit id="0067b3c63a56af4074505acb91d2a3cc9575fef4" translate="yes" xml:space="preserve">
          <source>Buffered returns the number of bytes that can be read from the current buffer.</source>
          <target state="translated">Буферизованный возвращает количество байт,которое можно прочитать из текущего буфера.</target>
        </trans-unit>
        <trans-unit id="7f08b0ea50ae1356e6e8d51780445d990cb02038" translate="yes" xml:space="preserve">
          <source>Buffered returns the number of bytes that have been written into the current buffer.</source>
          <target state="translated">Буферизованный возвращает количество байт,записанных в текущий буфер.</target>
        </trans-unit>
        <trans-unit id="f85a434187712878deb28e6a10ca19a4cff6a753" translate="yes" xml:space="preserve">
          <source>Buffers contains zero or more runs of bytes to write.</source>
          <target state="translated">Буферы содержат ноль и более запусков байт для записи.</target>
        </trans-unit>
        <trans-unit id="c8eea1b80ba437eb2c7d9d8e4a7a1c0c36ddce4e" translate="yes" xml:space="preserve">
          <source>Bugs</source>
          <target state="translated">Bugs</target>
        </trans-unit>
        <trans-unit id="921fab9f51565e1aa75ad1caac472a9aa9f26a82" translate="yes" xml:space="preserve">
          <source>Build Constraints</source>
          <target state="translated">Строить Ограничения</target>
        </trans-unit>
        <trans-unit id="29b9ebcad59c3ff5523927bf009e975e46078fb3" translate="yes" xml:space="preserve">
          <source>BuildInfo represents the build information read from the running binary.</source>
          <target state="translated">BuildInfo представляет собой информацию о сборке,считанную из запущенного двоичного файла.</target>
        </trans-unit>
        <trans-unit id="5041b9275852b56eabc2a8bc89d216f576ca59f5" translate="yes" xml:space="preserve">
          <source>BuildNameToCertificate parses c.Certificates and builds c.NameToCertificate from the CommonName and SubjectAlternateName fields of each of the leaf certificates.</source>
          <target state="translated">BuildNameToCertificate разбирает c.Certificates и строит c.NameToCertificate из полей CommonName и SubjectAlternateName каждого из сертификатов листа.</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="2d8e35a2ed18813e75b6cfe5be6d3b153d2c5046" translate="yes" xml:space="preserve">
          <source>By construction, a template may reside in only one association. If it's necessary to have a template addressable from multiple associations, the template definition must be parsed multiple times to create distinct *Template values, or must be copied with the Clone or AddParseTree method.</source>
          <target state="translated">По конструкции,шаблон может находиться только в одной ассоциации.Если необходимо,чтобы шаблон был адресован из нескольких ассоциаций,определение шаблона должно быть разобрано несколько раз для создания различных *значений шаблона,или должно быть скопировано методом Clone или AddParseTree.</target>
        </trans-unit>
        <trans-unit id="480c13549e7a8a185af82bf79efe8d7146c55441" translate="yes" xml:space="preserve">
          <source>By convention, tag strings are a concatenation of optionally space-separated key:&quot;value&quot; pairs. Each key is a non-empty string consisting of non-control characters other than space (U+0020 ' '), quote (U+0022 '&quot;'), and colon (U+003A ':'). Each value is quoted using U+0022 '&quot;' characters and Go string literal syntax.</source>
          <target state="translated">По общему правилу,строки тегов представляют собой конкатенцию опционально разделенного пробелами ключа:пары &quot;value&quot;.Каждый ключ представляет собой непустую строку,состоящую из неконтролируемых символов,кроме пробела (U+0020 ' '),кавычки (U+0022 '&quot;)и двоеточия (U+003A ':').Каждое значение цитируется с использованием символов U+0022 '&quot; и синтаксиса Go string literal.</target>
        </trans-unit>
        <trans-unit id="6b96101ed175ff51ef271a9ec4e297e0ae19c127" translate="yes" xml:space="preserve">
          <source>By convention, to approximate the behavior of Unmarshal itself, Unmarshalers implement UnmarshalJSON([]byte(&quot;null&quot;)) as a no-op.</source>
          <target state="translated">По соглашению,для аппроксимации поведения самого Unmarshal,UnmarshalJSON([]byte(&quot;null&quot;))реализуется как no-op.</target>
        </trans-unit>
        <trans-unit id="d97f2e29718cda70f3fb7a0b844b75e9e2a001df" translate="yes" xml:space="preserve">
          <source>By default the pure Go resolver is used, because a blocked DNS request consumes only a goroutine, while a blocked C call consumes an operating system thread. When cgo is available, the cgo-based resolver is used instead under a variety of conditions: on systems that do not let programs make direct DNS requests (OS X), when the LOCALDOMAIN environment variable is present (even if empty), when the RES_OPTIONS or HOSTALIASES environment variable is non-empty, when the ASR_CONFIG environment variable is non-empty (OpenBSD only), when /etc/resolv.conf or /etc/nsswitch.conf specify the use of features that the Go resolver does not implement, and when the name being looked up ends in .local or is an mDNS name.</source>
          <target state="translated">По умолчанию используется чистый Go resolver,поскольку заблокированный DNS-запрос потребляет только goroutine,в то время как заблокированный C-запрос потребляет поток операционной системы.Когда cgo доступен,вместо него используется преобразователь на основе cgo при различных условиях:на системах,которые не позволяют программам делать прямые DNS-запросы (OS X),когда переменная окружения LOCALDOMAIN присутствует (даже если она пуста),когда переменная окружения RES_OPTIONS или HOSTALIASES не пуста,когда переменная окружения ASR_CONFIG не пуста (только для OpenBSD),когда /etc/resolv.conf или /etc/nsswitch.conf указывают на использование функций,которые не реализуются в преобразователе Go resolver,и когда искомое имя заканчивается на .local или является именем mDNS.</target>
        </trans-unit>
        <trans-unit id="4d31c346123b01cd36d6f923e13afdff5da97023" translate="yes" xml:space="preserve">
          <source>By default, Scan uses an internal buffer and sets the maximum token size to MaxScanTokenSize.</source>
          <target state="translated">По умолчанию Scan использует внутренний буфер и устанавливает максимальный размер маркера в MaxScanTokenSize.</target>
        </trans-unit>
        <trans-unit id="1bb42d4b5aeee71b81262969484c8ff70b4517be" translate="yes" xml:space="preserve">
          <source>By default, Transport caches connections for future re-use. This may leave many open connections when accessing many hosts. This behavior can be managed using Transport's CloseIdleConnections method and the MaxIdleConnsPerHost and DisableKeepAlives fields.</source>
          <target state="translated">По умолчанию,соединения транспортного кэша для будущего повторного использования.Это может оставить много открытых соединений при доступе ко многим хостам.Этим поведением можно управлять с помощью метода CloseIdleConnections (ЗакрытьIdleConnections)на транспорте и полей MaxIdleConnsPerHost (Хост)и DisableKeepAlives (ОтключитьKeepAlives).</target>
        </trans-unit>
        <trans-unit id="e73ecd4c55ac4f2532efca2acf286d276bfcb67b" translate="yes" xml:space="preserve">
          <source>By default, a Scanner skips white space and Go comments and recognizes all literals as defined by the Go language specification. It may be customized to recognize only a subset of those literals and to recognize different identifier and white space characters.</source>
          <target state="translated">По умолчанию сканер пропускает белое пространство и комментарии Go и распознает все буквы в соответствии со спецификацией языка Go.Его можно настроить на распознавание только подмножества этих литералов и на распознавание различных идентификаторов и пробельных символов.</target>
        </trans-unit>
        <trans-unit id="38c26436cbce7bb3819d63370d7d78fcf207cd25" translate="yes" xml:space="preserve">
          <source>By default, a synchronous signal is converted into a run-time panic. A SIGHUP, SIGINT, or SIGTERM signal causes the program to exit. A SIGQUIT, SIGILL, SIGTRAP, SIGABRT, SIGSTKFLT, SIGEMT, or SIGSYS signal causes the program to exit with a stack dump. A SIGTSTP, SIGTTIN, or SIGTTOU signal gets the system default behavior (these signals are used by the shell for job control). The SIGPROF signal is handled directly by the Go runtime to implement runtime.CPUProfile. Other signals will be caught but no action will be taken.</source>
          <target state="translated">По умолчанию синхронный сигнал преобразуется в панику во время выполнения.Сигнал SIGHUP,SIGINT или SIGTERM вызывает выход программы.Сигнал SIGQUIT,SIGILL,SIGTRAP,SIGABRT,SIGSTKFLT,SIGEMT или SIGSYS заставляет программу выйти с дампами стека.Сигнал SIGTSTP,SIGTTIN или SIGTTOU получает поведение системы по умолчанию (эти сигналы используются оболочкой для управления заданиями).Сигнал SIGPROF обрабатывается непосредственно во время выполнения программы Go для реализации runtime.CPUProfile.Другие сигналы будут перехвачены,но никаких действий предпринято не будет.</target>
        </trans-unit>
        <trans-unit id="d3d4b30d09f1fdb49352c0d58298888cf0ca8985" translate="yes" xml:space="preserve">
          <source>By default, all text between actions is copied verbatim when the template is executed. For example, the string &quot; items are made of &quot; in the example above appears on standard output when the program is run.</source>
          <target state="translated">По умолчанию при выполнении шаблона весь текст между действиями копируется дословно.Например,строка &quot; из которых состоят элементы &quot; в приведенном выше примере появляется на стандартном выводе при выполнении программы.</target>
        </trans-unit>
        <trans-unit id="350622d95bd495e5b9d5b12d5be7f36acd283530" translate="yes" xml:space="preserve">
          <source>By default, this package assumes that all pipelines produce a plain text string. It adds escaping pipeline stages necessary to correctly and safely embed that plain text string in the appropriate context.</source>
          <target state="translated">По умолчанию этот пакет предполагает,что все конвейеры производят простую текстовую строку.Он добавляет стадии конвейера,необходимые для корректного и безопасного встраивания этой простой текстовой строки в соответствующий контекст.</target>
        </trans-unit>
        <trans-unit id="ac30c5fd81481adcf5dfadb9cc0286bdab9dd4d8" translate="yes" xml:space="preserve">
          <source>By setting the desired precision to 24 or 53 and using matching rounding mode (typically ToNearestEven), Float operations produce the same results as the corresponding float32 or float64 IEEE-754 arithmetic for operands that correspond to normal (i.e., not denormal) float32 or float64 numbers. Exponent underflow and overflow lead to a 0 or an Infinity for different values than IEEE-754 because Float exponents have a much larger range.</source>
          <target state="translated">Установив требуемую точность в 24 или 53 и используя режим округления (обычно ToNearestEven),операции float дают те же результаты,что и соответствующие арифметики float32 или float64 IEEE-754 для операндов,которые соответствуют нормальным (т.е.не денорамальным)числам float32 или float64.Переполнение и недолив экспонатов приводят к 0 или бесконечности для значений,отличных от IEEE-754,так как экспонаты float имеют гораздо больший диапазон.</target>
        </trans-unit>
        <trans-unit id="cae68a7a4d62320e833f932a1adb88cc3fca0834" translate="yes" xml:space="preserve">
          <source>ByteOrder (Get)</source>
          <target state="translated">БайтОрдер (Получить)</target>
        </trans-unit>
        <trans-unit id="14c268801cac113cc21be5f1d8e9a681909d9ffd" translate="yes" xml:space="preserve">
          <source>ByteOrder (Put)</source>
          <target state="translated">БайтОрдер (Пут)</target>
        </trans-unit>
        <trans-unit id="f662f7b4fb7ab8ae90d3cada267e382d65b0cdc0" translate="yes" xml:space="preserve">
          <source>ByteOrder returns the byte order in the current compilation unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47172c77b57631e39af011e8368ac1a798bc3c15" translate="yes" xml:space="preserve">
          <source>BytePtrFromString returns a pointer to a NUL-terminated array of bytes containing the text of s. If s contains a NUL byte at any location, it returns (nil, EINVAL).</source>
          <target state="translated">BytePtrFromString возвращает указатель на NUL-терминированный массив байтов,содержащий текст s.Если s содержит NUL-байт в любом месте,то возвращается (nil,EINVAL).</target>
        </trans-unit>
        <trans-unit id="b67766bbc487c36c668f7c4b2ebbdd282b5f29af" translate="yes" xml:space="preserve">
          <source>ByteReader is the interface that wraps the ReadByte method.</source>
          <target state="translated">ByteReader-это интерфейс,обертывающий метод ReadByte.</target>
        </trans-unit>
        <trans-unit id="cc79f8a24d7eacc319e8472097e4835f03446874" translate="yes" xml:space="preserve">
          <source>ByteScanner is the interface that adds the UnreadByte method to the basic ReadByte method.</source>
          <target state="translated">ByteScanner-это интерфейс,который добавляет метод UnreadByte к основному методу ReadByte.</target>
        </trans-unit>
        <trans-unit id="cd18721ac61a79ca35c5cda1743e288f9c274dde" translate="yes" xml:space="preserve">
          <source>ByteSliceFromString returns a NUL-terminated slice of bytes containing the text of s. If s contains a NUL byte at any location, it returns (nil, EINVAL).</source>
          <target state="translated">ByteSliceFromString возвращает NUL-терминированный срез байтов,содержащий текст s.Если s содержит NUL-байт в любом месте,то возвращается (nil,EINVAL).</target>
        </trans-unit>
        <trans-unit id="bff819ab0f5b5e1aa7cf8d780e4bca25b8ab6fb3" translate="yes" xml:space="preserve">
          <source>ByteWriter is the interface that wraps the WriteByte method.</source>
          <target state="translated">ByteWriter-это интерфейс,обёртывающий метод WriteByte.</target>
        </trans-unit>
        <trans-unit id="8a463d6abf5a87eee5bdfdbd6797570bddff6553" translate="yes" xml:space="preserve">
          <source>Bytes returns a slice of length b.Len() holding the unread portion of the buffer. The slice is valid for use only until the next buffer modification (that is, only until the next call to a method like Read, Write, Reset, or Truncate). The slice aliases the buffer content at least until the next buffer modification, so immediate changes to the slice will affect the result of future reads.</source>
          <target state="translated">Байт возвращает кусок длины b.Len(),удерживающий непрочитанную часть буфера.Этот срез действителен только до следующего изменения буфера (т.е.только до следующего вызова метода типа Read,Write,Reset или Truncate).Слайз псевдонимов содержимого буфера,по крайней мере,до следующей модификации буфера,поэтому немедленные изменения слайса повлияют на результат последующих чтений.</target>
        </trans-unit>
        <trans-unit id="2e50dca4afc19f02f1781881fca1454838a8fe54" translate="yes" xml:space="preserve">
          <source>Bytes returns the absolute value of x as a big-endian byte slice.</source>
          <target state="translated">Байты возвращают абсолютное значение x в виде дольки большого байта.</target>
        </trans-unit>
        <trans-unit id="fd81aa008eaca297f56d5d20be64044f3fd3dd37" translate="yes" xml:space="preserve">
          <source>Bytes returns the bytes for the absolute value of x in little- endian binary representation; x must be an Int.</source>
          <target state="translated">Байты возвращают байты для абсолютного значения x в двоичном представлении little-endian;x должно быть Int.</target>
        </trans-unit>
        <trans-unit id="a4b934536111abb43c8416065329859723d67ab4" translate="yes" xml:space="preserve">
          <source>Bytes returns the data over which the index was created. It must not be modified.</source>
          <target state="translated">Байты возвращают данные,поверх которых был создан индекс.Он не должен быть изменен.</target>
        </trans-unit>
        <trans-unit id="1e205da73fdd6063e2f53de480b8d595a155bfc5" translate="yes" xml:space="preserve">
          <source>Bytes returns the most recent token generated by a call to Scan. The underlying array may point to data that will be overwritten by a subsequent call to Scan. It does no allocation.</source>
          <target state="translated">Байты возвращают самый последний маркер,сгенерированный при вызове сканирования.Подлежащий массив может указывать на данные,которые будут перезаписаны последующим вызовом Scan.Он не распределяется.</target>
        </trans-unit>
        <trans-unit id="4f37978f623b402dc557529380e27a17d5aab9e0" translate="yes" xml:space="preserve">
          <source>Bytes returns v's underlying value. It panics if v's underlying value is not a slice of bytes.</source>
          <target state="translated">Байты возвращают базовую величину v.Она паникует,если базовое значение v не является куском байта.</target>
        </trans-unit>
        <trans-unit id="cf3cdb80980c06d234ad15ac8d6c7d4b17eb1c21" translate="yes" xml:space="preserve">
          <source>CAUTION: This interface does not support the import of locally vendored packages. See &lt;a href=&quot;https://golang.org/s/go15vendor&quot;&gt;https://golang.org/s/go15vendor&lt;/a&gt;. If possible, external implementations should implement ImporterFrom.</source>
          <target state="translated">ВНИМАНИЕ! Этот интерфейс не поддерживает импорт пакетов, поставляемых локально. См. &lt;a href=&quot;https://golang.org/s/go15vendor&quot;&gt;Https://golang.org/s/go15vendor&lt;/a&gt; . Если возможно, внешние реализации должны реализовывать ImporterFrom.</target>
        </trans-unit>
        <trans-unit id="ab235f8b07aea6e23756b09920385103a680e3aa" translate="yes" xml:space="preserve">
          <source>CIDRMask</source>
          <target state="translated">CIDRMask</target>
        </trans-unit>
        <trans-unit id="1c94aa7324cdb2cb904f9d173e460285e638501f" translate="yes" xml:space="preserve">
          <source>CIDRMask returns an IPMask consisting of 'ones' 1 bits followed by 0s up to a total length of 'bits' bits. For a mask of this form, CIDRMask is the inverse of IPMask.Size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610fd2d199248e3ae5def13e3d6ea752b04347c3" translate="yes" xml:space="preserve">
          <source>CIDRMask returns an IPMask consisting of `ones' 1 bits followed by 0s up to a total length of `bits' bits. For a mask of this form, CIDRMask is the inverse of IPMask.Size.</source>
          <target state="translated">CIDRMask возвращает IPMask,состоящую из 1 бита ``костей'',за которыми следуют 0s до общей длины битов `бит'.Для маски такой формы,CIDRMask является обратной стороной IPMask.Size.</target>
        </trans-unit>
        <trans-unit id="977330e1b93f52c949bfe749d1c4a8ac402ce621" translate="yes" xml:space="preserve">
          <source>CMYK is an in-memory image whose At method returns color.CMYK values.</source>
          <target state="translated">CMYK-это изображение в памяти,которое по методу At возвращает значения color.CMYK.</target>
        </trans-unit>
        <trans-unit id="5577b77166da8b8f97d578666c387cbb318d2199" translate="yes" xml:space="preserve">
          <source>CMYK represents a fully opaque CMYK color, having 8 bits for each of cyan, magenta, yellow and black.</source>
          <target state="translated">CMYK представляет собой полностью непрозрачный CMYK цвет,имеющий по 8 бит для каждого из голубого,пурпурного,желтого и черного цветов.</target>
        </trans-unit>
        <trans-unit id="2f107458edf70d5d8784cc485af494c3ddf26bca" translate="yes" xml:space="preserve">
          <source>CMYKModel is the Model for CMYK colors.</source>
          <target state="translated">CMYKModel-это модель для CMYK цветов.</target>
        </trans-unit>
        <trans-unit id="1dcfe8b3871bde23c33a86fd34caf4ceb3d81b9c" translate="yes" xml:space="preserve">
          <source>CMYKToRGB converts a CMYK quadruple to an RGB triple.</source>
          <target state="translated">CMYKToRGB преобразует CMYK-четверку в RGB-тройку.</target>
        </trans-unit>
        <trans-unit id="cb4b09ded8668017a3d6bbb16fc8b707e98152f5" translate="yes" xml:space="preserve">
          <source>COFFSymbol represents single COFF symbol table record.</source>
          <target state="translated">Символ COFFS представляет собой единственную запись таблицы символов COFF.</target>
        </trans-unit>
        <trans-unit id="3148d8e04fc6cddb8324aab7b41baaecb660939b" translate="yes" xml:space="preserve">
          <source>COffset returns the index of the first element of Cb or Cr that corresponds to the pixel at (x, y).</source>
          <target state="translated">COffset возвращает индекс первого элемента Cb или Cr,который соответствует пикселю на (x,y).</target>
        </trans-unit>
        <trans-unit id="8c27dd514d68b447ad3ae459b747e2fe4297abc0" translate="yes" xml:space="preserve">
          <source>CPUProfile panics. It formerly provided raw access to chunks of a pprof-format profile generated by the runtime. The details of generating that format have changed, so this functionality has been removed.</source>
          <target state="translated">Паника CPUProfile.Раньше она обеспечивала необработанный доступ к кускам профиля pprof-формата,генерируемого во время выполнения.Детали генерации этого формата изменились,поэтому эта функциональность была удалена.</target>
        </trans-unit>
        <trans-unit id="d070e9c40d008404324ad69f68a104813b438177" translate="yes" xml:space="preserve">
          <source>CRAMMD5Auth returns an Auth that implements the CRAM-MD5 authentication mechanism as defined in RFC 2195. The returned Auth uses the given username and secret to authenticate to the server using the challenge-response mechanism.</source>
          <target state="translated">CRAMMD5Auth возвращает Auth,который реализует механизм аутентификации CRAM-MD5,как определено в RFC 2195.Возвращаемый Auth использует заданное имя пользователя и секрет для аутентификации на сервере с помощью механизма проверки подлинности.</target>
        </trans-unit>
        <trans-unit id="745027bc41472d45980cddb096773a4f84ccc98d" translate="yes" xml:space="preserve">
          <source>CRTValue contains the precomputed Chinese remainder theorem values.</source>
          <target state="translated">CRTValue содержит предварительно вычисленные значения китайской теоремы об остатках.</target>
        </trans-unit>
        <trans-unit id="f1fb1514db7c9527b7daa27065c1ccc1f41d7c4b" translate="yes" xml:space="preserve">
          <source>CSS encapsulates known safe content that matches any of:</source>
          <target state="translated">CSS инкапсулирует известный безопасный контент,который соответствует любому из них:</target>
        </trans-unit>
        <trans-unit id="f92f25bf90673d8d059ee8d957be5d5aaa212a63" translate="yes" xml:space="preserve">
          <source>Call Next to advance the iterator, and Key/Value to access each entry. Next returns false when the iterator is exhausted. MapRange follows the same iteration semantics as a range statement.</source>
          <target state="translated">Вызовите &quot;Далее&quot; для продвижения итератора и &quot;Ключ/значение&quot; для доступа к каждой записи.Следующий возвращает false,когда итератор исчерпан.MapRange следует той же итерационной семантике,что и утверждение диапазона.</target>
        </trans-unit>
        <trans-unit id="118156dfe47c64304a43b6fe1ecd5f7d303a7bb3" translate="yes" xml:space="preserve">
          <source>Call calls the function v with the input arguments in. For example, if len(in) == 3, v.Call(in) represents the Go call v(in[0], in[1], in[2]). Call panics if v's Kind is not Func. It returns the output results as Values. As in Go, each input argument must be assignable to the type of the function's corresponding input parameter. If v is a variadic function, Call creates the variadic slice parameter itself, copying in the corresponding values.</source>
          <target state="translated">Вызов вызывает функцию v с входными аргументами.Например,если len(in)==3,то v.Call(in)представляет собой Go call v(in[0],in[1],in[2]).Вызов паники,если Kind v не является Func.Возвращает выходной результат в виде Values.Как и в Go,каждый входной аргумент должен быть присвоен типу соответствующего входного параметра функции.Если v является вариадической функцией,то Call сам создает вариадический параметр среза,копируя его в соответствующие значения.</target>
        </trans-unit>
        <trans-unit id="6710d59342e8f6e8d403ac622a838f3bc147d96d" translate="yes" xml:space="preserve">
          <source>Call does a JavaScript call to the method m of value v with the given arguments. It panics if v has no method m. The arguments get mapped to JavaScript values according to the ValueOf function.</source>
          <target state="translated">Вызов делает JavaScript вызов метода m value v с заданными аргументами.Он паникует,если v не имеет метода m.Аргументы привязываются к значениям JavaScript в соответствии с функцией ValueOf.</target>
        </trans-unit>
        <trans-unit id="565e55a0c32cf7eff3af3e89a785aa6c9178e700" translate="yes" xml:space="preserve">
          <source>Call invokes the named function, waits for it to complete, and returns its error status.</source>
          <target state="translated">Вызов вызывает именованную функцию,ждет ее завершения и возвращает статус ошибки.</target>
        </trans-unit>
        <trans-unit id="53b636c9f40f5a663ef2162f73a7b02c6ae8df7a" translate="yes" xml:space="preserve">
          <source>Call represents an active RPC.</source>
          <target state="translated">Вызов представляет собой активный RPC.</target>
        </trans-unit>
        <trans-unit id="42512af352e3a9143ab5a1551cc60bc2ee819eb1" translate="yes" xml:space="preserve">
          <source>CallSlice calls the variadic function v with the input arguments in, assigning the slice in[len(in)-1] to v's final variadic argument. For example, if len(in) == 3, v.CallSlice(in) represents the Go call v(in[0], in[1], in[2]...). CallSlice panics if v's Kind is not Func or if v is not variadic. It returns the output results as Values. As in Go, each input argument must be assignable to the type of the function's corresponding input parameter.</source>
          <target state="translated">CallSlice вызывает вариадическую функцию v с входными аргументами in,присваивая ломтик in[len(in)-1]последнему вариадическому аргументу v.Например,если len(in)==3,то v.CallSlice(in)представляет собой вызов Go v(in[0],in[1],in[2]...).CallSlice паникует,если v's Kind не является Func или v не является вариадическим.Возвращает выходной результат в виде Values.Как и в Go,каждый входной аргумент должен быть присвоен типу соответствующего входного параметра функции.</target>
        </trans-unit>
        <trans-unit id="6ccfaaae6e5365f5a9c5349e604bae17caa0cd30" translate="yes" xml:space="preserve">
          <source>Caller reports file and line number information about function invocations on the calling goroutine's stack. The argument skip is the number of stack frames to ascend, with 0 identifying the caller of Caller. (For historical reasons the meaning of skip differs between Caller and Callers.) The return values report the program counter, file name, and line number within the file of the corresponding call. The boolean ok is false if it was not possible to recover the information.</source>
          <target state="translated">Звонящий сообщает информацию о файле и номере линии о вызовах функции на стеке вызывающего горутина.Пропуском аргумента называется количество кадров стека для восхождения,при этом 0 идентифицирует абонента вызывающего горутина.(По историческим причинам значение пропуска различается между вызывающим и вызывающим абонентом).Возвращаемые значения сообщают счетчик программы,имя файла и номер строки в файле соответствующего вызова.Булевы ok являются ложными,если не удалось восстановить информацию.</target>
        </trans-unit>
        <trans-unit id="02ae9a5027491acdc64509b68ea3793e2a002174" translate="yes" xml:space="preserve">
          <source>Caller should close resp.Body when done reading from it.</source>
          <target state="translated">Звонящий должен закрыть тело,когда закончится чтение.</target>
        </trans-unit>
        <trans-unit id="03be0dfee4d9e39d0d117a1225a797fe3d2aa3a2" translate="yes" xml:space="preserve">
          <source>Callers fills the slice pc with the return program counters of function invocations on the calling goroutine's stack. The argument skip is the number of stack frames to skip before recording in pc, with 0 identifying the frame for Callers itself and 1 identifying the caller of Callers. It returns the number of entries written to pc.</source>
          <target state="translated">Звонящие заполняют ломтик pc возвращающимися программными счетчиками вызовов функций на стеке вызывающего горутина.Аргументом пропуска является количество кадров стека,которое необходимо пропустить перед записью в ПК,при этом 0 идентифицирует кадр для самого Callers и 1 идентифицирует вызывающего абонента Callers.Он возвращает количество записей,записанных в ПК.</target>
        </trans-unit>
        <trans-unit id="5a4b4218d3232d882f79940537de8c89b5fd061d" translate="yes" xml:space="preserve">
          <source>Callers should always process the n &amp;gt; 0 bytes returned before considering the error err. Doing so correctly handles I/O errors that happen after reading some bytes and also both of the allowed EOF behaviors.</source>
          <target state="translated">Вызывающие должны всегда обрабатывать возвращенные n&amp;gt; 0 байтов, прежде чем рассматривать ошибку err. Это правильно обрабатывает ошибки ввода-вывода, которые возникают после чтения некоторых байтов, а также оба допустимых поведения EOF.</target>
        </trans-unit>
        <trans-unit id="5500489165f32b46a8cb2a14a955f9a8a8615079" translate="yes" xml:space="preserve">
          <source>Callers that wish to set the fields in Writer.Header must do so before the first call to Write, Flush, or Close.</source>
          <target state="translated">Звонящие,которые хотят установить поля в Writer.Header,должны сделать это перед первым вызовом Write,Flush или Close.</target>
        </trans-unit>
        <trans-unit id="b857a35e7ef780b3bca39a750115fc4863a61aa5" translate="yes" xml:space="preserve">
          <source>CallersFrames takes a slice of PC values returned by Callers and prepares to return function/file/line information. Do not change the slice until you are done with the Frames.</source>
          <target state="translated">CallersFrames берет часть значений ПК,возвращаемых CallersFrame,и готовится к возврату информации о функции/файле/линии.Не меняйте фрагмент,пока не закончите работу с кадрами.</target>
        </trans-unit>
        <trans-unit id="a84e46e9c20e9e9bc4eb917cab523be97fdefd53" translate="yes" xml:space="preserve">
          <source>Calling Goexit from the main goroutine terminates that goroutine without func main returning. Since func main has not returned, the program continues execution of other goroutines. If all other goroutines exit, the program crashes.</source>
          <target state="translated">Вызов Goexit из главного goroutine завершает работу этого goroutine без возврата функции main.Так как функция main не вернулась,программа продолжает выполнение других goroutine.Если все остальные goroutine выйдут из программы,то произойдет сбой.</target>
        </trans-unit>
        <trans-unit id="dc5490ba97b9e986ad10d279577e4999816c63b0" translate="yes" xml:space="preserve">
          <source>Calling Multistream(false) disables this behavior; disabling the behavior can be useful when reading file formats that distinguish individual gzip data streams or mix gzip data streams with other data streams. In this mode, when the Reader reaches the end of the data stream, Read returns io.EOF. The underlying reader must implement io.ByteReader in order to be left positioned just after the gzip stream. To start the next stream, call z.Reset(r) followed by z.Multistream(false). If there is no next stream, z.Reset(r) will return io.EOF.</source>
          <target state="translated">Вызов Multistream(false)отключает это поведение;отключение может быть полезно при чтении файловых форматов,различающих отдельные потоки данных gzip,или при смешивании потоков данных gzip с другими потоками данных.В этом режиме,когда считывающее устройство достигает конца потока данных,Read возвращает io.EOF.Для того чтобы оставить устройство чтения io.ByteReader на месте сразу после потока gzip,оно должно быть встроено в устройство чтения.Для запуска следующего потока необходимо вызвать z.Reset(r),а затем z.Multistream(false).Если нет следующего потока,то z.Reset(r)вернет io.EOF.</target>
        </trans-unit>
        <trans-unit id="4710fe1acfac37179ab4f289d05ef3abb75eaede" translate="yes" xml:space="preserve">
          <source>Calling Peek prevents a UnreadByte or UnreadRune call from succeeding until the next read operation.</source>
          <target state="translated">Calling Peek предотвращает успешный вызов UnreadByte или UnreadRune до следующей операции чтения.</target>
        </trans-unit>
        <trans-unit id="fdec16c5797808f1fc79d6af2ca8ac766041238a" translate="yes" xml:space="preserve">
          <source>Calling Read on special types like TypeLink, TypeSymlink, TypeChar, TypeBlock, TypeDir, and TypeFifo returns (0, io.EOF) regardless of what the Header.Size claims.</source>
          <target state="translated">При вызове Read на специальных типах,таких как TypeLink,TypeSymlink,TypeChar,TypeBlock,TypeDir и TypeFifo возвращается (0,io.EOF)независимо от того,что утверждается в файле Header.Size.</target>
        </trans-unit>
        <trans-unit id="b56745d4818c01d2eb9c7bc08a036418118904a0" translate="yes" xml:space="preserve">
          <source>Calling Write on special types like TypeLink, TypeSymlink, TypeChar, TypeBlock, TypeDir, and TypeFifo returns (0, ErrWriteTooLong) regardless of what the Header.Size claims.</source>
          <target state="translated">Вызов Write на специальных типах,таких как TypeLink,TypeSymlink,TypeChar,TypeBlock,TypeDir и TypeFifo возвращает (0,ErrWriteTooLong)независимо от того,что заявлено в файле Header.Size.</target>
        </trans-unit>
        <trans-unit id="6434d3f3a5f0575affa5664bb509e7c8b0a1396c" translate="yes" xml:space="preserve">
          <source>Calling this function will turn off automatic session ticket key rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4fdb7a85ec6970a8fd4027def05274bf398ff4" translate="yes" xml:space="preserve">
          <source>Calls to Scan will invoke the error handler err if they encounter a syntax error and err is not nil. Also, for each error encountered, the Scanner field ErrorCount is incremented by one. The mode parameter determines how comments are handled.</source>
          <target state="translated">Вызовы на Сканирование будут вызывать ошибку-обработчик,если они столкнутся с синтаксической ошибкой,а ошибка не равна нулю.Кроме того,при каждой обнаруженной ошибке поле Scanner ErrorCount увеличивается на единицу.Параметр режима определяет,как будут обрабатываться комментарии.</target>
        </trans-unit>
        <trans-unit id="9520d1b14d042e07c9d98804cc798cd3d2a5e80a" translate="yes" xml:space="preserve">
          <source>CanAddr reports whether the value's address can be obtained with Addr. Such values are called addressable. A value is addressable if it is an element of a slice, an element of an addressable array, a field of an addressable struct, or the result of dereferencing a pointer. If CanAddr returns false, calling Addr will panic.</source>
          <target state="translated">CanAddr сообщает,можно ли получить адрес значения с помощью Addr.Такие значения называются адресными.Значение может быть адресным,если оно является элементом среза,элементом адресного массива,полем адресной структуры или результатом разыменования указателя.Если CanAddr вернет false,вызов Addr вызовет панику.</target>
        </trans-unit>
        <trans-unit id="a9e93f69f0267b95bffc55cf6d2bce8ffc82c90c" translate="yes" xml:space="preserve">
          <source>CanBackquote</source>
          <target state="translated">CanBackquote</target>
        </trans-unit>
        <trans-unit id="4e3695d8bbea64e7cfee0c2febc4baffda231b85" translate="yes" xml:space="preserve">
          <source>CanBackquote reports whether the string s can be represented unchanged as a single-line backquoted string without control characters other than tab.</source>
          <target state="translated">CanBackquote сообщает,может ли строка s быть представлена без изменений в виде однострочной строки в обратных кавычках без управляющих символов,кроме табуляции.</target>
        </trans-unit>
        <trans-unit id="78221e784584f0078bc92b5760d985ffb9359714" translate="yes" xml:space="preserve">
          <source>CanInterface reports whether Interface can be used without panicking.</source>
          <target state="translated">CanInterface сообщает,можно ли использовать интерфейс без паники.</target>
        </trans-unit>
        <trans-unit id="a4cf39f0aa0cf531b70a8777365e8930d66ae49b" translate="yes" xml:space="preserve">
          <source>CanSet reports whether the value of v can be changed. A Value can be changed only if it is addressable and was not obtained by the use of unexported struct fields. If CanSet returns false, calling Set or any type-specific setter (e.g., SetBool, SetInt) will panic.</source>
          <target state="translated">CanSet сообщает,можно ли изменить значение v.Значение может быть изменено только в том случае,если оно адресное и не было получено с помощью полей необработанной структуры.Если CanSet вернет false,то вызов Set или любого специфического для данного типа сеттера (например,SetBool,SetInt)вызовет панику.</target>
        </trans-unit>
        <trans-unit id="24a49319ca493616d5fa4fa87e1716f05207717f" translate="yes" xml:space="preserve">
          <source>CancelRequest cancels an in-flight request by closing its connection. CancelRequest should only be called after RoundTrip has returned.</source>
          <target state="translated">CancelRequest отменяет запрос на полет,закрыв его соединение.CancelRequest должен быть вызван только после возвращения RoundTrip.</target>
        </trans-unit>
        <trans-unit id="d04bdcea13bcd3bdd6348c2940648b9b6511c540" translate="yes" xml:space="preserve">
          <source>Canceled is the error returned by Context.Err when the context is canceled.</source>
          <target state="translated">Отменяется ошибка,возвращаемая Context.Err при отмене контекста.</target>
        </trans-unit>
        <trans-unit id="1e7f338b3f2968bf411cdc0aae8bcbdbfc36af1f" translate="yes" xml:space="preserve">
          <source>Canceling this context releases resources associated with it, so code should call cancel as soon as the operations running in this Context complete.</source>
          <target state="translated">Отмена этого контекста освобождает ресурсы,связанные с ним,поэтому код должен вызвать отмену,как только операции,запущенные в этом контексте,завершатся.</target>
        </trans-unit>
        <trans-unit id="c2af769757a430f4dad8d1af9ff5c57b16b4ebdd" translate="yes" xml:space="preserve">
          <source>Canceling this context releases resources associated with it, so code should call cancel as soon as the operations running in this Context complete:</source>
          <target state="translated">Отмена этого контекста освобождает ресурсы,связанные с ним,поэтому код должен вызвать отмену,как только операции,запущенные в этом контексте,завершатся:</target>
        </trans-unit>
        <trans-unit id="076b17958a05cb472fa64e406ea55e8b9d2a4270" translate="yes" xml:space="preserve">
          <source>Canon returns the canonical version of r. The returned rectangle has minimum and maximum coordinates swapped if necessary so that it is well-formed.</source>
          <target state="translated">Canon возвращает каноническую версию r.Возвращаемый прямоугольник имеет минимальные и максимальные координаты,поменянные при необходимости так,чтобы он был хорошо сформирован.</target>
        </trans-unit>
        <trans-unit id="955b396a548b98a7408f3e25b749827717df449d" translate="yes" xml:space="preserve">
          <source>CanonicalHeaderKey returns the canonical format of the header key s. The canonicalization converts the first letter and any letter following a hyphen to upper case; the rest are converted to lowercase. For example, the canonical key for &quot;accept-encoding&quot; is &quot;Accept-Encoding&quot;. If s contains a space or invalid header field bytes, it is returned without modifications.</source>
          <target state="translated">CanonicalHeaderKey возвращает канонический формат заголовочной клавиши s.Канонизация преобразует первую букву и любую букву,следующую за дефисом,в верхний регистр,остальные-в нижний регистр.Например,канонический ключ для &quot;accept-encoding&quot;-это &quot;Accept-Encoding&quot;.Если s содержит пробел или недействительные байты поля заголовка,то она возвращается без изменений.</target>
        </trans-unit>
        <trans-unit id="2b23fb17a1a69fd7b73a76bb40a7097d29243e47" translate="yes" xml:space="preserve">
          <source>CanonicalMIMEHeaderKey returns the canonical format of the MIME header key s. The canonicalization converts the first letter and any letter following a hyphen to upper case; the rest are converted to lowercase. For example, the canonical key for &quot;accept-encoding&quot; is &quot;Accept-Encoding&quot;. MIME header keys are assumed to be ASCII only. If s contains a space or invalid header field bytes, it is returned without modifications.</source>
          <target state="translated">CanonicalMIMEHeaderKey возвращает канонический формат MIME заголовочной клавиши s.Канонизация преобразует первую букву и любую букву,следующую за дефисом,в верхний регистр,остальные-в строчный.Например,канонический ключ для &quot;accept-encoding&quot;-это &quot;Accept-Encoding&quot;.Клавишами MIME-заголовков считаются только ASCII.Если s содержит пробел или недействительные байты поля заголовка,он возвращается без изменений.</target>
        </trans-unit>
        <trans-unit id="ed0ee546d9c8e677c59e62830ae730eb46232fdc" translate="yes" xml:space="preserve">
          <source>Cap returns the capacity of the buffer's underlying byte slice, that is, the total space allocated for the buffer's data.</source>
          <target state="translated">Cap возвращает емкость ломтика байта,лежащего в основе буфера,т.е.общее пространство,выделенное под данные буфера.</target>
        </trans-unit>
        <trans-unit id="bbc6d32f023dd61bfc5cebe3046b61c0f76810e0" translate="yes" xml:space="preserve">
          <source>Cap returns the capacity of the builder's underlying byte slice. It is the total space allocated for the string being built and includes any bytes already written.</source>
          <target state="translated">Кепка возвращает вместимость байтового кусочка строителя.Это общее пространство,выделенное для строки,которая собирается,и включает в себя все уже написанные байты.</target>
        </trans-unit>
        <trans-unit id="ee5354b348838f7a1d94dcdaae1e7a7ecd556f4c" translate="yes" xml:space="preserve">
          <source>Cap returns v's capacity. It panics if v's Kind is not Array, Chan, or Slice.</source>
          <target state="translated">Кэп возвращает вместимость Визитёра.Он паникует,если Визитёры не Мэррей,Чан или Слайс.</target>
        </trans-unit>
        <trans-unit id="c6a561977254ff2870059baae45cac89214e315f" translate="yes" xml:space="preserve">
          <source>CapNames walks the regexp to find the names of capturing groups.</source>
          <target state="translated">CapNames ходит регэкспертом,чтобы найти имена групп захвата.</target>
        </trans-unit>
        <trans-unit id="6f9517c836ce60929e990358e7eb6e0b2e9fdc68" translate="yes" xml:space="preserve">
          <source>Carriage returns before newline characters are silently removed.</source>
          <target state="translated">Возврат вагона до того,как символы новой строки будут бесшумно удалены.</target>
        </trans-unit>
        <trans-unit id="be2bf5b72a47b7c7e2283e70ea0cf31afd8bde9b" translate="yes" xml:space="preserve">
          <source>CaseRange represents a range of Unicode code points for simple (one code point to one code point) case conversion. The range runs from Lo to Hi inclusive, with a fixed stride of 1. Deltas are the number to add to the code point to reach the code point for a different case for that character. They may be negative. If zero, it means the character is in the corresponding case. There is a special case representing sequences of alternating corresponding Upper and Lower pairs. It appears with a fixed Delta of</source>
          <target state="translated">CaseRange представляет собой набор точек кода Юникода для простого (одна точка кода в одну точку кода)преобразования регистра.Диапазон простирается от Lo до Hi включительно,с фиксированным шагом 1.Дельта-это число,которое нужно добавить к точке кода,чтобы достичь точки кода для другого регистра для этого символа.Они могут быть отрицательными.Если ноль,то это означает,что символ находится в соответствующем регистре.Существует особый случай,представляющий собой последовательности чередования соответствующих Верхней и Нижней пар.Он появляется с фиксированной дельтой из</target>
        </trans-unit>
        <trans-unit id="0242bb8f76d24fc855f5fd331326f647ebd09abb" translate="yes" xml:space="preserve">
          <source>CaseRanges is the table describing case mappings for all letters with non-self mappings.</source>
          <target state="translated">CaseRanges-это таблица,описывающая отображение кейсов для всех букв с несамоотобразованием.</target>
        </trans-unit>
        <trans-unit id="3b206a07c1e9d49addcc7990e688904da778cacb" translate="yes" xml:space="preserve">
          <source>Categories is the set of Unicode category tables.</source>
          <target state="translated">Категории-это набор таблиц категорий Unicode.</target>
        </trans-unit>
        <trans-unit id="c1df58bad0806dc23792f032f60a59a2fe418b1c" translate="yes" xml:space="preserve">
          <source>Cbrt</source>
          <target state="translated">Cbrt</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
