<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="go">
    <body>
      <group id="go">
        <trans-unit id="f55bd52960d8a9b74f8c169b63b303f83068df0d" translate="yes" xml:space="preserve">
          <source>See func Dial for a description of the network and address parameters.</source>
          <target state="translated">Описание параметров сети и адреса см.в разделе Функция Dial.</target>
        </trans-unit>
        <trans-unit id="27af5de3a2347f6faceaa84c4b1f14ae1dbd0c9d" translate="yes" xml:space="preserve">
          <source>See func Listen for a description of the network and address parameters.</source>
          <target state="translated">Описание параметров сети и адреса см.в разделе Функция Прослушать.</target>
        </trans-unit>
        <trans-unit id="6b6b3dee4908b79bcc47570b27eb5ceec2a78402" translate="yes" xml:space="preserve">
          <source>See func ListenPacket for a description of the network and address parameters.</source>
          <target state="translated">Описание параметров сети и адреса см.в разделе функционала ListenPacket.</target>
        </trans-unit>
        <trans-unit id="ad4f4bb8708490d77806cbbb7379b205b4ed91be" translate="yes" xml:space="preserve">
          <source>See package json to understand how non-string content is marshaled for embedding in JavaScript contexts.</source>
          <target state="translated">См.пакет json,чтобы понять,как маршируется нестрочное содержимое для встраивания в контекст JavaScript.</target>
        </trans-unit>
        <trans-unit id="6e66c2f2a3fcd4dca444d07ce7d1a4b916782623" translate="yes" xml:space="preserve">
          <source>See page 36 of RFC 959 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc959.txt&quot;&gt;https://www.ietf.org/rfc/rfc959.txt&lt;/a&gt;) for details of another form of response accepted:</source>
          <target state="translated">См. Страницу 36 RFC 959 ( &lt;a href=&quot;https://www.ietf.org/rfc/rfc959.txt&quot;&gt;https://www.ietf.org/rfc/rfc959.txt&lt;/a&gt; ) для получения подробной информации о другой форме принятого ответа:</target>
        </trans-unit>
        <trans-unit id="89753a3f5bb64713c93e9dd202de0a7448a21cee" translate="yes" xml:space="preserve">
          <source>See the Client.Do method documentation for details on how redirects are handled.</source>
          <target state="translated">Подробнее о том,как обрабатываются перенаправления,смотрите документацию по методу Client.Do.</target>
        </trans-unit>
        <trans-unit id="ca6b0bd4889c5a06e76626f48ec79733e1fde8b5" translate="yes" xml:space="preserve">
          <source>See the Decoder.Strict and Decoder.Entity fields' documentation.</source>
          <target state="translated">См.документацию по полям Decoder.Strict и Decoder.Entity.</target>
        </trans-unit>
        <trans-unit id="69633a7324ac73d11db8887864a0a74fd2f5588f" translate="yes" xml:space="preserve">
          <source>See the documentation for Marshal for details about the conversion of Go values to JSON.</source>
          <target state="translated">Подробнее о преобразовании значений Go в JSON см.в документации для маршала.</target>
        </trans-unit>
        <trans-unit id="45c89cab840adb83eec8d88d66bfe51744007d64" translate="yes" xml:space="preserve">
          <source>See the documentation for Marshal for details about the conversion of Go values to XML.</source>
          <target state="translated">Подробнее о преобразовании значений Go в XML см.в документации для Маршала.</target>
        </trans-unit>
        <trans-unit id="f6ad8d64ce7abf48e48759b114cf5bbde1ec1217" translate="yes" xml:space="preserve">
          <source>See the documentation for Reader's DotReader method for details about dot-encoding.</source>
          <target state="translated">Подробнее о точечном кодировании см.в документации к методу DotReader.</target>
        </trans-unit>
        <trans-unit id="07bb2782143cae54efbc20f97e601c6258fdfa3a" translate="yes" xml:space="preserve">
          <source>See the documentation for Unmarshal for details about the conversion of JSON into a Go value.</source>
          <target state="translated">Подробнее о преобразовании JSON в Go см.в документации для Unmarshal.</target>
        </trans-unit>
        <trans-unit id="5b7d9e398b9767ef1472ee8144b5fcbf7154f428" translate="yes" xml:space="preserve">
          <source>See the documentation for the DotReader method for details about dot-encoding.</source>
          <target state="translated">См.документацию по методу DotReader для получения подробной информации о точечном кодировании.</target>
        </trans-unit>
        <trans-unit id="20a56feb05a514c49115ca9854f4e8b6ab081007" translate="yes" xml:space="preserve">
          <source>See the documentation of ErrorCode for details.</source>
          <target state="translated">Подробнее см.документацию по ErrorCode.</target>
        </trans-unit>
        <trans-unit id="130b144345eef54088939126445f2041356e9967" translate="yes" xml:space="preserve">
          <source>See the net/http/pprof package for more details about all of the debug endpoints installed by this import.</source>
          <target state="translated">Более подробную информацию обо всех отладочных конечных точках,установленных данным импортом,можно найти в пакете net/http/pprof.</target>
        </trans-unit>
        <trans-unit id="8ea13af2c476fd8c34b53410467a8c4eec967244" translate="yes" xml:space="preserve">
          <source>See the net/http/pprof package for more details.</source>
          <target state="translated">Подробности см.в пакете net/http/pprof.</target>
        </trans-unit>
        <trans-unit id="7129eb47abb47be846a8de8beba3573c278ce39c" translate="yes" xml:space="preserve">
          <source>See type IPNet and func ParseCIDR for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95f74a97d247876324f75dbbfb30fd3fdf53de6" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://www.pkware.com/appnote&quot;&gt;https://www.pkware.com/appnote&lt;/a&gt;</source>
          <target state="translated">См .: &lt;a href=&quot;https://www.pkware.com/appnote&quot;&gt;https://www.pkware.com/appnote&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="421cab07939e4ef921a875d22fec2c50b6b26cc4" translate="yes" xml:space="preserve">
          <source>Seed returns the private key seed corresponding to priv. It is provided for interoperability with RFC 8032. RFC 8032's private keys correspond to seeds in this package.</source>
          <target state="translated">Посевной материал возвращает посевной материал приватного ключа,соответствующий приватному.Предусмотрена функциональная совместимость с RFC 8032.Частные ключи RFC 8032 соответствуют семенам в этом пакете.</target>
        </trans-unit>
        <trans-unit id="b24f14f5efbc89ced2f3c041e71ddf2e16d01a87" translate="yes" xml:space="preserve">
          <source>Seed uses the provided seed value to initialize the default Source to a deterministic state. If Seed is not called, the generator behaves as if seeded by Seed(1). Seed values that have the same remainder when divided by 2&amp;sup3;&amp;sup1;-1 generate the same pseudo-random sequence. Seed, unlike the Rand.Seed method, is safe for concurrent use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2daea0c21550e6b91614c2942780e2e38582d89" translate="yes" xml:space="preserve">
          <source>Seed uses the provided seed value to initialize the default Source to a deterministic state. If Seed is not called, the generator behaves as if seeded by Seed(1). Seed values that have the same remainder when divided by 2^31-1 generate the same pseudo-random sequence. Seed, unlike the Rand.Seed method, is safe for concurrent use.</source>
          <target state="translated">Посевной материал использует предоставленное начальное значение для инициализации источника по умолчанию Источник до детерминированного состояния.Если Seed не вызывается,генератор ведет себя так,как если бы его посылал Seed(1).Значения посылки,которые при делении на 2^31-1 имеют одинаковый остаток,генерируют одну и ту же псевдослучайную последовательность.Seed,в отличие от метода Rand.Seed,безопасен для одновременного использования.</target>
        </trans-unit>
        <trans-unit id="06599ffd87d9ecfcc5955a8a8f6f2e80af71b779" translate="yes" xml:space="preserve">
          <source>Seed uses the provided seed value to initialize the generator to a deterministic state. Seed should not be called concurrently with any other Rand method.</source>
          <target state="translated">Посевной материал использует предоставленную посевную величину для инициализации генератора до детерминированного состояния.Зерно не должно называться одновременно с любым другим методом Rand.</target>
        </trans-unit>
        <trans-unit id="63eada0c1ee90c191cced8ff6a478d23ec01c7bb" translate="yes" xml:space="preserve">
          <source>Seek implements the io.Seeker interface.</source>
          <target state="translated">Seek реализует интерфейс io.Seeker.</target>
        </trans-unit>
        <trans-unit id="410f9d629b5b2020b5303452364dec83676d0a30" translate="yes" xml:space="preserve">
          <source>Seek positions the Reader at offset off in the encoded entry stream. Offset 0 can be used to denote the first entry.</source>
          <target state="translated">Ищите позиции считывателя со смещением в кодированном потоке входных данных.Смещение 0 может быть использовано для обозначения первой записи.</target>
        </trans-unit>
        <trans-unit id="73550a62d2076f2c392030c22ea826a5948745a2" translate="yes" xml:space="preserve">
          <source>Seek restores the line table reader to a position returned by Tell.</source>
          <target state="translated">Seek восстанавливает чтение строчной таблицы в положение,возвращенное Tell.</target>
        </trans-unit>
        <trans-unit id="6d637ad9eaafe14fbed4d5e3bc3eb33df03f11cb" translate="yes" xml:space="preserve">
          <source>Seek sets the offset for the next Read or Write on file to offset, interpreted according to whence: 0 means relative to the origin of the file, 1 means relative to the current offset, and 2 means relative to the end. It returns the new offset and an error, if any. The behavior of Seek on a file opened with O_APPEND is not specified.</source>
          <target state="translated">Seek устанавливает смещение для следующего Чтения или записи в файл,интерпретируемое в соответствии с этим:0 означает относительно начала файла,1 означает относительно текущего смещения и 2 означает относительно конца.Возвращает новое смещение и ошибку,если таковая имеется.Поведение Seek на файле,открытом с O_APPEND,не определено.</target>
        </trans-unit>
        <trans-unit id="e00a273e91af976fc6df810663ccae8e6326bc28" translate="yes" xml:space="preserve">
          <source>Seek sets the offset for the next Read or Write to offset, interpreted according to whence: SeekStart means relative to the start of the file, SeekCurrent means relative to the current offset, and SeekEnd means relative to the end. Seek returns the new offset relative to the start of the file and an error, if any.</source>
          <target state="translated">Seek устанавливает смещение для следующего Чтения или Запись в смещение,интерпретируемое в соответствии с интерпретацией:SeekStart означает относительно начала файла,SeekCurrent означает относительно текущего смещения,а SeekEnd означает относительно конца.Seek возвращает новое смещение относительно начала файла и ошибку,если таковая имеется.</target>
        </trans-unit>
        <trans-unit id="f2691430f4c04cd93d687e7abb0ccf591170c83f" translate="yes" xml:space="preserve">
          <source>Seek whence values.</source>
          <target state="translated">Ищите откуда значения.</target>
        </trans-unit>
        <trans-unit id="69cfaf772b14f0b576e9cb0bbd8f02155636d19d" translate="yes" xml:space="preserve">
          <source>SeekPC returns the Entry for the compilation unit that includes pc, and positions the reader to read the children of that unit. If pc is not covered by any unit, SeekPC returns ErrUnknownPC and the position of the reader is undefined.</source>
          <target state="translated">SeekPC возвращает Entry для модуля компиляции,включающего pc,и позиционирует устройство чтения для чтения дочерних элементов этого модуля.Если ПК не покрыт никаким модулем,SeekPC возвращает ErrUnknownPC и положение считывающего устройства не определено.</target>
        </trans-unit>
        <trans-unit id="ce674d68613294249c458dda3fd950d087fbda52" translate="yes" xml:space="preserve">
          <source>SeekPC sets *entry to the LineEntry that includes pc and positions the reader on the next entry in the line table. If necessary, this will seek backwards to find pc.</source>
          <target state="translated">SeekPC устанавливает *вход в LineEntry,который включает pc и позиционирует читателя на следующей записи в таблице строк.При необходимости,он будет искать в обратном направлении,чтобы найти pc.</target>
        </trans-unit>
        <trans-unit id="9d91685eee68f0702fc5f565a2ad58bdb01cbd6c" translate="yes" xml:space="preserve">
          <source>Seeker is the interface that wraps the basic Seek method.</source>
          <target state="translated">Seeker-это интерфейс,обертывающий основной метод Seek.</target>
        </trans-unit>
        <trans-unit id="c221b3bf48536c91e36f1aa582e0e6ad14671a86" translate="yes" xml:space="preserve">
          <source>Seeking to an offset before the start of the file is an error. Seeking to any positive offset is legal, but the behavior of subsequent I/O operations on the underlying object is implementation-dependent.</source>
          <target state="translated">Поиск смещения до запуска файла является ошибкой.Поиск любого положительного смещения легален,но поведение последующих операций ввода/вывода над лежащим в основе объектом зависит от реализации.</target>
        </trans-unit>
        <trans-unit id="d283b12149f88184eedb3514ba9c006d88d9d635" translate="yes" xml:space="preserve">
          <source>Segment returns the first Segment with the given name, or nil if no such segment exists.</source>
          <target state="translated">Сегмент возвращает первый Сегмент с заданным именем,или нулевой,если такого сегмента не существует.</target>
        </trans-unit>
        <trans-unit id="4ee9c170709717ea62d8ec2ac63808bf3b81d532" translate="yes" xml:space="preserve">
          <source>Select executes a select operation described by the list of cases. Like the Go select statement, it blocks until at least one of the cases can proceed, makes a uniform pseudo-random choice, and then executes that case. It returns the index of the chosen case and, if that case was a receive operation, the value received and a boolean indicating whether the value corresponds to a send on the channel (as opposed to a zero value received because the channel is closed).</source>
          <target state="translated">Выбор выполняет операцию выбора,описанную в списке случаев.Как и оператор Go select,он блокирует до тех пор,пока,по крайней мере,один из случаев не может быть продолжен,делает единообразный псевдослучайный выбор,а затем выполняет этот случай.Он возвращает индекс выбранного случая и,если этот случай был операцией приема,полученное значение и булевую индикацию,показывающую,соответствует ли значение отправлению по каналу (в противоположность полученному нулевому значению,поскольку канал закрыт).</target>
        </trans-unit>
        <trans-unit id="9f23aae7e3512dd0773f6a470359d03ccb841782" translate="yes" xml:space="preserve">
          <source>Select executes a select operation described by the list of cases. Like the Go select statement, it blocks until at least one of the cases can proceed, makes a uniform pseudo-random choice, and then executes that case. It returns the index of the chosen case and, if that case was a receive operation, the value received and a boolean indicating whether the value corresponds to a send on the channel (as opposed to a zero value received because the channel is closed). Select supports a maximum of 65536 cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7716a94c0a405511b91cc23c646dfce03e542371" translate="yes" xml:space="preserve">
          <source>SelectionKind describes the kind of a selector expression x.f (excluding qualified identifiers).</source>
          <target state="translated">SelectionKind описывает вид селекторного выражения x.f (исключая квалифицированные идентификаторы).</target>
        </trans-unit>
        <trans-unit id="656dfc577aeb6e9f277a9a8820fcfc6e5db75f21" translate="yes" xml:space="preserve">
          <source>SelectionString returns the string form of s. The Qualifier controls the printing of package-level objects, and may be nil.</source>
          <target state="translated">SelectionString возвращает строковую форму s.Квалификатор управляет распечаткой объектов на уровне пакетов и может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="edad40365c9764afdd964f9245649f6856af2d11" translate="yes" xml:space="preserve">
          <source>Send sends x on the channel v. It panics if v's kind is not Chan or if x's type is not the same type as v's element type. As in Go, x's value must be assignable to the channel's element type.</source>
          <target state="translated">Отправка отправляет x на канал v.Он паникует,если тип v не Chan или если тип x не совпадает с типом v элемента.Как и в Go,значение x должно быть присвоено типу элемента канала.</target>
        </trans-unit>
        <trans-unit id="2750b0f06411195ed08fefe45f59d520ab6f8353" translate="yes" xml:space="preserve">
          <source>SendMail</source>
          <target state="translated">SendMail</target>
        </trans-unit>
        <trans-unit id="1a5bbac84e0744da338847af3ed794816ef236ce" translate="yes" xml:space="preserve">
          <source>SendMail connects to the server at addr, switches to TLS if possible, authenticates with the optional mechanism a if possible, and then sends an email from address from, to addresses to, with message msg. The addr must include a port, as in &quot;mail.example.com:smtp&quot;.</source>
          <target state="translated">SendMail подключается к серверу по адресу addr,по возможности переключается на TLS,аутентифицируется с помощью опционального механизма a,если это возможно,а затем отправляет электронное сообщение с адреса,с адреса,на адрес,с сообщением msg.Аддр должен включать порт,как в &quot;mail.example.com:smtp&quot;.</target>
        </trans-unit>
        <trans-unit id="9866b4faed06fd643cf801f0e203a46a3fe6c756" translate="yes" xml:space="preserve">
          <source>Serve accepts incoming FastCGI connections on the listener l, creating a new goroutine for each. The goroutine reads requests and then calls handler to reply to them. If l is nil, Serve accepts connections from os.Stdin. If handler is nil, http.DefaultServeMux is used.</source>
          <target state="translated">Подача принимает входящие FastCGI соединения на слушателе l,создавая новый горутин для каждого.Горутин читает запросы,а затем звонит обработчику,чтобы тот ответил на них.Если l равен нулю,Serve принимает соединения от os.Stdin.Если обработчик равен нулю,используется http.DefaultServeMux.</target>
        </trans-unit>
        <trans-unit id="d8de44e0fb5292324dadb958bb0ec67283e1e920" translate="yes" xml:space="preserve">
          <source>Serve accepts incoming HTTP connections on the listener l, creating a new service goroutine for each. The service goroutines read requests and then call handler to reply to them.</source>
          <target state="translated">Serve принимает входящие HTTP соединения на слушателе l,создавая новый горутин сервиса для каждого.Горутины службы читают запросы,а затем звонят обработчику,чтобы тот ответил на них.</target>
        </trans-unit>
        <trans-unit id="fb2fbb4a3d173feafc83e986b5d91f4c043b98cd" translate="yes" xml:space="preserve">
          <source>Serve accepts incoming connections on the Listener l, creating a new service goroutine for each. The service goroutines read requests and then call srv.Handler to reply to them.</source>
          <target state="translated">Serve принимает входящие соединения на Listener l,создавая новый горутин услуг для каждого.Горутины сервиса читают запросы,а затем звонят srv.Handler,чтобы ответить на них.</target>
        </trans-unit>
        <trans-unit id="f65496b12ef6ef062ca261d02fdcc1afec4ce5ea" translate="yes" xml:space="preserve">
          <source>Serve always returns a non-nil error and closes l. After Shutdown or Close, the returned error is ErrServerClosed.</source>
          <target state="translated">Serve всегда возвращает нулевую ошибку и закрывает l.После выключения или закрытия возвращается ошибка ErrServerClosed.</target>
        </trans-unit>
        <trans-unit id="4671511496e9d853a658f8c526e4dbf184a2c34c" translate="yes" xml:space="preserve">
          <source>Serve always returns a non-nil error.</source>
          <target state="translated">Подача всегда возвращает ошибку без нулевой отметки.</target>
        </trans-unit>
        <trans-unit id="497078ba977bfc095dad2477b3172dcb26f1c0ab" translate="yes" xml:space="preserve">
          <source>Serve executes the provided Handler on the currently active CGI request, if any. If there's no current CGI environment an error is returned. The provided handler may be nil to use http.DefaultServeMux.</source>
          <target state="translated">Serve выполняет предоставленный обработчик по текущему активному запросу CGI,если таковой имеется.Если текущее CGI окружение отсутствует,возвращается ошибка.Прилагаемый обработчик может быть равен нулю для использования http.DefaultServeMux.</target>
        </trans-unit>
        <trans-unit id="dbfb7d2b5b789e7fe76f3c2462b4817839783a1b" translate="yes" xml:space="preserve">
          <source>ServeCodec is like ServeConn but uses the specified codec to decode requests and encode responses.</source>
          <target state="translated">ServeCodec похож на ServeConn,но использует указанный кодек для декодирования запросов и кодирования ответов.</target>
        </trans-unit>
        <trans-unit id="09ac76223546ffdd3d100d24b6bc49c0b7956df0" translate="yes" xml:space="preserve">
          <source>ServeConn runs the DefaultServer on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement. ServeConn uses the gob wire format (see package gob) on the connection. To use an alternate codec, use ServeCodec. See NewClient's comment for information about concurrent access.</source>
          <target state="translated">ServeConn запускает DefaultServer на одном соединении.ServeConn блокирует,обслуживая соединение до тех пор,пока клиент не повесит трубку.Звонящий обычно вызывает ServeConn в заявлении на ходу.ServeConn использует формат провода валика (см.пакет валика)при соединении.Чтобы использовать альтернативный кодек,используйте ServeCodec.См.комментарий NewClient для получения информации о параллельном доступе.</target>
        </trans-unit>
        <trans-unit id="d136d0992046f83551cea5f2576de13dc7e39384" translate="yes" xml:space="preserve">
          <source>ServeConn runs the JSON-RPC server on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement.</source>
          <target state="translated">ServeConn запускает JSON-RPC-сервер на одном соединении.ServeConn блокирует,обслуживая соединение до тех пор,пока клиент не повесит трубку.Звонящий обычно вызывает ServeConn в заявлении о переходе.</target>
        </trans-unit>
        <trans-unit id="2f01374418f76760c6cb616cbabd675e38909787" translate="yes" xml:space="preserve">
          <source>ServeConn runs the server on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement. ServeConn uses the gob wire format (see package gob) on the connection. To use an alternate codec, use ServeCodec. See NewClient's comment for information about concurrent access.</source>
          <target state="translated">ServeConn запускает сервер на одном соединении.ServeConn блокирует,обслуживая соединение до тех пор,пока клиент не повесит трубку.Звонящий обычно вызывает ServeConn в заявлении о выходе.ServeConn использует формат провода валика (см.пакет валика)при соединении.Чтобы использовать альтернативный кодек,используйте ServeCodec.См.комментарий NewClient для получения информации о параллельном доступе.</target>
        </trans-unit>
        <trans-unit id="ef53643ab98faf2b116983a1f327c585aaa8a435" translate="yes" xml:space="preserve">
          <source>ServeContent replies to the request using the content in the provided ReadSeeker. The main benefit of ServeContent over io.Copy is that it handles Range requests properly, sets the MIME type, and handles If-Match, If-Unmodified-Since, If-None-Match, If-Modified-Since, and If-Range requests.</source>
          <target state="translated">ServeContent отвечает на запрос,используя содержимое предоставленного ReadSeeker.Основным преимуществом ServeContent перед io.Copy является то,что он правильно обрабатывает запросы на диапазон,устанавливает тип MIME и обрабатывает If-Match,If-Unemodified-Since,If-None-Match,If-Modified-Since и If-Range запросы.</target>
        </trans-unit>
        <trans-unit id="cfd658fe667ad1d964897018a5c4cf11bec05335" translate="yes" xml:space="preserve">
          <source>ServeFile replies to the request with the contents of the named file or directory.</source>
          <target state="translated">ServeFile отвечает на запрос содержимым именованного файла или директории.</target>
        </trans-unit>
        <trans-unit id="049197d23952867737fe7bc77daa12a248c70057" translate="yes" xml:space="preserve">
          <source>ServeHTTP calls f(w, r).</source>
          <target state="translated">ServeHTTP вызывает f(w,r).</target>
        </trans-unit>
        <trans-unit id="4c4916bc850460672f4222f24dda17f824b214d6" translate="yes" xml:space="preserve">
          <source>ServeHTTP dispatches the request to the handler whose pattern most closely matches the request URL.</source>
          <target state="translated">ServeHTTP посылает запрос обработчику,чей шаблон наиболее точно соответствует URL запроса.</target>
        </trans-unit>
        <trans-unit id="21deb32922a44f4fb534ed8afc10e377cb3ed92e" translate="yes" xml:space="preserve">
          <source>ServeHTTP implements an http.Handler that answers RPC requests.</source>
          <target state="translated">ServeHTTP реализует http.Handler,отвечающий на запросы RPC.</target>
        </trans-unit>
        <trans-unit id="6b5f212880feffc9d4b20ece24bb964f1dfe9a0e" translate="yes" xml:space="preserve">
          <source>ServeHTTP should write reply headers and data to the ResponseWriter and then return. Returning signals that the request is finished; it is not valid to use the ResponseWriter or read from the Request.Body after or concurrently with the completion of the ServeHTTP call.</source>
          <target state="translated">ServeHTTP должен записать заголовки ответов и данные в ResponseWriter,а затем вернуть их.Возврат сигнализирует об окончании запроса,использование ResponseWriter или чтение из тела запроса после или одновременно с завершением вызова ServeHTTP не допустимо.</target>
        </trans-unit>
        <trans-unit id="643b76d4394a8e8ca4ec7165cbad824736ed0dab" translate="yes" xml:space="preserve">
          <source>ServeMux also takes care of sanitizing the URL request path and the Host header, stripping the port number and redirecting any request containing . or .. elements or repeated slashes to an equivalent, cleaner URL.</source>
          <target state="translated">ServeMux также заботится о дезинфекции пути запроса URL и заголовка Host,удаляя номер порта и перенаправляя любой запрос,содержащий ...или ...элементы или повторяющиеся косые черты,на эквивалентный,более чистый URL.</target>
        </trans-unit>
        <trans-unit id="c2c623da8699103087cc62f3c47b54b0c6fbdef4" translate="yes" xml:space="preserve">
          <source>ServeMux is an HTTP request multiplexer. It matches the URL of each incoming request against a list of registered patterns and calls the handler for the pattern that most closely matches the URL.</source>
          <target state="translated">ServeMux является мультиплексором HTTP-запросов.Он сопоставляет URL каждого входящего запроса со списком зарегистрированных шаблонов и вызывает обработчика для шаблона,который наиболее точно соответствует URL.</target>
        </trans-unit>
        <trans-unit id="d57d6d29bc00d69dcb5016e00c29678f29b25c20" translate="yes" xml:space="preserve">
          <source>ServeMux.Handle</source>
          <target state="translated">ServeMux.Handle</target>
        </trans-unit>
        <trans-unit id="a2ccb85e8b555a7018f6848932b3cf1638f89e04" translate="yes" xml:space="preserve">
          <source>ServeRequest is like ServeCodec but synchronously serves a single request. It does not close the codec upon completion.</source>
          <target state="translated">ServeRequest похож на ServeCodec,но синхронно обслуживает один запрос.Он не закрывает кодек по его завершению.</target>
        </trans-unit>
        <trans-unit id="914b527f3acbaa5705eeffe44b971ef90f12446b" translate="yes" xml:space="preserve">
          <source>ServeTLS accepts incoming HTTPS connections on the listener l, creating a new service goroutine for each. The service goroutines read requests and then call handler to reply to them.</source>
          <target state="translated">ServeTLS принимает входящие соединения HTTPS на слушателе l,создавая новый горутин услуг для каждого.Служебные гориллы читают запросы,а затем звонят обработчику,чтобы тот ответил на них.</target>
        </trans-unit>
        <trans-unit id="0a96e454a3074cfb2a672bba732fc55cf3ace063" translate="yes" xml:space="preserve">
          <source>ServeTLS accepts incoming connections on the Listener l, creating a new service goroutine for each. The service goroutines perform TLS setup and then read requests, calling srv.Handler to reply to them.</source>
          <target state="translated">ServeTLS принимает входящие соединения на Listener l,создавая новый горутин услуг для каждого.Горутины сервиса выполняют настройку TLS,а затем считывают запросы,вызывая srv.Handler для ответа на них.</target>
        </trans-unit>
        <trans-unit id="5d05c42df2acb99153f40488ff8b30bf621e7c31" translate="yes" xml:space="preserve">
          <source>ServeTLS always returns a non-nil error.</source>
          <target state="translated">ServeTLS всегда возвращает ошибку без нулевой отметки.</target>
        </trans-unit>
        <trans-unit id="49b6a1abd7e8e016f95152133848467bef1659cf" translate="yes" xml:space="preserve">
          <source>ServeTLS always returns a non-nil error. After Shutdown or Close, the returned error is ErrServerClosed.</source>
          <target state="translated">ServeTLS всегда возвращает ошибку без нулевой отметки.После выключения или закрытия возвращается ошибка ErrServerClosed.</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="fd27359b7f3750869c6d376d504d1fa87f6d2a64" translate="yes" xml:space="preserve">
          <source>Server (HTTP2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddf4403b77024142dd6473786b6571dc8b196f9" translate="yes" xml:space="preserve">
          <source>Server represents an RPC Server.</source>
          <target state="translated">Сервер представляет собой RPC-сервер.</target>
        </trans-unit>
        <trans-unit id="313ac33490fd78320856fae075839a276bcab472" translate="yes" xml:space="preserve">
          <source>Server returns a new TLS server side connection using conn as the underlying transport. The configuration config must be non-nil and must include at least one certificate or else set GetCertificate.</source>
          <target state="translated">Сервер возвращает новое соединение на стороне сервера TLS,используя коннектор в качестве основного транспорта.Конфигурация конфигурации не должна быть нулевой и должна включать в себя как минимум один сертификат или другой набор GetCertificate.</target>
        </trans-unit>
        <trans-unit id="e0b4e659e40eb8a8a1e289fa3271bf98ef6e2706" translate="yes" xml:space="preserve">
          <source>Server.Shutdown</source>
          <target state="translated">Server.Shutdown</target>
        </trans-unit>
        <trans-unit id="e8983457da1ab21a6c85c2a9507e94af92a8934d" translate="yes" xml:space="preserve">
          <source>ServerConn is an artifact of Go's early HTTP implementation. It is low-level, old, and unused by Go's current HTTP stack. We should have deleted it before Go 1.</source>
          <target state="translated">ServerConn-это артефакт ранней реализации Go HTTP.Он является низкоуровневым,старым и неиспользуемым текущим HTTP-стеком Go.Мы должны были удалить его перед Go 1.</target>
        </trans-unit>
        <trans-unit id="e48e77ca43f54c7c217d619efb9bd95f1a1f8aba" translate="yes" xml:space="preserve">
          <source>ServerError represents an error that has been returned from the remote side of the RPC connection.</source>
          <target state="translated">ServerError представляет собой ошибку,которая была возвращена с удаленной стороны RPC соединения.</target>
        </trans-unit>
        <trans-unit id="547b92e886182f3f71367607ff47558fb0fe8029" translate="yes" xml:space="preserve">
          <source>ServerInfo records information about an SMTP server.</source>
          <target state="translated">ServerInfo записывает информацию о SMTP-сервере.</target>
        </trans-unit>
        <trans-unit id="870594a7b5d015bba7a8d2c0875c56f2fce85f71" translate="yes" xml:space="preserve">
          <source>SessionResetter may be implemented by Conn to allow drivers to reset the session state associated with the connection and to signal a bad connection.</source>
          <target state="translated">NetworkResetter может быть реализован с помощью Conn,чтобы позволить драйверам сбросить состояние сеанса,связанное с соединением,и сигнализировать о плохом соединении.</target>
        </trans-unit>
        <trans-unit id="aab8e5c4d0aeae85893fd621bc37db1b1a73696a" translate="yes" xml:space="preserve">
          <source>Set assigns x to the value v. It panics if CanSet returns false. As in Go, x's value must be assignable to v's type.</source>
          <target state="translated">Установка присваивает x значению v.Она паникует,если CanSet возвращает false.Как и в &quot;Go&quot;,значение x должно быть присвоено типу &quot;v&quot;.</target>
        </trans-unit>
        <trans-unit id="1d2a8709f5b7f411cc9ba583a652581b21b6d185" translate="yes" xml:space="preserve">
          <source>Set is called once, in command line order, for each flag present. The flag package may call the String method with a zero-valued receiver, such as a nil pointer.</source>
          <target state="translated">Набор вызывается один раз,в порядке командной строки,для каждого присутствующего флага.Пакет флагов может вызвать метод String с нулевым значением приемника,например,нулевой указатель.</target>
        </trans-unit>
        <trans-unit id="e8fb40cfeae3d73e6b30e01495ac2c9fe7ff8cc2" translate="yes" xml:space="preserve">
          <source>Set sets the JavaScript property p of value v to ValueOf(x). It panics if v is not a JavaScript object.</source>
          <target state="translated">Установка устанавливает свойство JavaScript p значения v в значение ValueOf(x).Если v не является JavaScript-объектом,начнется паника.</target>
        </trans-unit>
        <trans-unit id="87f6096d8457ac4b04a70faa68ba0c62c9f61ecc" translate="yes" xml:space="preserve">
          <source>Set sets the header entries associated with key to the single element value. It replaces any existing values associated with key.</source>
          <target state="translated">Установка устанавливает значения заголовков,связанных с ключом,на единичное значение элемента.Он заменяет любые существующие значения,связанные с ключом.</target>
        </trans-unit>
        <trans-unit id="82fcf24728ab76cc9481c998a3f5414cead1eb36" translate="yes" xml:space="preserve">
          <source>Set sets the header entries associated with key to the single element value. It replaces any existing values associated with key. The key is case insensitive; it is canonicalized by textproto.CanonicalMIMEHeaderKey. To use non-canonical keys, assign to the map directly.</source>
          <target state="translated">Установка устанавливает значения заголовков,связанных с ключом,на единичное значение элемента.Он заменяет любые существующие значения,связанные с ключом.Клавиша не чувствительна к регистру;она канонизирована textproto.CanonicalMIMEHeaderKey.Чтобы использовать неканонические ключи,назначьте их непосредственно на карту.</target>
        </trans-unit>
        <trans-unit id="ac88d8d813ac589b26e82c68ebe23a65cc8513a6" translate="yes" xml:space="preserve">
          <source>Set sets the key to value. It replaces any existing values.</source>
          <target state="translated">Установите значение клавиши.Он заменяет любые существующие значения.</target>
        </trans-unit>
        <trans-unit id="03d2da815b81b3b89a818437487ee57f67fe7d66" translate="yes" xml:space="preserve">
          <source>Set sets the value of the named command-line flag.</source>
          <target state="translated">Устанавливает значение флага именованной командной строки.</target>
        </trans-unit>
        <trans-unit id="f73f9638b07619a017d2f6dac015fd0d243d8333" translate="yes" xml:space="preserve">
          <source>Set sets the value of the named flag.</source>
          <target state="translated">Установка устанавливает значение именованного флага.</target>
        </trans-unit>
        <trans-unit id="2c301753363dd5c13e85e87be14b65f72e0bdbb9" translate="yes" xml:space="preserve">
          <source>Set sets v to value.</source>
          <target state="translated">Установите значение v.</target>
        </trans-unit>
        <trans-unit id="0e0649c67f5fc5e092366b50d2ec623dd85834a8" translate="yes" xml:space="preserve">
          <source>Set sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to the precision of x before setting z (and rounding will have no effect). Rounding is performed according to z's precision and rounding mode; and z's accuracy reports the result error relative to the exact (not rounded) result.</source>
          <target state="translated">Установите z в значение (возможно,округленное)x и верните z.Если точность z равна 0,то перед установкой z она будет изменена на точность x (и округление не будет иметь никакого эффекта).Скругление выполняется в соответствии с точностью z и режимом округления;а точность z сообщает о погрешности результата относительно точного (не округленного)результата.</target>
        </trans-unit>
        <trans-unit id="74c097d8a8db6198a9f30d1da9cc40810faf97ea" translate="yes" xml:space="preserve">
          <source>Set sets z to x (by making a copy of x) and returns z.</source>
          <target state="translated">Установите z в x (сделав копию x)и верните z.</target>
        </trans-unit>
        <trans-unit id="2de2c16a0340db2bee0118ccf9d1587fd704cd50" translate="yes" xml:space="preserve">
          <source>Set sets z to x and returns z.</source>
          <target state="translated">Установите z в x и верните z.</target>
        </trans-unit>
        <trans-unit id="fd19264e05439f601808981687979a9cbd55329f" translate="yes" xml:space="preserve">
          <source>SetBasicAuth sets the request's Authorization header to use HTTP Basic Authentication with the provided username and password.</source>
          <target state="translated">SetBasicAuth устанавливает заголовок Авторизации запроса для использования базовой HTTP-аутентификации с предоставленными именем пользователя и паролем.</target>
        </trans-unit>
        <trans-unit id="22bdae472d3db85cab5c57989c6be910d803a01e" translate="yes" xml:space="preserve">
          <source>SetBit sets z to x, with x's i'th bit set to b (0 or 1). That is, if b is 1 SetBit sets z = x | (1 &amp;lt;&amp;lt; i); if b is 0 SetBit sets z = x &amp;amp;^ (1 &amp;lt;&amp;lt; i). If b is not 0 or 1, SetBit will panic.</source>
          <target state="translated">SetBit устанавливает z равным x, а i-й бит x установлен в b (0 или 1). То есть, если b равно 1, SetBit устанавливает z = x | (1 &amp;lt;&amp;lt; i); если b равно 0, SetBit устанавливает z = x &amp;amp; ^ (1 &amp;lt;&amp;lt; i). Если b не равно 0 или 1, SetBit запаникует.</target>
        </trans-unit>
        <trans-unit id="feba31f1e1635889b9235c6993fbb340077ba325" translate="yes" xml:space="preserve">
          <source>SetBits provides raw (unchecked but fast) access to z by setting its value to abs, interpreted as a little-endian Word slice, and returning z. The result and abs share the same underlying array. SetBits is intended to support implementation of missing low-level Int functionality outside this package; it should be avoided otherwise.</source>
          <target state="translated">SetBits обеспечивает необработанный (неотмеченный,но быстрый)доступ к z,устанавливая его значение в abs,интерпретируемый как младший срез Word,и возвращая z.Результат и abs разделяют один и тот же базовый массив.SetBits предназначен для поддержки реализации недостающей низкоуровневой Int-функциональности вне данного пакета;в противном случае этого следует избегать.</target>
        </trans-unit>
        <trans-unit id="f0a90ede61cca8ba0e26af9fe2c3c6480079bf80" translate="yes" xml:space="preserve">
          <source>SetBlockProfileRate controls the fraction of goroutine blocking events that are reported in the blocking profile. The profiler aims to sample an average of one blocking event per rate nanoseconds spent blocked.</source>
          <target state="translated">SetBlockProfileRate управляет долей событий блокировки гортани,которые сообщаются в профиле блокировки.Профилировщик нацелен на выборку среднего значения одного блокирующего события на скорость в наносекунды,потраченную на блокировку.</target>
        </trans-unit>
        <trans-unit id="459d3a69d65d385fb3b3fbe398bb9c85138ddcc2" translate="yes" xml:space="preserve">
          <source>SetBool sets v's underlying value. It panics if v's Kind is not Bool or if CanSet() is false.</source>
          <target state="translated">SetBool устанавливает базовое значение v.Она паникует,если v's Kind не является Bool или если CanSet()является false.</target>
        </trans-unit>
        <trans-unit id="7e2455227631da0419c37dea6613f51644e9e03d" translate="yes" xml:space="preserve">
          <source>SetBoundary must be called before any parts are created, may only contain certain ASCII characters, and must be non-empty and at most 70 bytes long.</source>
          <target state="translated">Граница SetBoundary должна быть вызвана перед созданием любой части,может содержать только определенные ASCII-символы,должна быть непустой и иметь длину не более 70 байт.</target>
        </trans-unit>
        <trans-unit id="b06cf4ca1fda2091c2541de19f0b4a515ade4ba9" translate="yes" xml:space="preserve">
          <source>SetBoundary overrides the Writer's default randomly-generated boundary separator with an explicit value.</source>
          <target state="translated">SetBoundary переопределяет случайно сгенерированный по умолчанию в Writer разделитель границ с явным значением.</target>
        </trans-unit>
        <trans-unit id="6106f2ae31464af3b2e7f9b63e64b76356750152" translate="yes" xml:space="preserve">
          <source>SetBytes interprets buf as the bytes of a big-endian unsigned integer, sets z to that value, and returns z.</source>
          <target state="translated">SetBytes интерпретирует buf как байты большого беззнакового целого,устанавливает z в это значение и возвращает z.</target>
        </trans-unit>
        <trans-unit id="7a0583b12bc86b9434e36c34c4ce6e8b5c26ba75" translate="yes" xml:space="preserve">
          <source>SetBytes records the number of bytes processed in a single operation. If this is called, the benchmark will report ns/op and MB/s.</source>
          <target state="translated">SetBytes записывает количество байт,обработанных за одну операцию.При вызове этой записи эталонный тест выдаст отчет ns/op и MB/s.</target>
        </trans-unit>
        <trans-unit id="bba92654aa999e9512f4dfa6313cb2838144dfe3" translate="yes" xml:space="preserve">
          <source>SetBytes sets v's underlying value. It panics if v's underlying value is not a slice of bytes.</source>
          <target state="translated">SetBytes устанавливает базовое значение v.Она паникует,если базовое значение v не является кусочком байта.</target>
        </trans-unit>
        <trans-unit id="344d8ddf2a696d0cf0cc16a1825af1241c772a89" translate="yes" xml:space="preserve">
          <source>SetCPUProfileRate sets the CPU profiling rate to hz samples per second. If hz &amp;lt;= 0, SetCPUProfileRate turns off profiling. If the profiler is on, the rate cannot be changed without first turning it off.</source>
          <target state="translated">SetCPUProfileRate устанавливает частоту профилирования ЦП в Гц выборок в секунду. Если hz &amp;lt;= 0, SetCPUProfileRate отключает профилирование. Если профилировщик включен, скорость нельзя изменить, не выключив его предварительно.</target>
        </trans-unit>
        <trans-unit id="1afcde63337e23e05a9b84c1c7b85f57c0092cd7" translate="yes" xml:space="preserve">
          <source>SetCap sets v's capacity to n. It panics if v's Kind is not Slice or if n is smaller than the length or greater than the capacity of the slice.</source>
          <target state="translated">SetCap устанавливает емкость v на n.Она паникует,если v's Kind не является Slice или если n меньше длины или больше емкости ломтика.</target>
        </trans-unit>
        <trans-unit id="44731bc16b3d80516224c7c852f64732d07d62c1" translate="yes" xml:space="preserve">
          <source>SetCgoTraceback records three C functions to use to gather traceback information from C code and to convert that traceback information into symbolic information. These are used when printing stack traces for a program that uses cgo.</source>
          <target state="translated">SetCgoTraceback записывает три функции C для сбора информации о трассировке из кода C и преобразования этой информации в символическую информацию.Они используются при печати трасс в стеке для программы,использующей Cgo.</target>
        </trans-unit>
        <trans-unit id="348727b9cf484ab1b9762cea6ba0daa8dde8a933" translate="yes" xml:space="preserve">
          <source>SetCgoTraceback should be called only once, ideally from an init function.</source>
          <target state="translated">SetCgoTraceback должен вызываться только один раз,в идеале из функции init.</target>
        </trans-unit>
        <trans-unit id="67fdfbbba9d56846727e0eb32ef8332c0bf20f53" translate="yes" xml:space="preserve">
          <source>SetComment sets the end-of-central-directory comment field. It can only be called before Close.</source>
          <target state="translated">SetComment устанавливает поле комментария в конце центрального каталога.Оно может быть вызвано только перед закрытием.</target>
        </trans-unit>
        <trans-unit id="64f03250bccb0b87aeb45d79cb945d1dd0319cb9" translate="yes" xml:space="preserve">
          <source>SetComplex sets v's underlying value to x. It panics if v's Kind is not Complex64 or Complex128, or if CanSet() is false.</source>
          <target state="translated">SetComplex устанавливает базовое значение v в x.Он паникует,если v's Kind не является Complex64 или Complex128,или если CanSet()является false.</target>
        </trans-unit>
        <trans-unit id="b69ac591abf21b23b441af754a7112fe6fa046f7" translate="yes" xml:space="preserve">
          <source>SetConnMaxIdleTime sets the maximum amount of time a connection may be idle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6f79734771b4e3adca460b8931ae634206e20f" translate="yes" xml:space="preserve">
          <source>SetConnMaxLifetime sets the maximum amount of time a connection may be reused.</source>
          <target state="translated">SetConnMaxLifetime устанавливает максимальное время,в течение которого соединение может быть использовано повторно.</target>
        </trans-unit>
        <trans-unit id="cdfc398e60b71e846a0a56ba3b1860f275a8c713" translate="yes" xml:space="preserve">
          <source>SetCookie adds a Set-Cookie header to the provided ResponseWriter's headers. The provided cookie must have a valid Name. Invalid cookies may be silently dropped.</source>
          <target state="translated">SetCookie добавляет заголовок Set-Cookie к предоставленным заголовкам ResponseWriter.Предоставленный файл cookie должен иметь правильное Имя.Недействительные куки-файлы могут быть незаметно удалены.</target>
        </trans-unit>
        <trans-unit id="b1b53737e17baa71a51a0e5ede6a121ccba30720" translate="yes" xml:space="preserve">
          <source>SetCookies implements the SetCookies method of the http.CookieJar interface.</source>
          <target state="translated">SetCookies реализует метод SetCookies интерфейса http.CookieJar.</target>
        </trans-unit>
        <trans-unit id="d3cec8d8761e8a9c75efaa51883455428c208775" translate="yes" xml:space="preserve">
          <source>SetDeadline implements the Conn SetDeadline method.</source>
          <target state="translated">SetDeadline реализует метод Conn SetDeadline.</target>
        </trans-unit>
        <trans-unit id="c0b50695667af085ed75f6ae0d7d496b50008cd3" translate="yes" xml:space="preserve">
          <source>SetDeadline sets the deadline associated with the listener. A zero time value disables the deadline.</source>
          <target state="translated">SetDeadline устанавливает крайний срок,связанный со слушателем.Значение нулевого времени отключает срок.</target>
        </trans-unit>
        <trans-unit id="a7b4723a8859169359d85b5290587d68a0fc3307" translate="yes" xml:space="preserve">
          <source>SetDeadline sets the read and write deadlines associated with the connection. A zero value for t means Read and Write will not time out. After a Write has timed out, the TLS state is corrupt and all future writes will return the same error.</source>
          <target state="translated">SetDeadline устанавливает сроки чтения и записи,связанные с подключением.Нулевое значение для t означает,что Read and Write (Чтение и запись)не будет тайм-аутом.После тайм-аута Write (Запись)состояние TLS повреждено,и все последующие операции записи возвращают ту же ошибку.</target>
        </trans-unit>
        <trans-unit id="883b1167470e9a9bc17df175940ef7113ec71b15" translate="yes" xml:space="preserve">
          <source>SetDeadline sets the read and write deadlines for a File. It is equivalent to calling both SetReadDeadline and SetWriteDeadline.</source>
          <target state="translated">SetDeadline устанавливает сроки чтения и записи Файла.Это эквивалентно вызову как SetReadDeadline,так и SetWriteDeadline.</target>
        </trans-unit>
        <trans-unit id="7aad8c47d1ea7eb52b60d62c5b63c9894a7f6a08" translate="yes" xml:space="preserve">
          <source>SetEscapeHTML specifies whether problematic HTML characters should be escaped inside JSON quoted strings. The default behavior is to escape &amp;amp;, &amp;lt;, and &amp;gt; to \u0026, \u003c, and \u003e to avoid certain safety problems that can arise when embedding JSON in HTML.</source>
          <target state="translated">SetEscapeHTML указывает, следует ли экранировать проблемные символы HTML внутри строк в кавычках JSON. По умолчанию символы &amp;amp;, &amp;lt;и&amp;gt; заменяются на \ u0026, \ u003c и&amp;gt;, чтобы избежать некоторых проблем безопасности, которые могут возникнуть при встраивании JSON в HTML.</target>
        </trans-unit>
        <trans-unit id="dd27241a174aea4c1fb70802e55de9c35c7e1aca" translate="yes" xml:space="preserve">
          <source>SetFinalizer sets the finalizer associated with obj to the provided finalizer function. When the garbage collector finds an unreachable block with an associated finalizer, it clears the association and runs finalizer(obj) in a separate goroutine. This makes obj reachable again, but now without an associated finalizer. Assuming that SetFinalizer is not called again, the next time the garbage collector sees that obj is unreachable, it will free obj.</source>
          <target state="translated">SetFinalizer устанавливает финализатор,связанный с объектом функции предоставляемого финализатора.Когда сборщик мусора находит недоступный блок с ассоциированным финализатором,он очищает ассоциацию и запускает финализатор(объект)в отдельном goroutine.Это снова делает объект доступным,но теперь без связанного с ним финализатора.Если предположить,что SetFinalizer не будет вызван снова,то в следующий раз,когда сборщик мусора увидит,что объект недоступен,он освободит объект.</target>
        </trans-unit>
        <trans-unit id="516de8a9b6e7300def0c0d80a14119cce09c9af1" translate="yes" xml:space="preserve">
          <source>SetFinalizer(obj, nil) clears any finalizer associated with obj.</source>
          <target state="translated">SetFinalizer(obj,nil)очищает любой финализатор,связанный с объектом.</target>
        </trans-unit>
        <trans-unit id="fce6aef209330cc8b12176816b79927fb4cacd60" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the logger.</source>
          <target state="translated">SetFlags устанавливает выходные флаги для регистратора.</target>
        </trans-unit>
        <trans-unit id="2389acee4b107177db39a04d2a50d69a80e07539" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the logger. The flag bits are Ldate, Ltime, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0ec7930cc082a2a1ef8ed98443be56c5746d85" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the standard logger.</source>
          <target state="translated">SetFlags устанавливает флаги вывода для стандартного регистратора.</target>
        </trans-unit>
        <trans-unit id="e112d20317b511d78e95cf42b818e10d239d1b7a" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the standard logger. The flag bits are Ldate, Ltime, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44e49f661219c769f20780167a6964483f17f7a" translate="yes" xml:space="preserve">
          <source>SetFloat sets v's underlying value to x. It panics if v's Kind is not Float32 or Float64, or if CanSet() is false.</source>
          <target state="translated">SetFloat устанавливает базовое значение v в x.Он паникует,если Kind v не Float32 или Float64,или если CanSet()ложна.</target>
        </trans-unit>
        <trans-unit id="8e47d96a49d3af2841a8dc184d5134cb1a32de48" translate="yes" xml:space="preserve">
          <source>SetFloat64 sets z to exactly f and returns z. If f is not finite, SetFloat returns nil.</source>
          <target state="translated">SetFloat64 устанавливает z точно в f и возвращает z.Если f не конечен,SetFloat возвращает ноль.</target>
        </trans-unit>
        <trans-unit id="7d8e2534e02690c3fed1859413bf2f8f63c436f1" translate="yes" xml:space="preserve">
          <source>SetFloat64 sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to 53 (and rounding will have no effect). SetFloat64 panics with ErrNaN if x is a NaN.</source>
          <target state="translated">SetFloat64 устанавливает z в (возможно,округленное)значение x и возвращает z.Если точность z равна 0,то она изменяется на 53 (и округление не будет иметь эффекта).SetFloat64 паникует с ErrNaN,если x является NaN.</target>
        </trans-unit>
        <trans-unit id="7b801568b0fa82e3d000c6cfdb98f7b328836a9b" translate="yes" xml:space="preserve">
          <source>SetFrac sets z to a/b and returns z.</source>
          <target state="translated">SetFrac устанавливает z в a/b и возвращает z.</target>
        </trans-unit>
        <trans-unit id="a9ac4380aa91d01b1e1308169f05c3eff9861e31" translate="yes" xml:space="preserve">
          <source>SetFrac sets z to a/b and returns z. If b == 0, SetFrac panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fde5eac415722d6b8394ea7547d400d1373021" translate="yes" xml:space="preserve">
          <source>SetFrac64 sets z to a/b and returns z.</source>
          <target state="translated">SetFrac64 устанавливает z в a/b и возвращает z.</target>
        </trans-unit>
        <trans-unit id="5993df56e43367a1c47f44460a83d56bdcf65739" translate="yes" xml:space="preserve">
          <source>SetFrac64 sets z to a/b and returns z. If b == 0, SetFrac64 panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805636f93a7dd0b6aa2183e35b0d00ca6d7104e9" translate="yes" xml:space="preserve">
          <source>SetGCPercent sets the garbage collection target percentage: a collection is triggered when the ratio of freshly allocated data to live data remaining after the previous collection reaches this percentage. SetGCPercent returns the previous setting. The initial setting is the value of the GOGC environment variable at startup, or 100 if the variable is not set. A negative percentage disables garbage collection.</source>
          <target state="translated">SetGCPercent задает целевой процент сбора мусора:сбор срабатывает,когда отношение свежих выделенных данных к живым данным,оставшимся после предыдущей сборки,достигает этого процента.SetGCPercent возвращает предыдущую установку.Исходной установкой является значение переменной окружения GOGC при запуске или 100,если переменная не установлена.Отрицательный процент отключает сбор мусора.</target>
        </trans-unit>
        <trans-unit id="906978195b1fb386902e36080f453c88d02f6211" translate="yes" xml:space="preserve">
          <source>SetGoroutineLabels sets the current goroutine's labels to match ctx. A new goroutine inherits the labels of the goroutine that created it. This is a lower-level API than Do, which should be used instead when possible.</source>
          <target state="translated">SetGoroutineLabels устанавливает метки текущего goroutine в соответствии с ctx.Новый горутин наследует метки создавшего его горутина.Это API более низкого уровня,чем Do,который следует использовать вместо него,когда это возможно.</target>
        </trans-unit>
        <trans-unit id="7c95fdd46823686f50f0d15060d185e4b4e5d563" translate="yes" xml:space="preserve">
          <source>SetImports sets the list of explicitly imported packages to list. It is the caller's responsibility to make sure list elements are unique.</source>
          <target state="translated">SetImports устанавливает список явно импортированных пакетов.Ответственность за уникальность элементов списка лежит на вызывающем абоненте.</target>
        </trans-unit>
        <trans-unit id="e7fb2cb55e4274d490452e6757d30cb84eb70855" translate="yes" xml:space="preserve">
          <source>SetIndent instructs the encoder to format each subsequent encoded value as if indented by the package-level function Indent(dst, src, prefix, indent). Calling SetIndent(&quot;&quot;, &quot;&quot;) disables indentation.</source>
          <target state="translated">SetIndent предписывает кодировщику форматировать каждое последующее кодированное значение так,как будто оно имеет отступ от функции на уровне пакетов Indent(dst,src,префикс,отступ).Вызов SetIndent(&quot;,&quot;&quot;)отключает отступ.</target>
        </trans-unit>
        <trans-unit id="17d73d2c7105e3ec880ec1de340daf4f290af178" translate="yes" xml:space="preserve">
          <source>SetIndex sets the JavaScript index i of value v to ValueOf(x). It panics if v is not a JavaScript object.</source>
          <target state="translated">SetIndex устанавливает индекс JavaScript i значения v в значение ValueOf(x).Он паникует,если v не является объектом JavaScript.</target>
        </trans-unit>
        <trans-unit id="cea11721fc2a69428fc01f2bd7212d126248c97a" translate="yes" xml:space="preserve">
          <source>SetInf sets z to the infinite Float -Inf if signbit is set, or +Inf if signbit is not set, and returns z. The precision of z is unchanged and the result is always Exact.</source>
          <target state="translated">SetInf устанавливает z в бесконечный Float -Inf,если значок установлен,или +Inf,если значок не установлен,и возвращает z.Точность z остается неизменной,а результат всегда Точный.</target>
        </trans-unit>
        <trans-unit id="7fbe79d67709b54bb947c5fb56d1678d22a06e68" translate="yes" xml:space="preserve">
          <source>SetInt sets v's underlying value to x. It panics if v's Kind is not Int, Int8, Int16, Int32, or Int64, or if CanSet() is false.</source>
          <target state="translated">SetInt устанавливает базовое значение v в x.Он паникует,если Kind v не является Int,Int8,Int16,Int32 или Int64,или если CanSet()ложна.</target>
        </trans-unit>
        <trans-unit id="e9791f172aed7c20562244430ee2933689079ec7" translate="yes" xml:space="preserve">
          <source>SetInt sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to the larger of x.BitLen() or 64 (and rounding will have no effect).</source>
          <target state="translated">SetInt устанавливает z в (возможно,округленное)значение x и возвращает z.Если точность z равна 0,то она изменяется на большую из x.BitLen()или 64 (и округление не будет иметь эффекта).</target>
        </trans-unit>
        <trans-unit id="512491a3910b089e941ff0967a1c4600d38512e1" translate="yes" xml:space="preserve">
          <source>SetInt sets z to x (by making a copy of x) and returns z.</source>
          <target state="translated">SetInt устанавливает z в x (делая копию x)и возвращает z.</target>
        </trans-unit>
        <trans-unit id="e98bca88644a6b411de0d879f43c3dc3a73ef347" translate="yes" xml:space="preserve">
          <source>SetInt64 sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to 64 (and rounding will have no effect).</source>
          <target state="translated">SetInt64 устанавливает z в (возможно,округленное)значение x и возвращает z.Если точность z равна 0,то она изменяется на 64 (и округление не будет иметь эффекта).</target>
        </trans-unit>
        <trans-unit id="b8bc149266ba57391034d803e65399926af1a382" translate="yes" xml:space="preserve">
          <source>SetInt64 sets z to x and returns z.</source>
          <target state="translated">SetInt64 устанавливает z в x и возвращает z.</target>
        </trans-unit>
        <trans-unit id="d8ce7465b1093a7258c6cd344217beee671aa978" translate="yes" xml:space="preserve">
          <source>SetKeepAlive sets whether the operating system should send keep-alive messages on the connection.</source>
          <target state="translated">SetKeepAlive устанавливает,должна ли операционная система посылать сообщения о соединении в режиме реального времени.</target>
        </trans-unit>
        <trans-unit id="89bf3d4dd275ff44ab7379e669050fce6f5a7eee" translate="yes" xml:space="preserve">
          <source>SetKeepAlivePeriod sets period between keep-alives.</source>
          <target state="translated">SetKeepAlivePeriod задает период между сохранением жизни.</target>
        </trans-unit>
        <trans-unit id="582102a7fa3d8dd186ee22dfa213a701e54c1846" translate="yes" xml:space="preserve">
          <source>SetKeepAlivesEnabled controls whether HTTP keep-alives are enabled. By default, keep-alives are always enabled. Only very resource-constrained environments or servers in the process of shutting down should disable them.</source>
          <target state="translated">SetKeepAlivesEnabled контролирует,включены ли HTTP keep-alives.По умолчанию keep-alives всегда включен.Только очень ограниченные ресурсы окружения или серверы,находящиеся в процессе выключения,должны их отключать.</target>
        </trans-unit>
        <trans-unit id="26dfe6afebdd675610dd8f1d4858b29cc7ee92db" translate="yes" xml:space="preserve">
          <source>SetLen sets v's length to n. It panics if v's Kind is not Slice or if n is negative or greater than the capacity of the slice.</source>
          <target state="translated">SetLen устанавливает длину v в n.Она паникует,если v's Kind не является Slice или если n отрицательно или больше емкости среза.</target>
        </trans-unit>
        <trans-unit id="549c2b676df9b698394503e0fb62c18e8fa20e0b" translate="yes" xml:space="preserve">
          <source>SetLines sets the line offsets for a file and reports whether it succeeded. The line offsets are the offsets of the first character of each line; for instance for the content &quot;ab\nc\n&quot; the line offsets are {0, 3}. An empty file has an empty line offset table. Each line offset must be larger than the offset for the previous line and smaller than the file size; otherwise SetLines fails and returns false. Callers must not mutate the provided slice after SetLines returns.</source>
          <target state="translated">SetLines устанавливает смещение строки для файла и сообщает,удалось ли это сделать.Смещения строк-это смещения первого символа каждой строки;например,для содержимого &quot;ab\nc\n&quot; смещения строк-{0,3}.Пустой файл имеет пустую таблицу смещения строк.Каждое смещение строки должно быть больше,чем смещение для предыдущей строки и меньше,чем размер файла;в противном случае SetLines терпит неудачу и возвращает false.После возврата SetLines вызывающие абоненты не должны мутировать предоставленный фрагмент.</target>
        </trans-unit>
        <trans-unit id="d21966bc8423cbdfca9062e709a1e1bfe2b23f9c" translate="yes" xml:space="preserve">
          <source>SetLinesForContent sets the line offsets for the given file content. It ignores position-altering //line comments.</source>
          <target state="translated">SetLinesForContent устанавливает смещение строки для данного содержимого файла.Игнорирует изменение позиции //комментарий к строке.</target>
        </trans-unit>
        <trans-unit id="7ead5ff3e458c012090db0e3e46dd956293c59f9" translate="yes" xml:space="preserve">
          <source>SetLinger sets the behavior of Close on a connection which still has data waiting to be sent or to be acknowledged.</source>
          <target state="translated">SetLinger устанавливает поведение Close (Закрыть)при соединении,данные которого все еще ожидают отправки или квитирования.</target>
        </trans-unit>
        <trans-unit id="be9cec1a054bdf6dae13515b712cb92bca8f03d8" translate="yes" xml:space="preserve">
          <source>SetMantExp sets z to mant &amp;times; 2**exp and returns z. The result z has the same precision and rounding mode as mant. SetMantExp is an inverse of MantExp but does not require 0.5 &amp;lt;= |mant| &amp;lt; 1.0. Specifically:</source>
          <target state="translated">SetMantExp устанавливает z равным mant &amp;times; 2 ** exp и возвращает z. Результат z имеет ту же точность и режим округления, что и mant. SetMantExp является инверсией MantExp, но не требует 0,5 &amp;lt;= | mant | &amp;lt;1.0. В частности:</target>
        </trans-unit>
        <trans-unit id="e756f252cafbddbad755f1c06583ad4489564d92" translate="yes" xml:space="preserve">
          <source>SetMapIndex sets the element associated with key in the map v to elem. It panics if v's Kind is not Map. If elem is the zero Value, SetMapIndex deletes the key from the map. Otherwise if v holds a nil map, SetMapIndex will panic. As in Go, key's elem must be assignable to the map's key type, and elem's value must be assignable to the map's elem type.</source>
          <target state="translated">SetMapIndex устанавливает элемент,связанный с ключом на карте v в elem.Он паникует,если v's Kind не является Map.Если элем-нулевое значение,SetMapIndex удаляет ключ с карты.В противном случае,если v держит карту с нулевым значением,SetMapIndex запаникует.Как и в Go,элем ключа должен быть присвоен типу ключа на карте,а значение элемента должно быть присвоено типу элемента на карте.</target>
        </trans-unit>
        <trans-unit id="b83dfa89acb5e3c977158b5fc2760de63b71e48b" translate="yes" xml:space="preserve">
          <source>SetMaxIdleConns sets the maximum number of connections in the idle connection pool.</source>
          <target state="translated">SetMaxIdleConns устанавливает максимальное количество соединений в пуле соединений в режиме ожидания.</target>
        </trans-unit>
        <trans-unit id="aa3863aa142a9c48791c290f00a7c4c3d76f3b6e" translate="yes" xml:space="preserve">
          <source>SetMaxOpenConns sets the maximum number of open connections to the database.</source>
          <target state="translated">SetMaxOpenConns устанавливает максимальное количество открытых подключений к БД.</target>
        </trans-unit>
        <trans-unit id="f71d21e95f096f232e72fff30f80b920b1e3f9f5" translate="yes" xml:space="preserve">
          <source>SetMaxStack is useful mainly for limiting the damage done by goroutines that enter an infinite recursion. It only limits future stack growth.</source>
          <target state="translated">SetMaxStack полезен главным образом для ограничения ущерба,наносимого гориллами,входящими в бесконечную рекурсию.Она ограничивает только будущий рост стека.</target>
        </trans-unit>
        <trans-unit id="eeacbe78a8fd0d4396f1b6456e34f5857612c565" translate="yes" xml:space="preserve">
          <source>SetMaxStack sets the maximum amount of memory that can be used by a single goroutine stack. If any goroutine exceeds this limit while growing its stack, the program crashes. SetMaxStack returns the previous setting. The initial setting is 1 GB on 64-bit systems, 250 MB on 32-bit systems.</source>
          <target state="translated">SetMaxStack устанавливает максимальный объем памяти,который может быть использован одним горутинным стеком.Если при выращивании стека какой-нибудь горутин превысит этот предел,программа аварийно завершает свою работу.SetMaxStack возвращает предыдущую установку.Начальная установка составляет 1 Гб на 64-битных системах,250 Мб на 32-битных системах.</target>
        </trans-unit>
        <trans-unit id="67aff5f59d34d3ecd519adad914c8c6423eaf752" translate="yes" xml:space="preserve">
          <source>SetMaxThreads is useful mainly for limiting the damage done by programs that create an unbounded number of threads. The idea is to take down the program before it takes down the operating system.</source>
          <target state="translated">SetMaxThreads полезен в основном для ограничения ущерба,наносимого программами,создающими неограниченное количество потоков.Идея заключается в том,чтобы снести программу до того,как она снесет операционную систему.</target>
        </trans-unit>
        <trans-unit id="c6d8bc8cae003fe5d78cf6cda31fbae67e36c482" translate="yes" xml:space="preserve">
          <source>SetMaxThreads sets the maximum number of operating system threads that the Go program can use. If it attempts to use more than this many, the program crashes. SetMaxThreads returns the previous setting. The initial setting is 10,000 threads.</source>
          <target state="translated">SetMaxThreads устанавливает максимальное количество потоков операционной системы,которые может использовать программа Go.Если она попытается использовать больше этого количества,программа аварийно завершает работу.SetMaxThreads возвращает предыдущую установку.Исходной установкой является 10 000 потоков.</target>
        </trans-unit>
        <trans-unit id="806ff185f3a93cc6a21f24b12259c49de358388c" translate="yes" xml:space="preserve">
          <source>SetModTime sets the Modified, ModifiedTime, and ModifiedDate fields to the given time in UTC.</source>
          <target state="translated">SetModTime устанавливает поля Modified,ModifiedTime и ModifiedDate на заданное время по UTC.</target>
        </trans-unit>
        <trans-unit id="e9c592771061ffaaa3d588fb3aae3da84d0635b8" translate="yes" xml:space="preserve">
          <source>SetMode changes the permission and mode bits for the FileHeader.</source>
          <target state="translated">SetMode изменяет биты разрешения и режима для FileHeader.</target>
        </trans-unit>
        <trans-unit id="de45da11e316c622a3816956315a15e8817585f9" translate="yes" xml:space="preserve">
          <source>SetMode sets z's rounding mode to mode and returns an exact z. z remains unchanged otherwise. z.SetMode(z.Mode()) is a cheap way to set z's accuracy to Exact.</source>
          <target state="translated">SetMode устанавливает режим округления z в режим и возвращает точное z.z остается неизменным в противном случае.z.SetMode(z.Mode())-это дешевый способ установить точность z в Точность.</target>
        </trans-unit>
        <trans-unit id="b01a08220867d2b1a3c66f3bf6f8b7ca7ea5c1ae" translate="yes" xml:space="preserve">
          <source>SetMutexProfileFraction controls the fraction of mutex contention events that are reported in the mutex profile. On average 1/rate events are reported. The previous rate is returned.</source>
          <target state="translated">SetMutexProfileFraction управляет долей событий соприкосновения мьютекса,которые сообщаются в профиле мьютекса.В среднем сообщается о событиях 1/статистики.Возвращается предыдущая ставка.</target>
        </trans-unit>
        <trans-unit id="8c38b4a404d96b417f171861cd9ebaba18b51eaf" translate="yes" xml:space="preserve">
          <source>SetName sets the package name.</source>
          <target state="translated">SetName задает имя пакета.</target>
        </trans-unit>
        <trans-unit id="d31306f3f7eb161aa0c0b28fdb6eed5363c589c3" translate="yes" xml:space="preserve">
          <source>SetNoDelay controls whether the operating system should delay packet transmission in hopes of sending fewer packets (Nagle's algorithm). The default is true (no delay), meaning that data is sent as soon as possible after a Write.</source>
          <target state="translated">SetNoDelay контролирует,должна ли операционная система задерживать передачу пакетов в надежде отправить меньше пакетов (алгоритм Nagle).Значение по умолчанию равно true (отсутствие задержки),что означает,что данные передаются как можно быстрее после Write.</target>
        </trans-unit>
        <trans-unit id="27a3c03ba54fb2a44f36a6c425cfa58520c56752" translate="yes" xml:space="preserve">
          <source>SetOffset sets the offset of the beginning of the zip data within the underlying writer. It should be used when the zip data is appended to an existing file, such as a binary executable. It must be called before any data is written.</source>
          <target state="translated">SetOffset устанавливает смещение начала zip-данных внутри базового записывающего устройства.Его следует использовать,когда zip-данные добавляются к существующему файлу,например,к двоичному исполняемому файлу.Он должен быть вызван перед записью любых данных.</target>
        </trans-unit>
        <trans-unit id="004613f6cff6f004aabdb462fd19757cc3df0edb" translate="yes" xml:space="preserve">
          <source>SetOutput sets the destination for usage and error messages. If output is nil, os.Stderr is used.</source>
          <target state="translated">SetOutput устанавливает место назначения для сообщений об использовании и ошибках.Если вывод нулевой,используется os.Stderr.</target>
        </trans-unit>
        <trans-unit id="36faf63cafa162e1ef49476325f422ab20f856dd" translate="yes" xml:space="preserve">
          <source>SetOutput sets the output destination for the logger.</source>
          <target state="translated">SetOutput устанавливает выходной пункт назначения для регистратора.</target>
        </trans-unit>
        <trans-unit id="76988d10d7783ed1525981a82207c054e24adba8" translate="yes" xml:space="preserve">
          <source>SetOutput sets the output destination for the standard logger.</source>
          <target state="translated">SetOutput устанавливает выходной пункт назначения для стандартного регистратора.</target>
        </trans-unit>
        <trans-unit id="2547ce0f12468d65a113d53c2cfbf0ddbb6dc9bb" translate="yes" xml:space="preserve">
          <source>SetPanicOnFault controls the runtime's behavior when a program faults at an unexpected (non-nil) address. Such faults are typically caused by bugs such as runtime memory corruption, so the default response is to crash the program. Programs working with memory-mapped files or unsafe manipulation of memory may cause faults at non-nil addresses in less dramatic situations; SetPanicOnFault allows such programs to request that the runtime trigger only a panic, not a crash. SetPanicOnFault applies only to the current goroutine. It returns the previous setting.</source>
          <target state="translated">SetPanicOnFault управляет поведением во время выполнения программы при сбое по неожиданному (нулевому)адресу.Такие сбои обычно вызваны такими ошибками,как повреждение памяти во время выполнения,поэтому по умолчанию программа аварийно завершает свою работу.Программы,работающие с файлами,отображенными в памяти,или небезопасное манипулирование памятью могут вызывать сбои по нулевым адресам в менее драматичных ситуациях;SetPanicOnFault позволяет таким программам запросить,чтобы время выполнения вызывало только панику,а не аварийное завершение работы.SetPanicOnFault применяется только к текущему goroutine.Он возвращает предыдущую установку.</target>
        </trans-unit>
        <trans-unit id="72fac8e6222bd170971f1f697af6f11d0715e763" translate="yes" xml:space="preserve">
          <source>SetParallelism sets the number of goroutines used by RunParallel to p*GOMAXPROCS. There is usually no need to call SetParallelism for CPU-bound benchmarks. If p is less than 1, this call will have no effect.</source>
          <target state="translated">SetParallelism устанавливает количество goroutines,используемых RunParallel для p*GOMAXPROCS.Обычно нет необходимости вызывать SetParallelism для CPU-ориентированных бенчмарков.Если p меньше 1,то этот вызов не даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="8bcdfe56d7b7abb5a2feda191bae07f8cec5d4b8" translate="yes" xml:space="preserve">
          <source>SetPointer sets the unsafe.Pointer value v to x. It panics if v's Kind is not UnsafePointer.</source>
          <target state="translated">SetPointer устанавливает значение опасного.Pointer v в x.Он паникует,если v's Kind не является UnsafePointer.</target>
        </trans-unit>
        <trans-unit id="59bd457f6414829faae9decbaede734f70a9845c" translate="yes" xml:space="preserve">
          <source>SetPos sets the position. NewIdentifier is a public method so we can't modify its signature. Chained for convenience. TODO: fix one day?</source>
          <target state="translated">SetPos устанавливает положение.NewIdentifier является публичным методом,поэтому мы не можем изменить его сигнатуру.Цепной для удобства.TODO:исправить один день?</target>
        </trans-unit>
        <trans-unit id="d6d5511f09814008767ff9cfe0f77abca174ef5c" translate="yes" xml:space="preserve">
          <source>SetPrec sets z's precision to prec and returns the (possibly) rounded value of z. Rounding occurs according to z's rounding mode if the mantissa cannot be represented in prec bits without loss of precision. SetPrec(0) maps all finite values to &amp;plusmn;0; infinite values remain unchanged. If prec &amp;gt; MaxPrec, it is set to MaxPrec.</source>
          <target state="translated">SetPrec устанавливает точность z в Prec и возвращает (возможно) округленное значение z. Округление происходит в соответствии с режимом округления z, если мантисса не может быть представлена ​​в предварительных битах без потери точности. SetPrec (0) отображает все конечные значения в &amp;plusmn; 0; бесконечные значения остаются неизменными. Если Prec&amp;gt; MaxPrec, устанавливается значение MaxPrec.</target>
        </trans-unit>
        <trans-unit id="d2d0c71771db3b5022796766d08921a2f8600461" translate="yes" xml:space="preserve">
          <source>SetPrefix sets the output prefix for the logger.</source>
          <target state="translated">SetPrefix устанавливает префикс выхода для регистратора.</target>
        </trans-unit>
        <trans-unit id="6bbad9fae1ec236892af0fd5032d525acd1599d4" translate="yes" xml:space="preserve">
          <source>SetPrefix sets the output prefix for the standard logger.</source>
          <target state="translated">SetPrefix устанавливает префикс выхода для стандартного регистратора.</target>
        </trans-unit>
        <trans-unit id="ad88a7e02a294ade703b1e817a40a72d93a7117f" translate="yes" xml:space="preserve">
          <source>SetRat sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to the largest of a.BitLen(), b.BitLen(), or 64; with x = a/b.</source>
          <target state="translated">SetRat устанавливает z в (возможно,округленное)значение x и возвращает z.Если точность z равна 0,то она изменяется на наибольшую из a.BitLen(),b.BitLen(),или 64;с x=a/b.</target>
        </trans-unit>
        <trans-unit id="6d4064f9d933c367ae2ed00ed675edff7a545a0e" translate="yes" xml:space="preserve">
          <source>SetReadBuffer sets the size of the operating system's receive buffer associated with the connection.</source>
          <target state="translated">SetReadBuffer задаёт размер буфера приёма операционной системы,связанного с подключением.</target>
        </trans-unit>
        <trans-unit id="ccd6113cf88478a21eac0a31572f18b8edd4bad3" translate="yes" xml:space="preserve">
          <source>SetReadDeadline implements the Conn SetReadDeadline method.</source>
          <target state="translated">SetReadDeadline реализует метод Conn SetReadDeadline.</target>
        </trans-unit>
        <trans-unit id="73112eb9e955bd18073b2a5d03cd0dc0569c7e77" translate="yes" xml:space="preserve">
          <source>SetReadDeadline sets the deadline for future Read calls and any currently-blocked Read call. A zero value for t means Read will not time out. Not all files support setting deadlines; see SetDeadline.</source>
          <target state="translated">SetReadDeadline устанавливает крайний срок для будущих Чтение вызовов и любого текущего заблокированного Чтение вызова.Нулевое значение для t означает,что Read не будет тайм-аутом.Не все файлы поддерживают установку сроков;см.раздел SetDeadline.</target>
        </trans-unit>
        <trans-unit id="fed46b093271b3a5ec6430ef1d4235557caf69e8" translate="yes" xml:space="preserve">
          <source>SetReadDeadline sets the read deadline on the underlying connection. A zero value for t means Read will not time out.</source>
          <target state="translated">SetReadDeadline устанавливает срок считывания для базового соединения.Нулевое значение для t означает,что Read не будет тайм-аутом.</target>
        </trans-unit>
        <trans-unit id="9e522bee4b13d693f1283de4766e87f7104cee24" translate="yes" xml:space="preserve">
          <source>SetSessionTicketKeys updates the session ticket keys for a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85e891cbcac943a2a1c3092ec5cc6bdcd4ebc48" translate="yes" xml:space="preserve">
          <source>SetSessionTicketKeys updates the session ticket keys for a server. The first key will be used when creating new tickets, while all keys can be used for decrypting tickets. It is safe to call this function while the server is running in order to rotate the session ticket keys. The function will panic if keys is empty.</source>
          <target state="translated">SetSessionTicketKeys обновляет ключи билета сессии для сервера.Первый ключ будет использоваться при создании новых билетов,а все ключи можно использовать для расшифровки билетов.Эту функцию можно безопасно вызывать во время работы сервера,чтобы вращать тикет ключей сеанса.Функция будет паниковать,если ключи пустые.</target>
        </trans-unit>
        <trans-unit id="8a945e442cacd2fa72eff38e8c9f6290d8ddbda2" translate="yes" xml:space="preserve">
          <source>SetString sets v's underlying value to x. It panics if v's Kind is not String or if CanSet() is false.</source>
          <target state="translated">SetString устанавливает базовое значение v в x.Она паникует,если v's Kind не является String или если CanSet()является false.</target>
        </trans-unit>
        <trans-unit id="e889ea521a067b34dab32ac1ec6528fffbf097cc" translate="yes" xml:space="preserve">
          <source>SetString sets z to the value of s and returns z and a boolean indicating success. s can be given as a (possibly signed) fraction &quot;a/b&quot;, or as a floating-point number optionally followed by an exponent. If a fraction is provided, both the dividend and the divisor may be a decimal integer or independently use a prefix of &amp;ldquo;0b&amp;rdquo;, &amp;ldquo;0&amp;rdquo; or &amp;ldquo;0o&amp;rdquo;, or &amp;ldquo;0x&amp;rdquo; (or their upper-case variants) to denote a binary, octal, or hexadecimal integer, respectively. The divisor may not be signed. If a floating-point number is provided, it may be in decimal form or use any of the same prefixes as above but for &amp;ldquo;0&amp;rdquo; to denote a non-decimal mantissa. A leading &amp;ldquo;0&amp;rdquo; is considered a decimal leading 0; it does not indicate octal representation in this case. An optional base-10 &amp;ldquo;e&amp;rdquo; or base-2 &amp;ldquo;p&amp;rdquo; (or their upper-case variants) exponent may be provided as well, except for hexadecimal floats which only accept an (optional) &amp;ldquo;p&amp;rdquo; exponent (because an &amp;ldquo;e&amp;rdquo; or &amp;ldquo;E&amp;rdquo; cannot be distinguished from a mantissa digit). The entire string, not just a prefix, must be valid for success. If the operation failed, the value of z is undefined but the returned value is nil.</source>
          <target state="translated">SetString устанавливает z в значение s и возвращает z и логическое значение, указывающее на успех. s может быть задано как дробная часть (возможно, со знаком) &amp;laquo;a / b&amp;raquo; или как число с плавающей запятой, за которым может следовать показатель степени. Если предоставляется дробная часть, и делимое, и делитель могут быть десятичным целым числом или независимо использовать префикс &amp;laquo;0b&amp;raquo;, &amp;laquo;0&amp;raquo; или &amp;laquo;0o&amp;raquo; или &amp;laquo;0x&amp;raquo; (или их варианты в верхнем регистре) для обозначения двоичное, восьмеричное или шестнадцатеричное целое число соответственно. Делитель не может быть подписан. Если указано число с плавающей запятой, оно может быть в десятичной форме или использовать любой из тех же префиксов, что и выше, но для обозначения &amp;laquo;0&amp;raquo; недесятичной мантиссы. Ведущий &amp;laquo;0&amp;raquo; считается ведущим десятичным 0; в этом случае он не указывает восьмеричное представление. Также может быть предоставлен необязательный показатель степени с основанием 10 &amp;laquo;e&amp;raquo; или основанием 2 &amp;laquo;p&amp;raquo; (или их варианты в верхнем регистре),за исключением шестнадцатеричных чисел с плавающей запятой, которые принимают только (необязательный) показатель степени &amp;laquo;p&amp;raquo; (потому что &amp;laquo;e&amp;raquo; или &amp;laquo;E&amp;raquo; нельзя отличить от цифры мантиссы). Для успеха должна быть действительна вся строка, а не только префикс. Если операция завершилась неудачно, значение z не определено, но возвращаемое значение равно нулю.</target>
        </trans-unit>
        <trans-unit id="efbb232582df792d37509713c9b27b267d546a58" translate="yes" xml:space="preserve">
          <source>SetString sets z to the value of s and returns z and a boolean indicating success. s must be a floating-point number of the same format as accepted by Parse, with base argument 0. The entire string (not just a prefix) must be valid for success. If the operation failed, the value of z is undefined but the returned value is nil.</source>
          <target state="translated">SetString устанавливает z в значение s и возвращает z и булевую индикацию успеха.s должно быть числом с плавающей точкой того же формата,что и принятый Parse,с базовым аргументом 0.Вся строка (а не только префикс)должна быть действительна для успеха.Если операция не увенчалась успехом,значение z не определено,но возвращаемое значение равно нулю.</target>
        </trans-unit>
        <trans-unit id="63e18202e9d9aea4fa241b783984e3dc354de835" translate="yes" xml:space="preserve">
          <source>SetString sets z to the value of s, interpreted in the given base, and returns z and a boolean indicating success. The entire string (not just a prefix) must be valid for success. If SetString fails, the value of z is undefined but the returned value is nil.</source>
          <target state="translated">SetString устанавливает z в значение s,интерпретируемое в данной базе,и возвращает z и булевую индикацию успеха.Вся строка (а не только префикс)должна быть действительна для успеха.Если SetString терпит неудачу,значение z не определено,но возвращаемое значение равно нулю.</target>
        </trans-unit>
        <trans-unit id="38dbbaefe7e4a783f76cb46c7ca92c9417de8b66" translate="yes" xml:space="preserve">
          <source>SetTraceback sets the amount of detail printed by the runtime in the traceback it prints before exiting due to an unrecovered panic or an internal runtime error. The level argument takes the same values as the GOTRACEBACK environment variable. For example, SetTraceback(&quot;all&quot;) ensure that the program prints all goroutines when it crashes. See the package runtime documentation for details. If SetTraceback is called with a level lower than that of the environment variable, the call is ignored.</source>
          <target state="translated">SetTraceback устанавливает количество деталей,распечатанных по времени выполнения,в трассировочной ленте,которую он распечатал,перед выходом из системы в связи с необнаруженной паникой или внутренней ошибкой во время выполнения.Аргумент уровня принимает те же значения,что и переменная окружения GOTRACEBACK.Например,SetTraceback(&quot;все&quot;)гарантирует,что программа распечатает все горизонты при сбое.Подробности смотрите в документации по запуску пакета.Если SetTraceback вызывается с уровнем ниже,чем уровень переменной окружения,то вызов игнорируется.</target>
        </trans-unit>
        <trans-unit id="2fefbf475ce2643229d0cfdbfe83dace76ec0745" translate="yes" xml:space="preserve">
          <source>SetTree sets the parent tree for the node. NewIdentifier is a public method so we can't modify its signature. Chained for convenience. TODO: fix one day?</source>
          <target state="translated">SetTree устанавливает родительское дерево для узла.NewIdentifier является публичным методом,поэтому мы не можем изменить его сигнатуру.Цепи для удобства.TODO:исправить один день?</target>
        </trans-unit>
        <trans-unit id="c67115f13df235c71277ca4e4cc4cdf9edef929f" translate="yes" xml:space="preserve">
          <source>SetUint sets v's underlying value to x. It panics if v's Kind is not Uint, Uintptr, Uint8, Uint16, Uint32, or Uint64, or if CanSet() is false.</source>
          <target state="translated">SetUint устанавливает базовое значение v на x.Паникует,если v's Kind не является Uint,Uintptr,Uint8,Uint16,Uint32 или Uint64,или если CanSet()является ложным.</target>
        </trans-unit>
        <trans-unit id="a0d44c574be3e0563cede63a8860a8c3c9c0ea08" translate="yes" xml:space="preserve">
          <source>SetUint64 sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to 64 (and rounding will have no effect).</source>
          <target state="translated">SetUint64 устанавливает z в (возможно,округленное)значение x и возвращает z.Если точность z равна 0,то она изменяется на 64 (и округление не будет иметь эффекта).</target>
        </trans-unit>
        <trans-unit id="0241edc0d224ec2868d9f80a9b9550102e93ffe8" translate="yes" xml:space="preserve">
          <source>SetUint64 sets z to x and returns z.</source>
          <target state="translated">SetUint64 устанавливает z в x и возвращает z.</target>
        </trans-unit>
        <trans-unit id="d938745882d5a8df95a9972a3a9bbbee174d3301" translate="yes" xml:space="preserve">
          <source>SetUnderlying sets the underlying type and marks t as complete.</source>
          <target state="translated">SetUnderlying устанавливает тип,лежащий в основе,и метки t как полные.</target>
        </trans-unit>
        <trans-unit id="6743e47079d741cfccfdce2738e02e6efcdc6dc1" translate="yes" xml:space="preserve">
          <source>SetUnlinkOnClose sets whether the underlying socket file should be removed from the file system when the listener is closed.</source>
          <target state="translated">SetUnlinkOnClose устанавливает,следует ли удалить базовый файл сокета из файловой системы,когда слушатель закрыт.</target>
        </trans-unit>
        <trans-unit id="3a7d70c082a7c060c7f1583bead1a8cb995d2129" translate="yes" xml:space="preserve">
          <source>SetWriteBuffer sets the size of the operating system's transmit buffer associated with the connection.</source>
          <target state="translated">SetWriteBuffer задает размер связанного с соединением буфера передачи операционной системы.</target>
        </trans-unit>
        <trans-unit id="ce72366b97c1e87523bdc3b4986d2a5ed5efea78" translate="yes" xml:space="preserve">
          <source>SetWriteDeadline implements the Conn SetWriteDeadline method.</source>
          <target state="translated">SetWriteDeadline реализует метод Conn SetWriteDeadline.</target>
        </trans-unit>
        <trans-unit id="94da0323d7e4b44c2641176fd8ed70132d7e560c" translate="yes" xml:space="preserve">
          <source>SetWriteDeadline sets the deadline for any future Write calls and any currently-blocked Write call. Even if Write times out, it may return n &amp;gt; 0, indicating that some of the data was successfully written. A zero value for t means Write will not time out. Not all files support setting deadlines; see SetDeadline.</source>
          <target state="translated">SetWriteDeadline устанавливает крайний срок для любых будущих вызовов записи и любых заблокированных в настоящее время вызовов записи. Даже если время записи истекло, он может вернуть n&amp;gt; 0, указывая на то, что некоторые данные были успешно записаны. Нулевое значение t означает, что время записи не истечет. Не все файлы поддерживают установку крайних сроков; см. SetDeadline.</target>
        </trans-unit>
        <trans-unit id="e383d386b9651b389cbae33232566bb47ae2af13" translate="yes" xml:space="preserve">
          <source>SetWriteDeadline sets the write deadline on the underlying connection. A zero value for t means Write will not time out. After a Write has timed out, the TLS state is corrupt and all future writes will return the same error.</source>
          <target state="translated">SetWriteDeadline устанавливает срок записи для базового соединения.Нулевое значение для t означает,что Write не будет таймаутом.После таймаута Write (Запись)состояние TLS повреждено и все последующие записи будут возвращать одну и ту же ошибку.</target>
        </trans-unit>
        <trans-unit id="308be1977132bdbc81c0f89a2767dd32da76c702" translate="yes" xml:space="preserve">
          <source>Setenv sets the value of the environment variable named by the key. It returns an error, if any.</source>
          <target state="translated">Setenv устанавливает значение переменной окружения,именованной ключом.Возвращает ошибку,если она есть.</target>
        </trans-unit>
        <trans-unit id="509f2c6d0467d5d83c9526f638c505af46797567" translate="yes" xml:space="preserve">
          <source>Setters, numeric operations and predicates are represented as methods of the form:</source>
          <target state="translated">Установки,числовые операции и предикаты представлены в виде методов формы:</target>
        </trans-unit>
        <trans-unit id="8b84f9f04ca185b4b399c76c8fc7c01ef4f564e3" translate="yes" xml:space="preserve">
          <source>Shift returns the result of the shift expression x op s with op == token.SHL or token.SHR (&amp;lt;&amp;lt; or &amp;gt;&amp;gt;). x must be an Int or an Unknown. If x is Unknown, the result is x.</source>
          <target state="translated">Shift возвращает результат выражения сдвига x op s с op == token.SHL или token.SHR (&amp;lt;&amp;lt; или &amp;gt;&amp;gt;). x должен быть Int или Unknown. Если x неизвестно, результатом будет x.</target>
        </trans-unit>
        <trans-unit id="fde43f2305da307b56958af17198c21e47808653" translate="yes" xml:space="preserve">
          <source>Short reports whether the -test.short flag is set.</source>
          <target state="translated">Короткие сообщения о том,установлен ли флаг -test.short.</target>
        </trans-unit>
        <trans-unit id="5b772b7bfd0a43273fb7c5f49a6c16d837261f35" translate="yes" xml:space="preserve">
          <source>Shuffle</source>
          <target state="translated">Shuffle</target>
        </trans-unit>
        <trans-unit id="79a2c163367d393e517ed372229f5d310534a9d9" translate="yes" xml:space="preserve">
          <source>Shuffle (SlicesInUnison)</source>
          <target state="translated">Шаффл (SlicesInUnison)</target>
        </trans-unit>
        <trans-unit id="732d9d1b7fa9ce160a254c0eec34ec29c54e1b79" translate="yes" xml:space="preserve">
          <source>Shuffle pseudo-randomizes the order of elements using the default Source. n is the number of elements. Shuffle panics if n &amp;lt; 0. swap swaps the elements with indexes i and j.</source>
          <target state="translated">Shuffle псевдослучайно изменяет порядок элементов, используя Source по умолчанию. n - количество элементов. Shuffle вызывает панику, если n &amp;lt;0. swap меняет местами элементы с индексами i и j.</target>
        </trans-unit>
        <trans-unit id="6d3cd15e0fd6a7a5b1756b9af5c51872006c475b" translate="yes" xml:space="preserve">
          <source>Shuffle pseudo-randomizes the order of elements. n is the number of elements. Shuffle panics if n &amp;lt; 0. swap swaps the elements with indexes i and j.</source>
          <target state="translated">Shuffle псевдослучайно изменяет порядок элементов. n - количество элементов. Shuffle вызывает панику, если n &amp;lt;0. swap меняет местами элементы с индексами i и j.</target>
        </trans-unit>
        <trans-unit id="8e0c7b7cdf248102d52e5f44dcd474d4d82c359e" translate="yes" xml:space="preserve">
          <source>Shutdown does not attempt to close nor wait for hijacked connections such as WebSockets. The caller of Shutdown should separately notify such long-lived connections of shutdown and wait for them to close, if desired. See RegisterOnShutdown for a way to register shutdown notification functions.</source>
          <target state="translated">Отключение не является попыткой закрыть или дождаться перехваченных соединений,таких как WebSockets.Звонящий в Shutdown должен отдельно уведомить о завершении работы таких долгоживущих соединений и при желании дождаться их закрытия.Способ регистрации функций уведомления о выключении см.в RegisterOnShutdown.</target>
        </trans-unit>
        <trans-unit id="38dcf86ad76a9ad474561d4239201b3f812c81b9" translate="yes" xml:space="preserve">
          <source>Shutdown gracefully shuts down the server without interrupting any active connections. Shutdown works by first closing all open listeners, then closing all idle connections, and then waiting indefinitely for connections to return to idle and then shut down. If the provided context expires before the shutdown is complete, Shutdown returns the context's error, otherwise it returns any error returned from closing the Server's underlying Listener(s).</source>
          <target state="translated">Выключение изящно завершает работу сервера,не прерывая никаких активных соединений.Выключение работает следующим образом:сначала закрываются все открытые слушатели,затем закрываются все незадействованные соединения,а затем бессрочно ждут,когда соединения вернутся в состояние покоя,а затем выключаются.Если предоставленный контекст истекает до завершения выключения,то Shutdown возвращает ошибку контекста,в противном случае он возвращает любую ошибку,возвращенную после закрытия сервера,лежащего в основе слушателя (слушателей).</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="4dc2181e93ae969f803429357fe579abd176b4b4" translate="yes" xml:space="preserve">
          <source>Sign returns -1, 0, or 1 depending on whether x &amp;lt; 0, x == 0, or x &amp;gt; 0; x must be numeric or Unknown. For complex values x, the sign is 0 if x == 0, otherwise it is != 0. If x is Unknown, the result is 1.</source>
          <target state="translated">Знак возвращает -1, 0 или 1 в зависимости от того, x &amp;lt;0, x == 0 или x&amp;gt; 0; x должен быть числовым или неизвестным. Для комплексных значений x знак равен 0, если x == 0, в противном случае -! = 0. Если x - Неизвестно, результатом будет 1.</target>
        </trans-unit>
        <trans-unit id="b52aac6f1207124113d4a678eb49a1b5cf712f7a" translate="yes" xml:space="preserve">
          <source>Sign returns:</source>
          <target state="translated">Знак возвращается:</target>
        </trans-unit>
        <trans-unit id="6589591f2f20ffb39adee81e8ba10edbe7dacc2e" translate="yes" xml:space="preserve">
          <source>Sign signs a hash (which should be the result of hashing a larger message) using the private key, priv. If the hash is longer than the bit-length of the private key's curve order, the hash will be truncated to that length. It returns the signature as a pair of integers. The security of the private key depends on the entropy of rand.</source>
          <target state="translated">Подпись подписывает хэш (который должен быть результатом хэширования более крупного сообщения),используя закрытый ключ,приватный.Если хэш длиннее битовой длины кривой закрытого ключа,то хэш будет усечен до этой длины.Он возвращает сигнатуру как пару целых чисел.Безопасность закрытого ключа зависит от энтропии rand.</target>
        </trans-unit>
        <trans-unit id="311212195f2e7e53bfbdc1974b3a767400f6e3ff" translate="yes" xml:space="preserve">
          <source>Sign signs an arbitrary length hash (which should be the result of hashing a larger message) using the private key, priv. It returns the signature as a pair of integers. The security of the private key depends on the entropy of rand.</source>
          <target state="translated">Знак обозначает хэш произвольной длины (который должен быть результатом хэширования сообщения большей длины)с использованием закрытого ключа,private.Он возвращает сигнатуру как пару целых чисел.Безопасность закрытого ключа зависит от энтропии rand.</target>
        </trans-unit>
        <trans-unit id="c12807935684d6d5a767b5418d3f2f1d36802c6e" translate="yes" xml:space="preserve">
          <source>Sign signs digest with priv, reading randomness from rand. If opts is a *PSSOptions then the PSS algorithm will be used, otherwise PKCS #1 v1.5 will be used. digest must be the result of hashing the input message using opts.HashFunc().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd714756dfd32673e7a5fdf4e7a7d3f4c1f0476c" translate="yes" xml:space="preserve">
          <source>Sign signs digest with priv, reading randomness from rand. If opts is a *PSSOptions then the PSS algorithm will be used, otherwise PKCS#1 v1.5 will be used.</source>
          <target state="translated">Подпись знаков дайджест с рядовым,читая случайность из Рэнда.Если опция *PSSOptions,то будет использован алгоритм PSS,иначе PKCS#1 v1.5.</target>
        </trans-unit>
        <trans-unit id="725a324c83bff5484063c9fb79ed06b1a642a7c9" translate="yes" xml:space="preserve">
          <source>Sign signs digest with priv, reading randomness from rand. The opts argument is not currently used but, in keeping with the crypto.Signer interface, should be the hash function used to digest the message.</source>
          <target state="translated">Подпись знаков дайджест с рядовым,читая случайность из Рэнда.Аргумент opts в настоящее время не используется,но,в соответствии с интерфейсом crypto.Signer,должен быть хэш-функцией,используемой для дайджеста сообщения.</target>
        </trans-unit>
        <trans-unit id="cb5cc6baa9959aae2928064eeabac37026d1fdd3" translate="yes" xml:space="preserve">
          <source>Sign signs the given message with priv. Ed25519 performs two passes over messages to be signed and therefore cannot handle pre-hashed messages. Thus opts.HashFunc() must return zero to indicate the message hasn't been hashed. This can be achieved by passing crypto.Hash(0) as the value for opts.</source>
          <target state="translated">Подпись подписывает данное сообщение личным сообщением.Ed25519 выполняет два прохода над сообщениями,подлежащими подписанию,и поэтому не может обрабатывать предварительно хэшированные сообщения.Таким образом,opts.HashFunc()должна возвращать ноль,чтобы показать,что сообщение не было хэшировано.Это может быть достигнуто передачей crypto.Hash(0)в качестве значения opts.</target>
        </trans-unit>
        <trans-unit id="8d9bc9097d624689f3abd051873c0827e390ddd8" translate="yes" xml:space="preserve">
          <source>Sign signs the message with privateKey and returns a signature. It will panic if len(privateKey) is not PrivateKeySize.</source>
          <target state="translated">Подпись подписывает сообщение privateKey и возвращает подпись.Он будет паниковать,если len(privateKey)не является PrivateKeySize.</target>
        </trans-unit>
        <trans-unit id="374ef04419fa455579e2922ef305611877eeff57" translate="yes" xml:space="preserve">
          <source>SignASN1 signs a hash (which should be the result of hashing a larger message) using the private key, priv. If the hash is longer than the bit-length of the private key's curve order, the hash will be truncated to that length. It returns the ASN.1 encoded signature. The security of the private key depends on the entropy of rand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73058d5661f51255d2d044bad5e22d1dbeb1615f" translate="yes" xml:space="preserve">
          <source>SignPKCS1v15</source>
          <target state="translated">SignPKCS1v15</target>
        </trans-unit>
        <trans-unit id="c0fa762cfc4f83cc1ae6eb824e2e7d2490239baf" translate="yes" xml:space="preserve">
          <source>SignPKCS1v15 calculates the signature of hashed using RSASSA-PKCS1-V1_5-SIGN from RSA PKCS #1 v1.5. Note that hashed must be the result of hashing the input message using the given hash function. If hash is zero, hashed is signed directly. This isn't advisable except for interoperability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a7f1a903c9bd79d05146e331e0afbf510916e4" translate="yes" xml:space="preserve">
          <source>SignPKCS1v15 calculates the signature of hashed using RSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5. Note that hashed must be the result of hashing the input message using the given hash function. If hash is zero, hashed is signed directly. This isn't advisable except for interoperability.</source>
          <target state="translated">SignPKCS1v15 вычисляет сигнатуру хэширования с помощью RSASSA-PKCS1-V1_5-SIGN из RSA PKCS#1 v1.5.Обратите внимание,что хэширование должно быть результатом хэширования входного сообщения с помощью данной хэш-функции.Если хэш равен нулю,то хэш подписывается непосредственно.Это не рекомендуется,за исключением интероперабельности.</target>
        </trans-unit>
        <trans-unit id="a8dc8c6fdf07694c004d0ad09c1805b1db05045f" translate="yes" xml:space="preserve">
          <source>SignPSS calculates the signature of digest using PSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc02ffb85c827150cad191cf75b74252c850c11" translate="yes" xml:space="preserve">
          <source>SignPSS calculates the signature of hashed using RSASSA-PSS [1]. Note that hashed must be the result of hashing the input message using the given hash function. The opts argument may be nil, in which case sensible defaults are used.</source>
          <target state="translated">SignPSS рассчитывает подпись хэширования с помощью RSASSA-PSS [1].Обратите внимание,что хэширование должно быть результатом хэширования входного сообщения с помощью данной функции хэширования.Аргументом opts может быть nil,в этом случае используются разумные значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="456ecb37c3fc5855213ab977448f009637d487e9" translate="yes" xml:space="preserve">
          <source>Signal sends a signal to the Process. Sending Interrupt on Windows is not implemented.</source>
          <target state="translated">Сигнал посылает сигнал Процессу.Отправка прерывания в Windows не реализована.</target>
        </trans-unit>
        <trans-unit id="113054b65e3d478c55ce8ee9e7136eef91adbb6a" translate="yes" xml:space="preserve">
          <source>Signal wakes one goroutine waiting on c, if there is any.</source>
          <target state="translated">Сигнал пробуждает одну горутину,ожидающую на С,если она есть.</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="9a761dffcc7f2df5b531ae01c6e9c1d10354c3aa" translate="yes" xml:space="preserve">
          <source>Signals are primarily used on Unix-like systems. For the use of this package on Windows and Plan 9, see below.</source>
          <target state="translated">Сигналы в основном используются на Unix-подобных системах.Использование этого пакета в Windows и Плане 9,см.ниже.</target>
        </trans-unit>
        <trans-unit id="be08fe4d5181cd9a339446858cf8e98d5d370ad9" translate="yes" xml:space="preserve">
          <source>SignatureScheme identifies a signature algorithm supported by TLS. See RFC 8446, Section 4.2.3.</source>
          <target state="translated">SignatureScheme идентифицирует алгоритм подписи,поддерживаемый TLS.См.RFC 8446,раздел 4.2.3.</target>
        </trans-unit>
        <trans-unit id="72364e765319ca6184606bdfcbeaf4bae3efe083" translate="yes" xml:space="preserve">
          <source>Signbit reports whether x is negative or negative zero.</source>
          <target state="translated">Знак сообщает,является ли x отрицательным или отрицательным нулем.</target>
        </trans-unit>
        <trans-unit id="06f0622cc55ee3b1ba8ef5291dd67f388a633bbf" translate="yes" xml:space="preserve">
          <source>Signed integers may be received into any signed integer variable: int, int16, etc.; unsigned integers may be received into any unsigned integer variable; and floating point values may be received into any floating point variable. However, the destination variable must be able to represent the value or the decode operation will fail.</source>
          <target state="translated">Подписанные целые числа могут быть приняты в любую знаковую целую переменную:int,int16 и т.д.;беззнаковые целые числа могут быть приняты в любую беззнаковую целую переменную;и значения с плавающей точкой могут быть приняты в любую переменную с плавающей точкой.Однако переменная назначения должна быть способна представлять значение,иначе операция декодирования завершится неудачно.</target>
        </trans-unit>
        <trans-unit id="ae900b849a1bf306b492bb9034be4bb3bc19b163" translate="yes" xml:space="preserve">
          <source>Signer is an interface for an opaque private key that can be used for signing operations. For example, an RSA key kept in a hardware module.</source>
          <target state="translated">Signer-это интерфейс для непрозрачного частного ключа,который может быть использован для подписания операций.Например,RSA ключ хранится в аппаратном модуле.</target>
        </trans-unit>
        <trans-unit id="38f4531ed194c331b7b23a6d3502ef6906c2f74a" translate="yes" xml:space="preserve">
          <source>SignerOpts contains options for signing with a Signer.</source>
          <target state="translated">SignerOpts содержит опции для подписания с подписантом.</target>
        </trans-unit>
        <trans-unit id="8332f3ce4c218d0bde5211f46f41f270a3be8e0c" translate="yes" xml:space="preserve">
          <source>Similarly to attributes with namespaces, attributes with a &quot;data-&quot; prefix are treated as if they had no &quot;data-&quot; prefix. So given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966d50452c96c3fa11f316a011f44cf776d22a17" translate="yes" xml:space="preserve">
          <source>SimpleFold</source>
          <target state="translated">SimpleFold</target>
        </trans-unit>
        <trans-unit id="8bf97e6e8efa121264307227008493331dea504d" translate="yes" xml:space="preserve">
          <source>SimpleFold iterates over Unicode code points equivalent under the Unicode-defined simple case folding. Among the code points equivalent to rune (including rune itself), SimpleFold returns the smallest rune &amp;gt; r if one exists, or else the smallest rune &amp;gt;= 0. If r is not a valid Unicode code point, SimpleFold(r) returns r.</source>
          <target state="translated">SimpleFold выполняет итерацию по кодовым точкам Unicode, эквивалентным определенному в Unicode простому сворачиванию регистра. Среди кодовых точек, эквивалентных руне (включая саму руну), SimpleFold возвращает наименьшую руну&amp;gt; r, если она существует, или наименьшую руну&amp;gt; = 0. Если r не является допустимой кодовой точкой Unicode, SimpleFold (r) возвращает r.</target>
        </trans-unit>
        <trans-unit id="b27adf68197f928a987f44243ba3dcfcda229444" translate="yes" xml:space="preserve">
          <source>Simplify returns a regexp equivalent to re but without counted repetitions and with various other simplifications, such as rewriting /(?:a+)+/ to /a+/. The resulting regexp will execute correctly but its string representation will not produce the same parse tree, because capturing parentheses may have been duplicated or removed. For example, the simplified form for /(x){1,2}/ is /(x)(x)?/ but both parentheses capture as $1. The returned regexp may share structure with or be the original.</source>
          <target state="translated">Упрощение возвращает регеxp,эквивалентный ре,но без учёта повторений и с различными другими упрощениями,такими как переписывание /(?:a+)+/в /a+/.Результирующий регеxp будет выполняться корректно,но его строковое представление не будет производить того же самого дерева разбора,потому что захватывающие скобки могли быть дублированы или удалены.Например,упрощенная форма для /(x){1,2}/-это /(x)(x)?/,но обе скобки захватывают как $1.Возвращаемый регеxp может разделять структуру с оригиналом или быть оригиналом.</target>
        </trans-unit>
        <trans-unit id="1baaf4288309b641acaf8ca1164546c4028a35a7" translate="yes" xml:space="preserve">
          <source>Sin</source>
          <target state="translated">Sin</target>
        </trans-unit>
        <trans-unit id="60fef841296be9ebf7de4bce978c61ea99668ac2" translate="yes" xml:space="preserve">
          <source>Sin returns the sine of the radian argument x.</source>
          <target state="translated">Грех возвращает синусоидальный аргумент радиан x.</target>
        </trans-unit>
        <trans-unit id="2d7deeeba21d579c050c2a33e2db608612f16ced" translate="yes" xml:space="preserve">
          <source>Sin returns the sine of x.</source>
          <target state="translated">Грех возвращает синус икса.</target>
        </trans-unit>
        <trans-unit id="032d0e9143af25fee0463a47b08e83403e61fbe1" translate="yes" xml:space="preserve">
          <source>Since os.FileInfo's Name method only returns the base name of the file it describes, it may be necessary to modify Header.Name to provide the full path name of the file.</source>
          <target state="translated">Поскольку метод os.FileInfo's Name возвращает только базовое имя описываемого файла,может потребоваться изменить Header.Name,чтобы указать полное имя пути к файлу.</target>
        </trans-unit>
        <trans-unit id="b67e676cda98cae04b5ce1604ab8e9db4fbb0636" translate="yes" xml:space="preserve">
          <source>Since returns the time elapsed since t. It is shorthand for time.Now().Sub(t).</source>
          <target state="translated">Так как возвращает время,прошедшее с t.Это сокращение для time.Now().Sub(t).</target>
        </trans-unit>
        <trans-unit id="4aada6d4483746dcd60dcf298d86136630d9cd91" translate="yes" xml:space="preserve">
          <source>Sincos</source>
          <target state="translated">Sincos</target>
        </trans-unit>
        <trans-unit id="602eea7f1523e01bb1b745122d12becc2cb4a99c" translate="yes" xml:space="preserve">
          <source>Sincos returns Sin(x), Cos(x).</source>
          <target state="translated">Синкос возвращает Sin(x),Cos(x).</target>
        </trans-unit>
        <trans-unit id="bc9965f20c0e26db0501d3424c1430869ed3389f" translate="yes" xml:space="preserve">
          <source>Single characters:</source>
          <target state="translated">Одиночные символы:</target>
        </trans-unit>
        <trans-unit id="e5d65368cdcef8d43d81f8b1167171bcc9e4d453" translate="yes" xml:space="preserve">
          <source>Sinh</source>
          <target state="translated">Sinh</target>
        </trans-unit>
        <trans-unit id="f35b8f7d99b41bcac88dc066f89ded4a25031767" translate="yes" xml:space="preserve">
          <source>Sinh returns the hyperbolic sine of x.</source>
          <target state="translated">Синь возвращает гиперболический синус Х.</target>
        </trans-unit>
        <trans-unit id="9d9b9bb8ffbb101e667ceeb0c6df4b2d00eca63e" translate="yes" xml:space="preserve">
          <source>Size returns how many bytes Write would generate to encode the value v, which must be a fixed-size value or a slice of fixed-size values, or a pointer to such data. If v is neither of these, Size returns -1.</source>
          <target state="translated">Размер возвращает,сколько байт будет сгенерировано Write для кодирования значения v,которое должно быть фиксированным размером или куском фиксированных значений,или указателем на такие данные.Если v не является ни тем,ни другим,Size возвращает -1.</target>
        </trans-unit>
        <trans-unit id="07f99b9766acbd34a40dce6ae52199b1df82e565" translate="yes" xml:space="preserve">
          <source>Size returns r's width and height.</source>
          <target state="translated">Размер возвращает ширину и высоту r.</target>
        </trans-unit>
        <trans-unit id="08603885cb8f4581e6caff80c9587384030d6fb2" translate="yes" xml:space="preserve">
          <source>Size returns the length, in bytes, of a digest resulting from the given hash function. It doesn't require that the hash function in question be linked into the program.</source>
          <target state="translated">Размер возвращает длину в байтах дайджеста,полученную с помощью заданной хэш-функции.Для этого не требуется,чтобы хэш-функция,о которой идет речь,была привязана к программе.</target>
        </trans-unit>
        <trans-unit id="e25ab5f340eca2d7c5b223c77e15ee75cde585ef" translate="yes" xml:space="preserve">
          <source>Size returns the modulus size in bytes. Raw signatures and ciphertexts for or by this public key will have the same size.</source>
          <target state="translated">Размер возвращает размер модуля в байтах.Сырые подписи и шифротексты для или по этому открытому ключу будут иметь одинаковый размер.</target>
        </trans-unit>
        <trans-unit id="e670e1a5854b86fb3e790eec7802ceb4072867ce" translate="yes" xml:space="preserve">
          <source>Size returns the number of leading ones and total bits in the mask. If the mask is not in the canonical form--ones followed by zeros--then Size returns 0, 0.</source>
          <target state="translated">Размер возвращает количество лидирующих и суммарных битов в маске.Если маска не в канонической форме-тоны,за которыми следуют нули-тогда Size возвращает 0,0.</target>
        </trans-unit>
        <trans-unit id="e50e49a71b6948817b0c75a5802d436dcfbbd3d4" translate="yes" xml:space="preserve">
          <source>Size returns the original length of the underlying byte slice. Size is the number of bytes available for reading via ReadAt. The returned value is always the same and is not affected by calls to any other method.</source>
          <target state="translated">Размер возвращает исходную длину ломтика байта,лежащего в основе.Размер-это количество байтов,доступных для чтения через ReadAt.Возвращаемое значение всегда одинаково и не изменяется при вызове любого другого метода.</target>
        </trans-unit>
        <trans-unit id="20090954ae229cf40fcf85ad90018bc0a50c14a6" translate="yes" xml:space="preserve">
          <source>Size returns the original length of the underlying string. Size is the number of bytes available for reading via ReadAt. The returned value is always the same and is not affected by calls to any other method.</source>
          <target state="translated">Размер возвращает исходную длину строки,лежащей в основе.Размер-это количество байт,доступное для чтения через ReadAt.Возвращаемое значение всегда одинаково и не зависит от обращения к любому другому методу.</target>
        </trans-unit>
        <trans-unit id="5a0d609fe825a666e200f379bb9b290e727375b4" translate="yes" xml:space="preserve">
          <source>Size returns the size of file f as registered with AddFile.</source>
          <target state="translated">Размер возвращает размер файла f,зарегистрированного в AddFile.</target>
        </trans-unit>
        <trans-unit id="5716d3e163196d9c451e87a39bff7287017defa9" translate="yes" xml:space="preserve">
          <source>Size returns the size of the section in bytes.</source>
          <target state="translated">Размер возвращает размер секции в байтах.</target>
        </trans-unit>
        <trans-unit id="33687cc2c12d65398be28bdfb49be5c9af20dea4" translate="yes" xml:space="preserve">
          <source>Size returns the size of the underlying buffer in bytes.</source>
          <target state="translated">Размер возвращает размер базового буфера в байтах.</target>
        </trans-unit>
        <trans-unit id="ad326c620cb25aa3f6f88fe50584af3756cb7137" translate="yes" xml:space="preserve">
          <source>Sizeof takes an expression x of any type and returns the size in bytes of a hypothetical variable v as if v was declared via var v = x. The size does not include any memory possibly referenced by x. For instance, if x is a slice, Sizeof returns the size of the slice descriptor, not the size of the memory referenced by the slice. The return value of Sizeof is a Go constant.</source>
          <target state="translated">Sizeof принимает выражение x любого типа и возвращает размер в байтах гипотетической переменной v,как если бы v была объявлена через var v=x.Размер не включает в себя память,на которую может ссылаться x.Например,если x-срез,Sizeof возвращает размер дескриптора среза,а не размер памяти,на которую ссылается срез.Возвращаемое значение Sizeof является константой Go.</target>
        </trans-unit>
        <trans-unit id="b19905df7d36355c364fc4d465be7029063705c6" translate="yes" xml:space="preserve">
          <source>Sizes defines the sizing functions for package unsafe.</source>
          <target state="translated">Размеры определяют функции определения размеров для опасного пакета.</target>
        </trans-unit>
        <trans-unit id="58588dd4d69fcc2bebbb32cb3311a65197ef6d80" translate="yes" xml:space="preserve">
          <source>SizesFor returns the Sizes used by a compiler for an architecture. The result is nil if a compiler/architecture pair is not known.</source>
          <target state="translated">SizeFor возвращает размеры,используемые компилятором для архитектуры.Результат равен нулю,если неизвестна пара компилятор/архитектура.</target>
        </trans-unit>
        <trans-unit id="f2bf90f6b1f23cb7aca2de8f99806d297f79d8f6" translate="yes" xml:space="preserve">
          <source>Skip is equivalent to Log followed by SkipNow.</source>
          <target state="translated">Пропуск эквивалентен Журналу,за которым следует SkipNow.</target>
        </trans-unit>
        <trans-unit id="16403f951a4dfc8a1c243a0f8eb301e145aaacf2" translate="yes" xml:space="preserve">
          <source>Skip reads tokens until it has consumed the end element matching the most recent start element already consumed. It recurs if it encounters a start element, so it can be used to skip nested structures. It returns nil if it finds an end element matching the start element; otherwise it returns an error describing the problem.</source>
          <target state="translated">Пропустить чтение маркеров до тех пор,пока не будет потреблен конечный элемент,соответствующий самому последнему начальному элементу,который уже был потреблен.Он возвращается назад,если встречает стартовый элемент,поэтому может быть использован для пропуска вложенных структур.Возвращает ноль,если находит конечный элемент,соответствующий стартовому элементу;в противном случае возвращает ошибку,описывающую проблему.</target>
        </trans-unit>
        <trans-unit id="70514769bf0cf43aa1fd9a8170e861cfc268114d" translate="yes" xml:space="preserve">
          <source>SkipChildren skips over the child entries associated with the last Entry returned by Next. If that Entry did not have children or Next has not been called, SkipChildren is a no-op.</source>
          <target state="translated">SkipChildren пропускает дочерние записи,связанные с последней записью,возвращенной Next.Если у этой записи не было детей или не был вызван Next,пропускать детей нельзя.</target>
        </trans-unit>
        <trans-unit id="306f2cf9cd44bb1158534a5fe5beb03317afa4af" translate="yes" xml:space="preserve">
          <source>SkipDir is used as a return value from WalkFuncs to indicate that the directory named in the call is to be skipped. It is not returned as an error by any function.</source>
          <target state="translated">SkipDir используется в качестве возвращаемого значения из WalkFuncs,чтобы указать,что каталог,названный в вызове,должен быть пропущен.Оно не возвращается по ошибке ни одной из функций.</target>
        </trans-unit>
        <trans-unit id="a9f977172633094ba7da3e08af3ab05c0c517aa4" translate="yes" xml:space="preserve">
          <source>SkipNow marks the test as having been skipped and stops its execution by calling runtime.Goexit. If a test fails (see Error, Errorf, Fail) and is then skipped, it is still considered to have failed. Execution will continue at the next test or benchmark. See also FailNow. SkipNow must be called from the goroutine running the test, not from other goroutines created during the test. Calling SkipNow does not stop those other goroutines.</source>
          <target state="translated">SkipNow помечает тест как пропущенный и останавливает его выполнение вызовом runtime.Goexit.Если тест не удаётся (см.Ошибка,ошибка,сбой),а затем пропускается,он всё равно считается неудачным.Выполнение будет продолжено на следующем тесте или бенчмарке.См.также FailNow.SkipNow должен быть вызван из гортани,запущенной во время теста,а не из других гортаней,созданных во время теста.Вызов SkipNow не останавливает этих других goroutine.</target>
        </trans-unit>
        <trans-unit id="332b0733aeb219d3842af5da1737b4332e8bb58a" translate="yes" xml:space="preserve">
          <source>Skipf is equivalent to Logf followed by SkipNow.</source>
          <target state="translated">Skipf эквивалентен Logf,за которым следует SkipNow.</target>
        </trans-unit>
        <trans-unit id="416b07f26916aed7cb9e2ecd9aa8ab976885e47e" translate="yes" xml:space="preserve">
          <source>Skipped reports whether the test was skipped.</source>
          <target state="translated">Пропущенные отчеты о том,был ли пропущен тест.</target>
        </trans-unit>
        <trans-unit id="22c22c92516b167e48a8850862fd9d43b049ad6a" translate="yes" xml:space="preserve">
          <source>Skipping</source>
          <target state="translated">Skipping</target>
        </trans-unit>
        <trans-unit id="3cac34e674464c2b62286054cd9a2d2c81149efc" translate="yes" xml:space="preserve">
          <source>Sleep</source>
          <target state="translated">Sleep</target>
        </trans-unit>
        <trans-unit id="53bb6e499b626b0d907f8d7f80059af55f685b40" translate="yes" xml:space="preserve">
          <source>Sleep pauses the current goroutine for at least the duration d. A negative or zero duration causes Sleep to return immediately.</source>
          <target state="translated">Сон приостанавливает текущий гортань,по крайней мере,на время d.Отрицательная или нулевая продолжительность вызывает немедленный возврат к спящему.</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="4972372ab292852581dde17e7410c1a0a34536d2" translate="yes" xml:space="preserve">
          <source>Slice returns v[i:j]. It panics if v's Kind is not Array, Slice or String, or if v is an unaddressable array, or if the indexes are out of bounds.</source>
          <target state="translated">Slice возвращает v[i:j].Она паникует,если v's Kind не является массивом,срезом или строкой,или v является неадрессируемым массивом,или если индексы выходят за рамки.</target>
        </trans-unit>
        <trans-unit id="f664f65e07ee83c0603b67c75f98aa98e653bee6" translate="yes" xml:space="preserve">
          <source>Slice sorts the provided slice given the provided less function.</source>
          <target state="translated">Кусок сортирует предоставленный кусок с учетом меньшей функции.</target>
        </trans-unit>
        <trans-unit id="c9c2b1fb38f90f114fb07f736146472316c1fd01" translate="yes" xml:space="preserve">
          <source>Slice values are deeply equal when all of the following are true: they are both nil or both non-nil, they have the same length, and either they point to the same initial entry of the same underlying array (that is, &amp;amp;x[0] == &amp;amp;y[0]) or their corresponding elements (up to length) are deeply equal. Note that a non-nil empty slice and a nil slice (for example, []byte{} and []byte(nil)) are not deeply equal.</source>
          <target state="translated">Значения срезов полностью равны, если все следующие верны: они оба равны нулю или оба не равны нулю, они имеют одинаковую длину и либо они указывают на одну и ту же начальную запись одного и того же базового массива (то есть &amp;amp; x [0 ] == &amp;amp; y [0]) или их соответствующие элементы (до длины) глубоко равны. Обратите внимание, что пустой фрагмент, отличный от nil, и пустой фрагмент (например, [] byte {} и [] byte (nil)) не полностью равны.</target>
        </trans-unit>
        <trans-unit id="187ce922ba02cf6f5feb1dc1495c357805a44a28" translate="yes" xml:space="preserve">
          <source>Slice3 is the 3-index form of the slice operation: it returns v[i:j:k]. It panics if v's Kind is not Array or Slice, or if v is an unaddressable array, or if the indexes are out of bounds.</source>
          <target state="translated">Slice3-это 3-индексная форма операции со срезом:она возвращает v[i:j:k].Она паникует,если v's Kind не является массивом или Slice,или v является неадрессируемым массивом,или если индексы выходят за рамки.</target>
        </trans-unit>
        <trans-unit id="036571bfad79ab866cb35b30d706649dfea91e3e" translate="yes" xml:space="preserve">
          <source>Slice:</source>
          <target state="translated">Slice:</target>
        </trans-unit>
        <trans-unit id="0294a1ce63eca0958f1a3380376dd5b3772daeaa" translate="yes" xml:space="preserve">
          <source>SliceHeader is the runtime representation of a slice. It cannot be used safely or portably and its representation may change in a later release. Moreover, the Data field is not sufficient to guarantee the data it references will not be garbage collected, so programs must keep a separate, correctly typed pointer to the underlying data.</source>
          <target state="translated">SliceHeader-это представление среза во время выполнения.Он не может быть использован безопасно или портативно,и его представление может измениться в более поздней версии.Более того,поля Data недостаточно для того,чтобы гарантировать,что данные,на которые оно ссылается,не будут собраны в мусор,поэтому программы должны хранить отдельный,правильно набранный указатель на лежащие в основе данные.</target>
        </trans-unit>
        <trans-unit id="c22ee253fc38582e76e1a487b795c3ec911e294a" translate="yes" xml:space="preserve">
          <source>SliceIsSorted tests whether a slice is sorted.</source>
          <target state="translated">SliceISorted проверяет,отсортирован ли кусок.</target>
        </trans-unit>
        <trans-unit id="45eaaaf070f6c38ebb684650d2e76ac52a7e3905" translate="yes" xml:space="preserve">
          <source>SliceOf returns the slice type with element type t. For example, if t represents int, SliceOf(t) represents []int.</source>
          <target state="translated">SliceOf возвращает тип среза с типом элемента t.Например,если t представляет int,то SliceOf(t)представляет []int.</target>
        </trans-unit>
        <trans-unit id="d3f5d8267a68290ad1478266ac0100b64a9ec9d9" translate="yes" xml:space="preserve">
          <source>SlicePtrFromStrings converts a slice of strings to a slice of pointers to NUL-terminated byte arrays. If any string contains a NUL byte, it returns (nil, EINVAL).</source>
          <target state="translated">SlicePtrFromStrings преобразует срез строк в срез указателей в NUL-терминированные массивы байтов.Если какая-либо строка содержит NUL-байт,то она возвращается (nil,EINVAL).</target>
        </trans-unit>
        <trans-unit id="1c864d92c212ef8abfd9b5a7229b7d9cb38de7a2" translate="yes" xml:space="preserve">
          <source>SliceStable</source>
          <target state="translated">SliceStable</target>
        </trans-unit>
        <trans-unit id="291aafdf1861d62c9bc50f1c83d1800a3cb0913c" translate="yes" xml:space="preserve">
          <source>SliceStable sorts the provided slice given the provided less function while keeping the original order of equal elements.</source>
          <target state="translated">SliceStable сортирует предоставленный ломтик с меньшим количеством функций при сохранении исходного порядка одинаковых элементов.</target>
        </trans-unit>
        <trans-unit id="24220363f4bcd3c6462dbe1e7e4afff4012817f0" translate="yes" xml:space="preserve">
          <source>Slices of bytes in the returned token data refer to the parser's internal buffer and remain valid only until the next call to Token. To acquire a copy of the bytes, call CopyToken or the token's Copy method.</source>
          <target state="translated">Фрагменты байтов в возвращаемых токеновых данных относятся к внутреннему буферу парсера и остаются действительными только до следующего вызова Token.Для получения копии байтов необходимо обратиться к CopyToken или к методу Copy токена.</target>
        </trans-unit>
        <trans-unit id="fc7f681747838baecdc0ee29795205530bc0b270" translate="yes" xml:space="preserve">
          <source>SocketControlMessage represents a socket control message.</source>
          <target state="translated">SocketControlMessage представляет собой управляющее сообщение сокета.</target>
        </trans-unit>
        <trans-unit id="4457c2edf950c3c3e9063b3a5f5427cad62d71ba" translate="yes" xml:space="preserve">
          <source>Some protocols may impose additional requirements on pre-escaping the username and password. For instance, when used with OAuth2, both arguments must be URL encoded first with url.QueryEscape.</source>
          <target state="translated">Некоторые протоколы могут предъявлять дополнительные требования к предварительному вводу имени пользователя и пароля.Например,при использовании с OAuth2 оба аргумента должны быть сначала закодированы в URL с помощью url.QueryEscape.</target>
        </trans-unit>
        <trans-unit id="0b8c5ca797beb6df3a3a7d32f3dea277a5bafd3c" translate="yes" xml:space="preserve">
          <source>Some valid layouts are invalid time values for time.Parse, due to formats such as _ for space padding and Z for zone information.</source>
          <target state="translated">Некоторые действительные компоновки являются недействительными значениями времени.Parse,из-за таких форматов,как_для заполнения пространства и Z для информации о зоне.</target>
        </trans-unit>
        <trans-unit id="89fbdcfdf1cfcd667a49cfe3f7c3c0bdc4ce5124" translate="yes" xml:space="preserve">
          <source>Sort is a convenience method.</source>
          <target state="translated">Сортировка-это удобный метод.</target>
        </trans-unit>
        <trans-unit id="f520ad1ca9ea89523277ded79bfeb4e271e735a8" translate="yes" xml:space="preserve">
          <source>Sort sorts an ErrorList. *Error entries are sorted by position, other errors are sorted by error message, and before any *Error entry.</source>
          <target state="translated">Сортировка сортирует ErrorList.*Записи об ошибках сортируются по позиции,другие ошибки сортируются по сообщению об ошибке и перед любым *записью об ошибке.</target>
        </trans-unit>
        <trans-unit id="f8bf7dfcfaee16c58648d64101d25f3215cc22e2" translate="yes" xml:space="preserve">
          <source>Sort sorts data. It makes one call to data.Len to determine n, and O(n*log(n)) calls to data.Less and data.Swap. The sort is not guaranteed to be stable.</source>
          <target state="translated">Сортировка сортирует данные.Он делает один вызов data.Len для определения n,а O(n*log(n))вызывает data.Less и data.Swap.Сортировка не гарантируется.</target>
        </trans-unit>
        <trans-unit id="decd49ac7a46241d55346a11f6d2fb74335dc7a9" translate="yes" xml:space="preserve">
          <source>SortImports sorts runs of consecutive import lines in import blocks in f. It also removes duplicate imports when it is possible to do so without data loss.</source>
          <target state="translated">SortImports сортирует строки последовательного импорта в блоках импорта в f.Также удаляет дубликаты импорта,когда это возможно без потери данных.</target>
        </trans-unit>
        <trans-unit id="6e2693fb2fa2b916dd95d972bbcb32b0b6b566ec" translate="yes" xml:space="preserve">
          <source>Source formats src in canonical gofmt style and returns the result or an (I/O or syntax) error. src is expected to be a syntactically correct Go source file, or a list of Go declarations or statements.</source>
          <target state="translated">Source форматирует src в каноническом стиле gofmt и возвращает результат или ошибку (I/O или синтаксис).src должен быть синтаксически корректным исходным файлом Go,или списком деклараций или утверждений Go.</target>
        </trans-unit>
        <trans-unit id="a91bed1365204e8353c0f745ca77893ae1b1305d" translate="yes" xml:space="preserve">
          <source>Source values of type bool may be scanned into types *bool, *interface{}, *string, *[]byte, or *RawBytes.</source>
          <target state="translated">Исходные значения типа bool могут быть отсканированы по типам *bool,*interface{},*string,*[]byte или *RawBytes.</target>
        </trans-unit>
        <trans-unit id="4cd3cd23d4f7a4635c360a861ee7be174fed76cc" translate="yes" xml:space="preserve">
          <source>Source values of type time.Time may be scanned into values of type *time.Time, *interface{}, *string, or *[]byte. When converting to the latter two, time.RFC3339Nano is used.</source>
          <target state="translated">Исходные значения типа time.Time могут быть отсканированы в значения типа *time.Time,*interface{},*string,или *[]byte.При преобразовании в два последних используется time.RFC3339Nano.</target>
        </trans-unit>
        <trans-unit id="6bdf6d7926b72078af0c191b3c6238538d7b0cb1" translate="yes" xml:space="preserve">
          <source>Special case is:</source>
          <target state="translated">Особый случай:</target>
        </trans-unit>
        <trans-unit id="38cf2e1ac5d0bfa814379b9cb5b1a8aad4c71895" translate="yes" xml:space="preserve">
          <source>Special cases are (in order):</source>
          <target state="translated">Особые случаи (по порядку):</target>
        </trans-unit>
        <trans-unit id="36ff1c61fcf6a6f96273c5129f496e6e2d52bc61" translate="yes" xml:space="preserve">
          <source>Special cases are the same as Exp.</source>
          <target state="translated">Особые случаи такие же,как и Exp.</target>
        </trans-unit>
        <trans-unit id="fb4f18f6f604123235431e09b3313991f0bb526d" translate="yes" xml:space="preserve">
          <source>Special cases are:</source>
          <target state="translated">Особые случаи:</target>
        </trans-unit>
        <trans-unit id="46044fc293a1827aa7aed188a242765b1470a9ed" translate="yes" xml:space="preserve">
          <source>Special section indices.</source>
          <target state="translated">Индексы специальных разделов.</target>
        </trans-unit>
        <trans-unit id="a2fde335dab74ce6562dfce419b45cb58e70ab07" translate="yes" xml:space="preserve">
          <source>SpecialCase</source>
          <target state="translated">SpecialCase</target>
        </trans-unit>
        <trans-unit id="47398a3a12335bdb3df057e3646557b1b5841333" translate="yes" xml:space="preserve">
          <source>SpecialCase represents language-specific case mappings such as Turkish. Methods of SpecialCase customize (by overriding) the standard mappings.</source>
          <target state="translated">SpecialCase представляет собой отображение языковых особенностей,таких как турецкий.Методы SpecialCase настраивают (переопределяя)стандартные отображения.</target>
        </trans-unit>
        <trans-unit id="fc8230b4119ad4b994db2324d71f4e0ae7ad932c" translate="yes" xml:space="preserve">
          <source>Split</source>
          <target state="translated">Split</target>
        </trans-unit>
        <trans-unit id="23392488f19a5d0be8c39d3cfafde4dd76bd94be" translate="yes" xml:space="preserve">
          <source>Split panics if it is called after scanning has started.</source>
          <target state="translated">Разделите панику,если она вызвана после начала сканирования.</target>
        </trans-unit>
        <trans-unit id="96e564d2bf5c731af05562ed176616a9d55a5e64" translate="yes" xml:space="preserve">
          <source>Split sets the split function for the Scanner. The default split function is ScanLines.</source>
          <target state="translated">Split устанавливает функцию разделения для сканера.Функция разделения по умолчанию-ScanLines.</target>
        </trans-unit>
        <trans-unit id="eb475bc85cdb49a4c4de00518ab4efe39bcec33e" translate="yes" xml:space="preserve">
          <source>Split slices s into all subslices separated by sep and returns a slice of the subslices between those separators. If sep is empty, Split splits after each UTF-8 sequence. It is equivalent to SplitN with a count of -1.</source>
          <target state="translated">Разделите ломтики на все подсласти,разделенные разделителями,и верните ломтик подсласти между этими разделителями.Если sep пуст,то Split разделяется после каждой последовательности UTF-8.Это эквивалентно SplitN со значением -1.</target>
        </trans-unit>
        <trans-unit id="67dbafd6c3b93902b18d8f321af8549a1b6ad6e7" translate="yes" xml:space="preserve">
          <source>Split slices s into all substrings separated by sep and returns a slice of the substrings between those separators.</source>
          <target state="translated">Разделите ломтики s на все подложки,разделенные разделителями,и верните ломтик подложек между этими разделителями.</target>
        </trans-unit>
        <trans-unit id="8a1469b01e576340018d58bd7e3d302e90dee09f" translate="yes" xml:space="preserve">
          <source>Split slices s into substrings separated by the expression and returns a slice of the substrings between those expression matches.</source>
          <target state="translated">Разделяет фрагменты s на подстроки,разделенные выражением,и возвращает фрагмент подстроек между этими выражениями,совпадающими.</target>
        </trans-unit>
        <trans-unit id="817430fe1883828acde2ae90d1a5b512a8d87c1e" translate="yes" xml:space="preserve">
          <source>Split splits path immediately following the final Separator, separating it into a directory and file name component. If there is no Separator in path, Split returns an empty dir and file set to path. The returned values have the property that path = dir+file.</source>
          <target state="translated">Разделите путь сразу после конечного разделителя,разделив его на компонент каталога и имени файла.Если в пути нет разделителя,Split возвращает пустой каталог и набор файлов по пути.Возвращаемые значения имеют свойство path=dir+file.</target>
        </trans-unit>
        <trans-unit id="04097266465adc5300d2bc3091a77206398acddf" translate="yes" xml:space="preserve">
          <source>Split splits path immediately following the final slash, separating it into a directory and file name component. If there is no slash in path, Split returns an empty dir and file set to path. The returned values have the property that path = dir+file.</source>
          <target state="translated">Разделяет путь сразу после последней косой черты,разделяя его на компонент каталога и имени файла.Если в пути нет косой черты,Split возвращает пустой диск и файл,установленный в путь.Возвращаемые значения имеют свойство path=dir+file.</target>
        </trans-unit>
        <trans-unit id="f645051fa0ea9f5fba674ae30e0eb8228c563bbb" translate="yes" xml:space="preserve">
          <source>SplitAfter</source>
          <target state="translated">SplitAfter</target>
        </trans-unit>
        <trans-unit id="af6f57e26d6655b8a560ff5a1ea503e038967615" translate="yes" xml:space="preserve">
          <source>SplitAfter slices s into all subslices after each instance of sep and returns a slice of those subslices. If sep is empty, SplitAfter splits after each UTF-8 sequence. It is equivalent to SplitAfterN with a count of -1.</source>
          <target state="translated">SplitAfter разбивает фрагменты на все подслассы после каждого экземпляра sep и возвращает фрагмент этих подслассов.Если sep пуст,то SplitAfter расщепляется после каждой последовательности UTF-8.Это эквивалентно SplitAfterN со значением -1.</target>
        </trans-unit>
        <trans-unit id="7b96a1319471e70dc0744f490b304d8e5292e091" translate="yes" xml:space="preserve">
          <source>SplitAfter slices s into all substrings after each instance of sep and returns a slice of those substrings.</source>
          <target state="translated">SplitAfter разбивает их на все подложки после каждого разделения и возвращает кусочек этих подложек.</target>
        </trans-unit>
        <trans-unit id="183e10127881bddc63e39844aca6fde7b55ad84d" translate="yes" xml:space="preserve">
          <source>SplitAfterN</source>
          <target state="translated">SplitAfterN</target>
        </trans-unit>
        <trans-unit id="71c5d7e2f9fd13201867043dfefbd28be7cef909" translate="yes" xml:space="preserve">
          <source>SplitAfterN slices s into subslices after each instance of sep and returns a slice of those subslices. If sep is empty, SplitAfterN splits after each UTF-8 sequence. The count determines the number of subslices to return:</source>
          <target state="translated">SplitAfterN разбивает фрагменты на подслассы после каждого экземпляра sep и возвращает фрагмент этих подслассов.Если sep пуст,то SplitAfterN расщепляется после каждой последовательности UTF-8.Счетчик определяет количество возвращаемых подслышей:</target>
        </trans-unit>
        <trans-unit id="b953b958d37f7636fa29a91139b9e599462e7d0a" translate="yes" xml:space="preserve">
          <source>SplitAfterN slices s into substrings after each instance of sep and returns a slice of those substrings.</source>
          <target state="translated">SplitAfterN разбивает их на подложки после каждого разделения и возвращает кусочек этих подложек.</target>
        </trans-unit>
        <trans-unit id="c42d1c66abbb920d11fa3452a55d6b02ca57969f" translate="yes" xml:space="preserve">
          <source>SplitFunc is the signature of the split function used to tokenize the input. The arguments are an initial substring of the remaining unprocessed data and a flag, atEOF, that reports whether the Reader has no more data to give. The return values are the number of bytes to advance the input and the next token to return to the user, if any, plus an error, if any.</source>
          <target state="translated">SplitFunc-это сигнатура сплит-функции,используемая для токенирования входа.Аргументами являются начальная подстрока оставшихся необработанных данных и флаг atEOF,который сообщает,нет ли у Читателя больше данных для передачи.Возвращаемые значения-это количество байт,которое должно предшествовать вводу,и следующий возвращаемый пользователю токен,если таковой имеется,плюс ошибка,если таковая имеется.</target>
        </trans-unit>
        <trans-unit id="b4cd81f732cbd3a8923ecb19ba58f0f16cb90789" translate="yes" xml:space="preserve">
          <source>SplitHostPort splits a network address of the form &quot;host:port&quot;, &quot;host%zone:port&quot;, &quot;[host]:port&quot; or &quot;[host%zone]:port&quot; into host or host%zone and port.</source>
          <target state="translated">SplitHostPort разделяет сетевой адрес вида &quot;host:port&quot;,&quot;host%zone:port&quot;,&quot;[host]:port&quot; или &quot;[host%zone]:port&quot; на host или host%zone и порт.</target>
        </trans-unit>
        <trans-unit id="83d28a087df2085b354d9219f029b5d90cf38ec4" translate="yes" xml:space="preserve">
          <source>SplitList</source>
          <target state="translated">SplitList</target>
        </trans-unit>
        <trans-unit id="2810f9f5e2566aed968386693eafb51ff308b597" translate="yes" xml:space="preserve">
          <source>SplitList splits a list of paths joined by the OS-specific ListSeparator, usually found in PATH or GOPATH environment variables. Unlike strings.Split, SplitList returns an empty slice when passed an empty string.</source>
          <target state="translated">SplitList разделяет список путей,к которым присоединяется специальный ListSeparator,обычно встречающийся в переменных окружения PATH или GOPATH.В отличие от strings.Split,SplitList возвращает пустой срез при передаче пустой строки.</target>
        </trans-unit>
        <trans-unit id="84cfaf9bc325cc024ba8d73b2f03f1f0b940f375" translate="yes" xml:space="preserve">
          <source>SplitN</source>
          <target state="translated">SplitN</target>
        </trans-unit>
        <trans-unit id="36c3c8ea011f7ef62da6893e010962d6852bd07a" translate="yes" xml:space="preserve">
          <source>SplitN slices s into subslices separated by sep and returns a slice of the subslices between those separators. If sep is empty, SplitN splits after each UTF-8 sequence. The count determines the number of subslices to return:</source>
          <target state="translated">РазделениеN ломтиков на подсласти,разделенные разделителями,и возвращает ломтик подсласти между этими разделителями.Если sep пуст,то SplitN разделяется после каждой последовательности UTF-8.Счетчик определяет количество возвращаемых подслёз:</target>
        </trans-unit>
        <trans-unit id="de01961453e6bcc30ddd7714ed914f746f011fab" translate="yes" xml:space="preserve">
          <source>SplitN slices s into substrings separated by sep and returns a slice of the substrings between those separators.</source>
          <target state="translated">Разделив их на подложки,разделите их на части и верните часть подложек между этими разделителями.</target>
        </trans-unit>
        <trans-unit id="8ca15484a6a50617febf823f3fa1c9e7038688ee" translate="yes" xml:space="preserve">
          <source>Sprint</source>
          <target state="translated">Sprint</target>
        </trans-unit>
        <trans-unit id="d0775164f7f53356c293723cd9c1222468d3a49b" translate="yes" xml:space="preserve">
          <source>Sprint formats using the default formats for its operands and returns the resulting string. Spaces are added between operands when neither is a string.</source>
          <target state="translated">Выполняет спринтеровку,используя форматы по умолчанию для своих операндов,и возвращает результирующую строку.Пробелы добавляются между операндами,когда ни один из них не является строкой.</target>
        </trans-unit>
        <trans-unit id="7d5fe7cc61bbb8158ad630a3820e3c126928a4a6" translate="yes" xml:space="preserve">
          <source>Sprintf</source>
          <target state="translated">Sprintf</target>
        </trans-unit>
        <trans-unit id="5bfb46358289368784772aa4aa5a217258b76236" translate="yes" xml:space="preserve">
          <source>Sprintf formats according to a format specifier and returns the resulting string.</source>
          <target state="translated">Sprintf форматирует в соответствии со спецификатором формата и возвращает результирующую строку.</target>
        </trans-unit>
        <trans-unit id="5446f67533b2f88354fccb3b84fed81fd676a9d5" translate="yes" xml:space="preserve">
          <source>Sprintln</source>
          <target state="translated">Sprintln</target>
        </trans-unit>
        <trans-unit id="d0bd83b3300fd81e26aa39c136cc9d6ce11bb5a7" translate="yes" xml:space="preserve">
          <source>Sprintln formats using the default formats for its operands and returns the resulting string. Spaces are always added between operands and a newline is appended.</source>
          <target state="translated">Sprintln использует форматы по умолчанию для своих операндов и возвращает результирующую строку.Пробелы всегда добавляются между операндами и добавляется новая строка.</target>
        </trans-unit>
        <trans-unit id="6bbb118b36018412cea4de47bc914f00685c9ac5" translate="yes" xml:space="preserve">
          <source>Sqrt</source>
          <target state="translated">Sqrt</target>
        </trans-unit>
        <trans-unit id="1b795ae9b134bc8c4c0b446e88fecc1f3b41d092" translate="yes" xml:space="preserve">
          <source>Sqrt returns the square root of x.</source>
          <target state="translated">Sqrt возвращает квадратный корень x.</target>
        </trans-unit>
        <trans-unit id="b85c9b396b0e4464f48aa17058f2b1082008ae70" translate="yes" xml:space="preserve">
          <source>Sqrt returns the square root of x. The result r is chosen so that real(r) &amp;ge; 0 and imag(r) has the same sign as imag(x).</source>
          <target state="translated">Sqrt возвращает квадратный корень из x. Результат r выбирается таким образом, чтобы real (r) &amp;ge; 0 и imag (r) имели тот же знак, что и imag (x).</target>
        </trans-unit>
        <trans-unit id="41b5f4c2f86ca750aabbdd4d6bdb915be0584893" translate="yes" xml:space="preserve">
          <source>Sqrt sets z to &amp;lfloor;&amp;radic;x&amp;rfloor;, the largest integer such that z&amp;sup2; &amp;le; x, and returns z. It panics if x is negative.</source>
          <target state="translated">Sqrt устанавливает z в &amp;radic;x&amp;rfloor;, наибольшее целое число, такое что z&amp;sup2; &amp;le; x, и возвращает z. Паника, если x отрицателен.</target>
        </trans-unit>
        <trans-unit id="2e519fcfbc6a90ddf75f1394fae55598d7af8898" translate="yes" xml:space="preserve">
          <source>Sqrt sets z to the rounded square root of x, and returns it.</source>
          <target state="translated">Sqrt устанавливает z в закругленный квадратный корень x и возвращает его.</target>
        </trans-unit>
        <trans-unit id="b183229b8a0007179105ee23f98db0fa35e992ca" translate="yes" xml:space="preserve">
          <source>SrcDirs returns a list of package source root directories. It draws from the current Go root and Go path but omits directories that do not exist.</source>
          <target state="translated">SrcDirs возвращает список корневых каталогов пакетов.Он черпает из текущего пути Go root и Go,но опускает каталоги,которые не существуют.</target>
        </trans-unit>
        <trans-unit id="ace37ead62176f4b0fef73d8a4e6eefe6e4e0808" translate="yes" xml:space="preserve">
          <source>Srcset encapsulates a known safe srcset attribute (see &lt;a href=&quot;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&quot;&gt;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&lt;/a&gt;).</source>
          <target state="translated">Srcset инкапсулирует известный безопасный атрибут srcset (см. &lt;a href=&quot;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&quot;&gt;Https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="608729966442ded3bea906aefa46d7a131fb981c" translate="yes" xml:space="preserve">
          <source>Sscan scans the argument string, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.</source>
          <target state="translated">Sscan сканирует строку аргумента,сохраняя последовательные значения,разделенные пробелами,в последовательных аргументах.Новые строки считаются пробелами.Возвращает количество успешно отсканированных элементов.Если это меньше,чем количество аргументов,то err сообщит почему.</target>
        </trans-unit>
        <trans-unit id="390342df3a9580b3ab53916d8e78ce9a67e05f51" translate="yes" xml:space="preserve">
          <source>Sscanf</source>
          <target state="translated">Sscanf</target>
        </trans-unit>
        <trans-unit id="61a716d2775c775cb5be05f41652e9aaaad32358" translate="yes" xml:space="preserve">
          <source>Sscanf scans the argument string, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully parsed. Newlines in the input must match newlines in the format.</source>
          <target state="translated">Sscanf сканирует строку аргумента,сохраняя последовательные значения,разделенные пробелами,в последовательных аргументах,определяемых форматом.Возвращает количество успешно разобранных элементов.Новые строки во входных данных должны совпадать с новыми строками в формате.</target>
        </trans-unit>
        <trans-unit id="af4732932dde6aa0c1e4ad7d04d2e2382ec0a0b6" translate="yes" xml:space="preserve">
          <source>Sscanln is similar to Sscan, but stops scanning at a newline and after the final item there must be a newline or EOF.</source>
          <target state="translated">Sscanln похож на Sscan,но останавливает сканирование на новой строке и после конечного пункта должна быть новая строка или EOF.</target>
        </trans-unit>
        <trans-unit id="6f3e4b56a56750c728e3e2463bad931f8918a9d7" translate="yes" xml:space="preserve">
          <source>Stable sorts data while keeping the original order of equal elements.</source>
          <target state="translated">Стабильная сортировка данных при сохранении исходного порядка равных элементов.</target>
        </trans-unit>
        <trans-unit id="c9e8e2e8cb17ec7f99a9db77c101e60f6136c3a5" translate="yes" xml:space="preserve">
          <source>Stack formats a stack trace of the calling goroutine into buf and returns the number of bytes written to buf. If all is true, Stack formats stack traces of all other goroutines into buf after the trace for the current goroutine.</source>
          <target state="translated">Стек форматирует след вызывающего горутина в buf и возвращает количество записанных в buf байт.Если все верно,то после трассировки для текущего горутина в buf форматируются следы всех других горутинов в стек.</target>
        </trans-unit>
        <trans-unit id="1cffafd303a34a6584721e138e5265f842cb505a" translate="yes" xml:space="preserve">
          <source>Stack returns a formatted stack trace of the goroutine that calls it. It calls runtime.Stack with a large enough buffer to capture the entire trace.</source>
          <target state="translated">Стек возвращает отформатированный след горутина,который его называет.Он вызывает runtime.Stack с достаточно большим буфером для захвата всей трассы.</target>
        </trans-unit>
        <trans-unit id="418aa94a169d739e57a35d99f93d9138e0bb4b62" translate="yes" xml:space="preserve">
          <source>Stack returns the stack trace associated with the record, a prefix of r.Stack0.</source>
          <target state="translated">Стек возвращает трассу стека,связанную с записью,префикс r.Stack0.</target>
        </trans-unit>
        <trans-unit id="687cb3d7c249eff01be44167736a622ba61578c9" translate="yes" xml:space="preserve">
          <source>Standard colors.</source>
          <target state="translated">Стандартные цвета.</target>
        </trans-unit>
        <trans-unit id="360c57caedbd1d1ff38dde144677c893d6ad3792" translate="yes" xml:space="preserve">
          <source>Standard library</source>
          <target state="translated">Стандартная библиотека</target>
        </trans-unit>
        <trans-unit id="9fb1a9f741b4439135087b938ed47613619d8e54" translate="yes" xml:space="preserve">
          <source>Start enables tracing for the current program. While tracing, the trace will be buffered and written to w. Start returns an error if tracing is already enabled.</source>
          <target state="translated">Пуск позволяет отслеживать текущую программу.Во время трассировки трасса будет буферизироваться и записываться в w.Start возвращает ошибку,если трассировка уже включена.</target>
        </trans-unit>
        <trans-unit id="d84f21e1e9935e064f3eccc25d6db5d4fb64a86a" translate="yes" xml:space="preserve">
          <source>Start starts a server from NewUnstartedServer.</source>
          <target state="translated">Запуск сервера с NewUnstartedServer.</target>
        </trans-unit>
        <trans-unit id="b61ef15d781bf8c860427db7964980f61966535c" translate="yes" xml:space="preserve">
          <source>Start starts the specified command but does not wait for it to complete.</source>
          <target state="translated">Запускает указанную команду,но не ждет ее завершения.</target>
        </trans-unit>
        <trans-unit id="7f51b09c0923a4603b545c471069b55e22a62f34" translate="yes" xml:space="preserve">
          <source>StartCPUProfile enables CPU profiling for the current process. While profiling, the profile will be buffered and written to w. StartCPUProfile returns an error if profiling is already enabled.</source>
          <target state="translated">StartCPUProfile позволяет профилировать CPU для текущего процесса.Во время профилирования профиль будет буферизироваться и записываться в w.StartCPUProfile возвращает ошибку,если профилирование уже включено.</target>
        </trans-unit>
        <trans-unit id="f3753321843c42ccf0d93028e612610280e12d5e" translate="yes" xml:space="preserve">
          <source>StartCond returns the leading empty-width conditions that must be true in any match. It returns ^EmptyOp(0) if no matches are possible.</source>
          <target state="translated">StartCond возвращает ведущие условия пустой ширины,которые должны быть верны в любом совпадении.Возвращает ^EmptyOp(0),если совпадений нет.</target>
        </trans-unit>
        <trans-unit id="e00bec2778efe9f0a1a92501d76b773c7dc58166" translate="yes" xml:space="preserve">
          <source>StartProcess is a low-level interface. The os/exec package provides higher-level interfaces.</source>
          <target state="translated">StartProcess-это низкоуровневый интерфейс.Пакет os/exec предоставляет интерфейсы более высокого уровня.</target>
        </trans-unit>
        <trans-unit id="4656baf99c52e7677cc8f68ccbc8052e39ef42e9" translate="yes" xml:space="preserve">
          <source>StartProcess starts a new process with the program, arguments and attributes specified by name, argv and attr. The argv slice will become os.Args in the new process, so it normally starts with the program name.</source>
          <target state="translated">StartProcess запускает новый процесс с программой,аргументами и атрибутами,указанными по имени,аргументу и аттру.В новом процессе срез argv станет os.Args,поэтому обычно он начинается с имени программы.</target>
        </trans-unit>
        <trans-unit id="d3d2be7776a3d003cee77683d05001ec6ef09966" translate="yes" xml:space="preserve">
          <source>StartProcess wraps ForkExec for package os.</source>
          <target state="translated">StartProcess обертывание ForkExec для пакета os.</target>
        </trans-unit>
        <trans-unit id="4593c93bfc9fb8dacabfc8b4a1731d4454969f64" translate="yes" xml:space="preserve">
          <source>StartRegion starts a region and returns a function for marking the end of the region. The returned Region's End function must be called from the same goroutine where the region was started. Within each goroutine, regions must nest. That is, regions started after this region must be ended before this region can be ended. Recommended usage is</source>
          <target state="translated">StartRegion начинает область и возвращает функцию маркировки конца области.Возвращаемая функция Region's End должна быть вызвана из того же горутина,с которого была начата область.Внутри каждого горутина регионы должны гнездиться.То есть,области,начатые после этой области,должны быть завершены до того,как эта область может быть завершенной.Рекомендуемое использование</target>
        </trans-unit>
        <trans-unit id="3b719a81fa9e5ddcbfba4cb3fb45c729f487d09e" translate="yes" xml:space="preserve">
          <source>StartRequest blocks until it is time to send (or, if this is a server, receive) the request with the given id.</source>
          <target state="translated">StartRequest блокирует до тех пор,пока не придет время отправить (или,если это сервер,получить)запрос с заданным id.</target>
        </trans-unit>
        <trans-unit id="338c8f94474f010aa4669ab2c0ae55a5c3a8c12a" translate="yes" xml:space="preserve">
          <source>StartResponse blocks until it is time to receive (or, if this is a server, send) the request with the given id.</source>
          <target state="translated">StartResponse блокирует до тех пор,пока не придет время получить (или,если это сервер,отправить)запрос с заданным id.</target>
        </trans-unit>
        <trans-unit id="7ea714fe33f9c8708b382ac24930c9134895c05e" translate="yes" xml:space="preserve">
          <source>StartTLS sends the STARTTLS command and encrypts all further communication. Only servers that advertise the STARTTLS extension support this function.</source>
          <target state="translated">StartTLS отправляет команду STARTTLS и шифрует все последующие соединения.Только серверы,которые рекламируют расширение STARTTLS,поддерживают эту функцию.</target>
        </trans-unit>
        <trans-unit id="d062840c5c4653552407064d11c812b2dfbbac16" translate="yes" xml:space="preserve">
          <source>StartTLS starts TLS on a server from NewUnstartedServer.</source>
          <target state="translated">StartTLS запускает TLS на сервере с NewUnstartedServer.</target>
        </trans-unit>
        <trans-unit id="01903002ac73fdbc83cec8f016e70281a8a03041" translate="yes" xml:space="preserve">
          <source>StartTimer starts timing a test. This function is called automatically before a benchmark starts, but it can also be used to resume timing after a call to StopTimer.</source>
          <target state="translated">StartTimer начинает отсчет времени для теста.Эта функция вызывается автоматически перед запуском бенчмарка,но также может быть использована для возобновления тайминга после вызова StopTimer.</target>
        </trans-unit>
        <trans-unit id="bb33cf53f4e568db572c687d22b2ff2888d74df9" translate="yes" xml:space="preserve">
          <source>StartTrace enables tracing for the current process. While tracing, the data will be buffered and available via ReadTrace. StartTrace returns an error if tracing is already enabled. Most clients should use the runtime/trace package or the testing package's -test.trace flag instead of calling StartTrace directly.</source>
          <target state="translated">StartTrace позволяет отслеживать текущий процесс.Во время трассировки данные будут буферизироваться и доступны через ReadTrace.StartTrace возвращает ошибку,если трассировка уже включена.Большинство клиентов должны использовать runtime/trace пакет или флаг тестового пакета -test.trace вместо прямого вызова StartTrace.</target>
        </trans-unit>
        <trans-unit id="6de552c394748272d237ee2909c17f8a5fd51503" translate="yes" xml:space="preserve">
          <source>Starting with Go 1.6, the http package has transparent support for the HTTP/2 protocol when using HTTPS. Programs that must disable HTTP/2 can do so by setting Transport.TLSNextProto (for clients) or Server.TLSNextProto (for servers) to a non-nil, empty map. Alternatively, the following GODEBUG environment variables are currently supported:</source>
          <target state="translated">Начиная с Go 1.6,пакет http имеет прозрачную поддержку протокола HTTP/2 при использовании HTTPS.Программы,которые должны отключить HTTP/2,могут сделать это,установив Transport.TLSNextProto (для клиентов)или Server.TLSNextProto (для серверов)в ненулевой,пустой карте.В качестве альтернативы в настоящее время поддерживаются следующие переменные окружения GODEBUG:</target>
        </trans-unit>
        <trans-unit id="9c555084811f017d34d2693472b49bb062306f30" translate="yes" xml:space="preserve">
          <source>Stat returns a FileInfo describing the named file. If there is an error, it will be of type *PathError.</source>
          <target state="translated">Stat возвращает FileInfo с описанием именованного файла.В случае ошибки он будет иметь тип *PathError.</target>
        </trans-unit>
        <trans-unit id="e4a95458fc56105197c2a964b9366157865cbb1b" translate="yes" xml:space="preserve">
          <source>Stat returns the FileInfo structure describing file. If there is an error, it will be of type *PathError.</source>
          <target state="translated">Stat возвращает структуру FileInfo,описывающую файл.В случае ошибки она будет иметь тип *PathError.</target>
        </trans-unit>
        <trans-unit id="6ed6c9c2af9ffd2ea1bfb59989c27d85db3a34df" translate="yes" xml:space="preserve">
          <source>State represents the printer state passed to custom formatters. It provides access to the io.Writer interface plus information about the flags and options for the operand's format specifier.</source>
          <target state="translated">Состояние представляет собой состояние принтера,переданное в пользовательские форматоры.Оно обеспечивает доступ к интерфейсу io.Writer,а также информацию о флагах и опциях спецификатора формата операндов.</target>
        </trans-unit>
        <trans-unit id="6c898e0bae6ae6e6a509998b0d70b717982994c3" translate="yes" xml:space="preserve">
          <source>Static reports whether this symbol is static (not visible outside its file).</source>
          <target state="translated">Статические отчеты о том,является ли этот символ статическим (не виден вне его файла).</target>
        </trans-unit>
        <trans-unit id="f107d6fd99e84eaeb4014efe73efa78374b13f61" translate="yes" xml:space="preserve">
          <source>Stats returns database statistics.</source>
          <target state="translated">Статистика возвращает статистику базы данных.</target>
        </trans-unit>
        <trans-unit id="473cf8363b9a9dc6de8f9778203d0b0d99ffe820" translate="yes" xml:space="preserve">
          <source>StatusText returns a text for the HTTP status code. It returns the empty string if the code is unknown.</source>
          <target state="translated">StatusText возвращает текст для кода статуса HTTP.Возвращает пустую строку,если код неизвестен.</target>
        </trans-unit>
        <trans-unit id="d95efd4b66df751ef4f7e7c0d6a981a761feec31" translate="yes" xml:space="preserve">
          <source>StdEncoding is the standard base32 encoding, as defined in RFC 4648.</source>
          <target state="translated">StdEncoding является стандартной кодировкой base32,как определено в RFC 4648.</target>
        </trans-unit>
        <trans-unit id="a9197d0bbe7d5f346c8fce4d5958e4af36331be4" translate="yes" xml:space="preserve">
          <source>StdEncoding is the standard base64 encoding, as defined in RFC 4648.</source>
          <target state="translated">StdEncoding является стандартной кодировкой base64,как определено в RFC 4648.</target>
        </trans-unit>
        <trans-unit id="c30cba7f2a4c150acfe65c8a3aa36a9ff709ad57" translate="yes" xml:space="preserve">
          <source>StdSizes is a convenience type for creating commonly used Sizes. It makes the following simplifying assumptions:</source>
          <target state="translated">StdSize является удобным типом для создания широко используемых размеров.Он делает следующие упрощающие предположения:</target>
        </trans-unit>
        <trans-unit id="34f196b4b0f694cd0a2f21247970027005c1305c" translate="yes" xml:space="preserve">
          <source>StderrPipe returns a pipe that will be connected to the command's standard error when the command starts.</source>
          <target state="translated">StderrPipe возвращает трубу,которая будет подключена к стандартной ошибке команды при запуске.</target>
        </trans-unit>
        <trans-unit id="f9c5224ebb81b29f683fd0f89569f0498e209b24" translate="yes" xml:space="preserve">
          <source>Stdin, Stdout, and Stderr are open Files pointing to the standard input, standard output, and standard error file descriptors.</source>
          <target state="translated">Stdin,Stdout и Stderr-это открытые файлы,указывающие на стандартные дескрипторы файлов ввода,вывода и ошибок.</target>
        </trans-unit>
        <trans-unit id="eaaa7d5358fae0ad4ea6507594efa4e1fe1938f3" translate="yes" xml:space="preserve">
          <source>StdinPipe returns a pipe that will be connected to the command's standard input when the command starts. The pipe will be closed automatically after Wait sees the command exit. A caller need only call Close to force the pipe to close sooner. For example, if the command being run will not exit until standard input is closed, the caller must close the pipe.</source>
          <target state="translated">StdinPipe возвращает трубку,которая будет подключена к стандартному входу команды при запуске команды.Труба будет закрыта автоматически после того,как Wait увидит выход команды.Звонящему нужно только позвонить Close,чтобы заставить трубу закрыться раньше.Например,если выполняемая команда не выйдет,пока не будет закрыт стандартный вход,вызывающий абонент должен закрыть трубу.</target>
        </trans-unit>
        <trans-unit id="e34e1f63d532ddcb966f6992c5d243530bff512e" translate="yes" xml:space="preserve">
          <source>StdoutPipe returns a pipe that will be connected to the command's standard output when the command starts.</source>
          <target state="translated">StdoutPipe возвращает трубу,которая будет подключена к стандартному выходу команды при запуске команды.</target>
        </trans-unit>
        <trans-unit id="35cb1f2f3090469fddd290f48f6f6f66f6cfbf71" translate="yes" xml:space="preserve">
          <source>Stmt</source>
          <target state="translated">Stmt</target>
        </trans-unit>
        <trans-unit id="e8d756b195575772804ef522d92696943863af82" translate="yes" xml:space="preserve">
          <source>Stmt is a prepared statement. A Stmt is safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Stmt-это подготовленное заявление.Stmt безопасен для одновременного использования несколькими гориллами.</target>
        </trans-unit>
        <trans-unit id="0bb26a3ab8d8618ecc81beec5115670b66a970d5" translate="yes" xml:space="preserve">
          <source>Stmt is a prepared statement. It is bound to a Conn and not used by multiple goroutines concurrently.</source>
          <target state="translated">Stmt-это подготовленное заявление.Он связан с коннектором и не используется несколькими гориллами одновременно.</target>
        </trans-unit>
        <trans-unit id="9e8123e57a051d77d8becac273756b24f947f7c4" translate="yes" xml:space="preserve">
          <source>Stmt returns a transaction-specific prepared statement from an existing statement.</source>
          <target state="translated">Stmt возвращает подготовленное заявление по конкретной операции из существующего заявления.</target>
        </trans-unit>
        <trans-unit id="9e2e6090b163c6036190ffea94ddcfbb24b8b882" translate="yes" xml:space="preserve">
          <source>Stmt.QueryRowContext</source>
          <target state="translated">Stmt.QueryRowContext</target>
        </trans-unit>
        <trans-unit id="70af1d64e33ba2bc94ac6b94c7823d3046a2e685" translate="yes" xml:space="preserve">
          <source>StmtContext returns a transaction-specific prepared statement from an existing statement.</source>
          <target state="translated">StmtContext возвращает подготовленное заявление по конкретной операции из существующего заявления.</target>
        </trans-unit>
        <trans-unit id="a70153fdc2043d42cd12ca46ccb4c33b57b300d4" translate="yes" xml:space="preserve">
          <source>StmtExecContext enhances the Stmt interface by providing Exec with context.</source>
          <target state="translated">StmtExecContext расширяет интерфейс Stmt,предоставляя Exec контекст.</target>
        </trans-unit>
        <trans-unit id="1004fd52a4b277314a44a4efa023effe4416d3f8" translate="yes" xml:space="preserve">
          <source>StmtQueryContext enhances the Stmt interface by providing Query with context.</source>
          <target state="translated">StmtQueryContext расширяет интерфейс Stmt,предоставляя Query с контекстом.</target>
        </trans-unit>
        <trans-unit id="4e7e607354865ab06dac634d86cb1266a005b9e3" translate="yes" xml:space="preserve">
          <source>Stop causes package signal to stop relaying incoming signals to c. It undoes the effect of all prior calls to Notify using c. When Stop returns, it is guaranteed that c will receive no more signals.</source>
          <target state="translated">Stop заставляет пакетный сигнал прекратить ретрансляцию входящих сигналов на c.Он отменяет действие всех предыдущих звонков в Notify с помощью c.Когда Stop возвращается,гарантируется,что c больше не будет получать сигналов.</target>
        </trans-unit>
        <trans-unit id="94f72ec5a9e9e46f0269677088e9aed4dc6bf0c7" translate="yes" xml:space="preserve">
          <source>Stop prevents the Timer from firing. It returns true if the call stops the timer, false if the timer has already expired or been stopped. Stop does not close the channel, to prevent a read from the channel succeeding incorrectly.</source>
          <target state="translated">Стоп не позволяет таймеру стрелять.Возвращает true,если вызов останавливает таймер,false,если таймер уже истек или был остановлен.Стоп не закрывает канал,чтобы предотвратить ошибочное считывание с канала.</target>
        </trans-unit>
        <trans-unit id="96e4cceff229f7d0b6242e33e40b44c6e1f954ad" translate="yes" xml:space="preserve">
          <source>Stop stops the current tracing, if any. Stop only returns after all the writes for the trace have completed.</source>
          <target state="translated">Остановить текущее отслеживание,если оно есть.Остановка возвращается только после завершения всех записей для трассировки.</target>
        </trans-unit>
        <trans-unit id="f869959cdbddc758676d9a0b40b1ccec00a007e0" translate="yes" xml:space="preserve">
          <source>Stop turns off a ticker. After Stop, no more ticks will be sent. Stop does not close the channel, to prevent a concurrent goroutine reading from the channel from seeing an erroneous &quot;tick&quot;.</source>
          <target state="translated">Стоп выключает тикер.После Стопа тикеры больше не будут посылаться.Стоп не закрывает канал,чтобы предотвратить одновременное считывание горутина с канала от ошибочного &quot;тика&quot;.</target>
        </trans-unit>
        <trans-unit id="6c60cc11ce6206ba7285eea9b92d5192efe41d39" translate="yes" xml:space="preserve">
          <source>StopCPUProfile stops the current CPU profile, if any. StopCPUProfile only returns after all the writes for the profile have completed.</source>
          <target state="translated">StopCPUProfile останавливает текущий профиль процессора,если таковой имеется.StopCPUProfile возвращается только после завершения всех записей для профиля.</target>
        </trans-unit>
        <trans-unit id="921647073cddc48eae81cacd6f73563cc3719e6f" translate="yes" xml:space="preserve">
          <source>StopTimer stops timing a test. This can be used to pause the timer while performing complex initialization that you don't want to measure.</source>
          <target state="translated">СтопТаймер останавливает синхронизацию теста.Это может быть использовано для приостановки таймера во время выполнения сложной инициализации,которую вы не хотите измерять.</target>
        </trans-unit>
        <trans-unit id="84dbe4eb021745433f9d6bb9432228e77ba19099" translate="yes" xml:space="preserve">
          <source>StopTrace stops tracing, if it was previously enabled. StopTrace only returns after all the reads for the trace have completed.</source>
          <target state="translated">StopTrace останавливает трассировку,если она была включена ранее.StopTrace возвращается только после того,как все считывания для трассировки завершены.</target>
        </trans-unit>
        <trans-unit id="e64cf11d9830120b60f240aa4b7f7791804376a7" translate="yes" xml:space="preserve">
          <source>Store sets the value for a key.</source>
          <target state="translated">Store устанавливает значение для ключа.</target>
        </trans-unit>
        <trans-unit id="0576297e57bdd6afa5e5d4f4c53fb27987cf20cb" translate="yes" xml:space="preserve">
          <source>Store sets the value of the Value to x. All calls to Store for a given Value must use values of the same concrete type. Store of an inconsistent type panics, as does Store(nil).</source>
          <target state="translated">Store устанавливает значение Value в x.Все вызовы в Store для заданного Value должны использовать значения одного и того же конкретного типа.Хранилище паники несовместимого типа,как и Store(nil).</target>
        </trans-unit>
        <trans-unit id="61fc43e10839248a6ca4c0ad01079c0c4ad0ec37" translate="yes" xml:space="preserve">
          <source>StoreInt32 atomically stores val into *addr.</source>
          <target state="translated">StoreInt32 atomically stores val into *addr.</target>
        </trans-unit>
        <trans-unit id="7914e40a268c91ed6c78dd3a0c674684e23beca2" translate="yes" xml:space="preserve">
          <source>StoreInt64 atomically stores val into *addr.</source>
          <target state="translated">StoreInt64 atomically stores val into *addr.</target>
        </trans-unit>
        <trans-unit id="3bd4e783553f00f03c188a415e3661fa8de191b3" translate="yes" xml:space="preserve">
          <source>StorePointer atomically stores val into *addr.</source>
          <target state="translated">StorePointer atomically stores val into *addr.</target>
        </trans-unit>
        <trans-unit id="9cc88c9dca1de73040dfd90e6d827a5b531c64fe" translate="yes" xml:space="preserve">
          <source>StoreUint32 atomically stores val into *addr.</source>
          <target state="translated">StoreUint32 atomically stores val into *addr.</target>
        </trans-unit>
        <trans-unit id="e11c1fe521ea309905b20e2bda18135e66472a1e" translate="yes" xml:space="preserve">
          <source>StoreUint64 atomically stores val into *addr.</source>
          <target state="translated">StoreUint64 atomically stores val into *addr.</target>
        </trans-unit>
        <trans-unit id="644096d645019d8a2ba6cbc4d305a2699fe9059f" translate="yes" xml:space="preserve">
          <source>StoreUintptr atomically stores val into *addr.</source>
          <target state="translated">StoreUintptr atomically stores val into *addr.</target>
        </trans-unit>
        <trans-unit id="cab8594aca23f91dcc0728ca91d9d20dcd26b690" translate="yes" xml:space="preserve">
          <source>StreamReader</source>
          <target state="translated">StreamReader</target>
        </trans-unit>
        <trans-unit id="2a7fc943079fc92f6a989794ba51133e347d57cd" translate="yes" xml:space="preserve">
          <source>StreamReader wraps a Stream into an io.Reader. It calls XORKeyStream to process each slice of data which passes through.</source>
          <target state="translated">StreamReader завершает поток в io.Reader.Он вызывает XORKeyStream для обработки каждого проходящего фрагмента данных.</target>
        </trans-unit>
        <trans-unit id="232a89f73446348f72f684c82d07ed788b848a3a" translate="yes" xml:space="preserve">
          <source>StreamWriter</source>
          <target state="translated">StreamWriter</target>
        </trans-unit>
        <trans-unit id="fc13aaf005c735ab0e4aa5176b6af67540be3a8b" translate="yes" xml:space="preserve">
          <source>StreamWriter wraps a Stream into an io.Writer. It calls XORKeyStream to process each slice of data which passes through. If any Write call returns short then the StreamWriter is out of sync and must be discarded. A StreamWriter has no internal buffering; Close does not need to be called to flush write data.</source>
          <target state="translated">StreamWriter завершает поток в io.Writer.Он вызывает XORKeyStream для обработки каждого проходящего фрагмента данных.Если какой-нибудь вызов Write вернется коротким,то StreamWriter не синхронизирован и должен быть отброшен.У StreamWriter нет внутренней буферизации;Close не нужно вызывать для флеширования данных при записи.</target>
        </trans-unit>
        <trans-unit id="61135993a6e29b59a8df3075ca0d3838f94b8d90" translate="yes" xml:space="preserve">
          <source>Strict creates a new encoding identical to enc except with strict decoding enabled. In this mode, the decoder requires that trailing padding bits are zero, as described in RFC 4648 section 3.5.</source>
          <target state="translated">Strict создает новую кодировку,идентичную enc,за исключением случаев,когда включена строгая декодировка.В этом режиме декодер требует,чтобы трейлинговые битовые кодировки были равны нулю,как описано в разделе 3.5 RFC 4648.</target>
        </trans-unit>
        <trans-unit id="396b00d6c7e8c1194e27297cd11ae3108cdacd84" translate="yes" xml:space="preserve">
          <source>String Conversions</source>
          <target state="translated">Преобразование струн</target>
        </trans-unit>
        <trans-unit id="bd47be7c94487cbe10dfe0be4138815d0017463a" translate="yes" xml:space="preserve">
          <source>String and slice of bytes (treated equivalently with these verbs):</source>
          <target state="translated">Строка и ломтик байтов (обрабатываются эквивалентно этим глаголам):</target>
        </trans-unit>
        <trans-unit id="8296a76a0e5d96744b29fe69547a88fb9387440d" translate="yes" xml:space="preserve">
          <source>String defines a string flag with specified name, default value, and usage string. The return value is the address of a string variable that stores the value of the flag.</source>
          <target state="translated">Строка определяет флаг строки с указанным именем,значением по умолчанию и строкой использования.Возвращаемое значение-адрес строковой переменной,в которой хранится значение флага.</target>
        </trans-unit>
        <trans-unit id="9e4dec141cb0219423f92167f6932232e80cdb9e" translate="yes" xml:space="preserve">
          <source>String extracts string from COFF string table st at offset start.</source>
          <target state="translated">Строка извлекает строку из таблицы COFF string st при старте со смещением.</target>
        </trans-unit>
        <trans-unit id="dcd688eb0f2fbd5e407777a28042b64595f0fef8" translate="yes" xml:space="preserve">
          <source>String formats the address as a valid RFC 5322 address. If the address's name contains non-ASCII characters the name will be rendered according to RFC 2047.</source>
          <target state="translated">Строка форматирует адрес как действительный адрес RFC 5322.Если имя адреса содержит не-ASCII символы,то оно будет выдано в соответствии с RFC 2047.</target>
        </trans-unit>
        <trans-unit id="8d105c469495a5d5f8062e63371ab613869f1e04" translate="yes" xml:space="preserve">
          <source>String formats x like x.Text('g', 10). (String must be called explicitly, Float.Format does not support %s verb.)</source>
          <target state="translated">Строковые форматы x,такие как x.Text('g',10).(Строка должна быть вызвана явно,Float.Format не поддерживает глагол %s).</target>
        </trans-unit>
        <trans-unit id="01748cd6407645feded183980c6258bbb0d669e6" translate="yes" xml:space="preserve">
          <source>String implements the Var interface. To get the unquoted string use Value.</source>
          <target state="translated">Строка реализует интерфейс Var.Для получения нецитируемой строки используйте Value.</target>
        </trans-unit>
        <trans-unit id="c388848919b90e3a01d2d3408f1ebde77b3f2a74" translate="yes" xml:space="preserve">
          <source>String is a ValueConverter that converts its input to a string. If the value is already a string or []byte, it's unchanged. If the value is of another type, conversion to string is done with fmt.Sprintf(&quot;%v&quot;, v).</source>
          <target state="translated">Строка-это конвертер значений,который преобразует входные данные в строку.Если значение уже является строкой или []байтом,то оно не изменяется.Если значение другого типа,преобразование в строку производится с помощью функции fmt.Sprintf(&quot;%v&quot;,v).</target>
        </trans-unit>
        <trans-unit id="014933e8c2aa543fd850622d80731a6a9386778b" translate="yes" xml:space="preserve">
          <source>String is a string variable, and satisfies the Var interface.</source>
          <target state="translated">Строка является строковой переменной и удовлетворяет требованиям интерфейса Var.</target>
        </trans-unit>
        <trans-unit id="83826ec6cada0ae1502e1aff2c5460723f559354" translate="yes" xml:space="preserve">
          <source>String reassembles the URL into a valid URL string. The general form of the result is one of:</source>
          <target state="translated">Строка заново собирает URL в правильную URL-строку.Общая форма результата-одна из:</target>
        </trans-unit>
        <trans-unit id="1a1a1e5164ab79c22ae49942d67ef810bdba6ad9" translate="yes" xml:space="preserve">
          <source>String returns a descriptive name for the time zone information, corresponding to the name argument to LoadLocation or FixedZone.</source>
          <target state="translated">Строка возвращает описательное имя для информации о часовом поясе,соответствующее аргументу имени для LoadLocation или FixedZone.</target>
        </trans-unit>
        <trans-unit id="aa4d82115db66e350e92f539c5427c79fdfb58ed" translate="yes" xml:space="preserve">
          <source>String returns a human-readable description of c. It is intended only for debugging. In particular, it is not suitable for use as input to a shell. The output of String may vary across Go releases.</source>
          <target state="translated">Строка возвращает удобочитаемое человеком описание в.Она предназначена только для отладки.В частности,она не подходит для использования в качестве входа в оболочку.Вывод строки может отличаться в разных релизах Go.</target>
        </trans-unit>
        <trans-unit id="55bb95d4983983ad2bde74eafe604eb90028dc18" translate="yes" xml:space="preserve">
          <source>String returns a string in one of several forms:</source>
          <target state="translated">Строка возвращает строку в одной из нескольких форм:</target>
        </trans-unit>
        <trans-unit id="345f70fca28ee043619061f7f87c019dadbba1fa" translate="yes" xml:space="preserve">
          <source>String returns a string representation of p like &quot;(3,4)&quot;.</source>
          <target state="translated">Строка возвращает строковое представление p вида &quot;(3,4)&quot;.</target>
        </trans-unit>
        <trans-unit id="3448960ebb659e656c5021f0b36127dab5b9d619" translate="yes" xml:space="preserve">
          <source>String returns a string representation of r like &quot;(3,4)-(6,5)&quot;.</source>
          <target state="translated">Строка возвращает строковое представление r вида &quot;(3,4)-(6,5)&quot;.</target>
        </trans-unit>
        <trans-unit id="1b35bdca294966810231e9db40a5c473f629af73" translate="yes" xml:space="preserve">
          <source>String returns a string representation of the scope, for debugging.</source>
          <target state="translated">Строка возвращает строковое представление области видимости для отладки.</target>
        </trans-unit>
        <trans-unit id="40800a9640894f3a3149f9e54d890572a4beda8c" translate="yes" xml:space="preserve">
          <source>String returns a string representation of the sequence r, roughly following the RFC 2253 Distinguished Names syntax.</source>
          <target state="translated">Строка возвращает строковое представление последовательности r,примерно следующее синтаксису RFC 2253 Distinguished Names.</target>
        </trans-unit>
        <trans-unit id="7a196811cde011797851e8bcd4ea585d5971e7d9" translate="yes" xml:space="preserve">
          <source>String returns a string representation of x in the form &quot;a/b&quot; (even if b == 1).</source>
          <target state="translated">Строка возвращает строковое представление x в виде &quot;a/b&quot; (даже если b ==1).</target>
        </trans-unit>
        <trans-unit id="7b4474871a59eadc44e6ad3cc370b5d1fd6eabd1" translate="yes" xml:space="preserve">
          <source>String returns a string representing the duration in the form &quot;72h3m0.5s&quot;. Leading zero units are omitted. As a special case, durations less than one second format use a smaller unit (milli-, micro-, or nanoseconds) to ensure that the leading digit is non-zero. The zero duration formats as 0s.</source>
          <target state="translated">Строка возвращает строку,представляющую длительность в виде &quot;72h3m0.5s&quot;.Нулевые единицы опускаются.В особом случае при длительности менее одной секунды используется меньшая единица измерения (милли-,микросекунды или наносекунды)для обеспечения ненулевого значения ведущей цифры.Форматы нулевой длительности как 0s.</target>
        </trans-unit>
        <trans-unit id="f5e00dac202df16525dc65e74932811ab9752d4e" translate="yes" xml:space="preserve">
          <source>String returns a summary of the benchmark results. It follows the benchmark result line format from &lt;a href=&quot;https://golang.org/design/14313-benchmark-format&quot;&gt;https://golang.org/design/14313-benchmark-format&lt;/a&gt;, not including the benchmark name. Extra metrics override built-in metrics of the same name. String does not include allocs/op or B/op, since those are reported by MemString.</source>
          <target state="translated">String возвращает сводку результатов теста. Он соответствует формату строки результатов теста из &lt;a href=&quot;https://golang.org/design/14313-benchmark-format&quot;&gt;https://golang.org/design/14313-benchmark-format&lt;/a&gt; , не включая название теста. Дополнительные метрики заменяют встроенные одноименные метрики. Строка не включает allocs / op или B / op, поскольку они сообщаются MemString.</target>
        </trans-unit>
        <trans-unit id="a1320f96272e68242e45787bdcf443a45a5d4acb" translate="yes" xml:space="preserve">
          <source>String returns the CIDR notation of n like &quot;192.0.2.0/24&quot; or &quot;2001:db8::/48&quot; as defined in RFC 4632 and RFC 4291. If the mask is not in the canonical form, it returns the string which consists of an IP address, followed by a slash character and a mask expressed as hexadecimal form with no punctuation like &quot;198.51.100.0/c000ff00&quot;.</source>
          <target state="translated">Строка возвращает CIDR нотацию n типа &quot;192.0.2.0/24&quot; или &quot;2001:db8::/48&quot;,как определено в RFC 4632 и RFC 4291.Если маска не в канонической форме,возвращается строка,состоящая из IP-адреса,за которым следует символ косой черты и маска,выраженная в шестнадцатеричной форме без знаков препинания типа &quot;198.51.100.0/c000ff00&quot;.</target>
        </trans-unit>
        <trans-unit id="f55b73801df68c7614969aee1732afd9d5e38010" translate="yes" xml:space="preserve">
          <source>String returns the English name of the day (&quot;Sunday&quot;, &quot;Monday&quot;, ...).</source>
          <target state="translated">Стринг возвращает английское название дня (&quot;воскресенье&quot;,&quot;понедельник&quot;,...).</target>
        </trans-unit>
        <trans-unit id="ffc4d02cde72706d98e09a395ce956d9d89dd7b5" translate="yes" xml:space="preserve">
          <source>String returns the English name of the month (&quot;January&quot;, &quot;February&quot;, ...).</source>
          <target state="translated">Строка возвращает английское название месяца (&quot;Январь&quot;,&quot;Февраль&quot;,...).</target>
        </trans-unit>
        <trans-unit id="d35cab9a7681d28fe5cfa98797f716ccf4a8148e" translate="yes" xml:space="preserve">
          <source>String returns the accumulated string.</source>
          <target state="translated">Строка возвращает накопленную строку.</target>
        </trans-unit>
        <trans-unit id="6a561a9c0ca3a5d45a6220d79144ae4e4f68eaba" translate="yes" xml:space="preserve">
          <source>String returns the contents of the unread portion of the buffer as a string. If the Buffer is a nil pointer, it returns &quot;&amp;lt;nil&amp;gt;&quot;.</source>
          <target state="translated">String возвращает содержимое непрочитанной части буфера в виде строки. Если буфер является нулевым указателем, он возвращает &amp;laquo;&amp;lt;nil&amp;gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="20281079c25e7469dba253811f0a64eb9af0ad50" translate="yes" xml:space="preserve">
          <source>String returns the decimal representation of x as generated by x.Text(10).</source>
          <target state="translated">Строка возвращает десятичное представление x,сгенерированное x.Text(10).</target>
        </trans-unit>
        <trans-unit id="c1f7f34151f59a07d632aef98f6cf3db75ca331f" translate="yes" xml:space="preserve">
          <source>String returns the encoded userinfo information in the standard form of &quot;username[:password]&quot;.</source>
          <target state="translated">Строка возвращает закодированную информацию о пользователе в стандартной форме &quot;username[:password]&quot;.</target>
        </trans-unit>
        <trans-unit id="c9f4b613c07a2c7f71577fe196567617d0abff90" translate="yes" xml:space="preserve">
          <source>String returns the hexadecimal form of m, with no punctuation.</source>
          <target state="translated">Строка возвращает шестнадцатеричную форму m,без знаков препинания.</target>
        </trans-unit>
        <trans-unit id="a803d186b1c90a1c53ad70e26c40836efc312842" translate="yes" xml:space="preserve">
          <source>String returns the literal text of the number.</source>
          <target state="translated">Строка возвращает буквальный текст числа.</target>
        </trans-unit>
        <trans-unit id="efd718d51f4b6dbacf2db82a320892ae4b63a670" translate="yes" xml:space="preserve">
          <source>String returns the name of k.</source>
          <target state="translated">Строка возвращает имя К.</target>
        </trans-unit>
        <trans-unit id="750dd1515ee90a846665f6d5d112993b3669e476" translate="yes" xml:space="preserve">
          <source>String returns the name of the transaction isolation level.</source>
          <target state="translated">Строка возвращает имя уровня изоляции транзакции.</target>
        </trans-unit>
        <trans-unit id="e794984ac30a476fc607ba49d30074600724b1fd" translate="yes" xml:space="preserve">
          <source>String returns the serialization of the cookie for use in a Cookie header (if only Name and Value are set) or a Set-Cookie response header (if other fields are set). If c is nil or c.Name is invalid, the empty string is returned.</source>
          <target state="translated">Строка возвращает сериализацию куки-файла для использования в заголовке куки-файла (если установлены только Имя и Значение)или в заголовке ответа Set-Cookie (если установлены другие поля).Если c равно нулю или c.Name недействительно,возвращается пустая строка.</target>
        </trans-unit>
        <trans-unit id="fe713a69a5fd2ac5cb84c706517fb895d0d57913" translate="yes" xml:space="preserve">
          <source>String returns the source text used to compile the regular expression.</source>
          <target state="translated">Строка возвращает исходный текст,использованный для компиляции регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="34bacca8ec4eef4ee78833a67f79a6eef6da5be0" translate="yes" xml:space="preserve">
          <source>String returns the string corresponding to the token tok. For operators, delimiters, and keywords the string is the actual token character sequence (e.g., for the token ADD, the string is &quot;+&quot;). For all other tokens the string corresponds to the token constant name (e.g. for the token IDENT, the string is &quot;IDENT&quot;).</source>
          <target state="translated">Строка возвращает строку,соответствующую токену.Для операторов,разделителей и ключевых слов строка-это фактическая последовательность символов токена (например,для ADD токена строкой является &quot;+&quot;).Для всех остальных маркеров строка соответствует имени константы маркера (например,для маркера IDENT строка &quot;IDENT&quot;).</target>
        </trans-unit>
        <trans-unit id="2d88168daac6375a514f336433bd215fb612a6a9" translate="yes" xml:space="preserve">
          <source>String returns the string form of n, roughly following the RFC 2253 Distinguished Names syntax.</source>
          <target state="translated">Строка возвращает строковую форму n,примерно следуя синтаксису RFC 2253 Distinguished Names.</target>
        </trans-unit>
        <trans-unit id="65a433aa544a0c7b3431068c5cc7f107bc02e8c8" translate="yes" xml:space="preserve">
          <source>String returns the string form of the IP address ip. It returns one of 4 forms:</source>
          <target state="translated">Строка возвращает строковую форму IP-адреса ip.Возвращает одну из 4 форм:</target>
        </trans-unit>
        <trans-unit id="77e4b34a03bfe1d41ef0627a6a3eef76345118dd" translate="yes" xml:space="preserve">
          <source>String returns the string v's underlying value, as a string. String is a special case because of Go's String method convention. Unlike the other getters, it does not panic if v's Kind is not String. Instead, it returns a string of the form &quot;&amp;lt;T value&amp;gt;&quot; where T is v's type. The fmt package treats Values specially. It does not call their String method implicitly but instead prints the concrete values they hold.</source>
          <target state="translated">String возвращает базовое значение строки v в виде строки. String - это особый случай из-за соглашения о методах String в Go. В отличие от других геттеров, он не паникует, если v's Kind не является String. Вместо этого он возвращает строку вида &amp;laquo;&amp;lt;значение T&amp;gt;&amp;raquo;, где T - это тип v. Пакет fmt специально обрабатывает значения. Он не вызывает их метод String неявно, а вместо этого печатает конкретные значения, которые они содержат.</target>
        </trans-unit>
        <trans-unit id="da3ada59fed13cf9c42e28f35ce824b152ed6695" translate="yes" xml:space="preserve">
          <source>String returns the time formatted using the format string</source>
          <target state="translated">Строка возвращает время,отформатированное с помощью строки форматирования</target>
        </trans-unit>
        <trans-unit id="7582d0695c8835ce2d6fd48b6b11691af0fd874b" translate="yes" xml:space="preserve">
          <source>String returns the value v as a string. String is a special case because of Go's String method convention. Unlike the other getters, it does not panic if v's Type is not TypeString. Instead, it returns a string of the form &quot;&amp;lt;T&amp;gt;&quot; or &quot;&amp;lt;T: V&amp;gt;&quot; where T is v's type and V is a string representation of v's value.</source>
          <target state="translated">String возвращает значение v в виде строки. String - это особый случай из-за соглашения о методах String в Go. В отличие от других методов получения, он не вызывает паники, если тип v не является TypeString. Вместо этого он возвращает строку формы &amp;laquo;&amp;lt;T&amp;gt;&amp;raquo; или &amp;laquo;&amp;lt;T: V&amp;gt;&amp;raquo;, где T - это тип v, а V - строковое представление значения v.</target>
        </trans-unit>
        <trans-unit id="b5780fb112a6b774b6985415c1ab7539f30b0d21" translate="yes" xml:space="preserve">
          <source>String values encode as JSON strings coerced to valid UTF-8, replacing invalid bytes with the Unicode replacement rune. So that the JSON will be safe to embed inside HTML &amp;lt;script&amp;gt; tags, the string is encoded using HTMLEscape, which replaces &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;&amp;amp;&quot;, U+2028, and U+2029 are escaped to &quot;\u003c&quot;,&quot;\u003e&quot;, &quot;\u0026&quot;, &quot;\u2028&quot;, and &quot;\u2029&quot;. This replacement can be disabled when using an Encoder, by calling SetEscapeHTML(false).</source>
          <target state="translated">Строковые значения кодируются как строки JSON, приведенные к допустимому UTF-8, заменяя недопустимые байты руной замены Unicode. Чтобы JSON можно было безопасно встраивать в теги HTML &amp;lt;script&amp;gt;, строка кодируется с использованием HTMLEscape, который заменяет &amp;laquo;&amp;lt;&amp;raquo;, &amp;laquo;&amp;gt;&amp;raquo;, &amp;laquo;&amp;amp;&amp;raquo;, U + 2028 и U + 2029 заменяются на &amp;laquo;\ u003c &quot;,&quot;&amp;gt; &quot;,&quot; \ u0026 &quot;,&quot; \ u2028 &quot;и&quot; \ u2029 &quot;. Эту замену можно отключить при использовании кодировщика, вызвав SetEscapeHTML (false).</target>
        </trans-unit>
        <trans-unit id="86940bb85d221e97a38bc1e113fc6bce034c8750" translate="yes" xml:space="preserve">
          <source>StringBytePtr returns a pointer to a NUL-terminated array of bytes. If s contains a NUL byte this function panics instead of returning an error.</source>
          <target state="translated">StringBytePtr возвращает указатель на NUL-терминированный массив байт.Если s содержит NUL-байт,то эта функция паникует,вместо того чтобы возвращать ошибку.</target>
        </trans-unit>
        <trans-unit id="c0623ccf68cc35082d287f89796544274ff86c91" translate="yes" xml:space="preserve">
          <source>StringByteSlice converts a string to a NUL-terminated []byte, If s contains a NUL byte this function panics instead of returning an error.</source>
          <target state="translated">StringByteSlice преобразует строку в NUL-граничный []байт,если s содержит NUL-байт,то эта функция паникует вместо того,чтобы возвращать ошибку.</target>
        </trans-unit>
        <trans-unit id="6bf1e10cb60d4363fb37f7da731443afa2a654e2" translate="yes" xml:space="preserve">
          <source>StringHeader is the runtime representation of a string. It cannot be used safely or portably and its representation may change in a later release. Moreover, the Data field is not sufficient to guarantee the data it references will not be garbage collected, so programs must keep a separate, correctly typed pointer to the underlying data.</source>
          <target state="translated">StringHeader-это представление строки во время выполнения.Он не может использоваться безопасно или переносимо,и его представление может измениться в более позднем выпуске.Более того,поля Data недостаточно для того,чтобы гарантировать,что данные,на которые оно ссылается,не будут собраны в мусор,поэтому программы должны хранить отдельный,корректно набранный указатель на лежащие в основе данные.</target>
        </trans-unit>
        <trans-unit id="a97933503d7359e70c5bcc6d71f20f23e72ff484" translate="yes" xml:space="preserve">
          <source>StringNode holds a string constant. The value has been &quot;unquoted&quot;.</source>
          <target state="translated">StringNode содержит строковую константу.Значение было &quot;без кавычек&quot;.</target>
        </trans-unit>
        <trans-unit id="4e2dc56d882f4e247f4c8c91d09f7ca7c92151b0" translate="yes" xml:space="preserve">
          <source>StringSlice attaches the methods of Interface to []string, sorting in increasing order.</source>
          <target state="translated">StringSlice присоединяет методы интерфейса к строке [],сортируя по возрастанию.</target>
        </trans-unit>
        <trans-unit id="0ccdd69f6b44471ac8719f7a4d5092264f1d1540" translate="yes" xml:space="preserve">
          <source>StringSlicePtr converts a slice of strings to a slice of pointers to NUL-terminated byte arrays. If any string contains a NUL byte this function panics instead of returning an error.</source>
          <target state="translated">StringSlicePtr преобразует срез строк в срез указателей в NUL-терминированные массивы байт.Если какая-либо строка содержит NUL-байт,то эта функция паникует вместо того,чтобы возвращать ошибку.</target>
        </trans-unit>
        <trans-unit id="58cd2c4c0c64b3e8b63116e619c1216921aee8f5" translate="yes" xml:space="preserve">
          <source>StringTable is a COFF string table.</source>
          <target state="translated">StringTable-это таблица строк COFF.</target>
        </trans-unit>
        <trans-unit id="cf2c21cf4463c1c95fd9d9c1165bec97a40c80e4" translate="yes" xml:space="preserve">
          <source>StringVal returns the Go string value of x, which must be a String or an Unknown. If x is Unknown, the result is &quot;&quot;.</source>
          <target state="translated">StringVal возвращает значение Go строки x,которое должно быть Строкой или Неизвестно.Если x равно Неизвестно,то результат будет &quot;&quot;.</target>
        </trans-unit>
        <trans-unit id="d9073eff948f092d1e822cdc4b90545ac7f58c79" translate="yes" xml:space="preserve">
          <source>StringVar defines a string flag with specified name, default value, and usage string. The argument p points to a string variable in which to store the value of the flag.</source>
          <target state="translated">StringVar определяет флаг строки с указанным именем,значением по умолчанию и строкой использования.Аргумент p указывает на строковую переменную,в которой будет храниться значение флага.</target>
        </trans-unit>
        <trans-unit id="8523e16e4f3d17cbbcc1796a5175f67569825d49" translate="yes" xml:space="preserve">
          <source>StringWriter is the interface that wraps the WriteString method.</source>
          <target state="translated">StringWriter-это интерфейс,обёртывающий метод WriteString.</target>
        </trans-unit>
        <trans-unit id="2968f2bfae46d2fc485efc7b71be92497e030111" translate="yes" xml:space="preserve">
          <source>Stringer</source>
          <target state="translated">Stringer</target>
        </trans-unit>
        <trans-unit id="58829a9ebd1b847fb0ad45cdde0851c334ed441d" translate="yes" xml:space="preserve">
          <source>Stringer is implemented by any value that has a String method, which defines the &amp;ldquo;native&amp;rdquo; format for that value. The String method is used to print values passed as an operand to any format that accepts a string or to an unformatted printer such as Print.</source>
          <target state="translated">Stringer реализуется любым значением, имеющим метод String, который определяет &amp;laquo;собственный&amp;raquo; формат для этого значения. Метод String используется для печати значений, переданных в качестве операнда, в любой формат, который принимает строку, или на неформатированный принтер, например Print.</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="906a27ee40bd23a1553b39eb16be0c8e8ac3e949" translate="yes" xml:space="preserve">
          <source>Strings and slices of bytes are sent as an unsigned count followed by that many uninterpreted bytes of the value.</source>
          <target state="translated">Строки и ломтики байтов посылаются как неподписанный счетчик,за которым следует столько неинтерпретированных байтов значения.</target>
        </trans-unit>
        <trans-unit id="faac2cc38ba743bbc17ba9acb7964aa6cee65d73" translate="yes" xml:space="preserve">
          <source>Strings must be UTF-8 encoded and may only contain Unicode code points U+0001 through U+00FF, due to limitations of the GZIP file format.</source>
          <target state="translated">Строки должны быть в кодировке UTF-8 и могут содержать только точки кода Юникода от U+0001 до U+00FF,в связи с ограничениями формата GZIP.</target>
        </trans-unit>
        <trans-unit id="f76921542e09ce2202753a5d0b5a9e24e8b8a263" translate="yes" xml:space="preserve">
          <source>Strings sorts a slice of strings in increasing order.</source>
          <target state="translated">Строки сортируют ломтик струн в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="3d93c8594f1a8a4b01949156c04f8f3f3ae7fd2a" translate="yes" xml:space="preserve">
          <source>StringsAreSorted tests whether a slice of strings is sorted in increasing order.</source>
          <target state="translated">StringsAreSorted проверяет,сортируется ли срез строк в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="13ae2dda2de94ac9d40b6ba17fece2797835c04a" translate="yes" xml:space="preserve">
          <source>StripPrefix</source>
          <target state="translated">StripPrefix</target>
        </trans-unit>
        <trans-unit id="e0a5f88c187543f04de90ac6fd0379250c9778df" translate="yes" xml:space="preserve">
          <source>StripPrefix returns a handler that serves HTTP requests by removing the given prefix from the request URL's Path and invoking the handler h. StripPrefix handles a request for a path that doesn't begin with prefix by replying with an HTTP 404 not found error.</source>
          <target state="translated">StripPrefix возвращает обработчик,который обслуживает HTTP-запросы,удаляя заданный префикс из пути URL запроса и вызывая обработчик h.StripPrefix обрабатывает запрос на путь,который не начинается с префикса,отвечая с HTTP 404 не найденной ошибкой.</target>
        </trans-unit>
        <trans-unit id="39170b61b74a11d6a192ff9863dfa73aaecba21c" translate="yes" xml:space="preserve">
          <source>Struct values are deeply equal if their corresponding fields, both exported and unexported, are deeply equal.</source>
          <target state="translated">Значения структур глубоко равны,если их соответствующие поля,как экспортируемые,так и экспортируемые,глубоко равны.</target>
        </trans-unit>
        <trans-unit id="fb5bb421400cdac0575f807d47566c64d1f46c0f" translate="yes" xml:space="preserve">
          <source>Struct values encode as JSON objects. Each exported struct field becomes a member of the object, using the field name as the object key, unless the field is omitted for one of the reasons given below.</source>
          <target state="translated">Значения структур кодируются как JSON-объекты.Каждое экспортируемое структурное поле становится членом объекта,используя имя поля в качестве ключа объекта,если только это поле не опущено по одной из причин,приведенных ниже.</target>
        </trans-unit>
        <trans-unit id="0b823e55e4d9782e91674576a6c2dba2dbfb679a" translate="yes" xml:space="preserve">
          <source>StructOf</source>
          <target state="translated">StructOf</target>
        </trans-unit>
        <trans-unit id="cbecd3176d1c216f7d05eaf053a4641373b34f6b" translate="yes" xml:space="preserve">
          <source>StructOf currently does not generate wrapper methods for embedded fields and panics if passed unexported StructFields. These limitations may be lifted in a future version.</source>
          <target state="translated">В настоящее время StructOf не генерирует оберточные методы для встроенных полей и паники при прохождении через неразорвавшиеся поля StructFi.Эти ограничения могут быть сняты в будущей версии.</target>
        </trans-unit>
        <trans-unit id="e272272dfcabba6b0a57032693b1247f7d907d03" translate="yes" xml:space="preserve">
          <source>StructOf returns the struct type containing fields. The Offset and Index fields are ignored and computed as they would be by the compiler.</source>
          <target state="translated">StructOf возвращает тип структуры,содержащий поля.Поля Offset и Index игнорируются и вычисляются компилятором так,как это делал бы компилятор.</target>
        </trans-unit>
        <trans-unit id="642ea82e69d222e31d0a11979f4762edc849aa8f" translate="yes" xml:space="preserve">
          <source>StructTag</source>
          <target state="translated">StructTag</target>
        </trans-unit>
        <trans-unit id="666cf050832b24dac5a22e670aae0c296886ba23" translate="yes" xml:space="preserve">
          <source>StructTag.Lookup</source>
          <target state="translated">StructTag.Lookup</target>
        </trans-unit>
        <trans-unit id="5f4f3284caaeebe32585ec344848f50378d011bc" translate="yes" xml:space="preserve">
          <source>Structs are sent as a sequence of (field number, field value) pairs. The field value is sent using the standard gob encoding for its type, recursively. If a field has the zero value for its type (except for arrays; see above), it is omitted from the transmission. The field number is defined by the type of the encoded struct: the first field of the encoded type is field 0, the second is field 1, etc. When encoding a value, the field numbers are delta encoded for efficiency and the fields are always sent in order of increasing field number; the deltas are therefore unsigned. The initialization for the delta encoding sets the field number to -1, so an unsigned integer field 0 with value 7 is transmitted as unsigned delta = 1, unsigned value = 7 or (01 07). Finally, after all the fields have been sent a terminating mark denotes the end of the struct. That mark is a delta=0 value, which has representation (00).</source>
          <target state="translated">Структуры посылаются в виде последовательности пар (номер поля,значение поля).Значение поля посылается с использованием стандартной кодировки для его типа,рекурсивно.Если поле имеет нулевое значение для своего типа (за исключением массивов;см.выше),оно опускается из передачи.Номер поля определяется типом кодируемой структуры:первое поле кодируемого типа-поле 0,второе-поле 1 и т.д.При кодировании значения,номера полей кодируются дельтами для эффективности,и поля всегда посылаются в порядке возрастания номера поля,поэтому дельты не подписываются.Инициализация для кодирования дельты устанавливает номер поля -1,поэтому беззнаковое целое поле 0 со значением 7 передается как беззнаковое дельта=1,беззнаковое значение=7 или (01 07).Наконец,после того,как все поля будут отправлены,окончательная метка обозначает конец структуры.Эта метка представляет собой значение delta=0,которое имеет представление (00).</target>
        </trans-unit>
        <trans-unit id="7dc46671ebabbdf3c46aadccd97f8c490eefc52c" translate="yes" xml:space="preserve">
          <source>Structs, arrays and slices are also supported. Structs encode and decode only exported fields. Strings and arrays of bytes are supported with a special, efficient representation (see below). When a slice is decoded, if the existing slice has capacity the slice will be extended in place; if not, a new array is allocated. Regardless, the length of the resulting slice reports the number of elements decoded.</source>
          <target state="translated">Поддерживаются также строки,массивы и срезы.Структуры кодируют и декодируют только экспортированные поля.Строки и массивы байтов поддерживаются со специальным,эффективным представлением (см.ниже).При декодировании фрагмента,если существующий фрагмент имеет емкость,он будет расширен на месте;в противном случае будет выделен новый массив.Независимо от этого,длина результирующего среза сообщает количество декодированных элементов.</target>
        </trans-unit>
        <trans-unit id="ad78f09f9c6b3087d8e72e4530ecc70c4956979a" translate="yes" xml:space="preserve">
          <source>Structure Preservation Property: &quot;... when a template author writes an HTML tag in a safe templating language, the browser will interpret the corresponding portion of the output as a tag regardless of the values of untrusted data, and similarly for other structures such as attribute boundaries and JS and CSS string boundaries.&quot;</source>
          <target state="translated">Сохранение структуры Недвижимость:&quot;...когда автор шаблона пишет HTML-тег на безопасном языке шаблонов,браузер интерпретирует соответствующую часть вывода как тег,независимо от значений недоверенных данных,и аналогично для других структур,таких как границы атрибутов и границы JS и CSS-строк&quot;.</target>
        </trans-unit>
        <trans-unit id="a3c9ca613cd987d897ef5275ec8d3b6be7186d1f" translate="yes" xml:space="preserve">
          <source>Sub returns the difference of x, y and borrow: diff = x - y - borrow. The borrow input must be 0 or 1; otherwise the behavior is undefined. The borrowOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Суб возвращает разницу x,y и borrow:diff=x-y-borrow.Значение заимствования должно быть 0 или 1;в противном случае поведение не определено.Результат заимствования гарантированно должен быть 0 или 1.</target>
        </trans-unit>
        <trans-unit id="61c41cb657724bf35da0dad82b0d5dee3326e95d" translate="yes" xml:space="preserve">
          <source>Sub returns the duration t-u. If the result exceeds the maximum (or minimum) value that can be stored in a Duration, the maximum (or minimum) duration will be returned. To compute t-d for a duration d, use t.Add(-d).</source>
          <target state="translated">Sub возвращает продолжительность t-u.Если результат превышает максимальное (или минимальное)значение,которое может быть сохранено в Продолжительности,возвращается максимальная (или минимальная)продолжительность.Чтобы вычислить t-d для продолжительности d,используйте t.Add(-d).</target>
        </trans-unit>
        <trans-unit id="9a9cccdf849236c7b5afc32fedeaf0e730cf15fd" translate="yes" xml:space="preserve">
          <source>Sub returns the rectangle r translated by -p.</source>
          <target state="translated">Sub возвращает прямоугольник r,переведенный в -p.</target>
        </trans-unit>
        <trans-unit id="c74b307e6862c7c0fdbabb48e4f241316eca6f53" translate="yes" xml:space="preserve">
          <source>Sub returns the vector p-q.</source>
          <target state="translated">Sub возвращает вектор p-q.</target>
        </trans-unit>
        <trans-unit id="2660992e01b4593ff7e0d2ea96dbc6a6fcdbbc82" translate="yes" xml:space="preserve">
          <source>Sub sets z to the difference x-y and returns z.</source>
          <target state="translated">Sub устанавливает z в разность x-y и возвращает z.</target>
        </trans-unit>
        <trans-unit id="07c120e2c4cb601d9bfe9da745d95ee84f5c8f23" translate="yes" xml:space="preserve">
          <source>Sub sets z to the rounded difference x-y and returns z. Precision, rounding, and accuracy reporting are as for Add. Sub panics with ErrNaN if x and y are infinities with equal signs. The value of z is undefined in that case.</source>
          <target state="translated">Sub устанавливает z в закругленную разницу x-y и возвращает z.Точность,округление и точность отчетов как для Add.Sub паники с ErrNaN,если x и y-бесконечности с равными знаками.Значение z в этом случае не определено.</target>
        </trans-unit>
        <trans-unit id="821524c66883b61b23da230e1f7ac6f247b61c28" translate="yes" xml:space="preserve">
          <source>Sub-repositories</source>
          <target state="translated">Sub-repositories</target>
        </trans-unit>
        <trans-unit id="027b254161eaa851d3de87e3e3811c330b4b1cfe" translate="yes" xml:space="preserve">
          <source>Sub32 returns the difference of x, y and borrow, diff = x - y - borrow. The borrow input must be 0 or 1; otherwise the behavior is undefined. The borrowOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Sub32 возвращает разницу x,y и borrow,diff=x-y-borrow.Значение заимствования должно быть 0 или 1;в противном случае поведение не определено.Выходной сигнал borrowOut гарантированно должен быть 0 или 1.</target>
        </trans-unit>
        <trans-unit id="19abe5243ff65ef214d8cfd1ed7dd0d253eaaf1e" translate="yes" xml:space="preserve">
          <source>Sub64 returns the difference of x, y and borrow: diff = x - y - borrow. The borrow input must be 0 or 1; otherwise the behavior is undefined. The borrowOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Sub64 возвращает разницу x,y и borrow:diff=x-y-borrow.Значение заимствования должно быть 0 или 1;в противном случае поведение не определено.Выходной сигнал borrowOut гарантированно должен быть 0 или 1.</target>
        </trans-unit>
        <trans-unit id="3fc6e21e27e1d98c4a46c59e21cbbbe634de9bcb" translate="yes" xml:space="preserve">
          <source>SubImage returns an image representing the portion of the image p visible through r. The returned value shares pixels with the original image.</source>
          <target state="translated">SubImage возвращает изображение,представляющее часть изображения p,видимую через r.Возвращаемое значение разделяет пиксели с исходным изображением.</target>
        </trans-unit>
        <trans-unit id="19b094dbedb2add32a27c12c5c0b06b9d304fb7c" translate="yes" xml:space="preserve">
          <source>Subdirectories</source>
          <target state="translated">Subdirectories</target>
        </trans-unit>
        <trans-unit id="73a30231d9aabf0592839371dc3542545b7db703" translate="yes" xml:space="preserve">
          <source>SubexpIndex returns the index of the first subexpression with the given name, or -1 if there is no subexpression with that name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb46f6f4b961e90d924a27858c117c84efd6aae" translate="yes" xml:space="preserve">
          <source>SubexpNames returns the names of the parenthesized subexpressions in this Regexp. The name for the first sub-expression is names[1], so that if m is a match slice, the name for m[i] is SubexpNames()[i]. Since the Regexp as a whole cannot be named, names[0] is always the empty string. The slice should not be modified.</source>
          <target state="translated">SubexpNames возвращает имена подвыражений в скобках в этом Regexp.Имя для первого подвыражения-names[1],так что если m -соответствующий срез,то имя для m[i]-SubexpNames()[i].Так как регекспресс в целом не может быть назван,names[0]-это всегда пустая строка.Кусок не должен быть изменен.</target>
        </trans-unit>
        <trans-unit id="c9c047b864469812cfb4b3b886d30b5376a4d0df" translate="yes" xml:space="preserve">
          <source>Subjects returns a list of the DER-encoded subjects of all of the certificates in the pool.</source>
          <target state="translated">Субъекты возвращают список субъектов с DER-кодировкой всех сертификатов в пуле.</target>
        </trans-unit>
        <trans-unit id="91e8bbbf1ff4c8e821148581549206c9787e494e" translate="yes" xml:space="preserve">
          <source>Subtests and Sub-benchmarks</source>
          <target state="translated">Субтесты и суб-индексы</target>
        </trans-unit>
        <trans-unit id="05cc8697fcb7ccef149a7858e8bd798cb2cd774f" translate="yes" xml:space="preserve">
          <source>Subtests can also be used to control parallelism. A parent test will only complete once all of its subtests complete. In this example, all tests are run in parallel with each other, and only with each other, regardless of other top-level tests that may be defined:</source>
          <target state="translated">Для управления параллельностью можно также использовать подтесты.Родительский тест завершится только после того,как все его подтесты будут завершены.В данном примере все тесты выполняются параллельно друг другу,и только друг с другом,независимо от того,какие другие тесты верхнего уровня могут быть определены:</target>
        </trans-unit>
        <trans-unit id="bb672ca35fe1893eef6f12fcd0a8efff47a2478c" translate="yes" xml:space="preserve">
          <source>Success reports whether the program exited successfully, such as with exit status 0 on Unix.</source>
          <target state="translated">Успешно сообщает об успешном завершении программы,например,со статусом выхода 0 на Unix.</target>
        </trans-unit>
        <trans-unit id="07eda2eb03735678c89d2490ea6410dd3ad1a43b" translate="yes" xml:space="preserve">
          <source>Such a file is usually paired with another file implementing the default functionality for other systems, which in this case would carry the constraint:</source>
          <target state="translated">Такой файл обычно спаривается с другим файлом,реализующим функциональность по умолчанию для других систем,которая в этом случае будет нести в себе ограничение:</target>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="1037d5e9f233e3f6a6a25104581ccd4bbd6ac1c7" translate="yes" xml:space="preserve">
          <source>Sum returns the MD5 checksum of the data.</source>
          <target state="translated">Сумма возвращает MD5 контрольную сумму данных.</target>
        </trans-unit>
        <trans-unit id="d8eeaf2ada0e780d70b60f2e9edbd46ef59d4a13" translate="yes" xml:space="preserve">
          <source>Sum returns the SHA-1 checksum of the data.</source>
          <target state="translated">Сумма возвращает SHA-1 контрольную сумму данных.</target>
        </trans-unit>
        <trans-unit id="0dca98b14fcbfeb34897e7396c1a6dfa98d521b4" translate="yes" xml:space="preserve">
          <source>Sum224 returns the SHA224 checksum of the data.</source>
          <target state="translated">Sum224 возвращает контрольную сумму данных SHA224.</target>
        </trans-unit>
        <trans-unit id="ba05916088015c0f1b00b88d9415ebfa726370d8" translate="yes" xml:space="preserve">
          <source>Sum256</source>
          <target state="translated">Sum256</target>
        </trans-unit>
        <trans-unit id="087b1fabd67b489187e993cab88dfd4147ea385d" translate="yes" xml:space="preserve">
          <source>Sum256 returns the SHA256 checksum of the data.</source>
          <target state="translated">Sum256 возвращает контрольную сумму данных SHA256.</target>
        </trans-unit>
        <trans-unit id="6bd95a96de2d8140b4ada3f2d7b194594facee01" translate="yes" xml:space="preserve">
          <source>Sum384 returns the SHA384 checksum of the data.</source>
          <target state="translated">Sum384 возвращает контрольную сумму данных SHA384.</target>
        </trans-unit>
        <trans-unit id="bf1f6e0b5ced478fca66b19297a0e98baeedd390" translate="yes" xml:space="preserve">
          <source>Sum512 returns the SHA512 checksum of the data.</source>
          <target state="translated">Sum512 возвращает контрольную сумму данных SHA512.</target>
        </trans-unit>
        <trans-unit id="3357361c0e72e316aab24916d39ed7d14bdb335d" translate="yes" xml:space="preserve">
          <source>Sum512_224 returns the Sum512/224 checksum of the data.</source>
          <target state="translated">Sum512_224 возвращает контрольную сумму данных Sum512/224.</target>
        </trans-unit>
        <trans-unit id="ff71eecde6b5c686475ebd821438cf7dd50ffe32" translate="yes" xml:space="preserve">
          <source>Sum512_256 returns the Sum512/256 checksum of the data.</source>
          <target state="translated">Sum512_256 возвращает контрольную сумму данных Sum512/256.</target>
        </trans-unit>
        <trans-unit id="4442b8443612835fd9bd367eb3496bb5cfec606a" translate="yes" xml:space="preserve">
          <source>Support for tracing tests and benchmarks built with the standard testing package is built into `go test`. For example, the following command runs the test in the current directory and writes the trace file (trace.out).</source>
          <target state="translated">Поддержка трассировки тестов и бенчмарков,встроенная в стандартный пакет тестирования,встроена в `go test`.Например,следующая команда запускает тест в текущем каталоге и записывает файл трассировки (trace.out).</target>
        </trans-unit>
        <trans-unit id="05492c0a57ea2d63ba2b476c7222b6bcdddbb676" translate="yes" xml:space="preserve">
          <source>Supported architectures for compiler &quot;gc&quot;: &quot;386&quot;, &quot;arm&quot;, &quot;arm64&quot;, &quot;amd64&quot;, &quot;amd64p32&quot;, &quot;mips&quot;, &quot;mipsle&quot;, &quot;mips64&quot;, &quot;mips64le&quot;, &quot;ppc64&quot;, &quot;ppc64le&quot;, &quot;riscv64&quot;, &quot;s390x&quot;, &quot;sparc64&quot;, &quot;wasm&quot;.</source>
          <target state="translated">Поддерживаемые архитектуры для компилятора &quot;gc&quot;:&quot;386&quot;,&quot;arm&quot;,&quot;arm64&quot;,&quot;amd64&quot;,&quot;amd64p32&quot;,&quot;mips&quot;,&quot;mipsle&quot;,&quot;mips64&quot;,&quot;mips64le&quot;,&quot;ppc64&quot;,&quot;ppc64le&quot;,&quot;riscv64&quot;,&quot;s390x&quot;,&quot;sparc64&quot;,&quot;wasm&quot;.</target>
        </trans-unit>
        <trans-unit id="2bd4d45ed11fa0b050a34198a5d7a561630a107e" translate="yes" xml:space="preserve">
          <source>SupportsCertificate returns nil if the provided certificate is supported by the client that sent the ClientHello. Otherwise, it returns an error describing the reason for the incompatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f216722ea67774c646ac48a3a778f2005845b0" translate="yes" xml:space="preserve">
          <source>SupportsCertificate returns nil if the provided certificate is supported by the server that sent the CertificateRequest. Otherwise, it returns an error describing the reason for the incompatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b59b633a995b7dd6a0e84deb15f21ce9bf242a" translate="yes" xml:space="preserve">
          <source>SwapInt32 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapInt32 атоматически сохраняет новое в *addr и возвращает предыдущее значение *addr.</target>
        </trans-unit>
        <trans-unit id="96490065dc4e2e645c8a89627e673eb95f4aaa28" translate="yes" xml:space="preserve">
          <source>SwapInt64 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapInt64 атоматически сохраняет новое в *addr и возвращает предыдущее значение *addr.</target>
        </trans-unit>
        <trans-unit id="da115593d3ae663bb42ff237dd86576dfdedf6ad" translate="yes" xml:space="preserve">
          <source>SwapPointer atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapPointer атоматически сохраняет новое в *addr и возвращает предыдущее значение *addr.</target>
        </trans-unit>
        <trans-unit id="0c0f6214095877962c7da65a2c141bf3b6cbecc8" translate="yes" xml:space="preserve">
          <source>SwapUint32 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapUint32 атоматически сохраняет новое в *addr и возвращает предыдущее значение *addr.</target>
        </trans-unit>
        <trans-unit id="899e9c7e854930b5577e53934a16009339f15457" translate="yes" xml:space="preserve">
          <source>SwapUint64 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapUint64 атоматически сохраняет новое в *addr и возвращает предыдущее значение *addr.</target>
        </trans-unit>
        <trans-unit id="18cdfb91a16523313759a1c794de0eb9712ac2b2" translate="yes" xml:space="preserve">
          <source>SwapUintptr atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapUintptr атоматически сохраняет новое в *addr и возвращает предыдущее значение *addr.</target>
        </trans-unit>
        <trans-unit id="5c2b73e847c3ed8be17c9afe2788c2fedb5bc635" translate="yes" xml:space="preserve">
          <source>Swapper panics if the provided interface is not a slice.</source>
          <target state="translated">Обмен паникует,если предоставляемый интерфейс не является ломтиком.</target>
        </trans-unit>
        <trans-unit id="0485bba36620f415adb72d21b9eac171cd9aadf1" translate="yes" xml:space="preserve">
          <source>Swapper returns a function that swaps the elements in the provided slice.</source>
          <target state="translated">Swapper возвращает функцию,которая заменяет элементы в предоставленном фрагменте.</target>
        </trans-unit>
        <trans-unit id="baf85dad7e64d73c6dc3f04eb46803a601b907a7" translate="yes" xml:space="preserve">
          <source>SymByAddr returns the text, data, or bss symbol starting at the given address.</source>
          <target state="translated">SymByAddr возвращает текст,данные или bss-символ,начинающийся по указанному адресу.</target>
        </trans-unit>
        <trans-unit id="e6a580ed077335806f8a72f4c91bc2108aa36618" translate="yes" xml:space="preserve">
          <source>Symbol Binding - ELFNN_ST_BIND - st_info</source>
          <target state="translated">Символ привязки-ELFNN_ST_BIND-st_info</target>
        </trans-unit>
        <trans-unit id="998290f1606e44ec99b08646525255987ca67dd9" translate="yes" xml:space="preserve">
          <source>Symbol is similar to COFFSymbol with Name field replaced by Go string. Symbol also does not have NumberOfAuxSymbols.</source>
          <target state="translated">Символ похож на COFFS-символ с заменой поля Name на Go string.Символ также не имеет NumberOfAuxSymbols.</target>
        </trans-unit>
        <trans-unit id="e746caac18fb8c9ece11fba1c3858dd24402cee1" translate="yes" xml:space="preserve">
          <source>Symbol looks up the program counters listed in the request, responding with a table mapping program counters to function names. The package initialization registers it as /debug/pprof/symbol.</source>
          <target state="translated">Символ ищет счетчики программы,перечисленные в запросе,отвечая таблицей,отображающей счетчики программы на имена функций.Инициализация пакета регистрирует его как /debug/pprof/symbol.</target>
        </trans-unit>
        <trans-unit id="9183912a1c8677ccbfeafe4a95bb81fdaf9d6c67" translate="yes" xml:space="preserve">
          <source>Symbol type - ELFNN_ST_TYPE - st_info</source>
          <target state="translated">Тип символа-ELFNN_ST_TYPE-st_info</target>
        </trans-unit>
        <trans-unit id="300ae1bf65f5418188fead7a4f6227a1a8cb17ab" translate="yes" xml:space="preserve">
          <source>Symbol visibility - ELFNN_ST_VISIBILITY - st_other</source>
          <target state="translated">Видимость символа-ELFNN_ST_VISIBILITY-st_other</target>
        </trans-unit>
        <trans-unit id="e0dd57ca387a759e2499962eadf5f79f0eaa8ee2" translate="yes" xml:space="preserve">
          <source>Symbols returns the symbol table for f.</source>
          <target state="translated">Символы возвращают таблицу символов для f.</target>
        </trans-unit>
        <trans-unit id="40ab78f946263d95260d4886b240965a4da98f61" translate="yes" xml:space="preserve">
          <source>Symbols returns the symbol table for f. The symbols will be listed in the order they appear in f.</source>
          <target state="translated">Символы возвращает таблицу символов для f.Символы будут перечислены в порядке их появления в f.</target>
        </trans-unit>
        <trans-unit id="2377d81c04be24a887c20fd3bd69bc0f09f37db5" translate="yes" xml:space="preserve">
          <source>Symlink creates newname as a symbolic link to oldname. If there is an error, it will be of type *LinkError.</source>
          <target state="translated">Symlink создает новое имя как символическую ссылку на старое имя.В случае ошибки оно будет иметь тип *LinkError.</target>
        </trans-unit>
        <trans-unit id="0aceec11151392e3e912ee288231038c58c328b4" translate="yes" xml:space="preserve">
          <source>Sync commits the current contents of the file to stable storage. Typically, this means flushing the file system's in-memory copy of recently written data to disk.</source>
          <target state="translated">Sync фиксирует текущее содержимое файла в стабильном хранилище.Обычно это означает промывку внутрипамятной копии файловой системы недавно записанных данных на диск.</target>
        </trans-unit>
        <trans-unit id="e15b4a502540aca9807844244039f56ac0ff96c5" translate="yes" xml:space="preserve">
          <source>Synchronous signals are signals triggered by errors in program execution: SIGBUS, SIGFPE, and SIGSEGV. These are only considered synchronous when caused by program execution, not when sent using os.Process.Kill or the kill program or some similar mechanism. In general, except as discussed below, Go programs will convert a synchronous signal into a run-time panic.</source>
          <target state="translated">Синхронные сигналы-это сигналы,вызванные ошибками в выполнении программы:SIGBUS,SIGFPE и SIGSEGV.Они считаются синхронными только в том случае,если они вызваны выполнением программы,а не при отправке с помощью os.Process.Kill или программы kill или какого-либо подобного механизма.В целом,за исключением случаев,описанных ниже,программы Go преобразуют синхронный сигнал в панику во время выполнения.</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="14251985329004226786245f7238c38c1ab2c9f9" translate="yes" xml:space="preserve">
          <source>Synopsis returns a cleaned version of the first sentence in s. That sentence ends after the first period followed by space and not preceded by exactly one uppercase letter. The result string has no \n, \r, or \t characters and uses only single spaces between words. If s starts with any of the IllegalPrefixes, the result is the empty string.</source>
          <target state="translated">Synopsis возвращает очищенную версию первого предложения в s.Это предложение заканчивается после первого периода с последующим пробелом и не предваряется ровно одной прописной буквой.Строка результата не содержит символов \n,\r или \t и использует только одинарные пробелы между словами.Если s начинается с любого из Исправлений IllegalPrefixes,результатом будет пустая строка.</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="94881bde696c81108db9e992f3357d3d70383bb4" translate="yes" xml:space="preserve">
          <source>Sys returns system-dependent exit information about the process. Convert it to the appropriate underlying type, such as syscall.WaitStatus on Unix, to access its contents.</source>
          <target state="translated">Sys возвращает зависящую от системы информацию о выходе из процесса.Для доступа к его содержимому конвертируйте его в соответствующий базовый тип,такой как syscall.WaitStatus на Unix.</target>
        </trans-unit>
        <trans-unit id="ce82965024d89928bce7d20275a546fd15078072" translate="yes" xml:space="preserve">
          <source>SysProcIDMap holds Container ID to Host ID mappings used for User Namespaces in Linux. See user_namespaces(7).</source>
          <target state="translated">SysProcIDMap содержит сопоставление идентификатора контейнера с идентификатором хоста,используемое для пространств имен пользователей в Linux.См.раздел users_namespaces(7).</target>
        </trans-unit>
        <trans-unit id="8ffbaaa01464f1d0b5846f06e745037abe0d8cb8" translate="yes" xml:space="preserve">
          <source>SysUsage returns system-dependent resource usage information about the exited process. Convert it to the appropriate underlying type, such as *syscall.Rusage on Unix, to access its contents. (On Unix, *syscall.Rusage matches struct rusage as defined in the getrusage(2) manual page.)</source>
          <target state="translated">SysUsage возвращает зависящую от системы информацию об использовании ресурсов о завершённом процессе.Для доступа к его содержимому конвертируйте его в соответствующий базовый тип,такой как *syscall.Rusage на Unix.(В Unix,*sysyscall.Rusage соответствует struct rusage,как определено на странице руководства getrusage(2).).</target>
        </trans-unit>
        <trans-unit id="e293cc54d1f1c47b6fdb1085033440055e2faa2b" translate="yes" xml:space="preserve">
          <source>SyscallConn returns a raw file. This implements the syscall.Conn interface.</source>
          <target state="translated">SyscallConn возвращает сырой файл.Это реализует интерфейс syscall.Conn.</target>
        </trans-unit>
        <trans-unit id="93d325a9a596e81112db1a88f6cf17706c8e91ec" translate="yes" xml:space="preserve">
          <source>SyscallConn returns a raw network connection. This implements the syscall.Conn interface.</source>
          <target state="translated">SyscallConn возвращает необработанное сетевое соединение.Это реализует интерфейс syscall.Conn.</target>
        </trans-unit>
        <trans-unit id="aa615b3f3de4dc13fa4173050b52db98916467bd" translate="yes" xml:space="preserve">
          <source>SyscallError records an error from a specific system call.</source>
          <target state="translated">SyscallError записывает ошибку из конкретного системного вызова.</target>
        </trans-unit>
        <trans-unit id="de57d6136b78d4b44c51a17ce5f47f730586e6a6" translate="yes" xml:space="preserve">
          <source>SystemCertPool returns a copy of the system cert pool.</source>
          <target state="translated">SystemCertPool возвращает копию пула системных сертификатов.</target>
        </trans-unit>
        <trans-unit id="5bc8f6a9ab808b5aa99fa9f5b51afdf83e241a9c" translate="yes" xml:space="preserve">
          <source>SystemRootsError results when we fail to load the system root certificates.</source>
          <target state="translated">SystemRootsError выдает результаты,когда мы не загружаем корневые сертификаты системы.</target>
        </trans-unit>
        <trans-unit id="326b735dbfcf185462598a45a443d5db5a2c18cd" translate="yes" xml:space="preserve">
          <source>SystemTime returns the system CPU time of the exited process and its children.</source>
          <target state="translated">SystemTime возвращает процессорное время системы и его детей.</target>
        </trans-unit>
        <trans-unit id="45c7796c7458dc5d46d3bad14455a8811762231d" translate="yes" xml:space="preserve">
          <source>T is a type passed to Test functions to manage test state and support formatted test logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9dc41e485032cb18e9d13d513ba555be1b33c2" translate="yes" xml:space="preserve">
          <source>T is a type passed to Test functions to manage test state and support formatted test logs. Logs are accumulated during execution and dumped to standard output when done.</source>
          <target state="translated">T-это тип,передаваемый функциям тестирования для управления состоянием теста и поддержки отформатированных тестовых журналов.Журналы накапливаются во время выполнения и по окончании выкладываются в стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="d71f7f3fa4e9f0ba0065f39db28f69d358c4b941" translate="yes" xml:space="preserve">
          <source>TB is the interface common to T and B.</source>
          <target state="translated">ТБ-это интерфейс,общий для Т и Б.</target>
        </trans-unit>
        <trans-unit id="671a2dd281c27979f8b5f140c5da50e321430a64" translate="yes" xml:space="preserve">
          <source>TBSCertificateList represents the ASN.1 structure of the same name. See RFC 5280, section 5.1.</source>
          <target state="translated">TBSCertificateList представляет собой одноименную структуру ASN.1.См.RFC 5280,раздел 5.1.</target>
        </trans-unit>
        <trans-unit id="2984ada09d0c49745872575be1763fe615cf3de7" translate="yes" xml:space="preserve">
          <source>TCPAddr represents the address of a TCP end point.</source>
          <target state="translated">TCPAddr представляет собой адрес конечной точки TCP.</target>
        </trans-unit>
        <trans-unit id="623c2c8aa88d77780fe4e0bcba75694b81bcf2ad" translate="yes" xml:space="preserve">
          <source>TCPConn is an implementation of the Conn interface for TCP network connections.</source>
          <target state="translated">TCPConn является реализацией интерфейса Conn для сетевых TCP-соединений.</target>
        </trans-unit>
        <trans-unit id="1bbfc48812fe8aa4d93c086976c0d5cdc5424e43" translate="yes" xml:space="preserve">
          <source>TCPListener is a TCP network listener. Clients should typically use variables of type Listener instead of assuming TCP.</source>
          <target state="translated">TCPListener-это сетевой слушатель TCP.Клиенты обычно должны использовать переменные типа Listener вместо того,чтобы предполагать TCP.</target>
        </trans-unit>
        <trans-unit id="c0df2a7fffd9d8cf03b29589d0b72452730e5dd3" translate="yes" xml:space="preserve">
          <source>TLS 1.3 is available on an opt-out basis in Go 1.13. To disable it, set the GODEBUG environment variable (comma-separated key=value options) such that it includes &quot;tls13=0&quot;.</source>
          <target state="translated">TLS 1.3 доступен в Go 1.13 на условиях отказа.Чтобы отключить его,установите переменную окружения GODEBUG (опции key=value,разделенные запятыми)таким образом,чтобы она включала &quot;tls13=0&quot;.</target>
        </trans-unit>
        <trans-unit id="daa5896e5821b88d0d9b26d2bc85c2d021b848c8" translate="yes" xml:space="preserve">
          <source>TLSConnectionState returns the client's TLS connection state. The return values are their zero values if StartTLS did not succeed.</source>
          <target state="translated">TLSConnectionState возвращает состояние TLS соединения клиента.Возвращаемые значения являются их нулевыми значениями,если StartTLS не удалось.</target>
        </trans-unit>
        <trans-unit id="ed012370216d609d48fc2b869f8a011268923cad" translate="yes" xml:space="preserve">
          <source>TODO returns a non-nil, empty Context. Code should use context.TODO when it's unclear which Context to use or it is not yet available (because the surrounding function has not yet been extended to accept a Context parameter).</source>
          <target state="translated">TODO возвращает пустой Контекст без содержания.Код должен использовать context.TODO,когда неясно,какой Context использовать,или он еще не доступен (потому что окружающая функция еще не была расширена,чтобы принять параметр Context).</target>
        </trans-unit>
        <trans-unit id="1f541ebdf888dacb11e44ff51c13846474081ba9" translate="yes" xml:space="preserve">
          <source>Tab-terminated cells in contiguous lines constitute a column. The Writer inserts padding as needed to make all cells in a column have the same width, effectively aligning the columns. It assumes that all characters have the same width, except for tabs for which a tabwidth must be specified. Column cells must be tab-terminated, not tab-separated: non-tab terminated trailing text at the end of a line forms a cell but that cell is not part of an aligned column. For instance, in this example (where | stands for a horizontal tab):</source>
          <target state="translated">Табло-терминированные ячейки в непрерывных линиях образуют столбец.Writer вставляет подкладку по мере необходимости,чтобы все ячейки столбца имели одинаковую ширину,эффективно выравнивая столбцы.Предполагается,что все символы имеют одинаковую ширину,за исключением табуляции,для которой должна быть указана ширина табуляции.Ячейки столбцов должны быть терминированными,а не разделенными на таблички:заканчивающийся без табличек текст в конце строки образует ячейку,но эта ячейка не является частью выровненного столбца.Например,в данном примере (где | обозначает горизонтальную закладку):</target>
        </trans-unit>
        <trans-unit id="9baa6d565b56c1e4861e3df81a8fd8df65d699d4" translate="yes" xml:space="preserve">
          <source>Table 1 in [2] suggests maximum numbers of primes for a given size.</source>
          <target state="translated">В таблице 1 в [2]предлагается максимальное количество праймов для данного размера.</target>
        </trans-unit>
        <trans-unit id="ba3ee22bd3b233bdb404d63bfe71ba0cb11ae0a4" translate="yes" xml:space="preserve">
          <source>Table is a 256-word table representing the polynomial for efficient processing.</source>
          <target state="translated">Таблица представляет собой таблицу из 256 слов,представляющую собой многочлен для эффективной обработки.</target>
        </trans-unit>
        <trans-unit id="599b448991ae5ae6d130b6356ce6b00630c5cefb" translate="yes" xml:space="preserve">
          <source>Table represents a Go symbol table. It stores all of the symbols decoded from the program and provides methods to translate between symbols, names, and addresses.</source>
          <target state="translated">Таблица представляет собой таблицу с символом &quot;Go&quot;.Она хранит все декодированные из программы символы и предоставляет методы перевода между символами,именами и адресами.</target>
        </trans-unit>
        <trans-unit id="bfc4ba347929d28c193a400550bae587488f16cd" translate="yes" xml:space="preserve">
          <source>Tag returns the i'th field tag for 0 &amp;lt;= i &amp;lt; NumFields().</source>
          <target state="translated">Тег возвращает тег i-го поля для 0 &amp;lt;= i &amp;lt;NumFields ().</target>
        </trans-unit>
        <trans-unit id="7a39b84c91d8c550355f46b331fdfde2ffca5ba7" translate="yes" xml:space="preserve">
          <source>Tag sizes between 12 and 16 bytes are allowed.</source>
          <target state="translated">Допускаются размеры тегов от 12 до 16 байт.</target>
        </trans-unit>
        <trans-unit id="9dda0ce21be12978cbb42d63ed48bd36a71555e8" translate="yes" xml:space="preserve">
          <source>Taken from &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&quot;&gt;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&lt;/a&gt;</source>
          <target state="translated">Взято с &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&quot;&gt;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="133552ebfbcce8310f8920695422699d5256bac9" translate="yes" xml:space="preserve">
          <source>Tan</source>
          <target state="translated">Tan</target>
        </trans-unit>
        <trans-unit id="c442668b04fe0d2fb49d4d83b1b51198b583f812" translate="yes" xml:space="preserve">
          <source>Tan returns the tangent of the radian argument x.</source>
          <target state="translated">Тан возвращает тангенс аргумента радиан x.</target>
        </trans-unit>
        <trans-unit id="9f8f5243ed4843c5154158c2ff20cd9a586739e0" translate="yes" xml:space="preserve">
          <source>Tan returns the tangent of x.</source>
          <target state="translated">Тан возвращает тангенс &quot;Икс&quot;.</target>
        </trans-unit>
        <trans-unit id="19bff9fbbbadd7b339e0ee0ae1715d62fea9cae0" translate="yes" xml:space="preserve">
          <source>Tanh</source>
          <target state="translated">Tanh</target>
        </trans-unit>
        <trans-unit id="dc8ae90d27ce708b07a5ac10906ccc3ed208c4a5" translate="yes" xml:space="preserve">
          <source>Tanh returns the hyperbolic tangent of x.</source>
          <target state="translated">Тан возвращает гиперболический тангенс Х.</target>
        </trans-unit>
        <trans-unit id="6f0a22a02d454a68d024fa67fa9340156799d88b" translate="yes" xml:space="preserve">
          <source>Tape archives (tar) are a file format for storing a sequence of files that can be read and written in a streaming manner. This package aims to cover most variations of the format, including those produced by GNU and BSD tar tools.</source>
          <target state="translated">Ленточные архивы (tar)-это формат файла для хранения последовательности файлов,которые можно читать и записывать потоковым способом.Этот пакет нацелен на то,чтобы охватить большинство вариаций формата,в том числе и те,которые производятся средствами tar GNU и BSD.</target>
        </trans-unit>
        <trans-unit id="f11f02db734667c97fad6ffb5c8e393a00b87399" translate="yes" xml:space="preserve">
          <source>Task is a data type for tracing a user-defined, logical operation.</source>
          <target state="translated">Задача-это тип данных для трассировки заданной пользователем логической операции.</target>
        </trans-unit>
        <trans-unit id="a9e55d223a3d4713691d397b40624caef60d5252" translate="yes" xml:space="preserve">
          <source>TeeReader</source>
          <target state="translated">TeeReader</target>
        </trans-unit>
        <trans-unit id="c3ce03ea658d6ce846ba37ed8673f608fd0ba578" translate="yes" xml:space="preserve">
          <source>TeeReader returns a Reader that writes to w what it reads from r. All reads from r performed through it are matched with corresponding writes to w. There is no internal buffering - the write must complete before the read completes. Any error encountered while writing is reported as a read error.</source>
          <target state="translated">TeeReader возвращает Читатель,который записывает в w то,что он читает из r.Все прочитанные из r,выполненные через него,сопоставляются с соответствующими записями в w.Внутренней буферизации нет-запись должна завершиться до завершения чтения.Любая ошибка,возникшая во время записи,считается ошибкой при чтении.</target>
        </trans-unit>
        <trans-unit id="d5aae156b3babace54749a4ff370cbf166528804" translate="yes" xml:space="preserve">
          <source>Tell returns the current position in the line table.</source>
          <target state="translated">Телль возвращает текущую позицию в линейной таблице.</target>
        </trans-unit>
        <trans-unit id="243b371792899304742de51767e5e63dc878faba" translate="yes" xml:space="preserve">
          <source>TempDir</source>
          <target state="translated">TempDir</target>
        </trans-unit>
        <trans-unit id="4e9f8298798f58791af33409f9e40b224764dd8a" translate="yes" xml:space="preserve">
          <source>TempDir (Suffix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e70473aa5b1571f3701ff2584745139273d8ab" translate="yes" xml:space="preserve">
          <source>TempDir creates a new temporary directory in the directory dir with a name beginning with prefix and returns the path of the new directory. If dir is the empty string, TempDir uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempDir simultaneously will not choose the same directory. It is the caller's responsibility to remove the directory when no longer needed.</source>
          <target state="translated">TempDir создает новый временный каталог в dir каталога с именем,начинающимся с префикса,и возвращает путь к новому каталогу.Если dir-пустая строка,то TempDir использует каталог по умолчанию для временных файлов (см.os.TempDir).Несколько программ,одновременно вызывающих TempDir,не выберут одну и ту же директорию.В обязанности вызывающего абонента входит удаление каталога,когда в нем больше нет необходимости.</target>
        </trans-unit>
        <trans-unit id="cc071fc9ff710ae41b76bf6f9ab98edd65deeafe" translate="yes" xml:space="preserve">
          <source>TempDir creates a new temporary directory in the directory dir. The directory name is generated by taking pattern and applying a random string to the end. If pattern includes a &quot;*&quot;, the random string replaces the last &quot;*&quot;. TempDir returns the name of the new directory. If dir is the empty string, TempDir uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempDir simultaneously will not choose the same directory. It is the caller's responsibility to remove the directory when no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b913aacfee5a65e416908a68d2ac6cb82c0ef71c" translate="yes" xml:space="preserve">
          <source>TempDir returns a temporary directory for the test to use. The directory is automatically removed by Cleanup when the test and all its subtests complete. Each subsequent call to t.TempDir returns a unique directory; if the directory creation fails, TempDir terminates the test by calling Fatal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275584eb4c05e91a05657287b9e5e68b19aedf60" translate="yes" xml:space="preserve">
          <source>TempDir returns the default directory to use for temporary files.</source>
          <target state="translated">TempDir возвращает директорию по умолчанию для использования во временных файлах.</target>
        </trans-unit>
        <trans-unit id="d7cc1fbb5a71addb97fa8de33ce419d1f28b35a1" translate="yes" xml:space="preserve">
          <source>TempFile</source>
          <target state="translated">TempFile</target>
        </trans-unit>
        <trans-unit id="ba14fe997bc74680fd4532ceead516a44881c27a" translate="yes" xml:space="preserve">
          <source>TempFile (Suffix)</source>
          <target state="translated">TempFile (суффикс)</target>
        </trans-unit>
        <trans-unit id="db71768a24bbe351f05252c3b917cc624a9ef1b3" translate="yes" xml:space="preserve">
          <source>TempFile creates a new temporary file in the directory dir, opens the file for reading and writing, and returns the resulting *os.File. The filename is generated by taking pattern and adding a random string to the end. If pattern includes a &quot;*&quot;, the random string replaces the last &quot;*&quot;. If dir is the empty string, TempFile uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempFile simultaneously will not choose the same file. The caller can use f.Name() to find the pathname of the file. It is the caller's responsibility to remove the file when no longer needed.</source>
          <target state="translated">TempFile создает новый временный файл в директории dir,открывает файл для чтения и записи и возвращает полученный *os.File.Имя файла генерируется путем взятия шаблона и добавления случайной строки в конец.Если в шаблон добавляется &quot;*&quot;,то случайная строка заменяет последнее &quot;*&quot;.Если dir-пустая строка,то TempFile использует директорию по умолчанию для временных файлов (см.os.TempDir).Несколько программ,одновременно вызывающих TempFile,не выберет один и тот же файл.Звонящий может использовать f.Name()для поиска пути к файлу.В обязанности вызывающего абонента входит удаление файла,когда в нем больше нет необходимости.</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="52ee9ac00f43714b0b4818dd84d35b8b6557c7c3" translate="yes" xml:space="preserve">
          <source>Template (Block)</source>
          <target state="translated">Шаблон (Блок)</target>
        </trans-unit>
        <trans-unit id="74122feafa7458ac08ce0eb420614965c6703346" translate="yes" xml:space="preserve">
          <source>Template (Func)</source>
          <target state="translated">Шаблон (Функция)</target>
        </trans-unit>
        <trans-unit id="2682dd16a44a1aa85841c66918e903265b4a3cd6" translate="yes" xml:space="preserve">
          <source>Template (Glob)</source>
          <target state="translated">Шаблон (Глобус)</target>
        </trans-unit>
        <trans-unit id="b329235171f350105da0e424a6e94302aadf509f" translate="yes" xml:space="preserve">
          <source>Template (Helpers)</source>
          <target state="translated">Шаблон (Помощники)</target>
        </trans-unit>
        <trans-unit id="f6c8b5d715e6b1e91ba606c90a46ade44fbfcfc3" translate="yes" xml:space="preserve">
          <source>Template (Parsefiles)</source>
          <target state="translated">Шаблон (Парсефайлы)</target>
        </trans-unit>
        <trans-unit id="57600593178e53d1b30c9ce35cfc8c0a348f3a2c" translate="yes" xml:space="preserve">
          <source>Template (Share)</source>
          <target state="translated">Шаблон (Поделиться)</target>
        </trans-unit>
        <trans-unit id="85b91409ae0c75ad6a8c43a15d791cc0c6067ae4" translate="yes" xml:space="preserve">
          <source>Template is a specialized Template from &quot;text/template&quot; that produces a safe HTML document fragment.</source>
          <target state="translated">Шаблон-это специализированный Шаблон из &quot;текста/шаблона&quot;,который создает безопасный фрагмент HTML документа.</target>
        </trans-unit>
        <trans-unit id="d8a89275d0782e6367eafd96ad18e35d72254fb0" translate="yes" xml:space="preserve">
          <source>Template is the representation of a parsed template. The *parse.Tree field is exported only for use by html/template and should be treated as unexported by all other clients.</source>
          <target state="translated">Шаблон-это представление разобранного шаблона.Поле *parse.Tree экспортируется только для использования html/template и должно рассматриваться всеми остальными клиентами как неэкспортированное.</target>
        </trans-unit>
        <trans-unit id="19cafd4f58542bc1848a2bc09f68f32df89aaeb6" translate="yes" xml:space="preserve">
          <source>Template.Delims</source>
          <target state="translated">Template.Delims</target>
        </trans-unit>
        <trans-unit id="a8aa430f1c13b8e8ba33d56534b8f8c54974c35f" translate="yes" xml:space="preserve">
          <source>TemplateNode represents a {{template}} action.</source>
          <target state="translated">TemplateNode представляет собой действие {{template}}.</target>
        </trans-unit>
        <trans-unit id="6272b08c56a555c9301dfcc377b8ee08eca7de29" translate="yes" xml:space="preserve">
          <source>Templates are executed by applying them to a data structure. Annotations in the template refer to elements of the data structure (typically a field of a struct or a key in a map) to control execution and derive values to be displayed. Execution of the template walks the structure and sets the cursor, represented by a period '.' and called &quot;dot&quot;, to the value at the current location in the structure as execution proceeds.</source>
          <target state="translated">Шаблоны выполняются путем их применения к структуре данных.Аннотации в шаблоне относятся к элементам структуры данных (обычно это поле структуры или ключ на карте)для управления исполнением и получения значений для отображения.Выполнение шаблона шагает по структуре и устанавливает курсор,представленный периодом &quot;...&quot; и называемый &quot;точкой&quot;,на значение в текущем местоположении в структуре по мере выполнения.</target>
        </trans-unit>
        <trans-unit id="d659d268d0b2876b00930d9cefac00e94082414d" translate="yes" xml:space="preserve">
          <source>Templates can be redefined in successive calls to Parse, before the first use of Execute on t or any associated template. A template definition with a body containing only white space and comments is considered empty and will not replace an existing template's body. This allows using Parse to add new named template definitions without overwriting the main template body.</source>
          <target state="translated">Шаблоны могут быть переопределены при последовательных вызовах Parse,перед первым использованием Execute on t или любого связанного с ним шаблона.Определение шаблона с телом,содержащим только пробелы белого цвета и комментарии,считается пустым и не заменяет тело существующего шаблона.Это позволяет использовать Parse для добавления новых именованных определений шаблонов без перезаписи основного тела шаблона.</target>
        </trans-unit>
        <trans-unit id="b0dad97eb547b69ff6ae16e7728cdc906f69fe6a" translate="yes" xml:space="preserve">
          <source>Templates can be redefined in successive calls to Parse. A template definition with a body containing only white space and comments is considered empty and will not replace an existing template's body. This allows using Parse to add new named template definitions without overwriting the main template body.</source>
          <target state="translated">Шаблоны могут быть переопределены при последовательных вызовах Parse.Определение шаблона с телом,содержащим только пробелы и комментарии,считается пустым и не заменяет тело существующего шаблона.Это позволяет использовать Parse для добавления новых определений шаблонов с именами без перезаписи основного тела шаблона.</target>
        </trans-unit>
        <trans-unit id="7b101f8846f53e53dd0074ea44ad4ea7b299215d" translate="yes" xml:space="preserve">
          <source>Templates returns a slice of defined templates associated with t.</source>
          <target state="translated">Шаблоны возвращают часть определенных шаблонов,связанных с t.</target>
        </trans-unit>
        <trans-unit id="ef678e78b264d52108e80621ab16809ee2f68f32" translate="yes" xml:space="preserve">
          <source>Templates returns a slice of the templates associated with t, including t itself.</source>
          <target state="translated">Шаблоны возвращают фрагмент шаблонов,ассоциированных с t,включая сам t.</target>
        </trans-unit>
        <trans-unit id="63499f131caeb094b508fda158f4d32cdfc15875" translate="yes" xml:space="preserve">
          <source>Temporary reports whether the DNS error is known to be temporary. This is not always known; a DNS lookup may fail due to a temporary error and return a DNSError for which Temporary returns false.</source>
          <target state="translated">Временные отчеты о том,известна ли временная ошибка DNS.Это не всегда известно;DNS поиск может не работать из-за временной ошибки и возвращает DNSError,для которого Temporary возвращает false.</target>
        </trans-unit>
        <trans-unit id="102ab778dfcf2daa890ddca81b62a6c8c57e866c" translate="yes" xml:space="preserve">
          <source>Tests or benchmarks may be skipped at run time with a call to the Skip method of *T or *B:</source>
          <target state="translated">Тесты или тесты могут быть пропущены во время выполнения с помощью вызова метода пропуска *T или *B:</target>
        </trans-unit>
        <trans-unit id="4fb2cdb8c84498e97b67876bcf9179f6c6a0681c" translate="yes" xml:space="preserve">
          <source>Text and spaces</source>
          <target state="translated">Текст и пробелы</target>
        </trans-unit>
        <trans-unit id="7c3578369bc9761a19920ddfd71d5074fb77328e" translate="yes" xml:space="preserve">
          <source>Text converts the floating-point number x to a string according to the given format and precision prec. The format is one of:</source>
          <target state="translated">Текст преобразует число с плавающей точкой x в строку в соответствии с заданным форматом и точностью.Формат является одним из них:</target>
        </trans-unit>
        <trans-unit id="9714bb7b9d9dc65203e2f28091e607a38d20869a" translate="yes" xml:space="preserve">
          <source>Text in the format string that is not recognized as part of the reference time is echoed verbatim during Format and expected to appear verbatim in the input to Parse.</source>
          <target state="translated">Текст в строке формата,который не распознается как часть времени ссылки,повторяется дословно во время форматирования и ожидается,что он появится дословно на входе в Parse.</target>
        </trans-unit>
        <trans-unit id="2a87e174a24b19b122c0ab179b85b925e794409f" translate="yes" xml:space="preserve">
          <source>Text returns the most recent token generated by a call to Scan as a newly allocated string holding its bytes.</source>
          <target state="translated">Текст возвращает самую последнюю маркерную строку,сгенерированную вызовом Scan как вновь выделенную строку,содержащую ее байты.</target>
        </trans-unit>
        <trans-unit id="9757ee25c7224af6e75db771ea323fc05ac31e21" translate="yes" xml:space="preserve">
          <source>Text returns the string representation of x in the given base. Base must be between 2 and 62, inclusive. The result uses the lower-case letters 'a' to 'z' for digit values 10 to 35, and the upper-case letters 'A' to 'Z' for digit values 36 to 61. No prefix (such as &quot;0x&quot;) is added to the string. If x is a nil pointer it returns &quot;&amp;lt;nil&amp;gt;&quot;.</source>
          <target state="translated">Текст возвращает строковое представление x в заданной базе. База должна быть от 2 до 62 включительно. В результате используются строчные буквы от &amp;laquo;a&amp;raquo; до &amp;laquo;z&amp;raquo; для цифровых значений от 10 до 35 и заглавные буквы от &amp;laquo;A&amp;raquo; до &amp;laquo;Z&amp;raquo; для цифровых значений от 36 до 61. Без префикса (например, &amp;laquo;0x&amp;raquo; ) добавляется к строке. Если x является нулевым указателем, он возвращает &amp;laquo;&amp;lt;nil&amp;gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="544da0b6d8a9e887a60db43ce4a26fd95b56a5d4" translate="yes" xml:space="preserve">
          <source>Text returns the text of the comment. Comment markers (//, /*, and */), the first space of a line comment, and leading and trailing empty lines are removed. Comment directives like &quot;//line&quot; and &quot;//go:noinline&quot; are also removed. Multiple empty lines are reduced to one, and trailing space on lines is trimmed. Unless the result is empty, it is newline-terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42341adeec7d736d3551b283379c31741e77e4f9" translate="yes" xml:space="preserve">
          <source>Text returns the text of the comment. Comment markers (//, /*, and */), the first space of a line comment, and leading and trailing empty lines are removed. Multiple empty lines are reduced to one, and trailing space on lines is trimmed. Unless the result is empty, it is newline-terminated.</source>
          <target state="translated">Текст возвращает текст комментария.Маркеры комментария (//,/*и */),первый пробел комментария к строке,а также ведущие и отстающие пустые строки удаляются.Несколько пустых строк сокращаются до одной,а оставшееся пространство на строках обрезается.Если результат не пустой,то он заканчивается на новую строку.</target>
        </trans-unit>
        <trans-unit id="02af2db9a5ef05bc960487d876c4df951f9ad592" translate="yes" xml:space="preserve">
          <source>Text types have the charset parameter set to &quot;utf-8&quot; by default.</source>
          <target state="translated">Текстовые типы по умолчанию имеют параметр кодового набора &quot;utf-8&quot;.</target>
        </trans-unit>
        <trans-unit id="b44c08e7f92ae7b5fe535298ff7558bf9d8a0cab" translate="yes" xml:space="preserve">
          <source>TextMarshaler is the interface implemented by an object that can marshal itself into a textual form.</source>
          <target state="translated">TextMarshaler-это интерфейс,реализованный объектом,который может сама себя оформить в текстовую форму.</target>
        </trans-unit>
        <trans-unit id="ae8b7afc36cfb51ffddc286e90577602c85186e4" translate="yes" xml:space="preserve">
          <source>TextNode holds plain text.</source>
          <target state="translated">TextNode содержит простой текст.</target>
        </trans-unit>
        <trans-unit id="48668880c8086b3c4c912b1de227b18b3d9a93e1" translate="yes" xml:space="preserve">
          <source>TextUnmarshaler is the interface implemented by an object that can unmarshal a textual representation of itself.</source>
          <target state="translated">TextUnmarshaler-это интерфейс,реализованный объектом,который может размагничивать текстовое представление себя.</target>
        </trans-unit>
        <trans-unit id="33b69b32d53f67278f1556c03b99ca73467e15b3" translate="yes" xml:space="preserve">
          <source>That is, when matching against text, the regexp returns a match that begins as early as possible in the input (leftmost), and among those it chooses a match that is as long as possible. This so-called leftmost-longest matching is the same semantics that early regular expression implementations used and that POSIX specifies.</source>
          <target state="translated">То есть,при совпадении с текстом,регеxp возвращает совпадение,которое начинается как можно раньше во входных данных (крайнее левое),и среди них выбирает совпадение,которое будет как можно дольше.Это так называемое &quot;самое длинное влево&quot; совпадение-та же семантика,что и в ранних реализациях регулярных выражений,которые используются в POSIX.</target>
        </trans-unit>
        <trans-unit id="1fe9add248f3617655fdc8371d42751cba2e4007" translate="yes" xml:space="preserve">
          <source>The &quot;omitempty&quot; option specifies that the field should be omitted from the encoding if the field has an empty value, defined as false, 0, a nil pointer, a nil interface value, and any empty array, slice, map, or string.</source>
          <target state="translated">Опция &quot;omitempty&quot; указывает,что поле должно быть опущено из кодировки,если поле имеет пустое значение,определенное как false,0,нулевой указатель,нулевое значение интерфейса,и любой пустой массив,срез,карту или строку.</target>
        </trans-unit>
        <trans-unit id="71d19b0f94317203bba62dcd8f10cd68c650f96b" translate="yes" xml:space="preserve">
          <source>The &quot;string&quot; option signals that a field is stored as JSON inside a JSON-encoded string. It applies only to fields of string, floating point, integer, or boolean types. This extra level of encoding is sometimes used when communicating with JavaScript programs:</source>
          <target state="translated">Опция &quot;строка&quot; сигнализирует о том,что поле хранится в виде JSON внутри строки,закодированной в JSON.Она применяется только к полям строкового,с плавающей точкой,целочисленного или булевого типов.Этот дополнительный уровень кодировки иногда используется при общении с JavaScript-программами:</target>
        </trans-unit>
        <trans-unit id="d1ee29ca2c06802f34981d89493c0bb6f1d6d312" translate="yes" xml:space="preserve">
          <source>The %!s just shows the print verb in use when the failure occurred. If the panic is caused by a nil receiver to an Error or String method, however, the output is the undecorated string, &quot;&amp;lt;nil&amp;gt;&quot;.</source>
          <target state="translated">%! S просто показывает команду печати, которая использовалась, когда произошла ошибка. Однако если паника вызвана приемником nil для метода Error или String, на выходе будет строка без декорирования, &amp;laquo;&amp;lt;nil&amp;gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="743e4c8e9a91e391bfa222546fd5a23a69c683b9" translate="yes" xml:space="preserve">
          <source>The *Basic type for Typ[Byte] will have the name &quot;uint8&quot;. Use Universe.Lookup(&quot;byte&quot;).Type() to obtain the specific alias basic type named &quot;byte&quot; (and analogous for &quot;rune&quot;).</source>
          <target state="translated">Тип *Basic для Typ[Byte]будет иметь имя &quot;uint8&quot;.Используйте Universe.Lookup(&quot;байт&quot;).Type()для получения конкретного псевдонима базового типа с именем &quot;байт&quot; (и аналогично &quot;руна&quot;).</target>
        </trans-unit>
        <trans-unit id="850dd1df743a69c63fe9886362ac383beaaa22a7" translate="yes" xml:space="preserve">
          <source>The AES block size in bytes.</source>
          <target state="translated">Размер блока AES в байтах.</target>
        </trans-unit>
        <trans-unit id="5673ab8326600fbbe495a6285dd8ced305ce9de8" translate="yes" xml:space="preserve">
          <source>The AES operations in this package are not implemented using constant-time algorithms. An exception is when running on systems with enabled hardware support for AES that makes these operations constant-time. Examples include amd64 systems using AES-NI extensions and s390x systems using Message-Security-Assist extensions. On such systems, when the result of NewCipher is passed to cipher.NewGCM, the GHASH operation used by GCM is also constant-time.</source>
          <target state="translated">Операции AES в данном пакете не реализованы с использованием алгоритмов постоянного времени.Исключением является работа на системах с включенной аппаратной поддержкой AES,которая делает эти операции постоянными.Примерами могут служить системы amd64,использующие расширения AES-NI,и системы s390x,использующие расширения Message-Security-Assist.На таких системах,когда результат работы NewCipher передается в шифр.NewGCM,операция GHASH,используемая GCM,также является константной.</target>
        </trans-unit>
        <trans-unit id="6adb0b7099e3661b5d507077f904503946e1529a" translate="yes" xml:space="preserve">
          <source>The AuthorityKeyId will be taken from the SubjectKeyId of parent, if any, unless the resulting certificate is self-signed. Otherwise the value from template will be used.</source>
          <target state="translated">AuthorityKeyId будет взят у SubjectKeyId родителя,если таковой имеется,если только полученный сертификат не является самоподписанным.В противном случае будет использовано значение из шаблона.</target>
        </trans-unit>
        <trans-unit id="ef02c253bf1371acc1a3bc5ebf403abe9da8e69d" translate="yes" xml:space="preserve">
          <source>The CPU profile is not available as a Profile. It has a special API, the StartCPUProfile and StopCPUProfile functions, because it streams output to a writer during profiling.</source>
          <target state="translated">Профиль процессора не доступен в качестве профиля.Он имеет специальный API,функции StartCPUProfile и StopCPUProfile,потому что во время профилирования он передает вывод записывающему устройству.</target>
        </trans-unit>
        <trans-unit id="7bedc851c290436a17de2ea56c0e80eced3a4ba0" translate="yes" xml:space="preserve">
          <source>The CRL is signed by priv which should be the private key associated with the public key in the issuer certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff86b138d4478667bb91009d716fd7665b76152" translate="yes" xml:space="preserve">
          <source>The CSPRNG key is indifferentiable from a random oracle as shown in [Coron], the AES-CTR stream is indifferentiable from a random oracle under standard cryptographic assumptions (see [Larsson] for examples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bb730fcee3dc3ab8099094b237b4e5ff536824" translate="yes" xml:space="preserve">
          <source>The Call method waits for the remote call to complete while the Go method launches the call asynchronously and signals completion using the Call structure's Done channel.</source>
          <target state="translated">Метод Call ожидает завершения удаленного вызова,в то время как метод Go запускает вызов асинхронно и сигнализирует о завершении с помощью канала Готово структуры вызова.</target>
        </trans-unit>
        <trans-unit id="fa9c5434f905167654701708a6911e94eaa76597" translate="yes" xml:space="preserve">
          <source>The Client and Transport return Responses from servers once the response headers have been received. The response body is streamed on demand as the Body field is read.</source>
          <target state="translated">Клиент и транспорт возвращают ответы с серверов после получения заголовков ответов.Тело ответа транслируется по требованию по мере чтения поля &quot;Тело&quot;.</target>
        </trans-unit>
        <trans-unit id="a06861d55f6598b58fca7ecb30c8e99763835023" translate="yes" xml:space="preserve">
          <source>The Client's Transport typically has internal state (cached TCP connections), so Clients should be reused instead of created as needed. Clients are safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Транспорт клиента обычно имеет внутреннее состояние (кэшированные TCP соединения),поэтому клиенты должны использоваться повторно,а не создаваться по мере необходимости.Клиенты безопасны для одновременного использования несколькими goroutines.</target>
        </trans-unit>
        <trans-unit id="ceca2d7732940705f6d00b5d32a4fb0ac5b5ffee" translate="yes" xml:space="preserve">
          <source>The CloseNotifier interface is implemented by ResponseWriters which allow detecting when the underlying connection has gone away.</source>
          <target state="translated">Интерфейс CloseNotifier реализован с помощью программы ResponseWriters,которая позволяет обнаружить момент разрыва основного соединения.</target>
        </trans-unit>
        <trans-unit id="e611d14841eea36df4afcbef6632f0e94c16f389" translate="yes" xml:space="preserve">
          <source>The Comments list contains all comments in the source file in order of appearance, including the comments that are pointed to from other nodes via Doc and Comment fields.</source>
          <target state="translated">Список Комментариев содержит все комментарии в исходном файле в порядке их появления,включая комментарии,на которые указывают из других узлов через поля Doc и Comment.</target>
        </trans-unit>
        <trans-unit id="7243291c556ac8dd62df98afdad8c3760dcef423" translate="yes" xml:space="preserve">
          <source>The Content-Type header is set to application/x-www-form-urlencoded. To set other headers, use NewRequest and Client.Do.</source>
          <target state="translated">Заголовок Content-Type настроен на применение/x-www-форма-urlencoded.Для установки других заголовков используйте NewRequest и Client.Do.</target>
        </trans-unit>
        <trans-unit id="4c8514b948c44917ccd4528524ea490c8df7afe9" translate="yes" xml:space="preserve">
          <source>The Content-Type header is set to application/x-www-form-urlencoded. To set other headers, use NewRequest and DefaultClient.Do.</source>
          <target state="translated">Заголовок Content-Type настроен на применение/x-www-форма-urlencoded.Для установки других заголовков используйте NewRequest и DefaultClient.Do.</target>
        </trans-unit>
        <trans-unit id="e64fbf6aec6e290cb2a86c841a198b35f0414494" translate="yes" xml:space="preserve">
          <source>The Context field will be zero to gather a traceback from the current program execution point. In this case, the traceback function will be called from C code.</source>
          <target state="translated">Контекстное поле будет равно нулю,чтобы собрать трассировку из текущей точки выполнения программы.В этом случае функция трассировки будет вызвана из кода на языке C.</target>
        </trans-unit>
        <trans-unit id="0d4ab0b54e24df8d963181a5b8f48a80c3f0be3b" translate="yes" xml:space="preserve">
          <source>The Copy function uses ReaderFrom if available.</source>
          <target state="translated">Функция копирования использует ReaderFrom,если она доступна.</target>
        </trans-unit>
        <trans-unit id="64b7a752d1105251970c527872a99e908894fe83" translate="yes" xml:space="preserve">
          <source>The Copy function uses WriterTo if available.</source>
          <target state="translated">Функция Copy использует WriterTo,если она доступна.</target>
        </trans-unit>
        <trans-unit id="4068b76cb1fd1e06d5771c04e2c02b7fd65472c1" translate="yes" xml:space="preserve">
          <source>The DES block size in bytes.</source>
          <target state="translated">Размер блока DES в байтах.</target>
        </trans-unit>
        <trans-unit id="1b8c2351859f5d138662581cb4874dd621eef345" translate="yes" xml:space="preserve">
          <source>The DSA operations in this package are not implemented using constant-time algorithms.</source>
          <target state="translated">Операции с DSA в данном пакете не реализуются с использованием алгоритмов постоянного времени.</target>
        </trans-unit>
        <trans-unit id="3d5a6f0be8af4ae349714dde142378b2b0dd32c1" translate="yes" xml:space="preserve">
          <source>The Data fields contains object-specific data:</source>
          <target state="translated">Поля данных содержат объектно-специфические данные:</target>
        </trans-unit>
        <trans-unit id="d70280d8e959481aa07b78bca8cd9c9158da0c1f" translate="yes" xml:space="preserve">
          <source>The Decoder does only basic sanity checking on decoded input sizes, and its limits are not configurable. Take caution when decoding gob data from untrusted sources.</source>
          <target state="translated">Декодер осуществляет только базовую проверку вменяемости декодированных входных размеров,и его границы не настраиваются.Будьте осторожны при декодировании данных gob из недоверенных источников.</target>
        </trans-unit>
        <trans-unit id="1a3dcfbdb85a6eb02179c9d5c4dd5b3efbbb6016" translate="yes" xml:space="preserve">
          <source>The Dial function connects to a server:</source>
          <target state="translated">Функция Dial подключается к серверу:</target>
        </trans-unit>
        <trans-unit id="e5af1dd969514f431da9aefdd41666a5f815fd72" translate="yes" xml:space="preserve">
          <source>The Error interface identifies a run time error.</source>
          <target state="translated">Интерфейс &quot;Ошибка&quot; идентифицирует ошибку во время выполнения.</target>
        </trans-unit>
        <trans-unit id="8e437b0bdb4841542eba2f049276dee573f887b3" translate="yes" xml:space="preserve">
          <source>The Errorf function lets us use formatting features to create descriptive error messages.</source>
          <target state="translated">Функция Errorf позволяет использовать функции форматирования для создания описательных сообщений об ошибках.</target>
        </trans-unit>
        <trans-unit id="4cc7e273196b60c7b327e2a1e7c92da50e59b611" translate="yes" xml:space="preserve">
          <source>The Examples section of the documentation includes an illustration of how to use MakeFunc to build a swap function for different types.</source>
          <target state="translated">Раздел Примеры документации содержит иллюстрацию того,как использовать MakeFunc для построения функции подкачки для различных типов.</target>
        </trans-unit>
        <trans-unit id="a4103d71ff7738d060819734b8440840f86eb6a7" translate="yes" xml:space="preserve">
          <source>The Flusher interface is implemented by ResponseWriters that allow an HTTP handler to flush buffered data to the client.</source>
          <target state="translated">Интерфейс Flusher реализован с помощью программы ResponseWriters,которая позволяет HTTP-обработчику прошивать буферизованные данные к клиенту.</target>
        </trans-unit>
        <trans-unit id="8989cf7d3fb3d7f0d686b9d17d09faeb78214543" translate="yes" xml:space="preserve">
          <source>The GIF specification is at &lt;a href=&quot;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&lt;/a&gt;.</source>
          <target state="translated">Спецификация GIF находится на &lt;a href=&quot;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="413f2e2abeee0cebf1b4d1ac0f711038cf2ef825" translate="yes" xml:space="preserve">
          <source>The GOARCH, GOOS, GOPATH, and GOROOT environment variables complete the set of Go environment variables. They influence the building of Go programs (see &lt;a href=&quot;https://golang.org/cmd/go&quot;&gt;https://golang.org/cmd/go&lt;/a&gt; and &lt;a href=&quot;../go/build/index&quot;&gt;https://golang.org/pkg/go/build&lt;/a&gt;). GOARCH, GOOS, and GOROOT are recorded at compile time and made available by constants or functions in this package, but they do not influence the execution of the run-time system.</source>
          <target state="translated">Переменные среды GOARCH, GOOS, GOPATH и GOROOT дополняют набор переменных среды Go. Они влияют на создание программ Go (см. &lt;a href=&quot;https://golang.org/cmd/go&quot;&gt;Https://golang.org/cmd/go&lt;/a&gt; и &lt;a href=&quot;../go/build/index&quot;&gt;https://golang.org/pkg/go/build&lt;/a&gt; ). GOARCH, GOOS и GOROOT записываются во время компиляции и становятся доступными с помощью констант или функций в этом пакете, но они не влияют на выполнение системы времени выполнения.</target>
        </trans-unit>
        <trans-unit id="980859c522964a8cbb3109a2a563d54c04b37667" translate="yes" xml:space="preserve">
          <source>The GODEBUG variable controls debugging variables within the runtime. It is a comma-separated list of name=val pairs setting these named variables:</source>
          <target state="translated">Переменная GODEBUG управляет отладочными переменными во время выполнения.Это разделенный запятыми список пар name=val,задающих эти именованные переменные:</target>
        </trans-unit>
        <trans-unit id="854b96235a6d258614ac621d5a074c350962980a" translate="yes" xml:space="preserve">
          <source>The GODEBUG variables are not covered by Go's API compatibility promise. Please report any issues before disabling HTTP/2 support: &lt;a href=&quot;https://golang.org/s/http2bug&quot;&gt;https://golang.org/s/http2bug&lt;/a&gt;</source>
          <target state="translated">Переменные GODEBUG не покрываются обещанием совместимости API Go. Пожалуйста, сообщайте о любых проблемах перед отключением поддержки HTTP / 2: &lt;a href=&quot;https://golang.org/s/http2bug&quot;&gt;https://golang.org/s/http2bug&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07350ebc65d6866cf7470b34fa919f4c89a12e5a" translate="yes" xml:space="preserve">
          <source>The GOGC variable sets the initial garbage collection target percentage. A collection is triggered when the ratio of freshly allocated data to live data remaining after the previous collection reaches this percentage. The default is GOGC=100. Setting GOGC=off disables the garbage collector entirely. The runtime/debug package's SetGCPercent function allows changing this percentage at run time. See &lt;a href=&quot;debug/index#SetGCPercent&quot;&gt;https://golang.org/pkg/runtime/debug/#SetGCPercent&lt;/a&gt;.</source>
          <target state="translated">Переменная GOGC устанавливает начальный целевой процент сбора мусора. Сбор запускается, когда отношение недавно выделенных данных к текущим данным, остающимся после предыдущего сбора, достигает этого процента. По умолчанию GOGC = 100. Установка GOGC = off полностью отключает сборщик мусора. Функция SetGCPercent пакета времени выполнения / отладки позволяет изменять этот процент во время выполнения. См. &lt;a href=&quot;debug/index#SetGCPercent&quot;&gt;Https://golang.org/pkg/runtime/debug/#SetGCPercent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23644add17b2d4ea82387647518fec703dd62cda" translate="yes" xml:space="preserve">
          <source>The GOMAXPROCS variable limits the number of operating system threads that can execute user-level Go code simultaneously. There is no limit to the number of threads that can be blocked in system calls on behalf of Go code; those do not count against the GOMAXPROCS limit. This package's GOMAXPROCS function queries and changes the limit.</source>
          <target state="translated">Переменная GOMAXPROCS ограничивает количество потоков операционной системы,которые могут одновременно выполнять код Go пользовательского уровня.Нет ограничения на количество потоков,которые могут быть заблокированы в системных вызовах от имени Go кода;те,которые не засчитываются в GOMAXPROCS лимит.В этом пакете функций ГОМАКСПРОЦС выполняются запросы и изменяется предел.</target>
        </trans-unit>
        <trans-unit id="2dc1829c430b9fe1fcd42a5d7af5182478e7df72" translate="yes" xml:space="preserve">
          <source>The GORACE variable configures the race detector, for programs built using -race. See &lt;a href=&quot;https://golang.org/doc/articles/race_detector.html&quot;&gt;https://golang.org/doc/articles/race_detector.html&lt;/a&gt; for details.</source>
          <target state="translated">Переменная GORACE настраивает детектор гонки для программ, созданных с использованием -race. Подробнее см. &lt;a href=&quot;https://golang.org/doc/articles/race_detector.html&quot;&gt;Https://golang.org/doc/articles/race_detector.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="895a2c86582e638542cc835d086a523cf9768898" translate="yes" xml:space="preserve">
          <source>The GOTRACEBACK variable controls the amount of output generated when a Go program fails due to an unrecovered panic or an unexpected runtime condition. By default, a failure prints a stack trace for the current goroutine, eliding functions internal to the run-time system, and then exits with exit code 2. The failure prints stack traces for all goroutines if there is no current goroutine or the failure is internal to the run-time. GOTRACEBACK=none omits the goroutine stack traces entirely. GOTRACEBACK=single (the default) behaves as described above. GOTRACEBACK=all adds stack traces for all user-created goroutines. GOTRACEBACK=system is like &amp;ldquo;all&amp;rdquo; but adds stack frames for run-time functions and shows goroutines created internally by the run-time. GOTRACEBACK=crash is like &amp;ldquo;system&amp;rdquo; but crashes in an operating system-specific manner instead of exiting. For example, on Unix systems, the crash raises SIGABRT to trigger a core dump. For historical reasons, the GOTRACEBACK settings 0, 1, and 2 are synonyms for none, all, and system, respectively. The runtime/debug package's SetTraceback function allows increasing the amount of output at run time, but it cannot reduce the amount below that specified by the environment variable. See &lt;a href=&quot;debug/index#SetTraceback&quot;&gt;https://golang.org/pkg/runtime/debug/#SetTraceback&lt;/a&gt;.</source>
          <target state="translated">Переменная GOTRACEBACK контролирует количество выходных данных, генерируемых при сбое программы Go из-за невосстановленной паники или неожиданного условия выполнения. По умолчанию при сбое печатается трассировка стека для текущей горутины, исключая функции, внутренние для системы времени выполнения, а затем завершается с кодом выхода 2. При ошибке печатаются трассировки стека для всех горутин, если текущей горутины нет или сбой внутренний по отношению к времени выполнения. GOTRACEBACK = none полностью исключает трассировку стека горутин. GOTRACEBACK = single (по умолчанию) ведет себя, как описано выше. GOTRACEBACK = all добавляет трассировки стека для всех горутин, созданных пользователем. GOTRACEBACK = system похожа на &amp;laquo;все&amp;raquo;, но добавляет фреймы стека для функций времени выполнения и показывает горутины, созданные внутри среды выполнения.GOTRACEBACK = сбой похож на &amp;laquo;систему&amp;raquo;, но сбой зависит от операционной системы, а не завершается. Например, в системах Unix сбой вызывает SIGABRT, чтобы запустить дамп ядра. По историческим причинам настройки GOTRACEBACK 0, 1 и 2 являются синонимами для none, all и system соответственно. Функция SetTraceback пакета среды выполнения / отладки позволяет увеличить объем вывода во время выполнения, но не может уменьшить объем ниже указанного в переменной среды. Видетьно он не может уменьшить количество ниже указанного в переменной среды. Видетьно он не может уменьшить количество ниже указанного в переменной среды. Видеть&lt;a href=&quot;debug/index#SetTraceback&quot;&gt;https://golang.org/pkg/runtime/debug/#SetTraceback&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="201ea9b13c6c1b11811e547f191be7e93f488ebd" translate="yes" xml:space="preserve">
          <source>The Go 1 compatibility guidelines make it impossible for us to change the behavior of these methods; use Read or ReadMsgIP instead.</source>
          <target state="translated">Рекомендации по совместимости Go 1 делают невозможным изменение поведения этих методов;вместо этого используйте Read или ReadMsgIP.</target>
        </trans-unit>
        <trans-unit id="bbb7c186e3ae50bd364f0be3171da7e4e4fa74f9" translate="yes" xml:space="preserve">
          <source>The Go function fn is called with the value of JavaScript's &quot;this&quot; keyword and the arguments of the invocation. The return value of the invocation is the result of the Go function mapped back to JavaScript according to ValueOf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7566eb3c6d36d40991cd457887383d73c8d32f6" translate="yes" xml:space="preserve">
          <source>The Go path is a list of directory trees containing Go source code. It is consulted to resolve imports that cannot be found in the standard Go tree. The default path is the value of the GOPATH environment variable, interpreted as a path list appropriate to the operating system (on Unix, the variable is a colon-separated string; on Windows, a semicolon-separated string; on Plan 9, a list).</source>
          <target state="translated">Путь Go-это список деревьев каталогов,содержащих исходный код Go.Он используется для решения проблемы импорта,которая не может быть найдена в стандартном дереве Go.Путь по умолчанию-это значение переменной окружения GOPATH,интерпретируемое как список путей,соответствующий операционной системе (в Unix переменная-это строка,разделенная двоеточием;в Windows-строка,разделенная точкой с запятой;в Plan 9-список).</target>
        </trans-unit>
        <trans-unit id="b3cf2d68365e20d0973a301087cdd0150f378764" translate="yes" xml:space="preserve">
          <source>The Go visibility rules for struct fields are amended for JSON when deciding which field to marshal or unmarshal. If there are multiple fields at the same level, and that level is the least nested (and would therefore be the nesting level selected by the usual Go rules), the following extra rules apply:</source>
          <target state="translated">Правила видимости Go для структурных полей изменяются для JSON при принятии решения о том,какое из полей должно быть марширующим или немарширующим.Если на одном и том же уровне имеется несколько полей,и этот уровень является наименее вложенным (и,следовательно,это будет уровень вложенности,выбранный обычными правилами Go),то применяются следующие дополнительные правила:</target>
        </trans-unit>
        <trans-unit id="0fd6453ed937237b824b9a18906363db4d73b2a6" translate="yes" xml:space="preserve">
          <source>The HandlerFunc type is an adapter to allow the use of ordinary functions as HTTP handlers. If f is a function with the appropriate signature, HandlerFunc(f) is a Handler that calls f.</source>
          <target state="translated">Тип HandlerFunc является адаптером,позволяющим использовать обычные функции в качестве обработчиков HTTP.Если f-функция с соответствующей сигнатурой,то обработчик,вызывающий f,является обработчиком.</target>
        </trans-unit>
        <trans-unit id="dcde06a75814cbd2f82c57451a15f7098bfdc1f6" translate="yes" xml:space="preserve">
          <source>The Hijacker interface is implemented by ResponseWriters that allow an HTTP handler to take over the connection.</source>
          <target state="translated">Интерфейс Hijacker реализован средствами ResponseWriters,которые позволяют HTTP-обработчику взять на себя управление соединением.</target>
        </trans-unit>
        <trans-unit id="3370b385b8e5dd84393ea8ba4a384825a13db61b" translate="yes" xml:space="preserve">
          <source>The Interface type describes the requirements for a type using the routines in this package. Any type that implements it may be used as a min-heap with the following invariants (established after Init has been called or if the data is empty or sorted):</source>
          <target state="translated">Тип интерфейса описывает требования к типу,использующему процедуры в данном пакете.Любой тип,реализующий его,может быть использован как min-heap со следующими инвариантами (устанавливаемыми после вызова Init или если данные пустые или отсортированные):</target>
        </trans-unit>
        <trans-unit id="0aee04eced9ac7c3fac2de601ac7413fde3bf654" translate="yes" xml:space="preserve">
          <source>The JSON null value unmarshals into an interface, map, pointer, or slice by setting that Go value to nil. Because null is often used in JSON to mean &amp;ldquo;not present,&amp;rdquo; unmarshaling a JSON null into any other Go type has no effect on the value and produces no error.</source>
          <target state="translated">Нулевое значение JSON демаршалируется в интерфейс, карту, указатель или фрагмент, устанавливая для этого значения Go значение nil. Поскольку null часто используется в JSON для обозначения &amp;laquo;отсутствует&amp;raquo;, демаршалинг нулевого значения JSON в любой другой тип Go не влияет на значение и не вызывает ошибок.</target>
        </trans-unit>
        <trans-unit id="22f4320ee94c207b6f6c1bf76ec0cc99a4e78e12" translate="yes" xml:space="preserve">
          <source>The Listen function creates servers:</source>
          <target state="translated">Функция Listen создает серверы:</target>
        </trans-unit>
        <trans-unit id="f1e8051445ee7295f2015e153c91e6e9f468a7b9" translate="yes" xml:space="preserve">
          <source>The Map type is optimized for two common use cases: (1) when the entry for a given key is only ever written once but read many times, as in caches that only grow, or (2) when multiple goroutines read, write, and overwrite entries for disjoint sets of keys. In these two cases, use of a Map may significantly reduce lock contention compared to a Go map paired with a separate Mutex or RWMutex.</source>
          <target state="translated">Тип карты оптимизирован для двух распространенных случаев использования:(1)когда запись для данного ключа записывается только один раз,но читается много раз,как в кэшах,которые только растут,или (2)когда несколько горилл читают,записывают и перезаписывают записи для разрозненных наборов ключей.В этих двух случаях использование карты может значительно снизить контрастность замков по сравнению с картой Go в паре с отдельным мьютексом или RWMutex.</target>
        </trans-unit>
        <trans-unit id="93c1aea237df8273d73d6b2b1db4e7c127b7fdb2" translate="yes" xml:space="preserve">
          <source>The Map type is specialized. Most code should use a plain Go map instead, with separate locking or coordination, for better type safety and to make it easier to maintain other invariants along with the map content.</source>
          <target state="translated">Тип карты является специализированным.Большинство кода должно использовать обычную карту Go,с отдельной блокировкой или координацией,для лучшей безопасности типа и для облегчения поддержания других инвариантов наряду с содержанием карты.</target>
        </trans-unit>
        <trans-unit id="0006e6725a631489c9423aa1f192586acc3a14d6" translate="yes" xml:space="preserve">
          <source>The MergeMode flags control the behavior of MergePackageFiles.</source>
          <target state="translated">Флаги MergeMode контролируют поведение MergePackageFiles.</target>
        </trans-unit>
        <trans-unit id="46419978a96c95f07df701b47af9ce0c381fb8e5" translate="yes" xml:space="preserve">
          <source>The New function creates errors whose only content is a text message.</source>
          <target state="translated">Функция New создает ошибки,единственным содержимым которых является текстовое сообщение.</target>
        </trans-unit>
        <trans-unit id="ed989955d8475da0903bbb33a13d3c6797487592" translate="yes" xml:space="preserve">
          <source>The PC field will be a value returned by a call to the traceback function.</source>
          <target state="translated">Поле ПК будет представлять собой значение,возвращаемое при вызове функции трассировки.</target>
        </trans-unit>
        <trans-unit id="886ce6ce1a2e11f65b175c91749f88d574c43226" translate="yes" xml:space="preserve">
          <source>The PNG specification is at &lt;a href=&quot;https://www.w3.org/TR/PNG/&quot;&gt;https://www.w3.org/TR/PNG/&lt;/a&gt;.</source>
          <target state="translated">Спецификация PNG находится по адресу &lt;a href=&quot;https://www.w3.org/TR/PNG/&quot;&gt;https://www.w3.org/TR/PNG/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c904da70bc4311012997fe9bbd4ccc021eaf72a0" translate="yes" xml:space="preserve">
          <source>The Pos value for a given file is a number in the range [base, base+size], where base and size are specified when a file is added to the file set. The difference between a Pos value and the corresponding file base corresponds to the byte offset of that position (represented by the Pos value) from the beginning of the file. Thus, the file base offset is the Pos value representing the first byte in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01da8fcfe6b3b9e18fc8125aed80da656d99c50" translate="yes" xml:space="preserve">
          <source>The Pos value for a given file is a number in the range [base, base+size], where base and size are specified when adding the file to the file set via AddFile.</source>
          <target state="translated">Значение Pos для данного файла-это число в диапазоне [base,base+size],где base и size задаются при добавлении файла в набор с помощью AddFile.</target>
        </trans-unit>
        <trans-unit id="24b49c8f6cf4d6923667f2f4ded23d7140a2b9f0" translate="yes" xml:space="preserve">
          <source>The Priority is a combination of the syslog facility and severity. For example, LOG_ALERT | LOG_FTP sends an alert severity message from the FTP facility. The default severity is LOG_EMERG; the default facility is LOG_KERN.</source>
          <target state="translated">Приоритет-это сочетание системы syslog и суровости.Например,LOG_ALERT | LOG_FTP посылает сообщение о серьезности предупреждения из подсистемы FTP.Серьезность по умолчанию-LOG_EMERG;по умолчанию-LOG_KERN.</target>
        </trans-unit>
        <trans-unit id="c56c9b0bbe08c95a239dcc95eda30597b6ca619e" translate="yes" xml:space="preserve">
          <source>The Process it returns can be used to obtain information about the underlying operating system process.</source>
          <target state="translated">Возвращаемый процесс может быть использован для получения информации о процессе,лежащем в основе операционной системы.</target>
        </trans-unit>
        <trans-unit id="10801c2ff1093f1ce7c760ba00803c382474a94e" translate="yes" xml:space="preserve">
          <source>The RSA operations in this package are not implemented using constant-time algorithms.</source>
          <target state="translated">Операции RSA в данном пакете не реализованы с использованием алгоритмов постоянного времени.</target>
        </trans-unit>
        <trans-unit id="e75efacd08116681c05f3907c86c9cdff60db179" translate="yes" xml:space="preserve">
          <source>The ReadCloser returned by NewReader also implements Resetter.</source>
          <target state="translated">В ReadCloser,возвращаемом NewReader,также реализован Resetter.</target>
        </trans-unit>
        <trans-unit id="3bfc20a3944403086f24f5757939a8cbd9b7c5ac" translate="yes" xml:space="preserve">
          <source>The ReadCloser returned by NewReaderDict also implements Resetter.</source>
          <target state="translated">В ReadCloser,возвращаемом NewReaderDict,также используется Resetter.</target>
        </trans-unit>
        <trans-unit id="c4f8edaea822742e73d1aca6a1265098af5d579e" translate="yes" xml:space="preserve">
          <source>The Reader converts all \r\n sequences in its input to plain \n, including in multiline field values, so that the returned data does not depend on which line-ending convention an input file uses.</source>
          <target state="translated">Читатель преобразует все последовательности \r\n в своих входных данных в обычный \n,в том числе в значениях многострочных полей,чтобы возвращаемые данные не зависели от того,какое соглашение об окончании строки используется во входном файле.</target>
        </trans-unit>
        <trans-unit id="41c2e3518894534a6a634c57bbad5ea70224c3de" translate="yes" xml:space="preserve">
          <source>The Reader.Header fields will be valid in the Reader returned.</source>
          <target state="translated">Поля Reader.Header будут действительны в возвращаемом Reader.</target>
        </trans-unit>
        <trans-unit id="9fd8011df0852a1e27b3907bd2a3f82247ef31e5" translate="yes" xml:space="preserve">
          <source>The Request.Proto is always HTTP/1.1.</source>
          <target state="translated">Request.Proto всегда HTTP/1.1.</target>
        </trans-unit>
        <trans-unit id="09c4e81d433af7e0ae48c721f621859a4e5a3317" translate="yes" xml:space="preserve">
          <source>The Response Body is closed after it is sent.</source>
          <target state="translated">После отправки орган реагирования закрывается.</target>
        </trans-unit>
        <trans-unit id="041fd8da9679545d4de46a3a12d665330f551006" translate="yes" xml:space="preserve">
          <source>The Response.Body is guaranteed to be non-nil and Body.Read call is guaranteed to not return any error other than io.EOF.</source>
          <target state="translated">Гарантируется,что Response.Body не будет нулевым,а Body.Read вызов гарантированно не возвращает никаких ошибок,кроме io.EOF.</target>
        </trans-unit>
        <trans-unit id="bc99bfa959e73d9ff72d10e54ecd5ffaa2259252" translate="yes" xml:space="preserve">
          <source>The Response.Header is a snapshot of the headers at the time of the first write call, or at the time of this call, if the handler never did a write.</source>
          <target state="translated">Заголовок Response.header-это снимок заголовков в момент первого вызова на запись,или в момент этого вызова,если обработчик никогда не делал записи.</target>
        </trans-unit>
        <trans-unit id="18a3ebac1f2c2059df0438aac114025f62ecfbf9" translate="yes" xml:space="preserve">
          <source>The Run methods of T and B allow defining subtests and sub-benchmarks, without having to define separate functions for each. This enables uses like table-driven benchmarks and creating hierarchical tests. It also provides a way to share common setup and tear-down code:</source>
          <target state="translated">Методы прогона T и B позволяют определять подтесты и вложенные бенчмарки,без необходимости определять отдельные функции для каждой из них.Это позволяет использовать такие тесты,как табличные тесты и создавать иерархические тесты.Кроме того,это дает возможность совместного использования общих настроек и разбитого кода:</target>
        </trans-unit>
        <trans-unit id="2fdffd1148a25e94f2ea65756e345947d69016d2" translate="yes" xml:space="preserve">
          <source>The SendMail function and the net/smtp package are low-level mechanisms and provide no support for DKIM signing, MIME attachments (see the mime/multipart package), or other mail functionality. Higher-level packages exist outside of the standard library.</source>
          <target state="translated">Функция SendMail и пакет net/smtp являются низкоуровневыми механизмами и не поддерживают подписание DKIM,MIME вложения (см.пакет mime/multipart)или другую почтовую функциональность.Пакеты более высокого уровня существуют вне стандартной библиотеки.</target>
        </trans-unit>
        <trans-unit id="f9a92bd5980ed21b3a625476d07c987591bfa7d7" translate="yes" xml:space="preserve">
          <source>The Spec type stands for any of *ImportSpec, *ValueSpec, and *TypeSpec.</source>
          <target state="translated">Тип Spec означает любой из *ImportSpec,*ValueSpec и *TypeSpec.</target>
        </trans-unit>
        <trans-unit id="4919a225e3add39379ff15a9bce358f52cae5ffb" translate="yes" xml:space="preserve">
          <source>The Syscall functions in package syscall pass their uintptr arguments directly to the operating system, which then may, depending on the details of the call, reinterpret some of them as pointers. That is, the system call implementation is implicitly converting certain arguments back from uintptr to pointer.</source>
          <target state="translated">Функции Syscall в пакете syscall передают свои аргументы uintptr непосредственно в операционную систему,которая затем может,в зависимости от деталей вызова,переинтерпретировать некоторые из них как указатели.То есть,реализация системного вызова неявно преобразует некоторые аргументы обратно из uintptr в указатель.</target>
        </trans-unit>
        <trans-unit id="3e332fd0096a988b6619d722b0818e386abfd30a" translate="yes" xml:space="preserve">
          <source>The TIFF file format uses a similar but incompatible version of the LZW algorithm. See the golang.org/x/image/tiff/lzw package for an implementation.</source>
          <target state="translated">Формат файла TIFF использует аналогичную,но несовместимую версию алгоритма LZW.См.пакет golang.org/x/image/tiff/lzw для получения информации о реализации.</target>
        </trans-unit>
        <trans-unit id="58336a8c0934089954efcd803d6fca80fefa9eb4" translate="yes" xml:space="preserve">
          <source>The TLS field is set to a non-nil dummy value if target has scheme &quot;https&quot;.</source>
          <target state="translated">Поле TLS устанавливается на ненулевое значение,если цель имеет схему &quot;https&quot;.</target>
        </trans-unit>
        <trans-unit id="d581afca4a5305392d28788d2eee7630e8dc138a" translate="yes" xml:space="preserve">
          <source>The Time returned by time.Now contains a monotonic clock reading. If Time t has a monotonic clock reading, t.Add adds the same duration to both the wall clock and monotonic clock readings to compute the result. Because t.AddDate(y, m, d), t.Round(d), and t.Truncate(d) are wall time computations, they always strip any monotonic clock reading from their results. Because t.In, t.Local, and t.UTC are used for their effect on the interpretation of the wall time, they also strip any monotonic clock reading from their results. The canonical way to strip a monotonic clock reading is to use t = t.Round(0).</source>
          <target state="translated">Время возвращается по времени.Теперь содержит монотонное считывание показаний часов.Если время t имеет монотонное чтение часов,t.Add добавляет одинаковую продолжительность как настенные часы,так и монотонные часы чтения для расчета результата.Потому что t.AddDate(y,m,d),t.Round(d),и t.Truncate(d)являются настенные вычисления времени,они всегда снимают любые монотонные чтения часов с их результатов.Потому что t.In,t.Local,и t.UTC используются для их влияния на интерпретацию времени стены,они также удаляют любые монотонные часы чтения из своих результатов.Канонический способ снять монотонный чтения часов является использование t=t.Round(0).</target>
        </trans-unit>
        <trans-unit id="33e81456d15715e940a5919174eaa3f7637dcde7" translate="yes" xml:space="preserve">
          <source>The Timer type represents a single event. When the Timer expires, the current time will be sent on C, unless the Timer was created by AfterFunc. A Timer must be created with NewTimer or AfterFunc.</source>
          <target state="translated">Тип Таймер представляет собой единичное событие.По истечении срока действия таймера текущее время будет отправлено на C,если только таймер не был создан AfterFunc.Таймер должен быть создан с помощью NewTimer или AfterFunc.</target>
        </trans-unit>
        <trans-unit id="cf73d1723f31995bde582871be9d0a7a3c49f2e8" translate="yes" xml:space="preserve">
          <source>The Universe scope contains all predeclared objects of Go. It is the outermost scope of any chain of nested scopes.</source>
          <target state="translated">Вселенская область видимости содержит все заявленные объекты Go.Это крайняя сфера охвата любой цепочки вложенных диапазонов.</target>
        </trans-unit>
        <trans-unit id="d2217feb010f2a9e20eb107dc97fbe00b28a97e3" translate="yes" xml:space="preserve">
          <source>The Unsafe package is the package returned by an importer for the import path &quot;unsafe&quot;.</source>
          <target state="translated">Небезопасный пакет-это пакет,возвращаемый импортером по &quot;небезопасному&quot; пути импорта.</target>
        </trans-unit>
        <trans-unit id="82e1a6db6a2ce451395a30960fcbaa8d447276c7" translate="yes" xml:space="preserve">
          <source>The Unwrap, Is and As functions work on errors that may wrap other errors. An error wraps another error if its type has the method</source>
          <target state="translated">Функции Unwrap,Is и As работают с ошибками,которые могут обернуть другие ошибки.Ошибка обертывает другую ошибку,если ее тип имеет метод</target>
        </trans-unit>
        <trans-unit id="84a102639d5d98f811fc502808b53b881ef02020" translate="yes" xml:space="preserve">
          <source>The Userinfo type is an immutable encapsulation of username and password details for a URL. An existing Userinfo value is guaranteed to have a username set (potentially empty, as allowed by RFC 2396), and optionally a password.</source>
          <target state="translated">Тип Userinfo представляет собой незыблемую инкапсуляцию имени пользователя и пароля для URL-адреса.Существующее значение Userinfo гарантированно имеет набор имени пользователя (потенциально пустое,как это разрешено RFC 2396),а также,по желанию,пароль.</target>
        </trans-unit>
        <trans-unit id="fbd19f3117c4f5404c3dc4318c570ed741a162cd" translate="yes" xml:space="preserve">
          <source>The Value.Call method allows the caller to invoke a typed function in terms of Values; in contrast, MakeFunc allows the caller to implement a typed function in terms of Values.</source>
          <target state="translated">Метод Value.Call позволяет вызывающему абоненту вызывать типизированную функцию в терминах Values;в отличие от него,MakeFunc позволяет вызывающему абоненту реализовать типизированную функцию в терминах Values.</target>
        </trans-unit>
        <trans-unit id="b671f0d2f06db5c55a3ebed77ddd3e1fdacf58bc" translate="yes" xml:space="preserve">
          <source>The Wait method will return the exit code and release associated resources once the command exits.</source>
          <target state="translated">Метод Wait возвращает код выхода и освобождает связанные с ним ресурсы после выхода команды.</target>
        </trans-unit>
        <trans-unit id="f996448ff14d875bb2a49935e2e1a1c11597d19a" translate="yes" xml:space="preserve">
          <source>The WithCancel, WithDeadline, and WithTimeout functions take a Context (the parent) and return a derived Context (the child) and a CancelFunc. Calling the CancelFunc cancels the child and its children, removes the parent's reference to the child, and stops any associated timers. Failing to call the CancelFunc leaks the child and its children until the parent is canceled or the timer fires. The go vet tool checks that CancelFuncs are used on all control-flow paths.</source>
          <target state="translated">Функции WithCancel,WithDeadline и WithTimeout принимают контекст (родительский)и возвращают производный контекст (дочерний)и CancelFunc.Вызов CancelFunc отменяет дочерний элемент и его дочерние элементы,удаляет родительскую ссылку на дочерний элемент и останавливает любые связанные с ним таймеры.Неспособность вызвать CancelFunc приводит к утечке информации о ребенке и его детях до тех пор,пока родитель не будет отменен или пока не начнется срабатывание таймера.Инструмент go vet проверяет,что CancelFuncs используется на всех путях потока управления.</target>
        </trans-unit>
        <trans-unit id="7ad67f6f0923ebfa2c780fb9b0118879fff918f1" translate="yes" xml:space="preserve">
          <source>The Writer assumes that all Unicode code points have the same width; this may not be true in some fonts or if the string contains combining characters.</source>
          <target state="translated">Автор предполагает,что все точки кода Юникода имеют одинаковую ширину;это может быть не так в некоторых шрифтах или если строка содержит комбинирующие символы.</target>
        </trans-unit>
        <trans-unit id="e4b495842c9aa071c7e0475777b24079ec5d06f2" translate="yes" xml:space="preserve">
          <source>The Writer currently provides no support for sparse files.</source>
          <target state="translated">В настоящее время Writer не поддерживает разреженные файлы.</target>
        </trans-unit>
        <trans-unit id="53af9c2eed3edf32c0f1e34e826ade2723d6ef7e" translate="yes" xml:space="preserve">
          <source>The Writer must buffer input internally, because proper spacing of one line may depend on the cells in future lines. Clients must call Flush when done calling Write.</source>
          <target state="translated">Записывающее устройство должно иметь внутренний буфер,так как правильное расстояние между строками может зависеть от ячеек в будущих строках.Клиенты должны вызывать Flush по завершении вызова Write.</target>
        </trans-unit>
        <trans-unit id="628a74097036f85303a5350ae981dc164e95f20b" translate="yes" xml:space="preserve">
          <source>The Writer treats incoming bytes as UTF-8-encoded text consisting of cells terminated by horizontal ('\t') or vertical ('\v') tabs, and newline ('\n') or formfeed ('\f') characters; both newline and formfeed act as line breaks.</source>
          <target state="translated">Автор рассматривает входящие байты как текст в кодировке UTF-8,состоящий из ячеек,прерываемых горизонтальными ('\t')или вертикальными ('\v')вкладками,и символов newline ('\n')или formfeed ('\f');как newline,так и formfeed действуют как разрывы строк.</target>
        </trans-unit>
        <trans-unit id="ff09099a8f170cf0d12905fa7c7238d645a38332" translate="yes" xml:space="preserve">
          <source>The XML element for a struct contains marshaled elements for each of the exported fields of the struct, with these exceptions:</source>
          <target state="translated">XML-элемент для структуры содержит маршированные элементы для каждого из экспортируемых полей структуры,за этими исключениями:</target>
        </trans-unit>
        <trans-unit id="79336ab4324d9f5dfdaefa0128d6e4be21b88b75" translate="yes" xml:space="preserve">
          <source>The []byte arguments are the data from the corresponding debug section in the object file; for example, for an ELF object, abbrev is the contents of the &quot;.debug_abbrev&quot; section.</source>
          <target state="translated">Аргументами []байта являются данные из соответствующей секции отладки в объектном файле;например,для ELF-объекта аббревиатура-это содержимое секции &quot;.debug_abbrev&quot;.</target>
        </trans-unit>
        <trans-unit id="76c0ad8d05ede9a06fba9319e4883b6c3aed9f8a" translate="yes" xml:space="preserve">
          <source>The actual read interface needed by NewReader. If the passed in io.Reader does not also have ReadByte, the NewReader will introduce its own buffering.</source>
          <target state="translated">Фактический интерфейс чтения,необходимый NewReader.Если переданный в io.Reader файл также не имеет ReadByte,NewReader введет собственную буферизацию.</target>
        </trans-unit>
        <trans-unit id="c853d84a15cfc8c913087ccf677e5edf1ca53e04" translate="yes" xml:space="preserve">
          <source>The add operation, implemented by the AddT functions, is the atomic equivalent of:</source>
          <target state="translated">Операция добавления,реализованная функциями AddT,является атомным эквивалентом:</target>
        </trans-unit>
        <trans-unit id="7b4a22ebac17d94f75fe50addbae480c54b8e412" translate="yes" xml:space="preserve">
          <source>The addresses in the to parameter are the SMTP RCPT addresses.</source>
          <target state="translated">Адреса в параметре to-это адреса SMTP RCPT.</target>
        </trans-unit>
        <trans-unit id="fa78f066db9b3a5524ca42a8affe77f75da9d63e" translate="yes" xml:space="preserve">
          <source>The allocs profile is the same as the heap profile but changes the default pprof display to -alloc_space, the total number of bytes allocated since the program began (including garbage-collected bytes).</source>
          <target state="translated">Профиль сплавов такой же,как и профиль кучи,но меняет по умолчанию отображение pprof на -alloc_space,общее количество байт,выделенных с момента запуска программы (включая байты,собранные в мусоре).</target>
        </trans-unit>
        <trans-unit id="7b7e2adce610eba0eb46d47752259233e509b5f5" translate="yes" xml:space="preserve">
          <source>The append built-in function appends elements to the end of a slice. If it has sufficient capacity, the destination is resliced to accommodate the new elements. If it does not, a new underlying array will be allocated. Append returns the updated slice. It is therefore necessary to store the result of append, often in the variable holding the slice itself:</source>
          <target state="translated">Встроенная функция добавляет элементы в конец фрагмента.Если он имеет достаточную вместимость,место назначения перестраивается для размещения новых элементов.В противном случае будет выделен новый базовый массив.Приложение возвращает обновленный фрагмент.Поэтому необходимо хранить результат приложения,часто в переменной,удерживающей сам срез:</target>
        </trans-unit>
        <trans-unit id="319121c4cf28a1a73f5a5d055a29a23993940f46" translate="yes" xml:space="preserve">
          <source>The argument obj must be a pointer to an object allocated by calling new, by taking the address of a composite literal, or by taking the address of a local variable. The argument finalizer must be a function that takes a single argument to which obj's type can be assigned, and can have arbitrary ignored return values. If either of these is not true, SetFinalizer may abort the program.</source>
          <target state="translated">Объект-аргумент должен быть указателем на объект,выделенный путем вызова new,путем взятия адреса составного литерала или путем взятия адреса локальной переменной.Окончательным аргументом должна быть функция,которая принимает единственный аргумент,которому может быть присвоен тип объекта,и может иметь произвольно игнорируемые возвращаемые значения.Если одно из этих значений не верно,SetFinalizer может прервать работу программы.</target>
        </trans-unit>
        <trans-unit id="cd8b4269726f03ea74d83f3435788f2723fca1f6" translate="yes" xml:space="preserve">
          <source>The argument pos must have been returned by a call to Tell on this line table.</source>
          <target state="translated">Аргумент pos должен был быть возвращен вызовом Tell в этой таблице строк.</target>
        </trans-unit>
        <trans-unit id="b92996537add2723dc45807913fd63c71882192d" translate="yes" xml:space="preserve">
          <source>The argument to the -run and -bench command-line flags is an unanchored regular expression that matches the test's name. For tests with multiple slash-separated elements, such as subtests, the argument is itself slash-separated, with expressions matching each name element in turn. Because it is unanchored, an empty expression matches any string. For example, using &quot;matching&quot; to mean &quot;whose name contains&quot;:</source>
          <target state="translated">Аргументом к флагам командной строки -run и -bench является необработанное регулярное выражение,совпадающее с именем теста.Для тестов с множеством элементов,разделенных слэшем,таких как подтесты,аргумент сам по себе является слэш-разделенным,с выражениями,соответствующими каждому элементу имени по очереди.Поскольку он не имеет штриховки,пустое выражение соответствует любой строке.Например,использование &quot;matching&quot; означает &quot;чьё имя содержит&quot;:</target>
        </trans-unit>
        <trans-unit id="e79a98521fd13244e0b154d938bb00c75c9b0451" translate="yes" xml:space="preserve">
          <source>The base argument must be 0 or a value between 2 and MaxBase. For base 0, the number prefix determines the actual base: A prefix of &amp;ldquo;0b&amp;rdquo; or &amp;ldquo;0B&amp;rdquo; selects base 2, &amp;ldquo;0&amp;rdquo;, &amp;ldquo;0o&amp;rdquo; or &amp;ldquo;0O&amp;rdquo; selects base 8, and &amp;ldquo;0x&amp;rdquo; or &amp;ldquo;0X&amp;rdquo; selects base 16. Otherwise, the selected base is 10 and no prefix is accepted.</source>
          <target state="translated">Базовый аргумент должен быть 0 или значением от 2 до MaxBase. Для базы 0 префикс числа определяет фактическую базу: префикс &amp;laquo;0b&amp;raquo; или &amp;laquo;0B&amp;raquo; выбирает базу 2, &amp;laquo;0&amp;raquo;, &amp;laquo;0o&amp;raquo; или &amp;laquo;0O&amp;raquo; выбирает базу 8, а &amp;laquo;0x&amp;raquo; или &amp;laquo;0X&amp;raquo; выбирает база 16. В противном случае выбрана база 10 и префикс не принимается.</target>
        </trans-unit>
        <trans-unit id="1f5bc3650196f245f397cccfe0b715471a484024" translate="yes" xml:space="preserve">
          <source>The base argument must be 0, 2, 8, 10, or 16. Providing an invalid base argument will lead to a run-time panic.</source>
          <target state="translated">Базовый аргумент должен быть 0,2,8,10 или 16.Предоставление недействительного базового аргумента приведет к панике во время выполнения.</target>
        </trans-unit>
        <trans-unit id="999251e457607fde479613cc188e10bb8aa35ffc" translate="yes" xml:space="preserve">
          <source>The behavior of Close after the first call is undefined. Specific implementations may document their own behavior.</source>
          <target state="translated">Поведение Close после первого вызова не определено.Конкретные реализации могут документировать свое поведение.</target>
        </trans-unit>
        <trans-unit id="a5501fbd34c66d8be25df49275f9a5880a90030a" translate="yes" xml:space="preserve">
          <source>The benchmark function must run the target code b.N times. During benchmark execution, b.N is adjusted until the benchmark function lasts long enough to be timed reliably. The output</source>
          <target state="translated">Функция бенчмарка должна запускать целевой код b.N times.Во время выполнения бенчмарка b.N настраивается до тех пор,пока функция бенчмарка не проработает достаточно долго,чтобы можно было надежно установить время.Выход</target>
        </trans-unit>
        <trans-unit id="5d5239994cd75391745c3ffd216fe5a8cda11e2c" translate="yes" xml:space="preserve">
          <source>The bin/ directory holds compiled commands. Each command is named for its source directory, but only using the final element, not the entire path. That is, the command with source in DIR/src/foo/quux is installed into DIR/bin/quux, not DIR/bin/foo/quux. The foo/ is stripped so that you can add DIR/bin to your PATH to get at the installed commands.</source>
          <target state="translated">В каталоге bin/хранятся скомпилированные команды.Каждая команда называется для своей исходной директории,но использует только конечный элемент,а не весь путь.То есть команда с исходным текстом в DIR/src/foo/quux устанавливается в DIR/bin/quux,а не в DIR/bin/foo/quux.foo/убирается,чтобы вы могли добавить DIR/bin в PATH для получения установленных команд.</target>
        </trans-unit>
        <trans-unit id="5fb2943938d895315eb0861e562b65ec37e4257a" translate="yes" xml:space="preserve">
          <source>The bitSize argument specifies the integer type that the result must fit into. Bit sizes 0, 8, 16, 32, and 64 correspond to int, int8, int16, int32, and int64. If bitSize is below 0 or above 64, an error is returned.</source>
          <target state="translated">Аргумент bitSize задаёт целочисленный тип,в который должен вписываться результат.Размеры битов 0,8,16,32 и 64 соответствуют int,int8,int16,int32 и int64.Если битSize меньше 0 или больше 64,то возвращается ошибка.</target>
        </trans-unit>
        <trans-unit id="73a023e42c8f449dd9afceb038f53730f09d0f3a" translate="yes" xml:space="preserve">
          <source>The blocksize of MD5 in bytes.</source>
          <target state="translated">Блок-разряд MD5 в байтах.</target>
        </trans-unit>
        <trans-unit id="b15f9638286bf74ad9f05789a97346025af52de4" translate="yes" xml:space="preserve">
          <source>The blocksize of SHA-1 in bytes.</source>
          <target state="translated">Блокадный размер SHA-1 в байтах.</target>
        </trans-unit>
        <trans-unit id="a7b36663bea360572efce2e38cb3e1eb26ceecf3" translate="yes" xml:space="preserve">
          <source>The blocksize of SHA256 and SHA224 in bytes.</source>
          <target state="translated">Блокпост SHA256 и SHA224 в байтах.</target>
        </trans-unit>
        <trans-unit id="97aa274f72b6214d58f8cac268e6604a5f6faa7b" translate="yes" xml:space="preserve">
          <source>The body function will be run in each goroutine. It should set up any goroutine-local state and then iterate until pb.Next returns false. It should not use the StartTimer, StopTimer, or ResetTimer functions, because they have global effect. It should also not call Run.</source>
          <target state="translated">Функция тела будет выполняться в каждом горутине.Она должна установить любое goroutine-локальное состояние,а затем выполнить итерацию до тех пор,пока pb.Next не вернет false.Она не должна использовать функции StartTimer,StopTimer или ResetTimer,так как они имеют глобальный эффект.Он также не должен вызывать Run.</target>
        </trans-unit>
        <trans-unit id="af7dc8ebb6f00c62864546d31e047f12c2a2774d" translate="yes" xml:space="preserve">
          <source>The boolean functions take any zero value to be false and a non-zero value to be true.</source>
          <target state="translated">Булевы функции принимают любое нулевое значение за ложь,а ненулевое-за истину.</target>
        </trans-unit>
        <trans-unit id="0ca3ec8906bf9075e98bceae22793965b445ac42" translate="yes" xml:space="preserve">
          <source>The boundary is usually obtained from the &quot;boundary&quot; parameter of the message's &quot;Content-Type&quot; header. Use mime.ParseMediaType to parse such headers.</source>
          <target state="translated">Граница обычно получается из параметра &quot;граница&quot; заголовка &quot;Content-Type&quot; сообщения.Для разбора таких заголовков используйте mime.ParseMediaType.</target>
        </trans-unit>
        <trans-unit id="93f9cb3d63de38d1cca4d1f9efd9ca872f4716ce" translate="yes" xml:space="preserve">
          <source>The built-in table is small but on unix it is augmented by the local system's mime.types file(s) if available under one or more of these names:</source>
          <target state="translated">Встроенная таблица небольшая,но в unix она дополнена файлами mime.types локальной системы,если они доступны под одним или несколькими из этих имен:</target>
        </trans-unit>
        <trans-unit id="d093a31770ef0176a6cc811f5e90de0295df923b" translate="yes" xml:space="preserve">
          <source>The byte offsets for each file in a file set are mapped into distinct (integer) intervals, one interval [base, base+size] per file. Base represents the first byte in the file, and size is the corresponding file size. A Pos value is a value in such an interval. By determining the interval a Pos value belongs to, the file, its file base, and thus the byte offset (position) the Pos value is representing can be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3abe768a37a21ebff40b7c9151a7b3edc6c44e0" translate="yes" xml:space="preserve">
          <source>The calendrical calculations always assume a Gregorian calendar, with no leap seconds.</source>
          <target state="translated">Календарные вычисления всегда предполагают григорианский календарь,без високосных секунд.</target>
        </trans-unit>
        <trans-unit id="dd3a4f20159bb2231f4a88b4a45f4b772e80ba3c" translate="yes" xml:space="preserve">
          <source>The caller should call Close when finished, to shut it down.</source>
          <target state="translated">Звонящий должен позвонить в Close,когда закончит,чтобы выключить его.</target>
        </trans-unit>
        <trans-unit id="257fee20f0af9c58c89645e121bcb859cd7d2ba2" translate="yes" xml:space="preserve">
          <source>The cap built-in function returns the capacity of v, according to its type:</source>
          <target state="translated">Встроенная функция колпачка возвращает емкость v,в зависимости от типа:</target>
        </trans-unit>
        <trans-unit id="e553ed25dbd923acc16eb919df1e53d3eec5c8ba" translate="yes" xml:space="preserve">
          <source>The certificate is signed by parent. If parent is equal to template then the certificate is self-signed. The parameter pub is the public key of the signee and priv is the private key of the signer.</source>
          <target state="translated">Сертификат подписан родителем.Если родитель равен шаблону,то сертификат подписывается самостоятельно.Параметр pub является открытым ключом подписывающего лица,а private-закрытым ключом подписывающего лица.</target>
        </trans-unit>
        <trans-unit id="dc1a26e65aace69e5a0db7ec46a4e897871c5c8e" translate="yes" xml:space="preserve">
          <source>The chain consists of err itself followed by the sequence of errors obtained by repeatedly calling Unwrap.</source>
          <target state="translated">Цепь состоит из самой ошибки,за которой следует последовательность ошибок,полученная при многократном вызове Unwrap.</target>
        </trans-unit>
        <trans-unit id="784fcd80e08909ffdec4906c1c0dba2f7d623904" translate="yes" xml:space="preserve">
          <source>The client must close the response body when finished with it:</source>
          <target state="translated">По окончании работы клиент должен закрыть тело ответа:</target>
        </trans-unit>
        <trans-unit id="7b4dd52e8c63aa6987cf8c226672c7d4edb96f82" translate="yes" xml:space="preserve">
          <source>The close built-in function closes a channel, which must be either bidirectional or send-only. It should be executed only by the sender, never the receiver, and has the effect of shutting down the channel after the last sent value is received. After the last value has been received from a closed channel c, any receive from c will succeed without blocking, returning the zero value for the channel element. The form</source>
          <target state="translated">Встроенная функция закрытия закрывает канал,который должен быть либо двунаправленным,либо только сенсорным.Она должна выполняться только отправителем,а не получателем,и приводит к закрытию канала после получения последнего отправленного значения.После получения последнего значения из закрытого канала c,любой прием из канала c будет успешным без блокировки,возвращая нулевое значение для элемента канала.Форма</target>
        </trans-unit>
        <trans-unit id="0c580a2c87e0f2186896309d301dc63aad975a10" translate="yes" xml:space="preserve">
          <source>The command must have been started by Start.</source>
          <target state="translated">Команда должна была быть запущена Стартом.</target>
        </trans-unit>
        <trans-unit id="ef8e35ecfe346ef37bdb6a41007c64b491f6581e" translate="yes" xml:space="preserve">
          <source>The comment prefix &quot;Unordered output:&quot; is like &quot;Output:&quot;, but matches any line order:</source>
          <target state="translated">Префикс комментария &quot;Unordered output:&quot; похож на &quot;Output:&quot;,но соответствует любому порядку строк:</target>
        </trans-unit>
        <trans-unit id="af6f6bfe9472d6cd742ab07f4d13576c62ddc94c" translate="yes" xml:space="preserve">
          <source>The compare-and-swap operation, implemented by the CompareAndSwapT functions, is the atomic equivalent of:</source>
          <target state="translated">Операция сравнения и замены,реализованная функциями CompareAndSwapT,является атомным эквивалентом:</target>
        </trans-unit>
        <trans-unit id="043f79dd25246a384c5fa68242e8b0950e54d69e" translate="yes" xml:space="preserve">
          <source>The comparison functions work on any values whose type Go defines as comparable. For basic types such as integers, the rules are relaxed: size and exact type are ignored, so any integer value, signed or unsigned, may be compared with any other integer value. (The arithmetic value is compared, not the bit pattern, so all negative integers are less than all unsigned integers.) However, as usual, one may not compare an int with a float32 and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53528cbdfa92cb465406c07ac6068163f15d8aff" translate="yes" xml:space="preserve">
          <source>The comparison functions work on basic types only (or named basic types, such as &quot;type Celsius float32&quot;). They implement the Go rules for comparison of values, except that size and exact type are ignored, so any integer value, signed or unsigned, may be compared with any other integer value. (The arithmetic value is compared, not the bit pattern, so all negative integers are less than all unsigned integers.) However, as usual, one may not compare an int with a float32 and so on.</source>
          <target state="translated">Функции сравнения работают только с базовыми типами (или именованными базовыми типами,такими как &quot;тип Celsius float32&quot;).Они реализуют правила Go для сравнения значений,за исключением того,что размер и точный тип игнорируются,поэтому любое целое значение,знаковое или беззнаковое,может быть сравнено с любым другим целым значением.(Арифметическое значение сравнивается,а не битовый шаблон,поэтому все отрицательные целые числа меньше всех беззнаковых целых чисел).Однако,как обычно,нельзя сравнивать int с float32 и так далее.</target>
        </trans-unit>
        <trans-unit id="3947ad8b82d2733c9797fbc944569005335da23c" translate="yes" xml:space="preserve">
          <source>The compiler handles a Pointer converted to a uintptr in the argument list of a call to a function implemented in assembly by arranging that the referenced allocated object, if any, is retained and not moved until the call completes, even though from the types alone it would appear that the object is no longer needed during the call.</source>
          <target state="translated">Компилятор обрабатывает указатель,преобразованный в uintptr в списке аргументов вызова функции,реализованной при сборке,упорядочивая,что ссылающийся выделенный объект,если таковой имеется,сохраняется и не перемещается до завершения вызова,хотя из одних только типов может показаться,что этот объект больше не нужен во время вызова.</target>
        </trans-unit>
        <trans-unit id="fbe6ac33b06dc273e75926ad2490d8b3832a0214" translate="yes" xml:space="preserve">
          <source>The complex built-in function constructs a complex value from two floating-point values. The real and imaginary parts must be of the same size, either float32 or float64 (or assignable to them), and the return value will be the corresponding complex type (complex64 for float32, complex128 for float64).</source>
          <target state="translated">Встроенная комплексная функция строит комплексное значение из двух значений с плавающей точкой.Реальная и мнимая части должны быть одинакового размера,либо float32,либо float64 (или присваиваемые им),а возвращаемое значение будет соответствующего типа комплекса (complex64 для float32,complex128 для float64).</target>
        </trans-unit>
        <trans-unit id="ef38d7c2bab871a13bc3d0543cc12b1189486358" translate="yes" xml:space="preserve">
          <source>The compression level can be DefaultCompression, NoCompression, HuffmanOnly or any integer value between BestSpeed and BestCompression inclusive. The error returned will be nil if the level is valid.</source>
          <target state="translated">Степень сжатия может быть DefaultCompression,NoCompression,HuffmanOnly или любое целое значение между BestSpeed и BestCompression включительно.Возвращаемая ошибка будет равна нулю,если уровень является допустимым.</target>
        </trans-unit>
        <trans-unit id="351f67248e4d8a5518193363a02cfe1c83014012" translate="yes" xml:space="preserve">
          <source>The constant UpperLower has an otherwise impossible delta value.</source>
          <target state="translated">Константа Верхний Нижний имеет иначе невозможное значение дельты.</target>
        </trans-unit>
        <trans-unit id="8c8706295858fb442cc0b27075b7f68668230e3c" translate="yes" xml:space="preserve">
          <source>The content's Seek method must work: ServeContent uses a seek to the end of the content to determine its size.</source>
          <target state="translated">Метод поиска контента должен работать:ServeContent использует поиск до конца контента,чтобы определить его размер.</target>
        </trans-unit>
        <trans-unit id="7a49805d773fd718112af263e9a481b6533ee15e" translate="yes" xml:space="preserve">
          <source>The context function will be called with a single argument, a pointer to a struct:</source>
          <target state="translated">Контекстная функция будет вызвана с единственным аргументом,указателем на структуру:</target>
        </trans-unit>
        <trans-unit id="d756f1871d5d4f318cef847f3f882a9119bd1f8d" translate="yes" xml:space="preserve">
          <source>The conversion rules are:</source>
          <target state="translated">Правила преобразования таковы:</target>
        </trans-unit>
        <trans-unit id="8b9249f4b562855e188c8c6e04ee31f39d350295" translate="yes" xml:space="preserve">
          <source>The copy built-in function copies elements from a source slice into a destination slice. (As a special case, it also will copy bytes from a string to a slice of bytes.) The source and destination may overlap. Copy returns the number of elements copied, which will be the minimum of len(src) and len(dst).</source>
          <target state="translated">Встроенная функция копирования копирует элементы из исходного фрагмента в целевой фрагмент.(В особом случае она также будет копировать байты из строки в дольку байтов).Исходный и целевой фрагменты могут пересекаться.Копирование возвращает количество скопированных элементов,которое будет минимальным для len(src)и len(dst).</target>
        </trans-unit>
        <trans-unit id="7003f654a24cc0fe7e8417bb3241f59de9fe836b" translate="yes" xml:space="preserve">
          <source>The count determines the number of substrings to return:</source>
          <target state="translated">Счетчик определяет количество возвращаемых подстроек:</target>
        </trans-unit>
        <trans-unit id="5dbb8e654b6fb0895661f0c315a08864e55ec239" translate="yes" xml:space="preserve">
          <source>The crypto/tls package only implements some countermeasures against Lucky13 attacks on CBC-mode encryption, and only on SHA1 variants. See &lt;a href=&quot;http://www.isg.rhul.ac.uk/tls/TLStiming.pdf&quot;&gt;http://www.isg.rhul.ac.uk/tls/TLStiming.pdf&lt;/a&gt; and &lt;a href=&quot;https://www.imperialviolet.org/2013/02/04/luckythirteen.html&quot;&gt;https://www.imperialviolet.org/2013/02/04/luckythirteen.html&lt;/a&gt;.</source>
          <target state="translated">Пакет crypto / tls реализует только некоторые меры противодействия атакам Lucky13 на шифрование в режиме CBC и только на варианты SHA1. См. &lt;a href=&quot;http://www.isg.rhul.ac.uk/tls/TLStiming.pdf&quot;&gt;Http://www.isg.rhul.ac.uk/tls/TLStiming.pdf&lt;/a&gt; и &lt;a href=&quot;https://www.imperialviolet.org/2013/02/04/luckythirteen.html&quot;&gt;https://www.imperialviolet.org/2013/02/04/luckythirteen.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3df95d2be07bff158f354793704b39fa0b17441d" translate="yes" xml:space="preserve">
          <source>The cryptographic operations are implemented using constant-time algorithms.</source>
          <target state="translated">Криптографические операции реализованы с использованием алгоритмов постоянного времени.</target>
        </trans-unit>
        <trans-unit id="7eab6b01982b7d5d0967ad563265ae830b1ba245" translate="yes" xml:space="preserve">
          <source>The cryptographic operations do not use constant-time algorithms.</source>
          <target state="translated">В криптографических операциях не используются алгоритмы константного времени.</target>
        </trans-unit>
        <trans-unit id="27e1f3bd597aed109fd98be320131ab37e282b69" translate="yes" xml:space="preserve">
          <source>The currently supported key types are *rsa.PublicKey, *ecdsa.PublicKey and ed25519.PublicKey. pub must be a supported key type, and priv must be a crypto.Signer with a supported public key.</source>
          <target state="translated">В настоящее время поддерживаются следующие типы ключей:*rsa.PublicKey,*ecdsa.PublicKey и ed25519.PublicKey.pub должен быть поддерживаемым типом ключа,а priv должен быть крипто.Signer с поддерживаемым публичным ключом.</target>
        </trans-unit>
        <trans-unit id="7a6143ad908fa5d13101f2932405343a9fc3dd21" translate="yes" xml:space="preserve">
          <source>The debug parameter enables additional output. Passing debug=0 prints only the hexadecimal addresses that pprof needs. Passing debug=1 adds comments translating addresses to function names and line numbers, so that a programmer can read the profile without tools.</source>
          <target state="translated">Параметр отладки включает дополнительный вывод.Передача debug=0 печатает только те шестнадцатеричные адреса,которые нужны pprof.При передаче debug=1 добавляются комментарии,транслирующие адреса в имена функций и номера строк,чтобы программист мог читать профиль без инструментов.</target>
        </trans-unit>
        <trans-unit id="0fb33327b278ec03a78f307167cc6e36a7617010" translate="yes" xml:space="preserve">
          <source>The debug parameter enables additional output. Passing debug=0 writes the gzip-compressed protocol buffer described in &lt;a href=&quot;https://github.com/google/pprof/tree/master/proto#overview&quot;&gt;https://github.com/google/pprof/tree/master/proto#overview&lt;/a&gt;. Passing debug=1 writes the legacy text format with comments translating addresses to function names and line numbers, so that a programmer can read the profile without tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfadeab38a63378303009891c62ea08d3a9f648" translate="yes" xml:space="preserve">
          <source>The decision can also be forced while building the Go source tree by setting the netgo or netcgo build tag.</source>
          <target state="translated">Решение также может быть принудительно принято при построении дерева исходников Go,установив тег сборки netgo или netcgo.</target>
        </trans-unit>
        <trans-unit id="e55a5ed5aee48109c8f556983bc2b6ba47049c1e" translate="yes" xml:space="preserve">
          <source>The decoded form returned by the Reader's Read method rewrites the &quot;\r\n&quot; line endings into the simpler &quot;\n&quot;, removes leading dot escapes if present, and stops with error io.EOF after consuming (and discarding) the end-of-sequence line.</source>
          <target state="translated">Декодированная форма,возвращаемая методом Reader's Read,переписывает окончания строки &quot;\r\n&quot; в более простую &quot;\n&quot;,удаляет ведущие точечные эскалапы,если они присутствуют,и останавливается с ошибкой io.EOF после потребления (и отбрасывания)строки конца последовательности.</target>
        </trans-unit>
        <trans-unit id="ade9eaf300f62ddbbf2f36e130c2f06e8467d26d" translate="yes" xml:space="preserve">
          <source>The decoder introduces its own buffering and may read data from r beyond the JSON values requested.</source>
          <target state="translated">Декодер вводит собственную буферизацию и может считывать данные с r сверх запрошенных JSON-значений.</target>
        </trans-unit>
        <trans-unit id="500a9025cc154f7f8f86d7b577b23c5a4330caf0" translate="yes" xml:space="preserve">
          <source>The default HTTP/1.x and HTTP/2 ResponseWriter implementations support Flusher, but ResponseWriter wrappers may not. Handlers should always test for this ability at runtime.</source>
          <target state="translated">Реализации ResponseWriter по умолчанию HTTP/1.x и HTTP/2 поддерживают Flusher,но обёртки ResponseWriter могут и не поддерживаться.Обработчики всегда должны проверять эту возможность во время выполнения.</target>
        </trans-unit>
        <trans-unit id="dbfff1190b706ff9c82ad5d939db53ac5e19b8d5" translate="yes" xml:space="preserve">
          <source>The default ResponseWriter for HTTP/1.x connections supports Hijacker, but HTTP/2 connections intentionally do not. ResponseWriter wrappers may also not support Hijacker. Handlers should always test for this ability at runtime.</source>
          <target state="translated">По умолчанию ResponseWriter для соединений HTTP/1.x поддерживает Hijacker,но соединения HTTP/2 намеренно не поддерживают.Обертки ResponseWriter также могут не поддерживать Hijacker.Обработчики всегда должны проверять эту возможность во время выполнения.</target>
        </trans-unit>
        <trans-unit id="29a4bf6e98ccc92440a0810fcad76a8019aec7ff" translate="yes" xml:space="preserve">
          <source>The default behavior is to unlink the socket file only when package net created it. That is, when the listener and the underlying socket file were created by a call to Listen or ListenUnix, then by default closing the listener will remove the socket file. but if the listener was created by a call to FileListener to use an already existing socket file, then by default closing the listener will not remove the socket file.</source>
          <target state="translated">Поведение по умолчанию-развязывать файл сокета только тогда,когда пакетная сеть создала его.То есть,когда слушатель и лежащий в его основе файл сокета были созданы вызовом Listen или ListenUnix,то по умолчанию закрытие слушателя удалит файл сокета.но если слушатель был создан вызовом FileListener для использования уже существующего файла сокета,то по умолчанию закрытие слушателя не удалит файл сокета.</target>
        </trans-unit>
        <trans-unit id="f3bd4ca778e016b570e20fa99bcd057793129198" translate="yes" xml:space="preserve">
          <source>The default format for %v is:</source>
          <target state="translated">Формат по умолчанию для %v:</target>
        </trans-unit>
        <trans-unit id="e5fbfa4bdd17cdbfb6f18b5cea533902d960ee26" translate="yes" xml:space="preserve">
          <source>The default max idle connections is currently 2. This may change in a future release.</source>
          <target state="translated">По умолчанию максимальное количество незадействованных соединений в настоящее время равно 2.Это может измениться в будущем релизе.</target>
        </trans-unit>
        <trans-unit id="385f08ab994be40fdde70d56e38ccb63bb65d078" translate="yes" xml:space="preserve">
          <source>The default set of command-line flags is controlled by top-level functions. The FlagSet type allows one to define independent sets of flags, such as to implement subcommands in a command-line interface. The methods of FlagSet are analogous to the top-level functions for the command-line flag set.</source>
          <target state="translated">Набор флагов командной строки по умолчанию управляется функциями верхнего уровня.Тип FlagSet позволяет определять независимые наборы флагов,например,для реализации подкоманд в интерфейсе командной строки.Методы FlagSet аналогичны функциям верхнего уровня для набора флагов командной строки.</target>
        </trans-unit>
        <trans-unit id="a05d93e44d2bb1f3518c258e77ecac2e52df5b7c" translate="yes" xml:space="preserve">
          <source>The define action names the template being created by providing a string constant. Here is a simple example:</source>
          <target state="translated">Определите имена действий создаваемого шаблона,предоставив строковую константу.Вот простой пример:</target>
        </trans-unit>
        <trans-unit id="1752a2a854e41ac9841751567fab2d2b00d5fd9e" translate="yes" xml:space="preserve">
          <source>The defined file mode bits are the most significant bits of the FileMode. The nine least-significant bits are the standard Unix rwxrwxrwx permissions. The values of these bits should be considered part of the public API and may be used in wire protocols or disk representations: they must not be changed, although new bits might be added.</source>
          <target state="translated">Определенные биты файлового режима являются наиболее значимыми битами FileMode.Девять наименее значимых битов-это стандартные разрешения Unix rwxrwxrwx.Значения этих битов должны рассматриваться как часть публичного API и могут использоваться в протоколах проводов или представлениях диска:их нельзя изменять,хотя могут добавляться новые биты.</target>
        </trans-unit>
        <trans-unit id="5cff7ee8fa31e3f6a6739a2dee232b717a523c6f" translate="yes" xml:space="preserve">
          <source>The delete built-in function deletes the element with the specified key (m[key]) from the map. If m is nil or there is no such element, delete is a no-op.</source>
          <target state="translated">Встроенная функция delete удаляет элемент с указанным ключом (m[key])с карты.Если m равен нулю или такого элемента нет,то delete-нет.</target>
        </trans-unit>
        <trans-unit id="7be6f8c0500d37b62c7237cb3172e8612a1be7ae" translate="yes" xml:space="preserve">
          <source>The dictionary may be nil. If not, its contents should not be modified until the Writer is closed.</source>
          <target state="translated">Словарь может быть нулевым.В противном случае его содержимое не следует изменять до тех пор,пока не будет закрыт словарь.</target>
        </trans-unit>
        <trans-unit id="bc9a068b7cdbaff9efc9114bb2316dc6eaf9165d" translate="yes" xml:space="preserve">
          <source>The direction of a channel is indicated by one of these constants.</source>
          <target state="translated">Направление канала обозначается одной из этих констант.</target>
        </trans-unit>
        <trans-unit id="46b217ce09d8bd67e6158257fb40490e88a671dd" translate="yes" xml:space="preserve">
          <source>The direction of a channel type is indicated by a bit mask including one or both of the following constants.</source>
          <target state="translated">Направление типа канала обозначается битовой маской,включающей одну или обе следующие константы.</target>
        </trans-unit>
        <trans-unit id="7dfb11306d6f3241074422bcaa067904172344cc" translate="yes" xml:space="preserve">
          <source>The directory is neither guaranteed to exist nor have accessible permissions.</source>
          <target state="translated">Не гарантируется ни существование,ни наличие прав доступа к каталогу.</target>
        </trans-unit>
        <trans-unit id="565d684eeda7e9edb8f7bb0c103897df1854d973" translate="yes" xml:space="preserve">
          <source>The documentation for http.Request.Write details which fields of req are included in the dump.</source>
          <target state="translated">Документация для http.Request.Write details,какие поля req включены в дамп.</target>
        </trans-unit>
        <trans-unit id="07211f6185f4e6de4337f341c2cdb69d4cc499c7" translate="yes" xml:space="preserve">
          <source>The documentation here focuses on the security features of the package. For information about how to program the templates themselves, see the documentation for text/template.</source>
          <target state="translated">Документация здесь сфокусирована на функциях безопасности пакета.Информацию о том,как запрограммировать сами шаблоны,смотрите в документации к тексту/шаблону.</target>
        </trans-unit>
        <trans-unit id="155a6f0a50ad424a0f77dec85fedb05aad3e6814" translate="yes" xml:space="preserve">
          <source>The driver interface has evolved over time. Drivers should implement Connector and DriverContext interfaces. The Connector.Connect and Driver.Open methods should never return ErrBadConn. ErrBadConn should only be returned from Validator, SessionResetter, or a query method if the connection is already in an invalid (e.g. closed) state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d608ae58f506a273826ac24fbe8a6e832c7cfa18" translate="yes" xml:space="preserve">
          <source>The earlier index entries are the indices of the embedded fields implicitly traversed to get from (the type of) x to f, starting at embedding depth 0.</source>
          <target state="translated">Ранние записи индекса-это индексы вложенных полей,неявно пройденных для получения от (типа)x до f,начиная с глубины вложения 0.</target>
        </trans-unit>
        <trans-unit id="9969cd1fd12276c81b2d25b52e841cee1f38a6af" translate="yes" xml:space="preserve">
          <source>The earlier index entries are the indices of the embedded struct fields traversed to get to the found entry, starting at depth 0.</source>
          <target state="translated">Ранние записи индекса-это индексы вложенных полей структуры,пройденные для того,чтобы добраться до найденной записи,начиная с глубины 0.</target>
        </trans-unit>
        <trans-unit id="55f7215f8e7a1256ecd44a2e72424fdc36866f77" translate="yes" xml:space="preserve">
          <source>The encoded form is:</source>
          <target state="translated">Кодированная форма:</target>
        </trans-unit>
        <trans-unit id="58738aa6dbb46f39a2d83f07741091a7022a1024" translate="yes" xml:space="preserve">
          <source>The encoding handles 4-byte chunks, using a special encoding for the last fragment, so Encode is not appropriate for use on individual blocks of a large data stream. Use NewEncoder() instead.</source>
          <target state="translated">Кодировка обрабатывает 4-байтовые фрагменты,используя специальную кодировку для последнего фрагмента,поэтому кодировка не подходит для использования на отдельных блоках большого потока данных.Вместо этого используйте NewEncoder().</target>
        </trans-unit>
        <trans-unit id="352cf3ce7f63c6b9e4ef698575b243f2f7eab5f4" translate="yes" xml:space="preserve">
          <source>The encoding of each struct field can be customized by the format string stored under the &quot;json&quot; key in the struct field's tag. The format string gives the name of the field, possibly followed by a comma-separated list of options. The name may be empty in order to specify options without overriding the default field name.</source>
          <target state="translated">Кодировку каждого поля структуры можно настроить по строке формата,хранящейся под ключом &quot;json&quot; в теге поля структуры.Строка форматирования дает имя поля,за которым,возможно,следует разделенный запятыми список опций.Имя может быть пустым,чтобы указать опции без переопределения имени поля по умолчанию.</target>
        </trans-unit>
        <trans-unit id="17b6791f4c87db95fbf5fcc1580f710e0b98bcc7" translate="yes" xml:space="preserve">
          <source>The encoding pads the output to a multiple of 4 bytes, so Encode is not appropriate for use on individual blocks of a large data stream. Use NewEncoder() instead.</source>
          <target state="translated">Кодировочные колодки выводят в несколько 4 байт,поэтому кодировка не подходит для использования на отдельных блоках большого потока данных.Вместо этого используйте NewEncoder().</target>
        </trans-unit>
        <trans-unit id="f9b92d6b313993a8570c418851ae0a82ee1d08b2" translate="yes" xml:space="preserve">
          <source>The encoding pads the output to a multiple of 8 bytes, so Encode is not appropriate for use on individual blocks of a large data stream. Use NewEncoder() instead.</source>
          <target state="translated">Кодировочные колодки выводят в несколько 8 байт,поэтому кодировка не подходит для использования на отдельных блоках большого потока данных.Вместо этого используйте NewEncoder().</target>
        </trans-unit>
        <trans-unit id="f21e6b7ab20b84c2608ae859489552989b9c9ded" translate="yes" xml:space="preserve">
          <source>The entire test file is presented as the example when it contains a single example function, at least one other function, type, variable, or constant declaration, and no test or benchmark functions.</source>
          <target state="translated">Весь тестовый файл представляется в качестве примера,когда он содержит единственную функцию примера,по крайней мере,одну другую функцию,тип,переменную или константное объявление,и никаких тестовых или эталонных функций.</target>
        </trans-unit>
        <trans-unit id="8a5b41cf040dd894c5f5818385e864bb8f5f4256" translate="yes" xml:space="preserve">
          <source>The environment values may be either a complete URL or a &quot;host[:port]&quot;, in which case the &quot;http&quot; scheme is assumed. An error is returned if the value is a different form.</source>
          <target state="translated">Значения окружения могут быть как полным URL,так и &quot;host[:port]&quot;,в этом случае предполагается схема &quot;http&quot;.Возвращается ошибка,если значение имеет другую форму.</target>
        </trans-unit>
        <trans-unit id="63d88a909a5214b04c717d2600360e2bf8c34633" translate="yes" xml:space="preserve">
          <source>The error built-in interface type is the conventional interface for representing an error condition, with the nil value representing no error.</source>
          <target state="translated">Тип встроенного интерфейса &quot;Ошибка&quot; является обычным интерфейсом для представления состояния ошибки,при этом нулевое значение не означает отсутствие ошибки.</target>
        </trans-unit>
        <trans-unit id="057113f0f11fb7ab423f9c5529d153f0951fafc6" translate="yes" xml:space="preserve">
          <source>The error is EOF only if no bytes were read. If an EOF happens after reading some but not all the bytes, Read returns ErrUnexpectedEOF.</source>
          <target state="translated">Ошибка EOF только в том случае,если не было прочитано ни одного байта.Если EOF происходит после считывания нескольких,но не всех байтов,Read возвращает ErrUnexpectedEOF.</target>
        </trans-unit>
        <trans-unit id="53b8936240ed1387970343e072546b9e5c4ce38c" translate="yes" xml:space="preserve">
          <source>The errors that ParseComplex returns have concrete type *NumError and include err.Num = s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19a9195a1344f79f24fd7f396a97d73332aa946" translate="yes" xml:space="preserve">
          <source>The errors that ParseFloat returns have concrete type *NumError and include err.Num = s.</source>
          <target state="translated">Ошибки,которые возвращает ParseFloat,имеют конкретный тип *NumError и включают в себя err.Num=s.</target>
        </trans-unit>
        <trans-unit id="235cee0ee469905c73061c3ebbf12b0afd87e749" translate="yes" xml:space="preserve">
          <source>The errors that ParseInt returns have concrete type *NumError and include err.Num = s. If s is empty or contains invalid digits, err.Err = ErrSyntax and the returned value is 0; if the value corresponding to s cannot be represented by a signed integer of the given size, err.Err = ErrRange and the returned value is the maximum magnitude integer of the appropriate bitSize and sign.</source>
          <target state="translated">Ошибки,которые ParseInt возвращает,имеют конкретный тип *NumError и включают в себя err.Num=s.Если s пустая или содержит недопустимые цифры,err.Err=ErrSyntax и возвращаемое значение равно 0;если значение,соответствующее s,не может быть представлено знаковым целым числом заданного размера,err.Err=ErrRange и возвращаемое значение является максимальным амплитудным целым числом соответствующего bitSize и знака.</target>
        </trans-unit>
        <trans-unit id="1079b4c215daaeaddfd42a5c24ae40421a24ca31" translate="yes" xml:space="preserve">
          <source>The exact method of division of a binary into separate Objs is an internal detail of the symbol table format.</source>
          <target state="translated">Точным методом разделения двоичного файла на отдельные объекты является внутренняя детализация формата таблицы символов.</target>
        </trans-unit>
        <trans-unit id="704442846624164254cefb0621f909b9f8e7b255" translate="yes" xml:space="preserve">
          <source>The executable example for Time.Format demonstrates the working of the layout string in detail and is a good reference.</source>
          <target state="translated">Исполняемый пример для Time.Format подробно демонстрирует работу строки макета и является хорошей ссылкой.</target>
        </trans-unit>
        <trans-unit id="d1e6774ae13e892b5b495469c8177e657ea29b91" translate="yes" xml:space="preserve">
          <source>The execution trace captures a wide range of execution events such as goroutine creation/blocking/unblocking, syscall enter/exit/block, GC-related events, changes of heap size, processor start/stop, etc. A precise nanosecond-precision timestamp and a stack trace is captured for most events. The generated trace can be interpreted using `go tool trace`.</source>
          <target state="translated">Трасса выполнения фиксирует широкий диапазон событий выполнения,таких как создание/блокировка/разблокировка горутина,системный вход/выход/блок,события,связанные с ГХ,изменение размера кучи,запуск/остановка процессора и т.д.Для большинства событий фиксируются точные временные метки с наносекундной точностью и трасса стека.Сгенерированная трасса может быть интерпретирована с помощью `последней трассы инструмента`.</target>
        </trans-unit>
        <trans-unit id="0bb8da556b82de3d2273cd84d139d0610336a88a" translate="yes" xml:space="preserve">
          <source>The familiar base-setting prefixes 0b (binary), 0o and 0 (octal), and 0x (hexadecimal) are accepted when scanning integers without a format or with the %v verb, as are digit-separating underscores.</source>
          <target state="translated">При сканировании целых чисел без формата или с глаголом %v принимаются знакомые префиксы 0b (двоичный),0o и 0 (восьмеричный)и 0x (шестнадцатеричный),а также подчеркивания,разделенные цифрами.</target>
        </trans-unit>
        <trans-unit id="f9ffee1670410a5e7cd11d5f1bee248ae5a136bc" translate="yes" xml:space="preserve">
          <source>The field semantics differ slightly between client and server usage. In addition to the notes on the fields below, see the documentation for Request.Write and RoundTripper.</source>
          <target state="translated">Семантика поля немного отличается в зависимости от использования клиента и сервера.В дополнение к примечаниям по полям ниже,смотрите документацию к Request.Write и RoundTripper.</target>
        </trans-unit>
        <trans-unit id="055e51145f588ea85435a4c1863b09a1b1141496" translate="yes" xml:space="preserve">
          <source>The file name table of a compilation unit is not fixed. Files returns the file table as of the current position in the line table. This may contain more entries than the file table at an earlier position in the line table, though existing entries never change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc18f2dd0c8c98e57212ed20f1a2ef2dc2747c6d" translate="yes" xml:space="preserve">
          <source>The file's data can then be read into a slice of bytes. Read and Write take their byte counts from the length of the argument slice.</source>
          <target state="translated">Данные файла затем могут быть прочитаны в кусок байта.При чтении и записи байты берутся из длины ломтика аргумента.</target>
        </trans-unit>
        <trans-unit id="bf3df07f08dd9391973ec022887d04b86f02f1b9" translate="yes" xml:space="preserve">
          <source>The filepath package uses either forward slashes or backslashes, depending on the operating system. To process paths such as URLs that always use forward slashes regardless of the operating system, see the path package.</source>
          <target state="translated">Пакет filepath использует либо прямые косая черта,либо обратные косые черты,в зависимости от операционной системы.Для обработки таких путей,как URL,которые всегда используют прямые косые черты независимо от операционной системы,см.пакет path.</target>
        </trans-unit>
        <trans-unit id="e2a5de21556a23ce2ab6268f51afe1d5e198e5ff" translate="yes" xml:space="preserve">
          <source>The finalizer is scheduled to run at some arbitrary time after the program can no longer reach the object to which obj points. There is no guarantee that finalizers will run before a program exits, so typically they are useful only for releasing non-memory resources associated with an object during a long-running program. For example, an os.File object could use a finalizer to close the associated operating system file descriptor when a program discards an os.File without calling Close, but it would be a mistake to depend on a finalizer to flush an in-memory I/O buffer such as a bufio.Writer, because the buffer would not be flushed at program exit.</source>
          <target state="translated">Финализатор планируется запустить в произвольное время после того,как программа уже не сможет добраться до объекта,на который указывает объект.Нет гарантии,что финализаторы будут запущены до выхода программы,поэтому обычно они полезны только для освобождения непамятных ресурсов,связанных с объектом,во время длительной работы программы.Например,объект os.File может использовать финализатор для закрытия файлового дескриптора,связанного с операционной системой,когда программа отбрасывает os.File без вызова Close,но было бы ошибкой полагаться на финализатор для промывки буфера ввода/вывода в памяти,такого как bufio.Writer,потому что буфер не будет смыт при выходе программы.</target>
        </trans-unit>
        <trans-unit id="b1e301ef4e8e6bbc26fb8b640366f5d912e010bd" translate="yes" xml:space="preserve">
          <source>The first call to ReadContinuedLine will return &quot;Line 1 continued...&quot; and the second will return &quot;Line 2&quot;.</source>
          <target state="translated">Первый звонок на ReadContinuedLine вернет &quot;Линия 1 продолжена...&quot;,а второй-&quot;Линия 2&quot;.</target>
        </trans-unit>
        <trans-unit id="aa248e4cf567dddf42fcb3d7320a5fbdd025b032" translate="yes" xml:space="preserve">
          <source>The first call will cache the current user information. Subsequent calls will return the cached value and will not reflect changes to the current user.</source>
          <target state="translated">Первый звонок будет кэшировать текущую информацию о пользователе.Последующие вызовы будут возвращать значение кэширования и не будут отражать изменения текущего пользователя.</target>
        </trans-unit>
        <trans-unit id="da786a1e6a510514415594e5971ba9d3b0ef0c66" translate="yes" xml:space="preserve">
          <source>The first key will be used when creating new tickets, while all keys can be used for decrypting tickets. It is safe to call this function while the server is running in order to rotate the session ticket keys. The function will panic if keys is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bea105d5515e425130c674b9a6d60024d04428" translate="yes" xml:space="preserve">
          <source>The first step to profiling a Go program is to enable profiling. Support for profiling benchmarks built with the standard testing package is built into go test. For example, the following command runs benchmarks in the current directory and writes the CPU and memory profiles to cpu.prof and mem.prof:</source>
          <target state="translated">Первым шагом к профилированию программы Go является включение профилирования.Поддержка профилирования бенчмарков,встроенная в стандартный пакет тестирования,встроена в go test.Например,следующая команда запускает бенчмарки в текущем каталоге и записывает профили процессора и памяти в cpu.prof и mem.prof:</target>
        </trans-unit>
        <trans-unit id="436dd80ca68673a729fce026c246571c6f61d421" translate="yes" xml:space="preserve">
          <source>The first time the function is called for a particular traceback, all the fields except PC will be 0. The function should fill in the other fields if possible, setting them to 0/nil if the information is not available. The Data field may be used to store any useful information across calls. The More field should be set to non-zero if there is more information for this PC, zero otherwise. If More is set non-zero, the function will be called again with the same PC, and may return different information (this is intended for use with inlined functions). If More is zero, the function will be called with the next PC value in the traceback. When the traceback is complete, the function will be called once more with PC set to zero; this may be used to free any information. Each call will leave the fields of the struct set to the same values they had upon return, except for the PC field when the More field is zero. The function must not keep a copy of the struct pointer between calls.</source>
          <target state="translated">При первом вызове функции для конкретной трассы все поля,кроме ПК,будут равны 0.Функция должна заполнить остальные поля,если это возможно,установив их в 0/ноль,если информация недоступна.Поле Данные может использоваться для хранения любой полезной информации во время вызова.Поле &quot;Больше&quot; должно быть установлено в ненулевое значение,если для данного ПК больше информации,в противном случае-в нулевое.Если поле &quot;Больше&quot; установлено ненулевым значением,то функция будет вызываться снова с того же самого ПК и может возвращать различную информацию (это поле предназначено для использования с инкрементными функциями).Если значение &quot;Больше&quot; равно нулю,функция будет вызвана со следующим значением ПК в трассировке.После завершения обратной связи,функция будет вызвана еще раз с установкой ПК на ноль;это может быть использовано для освобождения любой информации.При каждом вызове будут сохраняться те же значения,что и при возврате,за исключением поля ПК,когда поле More равно нулю.Функция не должна хранить копию указателя структуры между вызовами.</target>
        </trans-unit>
        <trans-unit id="1c12332b1a7f816e653faac5972323a1a86f4075" translate="yes" xml:space="preserve">
          <source>The fmt package's Errorf function lets us use the package's formatting features to create descriptive error messages.</source>
          <target state="translated">Функция Errorf пакета fmt позволяет нам использовать возможности форматирования пакета для создания описательных сообщений об ошибках.</target>
        </trans-unit>
        <trans-unit id="daed29ba07a438b86a35f4ffceadf0ee0b2962c4" translate="yes" xml:space="preserve">
          <source>The following environment variables ($name or %name%, depending on the host operating system) control the run-time behavior of Go programs. The meanings and use may change from release to release.</source>
          <target state="translated">Следующие переменные окружения ($name или %name%,в зависимости от операционной системы хоста)контролируют поведение программ Go во время выполнения.Значения и использование могут меняться от релиза к релизам.</target>
        </trans-unit>
        <trans-unit id="d76a76a5baf9188ebac1a65a2793d054e97d3403" translate="yes" xml:space="preserve">
          <source>The following example shows how to maintain a scalable frequently read, but infrequently updated data structure using copy-on-write idiom.</source>
          <target state="translated">Следующий пример показывает,как поддерживать масштабируемую,часто читаемую,но редко обновляемую структуру данных,используя идиому копирования на запись.</target>
        </trans-unit>
        <trans-unit id="3f0a6fe70878d3ed973c5f4c4f9e11a4b37e3d2a" translate="yes" xml:space="preserve">
          <source>The following example shows how to use Value for periodic program config updates and propagation of the changes to worker goroutines.</source>
          <target state="translated">Следующий пример показывает,как использовать Value для периодического обновления настроек программы и распространения изменений на рабочие горутины.</target>
        </trans-unit>
        <trans-unit id="2cccb14470014df050daea92c16a16fd189e8367" translate="yes" xml:space="preserve">
          <source>The following forms are permitted:</source>
          <target state="translated">Разрешены следующие формы:</target>
        </trans-unit>
        <trans-unit id="f535af253987553534ec7b604b13bea0bafaf89a" translate="yes" xml:space="preserve">
          <source>The following key types are currently supported: *rsa.PrivateKey, *ecdsa.PrivateKey and ed25519.PrivateKey. Unsupported key types result in an error.</source>
          <target state="translated">В настоящее время поддерживаются следующие типы ключей:*rsa.PrivateKey,*ecdsa.PrivateKey и ed25519.PrivateKey.Неподдерживаемые типы ключей приводят к ошибке.</target>
        </trans-unit>
        <trans-unit id="db7a430d5590cf9adf90b727249460131ab84e28" translate="yes" xml:space="preserve">
          <source>The following key types are currently supported: *rsa.PublicKey, *ecdsa.PublicKey and ed25519.PublicKey. Unsupported key types result in an error.</source>
          <target state="translated">В настоящее время поддерживаются следующие типы ключей:*rsa.PublicKey,*ecdsa.PublicKey и ed25519.PublicKey.Неподдерживаемые типы ключей приводят к ошибке.</target>
        </trans-unit>
        <trans-unit id="575dc13df3822635a20233f0d934b2828c4cbcc1" translate="yes" xml:space="preserve">
          <source>The following patterns involving Pointer are valid. Code not using these patterns is likely to be invalid today or to become invalid in the future. Even the valid patterns below come with important caveats.</source>
          <target state="translated">Следующие шаблоны с указателем действительны.Код,не использующий эти шаблоны,скорее всего,будет недействительным сегодня или станет недействительным в будущем.Даже нижеприведенные действительные шаблоны содержат важные предостережения.</target>
        </trans-unit>
        <trans-unit id="ea1b5d42ec809a44272262968add764fd0382aa5" translate="yes" xml:space="preserve">
          <source>The following table captures the capabilities of each format:</source>
          <target state="translated">В следующей таблице представлены возможности каждого формата:</target>
        </trans-unit>
        <trans-unit id="00ec28c9d7b575a36a11e5441e71a7350e3c8790" translate="yes" xml:space="preserve">
          <source>The following tags on struct fields have special meaning to Unmarshal:</source>
          <target state="translated">Следующие теги на полях структуры имеют особое значение для Unmarshal:</target>
        </trans-unit>
        <trans-unit id="b74a12e0ee03ebdd96a1e5698ef65e80645b4c11" translate="yes" xml:space="preserve">
          <source>The format fmt and precision prec have the same meaning as in FormatFloat. It rounds the result assuming that the original was obtained from a complex value of bitSize bits, which must be 64 for complex64 and 128 for complex128.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89924ba6250a79536c8a80bb6ca7f28f4193a60a" translate="yes" xml:space="preserve">
          <source>The format fmt is one of 'b' (-ddddp&amp;plusmn;ddd, a binary exponent), 'e' (-d.dddde&amp;plusmn;dd, a decimal exponent), 'E' (-d.ddddE&amp;plusmn;dd, a decimal exponent), 'f' (-ddd.dddd, no exponent), 'g' ('e' for large exponents, 'f' otherwise), 'G' ('E' for large exponents, 'f' otherwise), 'x' (-0xd.ddddp&amp;plusmn;ddd, a hexadecimal fraction and binary exponent), or 'X' (-0Xd.ddddP&amp;plusmn;ddd, a hexadecimal fraction and binary exponent).</source>
          <target state="translated">Формат fmt может быть одним из 'b' (-ddddp &amp;plusmn; ddd, двоичный показатель степени), 'e' (-d.dddde &amp;plusmn; dd, десятичный показатель степени), 'E' (-d.ddddE &amp;plusmn; dd, десятичный показатель степени ), 'f' (-ddd.dddd, без экспоненты), 'g' ('e' для больших показателей, 'f' в противном случае), 'G' ('E' для больших показателей, 'f' в противном случае), ' x '(-0xd.ddddp &amp;plusmn; ddd, шестнадцатеричная дробь и двоичная экспонента) или' X '(-0Xd.ddddP &amp;plusmn; ddd, шестнадцатеричная дробь и двоичная экспонента).</target>
        </trans-unit>
        <trans-unit id="f76288ef40c91d2e63963863e41869428543cdec" translate="yes" xml:space="preserve">
          <source>The formats 2, _2, and 02 are unpadded, space-padded, and zero-padded day of month. The formats __2 and 002 are space-padded and zero-padded three-character day of year; there is no unpadded day of year format.</source>
          <target state="translated">Форматы 2,_2 и 02 не имеют подложек,имеют подложки из космоса и не имеют подложек из нулевого числа дней месяца.Форматы __2 и 002-трехсимвольный день года с пробелами и без пробела;без пробела формат дня года отсутствует.</target>
        </trans-unit>
        <trans-unit id="1f639fab95b9f7e1b599aa2a265c8aee60d79d31" translate="yes" xml:space="preserve">
          <source>The formfeed character acts like a newline but it also terminates all columns in the current line (effectively calling Flush). Tab- terminated cells in the next line start new columns. Unless found inside an HTML tag or inside an escaped text segment, formfeed characters appear as newlines in the output.</source>
          <target state="translated">Символ подачи формы действует как новая строка,но он также завершает все столбцы в текущей строке (фактически,вызывая Flush).Ячейки в следующей строке,завершенные табуляцией,начинают работу с новыми столбцами.Если символы формальной подачи не найдены внутри HTML-тега или внутри экранированного сегмента текста,они появляются как новые строки в выводе.</target>
        </trans-unit>
        <trans-unit id="6c966e528430f5e8f847d49a893afb0bf98faff4" translate="yes" xml:space="preserve">
          <source>The function is never called with an empty data slice unless atEOF is true. If atEOF is true, however, data may be non-empty and, as always, holds unprocessed text.</source>
          <target state="translated">Функция никогда не вызывается с пустым срезом данных,если только atEOF не является истинным.Однако если atEOF равен true,данные могут быть непустыми и,как всегда,содержать необработанный текст.</target>
        </trans-unit>
        <trans-unit id="bb0e0b68d3018d9e09f97b972052414d315bce69" translate="yes" xml:space="preserve">
          <source>The function may return early (before the entire result is written) and return a formatting error, for instance due to an incorrect AST.</source>
          <target state="translated">Функция может вернуться раньше (до записи всего результата)и вернуть ошибку форматирования,например,из-за некорректного AST.</target>
        </trans-unit>
        <trans-unit id="f82da77fd5615642bd9b732fd9350b4315a5dea8" translate="yes" xml:space="preserve">
          <source>The function panics if the provided interface is not a slice.</source>
          <target state="translated">Функция паникует,если предоставленный интерфейс не является срезом.</target>
        </trans-unit>
        <trans-unit id="4a5f1ee976b1b1f94f517d27ee9603ea7e455c85" translate="yes" xml:space="preserve">
          <source>The function panics if z &amp;lt; 0. The value of z is undefined in that case.</source>
          <target state="translated">Функция вызывает панику, если z &amp;lt;0. В этом случае значение z не определено.</target>
        </trans-unit>
        <trans-unit id="d83c73a08df2f74bc57a61017e163cb8c0547bd2" translate="yes" xml:space="preserve">
          <source>The functions in this package allow a program to change the way Go programs handle signals.</source>
          <target state="translated">Функции в данном пакете позволяют программе изменять способ обработки сигналов Go-программами.</target>
        </trans-unit>
        <trans-unit id="c621ec21270aea7b19125c0f31ddb234d896d492" translate="yes" xml:space="preserve">
          <source>The fundamental interface is called Image. An Image contains colors, which are described in the image/color package.</source>
          <target state="translated">Фундаментальный интерфейс называется Image.Изображение содержит цвета,которые описаны в пакете &quot;изображение/цвет&quot;.</target>
        </trans-unit>
        <trans-unit id="3e95d4d070ede79d500e36cf5c238c24c3001c9d" translate="yes" xml:space="preserve">
          <source>The gc runtime imposes a limit of 64 kB on channel element types. If t's size is equal to or exceeds this limit, ChanOf panics.</source>
          <target state="translated">Время выполнения gc накладывает ограничение в 64 кБ на типы канальных элементов.Если размер t равен или превышает этот лимит,то ChanOf паникует.</target>
        </trans-unit>
        <trans-unit id="0b2d97be3dbe373d310641088f98b283534b1dcf" translate="yes" xml:space="preserve">
          <source>The general form represented is:</source>
          <target state="translated">Представлена общая форма:</target>
        </trans-unit>
        <trans-unit id="e818a1eefc582415dc190e3c644893b44536faa0" translate="yes" xml:space="preserve">
          <source>The gzip file stores a header giving metadata about the compressed file. That header is exposed as the fields of the Writer and Reader structs.</source>
          <target state="translated">В gzip-файле хранится заголовок,содержащий метаданные о сжатом файле.Этот заголовок выставляется в виде полей структур Writer и Reader.</target>
        </trans-unit>
        <trans-unit id="d55115d1e7ac93246c076c18ab9827900516047e" translate="yes" xml:space="preserve">
          <source>The handler is typically nil, in which case the DefaultServeMux is used.</source>
          <target state="translated">Обработчик,как правило,ноль,и в этом случае используется DefaultServeMux.</target>
        </trans-unit>
        <trans-unit id="19708f111db26407005495f3eafb1c4b25430791" translate="yes" xml:space="preserve">
          <source>The handling of spaces and newlines differs from that of C's scanf family: in C, newlines are treated as any other space, and it is never an error when a run of spaces in the format string finds no spaces to consume in the input.</source>
          <target state="translated">Работа с пробелами и новыми строками отличается от работы со строками семейства C scanf:в C новые строки рассматриваются как любые другие пробелы,и это никогда не является ошибкой,когда пробег пробелов в строке формата не находит пробелов,которые нужно использовать во входных данных.</target>
        </trans-unit>
        <trans-unit id="e507edab6e88a1637c49a21b0db27e0ccae398e0" translate="yes" xml:space="preserve">
          <source>The heap dump format is defined at &lt;a href=&quot;https://golang.org/s/go15heapdump&quot;&gt;https://golang.org/s/go15heapdump&lt;/a&gt;.</source>
          <target state="translated">Формат дампа кучи определен на &lt;a href=&quot;https://golang.org/s/go15heapdump&quot;&gt;https://golang.org/s/go15heapdump&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b009325b4464d415a87b0e6547346de038d0c47" translate="yes" xml:space="preserve">
          <source>The heap profile reports statistics as of the most recently completed garbage collection; it elides more recent allocation to avoid skewing the profile away from live data and toward garbage. If there has been no garbage collection at all, the heap profile reports all known allocations. This exception helps mainly in programs running without garbage collection enabled, usually for debugging purposes.</source>
          <target state="translated">Профиль кучи отражает статистику по последним завершенным сборам мусора;он элиминирует более недавнее распределение,чтобы избежать перекоса профиля в сторону от живых данных и в сторону мусора.Если сбор мусора вообще не проводился,профиль кучи сообщает обо всех известных распределениях.Это исключение помогает в основном в программах,работающих без включенной функции сбора мусора,обычно в целях отладки.</target>
        </trans-unit>
        <trans-unit id="421272feeab82226233835220df71bd5575dfeaf" translate="yes" xml:space="preserve">
          <source>The heap profile tracks both the allocation sites for all live objects in the application memory and for all objects allocated since the program start. Pprof's -inuse_space, -inuse_objects, -alloc_space, and -alloc_objects flags select which to display, defaulting to -inuse_space (live objects, scaled by size).</source>
          <target state="translated">Профиль кучи отслеживает как места выделения всех живых объектов в памяти приложения,так и всех объектов,выделенных с момента запуска программы.Флаги Pprof -inuse_space,-inuse_objects,-alloc_space и -alloc_objects выбирают,какой из них показывать,по умолчанию -inuse_space (живые объекты,масштабируемые по размеру).</target>
        </trans-unit>
        <trans-unit id="9054b52054ed118bba62807238e18c27e8900f1e" translate="yes" xml:space="preserve">
          <source>The http package's Transport and Server both automatically enable HTTP/2 support for simple configurations. To enable HTTP/2 for more complex configurations, to use lower-level HTTP/2 features, or to use a newer version of Go's http2 package, import &quot;golang.org/x/net/http2&quot; directly and use its ConfigureTransport and/or ConfigureServer functions. Manually configuring HTTP/2 via the golang.org/x/net/http2 package takes precedence over the net/http package's built-in HTTP/2 support.</source>
          <target state="translated">Транспорт и сервер пакета http автоматически включают поддержку HTTP/2 для простых конфигураций.Чтобы включить HTTP/2 для более сложных конфигураций,использовать функции HTTP/2 более низкого уровня или использовать более новую версию пакета Go http2,импортируйте &quot;golang.org/x/net/http2&quot; напрямую и используйте его функции ConfigureTransport и/или ConfigureServer.Ручная настройка HTTP/2 через пакет golang.org/x/net/http2 имеет приоритет над встроенной поддержкой HTTP/2 пакета net/http.</target>
        </trans-unit>
        <trans-unit id="7901eb39a7a77a33e17eff2e48d2aac1d7c0d97c" translate="yes" xml:space="preserve">
          <source>The identification of global unicast addresses uses address type identification as defined in RFC 1122, RFC 4632 and RFC 4291 with the exception of IPv4 directed broadcast addresses. It returns true even if ip is in IPv4 private address space or local IPv6 unicast address space.</source>
          <target state="translated">Идентификация глобальных одноадресных адресов использует идентификацию типа адреса,как определено в RFC 1122,RFC 4632 и RFC 4291,за исключением адресов направленного широковещания IPv4.Оно возвращает true,даже если ip находится в IPv4 приватном адресном пространстве или локальном IPv6 одноадресном адресном пространстве.</target>
        </trans-unit>
        <trans-unit id="b257c667cd0c9ffb7ee1c476e193cf63abc04956" translate="yes" xml:space="preserve">
          <source>The imag built-in function returns the imaginary part of the complex number c. The return value will be floating point type corresponding to the type of c.</source>
          <target state="translated">Встроенная функция imag возвращает воображаемую часть комплексного числа c.Возвращаемым значением будет тип с плавающей точкой,соответствующий типу c.</target>
        </trans-unit>
        <trans-unit id="bba6c5ec151d11520ba69091805c64672051a283" translate="yes" xml:space="preserve">
          <source>The implementation compiles a custom codec for each data type in the stream and is most efficient when a single Encoder is used to transmit a stream of values, amortizing the cost of compilation.</source>
          <target state="translated">Реализация компилирует пользовательский кодек для каждого типа данных в потоке и наиболее эффективна,когда для передачи потока значений используется один Кодер,амортизируя затраты на компиляцию.</target>
        </trans-unit>
        <trans-unit id="cc59eb7da6cf17b91e5a422524763e1124d23ad5" translate="yes" xml:space="preserve">
          <source>The implementation fn can assume that the argument Value slice has the number and type of arguments given by typ. If typ describes a variadic function, the final Value is itself a slice representing the variadic arguments, as in the body of a variadic function. The result Value slice returned by fn must have the number and type of results given by typ.</source>
          <target state="translated">Реализация fn может предполагать,что срез Value аргумента имеет количество и тип аргументов,заданных типом.Если тип описывает вариадическую функцию,то конечное значение само по себе является срезом,представляющим вариадические аргументы,как и в теле вариадической функции.Возвращаемый fn ломтик результата Value должен иметь количество и тип результатов,заданных типом.</target>
        </trans-unit>
        <trans-unit id="a41481e84f45a7e3719a2630303073b44edd9b5b" translate="yes" xml:space="preserve">
          <source>The implementation is sufficient for HTTP (RFC 2388) and the multipart bodies generated by popular browsers.</source>
          <target state="translated">Реализации достаточно для HTTP (RFC 2388)и многокомпонентных тел,генерируемых популярными браузерами.</target>
        </trans-unit>
        <trans-unit id="bd36b82add2ec8e45a6f77ef7cf720308cbe3f24" translate="yes" xml:space="preserve">
          <source>The implementation provides filters that uncompress during reading and compress during writing. For example, to write compressed data to a buffer:</source>
          <target state="translated">Реализация предоставляет фильтры,которые сжимаются во время чтения и сжимаются во время записи.Например,для записи сжатых данных в буфер:</target>
        </trans-unit>
        <trans-unit id="4c05b349b9c7f15622f23c1c3f50e289a6f9207b" translate="yes" xml:space="preserve">
          <source>The input stream consists of basic JSON values&amp;mdash;bool, string, number, and null&amp;mdash;along with delimiters [ ] { } of type Delim to mark the start and end of arrays and objects. Commas and colons are elided.</source>
          <target state="translated">Входной поток состоит из основных значений JSON - bool, string, number и null - вместе с разделителями [] {} типа Delim для обозначения начала и конца массивов и объектов. Запятые и двоеточия опускаются.</target>
        </trans-unit>
        <trans-unit id="12da2b29ce7b4618ed043885dc9bb14fc4b7647d" translate="yes" xml:space="preserve">
          <source>The input text for a template is UTF-8-encoded text in any format. &quot;Actions&quot;--data evaluations or control structures--are delimited by &quot;{{&quot; and &quot;}}&quot;; all text outside actions is copied to the output unchanged. Except for raw strings, actions may not span newlines, although comments can.</source>
          <target state="translated">Входной текст для шаблона-это текст в кодировке UTF-8 в любом формате.&quot;Действия&quot;-оценки данных или структуры управления-делится на &quot;{{&quot; и &quot;}}&quot;;весь текст вне действий копируется в выходной файл без изменений.За исключением необработанных строк,действия могут не перекрывать новые строки,хотя комментарии могут.</target>
        </trans-unit>
        <trans-unit id="4540c375047525b02ad242a07ddc447e593cb543" translate="yes" xml:space="preserve">
          <source>The issuer distinguished name CRL field and authority key identifier extension are populated using the issuer certificate. issuer must have SubjectKeyId set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba307a7ab47ab6e6c8f50d8bbcb53f28f406fab" translate="yes" xml:space="preserve">
          <source>The issuer may not be nil, and the crlSign bit must be set in KeyUsage in order to use it as a CRL issuer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe0f673e6c94e25d76ca7000237cacb398b340e" translate="yes" xml:space="preserve">
          <source>The key name will be used if it's a non-empty string consisting of only Unicode letters, digits, and ASCII punctuation except quotation marks, backslash, and comma.</source>
          <target state="translated">Имя ключа будет использоваться,если это непустая строка,состоящая только из букв Юникода,цифр и ASCII-знаков препинания,кроме кавычек,обратного слеша и запятой.</target>
        </trans-unit>
        <trans-unit id="56c8d36b799fc9e0b2026b0edca00b49c8b68568" translate="yes" xml:space="preserve">
          <source>The keys should be in canonical form, as returned by CanonicalHeaderKey.</source>
          <target state="translated">Ключи должны быть в канонической форме,как возвращает CanonicalHeaderKey.</target>
        </trans-unit>
        <trans-unit id="aafd41e452c62afe966c7e13f3df11b54dbc58d9" translate="yes" xml:space="preserve">
          <source>The label parameter may contain arbitrary data that will not be encrypted, but which gives important context to the message. For example, if a given public key is used to decrypt two types of messages then distinct label values could be used to ensure that a ciphertext for one purpose cannot be used for another by an attacker. If not required it can be empty.</source>
          <target state="translated">Параметр label может содержать произвольные данные,которые не будут зашифрованы,но которые дают важный контекст сообщения.Например,если заданный открытый ключ используется для расшифровки двух типов сообщений,то можно использовать разные значения меток,чтобы гарантировать,что шифрованный текст для одной цели не может быть использован злоумышленником для другой.Если это не требуется,то он может быть пустым.</target>
        </trans-unit>
        <trans-unit id="8cac55c132cd1a101696d231efd1dd2e57c66e06" translate="yes" xml:space="preserve">
          <source>The label parameter must match the value given when encrypting. See EncryptOAEP for details.</source>
          <target state="translated">Параметр метки должен совпадать со значением,заданным при шифровании.Подробности см.в разделе EncryptOAEP.</target>
        </trans-unit>
        <trans-unit id="1f23b14d8824650d5d93ee806d28aa66402f402a" translate="yes" xml:space="preserve">
          <source>The last index entry is the field or method index in the (possibly embedded) type where the entry was found, either:</source>
          <target state="translated">Последняя запись индекса является также полем или индексом метода в том типе (возможно,встроенном),в котором была найдена запись:</target>
        </trans-unit>
        <trans-unit id="4b9b3d3444da612bde04769b5c20561ed18e861d" translate="yes" xml:space="preserve">
          <source>The legacy Common Name field is ignored unless it's a valid hostname, the certificate doesn't have any Subject Alternative Names, and the GODEBUG environment variable is set to &quot;x509ignoreCN=0&quot;. Support for Common Name is deprecated will be entirely removed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feec6e46b5f96d5f768a208b14b5f1c441e6736a" translate="yes" xml:space="preserve">
          <source>The len built-in function returns the length of v, according to its type:</source>
          <target state="translated">Встроенная в объектив функция возвращает длину v,в зависимости от типа:</target>
        </trans-unit>
        <trans-unit id="67e3ff53cc19034aa94ce5014984a3863b3ceaa2" translate="yes" xml:space="preserve">
          <source>The limit controls the number of operating system threads, not the number of goroutines. A Go program creates a new thread only when a goroutine is ready to run but all the existing threads are blocked in system calls, cgo calls, or are locked to other goroutines due to use of runtime.LockOSThread.</source>
          <target state="translated">Предел регулирует количество резьбовых соединений операционной системы,а не количество гортаней.Программа Go создает новый поток только тогда,когда горутин готов к запуску,но все существующие потоки заблокированы в системных вызовах,вызовах cgo,или заблокированы для других горутинов в связи с использованием runtime.LockOSThread.</target>
        </trans-unit>
        <trans-unit id="b7d62826dea7a7db650a9558cf682cb6d6d5b0e1" translate="yes" xml:space="preserve">
          <source>The list is sorted by ID. Note that the default cipher suites selected by this package might depend on logic that can't be captured by a static list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b31a135931a0a96f45c468dd4c1356b142f056" translate="yes" xml:space="preserve">
          <source>The list of possible Object kinds.</source>
          <target state="translated">Список возможных видов Объектов.</target>
        </trans-unit>
        <trans-unit id="f82cdeb26140d2ac8d4f27048ef361e35bc34e51" translate="yes" xml:space="preserve">
          <source>The list of tokens.</source>
          <target state="translated">Список жетонов.</target>
        </trans-unit>
        <trans-unit id="744b107073d50b7c5d979152623baf7c98836ce1" translate="yes" xml:space="preserve">
          <source>The load and store operations, implemented by the LoadT and StoreT functions, are the atomic equivalents of &quot;return *addr&quot; and &quot;*addr = val&quot;.</source>
          <target state="translated">Операции загрузки и хранения,реализованные функциями LoadT и StoreT,являются атомными эквивалентами &quot;return *addr&quot; и &quot;*addr=val&quot;.</target>
        </trans-unit>
        <trans-unit id="d80346c4a6d83f0a2408ae318740b75196640a27" translate="yes" xml:space="preserve">
          <source>The lookup function is called each time the resulting importer needs to resolve an import path. In this mode the importer can only be invoked with canonical import paths (not relative or absolute ones); it is assumed that the translation to canonical import paths is being done by the client of the importer.</source>
          <target state="translated">Функция поиска вызывается каждый раз,когда результирующему импортеру необходимо разрешить путь импорта.В этом режиме импортер может быть вызван только с каноническими путями импорта (не относительными или абсолютными);предполагается,что преобразование в канонические пути импорта осуществляется клиентом импортера.</target>
        </trans-unit>
        <trans-unit id="d42ee39ba69d607990bf6285f526cdb4d05cd8c5" translate="yes" xml:space="preserve">
          <source>The low bit is therefore analogous to a sign bit, but making it the complement bit instead guarantees that the largest negative integer is not a special case. For example, -129=^128=(^256&amp;gt;&amp;gt;1) encodes as (FE 01 01).</source>
          <target state="translated">Поэтому младший бит аналогичен знаковому биту, но вместо этого превращение его в бит дополнения гарантирует, что наибольшее отрицательное целое число не является особым случаем. Например, -129 = ^ 128 = (^ 256 &amp;gt;&amp;gt; 1) кодируется как (FE 01 01).</target>
        </trans-unit>
        <trans-unit id="e23983031d30e849dd601f8a9a147a11b178b7e1" translate="yes" xml:space="preserve">
          <source>The main use case is finding resources located relative to an executable.</source>
          <target state="translated">Основным случаем использования является нахождение ресурсов,расположенных относительно исполняемого файла.</target>
        </trans-unit>
        <trans-unit id="ae651dd57d8aac89d2244b121832135b42a78e22" translate="yes" xml:space="preserve">
          <source>The make built-in function allocates and initializes an object of type slice, map, or chan (only). Like new, the first argument is a type, not a value. Unlike new, make's return type is the same as the type of its argument, not a pointer to it. The specification of the result depends on the type:</source>
          <target state="translated">Встроенная функция make выделяет и инициализирует объект типа срез,карту или чан (только).Как и новый,первый аргумент-тип,а не значение.В отличие от new,возвращаемый тип make тот же,что и тип его аргумента,а не указатель на него.Спецификация результата зависит от типа:</target>
        </trans-unit>
        <trans-unit id="ad15554627caa64494fe09878e570067f5641170" translate="yes" xml:space="preserve">
          <source>The meaning of the parameters fset, pkg, and pos is the same as in CheckExpr. An error is returned if expr cannot be parsed successfully, or the resulting expr AST cannot be type-checked.</source>
          <target state="translated">Значение параметров fset,pkg и pos такое же,как и в CheckExpr.Ошибка возвращается,если expr не может быть успешно обработан,или полученный expr AST не может быть проверен на тип.</target>
        </trans-unit>
        <trans-unit id="76f7a0e267f75e03932754601186fb88901bc244" translate="yes" xml:space="preserve">
          <source>The message must be no longer than the length of the public modulus minus twice the hash length, minus a further 2.</source>
          <target state="translated">Сообщение не должно быть больше длины публичного модуля минус в два раза больше длины хэша,минус еще 2.</target>
        </trans-unit>
        <trans-unit id="f50438ca0e284cc49442d4b96ed8422098542b37" translate="yes" xml:space="preserve">
          <source>The method for resolving domain names, whether indirectly with functions like Dial or directly with functions like LookupHost and LookupAddr, varies by operating system.</source>
          <target state="translated">Метод разрешения доменных имен,будь то косвенно с такими функциями,как Dial или непосредственно с такими функциями,как LookupHost и LookupAddr,варьируется в зависимости от операционной системы.</target>
        </trans-unit>
        <trans-unit id="fd8e3459dc1d93b8b2959d9f7ce9e888fe72a14d" translate="yes" xml:space="preserve">
          <source>The method's first argument represents the arguments provided by the caller; the second argument represents the result parameters to be returned to the caller. The method's return value, if non-nil, is passed back as a string that the client sees as if created by errors.New. If an error is returned, the reply parameter will not be sent back to the client.</source>
          <target state="translated">Первый аргумент метода представляет аргументы,предоставленные вызывающим абонентом;второй аргумент представляет параметры результата,которые должны быть возвращены вызывающему абоненту.Возвращаемое методом значение,если оно не равно нулю,передается обратно в виде строки,которую клиент видит как созданную по ошибке.New.Если возвращается ошибка,то ответный параметр не будет возвращен клиенту.</target>
        </trans-unit>
        <trans-unit id="eebd4cc8d1b396bccc721d19c4bd56800d60e192" translate="yes" xml:space="preserve">
          <source>The methods should behave the same as those on an *os.File.</source>
          <target state="translated">Методы должны вести себя так же,как и в *os.File.</target>
        </trans-unit>
        <trans-unit id="3351c33da5b9bc73dd81d983421271485dd91e09" translate="yes" xml:space="preserve">
          <source>The minimal source code for a binary-only package was therefore:</source>
          <target state="translated">Таким образом,минимальный исходный код для пакета только с двоичным кодом был:</target>
        </trans-unit>
        <trans-unit id="ba0d7c85cb07c29f22bceee0e488a79cf0a2c300" translate="yes" xml:space="preserve">
          <source>The minimum element in the tree is the root, at index 0.</source>
          <target state="translated">Минимальным элементом дерева является корень,с индексом 0.</target>
        </trans-unit>
        <trans-unit id="6cf2c8c68bd743b1d5a4e29ae7301dad5d49bcb2" translate="yes" xml:space="preserve">
          <source>The mode parameter controls the amount of source text parsed and other optional parser functionality. Position information is recorded in the file set fset, which must not be nil.</source>
          <target state="translated">Параметр mode (Режим)управляет количеством разобранного исходного текста и другими дополнительными функциями парсера.Информация о положении записывается в файл набора fset,который не должен быть нулевым.</target>
        </trans-unit>
        <trans-unit id="7d1773f39818c5825c59e48b1236b92119b0b32e" translate="yes" xml:space="preserve">
          <source>The month, day, hour, min, sec, and nsec values may be outside their usual ranges and will be normalized during the conversion. For example, October 32 converts to November 1.</source>
          <target state="translated">Значения месяца,дня,часа,минуты,секунды и nsec могут выходить за пределы их обычных диапазонов и будут нормализованы во время конвертации.Например,32 октября конвертируется на 1 ноября.</target>
        </trans-unit>
        <trans-unit id="a5541e290e27715c3d35b2115cad871f3ab99ccb" translate="yes" xml:space="preserve">
          <source>The most common numeric conversions are Atoi (string to int) and Itoa (int to string).</source>
          <target state="translated">Наиболее распространенными числовыми преобразованиями являются Atoi (строка в int)и Itoa (строка в int).</target>
        </trans-unit>
        <trans-unit id="4bbbacdbad6d2c99ac68260aad07ecb869838903" translate="yes" xml:space="preserve">
          <source>The most common use of this pattern is to access fields in a struct or elements of an array:</source>
          <target state="translated">Наиболее часто этот шаблон используется для доступа к полям в структуре или элементам массива:</target>
        </trans-unit>
        <trans-unit id="ac8cc81db3fc49af2479176c9231b929d55cdbd8" translate="yes" xml:space="preserve">
          <source>The msg parameter should be an RFC 822-style email with headers first, a blank line, and then the message body. The lines of msg should be CRLF terminated. The msg headers should usually include fields such as &quot;From&quot;, &quot;To&quot;, &quot;Subject&quot;, and &quot;Cc&quot;. Sending &quot;Bcc&quot; messages is accomplished by including an email address in the to parameter but not including it in the msg headers.</source>
          <target state="translated">Параметром msg должно быть письмо в стиле RFC 822 с заголовками,сначала пустая строка,а затем тело сообщения.Строки msg должны быть завершены CRLF.Заголовки msg обычно должны включать такие поля,как &quot;From&quot;,&quot;To&quot;,&quot;Subject&quot; и &quot;Cc&quot;.Отправка сообщений &quot;Bcc&quot; осуществляется путем включения адреса электронной почты в параметр &quot;to&quot;,но не включения его в заголовки msg.</target>
        </trans-unit>
        <trans-unit id="410aa7b0a0304575a8915750342dc577b832f74c" translate="yes" xml:space="preserve">
          <source>The name for the XML elements is taken from, in order of preference:</source>
          <target state="translated">Имя для элементов XML берется в порядке предпочтительности:</target>
        </trans-unit>
        <trans-unit id="57b088fc8d39478c2345773281e5eb271805f7ea" translate="yes" xml:space="preserve">
          <source>The naming convention to declare examples for the package, a function F, a type T and method M on type T are:</source>
          <target state="translated">Свод правил именования для объявления примеров для пакета,функции F,типа T и метода M для типа T:</target>
        </trans-unit>
        <trans-unit id="7b9b492a2e0fbf406f8b8d17e034f78a30b6eb8c" translate="yes" xml:space="preserve">
          <source>The net, net/http, and crypto/tls packages also refer to debugging variables in GODEBUG. See the documentation for those packages for details.</source>
          <target state="translated">Пакеты net,net/http и crypto/tls также относятся к отладочным переменным в GODEBUG.Подробности см.в документации к этим пакетам.</target>
        </trans-unit>
        <trans-unit id="69954652d3ee14598bd31e60017ff5be6ec75582" translate="yes" xml:space="preserve">
          <source>The net/http/cookiejar package provides a CookieJar implementation.</source>
          <target state="translated">Пакет net/http/cookiejar обеспечивает реализацию CookieJar.</target>
        </trans-unit>
        <trans-unit id="7815d9693c2e8fba3de7740f99dda917ebde80d7" translate="yes" xml:space="preserve">
          <source>The net/rpc package is frozen and is not accepting new features.</source>
          <target state="translated">Пакет net/rpc заморожен и не принимает новых функций.</target>
        </trans-unit>
        <trans-unit id="b67ec9dd23234843cefc446704be9276e0333344" translate="yes" xml:space="preserve">
          <source>The network must be &quot;tcp&quot;, &quot;tcp4&quot;, &quot;tcp6&quot;, &quot;unix&quot; or &quot;unixpacket&quot;.</source>
          <target state="translated">Сеть должна быть &quot;tcp&quot;,&quot;tcp4&quot;,&quot;tcp6&quot;,&quot;unix&quot; или &quot;unixpacket&quot;.</target>
        </trans-unit>
        <trans-unit id="f78c2675c0a1b78facf549c913ce29c8786aed4f" translate="yes" xml:space="preserve">
          <source>The network must be &quot;udp&quot;, &quot;udp4&quot;, &quot;udp6&quot;, &quot;unixgram&quot;, or an IP transport. The IP transports are &quot;ip&quot;, &quot;ip4&quot;, or &quot;ip6&quot; followed by a colon and a literal protocol number or a protocol name, as in &quot;ip:1&quot; or &quot;ip:icmp&quot;.</source>
          <target state="translated">Сеть должна быть &quot;udp&quot;,&quot;udp4&quot;,&quot;udp6&quot;,&quot;unixgram&quot; или IP-транспортом.IP-транспортами являются &quot;ip&quot;,&quot;ip4&quot; или &quot;ip6&quot;,за которыми следует двоеточие и буквальный номер протокола или имя протокола,как в &quot;ip:1&quot; или &quot;ip:icmp&quot;.</target>
        </trans-unit>
        <trans-unit id="f62f0c6bf3637b6bd91fbed73590e0c5ec059d67" translate="yes" xml:space="preserve">
          <source>The network must be &quot;unix&quot; or &quot;unixpacket&quot;.</source>
          <target state="translated">Сеть должна быть &quot;unix&quot; или &quot;unixpacket&quot;.</target>
        </trans-unit>
        <trans-unit id="961ea2a9664370be05fda243ace29bf62f0b8b14" translate="yes" xml:space="preserve">
          <source>The network must be &quot;unixgram&quot;.</source>
          <target state="translated">Сеть должна быть &quot;unixgram&quot;.</target>
        </trans-unit>
        <trans-unit id="143c1ec61594ea23a84fdfc668726a693ff1d059" translate="yes" xml:space="preserve">
          <source>The network must be a TCP network name.</source>
          <target state="translated">Сеть должна быть именем сети TCP.</target>
        </trans-unit>
        <trans-unit id="54bb9136f9b37f7468411dbae5b647c63059a3a1" translate="yes" xml:space="preserve">
          <source>The network must be a TCP network name; see func Dial for details.</source>
          <target state="translated">Сеть должна быть именем сети TCP;подробности смотрите в разделе Функция Dial.</target>
        </trans-unit>
        <trans-unit id="a35132d711d8945bdb8b272ee67848e4c94a5a16" translate="yes" xml:space="preserve">
          <source>The network must be a UDP network name.</source>
          <target state="translated">Сеть должна иметь имя UDP сети.</target>
        </trans-unit>
        <trans-unit id="89ed96066a0fbc9b6b82696daa8ba7effb94e0a8" translate="yes" xml:space="preserve">
          <source>The network must be a UDP network name; see func Dial for details.</source>
          <target state="translated">Сеть должна быть именем UDP сети;подробности смотрите в разделе Функция Dial.</target>
        </trans-unit>
        <trans-unit id="199d17e2fe63f354db9a6b916c396629d6b88dda" translate="yes" xml:space="preserve">
          <source>The network must be a Unix network name.</source>
          <target state="translated">Сеть должна быть именем сети Unix.</target>
        </trans-unit>
        <trans-unit id="b6cf9d29e750ed948316e5ba40edb44e452845b1" translate="yes" xml:space="preserve">
          <source>The network must be a Unix network name; see func Dial for details.</source>
          <target state="translated">Сеть должна быть сетевым именем Unix;подробности смотрите в функционале Dial.</target>
        </trans-unit>
        <trans-unit id="61f5a2270318ecc8414142178aaa1a53165f97e7" translate="yes" xml:space="preserve">
          <source>The network must be an IP network name.</source>
          <target state="translated">Сеть должна быть именем IP-сети.</target>
        </trans-unit>
        <trans-unit id="b881d6aafa14d5f635aad510160f9473031ecf6f" translate="yes" xml:space="preserve">
          <source>The network must be an IP network name; see func Dial for details.</source>
          <target state="translated">Сеть должна быть именем IP сети;подробности смотрите в разделе Функция Дозвон.</target>
        </trans-unit>
        <trans-unit id="882441c96cbf8f9716ac8a79d3a5eb4e3af0bcfd" translate="yes" xml:space="preserve">
          <source>The new Handler calls h.ServeHTTP to handle each request, but if a call runs for longer than its time limit, the handler responds with a 503 Service Unavailable error and the given message in its body. (If msg is empty, a suitable default message will be sent.) After such a timeout, writes by h to its ResponseWriter will return ErrHandlerTimeout.</source>
          <target state="translated">Новый обработчик вызывает h.ServeHTTP для обработки каждого запроса,но если вызов выполняется дольше установленного срока,обработчик отвечает ошибкой 503 Service Unavailable и выданным сообщением в его теле.(Если msg пустое,то будет отправлено соответствующее сообщение по умолчанию.)По истечении такого таймаута,запись by h в его ResponseWriter вернет ErrHandlerTimeout.</target>
        </trans-unit>
        <trans-unit id="3cf0c81686ac1acb508bf9e67780a55cee7159d9" translate="yes" xml:space="preserve">
          <source>The new built-in function allocates memory. The first argument is a type, not a value, and the value returned is a pointer to a newly allocated zero value of that type.</source>
          <target state="translated">Новая встроенная функция выделяет память.Первый аргумент-тип,а не значение,а возвращаемое значение-указатель на вновь выделенное нулевое значение этого типа.</target>
        </trans-unit>
        <trans-unit id="902360dabebdea5b3a521c7b72fed85e30d4437d" translate="yes" xml:space="preserve">
          <source>The node type must be *ast.File, *printer.CommentedNode, []ast.Decl, []ast.Stmt, or assignment-compatible to ast.Expr, ast.Decl, ast.Spec, or ast.Stmt. Node does not modify node. Imports are not sorted for nodes representing partial source files (for instance, if the node is not an *ast.File or a *printer.CommentedNode not wrapping an *ast.File).</source>
          <target state="translated">Тип узла должен быть *ast.File,*printer.CommentedNode,[]ast.Decl,[]ast.Stmt,или соответствовать назначениям ast.Expr,ast.Decl,ast.Spec,или ast.Stmt.Узел не изменяет узел.Импорт не сортируется для узлов,представляющих частичные исходные файлы (например,если узел не является *ast.File или *printer.CommentedNode не обертывает *ast.File).</target>
        </trans-unit>
        <trans-unit id="56cff2c7a026fcff6621abd1c298d8e39f80b3ef" translate="yes" xml:space="preserve">
          <source>The non-Go code should not change the signal mask on any threads created by the Go runtime. If the non-Go code starts new threads of its own, it may set the signal mask as it pleases.</source>
          <target state="translated">Код,отличный от Go,не должен изменять маску сигнала ни на одном потоке,создаваемом во время выполнения Go.Если не-Go код запускает новые потоки самостоятельно,он может установить сигнальную маску по своему усмотрению.</target>
        </trans-unit>
        <trans-unit id="67289d2a1e8eb416b3a82eb9f3e75a285c0158f6" translate="yes" xml:space="preserve">
          <source>The number represented by s must be of the form N, Ni, or N&amp;plusmn;Ni, where N stands for a floating-point number as recognized by ParseFloat, and i is the imaginary component. If the second N is unsigned, a + sign is required between the two components as indicated by the &amp;plusmn;. If the second N is NaN, only a + sign is accepted. The form may be parenthesized and cannot contain any spaces. The resulting complex number consists of the two components converted by ParseFloat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca31cdbe931eb86d33c507cac75f440d062f995" translate="yes" xml:space="preserve">
          <source>The ok result is false if the -timeout flag indicates &amp;ldquo;no timeout&amp;rdquo; (0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32a27700c08984e10653750973205a0166116d3" translate="yes" xml:space="preserve">
          <source>The only signal values guaranteed to be present in the os package on all systems are os.Interrupt (send the process an interrupt) and os.Kill (force the process to exit). On Windows, sending os.Interrupt to a process with os.Process.Signal is not implemented; it will return an error instead of sending a signal.</source>
          <target state="translated">Единственные значения сигналов,которые гарантированно присутствуют в пакете os на всех системах-os.Interrupt (отправить процесс на прерывание)и os.Kill (заставить процесс выйти).В Windows отправка os.Interrupt для процесса с os.Process.Signal не реализована;вместо отправки сигнала она возвращает ошибку.</target>
        </trans-unit>
        <trans-unit id="ff422009eedfd53fa7602cbdd94de8292f5f25ce" translate="yes" xml:space="preserve">
          <source>The original specification for encryption and signatures with RSA is PKCS #1 and the terms &quot;RSA encryption&quot; and &quot;RSA signatures&quot; by default refer to PKCS #1 version 1.5. However, that specification has flaws and new designs should use version 2, usually called by just OAEP and PSS, where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c37b0a4e6fab650a215cbd5edb17eee82ff53db" translate="yes" xml:space="preserve">
          <source>The original specification for encryption and signatures with RSA is PKCS#1 and the terms &quot;RSA encryption&quot; and &quot;RSA signatures&quot; by default refer to PKCS#1 version 1.5. However, that specification has flaws and new designs should use version two, usually called by just OAEP and PSS, where possible.</source>
          <target state="translated">Оригинальной спецификацией шифрования и подписей с RSA является PKCS#1,а термины &quot;шифрование RSA&quot; и &quot;подписи RSA&quot; по умолчанию относятся к PKCS#1 версии 1.5.Однако эта спецификация имеет недостатки,и новые конструкции должны использовать версию 2,обычно называемую просто OAEP и PSS,где это возможно.</target>
        </trans-unit>
        <trans-unit id="540d9d25cf4179e22c8285de7096ab16e1c12b86" translate="yes" xml:space="preserve">
          <source>The original tar format was introduced in Unix V7. Since then, there have been multiple competing formats attempting to standardize or extend the V7 format to overcome its limitations. The most common formats are the USTAR, PAX, and GNU formats, each with their own advantages and limitations.</source>
          <target state="translated">Оригинальный формат tar был представлен в Unix V7.С тех пор существует множество конкурирующих форматов,пытающихся стандартизировать или расширить формат V7,чтобы преодолеть его ограничения.Наиболее распространенными форматами являются USTAR,PAX и GNU,каждый из которых имеет свои преимущества и ограничения.</target>
        </trans-unit>
        <trans-unit id="447ae61382377495d9bb3dcbc7167cc095d3d833" translate="yes" xml:space="preserve">
          <source>The os interface is intended to be uniform across all operating systems. Features not generally available appear in the system-specific package syscall.</source>
          <target state="translated">Интерфейс os предназначен для унификации всех операционных систем.Характеристики,недоступные в системном пакете syscall.</target>
        </trans-unit>
        <trans-unit id="826c8f633f039e53ad0aac6dce5e00961c47baef" translate="yes" xml:space="preserve">
          <source>The other reporting methods, such as the variations of Log and Error, may be called simultaneously from multiple goroutines.</source>
          <target state="translated">Другие методы отчетности,такие как вариации Log и Error,могут быть вызваны одновременно из нескольких goroutines.</target>
        </trans-unit>
        <trans-unit id="314818cec484a0a4f79c6a3bd12ea1e65d6a5497" translate="yes" xml:space="preserve">
          <source>The output of a command will be either one value or two values, the second of which has type error. If that second value is present and evaluates to non-nil, execution terminates and the error is returned to the caller of Execute.</source>
          <target state="translated">Выводом команды будет либо одно значение,либо два,второе из которых имеет ошибку типа.Если это второе значение присутствует и оценивается как ненулевое,выполнение команды прекращается и ошибка возвращается вызывающему абоненту Execute.</target>
        </trans-unit>
        <trans-unit id="8552b51b4b43726af9d21d2953952aab9f9eccb4" translate="yes" xml:space="preserve">
          <source>The package also exports a handler that serves execution trace data for the &quot;go tool trace&quot; command. To collect a 5-second execution trace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b79b49ed9f5aef9d64418cf5de61a045616033" translate="yes" xml:space="preserve">
          <source>The package also runs and verifies example code. Example functions may include a concluding line comment that begins with &quot;Output:&quot; and is compared with the standard output of the function when the tests are run. (The comparison ignores leading and trailing space.) These are examples of an example:</source>
          <target state="translated">Пакет также запускает и проверяет примерный код.Примеры функций могут содержать комментарий к заключительной строке,которая начинается с &quot;Output:&quot; и сравнивается со стандартным выводом функции при выполнении тестов.(При сравнении игнорируется ведущее и трейлинговое пространство.)Это примеры:</target>
        </trans-unit>
        <trans-unit id="a842fba56dd27e8e683543ed1da0bb8ec8237f57" translate="yes" xml:space="preserve">
          <source>The package is marked as complete if no errors occurred, otherwise it is incomplete. See Config.Error for controlling behavior in the presence of errors.</source>
          <target state="translated">Пакет помечается как полный,если не возникло ошибок,в противном случае он является неполным.См.раздел Config.Error для контроля поведения при наличии ошибок.</target>
        </trans-unit>
        <trans-unit id="084533be70387d373858b81e63ee3fdbb938556c" translate="yes" xml:space="preserve">
          <source>The package is sometimes only imported for the side effect of registering its HTTP handler and the above variables. To use it this way, link this package into your program:</source>
          <target state="translated">Иногда пакет импортируется только для побочного эффекта регистрации его HTTP обработчика и вышеперечисленных переменных.Чтобы использовать его таким образом,свяжите данный пакет с вашей программой:</target>
        </trans-unit>
        <trans-unit id="a76fef8dda549c1a3db0f0948e9255bd119d522e" translate="yes" xml:space="preserve">
          <source>The package is specified by a list of *ast.Files and corresponding file set, and the package path the package is identified with. The clean path must not be empty or dot (&quot;.&quot;).</source>
          <target state="translated">Пакет определяется списком *ast.Files и соответствующим набором файлов,а также путём к пакету,по которому он идентифицируется.Чистый путь не должен быть пустым или точечным (&quot;.&quot;).</target>
        </trans-unit>
        <trans-unit id="385716c34a6382063c2f2e6bebfaff89eee0a50e" translate="yes" xml:space="preserve">
          <source>The package is specified by a list of *ast.Files and corresponding file set, which must not be nil. NewFromFiles uses all provided files when computing documentation, so it is the caller's responsibility to provide only the files that match the desired build context. &quot;go/build&quot;.Context.MatchFile can be used for determining whether a file matches a build context with the desired GOOS and GOARCH values, and other build constraints. The import path of the package is specified by importPath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399fd3ad30378409e2dc4bdf013d129681dab5d4" translate="yes" xml:space="preserve">
          <source>The package is typically only imported for the side effect of registering its HTTP handlers. The handled paths all begin with /debug/pprof/.</source>
          <target state="translated">Обычно пакет импортируется только для побочного эффекта регистрации его HTTP обработчиков.Все обрабатываемые пути начинаются с /debug/pprof/.</target>
        </trans-unit>
        <trans-unit id="1435a203fd8b96db3ad7b17b180e6f206d92f47b" translate="yes" xml:space="preserve">
          <source>The package is using the Elastic Tabstops algorithm described at &lt;a href=&quot;http://nickgravgaard.com/elastictabstops/index.html&quot;&gt;http://nickgravgaard.com/elastictabstops/index.html&lt;/a&gt;.</source>
          <target state="translated">Пакет использует алгоритм Elastic Tabstops, описанный на &lt;a href=&quot;http://nickgravgaard.com/elastictabstops/index.html&quot;&gt;http://nickgravgaard.com/elastictabstops/index.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d8c628767f33f2351dada491bfefd34f51b3140" translate="yes" xml:space="preserve">
          <source>The package provides:</source>
          <target state="translated">Пакет предоставляет:</target>
        </trans-unit>
        <trans-unit id="fdd304cc0ffa560e98ef7d6ccf98bb51070237a4" translate="yes" xml:space="preserve">
          <source>The packages golang.org/x/net/ipv4 and golang.org/x/net/ipv6 can be used to manipulate IP-level socket options in oob.</source>
          <target state="translated">Пакеты golang.org/x/net/ipv4 и golang.org/x/net/ipv6 могут использоваться для управления опциями сокетов IP-уровня в oob.</target>
        </trans-unit>
        <trans-unit id="e31e979e3edc39254b9a5c52d82e5a30deadc675" translate="yes" xml:space="preserve">
          <source>The panic built-in function stops normal execution of the current goroutine. When a function F calls panic, normal execution of F stops immediately. Any functions whose execution was deferred by F are run in the usual way, and then F returns to its caller. To the caller G, the invocation of F then behaves like a call to panic, terminating G's execution and running any deferred functions. This continues until all functions in the executing goroutine have stopped, in reverse order. At that point, the program is terminated with a non-zero exit code. This termination sequence is called panicking and can be controlled by the built-in function recover.</source>
          <target state="translated">Встроенная функция паники останавливает нормальное выполнение текущего гортани.Когда функция F вызывает панику,нормальное выполнение F останавливается немедленно.Любые функции,выполнение которых было отложено F,выполняются обычным образом,после чего F возвращается к своему вызывающему абоненту.Затем вызов F вызывает вызывающего абонента G,который ведет себя как вызов паники,прерывая выполнение G и выполняя любые отложенные функции.Это продолжается до тех пор,пока все функции исполняющего горутина не остановятся в обратном порядке.В этот момент программа завершается ненулевым кодом выхода.Эта последовательность завершения называется паникерской и может управляться встроенной функцией восстановления.</target>
        </trans-unit>
        <trans-unit id="af4f035528815b22e373ca233969d1eeb80da9ab" translate="yes" xml:space="preserve">
          <source>The parse functions return the widest type (float64, int64, and uint64), but if the size argument specifies a narrower width the result can be converted to that narrower type without data loss:</source>
          <target state="translated">Функции разбора возвращают самый широкий тип (float64,int64,uint64),но если аргумент size указывает более узкую ширину,то результат может быть приведен к этому более узкому типу без потери данных:</target>
        </trans-unit>
        <trans-unit id="a18efb4bf749b7c5acc3a4bfaddc4a2e6898762f" translate="yes" xml:space="preserve">
          <source>The parser accepts a larger language than is syntactically permitted by the Go spec, for simplicity, and for improved robustness in the presence of syntax errors. For instance, in method declarations, the receiver is treated like an ordinary parameter list and thus may contain multiple entries where the spec permits exactly one. Consequently, the corresponding field in the AST (ast.FuncDecl.Recv) field is not restricted to one entry.</source>
          <target state="translated">Парсер принимает более крупный язык,чем синтаксически разрешенный Go spec,за простоту и улучшенную робастность при наличии синтаксических ошибок.Например,в объявлениях методов приемник рассматривается как обычный список параметров и,таким образом,может содержать несколько записей,где спецификация разрешает именно одну.Следовательно,соответствующее поле в поле AST (ast.FuncDecl.Recv)не ограничивается одной записью.</target>
        </trans-unit>
        <trans-unit id="f1b15ae7c535ec21c3b3214f780b2381f7617014" translate="yes" xml:space="preserve">
          <source>The path and host are used unchanged for CONNECT requests.</source>
          <target state="translated">Путь и хост используются для запросов ПОДКЛЮЧЕНИЯ без изменений.</target>
        </trans-unit>
        <trans-unit id="185477acd3fd456d75fb7c4fc53e2fc58b8c4aaf" translate="yes" xml:space="preserve">
          <source>The path package should only be used for paths separated by forward slashes, such as the paths in URLs. This package does not deal with Windows paths with drive letters or backslashes; to manipulate operating system paths, use the path/filepath package.</source>
          <target state="translated">Пакет path должен использоваться только для путей,разделенных прямыми косыми чертами,например,пути в URL.Этот пакет не работает с путями Windows с буквами дисков или обратными слэшами;для манипулирования путями операционной системы используйте пакет path/filepath.</target>
        </trans-unit>
        <trans-unit id="26954c9ca56cc48a56a0453ce2488e2f260ed60b" translate="yes" xml:space="preserve">
          <source>The pkg/ directory holds installed package objects. As in the Go tree, each target operating system and architecture pair has its own subdirectory of pkg (pkg/GOOS_GOARCH).</source>
          <target state="translated">В каталоге pkg/хранятся объекты установленных пакетов.Как и в дереве Go,каждая целевая пара операционной системы и архитектуры имеет свой подкаталог pkg (pkg/GOOS_GOARCH).</target>
        </trans-unit>
        <trans-unit id="5a87eb4ca6fbc546df6339993053151079409112" translate="yes" xml:space="preserve">
          <source>The precision prec controls the number of digits (excluding the exponent) printed by the 'e', 'E', 'f', 'g', 'G', 'x', and 'X' formats. For 'e', 'E', 'f', 'x', and 'X', it is the number of digits after the decimal point. For 'g' and 'G' it is the maximum number of significant digits (trailing zeros are removed). The special precision -1 uses the smallest number of digits necessary such that ParseFloat will return f exactly.</source>
          <target state="translated">Прецизионный прецизионный контроль количества цифр (исключая экспоненту),печатаемых форматами 'e','E','f','g','G','x' и 'X'.Для форматов 'e','E','f','x' и 'X' это количество цифр после запятой.Для 'g' и 'G'-это максимальное количество значащих цифр (удаляются трейлинговые нули).Особая точность -1 использует наименьшее количество необходимых цифр,чтобы ParseFloat возвращал f точно.</target>
        </trans-unit>
        <trans-unit id="69078c80b7be9ecb1f89b1ab519c7b7264b1d687" translate="yes" xml:space="preserve">
          <source>The precision prec controls the number of digits (excluding the exponent) printed by the 'e', 'E', 'f', 'g', 'G', and 'x' formats. For 'e', 'E', 'f', and 'x', it is the number of digits after the decimal point. For 'g' and 'G' it is the total number of digits. A negative precision selects the smallest number of decimal digits necessary to identify the value x uniquely using x.Prec() mantissa bits. The prec value is ignored for the 'b' and 'p' formats.</source>
          <target state="translated">Для форматов 'e','E','f' и 'x' это количество цифр после запятой.Для форматов 'g' и 'G' это общее количество цифр.Отрицательная точность выбирает наименьшее количество десятичных цифр,необходимое для уникальной идентификации значения x с помощью мантиссовых битов x.Prec().Значение точности игнорируется для форматов 'b' и 'p'.</target>
        </trans-unit>
        <trans-unit id="456c4a02a800a4453e3d726e233dc51ff74f0fc9" translate="yes" xml:space="preserve">
          <source>The predefined profiles may assign meaning to other debug values; for example, when printing the &quot;goroutine&quot; profile, debug=2 means to print the goroutine stacks in the same form that a Go program uses when dying due to an unrecovered panic.</source>
          <target state="translated">Предопределённые профили могут присваивать значение другим отладочным значениям;например,при печати профиля &quot;goroutine&quot;,debug=2 означает вывод на печать стека &quot;goroutine&quot; в том же виде,в каком программа Go использует при умирании из-за невосстановившейся паники.</target>
        </trans-unit>
        <trans-unit id="58481973143a6de618e8538c648e764b31b42f2b" translate="yes" xml:space="preserve">
          <source>The print built-in function formats its arguments in an implementation-specific way and writes the result to standard error. Print is useful for bootstrapping and debugging; it is not guaranteed to stay in the language.</source>
          <target state="translated">Встроенная функция печати форматирует свои аргументы в зависимости от реализации и записывает результат в стандартную ошибку.Печать полезна при загрузке и отладке;она не гарантированно останется на языке.</target>
        </trans-unit>
        <trans-unit id="91f04de49b9af203098665c6f8b752b5392b78a0" translate="yes" xml:space="preserve">
          <source>The println built-in function formats its arguments in an implementation-specific way and writes the result to standard error. Spaces are always added between arguments and a newline is appended. Println is useful for bootstrapping and debugging; it is not guaranteed to stay in the language.</source>
          <target state="translated">Встроенная функция распечатки форматирует свои аргументы в зависимости от реализации и записывает результат в стандартную ошибку.Пробелы всегда добавляются между аргументами и добавляется новая строка.Println полезен при загрузке и отладке;он не гарантированно останется на языке.</target>
        </trans-unit>
        <trans-unit id="151eef92ef01a650c4a9036a013718d694ffc693" translate="yes" xml:space="preserve">
          <source>The provided Context must be non-nil. If the context expires before the connection is complete, an error is returned. Once successfully connected, any expiration of the context will not affect the connection.</source>
          <target state="translated">Предоставленный контекст не должен быть нулевым.Если срок действия контекста истекает до завершения соединения,возвращается ошибка.После успешного подключения любое истечение срока действия контекста не повлияет на соединение.</target>
        </trans-unit>
        <trans-unit id="0e411a42789a39be423654b810b14a1d819d3f7a" translate="yes" xml:space="preserve">
          <source>The provided TxOptions is optional and may be nil if defaults should be used. If a non-default isolation level is used that the driver doesn't support, an error will be returned.</source>
          <target state="translated">Предоставляемые опции TxOptions являются необязательными и могут быть нулевыми,если необходимо использовать настройки по умолчанию.Если используется уровень изоляции по умолчанию,который драйвер не поддерживает,будет возвращена ошибка.</target>
        </trans-unit>
        <trans-unit id="decd2b405e8241c6f8e12f33bd5a3bb2cc5dc04e" translate="yes" xml:space="preserve">
          <source>The provided body may be nil. If the body is of type *bytes.Reader, *strings.Reader, or *bytes.Buffer, the Request.ContentLength is set.</source>
          <target state="translated">Предоставленное тело может быть нулевым.Если тело имеет тип *bytes.Reader,*strings.Reader или *bytes.Buffer,то устанавливается длина запроса.ContentLength.</target>
        </trans-unit>
        <trans-unit id="58ddb87ccdb3a3bbf17dded9af2e6f690f9fa593" translate="yes" xml:space="preserve">
          <source>The provided code should be in the 3xx range and is usually StatusMovedPermanently, StatusFound or StatusSeeOther.</source>
          <target state="translated">Предоставляемый код должен быть в диапазоне 3xx и обычно является StatusMovedPermanently,StatusFound или StatusSeeOther.</target>
        </trans-unit>
        <trans-unit id="86be20106cb95d195cb582ade394435819f24514" translate="yes" xml:space="preserve">
          <source>The provided context is used for the preparation of the statement, not for the execution of the statement.</source>
          <target state="translated">Представленный контекст используется для подготовки заявления,а не для его исполнения.</target>
        </trans-unit>
        <trans-unit id="dd14eed153c5e1b07e7490871396f032fee4f925" translate="yes" xml:space="preserve">
          <source>The provided context is used to kill the process (by calling os.Process.Kill) if the context becomes done before the command completes on its own.</source>
          <target state="translated">Предоставленный контекст используется для того,чтобы убить процесс (вызовом os.Process.Kill),если контекст становится выполненным до того,как команда завершится самостоятельно.</target>
        </trans-unit>
        <trans-unit id="a4964ee167f777b88ff9017caa2a6e7f575494e2" translate="yes" xml:space="preserve">
          <source>The provided context is used until the transaction is committed or rolled back. If the context is canceled, the sql package will roll back the transaction. Tx.Commit will return an error if the context provided to BeginTx is canceled.</source>
          <target state="translated">Приведенный контекст используется до тех пор,пока сделка не будет совершена или откат не произойдет.Если контекст отменяется,пакет sql откатит транзакцию.Tx.Commit вернет ошибку,если контекст,предоставленный в BeginTx,будет отменен.</target>
        </trans-unit>
        <trans-unit id="08a11fcf0761deb535b1afddd2450e0cb1b073dd" translate="yes" xml:space="preserve">
          <source>The provided context will be used for the preparation of the context, not for the execution of the returned statement. The returned statement will run in the transaction context.</source>
          <target state="translated">Представленный контекст будет использоваться для подготовки контекста,а не для исполнения возвращенного заявления.Возвращаемое сообщение будет выполняться в контексте операции.</target>
        </trans-unit>
        <trans-unit id="36087efe71a5f2727d53bfdfa94ece516eb41424" translate="yes" xml:space="preserve">
          <source>The provided key must be comparable and should not be of type string or any other built-in type to avoid collisions between packages using context. Users of WithValue should define their own types for keys. To avoid allocating when assigning to an interface{}, context keys often have concrete type struct{}. Alternatively, exported context key variables' static type should be a pointer or interface.</source>
          <target state="translated">Предоставляемый ключ должен быть сопоставимым и не должен быть строкового типа или любого другого встроенного типа,чтобы избежать столкновений между пакетами,использующими контекст.Пользователи WithValue должны определить свои собственные типы для ключей.Чтобы избежать выделения при назначении интерфейсу{},контекстные ключи часто имеют конкретную типовую структуру{}.В качестве альтернативы,статический тип экспортируемых контекстных клавиш должен быть указателем или интерфейсом.</target>
        </trans-unit>
        <trans-unit id="85ad36caa7041b29ad99437d10d43da203313ed0" translate="yes" xml:space="preserve">
          <source>The race detector kills the program if it exceeds 8192 concurrent goroutines, so use care when running parallel tests with the -race flag set.</source>
          <target state="translated">Детектор гонки убивает программу,если она превышает 8192 одновременных гориллы,поэтому будьте внимательны при выполнении параллельных тестов с установленным флагом -race.</target>
        </trans-unit>
        <trans-unit id="8b5744dbc3f5965d88d3d9f6581899823cd536e1" translate="yes" xml:space="preserve">
          <source>The rand parameter is used as a source of entropy to ensure that encrypting the same message twice doesn't result in the same ciphertext.</source>
          <target state="translated">Параметр rand используется в качестве источника энтропии для того,чтобы шифрование одного и того же сообщения дважды не приводило к одному и тому же шифрованному тексту.</target>
        </trans-unit>
        <trans-unit id="9b3902f0d9da9da0e87784ba5652f4c8601d4919" translate="yes" xml:space="preserve">
          <source>The random parameter is used as a source of entropy to ensure that encrypting the same message twice doesn't result in the same ciphertext.</source>
          <target state="translated">Случайный параметр используется в качестве источника энтропии для обеспечения того,чтобы шифрование одного и того же сообщения дважды не приводило к получению одного и того же зашифрованного текста.</target>
        </trans-unit>
        <trans-unit id="cf169dddc14ea8341fcb30899e22a5fa61df4712" translate="yes" xml:space="preserve">
          <source>The random parameter, if not nil, is used to blind the private-key operation and avoid timing side-channel attacks. Blinding is purely internal to this function &amp;ndash; the random data need not match that used when encrypting.</source>
          <target state="translated">Параметр random, если не nil, используется, чтобы скрыть операцию с секретным ключом и избежать атак по побочному каналу по времени. Ослепление является чисто внутренним для этой функции - случайные данные не обязательно должны совпадать с данными, используемыми при шифровании.</target>
        </trans-unit>
        <trans-unit id="2314ea9b04c810fb371325317bf102a02d2d59d0" translate="yes" xml:space="preserve">
          <source>The rawurl may be relative (a path, without a host) or absolute (starting with a scheme). Trying to parse a hostname and path without a scheme is invalid but may not necessarily return an error, due to parsing ambiguities.</source>
          <target state="translated">Сырая нефть может быть относительной (путь,без хозяина)или абсолютной (начиная со схемы).Попытка разобрать имя хоста и путь без схемы является недействительной,но не обязательно может вернуть ошибку из-за неоднозначности разбора.</target>
        </trans-unit>
        <trans-unit id="239176c955d354cb84e342df1da6a160a09d1822" translate="yes" xml:space="preserve">
          <source>The read and write halves of the connection are serialized independently, so no interlocking is required. However each half may be accessed concurrently so the implementation of conn should protect against concurrent reads or concurrent writes.</source>
          <target state="translated">Половинки соединения для чтения и записи сериализуются независимо друг от друга,поэтому никакой блокировки не требуется.Однако каждая половина может быть доступна одновременно,поэтому реализация соединения должна защищать от одновременного чтения или одновременной записи.</target>
        </trans-unit>
        <trans-unit id="b43ec28ed349612adbaa799bb6c92934c3b075dc" translate="yes" xml:space="preserve">
          <source>The real built-in function returns the real part of the complex number c. The return value will be floating point type corresponding to the type of c.</source>
          <target state="translated">Вещественная встроенная функция возвращает вещественную часть комплексного числа c.Возвращаемым значением будет тип с плавающей точкой,соответствующий типу c.</target>
        </trans-unit>
        <trans-unit id="9bb09164885f351e6fb900da553f1e63b375bfa9" translate="yes" xml:space="preserve">
          <source>The recognized day of week formats are &quot;Mon&quot; and &quot;Monday&quot;. The recognized month formats are &quot;Jan&quot; and &quot;January&quot;.</source>
          <target state="translated">Распознаваемыми днями недели являются &quot;Пн&quot; и &quot;Понедельник&quot;.Признанные форматы месяца-&quot;Январь&quot; и &quot;Январь&quot;.</target>
        </trans-unit>
        <trans-unit id="2c571daa54e2fb7d0c128741daf715a11d1e44fe" translate="yes" xml:space="preserve">
          <source>The recover built-in function allows a program to manage behavior of a panicking goroutine. Executing a call to recover inside a deferred function (but not any function called by it) stops the panicking sequence by restoring normal execution and retrieves the error value passed to the call of panic. If recover is called outside the deferred function it will not stop a panicking sequence. In this case, or when the goroutine is not panicking, or if the argument supplied to panic was nil, recover returns nil. Thus the return value from recover reports whether the goroutine is panicking.</source>
          <target state="translated">Встроенная функция восстановления позволяет программе управлять поведением паникующего горутина.Выполнение вызова для восстановления внутри отложенной функции (но не любой вызываемой ею функции)останавливает последовательность паники,восстанавливая нормальное выполнение,и извлекает значение ошибки,переданное при вызове паники.Если восстановление вызывается вне отложенной функции,оно не останавливает последовательность паники.В этом случае,или когда горутин не паникует,или если аргумент,приведенный к панике,равен нулю,восстановление возвращает ноль.Таким образом,возвращаемое из recover значение сообщает,паникует ли горутин.</target>
        </trans-unit>
        <trans-unit id="ff14ed6c9720c452a0294998e96d92039ec86474" translate="yes" xml:space="preserve">
          <source>The regexp implementation provided by this package is guaranteed to run in time linear in the size of the input. (This is a property not guaranteed by most open source implementations of regular expressions.) For more information about this property, see</source>
          <target state="translated">Реализация регеxp,предоставляемая данным пакетом,гарантированно выполняется во времени линейно по размеру входа.(Это свойство не гарантируется большинством открытых реализаций регулярных выражений).Подробнее об этом свойстве см.</target>
        </trans-unit>
        <trans-unit id="e4c94cab05a4e2263ef4f912bc17e254d9de85c1" translate="yes" xml:space="preserve">
          <source>The regionType is used to classify regions, so there should be only a handful of unique region types.</source>
          <target state="translated">Для классификации регионов используется regionType,поэтому должно быть только несколько уникальных типов регионов.</target>
        </trans-unit>
        <trans-unit id="613161bf225c19a5f2c8859dc32ad7cbf64fe341" translate="yes" xml:space="preserve">
          <source>The regular expression syntax understood by this package when parsing with the Perl flag is as follows. Parts of the syntax can be disabled by passing alternate flags to Parse.</source>
          <target state="translated">Синтаксис регулярных выражений,понимаемый данным пакетом при разборе с флагом Perl,следующий.Часть синтаксиса может быть отключена передачей альтернативных флагов Parse.</target>
        </trans-unit>
        <trans-unit id="414d3f9a62c65f403de754cbbecda8b294ef6a05" translate="yes" xml:space="preserve">
          <source>The remaining patterns enumerate the only valid conversions from uintptr to Pointer.</source>
          <target state="translated">Остальные шаблоны перечисляют единственные верные преобразования из uintptr в Pointer.</target>
        </trans-unit>
        <trans-unit id="f01d454f6a8093b81d93ec48391c3d15861fea72" translate="yes" xml:space="preserve">
          <source>The remaining signals are asynchronous signals. They are not triggered by program errors, but are instead sent from the kernel or from some other program.</source>
          <target state="translated">Остальные сигналы являются асинхронными.Они не вызваны программными ошибками,а исходят от ядра или от какой-то другой программы.</target>
        </trans-unit>
        <trans-unit id="b6f243f72fd3fe537acd4a5fca41b95e81ce45b9" translate="yes" xml:space="preserve">
          <source>The representation of types is described below. When a type is defined on a given connection between an Encoder and Decoder, it is assigned a signed integer type id. When Encoder.Encode(v) is called, it makes sure there is an id assigned for the type of v and all its elements and then it sends the pair (typeid, encoded-v) where typeid is the type id of the encoded type of v and encoded-v is the gob encoding of the value v.</source>
          <target state="translated">Представление типов описано ниже.Когда тип определен на заданном соединении между Кодировщиком и Декодером,ему присваивается знаковый целочисленный идентификатор типа.При вызове Encoder.Encode(v),он убеждается,что для типа v и всех его элементов присвоен id,а затем посылает пару (typeid,encoded-v),где typeid-идентификатор типа кодируемого типа v,а encoded-v-кодировка gob значения v.</target>
        </trans-unit>
        <trans-unit id="cd667628565a5086d3e9895b56322424dc5621cd" translate="yes" xml:space="preserve">
          <source>The request Body, if non-nil, will be closed by the underlying Transport, even on errors.</source>
          <target state="translated">Запросивший Орган,если он не будет заполнен,будет закрыт соответствующим транспортом,даже по ошибке.</target>
        </trans-unit>
        <trans-unit id="d4e026c3f59ca2f49146d499574e033e155a3b79" translate="yes" xml:space="preserve">
          <source>The resolver decision can be overridden by setting the netdns value of the GODEBUG environment variable (see package runtime) to go or cgo, as in:</source>
          <target state="translated">Решение резольвера можно отменить,установив значение netdns переменной окружения GODEBUG (см.&quot;Время выполнения пакета&quot;)на &quot;go&quot; или &quot;cgo&quot;,как описано выше:</target>
        </trans-unit>
        <trans-unit id="85ba008f9a41b800d285074394b704f73cc09894" translate="yes" xml:space="preserve">
          <source>The rest of this package comment may be skipped on first reading; it includes details necessary to understand escaping contexts and error messages. Most users will not need to understand these details.</source>
          <target state="translated">Остальной комментарий пакета можно пропустить при первом чтении;он включает в себя подробности,необходимые для понимания контекста экранирования и сообщений об ошибках.Большинству пользователей не нужно будет понимать эти детали.</target>
        </trans-unit>
        <trans-unit id="5f29380aa9a229b911cfb4cbcef02c25951562ac" translate="yes" xml:space="preserve">
          <source>The rest of this section gives the precise details of how operations use monotonic clocks, but understanding those details is not required to use this package.</source>
          <target state="translated">В остальной части этого раздела приведены точные детали того,как операции используют монотонные часы,но понимание этих деталей не требуется для использования данного пакета.</target>
        </trans-unit>
        <trans-unit id="b7f11101676a7b7c4f383ade5d8d3f82131c1b53" translate="yes" xml:space="preserve">
          <source>The result of Scan is one of these tokens or a Unicode character.</source>
          <target state="translated">Результатом Сканирования является один из этих маркеров или символ Юникода.</target>
        </trans-unit>
        <trans-unit id="4646462be207e1c8f655d521c7883b8db5be5339" translate="yes" xml:space="preserve">
          <source>The results of a benchmark run.</source>
          <target state="translated">Результаты контрольного прогона.</target>
        </trans-unit>
        <trans-unit id="6be7e87ff9924a05b7bc2a7006d807f1fab39e3d" translate="yes" xml:space="preserve">
          <source>The returned *Float f is nil and the value of z is valid but not defined if an error is reported.</source>
          <target state="translated">Возвращаемое *Float f равно нулю,а значение z является действительным,но не определяется,если поступает сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="bac86830681be1d31b72f9f7791b1c44ac2452e7" translate="yes" xml:space="preserve">
          <source>The returned Cmd's Args field is constructed from the command name followed by the elements of arg, so arg should not include the command name itself. For example, Command(&quot;echo&quot;, &quot;hello&quot;). Args[0] is always name, not the possibly resolved Path.</source>
          <target state="translated">Возвращаемое поле Args в Cmd строится из имени команды,за которым следуют элементы arg,поэтому arg не должен включать само имя команды.Например,Command(&quot;echo&quot;,&quot;hello&quot;).Args[0]-это всегда имя,а не возможно разрешенный путь.</target>
        </trans-unit>
        <trans-unit id="fe921f2e96cf2be56c2bf49f4740170d8dd45071" translate="yes" xml:space="preserve">
          <source>The returned Conn, if any, will always be of type *Conn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc6a14f8ce0d88107543f9f02901b96c67b460c" translate="yes" xml:space="preserve">
          <source>The returned DB is safe for concurrent use by multiple goroutines and maintains its own pool of idle connections. Thus, the Open function should be called just once. It is rarely necessary to close a DB.</source>
          <target state="translated">Возвращаемая БД безопасна для одновременного использования несколькими горутинами и поддерживает собственный пул простаивающих соединений.Таким образом,функция Open должна быть вызвана всего один раз.Редко бывает необходимо закрыть БД.</target>
        </trans-unit>
        <trans-unit id="c94572c3b7d816968d78d57402944f7efb4246e7" translate="yes" xml:space="preserve">
          <source>The returned DB is safe for concurrent use by multiple goroutines and maintains its own pool of idle connections. Thus, the OpenDB function should be called just once. It is rarely necessary to close a DB.</source>
          <target state="translated">Возвращаемая БД безопасна для одновременного использования несколькими горутинами и поддерживает собственный пул простаивающих соединений.Таким образом,функция OpenDB должна вызываться всего один раз.Редко бывает необходимо закрыть БД.</target>
        </trans-unit>
        <trans-unit id="33f1666e076b57e7a3379acacb81a7ec24e7d31d" translate="yes" xml:space="preserve">
          <source>The returned RawConn only supports calling Control. Read and Write return an error.</source>
          <target state="translated">Возвращаемый RawConn поддерживает только вызов Control.Read and Write (Чтение и запись)возвращает ошибку.</target>
        </trans-unit>
        <trans-unit id="00382818b7b561dcf8c2e41afc3acbf78809ee7a" translate="yes" xml:space="preserve">
          <source>The returned Response will have at least its StatusCode, Header, Body, and optionally Trailer populated. More fields may be populated in the future, so callers should not DeepEqual the result in tests.</source>
          <target state="translated">Возвращаемый ответ будет содержать,по крайней мере,код статуса,заголовок,кузов и,опционально,прицеп.В будущем может быть заполнено большее количество полей,поэтому звонящие не должны DeepEqual получать результат в тестах.</target>
        </trans-unit>
        <trans-unit id="f4f37717fc57244b8b099472fa87f281f196d58d" translate="yes" xml:space="preserve">
          <source>The returned context is always non-nil; it defaults to the background context.</source>
          <target state="translated">Возвращаемый контекст всегда равен нулю;по умолчанию он соответствует фоновому контексту.</target>
        </trans-unit>
        <trans-unit id="9cbe06fbabaade2695a345469e46bbf5011eaae5" translate="yes" xml:space="preserve">
          <source>The returned end function is used to mark the task's end. The trace tool measures task latency as the time between task creation and when the end function is called, and provides the latency distribution per task type. If the end function is called multiple times, only the first call is used in the latency measurement.</source>
          <target state="translated">Функция возврата конца используется для маркировки конца задачи.Инструмент трассировки измеряет латентность задачи как время между созданием задачи и вызовом конечной функции и обеспечивает распределение латентности по типу задачи.Если конечная функция вызывается несколько раз,то при измерении задержки используется только первый вызов.</target>
        </trans-unit>
        <trans-unit id="f0a8feeaa4dbaf36e773a52f49c0b0ac6bb7e74a" translate="yes" xml:space="preserve">
          <source>The returned error is nil if the command runs, has no problems copying stdin, stdout, and stderr, and exits with a zero exit status.</source>
          <target state="translated">Возвращаемая ошибка равна нулю,если команда выполняется,не имеет проблем с копированием stdin,stdout и stderr,и выходит со статусом нулевого выхода.</target>
        </trans-unit>
        <trans-unit id="4d6b3f09dc97620be2a232fb3dc17468c15d1426" translate="yes" xml:space="preserve">
          <source>The returned list does not identify the associated interface; use Interfaces and Interface.Addrs for more detail.</source>
          <target state="translated">Возвращаемый список не идентифицирует соответствующий интерфейс;для более подробной информации используйте Interfaces и Interface.Addrs.</target>
        </trans-unit>
        <trans-unit id="c6a6b1723d6bc4ac24e64af0ce75d94122db9245" translate="yes" xml:space="preserve">
          <source>The returned memory allocator statistics are up to date as of the call to ReadMemStats. This is in contrast with a heap profile, which is a snapshot as of the most recently completed garbage collection cycle.</source>
          <target state="translated">Статистика возвращаемого аллокатора памяти актуальна на момент вызова ReadMemStats.Это контрастирует с профилем кучи,который является снимком последнего завершенного цикла сбора мусора.</target>
        </trans-unit>
        <trans-unit id="a6ee6f83dacc73003b6dade23a5eca55ab60b66f" translate="yes" xml:space="preserve">
          <source>The returned os.File's file descriptor is different from the connection's. Attempting to change properties of the original using this duplicate may or may not have the desired effect.</source>
          <target state="translated">Возвращаемый дескриптор файла os.File отличается от дескриптора соединения.Попытка изменить свойства оригинала с помощью этого дубликата может иметь или не иметь желаемого эффекта.</target>
        </trans-unit>
        <trans-unit id="5927f2050b65cd29032e207117c8b2d6ca472e54" translate="yes" xml:space="preserve">
          <source>The returned path ends in a slash only if it is the root &quot;/&quot;.</source>
          <target state="translated">Возвращаемый путь заканчивается косой чертой только в том случае,если это корень &quot;/&quot;.</target>
        </trans-unit>
        <trans-unit id="004ac519a1c16ea761d189382ea9cc0c1b68b7d1" translate="yes" xml:space="preserve">
          <source>The returned path ends in a slash only if it represents a root directory, such as &quot;/&quot; on Unix or `C:\` on Windows.</source>
          <target state="translated">Возвращаемый путь заканчивается косой чертой,только если он представляет корневую директорию,такую как &quot;/&quot; в Unix или `C:\` в Windows.</target>
        </trans-unit>
        <trans-unit id="709611ccac6cb61ed7ee0c2fc8499ed7e268fed4" translate="yes" xml:space="preserve">
          <source>The returned profile may be up to two garbage collection cycles old. This is to avoid skewing the profile toward allocations; because allocations happen in real time but frees are delayed until the garbage collector performs sweeping, the profile only accounts for allocations that have had a chance to be freed by the garbage collector.</source>
          <target state="translated">Возвращаемый профиль может быть до двух циклов сбора мусора старым.Это сделано во избежание перекоса профиля в сторону распределений;поскольку распределения происходят в реальном времени,а освобождение освобожденного мусора откладывается до тех пор,пока сборщик мусора не выполнит очистку,профиль учитывает только те распределения,которые имели шанс быть освобожденными сборщиком мусора.</target>
        </trans-unit>
        <trans-unit id="2fcbc7cecfbd88a968cff813905d726fdf40b131" translate="yes" xml:space="preserve">
          <source>The returned slice is the certificate in DER encoding.</source>
          <target state="translated">Возвращаемый кусок-это сертификат в кодировке DER.</target>
        </trans-unit>
        <trans-unit id="01c758564c188da314abf0218bd7cfbe2c752f80" translate="yes" xml:space="preserve">
          <source>The returned slice is the certificate request in DER encoding.</source>
          <target state="translated">Возвращаемый фрагмент-это запрос сертификата в DER-кодировке.</target>
        </trans-unit>
        <trans-unit id="56ef9da288a159e17f780d686422f0dfcfa221a7" translate="yes" xml:space="preserve">
          <source>The returned statement operates within the transaction and can no longer be used once the transaction has been committed or rolled back.</source>
          <target state="translated">Возвращаемый отчет действует в рамках операции и больше не может быть использован после совершения или отката операции.</target>
        </trans-unit>
        <trans-unit id="eaef2ac25b5ec95632c077f9297b6bf55f5dd3f6" translate="yes" xml:space="preserve">
          <source>The returned statement operates within the transaction and will be closed when the transaction has been committed or rolled back.</source>
          <target state="translated">Возвращаемый отчет действует в рамках сделки и будет закрыт,когда сделка будет совершена или откатится назад.</target>
        </trans-unit>
        <trans-unit id="10df7eea472cec1ead17a66cb1fdaefe2e6578cc" translate="yes" xml:space="preserve">
          <source>The returned string is meant for debugging; for a stable serialized representation, use t.MarshalText, t.MarshalBinary, or t.Format with an explicit format string.</source>
          <target state="translated">Возвращаемая строка предназначена для отладки;для стабильного сериализованного представления используйте t.MarshalText,t.MarshalBinary или t.Format со строкой явного форматирования.</target>
        </trans-unit>
        <trans-unit id="48866f9aa69c2bb04dcb85d20c5a3c1d2d405ca8" translate="yes" xml:space="preserve">
          <source>The rule Title uses for word boundaries does not handle Unicode punctuation properly.</source>
          <target state="translated">Правило Title,используемое для границ слов,не корректно обрабатывает знаки препинания Юникода.</target>
        </trans-unit>
        <trans-unit id="f80f01b0edf7103d5ecb8ca06eb4e22919710f70" translate="yes" xml:space="preserve">
          <source>The same Context may be passed to functions running in different goroutines; Contexts are safe for simultaneous use by multiple goroutines.</source>
          <target state="translated">Один и тот же Контекст может быть передан функциям,выполняющимся в разных горутинах;Контексты безопасны для одновременного использования несколькими горутинами.</target>
        </trans-unit>
        <trans-unit id="a401c4efb67cc0055f52caa84dcf2de0d8f63cd7" translate="yes" xml:space="preserve">
          <source>The second argument, quote, specifies the type of literal being parsed and therefore which escaped quote character is permitted. If set to a single quote, it permits the sequence \' and disallows unescaped '. If set to a double quote, it permits \&quot; and disallows unescaped &quot;. If set to zero, it does not permit either escape and allows both quote characters to appear unescaped.</source>
          <target state="translated">Второй аргумент,кавычки,определяет тип разбираемого литерала и,следовательно,допустимый символ экранированной кавычки.Если задать единственную кавычку,то разрешается последовательность \' и запрещается unescaped '.Если задать двойную кавычку,то разрешит \&quot; и запретит unescaped &quot;.Если установлено в ноль,то это не разрешает ни экранирование,ни кавычки,и разрешает оба символа в кавычках выглядеть неэкранированными.</target>
        </trans-unit>
        <trans-unit id="40a1d3ecbed0bf217ec97ece1c42e914315bd313" translate="yes" xml:space="preserve">
          <source>The security model used by this package assumes that template authors are trusted, while Execute's data parameter is not. More details are provided below.</source>
          <target state="translated">Модель безопасности,используемая этим пакетом,предполагает,что авторы шаблонов доверяют,а параметр данных Execute-нет.Более подробная информация представлена ниже.</target>
        </trans-unit>
        <trans-unit id="a70cb84ae80d93013971dc3c09e0dd11fbe3a660" translate="yes" xml:space="preserve">
          <source>The server calls (for HTTP service):</source>
          <target state="translated">Вызов сервера (для услуги HTTP):</target>
        </trans-unit>
        <trans-unit id="4694acea63f5ebf8b8be35e4e84982505cd7d21a" translate="yes" xml:space="preserve">
          <source>The server may handle requests on a single connection by calling ServeConn. More typically it will create a network listener and call Accept or, for an HTTP listener, HandleHTTP and http.Serve.</source>
          <target state="translated">Сервер может обрабатывать запросы по одному соединению,позвонив в ServeConn.Обычно он создает сетевой приемник и звонит в Accept или,для приемника HTTP,в HandleHTTP и http.Serve.</target>
        </trans-unit>
        <trans-unit id="901fd3527b931189389dc8b05aa80a401b308de0" translate="yes" xml:space="preserve">
          <source>The set of available CPUs is checked by querying the operating system at process startup. Changes to operating system CPU allocation after process startup are not reflected.</source>
          <target state="translated">Набор доступных ЦПУ проверяется путем запроса операционной системы при запуске процесса.Изменения в распределении ЦПУ операционной системы после ввода процесса в эксплуатацию не отражаются.</target>
        </trans-unit>
        <trans-unit id="10e3cd17c3685da24fcde871ef4da00a080771a9" translate="yes" xml:space="preserve">
          <source>The signals SIGKILL and SIGSTOP may not be caught by a program, and therefore cannot be affected by this package.</source>
          <target state="translated">Сигналы SIGKILL и SIGSTOP не могут быть пойманы программой,и поэтому не могут быть затронуты данным пакетом.</target>
        </trans-unit>
        <trans-unit id="7621705ac03f21ac222836c967959708135562eb" translate="yes" xml:space="preserve">
          <source>The simplest use of a Scanner, to read standard input as a set of lines.</source>
          <target state="translated">Самое простое использование сканера,для чтения стандартного входа в виде набора строк.</target>
        </trans-unit>
        <trans-unit id="9c0657904725889b0c9ba75534abc4f635bc0b2b" translate="yes" xml:space="preserve">
          <source>The size of a CRC-32 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы CRC-32 в байтах.</target>
        </trans-unit>
        <trans-unit id="3ff608e7233df0580119a8a262ba634622895d8a" translate="yes" xml:space="preserve">
          <source>The size of a CRC-64 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы CRC-64 в байтах.</target>
        </trans-unit>
        <trans-unit id="caae8e5aad6dbb0160181390b9818b080d122c80" translate="yes" xml:space="preserve">
          <source>The size of a SHA-1 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы SHA-1 в байтах.</target>
        </trans-unit>
        <trans-unit id="cea16f97cc88534275f0e03f305d57951a36e34b" translate="yes" xml:space="preserve">
          <source>The size of a SHA224 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы SHA224 в байтах.</target>
        </trans-unit>
        <trans-unit id="3a1556147bf25a0038243a962f16bc9d44b98e20" translate="yes" xml:space="preserve">
          <source>The size of a SHA256 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы SHA256 в байтах.</target>
        </trans-unit>
        <trans-unit id="fb49c909a50ec86545c33e34c0f3d64148914e03" translate="yes" xml:space="preserve">
          <source>The size of an Adler-32 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы Адлера-32 в байтах.</target>
        </trans-unit>
        <trans-unit id="edf1ef16cc66ffa121682ca1207ef5467651c4f4" translate="yes" xml:space="preserve">
          <source>The size of an MD5 checksum in bytes.</source>
          <target state="translated">Размер контрольной суммы MD5 в байтах.</target>
        </trans-unit>
        <trans-unit id="248e03e24b52c36053fea2b5fabdbb42fe255abb" translate="yes" xml:space="preserve">
          <source>The skip parameter has the same meaning as runtime.Caller's skip and controls where the stack trace begins. Passing skip=0 begins the trace in the function calling Add. For example, given this execution stack:</source>
          <target state="translated">Параметр skip имеет то же значение,что и runtime.Caller's skip и управляет тем,где начинается трасса стека.Пропуск=0 начинает трассу в функции,вызывающей Add.Например,учитывая этот стек выполнения:</target>
        </trans-unit>
        <trans-unit id="b675e8a3e2a529e23f6f667c1adf36c39ed93efb" translate="yes" xml:space="preserve">
          <source>The slice returned by this method consists of all the substrings of s not contained in the slice returned by FindAllString. When called on an expression that contains no metacharacters, it is equivalent to strings.SplitN.</source>
          <target state="translated">Возвращаемый этим методом ломтик состоит из всех подложек s,не содержащихся в ломтике,возвращаемом FindAllString.При вызове выражения,не содержащего мета-символов,оно эквивалентно строке.SplitN.</target>
        </trans-unit>
        <trans-unit id="37fc7946d5ac5fa1638ca298818fb97686f9142e" translate="yes" xml:space="preserve">
          <source>The smtp package is frozen and is not accepting new features. Some external packages provide more functionality. See:</source>
          <target state="translated">Пакет smtp заморожен и не принимает новых функций.Некоторые внешние пакеты предоставляют больше функциональности.Смотрите:</target>
        </trans-unit>
        <trans-unit id="37671db71f74ceff10a366ff8f17e7a0a28fae66" translate="yes" xml:space="preserve">
          <source>The sort is not guaranteed to be stable. For a stable sort, use SliceStable.</source>
          <target state="translated">Сорт не гарантированно будет стабильным.Для стабильного сорта используйте SliceStable.</target>
        </trans-unit>
        <trans-unit id="17c5e77086e67a3f2c51a48bac9596dffc360456" translate="yes" xml:space="preserve">
          <source>The source and destination values/types need not correspond exactly. For structs, fields (identified by name) that are in the source but absent from the receiving variable will be ignored. Fields that are in the receiving variable but missing from the transmitted type or value will be ignored in the destination. If a field with the same name is present in both, their types must be compatible. Both the receiver and transmitter will do all necessary indirection and dereferencing to convert between gobs and actual Go values. For instance, a gob type that is schematically,</source>
          <target state="translated">Значения/типы источника и места назначения не обязательно должны точно совпадать.Для структур,поля (идентифицируемые по имени),которые находятся в источнике,но отсутствуют в принимающей переменной,будут игнорироваться.Поля,находящиеся в принимающей переменной,но отсутствующие в передаваемом типе или значении,будут игнорироваться в приемнике.Если поле с одинаковым именем присутствует в обоих,то их типы должны быть совместимы.И приемник,и передатчик будут делать все необходимые идирекции и разыменования,чтобы преобразовать между gobs и фактические значения Go.Например,тип варочных панелей,который является схематичным,</target>
        </trans-unit>
        <trans-unit id="0268779129500cf4856c5f56fd67106abaf097eb" translate="yes" xml:space="preserve">
          <source>The source code could include additional Go code. That code was never compiled but would be processed by tools like godoc and might be useful as end-user documentation.</source>
          <target state="translated">Исходный код может включать дополнительный код Go.Этот код никогда не компилировался,а обрабатывался бы такими инструментами,как godoc,и мог бы быть полезен в качестве документации для конечного пользователя.</target>
        </trans-unit>
        <trans-unit id="535d0edaef1db8d5c1dc136b1a303868255bb996" translate="yes" xml:space="preserve">
          <source>The source:</source>
          <target state="translated">Источник:</target>
        </trans-unit>
        <trans-unit id="e645e5bfb164f126d92a3414aa1a585176c8e465" translate="yes" xml:space="preserve">
          <source>The sql package checks for value checkers in the following order, stopping at the first found match: Stmt.NamedValueChecker, Conn.NamedValueChecker, Stmt.ColumnConverter, DefaultParameterConverter.</source>
          <target state="translated">Пакет sql проверяет на наличие шашек стоимости в следующем порядке,останавливаясь на первом найденном совпадении:Stmt.NamedValueChecker,Conn.NamedValueChecker,Stmt.ColumnConverter,DefaultParameterConverter.</target>
        </trans-unit>
        <trans-unit id="bf35db5d84a5c59679d57c2063978bf2973a302c" translate="yes" xml:space="preserve">
          <source>The sql package creates and frees connections automatically; it also maintains a free pool of idle connections. If the database has a concept of per-connection state, such state can be reliably observed within a transaction (Tx) or connection (Conn). Once DB.Begin is called, the returned Tx is bound to a single connection. Once Commit or Rollback is called on the transaction, that transaction's connection is returned to DB's idle connection pool. The pool size can be controlled with SetMaxIdleConns.</source>
          <target state="translated">Пакет sql автоматически создает и освобождает соединения;он также поддерживает свободный пул простаивающих соединений.Если БД имеет понятие состояния per-connection,то такое состояние может быть надежно отслежено в рамках транзакции (Tx)или соединения (Conn).После вызова DB.Begin возвращаемый Tx привязывается к одному соединению.После вызова Commit или Rollback по транзакции,соединение этой транзакции возвращается в пул простаивающих соединений БД.Размер пула можно контролировать с помощью SetMaxIdleConns.</target>
        </trans-unit>
        <trans-unit id="14c50009f306ef9ba308a3f9f45cb12ceab6e041" translate="yes" xml:space="preserve">
          <source>The sql package must be used in conjunction with a database driver. See &lt;a href=&quot;https://golang.org/s/sqldrivers&quot;&gt;https://golang.org/s/sqldrivers&lt;/a&gt; for a list of drivers.</source>
          <target state="translated">Пакет sql необходимо использовать вместе с драйвером базы данных. См. &lt;a href=&quot;https://golang.org/s/sqldrivers&quot;&gt;Https://golang.org/s/sqldrivers&lt;/a&gt; для получения списка драйверов.</target>
        </trans-unit>
        <trans-unit id="ff11c76849e5520b5d3c1908876a0a08249bbd90" translate="yes" xml:space="preserve">
          <source>The src/ directory holds source code. The path below 'src' determines the import path or executable name.</source>
          <target state="translated">В каталоге src/хранится исходный код.Путь под 'src' определяет путь импорта или имя исполняемого файла.</target>
        </trans-unit>
        <trans-unit id="51fce287253a04b9aa4e50fe0cda26970eb0eeca" translate="yes" xml:space="preserve">
          <source>The statements prepared for a transaction by calling the transaction's Prepare or Stmt methods are closed by the call to Commit or Rollback.</source>
          <target state="translated">Выписки,подготовленные для сделки путем вызова методов Prepare или Stmt сделки,закрываются путем вызова методов Commit или Rollback.</target>
        </trans-unit>
        <trans-unit id="266ee83c3a485624a9ce3be711986c42904d65df" translate="yes" xml:space="preserve">
          <source>The swap operation, implemented by the SwapT functions, is the atomic equivalent of:</source>
          <target state="translated">Операция подкачки,реализованная функциями SwapT,является атомным эквивалентом:</target>
        </trans-unit>
        <trans-unit id="78109ee602f829fc62630aa0958e0668bde1d9d0" translate="yes" xml:space="preserve">
          <source>The symbolizer function may be nil, in which case the results of the traceback function will be displayed as numbers. If the traceback function is nil, the symbolizer function will never be called. The context function may be nil, in which case the traceback function will only be called with the context field set to zero. If the context function is nil, then calls from Go to C to Go will not show a traceback for the C portion of the call stack.</source>
          <target state="translated">Функция символизатора может быть нулевой,в этом случае результаты работы функции трассировки будут отображаться в виде чисел.Если функция обратной связи равна нулю,то функция символизатора никогда не будет вызвана.Контекстная функция может быть равна нулю,в этом случае функция обратной связи будет вызываться только при установленном нулевом значении контекстного поля.Если значение контекстной функции равно нулю,то при вызове функции Обратная связь для C части стека вызовов не будет отображаться.</target>
        </trans-unit>
        <trans-unit id="7f3f65f4777096791e56d64b25eeec76abb44bfa" translate="yes" xml:space="preserve">
          <source>The symbolizer function will be called with a single argument, a pointer to a struct:</source>
          <target state="translated">Функция символизатора будет вызвана с единственным аргументом-указателем на структуру:</target>
        </trans-unit>
        <trans-unit id="826b161e82b6e953fc66964167887f9fb128e89d" translate="yes" xml:space="preserve">
          <source>The syntax of such definitions is to surround each template declaration with a &quot;define&quot; and &quot;end&quot; action.</source>
          <target state="translated">Синтаксис таких определений заключается в том,чтобы окружить каждую шаблонную декларацию действием &quot;определить&quot; и &quot;завершить&quot;.</target>
        </trans-unit>
        <trans-unit id="a896d242a72cd56df044b310d3d7e48636436044" translate="yes" xml:space="preserve">
          <source>The syntax of the regular expressions accepted is the same general syntax used by Perl, Python, and other languages. More precisely, it is the syntax accepted by RE2 and described at &lt;a href=&quot;https://golang.org/s/re2syntax&quot;&gt;https://golang.org/s/re2syntax&lt;/a&gt;, except for \C. For an overview of the syntax, run</source>
          <target state="translated">Синтаксис принятых регулярных выражений - тот же общий синтаксис, который используется Perl, Python и другими языками. Точнее, это синтаксис, принятый RE2 и описанный на &lt;a href=&quot;https://golang.org/s/re2syntax&quot;&gt;https://golang.org/s/re2syntax&lt;/a&gt; , за исключением \ C. Для обзора синтаксиса запустите</target>
        </trans-unit>
        <trans-unit id="ba2393e2ef8002ea106da87efa718a59742fc7ac" translate="yes" xml:space="preserve">
          <source>The syslog package is frozen and is not accepting new features. Some external packages provide more functionality. See:</source>
          <target state="translated">Пакет syslog заморожен и не принимает новых функций.Некоторые внешние пакеты предоставляют больше функциональности.Смотрите:</target>
        </trans-unit>
        <trans-unit id="99e701177eab165c110f7e05395c5e3f3462fc8b" translate="yes" xml:space="preserve">
          <source>The table's lower portion shows specialized features of each format, such as supported string encodings, support for sub-second timestamps, or support for sparse files.</source>
          <target state="translated">В нижней части таблицы показаны специализированные функции каждого формата,такие как поддерживаемые строковые кодировки,поддержка субсекундных меток времени или поддержка разреженных файлов.</target>
        </trans-unit>
        <trans-unit id="e6cfcc2895da4e068fb4279dd7ba0aaf57b5ca4f" translate="yes" xml:space="preserve">
          <source>The table's upper portion shows the Header fields, where each format reports the maximum number of bytes allowed for each string field and the integer type used to store each numeric field (where timestamps are stored as the number of seconds since the Unix epoch).</source>
          <target state="translated">В верхней части таблицы отображаются поля заголовка,где каждый формат сообщает максимальное количество байт,допустимое для каждого строкового поля,и целочисленный тип,используемый для хранения каждого числового поля (где метки времени хранятся в виде количества секунд с эпохи Unix).</target>
        </trans-unit>
        <trans-unit id="b0a984b621ec68366c5b1261f609a8ab7bb45ea3" translate="yes" xml:space="preserve">
          <source>The tag must be one that takes string values: DT_NEEDED, DT_SONAME, DT_RPATH, or DT_RUNPATH.</source>
          <target state="translated">Тэг должен быть таким,который принимает строковые значения:DT_NEEDED,DT_SONAME,DT_RPATH или DT_RUNPATH.</target>
        </trans-unit>
        <trans-unit id="cbe588a5ff1a44ccc9c3b05cfac0b378253441ae" translate="yes" xml:space="preserve">
          <source>The target is the RFC 7230 &quot;request-target&quot;: it may be either a path or an absolute URL. If target is an absolute URL, the host name from the URL is used. Otherwise, &quot;example.com&quot; is used.</source>
          <target state="translated">Целью является RFC 7230 &quot;запрос-цель&quot;:это может быть как путь,так и абсолютный URL.Если целевой является абсолютным URL,используется имя хоста из URL.В противном случае используется &quot;example.com&quot;.</target>
        </trans-unit>
        <trans-unit id="a6f845f916ddb97993362899697ada283b05c4e3" translate="yes" xml:space="preserve">
          <source>The taskType is used to classify task instances. Analysis tools like the Go execution tracer may assume there are only a bounded number of unique task types in the system.</source>
          <target state="translated">TaskType используется для классификации экземпляров задач.Инструменты анализа,такие как трассировщик выполнения Go,могут предполагать,что в системе существует только ограниченное количество уникальных типов задач.</target>
        </trans-unit>
        <trans-unit id="87c98cdec407269913a37379692f0119d00836f4" translate="yes" xml:space="preserve">
          <source>The template</source>
          <target state="translated">Шаблон</target>
        </trans-unit>
        <trans-unit id="8dbf1659d9b474dfc6de39448622e749ace9eba6" translate="yes" xml:space="preserve">
          <source>The testing/quick package is frozen and is not accepting new features.</source>
          <target state="translated">Пакет &quot;Тестирование/быстрота&quot; заморожен и не принимает новых функций.</target>
        </trans-unit>
        <trans-unit id="450bac070fc3c1d570ed998a1290dd681976d259" translate="yes" xml:space="preserve">
          <source>The text returned from ReadLine does not include the line end (&quot;\r\n&quot; or &quot;\n&quot;). No indication or error is given if the input ends without a final line end. Calling UnreadByte after ReadLine will always unread the last byte read (possibly a character belonging to the line end) even if that byte is not part of the line returned by ReadLine.</source>
          <target state="translated">Текст,возвращаемый из ReadLine,не включает конец строки (&quot;\r\n&quot; или &quot;\n&quot;).Никаких указаний или ошибок не дается,если входной текст заканчивается без конечного конца строки.Вызов UnreadByte после ReadLine всегда будет считать последний прочитанный байт (возможно,символ,принадлежащий концу строки),даже если этот байт не является частью строки,возвращенной ReadLine.</target>
        </trans-unit>
        <trans-unit id="e19ad8a62ebb2f930cd2d412533e63ab163f9e7f" translate="yes" xml:space="preserve">
          <source>The text/tabwriter package is frozen and is not accepting new features.</source>
          <target state="translated">Текстовый/табрайдерский пакет заморожен и не принимает новых функций.</target>
        </trans-unit>
        <trans-unit id="b8b4c6c4010154e59471f9dc5acececde45e4c79" translate="yes" xml:space="preserve">
          <source>The time zone database needed by LoadLocation may not be present on all systems, especially non-Unix systems. LoadLocation looks in the directory or uncompressed zip file named by the ZONEINFO environment variable, if any, then looks in known installation locations on Unix systems, and finally looks in $GOROOT/lib/time/zoneinfo.zip.</source>
          <target state="translated">База данных часовых поясов,необходимая для LoadLocation,может присутствовать не на всех системах,особенно не на Unix-системах.LoadLocation ищет в каталоге или несжатом zip-файле,названном переменной окружения ZONEINFO,если она есть,затем ищет в известных местах установки на Unix-системах,и,наконец,ищет в $GOROOT/lib/time/zoneinfo.zip.</target>
        </trans-unit>
        <trans-unit id="d9d95ea8fa35077316d58a8c096d78c878d9e8de" translate="yes" xml:space="preserve">
          <source>The timeout includes name resolution, if required. When using TCP, and the host in the address parameter resolves to multiple IP addresses, the timeout is spread over each consecutive dial, such that each is given an appropriate fraction of the time to connect.</source>
          <target state="translated">Тайм-аут включает в себя,при необходимости,разрешение имен.При использовании TCP,и хост в параметре адреса разрешается на несколько IP-адресов,таймаут распределяется по каждому последовательному набору,так что каждому из них дается соответствующая доля времени на соединение.</target>
        </trans-unit>
        <trans-unit id="1be65b230e905dbffd21fbadb56320938e08062d" translate="yes" xml:space="preserve">
          <source>The tools that process the memory profiles assume that the profile rate is constant across the lifetime of the program and equal to the current value. Programs that change the memory profiling rate should do so just once, as early as possible in the execution of the program (for example, at the beginning of main).</source>
          <target state="translated">Инструменты,обрабатывающие профили памяти,предполагают,что скорость профиля постоянна в течение всего времени жизни программы и равна текущему значению.Программы,изменяющие скорость профилирования памяти,должны делать это всего один раз,как можно раньше на этапе исполнения программы (например,в начале основного).</target>
        </trans-unit>
        <trans-unit id="1a177d1df849e44bddcb9ba4d4be3d9812f21f16" translate="yes" xml:space="preserve">
          <source>The trace tool computes the latency of a task by measuring the time between the task creation and the task end and provides latency distributions for each task type found in the trace.</source>
          <target state="translated">Инструмент трассировки вычисляет латентность задачи,измеряя время между созданием задачи и ее концом,и обеспечивает распределение латентности для каждого типа задачи,найденного в трассе.</target>
        </trans-unit>
        <trans-unit id="62d0bac03a171fb89c5dd19570b301f5442565f7" translate="yes" xml:space="preserve">
          <source>The traceback and context functions may be called from a signal handler, and must therefore use only async-signal safe functions. The symbolizer function may be called while the program is crashing, and so must be cautious about using memory. None of the functions may call back into Go.</source>
          <target state="translated">Обратная связь и контекстные функции могут вызываться обработчиком сигналов и поэтому должны использовать только функции безопасности асинхронных сигналов.Функция символизатора может быть вызвана во время аварийного завершения работы программы,поэтому следует с осторожностью относиться к использованию памяти.Ни одна из функций не может быть вызвана обратно в Go.</target>
        </trans-unit>
        <trans-unit id="64b5d618701b94606e91495371f70fb5b100120e" translate="yes" xml:space="preserve">
          <source>The traceback function will be called with a single argument, a pointer to a struct:</source>
          <target state="translated">Функция трассировки будет вызвана с единственным аргументом,указателем на структуру:</target>
        </trans-unit>
        <trans-unit id="fbcd1af40286bdefbe9605ee1269e5d70a141d29" translate="yes" xml:space="preserve">
          <source>The two methods Network and String conventionally return strings that can be passed as the arguments to Dial, but the exact form and meaning of the strings is up to the implementation.</source>
          <target state="translated">Два метода Network и String условно возвращают строки,которые могут быть переданы в качестве аргументов для Dial,но точная форма и значение строк зависит от реализации.</target>
        </trans-unit>
        <trans-unit id="ee1fff48d57b4264c60df5732fa6d287858ca513" translate="yes" xml:space="preserve">
          <source>The typ argument may be a defined (Named) type or an alias type. It may also be nil such that the returned TypeName can be used as argument for NewNamed, which will set the TypeName's type as a side- effect.</source>
          <target state="translated">Аргументом типа может быть определенный (именованный)тип или тип псевдонима.Он также может быть нулевым,чтобы возвращаемое имя типа могло быть использовано в качестве аргумента для NewNamed,который будет устанавливать тип TypeName в качестве побочного эффекта.</target>
        </trans-unit>
        <trans-unit id="761242af94989502320341408ab25169d28b2151" translate="yes" xml:space="preserve">
          <source>The typical use case for NewFileTransport is to register the &quot;file&quot; protocol with a Transport, as in:</source>
          <target state="translated">Типичным случаем использования NewFileTransport является регистрация &quot;файлового&quot; протокола на Transport,как в случае с NewFileTransport:</target>
        </trans-unit>
        <trans-unit id="c9dec8fd9ff2613dd03956d5301652519fcaec0c" translate="yes" xml:space="preserve">
          <source>The underlying filesystem may truncate or round the values to a less precise time unit. If there is an error, it will be of type *PathError.</source>
          <target state="translated">Базовая файловая система может усекать или округлять значения до менее точной единицы времени.В случае ошибки она будет иметь тип *PathError.</target>
        </trans-unit>
        <trans-unit id="bc08db1aae610f1545a452a1bb5a7582597ab3b7" translate="yes" xml:space="preserve">
          <source>The usage message will appear on a separate line for anything but a bool flag with a one-byte name. For bool flags, the type is omitted and if the flag name is one byte the usage message appears on the same line. The parenthetical default is omitted if the default is the zero value for the type. The listed type, here int, can be changed by placing a back-quoted name in the flag's usage string; the first such item in the message is taken to be a parameter name to show in the message and the back quotes are stripped from the message when displayed. For instance, given</source>
          <target state="translated">Сообщение об использовании появится в отдельной строке для чего угодно,кроме флага bool с однобайтовым именем.Для флагов bool тип опускается,а если имя флага однобайтовое,то сообщение об использовании появится в той же строке.Кодовое значение по умолчанию опускается,если по умолчанию это нулевое значение для типа.Перечисленный тип,здесь int,может быть изменён путём помещения в строку использования флага имени в обратной кавычке;первым таким элементом в сообщении считается имя параметра для отображения в сообщении,а обратные кавычки убираются из сообщения при отображении.Например,учитывая</target>
        </trans-unit>
        <trans-unit id="7175f6a7da0429173b6be919d1c9513e0498e3e7" translate="yes" xml:space="preserve">
          <source>The value 0xff was chosen because it cannot appear in a valid UTF-8 sequence.</source>
          <target state="translated">Значение 0xff было выбрано потому,что оно не может появиться в действительной последовательности UTF-8.</target>
        </trans-unit>
        <trans-unit id="e4328a7e24cd2970818970fe425c0b1b3c86f9d7" translate="yes" xml:space="preserve">
          <source>The variadic argument controls whether the function is variadic. FuncOf panics if the in[len(in)-1] does not represent a slice and variadic is true.</source>
          <target state="translated">Вариадический аргумент контролирует,является ли функция вариадической.FuncOf паникует,если in[len(in)-1]не представляет срез,а вариадический является верным.</target>
        </trans-unit>
        <trans-unit id="1e72c26ccaadcb98e76249dcd1c8f3cdb175e9de" translate="yes" xml:space="preserve">
          <source>The varint functions encode and decode single integer values using a variable-length encoding; smaller values require fewer bytes. For a specification, see &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/encoding&quot;&gt;https://developers.google.com/protocol-buffers/docs/encoding&lt;/a&gt;.</source>
          <target state="translated">Функции varint кодируют и декодируют одиночные целочисленные значения с использованием кодирования переменной длины; меньшие значения требуют меньше байтов. Спецификацию см. На &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/encoding&quot;&gt;странице https://developers.google.com/protocol-buffers/docs/encoding&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cdb175715a8f3e26508e589b1b8622549f73fd8" translate="yes" xml:space="preserve">
          <source>The verbs behave analogously to those of Printf. For example, %x will scan an integer as a hexadecimal number, and %v will scan the default representation format for the value. The Printf verbs %p and %T and the flags # and + are not implemented. For floating-point and complex values, all valid formatting verbs (%b %e %E %f %F %g %G %x %X and %v) are equivalent and accept both decimal and hexadecimal notation (for example: &quot;2.3e+7&quot;, &quot;0x4.5p-8&quot;) and digit-separating underscores (for example: &quot;3.14159_26535_89793&quot;).</source>
          <target state="translated">Глаголы ведут себя аналогично глаголам Принтфа.Например,%x будет сканировать целое число как шестнадцатеричное число,а %v будет сканировать значение в формате представления по умолчанию.Глаголы %p и %T в Printf и флаги#и+не реализованы.Для значений с плавающей точкой и комплексных значений все правильные форматирующие глаголы (%b %e %E %f %F %g %G %x %X и %v)эквивалентны и принимают как десятичную,так и шестнадцатеричную нотацию (например:&quot;2.3e+7&quot;,&quot;0x4.5p-8&quot;)и символы подчеркивания,разделенные по разрядам (например:&quot;3.14159_26535_89793&quot;).</target>
        </trans-unit>
        <trans-unit id="a6ebe1343c13ca95e202e147b7f816ef1bc435a4" translate="yes" xml:space="preserve">
          <source>The verbs:</source>
          <target state="translated">Глаголы:</target>
        </trans-unit>
        <trans-unit id="3ce9ac6782ffe3c2b00e6a4b78b2ec7b810f1491" translate="yes" xml:space="preserve">
          <source>The writes of individual records are buffered. After all data has been written, the client should call the Flush method to guarantee all data has been forwarded to the underlying io.Writer. Any errors that occurred should be checked by calling the Error method.</source>
          <target state="translated">Записи отдельных записей буферизируются.После записи всех данных клиент должен обратиться к методу Flush,чтобы гарантировать,что все данные были перенаправлены в соответствующий io.Writer.Любые возникшие ошибки следует проверять путем вызова метода Error.</target>
        </trans-unit>
        <trans-unit id="c7efdce3a929526f7cd0a0a9c837645401afe311" translate="yes" xml:space="preserve">
          <source>The zero (uninitialized) value for a Float is ready to use and represents the number +0.0 exactly, with precision 0 and rounding mode ToNearestEven.</source>
          <target state="translated">Нулевое (неинициализированное)значение для Float готово к использованию и представляет собой число +0.0 точно,с точностью 0 и режимом округления ToNearestEven.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
