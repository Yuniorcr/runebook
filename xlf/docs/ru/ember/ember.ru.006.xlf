<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="23489b054c9d1e661085fd7ade8acb2475375094" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_component&quot;&gt;&lt;code&gt;{{component}}&lt;/code&gt;&lt;/a&gt; helper can be used to defer the selection of a component to run time. The &lt;code&gt;{{my-component}}&lt;/code&gt; syntax always renders the same component, while using the &lt;code&gt;{{component}}&lt;/code&gt; helper allows choosing a component to render on the fly. This is useful in cases where you want to interact with different external libraries depending on the data. Using the &lt;code&gt;{{component}}&lt;/code&gt; helper would allow you to keep different logic well separated.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_component&quot;&gt; &lt;code&gt;{{component}}&lt;/code&gt; &lt;/a&gt; хелпер может быть использован , чтобы отложить выбор компонента на время выполнения. &lt;code&gt;{{my-component}}&lt;/code&gt; Синтаксис всегда делает один и тот же компонент, в то время как с помощью &lt;code&gt;{{component}}&lt;/code&gt; помощник позволяет выбрать компонент для отображения на лету. Это полезно в тех случаях, когда вы хотите взаимодействовать с разными внешними библиотеками в зависимости от данных. Использование помощника &lt;code&gt;{{component}}&lt;/code&gt; позволит вам четко разделить различную логику.</target>
        </trans-unit>
        <trans-unit id="80ffe12423c4f4418b92c52ce25e13ca8840255f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_debugger&quot;&gt;&lt;code&gt;{{debugger}}&lt;/code&gt;&lt;/a&gt; helper provides a handlebars equivalent to JavaScript's &lt;code&gt;debugger&lt;/code&gt; keyword. It will halt execution inside the debugger helper and give you the ability to inspect the current rendering context:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_debugger&quot;&gt; &lt;code&gt;{{debugger}}&lt;/code&gt; &lt;/a&gt; помощник обеспечивает рули , эквивалентные в JavaScript &lt;code&gt;debugger&lt;/code&gt; ключевого слова. Он остановит выполнение внутри помощника отладчика и даст вам возможность проверить текущий контекст рендеринга:</target>
        </trans-unit>
        <trans-unit id="8c8f61b48bfab920e95655c42840396a2f3f8014" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each&quot;&gt;&lt;code&gt;{{#each}}&lt;/code&gt;&lt;/a&gt; helper can have a corresponding &lt;code&gt;{{else}}&lt;/code&gt;. The contents of this block will render if the array passed to &lt;code&gt;{{#each}}&lt;/code&gt; is empty:</source>
          <target state="translated">У помощника &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each&quot;&gt; &lt;code&gt;{{#each}}&lt;/code&gt; &lt;/a&gt; может быть соответствующий &lt;code&gt;{{else}}&lt;/code&gt; . Содержимое этого блока будет отображаться, если массив, переданный в &lt;code&gt;{{#each}}&lt;/code&gt; , пуст:</target>
        </trans-unit>
        <trans-unit id="6a5dfe3aacaf09268ef43166eeb9e8edcded68ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each-in&quot;&gt;&lt;code&gt;{{#each-in}}&lt;/code&gt;&lt;/a&gt; helper can have a matching &lt;code&gt;{{else}}&lt;/code&gt;. The contents of this block will render if the object is empty, null, or undefined:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each-in&quot;&gt; &lt;code&gt;{{#each-in}}&lt;/code&gt; &lt;/a&gt; помощник может иметь соответствия &lt;code&gt;{{else}}&lt;/code&gt; . Содержимое этого блока будет отображаться, если объект является пустым, нулевым или неопределенным:</target>
        </trans-unit>
        <trans-unit id="b327dbd565eb9fdd986c4b054241ad5e30065698" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_get&quot;&gt;&lt;code&gt;{{get}}&lt;/code&gt;&lt;/a&gt; helper makes it easy to dynamically send the value of a variable to another helper or component. This can be useful if you want to output one of several values based on the result of a computed property.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_get&quot;&gt; &lt;code&gt;{{get}}&lt;/code&gt; &lt;/a&gt; помощник делает его легко динамически отправить значение переменного в другой помощник или компоненту. Это может быть полезно, если вы хотите вывести одно из нескольких значений на основе результата вычисленного свойства.</target>
        </trans-unit>
        <trans-unit id="61302d7882e1a4a6e553fe68b02feeeae75416e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;&lt;code&gt;{{input}}&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt;&lt;code&gt;{{textarea}}&lt;/code&gt;&lt;/a&gt; helpers in Ember.js are the easiest way to create common form controls. Using these helpers, you can create form controls that are almost identical to the native HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements, but are aware of Ember's two-way bindings and can automatically update.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt; &lt;code&gt;{{input}}&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt; &lt;code&gt;{{textarea}}&lt;/code&gt; &lt;/a&gt; помощники в ember.js самый простой способ создания общих элементов управления формы. Используя эти помощники, вы можете создавать элементы управления формы, которые почти идентичны собственным элементам HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; , но знают о двусторонних привязках Ember и могут автоматически обновляться.</target>
        </trans-unit>
        <trans-unit id="b85d9f0441c7c29d7da9b855a389e22f68bcf461" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_log&quot;&gt;&lt;code&gt;{{log}}&lt;/code&gt;&lt;/a&gt; helper makes it easy to output variables or expressions in the current rendering context into your browser's console:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_log&quot;&gt; &lt;code&gt;{{log}}&lt;/code&gt; &lt;/a&gt; помощник делает его легко выходные переменные или выражения в текущем контексте рендеринга в консоль браузера:</target>
        </trans-unit>
        <trans-unit id="17f528362a0405c2911a3e6d031edc5b960dfd08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_fillIn&quot;&gt;&lt;code&gt;fillIn&lt;/code&gt;&lt;/a&gt; helper &quot;fills in&quot; the given text into an input field matching the given selector.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_fillIn&quot;&gt; &lt;code&gt;fillIn&lt;/code&gt; &lt;/a&gt; помощник &amp;laquo;заполняет&amp;raquo; данный текст в поле ввода , соответствующем заданный селектор.</target>
        </trans-unit>
        <trans-unit id="fadd4ef675168e49d87ffb530f6637c11e100846" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_keyEvent&quot;&gt;&lt;code&gt;keyEvent&lt;/code&gt;&lt;/a&gt; helper sends a key stroke event to the UI, simulating the user typing a key.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_keyEvent&quot;&gt; &lt;code&gt;keyEvent&lt;/code&gt; &lt;/a&gt; помощник отправляет событие нажатия клавиши хода к UI, имитируя пользователь вводит ключ.</target>
        </trans-unit>
        <trans-unit id="0aef6d62598e457e26c06a939a5185bf766acd4c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;DS.JSONAPIAdapter&lt;/a&gt; has a handful of hooks that are commonly used to extend it to work with non-standard backends.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;DS.JSONAPIAdapter&lt;/a&gt; имеет несколько крючков, которые обычно используются , чтобы распространить его на работу с нестандартными движков.</target>
        </trans-unit>
        <trans-unit id="484456215b5f899d8ed5e829d7551272461d51b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/tutorial&quot;&gt;Google Maps API&lt;/a&gt; requires us to reference its library from a remote script. In this case we'll provide this script to our Ember app via an Addon called &lt;code&gt;ember-simple-google-maps&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/tutorial&quot;&gt;API Карт Google&lt;/a&gt; требует , чтобы ссылаться на свою библиотеку с удаленного сценария. В этом случае мы предоставим этот скрипт нашему приложению Ember через аддон под названием &lt;code&gt;ember-simple-google-maps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="721d0aca3cae4958efdc2c786984eea8d65f5f0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/#toc_other-assets&quot;&gt;&lt;code&gt;vendor&lt;/code&gt; directory&lt;/a&gt; in Ember is a special directory where you can include content that gets compiled into your application. When Ember CLI builds our app from our source code, it copies &lt;code&gt;ember-tutorial.css&lt;/code&gt; into a file called &lt;code&gt;vendor.css&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/#toc_other-assets&quot;&gt; &lt;code&gt;vendor&lt;/code&gt; каталога&lt;/a&gt; в Эмбер специальный каталог , где вы можете включить содержимое , которое получает скомпилированный в приложение. Когда Ember CLI собирает наше приложение из исходного кода, он копирует &lt;code&gt;ember-tutorial.css&lt;/code&gt; в файл с именем &lt;code&gt;vendor.css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3296c43c92a794424bfcbe162e716bebeab8f9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://guides.emberjs.com/object-model/&quot;&gt;Object Model&lt;/a&gt; section of the Guides describes how to write computed properties, observers, and bindings without prototype extensions. Below you can learn about how to convert existing code to the format now encouraged.</source>
          <target state="translated">В разделе &amp;laquo; &lt;a href=&quot;https://guides.emberjs.com/object-model/&quot;&gt;Объектная модель&lt;/a&gt; &amp;raquo; руководств описывается, как писать вычисляемые свойства, наблюдателей и привязки без расширений прототипов. Ниже вы можете узнать, как преобразовать существующий код в формат, который сейчас рекомендуется.</target>
        </trans-unit>
        <trans-unit id="3016cd065a1ea33674454f4b4409c5a76ecee77d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ApplicationInstance&lt;/code&gt; encapsulates all of the stateful aspects of a running &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ApplicationInstance&lt;/code&gt; инкапсулирует все сохраняющее состояние аспектов беговой &lt;code&gt;Application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f930fd3f23af023ef9f744a703e14d94dcebcaeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BlogPost&lt;/code&gt; model would have properties like:</source>
          <target state="translated">Модель &lt;code&gt;BlogPost&lt;/code&gt; будет иметь такие свойства, как:</target>
        </trans-unit>
        <trans-unit id="fae849844f7c3ca3ad9b933a44e600ae65479143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BroadwayStar&lt;/code&gt; class contains three methods: &lt;code&gt;say()&lt;/code&gt;, &lt;code&gt;sing()&lt;/code&gt;, and &lt;code&gt;dance()&lt;/code&gt;.</source>
          <target state="translated">Класс &lt;code&gt;BroadwayStar&lt;/code&gt; содержит три метода: &lt;code&gt;say()&lt;/code&gt; , &lt;code&gt;sing()&lt;/code&gt; и &lt;code&gt;dance()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d63f1b0f445b29ddfc61aeec73fb12eb211d5567" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContainerDebugAdapter&lt;/code&gt; helps the container and resolver interface with tools that debug Ember such as the &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;Ember Inspector&lt;/a&gt; for Chrome and Firefox.</source>
          <target state="translated">&lt;code&gt;ContainerDebugAdapter&lt;/code&gt; помогает контейнер и распознавателя интерфейс с инструментами , которые отладки Эмбер , таких как &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;Ember инспектора&lt;/a&gt; для Chrome и Firefox.</target>
        </trans-unit>
        <trans-unit id="2b819ff65f7652ad8943fa82a80ca24f474b2a1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DS.BooleanTransform&lt;/code&gt; class is used to serialize and deserialize boolean attributes on Ember Data record objects. This transform is used when &lt;code&gt;boolean&lt;/code&gt; is passed as the type parameter to the &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;DS.attr&lt;/a&gt; function.</source>
          <target state="translated">Класс &lt;code&gt;DS.BooleanTransform&lt;/code&gt; используется для сериализации и десериализации логических атрибутов в объектах записи Ember Data. Это преобразование используется, когда &lt;code&gt;boolean&lt;/code&gt; передается в качестве параметра &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;типа&lt;/a&gt; функции DS.attr .</target>
        </trans-unit>
        <trans-unit id="bd3e9a0eed710efe4a88384528b918c339217700" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DS.DateTransform&lt;/code&gt; class is used to serialize and deserialize date attributes on Ember Data record objects. This transform is used when &lt;code&gt;date&lt;/code&gt; is passed as the type parameter to the &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;DS.attr&lt;/a&gt; function. It uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;&lt;code&gt;ISO 8601&lt;/code&gt;&lt;/a&gt; standard.</source>
          <target state="translated">Класс &lt;code&gt;DS.DateTransform&lt;/code&gt; используется для сериализации и десериализации атрибутов даты в объектах записи Ember Data. Это преобразование используется, когда &lt;code&gt;date&lt;/code&gt; передается в качестве параметра &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;типа&lt;/a&gt; функции DS.attr . Он использует &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt; &lt;code&gt;ISO 8601&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2982cc3dc82ca2b47f88e8fdbe38cb683d0cbfa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DS.Model&lt;/code&gt; states are themselves stateless. What that means is that, the hierarchical states that each of &lt;em&gt;those&lt;/em&gt; points to is a shared data structure. For performance reasons, instead of each record getting its own copy of the hierarchy of states, each record points to this global, immutable shared instance. How does a state know which record it should be acting on? We pass the record instance into the state's event handlers as the first argument.</source>
          <target state="translated">Состояния &lt;code&gt;DS.Model&lt;/code&gt; сами по себе не имеют состояния. Это означает, что иерархические состояния, на которые каждая из &lt;em&gt;этих&lt;/em&gt; точек указывает, является общей структурой данных. По соображениям производительности вместо того, чтобы каждая запись получала свою собственную копию иерархии состояний, каждая запись указывает на этот глобальный неизменяемый общий экземпляр. Как государство узнает, по какой записи оно должно действовать? Мы передаем экземпляр записи в обработчики событий состояния в качестве первого аргумента.</target>
        </trans-unit>
        <trans-unit id="f0eb91368a9212981a5c1132e3c4cf949c7a59b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DS.NumberTransform&lt;/code&gt; class is used to serialize and deserialize numeric attributes on Ember Data record objects. This transform is used when &lt;code&gt;number&lt;/code&gt; is passed as the type parameter to the &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;DS.attr&lt;/a&gt; function.</source>
          <target state="translated">Класс &lt;code&gt;DS.NumberTransform&lt;/code&gt; используется для сериализации и десериализации числовых атрибутов в объектах записи Ember Data. Это преобразование используется, когда &lt;code&gt;number&lt;/code&gt; передается в качестве параметра &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;типа&lt;/a&gt; функции DS.attr .</target>
        </trans-unit>
        <trans-unit id="57ede3918d3480e3b06e6aa03ddac19ce5a83194" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DS.StringTransform&lt;/code&gt; class is used to serialize and deserialize string attributes on Ember Data record objects. This transform is used when &lt;code&gt;string&lt;/code&gt; is passed as the type parameter to the &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;DS.attr&lt;/a&gt; function.</source>
          <target state="translated">Класс &lt;code&gt;DS.StringTransform&lt;/code&gt; используется для сериализации и десериализации строковых атрибутов в объектах записи Ember Data. Это преобразование используется, когда &lt;code&gt;string&lt;/code&gt; передается в качестве параметра &lt;a href=&quot;https://emberjs.com/api/ember-data/data#method_attr&quot;&gt;типа&lt;/a&gt; функции DS.attr .</target>
        </trans-unit>
        <trans-unit id="4c7d84bb5ae36b5bebe679b64273fe856da64324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DS.Transform&lt;/code&gt; class is used to serialize and deserialize model attributes when they are saved or loaded from an adapter. Subclassing &lt;code&gt;DS.Transform&lt;/code&gt; is useful for creating custom attributes. All subclasses of &lt;code&gt;DS.Transform&lt;/code&gt; must implement a &lt;code&gt;serialize&lt;/code&gt; and a &lt;code&gt;deserialize&lt;/code&gt; method.</source>
          <target state="translated">Класс &lt;code&gt;DS.Transform&lt;/code&gt; используется для сериализации и десериализации атрибутов модели, когда они сохраняются или загружаются из адаптера. &lt;code&gt;DS.Transform&lt;/code&gt; подкласса DS.Transform полезно для создания настраиваемых атрибутов. Все подклассы &lt;code&gt;DS.Transform&lt;/code&gt; должны реализовывать методы &lt;code&gt;serialize&lt;/code&gt; и &lt;code&gt;deserialize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e00a79faab114e9901c4f0599964d16729665318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataAdapter&lt;/code&gt; helps a data persistence library interface with tools that debug Ember such as the &lt;a href=&quot;https://github.com/tildeio/ember-extension&quot;&gt;Ember Extension&lt;/a&gt; for Chrome and Firefox.</source>
          <target state="translated">&lt;code&gt;DataAdapter&lt;/code&gt; помогает сохранения информации , библиотеки интерфейса с помощью инструментов, отладки Эмбер , таких как &lt;a href=&quot;https://github.com/tildeio/ember-extension&quot;&gt;Extension Ember&lt;/a&gt; для Chrome и Firefox.</target>
        </trans-unit>
        <trans-unit id="319307645bea1fa807d738e83c0a90cd1cf5ef96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ember.EventDispatcher&lt;/code&gt; responsible for delegating events to this application's views.</source>
          <target state="translated">&lt;code&gt;Ember.EventDispatcher&lt;/code&gt; делегирует события на взгляды этого приложения.</target>
        </trans-unit>
        <trans-unit id="5a1153767edf9a9bc5406d38e28481d0c34bda34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ember.Mixin&lt;/code&gt; class allows you to create mixins, whose properties can be added to other classes. For instance,</source>
          <target state="translated">Класс &lt;code&gt;Ember.Mixin&lt;/code&gt; позволяет создавать миксины, свойства которых можно добавлять в другие классы. Например,</target>
        </trans-unit>
        <trans-unit id="6a4036df61adabd029b6eba87bb294575bc9d7bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ember.Route&lt;/code&gt; class is used to define individual routes. Refer to the &lt;a href=&quot;https://emberjs.com/guides/routing/&quot;&gt;routing guide&lt;/a&gt; for documentation.</source>
          <target state="translated">Класс &lt;code&gt;Ember.Route&lt;/code&gt; используется для определения индивидуальных маршрутов. Обратитесь к &lt;a href=&quot;https://emberjs.com/guides/routing/&quot;&gt;руководству&lt;/a&gt; по маршрутизации для документации.</target>
        </trans-unit>
        <trans-unit id="885e6e3f5749d0e1ec5e434cb9dfa2078fb80a8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ember.Router&lt;/code&gt; class manages the application state and URLs. Refer to the &lt;a href=&quot;https://emberjs.com/guides/routing/&quot;&gt;routing guide&lt;/a&gt; for documentation.</source>
          <target state="translated">Класс &lt;code&gt;Ember.Router&lt;/code&gt; управляет состоянием приложения и URL-адресами. Обратитесь к &lt;a href=&quot;https://emberjs.com/guides/routing/&quot;&gt;руководству&lt;/a&gt; по маршрутизации для документации.</target>
        </trans-unit>
        <trans-unit id="211a8a0ab63aee094d2b679406429c9861efd416" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ember.run&lt;/code&gt; method can be used to create a run loop. In this example, jQuery and &lt;code&gt;Ember.run&lt;/code&gt; are used to handle a click event and run some Ember code.</source>
          <target state="translated">Метод &lt;code&gt;Ember.run&lt;/code&gt; можно использовать для создания цикла выполнения. В этом примере jQuery и &lt;code&gt;Ember.run&lt;/code&gt; используются для обработки события щелчка и запуска некоторого кода Ember.</target>
        </trans-unit>
        <trans-unit id="3c7c53858dc783a25f5941955654a26b7b31a8c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Engine&lt;/code&gt; class contains core functionality for both applications and engines.</source>
          <target state="translated">Класс &lt;code&gt;Engine&lt;/code&gt; содержит основные функции как для приложений, так и для движков.</target>
        </trans-unit>
        <trans-unit id="14638c0630a0a3cff87817f36c2554b1c8d6490b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EngineInstance&lt;/code&gt; encapsulates all of the stateful aspects of a running &lt;code&gt;Engine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EngineInstance&lt;/code&gt; инкапсулирует все сохраняющих состояние аспектов запущенного &lt;code&gt;Engine&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef790b8517960a1d3695e93af0bd1b8f3839440a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSONAPIAdapter&lt;/code&gt; is smart enough to determine the URLs it communicates with based on the name of the model. For example, if you ask for a &lt;code&gt;Post&lt;/code&gt; by ID:</source>
          <target state="translated">&lt;code&gt;JSONAPIAdapter&lt;/code&gt; умна достаточно , чтобы определить URL , с которыми он связан на основе имени модели. Например, если вы запрашиваете &lt;code&gt;Post&lt;/code&gt; по идентификатору:</target>
        </trans-unit>
        <trans-unit id="c950fbe2c97da63e2b034eaca1b0c609b4171279" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSONAPIAdapter&lt;/code&gt; is the default adapter used by Ember Data. It is responsible for transforming the store's requests into HTTP requests that follow the &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON API&lt;/a&gt; format.</source>
          <target state="translated">&lt;code&gt;JSONAPIAdapter&lt;/code&gt; является адаптер по умолчанию используется Ember данных. Он отвечает за преобразование запросов магазина в HTTP-запросы, соответствующие формату &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34c3733779dc0df0421669354af118f5e875520e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSONAPISerializer&lt;/code&gt; expects the backend to return a JSON API Document that follows the JSON API specification and the conventions of the examples found on &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;http://jsonapi.org/format&lt;/a&gt;. This means all type names should be pluralized and attribute and relationship names should be dash-cased. For example, if you request a record from &lt;code&gt;/people/123&lt;/code&gt;, the response should look like this:</source>
          <target state="translated">&lt;code&gt;JSONAPISerializer&lt;/code&gt; ожидает , что бэкенд вернуть JSON API документ , который следует за спецификацией API JSON и условность примеров , найденных на &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;http://jsonapi.org/format&lt;/a&gt; . Это означает, что все имена типов должны быть во множественном числе, а имена атрибутов и отношений должны быть в тире. Например, если вы запрашиваете запись из &lt;code&gt;/people/123&lt;/code&gt; , ответ должен выглядеть так:</target>
        </trans-unit>
        <trans-unit id="a163a2de99844b44ded1af52c454ec8cb95bad1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSONAPISerializer&lt;/code&gt; is built on top of the &lt;code&gt;JSONSerializer&lt;/code&gt; so they share many of the same hooks for customizing the behavior of the serialization process. Be sure to check out the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONSerializer.html&quot;&gt;API docs&lt;/a&gt; for a full list of methods and properties.</source>
          <target state="translated">&lt;code&gt;JSONAPISerializer&lt;/code&gt; построен на вершине &lt;code&gt;JSONSerializer&lt;/code&gt; поэтому они разделяют многие из тех же крючков для настройки поведения процесса сериализации. Не забудьте ознакомиться с полным списком методов и свойств в &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONSerializer.html&quot;&gt;документации&lt;/a&gt; по API .</target>
        </trans-unit>
        <trans-unit id="2372e29f3591a6e06a86749f11f23bc152d06ae0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSONSerializer&lt;/code&gt; normalization process follows these steps:</source>
          <target state="translated">&lt;code&gt;JSONSerializer&lt;/code&gt; процесс нормализации выполняет следующие действия:</target>
        </trans-unit>
        <trans-unit id="b8d7134db8562c548ba83e1398f6d35393db9323" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Last Update: {{lastUpdateTimestamp}}&lt;/code&gt; will be rendered in place of the &lt;code&gt;{{yield}}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Last Update: {{lastUpdateTimestamp}}&lt;/code&gt; будет оказано вместо &lt;code&gt;{{yield}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="595ef6a646450a473c800b0f4386c1825ddf018a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManyArray&lt;/code&gt; is instantiated lazily the first time the relationship is requested.</source>
          <target state="translated">При &lt;code&gt;ManyArray&lt;/code&gt; экземпляр ManyArray .</target>
        </trans-unit>
        <trans-unit id="0dfb03cf2957c12e3cd48a12a2a6c5c0716c3419" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Router.map&lt;/code&gt; function allows you to define mappings from URLs to routes in your application. These mappings are defined within the supplied callback function using &lt;code&gt;this.route&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;Router.map&lt;/code&gt; позволяет определять сопоставления URL-адресов с маршрутами в вашем приложении. Эти сопоставления определяются в поставляемой функции обратного вызова с помощью &lt;code&gt;this.route&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b94bcc514f833c5ef1923bb0c25457ea933534f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; helper allows you to add event listeners to elements and call named functions. By default, the &lt;code&gt;action&lt;/code&gt; helper adds a &lt;code&gt;click&lt;/code&gt; event listener, but it can be used to listen for any element event. Now, when the &lt;code&gt;li&lt;/code&gt; element is clicked a &lt;code&gt;showPerson&lt;/code&gt; function will be called from the &lt;code&gt;actions&lt;/code&gt; object in the &lt;code&gt;people-list&lt;/code&gt; component. Think of this like calling &lt;code&gt;this.actions.showPerson(person)&lt;/code&gt; from our template.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; помощник позволяет добавлять обработчик событий к элементам и вызвать именованные функции. По умолчанию помощник &lt;code&gt;action&lt;/code&gt; добавляет прослушиватель событий &lt;code&gt;click&lt;/code&gt; , но его можно использовать для прослушивания любого события элемента. Теперь, когда &lt;code&gt;showPerson&lt;/code&gt; элемент &lt;code&gt;li&lt;/code&gt; , функция showPerson будет вызываться из объекта &lt;code&gt;actions&lt;/code&gt; в компоненте &lt;code&gt;people-list&lt;/code&gt; . Думайте об этом, как о вызове &lt;code&gt;this.actions.showPerson(person)&lt;/code&gt; из нашего шаблона.</target>
        </trans-unit>
        <trans-unit id="6781996b5d8528d30fde9ec99ae34a524c6762c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;actions&lt;/code&gt; hash will inherit action handlers from the &lt;code&gt;actions&lt;/code&gt; hash defined on extended parent classes or mixins rather than just replace the entire hash, e.g.:</source>
          <target state="translated">&lt;code&gt;actions&lt;/code&gt; хэша унаследуют обработчик действий от &lt;code&gt;actions&lt;/code&gt; хэша - определенный на расширенных классах родительских или Mixins , а не просто заменить весь хэш, например:</target>
        </trans-unit>
        <trans-unit id="9f0188c56bfb8d604ed462187f6484e25c179952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;actions&lt;/code&gt; queue is the general work queue and will typically contain scheduled tasks e.g. promises.</source>
          <target state="translated">Эти &lt;code&gt;actions&lt;/code&gt; очереди общей очередь работ и, как правило , содержат запланированные задания , например , обещание.</target>
        </trans-unit>
        <trans-unit id="41ff0eeabf56cfc059010cc4c18262f67f627814" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;afterRender&lt;/code&gt; queue contains jobs meant to be run after all previously scheduled render tasks are complete. This is often good for 3rd-party DOM manipulation libraries, that should only be run after an entire tree of DOM has been updated.</source>
          <target state="translated">&lt;code&gt;afterRender&lt;/code&gt; очередь содержит рабочие места , предназначенные для запуска после того, как все ранее планировалось вынести задачи выполнены. Это часто хорошо для сторонних библиотек манипуляции DOM, которые следует запускать только после обновления всего дерева DOM.</target>
        </trans-unit>
        <trans-unit id="95d664e2d1d83fcd6e5b1affc99d006e5870087d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;andThen&lt;/code&gt; helper will wait for all preceding asynchronous helpers to complete prior to progressing forward. Let's take a look at the following example.</source>
          <target state="translated">&lt;code&gt;andThen&lt;/code&gt; помощник будет ждать всех предыдущих асинхронных помощникам , чтобы завершить до прогрессирующей вперед. Давайте посмотрим на следующий пример.</target>
        </trans-unit>
        <trans-unit id="4d4a81e4ca7c1ec493df5706886873c52cf64207" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;application&lt;/code&gt; route is entered when your app first boots up. Like other routes, it will load a template with the same name (&lt;code&gt;application&lt;/code&gt; in this case) by default. You should put your header, footer, and any other decorative content here. All other routes will render their templates into the &lt;code&gt;application.hbs&lt;/code&gt; template's &lt;code&gt;{{outlet}}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; маршрут вводится , когда ваше приложение первые ботинки вверх. Как и другие маршруты, она будет загружать шаблон с тем же именем ( &lt;code&gt;application&lt;/code&gt; в данном случае) по умолчанию. Вы должны разместить здесь свой верхний, нижний колонтитул и любой другой декоративный контент. Все остальные маршруты будут оказывать свои шаблоны в &lt;code&gt;application.hbs&lt;/code&gt; шаблона &lt;code&gt;{{outlet}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a5ab553a8d271896a510ee5268f14190264cb5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; object can be used to declare a simple mapping between property names on &lt;code&gt;DS.Model&lt;/code&gt; records and payload keys in the serialized JSON object representing the record. An object with the property &lt;code&gt;key&lt;/code&gt; can also be used to designate the attribute's key on the response payload.</source>
          <target state="translated">Объект &lt;code&gt;attrs&lt;/code&gt; можно использовать для объявления простого сопоставления между именами &lt;code&gt;DS.Model&lt;/code&gt; записях DS.Model и ключами полезной нагрузки в сериализованном объекте JSON, представляющем запись. Объект с &lt;code&gt;key&lt;/code&gt; свойства также может использоваться для обозначения ключа атрибута в полезных данных ответа.</target>
        </trans-unit>
        <trans-unit id="6dc40241d339c1bb5c98150382b9bbb509e1494e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; option for a resource &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; is shorthand for:</source>
          <target state="translated">Параметр &lt;code&gt;attrs&lt;/code&gt; для ресурса &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; является сокращением для:</target>
        </trans-unit>
        <trans-unit id="d11fb7ffee10a29dcba72e4be14a34886533a524" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; property can be set on the &lt;code&gt;ApplicationSerializer&lt;/code&gt; or a per-type serializer.</source>
          <target state="translated">Свойство &lt;code&gt;attrs&lt;/code&gt; можно установить в &lt;code&gt;ApplicationSerializer&lt;/code&gt; или сериализаторе для каждого типа.</target>
        </trans-unit>
        <trans-unit id="91ff220601d5dc8de2569eafda2d847e2de3da0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backgroundReload&lt;/code&gt; option is used to prevent the fetching of the destroyed record, since &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findRecord&quot;&gt;&lt;code&gt;findRecord()&lt;/code&gt;&lt;/a&gt; automatically schedules a fetch of the record from the adapter.</source>
          <target state="translated">Параметр &lt;code&gt;backgroundReload&lt;/code&gt; используется для предотвращения выборки уничтоженной записи, поскольку &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findRecord&quot;&gt; &lt;code&gt;findRecord()&lt;/code&gt; &lt;/a&gt; автоматически планирует выборку записи из адаптера.</target>
        </trans-unit>
        <trans-unit id="a4f5e918a009088b91687277e637fe04016877fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;boolean&lt;/code&gt; transform can handle values other than &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. The strings &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;t&quot;&lt;/code&gt; in any casing, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, and the number &lt;code&gt;1&lt;/code&gt; will all coerce to &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; преобразование может обрабатывать значения , отличные от &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; . Строки &lt;code&gt;&quot;true&quot;&lt;/code&gt; или &lt;code&gt;&quot;t&quot;&lt;/code&gt; в любом регистре, &lt;code&gt;&quot;1&quot;&lt;/code&gt; и число &lt;code&gt;1&lt;/code&gt; будут преобразованы в &lt;code&gt;true&lt;/code&gt; , в противном случае - в &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71a103dc62034f2f7cae2908b76c1995a2fd8b2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build&lt;/code&gt; command packages up all of the assets that make up your application&amp;mdash;JavaScript, templates, CSS, web fonts, images, and more.</source>
          <target state="translated">Команда &lt;code&gt;build&lt;/code&gt; объединяет все ресурсы, составляющие ваше приложение: JavaScript, шаблоны, CSS, веб-шрифты, изображения и многое другое.</target>
        </trans-unit>
        <trans-unit id="84d78207fa37bb2b65a91e18bf5316cd6ed67a48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checked&lt;/code&gt; attribute of an &lt;code&gt;Ember.Checkbox&lt;/code&gt; object should always be set through the Ember object or by interacting with its rendered element representation via the mouse, keyboard, or touch. Updating the value of the checkbox via jQuery will result in the checked value of the object and its element losing synchronization.</source>
          <target state="translated">&lt;code&gt;checked&lt;/code&gt; атрибут &lt;code&gt;Ember.Checkbox&lt;/code&gt; объекта всегда должно быть установлен через объект Ember или путем взаимодействия с его визуализированным представлением элемента с помощью мыши, клавиатуры или прикосновения. Обновление значения флажка через jQuery приведет к потере синхронизации проверенного значения объекта и его элемента.</target>
        </trans-unit>
        <trans-unit id="388167e41998946f805b5e706d65af0e5c7f26f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;component&lt;/code&gt; helper can be used to package a component path with initial attrs. The included attrs can then be merged during the final invocation. For example, given a &lt;code&gt;person-form&lt;/code&gt; component with the following template:</source>
          <target state="translated">&lt;code&gt;component&lt;/code&gt; помощник может быть использован для упаковки компонентов пути с начальным ATTRS. Включенные атрибуты затем могут быть объединены во время финального вызова. Например, для компонента &lt;code&gt;person-form&lt;/code&gt; со следующим шаблоном:</target>
        </trans-unit>
        <trans-unit id="4c34fbc331365e1345b641ddb67e8318a5245aaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; argument allows you to optionally specify the &lt;code&gt;this&lt;/code&gt; with which your callback will be invoked.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; аргумент позволяет при необходимости указать &lt;code&gt;this&lt;/code&gt; с помощью которого ваш обратный вызов будет вызван.</target>
        </trans-unit>
        <trans-unit id="89d688b3c007bc970797daf54bb128d1ea052cf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create()&lt;/code&gt; on line #17 creates an &lt;em&gt;instance&lt;/em&gt; of the &lt;code&gt;Soldier&lt;/code&gt; class. The &lt;code&gt;extend()&lt;/code&gt; on line #8 creates a &lt;em&gt;subclass&lt;/em&gt; of &lt;code&gt;Person&lt;/code&gt;. Any instance of the &lt;code&gt;Person&lt;/code&gt; class will &lt;em&gt;not&lt;/em&gt; have the &lt;code&gt;march()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;create()&lt;/code&gt; на линии № 17 создает &lt;em&gt;экземпляр&lt;/em&gt; этого &lt;code&gt;Soldier&lt;/code&gt; класса. &lt;code&gt;extend()&lt;/code&gt; на линии № 8 создает &lt;em&gt;подкласс&lt;/em&gt; от &lt;code&gt;Person&lt;/code&gt; . У любого экземпляра класса &lt;code&gt;Person&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; будет метода &lt;code&gt;march()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c49797066693990d496ec9bb1f4d6f26783f06a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createRecord&lt;/code&gt; method serializes the record and makes an Ajax (HTTP POST) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;createRecord&lt;/code&gt; сериализует запись и отправляет запрос Ajax (HTTP POST) на URL-адрес, вычисленный с помощью &lt;code&gt;buildURL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a93643d5938fe543825d7c0628e35429505c3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date&lt;/code&gt; transform will transform an &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; string to a JavaScript date object.</source>
          <target state="translated">Преобразование &lt;code&gt;date&lt;/code&gt; преобразует строку &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; в объект даты JavaScript.</target>
        </trans-unit>
        <trans-unit id="e80e5ce5365720cc0f4de3729b802465bc83fe09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaultSerializer&lt;/code&gt; property can be used to specify the serializer that will be used by this adapter. This is only used when a model specific serializer or &lt;code&gt;serializer:application&lt;/code&gt; are not defined.</source>
          <target state="translated">Свойство &lt;code&gt;defaultSerializer&lt;/code&gt; можно использовать для указания сериализатора, который будет использоваться этим адаптером. Это используется, только если сериализатор или &lt;code&gt;serializer:application&lt;/code&gt; конкретной модели не определены.</target>
        </trans-unit>
        <trans-unit id="47279489597e5ac74e3e86c13c5db07112deff0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deleteRecord&lt;/code&gt; method makes an Ajax (HTTP DELETE) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;deleteRecord&lt;/code&gt; выполняет запрос Ajax (HTTP DELETE) на URL-адрес, вычисленный &lt;code&gt;buildURL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c30f86ae15c9c161bf558adf4801995e475ede16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; queue contains jobs to finish the teardown of objects other jobs have scheduled to destroy.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; очередь содержит задания для завершения демонтажа объектов других рабочих мест планируется уничтожить.</target>
        </trans-unit>
        <trans-unit id="dec8ac796a650bf4f17575a944af8c803f7569ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;didRender&lt;/code&gt; hook is called during both render and re-render after the template has rendered and the DOM updated. You can leverage this hook to perform post-processing on the DOM of a component after it's been updated.</source>
          <target state="translated">&lt;code&gt;didRender&lt;/code&gt; хук вызывается во время и для визуализации и повторного рендеринга после того , как шаблон оказанной и DOM обновляется. Вы можете использовать эту ловушку для выполнения постобработки DOM компонента после его обновления.</target>
        </trans-unit>
        <trans-unit id="58ea898b33c2a437dd96438a1f46ae35d27a088e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;didTransition&lt;/code&gt; action is fired after a transition has successfully been completed. This occurs after the normal model hooks (&lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;afterModel&lt;/code&gt;, &lt;code&gt;setupController&lt;/code&gt;) have resolved. The &lt;code&gt;didTransition&lt;/code&gt; action has no arguments, however, it can be useful for tracking page views or resetting state on the controller.</source>
          <target state="translated">Действие &lt;code&gt;didTransition&lt;/code&gt; запускается после успешного завершения перехода. Это происходит после &lt;code&gt;beforeModel&lt;/code&gt; обычных хуков модели ( beforeModel , &lt;code&gt;model&lt;/code&gt; , &lt;code&gt;afterModel&lt;/code&gt; , &lt;code&gt;setupController&lt;/code&gt; ). Действие &lt;code&gt;didTransition&lt;/code&gt; не имеет аргументов, однако оно может быть полезно для отслеживания просмотров страниц или сброса состояния на контроллере.</target>
        </trans-unit>
        <trans-unit id="d29eb3566c4cfb0d03f10d6c75bd7952980a0abf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; события</target>
        </trans-unit>
        <trans-unit id="3dc3d2be3a232d5f74fd199e8ed0506d40b409b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors&lt;/code&gt; property us useful for displaying error messages to the user.</source>
          <target state="translated">Свойство &lt;code&gt;errors&lt;/code&gt; используется для отображения сообщений об ошибках пользователю.</target>
        </trans-unit>
        <trans-unit id="115d726ddd808f785aca1eceaa420a26f06ecae9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; function is passed in by the calling object. This is a pattern known as &lt;a href=&quot;https://guides.emberjs.com/components/triggering-changes-with-actions/#toc_passing-the-action-to-the-component&quot;&gt;closure actions&lt;/a&gt;.</source>
          <target state="translated">Функция &lt;code&gt;filter&lt;/code&gt; передается вызывающим объектом. Это шаблон, известный как &lt;a href=&quot;https://guides.emberjs.com/components/triggering-changes-with-actions/#toc_passing-the-action-to-the-component&quot;&gt;закрывающие действия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="387361e1d1ae1eef1a52fa056d048c8cd9b110ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findAll()&lt;/code&gt; method is used to retrieve all records for a given type.</source>
          <target state="translated">Метод &lt;code&gt;findAll()&lt;/code&gt; используется для получения всех записей для данного типа.</target>
        </trans-unit>
        <trans-unit id="602c663ac51ac56be167a8f4fb8f2bd27b6e2b2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findAll&lt;/code&gt; method makes an Ajax (HTTP GET) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;, and returns a promise for the resulting payload.</source>
          <target state="translated">Метод &lt;code&gt;findAll&lt;/code&gt; отправляет запрос Ajax (HTTP GET) к URL-адресу, вычисленному с помощью &lt;code&gt;buildURL&lt;/code&gt; , и возвращает обещание для полученной полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="ce7f071cf50d33d185134e7eba5ac98888f204a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findBelongsTo&lt;/code&gt; method will make an Ajax (HTTP GET) request to the originally specified URL.</source>
          <target state="translated">Метод &lt;code&gt;findBelongsTo&lt;/code&gt; отправит запрос Ajax (HTTP GET) на первоначально указанный URL.</target>
        </trans-unit>
        <trans-unit id="f44dcd4f85b2dd0552451d53e497afcda8a7a1c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findHasMany&lt;/code&gt; method will make an Ajax (HTTP GET) request to the originally specified URL.</source>
          <target state="translated">Метод &lt;code&gt;findHasMany&lt;/code&gt; сделает запрос Ajax (HTTP GET) на первоначально указанный URL.</target>
        </trans-unit>
        <trans-unit id="ae10eeaf2c63ca125251ac98e9be799c680141ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findMany&lt;/code&gt; method makes an Ajax (HTTP GET) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;, and returns a promise for the resulting payload.</source>
          <target state="translated">Метод &lt;code&gt;findMany&lt;/code&gt; выполняет запрос Ajax (HTTP GET) к URL-адресу, вычисленному с помощью &lt;code&gt;buildURL&lt;/code&gt; , и возвращает обещание для полученной полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="7a08ab933ff65b656dd2d84e9309be457ddf1cf0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findRecord()&lt;/code&gt; method is invoked when the store is asked for a record that has not previously been loaded. In response to &lt;code&gt;findRecord()&lt;/code&gt; being called, you should query your persistence layer for a record with the given ID. The &lt;code&gt;findRecord&lt;/code&gt; method should return a promise that will resolve to a JavaScript object that will be normalized by the serializer.</source>
          <target state="translated">Метод &lt;code&gt;findRecord()&lt;/code&gt; вызывается, когда в хранилище запрашивается запись, которая ранее не была загружена. В ответ на &lt;code&gt;findRecord()&lt;/code&gt; вы должны запросить на своем уровне сохранения запись с заданным идентификатором. Метод &lt;code&gt;findRecord&lt;/code&gt; должен возвращать обещание, которое будет преобразовано в объект JavaScript, который будет нормализован сериализатором.</target>
        </trans-unit>
        <trans-unit id="4a203cdf205b6bed873c25d04719c09b1c068376" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findRecord&lt;/code&gt; method makes an Ajax request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;, and returns a promise for the resulting payload.</source>
          <target state="translated">Метод &lt;code&gt;findRecord&lt;/code&gt; выполняет запрос Ajax к URL-адресу, вычисленному с помощью &lt;code&gt;buildURL&lt;/code&gt; , и возвращает обещание для результирующей полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="d296cef402c6e9fdee3e60b6eab8186006e33659" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findRecord&lt;/code&gt; method will always resolve its promise with the same object for a given type and &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;findRecord&lt;/code&gt; всегда разрешает свое обещание с одним и тем же объектом для данного типа и &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8946fd1a72779985021b67a58d0554338af6fd98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findRecord&lt;/code&gt; method will always return a &lt;strong&gt;promise&lt;/strong&gt; that will be resolved with the record.</source>
          <target state="translated">Метод &lt;code&gt;findRecord&lt;/code&gt; всегда будет возвращать &lt;strong&gt;обещание,&lt;/strong&gt; которое будет разрешено с записью.</target>
        </trans-unit>
        <trans-unit id="70a1277075e83917b1e91129c777128de706c278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; properties are read from the context (the application controller in this case), and rendered inside the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; HTML tag.</source>
          <target state="translated">В &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; свойств считываются из контекста (контроллер приложения в данном случае), и оказываются внутри &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; HTML тега.</target>
        </trans-unit>
        <trans-unit id="e2cd1e74db759e699d89efeb874150a69a9ce052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;generateIdForRecord()&lt;/code&gt; method will be invoked with the requesting store as the first parameter and the newly created record as the second parameter:</source>
          <target state="translated">&lt;code&gt;generateIdForRecord()&lt;/code&gt; метод будет вызываться с запрашивающим магазина в качестве первого параметра и вновь созданной записи в качестве второго параметра:</target>
        </trans-unit>
        <trans-unit id="9d6dcd303e28c2f50e7fa209f969128e6c261668" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hash&lt;/code&gt; option uses the URL's anchor to load the starting state of your application and will keep it in sync as you move around. At present, this relies on a &lt;a href=&quot;http://caniuse.com/hashchange&quot;&gt;hashchange&lt;/a&gt; event existing in the browser.</source>
          <target state="translated">Параметр &lt;code&gt;hash&lt;/code&gt; использует привязку URL-адреса для загрузки начального состояния вашего приложения и синхронизирует его при перемещении. В настоящее время это зависит от события &lt;a href=&quot;http://caniuse.com/hashchange&quot;&gt;hashchange,&lt;/a&gt; существующего в браузере.</target>
        </trans-unit>
        <trans-unit id="efb3ddd1dd864b1ccd297455ce4d0857982f5192" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;namespace&lt;/code&gt; attributes will be used if defined, and are optional.</source>
          <target state="translated">В &lt;code&gt;host&lt;/code&gt; и &lt;code&gt;namespace&lt;/code&gt; атрибутов будут использоваться , если они определены, и не являются обязательными.</target>
        </trans-unit>
        <trans-unit id="726d76cd26c3550c4a16d511675ea50195fe236a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the record that this reference refers to.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; из записи , что эта ссылка относится к.</target>
        </trans-unit>
        <trans-unit id="e484f981133bd6e9e051ecd67de8179c1ab49e1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the record that this reference refers to. Together, the &lt;code&gt;type()&lt;/code&gt; and &lt;code&gt;id()&lt;/code&gt; methods form a composite key for the identity map. This can be used to access the id of an async relationship without triggering a fetch that would normally happen if you attempted to use &lt;code&gt;record.get('relationship.id')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; из записи , что эта ссылка относится к. Вместе методы &lt;code&gt;type()&lt;/code&gt; и &lt;code&gt;id()&lt;/code&gt; образуют составной ключ для карты идентичности. Это можно использовать для доступа к идентификатору асинхронного отношения без запуска выборки, которая обычно происходит, если вы &lt;code&gt;record.get('relationship.id')&lt;/code&gt; использовать record.get ('Relationship.id') .</target>
        </trans-unit>
        <trans-unit id="0b8ddb4404d56063acf9b99af25e8cc6e7326302" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; helper allows you to conditionally render one of two branches, depending on the &quot;truthiness&quot; of a property. For example the following values are all falsey: &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt; or an empty array.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; помощник позволяет условно оказывать один из двух ветвей, в зависимости от &amp;laquo;truthiness&amp;raquo; в собственность. Например, все следующие значения ложны: &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;NaN&lt;/code&gt; или пустой массив.</target>
        </trans-unit>
        <trans-unit id="7f533c5c4a9490cabd083312090b309dba8b8080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; route, which we've set up to redirect to the &lt;code&gt;rentals&lt;/code&gt; route.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; маршрут, который мы создали для перенаправления на &lt;code&gt;rentals&lt;/code&gt; маршрут.</target>
        </trans-unit>
        <trans-unit id="a37a3988ddfb70864ed4f197d72873cd75421874" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; template will be rendered into the &lt;code&gt;{{outlet}}&lt;/code&gt; in the &lt;code&gt;application&lt;/code&gt; template. If the user navigates to &lt;code&gt;/favorites&lt;/code&gt;, Ember will replace the &lt;code&gt;index&lt;/code&gt; template with the &lt;code&gt;favorites&lt;/code&gt; template.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; шаблон будет воспроизводимая в &lt;code&gt;{{outlet}}&lt;/code&gt; в &lt;code&gt;application&lt;/code&gt; шаблоне. Если пользователь перейдет в &lt;code&gt;/favorites&lt;/code&gt; , Ember заменит шаблон &lt;code&gt;index&lt;/code&gt; шаблон &lt;code&gt;favorites&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="894fed72e604e69d2c832ed37e77607f8aedfc96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isDone&lt;/code&gt; property of any of the objects in the &lt;code&gt;todos&lt;/code&gt; array changes.</source>
          <target state="translated">Свойство &lt;code&gt;isDone&lt;/code&gt; любого из объектов в массиве &lt;code&gt;todos&lt;/code&gt; изменяется.</target>
        </trans-unit>
        <trans-unit id="2e33c9e0c11bc81e1d1a61b55510989fd637ce87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key-up&lt;/code&gt; property will be bound to the &lt;code&gt;handleFilterEntry&lt;/code&gt; action.</source>
          <target state="translated">Свойство &lt;code&gt;key-up&lt;/code&gt; будет привязано к действию &lt;code&gt;handleFilterEntry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="936bd94b4aebf6a1e14654f35827f1ee229e7066" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; option is used to tell Ember how to determine if the array being iterated over with &lt;code&gt;{{#each}}&lt;/code&gt; has changed between renders. By helping Ember detect that some elements in the array are the same, DOM elements can be re-used, significantly improving rendering speed.</source>
          <target state="translated">Параметр &lt;code&gt;key&lt;/code&gt; используется, чтобы сообщить Ember, как определить, изменился ли массив, повторяемый с помощью &lt;code&gt;{{#each}}&lt;/code&gt; между рендерами. Помогая Ember обнаружить, что некоторые элементы в массиве совпадают, элементы DOM можно использовать повторно, что значительно повышает скорость рендеринга.</target>
        </trans-unit>
        <trans-unit id="a8f5fca5b000aac4891ae81f3df31b8436f67cee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link-to&lt;/code&gt; helper supports specifying query params using the &lt;code&gt;query-params&lt;/code&gt; subexpression helper.</source>
          <target state="translated">&lt;code&gt;link-to&lt;/code&gt; хелперам опорам , задающих параметры запроса с помощью &lt;code&gt;query-params&lt;/code&gt; подвыражения помощника.</target>
        </trans-unit>
        <trans-unit id="1769aac2882e47d76fb4a9a01749791965335a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link-to&lt;/code&gt; helper takes into account query parameters when determining its &quot;active&quot; state, and will set the class appropriately. The active state is determined by calculating whether the query params end up the same after clicking a link. You don't have to supply all of the current, active query params for this to be true.</source>
          <target state="translated">&lt;code&gt;link-to&lt;/code&gt; помощнику учитывает параметры учетной записи запроса при определении его &amp;laquo;активного&amp;raquo; состояния, и будет устанавливать класс соответствующим образом . Активное состояние определяется путем вычисления того, остаются ли параметры запроса такими же после щелчка по ссылке. Чтобы это было правдой, необязательно указывать все текущие активные параметры запроса.</target>
        </trans-unit>
        <trans-unit id="ce7461f1dc052dfdd78139e56ef3705e2ee872bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;live-updating-chart&lt;/code&gt; component will be appended when &lt;code&gt;isMarketOpen&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, and the &lt;code&gt;market-close-summary&lt;/code&gt; component will be appended when &lt;code&gt;isMarketOpen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. If the value changes while the app is running, the component will be automatically swapped out accordingly. Note: You should not use this helper when you are consistently rendering the same component. In that case, use standard component syntax, for example:</source>
          <target state="translated">Компонент &lt;code&gt;live-updating-chart&lt;/code&gt; &lt;code&gt;isMarketOpen&lt;/code&gt; -chart будет добавлен, если isMarketOpen имеет значение &lt;code&gt;true&lt;/code&gt; , а компонент &lt;code&gt;market-close-summary&lt;/code&gt; будет добавлен, когда &lt;code&gt;isMarketOpen&lt;/code&gt; имеет значение &lt;code&gt;false&lt;/code&gt; . Если значение изменяется во время работы приложения, компонент будет автоматически заменен соответствующим образом. Примечание: вам не следует использовать этот помощник, когда вы постоянно визуализируете один и тот же компонент. В этом случае используйте стандартный синтаксис компонента, например:</target>
        </trans-unit>
        <trans-unit id="d5bb787fdea75d1b00a27bb3674ec987c8aaa6ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loading&lt;/code&gt; action is fired on the route when a route's &lt;code&gt;model&lt;/code&gt; hook returns a promise that is not already resolved. The current &lt;code&gt;Transition&lt;/code&gt; object is the first parameter and the route that triggered the loading event is the second parameter.</source>
          <target state="translated">Действие &lt;code&gt;loading&lt;/code&gt; запускается на маршруте, когда обработчик &lt;code&gt;model&lt;/code&gt; маршрута возвращает обещание, которое еще не разрешено. Текущий объект &lt;code&gt;Transition&lt;/code&gt; - это первый параметр, а маршрут, вызвавший событие загрузки, - второй параметр.</target>
        </trans-unit>
        <trans-unit id="62709da4cb7722dd75455fa1b4a1e73beda37c01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loading&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; событий</target>
        </trans-unit>
        <trans-unit id="51f4b8a7cab225c00b8bad7fe9f237a843ec218c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;location&lt;/code&gt; property determines the type of URL's that your application will use.</source>
          <target state="translated">Свойство &lt;code&gt;location&lt;/code&gt; определяет тип URL-адреса, который будет использовать ваше приложение.</target>
        </trans-unit>
        <trans-unit id="9eb2d558c702885a649840fb36c05bc2fa210e48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max&lt;/code&gt; attribute of input element used with &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; or &lt;code&gt;type=&quot;range&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; атрибут входного элемента используется с &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; или &lt;code&gt;type=&quot;range&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="761d8a8dfab983312074a19ca9afd183bd59ab2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min&lt;/code&gt; attribute of input element used with &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; or &lt;code&gt;type=&quot;range&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; атрибут входного элемента используется с &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; или &lt;code&gt;type=&quot;range&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a16647d6821ede1b677029aeacce468053baa77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;beforeModel&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks described in &lt;a href=&quot;../asynchronous-routing&quot;&gt;Asynchronous Routing&lt;/a&gt; each get called with a transition object. This makes it possible for destination routes to abort attempted transitions.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; , &lt;code&gt;beforeModel&lt;/code&gt; и &lt;code&gt;afterModel&lt;/code&gt; крючки описаны в &lt;a href=&quot;../asynchronous-routing&quot;&gt;асинхронной маршрутизации&lt;/a&gt; каждого вызываются с объектом перехода. Это позволяет маршрутам назначения прерывать попытки перехода.</target>
        </trans-unit>
        <trans-unit id="7a07d77d0d198d3536ee44ea45215a0d56f6c718" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moduleForComponent&lt;/code&gt; helper will find the component by name (&lt;code&gt;pretty-color&lt;/code&gt;) and its template (if available). Make sure to set &lt;code&gt;integration: true&lt;/code&gt; to enable integration test capability.</source>
          <target state="translated">&lt;code&gt;moduleForComponent&lt;/code&gt; помощник будет найти компонент по имени ( &lt;code&gt;pretty-color&lt;/code&gt; ) и его шаблона (если таковые имеются). Не забудьте установить &lt;code&gt;integration: true&lt;/code&gt; чтобы включить возможность тестирования интеграции.</target>
        </trans-unit>
        <trans-unit id="644ef1f7a187d6716007454db3fc278899d36342" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mut&lt;/code&gt; helper changes the &lt;code&gt;totalClicks&lt;/code&gt; value to what was provided as the action argument.</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt; помощник изменяет &lt;code&gt;totalClicks&lt;/code&gt; значение того, что было представлено в качестве аргумента действия.</target>
        </trans-unit>
        <trans-unit id="edbf9526f6f8f8b4f51d74862e43afb24dca9baa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mut&lt;/code&gt; helper lets you &lt;strong&gt;clearly specify&lt;/strong&gt; that a child &lt;code&gt;Component&lt;/code&gt; can update the (mutable) value passed to it, which will &lt;strong&gt;change the value of the parent component&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt; помощник позволяет &lt;strong&gt;четко определить&lt;/strong&gt; , что ребенок &lt;code&gt;Component&lt;/code&gt; может обновить (изменяемое) значение , переданное ему, что будет &lt;strong&gt;изменять значение родительского компонента&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="47f4565230c7ebd7ee1ea8d2cea1cd329802f14d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mut&lt;/code&gt; helper, when used with &lt;code&gt;action&lt;/code&gt;, will return a function that sets the value passed to &lt;code&gt;mut&lt;/code&gt; to its first argument. This works like any other closure action and interacts with the other features &lt;code&gt;action&lt;/code&gt; provides. As an example, we can create a button that increments a value passing the value directly to the &lt;code&gt;action&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt; помощник, когда используется с &lt;code&gt;action&lt;/code&gt; , возвращает функцию , которая устанавливает принятые значения для &lt;code&gt;mut&lt;/code&gt; первого аргумента. Это работает, как и любое другое действие закрытия, и взаимодействует с другими функциями, которые предоставляет &lt;code&gt;action&lt;/code&gt; . В качестве примера мы можем создать кнопку, которая увеличивает значение, передавая значение непосредственно &lt;code&gt;action&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4e89da7babb87da3e213ca546f7a89e9c5ec5c0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;namespace&lt;/code&gt; property can be used to prefix requests with a specific url namespace.</source>
          <target state="translated">Свойство &lt;code&gt;namespace&lt;/code&gt; можно использовать для префикса запросов с определенным пространством имен url.</target>
        </trans-unit>
        <trans-unit id="bfed5d466aa02a365425fe10dfe05ec1cbdf595d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; command generates a project structure with the following files and directories:</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; команда создает структуру проекта со следующими файлами и каталогами:</target>
        </trans-unit>
        <trans-unit id="ed24ef77b982f52329f6db5f8b171af6032be5a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newValue&lt;/code&gt; parameter thus becomes the &lt;code&gt;target.value&lt;/code&gt; property of the event object, which is the value of the input field the user typed. (e.g 'Foo Fighters')</source>
          <target state="translated">Таким &lt;code&gt;newValue&lt;/code&gt; параметр newValue становится свойством &lt;code&gt;target.value&lt;/code&gt; объекта события, которое является значением поля ввода, введенного пользователем. (например, &quot;Foo Fighters&quot;)</target>
        </trans-unit>
        <trans-unit id="3b9f3dead33374ca86a671206cb69b9ea69de17d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize&lt;/code&gt; method is used to convert a payload received from your external data source into the normalized form &lt;code&gt;store.push()&lt;/code&gt; expects. You should override this method, munge the hash and return the normalized payload.</source>
          <target state="translated">Метод &lt;code&gt;normalize&lt;/code&gt; используется для преобразования полезной нагрузки, полученной из внешнего источника данных, в нормализованную форму, &lt;code&gt;store.push()&lt;/code&gt; ожидает store.push () . Вы должны переопределить этот метод, изменить хеш и вернуть нормализованные данные.</target>
        </trans-unit>
        <trans-unit id="20e85f3eb6d6503ba01eeae172d760d7f90937b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize&lt;/code&gt; method will be called three times:</source>
          <target state="translated">Метод &lt;code&gt;normalize&lt;/code&gt; будет вызываться трижды:</target>
        </trans-unit>
        <trans-unit id="1d0fd3bcdefae28cf2e583c51b6f6f637f4b37a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalizeResponse&lt;/code&gt; method is used to normalize a payload from the server to a JSON-API Document.</source>
          <target state="translated">Метод &lt;code&gt;normalizeResponse&lt;/code&gt; используется для нормализации полезной нагрузки с сервера в документ JSON-API.</target>
        </trans-unit>
        <trans-unit id="0c2db818043d2ecfecb9f10542f615aa9bab50e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;observes&lt;/code&gt; extension of Javascript's Function prototype is available when &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; or &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Function&lt;/code&gt; is true, which is the default.</source>
          <target state="translated">&lt;code&gt;observes&lt;/code&gt; расширение функций прототипа JavaScript доступен , когда &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; или &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Function&lt;/code&gt; верно, что по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0f03013d375dee1ad0017ee24be6c12bc6613607" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;on&lt;/code&gt; extension of Javascript's Function prototype is available when &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; or &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Function&lt;/code&gt; is true, which is the default.</source>
          <target state="translated">&lt;code&gt;on&lt;/code&gt; расширение функций прототипа JavaScript доступен , когда &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; или &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Function&lt;/code&gt; верно, что по умолчанию.</target>
        </trans-unit>
        <trans-unit id="297b35be5fa3a29b2bfdd9b1aca553208fd9387a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash is passed as second argument to a transforms' &lt;code&gt;serialize&lt;/code&gt; and &lt;code&gt;deserialize&lt;/code&gt; method. This allows to configure a transformation and adapt the corresponding value, based on the config:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; хэш передается в качестве второго аргумента к трансформирует &lt;code&gt;serialize&lt;/code&gt; и &lt;code&gt;deserialize&lt;/code&gt; метод. Это позволяет настроить преобразование и адаптировать соответствующее значение на основе конфигурации:</target>
        </trans-unit>
        <trans-unit id="a48eca6e5279e14ea0ca6e2582655554ba9b2b05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;partial&lt;/code&gt; helper renders another template without changing the template context:</source>
          <target state="translated">&lt;code&gt;partial&lt;/code&gt; помощник делает другой шаблон без изменения контекста шаблона:</target>
        </trans-unit>
        <trans-unit id="9dab6744a08664ce82b1d25a8cd8dabeafdb4d4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pattern&lt;/code&gt; attribute of input element.</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; атрибут элемента ввода.</target>
        </trans-unit>
        <trans-unit id="beed0cd468b2c43cc334c3ee15857caebfa7e869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;person&lt;/code&gt; model we generated earlier didn't have any attributes. Let's add first and last name, as well as the birthday, using &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.html#method_attr&quot;&gt;&lt;code&gt;DS.attr&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Созданная нами ранее модель &lt;code&gt;person&lt;/code&gt; не имела никаких атрибутов. Добавим имя и фамилию, а также день рождения, используя &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.html#method_attr&quot;&gt; &lt;code&gt;DS.attr&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c726fa5adf1c99c0bbb0555060826f16888f5c7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;primaryKey&lt;/code&gt; is used when serializing and deserializing data. Ember Data always uses the &lt;code&gt;id&lt;/code&gt; property to store the id of the record. The external source may not always follow this convention. In these cases it is useful to override the &lt;code&gt;primaryKey&lt;/code&gt; property to match the &lt;code&gt;primaryKey&lt;/code&gt; of your external store.</source>
          <target state="translated">&lt;code&gt;primaryKey&lt;/code&gt; используется при сериализации и десериализации данных. Ember Data всегда использует свойство &lt;code&gt;id&lt;/code&gt; для хранения идентификатора записи. Внешний источник не всегда может следовать этому соглашению. В этих случаях полезно переопределить свойство &lt;code&gt;primaryKey&lt;/code&gt; , чтобы оно соответствовало &lt;code&gt;primaryKey&lt;/code&gt; вашего внешнего хранилища.</target>
        </trans-unit>
        <trans-unit id="1ddda9eaba646249c47555954c9e00b3441e3959" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;property&lt;/code&gt; extension of Javascript's Function prototype is available when &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; or &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Function&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, which is the default.</source>
          <target state="translated">Расширение &lt;code&gt;property&lt;/code&gt; прототипа функции Javascript доступно, когда &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; или &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Function&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , что является значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="741ea22ea557846205bbcb6432415861ed43b265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push()&lt;/code&gt; method is also important when working with complex endpoints. You may find your application has an endpoint that performs some business logic then creates several records. This likely does not map cleanly to Ember Data's existing &lt;code&gt;save()&lt;/code&gt; API which is structured around persisting a single record. Instead you should make your own custom AJAX request and push the resulting model data into the store so it can be accessed by other parts of your application.</source>
          <target state="translated">Метод &lt;code&gt;push()&lt;/code&gt; также важен при работе со сложными конечными точками. Вы можете обнаружить, что в вашем приложении есть конечная точка, которая выполняет некоторую бизнес-логику, а затем создает несколько записей. Это, вероятно, не полностью соответствует существующему API Ember Data &lt;code&gt;save()&lt;/code&gt; который структурирован вокруг сохранения одной записи. Вместо этого вы должны создать свой собственный запрос AJAX и отправить полученные данные модели в хранилище, чтобы к ним могли получить доступ другие части вашего приложения.</target>
        </trans-unit>
        <trans-unit id="aba7f7dcf3bc1a43f03c260d10824580744e938c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query()&lt;/code&gt; and &lt;code&gt;queryRecord()&lt;/code&gt; methods each take a &lt;code&gt;query&lt;/code&gt; argument that is serialized directly into the URL query string and the &lt;code&gt;include&lt;/code&gt; parameter may form part of that argument. For example:</source>
          <target state="translated">&lt;code&gt;query()&lt;/code&gt; и &lt;code&gt;queryRecord()&lt;/code&gt; методы каждый принимать &lt;code&gt;query&lt;/code&gt; аргумент , который сериализован непосредственно в строку запроса URL , и &lt;code&gt;include&lt;/code&gt; параметр может формировать часть этого аргумента. Например:</target>
        </trans-unit>
        <trans-unit id="40ae82990914385fed7743c850d721020c13355a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query-params&lt;/code&gt; helper can be used to set query params on a link:</source>
          <target state="translated">В &lt;code&gt;query-params&lt;/code&gt; помощник может быть использован для установки параметров запроса на ссылку:</target>
        </trans-unit>
        <trans-unit id="a8fe29792accf52f26efa3e35355502b262e7a69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; argument is a simple JavaScript object that will be passed directly to the server as parameters.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; аргумент простой объект JavaScript , который будет передаваться непосредственно на сервер в качестве параметров.</target>
        </trans-unit>
        <trans-unit id="3bceeb7be0a9c6e0f887c2b26aab4a16695618f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; method makes an Ajax (HTTP GET) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;, and returns a promise for the resulting payload.</source>
          <target state="translated">Метод &lt;code&gt;query&lt;/code&gt; выполняет запрос Ajax (HTTP GET) к URL-адресу, вычисленному с помощью &lt;code&gt;buildURL&lt;/code&gt; , и возвращает обещание для полученной полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="ac86f04028c107b848f45d261d4b4fb39028dabb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queryRecord()&lt;/code&gt; method is invoked when the store is asked for a single record through a query object.</source>
          <target state="translated">Метод &lt;code&gt;queryRecord()&lt;/code&gt; вызывается, когда в хранилище запрашивается единственная запись через объект запроса.</target>
        </trans-unit>
        <trans-unit id="5f566f5912a6205cfc53d29bb1ff422d225d2210" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queryRecord&lt;/code&gt; method makes an Ajax (HTTP GET) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;, and returns a promise for the resulting payload.</source>
          <target state="translated">Метод &lt;code&gt;queryRecord&lt;/code&gt; выполняет запрос Ajax (HTTP GET) к URL-адресу, вычисленному с помощью &lt;code&gt;buildURL&lt;/code&gt; , и возвращает обещание для полученной полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="d4ea793c0781cfc5c0cec6bad75f521580c0c469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; queue contains jobs meant for rendering, these will typically update the DOM.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; очередь содержит задание , предназначенное для визуализации, они, как правило , обновления DOM.</target>
        </trans-unit>
        <trans-unit id="c7f84a235783d75983b71d54f1ff2d957db34aa0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rental_id&lt;/code&gt; will now be passed to the route.</source>
          <target state="translated">Теперь &lt;code&gt;rental_id&lt;/code&gt; будет передан маршруту.</target>
        </trans-unit>
        <trans-unit id="2ab02947d511f36cd80dcd1ce1d3df5d48a3288d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rootElement&lt;/code&gt; can be either a DOM element or a jQuery-compatible selector string. Note that &lt;em&gt;views appended to the DOM outside the root element will not receive events.&lt;/em&gt; If you specify a custom root element, make sure you only append views inside it!</source>
          <target state="translated">&lt;code&gt;rootElement&lt;/code&gt; может быть либо DOM - элемент или строка селектора JQuery-совместимым. Обратите внимание, что &lt;em&gt;представления, добавленные к DOM за пределами корневого элемента, не будут получать события. &lt;/em&gt;Если вы укажете собственный корневой элемент, убедитесь, что вы добавляете только представления внутри него!</target>
        </trans-unit>
        <trans-unit id="6cb53ef77e44dde0ccc9cdeab769f0e6ab2e0202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routerTransitions&lt;/code&gt; queue contains transition jobs in the router.</source>
          <target state="translated">&lt;code&gt;routerTransitions&lt;/code&gt; очередь содержит рабочие места перехода в маршрутизаторе.</target>
        </trans-unit>
        <trans-unit id="914db6574906c68800e0d33d2e398128993fa468" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; action handler would be called with a single argument containing the post model:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; обработчика действий будет вызывается с одним аргументом , содержащим запись модель:</target>
        </trans-unit>
        <trans-unit id="df2eb6d01d9ec8f4cdf6e2424d4b714982ede9b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sender&lt;/code&gt; is the object that changed. The &lt;code&gt;key&lt;/code&gt; is the property that changes. The &lt;code&gt;value&lt;/code&gt; property is currently reserved and unused. The &lt;code&gt;rev&lt;/code&gt; is the last property revision of the object when it changed, which you can use to detect if the key value has really changed or not.</source>
          <target state="translated">&lt;code&gt;sender&lt;/code&gt; является объектом , который изменился. &lt;code&gt;key&lt;/code&gt; является свойством , которое изменяется. Свойство &lt;code&gt;value&lt;/code&gt; в настоящее время зарезервировано и не используется. &lt;code&gt;rev&lt;/code&gt; является пересмотром последнего свойства объекта , когда он изменился, который вы можете использовать , чтобы обнаружить , если значение ключа действительно изменилось или нет.</target>
        </trans-unit>
        <trans-unit id="320d415a375ebee02086a1803913992fa35a52e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serialize&lt;/code&gt; and &lt;code&gt;deserialize&lt;/code&gt; keys support 3 values:</source>
          <target state="translated">В &lt;code&gt;serialize&lt;/code&gt; и &lt;code&gt;deserialize&lt;/code&gt; клавиши поддерживают 3 значения:</target>
        </trans-unit>
        <trans-unit id="6f25c439a903f72adbb9b751611fc24318fc0bef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serialize&lt;/code&gt; method is used when a record is saved in order to convert the record into the form that your external data source expects.</source>
          <target state="translated">Метод &lt;code&gt;serialize&lt;/code&gt; используется при сохранении записи для преобразования записи в форму, которую ожидает внешний источник данных.</target>
        </trans-unit>
        <trans-unit id="ca79fc713fd97bd184a81e559e72c3c10e563ff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; function should accept two parameters, &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. The value returned from &lt;code&gt;set&lt;/code&gt; will be the new value of the property.</source>
          <target state="translated">Функция &lt;code&gt;set&lt;/code&gt; должна принимать два параметра: &lt;code&gt;key&lt;/code&gt; и &lt;code&gt;value&lt;/code&gt; . Значение, возвращаемое из &lt;code&gt;set&lt;/code&gt; будет новым значением свойства.</target>
        </trans-unit>
        <trans-unit id="e2b783248728ef736c417d1b8a02ac7a76ba4c00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setProps&lt;/code&gt; action directly sets one property, and calls the method to set the other. In our generated test, ember-cli already uses the &lt;code&gt;moduleFor&lt;/code&gt; helper to set up a test container:</source>
          <target state="translated">Действие &lt;code&gt;setProps&lt;/code&gt; напрямую устанавливает одно свойство и вызывает метод для установки другого. В нашем сгенерированном тесте ember-cli уже использует помощник &lt;code&gt;moduleFor&lt;/code&gt; для настройки тестового контейнера:</target>
        </trans-unit>
        <trans-unit id="a7a5bc8047dfc31a806acf70a107363435688016" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signUp&lt;/code&gt; action is simply a function defined on the &lt;code&gt;actions&lt;/code&gt; hash of a component. Since the action is assigned to an inline handler, the function definition can define the event object as its first parameter.</source>
          <target state="translated">Действие &lt;code&gt;signUp&lt;/code&gt; - это просто функция, определенная в хэше &lt;code&gt;actions&lt;/code&gt; компонента. Поскольку действие назначается встроенному обработчику, определение функции может определять объект события в качестве своего первого параметра.</target>
        </trans-unit>
        <trans-unit id="905ce447cd074e63c0b217b907cdbd799228dbdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; of the text field in characters.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; текстового поля в символах.</target>
        </trans-unit>
        <trans-unit id="60ce209fb9d274970aad161ade621ac9ba4ac11c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; property is the application's &lt;code&gt;store&lt;/code&gt; that contains all records. It can be used to look up serializers for other model types that may be nested inside the payload response.</source>
          <target state="translated">Свойство &lt;code&gt;store&lt;/code&gt; - это &lt;code&gt;store&lt;/code&gt; приложения , содержащий все записи. Его можно использовать для поиска сериализаторов для других типов моделей, которые могут быть вложены в ответ полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="296139528fe79390dc0a604c903db62d7f189968" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sync&lt;/code&gt; queue contains binding synchronization jobs.</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; очереди заданий содержит привязки синхронизации.</target>
        </trans-unit>
        <trans-unit id="3ff37492a4d1b522cbb2957ffd8cce10aa8ee652" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;todos&lt;/code&gt; property of the component is changed to a different array.</source>
          <target state="translated">Свойство &lt;code&gt;todos&lt;/code&gt; компонента изменено на другой массив.</target>
        </trans-unit>
        <trans-unit id="131b771f6ba43c138d365e36164154f5cb2e8c6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; attribute of the input element.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; атрибута входного элемента.</target>
        </trans-unit>
        <trans-unit id="4c5bc75c3e6f8899fec6ea16cb876d5a2fdd47fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unbound&lt;/code&gt; helper only accepts a single argument, and it return an unbound value.</source>
          <target state="translated">&lt;code&gt;unbound&lt;/code&gt; помощник принимает только один аргумент, и он возвращает несвязанное значение.</target>
        </trans-unit>
        <trans-unit id="efdf958209e8428c763eee6028027f027891e782" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateRecord&lt;/code&gt; method serializes the record and makes an Ajax (HTTP PUT) request to a URL computed by &lt;code&gt;buildURL&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;updateRecord&lt;/code&gt; сериализует запись и отправляет запрос Ajax (HTTP PUT) на URL-адрес, вычисленный &lt;code&gt;buildURL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b6470eade078efa5a7597b68a9c894e7656a268" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; attribute of the input element. As the user inputs text, this property is updated live.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; атрибута входного элемента. Когда пользователь вводит текст, это свойство обновляется в реальном времени.</target>
        </trans-unit>
        <trans-unit id="89d5c88cd2756f1f000db7d6ac6178bf03b70a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wait&lt;/code&gt; helper is built into &lt;code&gt;registerAsyncHelper&lt;/code&gt; by default. You will not need to &lt;code&gt;return app.testHelpers.wait();&lt;/code&gt; - the wait behavior is provided for you.</source>
          <target state="translated">&lt;code&gt;wait&lt;/code&gt; помощник встроен в &lt;code&gt;registerAsyncHelper&lt;/code&gt; по умолчанию. Вам не нужно &lt;code&gt;return app.testHelpers.wait();&lt;/code&gt; - для вас предусмотрено поведение ожидания.</target>
        </trans-unit>
        <trans-unit id="2a3d56e189d128908470bf74976b11ba03b8229c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;willTransition&lt;/code&gt; action is fired at the beginning of any attempted transition with a &lt;code&gt;Transition&lt;/code&gt; object as the sole argument. This action can be used for aborting, redirecting, or decorating the transition from the currently active routes.</source>
          <target state="translated">Действие &lt;code&gt;willTransition&lt;/code&gt; запускается в начале любой попытки перехода с объектом &lt;code&gt;Transition&lt;/code&gt; в качестве единственного аргумента. Это действие можно использовать для прерывания, перенаправления или украшения перехода от текущих активных маршрутов.</target>
        </trans-unit>
        <trans-unit id="816958a0f032f49a594b1d8da2c79bf4235daf44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{#each}}&lt;/code&gt; helper loops over elements in a collection. It is an extension of the base Handlebars &lt;code&gt;{{#each}}&lt;/code&gt; helper. The default behavior of &lt;code&gt;{{#each}}&lt;/code&gt; is to yield its inner block once for every item in an array passing the item as the first block parameter.</source>
          <target state="translated">&lt;code&gt;{{#each}}&lt;/code&gt; хелпер перебирает элементы в коллекции. Это расширение базового помощника Handlebars &lt;code&gt;{{#each}}&lt;/code&gt; . Поведение по умолчанию для &lt;code&gt;{{#each}}&lt;/code&gt; состоит в том, чтобы передать свой внутренний блок один раз для каждого элемента в массиве, передав этот элемент в качестве первого параметра блока.</target>
        </trans-unit>
        <trans-unit id="c79d6054773867f3779b96924372f54a35225401" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{action}}&lt;/code&gt; helper provides a way to pass triggers for behavior (usually just a function) between components, and into components from controllers.</source>
          <target state="translated">&lt;code&gt;{{action}}&lt;/code&gt; помощник обеспечивает способ передачи триггеров поведения ( как правило , только функцию) между компонентами, а также на компоненты из контроллеров.</target>
        </trans-unit>
        <trans-unit id="2188ae955717f0311ee55bfeb274d37ec4fab50a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{component}}&lt;/code&gt; helper lets you add instances of &lt;code&gt;Ember.Component&lt;/code&gt; to a template. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember.Component&lt;/a&gt; for additional information on how a &lt;code&gt;Component&lt;/code&gt; functions. &lt;code&gt;{{component}}&lt;/code&gt;'s primary use is for cases where you want to dynamically change which type of component is rendered as the state of your application changes. This helper has three modes: inline, block, and nested.</source>
          <target state="translated">&lt;code&gt;{{component}}&lt;/code&gt; помощник позволяет добавлять экземпляры &lt;code&gt;Ember.Component&lt;/code&gt; в шаблон. См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember.Component&lt;/a&gt; для получения дополнительной информации о том, как работает &lt;code&gt;Component&lt;/code&gt; . Основное использование &lt;code&gt;{{component}}&lt;/code&gt; - это случаи, когда вы хотите динамически изменять тип компонента, отображаемого при изменении состояния вашего приложения. Этот помощник имеет три режима: встроенный, блочный и вложенный.</target>
        </trans-unit>
        <trans-unit id="ccb3abeccf1d3935a6c118b1810a1a10f67f5fd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{each-in}}&lt;/code&gt; helper loops over properties on an object.</source>
          <target state="translated">В &lt;code&gt;{{each-in}}&lt;/code&gt; хелпер петель над свойствами на объекте.</target>
        </trans-unit>
        <trans-unit id="3212095109428b4cbc3365440b62953596163903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{get}}&lt;/code&gt; helper allows you to dynamically specify which property to bind, while the &lt;code&gt;{{mut}}&lt;/code&gt; helper allows the binding to be updated from the input. See the respective helper documentation for more detail.</source>
          <target state="translated">&lt;code&gt;{{get}}&lt;/code&gt; помощник позволяет динамически определять , какое свойство связывать, в то время как &lt;code&gt;{{mut}}&lt;/code&gt; помощник позволяет связыванию обновляться от входа. См. Дополнительную информацию в соответствующей вспомогательной документации.</target>
        </trans-unit>
        <trans-unit id="3b4f5775189e04e5beb9481aaf74caccbff888df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{get}}&lt;/code&gt; helper can also respect mutable values itself. For example:</source>
          <target state="translated">Хелпер &lt;code&gt;{{get}}&lt;/code&gt; также может учитывать изменяемые значения. Например:</target>
        </trans-unit>
        <trans-unit id="bd0b47992fc4b78b9df9bbf1e6731c7ed45259f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{input}}&lt;/code&gt; helper lets you create an HTML &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; component. It causes an &lt;code&gt;Ember.TextField&lt;/code&gt; component to be rendered. For more info, see the &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;Ember.TextField&lt;/a&gt; docs and the &lt;a href=&quot;https://emberjs.com/guides/templates/input-helpers/&quot;&gt;templates guide&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{{input}}&lt;/code&gt; помощник позволяет создавать HTML &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; компонент. Это вызывает &lt;code&gt;Ember.TextField&lt;/code&gt; компонента Ember.TextField . Для получения дополнительной информации см. Документацию &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;Ember.TextField&lt;/a&gt; и &lt;a href=&quot;https://emberjs.com/guides/templates/input-helpers/&quot;&gt;руководство&lt;/a&gt; по шаблонам .</target>
        </trans-unit>
        <trans-unit id="a7acad9bb4a31001b61e35a4c0adf75c035da764" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{link-to}}&lt;/code&gt; Component</source>
          <target state="translated">&lt;code&gt;{{link-to}}&lt;/code&gt; Компонент</target>
        </trans-unit>
        <trans-unit id="3ea57e523caa15a38446ec50b9e79ddf92910c41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{link-to}}&lt;/code&gt; component renders a link to the supplied &lt;code&gt;routeName&lt;/code&gt; passing an optionally supplied model to the route as its &lt;code&gt;model&lt;/code&gt; context of the route. The block for &lt;code&gt;{{link-to}}&lt;/code&gt; becomes the innerHTML of the rendered element:</source>
          <target state="translated">Компонент &lt;code&gt;{{link-to}}&lt;/code&gt; отображает ссылку на предоставленное &lt;code&gt;routeName&lt;/code&gt; , передавая необязательно предоставленную модель в маршрут в качестве его &lt;code&gt;model&lt;/code&gt; контекста маршрута. Блок для &lt;code&gt;{{link-to}}&lt;/code&gt; становится внутренним HTML визуализированного элемента:</target>
        </trans-unit>
        <trans-unit id="e774d713fb0f90f4a303ddde2564100df64e2437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{link-to}}&lt;/code&gt; component takes one or two arguments:</source>
          <target state="translated">Компонент &lt;code&gt;{{link-to}}&lt;/code&gt; принимает один или два аргумента:</target>
        </trans-unit>
        <trans-unit id="39dd886ddbed7524e4a83856c25fa9788916f62d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{link-to}}&lt;/code&gt; helper will also add an &lt;code&gt;active&lt;/code&gt; class to the link that points to the currently active route.</source>
          <target state="translated">&lt;code&gt;{{link-to}}&lt;/code&gt; помощник будет также добавить &lt;code&gt;active&lt;/code&gt; класс по ссылке , которая указывает на текущий активный маршрут.</target>
        </trans-unit>
        <trans-unit id="90bfcd41e8565432c07cbbddf8858b5ba91f619a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{log}}&lt;/code&gt; helper also accepts primitive types such as strings or numbers.</source>
          <target state="translated">&lt;code&gt;{{log}}&lt;/code&gt; хелпер принимает примитивные типы , такие как строки или числа.</target>
        </trans-unit>
        <trans-unit id="e201996bfd3ba8afd0712fffee879e9357d52b69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{mount}}&lt;/code&gt; helper lets you embed a routeless engine in a template. Mounting an engine will cause an instance to be booted and its &lt;code&gt;application&lt;/code&gt; template to be rendered.</source>
          <target state="translated">&lt;code&gt;{{mount}}&lt;/code&gt; помощник позволяет встроить routeless двигатель в шаблоне. Установка движка вызовет загрузку экземпляра и визуализацию его шаблона &lt;code&gt;application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31eeebbd0adb9055cb1d8e00dfafd1d5331e5d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{outlet}}&lt;/code&gt; helper lets you specify where a child route will render in your template. An important use of the &lt;code&gt;{{outlet}}&lt;/code&gt; helper is in your application's &lt;code&gt;application.hbs&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;{{outlet}}&lt;/code&gt; помощника позволяет указать , где ребенок маршрут будет сделать в шаблоне. Важное использование помощника &lt;code&gt;{{outlet}}&lt;/code&gt; находится в файле &lt;code&gt;application.hbs&lt;/code&gt; вашего приложения :</target>
        </trans-unit>
        <trans-unit id="0ebbf8fe3922c7aefb3561c65af8dc306db37942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{unbound}}&lt;/code&gt; helper disconnects the one-way binding of a property, essentially freezing its value at the moment of rendering. For example, in this example the display of the variable &lt;code&gt;name&lt;/code&gt; will not change even if it is set with a new value:</source>
          <target state="translated">&lt;code&gt;{{unbound}}&lt;/code&gt; хелпер отсоединяет одну сторону связывания свойства, по существу , замораживание ее значение в момент рендеринга. Например, в этом примере на дисплее переменной &lt;code&gt;name&lt;/code&gt; не изменится , даже если он установлен на новое значение:</target>
        </trans-unit>
        <trans-unit id="1c3bbef8d77a015f1b44f113e8413c77e1d8e3ae" translate="yes" xml:space="preserve">
          <source>The CLI &lt;code&gt;generate util&lt;/code&gt; command will create a utility file and a unit test. We'll delete the unit test since we don't want to test Google code.</source>
          <target state="translated">Команда CLI &lt;code&gt;generate util&lt;/code&gt; создаст служебный файл и модульный тест. Мы удалим модульный тест, поскольку мы не хотим тестировать код Google.</target>
        </trans-unit>
        <trans-unit id="314686d9ca63241b41addc06dbaf29e1f9de2111" translate="yes" xml:space="preserve">
          <source>The CSS class name used for active classes can be customized for a single use of &lt;code&gt;{{link-to}}&lt;/code&gt; by passing an &lt;code&gt;activeClass&lt;/code&gt; option:</source>
          <target state="translated">Имя класса CSS, используемое для активных классов, можно настроить для однократного использования &lt;code&gt;{{link-to}}&lt;/code&gt; , передав параметр &lt;code&gt;activeClass&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a18277d28224fe13bf61456994d23cdddba18d00" translate="yes" xml:space="preserve">
          <source>The CSS class to apply to &lt;code&gt;LinkComponent&lt;/code&gt;'s element when its &lt;code&gt;active&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Класс CSS, применяемый к &lt;code&gt;LinkComponent&lt;/code&gt; , когда его свойство &lt;code&gt;active&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3560d1810ba6a290f018a30acb7a6abe17dc478d" translate="yes" xml:space="preserve">
          <source>The Component Lifecycle</source>
          <target state="translated">Жизненный цикл компонентов</target>
        </trans-unit>
        <trans-unit id="be34b5a31efa66b89e017638eee272b8df985bde" translate="yes" xml:space="preserve">
          <source>The DOM events for which the event dispatcher should listen.</source>
          <target state="translated">События DOM,которые должен слушать диспетчер событий.</target>
        </trans-unit>
        <trans-unit id="16262c4e9109f80339ca991e19c44c9238c16f0c" translate="yes" xml:space="preserve">
          <source>The Data tab is kept in sync with the data loaded in your application. Any record additions, deletions, or changes are reflected immediately. If you have unsaved records, they will be displayed in green by clicking on the New pill.</source>
          <target state="translated">Вкладка &quot;Данные&quot; синхронизируется с данными,загруженными в ваше приложение.Любые добавления,удаления или изменения записей отражаются немедленно.Если у Вас есть несохраненные записи,они будут отображены зеленым цветом,нажав на кнопку Новая таблетка.</target>
        </trans-unit>
        <trans-unit id="d52fbf4800c86d55bd033e9092c8b9094d06aa21" translate="yes" xml:space="preserve">
          <source>The DefaultResolver defines the default lookup rules to resolve container lookups before consulting the container for registered items:</source>
          <target state="translated">DefaultResolver определяет правила поиска по умолчанию для разрешения поиска контейнеров перед консультацией с контейнером для зарегистрированных элементов:</target>
        </trans-unit>
        <trans-unit id="c29711481fa25b48f2527c2fa7d8f0b8bed7a3b1" translate="yes" xml:space="preserve">
          <source>The Development Server</source>
          <target state="translated">Сервер разработки</target>
        </trans-unit>
        <trans-unit id="ed05a3cd2719814bf85e78b39e4626d5b1cd6abf" translate="yes" xml:space="preserve">
          <source>The Duration column displays the render time for a given template, including the template's children.</source>
          <target state="translated">В колонке &quot;Продолжительность&quot; отображается время рендеринга для данного шаблона,включая дочерние элементы шаблона.</target>
        </trans-unit>
        <trans-unit id="2ea15e43ed02f23a492330509b7d70ff1b380882" translate="yes" xml:space="preserve">
          <source>The ENV object contains three important keys:</source>
          <target state="translated">Объект ENV содержит три важные клавиши:</target>
        </trans-unit>
        <trans-unit id="0f945314114021b149d52673626a64f4c3fb7096" translate="yes" xml:space="preserve">
          <source>The Ember Data store provides an interface for retrieving records of a single type.</source>
          <target state="translated">Хранилище данных Ember предоставляет интерфейс для получения записей одного типа.</target>
        </trans-unit>
        <trans-unit id="487c17cf393eda62f1f2c80da81270c64a1b3885" translate="yes" xml:space="preserve">
          <source>The Ember Inspector is a browser add-on designed to help you understand and debug your Ember applications. You can install it on &lt;a href=&quot;installation#toc_google-chrome&quot;&gt;Google Chrome&lt;/a&gt;, &lt;a href=&quot;installation#toc_firefox&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;installation#toc_via-bookmarklet&quot;&gt;other browsers&lt;/a&gt; (via a bookmarklet)</source>
          <target state="translated">Ember Inspector - это надстройка браузера, предназначенная для помощи в понимании и отладке ваших приложений Ember. Вы можете установить его в &lt;a href=&quot;installation#toc_google-chrome&quot;&gt;Google Chrome&lt;/a&gt; , &lt;a href=&quot;installation#toc_firefox&quot;&gt;Firefox&lt;/a&gt; и &lt;a href=&quot;installation#toc_via-bookmarklet&quot;&gt;других браузерах&lt;/a&gt; (через букмарклет)</target>
        </trans-unit>
        <trans-unit id="b5ad72511f1a7b31a3a54993b2baf0d48b44720c" translate="yes" xml:space="preserve">
          <source>The Ember Router allows you to provide feedback that a route is loading, as well as when an error occurs in loading a route.</source>
          <target state="translated">Ember Router позволяет обеспечить обратную связь о загрузке маршрута,а также при возникновении ошибки при загрузке маршрута.</target>
        </trans-unit>
        <trans-unit id="d259bb541551f92c36e45ba009a06cd16a1ca136" translate="yes" xml:space="preserve">
          <source>The Ember application is inside a sandboxed iframe with no url (if you are using JS Bin, follow &lt;a href=&quot;#toc_using-the-inspector-with-js-bin&quot;&gt;these steps&lt;/a&gt;.</source>
          <target state="translated">Приложение Ember находится внутри изолированного iframe без URL (если вы используете JS Bin, выполните &lt;a href=&quot;#toc_using-the-inspector-with-js-bin&quot;&gt;следующие действия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf6333e738da626887805c4ba5c1a1355ba0d71f" translate="yes" xml:space="preserve">
          <source>The Ember community values collaboration and building common tools that everyone relies on. If you're interested in deploying your app to production in a fast and reliable way, check out the &lt;a href=&quot;http://ember-cli-deploy.com/&quot;&gt;Ember CLI Deploy&lt;/a&gt; addon.</source>
          <target state="translated">Сообщество Ember ценит сотрудничество и создание общих инструментов, на которые полагаются все. Если вы заинтересованы в быстром и надежном развертывании своего приложения в производственной среде, ознакомьтесь с &lt;a href=&quot;http://ember-cli-deploy.com/&quot;&gt;надстройкой Ember CLI Deploy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd16b48b3b7627eda9a94aaf81db356a438f0ccb" translate="yes" xml:space="preserve">
          <source>The Ember router has four options to manage your application's URL: &lt;code&gt;history&lt;/code&gt;, which uses the HTML5 History API; &lt;code&gt;hash&lt;/code&gt;, which uses anchor-based URLs; &lt;code&gt;auto&lt;/code&gt;, which uses &lt;code&gt;history&lt;/code&gt; if supported by the user's browser, and falls back to &lt;code&gt;hash&lt;/code&gt; otherwise; and &lt;code&gt;none&lt;/code&gt;, which doesn't update the URL. By default, Ember CLI configures the router to use &lt;code&gt;auto&lt;/code&gt;. You can change this option in &lt;code&gt;config/environment.js&lt;/code&gt; under &lt;code&gt;ENV.locationType&lt;/code&gt;.</source>
          <target state="translated">У маршрутизатора Ember есть четыре варианта управления URL-адресом вашего приложения: &lt;code&gt;history&lt;/code&gt; , использующая API истории HTML5; &lt;code&gt;hash&lt;/code&gt; , который использует URL-адреса на основе привязки; &lt;code&gt;auto&lt;/code&gt; , который использует &lt;code&gt;history&lt;/code&gt; если поддерживается браузером пользователя, и возвращается к &lt;code&gt;hash&lt;/code&gt; противном случае; и &lt;code&gt;none&lt;/code&gt; , что не обновляет URL. По умолчанию Ember CLI настраивает маршрутизатор на использование &lt;code&gt;auto&lt;/code&gt; . Вы можете изменить эту опцию в &lt;code&gt;config/environment.js&lt;/code&gt; в &lt;code&gt;ENV.locationType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7a78387322a36a85c1c5009f5fb0f7c35f76084" translate="yes" xml:space="preserve">
          <source>The Guides are intended to contain practical explanations of how to build Ember apps, focusing on the most widely-used features of Ember.js. For comprehensive documentation of every Ember feature and API, see the &lt;a href=&quot;http://emberjs.com/api/&quot;&gt;Ember.js API documentation&lt;/a&gt;.</source>
          <target state="translated">Руководства предназначены для того, чтобы содержать практические объяснения того, как создавать приложения Ember, с упором на наиболее широко используемые функции Ember.js. Для полной документации по каждой функции и API Ember см. &lt;a href=&quot;http://emberjs.com/api/&quot;&gt;Документацию по API Ember.js&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f275cf778b6d119ab020c3d01e5250ad0219426" translate="yes" xml:space="preserve">
          <source>The Guides begin with an explanation of how to get started with Ember, followed by a tutorial on how to build your first Ember app. If you're brand new to Ember, we recommend you start off by following along with these first two sections of the Guides.</source>
          <target state="translated">Путеводители начинаются с объяснения того,как начать работу с Ember,а затем следуют инструкции о том,как построить ваше первое приложение Ember.Если вы новичок в Ember,мы рекомендуем вам начать с следующих двух первых разделов Путеводителей.</target>
        </trans-unit>
        <trans-unit id="3c07d3314a98bd2f32c93ed811bdc5e03c2e9eb7" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;class&lt;/code&gt; attribute of a component's tag can be set by providing a &lt;code&gt;classNames&lt;/code&gt; property that is set to an array of strings:</source>
          <target state="translated">Атрибут HTML- &lt;code&gt;class&lt;/code&gt; тега компонента можно установить, предоставив свойство &lt;code&gt;classNames&lt;/code&gt; , для которого задан массив строк:</target>
        </trans-unit>
        <trans-unit id="712c891dbe91ea95b6ed85832f3affbadeaa1d8c" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;id&lt;/code&gt; of the component's element in the DOM. You can provide this value yourself but it must be unique (just as in HTML):</source>
          <target state="translated">HTML- &lt;code&gt;id&lt;/code&gt; элемента компонента в DOM. Вы можете указать это значение самостоятельно, но оно должно быть уникальным (как в HTML):</target>
        </trans-unit>
        <trans-unit id="77babb069a61a648d0e212eb50fbca403ad78359" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;id&lt;/code&gt; of the view's element in the DOM. You can provide this value yourself but it must be unique (just as in HTML):</source>
          <target state="translated">HTML- &lt;code&gt;id&lt;/code&gt; элемента представления в DOM. Вы можете указать это значение самостоятельно, но оно должно быть уникальным (как в HTML):</target>
        </trans-unit>
        <trans-unit id="d5ce9a853ceec8935a32736d2ed256b8ef580453" translate="yes" xml:space="preserve">
          <source>The HTML attribute section of a component's tag can be set by providing an &lt;code&gt;attributeBindings&lt;/code&gt; property set to an array of property names on the component. The return value of these properties will be used as the value of the component's HTML associated attribute:</source>
          <target state="translated">Раздел атрибутов HTML тега компонента может быть установлен путем предоставления свойства &lt;code&gt;attributeBindings&lt;/code&gt; , установленного для массива имен свойств в компоненте. Возвращаемое значение этих свойств будет использоваться как значение атрибута HTML, связанного с компонентом:</target>
        </trans-unit>
        <trans-unit id="f3ca8096b2b2a08769eef8f9d51a7c386381b928" translate="yes" xml:space="preserve">
          <source>The IDs will be passed as a URL-encoded Array of IDs, in this form:</source>
          <target state="translated">В этой форме IDs будут передаваться в виде массива идентификаторов,закодированного по URL:</target>
        </trans-unit>
        <trans-unit id="c9440c491aa7e5a5571ef8d623370fad7dc61a99" translate="yes" xml:space="preserve">
          <source>The Inspector displays the parent objects and mixins that are composed into the chosen object, including the inherited properties.</source>
          <target state="translated">Инспектор отображает родительские объекты и смеси,которые состоят в выбранном объекте,включая унаследованные свойства.</target>
        </trans-unit>
        <trans-unit id="751510e2504c4b774d23cdd66c8c40b91042175d" translate="yes" xml:space="preserve">
          <source>The Inspector displays these routes:</source>
          <target state="translated">Инспектор показывает эти маршруты:</target>
        </trans-unit>
        <trans-unit id="690c38e1e0e3e9aad8aa3afc61469ec327e5aab8" translate="yes" xml:space="preserve">
          <source>The Inspector highlights the currently active routes. However, if your app has grown too large for this to be useful, you can use the &lt;code&gt;Current Route Only&lt;/code&gt; checkbox to hide all routes except the currently active ones.</source>
          <target state="translated">Инспектор подсвечивает активные в данный момент маршруты. Однако, если ваше приложение стало слишком большим, чтобы его можно было использовать, вы можете использовать флажок &amp;laquo; &lt;code&gt;Current Route Only&lt;/code&gt; чтобы скрыть все маршруты, кроме активных в данный момент.</target>
        </trans-unit>
        <trans-unit id="f30f50f616f12ec02246e464e631a2ca7d407d6d" translate="yes" xml:space="preserve">
          <source>The Inspector includes a panel that allows you to view and interact with your Ember objects. To open it, click on any Ember object. You can then view the object's properties.</source>
          <target state="translated">Инспектор включает в себя панель,которая позволяет просматривать объекты Ember и взаимодействовать с ними.Чтобы открыть ее,нажмите на любой объект Ember.После этого вы можете просмотреть свойства объекта.</target>
        </trans-unit>
        <trans-unit id="b07f0c70b2f17b1a0937f0084ad1769ae1c7b677" translate="yes" xml:space="preserve">
          <source>The Inspector provides a way to look at all Promises created in your application. Click on the &lt;code&gt;Promises&lt;/code&gt; menu to start inspecting them.</source>
          <target state="translated">Инспектор позволяет просматривать все обещания, созданные в вашем приложении. Щелкните меню &amp;laquo; &lt;code&gt;Promises&lt;/code&gt; чтобы начать их изучение.</target>
        </trans-unit>
        <trans-unit id="62cf4d7c67083a3006feaede174affa0b51ea132" translate="yes" xml:space="preserve">
          <source>The Inspector provides a way to view a Promise's stack trace. Tracing Promises is disabled by default for performance reasons. To enable tracing, check the &lt;code&gt;Trace promise&lt;/code&gt; checkbox. You may want to reload to trace existing Promises.</source>
          <target state="translated">Инспектор предоставляет способ просмотреть трассировку стека обещания. Трассировка обещаний по умолчанию отключена из соображений производительности. Чтобы включить трассировку, установите флажок &amp;laquo; &lt;code&gt;Trace promise&lt;/code&gt; . Возможно, вы захотите перезагрузить, чтобы отследить существующие обещания.</target>
        </trans-unit>
        <trans-unit id="a817980043f7fb6f67f44a551dd1bc461d4d9f8e" translate="yes" xml:space="preserve">
          <source>The JSON API adapter will automatically send a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/posts/1&lt;/code&gt;.</source>
          <target state="translated">Адаптер JSON API автоматически отправит запрос &lt;code&gt;GET&lt;/code&gt; на &lt;code&gt;/posts/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="010af95fc7f9a5c21dd89196b646d7c1093ea5b8" translate="yes" xml:space="preserve">
          <source>The JSON payload should be an object that contains the record inside a root property. For example, in response to a &lt;code&gt;GET&lt;/code&gt; request for &lt;code&gt;/posts/1&lt;/code&gt;, the JSON should look like this:</source>
          <target state="translated">Полезная нагрузка JSON должна быть объектом, содержащим запись внутри корневого свойства. Например, в ответ на запрос &lt;code&gt;GET&lt;/code&gt; для &lt;code&gt;/posts/1&lt;/code&gt; JSON должен выглядеть так:</target>
        </trans-unit>
        <trans-unit id="01e0b389167fcbb21b9dfab152a2b6136aa145d1" translate="yes" xml:space="preserve">
          <source>The JSON returned should look like this:</source>
          <target state="translated">Возвращение JSON должно выглядеть так:</target>
        </trans-unit>
        <trans-unit id="04d2c141e4adc4849c1a9d91f7f144599c2898c1" translate="yes" xml:space="preserve">
          <source>The JSON should encode the relationship as an ID to another record:</source>
          <target state="translated">JSON должен кодировать связь как идентификатор к другой записи:</target>
        </trans-unit>
        <trans-unit id="8b9146885924e80940db37b81326f9209df93900" translate="yes" xml:space="preserve">
          <source>The JSON should encode the relationship as an array of IDs and types:</source>
          <target state="translated">JSON должен кодировать отношение как массив идентификаторов и типов:</target>
        </trans-unit>
        <trans-unit id="aa6abe7bb9f4b0f9e54508fdc1d5224614314c01" translate="yes" xml:space="preserve">
          <source>The JSONAPIAdapter uses JSON API conventions for building the url for a record and selecting the HTTP verb to use with a request. The actions you can take on a record map onto the following URLs in the JSON API adapter:</source>
          <target state="translated">JSONAPIAdapter использует JSON API конвенции для построения url для записи и выбора HTTP глагола для использования с запросом.Действия,которые вы можете предпринять на карте записи по следующим URL в JSON API адаптере:</target>
        </trans-unit>
        <trans-unit id="319a4c20db8f22613ffca3673ffd0b4f116cbd53" translate="yes" xml:space="preserve">
          <source>The JSONAPIAdapter will consider a success any response with a status code of the 2xx family (&quot;Success&quot;), as well as 304 (&quot;Not Modified&quot;). Any other status code will be considered a failure.</source>
          <target state="translated">JSONAPIAdapter будет считать успешным любой ответ со статусным кодом семейства 2xx (&quot;Успех&quot;),а также 304 (&quot;Не изменен&quot;).Любой другой код статуса будет считаться неудачным.</target>
        </trans-unit>
        <trans-unit id="487ab77d5dbd345e6346d5f74c302b58d482236b" translate="yes" xml:space="preserve">
          <source>The Model Hook</source>
          <target state="translated">Модельный крюк</target>
        </trans-unit>
        <trans-unit id="97c09292b53b45afc09c57770f7220ff9a4c953a" translate="yes" xml:space="preserve">
          <source>The NativeArray mixin contains the properties needed to make the native Array support Ember.MutableArray and all of its dependent APIs. Unless you have &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; or &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Array&lt;/code&gt; set to false, this will be applied automatically. Otherwise you can apply the mixin at anytime by calling &lt;code&gt;Ember.NativeArray.apply(Array.prototype)&lt;/code&gt;.</source>
          <target state="translated">Миксин NativeArray содержит свойства, необходимые для того, чтобы собственный массив Array поддерживал Ember.MutableArray и все его зависимые API. Если для &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; или &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.Array&lt;/code&gt; установлено значение false, это будет применяться автоматически. В противном случае вы можете применить миксин в любое время, вызвав &lt;code&gt;Ember.NativeArray.apply(Array.prototype)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f728d39e800e681d2478973af1aacfb873e272e4" translate="yes" xml:space="preserve">
          <source>The Parent Route</source>
          <target state="translated">Родительский маршрут</target>
        </trans-unit>
        <trans-unit id="8e7bb3b57567e2227a221f010574edc6b4965cd1" translate="yes" xml:space="preserve">
          <source>The REST adapter allows your store to communicate with an HTTP server by transmitting JSON via XHR. Most Ember.js apps that consume a JSON API should use the REST adapter.</source>
          <target state="translated">Адаптер REST позволяет вашему магазину общаться с HTTP-сервером,передавая JSON через XHR.Большинство приложений Ember.js,которые потребляют JSON API,должны использовать REST адаптер.</target>
        </trans-unit>
        <trans-unit id="fc6f2d961e0e8648bf62845bef00cfd62c181e1b" translate="yes" xml:space="preserve">
          <source>The REST adapter expects the JSON returned from your server to follow these conventions.</source>
          <target state="translated">Адаптер REST ожидает,что JSON,возвращаемый с вашего сервера,будет следовать этим конвенциям.</target>
        </trans-unit>
        <trans-unit id="5ebe4d3849e4f0595a2c49dc9cebb6616874d70b" translate="yes" xml:space="preserve">
          <source>The REST adapter will consider a success any response with a status code of the 2xx family (&quot;Success&quot;), as well as 304 (&quot;Not Modified&quot;). Any other status code will be considered a failure.</source>
          <target state="translated">REST-адаптер будет считать успешным любой ответ с кодом статуса семейства 2xx (&quot;Успех&quot;),а также 304 (&quot;Не изменен&quot;).Любой другой код статуса будет считаться неудачным.</target>
        </trans-unit>
        <trans-unit id="3172f22137802d4a8642cfa5668354ec4d3eeea5" translate="yes" xml:space="preserve">
          <source>The Router Pauses for Promises</source>
          <target state="translated">Маршрутизатор паузы для обещаний</target>
        </trans-unit>
        <trans-unit id="efc37914e3487c9ca3df5d1d763f3449e864fe55" translate="yes" xml:space="preserve">
          <source>The Router service is the public API that provides component/view layer access to the router.</source>
          <target state="translated">Служба Router является публичным API,который предоставляет доступ к маршрутизатору на уровне компонентов/просмотра.</target>
        </trans-unit>
        <trans-unit id="0c9d4cff939b6e9fcde57c63e9fa2dc698d186a0" translate="yes" xml:space="preserve">
          <source>The Routes tab displays a list of your application's routes.</source>
          <target state="translated">На вкладке &quot;Маршруты&quot; отображается список маршрутов вашего приложения.</target>
        </trans-unit>
        <trans-unit id="84729b1e90f85ba399f1de4cfa6c0e4c113086c4" translate="yes" xml:space="preserve">
          <source>The Run Loop</source>
          <target state="translated">Петля Run Loop</target>
        </trans-unit>
        <trans-unit id="c32cedc8b4658f5a2c9ec3fd3e53275c0943aca6" translate="yes" xml:space="preserve">
          <source>The SOLID principles of good design tell us that objects should have a single responsibility. The responsibility of a component should be presenting model data to the user, not fetching the model.</source>
          <target state="translated">Принципы хорошего дизайна SOLID говорят нам о том,что на объектах должна быть единая ответственность.Ответственность компонента должна заключаться в представлении данных модели пользователю,а не в получении модели.</target>
        </trans-unit>
        <trans-unit id="2750c3a85432d63bf43d76ed414a487327be0ac0" translate="yes" xml:space="preserve">
          <source>The Store and a Single Source of Truth</source>
          <target state="translated">Магазин и Единый Источник Истины.</target>
        </trans-unit>
        <trans-unit id="9f42b50dcb01303923e39ca4b080e7c21fefec38" translate="yes" xml:space="preserve">
          <source>The URL can be set in a few ways:</source>
          <target state="translated">URL-адрес может быть установлен несколькими способами:</target>
        </trans-unit>
        <trans-unit id="0bcc0cf43c5c46031ea589d18baa3c4b454de17b" translate="yes" xml:space="preserve">
          <source>The View Tree</source>
          <target state="translated">Видовое дерево</target>
        </trans-unit>
        <trans-unit id="41ef7117b31fdc6690fac73d0b81e21453b46c57" translate="yes" xml:space="preserve">
          <source>The View Tree ignores components and inline views by default. To load these into the View Tree check the &lt;code&gt;Components&lt;/code&gt; and &lt;code&gt;All Views&lt;/code&gt; checkboxes.</source>
          <target state="translated">Дерево представлений по умолчанию игнорирует компоненты и встроенные представления. Чтобы загрузить их в дерево представлений, установите флажки &amp;laquo; &lt;code&gt;Components&lt;/code&gt; и &amp;laquo; &lt;code&gt;All Views&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3bb30d409dd94a905d7278b4f7300834afaa9d8" translate="yes" xml:space="preserve">
          <source>The WAI-ARIA role of the control represented by this view. For example, a button may have a role of type 'button', or a pane may have a role of type 'alertdialog'. This property is used by assistive software to help visually challenged users navigate rich web applications.</source>
          <target state="translated">WAI-ARIA роль контроля,представленная этой точкой зрения.Например,кнопка может иметь роль типа 'кнопка',или панель может иметь роль типа 'алерт-диалог'.Это свойство используется вспомогательным программным обеспечением для помощи пользователям,испытывающим трудности с визуальным восприятием,в навигации по богатым веб-приложениям.</target>
        </trans-unit>
        <trans-unit id="599db392fb52dd7a9d9ebf1a02ad877e6dc24952" translate="yes" xml:space="preserve">
          <source>The ability to consume a growing ecosystem of &lt;a href=&quot;https://emberobserver.com/&quot;&gt;Ember Addons&lt;/a&gt;.</source>
          <target state="translated">Возможность использовать растущую экосистему &lt;a href=&quot;https://emberobserver.com/&quot;&gt;Ember Addons&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="236eb25e1509b24135c459c63eaaa974644a72a7" translate="yes" xml:space="preserve">
          <source>The above code will allow you invoke the &lt;code&gt;sum()&lt;/code&gt; function as a &lt;code&gt;{{sum}}&lt;/code&gt; handlebars &quot;helper&quot; in your templates:</source>
          <target state="translated">Приведенный выше код позволит вам вызывать функцию &lt;code&gt;sum()&lt;/code&gt; в качестве &quot;помощника&quot; ручек &lt;code&gt;{{sum}}&lt;/code&gt; в ваших шаблонах:</target>
        </trans-unit>
        <trans-unit id="17aff5f3819b34917a219ca60e2165bb9008b501" translate="yes" xml:space="preserve">
          <source>The above example contains two arguments:</source>
          <target state="translated">Приведенный выше пример содержит два аргумента:</target>
        </trans-unit>
        <trans-unit id="4f30b8685376aad3470d0d8bc20b92baa1adf445" translate="yes" xml:space="preserve">
          <source>The above example returns the original arguments (after your customizations) back to the parent class, so it can continue with its normal operations.</source>
          <target state="translated">Приведенный выше пример возвращает исходные аргументы (после ваших настроек)обратно в родительский класс,чтобы он мог продолжить свои обычные операции.</target>
        </trans-unit>
        <trans-unit id="0de72be9fc4a958c468aab5fce926f1c1d8e1f2a" translate="yes" xml:space="preserve">
          <source>The above example template will render a template named &quot;-nav&quot;, which has the same context as the parent template it's rendered into, so if the &quot;-nav&quot; template also referenced &lt;code&gt;{{foo}}&lt;/code&gt;, it would print the same thing as the &lt;code&gt;{{foo}}&lt;/code&gt; in the above example.</source>
          <target state="translated">В приведенном выше примере шаблона будет отображаться шаблон с именем &amp;laquo;-nav&amp;raquo;, который имеет тот же контекст, что и родительский шаблон, в котором он отображается, поэтому, если шаблон &amp;laquo;-nav&amp;raquo; также ссылается на &lt;code&gt;{{foo}}&lt;/code&gt; , он будет печатать то же самое, что и &lt;code&gt;{{foo}}&lt;/code&gt; в приведенном выше примере.</target>
        </trans-unit>
        <trans-unit id="b5a49ec8b75cd43831c857a7b5a6f317839e3550" translate="yes" xml:space="preserve">
          <source>The above example will look up the value of &lt;code&gt;someTemplateName&lt;/code&gt; on the template context (e.g. a controller) and use that value as the name of the template to render. If the resolved value is falsy, nothing will be rendered. If &lt;code&gt;someTemplateName&lt;/code&gt; changes, the partial will be re-rendered using the new template name.</source>
          <target state="translated">В приведенном выше примере выполняется поиск значения &lt;code&gt;someTemplateName&lt;/code&gt; в контексте шаблона (например, в контроллере) и используется это значение в качестве имени шаблона для визуализации. Если разрешенное значение является ложным, ничего не будет отображаться. Если &lt;code&gt;someTemplateName&lt;/code&gt; изменится, партиал будет повторно отрисован с использованием нового имени шаблона.</target>
        </trans-unit>
        <trans-unit id="4a17372c1a6f0d338afcba08934ad438cff05188" translate="yes" xml:space="preserve">
          <source>The above example will print a list like this:</source>
          <target state="translated">В приведенном выше примере будет распечатан список,подобный этому:</target>
        </trans-unit>
        <trans-unit id="14759cf8b76d4ce53586ecc24fe64560891c5d11" translate="yes" xml:space="preserve">
          <source>The above template and controller render as the following HTML:</source>
          <target state="translated">Вышеуказанный шаблон и контроллер визуализируются как следующий HTML:</target>
        </trans-unit>
        <trans-unit id="647c3ca2996d871bb4527f63fd867d23a1ddf4a8" translate="yes" xml:space="preserve">
          <source>The above template will render HTML like this:</source>
          <target state="translated">Вышеприведенный шаблон будет отображать HTML подобно этому:</target>
        </trans-unit>
        <trans-unit id="1b6db4d979bea0f132b8aecf3e051e28b2ff75cb" translate="yes" xml:space="preserve">
          <source>The above will result in the following HTML output:</source>
          <target state="translated">Вышеуказанное приведет к следующему HTML-выведению:</target>
        </trans-unit>
        <trans-unit id="1f4cb9f31c2595e4f16286bd14d0a1224fdd7a4e" translate="yes" xml:space="preserve">
          <source>The action &lt;code&gt;deleteUser&lt;/code&gt; is in quotes, since &lt;code&gt;system-preferences-editor&lt;/code&gt; is where the action is defined now. Quotes indicate that the action should be looked for in &lt;code&gt;actions&lt;/code&gt; local to that component, rather than in those that have been passed from a parent.</source>
          <target state="translated">Действие &lt;code&gt;deleteUser&lt;/code&gt; заключено в кавычки, так как теперь это действие определяется &lt;code&gt;system-preferences-editor&lt;/code&gt; . Кавычки указывают на то, что действие следует искать в &lt;code&gt;actions&lt;/code&gt; локальных для этого компонента, а не в действиях, переданных от родителя.</target>
        </trans-unit>
        <trans-unit id="bc124545536eb0f1b78bc91d3e1823a25158f2d9" translate="yes" xml:space="preserve">
          <source>The action to trigger</source>
          <target state="translated">Действие,чтобы вызвать</target>
        </trans-unit>
        <trans-unit id="fffafad4245d122f1f8b1d4f82482f6c6e9972ee" translate="yes" xml:space="preserve">
          <source>The actions &quot;play&quot; and &quot;stop&quot; must be passed to this &lt;code&gt;play-button&lt;/code&gt; component:</source>
          <target state="translated">&lt;code&gt;play-button&lt;/code&gt; компоненту кнопки воспроизведения должны быть переданы действия &amp;laquo;воспроизведение&amp;raquo; и &amp;laquo;стоп&amp;raquo; :</target>
        </trans-unit>
        <trans-unit id="b15d60efde70e42a8401dc81cb70c844a7ab5b07" translate="yes" xml:space="preserve">
          <source>The actions you can take on a record map onto the following URLs in the JSON API adapter:</source>
          <target state="translated">Действия,которые вы можете выполнить на карте записей по следующим URL в JSON API адаптере:</target>
        </trans-unit>
        <trans-unit id="61f498285f596848fc23f04d9e51276702a760d4" translate="yes" xml:space="preserve">
          <source>The adapter is responsible for answering all of these questions. Whenever your app asks the store for a record that it doesn't have cached, it will ask the adapter for it. If you change a record and save it, the store will hand the record to the adapter to send the appropriate data to your server and confirm that the save was successful.</source>
          <target state="translated">Адаптер отвечает за ответы на все эти вопросы.Всякий раз,когда ваше приложение запрашивает в магазине запись о том,что у него нет кэша,оно попросит адаптер.Если вы измените запись и сохраните ее,магазин передаст запись адаптеру для отправки соответствующих данных на ваш сервер и подтвердит,что сохранение прошло успешно.</target>
        </trans-unit>
        <trans-unit id="ad248e90ac6d8ba6c4d90263b68bd3e56fc49c63" translate="yes" xml:space="preserve">
          <source>The adapter passes in &lt;code&gt;includeId: true&lt;/code&gt; when serializing a record for &lt;code&gt;createRecord&lt;/code&gt;, but not for &lt;code&gt;updateRecord&lt;/code&gt;.</source>
          <target state="translated">Адаптер передает &lt;code&gt;includeId: true&lt;/code&gt; при сериализации записи для &lt;code&gt;createRecord&lt;/code&gt; , но не для &lt;code&gt;updateRecord&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efdf679155c7a3919c2945e73db79499e695fec9" translate="yes" xml:space="preserve">
          <source>The adapter will need to be registered in the application's container as &lt;code&gt;container-debug-adapter:main&lt;/code&gt;.</source>
          <target state="translated">Адаптер нужно будет зарегистрировать в контейнере приложения как &lt;code&gt;container-debug-adapter:main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="131e20e9576979fea3838369ca8bebc9bee71a7f" translate="yes" xml:space="preserve">
          <source>The adapter will need to be registered in the application's container as &lt;code&gt;dataAdapter:main&lt;/code&gt;.</source>
          <target state="translated">Адаптер необходимо зарегистрировать в контейнере приложения как &lt;code&gt;dataAdapter:main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de1f8ea65a9d062ad63b311606da2e19fac5c593" translate="yes" xml:space="preserve">
          <source>The advantage of an async helper is that it will not run until the last async helper has completed. All async helpers after it will wait for it complete before running.</source>
          <target state="translated">Преимущество ассистента заключается в том,что он не будет работать до тех пор,пока не завершится работа последнего ассистента.Все ассистенты после этого будут ждать его завершения перед запуском.</target>
        </trans-unit>
        <trans-unit id="132b17863e2451dad65a1fc69e5aa6a2e2be4784" translate="yes" xml:space="preserve">
          <source>The algorithm works this way:</source>
          <target state="translated">Алгоритм работает таким образом:</target>
        </trans-unit>
        <trans-unit id="5ff582d708a589904a1b030c787773bd60458940" translate="yes" xml:space="preserve">
          <source>The alternative syntax, with prototype extensions, might look like:</source>
          <target state="translated">Альтернативный синтаксис,с расширениями прототипа,может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="5c3682b20b3168f59d213bbd7233481e751bc3ef" translate="yes" xml:space="preserve">
          <source>The amount to decrement by. Defaults to 1</source>
          <target state="translated">Сумма,на которую можно уменьшить.По умолчанию 1</target>
        </trans-unit>
        <trans-unit id="5b7201edf1c359c10f638704266bcb43f6ade922" translate="yes" xml:space="preserve">
          <source>The amount to increment by. Defaults to 1</source>
          <target state="translated">Сумма,на которую можно увеличить.По умолчанию 1</target>
        </trans-unit>
        <trans-unit id="ed509f29503bfd3d0043d389191e47926618eace" translate="yes" xml:space="preserve">
          <source>The application instance is passed to Ember's instance initializer hooks and it is added as the &quot;owner&quot; of each object that was instantiated by the application instance.</source>
          <target state="translated">Экземпляр приложения передается на крюки инициализатора экземпляра Эмбер и добавляется как &quot;владелец&quot; каждого объекта,инстанцированного экземпляром приложения.</target>
        </trans-unit>
        <trans-unit id="355a1c859de0828ab927049176efde71ae67825a" translate="yes" xml:space="preserve">
          <source>The application route</source>
          <target state="translated">Маршрут применения</target>
        </trans-unit>
        <trans-unit id="bc69913b03727770065706d5ae763881554440df" translate="yes" xml:space="preserve">
          <source>The arguments to pass to the method</source>
          <target state="translated">Аргументы для перехода к методу</target>
        </trans-unit>
        <trans-unit id="e850ec910ddafcfd153f778405adf847a5eaecec" translate="yes" xml:space="preserve">
          <source>The array represents the diff of the canonical state with the local state of the model. Note: if the model is created locally, the canonical state is empty since the adapter hasn't acknowledged the attributes yet:</source>
          <target state="translated">Массив представляет собой отличие канонического состояния от локального состояния модели.Замечание:если модель создана локально,каноническое состояние пусто,так как адаптер еще не признал атрибуты:</target>
        </trans-unit>
        <trans-unit id="7876ec17eeb81f6ca541bc1ef63a2af2ef9b1f5a" translate="yes" xml:space="preserve">
          <source>The attrs options object can use more specific instruction for extracting and serializing. When serializing, an option to embed &lt;code&gt;ids&lt;/code&gt;, &lt;code&gt;ids-and-types&lt;/code&gt; or &lt;code&gt;records&lt;/code&gt; can be set. When extracting the only option is &lt;code&gt;records&lt;/code&gt;.</source>
          <target state="translated">Объект параметров attrs может использовать более конкретную инструкцию для извлечения и сериализации. При сериализации можно установить возможность встраивать &lt;code&gt;ids&lt;/code&gt; , &lt;code&gt;ids-and-types&lt;/code&gt; или &lt;code&gt;records&lt;/code&gt; . При извлечении единственный вариант - это &lt;code&gt;records&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="692cb52572458fcee0dcfc7ce5597337ffbedcc6" translate="yes" xml:space="preserve">
          <source>The block expression can then use block params to bind names to any yielded values for use in the block. This allows for template customization when using a component, where the markup is provided by the consuming template, but any event handling behavior implemented in the component is retained such as &lt;code&gt;click()&lt;/code&gt; handlers.</source>
          <target state="translated">Затем выражение блока может использовать параметры блока для привязки имен к любым полученным значениям для использования в блоке. Это позволяет настраивать шаблон при использовании компонента, где разметка предоставляется шаблоном-потребителем, но сохраняется любое поведение обработки событий, реализованное в компоненте, например обработчики &lt;code&gt;click()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="230b18f150ea432b7fc63ef20d6f97b9cd3ebdce" translate="yes" xml:space="preserve">
          <source>The block form of helpers allows you to control how the UI is created based on the values of properties. A third form of helper is called &quot;nested&quot;. For example here the concat helper will add &quot; Doe&quot; to a displayed name if the person has no last name:</source>
          <target state="translated">Блочная форма помощников позволяет управлять тем,как создается пользовательский интерфейс на основе значений свойств.Третья форма помощника называется &quot;вложенной&quot;.Например,здесь помощник конката добавит к отображаемому имени &quot;Doe&quot;,если человек не имеет фамилии:</target>
        </trans-unit>
        <trans-unit id="cdafa2c9116008ccf0ab97418b925c097c3252ac" translate="yes" xml:space="preserve">
          <source>The blog post list scrolls to position a new post at the top of the viewport.</source>
          <target state="translated">Список записей блога прокручивается,чтобы расположить новое сообщение в верхней части видового экрана.</target>
        </trans-unit>
        <trans-unit id="af6e26b49064e993b28a797e047db6b65613464e" translate="yes" xml:space="preserve">
          <source>The cached value of the computed property, if any</source>
          <target state="translated">Кэшированное значение вычисляемого свойства,если таковое имеется.</target>
        </trans-unit>
        <trans-unit id="70f3ab63a321edca05f8d7fe826eff4a7da47248" translate="yes" xml:space="preserve">
          <source>The call made to the server, using a Rails backend, will look something like this:</source>
          <target state="translated">Вызов,сделанный на сервер с помощью бэкэнда Rails,будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="939bb0a279b018152f9c264171bbf1c866b675ab" translate="yes" xml:space="preserve">
          <source>The call to the function &lt;code&gt;this.inject.service&lt;/code&gt;&lt;a href=&quot;https://guides.emberjs.com/applications/dependency-injection/#toc_ad-hoc-injections&quot;&gt;injects&lt;/a&gt; the service we just registered into the context of the tests, so each test may access it through &lt;code&gt;this.get('mapsService')&lt;/code&gt;. In the example we assert that &lt;code&gt;calledWithLocation&lt;/code&gt; in our stub is set to the location we passed to the component.</source>
          <target state="translated">Вызов функции &lt;code&gt;this.inject.service&lt;/code&gt; &lt;a href=&quot;https://guides.emberjs.com/applications/dependency-injection/#toc_ad-hoc-injections&quot;&gt;вводит&lt;/a&gt; сервис, который мы только что зарегистрировали, в контекст тестов, поэтому каждый тест может получить к нему доступ через &lt;code&gt;this.get('mapsService')&lt;/code&gt; . В этом примере мы утверждаем, что для параметра &lt;code&gt;calledWithLocation&lt;/code&gt; в нашей заглушке установлено местоположение, которое мы передали компоненту.</target>
        </trans-unit>
        <trans-unit id="6165fe98748987844899c6930403c4c1ab5d19eb" translate="yes" xml:space="preserve">
          <source>The call to the server, using a Rails backend, will look something like this:</source>
          <target state="translated">Вызов сервера с помощью бэкэнда Rails будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="7d0699b4fba58c3f4df0d8bbb8c406317b7efb2c" translate="yes" xml:space="preserve">
          <source>The callback method you provide should have the following signature (all parameters are optional):</source>
          <target state="translated">Метод обратного вызова должен иметь следующую подпись (все параметры являются необязательными):</target>
        </trans-unit>
        <trans-unit id="7db19daead06e2c546317e025647247b05e290f5" translate="yes" xml:space="preserve">
          <source>The callback method you provide should have the following signature. &lt;code&gt;item&lt;/code&gt; is the current item in the iteration. &lt;code&gt;index&lt;/code&gt; is the integer index of the current item in the iteration.</source>
          <target state="translated">Предоставляемый вами метод обратного вызова должен иметь следующую подпись. &lt;code&gt;item&lt;/code&gt; - это текущий элемент в итерации. &lt;code&gt;index&lt;/code&gt; - это целочисленный индекс текущего элемента в итерации.</target>
        </trans-unit>
        <trans-unit id="e6388916ece31666bfa3bce621dc9190d0851704" translate="yes" xml:space="preserve">
          <source>The callback method you provide should have the following signature. &lt;code&gt;item&lt;/code&gt; is the current item in the iteration. &lt;code&gt;index&lt;/code&gt; is the integer index of the current item in the iteration. &lt;code&gt;array&lt;/code&gt; is the dependant array itself.</source>
          <target state="translated">Предоставляемый вами метод обратного вызова должен иметь следующую подпись. &lt;code&gt;item&lt;/code&gt; - это текущий элемент в итерации. &lt;code&gt;index&lt;/code&gt; - это целочисленный индекс текущего элемента в итерации. &lt;code&gt;array&lt;/code&gt; - это сам зависимый массив.</target>
        </trans-unit>
        <trans-unit id="747b58783f30aeed09a97bff68b7a7ed7e662bd5" translate="yes" xml:space="preserve">
          <source>The callback method you provide should have the following signature:</source>
          <target state="translated">Метод обратного вызова,который вы предоставляете,должен иметь следующую подпись:</target>
        </trans-unit>
        <trans-unit id="3d86eb979382fa479d1f0e875f699adf9c61634f" translate="yes" xml:space="preserve">
          <source>The callback to execute</source>
          <target state="translated">Обратный вызов на выполнение</target>
        </trans-unit>
        <trans-unit id="378f4ac8c5402e27d2f5c1371ff15299fb646fad" translate="yes" xml:space="preserve">
          <source>The callback will receive the current application as an argument.</source>
          <target state="translated">Обратный вызов получит текущее приложение в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="107b78d2e608ef92e8a7f001aab1e580890d2636" translate="yes" xml:space="preserve">
          <source>The capitalized string.</source>
          <target state="translated">Заглавная строка.</target>
        </trans-unit>
        <trans-unit id="dbbb92bec845d62ef32b3b4db4795ff8fb8678df" translate="yes" xml:space="preserve">
          <source>The child &lt;code&gt;Component&lt;/code&gt; can then modify the parent's value just by modifying its own property:</source>
          <target state="translated">Затем дочерний &lt;code&gt;Component&lt;/code&gt; может изменить значение родительского элемента, просто изменив свое собственное свойство:</target>
        </trans-unit>
        <trans-unit id="257db548c086357f7aead64fe919a39c98588cac" translate="yes" xml:space="preserve">
          <source>The child &lt;code&gt;Component&lt;/code&gt; would invoke the action with the new click value:</source>
          <target state="translated">Дочерний &lt;code&gt;Component&lt;/code&gt; вызовет действие с новым значением щелчка:</target>
        </trans-unit>
        <trans-unit id="01b4ccc47f51a076e5b8b5bc1b2f43c46487fa20" translate="yes" xml:space="preserve">
          <source>The class of a model might be useful if you want to get a list of all the relationship names of the model, see &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#property_relationshipNames&quot;&gt;&lt;code&gt;relationshipNames&lt;/code&gt;&lt;/a&gt; for example.</source>
          <target state="translated">Класс модели может быть полезен, если вы хотите получить список всех имен отношений модели, например , см. &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#property_relationshipNames&quot;&gt; &lt;code&gt;relationshipNames&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48f539537c66e244c744c84eda7209879551eaf4" translate="yes" xml:space="preserve">
          <source>The code below is the deprecation-workflow file with the first deprecation set to throw an exception on occurrence. The image demonstrates what that deprecation looks like when you run your tests.</source>
          <target state="translated">Ниже приведен код,представляющий собой файл рабочего процесса удаления с первым установленным значением удаления,который бросает исключение при возникновении.Изображение демонстрирует,как выглядит это удаление при запуске тестов.</target>
        </trans-unit>
        <trans-unit id="93cd13234a3187a294d47fbdde9fd0427c708c5b" translate="yes" xml:space="preserve">
          <source>The collection of functions, keyed by name, available on this &lt;code&gt;ActionHandler&lt;/code&gt; as action targets.</source>
          <target state="translated">Набор функций, объединенных по имени, доступных в &lt;code&gt;ActionHandler&lt;/code&gt; в качестве целей действия.</target>
        </trans-unit>
        <trans-unit id="9d2bfcf3313d4bc0a7bda43e5de7a8ef0369007f" translate="yes" xml:space="preserve">
          <source>The command will generate the following output, showing that it created a single file called &lt;code&gt;tests/acceptance/list-rentals-test.js&lt;/code&gt;.</source>
          <target state="translated">Команда сгенерирует следующий вывод, показывающий, что она создала один файл с именем &lt;code&gt;tests/acceptance/list-rentals-test.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a6bdd19a4196300d3fed3ccaf29bc7c89c1afa5" translate="yes" xml:space="preserve">
          <source>The component below takes a list of items and displays them on the screen. Additionally, it takes an object representing which item is selected and will select and set the scroll top to that item.</source>
          <target state="translated">Компонент ниже берет список элементов и отображает их на экране.Кроме того,он берет объект,представляющий,какой элемент выбран,и выбирает и устанавливает вершину прокрутки для этого элемента.</target>
        </trans-unit>
        <trans-unit id="00924038d9acbd0206114498f918d95680c59534" translate="yes" xml:space="preserve">
          <source>The component should show details about the rental</source>
          <target state="translated">Компонент должен показывать подробности об аренде</target>
        </trans-unit>
        <trans-unit id="03d4f32bac2eee953b37844aa3ddbdccc1b00e16" translate="yes" xml:space="preserve">
          <source>The component should toggle the existence of a wide class on click, to expand and shrink the photo of the rental.</source>
          <target state="translated">Компонент должен включать в себя наличие широкого класса на щелчок мыши,чтобы расширить и уменьшить фото проката.</target>
        </trans-unit>
        <trans-unit id="bb8277dc02802176f96c31e5577dcf1f7ddceafa" translate="yes" xml:space="preserve">
          <source>The component template will have a button and a div that shows the confirmation dialog based on the value of &lt;code&gt;confirmShown&lt;/code&gt;.</source>
          <target state="translated">В шаблоне компонента будет кнопка и блок div, показывающий диалоговое окно подтверждения на основе значения &lt;code&gt;confirmShown&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3e02882f24ccee1b6087710e6540fa437584878" translate="yes" xml:space="preserve">
          <source>The component's element has been both created and inserted into the DOM.</source>
          <target state="translated">Элемент компонента был создан и вставлен в DOM.</target>
        </trans-unit>
        <trans-unit id="4cc0a17e4b5e6b7c7ced86a1cc438b4160335bc6" translate="yes" xml:space="preserve">
          <source>The component's element is accessible via the component's &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#method__&quot;&gt;&lt;code&gt;$()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Элемент компонента доступен через метод компонента &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#method__&quot;&gt; &lt;code&gt;$()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f87081eb897d1fd3835c5c46606eabc3f8f40d2c" translate="yes" xml:space="preserve">
          <source>The computed macros expect you to use an array, so there is no need to use the &lt;code&gt;[]&lt;/code&gt; key in these cases. However, building your own custom computed property requires you to tell Ember.js that it is watching for array changes, which is where the &lt;code&gt;[]&lt;/code&gt; key comes in handy.</source>
          <target state="translated">Вычисленные макросы ожидают, что вы будете использовать массив, поэтому в этих случаях нет необходимости использовать клавишу &lt;code&gt;[]&lt;/code&gt; . Однако для создания собственного вычисляемого свойства необходимо сообщить Ember.js, что он наблюдает за изменениями массива, и здесь нам пригодится клавиша &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c04629937de1c7126ae68322907abae8ecd667fc" translate="yes" xml:space="preserve">
          <source>The container calls this object's &lt;code&gt;resolve&lt;/code&gt; method with the &lt;code&gt;fullName&lt;/code&gt; argument.</source>
          <target state="translated">Контейнер вызывает метод &lt;code&gt;resolve&lt;/code&gt; этого объекта с аргументом &lt;code&gt;fullName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dedba2d51f22aac0e2c4ffa20bbb5629c1192057" translate="yes" xml:space="preserve">
          <source>The container-debug-adapter which is used to list all models.</source>
          <target state="translated">Контейнер-отладочный адаптер,который используется для перечисления всех моделей.</target>
        </trans-unit>
        <trans-unit id="71bc08d35f4aa7dfc82186fc932b83df95fed7ce" translate="yes" xml:space="preserve">
          <source>The controller associated with this route.</source>
          <target state="translated">Контроллер,связанный с этим маршрутом.</target>
        </trans-unit>
        <trans-unit id="8b3eab1e8d1492edcda2af7cd55a05ab06f81f5f" translate="yes" xml:space="preserve">
          <source>The controller instance must already have been created, either through entering the associated route or using &lt;code&gt;generateController&lt;/code&gt;.</source>
          <target state="translated">Экземпляр контроллера должен быть уже создан либо путем ввода связанного маршрута, либо с помощью &lt;code&gt;generateController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d996ccba50d2a03192ad84043d699c49c674c9d6" translate="yes" xml:space="preserve">
          <source>The controller receives a single property from the Route &amp;ndash; &lt;code&gt;model&lt;/code&gt; &amp;ndash; which is the return value of the Route's &lt;code&gt;model()&lt;/code&gt; method.</source>
          <target state="translated">Контроллер получает от Route единственное свойство - &lt;code&gt;model&lt;/code&gt; , которое является возвращаемым значением метода модели Route &lt;code&gt;model()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9805ee9f09f7a6c9f18fe8f84f7390a97217c750" translate="yes" xml:space="preserve">
          <source>The controller's current model. When retrieving or modifying a controller's model, this property should be used instead of the &lt;code&gt;content&lt;/code&gt; property.</source>
          <target state="translated">Текущая модель контроллера. При получении или изменении модели контроллера это свойство следует использовать вместо свойства &lt;code&gt;content&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="301f36390a7be64dbf55d036bcf24116fa60dea1" translate="yes" xml:space="preserve">
          <source>The copied object</source>
          <target state="translated">Скопированный объект</target>
        </trans-unit>
        <trans-unit id="dc497b43d9a73eae6ffff08e5aaad7d8aea85919" translate="yes" xml:space="preserve">
          <source>The current set of flags are defined below. If you want to add a new flag, in addition to the area below, you will also need to declare it in the &lt;code&gt;DS.Model&lt;/code&gt; class.</source>
          <target state="translated">Текущий набор флагов определен ниже. Если вы хотите добавить новый флаг, помимо области ниже, вам также необходимо будет объявить его в классе &lt;code&gt;DS.Model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0524bb6abfd181d72da352389fd69941fb6778cc" translate="yes" xml:space="preserve">
          <source>The currently active URL.</source>
          <target state="translated">Активный в настоящее время URL-адрес.</target>
        </trans-unit>
        <trans-unit id="64c535e9f2e1008eed7eb1be8de9fd6230cf64a1" translate="yes" xml:space="preserve">
          <source>The currently active path.</source>
          <target state="translated">Текущий активный путь.</target>
        </trans-unit>
        <trans-unit id="e4b1d59e80066fe1a38250044448beb82d44ec54" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;serialize&lt;/code&gt; method will insert the model's &lt;code&gt;id&lt;/code&gt; into the route's dynamic segment (in this case, &lt;code&gt;:post_id&lt;/code&gt;) if the segment contains '_id'. If the route has multiple dynamic segments or does not contain '_id', &lt;code&gt;serialize&lt;/code&gt; will return &lt;code&gt;Ember.getProperties(model, params)&lt;/code&gt;</source>
          <target state="translated">Метод &lt;code&gt;serialize&lt;/code&gt; умолчанию вставит &lt;code&gt;id&lt;/code&gt; модели в динамический сегмент маршрута (в данном случае &lt;code&gt;:post_id&lt;/code&gt; ), если сегмент содержит _id. Если маршрут имеет несколько динамических сегментов или не содержит _id, &lt;code&gt;serialize&lt;/code&gt; вернет &lt;code&gt;Ember.getProperties(model, params)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9804540a4930794a37fbff41c2089e9b1c714b1" translate="yes" xml:space="preserve">
          <source>The default HTML tag name used for a component's DOM representation is &lt;code&gt;div&lt;/code&gt;. This can be customized by setting the &lt;code&gt;tagName&lt;/code&gt; property. The following component class:</source>
          <target state="translated">Имя тега HTML по умолчанию, используемое для представления DOM компонента, - &lt;code&gt;div&lt;/code&gt; . Это можно настроить, установив свойство &lt;code&gt;tagName&lt;/code&gt; . Следующий класс компонентов:</target>
        </trans-unit>
        <trans-unit id="ba661251bae2c58457a6583501ea31468be49e4e" translate="yes" xml:space="preserve">
          <source>The default adapter to use to communicate to a backend server or other persistence layer. This will be overridden by an application adapter if present.</source>
          <target state="translated">Адаптер по умолчанию,используемый для взаимодействия с внутренним сервером или другим уровнем родства.Это будет переопределено адаптером приложения,если он присутствует.</target>
        </trans-unit>
        <trans-unit id="d48ca495b259e7b4f0c08e2c8e0b6fc93859dce8" translate="yes" xml:space="preserve">
          <source>The default behavior for &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt;&lt;code&gt;link-to&lt;/code&gt;&lt;/a&gt; is to add entries to the browser's history when transitioning between the routes. However, to replace the current entry in the browser's history you can use the &lt;code&gt;replace=true&lt;/code&gt; option:</source>
          <target state="translated">Поведение по умолчанию для &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt; &lt;code&gt;link-to&lt;/code&gt; &lt;/a&gt; - добавление записей в историю браузера при переходе между маршрутами. Однако для замены текущей записи в истории браузера вы можете использовать опцию &lt;code&gt;replace=true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="028b9616eef359dc09d07d3be87a5ac87b8aea59" translate="yes" xml:space="preserve">
          <source>The default behavior is for lookup to return a singleton instance. The singleton is scoped to the container, allowing multiple containers to all have their own locally scoped singletons.</source>
          <target state="translated">Поведение по умолчанию заключается в том,что поиск возвращает экземпляр с одной кнопкой.Одиночная кнопка просматривается в контейнере,что позволяет нескольким контейнерам иметь свои собственные локально просматриваемые одиночки.</target>
        </trans-unit>
        <trans-unit id="33cd28df250e1a3d71b927a14510954a829fa40c" translate="yes" xml:space="preserve">
          <source>The default implementation returns the records as a single group.</source>
          <target state="translated">Реализация по умолчанию возвращает записи как одну группу.</target>
        </trans-unit>
        <trans-unit id="6d55dd2f84ce398a6b7ca904972aeeb8f8ea5d4c" translate="yes" xml:space="preserve">
          <source>The default serialization would create a JSON object like:</source>
          <target state="translated">Сериализация по умолчанию создаст JSON-объект типа:</target>
        </trans-unit>
        <trans-unit id="9726fa72bad036507b0c7e1f772d49c8a42328a7" translate="yes" xml:space="preserve">
          <source>The denodified function inherits from the original function. It works in all environments, except IE 10 and below. Consequently all properties of the original function are available to you. However, any properties you change on the denodeified function won't be changed on the original function. Example:</source>
          <target state="translated">Денодированная функция наследует от первоначальной функции.Она работает во всех средах,кроме IE 10 и ниже.Следовательно,все свойства исходной функции доступны вам.Однако,любые свойства,которые вы изменяете в денодифицированной функции,не будут изменены в оригинальной функции.Пример:</target>
        </trans-unit>
        <trans-unit id="a81bacb27ef7a7c4a59cca0a9ad3aa5799647431" translate="yes" xml:space="preserve">
          <source>The deprecation handler API was released in Ember 2.1. If you would like to leverage this API in a prior release of Ember you can install the &lt;a href=&quot;http://emberobserver.com/addons/ember-debug-handlers-polyfill&quot;&gt;ember-debug-handlers-polyfill&lt;/a&gt; addon into your project.</source>
          <target state="translated">API обработчика устаревания был выпущен в Ember 2.1. Если вы хотите использовать этот API в предыдущем выпуске Ember, вы можете установить в свой проект &lt;a href=&quot;http://emberobserver.com/addons/ember-debug-handlers-polyfill&quot;&gt;надстройку ember-debug-handlers-polyfill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d14be1f3c6637fd072ea31a6dbb848736f0f9b4c" translate="yes" xml:space="preserve">
          <source>The deserialized value</source>
          <target state="translated">Десериализованное значение</target>
        </trans-unit>
        <trans-unit id="61863b6efe342207f2c2beda0291c57e7b350c15" translate="yes" xml:space="preserve">
          <source>The easiest way to create a two-way binding is to use a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_alias&quot;&gt;&lt;code&gt;computed.alias()&lt;/code&gt;&lt;/a&gt;, that specifies the path to another object.</source>
          <target state="translated">Самый простой способ создать двустороннюю привязку - использовать &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_alias&quot;&gt; &lt;code&gt;computed.alias()&lt;/code&gt; &lt;/a&gt; , который указывает путь к другому объекту.</target>
        </trans-unit>
        <trans-unit id="51b9dfe652430a47b7813879322835fda06a5e1e" translate="yes" xml:space="preserve">
          <source>The easiest way to create an &lt;code&gt;Ember.Component&lt;/code&gt; is via a template. If you name a template &lt;code&gt;app/components/my-foo.hbs&lt;/code&gt;, you will be able to use &lt;code&gt;{{my-foo}}&lt;/code&gt; in other templates, which will make an instance of the isolated component.</source>
          <target state="translated">Самый простой способ создать &lt;code&gt;Ember.Component&lt;/code&gt; - использовать шаблон. Если вы &lt;code&gt;app/components/my-foo.hbs&lt;/code&gt; шаблон app / components / my-foo.hbs , вы сможете использовать &lt;code&gt;{{my-foo}}&lt;/code&gt; в других шаблонах, которые создадут экземпляр изолированного компонента.</target>
        </trans-unit>
        <trans-unit id="1a90adc5ebc180395b92d51213f2e4db5db7c4d5" translate="yes" xml:space="preserve">
          <source>The ember-cli-deprecation-workflow addon provides a command that will collect deprecations from your console and generate JavaScript code listing its findings.</source>
          <target state="translated">ember-cli-deprecation-workflow addon предоставляет команду,которая будет собирать депрессии из вашей консоли и генерировать JavaScript код с перечнем полученных результатов.</target>
        </trans-unit>
        <trans-unit id="c08d687a1f142539937b2a75e02478a1de2910c4" translate="yes" xml:space="preserve">
          <source>The enumerable API follows ECMAScript specifications as much as possible. This minimizes incompatibility with other libraries, and allows Ember.js to use the native browser implementations in arrays where available.</source>
          <target state="translated">Перечисленный API максимально соответствует спецификациям ECMAScript.Это минимизирует несовместимость с другими библиотеками и позволяет Ember.js использовать родные реализации браузера в массивах,где это возможно.</target>
        </trans-unit>
        <trans-unit id="2f251a4ec622923c4684a280b97957e070d1f3fc" translate="yes" xml:space="preserve">
          <source>The event dispatcher is created by the application at initialization time and sets up event listeners on the DOM element described by the application's &lt;code&gt;rootElement&lt;/code&gt; property.</source>
          <target state="translated">Диспетчер событий создается приложением во время инициализации и настраивает прослушиватели событий для элемента DOM, описываемого свойством &lt;code&gt;rootElement&lt;/code&gt; приложения .</target>
        </trans-unit>
        <trans-unit id="053c279c50f244b9eb896230e5a90c90796a9df5" translate="yes" xml:space="preserve">
          <source>The event handling examples described above respond to one set of events. The names of the built-in events are listed below. Custom events can be registered by using &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Application.html#property_customEvents&quot;&gt;Ember.Application.customEvents&lt;/a&gt;.</source>
          <target state="translated">Описанные выше примеры обработки событий отвечают на один набор событий. Имена встроенных событий перечислены ниже. Пользовательские события можно зарегистрировать с помощью &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Application.html#property_customEvents&quot;&gt;Ember.Application.customEvents&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b863b4625ecf29a56bcdfb71eee44abd26ee138c" translate="yes" xml:space="preserve">
          <source>The event type to be triggered.</source>
          <target state="translated">Тип запускаемого события.</target>
        </trans-unit>
        <trans-unit id="5e377f2c4a3dec86abf2ac3efcc334847d1f52b8" translate="yes" xml:space="preserve">
          <source>The exception to be raised.</source>
          <target state="translated">Исключение,которое должно быть поднято.</target>
        </trans-unit>
        <trans-unit id="2422f0ff43e6667a702a73460791a92f8d19db60" translate="yes" xml:space="preserve">
          <source>The feature to check</source>
          <target state="translated">Функция проверки</target>
        </trans-unit>
        <trans-unit id="95787b699dfdd06e98ccefd8263560e2e6b5a8f1" translate="yes" xml:space="preserve">
          <source>The filterFunction is a function used to test records from the store to determine if they should be part of the record array.</source>
          <target state="translated">Функция filterFunction предназначена для тестирования записей из хранилища на предмет того,должны ли они быть частью массива записей.</target>
        </trans-unit>
        <trans-unit id="62e163152ac939e91938ed4bba47c089f566a9f1" translate="yes" xml:space="preserve">
          <source>The final test should look as follows:</source>
          <target state="translated">Финальный тест должен выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="251b44a6daaf2e9098e7b6561f96f4b93ffee050" translate="yes" xml:space="preserve">
          <source>The find method is called on the model class with the value of the dynamic segment.</source>
          <target state="translated">Метод find вызывается на классе модели со значением динамического сегмента.</target>
        </trans-unit>
        <trans-unit id="1c6ab5f4ba11276c830d14ace1931f03db22503d" translate="yes" xml:space="preserve">
          <source>The first argument (&lt;code&gt;model&lt;/code&gt;) was curried over, and the run-time argument (&lt;code&gt;event&lt;/code&gt;) becomes a second argument. Action calls can be nested this way because each simply returns a function. Any function can be passed to the &lt;code&gt;{{action}}&lt;/code&gt; helper, including other actions.</source>
          <target state="translated">Первый аргумент ( &lt;code&gt;model&lt;/code&gt; ) был обработан, а аргумент времени выполнения ( &lt;code&gt;event&lt;/code&gt; ) становится вторым аргументом. Вызовы действий могут быть вложенными таким образом, потому что каждый просто возвращает функцию. Помощнику &lt;code&gt;{{action}}&lt;/code&gt; можно передать любую функцию , включая другие действия.</target>
        </trans-unit>
        <trans-unit id="ed7c239cf4e865e182877517567062ddaf11cb4e" translate="yes" xml:space="preserve">
          <source>The first nested route to generate will be the index route. An index nested route works similarly to the base index route. It is the default route that renders when no route is provided. Therefore in our case, when we navigate to &lt;code&gt;/rentals&lt;/code&gt;, Ember will attempt to load the rentals index route as a nested route.</source>
          <target state="translated">Первым сгенерированным вложенным маршрутом будет индексный маршрут. Вложенный маршрут индекса работает аналогично маршруту базового индекса. Это маршрут по умолчанию, который отображается, когда маршрут не указан. Поэтому в нашем случае, когда мы переходим к &lt;code&gt;/rentals&lt;/code&gt; , Ember попытается загрузить маршрут индекса аренды как вложенный маршрут.</target>
        </trans-unit>
        <trans-unit id="983c3b259f765a841e0ba8fde3f9e8cb7899878d" translate="yes" xml:space="preserve">
          <source>The first parameter is the name of the route which is used by default as the path name as well.</source>
          <target state="translated">Первый параметр-это имя маршрута,которое по умолчанию также используется в качестве имени пути.</target>
        </trans-unit>
        <trans-unit id="9105fbebbf22cf85d2b2f209a6496fbe8783578b" translate="yes" xml:space="preserve">
          <source>The first parameter of the helper is the name of a component to render, as a string. So &lt;code&gt;{{component 'blog-post'}}&lt;/code&gt; is the same as using &lt;code&gt;{{blog-post}}&lt;/code&gt;.</source>
          <target state="translated">Первый параметр помощника - это имя компонента для рендеринга в виде строки. Таким образом, &lt;code&gt;{{component 'blog-post'}}&lt;/code&gt; аналогичен использованию &lt;code&gt;{{blog-post}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5209e6f0bdb73ab73f04317f2793d14718036b7" translate="yes" xml:space="preserve">
          <source>The first style of invocation is &lt;strong&gt;inline invocation&lt;/strong&gt;. This looks similar to displaying a property, but helpers accept arguments. For example:</source>
          <target state="translated">Первый стиль вызова - это &lt;strong&gt;встроенный вызов&lt;/strong&gt; . Это похоже на отображение свойства, но помощники принимают аргументы. Например:</target>
        </trans-unit>
        <trans-unit id="75890c317887371b09062eb2031229122ca2996b" translate="yes" xml:space="preserve">
          <source>The first thing we want to do in our new project is to remove the welcome screen. We do this by simply opening up the application template file located at &lt;code&gt;app/templates/application.hbs&lt;/code&gt;.</source>
          <target state="translated">Первое, что мы хотим сделать в нашем новом проекте, - это удалить экран приветствия. Мы делаем это, просто открывая файл шаблона приложения, расположенный по адресу &lt;code&gt;app/templates/application.hbs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f64cb4a633c43e464c1ff818f86a7f51cbaf2da" translate="yes" xml:space="preserve">
          <source>The first time your application asks the store for a record, the store sees that it doesn't have a local copy and requests it from your adapter. Your adapter will go and retrieve the record from your persistence layer; typically, this will be a JSON representation of the record served from an HTTP server.</source>
          <target state="translated">Когда ваше приложение в первый раз запрашивает у магазина запись,магазин видит,что у него нет локальной копии,и запрашивает ее у вашего адаптера.Ваш адаптер пойдет и получит запись с вашего уровня персистентности;обычно это будет JSON представление записи,обслуживаемой с HTTP сервера.</target>
        </trans-unit>
        <trans-unit id="bd9a731b8654e32704a346674674446e3d3a69b4" translate="yes" xml:space="preserve">
          <source>The flag status in the generated build is controlled by the &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/features.json&quot;&gt;&lt;code&gt;features.json&lt;/code&gt;&lt;/a&gt; file in the root of the Ember.js project. This file lists all new features and their current status.</source>
          <target state="translated">Статус флага в сгенерированной сборке контролируется файлом &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/features.json&quot;&gt; &lt;code&gt;features.json&lt;/code&gt; &lt;/a&gt; в корне проекта Ember.js. В этом файле перечислены все новые функции и их текущий статус.</target>
        </trans-unit>
        <trans-unit id="eb3cef84c92085a6d2d883851701837207c0ed5e" translate="yes" xml:space="preserve">
          <source>The flag to signal a &lt;code&gt;RecordArray&lt;/code&gt; is currently loading data.</source>
          <target state="translated">Флаг, указывающий на то, что &lt;code&gt;RecordArray&lt;/code&gt; загружает данные.</target>
        </trans-unit>
        <trans-unit id="53188ffd1056282eaa9b367801d327c2d664d389" translate="yes" xml:space="preserve">
          <source>The flag to signal a &lt;code&gt;RecordArray&lt;/code&gt; is finished loading data.</source>
          <target state="translated">Флаг, сигнализирующий о завершении загрузки данных &lt;code&gt;RecordArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39accfabc1616fbff84cfef1e2405eff54644354" translate="yes" xml:space="preserve">
          <source>The following HTML attributes can be set via the helper:</source>
          <target state="translated">Следующие HTML атрибуты могут быть установлены с помощью помощника:</target>
        </trans-unit>
        <trans-unit id="eb79dc0afa03345796e1814d66f43dab53b2351b" translate="yes" xml:space="preserve">
          <source>The following HTML attributes can be set:</source>
          <target state="translated">Можно установить следующие атрибуты HTML:</target>
        </trans-unit>
        <trans-unit id="44fc4180b9b05e8989204eb9f584bb53e9d638f4" translate="yes" xml:space="preserve">
          <source>The following HTML would be rendered:</source>
          <target state="translated">Будет выполнен следующий HTML:</target>
        </trans-unit>
        <trans-unit id="1f0a3c7a9779e06c8201841fbe9265d91073f48e" translate="yes" xml:space="preserve">
          <source>The following chart is a visual representation of what takes place when the escape key is pressed in this scenario:</source>
          <target state="translated">Следующая диаграмма является визуальным представлением того,что происходит при нажатии экранирующей клавиши в этом сценарии:</target>
        </trans-unit>
        <trans-unit id="37c67db7954be266e8e6d6ff4e4e5081f2a3c808" translate="yes" xml:space="preserve">
          <source>The following code injects the &lt;code&gt;shopping-cart&lt;/code&gt; service on the &lt;code&gt;cart-contents&lt;/code&gt; component as the property &lt;code&gt;cart&lt;/code&gt;:</source>
          <target state="translated">Следующий код впрыскивает &lt;code&gt;shopping-cart&lt;/code&gt; службы на &lt;code&gt;cart-contents&lt;/code&gt; компонентов в собственности &lt;code&gt;cart&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="729b7f0e23b374cb4e57a6cdd204d250859aaf3b" translate="yes" xml:space="preserve">
          <source>The following controller code:</source>
          <target state="translated">Следующий код контроллера:</target>
        </trans-unit>
        <trans-unit id="5f70fdd699bda0ef491d01141402f07249723c95" translate="yes" xml:space="preserve">
          <source>The following demonstrates how you can override both the scope and the query param URL key of a single controller query param property:</source>
          <target state="translated">Ниже показано,как можно переопределить как область видимости,так и URL-ключ параметра запроса одного свойства параметра запроса контроллера:</target>
        </trans-unit>
        <trans-unit id="c25fcb78f8ce32888e37289c4e3ec48b550205a2" translate="yes" xml:space="preserve">
          <source>The following equivalent default options will be applied when the Route calls &lt;code&gt;render&lt;/code&gt;:</source>
          <target state="translated">Следующие эквивалентные параметры по умолчанию будут применяться при &lt;code&gt;render&lt;/code&gt; вызовов Route :</target>
        </trans-unit>
        <trans-unit id="1c4f56e0c501f86b7a8f875bd1a2f2ae5dfd1313" translate="yes" xml:space="preserve">
          <source>The following example creates a tag like &lt;code&gt;&amp;lt;div priority=&quot;high&quot; /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере создается тег типа &lt;code&gt;&amp;lt;div priority=&quot;high&quot; /&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e094e921fd819fa5e76624b61faecd882472c2a" translate="yes" xml:space="preserve">
          <source>The following example creates markup like &lt;code&gt;&amp;lt;div visible /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере создается разметка типа &lt;code&gt;&amp;lt;div visible /&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afdab8293445b11ec924bd3e51d6a5d98083d81e" translate="yes" xml:space="preserve">
          <source>The following location types are currently available:</source>
          <target state="translated">В настоящее время доступны следующие типы местоположения:</target>
        </trans-unit>
        <trans-unit id="7a04ae17d99bdb1ca3ff7d3f029873e55f621ebc" translate="yes" xml:space="preserve">
          <source>The format of your &lt;code&gt;links&lt;/code&gt; value will influence the final request URL via the &lt;code&gt;urlPrefix&lt;/code&gt; method:</source>
          <target state="translated">Формат значения ваших &lt;code&gt;links&lt;/code&gt; будет влиять на конечный URL-адрес запроса через метод &lt;code&gt;urlPrefix&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="609b07ebd91a9564a1e401e69867af9f43852ebd" translate="yes" xml:space="preserve">
          <source>The full list of valid WAI-ARIA roles is available at: &lt;a href=&quot;http://www.w3.org/TR/wai-aria/roles#roles_categorization&quot;&gt;http://www.w3.org/TR/wai-aria/roles#roles_categorization&lt;/a&gt;</source>
          <target state="translated">Полный список допустимых ролей WAI-ARIA доступен по адресу: &lt;a href=&quot;http://www.w3.org/TR/wai-aria/roles#roles_categorization&quot;&gt;http://www.w3.org/TR/wai-aria/roles#roles_categorization&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9511008deb941834774d3d5ef5d5eb87d148f334" translate="yes" xml:space="preserve">
          <source>The function of the subscription</source>
          <target state="translated">Функция подписки</target>
        </trans-unit>
        <trans-unit id="b0cd84bb592c3813b530b12d48aa8e49154cd375" translate="yes" xml:space="preserve">
          <source>The function to be called.</source>
          <target state="translated">Функция,которая будет вызвана.</target>
        </trans-unit>
        <trans-unit id="082ed932b0ef334e05715d349323974d215f0f06" translate="yes" xml:space="preserve">
          <source>The function to be executed.</source>
          <target state="translated">Функция,которая должна быть выполнена.</target>
        </trans-unit>
        <trans-unit id="fb1e00c09e0f91fcfb54af8c8c11530f8722ad41" translate="yes" xml:space="preserve">
          <source>The function used to resolve the promise.</source>
          <target state="translated">Функция,использовавшаяся для решения обещания.</target>
        </trans-unit>
        <trans-unit id="79464200d9e3ddbdb2fe8367a586a4583bb4305d" translate="yes" xml:space="preserve">
          <source>The globals provided by some assets (like &lt;code&gt;moment&lt;/code&gt; in the below example) can be used in your application without the need to &lt;code&gt;import&lt;/code&gt; them. Provide the asset path as the first and only argument.</source>
          <target state="translated">Глобальные переменные, предоставляемые некоторыми активами (например, &lt;code&gt;moment&lt;/code&gt; в приведенном ниже примере), можно использовать в вашем приложении без необходимости их &lt;code&gt;import&lt;/code&gt; . Укажите путь к активу в качестве первого и единственного аргумента.</target>
        </trans-unit>
        <trans-unit id="933a1192be634af8a21616acc066822633b90230" translate="yes" xml:space="preserve">
          <source>The goal of initializers should be to register dependencies and injections. This phase runs once. Because these initializers may load code, they are allowed to defer application readiness and advance it. If you need to access the container or store you should use an InstanceInitializer that will be run after all initializers and therefore after all code is loaded and the app is ready.</source>
          <target state="translated">Целью инициализаторов должна быть регистрация зависимостей и инъекций.Эта фаза проходит один раз.Так как эти инициализаторы могут загружать код,они могут откладывать готовность приложения и продвигать его.Если вам нужно получить доступ к контейнеру или магазину,вы должны использовать InstanceInitializer,который будет запущен после того,как все инициализаторы и,следовательно,после того,как весь код загружен и приложение готово.</target>
        </trans-unit>
        <trans-unit id="b9c39dbd4973fde26a84eeab934b9541d4d9d411" translate="yes" xml:space="preserve">
          <source>The handler function takes the following arguments:</source>
          <target state="translated">Функция обработчика принимает следующие аргументы:</target>
        </trans-unit>
        <trans-unit id="d9976137b5fc46c82802f55ca4a18f19ec76f045" translate="yes" xml:space="preserve">
          <source>The hash of enabled Canary features. Add to this, any canary features before creating your application.</source>
          <target state="translated">Хэш включенных функций Canary.Добавьте к этому любые функции канарейки перед созданием приложения.</target>
        </trans-unit>
        <trans-unit id="f1f5d4f4f7e10915f4694e587719c74a6240d5a1" translate="yes" xml:space="preserve">
          <source>The hash that you pass to the &lt;code&gt;meta()&lt;/code&gt; function will be saved on the computed property descriptor under the &lt;code&gt;_meta&lt;/code&gt; key. Ember runtime exposes a public API for retrieving these values from classes, via the &lt;code&gt;metaForProperty()&lt;/code&gt; function.</source>
          <target state="translated">Хэш, который вы передаете функции &lt;code&gt;meta()&lt;/code&gt; будет сохранен в вычисляемом дескрипторе свойства под ключом &lt;code&gt;_meta&lt;/code&gt; . Среда выполнения Ember предоставляет общедоступный API для получения этих значений из классов с помощью функции &lt;code&gt;metaForProperty()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca21eb1ac808b66726237aab6478d493b882f2e4" translate="yes" xml:space="preserve">
          <source>The helper allows some user events to send actions.</source>
          <target state="translated">Хелпер позволяет некоторым пользовательским событиям отправлять действия.</target>
        </trans-unit>
        <trans-unit id="a9bc08f7454fc33317953aa1d0764e69128fbd18" translate="yes" xml:space="preserve">
          <source>The helper can send multiple actions based on user events. The action property defines the action which is send when the user presses the return key.</source>
          <target state="translated">Помощник может посылать несколько действий,основанных на событиях пользователя.Свойство действия определяет действие,которое отправляется при нажатии пользователем клавиши возврата.</target>
        </trans-unit>
        <trans-unit id="467dd7598d6007e1305b827d35702192c6fb827f" translate="yes" xml:space="preserve">
          <source>The helper can send multiple actions based on user events. The action property defines the action which is sent when the user presses the return key.</source>
          <target state="translated">Помощник может посылать несколько действий,основанных на событиях пользователя.Свойство действия определяет действие,которое отправляется при нажатии пользователем клавиши возврата.</target>
        </trans-unit>
        <trans-unit id="fd3ae270075b46e8c72806c87f05194a68ec4531" translate="yes" xml:space="preserve">
          <source>The helper function</source>
          <target state="translated">Вспомогательная функция</target>
        </trans-unit>
        <trans-unit id="a7b07a977cc772121d830f7df8058bbfdf781828" translate="yes" xml:space="preserve">
          <source>The helper method will always be called with the current Application as the first parameter.</source>
          <target state="translated">В качестве первого параметра всегда будет вызываться вспомогательный метод с текущим приложением.</target>
        </trans-unit>
        <trans-unit id="d352679de326e446da8bcf7ae02cdf1d2b388cc3" translate="yes" xml:space="preserve">
          <source>The helper method will always be called with the current Application as the first parameter. Other parameters, such as assert, need to be provided when calling the helper. Helpers need to be registered prior to calling &lt;code&gt;startApp&lt;/code&gt;, but ember-cli will take care of it for you.</source>
          <target state="translated">Вспомогательный метод всегда будет вызываться с текущим приложением в качестве первого параметра. При вызове помощника необходимо указать другие параметры, такие как assert. Перед вызовом &lt;code&gt;startApp&lt;/code&gt; необходимо зарегистрировать помощников , но ember-cli позаботится об этом за вас.</target>
        </trans-unit>
        <trans-unit id="20ee84ece384b1c7bf0a5f88c860139387c74bc6" translate="yes" xml:space="preserve">
          <source>The helper to remove.</source>
          <target state="translated">Помощник для удаления.</target>
        </trans-unit>
        <trans-unit id="d01c5bd098982ca73ec7c55be9abde28b9b34a69" translate="yes" xml:space="preserve">
          <source>The hierarchy of valid states that ship with ember data looks like this:</source>
          <target state="translated">Иерархия действительных состояний,что корабль с янтарными данными выглядит так:</target>
        </trans-unit>
        <trans-unit id="f6e2f5503b24777429c126a35c56b33d77b5055f" translate="yes" xml:space="preserve">
          <source>The id of the record in this belongsTo relationship.</source>
          <target state="translated">Идентификатор записи в этом деле принадлежит отношениям.</target>
        </trans-unit>
        <trans-unit id="8d93476bc0286bac3afbab171f7e9f39fc33828a" translate="yes" xml:space="preserve">
          <source>The id of the record.</source>
          <target state="translated">Идентификатор записи.</target>
        </trans-unit>
        <trans-unit id="71fe696ada77a1df388294168858e15ad016bb74" translate="yes" xml:space="preserve">
          <source>The index of the item to return.</source>
          <target state="translated">Индекс возвращаемого элемента.</target>
        </trans-unit>
        <trans-unit id="bf6c6f036f009d345c5f9f4a01b236f9acff2d54" translate="yes" xml:space="preserve">
          <source>The index to retrieve.</source>
          <target state="translated">Индекс,который нужно получить.</target>
        </trans-unit>
        <trans-unit id="a59b1536c7b56b8fd58d1ea97c5500491fd87390" translate="yes" xml:space="preserve">
          <source>The initial URL to navigate to</source>
          <target state="translated">Начальный URL-адрес для навигации к</target>
        </trans-unit>
        <trans-unit id="6ec073e684d780eaf847bfcf50ff16099c381dae" translate="yes" xml:space="preserve">
          <source>The inline &lt;code&gt;if&lt;/code&gt; helper conditionally renders a single property or string.</source>
          <target state="translated">Встроенный помощник &lt;code&gt;if&lt;/code&gt; условно отображает одно свойство или строку.</target>
        </trans-unit>
        <trans-unit id="d6d29959063e476cd6d120667a761a34e0a62dbb" translate="yes" xml:space="preserve">
          <source>The inline &lt;code&gt;unless&lt;/code&gt; helper conditionally renders a single property or string. This helper acts like a ternary operator. If the first property is falsy, the second argument will be displayed, otherwise, the third argument will be displayed</source>
          <target state="translated">Встроенный помощник, &lt;code&gt;unless&lt;/code&gt; отображает одно свойство или строку. Этот помощник действует как тернарный оператор. Если первое свойство является ложным, будет отображаться второй аргумент, в противном случае будет отображаться третий аргумент.</target>
        </trans-unit>
        <trans-unit id="875191874130e97e6feff5b21de2bc9eb0a9019c" translate="yes" xml:space="preserve">
          <source>The internal class used to create text inputs when the &lt;code&gt;{{input}}&lt;/code&gt; helper is used with &lt;code&gt;type&lt;/code&gt; of &lt;code&gt;checkbox&lt;/code&gt;.</source>
          <target state="translated">Внутренний класс , используемый для создания текстовых входов , когда &lt;code&gt;{{input}}&lt;/code&gt; хелпер используется с &lt;code&gt;type&lt;/code&gt; от &lt;code&gt;checkbox&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fdad83afa3d51d43a413c1abadbd70ea9c1b3b9" translate="yes" xml:space="preserve">
          <source>The internal class used to create text inputs when the &lt;code&gt;{{input}}&lt;/code&gt; helper is used with &lt;code&gt;type&lt;/code&gt; of &lt;code&gt;text&lt;/code&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; for usage details.</source>
          <target state="translated">Внутренний класс , используемый для создания текстовых входов , когда &lt;code&gt;{{input}}&lt;/code&gt; хелпер используется с &lt;code&gt;type&lt;/code&gt; из &lt;code&gt;text&lt;/code&gt; . Подробнее об использовании см. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d607ba34fe18795114b4f433109ab02b90bb0adf" translate="yes" xml:space="preserve">
          <source>The internal class used to create textarea element when the &lt;code&gt;{{textarea}}&lt;/code&gt; helper is used.</source>
          <target state="translated">Внутренний класс, используемый для создания элемента textarea, когда используется помощник &lt;code&gt;{{textarea}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d750dea4a93a39d4b9db6798a523e5e15dcbad1" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;code&gt;{{if}}&lt;/code&gt; is &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_unless&quot;&gt;&lt;code&gt;{{unless}}&lt;/code&gt;&lt;/a&gt;, which can be used in the same three styles of invocation. For example, this template only shows an amount due when the user has not paid:</source>
          <target state="translated">Обратный к &lt;code&gt;{{if}}&lt;/code&gt; равен &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_unless&quot;&gt; &lt;code&gt;{{unless}}&lt;/code&gt; &lt;/a&gt; , который может использоваться в тех же трех стилях вызова. Например, в этом шаблоне отображается сумма к оплате, только если пользователь не заплатил:</target>
        </trans-unit>
        <trans-unit id="d45de9e199e155b8777a207a094e041487a424da" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;detail&lt;/code&gt; provides a textual description of the problem. Alternatively, the key &lt;code&gt;title&lt;/code&gt; can be used for the same purpose.</source>
          <target state="translated">Ключевая &lt;code&gt;detail&lt;/code&gt; представляет собой текстовое описание проблемы. В качестве альтернативы для той же цели можно использовать ключевое &lt;code&gt;title&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b7555d5282e96bd6e24cc32840ea3424b4844f1" translate="yes" xml:space="preserve">
          <source>The key to observe</source>
          <target state="translated">Ключ к наблюдению</target>
        </trans-unit>
        <trans-unit id="bda81920321dffb71626e245008601afdbbd6199" translate="yes" xml:space="preserve">
          <source>The key to set</source>
          <target state="translated">Ключ к установке</target>
        </trans-unit>
        <trans-unit id="a6ee319d67963224e6cc6a893a3f09344964cfb2" translate="yes" xml:space="preserve">
          <source>The link Ember Data will use to fetch or reload this belongs-to relationship.</source>
          <target state="translated">Ссылка Ember Data будет использоваться для получения или перезагрузки этого отношения.</target>
        </trans-unit>
        <trans-unit id="df6a49096075b75f24d4bda7b0d30a1279be1940" translate="yes" xml:space="preserve">
          <source>The link Ember Data will use to fetch or reload this has-many relationship.</source>
          <target state="translated">Ссылка Ember Data будет использована для получения или перезагрузки этой связи.</target>
        </trans-unit>
        <trans-unit id="fb4639de6bdd5d693c4936a26db0f36475d3d91c" translate="yes" xml:space="preserve">
          <source>The loading state of this array</source>
          <target state="translated">Состояние загрузки этого массива</target>
        </trans-unit>
        <trans-unit id="c19c7109c687fbc9fcd386c8c0b1f5cabb138c0a" translate="yes" xml:space="preserve">
          <source>The location in the cache has been &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_camelize&quot;&gt;&lt;code&gt;camelized&lt;/code&gt;&lt;/a&gt; (line 30), so that it may be used as a key to look up our element. This matches the behavior in &lt;code&gt;getMapElement&lt;/code&gt; when city has not yet been cached.</source>
          <target state="translated">Местоположение в кеше было &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_camelize&quot;&gt; &lt;code&gt;camelized&lt;/code&gt; &lt;/a&gt; (строка 30), поэтому его можно использовать в качестве ключа для поиска нашего элемента. Это соответствует поведению &lt;code&gt;getMapElement&lt;/code&gt; , когда город еще не кэширован.</target>
        </trans-unit>
        <trans-unit id="a788518ddcd9fbbee4defbf1d862f0e936c78c17" translate="yes" xml:space="preserve">
          <source>The mapped array.</source>
          <target state="translated">Массив отображения.</target>
        </trans-unit>
        <trans-unit id="18d8bcb9bddd16b3086b442996831dcaa439d784" translate="yes" xml:space="preserve">
          <source>The meta data for the belongs-to relationship.</source>
          <target state="translated">Мета-данные для отношения.</target>
        </trans-unit>
        <trans-unit id="a85e08823b46b35e1ce946c3b00a085d8f560820" translate="yes" xml:space="preserve">
          <source>The meta information for the belongs-oo relationship.</source>
          <target state="translated">Мета-информация для отношений &quot;своя&quot;.</target>
        </trans-unit>
        <trans-unit id="34f2833b8151391b99f9c680911406631b2b6fdd" translate="yes" xml:space="preserve">
          <source>The meta information for the has-many relationship.</source>
          <target state="translated">Мета-информация для многих отношений.</target>
        </trans-unit>
        <trans-unit id="49369103b0464b44493cf84cb646510c7e94536a" translate="yes" xml:space="preserve">
          <source>The method name to check for</source>
          <target state="translated">Название метода для проверки</target>
        </trans-unit>
        <trans-unit id="0263e067489f60c9e685cbc3d24f7b8e48689a36" translate="yes" xml:space="preserve">
          <source>The method to invoke</source>
          <target state="translated">Метод вызова</target>
        </trans-unit>
        <trans-unit id="19540d3f9bb05ef81877198fb53c8953af81b641" translate="yes" xml:space="preserve">
          <source>The method to invoke. If you pass a string it will be resolved on the target at the time the method is invoked.</source>
          <target state="translated">Метод вызова.Если вы передаете строку,то она будет разрешена в момент вызова метода.</target>
        </trans-unit>
        <trans-unit id="0de0091a090dc150acbc0fbf24a9397407d002b0" translate="yes" xml:space="preserve">
          <source>The method to invoke. If you pass a string it will be resolved on the target object at the time the scheduled item is invoked allowing you to change the target function.</source>
          <target state="translated">Метод вызова.Если передать строку,то она будет разрешена на целевом объекте в момент вызова запланированного элемента,что позволит изменить целевую функцию.</target>
        </trans-unit>
        <trans-unit id="3506db6058e732c49d0d84aa3928be98489273e0" translate="yes" xml:space="preserve">
          <source>The method to invoke. May be a function or a string. If you pass a string then it will be looked up on the passed target.</source>
          <target state="translated">Метод вызова.Может быть функция или строка.Если передать строку,то она будет искаться на переданной цели.</target>
        </trans-unit>
        <trans-unit id="d11f6516cbacb45fdea866478b595ee9ed7bf1d3" translate="yes" xml:space="preserve">
          <source>The methods likely to be overridden are:</source>
          <target state="translated">Методы,которые могут быть переопределены:</target>
        </trans-unit>
        <trans-unit id="eb3c70dade0bce9d1ab411df82e04ea62f4ddfac" translate="yes" xml:space="preserve">
          <source>The methods of this object are designed to be easy to override in a subclass. For example, you could enhance how a template is resolved like so:</source>
          <target state="translated">Методы этого объекта предназначены для легкого переопределения в подклассе.Например,вы можете улучшить то,как шаблон разрешается таким образом:</target>
        </trans-unit>
        <trans-unit id="f9047c74c1590bc009ee5e6df824e3a60a2c8e26" translate="yes" xml:space="preserve">
          <source>The model class is determined from the segment (&lt;code&gt;post_id&lt;/code&gt;'s class is &lt;code&gt;App.Post&lt;/code&gt;)</source>
          <target state="translated">Класс модели определяется из сегмента ( класс &lt;code&gt;post_id&lt;/code&gt; - &lt;code&gt;App.Post&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5da58253b88e1c437a81d76ece8cc0c89fc0db69" translate="yes" xml:space="preserve">
          <source>The model class that all Ember Data records descend from. This is the public API of Ember Data models. If you are using Ember Data in your application, this is the class you should use. If you are working on Ember Data internals, you most likely want to be dealing with &lt;code&gt;InternalModel&lt;/code&gt;</source>
          <target state="translated">Класс модели, от которого происходят все записи Ember Data. Это публичный API моделей Ember Data. Если вы используете Ember Data в своем приложении, вам следует использовать этот класс. Если вы работаете с внутренними компонентами Ember Data, вы, скорее всего, захотите иметь дело с &lt;code&gt;InternalModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e351f80cd5556cb6da014791c372d237924a3b0" translate="yes" xml:space="preserve">
          <source>The model for the &lt;code&gt;post&lt;/code&gt; route is &lt;code&gt;store.findRecord('post', params.post_id)&lt;/code&gt;.</source>
          <target state="translated">Модель для &lt;code&gt;post&lt;/code&gt; маршрута - &lt;code&gt;store.findRecord('post', params.post_id)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61a80d68a8a250e49493ed6f67e0f4faa9238b3d" translate="yes" xml:space="preserve">
          <source>The model hooks (&lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt;) of an error substate are not called. Only the &lt;code&gt;setupController&lt;/code&gt; method of the error substate is called with the &lt;code&gt;error&lt;/code&gt; as the model. See example below:</source>
          <target state="translated">Перехватчики модели ( &lt;code&gt;beforeModel&lt;/code&gt; , &lt;code&gt;model&lt;/code&gt; и &lt;code&gt;afterModel&lt;/code&gt; ) подсостояния ошибки не вызываются. &lt;code&gt;setupController&lt;/code&gt; только метод setupController подсостояния ошибки с &lt;code&gt;error&lt;/code&gt; в качестве модели. См. Пример ниже:</target>
        </trans-unit>
        <trans-unit id="19ae229adfd578f13d92ff0a6a38ca5deaa02ad7" translate="yes" xml:space="preserve">
          <source>The model name.</source>
          <target state="translated">Название модели.</target>
        </trans-unit>
        <trans-unit id="280c3aad18626cc5e1384613f6c69059889e22fc" translate="yes" xml:space="preserve">
          <source>The model's relationships as a map, keyed on the type of the relationship. The value of each entry is an array containing a descriptor for each relationship with that type, describing the name of the relationship as well as the type.</source>
          <target state="translated">Отношения модели в виде карты,привязанной к типу отношений.Значение каждой записи представляет собой массив,содержащий дескриптор для каждого отношения с этим типом,описывающий как имя отношения,так и его тип.</target>
        </trans-unit>
        <trans-unit id="d0e3568f7b5ea35bae50803475ef2f179bff0fad" translate="yes" xml:space="preserve">
          <source>The modelClass represented by this record array.</source>
          <target state="translated">ModelClass,представленная этим массивом записей.</target>
        </trans-unit>
        <trans-unit id="06574cdcebf2b12553ee5033ae390a06647355df" translate="yes" xml:space="preserve">
          <source>The most common case for using the run loop is integrating with a non-Ember API that includes some sort of asynchronous callback. For example:</source>
          <target state="translated">Наиболее распространенным случаем использования цикла run loop является интеграция с не янтарным API,который включает в себя своего рода асинхронный обратный вызов.Например:</target>
        </trans-unit>
        <trans-unit id="cacb8b5741c18afe5abd31963d74c05c17355b34" translate="yes" xml:space="preserve">
          <source>The most common place you'll want to access &lt;code&gt;modelName&lt;/code&gt; is in your serializer's &lt;code&gt;payloadKeyFromModelName&lt;/code&gt; method. For example, to change payload keys to underscore (instead of dasherized), you might use the following code:</source>
          <target state="translated">Наиболее распространенное место вы хотите получить доступ к &lt;code&gt;modelName&lt;/code&gt; в вашей Serializer в &lt;code&gt;payloadKeyFromModelName&lt;/code&gt; методе. Например, чтобы изменить ключи полезной нагрузки на подчеркивание (вместо штриховки), вы можете использовать следующий код:</target>
        </trans-unit>
        <trans-unit id="4860165ddeb1c56516173150ded5daec90a22733" translate="yes" xml:space="preserve">
          <source>The name of a route. In this example, it would be &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;photos&lt;/code&gt;, or &lt;code&gt;photos.edit&lt;/code&gt;.</source>
          <target state="translated">Название маршрута. В этом примере это будет &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;photos&lt;/code&gt; или &lt;code&gt;photos.edit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f70391ad509d6330a846870500a48929f3fe644d" translate="yes" xml:space="preserve">
          <source>The name of the controller to associate with this route.</source>
          <target state="translated">Имя контроллера для связи с этим маршрутом.</target>
        </trans-unit>
        <trans-unit id="8a0f4ba13feddd8f7a0fcb578c4a64ee25577bba" translate="yes" xml:space="preserve">
          <source>The name of the currently active route.</source>
          <target state="translated">Название активного в данный момент маршрута.</target>
        </trans-unit>
        <trans-unit id="2d5cd10d5efb705d95ff6ef881164cb30052e176" translate="yes" xml:space="preserve">
          <source>The name of the event</source>
          <target state="translated">Название мероприятия</target>
        </trans-unit>
        <trans-unit id="79193a57dbbc3246321cf5ba9ea7e09896c27a92" translate="yes" xml:space="preserve">
          <source>The name of the helper method to add.</source>
          <target state="translated">Имя метода-помощника для добавления.</target>
        </trans-unit>
        <trans-unit id="0be317d734b30c2e8a916f8992d44b13a519d341" translate="yes" xml:space="preserve">
          <source>The name of the model type for this payload</source>
          <target state="translated">Название типа модели для данной грузоподъемности</target>
        </trans-unit>
        <trans-unit id="48937d3df342f8b3c9377985edf9ceb5b1837454" translate="yes" xml:space="preserve">
          <source>The name of the property to decrement</source>
          <target state="translated">Название свойства для декремента</target>
        </trans-unit>
        <trans-unit id="a664383b45acf8957aaf6e6f496db9828833977d" translate="yes" xml:space="preserve">
          <source>The name of the property to increment</source>
          <target state="translated">Имя свойства для инкремента</target>
        </trans-unit>
        <trans-unit id="8a46946ba08b63ffb9945d5218fd4eaab85e6281" translate="yes" xml:space="preserve">
          <source>The name of the property to retrieve</source>
          <target state="translated">Название имущества для получения</target>
        </trans-unit>
        <trans-unit id="645bc5da9840b9064b59ef1eef330781affe8068" translate="yes" xml:space="preserve">
          <source>The name of the property to toggle</source>
          <target state="translated">Название собственности,чтобы переключить</target>
        </trans-unit>
        <trans-unit id="5fb100cec0ff90d54ebe800238fc00ef6238601d" translate="yes" xml:space="preserve">
          <source>The name of the queue to schedule against. Default queues are 'sync' and 'actions'</source>
          <target state="translated">Название очереди для составления расписания.Очереди по умолчанию-это 'синхронизация' и 'действия'.</target>
        </trans-unit>
        <trans-unit id="4c90a724a69d75c22285140dd18e22630ce627af" translate="yes" xml:space="preserve">
          <source>The name of the queue to schedule against. Default queues are 'sync' and 'actions'.</source>
          <target state="translated">Название очереди для составления расписания.Очереди по умолчанию-'синхронизация' и 'действия'.</target>
        </trans-unit>
        <trans-unit id="92bd55fef05773932c03eea0113227b4aea76072" translate="yes" xml:space="preserve">
          <source>The name of the remote type. This should either be &quot;link&quot; or &quot;id&quot;</source>
          <target state="translated">Имя удаленного типа.Оно должно быть либо &quot;link&quot;,либо &quot;id&quot;.</target>
        </trans-unit>
        <trans-unit id="a7278ab5074a42a98d664c4226440fce451e40e3" translate="yes" xml:space="preserve">
          <source>The name of the remote type. This should either be &quot;link&quot; or &quot;ids&quot;</source>
          <target state="translated">Имя удаленного типа.Оно должно быть либо &quot;link&quot;,либо &quot;ids&quot;.</target>
        </trans-unit>
        <trans-unit id="15f44cca7344c2cf48a11e2ee934769fefd135d2" translate="yes" xml:space="preserve">
          <source>The name of the route, defined by the router, is &lt;code&gt;post&lt;/code&gt;.</source>
          <target state="translated">Имя маршрута, определяемого маршрутизатором, - &lt;code&gt;post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08a86bad24be595b560f010d3688c6353e6a3adf" translate="yes" xml:space="preserve">
          <source>The name of the route, dot-delimited.</source>
          <target state="translated">Название маршрута,разделенное точками.</target>
        </trans-unit>
        <trans-unit id="289954f9d601b7db9c6b62df2307ce4028bd72f5" translate="yes" xml:space="preserve">
          <source>The name of the template to render minus the leading underscore.</source>
          <target state="translated">Название шаблона для визуализации минус ведущее подчеркивание.</target>
        </trans-unit>
        <trans-unit id="585502711f2ed284be4b7d4f4cbfdd64b80f43da" translate="yes" xml:space="preserve">
          <source>The name of the template to use by default when rendering this routes template.</source>
          <target state="translated">Имя шаблона,которое будет использоваться по умолчанию при отрисовке данного шаблона маршрутов.</target>
        </trans-unit>
        <trans-unit id="66bd3365f2c2e07363112e9b122a98da62e8cf5e" translate="yes" xml:space="preserve">
          <source>The named arguments to the helper</source>
          <target state="translated">Названные аргументы для помощника</target>
        </trans-unit>
        <trans-unit id="a509b315f0cde9d1bc56906fc1ff01f0fa7cd5eb" translate="yes" xml:space="preserve">
          <source>The names are bound in the order that they are passed to &lt;code&gt;yield&lt;/code&gt; in the component template.</source>
          <target state="translated">Имена привязываются в том порядке, в котором они передаются для &lt;code&gt;yield&lt;/code&gt; в шаблоне компонента.</target>
        </trans-unit>
        <trans-unit id="af735066725f72033af215f7de9ba3c390ea1309" translate="yes" xml:space="preserve">
          <source>The nested helper is called first returning &lt;code&gt;&quot;zoooom&quot;&lt;/code&gt; only if &lt;code&gt;isFueled&lt;/code&gt; is true. Then the inline expression is called, rendering the nested helper's value (&lt;code&gt;&quot;zoooom&quot;&lt;/code&gt;) only if &lt;code&gt;isFast&lt;/code&gt; is true.</source>
          <target state="translated">Вложенный помощник вызывается первым, возвращающим &lt;code&gt;&quot;zoooom&quot;&lt;/code&gt; , только если &lt;code&gt;isFueled&lt;/code&gt; истинно. Затем вызывается встроенное выражение, отображающее значение вложенного помощника ( &lt;code&gt;&quot;zoooom&quot;&lt;/code&gt; ), только если &lt;code&gt;isFast&lt;/code&gt; истинно.</target>
        </trans-unit>
        <trans-unit id="d1a53ba45425a490db9af03715c5bdb612eaf800" translate="yes" xml:space="preserve">
          <source>The nested keys &lt;code&gt;source.pointer&lt;/code&gt; detail which specific element of the request data was invalid.</source>
          <target state="translated">Вложенные ключи &lt;code&gt;source.pointer&lt;/code&gt; указывают, какой конкретный элемент данных запроса является недопустимым.</target>
        </trans-unit>
        <trans-unit id="6c12d2d252b58333d9ab6aaa11b78422d2a1172e" translate="yes" xml:space="preserve">
          <source>The new owner object of the object instance.</source>
          <target state="translated">Новый объект владельца экземпляра объекта.</target>
        </trans-unit>
        <trans-unit id="0086db850d74927843eccf283540af44ecddc2fe" translate="yes" xml:space="preserve">
          <source>The new property value</source>
          <target state="translated">Новая стоимость недвижимости</target>
        </trans-unit>
        <trans-unit id="7f13234869d6044bbe39065b2ac29afdf278e2d5" translate="yes" xml:space="preserve">
          <source>The normal behavior for a function defined in &lt;code&gt;actions&lt;/code&gt; does not receive the browser event as an argument. So, the function definition for the action cannot define an event parameter. The following example demonstrates the default behavior using an action.</source>
          <target state="translated">Обычное поведение для функции, определенной в &lt;code&gt;actions&lt;/code&gt; , не получает событие браузера в качестве аргумента. Таким образом, определение функции для действия не может определять параметр события. В следующем примере демонстрируется поведение по умолчанию с использованием действия.</target>
        </trans-unit>
        <trans-unit id="ba645aaa52d49d720b744b7458d92f0fa898b311" translate="yes" xml:space="preserve">
          <source>The normalized JSON format that Ember Data expects is a &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; document with a couple of additional restrictions.</source>
          <target state="translated">Нормализованный формат JSON, который ожидает Ember Data, представляет собой документ &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; с парой дополнительных ограничений.</target>
        </trans-unit>
        <trans-unit id="7c8de9de7d8715fcd640ec12ea5f6988255f2d0e" translate="yes" xml:space="preserve">
          <source>The normalized JSON object that Ember Data expects a serializer to return looks like this:</source>
          <target state="translated">Нормализованный JSON-объект,который Ember Data ожидает возвращения сериализатора,выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="00b1abab6fd9ec65b4425bed0a462ed09048b6e0" translate="yes" xml:space="preserve">
          <source>The normalized payload</source>
          <target state="translated">Нормализованная грузоподъемность</target>
        </trans-unit>
        <trans-unit id="a349a314b9df21dfbe3354d6dd9d45d18d122cff" translate="yes" xml:space="preserve">
          <source>The number of items that were added. If you pass `null` assumes 0.</source>
          <target state="translated">Количество добавленных элементов.Если вы пропустите `нуль` предполагает 0.</target>
        </trans-unit>
        <trans-unit id="2d2399ceba6066f06edc5df6a7ec02fa87dba439" translate="yes" xml:space="preserve">
          <source>The number of items that were removed. If you pass `null` assumes 0</source>
          <target state="translated">Количество предметов,которые были удалены.Если вы пропустите `нуль` предполагает 0.</target>
        </trans-unit>
        <trans-unit id="91de528748ecbc74aef2c6d96b0c6e4f03f6131b" translate="yes" xml:space="preserve">
          <source>The number of items that will be added. If you pass `null` assumes 0.</source>
          <target state="translated">Количество элементов,которые будут добавлены.Если вы пропустите `нуль` предполагает 0.</target>
        </trans-unit>
        <trans-unit id="975c27e833e6ea26acbcf63ae5b7ecc849744c75" translate="yes" xml:space="preserve">
          <source>The number of items that will be removed. If you pass `null` assumes 0</source>
          <target state="translated">Количество элементов,которые будут удалены.Если вы пропустите `нуль` предполагает 0</target>
        </trans-unit>
        <trans-unit id="639768cbeb0d904ac01029f55e97c377a305a71d" translate="yes" xml:space="preserve">
          <source>The object containing named arguments is passed as the second argument to the helper function. Here is our example from above, updated to support the optional &lt;code&gt;sign&lt;/code&gt; option:</source>
          <target state="translated">Объект, содержащий именованные аргументы, передается в качестве второго аргумента вспомогательной функции. Вот наш пример сверху, обновленный для поддержки необязательной опции &lt;code&gt;sign&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c51a687fc71aeecf9c4dd958d6df740581650633" translate="yes" xml:space="preserve">
          <source>The object observing the array.</source>
          <target state="translated">Объект,наблюдающий за массивом.</target>
        </trans-unit>
        <trans-unit id="1f67ed68402a22d74098c4257ec3b53cafc15f90" translate="yes" xml:space="preserve">
          <source>The object returned from &lt;code&gt;RSVP.defer&lt;/code&gt; is a plain object with three properties:</source>
          <target state="translated">Объект, возвращаемый из &lt;code&gt;RSVP.defer&lt;/code&gt; , представляет собой простой объект с тремя свойствами:</target>
        </trans-unit>
        <trans-unit id="dcce5060e65cd2c99b0f4c620ad0472078d080ff" translate="yes" xml:space="preserve">
          <source>The object stays intact until the end of the run loop at which point the &lt;code&gt;isDestroyed&lt;/code&gt; flag is set.</source>
          <target state="translated">Объект остается нетронутым до конца цикла выполнения, в который &lt;code&gt;isDestroyed&lt;/code&gt; флаг isDestroyed .</target>
        </trans-unit>
        <trans-unit id="95c8a20f0925b5bbf96fad0499bac57039d137a8" translate="yes" xml:space="preserve">
          <source>The object to add to the enumerable.</source>
          <target state="translated">Объект для добавления к перечислению.</target>
        </trans-unit>
        <trans-unit id="3cf4a0d87f7ef69ab445296f735a615e0fc9dd1e" translate="yes" xml:space="preserve">
          <source>The object to assign into</source>
          <target state="translated">Объект для присвоения</target>
        </trans-unit>
        <trans-unit id="8af03bf022efd9a0cec5228d3be213b9c85f758e" translate="yes" xml:space="preserve">
          <source>The object to check for the method</source>
          <target state="translated">Объект для проверки метода</target>
        </trans-unit>
        <trans-unit id="0955c243cfd3d12d78e568b378af83363f51f222" translate="yes" xml:space="preserve">
          <source>The object to clone</source>
          <target state="translated">Объект клонирования</target>
        </trans-unit>
        <trans-unit id="39bee534497a07212f93576f4aad1e60752a86d9" translate="yes" xml:space="preserve">
          <source>The object to copy properties from</source>
          <target state="translated">Объект для копирования свойств из</target>
        </trans-unit>
        <trans-unit id="65d2fc606502a1327b27b00711f4cf8c80ff80d1" translate="yes" xml:space="preserve">
          <source>The object to merge into</source>
          <target state="translated">Объект для слияния в</target>
        </trans-unit>
        <trans-unit id="e4f8472045258fdd0fca12c9ca54919b2134defc" translate="yes" xml:space="preserve">
          <source>The object to modify.</source>
          <target state="translated">Объект для модификации.</target>
        </trans-unit>
        <trans-unit id="79abb60263af3837b02a264e27ebb51b2ad3b831" translate="yes" xml:space="preserve">
          <source>The object to remove from the enumerable.</source>
          <target state="translated">Объект,который необходимо удалить из перечисления.</target>
        </trans-unit>
        <trans-unit id="01c87d6a0a7d961661808d6108688f7202e3182f" translate="yes" xml:space="preserve">
          <source>The object to retrieve from.</source>
          <target state="translated">Объект,от которого нужно извлечь.</target>
        </trans-unit>
        <trans-unit id="2bb20788eae84e07081d526563f29dae4b083856" translate="yes" xml:space="preserve">
          <source>The object to search for.</source>
          <target state="translated">Объект для поиска.</target>
        </trans-unit>
        <trans-unit id="85154a5e735c921ec2b690de03758de42871ced1" translate="yes" xml:space="preserve">
          <source>The object to set</source>
          <target state="translated">Объект для установки</target>
        </trans-unit>
        <trans-unit id="c3f77d96cdc8b56e6910e3df6d5a9f1c5613f0e4" translate="yes" xml:space="preserve">
          <source>The object to test</source>
          <target state="translated">Объект испытания</target>
        </trans-unit>
        <trans-unit id="2bf3733b3229286b376b10082612e1163e376d99" translate="yes" xml:space="preserve">
          <source>The object to which actions from the view should be sent.</source>
          <target state="translated">Объект,на который должны быть отправлены действия из представления.</target>
        </trans-unit>
        <trans-unit id="dd986381270f07f0062f1ef0c9b835aa255c1311" translate="yes" xml:space="preserve">
          <source>The objects to copy properties from</source>
          <target state="translated">Объекты для копирования свойств из</target>
        </trans-unit>
        <trans-unit id="372e877cd43ae664673ebc043c2112a916e22b72" translate="yes" xml:space="preserve">
          <source>The observer object.</source>
          <target state="translated">Наблюдатель возражает.</target>
        </trans-unit>
        <trans-unit id="711d7a87524d1dd84793229cd8b47d431d1d8180" translate="yes" xml:space="preserve">
          <source>The options passed into the &lt;code&gt;DS.attr&lt;/code&gt; function when the attribute is declared on the model is also available in the transform.</source>
          <target state="translated">Параметры, переданные в функцию &lt;code&gt;DS.attr&lt;/code&gt; при объявлении атрибута в модели, также доступны в преобразовании.</target>
        </trans-unit>
        <trans-unit id="c4f866c519a5e8c630cd9a5e6dd63f20316368ea" translate="yes" xml:space="preserve">
          <source>The options to be passed to jQuery.Event.</source>
          <target state="translated">Опции для передачи на jQuery.Event.</target>
        </trans-unit>
        <trans-unit id="56c3cd7a661678595c73eb270a9318b5eac13978" translate="yes" xml:space="preserve">
          <source>The other major benefit to the above approach is that &lt;code&gt;run.next&lt;/code&gt; introduces an element of non-determinism, which can make things much harder to test, due to its reliance on &lt;code&gt;setTimeout&lt;/code&gt;; it's much harder to guarantee the order of scheduled operations when they are scheduled outside of the current run loop, i.e. with &lt;code&gt;run.next&lt;/code&gt;.</source>
          <target state="translated">Другое важное преимущество вышеупомянутого подхода состоит в том, что &lt;code&gt;run.next&lt;/code&gt; вводит элемент недетерминизма, который может значительно усложнить тестирование из-за его зависимости от &lt;code&gt;setTimeout&lt;/code&gt; ; намного сложнее гарантировать порядок запланированных операций, когда они запланированы вне текущего цикла выполнения, то есть с &lt;code&gt;run.next&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c14211cb494d4ea352d68e2ab9fb3c84186d8bce" translate="yes" xml:space="preserve">
          <source>The other one is &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt;&lt;code&gt;replaceWith()&lt;/code&gt;&lt;/a&gt; which works the same way as &lt;code&gt;transitionTo()&lt;/code&gt;. The only difference between them is how they manage history. &lt;code&gt;replaceWith()&lt;/code&gt; substitutes the current route entry and replaces it with that of the route we are redirecting to, while &lt;code&gt;transitionTo()&lt;/code&gt; leaves the entry for the current route and creates a new one for the redirection.</source>
          <target state="translated">Другой - &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt; &lt;code&gt;replaceWith()&lt;/code&gt; &lt;/a&gt; который работает так же, как &lt;code&gt;transitionTo()&lt;/code&gt; . Единственная разница между ними в том, как они управляют историей. &lt;code&gt;replaceWith()&lt;/code&gt; заменяет текущую запись маршрута и заменяет ее записью маршрута, на который мы перенаправляем, в то время как &lt;code&gt;transitionTo()&lt;/code&gt; оставляет запись для текущего маршрута и создает новую для перенаправления.</target>
        </trans-unit>
        <trans-unit id="acc6d06fca4a644df1fa4d9b90eb32abb2585f8e" translate="yes" xml:space="preserve">
          <source>The output of the above would be:</source>
          <target state="translated">Выход из вышесказанного был бы:</target>
        </trans-unit>
        <trans-unit id="3ab0c6bf981d7228ae87a74eeb932536510cc267" translate="yes" xml:space="preserve">
          <source>The parameter supplied to &lt;code&gt;partial&lt;/code&gt; can also be a path to a property containing a template name, e.g.:</source>
          <target state="translated">Параметр, передаваемый в &lt;code&gt;partial&lt;/code&gt; , также может быть путем к свойству, содержащему имя шаблона, например:</target>
        </trans-unit>
        <trans-unit id="efd37fb222c7e149dff6b49705240fe10a539217" translate="yes" xml:space="preserve">
          <source>The parameters can be referred to just like named parameters:</source>
          <target state="translated">На параметры можно ссылаться так же,как и на именованные:</target>
        </trans-unit>
        <trans-unit id="a227f12b3522d68730e7b36f0fc78aec0552a35a" translate="yes" xml:space="preserve">
          <source>The parameters can then be referred to by enumerating over the list:</source>
          <target state="translated">На параметры можно ссылаться,перечисляя их по списку:</target>
        </trans-unit>
        <trans-unit id="42fc8fe2689da3394272f78c6f0c5ad6c77884c6" translate="yes" xml:space="preserve">
          <source>The parent engine instance.</source>
          <target state="translated">Родительский экземпляр двигателя.</target>
        </trans-unit>
        <trans-unit id="c4808789947bb1b66c38cf5e3bcb54bc1949343c" translate="yes" xml:space="preserve">
          <source>The passed in hash</source>
          <target state="translated">Переданный в гашише</target>
        </trans-unit>
        <trans-unit id="15aed930cca97a392fc79410e1ca9b8700445feb" translate="yes" xml:space="preserve">
          <source>The passed value</source>
          <target state="translated">Переданное значение</target>
        </trans-unit>
        <trans-unit id="91af4f77ef8ac669f3229c88e3020c84a9befbfd" translate="yes" xml:space="preserve">
          <source>The path to the 'from' side of the binding. Must be relative to obj or a global path.</source>
          <target state="translated">Путь к &quot;со стороны&quot; переплета.Должен быть относительно объекта или глобального пути.</target>
        </trans-unit>
        <trans-unit id="c9f763dddcc9c776652d4d1ccb6796bf300cbcd8" translate="yes" xml:space="preserve">
          <source>The path to the 'to' side of the binding. Must be relative to obj.</source>
          <target state="translated">Путь к &quot;к&quot; стороне переплета.Должен быть относительным к объекту.</target>
        </trans-unit>
        <trans-unit id="3646b2c1a754bb29df7ef8518480d66f2cd86f09" translate="yes" xml:space="preserve">
          <source>The positional arguments to the helper</source>
          <target state="translated">Позиционные аргументы для помощника</target>
        </trans-unit>
        <trans-unit id="9b2ab9413880d940f49d12c1781a196be650c645" translate="yes" xml:space="preserve">
          <source>The post's comments would then be available in your template as &lt;code&gt;model.comments&lt;/code&gt;.</source>
          <target state="translated">Комментарии к публикации будут доступны в вашем шаблоне как &lt;code&gt;model.comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8884e5a83dfe81deaf4fd5eb5cc8081003657de6" translate="yes" xml:space="preserve">
          <source>The primary purpose of this class is to create hooks that can be implemented by an adapter for various test frameworks.</source>
          <target state="translated">Основным назначением данного класса является создание крючков,которые могут быть реализованы адаптером для различных тестовых фреймворков.</target>
        </trans-unit>
        <trans-unit id="7c9ce1bc115a79248bbaed83eaf438de9db2bc44" translate="yes" xml:space="preserve">
          <source>The primary way of interacting with a promise is through its &lt;code&gt;then&lt;/code&gt; method, which registers callbacks to receive either a promise's eventual value or the reason why the promise cannot be fulfilled.</source>
          <target state="translated">Основной способ взаимодействия с обещанием - через его метод &lt;code&gt;then&lt;/code&gt; , который регистрирует обратные вызовы для получения либо конечного значения обещания, либо причины, по которой обещание не может быть выполнено.</target>
        </trans-unit>
        <trans-unit id="59d128dbc75fda5894fb5dea6412a07651640a9e" translate="yes" xml:space="preserve">
          <source>The process of removing the feature flags from the resulting build output is handled by &lt;a href=&quot;https://github.com/thomasboyt/defeatureify&quot;&gt;&lt;code&gt;defeatureify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Процесс удаления флагов функций из результирующих выходных данных сборки обрабатывается &lt;a href=&quot;https://github.com/thomasboyt/defeatureify&quot;&gt; &lt;code&gt;defeatureify&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="291f652ab49a4eb74576b1a1bb6950593d5373e8" translate="yes" xml:space="preserve">
          <source>The promise whose fulfillment value is being proxied by this object.</source>
          <target state="translated">Обещание,стоимость выполнения которого проксируется этим объектом.</target>
        </trans-unit>
        <trans-unit id="cc7758b607302e53a0da31210b9497cab24a954d" translate="yes" xml:space="preserve">
          <source>The property key to be notified about.</source>
          <target state="translated">Ключ от собственности,о котором необходимо уведомить.</target>
        </trans-unit>
        <trans-unit id="11ef23efc9663b08bd99db214c95e5dc5d1cd5ea" translate="yes" xml:space="preserve">
          <source>The property key to retrieve</source>
          <target state="translated">Ключ свойства для получения</target>
        </trans-unit>
        <trans-unit id="841185ba10823f766df7d71131c49e92c5b6ee9e" translate="yes" xml:space="preserve">
          <source>The property key to set</source>
          <target state="translated">Ключ свойства для установки</target>
        </trans-unit>
        <trans-unit id="37b81ff8e5f127d9996f4e45ec5e0deebeaf6ce8" translate="yes" xml:space="preserve">
          <source>The property path to set</source>
          <target state="translated">Свойство путь к установке</target>
        </trans-unit>
        <trans-unit id="fb6eddea047f11a03af1d5ee0f7e00977dfd358c" translate="yes" xml:space="preserve">
          <source>The property to retrieve</source>
          <target state="translated">Имущество для извлечения</target>
        </trans-unit>
        <trans-unit id="8611964c338d3f650ff1f5dffbfb19d6cfa92a6b" translate="yes" xml:space="preserve">
          <source>The property to set</source>
          <target state="translated">Имущество для установки</target>
        </trans-unit>
        <trans-unit id="34a11ee7cca8e3277193e578a732c953c3658ceb" translate="yes" xml:space="preserve">
          <source>The property value or the defaultValue.</source>
          <target state="translated">Значение свойства или значение по умолчаниюValue.</target>
        </trans-unit>
        <trans-unit id="bb368158afde88e0d072275a3061843e6612c710" translate="yes" xml:space="preserve">
          <source>The property value or undefined.</source>
          <target state="translated">Значение свойства или неопределенное.</target>
        </trans-unit>
        <trans-unit id="19f5671dd388019c1e7b9993c2e1610d92a167e3" translate="yes" xml:space="preserve">
          <source>The provided controller will be one resolved based on the name of this route.</source>
          <target state="translated">Предусмотренный контроллер будет разрешен в зависимости от названия данного маршрута.</target>
        </trans-unit>
        <trans-unit id="43f2ede5675faaa434d556fbe9e5fc7a71392d4b" translate="yes" xml:space="preserve">
          <source>The purpose of the Ember Instrumentation module is to provide efficient, general-purpose instrumentation for Ember.</source>
          <target state="translated">Назначение модуля &quot;Янтарный прибор&quot; состоит в том,чтобы обеспечить Эмбер эффективными приборами общего назначения.</target>
        </trans-unit>
        <trans-unit id="423ed4fcc7c2521ed4d18b49830304fce9133a79" translate="yes" xml:space="preserve">
          <source>The real value of &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_component&quot;&gt;&lt;code&gt;{{component}}&lt;/code&gt;&lt;/a&gt; comes from being able to dynamically pick the component being rendered. Below is an example of using the helper as a means of choosing different components for displaying different kinds of posts:</source>
          <target state="translated">Настоящая ценность &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_component&quot;&gt; &lt;code&gt;{{component}}&lt;/code&gt; &lt;/a&gt; заключается в возможности динамического выбора визуализируемого компонента. Ниже приведен пример использования помощника как средства выбора различных компонентов для отображения различных типов сообщений:</target>
        </trans-unit>
        <trans-unit id="94d0b948c12d2a0e9c041073d0e9e25cd67c32bc" translate="yes" xml:space="preserve">
          <source>The record passed as the first parameter is where you should stash state about the record if needed; you should never store data on the state object itself.</source>
          <target state="translated">Запись,переданная в качестве первого параметра,является тем местом,где при необходимости следует хранить данные о состоянии записи;никогда не следует хранить данные о самом объекте состояния.</target>
        </trans-unit>
        <trans-unit id="0e847eeb0e7b887a5ab5a982823e0c83a639d123" translate="yes" xml:space="preserve">
          <source>The reduced value.</source>
          <target state="translated">Сниженное значение.</target>
        </trans-unit>
        <trans-unit id="6e588a2c9e2c86b51f204f41c83c576f838e6536" translate="yes" xml:space="preserve">
          <source>The relationship descriptor argument is an object with the following properties.</source>
          <target state="translated">Аргументом дескриптора отношения является объект со следующими свойствами.</target>
        </trans-unit>
        <trans-unit id="f282f5d1355901b15ca747b3a5ab165ce7bc1457" translate="yes" xml:space="preserve">
          <source>The reload behavior is configured either via the passed &lt;code&gt;options&lt;/code&gt; hash or the result of the adapter's &lt;code&gt;shouldReloadRecord&lt;/code&gt;.</source>
          <target state="translated">Поведение при перезагрузке настраивается либо с помощью хэша переданных &lt;code&gt;options&lt;/code&gt; либо с помощью функции &lt;code&gt;shouldReloadRecord&lt;/code&gt; адаптера .</target>
        </trans-unit>
        <trans-unit id="db525ceb99e1840957b4e97df93348fb6ea8f6f3" translate="yes" xml:space="preserve">
          <source>The request is made through the adapters' &lt;code&gt;queryRecord&lt;/code&gt;:</source>
          <target state="translated">Запрос осуществляется через &lt;code&gt;queryRecord&lt;/code&gt; адаптеров :</target>
        </trans-unit>
        <trans-unit id="41441812d681fe9fb5a2b27e3821d50566b0e53f" translate="yes" xml:space="preserve">
          <source>The resolver instance of the application being debugged. This property will be injected on creation.</source>
          <target state="translated">Экземпляр резольвера отлаживаемого приложения.Это свойство будет введено при создании.</target>
        </trans-unit>
        <trans-unit id="473773a9f0ae3a524717a98bf2bff757a44c072d" translate="yes" xml:space="preserve">
          <source>The resulting template render logic would be:</source>
          <target state="translated">В результате будет получена логика рендеринга по шаблону:</target>
        </trans-unit>
        <trans-unit id="64e24c1771c3d34bfc6f390eb86af08b179c758c" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;then&lt;/code&gt; is itself a promise. This second, 'downstream' promise is resolved with the return value of the first promise's fulfillment or rejection handler, or rejected if the handler throws an exception.</source>
          <target state="translated">Возвращаемое значение &lt;code&gt;then&lt;/code&gt; само по себе является обещанием. Это второе, &amp;laquo;нисходящее&amp;raquo; обещание разрешается с помощью возвращаемого значения обработчика выполнения или отклонения первого обещания или отклоняется, если обработчик генерирует исключение.</target>
        </trans-unit>
        <trans-unit id="8d20833918be8aaca0fedabee7a9e43ef5581cff" translate="yes" xml:space="preserve">
          <source>The returned promise is fulfilled with a hash that has the same key names as the &lt;code&gt;promises&lt;/code&gt; object argument. If any of the values in the object are not promises, they will be copied over to the fulfilled object and marked with state 'fulfilled'.</source>
          <target state="translated">Возвращенное обещание выполняется с помощью хэша, который имеет те же имена ключей, что и аргумент объекта &lt;code&gt;promises&lt;/code&gt; . Если какое-либо из значений в объекте не является обещанием, они будут скопированы в выполненный объект и отмечены состоянием &amp;laquo;выполнено&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8735a66c3c58858c4137385dfcf321c94c6cd283" translate="yes" xml:space="preserve">
          <source>The returned value is placed where the &lt;code&gt;{{}}&lt;/code&gt; is called. The above style is called &quot;inline&quot;. A second style of helper usage is called &quot;block&quot;. For example:</source>
          <target state="translated">Возвращаемое значение помещается там, где вызывается &lt;code&gt;{{}}&lt;/code&gt; . Вышеупомянутый стиль называется &amp;laquo;встроенный&amp;raquo;. Второй стиль использования помощника называется &amp;laquo;блочный&amp;raquo;. Например:</target>
        </trans-unit>
        <trans-unit id="7e2e21dc44f676bf1bd060e0463dcf7e7e820d3a" translate="yes" xml:space="preserve">
          <source>The root DOM element of the Application. This can be specified as an element or a &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;jQuery-compatible selector string&lt;/a&gt;.</source>
          <target state="translated">Корневой элемент DOM приложения. Это можно указать как элемент или &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;строку селектора, совместимого&lt;/a&gt; с jQuery .</target>
        </trans-unit>
        <trans-unit id="eecac9c9d2d99121f7c3692d02975aa4bfbc76ff" translate="yes" xml:space="preserve">
          <source>The root object of the transform.</source>
          <target state="translated">Корневой объект преобразования.</target>
        </trans-unit>
        <trans-unit id="1bb1190332a9040ced62948350a42acdb8d03375" translate="yes" xml:space="preserve">
          <source>The route defined above will by default use the &lt;code&gt;blog-post.js&lt;/code&gt; route handler, the &lt;code&gt;blog-post.hbs&lt;/code&gt; template, and be referred to as &lt;code&gt;blog-post&lt;/code&gt; in any &lt;code&gt;{{link-to}}&lt;/code&gt; helpers.</source>
          <target state="translated">Маршрут определен выше по умолчанию будет использовать &lt;code&gt;blog-post.js&lt;/code&gt; обработчика маршрута, &lt;code&gt;blog-post.hbs&lt;/code&gt; шаблон, и будет называться &lt;code&gt;blog-post&lt;/code&gt; в любых &lt;code&gt;{{link-to}}&lt;/code&gt; хелперов.</target>
        </trans-unit>
        <trans-unit id="1547b257edc696cf9d97b9973174fdd903d969e5" translate="yes" xml:space="preserve">
          <source>The route handler then typically does two things:</source>
          <target state="translated">Тогда обработчик маршрута обычно делает две вещи:</target>
        </trans-unit>
        <trans-unit id="5a25dcb793cf10fb01f14c9659469d0ea089350c" translate="yes" xml:space="preserve">
          <source>The route that triggered the loading event</source>
          <target state="translated">Маршрут,который вызвал событие загрузки</target>
        </trans-unit>
        <trans-unit id="40ef35919f724f529657ab517634c7e128df098d" translate="yes" xml:space="preserve">
          <source>The route will then set the return value from the &lt;code&gt;model&lt;/code&gt; hook as the &lt;code&gt;model&lt;/code&gt; property of the controller. You will then be able to access the controller's &lt;code&gt;model&lt;/code&gt; property in your template:</source>
          <target state="translated">Затем маршрут установит возвращаемое значение от хука &lt;code&gt;model&lt;/code&gt; как свойство &lt;code&gt;model&lt;/code&gt; контроллера. После этого вы сможете получить доступ к свойству &lt;code&gt;model&lt;/code&gt; контроллера в своем шаблоне:</target>
        </trans-unit>
        <trans-unit id="d9055510d33898a55dfaabcdf80c77508cc19202" translate="yes" xml:space="preserve">
          <source>The router considers any object with a &lt;code&gt;then()&lt;/code&gt; method defined on it to be a promise.</source>
          <target state="translated">Маршрутизатор считает любой объект, для которого определен метод &lt;code&gt;then()&lt;/code&gt; обещанием.</target>
        </trans-unit>
        <trans-unit id="20ae5f1ef171342e36f277fd6cd573513d476f32" translate="yes" xml:space="preserve">
          <source>The run loop API calls that &lt;em&gt;schedule&lt;/em&gt; work, i.e. &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_schedule&quot;&gt;&lt;code&gt;run.schedule&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_scheduleOnce&quot;&gt;&lt;code&gt;run.scheduleOnce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_once&quot;&gt;&lt;code&gt;run.once&lt;/code&gt;&lt;/a&gt; have the property that they will approximate a run loop for you if one does not already exist. These automatically created run loops we call &lt;em&gt;autoruns&lt;/em&gt;.</source>
          <target state="translated">Вызовы API цикла выполнения, которые &lt;em&gt;планируют&lt;/em&gt; работу, т. &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_schedule&quot;&gt; &lt;code&gt;run.schedule&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_scheduleOnce&quot;&gt; &lt;code&gt;run.scheduleOnce&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_once&quot;&gt; &lt;code&gt;run.once&lt;/code&gt; &lt;/a&gt; имеют свойство приближать цикл выполнения для вас, если он еще не существует. Эти автоматически созданные циклы выполнения мы называем &lt;em&gt;автозапуском&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aab8740741c5d7b401984a17e059a4e0f2aa2178" translate="yes" xml:space="preserve">
          <source>The same applies to &lt;code&gt;belongsTo&lt;/code&gt; relationships:</source>
          <target state="translated">То же самое относится к отношениям &lt;code&gt;belongsTo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="79f91cf22c7dca84c509c4f77da4cb434629965b" translate="yes" xml:space="preserve">
          <source>The same rules apply to arrays of primitives.</source>
          <target state="translated">Те же правила применяются к массивам примитивов.</target>
        </trans-unit>
        <trans-unit id="fd7b8fd9eac5480b43026cdd22b54a66a4559b81" translate="yes" xml:space="preserve">
          <source>The scroll happens on &lt;code&gt;didRender&lt;/code&gt;, where it will scroll the component's container to the element with the selected class name.</source>
          <target state="translated">Прокрутка происходит на &lt;code&gt;didRender&lt;/code&gt; , где он прокручивает контейнер компонента до элемента с выбранным именем класса.</target>
        </trans-unit>
        <trans-unit id="0d4cba2063c093b6e0028f97cd82cdeaa6816998" translate="yes" xml:space="preserve">
          <source>The second parameter is the optional options hash. Available options are:</source>
          <target state="translated">Вторым параметром является хэш опций.Доступны опции:</target>
        </trans-unit>
        <trans-unit id="8b090381a04a9e48621d42bb0bf53fa4cba4f1e4" translate="yes" xml:space="preserve">
          <source>The semantic version</source>
          <target state="translated">Сематическая версия</target>
        </trans-unit>
        <trans-unit id="5f38bd2b1df14793a918cfb86c695e7bb1738385" translate="yes" xml:space="preserve">
          <source>The serialized value</source>
          <target state="translated">Сериализованное значение</target>
        </trans-unit>
        <trans-unit id="1441caa2180aa5deaa1d21c6c8bad5b37a9eaf47" translate="yes" xml:space="preserve">
          <source>The serializer properly converts the blog request payload into a blog post model object.</source>
          <target state="translated">Сериализатор корректно преобразует полезную нагрузку запроса блога в объект пост-модели блога.</target>
        </trans-unit>
        <trans-unit id="c14938d7774e56e262de01aeb6eb9013ddc6fc80" translate="yes" xml:space="preserve">
          <source>The setup is largely similar to how Ember works out-of-the-box. Normally, Ember will boot a default instance for your Application on &quot;DOM ready&quot;. However, you can customize this behavior by disabling &lt;code&gt;autoboot&lt;/code&gt;.</source>
          <target state="translated">Настройка во многом похожа на то, как Ember работает &quot;из коробки&quot;. Обычно Ember загружает экземпляр по умолчанию для вашего приложения в режиме &amp;laquo;DOM ready&amp;raquo;. Однако вы можете настроить это поведение, отключив &lt;code&gt;autoboot&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44bd33d4e5c5dbd425e1b01d352cce7c15b457b1" translate="yes" xml:space="preserve">
          <source>The sorted array.</source>
          <target state="translated">Сортированный массив.</target>
        </trans-unit>
        <trans-unit id="8bbcdf9dc99641ff8f9df51339a76d30dd24a554" translate="yes" xml:space="preserve">
          <source>The starting index in the array that did change.</source>
          <target state="translated">Стартовый индекс в массиве,который действительно изменился.</target>
        </trans-unit>
        <trans-unit id="edab6dfda8b0a675cd3b277a658515192ee54ac2" translate="yes" xml:space="preserve">
          <source>The starting index in the array that will change.</source>
          <target state="translated">Стартовый индекс в массиве,который будет изменяться.</target>
        </trans-unit>
        <trans-unit id="565a8bbec3976cbbd11685d7a0db28bb110f442f" translate="yes" xml:space="preserve">
          <source>The store contains all of the data for records loaded from the server. It is also responsible for creating instances of &lt;code&gt;DS.Model&lt;/code&gt; that wrap the individual data for a record, so that they can be bound to in your Handlebars templates.</source>
          <target state="translated">Хранилище содержит все данные для записей, загруженных с сервера. Он также отвечает за создание экземпляров &lt;code&gt;DS.Model&lt;/code&gt; , которые обертывают отдельные данные для записи, чтобы их можно было привязать к вашим шаблонам Handlebars.</target>
        </trans-unit>
        <trans-unit id="bd1641cbe5dc00ca11bff91f0a9e4a4c7d1b52e6" translate="yes" xml:space="preserve">
          <source>The store object is available in controllers and routes using &lt;code&gt;this.get('store')&lt;/code&gt;.</source>
          <target state="translated">Объект хранилища доступен в контроллерах и маршрутах с помощью &lt;code&gt;this.get('store')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9b1269778250371106783075e2d9ba12e8b0581" translate="yes" xml:space="preserve">
          <source>The store provides multiple ways to create new record objects. They have some subtle differences in their use which are detailed below:</source>
          <target state="translated">Магазин предоставляет несколько способов создания новых объектов записи.Они имеют некоторые тонкие различия в их использовании,которые подробно описаны ниже:</target>
        </trans-unit>
        <trans-unit id="c2c599c05627277afc6c6ecc983a68b24eda3344" translate="yes" xml:space="preserve">
          <source>The store then takes that JSON, initializes the record with the JSON data, and resolves the promise returned to your application with the newly-loaded record.</source>
          <target state="translated">Затем магазин берет этот JSON,инициализирует запись с помощью JSON-данных и разрешает обещание,возвращенное вашему приложению с вновь загруженной записью.</target>
        </trans-unit>
        <trans-unit id="41b68f114ba57e357ad03f70aa549d7262c8caa5" translate="yes" xml:space="preserve">
          <source>The store will automatically cache records for you. If a record had already been loaded, asking for it a second time will always return the same object instance. This minimizes the number of round-trips to the server, and allows your application to render its UI to the user as fast as possible.</source>
          <target state="translated">Магазин автоматически кэширует записи для вас.Если запись уже была загружена,то при повторном запросе всегда будет возвращаться один и тот же экземпляр объекта.Это минимизирует количество обходов сервера и позволяет вашему приложению визуализировать свой пользовательский интерфейс как можно быстрее.</target>
        </trans-unit>
        <trans-unit id="01207237cd4ccf3b900d21e60db5b725e70f8924" translate="yes" xml:space="preserve">
          <source>The store will call &lt;code&gt;findMany&lt;/code&gt; instead of multiple &lt;code&gt;findRecord&lt;/code&gt; requests to find multiple records at once if coalesceFindRequests is true.</source>
          <target state="translated">Магазин будет вызывать &lt;code&gt;findMany&lt;/code&gt; вместо нескольких запросов &lt;code&gt;findRecord&lt;/code&gt; для одновременного поиска нескольких записей, если coalesceFindRequests истинно.</target>
        </trans-unit>
        <trans-unit id="d2f69dc65e213b2fb8cdb1b7cbc4e005ab648a25" translate="yes" xml:space="preserve">
          <source>The store's &lt;code&gt;push()&lt;/code&gt; method is a low level API which accepts a JSON API document with a few important differences from the JSON API document that the JSONAPISerializer accepts. The type name in the JSON API document must match the type name of the model exactly (In the example above the type is &lt;code&gt;album&lt;/code&gt; because the model is defined in &lt;code&gt;app/models/album.js&lt;/code&gt;). Attributes and relationship names must match the casing of the properties defined on the Model class.</source>
          <target state="translated">Метод &lt;code&gt;push()&lt;/code&gt; магазина - это API низкого уровня, который принимает документ JSON API с некоторыми важными отличиями от документа JSON API, который принимает JSONAPISerializer. Имя типа в документе JSON API должно точно соответствовать имени типа модели (в приведенном выше примере типом является &lt;code&gt;album&lt;/code&gt; поскольку модель определена в &lt;code&gt;app/models/album.js&lt;/code&gt; ). Имена атрибутов и отношений должны соответствовать корпусу свойств, определенных в классе Model.</target>
        </trans-unit>
        <trans-unit id="ba2337f1b869281822cbec365330fc6ed3a87eb9" translate="yes" xml:space="preserve">
          <source>The string to camelize.</source>
          <target state="translated">Струна для верблюжьей упряжки.</target>
        </trans-unit>
        <trans-unit id="e2b9d608f0fe83dbf1e7d9c07afcec863203911e" translate="yes" xml:space="preserve">
          <source>The string to capitalize.</source>
          <target state="translated">Строка с заглавной буквы.</target>
        </trans-unit>
        <trans-unit id="6562d656544896269e6510021a24eb0fe047f8cd" translate="yes" xml:space="preserve">
          <source>The string to dasherize.</source>
          <target state="translated">Струна для дэшериза.</target>
        </trans-unit>
        <trans-unit id="827deb88bf3cf7b323e93ba14d05290d5e8a6b48" translate="yes" xml:space="preserve">
          <source>The string to decamelize.</source>
          <target state="translated">Строка для декамелизации.</target>
        </trans-unit>
        <trans-unit id="8aef10dc78a1b6b0b047d67f1b41e8c2eacf1322" translate="yes" xml:space="preserve">
          <source>The string to format</source>
          <target state="translated">Строка для форматирования</target>
        </trans-unit>
        <trans-unit id="2b0b9ffa844d16267c8115855979ed48b6d4bc64" translate="yes" xml:space="preserve">
          <source>The string to format.</source>
          <target state="translated">Строка для форматирования.</target>
        </trans-unit>
        <trans-unit id="8bb5d2b6d14eab5fb11c8b4cd7eded396880eafd" translate="yes" xml:space="preserve">
          <source>The string to split</source>
          <target state="translated">Строка для разделения</target>
        </trans-unit>
        <trans-unit id="504f1fdddf0d3ae9e6968c1488e9aaed471044e1" translate="yes" xml:space="preserve">
          <source>The string to underscore.</source>
          <target state="translated">Строка для подчёркивания.</target>
        </trans-unit>
        <trans-unit id="6b2ca2bba7cfc3b3d4f9eb164041ee4b3f478da7" translate="yes" xml:space="preserve">
          <source>The string values provided for the template name, and controller will eventually pass through to the resolver for lookup. See Ember.Resolver for how these are mapped to JavaScript objects in your application. The template to render into needs to be related to either the current route or one of its ancestors.</source>
          <target state="translated">Строковые значения,предусмотренные для имени шаблона,и контроллер в конечном итоге будут переданы в резольвер для поиска.Смотрите в Ember.Resolver,как они отображаются на JavaScript-объекты в вашем приложении.Шаблон для визуализации должен быть связан либо с текущим маршрутом,либо с одним из его предков.</target>
        </trans-unit>
        <trans-unit id="1c15310baae72447d4757eb2e55e534acbbc316b" translate="yes" xml:space="preserve">
          <source>The target object to invoke</source>
          <target state="translated">Целевой объект для вызова</target>
        </trans-unit>
        <trans-unit id="de10ba709439df9674dd354fe1c515eac06ba807" translate="yes" xml:space="preserve">
          <source>The target object to use</source>
          <target state="translated">Целевой объект для использования</target>
        </trans-unit>
        <trans-unit id="54d029f20e1dadec96b103ccc865dfcca39add60" translate="yes" xml:space="preserve">
          <source>The target of the method to invoke.</source>
          <target state="translated">Цель метода для вызова.</target>
        </trans-unit>
        <trans-unit id="e2ed41e561ef82bfe2b3a4d933412915eae9db07" translate="yes" xml:space="preserve">
          <source>The target of the subscription</source>
          <target state="translated">Цель подписки</target>
        </trans-unit>
        <trans-unit id="4ceffd13443beb5575ab1e4483fbd512664207b4" translate="yes" xml:space="preserve">
          <source>The template contains an &lt;a href=&quot;https://guides.emberjs.com/templates/input-helpers&quot;&gt;&lt;code&gt;{{input}}&lt;/code&gt;&lt;/a&gt; helper that renders as a text field, in which the user can type a pattern to filter the list of cities used in a search. The &lt;code&gt;value&lt;/code&gt; property of the &lt;code&gt;input&lt;/code&gt; will be kept in sync with the &lt;code&gt;value&lt;/code&gt; property in the component.</source>
          <target state="translated">Шаблон содержит помощник &lt;a href=&quot;https://guides.emberjs.com/templates/input-helpers&quot;&gt; &lt;code&gt;{{input}}&lt;/code&gt; ,&lt;/a&gt; который отображается в виде текстового поля, в котором пользователь может ввести шаблон для фильтрации списка городов, используемых в поиске. &lt;code&gt;value&lt;/code&gt; свойство &lt;code&gt;input&lt;/code&gt; будет храниться в синхронизации с &lt;code&gt;value&lt;/code&gt; свойства в компоненте.</target>
        </trans-unit>
        <trans-unit id="d74f4833f85af93d253619500c9b82c2db0b7e23" translate="yes" xml:space="preserve">
          <source>The template inside of the &lt;code&gt;{{#each-in}}&lt;/code&gt; block is repeated once for each key in the passed object. The first block parameter (&lt;code&gt;category&lt;/code&gt; in the above example) is the key for this iteration, while the second block parameter (&lt;code&gt;products&lt;/code&gt;) is the actual value of that key.</source>
          <target state="translated">Шаблон внутри блока &lt;code&gt;{{#each-in}}&lt;/code&gt; повторяется один раз для каждого ключа в переданном объекте. Первый параметр блока ( &lt;code&gt;category&lt;/code&gt; в приведенном выше примере) является ключом для этой итерации, а второй параметр блока ( &lt;code&gt;products&lt;/code&gt; ) - это фактическое значение этого ключа.</target>
        </trans-unit>
        <trans-unit id="722bc70d44379d1b5cfee1e8ad82e651eaf53bd8" translate="yes" xml:space="preserve">
          <source>The template inside of the &lt;code&gt;{{#each}}&lt;/code&gt; block will be repeated once for each item in the array, with the each item set to the &lt;code&gt;person&lt;/code&gt; block param.</source>
          <target state="translated">Шаблон внутри блока &lt;code&gt;{{#each}}&lt;/code&gt; будет повторяться один раз для каждого элемента в массиве, при этом для каждого элемента установлен параметр блока &lt;code&gt;person&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e14b256b8bf613a58dde6fd95e9abcd1338adcd7" translate="yes" xml:space="preserve">
          <source>The test locates the results of the search by finding elements with a class of &lt;code&gt;listing&lt;/code&gt;, which we gave to our &lt;code&gt;rental-listing&lt;/code&gt; component in the &lt;a href=&quot;../simple-component&quot;&gt;&quot;Building a Simple Component&quot;&lt;/a&gt; section of the tutorial.</source>
          <target state="translated">Тест определяет местонахождение результатов поиска, находя элементы с классом &lt;code&gt;listing&lt;/code&gt; , который мы передали нашему компоненту &lt;code&gt;rental-listing&lt;/code&gt; в разделе &lt;a href=&quot;../simple-component&quot;&gt;&amp;laquo;Создание простого компонента&amp;raquo;&lt;/a&gt; учебного пособия.</target>
        </trans-unit>
        <trans-unit id="2a64607c214ef37d87d8ad67e76908fa5af07f02" translate="yes" xml:space="preserve">
          <source>The test verifies that after filling in the search input with &quot;Seattle&quot;, the rental list reduces from 3 to 1, and the item displayed shows &quot;Seattle&quot; as the location.</source>
          <target state="translated">Тест проверяет,что после заполнения поискового ввода с помощью &quot;Сиэтл&quot; список аренды уменьшается с 3 до 1,а отображаемый элемент отображает &quot;Сиэтл&quot; как местоположение.</target>
        </trans-unit>
        <trans-unit id="89d72c69007c893df81d99979fa6b2e66b8f23a3" translate="yes" xml:space="preserve">
          <source>The test would call the &lt;code&gt;calc&lt;/code&gt; method and assert it gets back the correct value.</source>
          <target state="translated">Тест вызовет метод &lt;code&gt;calc&lt;/code&gt; и подтвердит, что он возвращает правильное значение.</target>
        </trans-unit>
        <trans-unit id="9e4b46dc9e309d54bfec19901f419a3f701c4206" translate="yes" xml:space="preserve">
          <source>The third context of the &lt;code&gt;{{action}}&lt;/code&gt; helper can be called &quot;element space&quot;. For example:</source>
          <target state="translated">Третий контекст помощника &lt;code&gt;{{action}}&lt;/code&gt; можно назвать &amp;laquo;пространством элементов&amp;raquo;. Например:</target>
        </trans-unit>
        <trans-unit id="37d7a55f997fe0c18460ae452e7f09adc66aa219" translate="yes" xml:space="preserve">
          <source>The third form of helper usage is &lt;strong&gt;block invocation&lt;/strong&gt;. Use block helpers to render only part of a template. Block invocation of a helper can be recognized by the &lt;code&gt;#&lt;/code&gt; before the helper name, and the closing &lt;code&gt;{{/&lt;/code&gt; double curly brace at the end of the invocation.</source>
          <target state="translated">Третья форма использования помощника - это &lt;strong&gt;блочный вызов&lt;/strong&gt; . Используйте помощники блоков для визуализации только части шаблона. Блочный вызов помощника можно распознать по &lt;code&gt;#&lt;/code&gt; перед именем помощника и закрывающей двойной фигурной скобке &lt;code&gt;{{/&lt;/code&gt; /) в конце вызова.</target>
        </trans-unit>
        <trans-unit id="944b09433ee6559023c1be9d8df4b25f0ac83680" translate="yes" xml:space="preserve">
          <source>The third parameter is a function, which can be used to nest routes. Nested routes, by default, will have the parent route tree's route name and path prepended to it's own.</source>
          <target state="translated">Третий параметр-это функция,которая может быть использована для гнездования маршрутов.Вложенные маршруты,по умолчанию,будут иметь имя маршрута и путь родительского дерева маршрутов,предопределенные его собственным.</target>
        </trans-unit>
        <trans-unit id="147526a2a9e7840b61e7afb24045b79c209cc65d" translate="yes" xml:space="preserve">
          <source>The type. e.g. &quot;model&quot;, &quot;controller&quot;, &quot;route&quot;.</source>
          <target state="translated">Тип,например,&quot;модель&quot;,&quot;контроллер&quot;,&quot;маршрут&quot;.</target>
        </trans-unit>
        <trans-unit id="4f039fe10b59dfaf945a628a511ceac52bce6aa9" translate="yes" xml:space="preserve">
          <source>The updateRecord method is expected to return a promise that will resolve with the serialized record. This allows the backend to inform the Ember Data store the current state of this record after the update. If it is not possible to return a serialized record the updateRecord promise can also resolve with &lt;code&gt;undefined&lt;/code&gt; and the Ember Data store will assume all of the updates were successfully applied on the backend.</source>
          <target state="translated">Ожидается, что метод updateRecord вернет обещание, которое будет разрешено с помощью сериализованной записи. Это позволяет бэкэнд информировать хранилище данных Ember о текущем состоянии этой записи после обновления. Если невозможно вернуть сериализованную запись, обещание updateRecord также может разрешиться с помощью &lt;code&gt;undefined&lt;/code&gt; , и хранилище данных Ember будет предполагать, что все обновления были успешно применены на бэкэнде.</target>
        </trans-unit>
        <trans-unit id="51de670ab53c3db59ec8a0666e66364d58ad96c2" translate="yes" xml:space="preserve">
          <source>The user changes the URL manually, such as by clicking the back button or by editing the address bar.</source>
          <target state="translated">Пользователь изменяет URL вручную,например,нажимая кнопку &quot;Назад&quot; или редактируя адресную строку.</target>
        </trans-unit>
        <trans-unit id="5351613497c3004771812d248a543cbdc66656b3" translate="yes" xml:space="preserve">
          <source>The user clicks a link within the app.</source>
          <target state="translated">Пользователь нажимает на ссылку внутри приложения.</target>
        </trans-unit>
        <trans-unit id="9921d7f5710f25509ee88606a85dee5d311bd63d" translate="yes" xml:space="preserve">
          <source>The user loads the app for the first time.</source>
          <target state="translated">Пользователь загружает приложение в первый раз.</target>
        </trans-unit>
        <trans-unit id="74e880123198891577360a791645732bdf32b1e5" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;isWide&lt;/code&gt; comes from our component's JavaScript file, in this case &lt;code&gt;rental-listing.js&lt;/code&gt;. Since we want the image to be smaller at first, we will set the property to start as &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Значение &lt;code&gt;isWide&lt;/code&gt; происходит из файла JavaScript нашего компонента, в данном случае &lt;code&gt;rental-listing.js&lt;/code&gt; . Поскольку сначала мы хотим, чтобы изображение было меньше, мы установим для свойства start значение &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d23a5a16f505fa5c0bc4c22ed6862d2f7cf30588" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;my-controller-name&lt;/code&gt; must match the name of the Route that renders it. So a Route named &lt;code&gt;blog-post&lt;/code&gt; would have a matching Controller named &lt;code&gt;blog-post&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;my-controller-name&lt;/code&gt; должно соответствовать имени маршрута, который его отображает. Таким образом, маршрут с именем &lt;code&gt;blog-post&lt;/code&gt; будет иметь соответствующий Контроллер с именем &lt;code&gt;blog-post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd1f47d5724e57f16f4762fa4b7b499056b744cd" translate="yes" xml:space="preserve">
          <source>The value to be returned.</source>
          <target state="translated">Значение,которое нужно вернуть.</target>
        </trans-unit>
        <trans-unit id="04a60bcf4638b39535e993d6cbd42eae6ce46172" translate="yes" xml:space="preserve">
          <source>The value to return if the property value is undefined</source>
          <target state="translated">Значение,которое нужно вернуть,если значение свойства не определено.</target>
        </trans-unit>
        <trans-unit id="9571ab424dffa7c5f376c7c97c04d87fb698a99b" translate="yes" xml:space="preserve">
          <source>The value to set</source>
          <target state="translated">Установленное значение</target>
        </trans-unit>
        <trans-unit id="cc012a4e9d5bd52a06928e9abc8926ab3ec9e9e2" translate="yes" xml:space="preserve">
          <source>The value to set or `null`.</source>
          <target state="translated">Значение для установки или `нуль`.</target>
        </trans-unit>
        <trans-unit id="66ed92b099921e39838f582833afc6fe6e27756e" translate="yes" xml:space="preserve">
          <source>Then it checks for the presence of a type-specific instance method of the form &lt;code&gt;resolve[Type]&lt;/code&gt; and calls it if it exists. For example if it was resolving 'template:post', it would call the &lt;code&gt;resolveTemplate&lt;/code&gt; method.</source>
          <target state="translated">Затем он проверяет наличие зависящего от типа метода экземпляра формы &lt;code&gt;resolve[Type]&lt;/code&gt; и вызывает его, если он существует. Например, если он разрешал 'template: post', он вызвал &lt;code&gt;resolveTemplate&lt;/code&gt; метод resolveTemplate .</target>
        </trans-unit>
        <trans-unit id="124bbec613e0740a2add94968e72e7ab45cd285a" translate="yes" xml:space="preserve">
          <source>Then make sure the &quot;Display the Tomster icon when a site runs Ember.js&quot; checkbox is checked.</source>
          <target state="translated">Затем убедитесь,что флажок &quot;Отображать значок Tomster,когда сайт запускает Ember.js&quot; установлен.</target>
        </trans-unit>
        <trans-unit id="0963cd90e4c018ee024de78af4821e7b2fb93a50" translate="yes" xml:space="preserve">
          <source>Then our &lt;code&gt;system-preferences-editor&lt;/code&gt; template passes its local &lt;code&gt;deleteUser&lt;/code&gt; action into the &lt;code&gt;user-profile&lt;/code&gt; as that component's &lt;code&gt;deleteCurrentUser&lt;/code&gt; property.</source>
          <target state="translated">Затем наш шаблон &lt;code&gt;system-preferences-editor&lt;/code&gt; передает свое локальное действие &lt;code&gt;deleteUser&lt;/code&gt; в &lt;code&gt;user-profile&lt;/code&gt; в &lt;code&gt;deleteCurrentUser&lt;/code&gt; свойства этого компонента deleteCurrentUser .</target>
        </trans-unit>
        <trans-unit id="b94c945aa553087e491135e87e7caa5e6c5b7883" translate="yes" xml:space="preserve">
          <source>Then you can use the &lt;code&gt;surge&lt;/code&gt; command to deploy your application. Note you will also need to rename index.html to 200.html to enable Ember's client-side routing.</source>
          <target state="translated">Затем вы можете использовать команду &lt;code&gt;surge&lt;/code&gt; для развертывания вашего приложения. Обратите внимание, что вам также необходимо переименовать index.html в 200.html, чтобы включить маршрутизацию на стороне клиента Ember.</target>
        </trans-unit>
        <trans-unit id="0d901353d4e943cc8e0760df4cb86a77339d4096" translate="yes" xml:space="preserve">
          <source>Then you can use the attributes in the component exactly as if they had been passed in like &lt;code&gt;{{blog-post title=post.title body=post.body}}&lt;/code&gt;.</source>
          <target state="translated">Затем вы можете использовать атрибуты в компоненте точно так же, как если бы они были переданы, например &lt;code&gt;{{blog-post title=post.title body=post.body}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c92853aa810fa69277504403a7af77504ee617b3" translate="yes" xml:space="preserve">
          <source>Then you could test that the relationship is wired up correctly with this test.</source>
          <target state="translated">Тогда ты можешь проверить,что отношения корректно связаны с этим тестом.</target>
        </trans-unit>
        <trans-unit id="6aaeabca116411bcf4c1a7398dff6575fb20c9cb" translate="yes" xml:space="preserve">
          <source>There are a few things to note about the &lt;code&gt;didInsertElement()&lt;/code&gt; hook:</source>
          <target state="translated">О &lt;code&gt;didInsertElement()&lt;/code&gt; следует отметить несколько моментов :</target>
        </trans-unit>
        <trans-unit id="f4a72425f5f9b4159f6c94de9e4fbddbb71a0684" translate="yes" xml:space="preserve">
          <source>There are also a number of hooks that you might find useful to define across-the-board rules for your payload. These rules will be useful if your server is consistent, or if you're building an adapter for an infrastructure service, like Firebase, and want to encode service conventions.</source>
          <target state="translated">Существует также ряд крючков,которые могут оказаться полезными для определения сквозных правил для вашей полезной нагрузки.Эти правила будут полезны,если ваш сервер последователен,или если вы строите адаптер для службы инфраструктуры,такой как Firebase,и хотите кодировать соглашения об обслуживании.</target>
        </trans-unit>
        <trans-unit id="578096648c11d6a69dd22171bb32ab27d9d7328e" translate="yes" xml:space="preserve">
          <source>There are many other reasons you probably want to have the last word on whether a user can or cannot access a certain page. Ember allows you to control that access with a combination of hooks and methods in your route.</source>
          <target state="translated">Есть много других причин,по которым вы,вероятно,хотите,чтобы последнее слово было о том,может ли пользователь получить доступ к определенной странице или нет.Ember позволяет вам контролировать этот доступ с помощью комбинации крючков и методов в вашем маршруте.</target>
        </trans-unit>
        <trans-unit id="3e116b7284a783a93524c56507c577f15c7f8f3a" translate="yes" xml:space="preserve">
          <source>There are some typical properties for &lt;code&gt;JSONAPI&lt;/code&gt; payload:</source>
          <target state="translated">Есть несколько типичных свойств полезной нагрузки &lt;code&gt;JSONAPI&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fa40a8819696a1f893c91e0074003303e8e955ba" translate="yes" xml:space="preserve">
          <source>There are three contexts an action helper can be used in. The first two contexts to discuss are attribute context, and Handlebars value context.</source>
          <target state="translated">Существует три контекста,в которых может быть использован помощник действий.Первые два контекста,которые следует обсудить,это контекст атрибутов и контекст значений панелей управления.</target>
        </trans-unit>
        <trans-unit id="eb35d84a7b28ef37fc1f3ad04e7b79de4e7986bd" translate="yes" xml:space="preserve">
          <source>There are three different classifications of tests that you will need: &lt;strong&gt;Acceptance&lt;/strong&gt;, &lt;strong&gt;Unit&lt;/strong&gt;, and &lt;strong&gt;Integration&lt;/strong&gt;.</source>
          <target state="translated">Вам понадобятся три различных класса тестов: &lt;strong&gt;приемочные&lt;/strong&gt; , &lt;strong&gt;модульные&lt;/strong&gt; и &lt;strong&gt;интеграционные&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7367662dcdee81e54f51c21bbee10f32226fbf53" translate="yes" xml:space="preserve">
          <source>There are times when dealing with promises that it seems like any errors are being 'swallowed', and not properly raised. This makes it extremely difficult to track down where a given issue is coming from. Thankfully, &lt;code&gt;RSVP&lt;/code&gt; has a solution for this problem built in.</source>
          <target state="translated">Бывают случаи, когда при работе с обещаниями кажется, что любые ошибки &amp;laquo;проглатываются&amp;raquo;, а не возникают должным образом. Это чрезвычайно затрудняет отслеживание того, откуда исходит данная проблема. К счастью, в &lt;code&gt;RSVP&lt;/code&gt; есть встроенное решение этой проблемы.</target>
        </trans-unit>
        <trans-unit id="44cfec86f1ebe6d62f3d92a60b1b8d46e0ac4e6e" translate="yes" xml:space="preserve">
          <source>There are two types of initializers: application initializers and application instance initializers.</source>
          <target state="translated">Существует два типа инициализаторов:инициализаторы приложений и инициализаторы экземпляров приложений.</target>
        </trans-unit>
        <trans-unit id="9c93293573cc4730e6f6925ce1aadc37cf558354" translate="yes" xml:space="preserve">
          <source>There is also a &lt;em&gt;tight coupling&lt;/em&gt; between your application's UI and the network code. If the url or the format of the JSON payload changes, it is likely to break all of your UI components in ways that are hard to track down.</source>
          <target state="translated">Также существует &lt;em&gt;тесная связь&lt;/em&gt; между пользовательским интерфейсом вашего приложения и сетевым кодом. Если URL-адрес или формат полезной нагрузки JSON изменится, это может привести к поломке всех ваших компонентов пользовательского интерфейса таким образом, который трудно отследить.</target>
        </trans-unit>
        <trans-unit id="4d05d80fad77d5b9ca545ded611a63131b8dfe96" translate="yes" xml:space="preserve">
          <source>There is also a way to share data within your blog post component with the content it is wrapping. In our blog post component we want to provide a way for the user to configure what type of style they want to write their post in. We will give them the option to specify either &lt;code&gt;markdown-style&lt;/code&gt; or &lt;code&gt;html-style&lt;/code&gt;.</source>
          <target state="translated">Существует также способ обмениваться данными в компоненте сообщения в блоге с содержимым, которое он упаковывает. В нашем компоненте сообщения в блоге мы хотим предоставить пользователю возможность настроить тип стиля, в котором они хотят писать свои сообщения. Мы дадим им возможность указать &lt;code&gt;markdown-style&lt;/code&gt; или стиль &lt;code&gt;html-style&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bce1dba6eb8d20d25b8d3b47eeeb56679f7d843" translate="yes" xml:space="preserve">
          <source>There is an option of not embedding JSON in the serialized payload by using serialize: 'ids'. If you do not want the relationship sent at all, you can use &lt;code&gt;serialize: false&lt;/code&gt;.</source>
          <target state="translated">Есть возможность не встраивать JSON в сериализованную полезную нагрузку с помощью serialize: 'ids'. Если вы вообще не хотите отправлять отношения, вы можете использовать &lt;code&gt;serialize: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c0962f2c7df03fd0ed2a6aa0f4eb2fdab83af0e" translate="yes" xml:space="preserve">
          <source>Therefore, if this function is comparing some numeric values, simple &lt;code&gt;itemA - itemB&lt;/code&gt; or &lt;code&gt;itemA.get( 'foo' ) - itemB.get( 'foo' )&lt;/code&gt; can be used instead of series of &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">Следовательно, если эта функция сравнивает некоторые числовые значения, вместо серии &lt;code&gt;if&lt;/code&gt; можно использовать простой &lt;code&gt;itemA - itemB&lt;/code&gt; или &lt;code&gt;itemA.get( 'foo' ) - itemB.get( 'foo' )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c0660d5302de3d7014b6613e931596da4023437" translate="yes" xml:space="preserve">
          <source>These are both languages that compile to JavaScript. You're able to write your code using the syntax they offer and when ready you compile your TypeScript or CoffeeScript into JavaScript.</source>
          <target state="translated">Это оба языка,которые компилируются в JavaScript.Вы можете написать свой код,используя синтаксис,который они предлагают,и когда вы будете готовы,скомпилируйте свой TypeScript или CoffeeScript на JavaScript.</target>
        </trans-unit>
        <trans-unit id="2f634da40a54ec867094862d4220f2487fe12f5b" translate="yes" xml:space="preserve">
          <source>These commands run your tests using &lt;a href=&quot;https://github.com/airportyh/testem&quot;&gt;Testem&lt;/a&gt; to make testing multiple browsers very easy. You can configure Testem using the &lt;code&gt;testem.js&lt;/code&gt; file in your application root.</source>
          <target state="translated">Эти команды запускают ваши тесты с помощью &lt;a href=&quot;https://github.com/airportyh/testem&quot;&gt;Testem,&lt;/a&gt; чтобы упростить тестирование нескольких браузеров. Вы можете настроить Testem с &lt;code&gt;testem.js&lt;/code&gt; файла testem.js в корне вашего приложения.</target>
        </trans-unit>
        <trans-unit id="3ac140f85fac47671e02dda468bad7f3d465b715" translate="yes" xml:space="preserve">
          <source>These functions will be invoked when a matching &lt;code&gt;{{action}}&lt;/code&gt; is triggered from within a template and the application's current route is this route.</source>
          <target state="translated">Эти функции будут вызываться, когда соответствующее &lt;code&gt;{{action}}&lt;/code&gt; запускается из шаблона, и текущий маршрут приложения является этим маршрутом.</target>
        </trans-unit>
        <trans-unit id="f000050ca0200e805c16a0913f8c1fad925ae6a7" translate="yes" xml:space="preserve">
          <source>These tips will help you identify problems early so they can be addressed systematically, rather than in a last-minute scramble.</source>
          <target state="translated">Эти советы помогут вам выявить проблемы на ранней стадии,чтобы их можно было решить систематически,а не в последнюю минуту.</target>
        </trans-unit>
        <trans-unit id="eb68b862cfa676cabebaff85159658805baa3a42" translate="yes" xml:space="preserve">
          <source>Third-party APIs.</source>
          <target state="translated">API третьей стороны.</target>
        </trans-unit>
        <trans-unit id="ddfb0ac04a55327aee053575597c9dda63adb165" translate="yes" xml:space="preserve">
          <source>Third-party JavaScript not available as an addon or Bower package should be placed in the &lt;code&gt;vendor/&lt;/code&gt; folder in your project.</source>
          <target state="translated">Сторонний JavaScript, недоступный в качестве надстройки или пакета Bower, следует поместить в папку &lt;code&gt;vendor/&lt;/code&gt; в вашем проекте.</target>
        </trans-unit>
        <trans-unit id="4ffb1109d5b126cb0663125d9dacbb7624bde715" translate="yes" xml:space="preserve">
          <source>Third-party assets that are not added via &lt;code&gt;import()&lt;/code&gt; will not be present in the final build.</source>
          <target state="translated">Сторонние ресурсы, которые не добавлены с помощью &lt;code&gt;import()&lt;/code&gt; , не будут присутствовать в окончательной сборке.</target>
        </trans-unit>
        <trans-unit id="452f64b3ac568069b0d3fb42cc4172b03c430605" translate="yes" xml:space="preserve">
          <source>This API allows you to provide a reference with new data. The simplest usage of this API is similar to &lt;code&gt;store.push&lt;/code&gt;: you provide a normalized hash of data and the object represented by the reference will update.</source>
          <target state="translated">Этот API позволяет вам предоставить ссылку с новыми данными. Простейшее использование этого API аналогично &lt;code&gt;store.push&lt;/code&gt; : вы предоставляете нормализованный хэш данных, и объект, представленный ссылкой, обновляется.</target>
        </trans-unit>
        <trans-unit id="37ffc8f135d22f0957ffebde87903095e52c78e0" translate="yes" xml:space="preserve">
          <source>This Ember.js hook allows an object to be notified when a property is defined.</source>
          <target state="translated">Этот Ember.js крюк позволяет уведомлять объект,когда объект определен.</target>
        </trans-unit>
        <trans-unit id="b6b8e36a48ff33ef3a57b6d9dd97582f0dfd4fca" translate="yes" xml:space="preserve">
          <source>This adapter does not make any assumptions as to the format of the &lt;code&gt;errors&lt;/code&gt; object. It will simply be passed along as is, wrapped in an instance of &lt;code&gt;DS.InvalidError&lt;/code&gt; or &lt;code&gt;DS.AdapterError&lt;/code&gt;. The serializer can interpret it afterwards.</source>
          <target state="translated">Этот адаптер не делает никаких предположений относительно формата объекта &lt;code&gt;errors&lt;/code&gt; . Он будет просто передан как есть, завернутый в экземпляр &lt;code&gt;DS.InvalidError&lt;/code&gt; или &lt;code&gt;DS.AdapterError&lt;/code&gt; . Сериализатор может потом интерпретировать это.</target>
        </trans-unit>
        <trans-unit id="ad2124edee9f5095f02b332c56318c024bf9499a" translate="yes" xml:space="preserve">
          <source>This adapter is designed around the idea that the JSON exchanged with the server should be conventional.</source>
          <target state="translated">Этот адаптер разработан на основе идеи о том,что обмен JSON с сервером должен быть обычным.</target>
        </trans-unit>
        <trans-unit id="853904908c1556303a04442689a343ac7e65fed7" translate="yes" xml:space="preserve">
          <source>This adapter will extend the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; base class from Ember Data:</source>
          <target state="translated">Этот адаптер расширит базовый класс &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt; &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &lt;/a&gt; из Ember Data:</target>
        </trans-unit>
        <trans-unit id="3d5dbdc061173e19b17b6f110fb18cfb4cd22c55" translate="yes" xml:space="preserve">
          <source>This affects query param behavior in two ways:</source>
          <target state="translated">Это влияет на поведение параметра запроса двумя способами:</target>
        </trans-unit>
        <trans-unit id="9236129e7ad8572a6f3cfa7ce7b534bcdc1773a8" translate="yes" xml:space="preserve">
          <source>This allows ember-testing to play nicely with other asynchronous events, such as an application that is waiting for a CSS3 transition or an IndexDB transaction. The waiter runs periodically after each async helper (i.e. &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;andThen&lt;/code&gt;, &lt;code&gt;visit&lt;/code&gt;, etc) has executed, until the returning result is truthy. After the waiters finish, the next async helper is executed and the process repeats.</source>
          <target state="translated">Это позволяет ember-testing прекрасно взаимодействовать с другими асинхронными событиями, такими как приложение, ожидающее перехода CSS3 или транзакции IndexDB. Официант периодически запускается после каждого асинхронного помощника (т.е. &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;andThen&lt;/code&gt; , &lt;code&gt;visit&lt;/code&gt; и т.д.) выполнил, до возвращения результата не truthy. После того, как официанты закончат, выполняется следующий асинхронный помощник, и процесс повторяется.</target>
        </trans-unit>
        <trans-unit id="d63f6d895f9dbaa7a1f0c7f4aab7d30d5d8234cc" translate="yes" xml:space="preserve">
          <source>This allows the original method to continue operating as it normally would.</source>
          <target state="translated">Это позволяет исходному методу продолжать работать,как обычно.</target>
        </trans-unit>
        <trans-unit id="283d55de2d3a0d1c60968c365e7a92f311d2ac8a" translate="yes" xml:space="preserve">
          <source>This allows you to do whatever kind of munging you need, and is especially useful if your server is inconsistent and you need to do munging differently for many different kinds of responses.</source>
          <target state="translated">Это позволяет делать любые виды боеприпасов,которые Вам нужны,и особенно полезно,если Ваш сервер непоследователен,и Вам нужно делать боеприпасы по-разному для многих различных типов ответов.</target>
        </trans-unit>
        <trans-unit id="fd87b224bfacdd8f67d689202e0b6d11b295e8ca" translate="yes" xml:space="preserve">
          <source>This allows you to perform asynchronous setup logic and defer booting your application until the setup has finished.</source>
          <target state="translated">Это позволяет вам выполнять асинхронную логику установки и откладывать загрузку приложения до завершения установки.</target>
        </trans-unit>
        <trans-unit id="8cdde2b5de75dbd9f848f898dbadf64aaba67fae" translate="yes" xml:space="preserve">
          <source>This argument will become the model context of the linked route:</source>
          <target state="translated">Этот аргумент станет модельным контекстом связанного маршрута:</target>
        </trans-unit>
        <trans-unit id="941f661a9bdc6020b125f022848bfff58eb9c9a2" translate="yes" xml:space="preserve">
          <source>This behavior extends to object creation as well. Continuing the above example:</source>
          <target state="translated">Это поведение распространяется и на создание объектов.Продолжая приведенный выше пример:</target>
        </trans-unit>
        <trans-unit id="53fa6c0fd3b00088bf6ab65b06527f4d9856bb1d" translate="yes" xml:space="preserve">
          <source>This behavior is not available during object &lt;code&gt;create&lt;/code&gt; calls. It is only available at &lt;code&gt;extend&lt;/code&gt; time.</source>
          <target state="translated">Это поведение недоступно во время вызовов &lt;code&gt;create&lt;/code&gt; объекта . Он доступен только в &lt;code&gt;extend&lt;/code&gt; время.</target>
        </trans-unit>
        <trans-unit id="b10353972c333adf35b656d7d67ecb6081d088a1" translate="yes" xml:space="preserve">
          <source>This behaviour can be easily customized by extending this method.</source>
          <target state="translated">Такое поведение можно легко настроить,расширив этот метод.</target>
        </trans-unit>
        <trans-unit id="7087d2aa7e0c9dbae55ad8456ac0ed7c2474bcbd" translate="yes" xml:space="preserve">
          <source>This behaviour is similar to &lt;code&gt;link-to&lt;/code&gt;, which also lets you opt into a &lt;code&gt;replaceState&lt;/code&gt; transition via &lt;code&gt;replace=true&lt;/code&gt;.</source>
          <target state="translated">Это поведение похоже на &lt;code&gt;link-to&lt;/code&gt; , которое также позволяет выбрать переход &lt;code&gt;replaceState&lt;/code&gt; с помощью &lt;code&gt;replace=true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="646b88b52695fd5b351e17ed4f20ebf3a312b1da" translate="yes" xml:space="preserve">
          <source>This callback will be called whenever an async operation has completed.</source>
          <target state="translated">Этот обратный вызов будет вызываться всякий раз,когда операция асинхронизации будет завершена.</target>
        </trans-unit>
        <trans-unit id="9d3decb642e6ed5fe3151ae228c0dab60ea9dbcb" translate="yes" xml:space="preserve">
          <source>This callback will be called whenever an async operation is about to start.</source>
          <target state="translated">Этот обратный вызов будет вызываться всякий раз,когда асинхронная операция вот-вот начнется.</target>
        </trans-unit>
        <trans-unit id="6e4f6495a0bfd49c0b770ee29b970fcdc0b8a129" translate="yes" xml:space="preserve">
          <source>This can be achieved by configuring the &lt;code&gt;rootURL&lt;/code&gt; property on &lt;code&gt;ENV&lt;/code&gt;:</source>
          <target state="translated">Этого можно добиться, &lt;code&gt;rootURL&lt;/code&gt; свойство rootURL на &lt;code&gt;ENV&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="592e84b1e0b4e61032446b865d26f0c9377deab5" translate="yes" xml:space="preserve">
          <source>This can be done on the result of a &lt;code&gt;store.query()&lt;/code&gt; call:</source>
          <target state="translated">Это можно сделать по результату &lt;code&gt;store.query()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b3f869a4e4a76d784deb8c0310fd8160dedadf6c" translate="yes" xml:space="preserve">
          <source>This class can also be useful as a layer to transform the contents of an array, as they are accessed. This can be done by overriding &lt;code&gt;objectAtContent&lt;/code&gt;:</source>
          <target state="translated">Этот класс также может быть полезен в качестве слоя для преобразования содержимого массива при доступе к нему. Это можно сделать, переопределив &lt;code&gt;objectAtContent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5c735fa315afadd4e939bc22605b4168dc7fd925" translate="yes" xml:space="preserve">
          <source>This class can be extended by a custom resolver implementer to override some of the methods with library-specific code.</source>
          <target state="translated">Этот класс может быть расширен пользовательским резольверным реализатором для переопределения некоторых методов с библиотечным специфическим кодом.</target>
        </trans-unit>
        <trans-unit id="3106dd228ae8524f2463f5eb418ced8f6f5d8666" translate="yes" xml:space="preserve">
          <source>This class implements the methods defined by Ember.Test.Adapter for the QUnit testing framework.</source>
          <target state="translated">Данный класс реализует методы,определенные Ember.Test.Adapter для фреймворка тестирования QUnit.</target>
        </trans-unit>
        <trans-unit id="320b5810ffa80935692e4a814095e9bb406c7d7d" translate="yes" xml:space="preserve">
          <source>This class will be extended by a persistence library which will override some of the methods with library-specific code.</source>
          <target state="translated">Этот класс будет расширен библиотекой персистентности,которая будет переопределять некоторые методы с библиотечным специфическим кодом.</target>
        </trans-unit>
        <trans-unit id="674eb11f18e5896906fc06f889797fc9a66d2250" translate="yes" xml:space="preserve">
          <source>This code example uses the latest features in JavaScript, some of which you may not be familiar with. Learn more with this &lt;a href=&quot;https://ponyfoo.com/articles/es6&quot;&gt;overview of the newest JavaScript features&lt;/a&gt;.</source>
          <target state="translated">В этом примере кода используются новейшие функции JavaScript, с некоторыми из которых вы, возможно, не знакомы. Узнайте больше из этого &lt;a href=&quot;https://ponyfoo.com/articles/es6&quot;&gt;обзора новейших функций JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0fc86456128b2bec3fcb1e1970d2427a1fdb6365" translate="yes" xml:space="preserve">
          <source>This component would render the following:</source>
          <target state="translated">Этот компонент будет выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="e42d35491e18c0eb8d5095f19ff074a10aab3fc5" translate="yes" xml:space="preserve">
          <source>This computed property would return a map describing these relationships, like this:</source>
          <target state="translated">Это вычисленное свойство возвращало бы карту,описывающую эти отношения:</target>
        </trans-unit>
        <trans-unit id="ec813caf1f669a427b25e6f09bf93ba65ce6c773" translate="yes" xml:space="preserve">
          <source>This creates a route file at &lt;code&gt;app/routes/route-name.js&lt;/code&gt;, a template for the route at &lt;code&gt;app/templates/route-name.hbs&lt;/code&gt;, and a unit test file at &lt;code&gt;tests/unit/routes/route-name-test.js&lt;/code&gt;. It also adds the route to the router.</source>
          <target state="translated">Это создает файл маршрута в &lt;code&gt;app/routes/route-name.js&lt;/code&gt; , шаблон для маршрута в &lt;code&gt;app/templates/route-name.hbs&lt;/code&gt; и файл модульного теста в &lt;code&gt;tests/unit/routes/route-name-test.js&lt;/code&gt; . Он также добавляет маршрут к маршрутизатору.</target>
        </trans-unit>
        <trans-unit id="91ce519eb8ba59c7f3b8c3662743cb9f43554cc3" translate="yes" xml:space="preserve">
          <source>This declares &lt;code&gt;fullName&lt;/code&gt; to be a computed property, with &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; as the properties it depends on. The first time you access the &lt;code&gt;fullName&lt;/code&gt; property, the function will be called and the results will be cached. Subsequent access of &lt;code&gt;fullName&lt;/code&gt; will read from the cache without calling the function. Changing any of the dependent properties causes the cache to invalidate, so that the computed function runs again on the next access.</source>
          <target state="translated">Это объявляет &lt;code&gt;fullName&lt;/code&gt; как вычисляемое свойство, а свойства &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; от которых оно зависит. При первом доступе к свойству &lt;code&gt;fullName&lt;/code&gt; функция будет вызвана, а результаты будут кэшированы. Последующий доступ &lt;code&gt;fullName&lt;/code&gt; будет читать из кеша без вызова функции. Изменение любого из зависимых свойств приводит к тому, что кеш становится недействительным, так что вычисляемая функция снова запускается при следующем доступе.</target>
        </trans-unit>
        <trans-unit id="31bb2006f39cafcc9484e2a81a9f308f7180aef7" translate="yes" xml:space="preserve">
          <source>This defines a new &lt;code&gt;Person&lt;/code&gt; class with a &lt;code&gt;say()&lt;/code&gt; method.</source>
          <target state="translated">Это определяет новый класс &lt;code&gt;Person&lt;/code&gt; с методом &lt;code&gt;say()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="116d968a917da2cb6719f721c279bfccee4349ce" translate="yes" xml:space="preserve">
          <source>This defines a new subclass of Ember.Object: &lt;code&gt;Person&lt;/code&gt;. It contains one method: &lt;code&gt;say()&lt;/code&gt;.</source>
          <target state="translated">Это определяет новый подкласс Ember.Object: &lt;code&gt;Person&lt;/code&gt; . Он содержит один метод: &lt;code&gt;say()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4af4dccef2a80a69c041a6f95a959661b8e03a9" translate="yes" xml:space="preserve">
          <source>This doesn't usually affect application code because computed properties are almost always observed at the same time as they are fetched. For example, you get the value of a computed property, put it in DOM (or draw it with D3), and then observe it so you can update the DOM once the property changes.</source>
          <target state="translated">Обычно это не влияет на код приложения,так как вычисляемые свойства почти всегда наблюдаются одновременно с их извлечением.Например,вы получаете значение вычисленного свойства,помещаете его в DOM (или рисуете с помощью D3),а затем наблюдаете за ним,чтобы можно было обновить DOM после изменения свойства.</target>
        </trans-unit>
        <trans-unit id="784b0ed31150b193e479ab80ab41ebf62f83f1ec" translate="yes" xml:space="preserve">
          <source>This error would then be returned by an adapter's &lt;code&gt;handleResponse&lt;/code&gt; method:</source>
          <target state="translated">Затем эта ошибка будет возвращена методом &lt;code&gt;handleResponse&lt;/code&gt; адаптера :</target>
        </trans-unit>
        <trans-unit id="b6170d3568edf87d92c7c80728ddd942353f0af6" translate="yes" xml:space="preserve">
          <source>This event is triggered when the router completely exits this route. It is not executed when the model for the route changes.</source>
          <target state="translated">Это событие срабатывает,когда маршрутизатор полностью выходит из данного маршрута.Оно не выполняется при изменении модели маршрута.</target>
        </trans-unit>
        <trans-unit id="4b0c96e516f34305bd6b72b775ae4db9e3545500" translate="yes" xml:space="preserve">
          <source>This event is triggered when the router enters the route. It is not executed when the model for the route changes.</source>
          <target state="translated">Это событие срабатывает,когда маршрутизатор входит в маршрут.Оно не выполняется при изменении модели маршрута.</target>
        </trans-unit>
        <trans-unit id="cab4a8f298d62a398a20d8205ec2eba83599f69c" translate="yes" xml:space="preserve">
          <source>This example of a post model has many comments:</source>
          <target state="translated">Этот пример пост-модели имеет много комментариев:</target>
        </trans-unit>
        <trans-unit id="9fe7ed9c19bb8a7f1cbe6b019c963a036d9478fe" translate="yes" xml:space="preserve">
          <source>This example of an author model belongs to a post model:</source>
          <target state="translated">Этот пример авторской модели принадлежит к пост-модели:</target>
        </trans-unit>
        <trans-unit id="7ccc911768f0da88e6ef9f3cf49eef3b432ed969" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;=&amp;gt;&lt;/code&gt; function syntax, which is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;new ES2015 syntax for callback functions&lt;/a&gt; that provides a lexical &lt;code&gt;this&lt;/code&gt;. If this syntax is new, think of it as a function that has the same &lt;code&gt;this&lt;/code&gt; as the context it is defined in.</source>
          <target state="translated">В этом примере используется синтаксис функции &lt;code&gt;=&amp;gt;&lt;/code&gt; , который представляет собой &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;новый синтаксис ES2015 для функций обратного вызова,&lt;/a&gt; который предоставляет лексический &lt;code&gt;this&lt;/code&gt; . Если этот синтаксис новый, подумайте о нем как о функции, которая имеет то же значение &lt;code&gt;this&lt;/code&gt; , что и контекст, в котором она определена.</target>
        </trans-unit>
        <trans-unit id="ff609b107eeeef59c10a02a7f765526a45b3b82b" translate="yes" xml:space="preserve">
          <source>This example will create a &lt;code&gt;posts&lt;/code&gt; property on the &lt;code&gt;post&lt;/code&gt; controller that looks up the &lt;code&gt;posts&lt;/code&gt; controller in the container, making it easy to reference other controllers. This is functionally equivalent to:</source>
          <target state="translated">Этот пример создаст &lt;code&gt;posts&lt;/code&gt; собственности на &lt;code&gt;post&lt;/code&gt; управления , который смотрит на &lt;code&gt;posts&lt;/code&gt; управления в контейнере, что делает его легко ссылаться на другие контроллеры. Функционально это эквивалентно:</target>
        </trans-unit>
        <trans-unit id="49855cd9123878194ff56a8b6fd54aa27e05b647" translate="yes" xml:space="preserve">
          <source>This example will create an &lt;code&gt;authManager&lt;/code&gt; property on the application route that looks up the &lt;code&gt;auth&lt;/code&gt; service in the container, making it easily accessible in the &lt;code&gt;model&lt;/code&gt; hook.</source>
          <target state="translated">В этом примере будет &lt;code&gt;authManager&lt;/code&gt; свойство authManager в маршруте приложения, которое ищет службу &lt;code&gt;auth&lt;/code&gt; в контейнере, делая ее легко доступной в хуке &lt;code&gt;model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6567df05d4a192c48cd4c99f719e2addb19ced5a" translate="yes" xml:space="preserve">
          <source>This example would create the font file in &lt;code&gt;dist/font-awesome/fonts/fontawesome-webfont.ttf&lt;/code&gt;.</source>
          <target state="translated">В этом примере будет создан файл шрифта в &lt;code&gt;dist/font-awesome/fonts/fontawesome-webfont.ttf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="487dfa2fb498fbeeecec5ffef779e77c25b4bf73" translate="yes" xml:space="preserve">
          <source>This feature is available for you to use throughout the Ember object model, although typical app developers are likely to use it infrequently. Since it changes expectations about behavior of properties, you should properly document its usage in each individual concatenated property (to not mislead your users to think they can override the property in a subclass).</source>
          <target state="translated">Эта функция доступна для использования во всей объектной модели Ember,хотя типичные разработчики приложений,скорее всего,будут использовать ее нечасто.Так как она изменяет ожидания в отношении поведения свойств,вы должны правильно документировать ее использование в каждом отдельном конкатенированном свойстве (чтобы не вводить пользователей в заблуждение,думая,что они могут переопределить свойство в подклассе).</target>
        </trans-unit>
        <trans-unit id="0e9e3a7edaabb385dc159a68dfa2582b6dd6bf05" translate="yes" xml:space="preserve">
          <source>This feature is available for you to use throughout the Ember object model, although typical app developers are likely to use it infrequently. Since it changes expectations about behavior of properties, you should properly document its usage in each individual merged property (to not mislead your users to think they can override the property in a subclass).</source>
          <target state="translated">Эта функция доступна для использования во всей объектной модели Ember,хотя типичные разработчики приложений,скорее всего,будут использовать ее нечасто.Так как она изменяет ожидания в отношении поведения свойств,вы должны правильно документировать ее использование в каждом отдельном объединенном свойстве (чтобы не вводить пользователей в заблуждение,думая,что они могут переопределить свойство в подклассе).</target>
        </trans-unit>
        <trans-unit id="d8a914b8d45890e4d1608c302453e2c8af0f22d0" translate="yes" xml:space="preserve">
          <source>This feature is backed by &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;Browserlist&lt;/a&gt; and &lt;a href=&quot;http://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt;. These websites track usage stats of browsers, so you can use complex queries based on the user base of every browser.</source>
          <target state="translated">Эта функция поддерживается &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;Browserlist&lt;/a&gt; и &lt;a href=&quot;http://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt; . Эти веб-сайты отслеживают статистику использования браузеров, поэтому вы можете использовать сложные запросы на основе пользовательской базы каждого браузера.</target>
        </trans-unit>
        <trans-unit id="ecc77b26d29bca9f5a5a76e216f7aa3707d9f628" translate="yes" xml:space="preserve">
          <source>This function should return negative number (e.g. &lt;code&gt;-1&lt;/code&gt;) when &lt;code&gt;itemA&lt;/code&gt; should come before &lt;code&gt;itemB&lt;/code&gt;. It should return positive number (e.g. &lt;code&gt;1&lt;/code&gt;) when &lt;code&gt;itemA&lt;/code&gt; should come after &lt;code&gt;itemB&lt;/code&gt;. If the &lt;code&gt;itemA&lt;/code&gt; and &lt;code&gt;itemB&lt;/code&gt; are equal this function should return &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Эта функция должна возвращать отрицательное число (например, &lt;code&gt;-1&lt;/code&gt; ), когда &lt;code&gt;itemA&lt;/code&gt; должен &lt;code&gt;itemB&lt;/code&gt; перед itemB . Он должен возвращать положительное число (например, &lt;code&gt;1&lt;/code&gt; ), когда &lt;code&gt;itemA&lt;/code&gt; должен &lt;code&gt;itemB&lt;/code&gt; после itemB . Если &lt;code&gt;itemA&lt;/code&gt; и &lt;code&gt;itemB&lt;/code&gt; равны, эта функция должна вернуть &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f30316f73cbc0d1bc15eef0cddcc2f8521c3da8f" translate="yes" xml:space="preserve">
          <source>This function takes an optional 2nd argument that will become the &quot;this&quot; value for the callback. If this argument is passed then the 3rd argument becomes the function.</source>
          <target state="translated">Эта функция принимает необязательный 2-й аргумент,который становится значением &quot;this&quot; для обратного вызова.Если этот аргумент передается,то 3-й аргумент становится функцией.</target>
        </trans-unit>
        <trans-unit id="f4f4cb957931dcfb537731cc8f27357bfd707b9e" translate="yes" xml:space="preserve">
          <source>This generates the following HTML:</source>
          <target state="translated">При этом генерируется следующий HTML:</target>
        </trans-unit>
        <trans-unit id="b56834d4d36dbad6e5fe72083562d1d2e8904eaf" translate="yes" xml:space="preserve">
          <source>This generates this file:</source>
          <target state="translated">Это генерирует этот файл:</target>
        </trans-unit>
        <trans-unit id="acffd8287f5f7fa62edb1b3b419955bbdbbac080" translate="yes" xml:space="preserve">
          <source>This gives you the flexibility to compute a value &lt;em&gt;before&lt;/em&gt; it is passed in as an argument or an attribute of another.</source>
          <target state="translated">Это дает вам гибкость для вычисления значения &lt;em&gt;до&lt;/em&gt; того, &lt;em&gt;как&lt;/em&gt; оно будет передано как аргумент или атрибут другого.</target>
        </trans-unit>
        <trans-unit id="f3fcb44dfac184e5f4739827479344f6a392ecca" translate="yes" xml:space="preserve">
          <source>This guide doesn't intend to fully delve into all the different ways promises can be used, but if you'd like a more thorough introduction, take a look at the readme for &lt;a href=&quot;https://github.com/tildeio/rsvp.js&quot;&gt;RSVP&lt;/a&gt;, the promise library that Ember uses.</source>
          <target state="translated">Это руководство не намеревается полностью вникать во все способы использования обещаний, но если вы хотите более подробное введение, взгляните на файл readme для &lt;a href=&quot;https://github.com/tildeio/rsvp.js&quot;&gt;RSVP&lt;/a&gt; , библиотеки обещаний, которую использует Ember.</target>
        </trans-unit>
        <trans-unit id="e0e66094f6d943792b41d17683719c61a494f26d" translate="yes" xml:space="preserve">
          <source>This guide will teach you how to build a simple app using Ember from scratch.</source>
          <target state="translated">Это руководство научит вас,как построить простое приложение,используя Ember с нуля.</target>
        </trans-unit>
        <trans-unit id="30d220e5292c20d9ac340b310df750f8c7cfdd17" translate="yes" xml:space="preserve">
          <source>This happens if you are using a version of Ember &amp;lt; 1.3.</source>
          <target state="translated">Это происходит, если вы используете версию Ember &amp;lt;1.3.</target>
        </trans-unit>
        <trans-unit id="02c316553c03e6bb16963930257b1149ad1c5f21" translate="yes" xml:space="preserve">
          <source>This has the effect of providing a default template when using a component in the non-block form but providing yielded values for use with block params when using a block expression.</source>
          <target state="translated">Это приводит к предоставлению шаблона по умолчанию при использовании компонента в неблоковом виде,но предоставляет значения для использования с параметрами блока при использовании блочного выражения.</target>
        </trans-unit>
        <trans-unit id="d69577f3c578c6eabf0c4658463bd74f9978c696" translate="yes" xml:space="preserve">
          <source>This helper can later be called without arguments because it will be called with &lt;code&gt;app&lt;/code&gt; as the first parameter.</source>
          <target state="translated">Позже этот помощник можно вызвать без аргументов, поскольку он будет вызываться с &lt;code&gt;app&lt;/code&gt; в качестве первого параметра.</target>
        </trans-unit>
        <trans-unit id="9980bdea2787a4277e138ccf5100590320a94254" translate="yes" xml:space="preserve">
          <source>This helper has two forms, block and inline.</source>
          <target state="translated">Этот помощник имеет две формы,блочную и встроенную.</target>
        </trans-unit>
        <trans-unit id="78766705ae99c240131efc47a151aeeb110c957c" translate="yes" xml:space="preserve">
          <source>This helper returns a new property descriptor that wraps the passed computed property function. You can use this helper to define properties with mixins or via &lt;code&gt;Ember.defineProperty()&lt;/code&gt;.</source>
          <target state="translated">Этот помощник возвращает новый дескриптор свойства, который обертывает переданную функцию вычисленного свойства. Вы можете использовать этот помощник для определения свойств с помощью &lt;code&gt;Ember.defineProperty()&lt;/code&gt; или через Ember.defineProperty () .</target>
        </trans-unit>
        <trans-unit id="10ab382783ea15303c4f3ab1e310527699744871" translate="yes" xml:space="preserve">
          <source>This helper will output a value of &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">Этот помощник выведет значение &lt;code&gt;6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c987e5674d133f7c1af95e69f41a85eb2745738" translate="yes" xml:space="preserve">
          <source>This hook defers the readiness of the application, so that you can start the app when your tests are ready to run. It also sets the router's location to 'none', so that the window's location will not be modified (preventing both accidental leaking of state between tests and interference with your testing framework). &lt;code&gt;setupForTesting&lt;/code&gt; should only be called after setting a custom &lt;code&gt;router&lt;/code&gt; class (for example &lt;code&gt;App.Router = Router.extend(&lt;/code&gt;).</source>
          <target state="translated">Этот хук откладывает готовность приложения, так что вы можете запустить приложение, когда ваши тесты будут готовы к запуску. Он также устанавливает местоположение маршрутизатора на &amp;laquo;нет&amp;raquo;, чтобы местоположение окна не было изменено (предотвращая как случайную утечку состояния между тестами, так и вмешательство в вашу среду тестирования). &lt;code&gt;setupForTesting&lt;/code&gt; следует вызывать только после установки пользовательского класса &lt;code&gt;router&lt;/code&gt; (например, &lt;code&gt;App.Router = Router.extend(&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9f3850932b6cdc771f8eba24e4c0356c191dabae" translate="yes" xml:space="preserve">
          <source>This hook follows the asynchronous/promise semantics described in the documentation for &lt;code&gt;beforeModel&lt;/code&gt;. In particular, if a promise returned from &lt;code&gt;model&lt;/code&gt; fails, the error will be handled by the &lt;code&gt;error&lt;/code&gt; hook on &lt;code&gt;Ember.Route&lt;/code&gt;.</source>
          <target state="translated">Этот хук следует семантике асинхронного / обещания, описанной в документации для &lt;code&gt;beforeModel&lt;/code&gt; . В частности, если обещание, возвращенное из &lt;code&gt;model&lt;/code&gt; не выполняется, ошибка будет обработана &lt;code&gt;Ember.Route&lt;/code&gt; &lt;code&gt;error&lt;/code&gt; в Ember.Route .</target>
        </trans-unit>
        <trans-unit id="a8ee41feb9ddc3fa7957fac4385c3669d97c9aa0" translate="yes" xml:space="preserve">
          <source>This hook is called after this route's model has resolved. It follows identical async/promise semantics to &lt;code&gt;beforeModel&lt;/code&gt; but is provided the route's resolved model in addition to the &lt;code&gt;transition&lt;/code&gt;, and is therefore suited to performing logic that can only take place after the model has already resolved.</source>
          <target state="translated">Этот хук вызывается после того, как модель этого маршрута разрешена. Он следует той же семантике async / &lt;code&gt;beforeModel&lt;/code&gt; но в дополнение к &lt;code&gt;transition&lt;/code&gt; предоставляется разрешенная модель маршрута и поэтому подходит для выполнения логики, которая может иметь место только после того, как модель уже разрешена.</target>
        </trans-unit>
        <trans-unit id="eabb2494e26202e5215d9e0f9642c252667f7896" translate="yes" xml:space="preserve">
          <source>This hook is executed when the router completely exits this route. It is not executed when the model for the route changes.</source>
          <target state="translated">Этот крюк выполняется,когда маршрутизатор полностью выходит из этого маршрута.Он не выполняется,когда меняется модель маршрута.</target>
        </trans-unit>
        <trans-unit id="ab287814fce6cc5b5c9f8e315d84a3c408dbd520" translate="yes" xml:space="preserve">
          <source>This hook is executed when the router enters the route. It is not executed when the model for the route changes.</source>
          <target state="translated">Этот крюк выполняется,когда маршрутизатор входит в маршрут.Он не выполняется,когда меняется модель маршрута.</target>
        </trans-unit>
        <trans-unit id="6ed5112cc8742b9d70e3846b62e3c7a4f35140f1" translate="yes" xml:space="preserve">
          <source>This hook is provided the current &lt;code&gt;transition&lt;/code&gt; attempt as a parameter, which can be used to &lt;code&gt;.abort()&lt;/code&gt; the transition, save it for a later &lt;code&gt;.retry()&lt;/code&gt;, or retrieve values set on it from a previous hook. You can also just call &lt;code&gt;this.transitionTo&lt;/code&gt; to another route to implicitly abort the &lt;code&gt;transition&lt;/code&gt;.</source>
          <target state="translated">Этой ловушке предоставляется текущая попытка &lt;code&gt;transition&lt;/code&gt; в качестве параметра, который можно использовать для &lt;code&gt;.abort()&lt;/code&gt; перехода, сохранить его для последующего &lt;code&gt;.retry()&lt;/code&gt; или получить значения, установленные для него из предыдущей ловушки. Вы также можете просто вызвать &lt;code&gt;this.transitionTo&lt;/code&gt; для другого маршрута, чтобы неявно прервать &lt;code&gt;transition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03eecee84bea910e6f484a02d840e085770096a0" translate="yes" xml:space="preserve">
          <source>This hook is the first of the route entry validation hooks called when an attempt is made to transition into a route or one of its children. It is called before &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;afterModel&lt;/code&gt;, and is appropriate for cases when:</source>
          <target state="translated">Этот перехватчик является первым из перехватчиков проверки записи маршрута, вызываемых при попытке перехода на маршрут или один из его дочерних элементов. Он вызывается before &lt;code&gt;model&lt;/code&gt; и &lt;code&gt;afterModel&lt;/code&gt; и подходит для случаев, когда:</target>
        </trans-unit>
        <trans-unit id="77e8a262fef81666b48b6131a8b3be017a044f7d" translate="yes" xml:space="preserve">
          <source>This hook passes the class being set up, as well as the key and value being defined. So, for example, when the user does this:</source>
          <target state="translated">Этот крюк передает заданный класс,а также ключ и значение.Так,например,когда пользователь делает это:</target>
        </trans-unit>
        <trans-unit id="b11aa29d15777ceef5c81c577245a76748891249" translate="yes" xml:space="preserve">
          <source>This hook would be called with &quot;parent&quot; as the key and the computed property returned by &lt;code&gt;DS.belongsTo&lt;/code&gt; as the value.</source>
          <target state="translated">Этот хук будет вызываться с &quot;parent&quot; в качестве ключа и вычисляемым свойством, возвращаемым &lt;code&gt;DS.belongsTo&lt;/code&gt; в качестве значения.</target>
        </trans-unit>
        <trans-unit id="3fc7a1f064649acf207da18e9b59a14b7d7c2ed5" translate="yes" xml:space="preserve">
          <source>This illustrates that once you change a query param, it is stored and tied to the model loaded into the route.</source>
          <target state="translated">Это показывает,что после изменения параметра запроса он сохраняется и привязывается к загруженной в маршрут модели.</target>
        </trans-unit>
        <trans-unit id="94954009755f7b62385acf4ff8569cb1a9193610" translate="yes" xml:space="preserve">
          <source>This implementation groups together records that have the same base URL but differing ids. For example &lt;code&gt;/comments/1&lt;/code&gt; and &lt;code&gt;/comments/2&lt;/code&gt; will be grouped together because we know findMany can coalesce them together as &lt;code&gt;/comments?ids[]=1&amp;amp;ids[]=2&lt;/code&gt;</source>
          <target state="translated">Эта реализация объединяет записи с одинаковым базовым URL, но с разными идентификаторами. Например, &lt;code&gt;/comments/1&lt;/code&gt; и &lt;code&gt;/comments/2&lt;/code&gt; будут сгруппированы вместе, потому что мы знаем, что findMany может объединить их вместе как &lt;code&gt;/comments?ids[]=1&amp;amp;ids[]=2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc9ad364e420bf1a681684a934117cc1159d58e2" translate="yes" xml:space="preserve">
          <source>This injects the shopping cart service into the component and makes it available as the &lt;code&gt;cart&lt;/code&gt; property.</source>
          <target state="translated">Это внедряет службу корзины покупок в компонент и делает ее доступной как свойство &lt;code&gt;cart&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="918384a3831377bfd82a1b852b04244ee7f5702c" translate="yes" xml:space="preserve">
          <source>This injects the test helpers into the &lt;code&gt;helperContainer&lt;/code&gt; object. If an object is provided it will be used as the helperContainer. If &lt;code&gt;helperContainer&lt;/code&gt; is not set it will default to &lt;code&gt;window&lt;/code&gt;. If a function of the same name has already been defined it will be cached (so that it can be reset if the helper is removed with &lt;code&gt;unregisterHelper&lt;/code&gt; or &lt;code&gt;removeTestHelpers&lt;/code&gt;).</source>
          <target state="translated">Это внедряет помощников тестирования в объект &lt;code&gt;helperContainer&lt;/code&gt; . Если объект предоставлен, он будет использоваться как helperContainer. Если &lt;code&gt;helperContainer&lt;/code&gt; не установлен, по умолчанию используется &lt;code&gt;window&lt;/code&gt; . Если функция с тем же именем уже определен будет кэшировать (так что он может быть сброшен , если помощник удаляется с &lt;code&gt;unregisterHelper&lt;/code&gt; или &lt;code&gt;removeTestHelpers&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f723a6881e5d6d4df77092077259b1e266ea97bd" translate="yes" xml:space="preserve">
          <source>This is a concept that typically means providing JavaScript which tests for features that are missing (prototypes not defined, etc) and &quot;fills&quot; them by providing an implementation.</source>
          <target state="translated">Это концепция,которая обычно означает предоставление JavaScript,который тестирует недостающие функции (прототипы не определены и т.д.)и &quot;заполняет&quot; их,предоставляя реализацию.</target>
        </trans-unit>
        <trans-unit id="b176511dc82a11995524ba7ee6d3eaf35d75f683" translate="yes" xml:space="preserve">
          <source>This is a container for an assortment of testing related functionality:</source>
          <target state="translated">Это контейнер для ассортимента тестовых функциональных возможностей:</target>
        </trans-unit>
        <trans-unit id="822a2e55a49b0a3ce1602c9de4a12deec4027902" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.all&lt;/code&gt;.</source>
          <target state="translated">Это удобный псевдоним для &lt;code&gt;RSVP.Promise.all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a49db288a4492f38be2239b9a4aecd51132e4df3" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.race&lt;/code&gt;.</source>
          <target state="translated">Это удобный псевдоним для &lt;code&gt;RSVP.Promise.race&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5311bad197bc2e95ae7fce155d89195d60075c0" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.reject&lt;/code&gt;.</source>
          <target state="translated">Это удобный псевдоним для &lt;code&gt;RSVP.Promise.reject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="302b1ad84c9db80e1b5c3df3fe7952f0681a2eae" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.resolve&lt;/code&gt;.</source>
          <target state="translated">Это удобный псевдоним для &lt;code&gt;RSVP.Promise.resolve&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4971ebf34a654ca424132ff11439c59713fb5e6b" translate="yes" xml:space="preserve">
          <source>This is a great way to use the parent context to load something that you want. Using &lt;code&gt;paramsFor&lt;/code&gt; will also give you the query params defined on that route's controller. This method could also be used to look up the current route's parameters from an action or another method on the route, and in that case we have a shortcut: &lt;code&gt;this.paramsFor(this.routeName)&lt;/code&gt;.</source>
          <target state="translated">Это отличный способ использовать родительский контекст для загрузки того, что вы хотите. Использование &lt;code&gt;paramsFor&lt;/code&gt; также предоставит вам параметры запроса, определенные в контроллере этого маршрута. Этот метод также можно использовать для поиска параметров текущего маршрута из действия или другого метода на маршруте, и в этом случае у нас есть ярлык: &lt;code&gt;this.paramsFor(this.routeName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55cd0539422e5b82b20c0cc8f62bbdbb7052339e" translate="yes" xml:space="preserve">
          <source>This is a helper to be used in conjunction with the link-to helper. It will supply url query parameters to the target route.</source>
          <target state="translated">Это помощник,который будет использоваться вместе с помощником по ссылке.Он будет предоставлять параметры url-запроса к целевому маршруту.</target>
        </trans-unit>
        <trans-unit id="05915bea473f3b9dca751ce1d38f16283b7858bd" translate="yes" xml:space="preserve">
          <source>This is a more semantically meaningful alias of &lt;code&gt;computed.oneWay&lt;/code&gt;, whose name is somewhat ambiguous as to which direction the data flows.</source>
          <target state="translated">Это более семантически значимый псевдоним &lt;code&gt;computed.oneWay&lt;/code&gt; , название которого несколько неоднозначно относительно того, в каком направлении потоки данных.</target>
        </trans-unit>
        <trans-unit id="46a94c8f55595ad1f21083bd7fb3718a4dbf03a0" translate="yes" xml:space="preserve">
          <source>This is a stamp for the Ember Inspector to differentiate between the versions to be able to support older versions too.</source>
          <target state="translated">Это штамп для Ember Inspector,чтобы различать версии,чтобы иметь возможность поддерживать и более старые версии.</target>
        </trans-unit>
        <trans-unit id="ec2df623b6ecc9f4e570340c54e42cd3266c977a" translate="yes" xml:space="preserve">
          <source>This is actually used internally by the &lt;code&gt;keyEvent&lt;/code&gt; helper like so:</source>
          <target state="translated">На самом деле это используется внутренним помощником &lt;code&gt;keyEvent&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="308ba443f81e87e775aa3ae34fbf288a703e8c5c" translate="yes" xml:space="preserve">
          <source>This is an interface class that exists purely to document the available options; you do not need to construct it manually. Simply pass a regular JavaScript object containing the desired options into methods that require one of these options object:</source>
          <target state="translated">Это интерфейсный класс,который существует исключительно для документирования доступных опций;его не нужно создавать вручную.Просто передайте обычный объект JavaScript,содержащий нужные опции,в методы,для которых требуется один из этих объектов опций:</target>
        </trans-unit>
        <trans-unit id="306dec7bd8c7954e508c1735c09535d1dd8b815e" translate="yes" xml:space="preserve">
          <source>This is especially useful when you depend on properties of an object, since it allows you to replace:</source>
          <target state="translated">Это особенно полезно,когда вы зависите от свойств объекта,так как позволяет заменять его:</target>
        </trans-unit>
        <trans-unit id="c46a6c0ebb4282802f95e4e63e750434a46d6914" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to the &lt;code&gt;format-currency&lt;/code&gt; example above. You can think of the function version as a shorthand for the longer class form if it does not require dependency injection.</source>
          <target state="translated">Это в точности эквивалентно приведенному выше примеру с &lt;code&gt;format-currency&lt;/code&gt; . Вы можете рассматривать версию функции как сокращение для более длинной формы класса, если она не требует внедрения зависимостей.</target>
        </trans-unit>
        <trans-unit id="80b9a9d98da12b68b0c4b2e6f44b4b81fb921c26" translate="yes" xml:space="preserve">
          <source>This is generally used internally from the acceptance/integration test infrastructure.</source>
          <target state="translated">Как правило,это используется внутри инфраструктуры приемочных/интеграционных испытаний.</target>
        </trans-unit>
        <trans-unit id="a02623baf101f6c1f72c8f3ddff6f2d7a7b7ddbb" translate="yes" xml:space="preserve">
          <source>This is guaranteed to work because the parent route is loaded. But if you tried to do &lt;code&gt;paramsFor&lt;/code&gt; on a sibling route, you wouldn't have the results you expected.</source>
          <target state="translated">Это гарантированно сработает, потому что родительский маршрут загружен. Но если вы попытаетесь выполнить &lt;code&gt;paramsFor&lt;/code&gt; на родственном маршруте, вы не получите ожидаемых результатов.</target>
        </trans-unit>
        <trans-unit id="fa36d77986525618ad7065da5d31723d28369a95" translate="yes" xml:space="preserve">
          <source>This is most often used as the return value for the helper functions (see 'click', 'fillIn','visit',etc). However, there is a method to register a test helper which utilizes this method without the need to actually call &lt;code&gt;wait()&lt;/code&gt; in your helpers.</source>
          <target state="translated">Это чаще всего используется в качестве возвращаемого значения для вспомогательных функций (см. &amp;laquo;Щелчок&amp;raquo;, &amp;laquo;заполнение&amp;raquo;, &amp;laquo;посещение&amp;raquo; и т. Д.). Однако существует метод регистрации помощника по тестированию, который использует этот метод без необходимости фактически вызывать &lt;code&gt;wait()&lt;/code&gt; в ваших помощниках.</target>
        </trans-unit>
        <trans-unit id="e012518624cc2f89b04d821689a88883b2eadb7c" translate="yes" xml:space="preserve">
          <source>This is not an Ember application</source>
          <target state="translated">Это не заявка Эмбера</target>
        </trans-unit>
        <trans-unit id="c62cbb1d5e63e1e37b85a51686c003fd0001230a" translate="yes" xml:space="preserve">
          <source>This is not just a performance optimization. If an attribute has not changed, it is important not to clobber the element's &quot;hidden state&quot;. For example, if you set an input's &lt;code&gt;value&lt;/code&gt; to the same value as before, it will clobber selection state and cursor position. In other words, setting an attribute is not &lt;strong&gt;always&lt;/strong&gt; idempotent.</source>
          <target state="translated">Это не просто оптимизация производительности. Если атрибут не изменился, важно не нарушить &amp;laquo;скрытое состояние&amp;raquo; элемента. Например, если вы установите для входного &lt;code&gt;value&lt;/code&gt; то же значение, что и раньше, состояние выбора и положение курсора будут искажаться. Другими словами, установка атрибута не &lt;strong&gt;всегда&lt;/strong&gt; идемпотентна.</target>
        </trans-unit>
        <trans-unit id="bfe703d974f911cefa2119330aa9316aad45d5a9" translate="yes" xml:space="preserve">
          <source>This is one of the primitives you must implement to support &lt;code&gt;Ember.Array&lt;/code&gt;. If your object supports retrieving the value of an array item using &lt;code&gt;get()&lt;/code&gt; (i.e. &lt;code&gt;myArray.get(0)&lt;/code&gt;), then you do not need to implement this method yourself.</source>
          <target state="translated">Это один из примитивов, которые вы должны реализовать для поддержки &lt;code&gt;Ember.Array&lt;/code&gt; . Если ваш объект поддерживает получение значения элемента массива с помощью &lt;code&gt;get()&lt;/code&gt; (т.е. &lt;code&gt;myArray.get(0)&lt;/code&gt; ), вам не нужно самостоятельно реализовывать этот метод.</target>
        </trans-unit>
        <trans-unit id="e9a9fd73a9f803dbe1cc43144f590d9b54349043" translate="yes" xml:space="preserve">
          <source>This is one of the primitives you must implement to support &lt;code&gt;Ember.Array&lt;/code&gt;. You should replace amt objects started at idx with the objects in the passed array. You should also call &lt;code&gt;this.enumerableContentDidChange()&lt;/code&gt;</source>
          <target state="translated">Это один из примитивов, которые вы должны реализовать для поддержки &lt;code&gt;Ember.Array&lt;/code&gt; . Вы должны заменить объекты amt, запущенные с idx, на объекты в переданном массиве. Вы также должны вызвать &lt;code&gt;this.enumerableContentDidChange()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f356f63243afe37729165e88f111f35dc1627c0e" translate="yes" xml:space="preserve">
          <source>This is particularly useful for polymorphic relationships where records don't share the same table and the &lt;code&gt;id&lt;/code&gt; is not enough information.</source>
          <target state="translated">Это особенно полезно для полиморфных отношений, когда записи не используют одну и ту же таблицу, а &lt;code&gt;id&lt;/code&gt; не является достаточной информацией.</target>
        </trans-unit>
        <trans-unit id="202d339791e806b1e70147736eb9208a5f3911be" translate="yes" xml:space="preserve">
          <source>This is primarily used when syncing bindings, which may try to update after an object has been destroyed.</source>
          <target state="translated">В первую очередь это используется при синхронизации привязок,которые могут попытаться обновиться после того,как объект будет уничтожен.</target>
        </trans-unit>
        <trans-unit id="daeaceef80ff296a12644de6285774c59ae74c52" translate="yes" xml:space="preserve">
          <source>This is the core method used to register an observer for a property.</source>
          <target state="translated">Это основной метод,используемый для регистрации наблюдателя за недвижимостью.</target>
        </trans-unit>
        <trans-unit id="bac9760d303007d38afed39bbecd73ad9b39f5bb" translate="yes" xml:space="preserve">
          <source>This is the element that will be passed to the Application's, &lt;code&gt;eventDispatcher&lt;/code&gt;, which sets up the listeners for event delegation. Every view in your application should be a child of the element you specify here.</source>
          <target state="translated">Это элемент, который будет передан в приложение, &lt;code&gt;eventDispatcher&lt;/code&gt; , которое настраивает прослушиватели для делегирования событий. Каждое представление в вашем приложении должно быть дочерним по отношению к указанному здесь элементу.</target>
        </trans-unit>
        <trans-unit id="decc32c6cf9850c53e2f6bac9e782138a3406ae1" translate="yes" xml:space="preserve">
          <source>This is the extent to which Ember.js enhances native prototypes. We have carefully weighed the tradeoffs involved with changing these prototypes, and recommend that most Ember.js developers use them. These extensions significantly reduce the amount of boilerplate code that must be typed.</source>
          <target state="translated">Это та степень,в которой Эмбер.js усиливает нативные прототипы.Мы тщательно взвесили все компромиссы,связанные с изменением этих прототипов,и рекомендуем большинству разработчиков Ember.js использовать их.Эти расширения значительно уменьшают количество кода шаблона,который должен быть набран.</target>
        </trans-unit>
        <trans-unit id="94928a1a6bed0b1e582ca40e9000c55b3eb6631f" translate="yes" xml:space="preserve">
          <source>This is the handler for the special array content property. If you get this property, it will return this. If you set this property to a new array, it will replace the current content.</source>
          <target state="translated">Это обработчик специального свойства содержимого массива.Если вы получите это свойство,оно вернет его.Если вы установите это свойство в новый массив,то оно заменит текущее содержимое.</target>
        </trans-unit>
        <trans-unit id="dada04f5800d31f549425491d1886c63a016bd11" translate="yes" xml:space="preserve">
          <source>This is typically a paid service you can use to get great performance for your app. Many CDNs act as caching proxies to your origin server; some require you to upload your assets to them. They give you a URL for each resource in your app. This URL will resolve differently for folks depending on where they're browsing.</source>
          <target state="translated">Как правило,это платная услуга,которую вы можете использовать,чтобы получить большую производительность для вашего приложения.Многие CDN выступают в качестве кэширующих прокси-серверов на вашем исходном сервере;некоторые требуют,чтобы вы загрузили на них свои активы.Они дают вам URL для каждого ресурса в вашем приложении.Этот URL будет разрешаться по-разному для людей в зависимости от того,где они просматривают приложение.</target>
        </trans-unit>
        <trans-unit id="9029cd114fa0d3c8586307b8eff931586da2bfe7" translate="yes" xml:space="preserve">
          <source>This is useful if you have a good sense of what records the user will need next. When they click on a link, instead of waiting for a network request to finish, Ember.js can render the new template immediately. It feels instantaneous.</source>
          <target state="translated">Это полезно,если у вас есть хорошее представление о том,какие записи пользователю понадобятся в дальнейшем.Когда они нажимают на ссылку,вместо того,чтобы ждать окончания сетевого запроса,Ember.js может немедленно отобразить новый шаблон.Это ощущается мгновенно.</target>
        </trans-unit>
        <trans-unit id="9c0e2a474431ea68ddf5ecf51a7ea34a70a0a409" translate="yes" xml:space="preserve">
          <source>This is useful in many ways, as the controller specified will be:</source>
          <target state="translated">Это полезно во многих отношениях,так как указанный контроллер будет:</target>
        </trans-unit>
        <trans-unit id="6ade33abb6fdd45e411d88ae2ac98039f0bf103b" translate="yes" xml:space="preserve">
          <source>This is why all Ember's test helpers are wrapped in code that ensures Ember is back in a synchronized state when it makes its assertions. It saves you from having to wrap everything in code that does that, and it makes it easier to read your tests because there's less boilerplate in them.</source>
          <target state="translated">Поэтому все помощники теста Ember обернуты в код,который гарантирует,что Ember вернется в синхронизированное состояние,когда он сделает свои утверждения.Это избавляет вас от необходимости заворачивать в код все,что делает это,и облегчает чтение тестов,потому что в них меньше шаблонов.</target>
        </trans-unit>
        <trans-unit id="373629a051fd9d6a82479c3fb955dcff38bff20a" translate="yes" xml:space="preserve">
          <source>This list of attributes is inherited from the component's superclasses, as well.</source>
          <target state="translated">Этот список атрибутов также наследуется от суперклассов компонента.</target>
        </trans-unit>
        <trans-unit id="9d2978c3cf092adf7f085027707c1fa11a58cc84" translate="yes" xml:space="preserve">
          <source>This list of properties is inherited from the component's superclasses as well.</source>
          <target state="translated">Этот список свойств унаследован и от суперклассов компонента.</target>
        </trans-unit>
        <trans-unit id="fb5f23b5212bb7243dee0fb723c49f54d8ba342c" translate="yes" xml:space="preserve">
          <source>This may be helpful for keeping links active for:</source>
          <target state="translated">Это может быть полезно для поддержания активных ссылок:</target>
        </trans-unit>
        <trans-unit id="627b891473247bd5815547809011482806305c21" translate="yes" xml:space="preserve">
          <source>This method allows you to push a payload containing top-level collections of records organized per type.</source>
          <target state="translated">Этот метод позволяет протолкнуть полезную нагрузку,содержащую коллекции записей верхнего уровня,организованные по типу.</target>
        </trans-unit>
        <trans-unit id="eb9e9c872a5cfd75bae202c4ea4839d24085215a" translate="yes" xml:space="preserve">
          <source>This method also takes a hash of boot-time configuration options for customizing the instance's behavior. See the documentation on &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; for details.</source>
          <target state="translated">Этот метод также принимает хэш параметров конфигурации времени загрузки для настройки поведения экземпляра. Подробности см. В документации по &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d3f7722b1918a033bfc704ab024b6e1cf5c8659" translate="yes" xml:space="preserve">
          <source>This method can be overridden to set up and render additional or alternative templates.</source>
          <target state="translated">Этот метод может быть переопределен для настройки и отображения дополнительных или альтернативных шаблонов.</target>
        </trans-unit>
        <trans-unit id="75131c915bde03ba240c1d475bfd5896ca45f619" translate="yes" xml:space="preserve">
          <source>This method can be used both to push in brand new records, as well as to update existing records.</source>
          <target state="translated">Этот метод может быть использован как для введения новых записей,так и для обновления существующих записей.</target>
        </trans-unit>
        <trans-unit id="2f6b399d017a3f3f52b041707517412999041988" translate="yes" xml:space="preserve">
          <source>This method can be used both to push in brand new records, as well as to update existing records. You can push in more than one type of object at once. All objects should be in the format expected by the serializer.</source>
          <target state="translated">Этот метод может быть использован как для введения новых записей,так и для обновления существующих записей.Можно вставлять несколько типов объектов одновременно.Все объекты должны быть в формате,ожидаемом сериализатором.</target>
        </trans-unit>
        <trans-unit id="b02dc4cad6cf02610e6058c95d7caebe5eb539eb" translate="yes" xml:space="preserve">
          <source>This method can be used when it is certain that the server will return a single object for the primary data.</source>
          <target state="translated">Этот метод можно использовать,когда есть уверенность,что сервер вернет один объект для первичных данных.</target>
        </trans-unit>
        <trans-unit id="31a10777d9035c12a3fcba90767411843e07f906" translate="yes" xml:space="preserve">
          <source>This method delegates a query to the adapter. This is the one place where adapter-level semantics are exposed to the application.</source>
          <target state="translated">Этот метод делегирует запрос к адаптеру.Это единственное место,где семантика на уровне адаптера подвергается воздействию приложения.</target>
        </trans-unit>
        <trans-unit id="7ae3f2f0c751efc8927d65bfd222cb31c552601f" translate="yes" xml:space="preserve">
          <source>This method delegates to a more specific normalize method based on the &lt;code&gt;requestType&lt;/code&gt;.</source>
          <target state="translated">Этот метод делегирует более конкретный метод нормализации на основе &lt;code&gt;requestType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25d67dc575ed0fba225af931e94045db1b5a8f9" translate="yes" xml:space="preserve">
          <source>This method expects normalized &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; document. This means you have to follow &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON API specification&lt;/a&gt; with few minor adjustments:</source>
          <target state="translated">Этот метод ожидает нормализованный документ &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; . Это означает, что вы должны следовать &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;спецификации JSON API&lt;/a&gt; с небольшими изменениями:</target>
        </trans-unit>
        <trans-unit id="7df7b83c336ab5cbac360f1c5c272ebe13752bdd" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;only&lt;/em&gt; checked by the store when the store is returning a cached record array.</source>
          <target state="translated">Этот метод &lt;em&gt;только&lt;/em&gt; проверяется в магазине , когда магазин возвращает кэшированные записи массива.</target>
        </trans-unit>
        <trans-unit id="e8062e08f7c0f7fcdf86622114e1823949507341" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;only&lt;/em&gt; checked by the store when the store is returning a cached record.</source>
          <target state="translated">Этот метод &lt;em&gt;только&lt;/em&gt; проверяется в магазине , когда магазин возвращает кэшированную запись.</target>
        </trans-unit>
        <trans-unit id="3509ace1db000a92db88fe8a1836ad0b7713cbb8" translate="yes" xml:space="preserve">
          <source>This method is called via the container's resolver method. It parses the provided &lt;code&gt;fullName&lt;/code&gt; and then looks up and returns the appropriate template or class.</source>
          <target state="translated">Этот метод вызывается через метод преобразователя контейнера. Он анализирует предоставленное &lt;code&gt;fullName&lt;/code&gt; , а затем ищет и возвращает соответствующий шаблон или класс.</target>
        </trans-unit>
        <trans-unit id="9ce28964f15279cf3d730ef68345532b784ce703" translate="yes" xml:space="preserve">
          <source>This method is called when &lt;code&gt;transitionTo&lt;/code&gt; is called with a context in order to populate the URL.</source>
          <target state="translated">Этот метод вызывается при вызове &lt;code&gt;transitionTo&lt;/code&gt; с контекстом для заполнения URL-адреса.</target>
        </trans-unit>
        <trans-unit id="f0c4ee83b8e7fbb139652d78dd5741771d80faf6" translate="yes" xml:space="preserve">
          <source>This method is called when you call &lt;code&gt;query&lt;/code&gt; on the store.</source>
          <target state="translated">Этот метод вызывается при вызове &lt;code&gt;query&lt;/code&gt; в магазине.</target>
        </trans-unit>
        <trans-unit id="13a7fe79d0533fe9608f31da98b7023d71e69453" translate="yes" xml:space="preserve">
          <source>This method is called with the controller for the current route and the model supplied by the &lt;code&gt;model&lt;/code&gt; hook.</source>
          <target state="translated">Этот метод вызывается с контроллером для текущего маршрута и модели, предоставленной ловушкой &lt;code&gt;model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbedcce78155921a2bf55755fabf12698cc38674" translate="yes" xml:space="preserve">
          <source>This method is called with the controller for the current route and the model supplied by the &lt;code&gt;model&lt;/code&gt; hook. By default, it renders the route's template, configured with the controller for the route.</source>
          <target state="translated">Этот метод вызывается с контроллером для текущего маршрута и модели, предоставленной ловушкой &lt;code&gt;model&lt;/code&gt; . По умолчанию он отображает шаблон маршрута, настроенный с контроллером для маршрута.</target>
        </trans-unit>
        <trans-unit id="c6d0b6398b87777d58312eba81fe646f7810a695" translate="yes" xml:space="preserve">
          <source>This method is generally very similar to calling &lt;code&gt;object[&quot;key&quot;] = value&lt;/code&gt; or &lt;code&gt;object.key = value&lt;/code&gt;, except that it provides support for computed properties, the &lt;code&gt;setUnknownProperty()&lt;/code&gt; method and property observers.</source>
          <target state="translated">Этот метод обычно очень похож на вызов &lt;code&gt;object[&quot;key&quot;] = value&lt;/code&gt; или &lt;code&gt;object.key = value&lt;/code&gt; , за исключением того, что он обеспечивает поддержку вычисляемых свойств, &lt;code&gt;setUnknownProperty()&lt;/code&gt; и наблюдателей свойств.</target>
        </trans-unit>
        <trans-unit id="74bd84dac410bdb6c99add62a62d5417953e7c5c" translate="yes" xml:space="preserve">
          <source>This method is handy for performing intermediate transitions on the way to a final destination route, and is called internally by the default implementations of the &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;loading&lt;/code&gt; handlers.</source>
          <target state="translated">Этот метод удобен для выполнения промежуточных переходов на пути к конечному маршруту назначения и вызывается изнутри реализациями по умолчанию обработчиков &lt;code&gt;error&lt;/code&gt; и &lt;code&gt;loading&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa05443efe853cc3f28766f6d6fb9fe7a13a6090" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload a record after the &lt;code&gt;store.findRecord&lt;/code&gt; method resolves a cached record.</source>
          <target state="translated">Этот метод используется магазином, чтобы определить, следует ли перезагружать запись после того, &lt;code&gt;store.findRecord&lt;/code&gt; метод store.findRecord разрешит кэшированную запись.</target>
        </trans-unit>
        <trans-unit id="ba3f4183468eab98d1908948e41cd0eef07925e8" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload a record array after the &lt;code&gt;store.findAll&lt;/code&gt; method resolves with a cached record array.</source>
          <target state="translated">Этот метод используется хранилищем, чтобы определить, должно ли хранилище перезагружать массив записей после того, &lt;code&gt;store.findAll&lt;/code&gt; метод store.findAll разрешается с помощью кэшированного массива записей.</target>
        </trans-unit>
        <trans-unit id="0dc1d4e602a3dbc746be228073f7c5e9072291ae" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload a record from the adapter when a record is requested by &lt;code&gt;store.findRecord&lt;/code&gt;.</source>
          <target state="translated">Этот метод используется хранилищем, чтобы определить, должно ли хранилище перезагружать запись из адаптера, когда запись запрашивается &lt;code&gt;store.findRecord&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ce64195ca8b7e509dff95556cc7ab216203e10e" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload all records from the adapter when records are requested by &lt;code&gt;store.findAll&lt;/code&gt;.</source>
          <target state="translated">Этот метод используется хранилищем, чтобы определить, должно ли хранилище перезагружать все записи из адаптера, когда записи запрашиваются &lt;code&gt;store.findAll&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="726a13d031eb08fa1d97022da145454908c66cf3" translate="yes" xml:space="preserve">
          <source>This method is used to convert each JSON root key in the payload into a modelName that it can use to look up the appropriate model for that part of the payload.</source>
          <target state="translated">Этот метод используется для преобразования каждого JSON корневого ключа в полезную нагрузку в имя модели (modelName),которое может быть использовано для поиска подходящей модели для этой части полезной нагрузки.</target>
        </trans-unit>
        <trans-unit id="6c5bbd7f853651246ca39c9ea5a7bd46d3c9d051" translate="yes" xml:space="preserve">
          <source>This method is usually similar to using &lt;code&gt;object[keyName]&lt;/code&gt; or &lt;code&gt;object.keyName&lt;/code&gt;, however it supports both computed properties and the unknownProperty handler.</source>
          <target state="translated">Этот метод обычно аналогичен использованию &lt;code&gt;object[keyName]&lt;/code&gt; или &lt;code&gt;object.keyName&lt;/code&gt; , однако он поддерживает как вычисляемые свойства, так и обработчик unknownProperty.</target>
        </trans-unit>
        <trans-unit id="b114921bcf8d16e2e444b824deee9fc587f6fb2a" translate="yes" xml:space="preserve">
          <source>This method makes a request for one record, where the &lt;code&gt;id&lt;/code&gt; is not known beforehand (if the &lt;code&gt;id&lt;/code&gt; is known, use &lt;a href=&quot;#method_findRecord&quot;&gt;&lt;code&gt;findRecord&lt;/code&gt;&lt;/a&gt; instead).</source>
          <target state="translated">Этот метод запрашивает одну запись, &lt;code&gt;id&lt;/code&gt; которой заранее не известен (если известен &lt;code&gt;id&lt;/code&gt; , используйте вместо него &lt;a href=&quot;#method_findRecord&quot;&gt; &lt;code&gt;findRecord&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fe413c14bf4da8f3d5f53d8ded6cddab3dfd4a8c" translate="yes" xml:space="preserve">
          <source>This method normalizes a modelName into the format Ember Data uses internally.</source>
          <target state="translated">Этот метод нормализует имя модели в формат,который Ember Data использует внутренне.</target>
        </trans-unit>
        <trans-unit id="08631e46477a7a941a13e8472a1d4934d0dfbb83" translate="yes" xml:space="preserve">
          <source>This method performs an HTTP &lt;code&gt;GET&lt;/code&gt; request with the id provided as part of the query string.</source>
          <target state="translated">Этот метод выполняет HTTP- &lt;code&gt;GET&lt;/code&gt; с идентификатором, предоставленным как часть строки запроса.</target>
        </trans-unit>
        <trans-unit id="7856b76816169cfe893ef391554413f9b77a695b" translate="yes" xml:space="preserve">
          <source>This method provides a way to read an element's attribute and also update the last value Ember knows about at the same time. This makes setting an attribute idempotent.</source>
          <target state="translated">Этот метод обеспечивает способ чтения атрибута элемента,а также обновление последнего значения,о котором знает Эмбер.Это делает установку атрибута idempotent.</target>
        </trans-unit>
        <trans-unit id="1be81e576abbc9f8bf07bfebbb5d7035d8f905c9" translate="yes" xml:space="preserve">
          <source>This method receives the &lt;code&gt;store&lt;/code&gt;, the Model class for the request, the payload, the id of the record request (or &lt;code&gt;null&lt;/code&gt; if there is no id associated with the request), and the request type (a string with the possible values of: &lt;code&gt;'findRecord'&lt;/code&gt;, &lt;code&gt;'queryRecord'&lt;/code&gt;, &lt;code&gt;'findAll'&lt;/code&gt;, &lt;code&gt;'findBelongsTo'&lt;/code&gt;, &lt;code&gt;'findHasMany'&lt;/code&gt;, &lt;code&gt;'findMany'&lt;/code&gt;, &lt;code&gt;'query'&lt;/code&gt;, &lt;code&gt;'createRecord'&lt;/code&gt;, &lt;code&gt;'deleteRecord'&lt;/code&gt;, and &lt;code&gt;'updateRecord'&lt;/code&gt;) as arguments.</source>
          <target state="translated">Этот метод получает &lt;code&gt;store&lt;/code&gt; , класс модели для запроса, полезную нагрузку, идентификатор запроса записи (или &lt;code&gt;null&lt;/code&gt; , если идентификатор не связан с запросом) и тип запроса (строка с возможными значениями: &lt;code&gt;'findRecord'&lt;/code&gt; , &lt;code&gt;'queryRecord'&lt;/code&gt; , &lt;code&gt;'findAll'&lt;/code&gt; , &lt;code&gt;'findBelongsTo'&lt;/code&gt; , &lt;code&gt;'findHasMany'&lt;/code&gt; , &lt;code&gt;'findMany'&lt;/code&gt; , &lt;code&gt;'query'&lt;/code&gt; , &lt;code&gt;'createRecord'&lt;/code&gt; , &lt;code&gt;'deleteRecord'&lt;/code&gt; и &lt;code&gt;'updateRecord'&lt;/code&gt; ) в качестве аргументов.</target>
        </trans-unit>
        <trans-unit id="83cfea1ccac994b0f515944e96fac8ec32c2f20c" translate="yes" xml:space="preserve">
          <source>This method returns a filtered array that contains all of the known records for a given type in the store.</source>
          <target state="translated">Этот метод возвращает отфильтрованный массив,содержащий все известные записи для данного типа в хранилище.</target>
        </trans-unit>
        <trans-unit id="6a6a5fc1791645c2940034d3812b1b516a3835b0" translate="yes" xml:space="preserve">
          <source>This method returns a manager which can be used for introspection of the factory's class or for the creation of factory instances with initial properties. The manager is an object with the following properties:</source>
          <target state="translated">Этот метод возвращает менеджер,который может быть использован для интроспекции заводского класса или для создания заводских экземпляров с исходными свойствами.Менеджер-это объект со следующими свойствами:</target>
        </trans-unit>
        <trans-unit id="b23b68987e06baaee9d2d14013a12d56a2d0b3b3" translate="yes" xml:space="preserve">
          <source>This method returns a promise, which is resolved with an &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.AdapterPopulatedRecordArray.html&quot;&gt;&lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt;&lt;/a&gt; once the server returns.</source>
          <target state="translated">Этот метод возвращает обещание, которое разрешается с помощью &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.AdapterPopulatedRecordArray.html&quot;&gt; &lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt; &lt;/a&gt; после возврата сервера.</target>
        </trans-unit>
        <trans-unit id="eed4c7cdb29f6c03f0723f0629feb07c3656376e" translate="yes" xml:space="preserve">
          <source>This method returns a promise, which resolves with the found record.</source>
          <target state="translated">Этот метод возвращает обещание,которое разрешается с найденной записью.</target>
        </trans-unit>
        <trans-unit id="a9ee61f9f9c7e39cc14b2113ef18411dc61a4eca" translate="yes" xml:space="preserve">
          <source>This method returns a record for a given type and id combination.</source>
          <target state="translated">Этот метод возвращает запись для заданного типа и комбинации id.</target>
        </trans-unit>
        <trans-unit id="5addfbbe95b2a58af44bf1bdcf2499db95fe3c02" translate="yes" xml:space="preserve">
          <source>This method returns true if a record for a given modelName and id is already loaded in the store. Use this function to know beforehand if a findRecord() will result in a request or that it will be a cache hit.</source>
          <target state="translated">Этот метод возвращает true,если в хранилище уже загружена запись для заданных modelName и id.Используйте эту функцию,чтобы заранее знать,приведет ли функция findRecord()к запросу или к попаданию в кэш.</target>
        </trans-unit>
        <trans-unit id="29ad6b6ad91ee119d75a9bab0ee8ae0631edf987" translate="yes" xml:space="preserve">
          <source>This method should be returned by async helpers such as &lt;code&gt;wait&lt;/code&gt;.</source>
          <target state="translated">Этот метод должен возвращаться помощниками async, такими как &lt;code&gt;wait&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df6dcf687152ce38d873a2ff72a1326ba3f69cb3" translate="yes" xml:space="preserve">
          <source>This method should be used when an event may be called multiple times but the action should only be called once when the event is done firing. A common example is for scroll events where you only want updates to happen once scrolling has ceased.</source>
          <target state="translated">Этот метод следует использовать,когда событие может быть вызвано несколько раз,но действие должно быть вызвано только один раз,когда событие завершено стрельбой.Обычный пример-для событий прокрутки,когда обновления должны происходить только после того,как прокрутка прекратится.</target>
        </trans-unit>
        <trans-unit id="1b7af68bf1d14a0a7494d03c440d73e28a4b7190" translate="yes" xml:space="preserve">
          <source>This method unloads all records in the store. It schedules unloading to happen during the next run loop.</source>
          <target state="translated">Этот метод выгружает все записи в магазине.Планирует разгрузку во время следующего цикла выполнения.</target>
        </trans-unit>
        <trans-unit id="f68e595b779d29ca69cd56edd16cad0978ac86aa" translate="yes" xml:space="preserve">
          <source>This method will be called with the parent record and &lt;code&gt;/people/1/group&lt;/code&gt;.</source>
          <target state="translated">Этот метод будет вызываться с родительской записью и &lt;code&gt;/people/1/group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90e07dd7b94be524253c05e8e1714813e05bd28a" translate="yes" xml:space="preserve">
          <source>This method will be called with the parent record and &lt;code&gt;/posts/1/comments&lt;/code&gt;.</source>
          <target state="translated">Этот метод будет вызываться с родительской записью и &lt;code&gt;/posts/1/comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="105f0e895ac617988c6c362e0f459352f9da2718" translate="yes" xml:space="preserve">
          <source>This method will only be called if content is non-&lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Этот метод будет вызываться только в том случае, если содержимое не равно &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657150ab50b85204bae3030b7eec6fc817ac1dfb" translate="yes" xml:space="preserve">
          <source>This method will synchronously return the record if it is available in the store, otherwise it will return &lt;code&gt;null&lt;/code&gt;. A record is available if it has been fetched earlier, or pushed manually into the store.</source>
          <target state="translated">Этот метод будет синхронно возвращать запись, если она доступна в магазине, в противном случае он вернет &lt;code&gt;null&lt;/code&gt; . Запись доступна, если она была получена ранее или помещена в магазин вручную.</target>
        </trans-unit>
        <trans-unit id="5d308bedb05bb7d9b40bb5a78f093cc80094bac4" translate="yes" xml:space="preserve">
          <source>This method works much like the more generic &lt;code&gt;find()&lt;/code&gt; method.</source>
          <target state="translated">Этот метод работает так же, как более общий метод &lt;code&gt;find()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c70fd4104148a561dcde3c0978e4acb10eaa64" translate="yes" xml:space="preserve">
          <source>This method would ensure that whenever you do &lt;code&gt;store.findAll('ticket')&lt;/code&gt; you will always get a list of tickets that are no more than 20 minutes old. In case a cached version is more than 20 minutes old, &lt;code&gt;findAll&lt;/code&gt; will not resolve until you fetched the latest versions.</source>
          <target state="translated">Этот метод гарантирует, что всякий раз, когда вы выполняете &lt;code&gt;store.findAll('ticket')&lt;/code&gt; вы всегда будете получать список билетов, которым не более 20 минут. Если кэшированная версия старше 20 минут, &lt;code&gt;findAll&lt;/code&gt; не разрешится, пока вы не загрузите последние версии.</target>
        </trans-unit>
        <trans-unit id="2678263a74a0b565310ba1599428e1ae18b8c295" translate="yes" xml:space="preserve">
          <source>This method would ensure that whenever you do &lt;code&gt;store.findRecord('ticket',
id)&lt;/code&gt; you will always get a ticket that is no more than 20 minutes old. In case the cached version is more than 20 minutes old, &lt;code&gt;findRecord&lt;/code&gt; will not resolve until you fetched the latest version.</source>
          <target state="translated">Этот метод гарантирует, что всякий раз, когда вы выполняете &lt;code&gt;store.findRecord('ticket', id)&lt;/code&gt; вы всегда получаете билет, которому не более 20 минут. Если кэшированная версия старше 20 минут, &lt;code&gt;findRecord&lt;/code&gt; не разрешится, пока вы не загрузите последнюю версию.</target>
        </trans-unit>
        <trans-unit id="ec834c3e944edee230a4909331939d62bcbb6301" translate="yes" xml:space="preserve">
          <source>This mixin allows for Ember objects to subscribe to and emit events.</source>
          <target state="translated">Эта смесь позволяет Ember-объектам подписываться на события и испускать их.</target>
        </trans-unit>
        <trans-unit id="0bf4568e2d4c8f66ef058891e43df4c9d7beb31a" translate="yes" xml:space="preserve">
          <source>This mixin defines the API for modifying array-like objects. These methods can be applied only to a collection that keeps its items in an ordered set. It builds upon the Array mixin and adds methods to modify the array. One concrete implementations of this class include ArrayProxy.</source>
          <target state="translated">Эта смесь определяет API для модификации массивов-подобных объектов.Эти методы могут быть применены только к коллекции,которая хранит свои объекты в упорядоченном наборе.Она строится на основе смеси массивов и добавляет методы для модификации массива.Одной из конкретных реализаций этого класса является ArrayProxy.</target>
        </trans-unit>
        <trans-unit id="0c9ab29a7ae181e083871bfe59c6eb5fa8dee6de" translate="yes" xml:space="preserve">
          <source>This mixin defines the API for modifying generic enumerables. These methods can be applied to an object regardless of whether it is ordered or unordered.</source>
          <target state="translated">Эта смесь определяет API для модификации общих перечислений.Эти методы могут быть применены к объекту независимо от того,упорядочен он или нет.</target>
        </trans-unit>
        <trans-unit id="c505b5abe483be3c71930f0a0c5dfa5e8fc1384e" translate="yes" xml:space="preserve">
          <source>This mixin defines the common interface implemented by enumerable objects in Ember. Most of these methods follow the standard Array iteration API defined up to JavaScript 1.8 (excluding language-specific features that cannot be emulated in older versions of JavaScript).</source>
          <target state="translated">Эта смесь определяет общий интерфейс,реализованный бесчисленными объектами в Ember.Большинство из этих методов следуют стандартному API-интерфейсу итераций массива,определенному до JavaScript 1.8 (исключая особенности языка,которые не могут быть эмулированы в более старых версиях JavaScript).</target>
        </trans-unit>
        <trans-unit id="a9d0130ce13b8d50b5ddf38e1dae3ada3564de2d" translate="yes" xml:space="preserve">
          <source>This mixin implements Observer-friendly Array-like behavior. It is not a concrete implementation, but it can be used up by other classes that want to appear like arrays.</source>
          <target state="translated">В этом миксе реализовано дружелюбное поведение,похожее на &quot;Массив&quot;.Это не конкретная реализация,но она может быть использована другими классами,которые хотят выглядеть как массивы.</target>
        </trans-unit>
        <trans-unit id="6d8916c9cfd84a7db880c63d8afc0d632f773b4d" translate="yes" xml:space="preserve">
          <source>This mixin is applied automatically to the Array class on page load, so you can use any of these methods on simple arrays. If Array already implements one of these methods, the mixin will not override them.</source>
          <target state="translated">Эта смесь автоматически применяется к классу Array при загрузке страницы,так что вы можете использовать любой из этих методов на простых массивах.Если Array уже реализует один из этих методов,то микс не будет их переопределять.</target>
        </trans-unit>
        <trans-unit id="763268c55e99fe8d5e6cfe80a692c9e9a1ec4278" translate="yes" xml:space="preserve">
          <source>This mixin provides properties and property observing functionality, core features of the Ember object model.</source>
          <target state="translated">Эта смесь обеспечивает функциональность наблюдения за свойствами и свойствами,основными характеристиками объектной модели Ember.</target>
        </trans-unit>
        <trans-unit id="16c6c4f7af60f66230f7ffba2118c188148ccc3d" translate="yes" xml:space="preserve">
          <source>This namespace contains all Ember methods and functions. Future versions of Ember may overwrite this namespace and therefore, you should avoid adding any new properties.</source>
          <target state="translated">Это пространство имён содержит все методы и функции Ember.В будущих версиях Ember это пространство имен может быть перезаписано,поэтому следует избегать добавления новых свойств.</target>
        </trans-unit>
        <trans-unit id="5c0f1fb8cd697c512e05d5434c4202f674808490" translate="yes" xml:space="preserve">
          <source>This one command will create a new directory called &lt;code&gt;ember-quickstart&lt;/code&gt; and set up a new Ember application inside of it. Out of the box, your application will include:</source>
          <target state="translated">Эта одна команда создаст новый каталог под названием &lt;code&gt;ember-quickstart&lt;/code&gt; и настроит внутри него новое приложение Ember. По умолчанию ваше приложение будет включать:</target>
        </trans-unit>
        <trans-unit id="1d1ae48e7202427b88a954866fa91e5d3ebf6ba4" translate="yes" xml:space="preserve">
          <source>This only works on primitive data types, e.g. Strings, Numbers, etc.</source>
          <target state="translated">Это работает только с примитивными типами данных,например,Строки,Числа и т.д.</target>
        </trans-unit>
        <trans-unit id="308984791a98ba4402203e44b8c501a854c6be67" translate="yes" xml:space="preserve">
          <source>This option logs all the lookups that are done to the console. Custom objects you've created yourself have a tick, and Ember generated ones don't.</source>
          <target state="translated">Эта опция записывает в журнал все поиски,которые выполняются в консоли.Пользовательские объекты,которые вы создали сами,имеют галочку,а сгенерированные Эмбер-нет.</target>
        </trans-unit>
        <trans-unit id="864837a696f2c980e81e10f2eb17aa9ee09a9e87" translate="yes" xml:space="preserve">
          <source>This pause-on-promise behavior is extremely valuable for when you need to guarantee that a route's data has fully loaded before displaying a new template.</source>
          <target state="translated">Такое поведение паузы очень ценно,когда необходимо гарантировать,что данные маршрута полностью загружены перед отображением нового шаблона.</target>
        </trans-unit>
        <trans-unit id="68b70d5b5dbc2ccc714f22b801fc4c2b2e2527d0" translate="yes" xml:space="preserve">
          <source>This prevents the reverse flow, and also throws an exception when it occurs.</source>
          <target state="translated">Это предотвращает обратный поток,а также выбрасывает исключение при его возникновении.</target>
        </trans-unit>
        <trans-unit id="f188f197791f50828cb93afbcf35a833dccb3e89" translate="yes" xml:space="preserve">
          <source>This property can be specified as either an element or a &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;jQuery-compatible selector string&lt;/a&gt;.</source>
          <target state="translated">Это свойство можно указать как элемент или &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;строку селектора, совместимую&lt;/a&gt; с jQuery .</target>
        </trans-unit>
        <trans-unit id="259eb851af0e49aa172ab983617f64d1b8524d4e" translate="yes" xml:space="preserve">
          <source>This property contains the testing helpers for the current application. These are created once you call &lt;code&gt;injectTestHelpers&lt;/code&gt; on your &lt;code&gt;Ember.Application&lt;/code&gt; instance. The included helpers are also available on the &lt;code&gt;window&lt;/code&gt; object by default, but can be used from this object on the individual application also.</source>
          <target state="translated">Это свойство содержит помощников по тестированию для текущего приложения. Они создаются, когда вы вызываете &lt;code&gt;injectTestHelpers&lt;/code&gt; в своем экземпляре &lt;code&gt;Ember.Application&lt;/code&gt; . Включенные помощники также доступны в объекте &lt;code&gt;window&lt;/code&gt; по умолчанию, но также могут использоваться из этого объекта в отдельном приложении.</target>
        </trans-unit>
        <trans-unit id="880b36e1d1b71d83f727290b52d71974b054fd06" translate="yes" xml:space="preserve">
          <source>This property holds the &lt;code&gt;DS.AdapterError&lt;/code&gt; object with which last adapter operation was rejected.</source>
          <target state="translated">Это свойство содержит объект &lt;code&gt;DS.AdapterError&lt;/code&gt; , с которым была отклонена последняя операция адаптера.</target>
        </trans-unit>
        <trans-unit id="c2672723b4000e8dc3a4be8a1dec2e30fc2e556d" translate="yes" xml:space="preserve">
          <source>This property indicates whether or not this application is currently in testing mode. This is set when &lt;code&gt;setupForTesting&lt;/code&gt; is called on the current application.</source>
          <target state="translated">Это свойство указывает, находится ли это приложение в настоящее время в режиме тестирования. Это устанавливается, когда &lt;code&gt;setupForTesting&lt;/code&gt; вызывается в текущем приложении.</target>
        </trans-unit>
        <trans-unit id="1d61da15319a8f6d477ea54281d1f750de320a8d" translate="yes" xml:space="preserve">
          <source>This property must be specified upon creation, and should not be changed once created.</source>
          <target state="translated">Это свойство должно быть указано при создании и не должно изменяться после создания.</target>
        </trans-unit>
        <trans-unit id="7cb254d7e44a7f93fba2ee853638d58a655e0c55" translate="yes" xml:space="preserve">
          <source>This property overrides the default property defined in &lt;code&gt;Ember.Enumerable&lt;/code&gt;.</source>
          <target state="translated">Это свойство переопределяет свойство по умолчанию, определенное в &lt;code&gt;Ember.Enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9773d501349ee6511de2ee684d6598a19311be0d" translate="yes" xml:space="preserve">
          <source>This property would contain the following:</source>
          <target state="translated">Это свойство будет содержать следующее:</target>
        </trans-unit>
        <trans-unit id="d20b59f6a96b6617ee0085cdddc214c8c3d28af2" translate="yes" xml:space="preserve">
          <source>This removes all helpers that have been registered, and resets and functions that were overridden by the helpers.</source>
          <target state="translated">При этом удаляются все зарегистрированные помощники,а также сбрасываются и переопределяются функции,которые были переопределены помощниками.</target>
        </trans-unit>
        <trans-unit id="f3b7c25a3f2e20075045c10f4cbaf58f922adbe5" translate="yes" xml:space="preserve">
          <source>This results in the creation of a model file and a test file:</source>
          <target state="translated">В результате создается файл модели и файл теста:</target>
        </trans-unit>
        <trans-unit id="3d2448d5cbbd2264adc36cdc0345ffb2188196cb" translate="yes" xml:space="preserve">
          <source>This returns a string that represents how the reference will be looked up when it is loaded. If the relationship has a link it will use the &quot;link&quot; otherwise it defaults to &quot;id&quot;.</source>
          <target state="translated">Это возвращает строку,которая показывает,как будет выглядеть ссылка при загрузке.Если у отношения есть ссылка,то оно будет использовать &quot;ссылку&quot;,в противном случае по умолчанию используется &quot;id&quot;.</target>
        </trans-unit>
        <trans-unit id="f4a77f92e2016358406f536036ee528d0389ad89" translate="yes" xml:space="preserve">
          <source>This returns a thenable tailored for testing. It catches failed &lt;code&gt;onSuccess&lt;/code&gt; callbacks and invokes the &lt;code&gt;Ember.Test.adapter.exception&lt;/code&gt; callback in the last chained then.</source>
          <target state="translated">Это возвращает таблицу, специально предназначенную для тестирования. Он перехватывает неудачные &lt;code&gt;onSuccess&lt;/code&gt; вызовы onSuccess и вызывает &lt;code&gt;Ember.Test.adapter.exception&lt;/code&gt; вызов Ember.Test.adapter.exception в последнем связанном состоянии .</target>
        </trans-unit>
        <trans-unit id="50faf92dba9f3a4835092fca1ed3e0228234be67" translate="yes" xml:space="preserve">
          <source>This returns the objects at the specified indexes, using &lt;code&gt;objectAt&lt;/code&gt;.</source>
          <target state="translated">Это возвращает объекты по указанным индексам, используя &lt;code&gt;objectAt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1e3aaaf80637b6eaa622e8df1944a99aa521731" translate="yes" xml:space="preserve">
          <source>This route is part of every application, so you don't need to specify it in your &lt;code&gt;app/router.js&lt;/code&gt;.</source>
          <target state="translated">Этот маршрут является частью каждого приложения, поэтому вам не нужно указывать его в &lt;code&gt;app/router.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03d7bba0ebc44c5b5992d770552d3d3655e4353b" translate="yes" xml:space="preserve">
          <source>This router creates a route for &lt;code&gt;/posts&lt;/code&gt; and for &lt;code&gt;/posts/new&lt;/code&gt;. When a user visits &lt;code&gt;/posts&lt;/code&gt;, they'll simply see the &lt;code&gt;posts.hbs&lt;/code&gt; template. (Below, &lt;a href=&quot;#toc_index-routes&quot;&gt;index routes&lt;/a&gt; explains an important addition to this.) When the user visits &lt;code&gt;posts/new&lt;/code&gt;, they'll see the &lt;code&gt;posts/new.hbs&lt;/code&gt; template rendered into the &lt;code&gt;{{outlet}}&lt;/code&gt; of the &lt;code&gt;posts&lt;/code&gt; template.</source>
          <target state="translated">Этот маршрутизатор создает маршрут для &lt;code&gt;/posts&lt;/code&gt; и для &lt;code&gt;/posts/new&lt;/code&gt; . Когда пользователь посещает &lt;code&gt;/posts&lt;/code&gt; , он просто видит шаблон &lt;code&gt;posts.hbs&lt;/code&gt; . (Ниже &lt;a href=&quot;#toc_index-routes&quot;&gt;индекс маршруты&lt;/a&gt; объясняют важное дополнение к этому.) При посещении пользователя &lt;code&gt;posts/new&lt;/code&gt; , они будут видеть &lt;code&gt;posts/new.hbs&lt;/code&gt; шаблона для рендеринга в &lt;code&gt;{{outlet}}&lt;/code&gt; из &lt;code&gt;posts&lt;/code&gt; шаблона.</target>
        </trans-unit>
        <trans-unit id="2682ff7e745a9f583a877a94603b3a194f20069b" translate="yes" xml:space="preserve">
          <source>This section covers some more advanced features of the router and its capability for handling complex async logic within your app.</source>
          <target state="translated">В этом разделе рассматриваются некоторые более продвинутые функции маршрутизатора и его возможности по работе со сложной логикой асинхронизации в вашем приложении.</target>
        </trans-unit>
        <trans-unit id="7d03de60bffa51d324cefb82c172247484bdd27e" translate="yes" xml:space="preserve">
          <source>This separation of concerns not only clarifies the architecture of your app, it can also improve its efficiency. This is particularly true when your app needs to be booted repeatedly during testing and / or server-rendering (e.g. via &lt;a href=&quot;https://github.com/tildeio/ember-cli-fastboot&quot;&gt;FastBoot&lt;/a&gt;). The configuration of a single &lt;code&gt;Application&lt;/code&gt; can be done once and shared among multiple stateful &lt;code&gt;ApplicationInstance&lt;/code&gt; instances. These instances can be discarded once they're no longer needed (e.g. when a test has run or FastBoot request has finished).</source>
          <target state="translated">Такое разделение задач не только проясняет архитектуру вашего приложения, но и может повысить его эффективность. Это особенно верно, когда ваше приложение необходимо многократно загружать во время тестирования и / или серверного рендеринга (например, через &lt;a href=&quot;https://github.com/tildeio/ember-cli-fastboot&quot;&gt;FastBoot&lt;/a&gt; ). Конфигурация одного &lt;code&gt;Application&lt;/code&gt; может выполняться один раз и совместно использоваться несколькими экземплярами &lt;code&gt;ApplicationInstance&lt;/code&gt; с отслеживанием состояния . Эти экземпляры можно удалить, если они больше не нужны (например, после выполнения теста или выполнения запроса FastBoot).</target>
        </trans-unit>
        <trans-unit id="789aeba7e703a9b9f8a1615849db9c70a791d7f5" translate="yes" xml:space="preserve">
          <source>This serializer expects this &lt;code&gt;errors&lt;/code&gt; object to be an Array similar to the following, compliant with the JSON-API specification:</source>
          <target state="translated">Этот сериализатор ожидает, что этот объект &lt;code&gt;errors&lt;/code&gt; будет массивом, подобным приведенному ниже, совместимым со спецификацией JSON-API:</target>
        </trans-unit>
        <trans-unit id="bb8c0ec823dbba7a7a2ed2b41b55cb5e08ee937a" translate="yes" xml:space="preserve">
          <source>This serializer normalizes a JSON API payload that looks like:</source>
          <target state="translated">Этот сериализатор нормализует JSON API полезную нагрузку,которая выглядит так:</target>
        </trans-unit>
        <trans-unit id="6ae149f60b66b9e03410e34d8b8dd68ba195fe2d" translate="yes" xml:space="preserve">
          <source>This serializer will generate JSON that looks like this:</source>
          <target state="translated">Этот сериализатор сгенерирует JSON,который выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="a037d496c03267daf854fbff115ff2ed3892a36d" translate="yes" xml:space="preserve">
          <source>This sets up a binding between the &lt;code&gt;category&lt;/code&gt; query param in the URL, and the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt;. In other words, once the &lt;code&gt;articles&lt;/code&gt; route has been entered, any changes to the &lt;code&gt;category&lt;/code&gt; query param in the URL will update the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt;, and vice versa. Note that you can't bind &lt;code&gt;queryParams&lt;/code&gt; to computed properties, they have to be values.</source>
          <target state="translated">Это устанавливает связь между параметром запроса &lt;code&gt;category&lt;/code&gt; в URL-адресе и свойством &lt;code&gt;category&lt;/code&gt; в &lt;code&gt;controller:articles&lt;/code&gt; . Другими словами, как только маршрут &lt;code&gt;articles&lt;/code&gt; был введен, любые изменения параметра запроса &lt;code&gt;category&lt;/code&gt; в URL-адресе будут обновлять свойство &lt;code&gt;category&lt;/code&gt; в &lt;code&gt;controller:articles&lt;/code&gt; и наоборот. Обратите внимание, что вы не можете привязать &lt;code&gt;queryParams&lt;/code&gt; к вычисляемым свойствам, они должны быть значениями.</target>
        </trans-unit>
        <trans-unit id="c4fca12a79c237845effaba4d5f11c49b9077507" translate="yes" xml:space="preserve">
          <source>This setup allows you to run the routing layer of your Ember app in a server environment using Node.js and completely disable rendering. This allows you to simulate and discover the resources (i.e. AJAX requests) needed to fulfill a given request and eagerly &quot;push&quot; these resources to the client.</source>
          <target state="translated">Эта настройка позволяет запустить уровень маршрутизации приложения Ember в серверной среде с помощью Node.js и полностью отключить рендеринг.Это позволяет моделировать и обнаруживать ресурсы (т.е.AJAX-запросы),необходимые для выполнения заданного запроса,и с нетерпением &quot;проталкивать&quot; эти ресурсы к клиенту.</target>
        </trans-unit>
        <trans-unit id="02dd78ab18220d6a23d424669cd9bfd4688435b6" translate="yes" xml:space="preserve">
          <source>This setup allows you to run your Ember app in a server environment using Node.js and render its content into static HTML for SEO purposes.</source>
          <target state="translated">Эта настройка позволяет вам запустить ваше Ember приложение в серверной среде с помощью Node.js и визуализировать его содержимое в статический HTML для целей SEO.</target>
        </trans-unit>
        <trans-unit id="0fc8bfa537605301181bc268ec1121a0fff7f530" translate="yes" xml:space="preserve">
          <source>This shows the literal string &lt;code&gt;&amp;lt;b&amp;gt;Hello world&amp;lt;/b&amp;gt;&lt;/code&gt; to the user, rather than the text in bold as you probably intended. We can tell Ember not to escape the return value (that is, that it is &lt;em&gt;safe&lt;/em&gt;) by using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_htmlSafe&quot;&gt;&lt;code&gt;htmlSafe&lt;/code&gt;&lt;/a&gt; string utility:</source>
          <target state="translated">Это показывает пользователю буквальную строку &lt;code&gt;&amp;lt;b&amp;gt;Hello world&amp;lt;/b&amp;gt;&lt;/code&gt; , а не текст, выделенный жирным шрифтом, как вы, вероятно, предполагали. Мы можем сказать Ember не экранировать возвращаемое значение (то есть, что это &lt;em&gt;безопасно&lt;/em&gt; ) с помощью строковой утилиты &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_htmlSafe&quot;&gt; &lt;code&gt;htmlSafe&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="14461f490d3629183001df3471224dbd1beb7332" translate="yes" xml:space="preserve">
          <source>This snippet says &quot;take the &lt;code&gt;userDidDeleteAccount&lt;/code&gt; action from the parent and make it available on the child component as the property &lt;code&gt;onConfirm&lt;/code&gt;.&quot; Note the use here of the &lt;code&gt;action&lt;/code&gt; helper, which serves to return the function named &lt;code&gt;&quot;userDidDeleteAccount&quot;&lt;/code&gt; that we are passing to the component.</source>
          <target state="translated">В этом фрагменте говорится: &amp;laquo; &lt;code&gt;userDidDeleteAccount&lt;/code&gt; действие userDidDeleteAccount от родителя и сделайте его доступным в дочернем компоненте как свойство &lt;code&gt;onConfirm&lt;/code&gt; &amp;raquo;. Обратите внимание на использование здесь помощника &lt;code&gt;action&lt;/code&gt; , который служит для возврата функции с именем &lt;code&gt;&quot;userDidDeleteAccount&quot;&lt;/code&gt; которую мы передаем компоненту.</target>
        </trans-unit>
        <trans-unit id="10aa9c950fe3b173b7fe0ffb80e1c78f6a244f66" translate="yes" xml:space="preserve">
          <source>This synchronous behavior can also lead to observers being fired multiple times when observing multiple properties:</source>
          <target state="translated">Такое синхронное поведение может также привести к многократному увольнению наблюдателей при наблюдении за несколькими свойствами:</target>
        </trans-unit>
        <trans-unit id="3ca7bb302863b1f3661818e192c30d8b7af3c091" translate="yes" xml:space="preserve">
          <source>This syntax offers the convenience to add a class if a property is &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Этот синтаксис предлагает удобство добавления класса, если свойство имеет значение &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eee93099eea962e7715594aebb65f2ee2649df43" translate="yes" xml:space="preserve">
          <source>This template would display all properties on the &lt;code&gt;user&lt;/code&gt; object in a list:</source>
          <target state="translated">Этот шаблон будет отображать все свойства объекта &lt;code&gt;user&lt;/code&gt; в списке:</target>
        </trans-unit>
        <trans-unit id="afccb08d1ac5974f56f2db8b4c4a83dee7fac93b" translate="yes" xml:space="preserve">
          <source>This time when we setup our &lt;code&gt;moduleFor&lt;/code&gt; we need to pass an options object as our third argument that has the controller's &lt;code&gt;needs&lt;/code&gt;.</source>
          <target state="translated">На этот раз , когда мы настроим наш &lt;code&gt;moduleFor&lt;/code&gt; нам нужно передать параметры объект , как наш третий аргумент , который имеет контроллер &lt;code&gt;needs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="320e20ec08a17dd14b114fefba162280a1a8e762" translate="yes" xml:space="preserve">
          <source>This way the &lt;code&gt;{{action}}&lt;/code&gt; will fire when clicking with the alt key pressed down.</source>
          <target state="translated">Таким образом, &lt;code&gt;{{action}}&lt;/code&gt; будет срабатывать при нажатии с нажатой клавишей alt.</target>
        </trans-unit>
        <trans-unit id="e963dddd92986a8f66f2f216766871bc0c689a3c" translate="yes" xml:space="preserve">
          <source>This way the action will fire when clicking with the alt key pressed down. Alternatively, supply &quot;any&quot; to the &lt;code&gt;allowedKeys&lt;/code&gt; option to accept any combination of modifier keys.</source>
          <target state="translated">Таким образом, действие будет срабатывать при нажатии с нажатой клавишей alt. В качестве альтернативы &lt;code&gt;allowedKeys&lt;/code&gt; &amp;laquo;any&amp;raquo; для параметра allowedKeys, чтобы принять любую комбинацию клавиш-модификаторов.</target>
        </trans-unit>
        <trans-unit id="bedb78f365050fbd4069b91241e79e0fffc66905" translate="yes" xml:space="preserve">
          <source>This will be set to the Application instance when it is created.</source>
          <target state="translated">Это будет установлено для экземпляра приложения при его создании.</target>
        </trans-unit>
        <trans-unit id="b0d2a0761856747c7bdf1757594db900c323b0ab" translate="yes" xml:space="preserve">
          <source>This will bind checked state of this checkbox to the value of &lt;code&gt;isEmberized&lt;/code&gt; -- if either one changes, it will be reflected in the other.</source>
          <target state="translated">Это свяжет отмеченное состояние этого флажка со значением &lt;code&gt;isEmberized&lt;/code&gt; - если одно из них изменится, это отразится на другом.</target>
        </trans-unit>
        <trans-unit id="25e3b1918ed474cee33c724ea48d9dc47b998531" translate="yes" xml:space="preserve">
          <source>This will call the &lt;code&gt;targetAction&lt;/code&gt; method on the &lt;code&gt;targetObject&lt;/code&gt; whenever the value of the &lt;code&gt;propertyKey&lt;/code&gt; changes.</source>
          <target state="translated">Это будет вызывать &lt;code&gt;targetAction&lt;/code&gt; метод на &lt;code&gt;targetObject&lt;/code&gt; всякий раз , когда значение &lt;code&gt;propertyKey&lt;/code&gt; изменяется.</target>
        </trans-unit>
        <trans-unit id="1112ad430de08e3a9e5b258697086fe3531f93eb" translate="yes" xml:space="preserve">
          <source>This will cause changes to the &lt;code&gt;controller:articles&lt;/code&gt;'s &lt;code&gt;category&lt;/code&gt; property to update the &lt;code&gt;articles_category&lt;/code&gt; query param, and vice versa.</source>
          <target state="translated">Это вызовет изменения в &lt;code&gt;controller:articles&lt;/code&gt; &amp;laquo;ы &lt;code&gt;category&lt;/code&gt; собственность для обновления &lt;code&gt;articles_category&lt;/code&gt; параметров запроса, и наоборот.</target>
        </trans-unit>
        <trans-unit id="01abb5b2dee8f3eadfbf27cf12dc694c82c9b0fa" translate="yes" xml:space="preserve">
          <source>This will combine the values of the enumerator into a single value. It is a useful way to collect a summary value from an enumeration. This corresponds to the &lt;code&gt;reduce()&lt;/code&gt; method defined in JavaScript 1.8.</source>
          <target state="translated">Это объединит значения перечислителя в одно значение. Это полезный способ получить итоговое значение из перечисления. Это соответствует методу &lt;code&gt;reduce()&lt;/code&gt; определенному в JavaScript 1.8.</target>
        </trans-unit>
        <trans-unit id="4d8eee678a37c71d0c8bd12462d3862f9e24bd5a" translate="yes" xml:space="preserve">
          <source>This will create a new &lt;code&gt;comment&lt;/code&gt; record and save it to the server. Ember Data will also update the blogPost to include our newly created comment in its &lt;code&gt;comments&lt;/code&gt; relationship.</source>
          <target state="translated">Это создаст новую запись &lt;code&gt;comment&lt;/code&gt; и сохранит ее на сервере. Ember Data также обновит blogPost, чтобы включить наш недавно созданный комментарий в его отношения &lt;code&gt;comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33c9e6435e1c4f883e5e4bdb72fe6185866b3577" translate="yes" xml:space="preserve">
          <source>This will create two files, our helper and its related test:</source>
          <target state="translated">В результате будет создано два файла,наш помощник и связанный с ним тест:</target>
        </trans-unit>
        <trans-unit id="06a61beff59c9a238e101b8d830b62a3ba3f1d36" translate="yes" xml:space="preserve">
          <source>This will display the result of &lt;code&gt;this.get('foo.item1')&lt;/code&gt; when index is 1, and &lt;code&gt;this.get('foo.item2')&lt;/code&gt; when index is 2, etc.</source>
          <target state="translated">Это отобразит результат &lt;code&gt;this.get('foo.item1')&lt;/code&gt; когда индекс равен 1, и &lt;code&gt;this.get('foo.item2')&lt;/code&gt; когда индекс равен 2 и т. Д.</target>
        </trans-unit>
        <trans-unit id="a9259ca0bb82d89e48df977ef1e42ddeb57457e8" translate="yes" xml:space="preserve">
          <source>This will generate the following file:</source>
          <target state="translated">В результате будет создан следующий файл:</target>
        </trans-unit>
        <trans-unit id="906404e31e56fa309043de215463e96251e5794e" translate="yes" xml:space="preserve">
          <source>This will only work if the record has already finished loading.</source>
          <target state="translated">Это сработает только в том случае,если запись уже завершила загрузку.</target>
        </trans-unit>
        <trans-unit id="d8d929b9d0335a3ed5cf736b11bdf433272222ee" translate="yes" xml:space="preserve">
          <source>This will result in a posts.new url of &lt;code&gt;/#/posts/new&lt;/code&gt;.</source>
          <target state="translated">Это приведет к появлению нового URL-адреса &lt;code&gt;/#/posts/new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29fb1351e61c41fb104416f7850a8b5069cdd3f6" translate="yes" xml:space="preserve">
          <source>This will result in a posts.new url of &lt;code&gt;/posts/new&lt;/code&gt; for modern browsers that support the &lt;code&gt;history&lt;/code&gt; api or &lt;code&gt;/#/posts/new&lt;/code&gt; for older ones, like Internet Explorer 9 and below.</source>
          <target state="translated">Это приведет к появлению URL-адреса posts.new для &lt;code&gt;/posts/new&lt;/code&gt; для современных браузеров, поддерживающих api &lt;code&gt;history&lt;/code&gt; или &lt;code&gt;/#/posts/new&lt;/code&gt; для старых, таких как Internet Explorer 9 и ниже.</target>
        </trans-unit>
        <trans-unit id="ef38bf8c063d320ef5caf31e346a8a11963ad798" translate="yes" xml:space="preserve">
          <source>This will result in a posts.new url of &lt;code&gt;/posts/new&lt;/code&gt;.</source>
          <target state="translated">Это приведет к появлению URL-адреса posts.new для &lt;code&gt;/posts/new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a594b83e2729c4c06fe483d9931d88196c8ca620" translate="yes" xml:space="preserve">
          <source>This will tell the JSON API adapter that requests for &lt;code&gt;formula&lt;/code&gt; should go to &lt;code&gt;/formulae/1&lt;/code&gt; instead of &lt;code&gt;/formulas/1&lt;/code&gt;, and that requests for &lt;code&gt;advice&lt;/code&gt; should go to &lt;code&gt;/advice/1&lt;/code&gt; instead of &lt;code&gt;/advices/1&lt;/code&gt;.</source>
          <target state="translated">Это сообщит адаптеру JSON API, что запросы &lt;code&gt;formula&lt;/code&gt; должны идти в &lt;code&gt;/formulae/1&lt;/code&gt; вместо &lt;code&gt;/formulas/1&lt;/code&gt; , и что запросы на &lt;code&gt;advice&lt;/code&gt; должны идти в &lt;code&gt;/advice/1&lt;/code&gt; вместо &lt;code&gt;/advices/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="388cb66fb1ec711f83c1701450ba620236ebbe6b" translate="yes" xml:space="preserve">
          <source>This will use the primitive &lt;code&gt;replace()&lt;/code&gt; method to insert an object at the specified index.</source>
          <target state="translated">Это будет использовать примитивный метод &lt;code&gt;replace()&lt;/code&gt; для вставки объекта по указанному индексу.</target>
        </trans-unit>
        <trans-unit id="43bffd1dffcb32d458aa58f02d05febe38e1f4a7" translate="yes" xml:space="preserve">
          <source>This works great for the &lt;code&gt;list-of-drafts&lt;/code&gt; component. However, your app is likely made up of many different components. On another page you may want a component to display the number of drafts. You may be tempted to copy and paste your existing &lt;code&gt;willRender&lt;/code&gt; code into the new component.</source>
          <target state="translated">Это отлично работает с компонентом &lt;code&gt;list-of-drafts&lt;/code&gt; . Однако ваше приложение, скорее всего, состоит из множества различных компонентов. На другой странице вы можете захотеть, чтобы компонент отображал количество черновиков. У вас может возникнуть соблазн скопировать и вставить существующий код &lt;code&gt;willRender&lt;/code&gt; в новый компонент.</target>
        </trans-unit>
        <trans-unit id="14da4507e84203e01b9ae7da382b3a00aaae7fdc" translate="yes" xml:space="preserve">
          <source>This would render this HTML when no title is passed to the component:</source>
          <target state="translated">Это приведет к отображению данного HTML,когда заголовок не будет передан компоненту:</target>
        </trans-unit>
        <trans-unit id="8336ed0cc011aca5ef8d79b9105deaab281f7bb6" translate="yes" xml:space="preserve">
          <source>This would render this HTML:</source>
          <target state="translated">Это бы визуализировало этот HTML:</target>
        </trans-unit>
        <trans-unit id="84006ec1fbe089f93f04790646a82cbef861bb3e" translate="yes" xml:space="preserve">
          <source>Thus when the div is clicked, the action on that context is called. Because the &lt;code&gt;actionFunction&lt;/code&gt; is just a function, closure actions can be passed between components and still execute in the correct context.</source>
          <target state="translated">Таким образом, при нажатии на div вызывается действие в этом контексте. Поскольку &lt;code&gt;actionFunction&lt;/code&gt; - это просто функция, закрывающие действия могут передаваться между компонентами и по-прежнему выполняться в правильном контексте.</target>
        </trans-unit>
        <trans-unit id="777fb441ed8a221e3154f33948c533e6c0b3cd66" translate="yes" xml:space="preserve">
          <source>Thus, many of Ember's built-in helpers (as well as your custom helpers) can be used in nested form.</source>
          <target state="translated">Таким образом,многие из встроенных помощников Ember (а также ваши пользовательские помощники)могут быть использованы во вложенной форме.</target>
        </trans-unit>
        <trans-unit id="bc09fd602f6d10a4673777c6b4fc42a255573839" translate="yes" xml:space="preserve">
          <source>Thus, the output of these combined helpers is &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">Таким образом, производительность этих комбинированных помощников равна &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8708c4922aad6bc5f7d4fb439f5a35edf457ec9" translate="yes" xml:space="preserve">
          <source>Timer information for use in canceling, see `run.cancel`.</source>
          <target state="translated">Информация о таймере для использования при отмене,см.`run.cancel`.</target>
        </trans-unit>
        <trans-unit id="ad8314f52b2f4c62535401de872ed1002612344d" translate="yes" xml:space="preserve">
          <source>Timer object to cancel</source>
          <target state="translated">Таймер возражает против отмены</target>
        </trans-unit>
        <trans-unit id="d393dc0e4b2a5c2cc44ef7e4ef9df6956f16e16f" translate="yes" xml:space="preserve">
          <source>To access a service, you can inject it in any container-resolved object such as a component or another service using the &lt;code&gt;Ember.inject.service&lt;/code&gt; function. There are two ways to use this function. You can either invoke it with no arguments, or you can pass it the registered name of the service. When no arguments are passed, the service is loaded based on the name of the variable key. You can load the shopping cart service with no arguments like below.</source>
          <target state="translated">Чтобы получить доступ к службе, вы можете внедрить ее в любой объект с разрешенным контейнером, например компонент или другую службу, используя функцию &lt;code&gt;Ember.inject.service&lt;/code&gt; . Есть два способа использовать эту функцию. Вы можете вызвать его без аргументов или передать ему зарегистрированное имя службы. Если аргументы не переданы, служба загружается на основе имени ключа переменной. Вы можете загрузить службу корзины покупок без аргументов, как показано ниже.</target>
        </trans-unit>
        <trans-unit id="ad4e497b4d36c647d22f988a7c0708a0614aef99" translate="yes" xml:space="preserve">
          <source>To add a &lt;code&gt;category&lt;/code&gt; query parameter that will filter out all the articles that haven't been categorized as popular we'd specify &lt;code&gt;'category'&lt;/code&gt; as one of &lt;code&gt;controller:article&lt;/code&gt;'s &lt;code&gt;queryParams&lt;/code&gt;:</source>
          <target state="translated">Для добавления &lt;code&gt;category&lt;/code&gt; параметра запроса , который будет отфильтровывать все статьи, которые не были отнесены к категории популярными мы указать &lt;code&gt;'category'&lt;/code&gt; в качестве одного из &lt;code&gt;controller:article&lt;/code&gt; &amp;laquo;ы &lt;code&gt;queryParams&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="64b4906525b4bd262e5a9d0ce454f20e5241165a" translate="yes" xml:space="preserve">
          <source>To add a new helper, create a file with the name of the helper you want (e.g. &lt;code&gt;format-currency.js&lt;/code&gt;) in your application's &lt;code&gt;helpers&lt;/code&gt; directory. You can also have Ember generate the file for you from the command line:</source>
          <target state="translated">Чтобы добавить новый помощник, создайте файл с именем нужного вам помощника (например, &lt;code&gt;format-currency.js&lt;/code&gt; ) в каталоге &lt;code&gt;helpers&lt;/code&gt; вашего приложения . Вы также можете заставить Ember сгенерировать файл для вас из командной строки:</target>
        </trans-unit>
        <trans-unit id="ccf70d0371c2fbff368e75db67c4c62218610aa5" translate="yes" xml:space="preserve">
          <source>To add an object to an enumerable, use the &lt;code&gt;addObject()&lt;/code&gt; method. This method will only add the object to the enumerable if the object is not already present and is of a type supported by the enumerable.</source>
          <target state="translated">Чтобы добавить объект в перечислимое, используйте метод &lt;code&gt;addObject()&lt;/code&gt; . Этот метод добавит объект в перечисляемое только в том случае, если объект еще не присутствует и имеет тип, поддерживаемый перечисляемым.</target>
        </trans-unit>
        <trans-unit id="612437c7a9dd2aab848343a115ff82b4a3a49077" translate="yes" xml:space="preserve">
          <source>To add an observer for a property, call:</source>
          <target state="translated">Чтобы добавить наблюдателя за недвижимостью,позвоните:</target>
        </trans-unit>
        <trans-unit id="64f77ec9361b31e70af01b3aeed99d505520fad8" translate="yes" xml:space="preserve">
          <source>To add functions and properties to instances of a constructor by extending the constructor's prototype see &lt;code&gt;reopen&lt;/code&gt;</source>
          <target state="translated">Чтобы добавить функции и свойства к экземплярам конструктора путем расширения прототипа конструктора, см. &lt;code&gt;reopen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbc1d24b350815efa8e5ebb0581fbf2701efa8fd" translate="yes" xml:space="preserve">
          <source>To add functions and properties to the constructor itself, see &lt;code&gt;reopenClass&lt;/code&gt;</source>
          <target state="translated">Чтобы добавить функции и свойства в сам конструктор, см. &lt;code&gt;reopenClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e1f6f236f185a772efb6540307b2e949361e3c1" translate="yes" xml:space="preserve">
          <source>To add new events to be listened to:</source>
          <target state="translated">Добавление новых событий для прослушивания:</target>
        </trans-unit>
        <trans-unit id="dd74399dd3c625fbe38e2a7a93a9e1356892dc03" translate="yes" xml:space="preserve">
          <source>To allow the &lt;code&gt;willTransition&lt;/code&gt; event to continue bubbling to the parent route, use &lt;code&gt;return true;&lt;/code&gt;. When the &lt;code&gt;willTransition&lt;/code&gt; method has a return value of &lt;code&gt;true&lt;/code&gt; then the parent route's &lt;code&gt;willTransition&lt;/code&gt; method will be fired, enabling &quot;bubbling&quot; behavior for the event.</source>
          <target state="translated">Чтобы разрешить событию &lt;code&gt;willTransition&lt;/code&gt; продолжить восходящую цепочку к родительскому маршруту, используйте &lt;code&gt;return true;&lt;/code&gt; , Когда метод &lt;code&gt;willTransition&lt;/code&gt; имеет возвращаемое значение &lt;code&gt;true&lt;/code&gt; , тогда будет &lt;code&gt;willTransition&lt;/code&gt; метод willTransition родительского маршрута , позволяющий &amp;laquo;восходящее&amp;raquo; поведение для события.</target>
        </trans-unit>
        <trans-unit id="f55c6421e541207d1e25237aa0749707b6d2ce1f" translate="yes" xml:space="preserve">
          <source>To allow the user to widen the image, we will need to add an action that toggles the value of &lt;code&gt;isWide&lt;/code&gt;. Let's call this action &lt;code&gt;toggleImageSize&lt;/code&gt;</source>
          <target state="translated">Чтобы позволить пользователю расширять изображение, нам нужно будет добавить действие, которое переключает значение &lt;code&gt;isWide&lt;/code&gt; . Назовем это действие &lt;code&gt;toggleImageSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3893ea84ac6eb7bbc9a0aae0f524ff440385112a" translate="yes" xml:space="preserve">
          <source>To annotate computed properties, use the &lt;code&gt;Ember.computed()&lt;/code&gt; method to wrap the function:</source>
          <target state="translated">Чтобы аннотировать вычисленные свойства, используйте метод &lt;code&gt;Ember.computed()&lt;/code&gt; для обертывания функции:</target>
        </trans-unit>
        <trans-unit id="8fe75361f7d4d895b287bf14c5b819b85797d1a1" translate="yes" xml:space="preserve">
          <source>To avoid this behavior, it is encouraged to initialize those arrays and object properties during &lt;code&gt;init()&lt;/code&gt;. Doing so ensures each instance will be unique.</source>
          <target state="translated">Чтобы избежать такого поведения, рекомендуется инициализировать эти массивы и свойства объектов во время &lt;code&gt;init()&lt;/code&gt; . Это гарантирует, что каждый экземпляр будет уникальным.</target>
        </trans-unit>
        <trans-unit id="7023afe6c467f1d9d8a77531b4eee7ffb2d113e8" translate="yes" xml:space="preserve">
          <source>To begin, let's generate our new component. We'll call this component &lt;code&gt;list-filter&lt;/code&gt;, since all we want our component to do is filter the list of rentals based on input.</source>
          <target state="translated">Для начала создадим наш новый компонент. Мы назовем этот компонент &lt;code&gt;list-filter&lt;/code&gt; , так как все, что мы хотим, чтобы наш компонент делал, - это фильтровать список аренды на основе ввода.</target>
        </trans-unit>
        <trans-unit id="2041c7e5184639b6652b147ff7731d4861370040" translate="yes" xml:space="preserve">
          <source>To browse addons, visit the &lt;a href=&quot;https://emberobserver.com/&quot;&gt;Ember Observer&lt;/a&gt; website. It catalogs and categorizes Ember addons that have been published to NPM and assigns them a score based on a variety of criteria.</source>
          <target state="translated">Чтобы просмотреть дополнения, посетите веб-сайт &lt;a href=&quot;https://emberobserver.com/&quot;&gt;Ember Observer&lt;/a&gt; . Он каталогизирует и классифицирует дополнения Ember, которые были опубликованы в NPM, и присваивает им оценку на основе множества критериев.</target>
        </trans-unit>
        <trans-unit id="5d2de65aa264859c42ccec965b16380ce611d54d" translate="yes" xml:space="preserve">
          <source>To change the format of the data that is sent to the backend store, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_serialize&quot;&gt;&lt;code&gt;serialize()&lt;/code&gt;&lt;/a&gt; hook. Let's say that we have this JSON API response from Ember Data:</source>
          <target state="translated">Чтобы изменить формат данных, которые отправляются в внутреннее хранилище, вы можете использовать ловушку &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_serialize&quot;&gt; &lt;code&gt;serialize()&lt;/code&gt; &lt;/a&gt; . Допустим, у нас есть этот ответ JSON API от Ember Data:</target>
        </trans-unit>
        <trans-unit id="8147260956e1d80c68ae4385b8dfaf8e846f2a9f" translate="yes" xml:space="preserve">
          <source>To check that rentals are listed with an automated test, we will create a test to visit the index route and check that the results show 3 listings.</source>
          <target state="translated">Чтобы проверить,что арендная плата указана с помощью автоматизированного теста,мы создадим тест для посещения индексного маршрута и проверим,что результаты показывают 3 списка.</target>
        </trans-unit>
        <trans-unit id="1f8255d58ff45b69a2cfcbdef10d629721ba8fc6" translate="yes" xml:space="preserve">
          <source>To clear the currently logged Promises, click on the clear icon on the top left of the tab.</source>
          <target state="translated">Чтобы очистить текущие записанные Обещания,нажмите на значок &quot;Очистить&quot; в верхней левой части вкладки.</target>
        </trans-unit>
        <trans-unit id="29f27b12694ecb81b431f0d90751a5300c28c856" translate="yes" xml:space="preserve">
          <source>To collect deprecations, first run your in-browser test suite by starting your development server and navigating to &lt;a href=&quot;http://localhost:4200/tests&quot;&gt;&lt;code&gt;http://localhost:4200/tests&lt;/code&gt;&lt;/a&gt;. If your test suite isn't fully covering your app's functionality, you may also manually exercise functionality within your app where needed. Once you've exercised the app to your satisfaction, run the following command within your browser console: &lt;code&gt;deprecationWorkflow.flushDeprecations()&lt;/code&gt;. This will print to the console JavaScript code, which you should then copy to a new file in your project called &lt;code&gt;/config/deprecation-workflow.js&lt;/code&gt;</source>
          <target state="translated">Чтобы собрать сведения об устаревших, сначала запустите свой набор тестов в браузере, запустив сервер разработки и перейдя по &lt;a href=&quot;http://localhost:4200/tests&quot;&gt; &lt;code&gt;http://localhost:4200/tests&lt;/code&gt; &lt;/a&gt; . Если ваш набор тестов не полностью покрывает функциональность вашего приложения, вы также можете вручную проверить функциональность в своем приложении, где это необходимо. После того, как вы удовлетворили приложение, выполните следующую команду в консоли браузера: &lt;code&gt;deprecationWorkflow.flushDeprecations()&lt;/code&gt; . Будет напечатан код JavaScript консоли, который затем следует скопировать в новый файл проекта с именем &lt;code&gt;/config/deprecation-workflow.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3175b38418b12c2d580746cc8cc19dc3a953fab7" translate="yes" xml:space="preserve">
          <source>To create a class-based helper, rather than exporting a simple function, you should export a subclass of &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html&quot;&gt;&lt;code&gt;Ember.Helper&lt;/code&gt;&lt;/a&gt;. Helper classes must contain a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_compute&quot;&gt;&lt;code&gt;compute&lt;/code&gt;&lt;/a&gt; method that behaves the same as the function passed to &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_helper&quot;&gt;&lt;code&gt;Ember.Helper.helper&lt;/code&gt;&lt;/a&gt;. In order to access a service, you must first inject it into the class-based helper. Once added, you can call the service's methods or access its properties from within the &lt;code&gt;compute()&lt;/code&gt; method.</source>
          <target state="translated">Чтобы создать помощник на основе классов, а не экспортировать простую функцию, вы должны экспортировать подкласс &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html&quot;&gt; &lt;code&gt;Ember.Helper&lt;/code&gt; &lt;/a&gt; . Вспомогательные классы должны содержать &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_compute&quot;&gt; &lt;code&gt;compute&lt;/code&gt; &lt;/a&gt; метод, который ведет себя так же, как функция, переданная в &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_helper&quot;&gt; &lt;code&gt;Ember.Helper.helper&lt;/code&gt; &lt;/a&gt; . Чтобы получить доступ к службе, вы должны сначала внедрить ее в помощник на основе классов. После добавления вы можете вызвать методы службы или получить доступ к ее свойствам из метода &lt;code&gt;compute()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="483b244a408fb90428d0b9a44c7fe6d9ad8692be" translate="yes" xml:space="preserve">
          <source>To create a custom error to signal a specific error state in communicating with an external API, extend the &lt;code&gt;DS.AdapterError&lt;/code&gt;. For example if the external API exclusively used HTTP &lt;code&gt;503 Service Unavailable&lt;/code&gt; to indicate it was closed for maintenance:</source>
          <target state="translated">Чтобы создать настраиваемую ошибку, сигнализирующую об определенном состоянии ошибки при взаимодействии с внешним API, расширьте &lt;code&gt;DS.AdapterError&lt;/code&gt; . Например, если внешний API использует исключительно HTTP &lt;code&gt;503 Service Unavailable&lt;/code&gt; , чтобы указать, что он закрыт на техническое обслуживание:</target>
        </trans-unit>
        <trans-unit id="5f58871b9ab756fa7fbfd2a0634d267d3a4ce8ae" translate="yes" xml:space="preserve">
          <source>To create a new instance of a &lt;code&gt;Post&lt;/code&gt; that has a relationship with a &lt;code&gt;User&lt;/code&gt; record:</source>
          <target state="translated">Чтобы создать новый экземпляр &lt;code&gt;Post&lt;/code&gt; , который связан с записью &lt;code&gt;User&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e61e0cae04fd9ad56d0c4c5698e8faa32a1f269" translate="yes" xml:space="preserve">
          <source>To create a new instance of a &lt;code&gt;Post&lt;/code&gt;:</source>
          <target state="translated">Чтобы создать новый экземпляр &lt;code&gt;Post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7fa82787ae3f63115905a224cbbd4da31001a607" translate="yes" xml:space="preserve">
          <source>To create a new project using Ember CLI, use the &lt;code&gt;new&lt;/code&gt; command. In preparation for the tutorial in the next section, you can make an app called &lt;code&gt;super-rentals&lt;/code&gt;.</source>
          <target state="translated">Чтобы создать новый проект с помощью Ember CLI, используйте &lt;code&gt;new&lt;/code&gt; команду. Готовясь к уроку в следующем разделе, вы можете создать приложение под названием &lt;code&gt;super-rentals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0507bf8200bc0fc65ea17fae004600ec931bee74" translate="yes" xml:space="preserve">
          <source>To create an acceptance test, run &lt;code&gt;ember generate acceptance-test &amp;lt;name&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">Чтобы создать приемочный тест, запустите &lt;code&gt;ember generate acceptance-test &amp;lt;name&amp;gt;&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="6546ce366ebc2a0397c0ab3926caf7dfba659cf6" translate="yes" xml:space="preserve">
          <source>To create an index nested route, run the following command:</source>
          <target state="translated">Чтобы создать индексный вложенный маршрут,выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="f16533be33b27f3dabd74f1c1a59b9369d04e94e" translate="yes" xml:space="preserve">
          <source>To customize how &lt;code&gt;JSONSerializer&lt;/code&gt; normalizes a specific response from the server, use one of the many specific &lt;code&gt;normalizeResponse&lt;/code&gt; hooks.</source>
          <target state="translated">Чтобы настроить, как &lt;code&gt;JSONSerializer&lt;/code&gt; нормализует конкретный ответ от сервера, используйте один из многих конкретных хуков &lt;code&gt;normalizeResponse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efffbb69cac955b484ca11b4daebd1d8a4b7475b" translate="yes" xml:space="preserve">
          <source>To customize how &lt;code&gt;JSONSerializer&lt;/code&gt; normalizes the whole server response, use the &lt;code&gt;normalizeResponse&lt;/code&gt; hook.</source>
          <target state="translated">Чтобы настроить, как &lt;code&gt;JSONSerializer&lt;/code&gt; нормализует весь ответ сервера, используйте ловушку &lt;code&gt;normalizeResponse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85f903926c89b490fde43d23a09ec470fcb5dc60" translate="yes" xml:space="preserve">
          <source>To customize how &lt;code&gt;JSONSerializer&lt;/code&gt; normalizes your id, attributes or relationships, use the &lt;code&gt;extractId&lt;/code&gt;, &lt;code&gt;extractAttributes&lt;/code&gt; and &lt;code&gt;extractRelationships&lt;/code&gt; hooks.</source>
          <target state="translated">Чтобы настроить, как &lt;code&gt;JSONSerializer&lt;/code&gt; нормализует ваш идентификатор, атрибуты или отношения, используйте &lt;code&gt;extractId&lt;/code&gt; , &lt;code&gt;extractAttributes&lt;/code&gt; и &lt;code&gt;extractRelationships&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba373f1b978a32c09a08e1c1a2055e76267a7a9f" translate="yes" xml:space="preserve">
          <source>To customize how a single record is normalized, use the &lt;code&gt;normalize&lt;/code&gt; hook.</source>
          <target state="translated">Чтобы настроить способ нормализации отдельной записи, используйте ловушку &lt;code&gt;normalize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="896f7618df1a2c5ae15b21da0d539bcce0c86fef" translate="yes" xml:space="preserve">
          <source>To customize metadata extraction, check out the documentation for your serializer.</source>
          <target state="translated">Чтобы настроить извлечение метаданных,ознакомьтесь с документацией к сериализатору.</target>
        </trans-unit>
        <trans-unit id="d00f2a82ea97d7698e61579522a38bad982a0f6f" translate="yes" xml:space="preserve">
          <source>To declare a many-to-many relationship between two models, use &lt;code&gt;DS.hasMany&lt;/code&gt;:</source>
          <target state="translated">Чтобы объявить отношения &amp;laquo;многие ко многим&amp;raquo; между двумя моделями, используйте &lt;code&gt;DS.hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f384718df6203efdfa0de22885112131e57b9ef5" translate="yes" xml:space="preserve">
          <source>To declare a one-to-many relationship between two models, use &lt;code&gt;DS.belongsTo&lt;/code&gt; in combination with &lt;code&gt;DS.hasMany&lt;/code&gt;, like this:</source>
          <target state="translated">Чтобы объявить отношение &amp;laquo;один ко многим&amp;raquo; между двумя моделями, используйте &lt;code&gt;DS.belongsTo&lt;/code&gt; в сочетании с &lt;code&gt;DS.hasMany&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="fd45271172de2827aec0b66ded46c1526981e4f0" translate="yes" xml:space="preserve">
          <source>To declare a one-to-one relationship between two models, use &lt;code&gt;DS.belongsTo&lt;/code&gt;:</source>
          <target state="translated">Чтобы объявить однозначную связь между двумя моделями, используйте &lt;code&gt;DS.belongsTo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="22bb95d7016d3a82a771c01b24a90740704cb355" translate="yes" xml:space="preserve">
          <source>To define a Controller, run:</source>
          <target state="translated">Чтобы определить контроллер,бегите:</target>
        </trans-unit>
        <trans-unit id="537f62c13bb7ffd878dfd54110b3a5a612606ee8" translate="yes" xml:space="preserve">
          <source>To define a component, run:</source>
          <target state="translated">Чтобы определить компонент,бегите:</target>
        </trans-unit>
        <trans-unit id="284d1b21151d2a0f19c15e660bf3d35370f288b5" translate="yes" xml:space="preserve">
          <source>To define a new Ember &lt;em&gt;class&lt;/em&gt;, call the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_extend&quot;&gt;&lt;code&gt;extend()&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt;&lt;code&gt;Ember.Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Чтобы определить новый &lt;em&gt;класс&lt;/em&gt; Ember , вызовите метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_extend&quot;&gt; &lt;code&gt;extend()&lt;/code&gt; &lt;/a&gt; для &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt; &lt;code&gt;Ember.Object&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="820da85f7f75fe525eb448c437bc45950e1f888d" translate="yes" xml:space="preserve">
          <source>To define a route, run</source>
          <target state="translated">Чтобы определить маршрут,бегите</target>
        </trans-unit>
        <trans-unit id="e7d7b2d08cd1de85998600ba46809350abc299b9" translate="yes" xml:space="preserve">
          <source>To deploy an Ember application simply transfer the output from &lt;code&gt;ember build&lt;/code&gt; to a web server. This can be done with standard Unix file transfer tools such as &lt;code&gt;rsync&lt;/code&gt; or &lt;code&gt;scp&lt;/code&gt;. There are also services that will let you deploy easily.</source>
          <target state="translated">Чтобы развернуть приложение Ember, просто &lt;code&gt;ember build&lt;/code&gt; на веб-сервер. Это можно сделать с помощью стандартных инструментов передачи файлов Unix, таких как &lt;code&gt;rsync&lt;/code&gt; или &lt;code&gt;scp&lt;/code&gt; . Есть также сервисы, которые позволят вам легко развернуть.</target>
        </trans-unit>
        <trans-unit id="065fd99d1476baffa1b82c4b08460d031141cb32" translate="yes" xml:space="preserve">
          <source>To deploy to the same URL after making changes, perform the same steps, reusing the same domain as before.</source>
          <target state="translated">Чтобы развернуть на тот же URL после внесения изменений,выполните те же шаги,повторно используя тот же домен,что и раньше.</target>
        </trans-unit>
        <trans-unit id="6734a6e5bb3c4c06ddac515519b73ca33307818c" translate="yes" xml:space="preserve">
          <source>To disable bubbling with closure style actions you must create your own wrapper helper that makes use of &lt;code&gt;event.stopPropagation()&lt;/code&gt;:</source>
          <target state="translated">Чтобы отключить всплытие с помощью действий стиля закрытия, вы должны создать свой собственный помощник-оболочку, который использует &lt;code&gt;event.stopPropagation()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="03d431777776d94843205036e89382929b67b7df" translate="yes" xml:space="preserve">
          <source>To disable bubbling, pass &lt;code&gt;bubbles=false&lt;/code&gt; to the helper:</source>
          <target state="translated">Чтобы отключить всплытие, передайте помощнику &lt;code&gt;bubbles=false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="83f92bbd711ff46b48c7b3053ad6815ca742a2e1" translate="yes" xml:space="preserve">
          <source>To dispatch an action on specific events, such as &lt;code&gt;enter&lt;/code&gt; or &lt;code&gt;key-press&lt;/code&gt;, use the following</source>
          <target state="translated">Чтобы выполнить действие для определенных событий, таких как &lt;code&gt;enter&lt;/code&gt; или &lt;code&gt;key-press&lt;/code&gt; , используйте следующие</target>
        </trans-unit>
        <trans-unit id="53be2d3cee464dda29e541bcc47ec4c0a39972d4" translate="yes" xml:space="preserve">
          <source>To do so, run the following command:</source>
          <target state="translated">Для этого выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="0711a711e6a702ee3f035ad582cb0f83d0ea3111" translate="yes" xml:space="preserve">
          <source>To do so, simply set the &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Для этого просто установите для флага &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="642b3e926c752f7b1f53ecb9a54d25f0d597ad8b" translate="yes" xml:space="preserve">
          <source>To do that, replace occurrences of &lt;code&gt;/list-rentals&lt;/code&gt; in the generated test with &lt;code&gt;/&lt;/code&gt;. The test will start our app at the base url, &lt;code&gt;http://localhost:4200/&lt;/code&gt;, and then do a basic check that the page has finished loading and that the url is what we want it to be.</source>
          <target state="translated">Для этого замените в сгенерированном тесте вхождения &lt;code&gt;/list-rentals&lt;/code&gt; на &lt;code&gt;/&lt;/code&gt; . Тест запустит наше приложение по базовому URL- &lt;code&gt;http://localhost:4200/&lt;/code&gt; , http: // localhost: 4200 / , а затем выполнит базовую проверку того, что страница завершила загрузку и что URL-адрес соответствует нашему желанию.</target>
        </trans-unit>
        <trans-unit id="1df522ee440a55de68e6a9dd8378f737af37e593" translate="yes" xml:space="preserve">
          <source>To do that, we modify our route as follows:</source>
          <target state="translated">Для этого мы изменяем наш маршрут следующим образом:</target>
        </trans-unit>
        <trans-unit id="077ff282e23889aeeea0b97f0141bf14b2b23e54" translate="yes" xml:space="preserve">
          <source>To do that, we'll use a &lt;a href=&quot;https://guides.emberjs.com/templates/links/&quot;&gt;&lt;code&gt;{{link-to}}&lt;/code&gt;&lt;/a&gt; helper that Ember provides that makes it easy to link between our routes. Let's adjust our &lt;code&gt;about.hbs&lt;/code&gt; file:</source>
          <target state="translated">Для этого мы будем использовать помощник &lt;a href=&quot;https://guides.emberjs.com/templates/links/&quot;&gt; &lt;code&gt;{{link-to}}&lt;/code&gt; &lt;/a&gt; , предоставляемый Ember, который упрощает связывание наших маршрутов. &lt;code&gt;about.hbs&lt;/code&gt; наш файл about.hbs :</target>
        </trans-unit>
        <trans-unit id="d87c2ae1d29eef6f28426678419f6574ae578e14" translate="yes" xml:space="preserve">
          <source>To embed the &lt;code&gt;ids&lt;/code&gt; for a related object (using a hasMany relationship):</source>
          <target state="translated">Чтобы встроить &lt;code&gt;ids&lt;/code&gt; для связанного объекта (с использованием отношения hasMany):</target>
        </trans-unit>
        <trans-unit id="7b266ec9d9020d51490a793b222a2e15e77408c1" translate="yes" xml:space="preserve">
          <source>To embed the relationship as a collection of objects with &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; keys, set &lt;code&gt;ids-and-types&lt;/code&gt; for the related object.</source>
          <target state="translated">Чтобы внедрить отношение как набор объектов с &lt;code&gt;id&lt;/code&gt; и ключами &lt;code&gt;type&lt;/code&gt; , установите &lt;code&gt;ids-and-types&lt;/code&gt; для связанного объекта.</target>
        </trans-unit>
        <trans-unit id="d4dbe3553d2c10be5b18402a6280f709c7557952" translate="yes" xml:space="preserve">
          <source>To enable support for data attributes an attribute binding must be added to the component, e.g. &lt;a href=&quot;http://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt;&lt;code&gt;Ember.LinkComponent&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;&lt;code&gt;Ember.TextField&lt;/code&gt;&lt;/a&gt; for the specific attribute:</source>
          <target state="translated">Чтобы включить поддержку атрибутов данных, к компоненту необходимо добавить привязку атрибута, например &lt;a href=&quot;http://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt; &lt;code&gt;Ember.LinkComponent&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;http://emberjs.com/api/classes/Ember.TextField.html&quot;&gt; &lt;code&gt;Ember.TextField&lt;/code&gt; &lt;/a&gt; для конкретного атрибута:</target>
        </trans-unit>
        <trans-unit id="cb5f57bc075f6cf1a9892170f5cc300d7a2ec2da" translate="yes" xml:space="preserve">
          <source>To enable the Tomster icon to show up in the URL bar whenever you are visiting a site that uses Ember visit &lt;code&gt;about:addons&lt;/code&gt;.</source>
          <target state="translated">Чтобы значок Tomster отображался в строке URL-адреса всякий раз, когда вы посещаете сайт, который использует Ember, посетите &lt;code&gt;about:addons&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52c2b2d458eaa991122169345b898417f6372aad" translate="yes" xml:space="preserve">
          <source>To enable this mode you can set:</source>
          <target state="translated">Для включения этого режима можно установить:</target>
        </trans-unit>
        <trans-unit id="d3e54ffc59a679009cd71018fbf20dc2908c33d0" translate="yes" xml:space="preserve">
          <source>To enumerate all the values of an enumerable object, use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Чтобы перечислить все значения перечислимого объекта, используйте метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e247d282c81bce4351bac12e80aee643f2064371" translate="yes" xml:space="preserve">
          <source>To facilitate pluralizing model names when generating route urls Ember Data comes bundled with &lt;a href=&quot;https://github.com/stefanpenner/ember-inflector&quot;&gt;Ember Inflector&lt;/a&gt;, an ActiveSupport::Inflector compatible library for inflecting words between plural and singular forms. Irregular or uncountable pluralizations can be specified via &lt;code&gt;Ember.Inflector.inflector&lt;/code&gt;. A common way to do this is:</source>
          <target state="translated">Чтобы облегчить формирование множественного числа имен моделей при генерации URL-адресов маршрутов, Ember Data поставляется в комплекте с &lt;a href=&quot;https://github.com/stefanpenner/ember-inflector&quot;&gt;Ember Inflector&lt;/a&gt; , библиотекой, совместимой с ActiveSupport :: Inflector, для изменения слов между формами множественного и единственного числа. Нерегулярные или бесчисленные множественные числа могут быть указаны через &lt;code&gt;Ember.Inflector.inflector&lt;/code&gt; . Обычный способ сделать это:</target>
        </trans-unit>
        <trans-unit id="89387035491e2b9779d432c33ff0f9bc1db9ee30" translate="yes" xml:space="preserve">
          <source>To facilitate this, Ember provides the &lt;code&gt;@each&lt;/code&gt; key illustrated below:</source>
          <target state="translated">Чтобы облегчить это, Ember предоставляет ключ &lt;code&gt;@each&lt;/code&gt; , показанный ниже:</target>
        </trans-unit>
        <trans-unit id="d181f0d9ef256075afc193e940cb2778cc125a3c" translate="yes" xml:space="preserve">
          <source>To fetch an instantiated factory from the running application you can call the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ApplicationInstance.html#method_lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; method on an application instance. This method takes a string to identify a factory and returns the appropriate object.</source>
          <target state="translated">Чтобы получить экземпляр фабрики из запущенного приложения, вы можете вызвать метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ApplicationInstance.html#method_lookup&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt; в экземпляре приложения. Этот метод принимает строку для идентификации фабрики и возвращает соответствующий объект.</target>
        </trans-unit>
        <trans-unit id="8d1f23fd8117e1414f047abb53730ce2c42e57e9" translate="yes" xml:space="preserve">
          <source>To filter the logs, type a query in the search box.</source>
          <target state="translated">Чтобы отфильтровать журналы,введите запрос в поле поиска.</target>
        </trans-unit>
        <trans-unit id="b9c9e9ecb077e7d53718dabf283948eae57a0fe4" translate="yes" xml:space="preserve">
          <source>To find out whether at least one item in an enumerable matches some condition, you can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_any&quot;&gt;&lt;code&gt;any()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Чтобы узнать, соответствует ли хотя бы один элемент перечислимого некоторому условию, вы можете использовать метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_any&quot;&gt; &lt;code&gt;any()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4c63511432e85445a8b4de943b86b4ff86b52bda" translate="yes" xml:space="preserve">
          <source>To find out whether every item in an enumerable matches some condition, you can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_every&quot;&gt;&lt;code&gt;every()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Чтобы узнать, соответствует ли каждый элемент перечислимого некоторому условию, вы можете использовать метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_every&quot;&gt; &lt;code&gt;every()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="06062dde08f65defee01d144c5693a07b8897c5e" translate="yes" xml:space="preserve">
          <source>To find the elements that have a class called &lt;code&gt;listing&lt;/code&gt;, we'll use a test helper called &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_find&quot;&gt;find&lt;/a&gt;. The &lt;code&gt;find&lt;/code&gt; function returns the elements that match the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSS selector&lt;/a&gt;. In this case it will return an array of all the elements with a class called &lt;code&gt;listing&lt;/code&gt;.</source>
          <target state="translated">Чтобы найти элементы, у которых есть класс с именем &lt;code&gt;listing&lt;/code&gt; , мы будем использовать помощник по тестированию с именем &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_find&quot;&gt;find&lt;/a&gt; . Функция &lt;code&gt;find&lt;/code&gt; возвращает элементы, которые соответствуют заданному &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;селектору CSS&lt;/a&gt; . В этом случае он вернет массив всех элементов с классом под названием &lt;code&gt;listing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fd9f8a52de87bee0c288eaed67d1f195e5f6ddf" translate="yes" xml:space="preserve">
          <source>To fix this add a file called '.htaccess' to the root folder of your website. Add these lines:</source>
          <target state="translated">Чтобы исправить это,добавьте файл под названием .htaccess в корневую папку вашего сайта.Добавьте эти строки:</target>
        </trans-unit>
        <trans-unit id="dc22e48a36a2fa58e492a5c1d7190654605ab3b1" translate="yes" xml:space="preserve">
          <source>To get around these problems, you should make use of &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_once&quot;&gt;&lt;code&gt;Ember.run.once()&lt;/code&gt;&lt;/a&gt;. This will ensure that any processing you need to do only happens once, and happens in the next run loop once all bindings are synchronized:</source>
          <target state="translated">Чтобы обойти эти проблемы, вам следует использовать &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_once&quot;&gt; &lt;code&gt;Ember.run.once()&lt;/code&gt; &lt;/a&gt; . Это гарантирует, что любая обработка, которую вам нужно выполнить, произойдет только один раз и произойдет в следующем цикле выполнения после того, как все привязки будут синхронизированы:</target>
        </trans-unit>
        <trans-unit id="0c5c7f3992c8b26c72a8ca9516e0759dd90b734e" translate="yes" xml:space="preserve">
          <source>To get different &lt;em&gt;pages&lt;/em&gt; of data, you'd simply change your offset in increments of 10. So far, so good. But how do you know how many pages of data you have? Your server would need to return the total number of records as a piece of metadata.</source>
          <target state="translated">Чтобы получить разные &lt;em&gt;страницы&lt;/em&gt; данных, вы просто измените смещение с шагом 10. Пока все хорошо. Но как узнать, сколько страниц данных у вас есть? Вашему серверу необходимо будет вернуть общее количество записей в виде метаданных.</target>
        </trans-unit>
        <trans-unit id="f2a4e5cc694d3be2b7e400ea560253d1f71eaa5c" translate="yes" xml:space="preserve">
          <source>To get multiple properties at once, call &lt;code&gt;Ember.getProperties&lt;/code&gt; with an object followed by a list of strings or an array:</source>
          <target state="translated">Чтобы получить сразу несколько свойств, вызовите &lt;code&gt;Ember.getProperties&lt;/code&gt; с объектом, за которым следует список строк или массив:</target>
        </trans-unit>
        <trans-unit id="52ae9585ef4ff335f0b0a68e5513ed3dbe6488ec" translate="yes" xml:space="preserve">
          <source>To get started, let's generate a helper for &lt;code&gt;rental-property-type&lt;/code&gt;:</source>
          <target state="translated">Для начала создадим помощника для типа &lt;code&gt;rental-property-type&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73b15a2e4a984f27699d34f68a905af2183041a0" translate="yes" xml:space="preserve">
          <source>To get the most use out of a component, it is important to understand these lifecycle methods.</source>
          <target state="translated">Чтобы получить максимальную отдачу от компонента,важно понимать эти методы жизненного цикла.</target>
        </trans-unit>
        <trans-unit id="8e28feb25417f98b442624123c65f66c40e988f2" translate="yes" xml:space="preserve">
          <source>To get the values of multiple properties at once, call &lt;code&gt;getProperties&lt;/code&gt; with a list of strings or an array:</source>
          <target state="translated">Чтобы получить значения нескольких свойств одновременно, вызовите &lt;code&gt;getProperties&lt;/code&gt; со списком строк или массивом:</target>
        </trans-unit>
        <trans-unit id="7806e1c587e05f08b69393f6478019cb19942b1e" translate="yes" xml:space="preserve">
          <source>To handle this function call you need to modify the &lt;code&gt;people-list&lt;/code&gt; component file to add the function to be called. In the component, add an &lt;code&gt;actions&lt;/code&gt; object with a &lt;code&gt;showPerson&lt;/code&gt; function that alerts the first argument.</source>
          <target state="translated">Чтобы обработать этот вызов функции, вам необходимо изменить файл компонента &lt;code&gt;people-list&lt;/code&gt; чтобы добавить вызываемую функцию. В компоненте добавьте объект &lt;code&gt;actions&lt;/code&gt; с функцией &lt;code&gt;showPerson&lt;/code&gt; , которая предупреждает первый аргумент.</target>
        </trans-unit>
        <trans-unit id="5416b7eb8dce5acb1c8efef4e78276fe44c883b2" translate="yes" xml:space="preserve">
          <source>To have your route do something beyond render a template with the same name, you'll need to create a route handler. The following guides will explore the different features of route handlers. For more information on routes, see the API documentation for &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Router.html&quot;&gt;the router&lt;/a&gt; and for &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html&quot;&gt;route handlers&lt;/a&gt;.</source>
          <target state="translated">Чтобы ваш маршрут выполнял какие-либо действия, помимо визуализации шаблона с тем же именем, вам необходимо создать обработчик маршрута. В следующих руководствах будут рассмотрены различные функции обработчиков маршрутов. Дополнительные сведения о маршрутах см. В документации API для &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Router.html&quot;&gt;маршрутизатора&lt;/a&gt; и &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html&quot;&gt;обработчиков маршрутов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37017a8822c89a19516c602dcc48cbd220d1dbfb" translate="yes" xml:space="preserve">
          <source>To implement the &lt;code&gt;filter&lt;/code&gt; function to do the actual filter of rentals by city, we'll create a &lt;code&gt;rentals&lt;/code&gt; controller. &lt;a href=&quot;https://guides.emberjs.com/controllers/&quot;&gt;Controllers&lt;/a&gt; contain actions and properties available to the template of its corresponding route. In our case we want to generate a controller called &lt;code&gt;rentals&lt;/code&gt;. Ember will know that a controller with the name of &lt;code&gt;rentals&lt;/code&gt; will apply to the route with the same name.</source>
          <target state="translated">Чтобы реализовать функцию &lt;code&gt;filter&lt;/code&gt; для фактического фильтрования аренды по городу, мы создадим контроллер &lt;code&gt;rentals&lt;/code&gt; . &lt;a href=&quot;https://guides.emberjs.com/controllers/&quot;&gt;Контроллеры&lt;/a&gt; содержат действия и свойства, доступные для шаблона соответствующего маршрута. В нашем случае мы хотим создать контроллер под названием &lt;code&gt;rentals&lt;/code&gt; . Ember будет знать, что контроллер с именем &lt;code&gt;rentals&lt;/code&gt; будет применяться к маршруту с таким же именем.</target>
        </trans-unit>
        <trans-unit id="db39c8ec99de08b269bbe4798a73309f9f804b4b" translate="yes" xml:space="preserve">
          <source>To improve the network performance of your application, you can optimize your adapter by overriding these lower-level methods:</source>
          <target state="translated">Чтобы улучшить производительность сети вашего приложения,вы можете оптимизировать адаптер,переопределив эти методы более низкого уровня:</target>
        </trans-unit>
        <trans-unit id="8cdcf89a4a448babacd6de864831466ba71fbff2" translate="yes" xml:space="preserve">
          <source>To iterate over a list of items, use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each&quot;&gt;&lt;code&gt;{{#each}}&lt;/code&gt;&lt;/a&gt; helper. The first argument to this helper is the array to be iterated, and the value being iterated is yielded as a block param. Block params are only available inside the block of their helper.</source>
          <target state="translated">Чтобы перебрать список элементов, используйте помощник &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each&quot;&gt; &lt;code&gt;{{#each}}&lt;/code&gt; &lt;/a&gt; . Первым аргументом этого помощника является массив для итерации, а повторяемое значение выдается как параметр блока. Параметры блока доступны только внутри блока их помощника.</target>
        </trans-unit>
        <trans-unit id="05f24d5f6782acbbef958bb70776badee1ad078d" translate="yes" xml:space="preserve">
          <source>To learn more about the events Ember components use, see &lt;a href=&quot;https://guides.emberjs.com/v2.6.0/components/handling-events/#toc_event-names&quot;&gt;components/handling-events&lt;/a&gt;.</source>
          <target state="translated">Чтобы узнать больше о событиях, которые используют компоненты Ember, см. &lt;a href=&quot;https://guides.emberjs.com/v2.6.0/components/handling-events/#toc_event-names&quot;&gt;Components / processing-events&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1d4e80f03459d1f52f2363e1225daa9d4f187cf" translate="yes" xml:space="preserve">
          <source>To limit the test to validating only its own behavior and not the service, we'll take advantage of the registration API to register a stub maps service. That way when Ember injects the map service into the component, it uses our fake service instead of the real one.</source>
          <target state="translated">Чтобы ограничить тест проверкой только собственного поведения,а не сервиса,мы воспользуемся регистрационным API для регистрации сервиса карт корешков.Таким образом,когда Ember вставляет сервис карт в компонент,он использует наш фальшивый сервис вместо настоящего.</target>
        </trans-unit>
        <trans-unit id="77755e062047f1b190e24cc4c004d477b633a1d4" translate="yes" xml:space="preserve">
          <source>To load a model for the &lt;code&gt;favorite-posts&lt;/code&gt; route, you would use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_model&quot;&gt;&lt;code&gt;model()&lt;/code&gt;&lt;/a&gt; hook in the &lt;code&gt;favorite-posts&lt;/code&gt; route handler:</source>
          <target state="translated">Чтобы загрузить модель для маршрута &lt;code&gt;favorite-posts&lt;/code&gt; , вы должны использовать хук &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_model&quot;&gt; &lt;code&gt;model()&lt;/code&gt; &lt;/a&gt; в обработчике маршрута &lt;code&gt;favorite-posts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f654c2cf3da300af867e72e2bd26f7caf007cd2a" translate="yes" xml:space="preserve">
          <source>To make the most out of the guides, you should have a working knowledge of:</source>
          <target state="translated">Чтобы извлечь максимум пользы из справочников,вы должны обладать практическими знаниями:</target>
        </trans-unit>
        <trans-unit id="c0de715ec4bdc05fe56d9fee36be46b5f31b2be4" translate="yes" xml:space="preserve">
          <source>To make your own custom class enumerable, you need two items:</source>
          <target state="translated">Чтобы сделать свой собственный пользовательский класс перечисляемым,вам понадобятся два элемента:</target>
        </trans-unit>
        <trans-unit id="1c466dfb41d5e397019aa3e58144514a595ced70" translate="yes" xml:space="preserve">
          <source>To match multiple routes 'space-separate' the routes:</source>
          <target state="translated">Для сопоставления нескольких маршрутов &quot;пробел-разделение&quot;:</target>
        </trans-unit>
        <trans-unit id="13060a627addc391f25235a99ca3db1518034089" translate="yes" xml:space="preserve">
          <source>To measure components and templates that are rendered on initial application boot, click on the &quot;Reload&quot; button at the top. This button ensures that the Inspector starts measuring render times when your app boots.</source>
          <target state="translated">Для измерения компонентов и шаблонов,которые выводятся при начальной загрузке приложения,нажмите кнопку &quot;Перезагрузить&quot; в верхней части.Эта кнопка гарантирует,что Инспектор начнет измерять время рендеринга при загрузке приложения.</target>
        </trans-unit>
        <trans-unit id="dc09e7ab0122ed1f10aad8febf2686e9ee8f8063" translate="yes" xml:space="preserve">
          <source>To normalize only a single model, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalize&quot;&gt;&lt;code&gt;normalize()&lt;/code&gt;&lt;/a&gt; hook similarly.</source>
          <target state="translated">Чтобы нормализовать только одну модель, вы можете аналогичным образом использовать хук &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalize&quot;&gt; &lt;code&gt;normalize()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b36d9c0d96220aa91e734666c278c544e5c33712" translate="yes" xml:space="preserve">
          <source>To open the Inspector, click on the new bookmark. Safari blocks popups by default, so you'll need to enable popups before using the bookmarklet.</source>
          <target state="translated">Чтобы открыть Инспектор,нажмите на новую закладку.Safari блокирует всплывающие окна по умолчанию,поэтому перед использованием закладки необходимо включить всплывающие окна.</target>
        </trans-unit>
        <trans-unit id="e32951622e512a5e2dbbf6daeb91928456978164" translate="yes" xml:space="preserve">
          <source>To override this method with a custom one, make sure to call &lt;code&gt;return this._super(store, primaryModelClass, payload, id, requestType)&lt;/code&gt; with your pre-processed data.</source>
          <target state="translated">Чтобы заменить этот метод пользовательским, обязательно вызовите &lt;code&gt;return this._super(store, primaryModelClass, payload, id, requestType)&lt;/code&gt; с вашими предварительно обработанными данными.</target>
        </trans-unit>
        <trans-unit id="643424ccbff431db940e6db1682aad8fbb931a53" translate="yes" xml:space="preserve">
          <source>To override this option for your entire application, see &quot;Overriding Application-wide Defaults&quot;.</source>
          <target state="translated">Чтобы отменить эту опцию для всего приложения,см.раздел &quot;Преимущественные значения по умолчанию для всего приложения&quot;.</target>
        </trans-unit>
        <trans-unit id="e7b7de1f5b2acd114aa92dfc71c79109066e6419" translate="yes" xml:space="preserve">
          <source>To pass multiple arguments to a helper, add them as a space-separated list after the helper name:</source>
          <target state="translated">Чтобы передать несколько аргументов помощнику,добавьте их как разделенный пробелами список после имени помощника:</target>
        </trans-unit>
        <trans-unit id="782db8348bb156313d7ba95741850dae22fcade0" translate="yes" xml:space="preserve">
          <source>To prevent Ember from setting up a listener for a default event, specify the event name with a &lt;code&gt;null&lt;/code&gt; value in the &lt;code&gt;customEvents&lt;/code&gt; property:</source>
          <target state="translated">Чтобы Ember не настраивал прослушиватель для события по умолчанию, укажите имя события с &lt;code&gt;null&lt;/code&gt; значением в свойстве &lt;code&gt;customEvents&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7ad2dcdf74eb53253ee43f5d7112c03d7ee0c5cc" translate="yes" xml:space="preserve">
          <source>To prevent default events from being listened to:</source>
          <target state="translated">Для предотвращения прослушивания событий по умолчанию:</target>
        </trans-unit>
        <trans-unit id="d140dc02f52e1fafe21fbb1f3e0a87899ed55913" translate="yes" xml:space="preserve">
          <source>To prevent setting an attribute altogether, use &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; as the return value of the &lt;code&gt;attributeBindings&lt;/code&gt; monitored property:</source>
          <target state="translated">Чтобы предотвратить установку атрибута в целом, используйте значение &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; в качестве возвращаемого значения отслеживаемого свойства &lt;code&gt;attributeBindings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88949b439b77da8a131b94c8c49c2264eabd59cf" translate="yes" xml:space="preserve">
          <source>To protect your application from cross-site scripting attacks (XSS), Ember automatically escapes any value you return from a helper so that the browser will not interpret it as HTML.</source>
          <target state="translated">Чтобы защитить ваше приложение от межсайтовых скриптовых атак (XSS),Ember автоматически экранирует любое возвращаемое вами значение от помощника,чтобы браузер не интерпретировал его как HTML.</target>
        </trans-unit>
        <trans-unit id="410e671fa5ad1d60ce482717f4854a77655715ac" translate="yes" xml:space="preserve">
          <source>To provide a &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; to the above template, properties must be added to the application controller. If you are following along with an Ember CLI application, you may need to create this file:</source>
          <target state="translated">Чтобы предоставить &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; указанному выше шаблону, необходимо добавить свойства в контроллер приложения. Если вы используете приложение Ember CLI, вам может потребоваться создать этот файл:</target>
        </trans-unit>
        <trans-unit id="29f27a0e8e02bfdfa170f1d9c3e3d514551a7d10" translate="yes" xml:space="preserve">
          <source>To push a record into the store, call the store's &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Чтобы отправить запись в магазин, вызовите метод магазина &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a185e83c481228539f24bb1c09c6b0245f73852" translate="yes" xml:space="preserve">
          <source>To remove a &lt;code&gt;belongsTo&lt;/code&gt; relationship, we can set it to &lt;code&gt;null&lt;/code&gt;, which will also remove it from the &lt;code&gt;hasMany&lt;/code&gt; side:</source>
          <target state="translated">Чтобы удалить отношение &lt;code&gt;belongsTo&lt;/code&gt; , мы можем установить для него значение &lt;code&gt;null&lt;/code&gt; , что также удалит его со стороны &lt;code&gt;hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="432349a69d598accb34ee2c2bc3e7748a2394e9f" translate="yes" xml:space="preserve">
          <source>To remove an object from an enumerable, use the &lt;code&gt;removeObject()&lt;/code&gt; method. This will only remove the object if it is present in the enumerable, otherwise this method has no effect.</source>
          <target state="translated">Чтобы удалить объект из перечислимого, используйте метод &lt;code&gt;removeObject()&lt;/code&gt; . Это приведет к удалению объекта только в том случае, если он присутствует в перечисляемом, иначе этот метод не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="7d9de26d22f9d5fddcc6b008df4be9a302d40e54" translate="yes" xml:space="preserve">
          <source>To represent the children as IDs:</source>
          <target state="translated">Представлять детей в качестве удостоверений личности:</target>
        </trans-unit>
        <trans-unit id="96baf3260095c6e999a09f07d2439de39521a921" translate="yes" xml:space="preserve">
          <source>To represent the children relationship as a URL:</source>
          <target state="translated">Представлять отношения с детьми в виде URL-адреса:</target>
        </trans-unit>
        <trans-unit id="61b2e6985c9d49eab39fc6b2473ca71648f4f595" translate="yes" xml:space="preserve">
          <source>To run a subset of your tests by title use the &lt;code&gt;--filter&lt;/code&gt; option. Quickly test your current work &lt;code&gt;ember test --filter=&quot;dashboard&quot;&lt;/code&gt;, or only run a certain type of test &lt;code&gt;ember test --filter=&quot;integration&quot;&lt;/code&gt;. When using QUnit it is possible to exclude tests by adding an exclamation point to the beginning of the filter &lt;code&gt;ember test --filter=&quot;!acceptance&quot;&lt;/code&gt;.</source>
          <target state="translated">Чтобы запустить подмножество тестов по заголовку, используйте параметр &lt;code&gt;--filter&lt;/code&gt; . Быстро протестируйте свой текущий рабочий &lt;code&gt;ember test --filter=&quot;dashboard&quot;&lt;/code&gt; или запустите только определенный тип тестового &lt;code&gt;ember test --filter=&quot;integration&quot;&lt;/code&gt; . При использовании QUnit можно исключить тесты, добавив восклицательный знак в начале фильтра &lt;code&gt;ember test --filter=&quot;!acceptance&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1886972c9e7e9a4f558bbcd67fc568ef5594acf6" translate="yes" xml:space="preserve">
          <source>To see a list of libraries used in your application, click on the &lt;code&gt;Info&lt;/code&gt; menu. This view displays the libraries used, along with their version.</source>
          <target state="translated">Чтобы увидеть список библиотек, используемых в вашем приложении, щелкните меню &amp;laquo; &lt;code&gt;Info&lt;/code&gt; . В этом представлении отображаются используемые библиотеки и их версии.</target>
        </trans-unit>
        <trans-unit id="bd3f95548b425d3595dc1e5a7a281f78a35f8f4c" translate="yes" xml:space="preserve">
          <source>To see how a template was rendered by Ember, click on the template in the View Tree. If you're using Chrome or Firefox, you'll be sent to the Elements panel with that DOM element selected.</source>
          <target state="translated">Чтобы посмотреть,как шаблон был отображен Эмбер,щелкните по шаблону в Дереве Видов.Если вы используете Chrome или Firefox,вы будете отправлены на панель Elements с выбранным элементом DOM.</target>
        </trans-unit>
        <trans-unit id="e44b68c60f76b61bbdf60c921597a9cf8aad1469" translate="yes" xml:space="preserve">
          <source>To see the full list of computed property macros, have a look at &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;the API documentation&lt;/a&gt;</source>
          <target state="translated">Чтобы увидеть полный список макросов вычисляемых свойств, ознакомьтесь с &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;документацией по API.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10d1aa4aa9fe506d80116cddb13e609d02185dad" translate="yes" xml:space="preserve">
          <source>To set the component up to receive parameters this way, you need to set the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#property_positionalParams&quot;&gt;&lt;code&gt;positionalParams&lt;/code&gt;&lt;/a&gt; attribute in your component class.</source>
          <target state="translated">Чтобы настроить компонент для получения параметров таким образом, вам необходимо установить атрибут &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#property_positionalParams&quot;&gt; &lt;code&gt;positionalParams&lt;/code&gt; &lt;/a&gt; в своем классе компонента.</target>
        </trans-unit>
        <trans-unit id="844e0103c86e1064d969400e55f8cbd4212c42ec" translate="yes" xml:space="preserve">
          <source>To set up embedded records, include the mixin when extending a serializer then define and configure embedded relationships.</source>
          <target state="translated">Чтобы настроить встроенные записи,включите смесь при расширении сериализатора,а затем определите и настройте встроенные связи.</target>
        </trans-unit>
        <trans-unit id="7823165518baac275622086e0a64947c8412aa36" translate="yes" xml:space="preserve">
          <source>To set up embedded records, include the mixin when extending a serializer, then define and configure embedded (model) relationships.</source>
          <target state="translated">Чтобы настроить встроенные записи,включите смесь при расширении сериалайзера,затем определите и настройте встроенные (модельные)отношения.</target>
        </trans-unit>
        <trans-unit id="04b6c1283408d9d9cea206ac24ad417174a73fb9" translate="yes" xml:space="preserve">
          <source>To show an error from the server related to the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; properties your adapter could return a promise that rejects with a &lt;code&gt;DS.InvalidError&lt;/code&gt; object that looks like this:</source>
          <target state="translated">Чтобы показать ошибку сервера, связанную со свойствами &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;content&lt;/code&gt; ваш адаптер может вернуть обещание, которое отклоняется с помощью объекта &lt;code&gt;DS.InvalidError&lt;/code&gt; , который выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="4d22fb46ffa697dab0c28d5708fe886c943fb273" translate="yes" xml:space="preserve">
          <source>To show something on every page, we can use the application template (which we edited earlier). Let's open it again (&lt;code&gt;/app/templates/application.hbs&lt;/code&gt;) and replace its contents with the following:</source>
          <target state="translated">Чтобы показать что-то на каждой странице, мы можем использовать шаблон приложения (который мы редактировали ранее). Давайте откроем его снова ( &lt;code&gt;/app/templates/application.hbs&lt;/code&gt; ) и заменим его содержимое следующим:</target>
        </trans-unit>
        <trans-unit id="ce4f53072b200771a6bd1a485f9c6358e79dc97f" translate="yes" xml:space="preserve">
          <source>To show the basic setup of an Ember application, we'll walk through building an app for a property rental site called Super Rentals. We'll start with a homepage, an about page and a contact page.</source>
          <target state="translated">Чтобы показать базовую настройку приложения Ember,мы пройдем через строительство приложения для сайта по аренде недвижимости под названием Super Rentals.Мы начнем с домашней страницы,страницы о сайте и контактной страницы.</target>
        </trans-unit>
        <trans-unit id="1c27517c0e2be0e963976ab64dbcdf375c7c6419" translate="yes" xml:space="preserve">
          <source>To specify that a parameter is mutable, when invoking the child &lt;code&gt;Component&lt;/code&gt;:</source>
          <target state="translated">Чтобы указать, что параметр является изменяемым, при вызове дочернего &lt;code&gt;Component&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7ca79710a45c8aed09d51d44e598c3593126facf" translate="yes" xml:space="preserve">
          <source>To stub the location service in your test, create a local stub object that extends &lt;code&gt;Ember.Service&lt;/code&gt;, and register the stub as the service your tests need in the beforeEach function. In this case we initially force location to New York.</source>
          <target state="translated">Чтобы заглушить службу определения местоположения в своем тесте, создайте локальный объект-заглушку, расширяющий &lt;code&gt;Ember.Service&lt;/code&gt; , и зарегистрируйте заглушку в качестве службы, необходимой вашим тестам, в функции beforeEach. В этом случае мы изначально устанавливаем местоположение в Нью-Йорк.</target>
        </trans-unit>
        <trans-unit id="83c3a034dda372c47a7e55506b94a499dd11f2f5" translate="yes" xml:space="preserve">
          <source>To successfully extract and serialize embedded records the model relationships must be setup correcty. See the &lt;a href=&quot;https://emberjs.com/guides/models/defining-models/#toc_defining-relationships&quot;&gt;defining relationships&lt;/a&gt; section of the &lt;strong&gt;Defining Models&lt;/strong&gt; guide page.</source>
          <target state="translated">Чтобы успешно извлечь и сериализовать встроенные записи, необходимо правильно настроить отношения модели. См. Раздел &lt;a href=&quot;https://emberjs.com/guides/models/defining-models/#toc_defining-relationships&quot;&gt;определения отношений&lt;/a&gt; на странице руководства &amp;laquo; &lt;strong&gt;Определение моделей&amp;raquo;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d6f5b7a5feba70d7bbd8e7ea599c7843b8360f83" translate="yes" xml:space="preserve">
          <source>To support &lt;code&gt;Ember.Array&lt;/code&gt; in your own class, you must override two primitives to use it: &lt;code&gt;length()&lt;/code&gt; and &lt;code&gt;objectAt()&lt;/code&gt;.</source>
          <target state="translated">Чтобы поддерживать &lt;code&gt;Ember.Array&lt;/code&gt; в вашем собственном классе, вы должны переопределить два примитива, чтобы использовать его: &lt;code&gt;length()&lt;/code&gt; и &lt;code&gt;objectAt()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="284156262ec009225218096a34db99fe111eef94" translate="yes" xml:space="preserve">
          <source>To tell the application which rental we want to access, we need to replace the &lt;code&gt;show&lt;/code&gt; route path with the ID of the rental listing. We also want to simplify the URL so that it looks more like this: &lt;code&gt;localhost:4200/rentals/id-for-rental&lt;/code&gt;.</source>
          <target state="translated">Чтобы сообщить приложению, к какой аренде мы хотим получить доступ, нам нужно заменить путь маршрута &lt;code&gt;show&lt;/code&gt; идентификатором объекта аренды. Мы также хотим упростить URL-адрес, чтобы он выглядел примерно так: &lt;code&gt;localhost:4200/rentals/id-for-rental&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb8bdc2ee12cbad5bed5fddb2deaabca492791bd" translate="yes" xml:space="preserve">
          <source>To test it, we create an instance of our class &lt;code&gt;SomeThing&lt;/code&gt; as defined above, call the &lt;code&gt;testMethod&lt;/code&gt; method and assert that the internal state is correct as a result of the method call.</source>
          <target state="translated">Чтобы проверить это, мы создаем экземпляр нашего класса &lt;code&gt;SomeThing&lt;/code&gt; , как определено выше, вызываем метод &lt;code&gt;testMethod&lt;/code&gt; и утверждаем, что внутреннее состояние правильное в результате вызова метода.</target>
        </trans-unit>
        <trans-unit id="5469506e055e796f8450fa42672d0e80ba255641" translate="yes" xml:space="preserve">
          <source>To trace a Promise, click on the &lt;code&gt;Trace&lt;/code&gt; button next to the label, which will send the Promise stack trace to the console.</source>
          <target state="translated">Чтобы отследить Promise, нажмите кнопку &lt;code&gt;Trace&lt;/code&gt; рядом с меткой, которая отправит трассировку стека Promise на консоль.</target>
        </trans-unit>
        <trans-unit id="81efb30747bfc7cc6e140692ae70701b93384146" translate="yes" xml:space="preserve">
          <source>To trigger this event:</source>
          <target state="translated">Чтобы спровоцировать это событие:</target>
        </trans-unit>
        <trans-unit id="48d77718e1db6d457932cf1dfee14241b04544bc" translate="yes" xml:space="preserve">
          <source>To use a tag other than &lt;code&gt;div&lt;/code&gt;, subclass &lt;code&gt;Ember.Component&lt;/code&gt; and assign it a &lt;code&gt;tagName&lt;/code&gt; property. This property can be any valid HTML5 tag name as a string.</source>
          <target state="translated">Чтобы использовать тег, отличный от &lt;code&gt;div&lt;/code&gt; , &lt;code&gt;Ember.Component&lt;/code&gt; подкласс Ember.Component и назначьте ему свойство &lt;code&gt;tagName&lt;/code&gt; . Это свойство может быть любым допустимым именем тега HTML5 в виде строки.</target>
        </trans-unit>
        <trans-unit id="3a10e85d71bb02f30ffa65660d976a2614878268" translate="yes" xml:space="preserve">
          <source>To use it in your application you will need to define a &lt;code&gt;serializer:application&lt;/code&gt; that extends the &lt;code&gt;JSONSerializer&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать его в своем приложении, вам необходимо определить &lt;code&gt;serializer:application&lt;/code&gt; , расширяющее &lt;code&gt;JSONSerializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ac55d23e3de772ab700ee1e89d91af6e27bd4d1" translate="yes" xml:space="preserve">
          <source>To use it, pass the conditional value to the &lt;code&gt;if&lt;/code&gt; helper, using the block form to wrap the section of template you want to conditionally render. Like so:</source>
          <target state="translated">Чтобы использовать его, передайте условное значение помощнику &lt;code&gt;if&lt;/code&gt; , используя блочную форму, чтобы обернуть раздел шаблона, который вы хотите условно визуализировать. Вот так:</target>
        </trans-unit>
        <trans-unit id="d4ed92f3e127472a3aa889d5c0b4781b9d9a78db" translate="yes" xml:space="preserve">
          <source>To use our new Ember Data Model object, we need to update the &lt;code&gt;model&lt;/code&gt; function we &lt;a href=&quot;../model-hook&quot;&gt;previously defined&lt;/a&gt; in our route handler. Delete the hard-coded JavaScript Array, and replace it with the following call to the &lt;a href=&quot;https://guides.emberjs.com/models/#toc_the-store-and-a-single-source-of-truth&quot;&gt;Ember Data Store service&lt;/a&gt;. The &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html&quot;&gt;store service&lt;/a&gt; is injected into all routes and components in Ember. It is the main interface you use to interact with Ember Data. In this case, call the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; function on the store and provide it with the name of your newly created rental model class.</source>
          <target state="translated">Чтобы использовать наш новый объект модели данных Ember, нам нужно обновить функцию &lt;code&gt;model&lt;/code&gt; мы &lt;a href=&quot;../model-hook&quot;&gt;ранее определили&lt;/a&gt; в нашем обработчике маршрута. Удалите жестко запрограммированный массив JavaScript и замените его следующим вызовом &lt;a href=&quot;https://guides.emberjs.com/models/#toc_the-store-and-a-single-source-of-truth&quot;&gt;службы Ember Data Store&lt;/a&gt; . &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html&quot;&gt;Службы магазина&lt;/a&gt; впрыскиваются во все маршруты и компоненты в Ember. Это основной интерфейс, который вы используете для взаимодействия с Ember Data. В этом случае вызовите функцию &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; &lt;/a&gt; в магазине и укажите имя вашего вновь созданного класса модели аренды.</target>
        </trans-unit>
        <trans-unit id="a1bd3b7a10987c576e4b3e5ef0d1eb55854bd669" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;format-currency&lt;/code&gt; helper, you call it using curly braces in your template:</source>
          <target state="translated">Чтобы использовать помощник &lt;code&gt;format-currency&lt;/code&gt; , вы вызываете его с помощью фигурных скобок в своем шаблоне:</target>
        </trans-unit>
        <trans-unit id="ff265ce4f656a5022fc0eb3e3b6a48bcf6f66b72" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;meta&lt;/code&gt; data outside of the &lt;code&gt;model&lt;/code&gt; hook, you need to return it:</source>
          <target state="translated">Чтобы использовать &lt;code&gt;meta&lt;/code&gt; вне хука &lt;code&gt;model&lt;/code&gt; , вам необходимо вернуть их:</target>
        </trans-unit>
        <trans-unit id="6c97e84d6c7f8dbcc0f576804dd9a172f8ea4443" translate="yes" xml:space="preserve">
          <source>To use the Inspector with the &lt;code&gt;file://&lt;/code&gt; protocol, visit &lt;code&gt;chrome://extensions&lt;/code&gt; in Chrome and check the &quot;Allow access to file URLs&quot; checkbox:</source>
          <target state="translated">Чтобы использовать Инспектор с протоколом &lt;code&gt;file://&lt;/code&gt; , посетите &lt;code&gt;chrome://extensions&lt;/code&gt; в Chrome и установите флажок &amp;laquo;Разрешить доступ к URL-адресам файлов&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="5b4b9b0f7d1081e76bebbad8d407bc61b550eeac" translate="yes" xml:space="preserve">
          <source>To use the block form, add a &lt;code&gt;#&lt;/code&gt; character to the beginning of the component name, then make sure to add a closing tag.</source>
          <target state="translated">Чтобы использовать блочную форму, добавьте символ &lt;code&gt;#&lt;/code&gt; в начало имени компонента, затем обязательно добавьте закрывающий тег.</target>
        </trans-unit>
        <trans-unit id="2b34f2fce983b8f7e66aeba0dcd54687c1641fe4" translate="yes" xml:space="preserve">
          <source>To use url building, include the mixin when extending an adapter, and call &lt;code&gt;buildURL&lt;/code&gt; where needed. The default behaviour is designed for RESTAdapter.</source>
          <target state="translated">Чтобы использовать построение URL- &lt;code&gt;buildURL&lt;/code&gt; при расширении адаптера и вызовите buildURL, где это необходимо. Поведение по умолчанию разработано для RESTAdapter.</target>
        </trans-unit>
        <trans-unit id="b06bc5d392cd3c4ae056891cbe7f6e4fea87f456" translate="yes" xml:space="preserve">
          <source>To utilize an &lt;code&gt;event&lt;/code&gt; object as a function parameter:</source>
          <target state="translated">Чтобы использовать объект &lt;code&gt;event&lt;/code&gt; в качестве параметра функции:</target>
        </trans-unit>
        <trans-unit id="c8e7168cd76584331b5822b4bec75e170927b9af" translate="yes" xml:space="preserve">
          <source>To verify that your installation was successful, run:</source>
          <target state="translated">Чтобы убедиться,что ваша установка прошла успешно,запустите:</target>
        </trans-unit>
        <trans-unit id="4c45291da01a2d21f8e4e871bb2b3b252689cfbd" translate="yes" xml:space="preserve">
          <source>To view the list of deprecations in an app, click on the &lt;code&gt;Deprecations&lt;/code&gt; menu.</source>
          <target state="translated">Чтобы просмотреть список устаревших в приложении, щелкните меню &amp;laquo; &lt;code&gt;Deprecations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc6b3697807941cf644d0c3ddef26bebd3c914d3" translate="yes" xml:space="preserve">
          <source>Together, the &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; properties form a composite key for the identity map.</source>
          <target state="translated">Вместе свойства &lt;code&gt;type&lt;/code&gt; и &lt;code&gt;id&lt;/code&gt; образуют составной ключ для карты идентификации.</target>
        </trans-unit>
        <trans-unit id="212af41073666530ad8bf245becce259a0964242" translate="yes" xml:space="preserve">
          <source>Toolbar</source>
          <target state="translated">Toolbar</target>
        </trans-unit>
        <trans-unit id="c201b38fdebbb9bb45b78e75ce5a39c7cd55dd3a" translate="yes" xml:space="preserve">
          <source>Total number of errors.</source>
          <target state="translated">Общее количество ошибок.</target>
        </trans-unit>
        <trans-unit id="feca6ac147fe6946560ac4f3352301d8cb402e31" translate="yes" xml:space="preserve">
          <source>Touch events:</source>
          <target state="translated">Нажмите события:</target>
        </trans-unit>
        <trans-unit id="68c508431455ff22684105af9cb2ecc131f7e321" translate="yes" xml:space="preserve">
          <source>Tracing</source>
          <target state="translated">Tracing</target>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="ee9a7401cfdf77cbfcfa276345967663f2ed541e" translate="yes" xml:space="preserve">
          <source>Transforms are not required. If you do not specify a transform name Ember Data will do no additional processing of the value.</source>
          <target state="translated">Трансформации не требуются.Если вы не укажете имя преобразования,Ember Data не будет выполнять дополнительную обработку значения.</target>
        </trans-unit>
        <trans-unit id="4ead496f48fa5f6d2d96f52143b2d7c60b4140d3" translate="yes" xml:space="preserve">
          <source>Transition</source>
          <target state="translated">Transition</target>
        </trans-unit>
        <trans-unit id="3a38dd0e80493ddad0a8b9fc31e36c252b5d7258" translate="yes" xml:space="preserve">
          <source>Transition Plans</source>
          <target state="translated">Планы перехода</target>
        </trans-unit>
        <trans-unit id="58d6d64ea8820023309981d51b607f7cb4f0da7e" translate="yes" xml:space="preserve">
          <source>Transition into another route while replacing the current URL, if possible. The route may be either a single route or route path:</source>
          <target state="translated">Переход на другой маршрут с заменой текущего URL,если это возможно.Маршрут может быть либо одним маршрутом,либо маршрутом:</target>
        </trans-unit>
        <trans-unit id="bc1b0e501d34e708fc9cc731a2b3c2033acc8b08" translate="yes" xml:space="preserve">
          <source>Transition into another route while replacing the current URL, if possible. This will replace the current history entry instead of adding a new one. Beside that, it is identical to &lt;code&gt;transitionTo&lt;/code&gt; in all other respects. See 'transitionTo' for additional information regarding multiple models.</source>
          <target state="translated">Если возможно, переход на другой маршрут с заменой текущего URL. Это заменит текущую запись в истории вместо добавления новой. Кроме того, во всем остальном он идентичен &lt;code&gt;transitionTo&lt;/code&gt; . См. &amp;laquo;TransitionTo&amp;raquo; для получения дополнительной информации о нескольких моделях.</target>
        </trans-unit>
        <trans-unit id="3817345cd736105fd19da678c761e0ee0dc1d3d6" translate="yes" xml:space="preserve">
          <source>Transition into another route while replacing the current URL, if possible. This will replace the current history entry instead of adding a new one. Beside that, it is identical to &lt;code&gt;transitionToRoute&lt;/code&gt; in all other respects.</source>
          <target state="translated">Если возможно, переход на другой маршрут с заменой текущего URL. Это заменит текущую запись в истории вместо добавления новой. Кроме того, во всем остальном он идентичен &lt;code&gt;transitionToRoute&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9fbe2b3f5c5cd05ac457782cac8426ace4067da" translate="yes" xml:space="preserve">
          <source>Transition the application into another route. The route may be either a single route or route path:</source>
          <target state="translated">Перенесите приложение на другой маршрут.Маршрут может быть как одиночным,так и маршрутным:</target>
        </trans-unit>
        <trans-unit id="09485928bf975e30a09112e580ae8b87390ef25d" translate="yes" xml:space="preserve">
          <source>Transition to a nested route</source>
          <target state="translated">Переход на гнездовой маршрут</target>
        </trans-unit>
        <trans-unit id="2e8d1954c6e263dec2af78024bacfdd651c85cb4" translate="yes" xml:space="preserve">
          <source>Transitioning After the Model is Known</source>
          <target state="translated">Переход после того,как модель известна</target>
        </trans-unit>
        <trans-unit id="8eeb89d7f7b67faed7cc1a366a765420b6ef9289" translate="yes" xml:space="preserve">
          <source>Transitioning Before the Model is Known</source>
          <target state="translated">Переход до того,как модель станет известна</target>
        </trans-unit>
        <trans-unit id="b867dfc8d8f207f8f4c1fbcb4af23d1d9288622d" translate="yes" xml:space="preserve">
          <source>Transpile</source>
          <target state="translated">Transpile</target>
        </trans-unit>
        <trans-unit id="7be9134d32caa15cd71ab9ecd34dc5705a1ebaf0" translate="yes" xml:space="preserve">
          <source>Treating a function like a property is useful because they can work with bindings, just like any other property.</source>
          <target state="translated">Отношение к функции как к свойству полезно,потому что они могут работать с привязками,как и любое другое свойство.</target>
        </trans-unit>
        <trans-unit id="6b82a6a604ce871413a50334f0f8ba973ba15b4b" translate="yes" xml:space="preserve">
          <source>Trigger the function on the leading instead of the trailing edge of the wait interval. Defaults to false.</source>
          <target state="translated">Запустите функцию на переднем,а не на заднем крае интервала ожидания.По умолчанию-false.</target>
        </trans-unit>
        <trans-unit id="6bd621dbfc252949948e1fe15e02e3b79027c1b3" translate="yes" xml:space="preserve">
          <source>Trigger the function on the leading instead of the trailing edge of the wait interval. Defaults to true.</source>
          <target state="translated">Запустите функцию на переднем,а не на заднем крае интервала ожидания.По умолчанию верно.</target>
        </trans-unit>
        <trans-unit id="a2759c77b24ab94668e8d1b8b501df3aeb5de2d0" translate="yes" xml:space="preserve">
          <source>Triggering Changes with Actions</source>
          <target state="translated">Запуск изменений с помощью действий</target>
        </trans-unit>
        <trans-unit id="05c0c58fbbc9f0cf9c0bb880afe8c0b49d825dcd" translate="yes" xml:space="preserve">
          <source>Triggers a fetch for the backing entity based on its &lt;code&gt;remoteType&lt;/code&gt; (see &lt;code&gt;remoteType&lt;/code&gt; definitions per reference type).</source>
          <target state="translated">Запускает выборку для резервного объекта на основе его &lt;code&gt;remoteType&lt;/code&gt; (см. Определения &lt;code&gt;remoteType&lt;/code&gt; для каждого ссылочного типа).</target>
        </trans-unit>
        <trans-unit id="1f7ec6fd588f66e0f74bc20fe04496819936427e" translate="yes" xml:space="preserve">
          <source>Triggers a named action on the &lt;code&gt;ActionHandler&lt;/code&gt;. Any parameters supplied after the &lt;code&gt;actionName&lt;/code&gt; string will be passed as arguments to the action target function.</source>
          <target state="translated">&lt;code&gt;ActionHandler&lt;/code&gt; именованное действие в ActionHandler . Любые параметры, указанные после строки &lt;code&gt;actionName&lt;/code&gt; , будут переданы в качестве аргументов целевой функции действия.</target>
        </trans-unit>
        <trans-unit id="caf81df837a77ea1a1597867231d2fd92f696d66" translate="yes" xml:space="preserve">
          <source>Triggers a named event for the object. Any additional arguments will be passed as parameters to the functions that are subscribed to the event.</source>
          <target state="translated">Запускает именованное событие для объекта.Любые дополнительные аргументы будут передаваться в качестве параметров функциям,подписавшимся на событие.</target>
        </trans-unit>
        <trans-unit id="b37a90c35c25e5423f4922a95a3be6ba46a762f1" translate="yes" xml:space="preserve">
          <source>Triggers a reload of the value in this relationship. If the remoteType is &lt;code&gt;&quot;link&quot;&lt;/code&gt; Ember Data will use the relationship link to reload the relationship. Otherwise it will reload the record by its id.</source>
          <target state="translated">Запускает перезагрузку значения в этом отношении. Если remoteType - &lt;code&gt;&quot;link&quot;&lt;/code&gt; Ember Data будет использовать ссылку отношения для перезагрузки отношения. В противном случае он перезагрузит запись по ее идентификатору.</target>
        </trans-unit>
        <trans-unit id="90ab4ebeae51b5fd454cba0691dd4c85d5df4631" translate="yes" xml:space="preserve">
          <source>Triggers the given DOM event on the element identified by the provided selector. Example:</source>
          <target state="translated">Запускает заданное событие DOM на элементе,идентифицируемом с помощью предоставленного селектора.Пример:</target>
        </trans-unit>
        <trans-unit id="b3c7ae9f5129772a579c1a689085b260b5f7a672" translate="yes" xml:space="preserve">
          <source>Triggers the given event, e.g. &lt;code&gt;blur&lt;/code&gt;, &lt;code&gt;dblclick&lt;/code&gt; on the element identified by the provided selector.</source>
          <target state="translated">Запускает данное событие, например &lt;code&gt;blur&lt;/code&gt; , &lt;code&gt;dblclick&lt;/code&gt; для элемента, указанного предоставленным селектором.</target>
        </trans-unit>
        <trans-unit id="88ede053a62e801fe94c3f39f9283bc95d7953b4" translate="yes" xml:space="preserve">
          <source>Triggers the router level &lt;code&gt;didTransition&lt;/code&gt; hook.</source>
          <target state="translated">&lt;code&gt;didTransition&lt;/code&gt; хук didTransition на уровне маршрутизатора .</target>
        </trans-unit>
        <trans-unit id="fd1c5125e97b8ef7401e3054a46c338003dc15f5" translate="yes" xml:space="preserve">
          <source>Triggers the router level &lt;code&gt;willTransition&lt;/code&gt; hook.</source>
          <target state="translated">&lt;code&gt;willTransition&lt;/code&gt; уровне маршрутизатора .</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="3afd3167184bdb3baea996bf37e014fc89cdadc8" translate="yes" xml:space="preserve">
          <source>Turn on resolver resolution logging</source>
          <target state="translated">Включить протоколирование разрешения резольвера</target>
        </trans-unit>
        <trans-unit id="171dc559b8c86e4b5f59e4b10965ed25793a055c" translate="yes" xml:space="preserve">
          <source>Tweaking the Default JSON</source>
          <target state="translated">Тонкая настройка JSON по умолчанию</target>
        </trans-unit>
        <trans-unit id="59ae438323ad843da4c143e3db72fa92cf8f29ed" translate="yes" xml:space="preserve">
          <source>Typical Example:</source>
          <target state="translated">Типичный пример:</target>
        </trans-unit>
        <trans-unit id="1016393aae80d0b7e8ffa293c223fee10559838d" translate="yes" xml:space="preserve">
          <source>Typically, most models are loaded from and saved to a server that uses a database to store data. Usually you will send JSON representations of models back and forth to an HTTP server that you have written. However, Ember makes it easy to use other durable storage, such as saving to the user's hard disk with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt;, or hosted storage solutions that let you avoid writing and hosting your own servers.</source>
          <target state="translated">Обычно большинство моделей загружаются и сохраняются на сервере, который использует базу данных для хранения данных. Обычно вы отправляете JSON-представления моделей туда и обратно на HTTP-сервер, который вы написали. Однако Ember упрощает использование других надежных хранилищ, таких как сохранение на жесткий диск пользователя с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt; , или решений для размещенных хранилищ, которые позволяют избежать записи и размещения собственных серверов.</target>
        </trans-unit>
        <trans-unit id="d0f00d1a5e9139be33f8866b6b8f269ded268029" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;model&lt;/code&gt; hook should return an &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt; record, but it can also return any &lt;a href=&quot;https://www.promisejs.org/&quot;&gt;promise&lt;/a&gt; object (Ember Data records are promises), or a plain JavaScript object or array. Ember will wait until the data finishes loading (until the promise is resolved) before rendering the template.</source>
          <target state="translated">Обычно ловушка &lt;code&gt;model&lt;/code&gt; должна возвращать запись &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;данных Ember&lt;/a&gt; , но она также может возвращать любой объект &lt;a href=&quot;https://www.promisejs.org/&quot;&gt;обещания&lt;/a&gt; (записи данных Ember - это обещания) или простой объект или массив JavaScript. Ember будет ждать завершения загрузки данных (пока обещание не будет выполнено) перед рендерингом шаблона.</target>
        </trans-unit>
        <trans-unit id="90f6a780943179d8b1aae6e03c66f89fa92e7702" translate="yes" xml:space="preserve">
          <source>Typically, the application object is the only global variable. All other classes in your app should be properties on the &lt;code&gt;Ember.Application&lt;/code&gt; instance, which highlights its first role: a global namespace.</source>
          <target state="translated">Обычно объект приложения - единственная глобальная переменная. Все остальные классы в вашем приложении должны быть свойствами экземпляра &lt;code&gt;Ember.Application&lt;/code&gt; , что подчеркивает его первую роль: глобальное пространство имен.</target>
        </trans-unit>
        <trans-unit id="9a9cecfe60e474fbd88d57ddf86af2698a9750c5" translate="yes" xml:space="preserve">
          <source>Typos, missing words, and code samples with errors are all considered documentation bugs. If you spot one of them, or want to otherwise improve the existing guides, we are happy to help you help us!</source>
          <target state="translated">Ошибками документации считаются опечатки,пропущенные слова и примеры кода с ошибками.Если вы заметили одну из них,или хотите улучшить существующие руководства,мы будем рады помочь вам!</target>
        </trans-unit>
        <trans-unit id="9d57875196c613785a1eee010c55223a0f1aa821" translate="yes" xml:space="preserve">
          <source>UI</source>
          <target state="translated">UI</target>
        </trans-unit>
        <trans-unit id="56ec268e73f8f2ff103ef53a9916b081ba7f3172" translate="yes" xml:space="preserve">
          <source>UI stands for User Interface and is essentially what the user sees and interacts with on a device. In terms of the web, the UI is generally composed of a series of pages containing visual elements such as buttons and icons that a user can interact with to perform a specific function.</source>
          <target state="translated">UI-это пользовательский интерфейс,по сути то,что пользователь видит и с чем взаимодействует на устройстве.Что касается Интернета,то пользовательский интерфейс,как правило,состоит из серии страниц,содержащих визуальные элементы,такие как кнопки и иконки,с которыми пользователь может взаимодействовать для выполнения определенной функции.</target>
        </trans-unit>
        <trans-unit id="25ba44ec3b391ba4ce5fbbd2979635e254775e7d" translate="yes" xml:space="preserve">
          <source>UNKNOWN</source>
          <target state="translated">UNKNOWN</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="2a78301c31a5cdf1806010201d9c88a248b6e24f" translate="yes" xml:space="preserve">
          <source>URL Conventions</source>
          <target state="translated">конвенции URL-адресов</target>
        </trans-unit>
        <trans-unit id="1d0b24ed134011a2aa230bdbb865f186a7f4281a" translate="yes" xml:space="preserve">
          <source>Unbound:</source>
          <target state="translated">Unbound:</target>
        </trans-unit>
        <trans-unit id="adcff83915dac1afac720f25d1f1be8c41ff4bd5" translate="yes" xml:space="preserve">
          <source>Unconsumed Computed Properties Do Not Trigger Observers</source>
          <target state="translated">Невычисленные вычисленные свойства не вызывают срабатывания наблюдателей</target>
        </trans-unit>
        <trans-unit id="b2cf9e638539bf147e1afc2be86aae23bea12dca" translate="yes" xml:space="preserve">
          <source>Unfortunately we don't have control over the Firefox review process, so if you need the latest Inspector version, download and install it manually from &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">К сожалению, мы не можем контролировать процесс проверки Firefox, поэтому, если вам нужна последняя версия Inspector, загрузите и установите ее вручную с &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cac43b24a13e42d8cce322b40984d5b87556749" translate="yes" xml:space="preserve">
          <source>Unfortunately, the app will now make two separate requests for the same information. Not only is the redundant data fetching costly in terms of wasted bandwidth and affecting the perceived speed of your app, it's easy for the two values to get out-of-sync. You yourself have probably used a web application where the list of items gets out of sync with the counter in a toolbar, leading to a frustrating and inconsistent experience.</source>
          <target state="translated">К сожалению,теперь приложение будет делать два отдельных запроса на одну и ту же информацию.Не только избыточная загрузка данных обходится дорого с точки зрения потери пропускной способности и влияет на воспринимаемую скорость работы вашего приложения,но и эти два значения легко выходят из синхронизации.Вы сами,вероятно,использовали веб-приложение,в котором список элементов выходит из синхронизации со счетчиком на панели инструментов,что приводит к разочарованию и непоследовательности в работе.</target>
        </trans-unit>
        <trans-unit id="435a0121b4b4da7be6794568d5ff9daf201cc903" translate="yes" xml:space="preserve">
          <source>Unit Testing Basics</source>
          <target state="translated">Основы модульного тестирования</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">Единичные тесты</target>
        </trans-unit>
        <trans-unit id="93ff14f84e553511a6d925afc2fd312d4a69fdf2" translate="yes" xml:space="preserve">
          <source>Unit testing a Service</source>
          <target state="translated">Услуги по тестированию</target>
        </trans-unit>
        <trans-unit id="e953abafc0e9309d7c5083375c031969ba683421" translate="yes" xml:space="preserve">
          <source>Unit testing controllers is very simple using the unit test helper which is part of the ember-qunit framework.</source>
          <target state="translated">Контроллеры модульного тестирования очень просты в использовании с помощью помощника по модульному тестированию,который является частью каркаса ember-qunit.</target>
        </trans-unit>
        <trans-unit id="4f2e8408bfaa4887c87ced8532981f549a2f0ac1" translate="yes" xml:space="preserve">
          <source>Unit tests are generally used to test a small piece of code and ensure that it is doing what was intended. Unlike acceptance tests, they are narrow in scope and do not require the Ember application to be running.</source>
          <target state="translated">Юнит-тесты,как правило,используются для проверки небольшого фрагмента кода и проверки того,что он делает то,что было задумано.В отличие от приемочных испытаний,они имеют узкую область применения и не требуют применения Ember.</target>
        </trans-unit>
        <trans-unit id="cb68db7729e7a12b83a5c5895b39431e1671922d" translate="yes" xml:space="preserve">
          <source>Unit tests are used to test isolated chunks of functionality, or &quot;units&quot;. They can be written against any isolated application logic.</source>
          <target state="translated">Блок-тесты используются для тестирования изолированных фрагментов функциональности,или &quot;единиц&quot;.Они могут быть записаны против любой изолированной логики приложения.</target>
        </trans-unit>
        <trans-unit id="17909e26819874f7405577d82491e99531963e55" translate="yes" xml:space="preserve">
          <source>Unit tests use the function called &lt;code&gt;this.subject&lt;/code&gt; to instantiate the object to test, and lets the test pass in initial values as arguments. In our case we are passing in our fake map utility object in the first test, and passing a cache object for the second test.</source>
          <target state="translated">&lt;code&gt;this.subject&lt;/code&gt; тесты используют функцию this.subject для создания экземпляра тестируемого объекта и позволяют тесту передавать начальные значения в качестве аргументов. В нашем случае мы передаем наш служебный объект поддельной карты в первом тесте и передаем объект кеша для второго теста.</target>
        </trans-unit>
        <trans-unit id="699a683faaa9485bee8084684b0d1eae07aa0ba1" translate="yes" xml:space="preserve">
          <source>Unknown Properties</source>
          <target state="translated">Неизвестная собственность</target>
        </trans-unit>
        <trans-unit id="e645e94764f04f4c7f3e561913a7d9a2e676183b" translate="yes" xml:space="preserve">
          <source>Unless you have specific needs for &lt;code&gt;CoreView&lt;/code&gt;, you will use &lt;code&gt;Ember.Component&lt;/code&gt; in your applications.</source>
          <target state="translated">Если у вас нет особых потребностей в &lt;code&gt;CoreView&lt;/code&gt; , вы будете использовать &lt;code&gt;Ember.Component&lt;/code&gt; в своих приложениях.</target>
        </trans-unit>
        <trans-unit id="f1dc9a4536b97fe5b5d22858d040db7f2f7b9e35" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;https://guides.emberjs.com/components/defining-a-component/&quot;&gt;components&lt;/a&gt;, which require a dash in the name to follow the Custom Element spec, helper names can be single or multi-word. If your helper's name is multi-word, it should be dasherized as the examples on this page.</source>
          <target state="translated">В отличие от &lt;a href=&quot;https://guides.emberjs.com/components/defining-a-component/&quot;&gt;компонентов&lt;/a&gt; , для которых требуется тире в имени, чтобы соответствовать спецификации настраиваемого элемента, имена помощников могут состоять из одного или нескольких слов. Если имя вашего помощника состоит из нескольких слов, его следует пометить как примеры на этой странице.</target>
        </trans-unit>
        <trans-unit id="0ba71c17b8be5769afabb31b692ab4883feaae70" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Ember.Enumerable,&lt;/code&gt; this mixin defines methods specifically for collections that provide index-ordered access to their contents. When you are designing code that needs to accept any kind of Array-like object, you should use these methods instead of Array primitives because these will properly notify observers of changes to the array.</source>
          <target state="translated">В отличие от &lt;code&gt;Ember.Enumerable,&lt;/code&gt; этот миксин определяет методы специально для коллекций, которые обеспечивают упорядоченный по индексу доступ к их содержимому. Когда вы разрабатываете код, который должен принимать любой тип объекта типа Array, вы должны использовать эти методы вместо примитивов Array, поскольку они будут правильно уведомлять наблюдателей об изменениях в массиве.</target>
        </trans-unit>
        <trans-unit id="c2346a7015c8d7f54cbe428fcb6f3328b3d12eff" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Ember.typeOf&lt;/code&gt; this method returns true even if the passed object is not formally an array but appears to be array-like (i.e. implements &lt;code&gt;Ember.Array&lt;/code&gt;)</source>
          <target state="translated">В отличие от &lt;code&gt;Ember.typeOf&lt;/code&gt; , этот метод возвращает true, даже если переданный объект формально не является массивом, а выглядит как массив (т.е. реализует &lt;code&gt;Ember.Array&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="48f1b9ff4d1a0458244d8e86c4b05ccfa10f68f1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;RSVP.all&lt;/code&gt; or &lt;code&gt;RSVP.hash&lt;/code&gt;, which implement a fail-fast method, but like &lt;code&gt;RSVP.allSettled&lt;/code&gt;, &lt;code&gt;hashSettled&lt;/code&gt; waits until all the constituent promises have returned and then shows you all the results with their states and values/reasons. This is useful if you want to handle multiple promises' failure states together as a set.</source>
          <target state="translated">В отличие от &lt;code&gt;RSVP.all&lt;/code&gt; или &lt;code&gt;RSVP.hash&lt;/code&gt; , которые реализуют отказоустойчивый метод, но, как и &lt;code&gt;RSVP.allSettled&lt;/code&gt; , &lt;code&gt;hashSettled&lt;/code&gt; ждет, пока все составляющие обещания не вернутся, а затем показывает вам все результаты с их состояниями и значениями / причинами. Это полезно, если вы хотите обрабатывать состояния отказа нескольких обещаний вместе как набор.</target>
        </trans-unit>
        <trans-unit id="9bee6d6d59812dc43ec15a1949e4a9aea2e5d664" translate="yes" xml:space="preserve">
          <source>Unlike callbacks, promises are great composable primitives.</source>
          <target state="translated">В отличие от обратного вызова,обещания-отличные компромиссные примитивы.</target>
        </trans-unit>
        <trans-unit id="e43318987c768f8fb9f16d1a9218b08aab2bb57f" translate="yes" xml:space="preserve">
          <source>Unlike most other frameworks that include some sort of binding implementation, bindings in Ember.js can be used with any object. That said, bindings are most often used within the Ember framework itself, and for most problems Ember app developers face, computed properties are the appropriate solution.</source>
          <target state="translated">В отличие от большинства других фреймворков,которые включают в себя некую реализацию связывания,связывание в Ember.js может быть использовано с любым объектом.При этом связки чаще всего используются в самой Ember-фреймворке,а для большинства проблем,с которыми сталкиваются разработчики Ember-приложений,подходящим решением являются вычисляемые свойства.</target>
        </trans-unit>
        <trans-unit id="17e1fed215e92f510045ef5c63c8abbeeddb605f" translate="yes" xml:space="preserve">
          <source>Unlike the other route handlers we've made so far, the &lt;code&gt;index&lt;/code&gt; route is special: it does NOT require an entry in the router's mapping. We'll learn more about why the entry isn't required later on when we look at &lt;a href=&quot;../subroutes&quot;&gt;nested routes&lt;/a&gt; in Ember.</source>
          <target state="translated">В отличие от других обработчиков маршрутов, которые мы создали до сих пор, &lt;code&gt;index&lt;/code&gt; маршрут особенный: он НЕ требует записи в сопоставлении маршрутизатора. Мы узнаем больше о том, почему запись не требуется, позже, когда мы рассмотрим &lt;a href=&quot;../subroutes&quot;&gt;вложенные маршруты&lt;/a&gt; в Ember.</target>
        </trans-unit>
        <trans-unit id="0a31d24114be4656ec50e863002c0179157848ce" translate="yes" xml:space="preserve">
          <source>Unloads the record from the store. This will cause the record to be destroyed and freed up for garbage collection.</source>
          <target state="translated">Выгружает запись из магазина.Это приведет к тому,что пластинка будет уничтожена и освобождена для сбора мусора.</target>
        </trans-unit>
        <trans-unit id="43070cef7aeb427607d411dd1ba9004d00927bf7" translate="yes" xml:space="preserve">
          <source>Unregister a factory.</source>
          <target state="translated">Отменить регистрацию завода.</target>
        </trans-unit>
        <trans-unit id="4f9491f2acb9ac489a58e64c4620334de6474d19" translate="yes" xml:space="preserve">
          <source>Unshift an object to start of array. Works just like &lt;code&gt;unshift()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Сдвинуть объект в начало массива. Работает так же, как &lt;code&gt;unshift()&lt;/code&gt; но совместим с KVO .</target>
        </trans-unit>
        <trans-unit id="164f698a644916b960657c8f2ff6769690a513d0" translate="yes" xml:space="preserve">
          <source>Up to this point, we've generated four top level routes.</source>
          <target state="translated">До этого момента мы сгенерировали четыре маршрута высшего уровня.</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="1cfa49d59018eef26ef97632e877b7882570010a" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;postRecord.save()&lt;/code&gt;</source>
          <target state="translated">Обновите &lt;code&gt;postRecord.save()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac2e17800a0ab0d112375860107fae65bea51067" translate="yes" xml:space="preserve">
          <source>Update URL with &lt;code&gt;replaceState&lt;/code&gt; instead</source>
          <target state="translated">&lt;code&gt;replaceState&lt;/code&gt; этого обновите URL-адрес replaceState</target>
        </trans-unit>
        <trans-unit id="f40768a6e2c45ddd1db6d9752d413302ad8b03c7" translate="yes" xml:space="preserve">
          <source>Update the content of the integration test to the following to fix it:</source>
          <target state="translated">Обновите содержание интеграционного теста,чтобы исправить его:</target>
        </trans-unit>
        <trans-unit id="af48d19b99946eb85b1c250ae52baaf10a9733dd" translate="yes" xml:space="preserve">
          <source>Updates to the property of an attribute binding will result in automatic update of the HTML attribute in the component's rendered HTML representation. &lt;code&gt;attributeBindings&lt;/code&gt; is a concatenated property. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; documentation for more information about concatenated properties.</source>
          <target state="translated">Обновление свойства привязки атрибута приведет к автоматическому обновлению атрибута HTML в визуализированном HTML-представлении компонента. &lt;code&gt;attributeBindings&lt;/code&gt; - это объединенное свойство. См. Документацию &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; для получения дополнительной информации о конкатенированных свойствах.</target>
        </trans-unit>
        <trans-unit id="85553080c5bd51708efff543f11a80f132dd3bad" translate="yes" xml:space="preserve">
          <source>Updates to the value of a class name binding will result in automatic update of the HTML &lt;code&gt;class&lt;/code&gt; attribute in the component's rendered HTML representation. If the value becomes &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the class name will be removed. Both &lt;code&gt;classNames&lt;/code&gt; and &lt;code&gt;classNameBindings&lt;/code&gt; are concatenated properties. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; documentation for more information about concatenated properties.</source>
          <target state="translated">Обновление значения привязки имени класса приведет к автоматическому обновлению атрибута &lt;code&gt;class&lt;/code&gt; HTML в визуализированном HTML-представлении компонента. Если значение станет &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; , имя класса будет удалено. И &lt;code&gt;classNames&lt;/code&gt; , и &lt;code&gt;classNameBindings&lt;/code&gt; являются объединенными свойствами. См. Документацию &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; для получения дополнительной информации о конкатенированных свойствах.</target>
        </trans-unit>
        <trans-unit id="1a89fee8955539e6cbec654a32c63f6e50462e63" translate="yes" xml:space="preserve">
          <source>Updating Existing Records</source>
          <target state="translated">Обновление существующих записей</target>
        </trans-unit>
        <trans-unit id="e5b09343b2238bb74ea50d37eff3231b6eb0978f" translate="yes" xml:space="preserve">
          <source>Updating Records</source>
          <target state="translated">Обновление записей</target>
        </trans-unit>
        <trans-unit id="a3c251798976c1a4eaea1b25759d885d99218eb3" translate="yes" xml:space="preserve">
          <source>Updating the Model Hook</source>
          <target state="translated">Обновление Model Hook</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="9629fc5be7eebf84f66a1a4fe14d7eee29fbc498" translate="yes" xml:space="preserve">
          <source>Usage Example:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="5babfd7f28c97261be5d747a98ff927af4a35448" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;ds.jsonserializer&quot;&gt;DS.JSONSerializer&lt;/a&gt; to get the JSON representation of a record.</source>
          <target state="translated">Используйте &lt;a href=&quot;ds.jsonserializer&quot;&gt;DS.JSONSerializer,&lt;/a&gt; чтобы получить представление записи в формате JSON.</target>
        </trans-unit>
        <trans-unit id="79babe4a58b3c5377a30d47b99f3a166cc374c1c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt;&lt;code&gt;store.findAll()&lt;/code&gt;&lt;/a&gt; to retrieve all of the records for a given type:</source>
          <target state="translated">Используйте &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt; &lt;code&gt;store.findAll()&lt;/code&gt; &lt;/a&gt; чтобы получить все записи для данного типа:</target>
        </trans-unit>
        <trans-unit id="1eeddfe464eb2a59d11d65139e6a152e23204fe3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findRecord&quot;&gt;&lt;code&gt;store.findRecord()&lt;/code&gt;&lt;/a&gt; to retrieve a record by its type and ID. This will return a promise that fulfills with the requested record:</source>
          <target state="translated">Используйте &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findRecord&quot;&gt; &lt;code&gt;store.findRecord()&lt;/code&gt; &lt;/a&gt; чтобы получить запись по ее типу и идентификатору. Это вернет обещание, которое выполняется с запрошенной записью:</target>
        </trans-unit>
        <trans-unit id="cdebe1f775b156e00e0b7192c360b92d672f22ea" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekAll&quot;&gt;&lt;code&gt;store.peekAll()&lt;/code&gt;&lt;/a&gt; to retrieve all of the records for a given type that are already loaded into the store, without making a network request:</source>
          <target state="translated">Используйте &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekAll&quot;&gt; &lt;code&gt;store.peekAll()&lt;/code&gt; &lt;/a&gt; чтобы получить все записи для данного типа, которые уже загружены в хранилище, без выполнения сетевого запроса:</target>
        </trans-unit>
        <trans-unit id="b6be3a24df2cc3843f7fe4f0b083c1f949820c19" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekRecord&quot;&gt;&lt;code&gt;store.peekRecord()&lt;/code&gt;&lt;/a&gt; to retrieve a record by its type and ID, without making a network request. This will return the record only if it is already present in the store:</source>
          <target state="translated">Используйте &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekRecord&quot;&gt; &lt;code&gt;store.peekRecord()&lt;/code&gt; &lt;/a&gt; чтобы получить запись по ее типу и идентификатору, не выполняя сетевой запрос. Это вернет запись, только если она уже есть в магазине:</target>
        </trans-unit>
        <trans-unit id="00e000124add0ce9217af1c895a1ba1b021e403c" translate="yes" xml:space="preserve">
          <source>Use a custom (type) serializer for the post model to configure embedded author</source>
          <target state="translated">Используйте пользовательский (тип)сериализатор для почтовой модели для настройки встроенного автора</target>
        </trans-unit>
        <trans-unit id="2822b36d55ca0f281fdd5caf6ce712c478b4c480" translate="yes" xml:space="preserve">
          <source>Use a custom (type) serializer for the post model to configure embedded comments</source>
          <target state="translated">Используйте пользовательский (тип)сериализатор для почтовой модели для настройки встроенных комментариев.</target>
        </trans-unit>
        <trans-unit id="18a2f23148493346b4dfeba036baa75787a6bab3" translate="yes" xml:space="preserve">
          <source>Use of Observable Methods and Properties</source>
          <target state="translated">Использование наблюдаемых методов и свойств</target>
        </trans-unit>
        <trans-unit id="97fdbc8ed53b640b746052deb57d44ffe6c429d2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;{{hash}}&lt;/code&gt; helper to create a hash to pass as an option to your components. This is specially useful for contextual components where you can just yield a hash:</source>
          <target state="translated">Используйте помощник &lt;code&gt;{{hash}}&lt;/code&gt; для создания хэша, который будет передаваться в качестве опции вашим компонентам. Это особенно полезно для контекстных компонентов, где вы можете просто получить хэш:</target>
        </trans-unit>
        <trans-unit id="8e7ccd90e8cfeff420ef08923c36a50e99640cd2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;{{with}}&lt;/code&gt; helper when you want to alias a property to a new name. This is helpful for semantic clarity as it allows you to retain default scope or to reference a property from another &lt;code&gt;{{with}}&lt;/code&gt; block.</source>
          <target state="translated">Используйте помощник &lt;code&gt;{{with}}&lt;/code&gt; , если вы хотите присвоить свойству новое имя. Это полезно для семантической ясности, поскольку позволяет сохранить область действия по умолчанию или ссылаться на свойство из другого блока &lt;code&gt;{{with}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b101cb1e03e8a43550840a8c7fd20af20f00b55b" translate="yes" xml:space="preserve">
          <source>Use the tips described in &lt;a href=&quot;../object-inspector&quot;&gt;Object Inspector&lt;/a&gt; to inspect models and controllers. See below for templates and components.</source>
          <target state="translated">Используйте советы, описанные в &lt;a href=&quot;../object-inspector&quot;&gt;Инспекторе объектов,&lt;/a&gt; для проверки моделей и контроллеров. См. Ниже шаблоны и компоненты.</target>
        </trans-unit>
        <trans-unit id="7830b0609b9584de5bbebc9de314d759ef55371b" translate="yes" xml:space="preserve">
          <source>Use this instead of the built-in &lt;code&gt;typeof&lt;/code&gt; to get the type of an item. It will return the same result across all browsers and includes a bit more detail. Here is what will be returned:</source>
          <target state="translated">Используйте это вместо встроенного &lt;code&gt;typeof&lt;/code&gt; , чтобы получить тип элемента. Он вернет один и тот же результат во всех браузерах и включает немного больше деталей. Вот что будет возвращено:</target>
        </trans-unit>
        <trans-unit id="c645581e547e78cc873442313071c5e0586bcb0f" translate="yes" xml:space="preserve">
          <source>Use this to defer readiness until some condition is true.</source>
          <target state="translated">Используйте это,чтобы отложить готовность до тех пор,пока не будет выполнено какое-либо условие.</target>
        </trans-unit>
        <trans-unit id="306cbcab821af23dfb473fbf6d987c353799e01a" translate="yes" xml:space="preserve">
          <source>Use with Ember.Component</source>
          <target state="translated">Использовать с Ember.Component</target>
        </trans-unit>
        <trans-unit id="542d6ad86b7eee775bf26a301d712477fe03a84b" translate="yes" xml:space="preserve">
          <source>Used this way, the &lt;code&gt;{{action}}&lt;/code&gt; helper provides a useful shortcut for registering an HTML element in a template for a single DOM event and forwarding that interaction to the template's context (controller or component). If the context of a template is a controller, actions used this way will bubble to routes when the controller does not implement the specified action. Once an action hits a route, it will bubble through the route hierarchy.</source>
          <target state="translated">При таком использовании помощник &lt;code&gt;{{action}}&lt;/code&gt; предоставляет удобный ярлык для регистрации элемента HTML в шаблоне для одного события DOM и перенаправления этого взаимодействия в контекст шаблона (контроллер или компонент). Если контекст шаблона является контроллером, действия, используемые таким образом, будут перемещаться по маршрутам, когда контроллер не реализует указанное действие. Как только действие попадает в маршрут, оно всплывает в иерархии маршрутов.</target>
        </trans-unit>
        <trans-unit id="4c7c0d10b10d1e9407fe7fd091a42e7426902b37" translate="yes" xml:space="preserve">
          <source>Used to allow ember-testing to communicate with a specific testing framework.</source>
          <target state="translated">Используется для того,чтобы позволить ember-тестированию общаться с конкретной структурой тестирования.</target>
        </trans-unit>
        <trans-unit id="2522c403a71c0acbdd066953587aaea739ffa591" translate="yes" xml:space="preserve">
          <source>Used to determine when this &lt;code&gt;LinkComponent&lt;/code&gt; is active.</source>
          <target state="translated">Используется для определения, когда этот &lt;code&gt;LinkComponent&lt;/code&gt; активен.</target>
        </trans-unit>
        <trans-unit id="e06eb9fc01574fd7225f291066780d472903fee4" translate="yes" xml:space="preserve">
          <source>Used to get the latest version of all of the records in this array from the adapter.</source>
          <target state="translated">Используется для получения из адаптера последней версии всех записей в этом массиве.</target>
        </trans-unit>
        <trans-unit id="b625a63d0e499059d2ca14c82e5df7615a107612" translate="yes" xml:space="preserve">
          <source>Used to register callbacks to be fired whenever &lt;code&gt;App.injectTestHelpers&lt;/code&gt; is called.</source>
          <target state="translated">Используется для регистрации обратных вызовов, которые &lt;code&gt;App.injectTestHelpers&lt;/code&gt; всякий раз, когда вызывается App.injectTestHelpers .</target>
        </trans-unit>
        <trans-unit id="cb7f2badb8e4d94f6c7118903ad2f323f4cc77e3" translate="yes" xml:space="preserve">
          <source>User/session authentication.</source>
          <target state="translated">Аутентификация пользователя/сессии.</target>
        </trans-unit>
        <trans-unit id="16bc4c4d7d89c3b988308786cd8619cfd3a339a8" translate="yes" xml:space="preserve">
          <source>Uses:</source>
          <target state="translated">Uses:</target>
        </trans-unit>
        <trans-unit id="9b8970c914983383f99e53ae30acfba6c7f27456" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;HashLocation&lt;/code&gt; results in URLs with a &lt;code&gt;#&lt;/code&gt; (hash sign) separating the server side URL portion of the URL from the portion that is used by Ember.</source>
          <target state="translated">Использование &lt;code&gt;HashLocation&lt;/code&gt; приводит к появлению URL-адресов с символом &lt;code&gt;#&lt;/code&gt; (знак решетки ), отделяющим часть URL-адреса на стороне сервера от части, используемой Ember.</target>
        </trans-unit>
        <trans-unit id="2e374626d7a0702cc9f9268ad2fdcfaaf4d3ebb8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;HistoryLocation&lt;/code&gt; results in URLs that are indistinguishable from a standard URL. This relies upon the browser's &lt;code&gt;history&lt;/code&gt; API.</source>
          <target state="translated">Использование &lt;code&gt;HistoryLocation&lt;/code&gt; приводит к получению URL-адресов, неотличимых от стандартных URL-адресов. Это зависит от API &lt;code&gt;history&lt;/code&gt; браузера .</target>
        </trans-unit>
        <trans-unit id="b274154b8cd2e420cefe87ab03d519a29e9efd6b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;NoneLocation&lt;/code&gt; causes Ember to not store the applications URL state in the actual URL. This is generally used for testing purposes, and is one of the changes made when calling &lt;code&gt;App.setupForTesting()&lt;/code&gt;.</source>
          <target state="translated">Использование &lt;code&gt;NoneLocation&lt;/code&gt; приводит к тому, что Ember не сохраняет состояние URL-адреса приложения в фактическом URL-адресе. Обычно это используется в целях тестирования и является одним из изменений, вносимых при вызове &lt;code&gt;App.setupForTesting()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60d8d1f0299627d742dc7cc43fee81d677009b4e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;denodeify&lt;/code&gt; makes it easier to compose asynchronous operations instead of using callbacks. For example, instead of:</source>
          <target state="translated">Использование функции &lt;code&gt;denodeify&lt;/code&gt; упрощает создание асинхронных операций вместо использования обратных вызовов. Например, вместо:</target>
        </trans-unit>
        <trans-unit id="f5822b7870a8d5523c5615715941fb03bf4b2289" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt;</source>
          <target state="translated">Использование &lt;code&gt;get()&lt;/code&gt; и &lt;code&gt;set()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8109d0339990f1783cd0634fdca5b574393894cb" translate="yes" xml:space="preserve">
          <source>Using Block Params</source>
          <target state="translated">Использование блок-парамов</target>
        </trans-unit>
        <trans-unit id="74f837326f24cf10cc05302b64d55360b8652855" translate="yes" xml:space="preserve">
          <source>Using BuildURLMixin</source>
          <target state="translated">Использование BuildURLMixin</target>
        </trans-unit>
        <trans-unit id="e8517af265fabf196c410cce740af7a7b6bec59d" translate="yes" xml:space="preserve">
          <source>Using Embedded Records</source>
          <target state="translated">Использование встроенных записей</target>
        </trans-unit>
        <trans-unit id="165fcfc43ecaff89929b038e0b256dd0b70e6794" translate="yes" xml:space="preserve">
          <source>Using Ember Data</source>
          <target state="translated">Используя данные Ember</target>
        </trans-unit>
        <trans-unit id="fb2881f07ad66266580a01fb816b0dce10a1a576" translate="yes" xml:space="preserve">
          <source>Using Ember Enumeration with Other Libraries</source>
          <target state="translated">Использование перечисления янтаря с другими библиотеками</target>
        </trans-unit>
        <trans-unit id="32288de7b5b629b3ca02d918cfe820a4ecaf3608" translate="yes" xml:space="preserve">
          <source>Using Ember helpers</source>
          <target state="translated">Используя помощников Эмбер</target>
        </trans-unit>
        <trans-unit id="ca7a4602a2a74d46f96031f6b4efa287c3f5c2c8" translate="yes" xml:space="preserve">
          <source>Using a helper to get a property dynamically</source>
          <target state="translated">Использование помощника для динамического получения свойства</target>
        </trans-unit>
        <trans-unit id="9059eac12c500c79a5a3d1134418440b0c07e282" translate="yes" xml:space="preserve">
          <source>Using a string instead of an array allows for an arbitrary number of parameters:</source>
          <target state="translated">Использование строки вместо массива допускает произвольное количество параметров:</target>
        </trans-unit>
        <trans-unit id="5e7f18de2a8e24c22728aa51e8b3f677f7daf728" translate="yes" xml:space="preserve">
          <source>Using an Application Instance Within an Instance Initializer</source>
          <target state="translated">Использование инициализирующего вещества внутри инициализирующего вещества</target>
        </trans-unit>
        <trans-unit id="34b9681fe55a7ecfb5a0c7ea34a9b1845ae5fc03" translate="yes" xml:space="preserve">
          <source>Using an identity map is important because it ensures that changes you make in one part of your UI are propagated to other parts of the UI. It also means that you don't have to manually keep records in sync&amp;mdash;you can ask for a record by ID and not have to worry about whether other parts of your application have already asked for and loaded it.</source>
          <target state="translated">Использование карты идентичности важно, потому что она гарантирует, что изменения, внесенные в одну часть пользовательского интерфейса, распространятся на другие части пользовательского интерфейса. Это также означает, что вам не нужно вручную синхронизировать записи - вы можете запросить запись по идентификатору и не беспокоиться о том, запросили ли и загрузили ли ее уже другие части вашего приложения.</target>
        </trans-unit>
        <trans-unit id="6fad29eae11c2c19b66190933f6cc057fc210083" translate="yes" xml:space="preserve">
          <source>Using jQuery to simulate user click events might lead to unexpected test results as the action can potentially be called twice.</source>
          <target state="translated">Использование jQuery для моделирования событий щелчка пользователя может привести к неожиданным результатам тестирования,так как это действие может быть вызвано дважды.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
