<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="dd53739e37c74c8b6af3c2762424c20a33a7a208" translate="yes" xml:space="preserve">
          <source>Let's create a &lt;code&gt;format-currency&lt;/code&gt; helper that takes an integer count of cents and turns it into formatted dollars.</source>
          <target state="translated">Давайте создадим помощник по &lt;code&gt;format-currency&lt;/code&gt; который принимает целое число центов и превращает его в форматированные доллары.</target>
        </trans-unit>
        <trans-unit id="4b2703dcd1f2ced6d41299af63d335c82cc175ac" translate="yes" xml:space="preserve">
          <source>Let's create a &lt;code&gt;people-list&lt;/code&gt; component that we can use in multiple places to show a list of people.</source>
          <target state="translated">Давайте создадим компонент &lt;code&gt;people-list&lt;/code&gt; который мы можем использовать в нескольких местах, чтобы отображать список людей.</target>
        </trans-unit>
        <trans-unit id="50681b0bf964a4527a84e6e7e538f4ce2d598997" translate="yes" xml:space="preserve">
          <source>Let's create the &lt;code&gt;toggleImageSize&lt;/code&gt; function and toggle the &lt;code&gt;isWide&lt;/code&gt; property on our component:</source>
          <target state="translated">Давайте создадим функцию &lt;code&gt;toggleImageSize&lt;/code&gt; и переключим свойство &lt;code&gt;isWide&lt;/code&gt; в нашем компоненте:</target>
        </trans-unit>
        <trans-unit id="7b5c19d97e452ebeedb9123f50a533fb95f01188" translate="yes" xml:space="preserve">
          <source>Let's customize the &lt;code&gt;shopping-cart&lt;/code&gt; initializer to inject a &lt;code&gt;cart&lt;/code&gt; property into all the routes in your application:</source>
          <target state="translated">Давайте настроим инициализатор &lt;code&gt;shopping-cart&lt;/code&gt; для покупок, чтобы добавить свойство &lt;code&gt;cart&lt;/code&gt; во все маршруты в вашем приложении:</target>
        </trans-unit>
        <trans-unit id="e4575ed0bbc0fbaa9b5b0685f53318a958fa4b64" translate="yes" xml:space="preserve">
          <source>Let's define the structure of a rental object using the same attributes for our rental that we &lt;a href=&quot;../model-hook&quot;&gt;previously used&lt;/a&gt; in our hard-coded array of JavaScript objects - &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;city&lt;/em&gt;, &lt;em&gt;property type&lt;/em&gt;, &lt;em&gt;image&lt;/em&gt;, &lt;em&gt;bedrooms&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt;. Define attributes by giving them the result of the function &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.html#method_attr&quot;&gt;&lt;code&gt;DS.attr()&lt;/code&gt;&lt;/a&gt;. For more information on Ember Data Attributes, read the section called &lt;a href=&quot;https://guides.emberjs.com/models/defining-models/#toc_defining-attributes&quot;&gt;Defining Attributes&lt;/a&gt; in the guides.</source>
          <target state="translated">Давайте определим структуру объекта аренды, используя те же атрибуты для нашей аренды, которые мы &lt;a href=&quot;../model-hook&quot;&gt;ранее использовали&lt;/a&gt; в нашем жестко закодированном массиве объектов JavaScript - &lt;em&gt;заголовок&lt;/em&gt; , &lt;em&gt;владелец&lt;/em&gt; , &lt;em&gt;город&lt;/em&gt; , &lt;em&gt;тип собственности&lt;/em&gt; , &lt;em&gt;изображение&lt;/em&gt; , &lt;em&gt;спальни&lt;/em&gt; и &lt;em&gt;описание&lt;/em&gt; . Определите атрибуты, передав им результат функции &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.html#method_attr&quot;&gt; &lt;code&gt;DS.attr()&lt;/code&gt; &lt;/a&gt; . Для получения дополнительной информации об атрибутах данных Ember прочтите раздел &amp;laquo; &lt;a href=&quot;https://guides.emberjs.com/models/defining-models/#toc_defining-attributes&quot;&gt;Определение атрибутов&amp;raquo;&lt;/a&gt; в руководствах.</target>
        </trans-unit>
        <trans-unit id="42b2774cf0be3cfdf91e6720844b3fc03268684b" translate="yes" xml:space="preserve">
          <source>Let's explore these concepts using an example of a route displaying a blog post. Presume a &lt;code&gt;BlogPost&lt;/code&gt; model that is presented in a &lt;code&gt;blog-post&lt;/code&gt; template.</source>
          <target state="translated">Давайте рассмотрим эти концепции на примере маршрута, отображающего сообщение в блоге. Предположим, что модель &lt;code&gt;BlogPost&lt;/code&gt; представлена ​​в шаблоне &lt;code&gt;blog-post&lt;/code&gt; в блоге .</target>
        </trans-unit>
        <trans-unit id="26db41f1383be1d219153569142445a93005ef0d" translate="yes" xml:space="preserve">
          <source>Let's generate a &lt;code&gt;rental-listing&lt;/code&gt; component that will manage the behavior for each of our rentals. A dash is required in every component name to avoid conflicting with a possible HTML element, so &lt;code&gt;rental-listing&lt;/code&gt; is acceptable but &lt;code&gt;rental&lt;/code&gt; isn't.</source>
          <target state="translated">Давайте &lt;code&gt;rental-listing&lt;/code&gt; компонент для сдачи в аренду, который будет управлять поведением каждого из наших арендованных объектов. В названии каждого компонента должен стоять тире, чтобы избежать конфликта с возможным элементом HTML, поэтому &lt;code&gt;rental-listing&lt;/code&gt; допустима, а &lt;code&gt;rental&lt;/code&gt; - нет.</target>
        </trans-unit>
        <trans-unit id="1e94e8c5fcbcdfe2fafa8482c52537ded890590a" translate="yes" xml:space="preserve">
          <source>Let's get started creating our service by generating it through Ember CLI, which will create the service file, as well as a unit test for it.</source>
          <target state="translated">Начнем создание нашего сервиса с генерации его через Ember CLI,который создаст файл сервиса,а также юнит-тест для него.</target>
        </trans-unit>
        <trans-unit id="59c42fa1c4186808938dbdaa530634247e143009" translate="yes" xml:space="preserve">
          <source>Let's implement &lt;code&gt;double-clickable&lt;/code&gt; such that when it is clicked, an alert is displayed:</source>
          <target state="translated">Давайте реализуем возможность &lt;code&gt;double-clickable&lt;/code&gt; щелчка, чтобы при щелчке по нему отображалось предупреждение:</target>
        </trans-unit>
        <trans-unit id="80eba8bfca1ed78a5a3f72b4b1cdba111f9f76a2" translate="yes" xml:space="preserve">
          <source>Let's initialize our date picker by overriding the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt;&lt;code&gt;didInsertElement()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Давайте инициализируем наше &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt; &lt;code&gt;didInsertElement()&lt;/code&gt; &lt;/a&gt; даты, переопределив метод didInsertElement () .</target>
        </trans-unit>
        <trans-unit id="dfd8f43342f0e8e597ce5606445945b700d097d0" translate="yes" xml:space="preserve">
          <source>Let's look at a similar example that is optimized in Ember, starting with a &lt;code&gt;User&lt;/code&gt; object:</source>
          <target state="translated">Давайте посмотрим на аналогичный пример, оптимизированный в Ember, начиная с объекта &lt;code&gt;User&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5fffb3b327aecf1a41680d27190812818f0ca4fd" translate="yes" xml:space="preserve">
          <source>Let's look at a simple example of how a component can use an action to communicate with its parent.</source>
          <target state="translated">Рассмотрим простой пример того,как компонент может использовать действие для взаимодействия со своим родителем.</target>
        </trans-unit>
        <trans-unit id="f75a786fdb113fbc8a0687ed269e046e9fa4fe3b" translate="yes" xml:space="preserve">
          <source>Let's look at the parent component's JavaScript file. In this example, imagine we have a parent component called &lt;code&gt;user-profile&lt;/code&gt; that shows the user's profile to them.</source>
          <target state="translated">Давайте посмотрим на файл JavaScript родительского компонента. В этом примере представьте, что у нас есть родительский компонент под названием &lt;code&gt;user-profile&lt;/code&gt; , который показывает им профиль пользователя.</target>
        </trans-unit>
        <trans-unit id="1b66cbb003165185944800edb660d32eca31d034" translate="yes" xml:space="preserve">
          <source>Let's look at what happens if you request a record that the store already has in its cache.</source>
          <target state="translated">Рассмотрим,что произойдет,если вы запросите запись,которая уже есть в кэше магазина.</target>
        </trans-unit>
        <trans-unit id="590b9c6d802434b51a5191db38e2d406a9e971ad" translate="yes" xml:space="preserve">
          <source>Let's make sure everything is working properly. &lt;code&gt;cd&lt;/code&gt; into the application directory &lt;code&gt;ember-quickstart&lt;/code&gt; and start the development server by typing:</source>
          <target state="translated">Убедимся, что все работает исправно. &lt;code&gt;cd&lt;/code&gt; в каталог приложения &lt;code&gt;ember-quickstart&lt;/code&gt; и запустите сервер разработки, набрав:</target>
        </trans-unit>
        <trans-unit id="aab21dd37a2f939f20050faef347b0ec430a0362" translate="yes" xml:space="preserve">
          <source>Let's now implement the helper. Helpers are functions that take one or more inputs and return a single output that should be put into the HTML.</source>
          <target state="translated">Теперь давайте внедрим помощника.Хелпер-это функции,которые берут один или несколько входов и возвращают один выход,который должен быть помещен в HTML.</target>
        </trans-unit>
        <trans-unit id="f6b204ac311c4ee4a0d190f78f5606bfd6113ee7" translate="yes" xml:space="preserve">
          <source>Let's open &lt;code&gt;app/routes/rentals.js&lt;/code&gt; and return an array of rental objects from the &lt;code&gt;model&lt;/code&gt; function:</source>
          <target state="translated">Давайте откроем &lt;code&gt;app/routes/rentals.js&lt;/code&gt; и вернем массив объектов аренды из функции &lt;code&gt;model&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d86ec598cd6b2af3f7fafff3f4e673d6c0cecb5b" translate="yes" xml:space="preserve">
          <source>Let's say we wanted to add a feature that would allow the user to toggle the display of the body section. To implement this, we would first modify our template to show the body only if the value of a new &lt;code&gt;isExpanded&lt;/code&gt; property is true.</source>
          <target state="translated">Допустим, мы хотели добавить функцию, которая позволяла бы пользователю переключать отображение раздела тела. Чтобы реализовать это, мы сначала изменим наш шаблон, чтобы отображать тело, только если значение нового свойства &lt;code&gt;isExpanded&lt;/code&gt; истинно.</target>
        </trans-unit>
        <trans-unit id="18b2e4d7e3967cf6832dddd4b5cc115648948c9c" translate="yes" xml:space="preserve">
          <source>Let's see these core concepts in action by building a property rental application in the next lesson.</source>
          <target state="translated">Давайте посмотрим на эти основные понятия в действии,построив заявку на аренду недвижимости в следующем уроке.</target>
        </trans-unit>
        <trans-unit id="f9bb85bb04d6e37a3d55dd2f9946f3e2bc2fae4c" translate="yes" xml:space="preserve">
          <source>Let's start by adding a &lt;code&gt;div&lt;/code&gt; element to the component template. This &lt;code&gt;div&lt;/code&gt; will act as a place for the 3rd party map API to render the map to.</source>
          <target state="translated">Начнем с добавления элемента &lt;code&gt;div&lt;/code&gt; в шаблон компонента. Этот &lt;code&gt;div&lt;/code&gt; будет действовать как место для стороннего API карты для визуализации карты.</target>
        </trans-unit>
        <trans-unit id="56d73e58f7a22994e9e7d10b8e3ff51f512b440e" translate="yes" xml:space="preserve">
          <source>Let's start by building our &quot;about&quot; page.</source>
          <target state="translated">Давайте начнем с того,что построим нашу страницу &quot;о&quot;.</target>
        </trans-unit>
        <trans-unit id="0fb162b35ef315066c948b1304b9311aee16c4db" translate="yes" xml:space="preserve">
          <source>Let's start by creating an object that has a &lt;code&gt;computedFoo&lt;/code&gt; computed property based on a &lt;code&gt;foo&lt;/code&gt; property.</source>
          <target state="translated">Давайте начнем с создания объекта, имеющего &lt;code&gt;computedFoo&lt;/code&gt; вычислен свойство , основанный на &lt;code&gt;foo&lt;/code&gt; собственности.</target>
        </trans-unit>
        <trans-unit id="ff7832d81c62993788fb20c37421c44bad0995e9" translate="yes" xml:space="preserve">
          <source>Let's start by looking at the changes to our Router (&lt;code&gt;app/router.js&lt;/code&gt;).</source>
          <target state="translated">Начнем с рассмотрения изменений в нашем маршрутизаторе ( &lt;code&gt;app/router.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c2aa48423894ccede7d5d25c64e916771df1a170" translate="yes" xml:space="preserve">
          <source>Let's start by testing the helper by showing a simple unit test and then move on to testing with integration tests afterwards.</source>
          <target state="translated">Начнем с тестирования помощника с показа простого юнит-теста,а затем перейдем к тестированию с интеграционными тестами.</target>
        </trans-unit>
        <trans-unit id="565635cdbaba1baa8ed4a8401c8fea01e1ad7667" translate="yes" xml:space="preserve">
          <source>Let's take a look at the folders and files Ember CLI generates.</source>
          <target state="translated">Давайте посмотрим на папки и файлы,которые генерирует Ember CLI.</target>
        </trans-unit>
        <trans-unit id="e1a879debe45fb25e88e56e0a9a4d2687e8b6e70" translate="yes" xml:space="preserve">
          <source>Let's take it step by step.</source>
          <target state="translated">Давайте сделаем это шаг за шагом.</target>
        </trans-unit>
        <trans-unit id="043c80933b2a6a5bd8843f4d18a90fa90152c0fc" translate="yes" xml:space="preserve">
          <source>Let's update our &lt;code&gt;rental-listing&lt;/code&gt; component template to use our new helper and pass in &lt;code&gt;rental.propertyType&lt;/code&gt;:</source>
          <target state="translated">Давайте обновим наш шаблон компонента для &lt;code&gt;rental-listing&lt;/code&gt; чтобы использовать наш новый помощник, и передадим &lt;code&gt;rental.propertyType&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="606a02e2fcda6a8a8667006df471f3c99bd32864" translate="yes" xml:space="preserve">
          <source>Let's update the default test to contain the scenarios we want to verify:</source>
          <target state="translated">Давайте обновим тест по умолчанию,чтобы он содержал сценарии,которые мы хотим проверить:</target>
        </trans-unit>
        <trans-unit id="670783028da291a6a49d5996e531bc96807e06e5" translate="yes" xml:space="preserve">
          <source>Let's use Ember's route generator to start our &lt;code&gt;about&lt;/code&gt; route.</source>
          <target state="translated">Давайте воспользуемся генератором маршрутов Ember, чтобы начать наш &lt;code&gt;about&lt;/code&gt; route.</target>
        </trans-unit>
        <trans-unit id="1c89369985b54e2bd39755237a790278e410475d" translate="yes" xml:space="preserve">
          <source>Let's use the &lt;code&gt;{{if}}&lt;/code&gt; helper to show our current rental image larger only when &lt;code&gt;isWide&lt;/code&gt; is set to true, by setting the element class name to &lt;code&gt;wide&lt;/code&gt;. We'll also add some text to indicate that the image can be clicked on, and wrap both with an anchor element, giving it the &lt;code&gt;image&lt;/code&gt; class name so that our test can find it.</source>
          <target state="translated">Давайте воспользуемся помощником &lt;code&gt;{{if}}&lt;/code&gt; , чтобы увеличить размер текущего арендуемого изображения, только когда &lt;code&gt;isWide&lt;/code&gt; имеет значение true, задав для имени класса элемента значение &lt;code&gt;wide&lt;/code&gt; . Мы также добавим текст, указывающий, что изображение можно щелкнуть, и обернем оба элемента привязкой, присвоив ему имя класса &lt;code&gt;image&lt;/code&gt; чтобы наш тест мог его найти.</target>
        </trans-unit>
        <trans-unit id="89d849f40b52e102654d51fd7d92dff536022969" translate="yes" xml:space="preserve">
          <source>Let's use the creation of a TinyMCE component as an example. Currently, TinyMCE provides a setup configuration option we can use to do some processing after the TinyMCE instance is initialized but before it is actually rendered. We can use that setup option to do some additional setup for our component. The component itself could look something like the following:</source>
          <target state="translated">Давайте используем создание компонента TinyMCE как пример.В настоящее время TinyMCE предоставляет возможность настройки конфигурации,которую мы можем использовать для того,чтобы сделать некоторую обработку после инициализации экземпляра TinyMCE,но до того,как он будет фактически визуализирован.Мы можем использовать эту опцию для дополнительной настройки нашего компонента.Сам компонент может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="67eb54f6056cb9b4a29c6a56cd99c5c9161ed991" translate="yes" xml:space="preserve">
          <source>Let's use the pressing of the escape key as an example. If you wanted to invoke a controller action when a user presses the escape key while on your field, you would use the &lt;code&gt;escape-press&lt;/code&gt; attribute on your field like so:</source>
          <target state="translated">В качестве примера возьмем нажатие клавиши выхода. Если вы хотите вызвать действие контроллера, когда пользователь нажимает клавишу escape, находясь в вашем поле, вы должны использовать атрибут &lt;code&gt;escape-press&lt;/code&gt; в своем поле следующим образом:</target>
        </trans-unit>
        <trans-unit id="0946f7fd87cca9c49382d10b9e9e28288b447771" translate="yes" xml:space="preserve">
          <source>Let's use this hook to cleanup our date picker and event listener from above:</source>
          <target state="translated">Давайте используем этот крючок,чтобы очистить наш выбор даты и события слушателя сверху:</target>
        </trans-unit>
        <trans-unit id="20e7c26e92650cd8cc308c911a7985599ad92d4f" translate="yes" xml:space="preserve">
          <source>Let's work through what we want to do on the home page. We want our application to:</source>
          <target state="translated">Давайте разберемся с тем,что мы хотим сделать на главной странице.Нам нужна наша заявка:</target>
        </trans-unit>
        <trans-unit id="635a95b002cf836140f8bfffc7a9737eb04db8de" translate="yes" xml:space="preserve">
          <source>Lets add some protective code to ensure our results do not get out of sync with our filter input. To do this we'll simply provide the filter text to the filter function, so that when the results come back we can compare the original filter value with the current filter value. We will update the results on screen only if the original filter value and the current filter value are the same.</source>
          <target state="translated">Давайте добавим защитный код,чтобы наши результаты не вышли из синхронизации с входом фильтра.Для этого мы просто предоставим текст фильтра в функцию фильтрации,чтобы при получении результатов мы могли сравнить исходное значение фильтра с текущим значением фильтра.Мы будем обновлять результаты на экране только в том случае,если исходное значение фильтра и текущее значение фильтра совпадают.</target>
        </trans-unit>
        <trans-unit id="bc44f6fd03fb10139ad97676e11707e10e54b58c" translate="yes" xml:space="preserve">
          <source>Lets begin by opening the component integration test created when we generated our &lt;code&gt;list-filter&lt;/code&gt; component, &lt;code&gt;tests/integration/components/list-filter-test.js&lt;/code&gt;. Remove the default test, and create a new test that verifies that by default, the component will list all items.</source>
          <target state="translated">Давайте начнем с открытия теста интеграции компонентов, созданного при создании нашего компонента &lt;code&gt;list-filter&lt;/code&gt; , &lt;code&gt;tests/integration/components/list-filter-test.js&lt;/code&gt; . Удалите тест по умолчанию и создайте новый тест, который проверяет, что по умолчанию компонент перечислит все элементы.</target>
        </trans-unit>
        <trans-unit id="c885b189d5463a9de5e3e50647d490118201ec4c" translate="yes" xml:space="preserve">
          <source>Libraries on top of Ember can add initializers, like so:</source>
          <target state="translated">Библиотеки в верхней части Эмбер могут добавлять инициализаторы:</target>
        </trans-unit>
        <trans-unit id="945316ced7cc6b53c759ff6f262d52bfcb61c767" translate="yes" xml:space="preserve">
          <source>Library Info</source>
          <target state="translated">Библиотечная информация</target>
        </trans-unit>
        <trans-unit id="c4a417c6c7ec6f5a4f9e827b354dbb85f2e88f9b" translate="yes" xml:space="preserve">
          <source>Library authors can customize how any object will display in the Inspector. By defining a &lt;code&gt;_debugInfo&lt;/code&gt; method, an object can tell the Inspector how it should be rendered. For an example on how to customize an object's properties, see &lt;a href=&quot;https://github.com/emberjs/data/blob/f1be2af71d7402d034bc034d9502733647cad295/packages/ember-data/lib/system/debug/debug_info.js&quot;&gt;Ember Data's customization&lt;/a&gt;.</source>
          <target state="translated">Авторы библиотеки могут настроить отображение любого объекта в Инспекторе. Определяя метод &lt;code&gt;_debugInfo&lt;/code&gt; , объект может сообщить Инспектору, как он должен отображаться. Пример настройки свойств объекта см. В разделе &lt;a href=&quot;https://github.com/emberjs/data/blob/f1be2af71d7402d034bc034d9502733647cad295/packages/ember-data/lib/system/debug/debug_info.js&quot;&gt;Настройка Ember Data&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">Лицензия MIT.</target>
        </trans-unit>
        <trans-unit id="8226bf9e9b956346502b16db50675cd108dd1920" translate="yes" xml:space="preserve">
          <source>Life Without Prototype Extension</source>
          <target state="translated">Жизнь без продления прототипа</target>
        </trans-unit>
        <trans-unit id="57ec013a3d266c6865a25d72a7960cd8d6bed640" translate="yes" xml:space="preserve">
          <source>Lifecycle Hook Examples</source>
          <target state="translated">Примеры крюка на протяжении всего жизненного цикла</target>
        </trans-unit>
        <trans-unit id="ec7756d2056b7d20b67e5f847928e2cf4a83f1d6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;find&lt;/code&gt;, but throws an error if the element selector returns no results.</source>
          <target state="translated">Подобно &lt;code&gt;find&lt;/code&gt; , но выдает ошибку, если селектор элемента не возвращает результатов.</target>
        </trans-unit>
        <trans-unit id="b0ff675c379589d88041784c63e59222fb0ad141" translate="yes" xml:space="preserve">
          <source>Like any Ember object, a service is initialized and can have properties and methods of its own. Below, the shopping cart service manages an items array that represents the items currently in the shopping cart.</source>
          <target state="translated">Как и любой Ember-объект,услуга инициализируется и может иметь свои свойства и методы.Ниже сервис корзины управляет массивом элементов,который представляет элементы,находящиеся в настоящее время в корзине.</target>
        </trans-unit>
        <trans-unit id="f24ff1b32ab054733196fb79b66cf78f2352602e" translate="yes" xml:space="preserve">
          <source>Like any helper, the &lt;code&gt;unbound&lt;/code&gt; helper can accept a nested helper expression. This allows for custom helpers to be rendered unbound:</source>
          <target state="translated">Как и любой помощник, &lt;code&gt;unbound&lt;/code&gt; помощник может принимать вложенное выражение помощника. Это позволяет отображать настраиваемые помощники несвязанными:</target>
        </trans-unit>
        <trans-unit id="07aa5990e7980b9aa614cd12afffc38c4f316c64" translate="yes" xml:space="preserve">
          <source>Like normal attributes, actions can be a property on the component; the only difference is that the property is set to a function that knows how to trigger behavior.</source>
          <target state="translated">Как и обычные атрибуты,действия могут быть свойством компонента;единственное отличие состоит в том,что свойство установлено в функцию,которая знает,как вызвать поведение.</target>
        </trans-unit>
        <trans-unit id="c2cac3e8601ae552602a520670e5074a8519074e" translate="yes" xml:space="preserve">
          <source>Like other helpers, the &lt;code&gt;{{#each}}&lt;/code&gt; helper is bound. If a new item is added to or removed from the iterated array, the DOM will be updated without having to write any additional code. That said, Ember requires that you use &lt;a href=&quot;https://guides.emberjs.com/object-model/enumerables/#toc_use-of-observable-methods-and-properties&quot;&gt;special methods&lt;/a&gt; to update bound arrays. Also be aware that &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#toc_specifying-keys&quot;&gt;using the &lt;code&gt;key&lt;/code&gt; option with an each helper&lt;/a&gt; can improve re-render performance when an array is replaced with another containing similar items.</source>
          <target state="translated">Как и другие помощники, помощник &lt;code&gt;{{#each}}&lt;/code&gt; связан. Если новый элемент добавляется в повторяемый массив или удаляется из него, DOM будет обновляться без необходимости написания какого-либо дополнительного кода. Тем не менее, Ember требует, чтобы вы использовали &lt;a href=&quot;https://guides.emberjs.com/object-model/enumerables/#toc_use-of-observable-methods-and-properties&quot;&gt;специальные методы&lt;/a&gt; для обновления связанных массивов. Также имейте в &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#toc_specifying-keys&quot;&gt;виду, &lt;code&gt;key&lt;/code&gt; &lt;/a&gt; что использование ключевого параметра с каждым помощником может улучшить производительность повторного рендеринга, когда массив заменяется другим, содержащим аналогичные элементы.</target>
        </trans-unit>
        <trans-unit id="5368091bb8913e46aa5ac099e90ff00c3876dcb1" translate="yes" xml:space="preserve">
          <source>Like the filtering methods, the &lt;code&gt;every()&lt;/code&gt; and &lt;code&gt;any()&lt;/code&gt; methods have analogous &lt;code&gt;isEvery()&lt;/code&gt; and &lt;code&gt;isAny()&lt;/code&gt; methods.</source>
          <target state="translated">Как и методы фильтрации, методы &lt;code&gt;every()&lt;/code&gt; и &lt;code&gt;any()&lt;/code&gt; имеют аналогичные методы &lt;code&gt;isEvery()&lt;/code&gt; и &lt;code&gt;isAny()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ace18740b81dab0322b75335cffde9805b53a9b6" translate="yes" xml:space="preserve">
          <source>Likewise, if you try to call &lt;code&gt;get&lt;/code&gt; on a property whose value is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;unknownProperty()&lt;/code&gt; method will be called on the object. If this method returns any value other than &lt;code&gt;undefined&lt;/code&gt;, it will be returned instead. This allows you to implement &quot;virtual&quot; properties that are not defined upfront.</source>
          <target state="translated">Аналогичным образом, если вы попытаетесь вызвать &lt;code&gt;get&lt;/code&gt; для свойства, значение которого &lt;code&gt;undefined&lt;/code&gt; , для &lt;code&gt;unknownProperty()&lt;/code&gt; будет вызван метод unknownProperty () . Если этот метод возвращает любое значение, кроме &lt;code&gt;undefined&lt;/code&gt; , оно будет возвращено вместо него. Это позволяет вам реализовать &amp;laquo;виртуальные&amp;raquo; свойства, которые не определены заранее.</target>
        </trans-unit>
        <trans-unit id="f6c5555cae22b7bb9706107a4ca1a41e719e438c" translate="yes" xml:space="preserve">
          <source>Link to contact information</source>
          <target state="translated">Ссылка на контактную информацию</target>
        </trans-unit>
        <trans-unit id="74076a27ecfcb330397619467fbee055750ed67b" translate="yes" xml:space="preserve">
          <source>Link to information about the company</source>
          <target state="translated">Ссылка на информацию о компании</target>
        </trans-unit>
        <trans-unit id="5d77a7c8983578d904111c3bee72bdf79449008b" translate="yes" xml:space="preserve">
          <source>LinkComponent</source>
          <target state="translated">LinkComponent</target>
        </trans-unit>
        <trans-unit id="ac4a62a01d54a4764c6d144461d6c9e37e4819d1" translate="yes" xml:space="preserve">
          <source>LinkComponent.rel</source>
          <target state="translated">LinkComponent.rel</target>
        </trans-unit>
        <trans-unit id="940de94ebf96b39d03d62b9606182c5b87b78db6" translate="yes" xml:space="preserve">
          <source>Linking to a Specific Rental</source>
          <target state="translated">Связь с конкретной арендой</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="90f76386e11d7ad585627bc493ee7aedded009f6" translate="yes" xml:space="preserve">
          <source>Links beginning with &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, will be used as is, with no further manipulation.</source>
          <target state="translated">Ссылки, начинающиеся с &lt;code&gt;//&lt;/code&gt; , &lt;code&gt;http://&lt;/code&gt; , &lt;code&gt;https://&lt;/code&gt; , будут использоваться как есть, без дальнейших манипуляций.</target>
        </trans-unit>
        <trans-unit id="9cf37ddbb4833e091bc4ad70d9b2018056400b70" translate="yes" xml:space="preserve">
          <source>Links beginning with a single &lt;code&gt;/&lt;/code&gt; will have the current adapter's &lt;code&gt;host&lt;/code&gt; value prepended to it.</source>
          <target state="translated">К ссылкам, начинающимся с одного &lt;code&gt;/&lt;/code&gt; , будет добавлено текущее значение &lt;code&gt;host&lt;/code&gt; адаптера .</target>
        </trans-unit>
        <trans-unit id="f7264df21b6806560320b80c6b7fbb6558a5eb0e" translate="yes" xml:space="preserve">
          <source>Links with no beginning &lt;code&gt;/&lt;/code&gt; will have a parentURL prepended to it, via the current adapter's &lt;code&gt;buildURL&lt;/code&gt;.</source>
          <target state="translated">Ссылки без начала &lt;code&gt;/&lt;/code&gt; будет иметь parentURL предваряется него, с помощью текущего адаптера &lt;code&gt;buildURL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66bf4d535a1ef04e79b6cdc89f1a06627656f756" translate="yes" xml:space="preserve">
          <source>Linter, linting</source>
          <target state="translated">Линтер,вязка</target>
        </trans-unit>
        <trans-unit id="bbba5a3d0f934d3dca2995dd3e4663bd1ec20aff" translate="yes" xml:space="preserve">
          <source>Linux users can use &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;this guide for Node.js installation on Linux&lt;/a&gt;.</source>
          <target state="translated">Пользователи Linux могут использовать &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;это руководство для установки Node.js в Linux&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29b74ca8265c653c34364f3d4acd28cd24128388" translate="yes" xml:space="preserve">
          <source>List of objects defining filters. The object should have a `name` and `desc` property.</source>
          <target state="translated">Список объектов,определяющих фильтры.Объект должен иметь свойства `имя` и `деск`.</target>
        </trans-unit>
        <trans-unit id="00607eeb7342e3f04724c5834e4e2e8f7c2f6ff1" translate="yes" xml:space="preserve">
          <source>List the available rentals</source>
          <target state="translated">Перечислить доступные варианты аренды</target>
        </trans-unit>
        <trans-unit id="d03c2905c8cd553f3f1f729734fe9cef1280d14a" translate="yes" xml:space="preserve">
          <source>Listed below are the component lifecycle hooks in order of execution according to render scenario.</source>
          <target state="translated">Ниже перечислены крючки жизненного цикла компонентов в порядке их выполнения в соответствии со сценарием рендеринга.</target>
        </trans-unit>
        <trans-unit id="02afd43a11c4310cdd19459b87081ef2af547ad3" translate="yes" xml:space="preserve">
          <source>Loading / Error Substates</source>
          <target state="translated">Загрузка/Ошибка субстратов</target>
        </trans-unit>
        <trans-unit id="0989b580dabe8ed18a9790d54605768f7b2e7f15" translate="yes" xml:space="preserve">
          <source>Loads a record in a belongs to relationship if it is not already loaded. If the relationship is already loaded this method does not trigger a new load.</source>
          <target state="translated">Загружает запись в отношения,если она еще не загружена.Если отношение уже загружено,то этот метод не вызывает новую загрузку.</target>
        </trans-unit>
        <trans-unit id="1ed570ef8b28d2a9d4b5544de5723875a7b30ab7" translate="yes" xml:space="preserve">
          <source>Loads a route, sets up any controllers, and renders any templates associated with the route as though a real user had triggered the route change while using your app.</source>
          <target state="translated">Загружает маршрут,настраивает любые контроллеры и визуализирует любые шаблоны,связанные с маршрутом,как будто реальный пользователь инициировал изменение маршрута во время использования вашего приложения.</target>
        </trans-unit>
        <trans-unit id="8b618c79a59fd45e8d69fc13ceb218d48e4542b0" translate="yes" xml:space="preserve">
          <source>Loads the relationship if it is not already loaded. If the relationship is already loaded this method does not trigger a new load.</source>
          <target state="translated">Загружает отношения,если они еще не загружены.Если отношение уже загружено,то этот метод не вызывает новую загрузку.</target>
        </trans-unit>
        <trans-unit id="e3b0da20d6e4d3578fde73b0982ef39086f18d71" translate="yes" xml:space="preserve">
          <source>Location API</source>
          <target state="translated">Местоположение API</target>
        </trans-unit>
        <trans-unit id="3c20cc766b3ed4cefd9c0f4868560b2be809f67b" translate="yes" xml:space="preserve">
          <source>Log generated controller</source>
          <target state="translated">Генерируемый журнал контроллера</target>
        </trans-unit>
        <trans-unit id="5d5c719cb08629876124bf7f8b02dda0475b8203" translate="yes" xml:space="preserve">
          <source>Log object bindings</source>
          <target state="translated">Крепления объектов журнала</target>
        </trans-unit>
        <trans-unit id="603c2cf3c52217f421f3b823673b4e845405e05d" translate="yes" xml:space="preserve">
          <source>Log router transitions</source>
          <target state="translated">Переходы лог-маршрутизатора</target>
        </trans-unit>
        <trans-unit id="aa00341e83ed481f80d9005fae06dbb9d29b533e" translate="yes" xml:space="preserve">
          <source>Log view lookups</source>
          <target state="translated">Поиск в журнале</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="f2e14633e86adb02560262087e31589175004916" translate="yes" xml:space="preserve">
          <source>Logging.</source>
          <target state="translated">Logging.</target>
        </trans-unit>
        <trans-unit id="1bfaba86c08ed86838f22fb60cceb822f0b9db4c" translate="yes" xml:space="preserve">
          <source>Mac users often prefer to install Node using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. After installing Homebrew, run &lt;code&gt;brew install node&lt;/code&gt; to install Node.js. Alternatively, installer packages are available directly from &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;.</source>
          <target state="translated">Пользователи Mac часто предпочитают устанавливать Node с помощью &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; . После установки Homebrew запустите &lt;code&gt;brew install node&lt;/code&gt; установки brew, чтобы установить Node.js. В качестве альтернативы, установочные пакеты доступны непосредственно из &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2443f268bec1ac71f9689a446f93b5003aeaf34" translate="yes" xml:space="preserve">
          <source>Make sure the &quot;Display the Tomster&quot; checkbox is checked.</source>
          <target state="translated">Убедитесь,что флажок &quot;Отображать Томстер&quot; установлен.</target>
        </trans-unit>
        <trans-unit id="6ad226711cb1283574db1e4c496932d2f5407750" translate="yes" xml:space="preserve">
          <source>Make sure the Inspector is active when you call this method.</source>
          <target state="translated">Убедитесь,что инспектор активен при вызове этого метода.</target>
        </trans-unit>
        <trans-unit id="5be8b4e32ecc791ac6bd4b6f06d2b9e2c830fcde" translate="yes" xml:space="preserve">
          <source>Make sure to use these accessor methods; otherwise, computed properties won't recalculate, observers won't fire, and templates won't update.</source>
          <target state="translated">Убедитесь,что используете эти методы доступа;в противном случае вычисленные свойства не будут пересчитываться,наблюдатели не будут стрелять,а шаблоны не будут обновляться.</target>
        </trans-unit>
        <trans-unit id="a10cf5cb44c73808cbd9b0ee95ade42559077f79" translate="yes" xml:space="preserve">
          <source>Make sure you are testing performance on real devices. Simulated mobile environments on a desktop computer give an optimistic-at-best representation of what your real world performance will be like. The more operating systems and hardware configurations you test, the more confident you can be.</source>
          <target state="translated">Убедитесь,что вы тестируете производительность на реальных устройствах.Моделируемые мобильные среды на настольном компьютере дают оптимистичное лучшее представление о том,что ваш реальный мир производительность будет как.Чем больше операционных систем и аппаратных конфигураций вы тестируете,тем увереннее вы можете быть.</target>
        </trans-unit>
        <trans-unit id="a4b28eac87396cdc54aabf1394e488ee8f47ac04" translate="yes" xml:space="preserve">
          <source>Make sure you list these dependencies so Ember knows when to update bindings that connect to a computed property. Changing a dependency will not immediately trigger an update of the computed property, but will instead clear the cache so that it is updated when the next &lt;code&gt;get&lt;/code&gt; is called on the property.</source>
          <target state="translated">Убедитесь, что вы перечислили эти зависимости, чтобы Ember знал, когда обновлять привязки, которые подключаются к вычисляемому свойству. Изменение зависимости не приведет к немедленному запуску обновления вычисляемого свойства, а вместо этого очистит кеш, чтобы он обновлялся при следующем вызове &lt;code&gt;get&lt;/code&gt; для свойства.</target>
        </trans-unit>
        <trans-unit id="d867490c5d6df24c478defa0929214c97994571f" translate="yes" xml:space="preserve">
          <source>Makes a method available via an additional name.</source>
          <target state="translated">Делает метод доступным через дополнительное название.</target>
        </trans-unit>
        <trans-unit id="c324510651548eb44cd83c2afb3351e2d31a161e" translate="yes" xml:space="preserve">
          <source>Making Google Maps Available</source>
          <target state="translated">Делать Карты Google доступными</target>
        </trans-unit>
        <trans-unit id="6b2c35fea089f0887b25b17735fb5a1d326a2654" translate="yes" xml:space="preserve">
          <source>Making Updates to the Rendered DOM with &lt;code&gt;didRender&lt;/code&gt;</source>
          <target state="translated">Обновление визуализированной модели DOM с помощью &lt;code&gt;didRender&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70bfaf1566829005270d36f38f0ffe1bc5723469" translate="yes" xml:space="preserve">
          <source>Making changes to Ember Data records is as simple as setting the attribute you want to change:</source>
          <target state="translated">Внесение изменений в записи Ember Data так же просто,как и установка атрибута,который вы хотите изменить:</target>
        </trans-unit>
        <trans-unit id="dcaec0425116cb667caf4bac2560e1cc169c5402" translate="yes" xml:space="preserve">
          <source>Managing Dependencies</source>
          <target state="translated">Управление зависимостями</target>
        </trans-unit>
        <trans-unit id="af5b5bc4db6b9a07519c515c5725d7ebc1a458e9" translate="yes" xml:space="preserve">
          <source>Many computed properties have dependencies on other properties. For example, in the above example, the &lt;code&gt;fullName&lt;/code&gt; property depends on &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; to determine its value. You can tell Ember about these dependencies like this:</source>
          <target state="translated">Многие вычисленные свойства зависят от других свойств. Например, в приведенном выше примере свойство &lt;code&gt;fullName&lt;/code&gt; зависит от &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; для определения своего значения. Вы можете сообщить Ember об этих зависимостях следующим образом:</target>
        </trans-unit>
        <trans-unit id="65b31bc269a60f245ce759ee19932b6d67fae66e" translate="yes" xml:space="preserve">
          <source>Many of the common HTML properties you would want to use like &lt;code&gt;class&lt;/code&gt;, and &lt;code&gt;rel&lt;/code&gt; will work. When adding class names, Ember will also apply the standard &lt;code&gt;ember-view&lt;/code&gt; and possibly &lt;code&gt;active&lt;/code&gt; class names.</source>
          <target state="translated">Многие общие свойства HTML, которые вы хотели бы использовать как &lt;code&gt;class&lt;/code&gt; , и &lt;code&gt;rel&lt;/code&gt; будут работать. При добавлении имен классов Ember также применит стандартные имена &lt;code&gt;ember-view&lt;/code&gt; и, возможно, &lt;code&gt;active&lt;/code&gt; имена классов.</target>
        </trans-unit>
        <trans-unit id="6b961b379063852ca79321587bc3a8c0ab661545" translate="yes" xml:space="preserve">
          <source>Many other libraries provide some kind of iterator or enumeration like facility. This is often where the most common API conflicts occur. Ember's API is designed to be as friendly as possible with other libraries by implementing only methods that mostly correspond to the JavaScript 1.8 API.</source>
          <target state="translated">Многие другие библиотеки предоставляют некий итератор или перечисление,подобное подсистеме.Часто именно здесь происходят наиболее распространенные конфликты API.API Эмбера спроектирован так,чтобы быть максимально дружественным к другим библиотекам,реализуя только те методы,которые в основном соответствуют JavaScript 1.8 API.</target>
        </trans-unit>
        <trans-unit id="2ca19e6e187118e63e97c39edbdf6a65e72c04c2" translate="yes" xml:space="preserve">
          <source>Many servers, such as Rails and PHP, will automatically convert this URL-encoded array into an Array for you on the server-side. If you want to encode the IDs, differently, just override this (one-line) method.</source>
          <target state="translated">Многие серверы,такие как Rails и PHP,автоматически преобразуют этот массив,закодированный в URL,в массив для вас на стороне сервера.Если вы хотите кодировать IDs,иначе,просто переопределите этот (однострочный)метод.</target>
        </trans-unit>
        <trans-unit id="1bee9fefa75d1483e8070e9750032eef28ff759d" translate="yes" xml:space="preserve">
          <source>Many-To-Many</source>
          <target state="translated">Many-To-Many</target>
        </trans-unit>
        <trans-unit id="c883031b9ab452aff47320db2b5868dd27dd5be3" translate="yes" xml:space="preserve">
          <source>Many-to-Many</source>
          <target state="translated">Many-to-Many</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="510afa932a8af5b85329d8ebc5ac4856e95f63ef" translate="yes" xml:space="preserve">
          <source>Map a controller's property to a different query param key</source>
          <target state="translated">сопоставление свойства контроллера с другим ключом параметров запроса</target>
        </trans-unit>
        <trans-unit id="a89a789ab5fcdfe6e7cedcf5a3677beb9a16fe8f" translate="yes" xml:space="preserve">
          <source>Maps all of the items in the enumeration to another value, returning a new array. This method corresponds to &lt;code&gt;map()&lt;/code&gt; defined in JavaScript 1.6.</source>
          <target state="translated">Сопоставляет все элементы в перечислении с другим значением, возвращая новый массив. Этот метод соответствует &lt;code&gt;map()&lt;/code&gt; определенному в JavaScript 1.6.</target>
        </trans-unit>
        <trans-unit id="fbe8601461d7ed761fcd5a028a86fa5c4bf1934e" translate="yes" xml:space="preserve">
          <source>Mark a string as safe for unescaped output with Ember templates. If you return HTML from a helper, use this function to ensure Ember's rendering layer does not escape the HTML.</source>
          <target state="translated">Отметьте строку как безопасную для вывода в неэкранированном виде с помощью Ember шаблонов.Если вы возвращаете HTML от помощника,используйте эту функцию,чтобы гарантировать,что слой рендеринга Ember не ускользнет от HTML.</target>
        </trans-unit>
        <trans-unit id="fb8384f3697cae9999b84d6bff001ae61ca3ac5e" translate="yes" xml:space="preserve">
          <source>Marks the record as deleted but does not save it. You must call &lt;code&gt;save&lt;/code&gt; afterwards if you want to persist it. You might use this method if you want to allow the user to still &lt;code&gt;rollbackAttributes()&lt;/code&gt; after a delete was made.</source>
          <target state="translated">Отмечает запись как удаленную, но не сохраняет ее. Вы должны вызвать &lt;code&gt;save&lt;/code&gt; после этого, если хотите сохранить его. Вы можете использовать этот метод, если хотите, чтобы пользователь продолжал &lt;code&gt;rollbackAttributes()&lt;/code&gt; после удаления.</target>
        </trans-unit>
        <trans-unit id="1ef56709ca6a20c8e16b3f6b056dde8c7b15f5b0" translate="yes" xml:space="preserve">
          <source>Measure performance from the beginning, and keep testing as your app develops.</source>
          <target state="translated">Измеряйте производительность с самого начала,и продолжайте тестирование по мере разработки вашего приложения.</target>
        </trans-unit>
        <trans-unit id="8c2479a17e803025649242a9474178042dc135a9" translate="yes" xml:space="preserve">
          <source>Merge the contents of two objects together into the first object.</source>
          <target state="translated">Соедините содержимое двух объектов вместе в первый объект.</target>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="ea9fc818037e4c1eb523043b8c97a427dff9ed43" translate="yes" xml:space="preserve">
          <source>Metadata associated with the request for async hasMany relationships.</source>
          <target state="translated">Метаданные,связанные с запросом на асинхронизацию hasMany отношений.</target>
        </trans-unit>
        <trans-unit id="cdd0b54a13118c5e57a4f231ed1e30a46262760c" translate="yes" xml:space="preserve">
          <source>Method Implementation</source>
          <target state="translated">Внедрение метода</target>
        </trans-unit>
        <trans-unit id="fb4e599fda756443d7e1a45a5e3f433bc0cffb30" translate="yes" xml:space="preserve">
          <source>Method to call to remove all observers</source>
          <target state="translated">Метод вызова для удаления всех наблюдателей</target>
        </trans-unit>
        <trans-unit id="f3f9a4f8e75f8f8fc949764d8a4323ec811afdd7" translate="yes" xml:space="preserve">
          <source>Method to call to remove all observers.</source>
          <target state="translated">Метод вызова для удаления всех наблюдателей.</target>
        </trans-unit>
        <trans-unit id="3382975c2f98c7ed302504a43959793238b27e2b" translate="yes" xml:space="preserve">
          <source>Method to invoke. May be a function or a string. If you pass a string then it will be looked up on the passed target.</source>
          <target state="translated">Метод вызова.Может быть функция или строка.Если передать строку,то она будет искаться на переданной цели.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="16e8c90b05ca8f10c04dfc691ff732fb574a0479" translate="yes" xml:space="preserve">
          <source>Mirage works by overriding the JavaScript code that makes network requests and instead returns the JSON you specify. We should note that this means you will not see any network requests in your development tools but will instead see the JSON logged in your console. Our update to &lt;code&gt;mirage/config.js&lt;/code&gt; configures Mirage so that whenever Ember Data makes a GET request to &lt;code&gt;/api/rentals&lt;/code&gt;, Mirage will return this JavaScript object as JSON and no network request is actually made. We also specified a &lt;code&gt;namespace&lt;/code&gt; of &lt;code&gt;/api&lt;/code&gt; in our mirage configuration. Without this change, navigation to &lt;code&gt;/rentals&lt;/code&gt; in our application would conflict with Mirage.</source>
          <target state="translated">Mirage работает, переопределяя код JavaScript, который выполняет сетевые запросы, и вместо этого возвращает указанный вами JSON. Следует отметить, что это означает, что вы не увидите никаких сетевых запросов в своих инструментах разработки, а вместо этого увидите JSON, зарегистрированный в вашей консоли. Наше обновление для &lt;code&gt;mirage/config.js&lt;/code&gt; настраивает Mirage так, что всякий раз, когда Ember Data отправляет GET-запрос в &lt;code&gt;/api/rentals&lt;/code&gt; , Mirage будет возвращать этот объект JavaScript как JSON, а сетевой запрос фактически не выполняется. Мы также определили &lt;code&gt;namespace&lt;/code&gt; из &lt;code&gt;/api&lt;/code&gt; в нашей конфигурации миража. Без этого изменения переход к &lt;code&gt;/rentals&lt;/code&gt; в нашем приложении будет конфликтовать с Mirage.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="1d21f12330d03b94dcb1cd6e01f79b79236abc39" translate="yes" xml:space="preserve">
          <source>Missing Promises</source>
          <target state="translated">Пропущенные обещания</target>
        </trans-unit>
        <trans-unit id="c0dcb865ad81a32e522b11fd1e33bae685e88709" translate="yes" xml:space="preserve">
          <source>Mixed</source>
          <target state="translated">Mixed</target>
        </trans-unit>
        <trans-unit id="8acb4f1a53ad0e32454267c61a794bb3188be2c6" translate="yes" xml:space="preserve">
          <source>Mixin</source>
          <target state="translated">Mixin</target>
        </trans-unit>
        <trans-unit id="7f1fa61246876b33a612f1bb51874527379a609d" translate="yes" xml:space="preserve">
          <source>Mobile Devices</source>
          <target state="translated">Мобильные устройства</target>
        </trans-unit>
        <trans-unit id="817f9d67353c530f2c6d64063a80813debd1618f" translate="yes" xml:space="preserve">
          <source>Model Relationships</source>
          <target state="translated">Модельные отношения</target>
        </trans-unit>
        <trans-unit id="631fcdbb4433fd9a49c55ac2973f6d77e0d68f1d" translate="yes" xml:space="preserve">
          <source>Model-specific adapters can be created by putting your adapter class in an &lt;code&gt;app/adapters/&lt;/code&gt; + &lt;code&gt;model-name&lt;/code&gt; + &lt;code&gt;.js&lt;/code&gt; file of the application.</source>
          <target state="translated">Адаптеры для конкретных моделей можно создать, поместив класс адаптера в файл &lt;code&gt;app/adapters/&lt;/code&gt; + &lt;code&gt;model-name&lt;/code&gt; + &lt;code&gt;.js&lt;/code&gt; приложения.</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="aa3797a25b7cc382220d5723004f9b4aa101aa91" translate="yes" xml:space="preserve">
          <source>Models are objects that represent the underlying data that your application presents to the user. Different apps will have very different models, depending on what problems they're trying to solve.</source>
          <target state="translated">Модели-это объекты,представляющие базовые данные,которые ваше приложение представляет пользователю.Различные приложения будут иметь очень разные модели,в зависимости от того,какие проблемы они пытаются решить.</target>
        </trans-unit>
        <trans-unit id="019afea3eb207ecfb59621840f4278d323f8e988" translate="yes" xml:space="preserve">
          <source>Models define the type of data that will be provided by your server. For example, a &lt;code&gt;Person&lt;/code&gt; model might have a &lt;code&gt;firstName&lt;/code&gt; attribute that is a string, and a &lt;code&gt;birthday&lt;/code&gt; attribute that is a date:</source>
          <target state="translated">Модели определяют тип данных, которые будут предоставляться вашим сервером. Например, модель &lt;code&gt;Person&lt;/code&gt; может иметь атрибут &lt;code&gt;firstName&lt;/code&gt; , который является строкой, и атрибут &lt;code&gt;birthday&lt;/code&gt; который является датой:</target>
        </trans-unit>
        <trans-unit id="8840b4d964096eecdc906427cdbaf361ea0eb171" translate="yes" xml:space="preserve">
          <source>Models don't have any data themselves, they define the attributes, relationships and behavior of specific instances, which are called &lt;strong&gt;records&lt;/strong&gt;.</source>
          <target state="translated">Сами модели не имеют никаких данных, они определяют атрибуты, отношения и поведение конкретных экземпляров, которые называются &lt;strong&gt;записями&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5b1d06fa82763ab47944cd44ffa1f0114d490583" translate="yes" xml:space="preserve">
          <source>Models represent persistent state.</source>
          <target state="translated">Модели представляют собой устойчивое состояние.</target>
        </trans-unit>
        <trans-unit id="829196320118f53e8a87ca0f181c1208424d33f7" translate="yes" xml:space="preserve">
          <source>Models tend to be &lt;em&gt;persistent&lt;/em&gt;. That means the user does not expect model data to be lost when they close their browser window. To make sure no data is lost, if the user makes changes to a model, you need to store the model data somewhere that it will not be lost.</source>
          <target state="translated">Модели, как правило, &lt;em&gt;настойчивы&lt;/em&gt; . Это означает, что пользователь не ожидает, что данные модели будут потеряны при закрытии окна браузера. Чтобы убедиться, что данные не потеряны, если пользователь вносит изменения в модель, вам необходимо где-то сохранить данные модели, чтобы они не были потеряны.</target>
        </trans-unit>
        <trans-unit id="becbba5666aa6f8e8151efb9c6a064c94e791551" translate="yes" xml:space="preserve">
          <source>Models, records, adapters and the store are the core concepts you should understand to get the most out of Ember Data. The following sections go into more depth about each of these concepts, and how to use them together.</source>
          <target state="translated">Модели,записи,адаптеры и хранилище-это основные понятия,которые вы должны понимать,чтобы получить максимальную отдачу от Ember Data.Следующие разделы более подробно рассказывают о каждом из этих понятий и о том,как использовать их вместе.</target>
        </trans-unit>
        <trans-unit id="e33dda3590ab9e1e10e3d376c68eb2ddf127a98d" translate="yes" xml:space="preserve">
          <source>Modern application asset management (including concatenation, minification, and versioning).</source>
          <target state="translated">Современное управление активами приложений (включая конкатенирование,минимизацию и версионирование).</target>
        </trans-unit>
        <trans-unit id="4dc51b6f068ce224674bf3d77da2de0c1a9aa6fa" translate="yes" xml:space="preserve">
          <source>Modifying the action's first parameter</source>
          <target state="translated">Изменение первого параметра действия</target>
        </trans-unit>
        <trans-unit id="d60ceaa995b9a7096628c7dee8145d8ce19d1838" translate="yes" xml:space="preserve">
          <source>Module:</source>
          <target state="translated">Module:</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="39760d15e024ca9e9dbb9f88fa69744a42526bab" translate="yes" xml:space="preserve">
          <source>More documentation about &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; are below.</source>
          <target state="translated">Дополнительная документация о &lt;code&gt;get&lt;/code&gt; и &lt;code&gt;set&lt;/code&gt; приведена ниже.</target>
        </trans-unit>
        <trans-unit id="5a59199bd069e71ebec2691e36709a71e3b09cb6" translate="yes" xml:space="preserve">
          <source>More general than decamelize. Returns the lower_case_and_underscored form of a string.</source>
          <target state="translated">Более общий,чем декамелизировать.Возвращает строку в форме lower_case_и_underscored.</target>
        </trans-unit>
        <trans-unit id="55272c5128cb978d842fea14f3de880b35c70fcf" translate="yes" xml:space="preserve">
          <source>Most Ember.js applications will only have a single &lt;code&gt;DS.Store&lt;/code&gt; that is automatically created by their &lt;code&gt;Ember.Application&lt;/code&gt;.</source>
          <target state="translated">В большинстве приложений Ember.js будет только один &lt;code&gt;DS.Store&lt;/code&gt; , который автоматически создается их &lt;code&gt;Ember.Application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43ad4a5b784abcbbce3b199f0ed3a3291fc39b60" translate="yes" xml:space="preserve">
          <source>Most browsers support at least ES5, and some even have ES6 (also known as ES2015) support. You can check each browser's support (including yours) here:</source>
          <target state="translated">Большинство браузеров поддерживают,по крайней мере,ES5,а некоторые даже поддерживают ES6 (также известную как ES2015).Вы можете проверить поддержку каждого браузера (включая вашу)здесь:</target>
        </trans-unit>
        <trans-unit id="7be23ccab1061cd0bab7344d8b6ec95b5a61502e" translate="yes" xml:space="preserve">
          <source>Most templates in an Ember codebase are instantly familiar, and look like any fragment of HTML. For example:</source>
          <target state="translated">Большинство шаблонов в коде Ember мгновенно знакомы и выглядят как любой фрагмент HTML.Например:</target>
        </trans-unit>
        <trans-unit id="e640b670a6bf70395bf924c1c54b5e4ad8cb46d5" translate="yes" xml:space="preserve">
          <source>Most traditional REST-like HTTP APIs will not use this method. Instead, the ID of the record will be set by the server, and your adapter will update the store with the new ID when it calls &lt;code&gt;didCreateRecord()&lt;/code&gt;. Only implement this method if you intend to generate record IDs on the client-side.</source>
          <target state="translated">Большинство традиционных REST-подобных HTTP API не используют этот метод. Вместо этого идентификатор записи будет установлен сервером, и ваш адаптер обновит хранилище с новым идентификатором, когда он &lt;code&gt;didCreateRecord()&lt;/code&gt; . Используйте этот метод только в том случае, если вы собираетесь генерировать идентификаторы записей на стороне клиента.</target>
        </trans-unit>
        <trans-unit id="ee7f1ca589520f1cb0e1adb76c8c5be4f8dbe4c3" translate="yes" xml:space="preserve">
          <source>Mouse events</source>
          <target state="translated">Мышиные события</target>
        </trans-unit>
        <trans-unit id="b96500fb0aaaecea42972538de1579921015f914" translate="yes" xml:space="preserve">
          <source>Mouse events:</source>
          <target state="translated">Мышиные события:</target>
        </trans-unit>
        <trans-unit id="624f9b2fa33d8646c194683a6d7fb00f33f859c5" translate="yes" xml:space="preserve">
          <source>Move jobs from &lt;code&gt;CURRENT_QUEUE&lt;/code&gt; into &lt;code&gt;WORK_QUEUE&lt;/code&gt;</source>
          <target state="translated">Переместить вакансии из &lt;code&gt;CURRENT_QUEUE&lt;/code&gt; в &lt;code&gt;WORK_QUEUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f1408efe0b6e95b82adc5c6940f59fe1a42275e" translate="yes" xml:space="preserve">
          <source>Move on to the &lt;a href=&quot;../hbs-helper&quot;&gt;next page&lt;/a&gt; for the next feature, or continue on here to test what you just wrote.</source>
          <target state="translated">Перейдите на &lt;a href=&quot;../hbs-helper&quot;&gt;следующую страницу,&lt;/a&gt; чтобы узнать о следующей функции, или продолжайте здесь, чтобы проверить то, что вы только что написали.</target>
        </trans-unit>
        <trans-unit id="a5e023c96f99c12b700a944b69a5398f51a87bdf" translate="yes" xml:space="preserve">
          <source>Moving around our site is a bit of a pain right now, so let's make that easier. We'll put a link to the contact page on the about page, and a corresponding link to the about page on the contact page.</source>
          <target state="translated">Перемещение по нашему сайту сейчас немного болезненно,так что давайте сделаем это проще.Мы разместим ссылку на страницу о контакте на странице о контакте,а также соответствующую ссылку на страницу о контакте на странице о контакте.</target>
        </trans-unit>
        <trans-unit id="3d79d467d10ff9f72b3957527d9055f1f2344c6b" translate="yes" xml:space="preserve">
          <source>Much like how our application's &lt;code&gt;index&lt;/code&gt; route doesn't appear in our Router, &lt;code&gt;index&lt;/code&gt; routes on sub-routes won't explicitly appear in the Router either. Ember knows that the default action is to take the user to the &lt;code&gt;index&lt;/code&gt; route. However, you can add the &lt;code&gt;index&lt;/code&gt; route if you want to customize it. For example, you can modify the &lt;code&gt;index&lt;/code&gt; route's path by specifying &lt;code&gt;this.route('index', { path: '/custom-path'})&lt;/code&gt;.</source>
          <target state="translated">Подобно тому, как &lt;code&gt;index&lt;/code&gt; маршрут нашего приложения не отображается в нашем маршрутизаторе, &lt;code&gt;index&lt;/code&gt; маршруты на суб-маршрутах также не отображаются явно в маршрутизаторе. Ember знает, что действие по умолчанию - направить пользователя на &lt;code&gt;index&lt;/code&gt; маршрут. Однако вы можете добавить &lt;code&gt;index&lt;/code&gt; маршрут, если хотите его настроить. Например, вы можете изменить путь &lt;code&gt;index&lt;/code&gt; маршрута, указав &lt;code&gt;this.route('index', { path: '/custom-path'})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d0892f97ba890bdd37e0b0d9f6b4dec5bbe6b06" translate="yes" xml:space="preserve">
          <source>Much of the power of promises comes from the fact that they can be chained together to perform sequential asynchronous operations:</source>
          <target state="translated">Большая часть силы обещаний исходит из того,что они могут быть связаны друг с другом для выполнения последовательных асинхронных операций:</target>
        </trans-unit>
        <trans-unit id="28a601b1de7007639b3f9e108f2a1ef5c64fd42c" translate="yes" xml:space="preserve">
          <source>Multi-word route names are conventionally dasherized, such as:</source>
          <target state="translated">Многословные названия маршрутов условно дешеризованы,например:</target>
        </trans-unit>
        <trans-unit id="78340660db0f24ef38760b67cbbddc4412bcd4c1" translate="yes" xml:space="preserve">
          <source>Multi-word route names that break this convention, such as:</source>
          <target state="translated">Многословные названия маршрутов,которые нарушают эту конвенцию,например:</target>
        </trans-unit>
        <trans-unit id="3b38834946b176dd5d95ff88c4d70d97548594fa" translate="yes" xml:space="preserve">
          <source>Multiple Dependent Keys</source>
          <target state="translated">Многоразовые зависимые ключи</target>
        </trans-unit>
        <trans-unit id="b8d5b89d2e964353c630f9ded89e04d3e86caaf0" translate="yes" xml:space="preserve">
          <source>Multiple Models</source>
          <target state="translated">Несколько моделей</target>
        </trans-unit>
        <trans-unit id="12cbb2ffc194012d392a1c4993f0c9984dfd0981" translate="yes" xml:space="preserve">
          <source>Multiple Models Example</source>
          <target state="translated">Пример нескольких моделей</target>
        </trans-unit>
        <trans-unit id="d6553f22af5154a8bd1c4ad52c108a92da650f3c" translate="yes" xml:space="preserve">
          <source>Multiple dependents on the same object</source>
          <target state="translated">Многочисленные зависимости от одного и того же объекта</target>
        </trans-unit>
        <trans-unit id="ffac1ed7d498ee17123d25a206c3251a5fdeee0f" translate="yes" xml:space="preserve">
          <source>Multiple models can be returned through an &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html#method_hash&quot;&gt;RSVP.hash&lt;/a&gt;. The &lt;code&gt;RSVP.hash&lt;/code&gt; takes parameters that return promises, and when all parameter promises resolve, then the &lt;code&gt;RSVP.hash&lt;/code&gt; promise resolves. For example:</source>
          <target state="translated">Несколько моделей можно вернуть через &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html#method_hash&quot;&gt;RSVP.hash&lt;/a&gt; . &lt;code&gt;RSVP.hash&lt;/code&gt; принимает параметры , которые возвращают обещания, и , когда все обещания параметров Разрешая, то &lt;code&gt;RSVP.hash&lt;/code&gt; обещание рассасывается. Например:</target>
        </trans-unit>
        <trans-unit id="7c3482c9f462fff40115cc375f0938294535d352" translate="yes" xml:space="preserve">
          <source>Multiple models will be applied last to first recursively up the route tree.</source>
          <target state="translated">Несколько моделей будут применены последними для первого рекурсивного поднятия вверх по дереву маршрута.</target>
        </trans-unit>
        <trans-unit id="8fe2c0eff1698d461f5e41a286301db51f73fef1" translate="yes" xml:space="preserve">
          <source>Multiple operations scheduled with &lt;code&gt;run.next&lt;/code&gt; will coalesce into the same later run loop, along with any other operations scheduled by &lt;code&gt;run.later&lt;/code&gt; that expire right around the same time that &lt;code&gt;run.next&lt;/code&gt; operations will fire.</source>
          <target state="translated">Множественные операции, запланированные с помощью &lt;code&gt;run.next&lt;/code&gt; , объединятся в один и тот же более поздний цикл выполнения вместе с любыми другими операциями, запланированными с помощью &lt;code&gt;run.later&lt;/code&gt; , срок действия которых истекает примерно в то же время, когда &lt;code&gt;run.next&lt;/code&gt; операции run.next .</target>
        </trans-unit>
        <trans-unit id="02209f8602f7d7995fe4c193c3f7d7b587ad5ab3" translate="yes" xml:space="preserve">
          <source>Multiple relationships can be requested using an &lt;code&gt;include&lt;/code&gt; parameter consisting of a comma-separated list (without white-space) while nested relationships can be specified using a dot-separated sequence of relationship names. So to request both the post's comments and the authors of those comments the request would look like this:</source>
          <target state="translated">Несколько отношений могут быть запрошены с помощью параметра &lt;code&gt;include&lt;/code&gt; , состоящего из списка, разделенного запятыми (без пробелов), в то время как вложенные отношения могут быть указаны с помощью последовательности имен отношений, разделенных точками. Таким образом, чтобы запросить как комментарии к публикации, так и авторов этих комментариев, запрос будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="b1257af504d574f79a9e631c64fb0753d98ae623" translate="yes" xml:space="preserve">
          <source>Multiple relationships can be requested using an &lt;code&gt;include&lt;/code&gt; parameter consisting of a comma-separated list (without white-space) while nested relationships can be specified using a dot-separated sequence of relationship names. So to request both the posts' comments and the authors of those comments the request would look like this:</source>
          <target state="translated">Несколько отношений могут быть запрошены с помощью параметра &lt;code&gt;include&lt;/code&gt; , состоящего из списка, разделенного запятыми (без пробелов), в то время как вложенные отношения могут быть указаны с помощью последовательности имен отношений, разделенных точками. Таким образом, чтобы запросить как комментарии к сообщениям, так и авторов этих комментариев, запрос будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="702d485741e89433e6e857322e216f0b9ae4a268" translate="yes" xml:space="preserve">
          <source>Must be truthy for the assertion to pass. If falsy, an exception will be thrown.</source>
          <target state="translated">Должно быть,это правда,чтобы утверждение прошло.В случае фальсификации будет сделано исключение.</target>
        </trans-unit>
        <trans-unit id="3d3267ee70dd314e7858273af7bdce38d29cc032" translate="yes" xml:space="preserve">
          <source>MutableArray</source>
          <target state="translated">MutableArray</target>
        </trans-unit>
        <trans-unit id="b34428639511f271396957f0dadabc146059f39f" translate="yes" xml:space="preserve">
          <source>MutableEnumerable</source>
          <target state="translated">MutableEnumerable</target>
        </trans-unit>
        <trans-unit id="444db15bd436aba203a5f5249e2de3679767da5f" translate="yes" xml:space="preserve">
          <source>NOTE: For performance reasons, you cannot declare methods or computed properties during &lt;code&gt;create&lt;/code&gt;. You should instead declare methods and computed properties when using &lt;code&gt;extend&lt;/code&gt;.</source>
          <target state="translated">ПРИМЕЧАНИЕ. По соображениям производительности нельзя объявлять методы или вычисляемые свойства во время &lt;code&gt;create&lt;/code&gt; . Вместо этого вы должны объявлять методы и вычисляемые свойства при использовании &lt;code&gt;extend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc4154a7358ac4c037dceca9b28d5e787994cdb5" translate="yes" xml:space="preserve">
          <source>NOTE: If you do override &lt;code&gt;init&lt;/code&gt; for a framework class like &lt;code&gt;Ember.View&lt;/code&gt;, be sure to call &lt;code&gt;this._super(...arguments)&lt;/code&gt; in your &lt;code&gt;init&lt;/code&gt; declaration! If you don't, Ember may not have an opportunity to do important setup work, and you'll see strange behavior in your application.</source>
          <target state="translated">ПРИМЕЧАНИЕ. Если вы переопределяете &lt;code&gt;init&lt;/code&gt; для класса &lt;code&gt;Ember.View&lt;/code&gt; , такого как Ember.View , обязательно вызовите &lt;code&gt;this._super(...arguments)&lt;/code&gt; в своем объявлении &lt;code&gt;init&lt;/code&gt; ! Если вы этого не сделаете, у Ember может не быть возможности выполнить важную работу по настройке, и вы увидите странное поведение в своем приложении.</target>
        </trans-unit>
        <trans-unit id="f1955b8da16f9aa4c86eaa507166aa1db45a4ada" translate="yes" xml:space="preserve">
          <source>NOTE: The alias should not reuse a name from the bound property path.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Псевдоним не должен повторно использовать имя из связанного пути свойств.</target>
        </trans-unit>
        <trans-unit id="80a1546459fb296b75e903b673f8cc0ad0b7638a" translate="yes" xml:space="preserve">
          <source>Named Arguments</source>
          <target state="translated">Именные аргументы</target>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="1da3a41b20375b2f1b43865d0bbcd472ab17276d" translate="yes" xml:space="preserve">
          <source>Namespace for injection helper methods.</source>
          <target state="translated">Пространство имен для методов инъекционного помощника.</target>
        </trans-unit>
        <trans-unit id="447fb7bdde41273609f10df97bcb34cfc64373fe" translate="yes" xml:space="preserve">
          <source>Namespaced attributes (e.g. &lt;code&gt;xlink:href&lt;/code&gt;) are supported, but have to be mapped, since &lt;code&gt;:&lt;/code&gt; is not a valid character for properties in Javascript:</source>
          <target state="translated">Атрибуты с &lt;code&gt;xlink:href&lt;/code&gt; (например, xlink: href ) поддерживаются, но должны быть сопоставлены, поскольку &lt;code&gt;:&lt;/code&gt; не является допустимым символом для свойств в Javascript:</target>
        </trans-unit>
        <trans-unit id="0194361330bfd11c031b2f9a21891a7b0c91227e" translate="yes" xml:space="preserve">
          <source>Native arrays will no longer implement the functionality needed to observe them. If you disable prototype extension and attempt to use native arrays with things like a template's &lt;code&gt;{{#each}}&lt;/code&gt; helper, Ember.js will have no way to detect changes to the array and the template will not update as the underlying array changes.</source>
          <target state="translated">Собственные массивы больше не будут реализовывать функции, необходимые для их наблюдения. Если вы отключите расширение прототипа и попытаетесь использовать собственные массивы с такими вещами, как помощник шаблона &lt;code&gt;{{#each}}&lt;/code&gt; , Ember.js не сможет обнаружить изменения в массиве, и шаблон не будет обновляться при изменении базового массива.</target>
        </trans-unit>
        <trans-unit id="a2ad1cc0d104518d7f977f6281c3fcd146fbd3d7" translate="yes" xml:space="preserve">
          <source>NativeArray</source>
          <target state="translated">NativeArray</target>
        </trans-unit>
        <trans-unit id="f03a4f8a865506a656451836ba3d745b0e85935f" translate="yes" xml:space="preserve">
          <source>Navigating the Inspector</source>
          <target state="translated">Навигация инспектора</target>
        </trans-unit>
        <trans-unit id="f5f74a08b7244da0d1e71c555988da0c10984a2a" translate="yes" xml:space="preserve">
          <source>Navigating with Links and the {{link-to}} Helper</source>
          <target state="translated">Навигация со Ссылками и {{Ссылкой}}Помощником</target>
        </trans-unit>
        <trans-unit id="fbdea6bea0c2482852e3f2071895d1585ec8e658" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;if&lt;/code&gt;</source>
          <target state="translated">Вложенный, &lt;code&gt;if&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f39bf32df616d09a91ab62108acfaade500b9df8" translate="yes" xml:space="preserve">
          <source>Nested Helpers</source>
          <target state="translated">Вложенные помощники</target>
        </trans-unit>
        <trans-unit id="d7217f3faabc627d5f38d65ad54b2ccfdec8cc27" translate="yes" xml:space="preserve">
          <source>Nested Route with Query String Example</source>
          <target state="translated">Вложенный маршрут с примером строки запроса</target>
        </trans-unit>
        <trans-unit id="bef32b44309c819256ef91505f3ce46153114806" translate="yes" xml:space="preserve">
          <source>Nested Routes</source>
          <target state="translated">Вложенные маршруты</target>
        </trans-unit>
        <trans-unit id="412558433783fdb3414d06e750eef597720539fc" translate="yes" xml:space="preserve">
          <source>Nested Usage</source>
          <target state="translated">Вложенное использование</target>
        </trans-unit>
        <trans-unit id="e165e036879af1052e8bdc5248b80fa0f1e05752" translate="yes" xml:space="preserve">
          <source>Nested relationships can be specified in the &lt;code&gt;include&lt;/code&gt; parameter as a dot-separated sequence of relationship names. So to request both the post's comments and the authors of those comments the request would look like this:</source>
          <target state="translated">Вложенные отношения можно указать в параметре &lt;code&gt;include&lt;/code&gt; как последовательность имен отношений, разделенных точками. Таким образом, чтобы запросить как комментарии к публикации, так и авторов этих комментариев, запрос будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="3c887b79e918144869d1815b78826218b269b1e7" translate="yes" xml:space="preserve">
          <source>Nesting built-in helpers</source>
          <target state="translated">Вложение встроенных помощников</target>
        </trans-unit>
        <trans-unit id="0a6f6b6b3aa81f4339caf3807d89ac25f55b20e0" translate="yes" xml:space="preserve">
          <source>New CP syntax RFC</source>
          <target state="translated">Новый синтаксис CP RFC</target>
        </trans-unit>
        <trans-unit id="b7923e40f58719cc79ac4b24075ea07f4e514c24" translate="yes" xml:space="preserve">
          <source>New array with specified slice</source>
          <target state="translated">Новый массив с указанным срезом</target>
        </trans-unit>
        <trans-unit id="33d942259592ddfbc46880fa0a69c8975fc1398b" translate="yes" xml:space="preserve">
          <source>New computed syntax explained in &quot;Ember 1.12 released&quot;</source>
          <target state="translated">Новый вычисленный синтаксис объяснен в &quot;Ember 1.12 release&quot;.</target>
        </trans-unit>
        <trans-unit id="a6fffbbf5a5a931d1edec274552843e555a9575b" translate="yes" xml:space="preserve">
          <source>New features are added to Ember.js within conditional statements.</source>
          <target state="translated">В Ember.js добавляются новые возможности в рамках условных операторов.</target>
        </trans-unit>
        <trans-unit id="803ecd92179c0dd3c69731cdda3a859bd14900b2" translate="yes" xml:space="preserve">
          <source>Next let's look at testing logic found within an object's method. In this case the &lt;code&gt;testMethod&lt;/code&gt; method alters some internal state of the object (by updating the &lt;code&gt;foo&lt;/code&gt; property).</source>
          <target state="translated">Теперь давайте посмотрим на логику тестирования, найденную в методе объекта. В этом случае метод &lt;code&gt;testMethod&lt;/code&gt; изменяет некоторое внутреннее состояние объекта (обновляя свойство &lt;code&gt;foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e6d2115d3a8d9cff7fd04e688c7081d086bf8c63" translate="yes" xml:space="preserve">
          <source>Next we use &lt;code&gt;this.subject()&lt;/code&gt; to get an instance of the &lt;code&gt;PostsController&lt;/code&gt; and write a test to check the action. &lt;code&gt;this.subject()&lt;/code&gt; is a helper method from the &lt;code&gt;ember-qunit&lt;/code&gt; library that returns a singleton instance of the module set up using &lt;code&gt;moduleFor&lt;/code&gt;.</source>
          <target state="translated">Затем мы используем &lt;code&gt;this.subject()&lt;/code&gt; чтобы получить экземпляр &lt;code&gt;PostsController&lt;/code&gt; и написать тест для проверки действия. &lt;code&gt;this.subject()&lt;/code&gt; - это вспомогательный метод из библиотеки &lt;code&gt;ember-qunit&lt;/code&gt; , который возвращает одноэлементный экземпляр модуля, настроенного с помощью &lt;code&gt;moduleFor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fcc0bdd99f88cb81ef0b1774094121f146d3dd1" translate="yes" xml:space="preserve">
          <source>Next, in the child component we will implement the logic to confirm that the user wants to take the action they indicated by clicking the button:</source>
          <target state="translated">Далее,в дочернем компоненте мы реализуем логику,подтверждающую,что пользователь хочет выполнить указанное действие,нажав на кнопку:</target>
        </trans-unit>
        <trans-unit id="d40ada7307cf0a9c838ea79345644c54523ae5fb" translate="yes" xml:space="preserve">
          <source>Next, update the component to append the map output to the &lt;code&gt;div&lt;/code&gt; element we created.</source>
          <target state="translated">Затем обновите компонент, чтобы добавить вывод карты в созданный нами элемент &lt;code&gt;div&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7d19405fca795913088d60133cbb443100ac674" translate="yes" xml:space="preserve">
          <source>Next, we can update the template for our show route (&lt;code&gt;app/templates/rentals/show.hbs&lt;/code&gt;) and list the information for our rental.</source>
          <target state="translated">Затем мы можем обновить шаблон для нашего шоу-маршрута ( &lt;code&gt;app/templates/rentals/show.hbs&lt;/code&gt; ) и перечислить информацию для нашей аренды.</target>
        </trans-unit>
        <trans-unit id="fc4983c90fa60bc1ce9b9cbde2c331eec343b491" translate="yes" xml:space="preserve">
          <source>Next, we want to edit our &lt;code&gt;show&lt;/code&gt; route to retrieve the requested rental:</source>
          <target state="translated">Затем мы хотим отредактировать наш маршрут &lt;code&gt;show&lt;/code&gt; чтобы получить запрашиваемую аренду:</target>
        </trans-unit>
        <trans-unit id="eb92e1d792e18cf5b9e39f3b1be27814a2469e18" translate="yes" xml:space="preserve">
          <source>Next, we will want to create a sub-route that will list information for a specific rental. To do this, we will need to update a couple of files. To find a specific rental, we will want to use Ember Data's &lt;code&gt;findRecord&lt;/code&gt; function &lt;a href=&quot;https://guides.emberjs.com/models/finding-records/&quot;&gt;(see &quot;Finding Records&quot; for more details)&lt;/a&gt;. The &lt;code&gt;findRecord&lt;/code&gt; function requires that we search by a unique key.</source>
          <target state="translated">Затем мы хотим создать подмаршрут, в котором будет перечислена информация для конкретной аренды. Для этого нам потребуется обновить пару файлов. Чтобы найти конкретный прокат, мы захотим использовать функцию &lt;code&gt;findRecord&lt;/code&gt; Ember Data &lt;a href=&quot;https://guides.emberjs.com/models/finding-records/&quot;&gt;(подробнее см. &amp;laquo;Поиск записей&amp;raquo;)&lt;/a&gt; . Функция &lt;code&gt;findRecord&lt;/code&gt; требует, чтобы мы выполняли поиск по уникальному ключу.</target>
        </trans-unit>
        <trans-unit id="72fd14162a8fc6d22cf491834da27111df0b38b5" translate="yes" xml:space="preserve">
          <source>Next, we'll add the call to render the component to show the cities we've provided above.</source>
          <target state="translated">Далее мы добавим вызов для отображения компонента,чтобы показать города,которые мы предоставили выше.</target>
        </trans-unit>
        <trans-unit id="c121b18448e09b0ec7e3e82982b599fd9f5138e7" translate="yes" xml:space="preserve">
          <source>Next, we'll update the template using the component to use the block form:</source>
          <target state="translated">Далее мы обновим шаблон,используя компонент для использования формы блока:</target>
        </trans-unit>
        <trans-unit id="6238b29303602319e16359dcf2e606b1c95d24d7" translate="yes" xml:space="preserve">
          <source>No documented items</source>
          <target state="translated">Никаких задокументированных элементов</target>
        </trans-unit>
        <trans-unit id="9f80f5f1ae4b98a019524e97caf59f7371e4c299" translate="yes" xml:space="preserve">
          <source>No matter how the URL gets set, the first thing that happens is that the Ember router maps the URL to a route handler.</source>
          <target state="translated">Независимо от того,как URL будет установлен,первое,что произойдет,это то,что Ember-маршрутизатор сопоставляет URL с обработчиком маршрута.</target>
        </trans-unit>
        <trans-unit id="36d42b52bca7ec360e2ec2fd821e5d1d54eeed7e" translate="yes" xml:space="preserve">
          <source>Node.js and npm</source>
          <target state="translated">Node.js и npm</target>
        </trans-unit>
        <trans-unit id="0bf1b177f41054dc701a64cbc840b3185281c706" translate="yes" xml:space="preserve">
          <source>NoneLocation</source>
          <target state="translated">NoneLocation</target>
        </trans-unit>
        <trans-unit id="2b92c9cfcc2262b2f6c3b43f6b3500b694ae1ee6" translate="yes" xml:space="preserve">
          <source>Normal arguments are useful for passing data to be transformed into helper functions. However, because the order in which you pass arguments matters, it is usually best not to have helpers take more than one or two of them.</source>
          <target state="translated">Обычные аргументы полезны для передачи данных,которые необходимо преобразовать в вспомогательные функции.Однако,поскольку порядок передачи аргументов имеет значение,обычно лучше не заставлять помощников брать более одного-двух из них.</target>
        </trans-unit>
        <trans-unit id="c758641d7044d0875a095185bfa3bfff0989861e" translate="yes" xml:space="preserve">
          <source>Normalize the record and recursively normalize/extract all the embedded records while pushing them into the store as they are encountered</source>
          <target state="translated">Нормализовать запись и рекурсивно нормализовать/извлечь все встроенные записи,одновременно проталкивая их в магазин по мере их появления.</target>
        </trans-unit>
        <trans-unit id="507e2c4b6bfe50777b8493cb99f3d2061997fa17" translate="yes" xml:space="preserve">
          <source>Normalizes a part of the JSON payload returned by the server. You should override this method, munge the hash and call super if you have generic normalization to do.</source>
          <target state="translated">Нормализует часть полезной нагрузки JSON,возвращаемой сервером.Вы должны переопределить этот метод,зарядить хэш и вызвать супер,если у вас есть общая нормализация.</target>
        </trans-unit>
        <trans-unit id="93184070eecd1992aa3ceffecf5d7e446dd037ad" translate="yes" xml:space="preserve">
          <source>Normalizing adapter responses</source>
          <target state="translated">Нормализующая реакция адаптера</target>
        </trans-unit>
        <trans-unit id="36175f91b69faec22cd1a2cefc739e08dcc8e5d5" translate="yes" xml:space="preserve">
          <source>Normally you should not need to invoke this method yourself. However if you are implementing raw event handlers when interfacing with other libraries or plugins, you should probably wrap all of your code inside this call.</source>
          <target state="translated">Обычно вам не нужно использовать этот метод самостоятельно.Однако,если вы реализуете необработанные обработчики событий при взаимодействии с другими библиотеками или плагинами,то,вероятно,вам следует обернуть весь свой код внутри этого вызова.</target>
        </trans-unit>
        <trans-unit id="4468565835878ef17cd4b55bc5caa9b1777c240f" translate="yes" xml:space="preserve">
          <source>Normally, Ember's component model is &quot;write-only&quot;. The component takes a bunch of attributes that it got passed in, and uses them to render its template.</source>
          <target state="translated">Обычно компонентная модель Эмбер &quot;только для записи&quot;.Компонент берет кучу атрибутов,которые ему передали,и использует их для рендеринга своего шаблона.</target>
        </trans-unit>
        <trans-unit id="c7e6a52c08a7259c6321ad9e83e1ba7332c71dcf" translate="yes" xml:space="preserve">
          <source>Normally, applications will use the &lt;code&gt;RESTSerializer&lt;/code&gt; by implementing the &lt;code&gt;normalize&lt;/code&gt; method.</source>
          <target state="translated">Обычно приложения используют &lt;code&gt;RESTSerializer&lt;/code&gt; , реализуя метод &lt;code&gt;normalize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc8af1aedfdbf84e674633bf407822f6539d0133" translate="yes" xml:space="preserve">
          <source>Not all APIs follow the conventions that the &lt;code&gt;JSONAPISerializer&lt;/code&gt; uses with a data namespace and sideloaded relationship records. Some legacy APIs may return a simple JSON payload that is just the requested resource or an array of serialized records. The &lt;code&gt;JSONSerializer&lt;/code&gt; is a serializer that ships with Ember Data that can be used alongside the &lt;code&gt;RESTAdapter&lt;/code&gt; to serialize these simpler APIs.</source>
          <target state="translated">Не все API следуют соглашениям, которые &lt;code&gt;JSONAPISerializer&lt;/code&gt; использует с пространством имен данных и загруженными неопубликованными записями отношений. Некоторые устаревшие API-интерфейсы могут возвращать простые полезные данные JSON, которые являются просто запрошенным ресурсом или массивом сериализованных записей. &lt;code&gt;JSONSerializer&lt;/code&gt; является сериализатором , который поставляется с Ember данными , которые могут быть использованы вместе с &lt;code&gt;RESTAdapter&lt;/code&gt; сериализовать этот простой API.</target>
        </trans-unit>
        <trans-unit id="ffb02f7d9bf0cc53a282a795dbaa82e1fca2c00b" translate="yes" xml:space="preserve">
          <source>Not all combinations of the supported options are valid. See the documentation on &lt;code&gt;Ember.Application#visit&lt;/code&gt; for the supported configurations.</source>
          <target state="translated">Не все комбинации поддерживаемых опций допустимы. См. Документацию по &lt;code&gt;Ember.Application#visit&lt;/code&gt; для поддерживаемых конфигураций.</target>
        </trans-unit>
        <trans-unit id="9023fcc452af3baa532d621308c25e1e7a89cfd0" translate="yes" xml:space="preserve">
          <source>Not all options need to be passed to &lt;code&gt;render&lt;/code&gt;. Default values will be used based on the name of the route specified in the router or the Route's &lt;code&gt;controllerName&lt;/code&gt; and &lt;code&gt;templateName&lt;/code&gt; properties.</source>
          <target state="translated">Не все параметры нужно передавать для &lt;code&gt;render&lt;/code&gt; . Значения по умолчанию будут использоваться на основе имени маршрута, указанного в маршрутизаторе, или свойств &lt;code&gt;controllerName&lt;/code&gt; и &lt;code&gt;templateName&lt;/code&gt; маршрута .</target>
        </trans-unit>
        <trans-unit id="7ba9a00d7a0449cb290ce3ad1120d3aa3636a895" translate="yes" xml:space="preserve">
          <source>Not to be confused with Shadow DOM. The concept of a virtual DOM means abstracting your code (or in our case, Ember) away from using the browser's DOM in favor of a &quot;virtual&quot; DOM that can easily be accessed for read/writes or even serialized.</source>
          <target state="translated">Не путать с Shadow DOM.Понятие виртуального DOM означает абстрагирование вашего кода (или,в нашем случае,Ember)от использования DOM браузера в пользу &quot;виртуального&quot; DOM,к которому можно легко получить доступ для чтения/записи или даже сериализовать.</target>
        </trans-unit>
        <trans-unit id="8cdf5c376933ccf1cfee5b424cfd3739a998e8c7" translate="yes" xml:space="preserve">
          <source>Not to be confused with Virtual DOM. Shadow DOM is still a work in progress, but basically a proposed way to have an &quot;isolated&quot; DOM encapsulated within your app's DOM.</source>
          <target state="translated">Не путать с Virtual DOM.Shadow DOM все еще находится в процессе работы,но в основном предлагаемый способ,чтобы иметь &quot;изолированный&quot; DOM инкапсулированы в DOM вашего приложения.</target>
        </trans-unit>
        <trans-unit id="9e207619ed228ed5f64d1d93956ce95d0f0e4129" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;@each&lt;/code&gt; only works one level deep. You cannot use nested forms like &lt;code&gt;todos.@each.owner.name&lt;/code&gt; or &lt;code&gt;todos.@each.owner.@each.name&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;@each&lt;/code&gt; работает только на один уровень. Вы не можете использовать вложенные формы, такие как &lt;code&gt;todos.@each.owner.name&lt;/code&gt; или &lt;code&gt;todos.@each.owner.@each.name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b78a2d350219decae3de8dbd9a934a76cc3210ab" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deleteCurrentUser&lt;/code&gt; is no longer in quotes here as opposed to &lt;a href=&quot;#toc_passing-the-action-to-the-component&quot;&gt;previously&lt;/a&gt;. Quotes are used to initially pass the action down the component tree, but at every subsequent level you are instead passing the actual function reference (without quotes) in the action helper.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;deleteCurrentUser&lt;/code&gt; больше не находится в кавычках, в отличие от &lt;a href=&quot;#toc_passing-the-action-to-the-component&quot;&gt;ранее&lt;/a&gt; . Кавычки используются для первоначальной передачи действия вниз по дереву компонентов, но на каждом последующем уровне вы вместо этого передаете фактическую ссылку на функцию (без кавычек) в помощнике действия.</target>
        </trans-unit>
        <trans-unit id="d657c22ecaee4c7aa7dc607d48a3471b79573dbd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;frozenCopy()&lt;/code&gt; will only work if you also implement &lt;code&gt;Ember.Freezable&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;frozenCopy()&lt;/code&gt; будет работать, только если вы также реализуете &lt;code&gt;Ember.Freezable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6e566c79c98a818eb2e7a547fefdc2888a15607" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;species&lt;/code&gt; and &lt;code&gt;createPerson&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; valid on the &lt;code&gt;tom&lt;/code&gt; and &lt;code&gt;yehuda&lt;/code&gt; variables. They are only valid on &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="translated">Следуют отметить , что &lt;code&gt;species&lt;/code&gt; и &lt;code&gt;createPerson&lt;/code&gt; является &lt;em&gt;не&lt;/em&gt; действительным на &lt;code&gt;tom&lt;/code&gt; и &lt;code&gt;yehuda&lt;/code&gt; переменных. Они действительны только для &lt;code&gt;Person&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06970be1fcab9740b07ebf6451f16d6c3ba5f22e" translate="yes" xml:space="preserve">
          <source>Note that Ember's default &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;JSON API adapter&lt;/a&gt; does not provide the functionality needed to support &lt;code&gt;queryRecord()&lt;/code&gt; directly as it relies on REST request definitions that return result data in the form of an array.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;адаптер JSON API&lt;/a&gt; Ember по умолчанию не предоставляет функциональные возможности, необходимые для поддержки &lt;code&gt;queryRecord()&lt;/code&gt; напрямую, поскольку он полагается на определения запросов REST, которые возвращают данные результатов в форме массива.</target>
        </trans-unit>
        <trans-unit id="b8f582b0e70af7be068ecb7c92ee2cd1ea0f779d" translate="yes" xml:space="preserve">
          <source>Note that JSON-API also allows for object-level errors to be placed in an object with pointer &lt;code&gt;data&lt;/code&gt;, signifying that the problem cannot be traced to a specific attribute:</source>
          <target state="translated">Обратите внимание, что JSON-API также позволяет помещать ошибки уровня объекта в объект с &lt;code&gt;data&lt;/code&gt; указателя , что означает, что проблема не может быть отслежена до определенного атрибута:</target>
        </trans-unit>
        <trans-unit id="32b55a648a9226930f8a0dc87f4729a007906a54" translate="yes" xml:space="preserve">
          <source>Note that Mixins are created with &lt;code&gt;Ember.Mixin.create&lt;/code&gt;, not &lt;code&gt;Ember.Mixin.extend&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что миксины создаются с помощью &lt;code&gt;Ember.Mixin.create&lt;/code&gt; , а не &lt;code&gt;Ember.Mixin.extend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56b757d1d62e955259b537c65a5b0f0df274acce" translate="yes" xml:space="preserve">
          <source>Note that actions may be attached to any element of the DOM, but not all respond to the &lt;code&gt;click&lt;/code&gt; event. For example, if an action is attached to an &lt;code&gt;a&lt;/code&gt; link without an &lt;code&gt;href&lt;/code&gt; attribute, or to a &lt;code&gt;div&lt;/code&gt;, some browsers won't execute the associated function. If it's really needed to define actions over such elements, a CSS workaround exists to make them clickable, &lt;code&gt;cursor: pointer&lt;/code&gt;. For example:</source>
          <target state="translated">Обратите внимание, что действия могут быть прикреплены к любому элементу DOM, но не все реагируют на событие &lt;code&gt;click&lt;/code&gt; . Например, если действие прикрепляются к &lt;code&gt;a&lt;/code&gt; ссылку без &lt;code&gt;href&lt;/code&gt; атрибута или в &lt;code&gt;div&lt;/code&gt; , некоторые браузеры не будут выполнять соответствующую функцию. Если действительно необходимо определить действия над такими элементами, существует обходной путь CSS, чтобы сделать их интерактивными, &lt;code&gt;cursor: pointer&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="c0e6cdf5e195bb9b233c0037678ccb4b71a62dca" translate="yes" xml:space="preserve">
          <source>Note that although you can pass optional arguments these will not be considered when looking for duplicates. New arguments will replace previous calls.</source>
          <target state="translated">Обратите внимание,что хотя вы можете передавать необязательные аргументы,они не будут учитываться при поиске дубликатов.Новые аргументы заменят предыдущие вызовы.</target>
        </trans-unit>
        <trans-unit id="c9855a05b5c5c77b57064406fd84a06bcd0a8dc0" translate="yes" xml:space="preserve">
          <source>Note that an Array can change even if it does not implement this mixin. For example, one might implement a SparseArray that cannot be directly modified, but if its underlying enumerable changes, it will change also.</source>
          <target state="translated">Обратите внимание,что массив может измениться,даже если он не реализует эту смесь.Например,можно реализовать SparseArray,который нельзя модифицировать напрямую,но если в его основе лежит множество изменений,то он тоже изменится.</target>
        </trans-unit>
        <trans-unit id="3521e07c4a5492836c834d2874a2f36b14039567" translate="yes" xml:space="preserve">
          <source>Note that an Enumerable can change even if it does not implement this mixin. For example, a MappedEnumerable cannot be directly modified but if its underlying enumerable changes, it will change also.</source>
          <target state="translated">Обратите внимание,что &quot;Enumerable&quot; может измениться,даже если он не реализует эту смесь.Например,MappedEnumerable не может быть изменен напрямую,но если его основное перечисление изменится,то оно также изменится.</target>
        </trans-unit>
        <trans-unit id="924886ebe747f409911384465b52739f93291a0f" translate="yes" xml:space="preserve">
          <source>Note that an optional parameter can be sent to a record's &lt;code&gt;send()&lt;/code&gt; method, which will be passed as the second parameter to the event handler.</source>
          <target state="translated">Обратите внимание, что необязательный параметр можно &lt;code&gt;send()&lt;/code&gt; методу записи send () , который будет передан в качестве второго параметра обработчику событий.</target>
        </trans-unit>
        <trans-unit id="33c0dee324e64567f69ae25ca1d96c1e702d98c2" translate="yes" xml:space="preserve">
          <source>Note that at this point of the tutorial, the data is still provided by the &lt;code&gt;app/routes/rentals.js&lt;/code&gt; file. We will make use of the mirage data we set up here in the upcoming section called &lt;a href=&quot;../ember-data&quot;&gt;Using Ember Data&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что на этом этапе руководства данные по-прежнему предоставляются файлом &lt;code&gt;app/routes/rentals.js&lt;/code&gt; . Мы будем использовать данные миража, которые мы настроили здесь, в следующем разделе под названием &amp;laquo; &lt;a href=&quot;../ember-data&quot;&gt;Использование данных Ember&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e9fe44fe234ff341d449b15a171ed9251b8aad4" translate="yes" xml:space="preserve">
          <source>Note that because it's just a filter, the result will contain any locally created records of the type, however, it will not make a request to the backend to retrieve additional records. If you would like to request all the records from the backend please use &lt;a href=&quot;#method_findAll&quot;&gt;store.findAll&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что, поскольку это всего лишь фильтр, результат будет содержать любые локально созданные записи этого типа, однако он не будет делать запрос к бэкэнду для получения дополнительных записей. Если вы хотите запросить все записи из серверной части, используйте &lt;a href=&quot;#method_findAll&quot;&gt;store.findAll&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0838905b21f58bd42b79e4b1f7728fbd5f10b750" translate="yes" xml:space="preserve">
          <source>Note that bindings don't update immediately. Ember waits until all of your application code has finished running before synchronizing changes, so you can change a bound property as many times as you'd like without worrying about the overhead of syncing bindings when values are transient.</source>
          <target state="translated">Обратите внимание,что крепления не обновляются немедленно.Эмбер ждет окончания работы всего кода вашего приложения,прежде чем синхронизировать изменения,так что вы можете изменять связанное свойство столько раз,сколько захотите,не беспокоясь о накладных расходах на синхронизацию связок,когда значения переходят в преходящий режим.</target>
        </trans-unit>
        <trans-unit id="958456bed5d43bbdc211b8f3e852be80e1eafc1d" translate="yes" xml:space="preserve">
          <source>Note that destruction is scheduled for the end of the run loop and does not happen immediately. It will set an isDestroying flag immediately.</source>
          <target state="translated">Обратите внимание,что уничтожение запланировано на конец цикла и происходит не сразу.Он установит флаг isDestroying немедленно.</target>
        </trans-unit>
        <trans-unit id="02fedd1822a65dfaf8b470cacfe5d1ddfd042c45" translate="yes" xml:space="preserve">
          <source>Note that embedded records will serialize with the serializer for their model instead of the serializer in which they are defined.</source>
          <target state="translated">Обратите внимание,что встроенные записи будут сериализоваться с сериализатором для их модели,а не с сериализатором,в котором они определены.</target>
        </trans-unit>
        <trans-unit id="bdf60f3cfbf501d3dcffb7089a351e863fd21b98" translate="yes" xml:space="preserve">
          <source>Note that for curly components (&lt;code&gt;{{my-component}}&lt;/code&gt;) the bindings are already mutable, making the &lt;code&gt;mut&lt;/code&gt; unnecessary.</source>
          <target state="translated">Обратите внимание, что для фигурных компонентов ( &lt;code&gt;{{my-component}}&lt;/code&gt; ) привязки уже изменяемы, что делает &lt;code&gt;mut&lt;/code&gt; ненужным.</target>
        </trans-unit>
        <trans-unit id="8fa797c14ae391330eeeed89571db0017aff4300" translate="yes" xml:space="preserve">
          <source>Note that for performance reasons, while calling &lt;code&gt;create()&lt;/code&gt; you cannot redefine an instance's computed properties and should not redefine existing or define new methods. You should only set simple properties when calling &lt;code&gt;create()&lt;/code&gt;. If you need to define or redefine methods or computed properties, create a new subclass and instantiate that.</source>
          <target state="translated">Обратите внимание, что по соображениям производительности при вызове &lt;code&gt;create()&lt;/code&gt; вы не можете переопределить вычисляемые свойства экземпляра и не должны переопределять существующие или определять новые методы. Вы должны устанавливать только простые свойства при вызове &lt;code&gt;create()&lt;/code&gt; . Если вам нужно определить или переопределить методы или вычисляемые свойства, создайте новый подкласс и создайте его экземпляр.</target>
        </trans-unit>
        <trans-unit id="3fce3689a0766225ec48133f04e1b60a1d8c9390" translate="yes" xml:space="preserve">
          <source>Note that for routes with dynamic segments, this hook is not always executed. If the route is entered through a transition (e.g. when using the &lt;code&gt;link-to&lt;/code&gt; Handlebars helper or the &lt;code&gt;transitionTo&lt;/code&gt; method of routes), and a model context is already provided this hook is not called.</source>
          <target state="translated">Обратите внимание, что для маршрутов с динамическими сегментами этот хук не всегда выполняется. Если маршрут вводится через переход (например, при использовании помощника &lt;code&gt;link-to&lt;/code&gt; Handlebars или метода маршрутов &lt;code&gt;transitionTo&lt;/code&gt; ) и контекст модели уже предоставлен, этот хук не вызывается.</target>
        </trans-unit>
        <trans-unit id="40e020d503512efc885004b76ea4846ffd6830fc" translate="yes" xml:space="preserve">
          <source>Note that here, we are using the ES6 shorthand method definition syntax: &lt;code&gt;model()&lt;/code&gt; is the same as writing &lt;code&gt;model: function()&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что здесь мы используем сокращенный синтаксис определения метода ES6: &lt;code&gt;model()&lt;/code&gt; совпадает с записью &lt;code&gt;model: function()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afeb106af344e9d52a516511d31b13a986723101" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;propertyKey&lt;/code&gt; is a computed property, the observer will be called when any of the property dependencies are changed, even if the resulting value of the computed property is unchanged. This is necessary because computed properties are not computed until &lt;code&gt;get&lt;/code&gt; is called.</source>
          <target state="translated">Обратите внимание, что если &lt;code&gt;propertyKey&lt;/code&gt; является вычисляемым свойством, наблюдатель будет вызываться при изменении любой из зависимостей свойств, даже если результирующее значение вычисляемого свойства не изменилось. Это необходимо, потому что вычисленные свойства не вычисляются до вызова &lt;code&gt;get&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3feff379f3ec37882e3c4043a045e926ad0b8051" translate="yes" xml:space="preserve">
          <source>Note that if the object itself is &lt;code&gt;undefined&lt;/code&gt;, this method will throw an error.</source>
          <target state="translated">Обратите внимание: если сам объект не &lt;code&gt;undefined&lt;/code&gt; , этот метод выдаст ошибку.</target>
        </trans-unit>
        <trans-unit id="540f116cbff565163df0174c504c06f99d5cfbf7" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &quot;this&quot; on the context. This is a good way to give your iterator function access to the current object.</source>
          <target state="translated">Обратите внимание,что в дополнение к обратному вызову,вы также можете передать необязательный целевой объект,который будет установлен как &quot;this&quot; в контексте.Это хороший способ дать функции итератора доступ к текущему объекту.</target>
        </trans-unit>
        <trans-unit id="5c955a4684ca89b99f35640968f2c4ee63c05c39" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &lt;code&gt;this&lt;/code&gt; on the context.</source>
          <target state="translated">Обратите внимание, что в дополнение к обратному вызову вы также можете передать необязательный целевой объект, который будет установлен как &lt;code&gt;this&lt;/code&gt; в контексте.</target>
        </trans-unit>
        <trans-unit id="f43847d45892775735670813b1ca175dda47767b" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &lt;code&gt;this&lt;/code&gt; on the context. This is a good way to give your iterator function access to the current object.</source>
          <target state="translated">Обратите внимание, что в дополнение к обратному вызову вы также можете передать необязательный целевой объект, который будет установлен как &lt;code&gt;this&lt;/code&gt; в контексте. Это хороший способ предоставить функции итератора доступ к текущему объекту.</target>
        </trans-unit>
        <trans-unit id="f2e78eacf4a6f2eb923292be3495f30dd476f1f2" translate="yes" xml:space="preserve">
          <source>Note that it is traditional but not required to prefix localized string keys with an underscore or other character so you can easily identify localized strings.</source>
          <target state="translated">Обратите внимание,что это традиционный,но не обязательный префикс локализованных строковых ключей с символом подчеркивания или другим символом,чтобы вы могли легко идентифицировать локализованные строки.</target>
        </trans-unit>
        <trans-unit id="a511380c7d51e6b8aa92a6d9dbd7dd96985267fc" translate="yes" xml:space="preserve">
          <source>Note that like the native &lt;code&gt;Array.every&lt;/code&gt;, &lt;code&gt;isEvery&lt;/code&gt; will return true when called on any empty enumerable.</source>
          <target state="translated">Обратите внимание, что, как и собственный &lt;code&gt;Array.every&lt;/code&gt; , &lt;code&gt;isEvery&lt;/code&gt; вернет true при вызове любого пустого перечислимого объекта .</target>
        </trans-unit>
        <trans-unit id="3cbb28c77f6e351fc1928e6220e782dc362a1b2a" translate="yes" xml:space="preserve">
          <source>Note that mixins extend a constructor's prototype so arrays and object literals defined as properties will be shared amongst objects that implement the mixin. If you want to define a property in a mixin that is not shared, you can define it either as a computed property or have it be created on initialization of the object.</source>
          <target state="translated">Обратите внимание,что микшины расширяют прототип конструктора,поэтому массивы и литералы объектов,определенные как свойства,будут совместно использоваться объектами,реализующими микс.Если вы хотите определить свойство в смеси,которое не является общим,вы можете определить его либо как вычисленное свойство,либо как свойство,которое будет создано при инициализации объекта.</target>
        </trans-unit>
        <trans-unit id="e0915ee7945263956963defb8eed8d82042531b8" translate="yes" xml:space="preserve">
          <source>Note that ordering only applies to initializers of the same type (i.e. application or application instance). Application initializers will always run before application instance initializers.</source>
          <target state="translated">Обратите внимание,что заказ относится только к инициализаторам одного и того же типа (т.е.к приложению или экземпляру приложения).Инициализаторы приложений всегда будут работать до инициализаторов экземпляра приложения.</target>
        </trans-unit>
        <trans-unit id="a01853252476693e8ba50c063c6d95f4b2768ee1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;admin&lt;/code&gt; is now not included in the payload.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;admin&lt;/code&gt; теперь не включен в полезную нагрузку.</target>
        </trans-unit>
        <trans-unit id="e181bf43f632a621775995506d04b89a64308a3a" translate="yes" xml:space="preserve">
          <source>Note that the Ember.Array mixin also incorporates the &lt;code&gt;Ember.Enumerable&lt;/code&gt; mixin. All &lt;code&gt;Ember.Array&lt;/code&gt;-like objects are also enumerable.</source>
          <target state="translated">Обратите внимание, что миксин Ember.Array также включает &lt;code&gt;Ember.Enumerable&lt;/code&gt; . Все объекты, &lt;code&gt;Ember.Array&lt;/code&gt; , также являются перечислимыми.</target>
        </trans-unit>
        <trans-unit id="464a4e1a39f9e9d238321f795ebad418f97d241c" translate="yes" xml:space="preserve">
          <source>Note that the hash is an empty object with no prototype chain, therefore common methods like &lt;code&gt;toString&lt;/code&gt; are not available in the resulting hash. If you need to use such a method, you can use the &lt;code&gt;call&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; approach:</source>
          <target state="translated">Обратите внимание, что хеш - это пустой объект без цепочки прототипов, поэтому общие методы, такие как &lt;code&gt;toString&lt;/code&gt; , недоступны в результирующем хеше. Если вам нужно использовать такой метод, вы можете использовать подход &lt;code&gt;call&lt;/code&gt; или &lt;code&gt;apply&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fc9566b0898e72178820bea560bb816fc27b12cd" translate="yes" xml:space="preserve">
          <source>Note that the object root can be pluralized for both a single-object response and an array response: the REST adapter is not strict on this. Further, if the HTTP server responds to a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/posts/1&lt;/code&gt; (e.g. the response to a &lt;code&gt;findRecord&lt;/code&gt; query) with more than one object in the array, Ember Data will only display the object with the matching ID.</source>
          <target state="translated">Обратите внимание, что корень объекта может иметь множественное число как для ответа с одним объектом, так и для ответа массива: адаптер REST не строг в этом отношении. Кроме того, если HTTP-сервер отвечает на запрос &lt;code&gt;GET&lt;/code&gt; к &lt;code&gt;/posts/1&lt;/code&gt; (например, ответ на запрос &lt;code&gt;findRecord&lt;/code&gt; ) с более чем одним объектом в массиве, Ember Data отобразит только объект с совпадающим идентификатором.</target>
        </trans-unit>
        <trans-unit id="7279e9a3c8ff0311e3ca69d4c929ddaff389ce17" translate="yes" xml:space="preserve">
          <source>Note that the type is &lt;code&gt;&quot;post&quot;&lt;/code&gt; to match the post model and the &lt;code&gt;relatedPosts&lt;/code&gt; relationship in the document matches the &lt;code&gt;relatedPosts: hasMany('post')&lt;/code&gt; on the model.</source>
          <target state="translated">Обратите внимание, что типом является &lt;code&gt;&quot;post&quot;&lt;/code&gt; чтобы соответствовать модели &lt;code&gt;relatedPosts&lt;/code&gt; отношение relatedPosts в документе соответствует &lt;code&gt;relatedPosts: hasMany('post')&lt;/code&gt; в модели.</target>
        </trans-unit>
        <trans-unit id="651d898d00f66933a50a90cbb6374067806121e6" translate="yes" xml:space="preserve">
          <source>Note that there are often alternatives to using &lt;code&gt;run.next&lt;/code&gt;. For instance, if you'd like to schedule an operation to happen after all DOM element operations have completed within the current run loop, you can make use of the &lt;code&gt;afterRender&lt;/code&gt; run loop queue (added by the &lt;code&gt;ember-views&lt;/code&gt; package, along with the preceding &lt;code&gt;render&lt;/code&gt; queue where all the DOM element operations happen).</source>
          <target state="translated">Обратите внимание, что часто есть альтернативы использованию &lt;code&gt;run.next&lt;/code&gt; . Например, если вы хотите запланировать выполнение операции после завершения всех операций с элементами DOM в текущем цикле выполнения, вы можете использовать очередь цикла выполнения &lt;code&gt;afterRender&lt;/code&gt; (добавленную пакетом &lt;code&gt;ember-views&lt;/code&gt; вместе с предыдущим очередь &lt;code&gt;render&lt;/code&gt; которой происходят все операции с элементами DOM).</target>
        </trans-unit>
        <trans-unit id="378ebd8cb4393b5003287ca8dc8a822623b4efce" translate="yes" xml:space="preserve">
          <source>Note that this use of &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; is unrelated to the &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; that is defined as an option on &lt;code&gt;DS.attr&lt;/code&gt; as part of defining a model while working with the &lt;code&gt;ActiveModelSerializer&lt;/code&gt;. Nevertheless, using &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; as an option to &lt;code&gt;DS.attr&lt;/code&gt; is not a valid way to setup embedded records.</source>
          <target state="translated">Обратите внимание, что это использование &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; не связано с &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; который определяется как опция в &lt;code&gt;DS.attr&lt;/code&gt; как часть определения модели при работе с &lt;code&gt;ActiveModelSerializer&lt;/code&gt; . Тем не менее, использование &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; в качестве опции для &lt;code&gt;DS.attr&lt;/code&gt; не является допустимым способом настройки встроенных записей.</target>
        </trans-unit>
        <trans-unit id="f0d39521c8d3386b3a34e9ced91037feeb0a7b2a" translate="yes" xml:space="preserve">
          <source>Note that this will cause &lt;code&gt;model&lt;/code&gt; hooks to fire even on routes that were provided a model object when the route was initially entered.</source>
          <target state="translated">Обратите внимание, что это приведет к срабатыванию перехватчиков &lt;code&gt;model&lt;/code&gt; даже на маршрутах, которым был предоставлен объект модели при первоначальном вводе маршрута.</target>
        </trans-unit>
        <trans-unit id="3ad6b52ecb990cca8134262cdb224e497f1a00b0" translate="yes" xml:space="preserve">
          <source>Note that unlike the other methods, this method does not allow you to pass a target object to set as this for the callback. It's part of the spec. Sorry.</source>
          <target state="translated">Обратите внимание,что в отличие от других методов,этот метод не позволяет передать целевой объект для установки в качестве такового для обратного вызова.Это часть спецификации.Извините.</target>
        </trans-unit>
        <trans-unit id="eb8695c270f1bbdd1d483514b31345a7b00a6573" translate="yes" xml:space="preserve">
          <source>Note that we've changed the title from a hard-coded string (&quot;List of Scientists&quot;) to a dynamic property (&lt;code&gt;{{title}}&lt;/code&gt;). We've also renamed &lt;code&gt;scientist&lt;/code&gt; to the more-generic &lt;code&gt;person&lt;/code&gt;, decreasing the coupling of our component to where it's used.</source>
          <target state="translated">Обратите внимание, что мы изменили заголовок с жестко заданной строки (&amp;laquo;Список ученых&amp;raquo;) на динамическое свойство ( &lt;code&gt;{{title}}&lt;/code&gt; ). Мы также переименовали &lt;code&gt;scientist&lt;/code&gt; в более универсального &lt;code&gt;person&lt;/code&gt; , уменьшив привязку нашего компонента к тому, где он используется.</target>
        </trans-unit>
        <trans-unit id="b5bce60538daed2815d21c307bbe23abc78831ea" translate="yes" xml:space="preserve">
          <source>Note that you cannot use &lt;code&gt;attr&lt;/code&gt; to define an attribute of &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что вы не можете использовать &lt;code&gt;attr&lt;/code&gt; для определения атрибута &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bb46a8ed0ed5ba9c5b246982b813cc010e7976e" translate="yes" xml:space="preserve">
          <source>Note that you will not generally apply this mixin to classes yourself, but you will use the features provided by this module frequently, so it is important to understand how to use it.</source>
          <target state="translated">Обратите внимание,что вы,как правило,не будете применять эту смесь к классам самостоятельно,но вы будете часто использовать возможности,предоставляемые этим модулем,поэтому важно понимать,как его использовать.</target>
        </trans-unit>
        <trans-unit id="b0597a69e13b4e14adaa25db22b7f0f4898ba79d" translate="yes" xml:space="preserve">
          <source>Note that, for polymorphism to work, Ember Data expects a &quot;type&quot; declaration polymorphic type via the reserved &lt;code&gt;type&lt;/code&gt; property on the model. Confused? See the API response below.</source>
          <target state="translated">Обратите внимание, что для того, чтобы полиморфизм работал, Ember Data ожидает объявления полиморфного типа &quot;типа&quot; через свойство зарезервированного &lt;code&gt;type&lt;/code&gt; в модели. Смущенный? См. Ответ API ниже.</target>
        </trans-unit>
        <trans-unit id="e1de6c308dc4f6fc162197eb2bbe65e4c36374d2" translate="yes" xml:space="preserve">
          <source>Note that, with default settings, &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; will always re-fetch all the records in the background even if &lt;code&gt;shouldReloadAll&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. You can override &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; if this does not suit your use case.</source>
          <target state="translated">Обратите внимание, что при настройках по умолчанию &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; всегда будет повторно получать все записи в фоновом режиме, даже если &lt;code&gt;shouldReloadAll&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; . Вы можете переопределить &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; , если это не подходит для вашего варианта использования.</target>
        </trans-unit>
        <trans-unit id="8d35e47cdfb2862962cfbd80e030c1179e5271e2" translate="yes" xml:space="preserve">
          <source>Note that, with default settings, &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; will always re-fetch the records in the background even if &lt;code&gt;shouldReloadRecord&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. You can override &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; if this does not suit your use case.</source>
          <target state="translated">Обратите внимание, что с настройками по умолчанию &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; всегда будет повторно получать записи в фоновом режиме, даже если &lt;code&gt;shouldReloadRecord&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; . Вы можете переопределить &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; , если это не подходит для вашего варианта использования.</target>
        </trans-unit>
        <trans-unit id="3e7b0d071a0586986d448b602cae0e1b1e36d11b" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;defaultSerializer&lt;/code&gt; serializer has a lower priority than a model specific serializer (i.e. &lt;code&gt;PostSerializer&lt;/code&gt;) or the &lt;code&gt;application&lt;/code&gt; serializer.</source>
          <target state="translated">Обратите внимание, что сериализатор &lt;code&gt;defaultSerializer&lt;/code&gt; имеет более низкий приоритет, чем сериализатор для конкретной модели (например, &lt;code&gt;PostSerializer&lt;/code&gt; ) или сериализатор &lt;code&gt;application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba6d28dc5630809cf305ce67605b5bd4a3c6f88f" translate="yes" xml:space="preserve">
          <source>Note: A route with a dynamic segment will always have its &lt;code&gt;model&lt;/code&gt; hook called when it is entered via the URL. If the route is entered through a transition (e.g. when using the &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;link-to&lt;/a&gt; Handlebars helper), and a model context is provided (second argument to &lt;code&gt;link-to&lt;/code&gt;), then the hook is not executed. If an identifier (such as an id or slug) is provided instead then the model hook will be executed.</source>
          <target state="translated">Примечание. Маршрут с динамическим сегментом всегда будет иметь вызов &lt;code&gt;model&lt;/code&gt; когда он вводится через URL. Если маршрут вводится через переход (например, при использовании помощника &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;Link-to&lt;/a&gt; Handlebars) и предоставляется контекст модели (второй аргумент для &lt;code&gt;link-to&lt;/code&gt; ), то ловушка не выполняется. Если вместо него указан идентификатор (такой как id или slug), то будет выполнена ловушка модели.</target>
        </trans-unit>
        <trans-unit id="3702f2df2efc5cbf72a1cc1e1abb9bfc0930161f" translate="yes" xml:space="preserve">
          <source>Note: Although an &lt;code&gt;Application&lt;/code&gt; serves as the primary registry for an app, each &lt;code&gt;ApplicationInstance&lt;/code&gt; can also serve as a registry. Instance-level registrations are useful for providing instance-level customizations, such as A/B testing of a feature.</source>
          <target state="translated">Примечание. Хотя &lt;code&gt;Application&lt;/code&gt; служит основным реестром для приложения, каждый &lt;code&gt;ApplicationInstance&lt;/code&gt; также может служить реестром. Регистрация на уровне экземпляра полезна для предоставления настроек на уровне экземпляра, таких как A / B-тестирование функции.</target>
        </trans-unit>
        <trans-unit id="4ecc03da2a0a560ac7c30c7b597fc46f4cada8d2" translate="yes" xml:space="preserve">
          <source>Note: If using ember-cli, this value is defaulted to &lt;code&gt;auto&lt;/code&gt; by the &lt;code&gt;locationType&lt;/code&gt; setting of &lt;code&gt;/config/environment.js&lt;/code&gt;</source>
          <target state="translated">Примечание: При использовании уголька-интерфейса командной строки, это значение по умолчанию для &lt;code&gt;auto&lt;/code&gt; от &lt;code&gt;locationType&lt;/code&gt; установки &lt;code&gt;/config/environment.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4f5b5d130fcc7f35759471b87f796a64ba0bf18" translate="yes" xml:space="preserve">
          <source>Note: Requests coalescing rely on URL building strategy. So if you override &lt;code&gt;buildURL&lt;/code&gt; in your app &lt;code&gt;groupRecordsForFindMany&lt;/code&gt; more likely should be overridden as well in order for coalescing to work.</source>
          <target state="translated">Примечание. Объединение запросов зависит от стратегии построения URL. Поэтому, если вы переопределяете &lt;code&gt;buildURL&lt;/code&gt; в своем приложении, группа &lt;code&gt;groupRecordsForFindMany&lt;/code&gt; скорее всего, также должна быть переопределена, чтобы объединение работало.</target>
        </trans-unit>
        <trans-unit id="855ed88d13b422515a3bdb028bbb0822265999aa" translate="yes" xml:space="preserve">
          <source>Note: When creating a new record using any of the above methods Ember Data will update &lt;code&gt;DS.RecordArray&lt;/code&gt;s such as those returned by &lt;code&gt;store#peekAll()&lt;/code&gt; or &lt;code&gt;store#findAll()&lt;/code&gt;. This means any data bindings or computed properties that depend on the RecordArray will automatically be synced to include the new or updated record values.</source>
          <target state="translated">Примечание. При создании новой записи с использованием любого из вышеперечисленных методов Ember Data обновит &lt;code&gt;DS.RecordArray&lt;/code&gt; , например, возвращаемые &lt;code&gt;store#peekAll()&lt;/code&gt; или &lt;code&gt;store#findAll()&lt;/code&gt; . Это означает, что любые привязки данных или вычисляемые свойства, которые зависят от RecordArray, будут автоматически синхронизироваться для включения новых или обновленных значений записи.</target>
        </trans-unit>
        <trans-unit id="6ce211ff969df1a3d4d36731e89acfcb795675c6" translate="yes" xml:space="preserve">
          <source>Note: the primary use case for &lt;code&gt;store.queryRecord&lt;/code&gt; is when a single record is queried and the &lt;code&gt;id&lt;/code&gt; is not known beforehand. In all other cases &lt;code&gt;store.query&lt;/code&gt; and using the first item of the array is likely the preferred way:</source>
          <target state="translated">Примечание: основной вариант использования &lt;code&gt;store.queryRecord&lt;/code&gt; - это когда запрашивается одна запись, а &lt;code&gt;id&lt;/code&gt; заранее неизвестен. Во всех остальных случаях &lt;code&gt;store.query&lt;/code&gt; и использование первого элемента массива, вероятно, является предпочтительным способом:</target>
        </trans-unit>
        <trans-unit id="4ac43534a384c67ff6a3d194bed22cd1673c95c8" translate="yes" xml:space="preserve">
          <source>Notice that below we &quot;wrap&quot; our rentals markup inside the open and closing mentions of &lt;code&gt;list-filter&lt;/code&gt; on lines 12 and 20. This is an example of the &lt;a href=&quot;https://guides.emberjs.com/components/wrapping-content-in-a-component&quot;&gt;&lt;strong&gt;block form&lt;/strong&gt;&lt;/a&gt; of a component, which allows a Handlebars template to be rendered &lt;em&gt;inside&lt;/em&gt; the component's template wherever the &lt;code&gt;{{yield}}&lt;/code&gt; expression appears.</source>
          <target state="translated">Обратите внимание, что ниже мы &amp;laquo;оборачиваем&amp;raquo; нашу разметку аренды внутри открытого и закрывающего упоминания &lt;code&gt;list-filter&lt;/code&gt; в строках 12 и 20. Это пример &lt;a href=&quot;https://guides.emberjs.com/components/wrapping-content-in-a-component&quot;&gt;&lt;strong&gt;блочной формы&lt;/strong&gt;&lt;/a&gt; компонента, который позволяет отображать шаблон Handlebars &lt;em&gt;внутри&lt;/em&gt; шаблона компонента. везде, где встречается выражение &lt;code&gt;{{yield}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba2989c0bbd0d56ad53f312f0472d002b5558820" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;positionalParams&lt;/code&gt; property is added to the class as a static variable via &lt;code&gt;reopenClass&lt;/code&gt;. Positional params are always declared on the component class and cannot be changed while an application runs.</source>
          <target state="translated">Обратите внимание, что свойство &lt;code&gt;positionalParams&lt;/code&gt; добавляется к классу как статическая переменная через &lt;code&gt;reopenClass&lt;/code&gt; . Позиционные параметры всегда объявляются в классе компонента и не могут быть изменены во время работы приложения.</target>
        </trans-unit>
        <trans-unit id="22e1e0dd72c3b66a39bb942d9e6c86134bfd19d0" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;then&lt;/code&gt; function called on the result of calling the &lt;code&gt;filter&lt;/code&gt; function. The code expects the &lt;code&gt;filter&lt;/code&gt; function to return a promise. A &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.Promise.html&quot;&gt;promise&lt;/a&gt; is a JavaScript object that represents the result of an asynchronous function. A promise may or may not be executed at the time you receive it. To account for this, it provides functions, like &lt;code&gt;then&lt;/code&gt; that let you give it code it will run when it eventually does receive a result.</source>
          <target state="translated">Обратите внимание на функцию &lt;code&gt;then&lt;/code&gt; , вызываемую в результате вызова функции &lt;code&gt;filter&lt;/code&gt; . Код ожидает, что функция &lt;code&gt;filter&lt;/code&gt; вернет обещание. &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.Promise.html&quot;&gt;Обещание&lt;/a&gt; является объектом JavaScript , который представляет собой результат асинхронной функции. Обещание может быть выполнено или не выполнено в момент его получения. Чтобы учесть это, он предоставляет функции, такие как &lt;code&gt;then&lt;/code&gt; , которые позволяют вам дать ему код, который он будет запускать, когда в конечном итоге получит результат.</target>
        </trans-unit>
        <trans-unit id="9730ce26ccf4f5b2837b3367e2458b83d31d5800" translate="yes" xml:space="preserve">
          <source>Now a malicious user simply needs to set their &lt;code&gt;firstName&lt;/code&gt; to a string containing HTML (like a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that sends private customer data to their server, for example) and every user in that chat room has been compromised.</source>
          <target state="translated">Теперь злоумышленнику просто нужно установить для своего &lt;code&gt;firstName&lt;/code&gt; строку, содержащую HTML (например, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; который отправляет личные данные клиентов на их сервер), и каждый пользователь в этой комнате чата был скомпрометирован.</target>
        </trans-unit>
        <trans-unit id="aed6bbb86311e08883196ef682fc7e18211c1a0d" translate="yes" xml:space="preserve">
          <source>Now both integration test scenarios should pass. You can verify this by starting up our test suite by typing &lt;code&gt;ember t -s&lt;/code&gt; at the command line.</source>
          <target state="translated">Теперь оба сценария интеграционного тестирования должны пройти. Вы можете убедиться в этом, запустив наш набор тестов, набрав в командной строке &lt;code&gt;ember t -s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f599c9023b4f51e1268c2391d3d70cb4d82d8142" translate="yes" xml:space="preserve">
          <source>Now browse to &lt;code&gt;localhost:4200/rentals/grand-old-mansion&lt;/code&gt; and you should see the information listed for that specific rental.</source>
          <target state="translated">Теперь перейдите по &lt;code&gt;localhost:4200/rentals/grand-old-mansion&lt;/code&gt; и вы должны увидеть информацию, указанную для этой конкретной аренды.</target>
        </trans-unit>
        <trans-unit id="3c097506f308ce3211348990a741b341f9e9c584" translate="yes" xml:space="preserve">
          <source>Now imagine we have the following template and route:</source>
          <target state="translated">Теперь представьте,что у нас есть следующий шаблон и маршрут:</target>
        </trans-unit>
        <trans-unit id="f2091523f465fab3ba86b01fc47f04eb9b8fc8b8" translate="yes" xml:space="preserve">
          <source>Now implement the service as follows. Note that we check if a map already exists for the given location and use that one, otherwise we call a Google Maps utility to create one.</source>
          <target state="translated">Теперь реализуйте услугу следующим образом.Обратите внимание,что мы проверяем,существует ли уже карта для данного местоположения,и используем эту карту,в противном случае мы вызываем утилиту Google Maps для ее создания.</target>
        </trans-unit>
        <trans-unit id="d5f166005bc10a443ff98a919b8aa3d2fcc4e964" translate="yes" xml:space="preserve">
          <source>Now in our &lt;code&gt;rentals.hbs&lt;/code&gt; template, let's replace the old HTML markup within our &lt;code&gt;{{#each}}&lt;/code&gt; loop with our new &lt;code&gt;rental-listing&lt;/code&gt; component:</source>
          <target state="translated">Теперь в нашем шаблоне &lt;code&gt;rentals.hbs&lt;/code&gt; давайте заменим старую разметку HTML в нашем &lt;code&gt;{{#each}}&lt;/code&gt; на наш новый компонент для &lt;code&gt;rental-listing&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fa74a5445ac21a141ea80fae8c137247dd31ba9d" translate="yes" xml:space="preserve">
          <source>Now in our browser we should see that the first rental property is listed as &quot;Standalone&quot;, while the other two are listed as &quot;Community&quot;.</source>
          <target state="translated">Теперь в нашем браузере мы должны увидеть,что первый объект аренды указан как &quot;Автономный&quot;,в то время как два других перечислены как &quot;Сообщество&quot;.</target>
        </trans-unit>
        <trans-unit id="02f78c37e1d7493e21b1b94978d032932bbcb8df" translate="yes" xml:space="preserve">
          <source>Now in the browser when a scientist's name is clicked, this function is called and the person's name is alerted.</source>
          <target state="translated">Теперь в браузере при нажатии на имя ученого вызывается эта функция,и имя человека предупреждается.</target>
        </trans-unit>
        <trans-unit id="ed29b70e455c078562a5f430d4dbd6281287bd7b" translate="yes" xml:space="preserve">
          <source>Now let's add code that simulates a visitor arriving on our homepage, clicking one of our links and then visiting a new page.</source>
          <target state="translated">Теперь добавим код,имитирующий посетителя,пришедшего на нашу домашнюю страницу,нажав на одну из наших ссылок,а затем перейдя на новую страницу.</target>
        </trans-unit>
        <trans-unit id="c09d33d498277510cb65c5bde600e541b65944ec" translate="yes" xml:space="preserve">
          <source>Now let's create a test which will call &lt;code&gt;levelUp&lt;/code&gt; on the player when they are level 4 to assert that the &lt;code&gt;levelName&lt;/code&gt; changes. We will use &lt;code&gt;moduleForModel&lt;/code&gt;:</source>
          <target state="translated">Теперь давайте создадим тест, который будет вызывать &lt;code&gt;levelUp&lt;/code&gt; у игрока, когда он &lt;code&gt;levelName&lt;/code&gt; 4-го уровня, чтобы подтвердить изменение levelName . Мы будем использовать &lt;code&gt;moduleForModel&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="37fd2a1099f983eece52ae774c4e471341b866db" translate="yes" xml:space="preserve">
          <source>Now let's create another route with contact details for the company. Once again, we'll start by generating a route:</source>
          <target state="translated">Теперь создадим еще один маршрут с контактными данными компании.Еще раз,начнем с создания маршрута:</target>
        </trans-unit>
        <trans-unit id="311e7c28de846f6b4798420c4a5a9e440da7f54c" translate="yes" xml:space="preserve">
          <source>Now let's render our component using the &lt;code&gt;render&lt;/code&gt; function. The &lt;code&gt;render&lt;/code&gt; function allows us to pass a template string, so that we can declare the component in the same way we do in our templates. Since we set the &lt;code&gt;rentalObj&lt;/code&gt; variable to our local scope, we can access it as part of our render string.</source>
          <target state="translated">Теперь давайте отрендерим наш компонент с помощью функции &lt;code&gt;render&lt;/code&gt; . Функция &lt;code&gt;render&lt;/code&gt; позволяет нам передавать строку шаблона, чтобы мы могли объявить компонент так же, как и в наших шаблонах. Поскольку мы устанавливаем переменную &lt;code&gt;rentalObj&lt;/code&gt; в нашу локальную область видимости, мы можем получить к ней доступ как часть нашей строки рендеринга.</target>
        </trans-unit>
        <trans-unit id="ae22d53ed6893c6b12aeed6c790fd45587cc8f49" translate="yes" xml:space="preserve">
          <source>Now let's tell Ember how to turn that array of strings into HTML. Open the &lt;code&gt;scientists&lt;/code&gt; template and add the following code to loop through the array and print it:</source>
          <target state="translated">Теперь давайте расскажем Ember, как преобразовать этот массив строк в HTML. Откройте шаблон &lt;code&gt;scientists&lt;/code&gt; и добавьте следующий код, чтобы просмотреть массив и распечатать его:</target>
        </trans-unit>
        <trans-unit id="7f913783707682a29aebe4955714ed5c947732a8" translate="yes" xml:space="preserve">
          <source>Now let's test that the map component is relying on our service to provide map elements.</source>
          <target state="translated">Теперь давайте проверим,что компонент карты полагается на наш сервис для предоставления элементов карты.</target>
        </trans-unit>
        <trans-unit id="96f7e41a4cd747d58701a050ee081913d14c9b5e" translate="yes" xml:space="preserve">
          <source>Now let's write a test that sets a property on our &lt;code&gt;post&lt;/code&gt; model in the &lt;code&gt;PostController&lt;/code&gt; that would be available on the &lt;code&gt;CommentsController&lt;/code&gt;.</source>
          <target state="translated">Теперь давайте напишем тест , который устанавливает свойство нашей &lt;code&gt;post&lt;/code&gt; модели в &lt;code&gt;PostController&lt;/code&gt; , которые будут доступны на &lt;code&gt;CommentsController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9f9ed10a2412df54c18588a43c8397490d4ba61" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;ember server&lt;/code&gt; (or &lt;code&gt;ember serve&lt;/code&gt;, or even &lt;code&gt;ember s&lt;/code&gt; for short) on your command line to start the Ember development server and then go to &lt;a href=&quot;http://localhost:4200/about&quot;&gt;&lt;code&gt;http://localhost:4200/about&lt;/code&gt;&lt;/a&gt; to see our new page in action!</source>
          <target state="translated">Теперь запустите &lt;code&gt;ember server&lt;/code&gt; (или &lt;code&gt;ember serve&lt;/code&gt; , или даже &lt;code&gt;ember s&lt;/code&gt; для краткости) в командной строке, чтобы запустить сервер разработки Ember, а затем перейдите по &lt;a href=&quot;http://localhost:4200/about&quot;&gt; &lt;code&gt;http://localhost:4200/about&lt;/code&gt; &lt;/a&gt; чтобы увидеть нашу новую страницу в действии!</target>
        </trans-unit>
        <trans-unit id="84b050c16846a3214fdf9d603f7c5b69acbc94b6" translate="yes" xml:space="preserve">
          <source>Now run the tests by typing &lt;code&gt;ember test --server&lt;/code&gt; in the command line (or &lt;code&gt;ember t -s&lt;/code&gt; for short).</source>
          <target state="translated">Теперь запустите тесты, набрав в командной строке &lt;code&gt;ember test --server&lt;/code&gt; (или для краткости &lt;code&gt;ember t -s&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="34b197a6f48a8ab8f16c6e0063a35905a4b87cee" translate="yes" xml:space="preserve">
          <source>Now run your test suite with the CLI command, &lt;code&gt;ember test --server&lt;/code&gt;.</source>
          <target state="translated">Теперь запустите свой набор тестов с помощью команды CLI, &lt;code&gt;ember test --server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e32163bdf7a676f31ff681bf9c67e518f8ae20d2" translate="yes" xml:space="preserve">
          <source>Now that our API is ready to return individual rentals, we can generate our &lt;code&gt;show&lt;/code&gt; sub-route. Much like generating our &lt;code&gt;rentals&lt;/code&gt; route, we will use &lt;code&gt;ember g&lt;/code&gt; to create a nested route.</source>
          <target state="translated">Теперь, когда наш API готов возвращать отдельные арендные платы, мы можем сгенерировать наш &lt;code&gt;show&lt;/code&gt; . Как и при создании нашего маршрута &lt;code&gt;rentals&lt;/code&gt; , мы будем использовать &lt;code&gt;ember g&lt;/code&gt; для создания вложенного маршрута.</target>
        </trans-unit>
        <trans-unit id="390b956f83716b5d2b619a143ece53c88d58057b" translate="yes" xml:space="preserve">
          <source>Now that we are able to generate a map element, we will implement a maps service that will keep a reference to the Map object we create, and attach the map to an element in our application</source>
          <target state="translated">Теперь,когда мы можем сгенерировать элемент карты,мы реализуем службу карт,которая будет хранить ссылку на объект карты,который мы создаем,и прикрепить карту к элементу в нашем приложении.</target>
        </trans-unit>
        <trans-unit id="e29152200d11c3493e21bf49ce8fe2f07316838b" translate="yes" xml:space="preserve">
          <source>Now that we are returning all of our rentals to the nested route's model, we will also move the rental list markup from our main route template to our nested route index template.</source>
          <target state="translated">Теперь,когда мы возвращаем все наши прокаты во вложенную модель маршрута,мы также перенесем разметку арендного списка из нашего основного шаблона маршрута в наш вложенный шаблон индекса маршрута.</target>
        </trans-unit>
        <trans-unit id="74ca8a47289101b4d71bc8a893d38054ad494e17" translate="yes" xml:space="preserve">
          <source>Now that we can load pages for individual rentals, we'll add a link (using the &lt;code&gt;link-to&lt;/code&gt; helper) within our &lt;code&gt;rental-listing&lt;/code&gt; component to navigate to individual pages. Here, the &lt;code&gt;link-to&lt;/code&gt; helper takes the route name and the rental model object as arguments. When you pass an object as second argument into the &lt;code&gt;link-to&lt;/code&gt; block helper, it will by default &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_serialize&quot;&gt;serialize&lt;/a&gt; the object to the ID of the model into the URL. Alternately, you may just pass &lt;code&gt;rental.id&lt;/code&gt; for clarity.</source>
          <target state="translated">Теперь, когда мы можем загружать страницы для индивидуальной аренды, мы добавим ссылку (с помощью помощника по &lt;code&gt;link-to&lt;/code&gt; ) в наш компонент для &lt;code&gt;rental-listing&lt;/code&gt; в аренду для перехода на отдельные страницы. Здесь помощник по &lt;code&gt;link-to&lt;/code&gt; принимает в качестве аргументов имя маршрута и объект модели аренды. Когда вы передаете объект в качестве второго аргумента вспомогательной функции блока &lt;code&gt;link-to&lt;/code&gt; , он по умолчанию &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_serialize&quot;&gt;сериализует&lt;/a&gt; объект по идентификатору модели в URL. В качестве альтернативы, вы можете просто передать &lt;code&gt;rental.id&lt;/code&gt; для ясности.</target>
        </trans-unit>
        <trans-unit id="f51bc732dd5d0541e4168611797a812b626f2f08" translate="yes" xml:space="preserve">
          <source>Now that we have the maps API available to the application, we can create our map utility. Utility files can be generated using Ember CLI.</source>
          <target state="translated">Теперь,когда у нас есть API для работы с картами,мы можем создать нашу утилиту для работы с картами.Файлы утилиты могут быть сгенерированы с помощью Ember CLI.</target>
        </trans-unit>
        <trans-unit id="a4e52876f40ef26dc44f65cd5da56d10b2128afb" translate="yes" xml:space="preserve">
          <source>Now that we have various pages in our application, let's walk through how to build tests for them.</source>
          <target state="translated">Теперь,когда в нашем приложении есть различные страницы,давайте пройдемся по тому,как строить для них тесты.</target>
        </trans-unit>
        <trans-unit id="6188cec92e3b92a3cd3573bff0b61954c555c273" translate="yes" xml:space="preserve">
          <source>Now that we've created a new component for filtering a list, we want to create a test to verify it. Let's use a &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components&quot;&gt;component integration test&lt;/a&gt; to verify our component behavior, similar to &lt;a href=&quot;../simple-component#toc_an-integration-test&quot;&gt;how we tested our rental listing component earlier&lt;/a&gt;.</source>
          <target state="translated">Теперь, когда мы создали новый компонент для фильтрации списка, мы хотим создать тест для его проверки. Давайте воспользуемся &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components&quot;&gt;тестом интеграции компонентов,&lt;/a&gt; чтобы проверить поведение нашего компонента, аналогично тому, &lt;a href=&quot;../simple-component#toc_an-integration-test&quot;&gt;как мы ранее тестировали компонент для сдачи в аренду&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22d276eb5319d347792a8180152b4cf12d2f8003" translate="yes" xml:space="preserve">
          <source>Now that we've got the &lt;code&gt;scientists&lt;/code&gt; template rendering, let's give it some data to render. We do that by specifying a &lt;em&gt;model&lt;/em&gt; for that route, and we can specify a model by editing &lt;code&gt;app/routes/scientists.js&lt;/code&gt;.</source>
          <target state="translated">Теперь, когда у нас есть рендеринг шаблона &lt;code&gt;scientists&lt;/code&gt; , давайте дадим ему данные для рендеринга. Мы делаем это, задавая &lt;em&gt;модель&lt;/em&gt; для этого маршрута, и мы можем указать модель, отредактировав &lt;code&gt;app/routes/scientists.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="409a5bf3323ebbf783bca40b618202511ed25e9c" translate="yes" xml:space="preserve">
          <source>Now that we've tested that the &lt;code&gt;list-filter&lt;/code&gt; component behaves as expected, let's test that the page itself also behaves properly with an acceptance test. We'll verify that a user visiting the rentals page can enter text into the search field and narrow the list of rentals by city.</source>
          <target state="translated">Теперь, когда мы проверили, что компонент &lt;code&gt;list-filter&lt;/code&gt; ведет себя, как ожидалось, давайте проверим правильность поведения самой страницы с помощью приемочного теста. Мы проверим, может ли пользователь, посетивший страницу аренды, ввести текст в поле поиска и сузить список аренды по городу.</target>
        </trans-unit>
        <trans-unit id="e9f934b876c6d18b3147c025ed6401410b05147e" translate="yes" xml:space="preserve">
          <source>Now that we've written our application and verified that it works in development, it's time to get it ready to deploy to our users.</source>
          <target state="translated">Теперь,когда мы написали наше приложение и убедились,что оно работает в разработке,пришло время подготовить его к развертыванию для наших пользователей.</target>
        </trans-unit>
        <trans-unit id="fb98077b823bffbec7d94fef2fd368d976bda3cd" translate="yes" xml:space="preserve">
          <source>Now the same template above renders the following HTML:</source>
          <target state="translated">Теперь тот же шаблон,что и выше,отображает следующий HTML:</target>
        </trans-unit>
        <trans-unit id="751cdc42f9ac3dfa5f8f1d9e4ef15bfaddd5edf2" translate="yes" xml:space="preserve">
          <source>Now the value passed into the helper has its HTML escaped, but the trusted &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; tags that we want to wrap the value in are &lt;em&gt;not&lt;/em&gt; escaped. A malicious user setting their &lt;code&gt;firstName&lt;/code&gt; to something containing HTML would see this:</source>
          <target state="translated">Теперь значение, переданное в помощник, имеет экранированный HTML, но доверенные теги &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; ,в которые мы хотим заключить значение, &lt;em&gt;не&lt;/em&gt; экранируются. Злоумышленник, установивший для своего &lt;code&gt;firstName&lt;/code&gt; значение, содержащее HTML, увидит следующее:</target>
        </trans-unit>
        <trans-unit id="8b6b5009f8b7a2901d3d319dd17092db9a1ed606" translate="yes" xml:space="preserve">
          <source>Now visiting the root route at &lt;code&gt;/&lt;/code&gt; will result in the &lt;code&gt;/rentals&lt;/code&gt; URL loading.</source>
          <target state="translated">Теперь посещение корневого маршрута в &lt;code&gt;/&lt;/code&gt; приведет к загрузке URL-адреса &lt;code&gt;/rentals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c6c7e593ed0c850f3e8190fef9191b81f3e28da" translate="yes" xml:space="preserve">
          <source>Now we are listing rentals, and verifying it with an acceptance test. This leaves us with 2 remaining acceptance test failures (and 1 eslint failure):</source>
          <target state="translated">Теперь мы размещаем объявления об аренде и проверяем их с помощью приёмочного теста.Таким образом,у нас остается 2 оставшихся сбоя в приемочном тесте (и 1 сбой в приемочном тесте):</target>
        </trans-unit>
        <trans-unit id="7108a8b8c763bba0f7398042020329fed4eaf6cc" translate="yes" xml:space="preserve">
          <source>Now we can add functionality that will show the image of a rental when requested by the user.</source>
          <target state="translated">Теперь мы можем добавить функционал,который будет показывать изображение проката по запросу пользователя.</target>
        </trans-unit>
        <trans-unit id="bfa9210fe58ffde8b4dcc9ff4b51a5ca9f882a82" translate="yes" xml:space="preserve">
          <source>Now we can move on to an integration test. Integration testing helpers is done with the &lt;code&gt;moduleForComponent&lt;/code&gt; helpers, as shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Testing Components&lt;/a&gt;.</source>
          <target state="translated">Теперь мы можем перейти к интеграционному тесту. Помощники по тестированию интеграции выполняются с &lt;code&gt;moduleForComponent&lt;/code&gt; помощников moduleForComponent , как показано в разделе &amp;laquo; &lt;a href=&quot;../unit-testing-basics&quot;&gt;Тестирование компонентов&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4adfea733a9bf47405887104fee15db7d39c58a6" translate="yes" xml:space="preserve">
          <source>Now we need to define a computed property of our category-filtered array that the &lt;code&gt;articles&lt;/code&gt; template will render:</source>
          <target state="translated">Теперь нам нужно определить вычисляемое свойство нашего отфильтрованного по категориям массива, которое будет отображать шаблон &lt;code&gt;articles&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="54e5a7d11514449fe0aca845de95725d318042b5" translate="yes" xml:space="preserve">
          <source>Now we need to make it so that the &lt;code&gt;userDidDeleteAccount()&lt;/code&gt; action defined in the parent component &lt;code&gt;user-profile&lt;/code&gt; can be triggered from within &lt;code&gt;button-with-confirmation&lt;/code&gt;. We'll do this by passing the action to the child component in exactly the same way that we pass other properties. This is possible since actions are simply functions, just like any other method on a component, and they can therefore be passed from one component to another like this:</source>
          <target state="translated">Теперь нам нужно сделать так, чтобы действие &lt;code&gt;userDidDeleteAccount()&lt;/code&gt; определенное в &lt;code&gt;user-profile&lt;/code&gt; родительского компонента, могло запускаться из &lt;code&gt;button-with-confirmation&lt;/code&gt; . Мы сделаем это, передав действие дочернему компоненту точно так же, как мы передаем другие свойства. Это возможно, поскольку действия - это просто функции, как и любой другой метод компонента, и поэтому их можно передавать от одного компонента к другому следующим образом:</target>
        </trans-unit>
        <trans-unit id="638d79b6dc710ae90d1be166135c3fd4850c0c22" translate="yes" xml:space="preserve">
          <source>Now we've implemented our action, but we have not told Ember when we want this action to be triggered, which is the next step.</source>
          <target state="translated">Сейчас мы осуществили наше действие,но мы не сказали Эмберу,когда мы хотим,чтобы это действие было запущено,что является следующим шагом.</target>
        </trans-unit>
        <trans-unit id="8266b5a5c3d0155af7d2420da1952fd4bf225240" translate="yes" xml:space="preserve">
          <source>Now when the &lt;code&gt;system-preferences-editor&lt;/code&gt; handles the delete action, it receives only the user's account &lt;code&gt;id&lt;/code&gt; string.</source>
          <target state="translated">Теперь, когда &lt;code&gt;system-preferences-editor&lt;/code&gt; обрабатывает действие удаления, он получает только строку &lt;code&gt;id&lt;/code&gt; учетной записи пользователя .</target>
        </trans-unit>
        <trans-unit id="24e0f7c85a3653f2f8783ca8850aaea9de98c648" translate="yes" xml:space="preserve">
          <source>Now when we click the image or the &lt;code&gt;View Larger&lt;/code&gt; link in our browser, we see our image show larger. When we click the enlarged image again, we see it smaller.</source>
          <target state="translated">Теперь, когда мы щелкаем изображение или ссылку &amp;laquo; &lt;code&gt;View Larger&lt;/code&gt; размер&amp;raquo; в нашем браузере, мы видим, что изображение становится больше. Когда мы снова щелкаем увеличенное изображение, мы видим его меньше.</target>
        </trans-unit>
        <trans-unit id="5d245f0aef23eeedd834fcade7b3ff3025ac6d19" translate="yes" xml:space="preserve">
          <source>Now when we go to &lt;a href=&quot;http://localhost:4200/contact&quot;&gt;&lt;code&gt;http://localhost:4200/contact&lt;/code&gt;&lt;/a&gt;, we'll see our contact page.</source>
          <target state="translated">Теперь, когда мы перейдем по &lt;a href=&quot;http://localhost:4200/contact&quot;&gt; &lt;code&gt;http://localhost:4200/contact&lt;/code&gt; &lt;/a&gt; , мы увидим нашу страницу контактов.</target>
        </trans-unit>
        <trans-unit id="ce9483b052b5784076ba5b335a0118e44ab1c9e9" translate="yes" xml:space="preserve">
          <source>Now when you confirm deletion, the action goes straight to the &lt;code&gt;system-preferences-editor&lt;/code&gt; to be handled in its local context.</source>
          <target state="translated">Теперь, когда вы подтверждаете удаление, действие переходит прямо в &lt;code&gt;system-preferences-editor&lt;/code&gt; для обработки в его локальном контексте.</target>
        </trans-unit>
        <trans-unit id="61a8b0d0ff011a9764ca1ad939461500c43c3744" translate="yes" xml:space="preserve">
          <source>Now, define your new controller like so:</source>
          <target state="translated">Теперь определи свой новый контроллер так:</target>
        </trans-unit>
        <trans-unit id="f4fd3bbdfb6ab9a0619b9f651b994843f728f190" translate="yes" xml:space="preserve">
          <source>Now, let's add a list of available rentals to the rentals page we've just created.</source>
          <target state="translated">Теперь давайте добавим список доступных арендных ставок на только что созданную нами страницу аренды.</target>
        </trans-unit>
        <trans-unit id="a53ad0647104e578d8de2040723dfe077ba174b5" translate="yes" xml:space="preserve">
          <source>Now, let's switch over to our rentals page template. We can use the model attribute to display our list of rentals. Here, we'll use another common Handlebars helper called &lt;a href=&quot;https://guides.emberjs.com/templates/displaying-a-list-of-items/&quot;&gt;&lt;code&gt;{{each}}&lt;/code&gt;&lt;/a&gt;. This helper will let us loop through each of the rental objects in our model:</source>
          <target state="translated">Теперь давайте перейдем к нашему шаблону страницы аренды. Мы можем использовать атрибут model для отображения нашего списка арендованных автомобилей. Здесь мы будем использовать еще один распространенный помощник Handlebars, называемый &lt;a href=&quot;https://guides.emberjs.com/templates/displaying-a-list-of-items/&quot;&gt; &lt;code&gt;{{each}}&lt;/code&gt; &lt;/a&gt; . Этот помощник позволит нам перебрать каждый объект аренды в нашей модели:</target>
        </trans-unit>
        <trans-unit id="15795f7ce89f935cc441a35c4b6d01a3b8f097c4" translate="yes" xml:space="preserve">
          <source>Now, we can use &lt;code&gt;onConfirm&lt;/code&gt; in the child component to invoke the action on the parent:</source>
          <target state="translated">Теперь мы можем использовать &lt;code&gt;onConfirm&lt;/code&gt; в дочернем компоненте для вызова действия в родительском компоненте:</target>
        </trans-unit>
        <trans-unit id="e8a74da24790015ebe84e057ae755a540ac6ffaa" translate="yes" xml:space="preserve">
          <source>Now, we can use the &lt;code&gt;{{blog-post}}&lt;/code&gt; component and pass it properties in another template:</source>
          <target state="translated">Теперь мы можем использовать компонент &lt;code&gt;{{blog-post}}&lt;/code&gt; и передать ему свойства в другом шаблоне:</target>
        </trans-unit>
        <trans-unit id="fdf62c9f4192c9e36113ca42781fc9263390a9ef" translate="yes" xml:space="preserve">
          <source>Now, we'll add our corresponding link to the contact page so we can move back and forth between &lt;code&gt;about&lt;/code&gt; and &lt;code&gt;contact&lt;/code&gt;:</source>
          <target state="translated">Теперь мы добавим нашу соответствующую ссылку на страницу контактов, чтобы можно было перемещаться между &lt;code&gt;about&lt;/code&gt; и &lt;code&gt;contact&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b6222fa9f13976ca7ad6beffaa5b6d82e8a9acf" translate="yes" xml:space="preserve">
          <source>Now, when the user visits &lt;code&gt;/about&lt;/code&gt;, Ember will render the &lt;code&gt;about&lt;/code&gt; template. Visiting &lt;code&gt;/favs&lt;/code&gt; will render the &lt;code&gt;favorites&lt;/code&gt; template.</source>
          <target state="translated">Теперь, когда пользователь посетит &lt;code&gt;/about&lt;/code&gt; , Ember отобразит шаблон &lt;code&gt;about&lt;/code&gt; . При посещении &lt;code&gt;/favs&lt;/code&gt; &lt;code&gt;favorites&lt;/code&gt; отобразится шаблон избранного .</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="88edc4776d403507658bee878ccdd72f1066d6fc" translate="yes" xml:space="preserve">
          <source>Number of elements that should be removed from the array, starting at *idx*.</source>
          <target state="translated">Количество элементов,которые необходимо удалить из массива,начиная с *idx*.</target>
        </trans-unit>
        <trans-unit id="0da649b10044d0f71d7a6905e9b6d63659072ba9" translate="yes" xml:space="preserve">
          <source>Number of milliseconds to space out requests.</source>
          <target state="translated">Количество миллисекунд,чтобы освободить место для запросов.</target>
        </trans-unit>
        <trans-unit id="76f886e5f43af44774fe994d2bf9d8f584ccf233" translate="yes" xml:space="preserve">
          <source>Number of milliseconds to wait.</source>
          <target state="translated">Количество миллисекунд,чтобы подождать.</target>
        </trans-unit>
        <trans-unit id="c96f8cfa04b2401642b632ab99c696e7b056b4c9" translate="yes" xml:space="preserve">
          <source>Number|Property</source>
          <target state="translated">Number|Property</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="046bbc130ff7274f6d64607d913605fb2889bf35" translate="yes" xml:space="preserve">
          <source>Object Inspector</source>
          <target state="translated">Инспектор объектов</target>
        </trans-unit>
        <trans-unit id="e1513401bdad97eeec26a0df3ad83cdcfa1ea677" translate="yes" xml:space="preserve">
          <source>Object Root</source>
          <target state="translated">Корень объекта</target>
        </trans-unit>
        <trans-unit id="a7b77dbe50791d31096e5af54a26e5c31a19b936" translate="yes" xml:space="preserve">
          <source>Object containing values to use within the new class</source>
          <target state="translated">Объект,содержащий значения для использования в новом классе</target>
        </trans-unit>
        <trans-unit id="6b304869b69598961a9d35b37c6fa6c60971f424" translate="yes" xml:space="preserve">
          <source>Object | DS.AdapterError</source>
          <target state="translated">Объект | DS.AdapterError</target>
        </trans-unit>
        <trans-unit id="43710f2ae099d35ce837e6f0eaa732de92f07067" translate="yes" xml:space="preserve">
          <source>Object...</source>
          <target state="translated">Object...</target>
        </trans-unit>
        <trans-unit id="509eaa966f59106fc4885b0bd87f377320887ef2" translate="yes" xml:space="preserve">
          <source>ObjectProxy</source>
          <target state="translated">ObjectProxy</target>
        </trans-unit>
        <trans-unit id="b6ab519ee4828e64cb84e7da4b0494d126262ccd" translate="yes" xml:space="preserve">
          <source>Objects are considered Array-like if any of the following are true:</source>
          <target state="translated">Объекты считаются массивами,если любое из следующих утверждений верно:</target>
        </trans-unit>
        <trans-unit id="1f91056b2f2c5a87fefcf8263cdce9940569716e" translate="yes" xml:space="preserve">
          <source>Objects in Ember</source>
          <target state="translated">Объекты в Эмбер</target>
        </trans-unit>
        <trans-unit id="ea0a98c632b2c1b78a2d3889fe6a012055812ca8" translate="yes" xml:space="preserve">
          <source>Object|Function</source>
          <target state="translated">Object|Function</target>
        </trans-unit>
        <trans-unit id="d9008046621fd4aa468204fcfd6ca159f07a8852" translate="yes" xml:space="preserve">
          <source>Object|Promise</source>
          <target state="translated">Object|Promise</target>
        </trans-unit>
        <trans-unit id="c231f0cfa191393d14a834365263558785e900ee" translate="yes" xml:space="preserve">
          <source>Object|String</source>
          <target state="translated">Object|String</target>
        </trans-unit>
        <trans-unit id="c92258fa87a7fd87bfb0eac39b2cad3876c1531d" translate="yes" xml:space="preserve">
          <source>Observable</source>
          <target state="translated">Observable</target>
        </trans-unit>
        <trans-unit id="307932fe3fc8a6a623482336122238a18d63c345" translate="yes" xml:space="preserve">
          <source>Observable Equivalent</source>
          <target state="translated">Наблюдаемый эквивалент</target>
        </trans-unit>
        <trans-unit id="03ec7d08aec77b2156c9347f0082c5eed203b4e0" translate="yes" xml:space="preserve">
          <source>Observer Methods</source>
          <target state="translated">Методы наблюдателя</target>
        </trans-unit>
        <trans-unit id="20c17cb09007fd332a06112b65f303ed65335037" translate="yes" xml:space="preserve">
          <source>Observer methods have the following signature:</source>
          <target state="translated">Методы наблюдателя имеют следующую подпись:</target>
        </trans-unit>
        <trans-unit id="0618a214d16e39be75c6315a11d086a7dcbea1b6" translate="yes" xml:space="preserve">
          <source>Observers</source>
          <target state="translated">Observers</target>
        </trans-unit>
        <trans-unit id="853a6ea1725e790242a53c8b71d88a3606114195" translate="yes" xml:space="preserve">
          <source>Observers / Binding</source>
          <target state="translated">Наблюдатели/Связывание</target>
        </trans-unit>
        <trans-unit id="0ba30584277e971c04f0d982aa5c093fa641ac6a" translate="yes" xml:space="preserve">
          <source>Observers and asynchrony</source>
          <target state="translated">Наблюдатели и асинхронность</target>
        </trans-unit>
        <trans-unit id="dd121fa26be2df8672e845b1537510d9b314c5cd" translate="yes" xml:space="preserve">
          <source>Observers and object initialization</source>
          <target state="translated">Наблюдатели и инициализация объектов</target>
        </trans-unit>
        <trans-unit id="e736f6b09fdaa953337c6d536a1450f9f94c9a91" translate="yes" xml:space="preserve">
          <source>Observers are annotated using &lt;code&gt;Ember.observer()&lt;/code&gt;:</source>
          <target state="translated">Наблюдатели аннотируются с помощью &lt;code&gt;Ember.observer()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3077946aa34d8ec8d2b52fd810a985c5b86ca007" translate="yes" xml:space="preserve">
          <source>Observers in Ember are currently synchronous. This means that they will fire as soon as one of the properties they observe changes. Because of this, it is easy to introduce bugs where properties are not yet synchronized:</source>
          <target state="translated">Наблюдатели в Эмбере в настоящее время синхронизированы.Это означает,что они будут стрелять,как только одно из свойств,которые они наблюдают,изменится.Из-за этого легко ввести ошибки,свойства которых еще не синхронизированы:</target>
        </trans-unit>
        <trans-unit id="0dcd8db6908df157727f62893615213904a58453" translate="yes" xml:space="preserve">
          <source>Observers never fire until after the initialization of an object is complete.</source>
          <target state="translated">Наблюдатели никогда не стреляют до тех пор,пока инициализация объекта не будет завершена.</target>
        </trans-unit>
        <trans-unit id="f5999f9bc2923f92d05e5b16aa536ea236796646" translate="yes" xml:space="preserve">
          <source>Observers should contain behavior that reacts to changes in another property. Observers are especially useful when you need to perform some behavior after a binding has finished synchronizing.</source>
          <target state="translated">Наблюдатели должны содержать поведение,которое реагирует на изменения в другом свойстве.Наблюдатели особенно полезны,когда необходимо выполнить некоторое поведение после завершения синхронизации привязки.</target>
        </trans-unit>
        <trans-unit id="2e48525b5f6912ad099b4ea5d21fef8fb5a4b87c" translate="yes" xml:space="preserve">
          <source>Observing Property Changes</source>
          <target state="translated">Наблюдение за изменениями свойств</target>
        </trans-unit>
        <trans-unit id="49abd5a03a91a7274230eb2dc93800125ce2b2dc" translate="yes" xml:space="preserve">
          <source>Occasionally you may want to prevent the app from initializing during setup. This could enable extra configuration, or enable asserting prior to the app becoming ready.</source>
          <target state="translated">Иногда вам может понадобиться предотвратить инициализацию приложения во время установки.Это может привести к включению дополнительной настройки или включению утверждения до того,как приложение будет готово.</target>
        </trans-unit>
        <trans-unit id="8ff2f4ac5135f40e96e90d7929e9e452ea04a10c" translate="yes" xml:space="preserve">
          <source>Often actions perform asynchronous tasks, such as making an ajax request to a server. Since actions are functions that can be passed in by a parent component, they are able to return values when called. The most common scenario is for an action to return a promise so that the component can handle the action's completion.</source>
          <target state="translated">Часто действия выполняют асинхронные задачи,например,выполнение ajax-запроса на сервер.Поскольку действия-это функции,которые могут передаваться родительским компонентом,они могут возвращать значения при вызове.Наиболее распространенный сценарий-когда действие возвращает обещание,чтобы компонент мог справиться с завершением действия.</target>
        </trans-unit>
        <trans-unit id="89cb7859835dee6ef77b5791366871c69a2d100f" translate="yes" xml:space="preserve">
          <source>Often times, your components will just encapsulate certain snippets of Handlebars templates that you find yourself using over and over. In those cases, you do not need to write any JavaScript at all. Define the Handlebars template as described above and use the component that is created.</source>
          <target state="translated">Часто ваши компоненты просто инкапсулируют определенные фрагменты шаблонов Handlebars,которые вы используете снова и снова.В этих случаях вам вообще не нужно писать никакой JavaScript.Определите шаблон панели управления,как описано выше,и используйте созданный компонент.</target>
        </trans-unit>
        <trans-unit id="5aaf5caa5b49b93e7119e86a70d536ce6664ca8a" translate="yes" xml:space="preserve">
          <source>Often you'll want to have a template that displays inside another template. For example, in a blogging application, instead of going from a list of blog posts to creating a new post, you might want to have the post creation page display next to the list.</source>
          <target state="translated">Часто вам захочется иметь шаблон,который отображается внутри другого шаблона.Например,в блог-приложении,вместо того,чтобы переходить от списка постов в блоге к созданию нового сообщения,вы можете захотеть,чтобы рядом со списком отображалась страница создания сообщения.</target>
        </trans-unit>
        <trans-unit id="62bb97c24abd34d344b7c7e101be577c8280b132" translate="yes" xml:space="preserve">
          <source>Often, interacting with a component will cause asynchronous behavior to occur, such as HTTP requests, or timers. The &lt;code&gt;wait&lt;/code&gt; helper is designed to handle these scenarios, by providing a hook to ensure assertions are made after all Ajax requests and timers are complete.</source>
          <target state="translated">Часто взаимодействие с компонентом вызывает асинхронное поведение, такое как HTTP-запросы или таймеры. &lt;code&gt;wait&lt;/code&gt; помощник предназначен для обработки этих сценариев, обеспечивая крюк , чтобы обеспечить утверждение сделано после того, как все запросы Ajax и таймерами являются полными.</target>
        </trans-unit>
        <trans-unit id="50ea8ddf844ede9c0ec44349c06ad04be2998925" translate="yes" xml:space="preserve">
          <source>Often, services connect to third party APIs that are not desirable to include in automated tests. To stub these services we simply have to register a stub service that implements the same API, but does not have the dependencies that are problematic for the test suite.</source>
          <target state="translated">Часто сервисы подключаются к сторонним API,которые нежелательно включать в автоматизированные тесты.Чтобы подключить эти сервисы,нам просто нужно зарегистрировать сервис,который реализует тот же самый API,но не имеет зависимостей,которые являются проблематичными для тестового набора.</target>
        </trans-unit>
        <trans-unit id="0ce500ec9eb2726f6b12a95aabe734c404cd89eb" translate="yes" xml:space="preserve">
          <source>Often, the relationships in Ember Data applications will have an inverse. For example, imagine the following models are defined:</source>
          <target state="translated">Часто отношения в приложениях Ember Data будут обратными.Например,представьте,что определены следующие модели:</target>
        </trans-unit>
        <trans-unit id="c1f047d78b062689ec81f8220591ae2637824e50" translate="yes" xml:space="preserve">
          <source>Often, you'll want a template to display data from a model. Loading the appropriate model is one job of a route.</source>
          <target state="translated">Часто вам понадобится шаблон для отображения данных модели.Загрузка соответствующей модели является одной из задач маршрута.</target>
        </trans-unit>
        <trans-unit id="2c3ffdb1abb5aafa99ed88d09e01065a059a00a9" translate="yes" xml:space="preserve">
          <source>On Component Destroy</source>
          <target state="translated">Уничтожение компонентов</target>
        </trans-unit>
        <trans-unit id="7871fb44d093405668420a934d855c398825b852" translate="yes" xml:space="preserve">
          <source>On Initial Render</source>
          <target state="translated">На первоначального арендатора</target>
        </trans-unit>
        <trans-unit id="3b81a353de54248fb63ae86d5a82b1a0e405029d" translate="yes" xml:space="preserve">
          <source>On Mac and Linux, you can improve file watching performance by installing &lt;a href=&quot;https://facebook.github.io/watchman/docs/install.html&quot;&gt;Watchman&lt;/a&gt;.</source>
          <target state="translated">На Mac и Linux вы можете улучшить производительность просмотра файлов, установив &lt;a href=&quot;https://facebook.github.io/watchman/docs/install.html&quot;&gt;Watchman&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58e13e632d3a342d5053b03478a93981c741b85e" translate="yes" xml:space="preserve">
          <source>On Re-Render</source>
          <target state="translated">На перепродаже</target>
        </trans-unit>
        <trans-unit id="79702120c7c021f8b09ee1afda618cd0df787a69" translate="yes" xml:space="preserve">
          <source>On a belongsTo relationship:</source>
          <target state="translated">В отношениях,которые принадлежат друг другу:</target>
        </trans-unit>
        <trans-unit id="eb43fdb147dc2a32fcd7a2f1655715ba70c1d257" translate="yes" xml:space="preserve">
          <source>On a class-based helper, it may be useful to force a recomputation of that helpers value. This is akin to &lt;code&gt;rerender&lt;/code&gt; on a component.</source>
          <target state="translated">В помощнике на основе классов может быть полезно принудительно пересчитать значение этого помощника. Это похоже на &lt;code&gt;rerender&lt;/code&gt; компонента.</target>
        </trans-unit>
        <trans-unit id="6861bce269e523e12d7da65c6da77edffe736f32" translate="yes" xml:space="preserve">
          <source>On all newer browsers, you only need to use this method to retrieve properties if the property might not be defined on the object and you want to respect the &lt;code&gt;unknownProperty&lt;/code&gt; handler. Otherwise you can ignore this method.</source>
          <target state="translated">Во всех новых браузерах вам нужно использовать этот метод для получения свойств только в том случае, если свойство не может быть определено для объекта и вы хотите уважать обработчик &lt;code&gt;unknownProperty&lt;/code&gt; . В противном случае вы можете проигнорировать этот метод.</target>
        </trans-unit>
        <trans-unit id="aeba23ad12f082d9bc5f8ea964d08e7ff1c2466b" translate="yes" xml:space="preserve">
          <source>On an Apache server, the rewrite engine (mod-rewrite) must be enabled in order for Ember routing to work properly. If you upload your dist folder, going to your main URL works, but when you try to go to a route such as '{main URL}/example' and it returns 404, your server has not been configured for &quot;friendly&quot; URLs.</source>
          <target state="translated">На сервере Apache должен быть включен механизм перезаписи (mod-rewrite),чтобы Ember-маршрутизация работала корректно.Если вы загружаете свою дистрибутивную папку,переход на основной URL работает,но когда вы пытаетесь перейти на маршрут типа '{main URL}/example' и он возвращает 404,ваш сервер не был сконфигурирован на &quot;дружественные&quot; URL.</target>
        </trans-unit>
        <trans-unit id="a9188633f146f1828663d4971118211e9bc5e119" translate="yes" xml:space="preserve">
          <source>On each call to the &lt;code&gt;normalize&lt;/code&gt; method, the third parameter (&lt;code&gt;prop&lt;/code&gt;) is always one of the keys that were in the original payload or in the result of another normalization as &lt;code&gt;normalizeResponse&lt;/code&gt;.</source>
          <target state="translated">При каждом вызове метода &lt;code&gt;normalize&lt;/code&gt; третий параметр ( &lt;code&gt;prop&lt;/code&gt; ) всегда является одним из ключей, которые были в исходной полезной нагрузке или в результате другой нормализации как &lt;code&gt;normalizeResponse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c9c6f59e26d3f950eadfc25af534272ba19cb77" translate="yes" xml:space="preserve">
          <source>On success, the request promise will be resolved with the full response payload.</source>
          <target state="translated">При успешном выполнении запроса обещание будет выполнено с полной ответной грузоподъемностью.</target>
        </trans-unit>
        <trans-unit id="78f324f1e8f3f3b4f5bff5c1b66a78f5e0759ff5" translate="yes" xml:space="preserve">
          <source>On the left side of each Guides page is a table of contents, organized into sections that can be expanded to show the topics they cover. Both the sections and the topics within each section are ordered from basic to advanced concepts.</source>
          <target state="translated">С левой стороны каждой страницы Путеводителя находится оглавление,разбитое на разделы,которые могут быть расширены,чтобы показать темы,которые они охватывают.Как разделы,так и темы внутри каждого раздела упорядочены от базовых до продвинутых концепций.</target>
        </trans-unit>
        <trans-unit id="e32c960456f9b43f9166f605a702a559006007ce" translate="yes" xml:space="preserve">
          <source>Once a factory is registered, it can be &quot;injected&quot; where it is needed.</source>
          <target state="translated">После регистрации завода его можно &quot;впрыскивать&quot; там,где это необходимо.</target>
        </trans-unit>
        <trans-unit id="bdec5004fb5c33e3b2c477c863020702ae402501" translate="yes" xml:space="preserve">
          <source>Once injected into a component, a service can also be used in the template. Note &lt;code&gt;cart&lt;/code&gt; being used below to get data from the cart.</source>
          <target state="translated">После внедрения в компонент сервис также можно использовать в шаблоне. Обратите внимание на то, что &lt;code&gt;cart&lt;/code&gt; используется ниже для получения данных из корзины.</target>
        </trans-unit>
        <trans-unit id="ccee3bf08a6536ea2be6c885ed850fbb3a399af9" translate="yes" xml:space="preserve">
          <source>Once inside the &lt;code&gt;articles&lt;/code&gt; route, any changes to the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt; will cause the URL to update the query param. By default, a query param property change won't cause a full router transition (i.e. it won't call &lt;code&gt;model&lt;/code&gt; hooks and &lt;code&gt;setupController&lt;/code&gt;, etc.); it will only update the URL.</source>
          <target state="translated">Попав внутрь маршрута &lt;code&gt;articles&lt;/code&gt; , любые изменения свойства &lt;code&gt;category&lt;/code&gt; в &lt;code&gt;controller:articles&lt;/code&gt; приведут к обновлению URL-адреса параметра запроса. По умолчанию изменение свойства параметра запроса не приводит к полному переходу маршрутизатора (т. &lt;code&gt;setupController&lt;/code&gt; Не вызывает хуков &lt;code&gt;model&lt;/code&gt; setupController и т. Д.); он только обновит URL.</target>
        </trans-unit>
        <trans-unit id="457d77836a439fdff49c3b23b258781eb29f6526" translate="yes" xml:space="preserve">
          <source>Once installed, go to an Ember application, open the Developer Tools, and click on the &lt;code&gt;Ember&lt;/code&gt; tab at the far right.</source>
          <target state="translated">После установки перейдите в приложение Ember, откройте Инструменты разработчика и щелкните вкладку &lt;code&gt;Ember&lt;/code&gt; справа.</target>
        </trans-unit>
        <trans-unit id="d4986dfc0d963c8eec63b7840ddbc1ff83a864a8" translate="yes" xml:space="preserve">
          <source>Once installed, go to an Ember application, open the Developer Tools, and click on the &lt;code&gt;Ember&lt;/code&gt; tab.</source>
          <target state="translated">После установки перейдите в приложение Ember, откройте Инструменты разработчика и щелкните вкладку &lt;code&gt;Ember&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="164742e39c4ca64cff90a3cf61eb5e20c381b0f7" translate="yes" xml:space="preserve">
          <source>Once installed, the addon works in 3 steps:</source>
          <target state="translated">После установки аддон работает в 3 этапа:</target>
        </trans-unit>
        <trans-unit id="cd5d0a583c546e922e7dd07f13b00126893c9cbb" translate="yes" xml:space="preserve">
          <source>Once loaded, a service will persist until the application exits.</source>
          <target state="translated">После загрузки служба будет продолжать работать до тех пор,пока приложение не выйдет из системы.</target>
        </trans-unit>
        <trans-unit id="9b7473ccb2808c3e1202cafe608e15eb9e87bf60" translate="yes" xml:space="preserve">
          <source>Once open, remove the component labeled &lt;code&gt;{{welcome-page}}&lt;/code&gt;. The application should now be a completely blank canvas to build our application on.</source>
          <target state="translated">После открытия удалите компонент с надписью &lt;code&gt;{{welcome-page}}&lt;/code&gt; . Теперь приложение должно быть полностью пустым холстом для построения нашего приложения.</target>
        </trans-unit>
        <trans-unit id="1eca8732180d60ac42bab4f21f28e52ea9a48daf" translate="yes" xml:space="preserve">
          <source>Once rendered an element's &lt;code&gt;elementId&lt;/code&gt; is considered immutable and you should never change it. If you need to compute a dynamic value for the &lt;code&gt;elementId&lt;/code&gt;, you should do this when the component or element is being instantiated:</source>
          <target state="translated">После визуализации &lt;code&gt;elementId&lt;/code&gt; элемента считается неизменным, и вы никогда не должны его изменять. Если вам нужно вычислить динамическое значение для &lt;code&gt;elementId&lt;/code&gt; , вы должны сделать это при создании экземпляра компонента или элемента:</target>
        </trans-unit>
        <trans-unit id="4267347d40eb36c6cbbed253186fd37bf3007beb" translate="yes" xml:space="preserve">
          <source>Once the beta cycle has completed, the next stable release will include any features that were enabled during the beta cycle. At this point the feature flags will be removed from the canary and future beta branches, and the feature becomes part of the framework.</source>
          <target state="translated">После завершения бета-цикла следующий стабильный выпуск будет включать в себя все функции,которые были включены во время бета-цикла.На этом этапе флаги функций будут удалены с канарейки и будущих ветвей бета-версии,и функция станет частью фреймворка.</target>
        </trans-unit>
        <trans-unit id="56051bb2517e89df5d91846d46bbeb555a7edbb5" translate="yes" xml:space="preserve">
          <source>Once the main transition into &lt;code&gt;slow-model&lt;/code&gt; completes, the &lt;code&gt;loading&lt;/code&gt; route will be exited and the transition to &lt;code&gt;slow-model&lt;/code&gt; will continue.</source>
          <target state="translated">После завершения основного перехода к &lt;code&gt;slow-model&lt;/code&gt; маршрут &lt;code&gt;loading&lt;/code&gt; будет завершен, и переход к &lt;code&gt;slow-model&lt;/code&gt; продолжится.</target>
        </trans-unit>
        <trans-unit id="d59a62a3f97ccc2bfdeef6fc089edaeadc6ceb33" translate="yes" xml:space="preserve">
          <source>Once the proxied promise has settled this will become &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Как только проксируемое обещание будет выполнено, оно станет &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4398fd5039ae29bd335437e10b017a202f1021a5" translate="yes" xml:space="preserve">
          <source>Once the proxied promise has settled this will become &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Как только проксируемое обещание будет выполнено, это станет &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4688c68d00bda5e6b4d6f0282ecb2274e65f3aa4" translate="yes" xml:space="preserve">
          <source>Once the request to the server returns with a JSON payload for the requested record, the adapter resolves the promise it returned to the store with the JSON.</source>
          <target state="translated">Как только запрос к серверу возвращается с грузом JSON для запрашиваемой записи,адаптер разрешает обещание,которое он возвращает в магазин с помощью JSON.</target>
        </trans-unit>
        <trans-unit id="a7341d0efec76622cf31b57420e0efd9cc42ff86" translate="yes" xml:space="preserve">
          <source>Once the stub service is registered the test simply needs to check that the stub data that is being returned from the service is reflected in the component output.</source>
          <target state="translated">После регистрации службы заглушки тест должен просто проверить,что возвращаемые данные заглушки отражаются на компонентном выходе.</target>
        </trans-unit>
        <trans-unit id="6f0dda9c0cb3a268c5b42422c783a5ad7cd0e1d9" translate="yes" xml:space="preserve">
          <source>Once we create this &quot;button with confirmation&quot; component, we want to be able to reuse it all over our application.</source>
          <target state="translated">Как только мы создадим этот компонент &quot;кнопка с подтверждением&quot;,мы хотим иметь возможность повторно использовать его во всем нашем приложении.</target>
        </trans-unit>
        <trans-unit id="9fbeae9a67f6bd9c4e25f14b9f726db44131dc7a" translate="yes" xml:space="preserve">
          <source>Once we have a new project in place, we can confirm everything is working by starting the Ember development server:</source>
          <target state="translated">Как только у нас будет новый проект,мы сможем подтвердить,что все работает,запустив сервер разработки Ember:</target>
        </trans-unit>
        <trans-unit id="23b19ac1ee33b1618505282400756773afbf338c" translate="yes" xml:space="preserve">
          <source>Once yielded, the data can be accessed by the wrapped content by referencing the &lt;code&gt;post&lt;/code&gt; variable. Now a component called &lt;code&gt;markdown-style&lt;/code&gt; will be rendered in &lt;code&gt;{{post.body}}&lt;/code&gt;.</source>
          <target state="translated">После получения данные могут быть доступны для обернутого содержимого путем ссылки на переменную &lt;code&gt;post&lt;/code&gt; . Теперь компонент с названием &lt;code&gt;markdown-style&lt;/code&gt; будет отображаться в &lt;code&gt;{{post.body}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be2dc254dc6c7464981de655c454c5b817215603" translate="yes" xml:space="preserve">
          <source>Once you call this method, any time the key's value is set, your observer will be notified. Note that the observers are triggered any time the value is set, regardless of whether it has actually changed. Your observer should be prepared to handle that.</source>
          <target state="translated">После вызова этого метода,в любое время,когда значение ключа будет установлено,ваш наблюдатель будет уведомлен.Обратите внимание,что наблюдатели будут срабатывать в любое время при установке значения,независимо от того,изменилось ли оно на самом деле.Ваш наблюдатель должен быть готов к этому.</target>
        </trans-unit>
        <trans-unit id="0e423cbca6b9df549f466352ce6ab4bd43120115" translate="yes" xml:space="preserve">
          <source>Once you have an understanding of Ember Data, you will have a much better way to manage the complexity of data loading in your application. This will allow your code to evolve without becoming a mess.</source>
          <target state="translated">Как только вы разберетесь в Ember Data,у вас появится гораздо лучший способ управления сложностью загрузки данных в вашем приложении.Это позволит вашему коду развиваться,не превращаясь в беспорядок.</target>
        </trans-unit>
        <trans-unit id="e7879c2db8a502cf08ab955e6b7189ce9ea7ec40" translate="yes" xml:space="preserve">
          <source>Once you have built your &lt;code&gt;deprecation-workflow.js&lt;/code&gt; file and your deprecations are silenced, you can begin to work on deprecations one by one at your own leisure. To find deprecations, you can change the handler value of that message to either &lt;code&gt;throw&lt;/code&gt; or &lt;code&gt;log&lt;/code&gt;. Throw will throw an actual exception when the deprecation is encountered, so that tests that use the deprecated feature will fail. Choosing to log will simply log a warning to the console as before. These settings give you some flexibility on how you want to go about fixing the deprecations.</source>
          <target state="translated">После того, как вы создали файл &lt;code&gt;deprecation-workflow.js&lt;/code&gt; и прекратили использование устаревших функций, вы можете приступить к работе с устаревшими версиями одну за другой в удобное для вас время. Чтобы найти устаревшие, вы можете изменить значение обработчика этого сообщения на &lt;code&gt;throw&lt;/code&gt; или &lt;code&gt;log&lt;/code&gt; . Throw вызовет фактическое исключение при обнаружении устаревания, поэтому тесты, использующие устаревшую функцию, завершатся ошибкой. При выборе журнала просто выводится предупреждение на консоль, как и раньше. Эти настройки дают вам некоторую гибкость в том, как вы хотите исправить устаревшие версии.</target>
        </trans-unit>
        <trans-unit id="297de7e31394aa2c72d2a09e3d3842f25dc27bdc" translate="yes" xml:space="preserve">
          <source>Once you have defined a class, you can create new &lt;em&gt;instances&lt;/em&gt; of that class by calling its &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt; method. Any methods, properties and computed properties you defined on the class will be available to instances:</source>
          <target state="translated">После того, как вы определили класс, вы можете создавать новые &lt;em&gt;экземпляры&lt;/em&gt; этого класса, вызывая его метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt; . Любые методы, свойства и вычисленные свойства, определенные вами для класса, будут доступны экземплярам:</target>
        </trans-unit>
        <trans-unit id="0ae78f9453ab89e2b98b40a513549fd747f33aca" translate="yes" xml:space="preserve">
          <source>Once you have defined a route with a dynamic segment, Ember will extract the value of the dynamic segment from the URL for you and pass them as a hash to the &lt;code&gt;model&lt;/code&gt; hook as the first argument:</source>
          <target state="translated">После того, как вы определили маршрут с динамическим сегментом, Ember извлечет значение динамического сегмента из URL-адреса для вас и передаст их в качестве хеша в ловушку &lt;code&gt;model&lt;/code&gt; в качестве первого аргумента:</target>
        </trans-unit>
        <trans-unit id="37dc9e0949005db31c3bef8749a046174ea22093" translate="yes" xml:space="preserve">
          <source>Once you have these two methods implemented, apply the &lt;code&gt;Ember.Enumerable&lt;/code&gt; mixin to your class and you will be able to enumerate the contents of your object like any other collection.</source>
          <target state="translated">После реализации этих двух методов примените &lt;code&gt;Ember.Enumerable&lt;/code&gt; к своему классу, и вы сможете перечислять содержимое своего объекта, как и любую другую коллекцию.</target>
        </trans-unit>
        <trans-unit id="d318d88b083e6a740e5695fcce549c330e442a4c" translate="yes" xml:space="preserve">
          <source>Once you've installed Ember CLI via npm, you will have access to a new &lt;code&gt;ember&lt;/code&gt; command in your terminal. You can use the &lt;code&gt;ember new&lt;/code&gt; command to create a new application.</source>
          <target state="translated">После того, как вы установили Ember CLI через npm, у вас будет доступ к новой команде &lt;code&gt;ember&lt;/code&gt; в вашем терминале. Вы можете использовать команду &lt;code&gt;ember new&lt;/code&gt; для создания нового приложения.</target>
        </trans-unit>
        <trans-unit id="fae22ba23783545c09734f8348d02996c94f94d2" translate="yes" xml:space="preserve">
          <source>Once you've loaded your models from storage, components know how to translate model data into a UI that your user can interact with. For more information about how components get model data, see the &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model&quot;&gt;Specifying a Route's Model&lt;/a&gt; guide.</source>
          <target state="translated">После того, как вы загрузили свои модели из хранилища, компоненты знают, как преобразовать данные модели в пользовательский интерфейс, с которым ваш пользователь может взаимодействовать. Дополнительные сведения о том, как компоненты получают данные модели, см. В руководстве &amp;laquo; &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model&quot;&gt;Указание модели маршрута&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="946fb83a5b5f0d85f4cd4d0947e1d59cebfd37a1" translate="yes" xml:space="preserve">
          <source>Once you've removed deprecations that you may not need to immediately address, you may still be left with many deprecations. Also, your remaining deprecations may only occur in very specific scenarios that are not obvious. How then should you go about finding and fixing these? This is where the &lt;a href=&quot;http://emberobserver.com/addons/ember-cli-deprecation-workflow&quot;&gt;ember-cli-deprecation-workflow&lt;/a&gt; addon can be extremely helpful.</source>
          <target state="translated">После того, как вы удалили устаревшие версии, которые, возможно, вам не нужно немедленно устранять, у вас все равно может остаться много устаревших. Кроме того, оставшиеся прекращения поддержки могут произойти только в очень конкретных сценариях, которые не очевидны. Как же тогда вы должны искать и исправлять их? Здесь может оказаться чрезвычайно полезным аддон &lt;a href=&quot;http://emberobserver.com/addons/ember-cli-deprecation-workflow&quot;&gt;ember-cli-deprecation-workflow&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d393feab7e66d7efa30902c007f830f56512202" translate="yes" xml:space="preserve">
          <source>One benefit of the above approach compared to using &lt;code&gt;run.next&lt;/code&gt; is that you will be able to perform DOM/CSS operations before unprocessed elements are rendered to the screen, which may prevent flickering or other artifacts caused by delaying processing until after rendering.</source>
          <target state="translated">Одно из преимуществ вышеуказанного подхода по сравнению с использованием &lt;code&gt;run.next&lt;/code&gt; заключается в том, что вы сможете выполнять операции DOM / CSS до того, как необработанные элементы будут отображаться на экране, что может предотвратить мерцание или другие артефакты, вызванные задержкой обработки до окончания визуализации.</target>
        </trans-unit>
        <trans-unit id="2017e7fd0f2a575b1a1bb39b33094a703f7dc923" translate="yes" xml:space="preserve">
          <source>One common example is when overriding the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt;&lt;code&gt;normalizeResponse()&lt;/code&gt;&lt;/a&gt; hook in one of Ember-Data's serializers.</source>
          <target state="translated">Один из распространенных примеров - переопределение ловушки &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt; &lt;code&gt;normalizeResponse()&lt;/code&gt; &lt;/a&gt; в одном из сериализаторов Ember-Data.</target>
        </trans-unit>
        <trans-unit id="ef72e13fa9c7abd23262b84daf45e66eae37d8b2" translate="yes" xml:space="preserve">
          <source>One common way of building web applications is to tightly couple user interface elements to data fetching. For example, imagine you are writing the admin section of a blogging app, which has a feature that lists the drafts for the currently logged in user.</source>
          <target state="translated">Одним из распространенных способов создания веб-приложений является плотное сочетание элементов пользовательского интерфейса для получения данных.Например,представьте,что вы пишете администраторский раздел блогового приложения,в котором есть функция,которая перечисляет черновики для текущего пользователя,вошедшего в систему.</target>
        </trans-unit>
        <trans-unit id="1fd57542548476a402566a40e7028672d63f27fb" translate="yes" xml:space="preserve">
          <source>One detail to keep in mind is that both branches of the &lt;code&gt;if&lt;/code&gt; helper will be evaluated, so if you have &lt;code&gt;{{if condition &quot;foo&quot; (expensive-operation &quot;bar&quot;)&lt;/code&gt;, &lt;code&gt;expensive-operation&lt;/code&gt; will always calculate.</source>
          <target state="translated">Следует иметь в виду одну деталь: будут оцениваться обе ветви вспомогательной функции &lt;code&gt;if&lt;/code&gt; , поэтому, если у вас есть &lt;code&gt;{{if condition &quot;foo&quot; (expensive-operation &quot;bar&quot;)&lt;/code&gt; , то &lt;code&gt;expensive-operation&lt;/code&gt; всегда будет вычисляться.</target>
        </trans-unit>
        <trans-unit id="921f9a649da7d3ee552d9bb46da95892c7504e20" translate="yes" xml:space="preserve">
          <source>One downside to returning a cached record is you may find the state of the data has changed since it was first loaded into the store's identity map. In order to prevent this stale data from being a problem for long, Ember Data will automatically make a request in the background each time a cached record is returned from the store. When the new data comes in, the record is updated, and if there have been changes to the record since the initial render, the template is re-rendered with the new information.</source>
          <target state="translated">Недостатком возврата кэшированной записи является то,что вы можете обнаружить,что состояние данных изменилось с тех пор,как они были впервые загружены в идентификационную карту магазина.Для того,чтобы эти просроченные данные не были проблемой надолго,Ember Data будет автоматически делать запрос в фоновом режиме каждый раз,когда кэшированная запись возвращается из магазина.Когда поступают новые данные,запись обновляется,и если с момента первичного рендеринга в записи произошли изменения,шаблон заново возвращается с новой информацией.</target>
        </trans-unit>
        <trans-unit id="6e6e9d09355e2e6fdfee3fc6889b073f2cc7d11f" translate="yes" xml:space="preserve">
          <source>One job of a route handler is rendering the appropriate template to the screen.</source>
          <target state="translated">Одной из задач обработчика маршрута является отрисовка соответствующего шаблона на экране.</target>
        </trans-unit>
        <trans-unit id="023b2e22d9619644336d8abd002c12ec4e3957f7" translate="yes" xml:space="preserve">
          <source>One nice thing about this model is that if you try to set a value to the same thing as last time, Ember (through HTMLBars) will avoid doing any work on the DOM.</source>
          <target state="translated">Одна приятная вещь в этой модели заключается в том,что если вы попробуете установить значение в то же самое,что и в прошлый раз,Ember (через HTMLBars)избежит выполнения каких-либо работ на DOM.</target>
        </trans-unit>
        <trans-unit id="2c25bd1df98cee9098780b27f236f384e2f2dd2d" translate="yes" xml:space="preserve">
          <source>One of the major issues in testing web applications is that all code is event-driven and therefore has the potential to be asynchronous (i.e. output can happen out of sequence from input). This has the ramification that code can be executed in any order.</source>
          <target state="translated">Одной из основных проблем при тестировании веб-приложений является то,что весь код управляется событиями и поэтому может быть асинхронным (т.е.выход может происходить не по порядку с входа).Это приводит к тому,что код может быть выполнен в любом порядке.</target>
        </trans-unit>
        <trans-unit id="f22cb0dab0dc2d88fe000d648a9d5f8ff6c7e07a" translate="yes" xml:space="preserve">
          <source>One of the methods is &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt;&lt;code&gt;transitionTo()&lt;/code&gt;&lt;/a&gt;. Calling &lt;code&gt;transitionTo()&lt;/code&gt; from a route or &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Controller.html#method_transitionToRoute&quot;&gt;&lt;code&gt;transitionToRoute()&lt;/code&gt;&lt;/a&gt; from a controller will stop any transitions currently in progress and start a new one, functioning as a redirect. &lt;code&gt;transitionTo()&lt;/code&gt; behaves exactly like the &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;link-to&lt;/a&gt; helper.</source>
          <target state="translated">Один из методов - &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt; &lt;code&gt;transitionTo()&lt;/code&gt; &lt;/a&gt; . Вызов &lt;code&gt;transitionTo()&lt;/code&gt; из маршрута или &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Controller.html#method_transitionToRoute&quot;&gt; &lt;code&gt;transitionToRoute()&lt;/code&gt; &lt;/a&gt; из контроллера остановит любые текущие переходы и запустит новый, функционируя как перенаправление. &lt;code&gt;transitionTo()&lt;/code&gt; ведет себя точно так же, как помощник по &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;ссылке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d247fef3beb6617e410a9310b1691023a273f3f" translate="yes" xml:space="preserve">
          <source>One of the responsibilities of a route is to load a model.</source>
          <target state="translated">Одной из обязанностей маршрута является загрузка модели.</target>
        </trans-unit>
        <trans-unit id="bc339cc993a1d0dfdea6070d19f55e3e10babcc4" translate="yes" xml:space="preserve">
          <source>One or more Mixin classes</source>
          <target state="translated">Один или несколько классов Миксин</target>
        </trans-unit>
        <trans-unit id="a4387dcdd8c21d687d201ae902808eab655aaeb6" translate="yes" xml:space="preserve">
          <source>One property can be mapped on to another by placing a &quot;:&quot; between the source property and the destination property:</source>
          <target state="translated">Одно свойство может быть сопоставлено с другим путем размещения &quot;:&quot; между свойством источника и свойством назначения:</target>
        </trans-unit>
        <trans-unit id="ddd8ba8819277c241acfb17d9b513165c7a86664" translate="yes" xml:space="preserve">
          <source>One scenario would be to camelCase the meta keys of your payload. The example below shows how this could be done using &lt;code&gt;normalizeArrayResponse&lt;/code&gt; and &lt;code&gt;extractRelationship&lt;/code&gt;.</source>
          <target state="translated">Один из сценариев - использовать camelCase для мета-ключей вашей полезной нагрузки. В приведенном ниже примере показано, как это можно сделать с помощью &lt;code&gt;normalizeArrayResponse&lt;/code&gt; и &lt;code&gt;extractRelationship&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa8da0e5204ecf2e3129f7e87c21cf719d86102c" translate="yes" xml:space="preserve">
          <source>One way to think about the store is as a cache of all of the records that have been loaded by your application. If a route or a controller in your app asks for a record, the store can return it immediately if it is in the cache. Otherwise, the store must ask the adapter to load it, which usually means a trip over the network to retrieve it from the server.</source>
          <target state="translated">Один из способов подумать о магазине-это кэш всех записей,которые были загружены вашим приложением.Если маршрут или контроллер в вашем приложении запрашивает запись,магазин может вернуть ее немедленно,если она находится в кэше.В противном случае магазин должен попросить адаптер загрузить его,что обычно означает путешествие по сети для получения его с сервера.</target>
        </trans-unit>
        <trans-unit id="206de582d9e42728271567f32cef1d2caa66c410" translate="yes" xml:space="preserve">
          <source>One-To-Many</source>
          <target state="translated">One-To-Many</target>
        </trans-unit>
        <trans-unit id="72ed6317b3c29cc659bd9726d64c0704e0a987b4" translate="yes" xml:space="preserve">
          <source>One-To-One</source>
          <target state="translated">One-To-One</target>
        </trans-unit>
        <trans-unit id="e8edf93e5fc748fcefb10c45b67f1fe2105f8341" translate="yes" xml:space="preserve">
          <source>One-Way Bindings</source>
          <target state="translated">Односторонние переплёты</target>
        </trans-unit>
        <trans-unit id="a888cbb9d1975f7a372576caffb7acdfc8b16b4f" translate="yes" xml:space="preserve">
          <source>One-to-Many</source>
          <target state="translated">One-to-Many</target>
        </trans-unit>
        <trans-unit id="a2cab38603c3673e0e2b0a47873e43f0dbfdffa8" translate="yes" xml:space="preserve">
          <source>One-to-One</source>
          <target state="translated">One-to-One</target>
        </trans-unit>
        <trans-unit id="f2b45396a05b9e6a742a38dba57faf9bcaacbc0e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4200&quot;&gt;&lt;code&gt;http://localhost:4200&lt;/code&gt;&lt;/a&gt; in your browser of choice. You should see an Ember welcome page and not much else. Congratulations! You just created and booted your first Ember app.</source>
          <target state="translated">Откройте &lt;a href=&quot;http://localhost:4200&quot;&gt; &lt;code&gt;http://localhost:4200&lt;/code&gt; &lt;/a&gt; в любом браузере. Вы должны увидеть приветственную страницу Ember и ничего больше. Поздравляем! Вы только что создали и загрузили свое первое приложение Ember.</target>
        </trans-unit>
        <trans-unit id="2f97601478ddfa30694a21e0aee77ce407626778" translate="yes" xml:space="preserve">
          <source>Open our existing acceptance test, &lt;code&gt;tests/acceptance/list-rentals-test.js&lt;/code&gt;, and implement the test labeled &quot;should filter the list of rentals by city&quot;.</source>
          <target state="translated">Откройте существующий приемочный тест &lt;code&gt;tests/acceptance/list-rentals-test.js&lt;/code&gt; и выполните тест с пометкой &amp;laquo;следует отфильтровать список аренды по городу&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="0cc801dfb3bc3822b07222ee8a7d8dcfc04c59ec" translate="yes" xml:space="preserve">
          <source>Open the newly-created template in &lt;code&gt;app/templates/scientists.hbs&lt;/code&gt; and add the following HTML:</source>
          <target state="translated">Откройте только что созданный шаблон в &lt;code&gt;app/templates/scientists.hbs&lt;/code&gt; и добавьте следующий HTML-код:</target>
        </trans-unit>
        <trans-unit id="bd792fbd2875bdf3718df2a36075e5b668af82a7" translate="yes" xml:space="preserve">
          <source>Opening an issue or pull request to &lt;a href=&quot;https://github.com/emberjs/guides/&quot;&gt;the GitHub repository&lt;/a&gt;</source>
          <target state="translated">Открытие вопроса или запроса &lt;a href=&quot;https://github.com/emberjs/guides/&quot;&gt;на перенос в репозиторий GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1dd165afc95895bd90768a2a8a39ca08acf8783" translate="yes" xml:space="preserve">
          <source>Opening that file will reveal some initial code that will try to go to the &lt;code&gt;list-rentals&lt;/code&gt; route and verify that the route is loaded. The initial code is there to help us build our first acceptance test.</source>
          <target state="translated">Открытие этого файла покажет некоторый начальный код, который попытается перейти к маршруту &lt;code&gt;list-rentals&lt;/code&gt; и проверить, что маршрут загружен. Исходный код нужен, чтобы помочь нам построить наш первый приемочный тест.</target>
        </trans-unit>
        <trans-unit id="68394f0bdcf1b11a4905c9738f7ac23b35d3aca2" translate="yes" xml:space="preserve">
          <source>Opening the template for this route reveals an outlet underneath the route's general page information. At the bottom of the template, you'll notice an &lt;code&gt;{{outlet}}&lt;/code&gt; helper. This is where the active nested route will be rendered.</source>
          <target state="translated">При открытии шаблона для этого маршрута под общей информацией о маршруте отображается выход. Внизу шаблона вы увидите помощника &lt;code&gt;{{outlet}}&lt;/code&gt; . Здесь будет отображаться активный вложенный маршрут.</target>
        </trans-unit>
        <trans-unit id="84c592e4f2dcd576f7dfcf84d3f2fab2e7d1c377" translate="yes" xml:space="preserve">
          <source>Operations performed in initializers should be kept as lightweight as possible to minimize delays in loading your application. Although advanced techniques exist for allowing asynchrony in application initializers (i.e. &lt;code&gt;deferReadiness&lt;/code&gt; and &lt;code&gt;advanceReadiness&lt;/code&gt;), these techniques should generally be avoided. Any asynchronous loading conditions (e.g. user authorization) are almost always better handled in your application route's hooks, which allows for DOM interaction while waiting for conditions to resolve.</source>
          <target state="translated">Операции, выполняемые в инициализаторах, должны быть как можно более легкими, чтобы минимизировать задержки при загрузке вашего приложения. Хотя существуют продвинутые методы, позволяющие асинхронность в инициализаторах приложений (например, &lt;code&gt;deferReadiness&lt;/code&gt; и &lt;code&gt;advanceReadiness&lt;/code&gt; ), обычно следует избегать этих методов. Любые асинхронные условия загрузки (например, авторизация пользователя) почти всегда лучше обрабатываются в хуках маршрута вашего приложения, что позволяет взаимодействовать с DOM в ожидании разрешения условий.</target>
        </trans-unit>
        <trans-unit id="245a923eb00420b9baa12f359835e88308f803dd" translate="yes" xml:space="preserve">
          <source>Opting into a full transition</source>
          <target state="translated">Выбор в пользу полного перехода</target>
        </trans-unit>
        <trans-unit id="66b8b140d34ca56fe840cbf56dad53e263eb6056" translate="yes" xml:space="preserve">
          <source>Optional arguments to be passed to the queued method.</source>
          <target state="translated">Необязательные аргументы,передаваемые в метод постановки в очередь.</target>
        </trans-unit>
        <trans-unit id="7174acae61247527fa92ec0872c03eec9cf98de5" translate="yes" xml:space="preserve">
          <source>Optional arguments to pass on</source>
          <target state="translated">Необязательные аргументы для передачи</target>
        </trans-unit>
        <trans-unit id="f4fa0c5292f62f88297e792835dcb8ffe325cd65" translate="yes" xml:space="preserve">
          <source>Optional arguments to pass to the timeout.</source>
          <target state="translated">Необязательные аргументы для перехода к таймауту.</target>
        </trans-unit>
        <trans-unit id="a00dbf5de4ed7db7948c3423669d8aeb01e9edd2" translate="yes" xml:space="preserve">
          <source>Optional array of actions (listeners).</source>
          <target state="translated">Необязательный набор действий (слушателей).</target>
        </trans-unit>
        <trans-unit id="a7f4c5eb44535d1e4f3e27873e7fffaf8af0087e" translate="yes" xml:space="preserve">
          <source>Optional array of parameters to interpolate into string.</source>
          <target state="translated">Дополнительный массив параметров для интерполяции в строку.</target>
        </trans-unit>
        <trans-unit id="6c4f35334f92330cec8db7b3c2ec6ce4d524729c" translate="yes" xml:space="preserve">
          <source>Optional hash of configuration options including `willChange` and `didChange` option.</source>
          <target state="translated">Дополнительный хэш конфигурационных опций,включая опции `willChange` и `didChange`.</target>
        </trans-unit>
        <trans-unit id="2f6b7a5c6a5652ddfb412d45674a61749417b985" translate="yes" xml:space="preserve">
          <source>Optional meta to lookup listeners</source>
          <target state="translated">Дополнительная мета для поиска слушателей</target>
        </trans-unit>
        <trans-unit id="844e0186eb00638ab699a19704bf6b6030a59426" translate="yes" xml:space="preserve">
          <source>Optional parameters for each listener.</source>
          <target state="translated">Дополнительные параметры для каждого слушателя.</target>
        </trans-unit>
        <trans-unit id="6f066f2da230be0f98eac3487bbb5312285fcf7e" translate="yes" xml:space="preserve">
          <source>Optionally supply a model for the route in question. The model will be serialized into the URL using the &lt;code&gt;serialize&lt;/code&gt; hook of the route:</source>
          <target state="translated">При желании предоставьте модель рассматриваемого маршрута. Модель будет сериализована в URL с помощью хука &lt;code&gt;serialize&lt;/code&gt; маршрута:</target>
        </trans-unit>
        <trans-unit id="4afb26fd74d5f6e8ea7cbf72fa7921df56de5e90" translate="yes" xml:space="preserve">
          <source>Optionally you can pass a type which unload all records for a given type.</source>
          <target state="translated">Опционально можно передать тип,который выгружает все записи для данного типа.</target>
        </trans-unit>
        <trans-unit id="d707d47d0d151fe2e1d8731df65d7ece3ccb76af" translate="yes" xml:space="preserve">
          <source>Optionally, a model type used to determine which serializer will be used</source>
          <target state="translated">Опционально,тип модели,используемый для определения того,какой сериализатор будет использоваться.</target>
        </trans-unit>
        <trans-unit id="136ae3638c2d9288aced04a9905490f376059e3b" translate="yes" xml:space="preserve">
          <source>Optionally, if &lt;code&gt;adapter.shouldBackgroundReloadAll&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, then a background reload is started. Once this resolves, the array with which the promise resolves, is updated automatically so it contains all the records in the store:</source>
          <target state="translated">Необязательно, если &lt;code&gt;adapter.shouldBackgroundReloadAll&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , то фон перезарядка запускается. Как только это разрешится, массив, с которым разрешается обещание, автоматически обновляется, поэтому он содержит все записи в магазине:</target>
        </trans-unit>
        <trans-unit id="f76ca3aa52e342e9e499538412c709f9fc9c6c82" translate="yes" xml:space="preserve">
          <source>Optionally, if &lt;code&gt;adapter.shouldBackgroundReloadRecord&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, then a background reload is started, which updates the records' data, once it is available:</source>
          <target state="translated">Необязательно, если &lt;code&gt;adapter.shouldBackgroundReloadRecord&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , то фон перезарядка запускается, который обновляет данные записей, когда он доступен:</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="056a298f55d85765827346a51abdb7d167ab8056" translate="yes" xml:space="preserve">
          <source>Options for `Ember.deprecate`.</source>
          <target state="translated">Опции для `Ember.deprecate`.</target>
        </trans-unit>
        <trans-unit id="d84522ef4b97044a7b5036fbf48e647677689781" translate="yes" xml:space="preserve">
          <source>Or if you pass it an array with names it returns the parameters as a hash:</source>
          <target state="translated">Или,если вы передаете ему массив с именами,он возвращает параметры в виде хэша:</target>
        </trans-unit>
        <trans-unit id="37cdfe0b0058fe4edf3c475c18fb07ae927c2616" translate="yes" xml:space="preserve">
          <source>Or on a hasMany relationship:</source>
          <target state="translated">Или в отношениях с кем угодно:</target>
        </trans-unit>
        <trans-unit id="64e13784e0e5fc4499c58a28e19a3b279f630bc2" translate="yes" xml:space="preserve">
          <source>Or perhaps you might want to boot two instances of your app on the same page for a split-screen multiplayer experience:</source>
          <target state="translated">Или,возможно,вы захотите загрузить два экземпляра вашего приложения на одной странице для многопользовательского режима с раздельным экраном:</target>
        </trans-unit>
        <trans-unit id="50016e626900570663ecf9226b2c2f188c840413" translate="yes" xml:space="preserve">
          <source>Or, assign an action to an inline event handler in the template (which creates a closure action and does receive the event object as an argument).</source>
          <target state="translated">Или назначить действие обработчику события в шаблоне (который создает закрывающее действие и получает объект события в качестве аргумента).</target>
        </trans-unit>
        <trans-unit id="a4cc74f7b298a6159af4768c4304193189c80184" translate="yes" xml:space="preserve">
          <source>Order of Lifecycle Hooks Called</source>
          <target state="translated">Орден крючков жизненного цикла вызвал</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="f6011263f2c8df7e6d5838c01886ff0ab127d426" translate="yes" xml:space="preserve">
          <source>Organize records into groups, each of which is to be passed to separate calls to &lt;code&gt;findMany&lt;/code&gt;.</source>
          <target state="translated">Организуйте записи в группы, каждую из которых нужно передать отдельным вызовам &lt;code&gt;findMany&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c2df0e1900518adaa51b92719f7b922310675ba" translate="yes" xml:space="preserve">
          <source>Other Assets</source>
          <target state="translated">Прочие активы</target>
        </trans-unit>
        <trans-unit id="d3a5d50dac3d2fd3be1db7f31ed808c7f8a1ff9f" translate="yes" xml:space="preserve">
          <source>Other assets</source>
          <target state="translated">Прочие активы</target>
        </trans-unit>
        <trans-unit id="05b2c2f5c7ef214490e816d188da36da6aead3a8" translate="yes" xml:space="preserve">
          <source>Other than these two restrictions, Ember Data's normalized JSON object follows the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; specification.</source>
          <target state="translated">Помимо этих двух ограничений, нормализованный объект JSON Ember Data соответствует спецификации &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a59ae439add2f420237329f253278208031489d" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;filterByCity&lt;/code&gt; function is going to pretend to be the action function for our component, that does the actual filtering of the rental list.</source>
          <target state="translated">Наша функция &lt;code&gt;filterByCity&lt;/code&gt; будет притворяться функцией действия для нашего компонента, которая выполняет фактическую фильтрацию списка аренды.</target>
        </trans-unit>
        <trans-unit id="1d2352d7289d1df632f9cdd6e7d02d2ec6a168ab" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;rentals&lt;/code&gt; route is going to serve multiple functions. From our &lt;a href=&quot;../acceptance-test&quot;&gt;acceptance tests&lt;/a&gt;, we've shown that we want our users to be able to browse and search rentals, as well as see detailed information for individual rentals. To satisfy that requirement, we are going to make use of Ember's &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_nested-routes&quot;&gt;nested route capability&lt;/a&gt;.</source>
          <target state="translated">Наш маршрут &lt;code&gt;rentals&lt;/code&gt; будет выполнять несколько функций. Проведя &lt;a href=&quot;../acceptance-test&quot;&gt;приемочные испытания&lt;/a&gt; , мы показали, что хотим, чтобы наши пользователи могли просматривать и искать арендуемые объекты, а также видеть подробную информацию по отдельным объектам аренды. Чтобы удовлетворить это требование, мы собираемся использовать возможность &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_nested-routes&quot;&gt;вложенного маршрута&lt;/a&gt; Ember .</target>
        </trans-unit>
        <trans-unit id="ceabe1dbf5cc8df0bb7eda712f95c063f04ae06b" translate="yes" xml:space="preserve">
          <source>Our app needs a single function, &lt;code&gt;createMap&lt;/code&gt;, which makes use of &lt;code&gt;google.maps.Map&lt;/code&gt; to create our map element, &lt;code&gt;google.maps.Geocoder&lt;/code&gt; to lookup the coordinates of our location, and &lt;code&gt;google.maps.Marker&lt;/code&gt; to pin our map based on the resolved location.</source>
          <target state="translated">Нашему приложению нужна единственная функция &lt;code&gt;createMap&lt;/code&gt; , которая использует &lt;code&gt;google.maps.Map&lt;/code&gt; для создания элемента карты, &lt;code&gt;google.maps.Geocoder&lt;/code&gt; для поиска координат нашего местоположения и &lt;code&gt;google.maps.Marker&lt;/code&gt; для закрепления нашей карты на основе решенное местоположение.</target>
        </trans-unit>
        <trans-unit id="e07b0dd7549ed8c27ea39867fe2f2d1988667c3e" translate="yes" xml:space="preserve">
          <source>Our app should behave now as before, with the addition of an image for each rental item.</source>
          <target state="translated">Наше приложение должно вести себя сейчас,как раньше,с добавлением изображения для каждого предмета проката.</target>
        </trans-unit>
        <trans-unit id="6a20c7d31e256f685e6854e8af9656af5d1a7698" translate="yes" xml:space="preserve">
          <source>Our component integration test will test two different behaviors:</source>
          <target state="translated">Наш тест на интеграцию компонентов проверит два различных поведения:</target>
        </trans-unit>
        <trans-unit id="cae96a04e9b7056dc33933f973849aed2afc24ae" translate="yes" xml:space="preserve">
          <source>Our goal is to help you avoid that mess and come up to speed as fast as possible; you can consider us your internet friend.</source>
          <target state="translated">Наша цель состоит в том,чтобы помочь вам избежать этого беспорядка и прийти к скорости как можно быстрее;вы можете считать нас вашим интернет-другом.</target>
        </trans-unit>
        <trans-unit id="939816c45abd273d6565fd8a68842401b6e05c49" translate="yes" xml:space="preserve">
          <source>Our launched Chrome web browser now shows 10 successful tests. If you toggle the box labeled &quot;Hide passed tests&quot;, you should see our successful acceptance test, along with 9 passing ESLint tests. Ember tests each file you create for syntax issues (known as &quot;linting&quot;) using &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt;.</source>
          <target state="translated">Наш запущенный веб-браузер Chrome теперь показывает 10 успешных тестов. Если вы переключите поле с надписью &amp;laquo;Скрыть пройденные тесты&amp;raquo;, вы должны увидеть наш успешный приемочный тест вместе с 9 пройденными тестами ESLint. Ember проверяет каждый созданный вами файл на наличие синтаксических проблем (известных как &amp;laquo;линтинг&amp;raquo;) с помощью &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb08f510a40d4531dddec319cee316e84226d5d3" translate="yes" xml:space="preserve">
          <source>Our list-filter component takes a function as an argument, used to find the list of matching rentals based on the filter string provided by the user. We provide an action function by setting it to the local scope of our test by calling &lt;code&gt;this.on&lt;/code&gt;.</source>
          <target state="translated">Наш компонент фильтра списка принимает в качестве аргумента функцию, используемую для поиска списка подходящих арендованных объектов на основе строки фильтра, предоставленной пользователем. Мы предлагаем функцию действия, установив его в локальной области видимости нашего теста по телефону &lt;code&gt;this.on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b06b1f865cc2e950e72d8ef25f106bf2e0d12435" translate="yes" xml:space="preserve">
          <source>Our new &lt;code&gt;rental-listing&lt;/code&gt; component will manage how a user sees and interacts with a rental. To start, let's move the rental display details for a single rental from the &lt;code&gt;rentals.hbs&lt;/code&gt; template into &lt;code&gt;rental-listing.hbs&lt;/code&gt; and add the image field:</source>
          <target state="translated">Наш новый компонент &lt;code&gt;rental-listing&lt;/code&gt; будет управлять тем, как пользователь видит и взаимодействует с арендой. Для начала переместим информацию об аренде для отдельного &lt;code&gt;rentals.hbs&lt;/code&gt; аренды из шаблона rentals.hbs в &lt;code&gt;rental-listing.hbs&lt;/code&gt; и добавим поле изображения:</target>
        </trans-unit>
        <trans-unit id="29373ffd294040aafa4cf834c59c8d7e6c803a1c" translate="yes" xml:space="preserve">
          <source>Our new helper starts out with some boilerplate code from the generator:</source>
          <target state="translated">Наш новый помощник начинает с некоторого кода шаблона от генератора:</target>
        </trans-unit>
        <trans-unit id="a349524a1f4aadac769db82fd11c98cb24360fc6" translate="yes" xml:space="preserve">
          <source>Our new route is nested within our &lt;code&gt;rentals&lt;/code&gt; route. This tells Ember that it is a sub-route and will be accessed through &lt;code&gt;localhost:4200/rentals/show&lt;/code&gt;.</source>
          <target state="translated">Наш новый маршрут вложен в наш маршрут &lt;code&gt;rentals&lt;/code&gt; . Это сообщает Ember, что это подмаршрут и доступ к нему будет осуществляться через &lt;code&gt;localhost:4200/rentals/show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f76189ba851aa52d8190127cc50d8974b28cd36" translate="yes" xml:space="preserve">
          <source>Our primary focus with mirage will be in the &lt;code&gt;config.js&lt;/code&gt; file, which is where we can define our API endpoints and our data. We will be following the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON-API specification&lt;/a&gt; which requires our data to be formatted a certain way. Let's configure Mirage to send back our rentals that we had defined above by updating &lt;code&gt;mirage/config.js&lt;/code&gt;:</source>
          <target state="translated">В первую очередь мы сосредоточимся на mirage в файле &lt;code&gt;config.js&lt;/code&gt; , где мы можем определить конечные точки API и наши данные. Мы будем следовать &lt;a href=&quot;http://jsonapi.org/&quot;&gt;спецификации JSON-API,&lt;/a&gt; которая требует, чтобы наши данные были отформатированы определенным образом. Давайте настроим Mirage для отправки обратно наших арендных &lt;code&gt;mirage/config.js&lt;/code&gt; которые мы определили выше, обновив mirage / config.js :</target>
        </trans-unit>
        <trans-unit id="1b24e7c85fa3198f703161c3ddef40fe3394011b" translate="yes" xml:space="preserve">
          <source>Our test fills out &quot;Seattle&quot; as the search criteria in the search field, and then sends a &lt;code&gt;keyup&lt;/code&gt; event to the same field with a code of &lt;code&gt;69&lt;/code&gt; (the &lt;code&gt;e&lt;/code&gt; key) to simulate a user typing.</source>
          <target state="translated">Наш тест заполняет &amp;laquo;Сиэтл&amp;raquo; в качестве критерия поиска в поле поиска, а затем отправляет событие &lt;code&gt;keyup&lt;/code&gt; в то же поле с кодом &lt;code&gt;69&lt;/code&gt; ( клавиша &lt;code&gt;e&lt;/code&gt; ), чтобы имитировать ввод текста пользователем.</target>
        </trans-unit>
        <trans-unit id="78d0fbfeeac956fe03189a14212a32e505b7af40" translate="yes" xml:space="preserve">
          <source>Outputting their name and age.</source>
          <target state="translated">Выводим их имя и возраст.</target>
        </trans-unit>
        <trans-unit id="7f785f12de428c659f4e7bcaf5ae3019791cd9ca" translate="yes" xml:space="preserve">
          <source>Outside of class definitions</source>
          <target state="translated">Вне определений класса</target>
        </trans-unit>
        <trans-unit id="6448c99bf69eeb2ba6848557375b741d43c476bb" translate="yes" xml:space="preserve">
          <source>Override this function when writing a class-based helper.</source>
          <target state="translated">Переопределить эту функцию при написании помощника на основе классов.</target>
        </trans-unit>
        <trans-unit id="e7118e866bd2fbc9b87fc7380712b78a5ce41ae2" translate="yes" xml:space="preserve">
          <source>Override this method with your testing framework's false assertion. This function is called whenever an exception occurs causing the testing promise to fail.</source>
          <target state="translated">Отмените этот метод с помощью ложных утверждений вашей тестовой фреймворк.Данная функция вызывается всякий раз,когда возникает исключение,приводящее к обещанию сбой в тестировании.</target>
        </trans-unit>
        <trans-unit id="78724f610daa7d335490afd0afef134897e80478" translate="yes" xml:space="preserve">
          <source>Override this to call your framework's methods that handle async operations.</source>
          <target state="translated">Отмените это,чтобы вызвать методы фреймворка,обрабатывающие асинхронные операции.</target>
        </trans-unit>
        <trans-unit id="6d464e9e96aeb92e00f8be7c60b6ca811e20cee2" translate="yes" xml:space="preserve">
          <source>Override to implement teardown.</source>
          <target state="translated">Обойтись,чтобы внедрить &quot;Слезинку&quot;.</target>
        </trans-unit>
        <trans-unit id="72f33b6fd8ce9f99ebb8295cb19dd840fcca6242" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;RegistryProxy#unregister&lt;/code&gt; in order to clear any cached instances of the unregistered factory.</source>
          <target state="translated">Переопределяет &lt;code&gt;RegistryProxy#unregister&lt;/code&gt; , чтобы очистить все кэшированные экземпляры незарегистрированной фабрики.</target>
        </trans-unit>
        <trans-unit id="e441b8e9bc7405861b187f25fbe7e852d75948a0" translate="yes" xml:space="preserve">
          <source>Overriding Application-wide Defaults</source>
          <target state="translated">Переопределяющие настройки по умолчанию для всего приложения</target>
        </trans-unit>
        <trans-unit id="fff1ab70d9215d47433358aa873ef34fdced6c34" translate="yes" xml:space="preserve">
          <source>Overriding Parent Class Methods</source>
          <target state="translated">Переопределяющий родительский класс Методы</target>
        </trans-unit>
        <trans-unit id="bfaaaf32788c2fd06d3c8e0c98eb03bc280e18a2" translate="yes" xml:space="preserve">
          <source>Overriding attributes</source>
          <target state="translated">Переопределяющие атрибуты</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="9fbe29d4d76ec756421aee06e0f34f17fa488ff3" translate="yes" xml:space="preserve">
          <source>PATCH</source>
          <target state="translated">PATCH</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="8e19661733745ef4b2adef80a34cf5d1556477ae" translate="yes" xml:space="preserve">
          <source>Pagination is a common example of using metadata. Imagine a blog with far more posts than you can display at once. You might query it like so:</source>
          <target state="translated">Пагинация является распространенным примером использования метаданных.Представьте себе блог с гораздо большим количеством постов,чем вы можете отобразить за один раз.Вы можете сделать такой запрос:</target>
        </trans-unit>
        <trans-unit id="53b2b4d9664c2f7ba6c736b20cc936678a185b0b" translate="yes" xml:space="preserve">
          <source>Parent:&lt;a href=&quot;ember&quot;&gt;ember&lt;/a&gt;</source>
          <target state="translated">Parent:&lt;a href=&quot;ember&quot;&gt;ember&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e82d2ab7546c96cb9a5574e03456855e889721d" translate="yes" xml:space="preserve">
          <source>Part of what makes components so useful is that they let you take complete control of a section of the DOM. This allows for direct DOM manipulation, listening and responding to browser events, and using 3rd party JavaScript libraries in your Ember app.</source>
          <target state="translated">Часть того,что делает компоненты настолько полезными,это то,что они позволяют вам полностью контролировать часть флэш-накопителя.Это позволяет напрямую манипулировать DOM,прослушивать и реагировать на события браузера,а также использовать сторонние JavaScript-библиотеки в вашем Ember-приложении.</target>
        </trans-unit>
        <trans-unit id="1fd681d8590147352e763485982ff52042383b47" translate="yes" xml:space="preserve">
          <source>Passing Arguments</source>
          <target state="translated">Передаточные аргументы</target>
        </trans-unit>
        <trans-unit id="1e7148ce0c1621aba30d240c1c19ad8aaf313466" translate="yes" xml:space="preserve">
          <source>Passing Properties to a Component</source>
          <target state="translated">Передача свойств компоненту</target>
        </trans-unit>
        <trans-unit id="d7b6892060d3ef827e6332e1ab8d7813ce2e7481" translate="yes" xml:space="preserve">
          <source>Passing functions with the action helper</source>
          <target state="translated">Передача функций с помощью помощника действия</target>
        </trans-unit>
        <trans-unit id="8b910b718628891639ad10590baddf47ec63bfe2" translate="yes" xml:space="preserve">
          <source>Passing the Action to the Component</source>
          <target state="translated">Передача действия Компоненту</target>
        </trans-unit>
        <trans-unit id="bc9542bcb8c51a85721c7d88e5203af136f9bb1f" translate="yes" xml:space="preserve">
          <source>Path Customization</source>
          <target state="translated">Настройка пути</target>
        </trans-unit>
        <trans-unit id="356cd3bf86420c7cad5947142df308e6e29392c9" translate="yes" xml:space="preserve">
          <source>Pathname customization</source>
          <target state="translated">кастомизация</target>
        </trans-unit>
        <trans-unit id="4d370c50b556b5821596079c3ed48ddf2fbe93ad" translate="yes" xml:space="preserve">
          <source>Pauses the current test - this is useful for debugging while testing or for test-driving. It allows you to inspect the state of your application at any point. Example (The test will pause before clicking the button):</source>
          <target state="translated">Паузы текущего теста-это полезно для отладки во время тестирования или для тест-драйва.Позволяет проверить состояние приложения в любой момент.Пример (тест будет приостановлен перед нажатием кнопки):</target>
        </trans-unit>
        <trans-unit id="4946af784e3408745353f1accc2c18f8c0f6d02d" translate="yes" xml:space="preserve">
          <source>Perform a synchronous transition into another route without attempting to resolve promises, update the URL, or abort any currently active asynchronous transitions (i.e. regular transitions caused by &lt;code&gt;transitionTo&lt;/code&gt; or URL changes).</source>
          <target state="translated">Выполните синхронный переход на другой маршрут, не пытаясь выполнить обещания, обновить URL-адрес или прервать любые активные в данный момент асинхронные переходы (т. Е. Регулярные переходы, вызванные изменениями &lt;code&gt;transitionTo&lt;/code&gt; или URL).</target>
        </trans-unit>
        <trans-unit id="f12c5f85d68b2c1cf86b757e8d7188dc87be03b5" translate="yes" xml:space="preserve">
          <source>Persisting Records</source>
          <target state="translated">Постоянные рекорды</target>
        </trans-unit>
        <trans-unit id="7681a0376373e3089f3cc1d9cb621f731b425cd6" translate="yes" xml:space="preserve">
          <source>Picking different components to render in response to the data allows you to have different template and behavior for each case. The &lt;code&gt;{{component}}&lt;/code&gt; helper is a powerful tool for improving code modularity.</source>
          <target state="translated">Выбор различных компонентов для рендеринга в ответ на данные позволяет использовать разные шаблоны и поведение для каждого случая. &lt;code&gt;{{component}}&lt;/code&gt; помощника является мощным инструментом для улучшения модульности кода.</target>
        </trans-unit>
        <trans-unit id="e1a35f314bf2633bdff792cb61a30fd24db73276" translate="yes" xml:space="preserve">
          <source>Planning Your App</source>
          <target state="translated">Планирование вашего приложения</target>
        </trans-unit>
        <trans-unit id="10ab891c24a563405b3a70b1ca34ebe464adb253" translate="yes" xml:space="preserve">
          <source>Please note: This is not for normal usage, and should be used sparingly.</source>
          <target state="translated">Пожалуйста,обратите внимание:Это не для обычного использования и должно использоваться экономно.</target>
        </trans-unit>
        <trans-unit id="651987c8f13c93d564a719b93607cd420d73a63f" translate="yes" xml:space="preserve">
          <source>Please note: any property changes made during this event will have no effect on object observers.</source>
          <target state="translated">Пожалуйста,обратите внимание:любые изменения,внесенные во время этого мероприятия,не окажут никакого влияния на наблюдателей за объектами.</target>
        </trans-unit>
        <trans-unit id="97a8fb33f7301b7d070bb6b9b6f5697d38d45f2d" translate="yes" xml:space="preserve">
          <source>Pluralization Customization</source>
          <target state="translated">Настройка плюрализма</target>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="989fc91d044783d05d714e433d3e90dca9bdf4da" translate="yes" xml:space="preserve">
          <source>Polymorphism</source>
          <target state="translated">Polymorphism</target>
        </trans-unit>
        <trans-unit id="b60b227dfc72ce2592d5e011bdf46ba68f6f3eeb" translate="yes" xml:space="preserve">
          <source>Polymorphism is a powerful concept which allows a developer to abstract common functionality into a base class. Consider the following example: a user with multiple payment methods. They could have a linked PayPal account, and a couple credit cards on file.</source>
          <target state="translated">Полиморфизм-это мощная концепция,позволяющая разработчику абстрагировать общую функциональность в базовый класс.Рассмотрим следующий пример:пользователь с несколькими способами оплаты.У него может быть связанный аккаунт PayPal и пара кредитных карт в файле.</target>
        </trans-unit>
        <trans-unit id="4cb4bbf7cc3d4bc42049240fc08ab58851cd946a" translate="yes" xml:space="preserve">
          <source>Pop object from array or nil if none are left. Works just like &lt;code&gt;pop()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Извлечь объект из массива или nil, если ничего не осталось. Работает так же, как &lt;code&gt;pop()&lt;/code&gt; но совместим с KVO.</target>
        </trans-unit>
        <trans-unit id="dc996b0d24beeb1d3c79bbc55469c48d769e7cfb" translate="yes" xml:space="preserve">
          <source>Positional Params</source>
          <target state="translated">Позиционные Парамы</target>
        </trans-unit>
        <trans-unit id="f2684504bc0f6384c84c477f8be4a0311c5832d7" translate="yes" xml:space="preserve">
          <source>Preloading</source>
          <target state="translated">Preloading</target>
        </trans-unit>
        <trans-unit id="4b1fb7e1484b0ba94928623eb8f36f404667ac59" translate="yes" xml:space="preserve">
          <source>Preventing Transitions via &lt;code&gt;willTransition&lt;/code&gt;</source>
          <target state="translated">Предотвращение переходов через &lt;code&gt;willTransition&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d802d61c8a7392e75323ae02de35b9864c66709a" translate="yes" xml:space="preserve">
          <source>Preventing and Retrying Transitions</source>
          <target state="translated">Предотвращение и повторные переходы</target>
        </trans-unit>
        <trans-unit id="5013daf65503f91d54eccc1797b76d7e4dcd2880" translate="yes" xml:space="preserve">
          <source>Previously, in the &lt;a href=&quot;../routes-and-templates&quot;&gt;Routes and Templates tutorial&lt;/a&gt;, we set up a &lt;code&gt;rentals&lt;/code&gt; route.</source>
          <target state="translated">Ранее в руководстве по &lt;a href=&quot;../routes-and-templates&quot;&gt;маршрутам и шаблонам&lt;/a&gt; мы настраивали маршрут &lt;code&gt;rentals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9baaec4106faea48eaf7fcd6f074b9e97eaf3ab" translate="yes" xml:space="preserve">
          <source>Process all the jobs sequentially in &lt;code&gt;WORK_QUEUE&lt;/code&gt;</source>
          <target state="translated">Последовательно &lt;code&gt;WORK_QUEUE&lt;/code&gt; все задания в WORK_QUEUE</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="eb5d6e800790dcdd19447fac47669042de50dde8" translate="yes" xml:space="preserve">
          <source>Promise Example;</source>
          <target state="translated">Пример обещания;</target>
        </trans-unit>
        <trans-unit id="7763424e70cdeb92b8efa1ce1e7ab2fb3c67f143" translate="yes" xml:space="preserve">
          <source>Promise States and Filtering</source>
          <target state="translated">Обещайте государствам и фильтрации</target>
        </trans-unit>
        <trans-unit id="5ea8f6f7f55aefad94d6f37edf953a84817d34aa" translate="yes" xml:space="preserve">
          <source>Promise objects represent the eventual result of an asynchronous operation. The primary way of interacting with a promise is through its &lt;code&gt;then&lt;/code&gt; method, which registers callbacks to receive either a promise&amp;rsquo;s eventual value or the reason why the promise cannot be fulfilled.</source>
          <target state="translated">Объекты Promise представляют собой конечный результат асинхронной операции. Основной способ взаимодействия с обещанием - через его метод &lt;code&gt;then&lt;/code&gt; , который регистрирует обратные вызовы для получения либо конечного значения обещания, либо причины, по которой обещание не может быть выполнено.</target>
        </trans-unit>
        <trans-unit id="46847c5528bf36a862876e82e64f9301b7d8c435" translate="yes" xml:space="preserve">
          <source>Promise that resolves to the passed value.</source>
          <target state="translated">Обещай,что это разрешится до переданного значения.</target>
        </trans-unit>
        <trans-unit id="f90fc3965e7f0b82d63fa7168a48a06bdbb2d8a7" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;Ember.ApplicationInstance, Error&amp;gt;</source>
          <target state="translated">Обещание &amp;lt;Ember.ApplicationInstance, Ошибка&amp;gt;</target>
        </trans-unit>
        <trans-unit id="20dfb17fbcb83737eb52f26791ace1434823d825" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;record&amp;gt;</source>
          <target state="translated">Promise&amp;lt;record&amp;gt;</target>
        </trans-unit>
        <trans-unit id="203fae2a257dd496efa85980bf0ba4c7773be142" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;record&amp;gt; a promise for the value (record or relationship)</source>
          <target state="translated">Обещание &amp;lt;запись&amp;gt; обещание значения (записи или отношения)</target>
        </trans-unit>
        <trans-unit id="1e8da2708d11a179d860eb37dfe66600b1bd2b46" translate="yes" xml:space="preserve">
          <source>PromiseProxyMixin</source>
          <target state="translated">PromiseProxyMixin</target>
        </trans-unit>
        <trans-unit id="b1d472e424c03ff52490d1edc8a0e23f95babb92" translate="yes" xml:space="preserve">
          <source>Promises</source>
          <target state="translated">Promises</target>
        </trans-unit>
        <trans-unit id="f44a75e9345297610dff0ce9a97e4b57b6b46aab" translate="yes" xml:space="preserve">
          <source>Promises A+ specifies that any exceptions that occur with a promise must be caught by the promises implementation and bubbled to the last handler. For this reason, it is recommended that you always specify a second rejection handler function to &lt;code&gt;then&lt;/code&gt;. However, &lt;code&gt;RSVP.rethrow&lt;/code&gt; will throw the exception outside of the promise, so it bubbles up to your console if in the browser, or domain/cause uncaught exception in Node. &lt;code&gt;rethrow&lt;/code&gt; will also throw the error again so the error can be handled by the promise per the spec.</source>
          <target state="translated">Promises A + указывает, что любые исключения, возникающие с обещанием, должны перехватываться реализацией обещаний и передаваться последнему обработчику. По этой причине рекомендуется всегда указывать вторую функцию обработчика отклонения для &lt;code&gt;then&lt;/code&gt; . Однако &lt;code&gt;RSVP.rethrow&lt;/code&gt; вызовет исключение за пределами обещания, поэтому оно всплывает на вашу консоль, если в браузере, или домен / вызывает неперехваченное исключение в Node. &lt;code&gt;rethrow&lt;/code&gt; также снова вызовет ошибку, поэтому ошибка может быть обработана обещанием в соответствии со спецификацией.</target>
        </trans-unit>
        <trans-unit id="216c902fd90fd7f61531c27c5a86d60085ec25e9" translate="yes" xml:space="preserve">
          <source>Promises Not Detected</source>
          <target state="translated">Обещания не обнаружены</target>
        </trans-unit>
        <trans-unit id="aaca97f965d2c31995d03cad0b27e350c3445416" translate="yes" xml:space="preserve">
          <source>Promises can also be said to &lt;em&gt;resolve&lt;/em&gt; a value. If this value is also a promise, then the original promise's settled state will match the value's settled state. So a promise that &lt;em&gt;resolves&lt;/em&gt; a promise that rejects will itself reject, and a promise that &lt;em&gt;resolves&lt;/em&gt; a promise that fulfills will itself fulfill.</source>
          <target state="translated">Можно также сказать, что обещания &lt;em&gt;разрешают&lt;/em&gt; ценность. Если это значение также является обещанием, то исходное состояние обещания будет соответствовать установленному состоянию значения. Таким образом, обещание, которое &lt;em&gt;разрешает&lt;/em&gt; обещание, которое отклоняется, само отвергается, а обещание, которое &lt;em&gt;разрешает&lt;/em&gt; обещание, которое выполняется, само будет выполнено.</target>
        </trans-unit>
        <trans-unit id="9f4ddbbce9b9a96df78d3c916a6239398660cebc" translate="yes" xml:space="preserve">
          <source>Promises generated by Ember are all labeled by default. You can also label your own RSVP Promises to find them in the Inspector's Promises tab. All RSVP methods can take a label as the final argument.</source>
          <target state="translated">Обещания,сгенерированные Эмбер,по умолчанию помечены.Вы также можете пометить свои собственные RSVP Обещания,чтобы найти их на вкладке &quot;Обещания инспектора&quot;.Все методы RSVP могут принимать метку в качестве последнего аргумента.</target>
        </trans-unit>
        <trans-unit id="763b5a177da3472a739c49add6d1a21b1ef06c5d" translate="yes" xml:space="preserve">
          <source>Promises have different colors based on their state.</source>
          <target state="translated">Обещания имеют разные цвета в зависимости от их состояния.</target>
        </trans-unit>
        <trans-unit id="f72d01a967e01e14a4a0fa223b3309202aa7c45b" translate="yes" xml:space="preserve">
          <source>Promises shine when abstracting away asynchronous interactions such as &lt;code&gt;XMLHttpRequest&lt;/code&gt;s.</source>
          <target state="translated">Обещания сияют, когда абстрагируются от асинхронных взаимодействий, таких как &lt;code&gt;XMLHttpRequest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9229a94589162572814117eb770a291cf02fddad" translate="yes" xml:space="preserve">
          <source>Promises that are fulfilled have a fulfillment value and are in the fulfilled state. Promises that are rejected have a rejection reason and are in the rejected state. A fulfillment value is never a thenable.</source>
          <target state="translated">Обещания,которые выполняются,имеют ценность исполнения и находятся в выполненном состоянии.Обещания,которые были отклонены,имеют причину отклонения и находятся в отклоненном состоянии.Ценность исполнения никогда не бывает достижимой.</target>
        </trans-unit>
        <trans-unit id="03590df139443945075f2a3bc957119a024699ce" translate="yes" xml:space="preserve">
          <source>Promise|Object</source>
          <target state="translated">Promise|Object</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="536b9006793cf5c3c1070e09df19893db8668d7a" translate="yes" xml:space="preserve">
          <source>Properties and observers allow one object to observe changes to a property on another object. This is one of the fundamental ways that models, controllers and views communicate with each other in an Ember application.</source>
          <target state="translated">Свойства и наблюдатели позволяют одному объекту наблюдать изменения свойства на другом объекте.Это один из фундаментальных способов,которым модели,контроллеры и представления взаимодействуют друг с другом в Ember приложении.</target>
        </trans-unit>
        <trans-unit id="82033eb711807359e0eec9de4a43a4d74d92c987" translate="yes" xml:space="preserve">
          <source>Properties can be chained as well:</source>
          <target state="translated">Свойства также могут быть прикованы цепями:</target>
        </trans-unit>
        <trans-unit id="5c379650924c833d1858287bc08588ceb832a8a0" translate="yes" xml:space="preserve">
          <source>Properties that are defined on the model but are omitted in the normalized JSON API document object will not be updated. Properties that are included in the normalized JSON API document object but not defined on the Model will be ignored.</source>
          <target state="translated">Свойства,которые определены на модели,но опущены в нормализованном объекте JSON API документа,не будут обновлены.Свойства,которые включены в нормализованный объект JSON API документа,но не определены в модели,будут игнорироваться.</target>
        </trans-unit>
        <trans-unit id="8d9e37b396787a5cb09465045bf0f0a4eab7185e" translate="yes" xml:space="preserve">
          <source>Property Observers</source>
          <target state="translated">Наблюдатели за имуществом</target>
        </trans-unit>
        <trans-unit id="3249cd85365c1d97e6d4a3239b88af5d064671ab" translate="yes" xml:space="preserve">
          <source>Provide the asset path as the first argument, and the list of modules and exports as the second.</source>
          <target state="translated">В качестве первого аргумента укажите путь к активу,а в качестве второго-список модулей и экспортируемых данных.</target>
        </trans-unit>
        <trans-unit id="4e7ccdfdc46e55a1f8f8e8698100457fdda15b9f" translate="yes" xml:space="preserve">
          <source>Provide the asset path as the first argument:</source>
          <target state="translated">В качестве первого аргумента укажите путь к активу:</target>
        </trans-unit>
        <trans-unit id="804a830ba49ef5270d658059a3cc0bf26f755759" translate="yes" xml:space="preserve">
          <source>Providing Markup to a Component</source>
          <target state="translated">Предоставление разметки компоненту</target>
        </trans-unit>
        <trans-unit id="5c9b1ac36b5021ea213e2a9b52e09401d0c16a5b" translate="yes" xml:space="preserve">
          <source>Proxies to the serializer's &lt;code&gt;serialize&lt;/code&gt; method.</source>
          <target state="translated">Прокси для метода сериализации &lt;code&gt;serialize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="127bb9e4bb030d22e2337f3c5cdd29d2359e0a2d" translate="yes" xml:space="preserve">
          <source>ProxyMixin</source>
          <target state="translated">ProxyMixin</target>
        </trans-unit>
        <trans-unit id="c4a9924b7849758c869d4fd5e52d97bd8b26ff5e" translate="yes" xml:space="preserve">
          <source>Push some data for a given type into the store.</source>
          <target state="translated">Вставьте в хранилище некоторые данные для данного типа.</target>
        </trans-unit>
        <trans-unit id="9536ee10c3ab2432a5e6558f3207239d0d2ea555" translate="yes" xml:space="preserve">
          <source>Push some raw data into the store.</source>
          <target state="translated">Вставьте в хранилище необработанные данные.</target>
        </trans-unit>
        <trans-unit id="9b601bad7a8b3234afd2de3a37d3cb2f2f119973" translate="yes" xml:space="preserve">
          <source>Push the object onto the end of the array if it is not already present in the array.</source>
          <target state="translated">Надавите объект на конец массива,если его еще нет в массиве.</target>
        </trans-unit>
        <trans-unit id="5a5340b1561d715113dc2d332842eae59747ca32" translate="yes" xml:space="preserve">
          <source>Push the object onto the end of the array. Works just like &lt;code&gt;push()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Вставьте объект в конец массива. Работает так же, как &lt;code&gt;push()&lt;/code&gt; но совместим с KVO.</target>
        </trans-unit>
        <trans-unit id="700f90c6bd512a32dbfb55478282f3c7731cdb78" translate="yes" xml:space="preserve">
          <source>Pushing Records</source>
          <target state="translated">Pushing Records</target>
        </trans-unit>
        <trans-unit id="08491627624f56833d6474da961363d94fe64101" translate="yes" xml:space="preserve">
          <source>Pushing Records into the Store</source>
          <target state="translated">Занесение записей в магазин</target>
        </trans-unit>
        <trans-unit id="ba83f3a04b35edb4a33611352a88476fef56f328" translate="yes" xml:space="preserve">
          <source>QUnit example:</source>
          <target state="translated">Пример QUnit:</target>
        </trans-unit>
        <trans-unit id="c5aad12964a69eb6cc9ccef39e0f740e43015f0f" translate="yes" xml:space="preserve">
          <source>QUnit passes in an object called an &lt;a href=&quot;https://api.qunitjs.com/assert/&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; to each test function. An &lt;code&gt;assert&lt;/code&gt; has functions, such as &lt;code&gt;equal()&lt;/code&gt;, that allow your test to check for conditions within the test environment. A test must have one passing assert to be successful.</source>
          <target state="translated">QUnit передает объект, называемый &lt;a href=&quot;https://api.qunitjs.com/assert/&quot;&gt; &lt;code&gt;assert&lt;/code&gt; ,&lt;/a&gt; каждой тестовой функции. В &lt;code&gt;assert&lt;/code&gt; есть функции, такие как &lt;code&gt;equal()&lt;/code&gt; , которые позволяют вашему тесту проверять условия в тестовой среде. Для успешного прохождения теста необходимо иметь одно проходное утверждение.</target>
        </trans-unit>
        <trans-unit id="3229861d9c9111cf61a19e43da48ddbbd1b48efd" translate="yes" xml:space="preserve">
          <source>Query Parameters</source>
          <target state="translated">Параметры запроса</target>
        </trans-unit>
        <trans-unit id="5139ef15ef3085f1688a1e87d332dfd36e0ceff6" translate="yes" xml:space="preserve">
          <source>Query param values are cast to the same datatype as the default value, e.g. a URL change from &lt;code&gt;/?page=3&lt;/code&gt; to &lt;code&gt;/?page=2&lt;/code&gt; will set &lt;code&gt;controller:articles&lt;/code&gt;'s &lt;code&gt;page&lt;/code&gt; property to the number &lt;code&gt;2&lt;/code&gt;, rather than the string &lt;code&gt;&quot;2&quot;&lt;/code&gt;. The same also applies to boolean default values. If the default value is an array, the string will be parsed using &lt;code&gt;JSON.parse&lt;/code&gt;.</source>
          <target state="translated">Запрос значения Param отлиты к тому же типу данных в качестве значения по умолчанию, например , изменение URL с &lt;code&gt;/?page=3&lt;/code&gt; К &lt;code&gt;/?page=2&lt;/code&gt; Установит &lt;code&gt;controller:articles&lt;/code&gt; &amp;laquo;ы &lt;code&gt;page&lt;/code&gt; собственности на номер &lt;code&gt;2&lt;/code&gt; , а не строка &lt;code&gt;&quot;2&quot;&lt;/code&gt; . То же самое относится и к логическим значениям по умолчанию. Если значением по умолчанию является массив, строка будет проанализирована с помощью &lt;code&gt;JSON.parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0aca39e962863236da8c92fd756de102fb200868" translate="yes" xml:space="preserve">
          <source>Query parameters are optional key-value pairs that appear to the right of the &lt;code&gt;?&lt;/code&gt; in a URL. For example, the following URL has two query params, &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;page&lt;/code&gt;, with respective values &lt;code&gt;ASC&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;:</source>
          <target state="translated">Параметры запроса - это необязательные пары ключ-значение, которые отображаются справа от &lt;code&gt;?&lt;/code&gt; в URL. Например, следующий URL-адрес имеет два параметра запроса, &lt;code&gt;sort&lt;/code&gt; и &lt;code&gt;page&lt;/code&gt; , с соответствующими значениями &lt;code&gt;ASC&lt;/code&gt; и &lt;code&gt;2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b0f8ce0e88182d09e5b36ad33c8efbb1f3a42a78" translate="yes" xml:space="preserve">
          <source>Query params allow for additional application state to be serialized into the URL that can't otherwise fit into the &lt;em&gt;path&lt;/em&gt; of the URL (i.e. everything to the left of the &lt;code&gt;?&lt;/code&gt;). Common use cases for query params include representing the current page number in a paginated collection, filter criteria, or sorting criteria.</source>
          <target state="translated">Параметры запроса позволяют сериализовать дополнительное состояние приложения в URL-адрес, который иначе не может поместиться в &lt;em&gt;путь&lt;/em&gt; URL-адреса (то есть все, что находится слева от &lt;code&gt;?&lt;/code&gt; ). Общие варианты использования параметров запроса включают представление номера текущей страницы в разбитой на страницы коллекции, критерии фильтрации или критерии сортировки.</target>
        </trans-unit>
        <trans-unit id="b1782f7b18226435ee790bf1a339595b9fcaafce" translate="yes" xml:space="preserve">
          <source>Query params are declared on route-driven controllers. For example, to configure query params that are active within the &lt;code&gt;articles&lt;/code&gt; route, they must be declared on &lt;code&gt;controller:articles&lt;/code&gt;.</source>
          <target state="translated">Параметры запроса объявляются на контроллерах, управляемых маршрутами. Например, чтобы настроить параметры запроса, которые активны в маршруте &lt;code&gt;articles&lt;/code&gt; , они должны быть объявлены в &lt;code&gt;controller:articles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1e8c5f9eb6a51268771357d73e5c3d414ee77b7" translate="yes" xml:space="preserve">
          <source>Query params that require additional customization can be provided along with strings in the &lt;code&gt;queryParams&lt;/code&gt; array.</source>
          <target state="translated">Параметры запроса, требующие дополнительной настройки, могут быть предоставлены вместе со строками в массиве &lt;code&gt;queryParams&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84d51a6c79840a7e20e6f3b3c232167ddd101fdb" translate="yes" xml:space="preserve">
          <source>Querying for A Single Record</source>
          <target state="translated">Запрос на единственную запись</target>
        </trans-unit>
        <trans-unit id="bab1721e2fbda766f83183971199264a105762c8" translate="yes" xml:space="preserve">
          <source>Querying for Multiple Records</source>
          <target state="translated">Запрос на несколько записей</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">Быстрый старт</target>
        </trans-unit>
        <trans-unit id="9e2ff6c5483cb39d97a402f850cb39e32d0c9dbc" translate="yes" xml:space="preserve">
          <source>RSVP</source>
          <target state="translated">RSVP</target>
        </trans-unit>
        <trans-unit id="cc85f8587031356b78b2448d63c222acc180e5f9" translate="yes" xml:space="preserve">
          <source>RSVP.EventTarget</source>
          <target state="translated">RSVP.EventTarget</target>
        </trans-unit>
        <trans-unit id="8c3018eec21a26738e481a8b5ea2b8b6ade95786" translate="yes" xml:space="preserve">
          <source>RSVP.Promise</source>
          <target state="translated">RSVP.Promise</target>
        </trans-unit>
        <trans-unit id="4e1ef1585228db21136c63e2c103fa2fc8cba9b0" translate="yes" xml:space="preserve">
          <source>RSVP.Promise&amp;lt;any&amp;gt;</source>
          <target state="translated">RSVP.Promise&amp;lt;any&amp;gt;</target>
        </trans-unit>
        <trans-unit id="02ed91fc301225e19af656a773481bbe02910c4f" translate="yes" xml:space="preserve">
          <source>RSVP.Promise&amp;lt;undefined&amp;gt;</source>
          <target state="translated">RSVP.Promise&amp;lt;undefined&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e57c7077cfdd6dccd21781d8c00850d345148e3" translate="yes" xml:space="preserve">
          <source>Rather than create an arbitrary set of conventions, Ember Data is designed to work out of the box with &lt;a href=&quot;http://jsonapi.org&quot;&gt;JSON API&lt;/a&gt;. JSON API is a formal specification for building conventional, robust, and performant APIs that allow clients and servers to communicate model data.</source>
          <target state="translated">Вместо того, чтобы создавать произвольный набор соглашений, Ember Data изначально разработан для работы с &lt;a href=&quot;http://jsonapi.org&quot;&gt;JSON API&lt;/a&gt; . JSON API - это формальная спецификация для создания обычных, надежных и производительных API, которые позволяют клиентам и серверам обмениваться данными модели.</target>
        </trans-unit>
        <trans-unit id="20a3458f1862c89f455c490634fb5f573475fbc2" translate="yes" xml:space="preserve">
          <source>Rather than writing the higher level app code that internally invokes the various run loop scheduling functions, we have stripped away the covers, and shown the raw run-loop interactions.</source>
          <target state="translated">Вместо того,чтобы писать код приложения более высокого уровня,который внутренне вызывает различные функции планирования циклов выполнения,мы убрали обложки и показали необработанные взаимодействия в цикле выполнения.</target>
        </trans-unit>
        <trans-unit id="02143f2c5abf0fcc77c1815c31c2586f2ab77a8d" translate="yes" xml:space="preserve">
          <source>Re-route to the existing url</source>
          <target state="translated">Повторный маршрут к существующему урлу</target>
        </trans-unit>
        <trans-unit id="c853a28871d264d43a0d86e34fdf1c1f3e7482f4" translate="yes" xml:space="preserve">
          <source>Readonly Nested Data</source>
          <target state="translated">Только вложенные данные</target>
        </trans-unit>
        <trans-unit id="b129f9f5e547d2585b00b80301e33d0ccd886142" translate="yes" xml:space="preserve">
          <source>Record States and Filtering</source>
          <target state="translated">Состояние записи и фильтрация</target>
        </trans-unit>
        <trans-unit id="779639f77d26423e55093890463c73df4117f2b4" translate="yes" xml:space="preserve">
          <source>RecordReference</source>
          <target state="translated">RecordReference</target>
        </trans-unit>
        <trans-unit id="e51c55255be9007d473b3c04b4553c2a27d6f03b" translate="yes" xml:space="preserve">
          <source>Records</source>
          <target state="translated">Records</target>
        </trans-unit>
        <trans-unit id="09f48f492f46fd16811c910592ad171170771ab8" translate="yes" xml:space="preserve">
          <source>Records in Ember Data are persisted on a per-instance basis. Call &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; on any instance of &lt;code&gt;DS.Model&lt;/code&gt; and it will make a network request.</source>
          <target state="translated">Записи в Ember Data сохраняются для каждого экземпляра. Вызовите &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; для любого экземпляра &lt;code&gt;DS.Model&lt;/code&gt; , и он сделает сетевой запрос.</target>
        </trans-unit>
        <trans-unit id="93f89c3ab4a799a6a0aab99eb1bb7100ea88724d" translate="yes" xml:space="preserve">
          <source>Records that already exist on the backend are updated using the HTTP &lt;code&gt;PATCH&lt;/code&gt; verb.</source>
          <target state="translated">Записи, которые уже существуют в серверной части, обновляются с помощью команды HTTP &lt;code&gt;PATCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7c32c0b4917effc40dd0a0959efa8e648135b6" translate="yes" xml:space="preserve">
          <source>Records without an &lt;code&gt;id&lt;/code&gt; property are not considered embedded records, model instances must have an &lt;code&gt;id&lt;/code&gt; property to be used with Ember Data.</source>
          <target state="translated">Записи без свойства &lt;code&gt;id&lt;/code&gt; не считаются встроенными записями, экземпляры модели должны иметь свойство &lt;code&gt;id&lt;/code&gt; для использования с данными Ember.</target>
        </trans-unit>
        <trans-unit id="5ac9a9807e12ead40a070a8626218b2274db6816" translate="yes" xml:space="preserve">
          <source>Recovering from Rejection</source>
          <target state="translated">Восстановление после отторжения</target>
        </trans-unit>
        <trans-unit id="60e22121bdd0bc71cdb2bae2a3aa577006b2eae9" translate="yes" xml:space="preserve">
          <source>Redirecting</source>
          <target state="translated">Redirecting</target>
        </trans-unit>
        <trans-unit id="6bfa4764dfd3c083f396267379ee172ae1854a8d" translate="yes" xml:space="preserve">
          <source>Refer to documentation for &lt;code&gt;beforeModel&lt;/code&gt; for a description of transition-pausing semantics when a promise is returned from this hook.</source>
          <target state="translated">Обратитесь к документации по &lt;code&gt;beforeModel&lt;/code&gt; за описанием семантики приостановки перехода, когда обещание возвращается из этого хука.</target>
        </trans-unit>
        <trans-unit id="99f62095529c6af5ce3c4c2976cf5e8e543250eb" translate="yes" xml:space="preserve">
          <source>References to other records should be done by ID. For example, if you have a model with a &lt;code&gt;hasMany&lt;/code&gt; relationship:</source>
          <target state="translated">Ссылки на другие записи должны делаться по идентификатору. Например, если у вас есть модель с отношением &lt;code&gt;hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="69f6bad51245a7a68b6a5d503ecf8f42a933df09" translate="yes" xml:space="preserve">
          <source>Reflexive Relations</source>
          <target state="translated">Рефлексивные отношения</target>
        </trans-unit>
        <trans-unit id="6224a939ef652c56dddd065c6b6575aface1416e" translate="yes" xml:space="preserve">
          <source>Refresh the model on this route and any child routes, firing the &lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks in a similar fashion to how routes are entered when transitioning in from other route. The current route params (e.g. &lt;code&gt;article_id&lt;/code&gt;) will be passed in to the respective model hooks, and if a different model is returned, &lt;code&gt;setupController&lt;/code&gt; and associated route hooks will re-fire as well.</source>
          <target state="translated">Обновите модель на этом маршруте и на всех дочерних маршрутах, &lt;code&gt;beforeModel&lt;/code&gt; , &lt;code&gt;model&lt;/code&gt; и &lt;code&gt;afterModel&lt;/code&gt; аналогично тому, как вводятся маршруты при переходе с другого маршрута. Текущие параметры маршрута (например, &lt;code&gt;article_id&lt;/code&gt; ) будут переданы в соответствующие хуки модели, и если будет возвращена другая модель, &lt;code&gt;setupController&lt;/code&gt; и связанные хуки маршрута также будут повторно активированы .</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="06b326b8df4964d11fe7f98ffc257e678212ac9e" translate="yes" xml:space="preserve">
          <source>Regardless of how the URL becomes set, the Ember router then maps the current URL to one or more route handlers. A route handler can do several things:</source>
          <target state="translated">Независимо от того,как URL становится установленным,Ember-маршрутизатор затем сопоставляет текущий URL с одним или несколькими обработчиками маршрута.Обработчик маршрута может делать несколько вещей:</target>
        </trans-unit>
        <trans-unit id="13ef3793fbf15d676e0da171536ccb7a8b55c72a" translate="yes" xml:space="preserve">
          <source>Regardless of the serializer used, this metadata is extracted from the response. You can then read it with &lt;code&gt;.get('meta')&lt;/code&gt;.</source>
          <target state="translated">Независимо от используемого сериализатора, эти метаданные извлекаются из ответа. Затем вы можете прочитать его с помощью &lt;code&gt;.get('meta')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="580b18a39e5b39765415c0eed123af6da265aa11" translate="yes" xml:space="preserve">
          <source>Register options for a particular factory.</source>
          <target state="translated">Зарегистрируйте опции для конкретного завода.</target>
        </trans-unit>
        <trans-unit id="6291ba0522621d5582aa26e4decc87be7d141a60" translate="yes" xml:space="preserve">
          <source>Register/Unregister additional test helpers.</source>
          <target state="translated">Зарегистрируйте/не зарегистрируйте дополнительных помощников тестировщиков.</target>
        </trans-unit>
        <trans-unit id="57ac94516e6ba3226fa58ffc652e3e7312c91e5d" translate="yes" xml:space="preserve">
          <source>Registered factories are &lt;strong&gt;instantiated&lt;/strong&gt; by having &lt;code&gt;create&lt;/code&gt; called on them. Additionally they are &lt;strong&gt;singletons&lt;/strong&gt;, each time they are looked up they return the same instance.</source>
          <target state="translated">Зарегистрированные фабрики &lt;strong&gt;создаются&lt;/strong&gt; путем &lt;strong&gt;вызова&lt;/strong&gt; их &lt;code&gt;create&lt;/code&gt; . Кроме того, они &lt;strong&gt;синглтоны&lt;/strong&gt; , каждый раз при поиске они возвращают один и тот же экземпляр.</target>
        </trans-unit>
        <trans-unit id="63c9b0772d57be72a0c5d903431a873fcdb8a6f2" translate="yes" xml:space="preserve">
          <source>Registering Already Instantiated Objects</source>
          <target state="translated">Регистрация уже зарегистрированных объектов</target>
        </trans-unit>
        <trans-unit id="4e4aa5ae30460fc62431c4dbebe42f4477bbe300" translate="yes" xml:space="preserve">
          <source>Registering Singletons vs. Non-Singletons</source>
          <target state="translated">Регистрация синглетов против несинглетов</target>
        </trans-unit>
        <trans-unit id="aba41c3a5d53b4b36fb1b8a0fdb902b0488d3a7a" translate="yes" xml:space="preserve">
          <source>Registering a Library</source>
          <target state="translated">Регистрация библиотеки</target>
        </trans-unit>
        <trans-unit id="0803d3a3d9f15e36c86ae2132d20124795a72459" translate="yes" xml:space="preserve">
          <source>Registers a factory that can be used for dependency injection (with &lt;code&gt;inject&lt;/code&gt;) or for service lookup. Each factory is registered with a full name including two parts: &lt;code&gt;type:name&lt;/code&gt;.</source>
          <target state="translated">Регистрирует фабрику, которую можно использовать для внедрения зависимостей (с помощью &lt;code&gt;inject&lt;/code&gt; ) или для поиска службы. Каждая фабрика регистрируется с полным названием, состоящим из двух частей: &lt;code&gt;type:name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7e42ab82b7c92882f8e66014048c4f809e7e13" translate="yes" xml:space="preserve">
          <source>Registration keys have two segments split by a colon (&lt;code&gt;:&lt;/code&gt;). The first segment is the framework factory type, and the second is the name of the particular factory. Hence, the &lt;code&gt;index&lt;/code&gt; template has the key &lt;code&gt;template:index&lt;/code&gt;. Ember has several built-in factory types, such as &lt;code&gt;service&lt;/code&gt;, &lt;code&gt;route&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, and &lt;code&gt;component&lt;/code&gt;.</source>
          <target state="translated">Регистрационные ключи имеют два сегмента , разделенное двоеточие ( &lt;code&gt;:&lt;/code&gt; ). Первый сегмент - это тип фабрики каркаса, а второй - имя конкретной фабрики. Следовательно, шаблон &lt;code&gt;index&lt;/code&gt; имеет ключевой &lt;code&gt;template:index&lt;/code&gt; . В Ember есть несколько встроенных типов фабрик, таких как &lt;code&gt;service&lt;/code&gt; , &lt;code&gt;route&lt;/code&gt; , &lt;code&gt;template&lt;/code&gt; и &lt;code&gt;component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74bb08da802a694a3d25bf4c3835ded58d2f6fc6" translate="yes" xml:space="preserve">
          <source>RegistryProxy</source>
          <target state="translated">RegistryProxy</target>
        </trans-unit>
        <trans-unit id="0a580368138bbedf511a06592637b0c30c98bec4" translate="yes" xml:space="preserve">
          <source>RegistryProxyMixin</source>
          <target state="translated">RegistryProxyMixin</target>
        </trans-unit>
        <trans-unit id="63a6a6ef6785a3cb9c1352a24ea4357d90e0f58f" translate="yes" xml:space="preserve">
          <source>RegistryProxyMixin  (private)</source>
          <target state="translated">RegistryProxyMixin (личный)</target>
        </trans-unit>
        <trans-unit id="0db97526891b25965235d31bf6cc3d8269a10d30" translate="yes" xml:space="preserve">
          <source>RegistryProxyMixin is used to provide public access to specific registry functionality.</source>
          <target state="translated">RegistryProxyMixin используется для предоставления публичного доступа к определенным функциям реестра.</target>
        </trans-unit>
        <trans-unit id="5f5b133edab536327af2bd039bb8a3451c0c686b" translate="yes" xml:space="preserve">
          <source>Rejected model promises halt transitions, but because promises are chainable, you can catch promise rejects within the &lt;code&gt;model&lt;/code&gt; hook itself and convert them into fulfills that won't halt the transition.</source>
          <target state="translated">Отклоненная модель обещает остановить переходы, но поскольку обещания связаны друг с другом, вы можете перехватить отклоненные обещания в самом хуке &lt;code&gt;model&lt;/code&gt; и преобразовать их в исполнения, которые не остановят переход.</target>
        </trans-unit>
        <trans-unit id="229981dd1dc44fcc3bf72493583bb63fa236cecf" translate="yes" xml:space="preserve">
          <source>Relationships</source>
          <target state="translated">Relationships</target>
        </trans-unit>
        <trans-unit id="7ebee1cc4a1ef9624d817353b136be3fe22ab7fc" translate="yes" xml:space="preserve">
          <source>Relationships are usually represented by ids to the record in the relationship. The related records can then be sideloaded in the response under a key for the type.</source>
          <target state="translated">Отношения обычно представлены идентификационными записями.Соответствующие записи затем могут быть загружены в ответ под ключом для данного типа.</target>
        </trans-unit>
        <trans-unit id="d4abfee2fa163eac14a7ded7bb1fdab42b33f49a" translate="yes" xml:space="preserve">
          <source>Relationships as Promises</source>
          <target state="translated">Отношения как обещания</target>
        </trans-unit>
        <trans-unit id="282e0c1116f45802ea510d978c4bb1aaeda3e638" translate="yes" xml:space="preserve">
          <source>Reload the record from the adapter.</source>
          <target state="translated">Перезагрузите запись из адаптера.</target>
        </trans-unit>
        <trans-unit id="b9032b6f32f6e2281f4ae7c18e28a848286c6415" translate="yes" xml:space="preserve">
          <source>Reloading</source>
          <target state="translated">Reloading</target>
        </trans-unit>
        <trans-unit id="4d8114b387125160739c4384d9e4a3715ae113c8" translate="yes" xml:space="preserve">
          <source>Reloads all of the records in the manyArray. If the manyArray holds a relationship that was originally fetched using a links url Ember Data will revisit the original links url to repopulate the relationship.</source>
          <target state="translated">Перезагружает все записи в manyArray.Если в manyArray есть связь,которая была изначально получена по ссылке url Ember Data вернется к первоначальной ссылке url для повторного заселения этой связи.</target>
        </trans-unit>
        <trans-unit id="d6324829793579791ae457de1efbafabdce16f68" translate="yes" xml:space="preserve">
          <source>Reloads the record if it is already loaded. If the record is not loaded it will load the record via &lt;code&gt;store.findRecord&lt;/code&gt;</source>
          <target state="translated">Перезагружает запись, если она уже загружена. Если запись не загружена, она будет загружена через &lt;code&gt;store.findRecord&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bd1485c9bed37c1cf2bf2094bc180edee39e981" translate="yes" xml:space="preserve">
          <source>Reloads this has-many relationship.</source>
          <target state="translated">Перезагружает эти отношения.</target>
        </trans-unit>
        <trans-unit id="f4276922880097708e01378b7c926ae47b0ca730" translate="yes" xml:space="preserve">
          <source>Relying on autoruns is not a rigorous or efficient way to use the run loop. Wrapping event handlers manually are preferred.</source>
          <target state="translated">Опора на автозапуск не является строгим или эффективным способом использования петли прогона.Предпочтительны обработчики событий обертывания вручную.</target>
        </trans-unit>
        <trans-unit id="4656fc9d7b003300b618f2b5e454b26fe556d1b6" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;{{firstName}}&lt;/code&gt; and &lt;code&gt;{{lastName}}&lt;/code&gt; are bound data. That means if the value of one of those properties changes, the DOM will be updated automatically.</source>
          <target state="translated">Помните, что &lt;code&gt;{{firstName}}&lt;/code&gt; и &lt;code&gt;{{lastName}}&lt;/code&gt; связаны данными. Это означает, что если значение одного из этих свойств изменится, DOM будет обновляться автоматически.</target>
        </trans-unit>
        <trans-unit id="685e29f4b662e2c0f1a0744e653894d1da2671ad" translate="yes" xml:space="preserve">
          <source>Remember that &lt;em&gt;only events&lt;/em&gt; should ever cause a state transition. You should never call &lt;code&gt;transitionTo()&lt;/code&gt; from outside a state's event handler. If you are tempted to do so, create a new event and send that to the state manager.</source>
          <target state="translated">Помните, что &lt;em&gt;только события&lt;/em&gt; должны вызывать переход состояния. Никогда не следует вызывать &lt;code&gt;transitionTo()&lt;/code&gt; извне обработчика события состояния. Если у вас возникнет искушение сделать это, создайте новое событие и отправьте его менеджеру состояний.</target>
        </trans-unit>
        <trans-unit id="2772f3979b8490dfd9afc9103221e01e92eba84f" translate="yes" xml:space="preserve">
          <source>Remove a previously added helper method.</source>
          <target state="translated">Удалить ранее добавленный метод помощника.</target>
        </trans-unit>
        <trans-unit id="6c924c7cc754f0fab9bce280a8c42f9e3cff21cd" translate="yes" xml:space="preserve">
          <source>Remove all elements from the array. This is useful if you want to reuse an existing array without having to recreate it.</source>
          <target state="translated">Удалить все элементы из массива.Это полезно,если вы хотите повторно использовать существующий массив без необходимости его воссоздания.</target>
        </trans-unit>
        <trans-unit id="f6355dee47de1f32bf6f9799d78b6fee6bcd492e" translate="yes" xml:space="preserve">
          <source>Remove all occurrences of an object in the array.</source>
          <target state="translated">Удалить все вхождения объекта в массиве.</target>
        </trans-unit>
        <trans-unit id="152c1eaa085138cfa9d77a0942ce9534a3d76fe7" translate="yes" xml:space="preserve">
          <source>Remove an event listener</source>
          <target state="translated">Удалить слушателя событий</target>
        </trans-unit>
        <trans-unit id="4aa91b51bc12a3f5d89e5b53340b91ffc806cb11" translate="yes" xml:space="preserve">
          <source>Remove an object at the specified index using the &lt;code&gt;replace()&lt;/code&gt; primitive method. You can pass either a single index, or a start and a length.</source>
          <target state="translated">Удалите объект по указанному индексу с помощью примитивного метода &lt;code&gt;replace()&lt;/code&gt; . Вы можете передать либо один индекс, либо начало и длину.</target>
        </trans-unit>
        <trans-unit id="b8553b7b30d27bd6e52896284d645032511283c5" translate="yes" xml:space="preserve">
          <source>Remove an observer you have previously registered on this object. Pass the same key, target, and method you passed to &lt;code&gt;addObserver()&lt;/code&gt; and your target will no longer receive notifications.</source>
          <target state="translated">Удалите наблюдателя, которого вы ранее зарегистрировали на этом объекте. Передайте тот же ключ, цель и метод, которые вы передали в &lt;code&gt;addObserver()&lt;/code&gt; и ваша цель больше не будет получать уведомления.</target>
        </trans-unit>
        <trans-unit id="1fff707f00d08e1f5dfe2689260813207706b7e3" translate="yes" xml:space="preserve">
          <source>Removes an array observer from the object if the observer is current registered. Calling this method multiple times with the same object will have no effect.</source>
          <target state="translated">Удаляет наблюдателя-массив из объекта,если наблюдатель зарегистрирован в данный момент.Многократный вызов этого метода одним и тем же объектом не даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="18f9a7bd887e2ad04e12b6586614eadc5a5bf73f" translate="yes" xml:space="preserve">
          <source>Removes each object in the passed enumerable from the receiver.</source>
          <target state="translated">Удаляет каждый объект из переданного перечисления с приемника.</target>
        </trans-unit>
        <trans-unit id="53ebb1fef0864af0278ae31f4ac0ec30dc3e82ad" translate="yes" xml:space="preserve">
          <source>Removing Objects</source>
          <target state="translated">Удаление объектов</target>
        </trans-unit>
        <trans-unit id="6d84c2db53b8c4b4553001a5c3d3b995a8fc5d9b" translate="yes" xml:space="preserve">
          <source>Removing Relationships</source>
          <target state="translated">Устранение отношений</target>
        </trans-unit>
        <trans-unit id="041f6ca8e2d2dc5b856e1d078db74ba2885f4518" translate="yes" xml:space="preserve">
          <source>Rendering Performance</source>
          <target state="translated">Показатели рендеринга</target>
        </trans-unit>
        <trans-unit id="0985a0ecfabc2231124bd8de762617aaeafd5bd5" translate="yes" xml:space="preserve">
          <source>Rendering a Template</source>
          <target state="translated">Оформление шаблона</target>
        </trans-unit>
        <trans-unit id="3bf2cfd82c10e27a15ca73d1aff040c4b9aabd81" translate="yes" xml:space="preserve">
          <source>Renders the view again. This will work regardless of whether the view is already in the DOM or not. If the view is in the DOM, the rendering process will be deferred to give bindings a chance to synchronize.</source>
          <target state="translated">Опять открывается вид.Это будет работать независимо от того,находится ли вид уже в DOM или нет.Если вид находится в DOM,процесс рендеринга будет отложен,чтобы дать привязкам шанс синхронизироваться.</target>
        </trans-unit>
        <trans-unit id="90fcf58a93bf37c133e53c27b59ac552b7f86095" translate="yes" xml:space="preserve">
          <source>Reopening Classes and Instances</source>
          <target state="translated">Возобновление классов и обстоятельств</target>
        </trans-unit>
        <trans-unit id="68fd737319a0b0cb58525f439e8f98a23d49c821" translate="yes" xml:space="preserve">
          <source>Replace all the receiver's content with content of the argument. If argument is an empty array receiver will be cleared.</source>
          <target state="translated">Замените все содержимое получателя содержимым аргумента.Если аргумент является пустым,то приемник массива будет очищен.</target>
        </trans-unit>
        <trans-unit id="12205427cfdf5328a7ffdc0d916e8bdc2aeef4ed" translate="yes" xml:space="preserve">
          <source>Replacement for &lt;code&gt;Ember.RSVP.resolve&lt;/code&gt; The only difference is this uses an instance of &lt;code&gt;Ember.Test.Promise&lt;/code&gt;</source>
          <target state="translated">Замена для &lt;code&gt;Ember.RSVP.resolve&lt;/code&gt; Единственная разница в том, что здесь используется экземпляр &lt;code&gt;Ember.Test.Promise&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38df34ec5043e01b14b58ab782972627050d5e4e" translate="yes" xml:space="preserve">
          <source>Replaces underscores, spaces, or camelCase with dashes.</source>
          <target state="translated">Заменяет знаки подчеркивания,пробелы или верблюжью палочку тире.</target>
        </trans-unit>
        <trans-unit id="551c187c4562e07235299d81c81fb5553d3be6b8" translate="yes" xml:space="preserve">
          <source>Replacing history entries</source>
          <target state="translated">Замена записей истории</target>
        </trans-unit>
        <trans-unit id="db33df2b86e0548c5026c0e2feca083dd46c73b8" translate="yes" xml:space="preserve">
          <source>Reporting a problem</source>
          <target state="translated">Сообщение о проблеме</target>
        </trans-unit>
        <trans-unit id="5a3259ad102284e341592f2a49ccbc5935cfc92a" translate="yes" xml:space="preserve">
          <source>Represents a list of records whose membership is determined by the store. As records are created, loaded, or modified, the store evaluates them to determine if they should be part of the record array.</source>
          <target state="translated">Представляет собой список записей,членство в котором определяется магазином.По мере создания,загрузки или модификации записей хранилище их оценивает,чтобы определить,должны ли они быть частью массива записей.</target>
        </trans-unit>
        <trans-unit id="97471577bb242ec38248e3746d99aa261e14fdfd" translate="yes" xml:space="preserve">
          <source>Represents an ordered list of records whose order and membership is determined by the adapter. For example, a query sent to the adapter may trigger a search on the server, whose results would be loaded into an instance of the &lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt;.</source>
          <target state="translated">Представляет упорядоченный список записей, порядок и членство которых определяется адаптером. Например, запрос, отправленный адаптеру, может инициировать поиск на сервере, результаты которого будут загружены в экземпляр &lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f983e24377129faa7d20942c23e23254dfe09a06" translate="yes" xml:space="preserve">
          <source>Represents the URL of the root of the application, often '/'. This prefix is assumed on all routes defined on this router.</source>
          <target state="translated">Представляет URL корня приложения,часто '/'.Этот префикс предполагается на всех маршрутах,определенных на этом маршрутизаторе.</target>
        </trans-unit>
        <trans-unit id="99a531ee74a48c9f139d54302917c31212c36e9a" translate="yes" xml:space="preserve">
          <source>Represents the model's class name as a string. This can be used to look up the model's class name through &lt;code&gt;DS.Store&lt;/code&gt;'s modelFor method.</source>
          <target state="translated">Представляет имя класса модели в виде строки. Это можно использовать для поиска имени класса &lt;code&gt;DS.Store&lt;/code&gt; с помощью метода modelFor DS.Store.</target>
        </trans-unit>
        <trans-unit id="6a446bfa5dd57c064db5b7db62b9216d2d4fe7f6" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;/person/1&lt;/code&gt;. Requests for &lt;code&gt;user-profile&lt;/code&gt; would now target &lt;code&gt;/user_profile/1&lt;/code&gt;.</source>
          <target state="translated">Запросы на &lt;code&gt;person&lt;/code&gt; теперь будут нацелены на &lt;code&gt;/person/1&lt;/code&gt; . Запросы &lt;code&gt;user-profile&lt;/code&gt; теперь будут нацелены на &lt;code&gt;/user_profile/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e23fb7f5045063dea88f661c92bdf8761f6d2db8" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;http://emberjs.com/api/1/people/1&lt;/code&gt;.</source>
          <target state="translated">Запросы для &lt;code&gt;person&lt;/code&gt; теперь будут нацелены на &lt;code&gt;http://emberjs.com/api/1/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbed8372b111ece5b7dea26366e56a504eeb78ba" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;https://api.example.com/people/1&lt;/code&gt;.</source>
          <target state="translated">Запросы на &lt;code&gt;person&lt;/code&gt; теперь будут нацелены на &lt;code&gt;https://api.example.com/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39adf7b336b15481b1d246e2d2e38d4faf23c063" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;Person&lt;/code&gt; model would now target &lt;code&gt;/api/1/people/1&lt;/code&gt;.</source>
          <target state="translated">Запросы для модели &lt;code&gt;Person&lt;/code&gt; теперь будут нацелены на &lt;code&gt;/api/1/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5a6ae7596913135d59e602a8445cd7c591187b4" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;Post&lt;/code&gt; model would now target &lt;code&gt;/api/1/post/&lt;/code&gt;.</source>
          <target state="translated">Запросы для модели &lt;code&gt;Post&lt;/code&gt; теперь будут нацелены на &lt;code&gt;/api/1/post/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47352f3ca02fa7dd1203791432c99adf3ee88922" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;Post&lt;/code&gt; model would now target &lt;code&gt;https://api.example.com/post/&lt;/code&gt;.</source>
          <target state="translated">Запросы для модели &lt;code&gt;Post&lt;/code&gt; теперь будут нацелены на &lt;code&gt;https://api.example.com/post/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507eba662c0bdfc5e6dcd2e527c591cbe849d43c" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;person&lt;/code&gt; model would now target &lt;code&gt;/api/1/people/1&lt;/code&gt;.</source>
          <target state="translated">Запросы для модели &lt;code&gt;person&lt;/code&gt; теперь будут нацелены на &lt;code&gt;/api/1/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c77ddbd00374e8cd6c0cc4272b91fdfbb3d601e3" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;person&lt;/code&gt; model would now target &lt;code&gt;https://api.example.com/people/1&lt;/code&gt;.</source>
          <target state="translated">Запросы для модели &lt;code&gt;person&lt;/code&gt; теперь будут нацелены на &lt;code&gt;https://api.example.com/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d1ce0dbae3dcf8f899bd4893d4663dda4cf2c7d" translate="yes" xml:space="preserve">
          <source>Rerun your test suite as you make updates to your workflow file and you should validate that your deprecations are gone. Once that is completed, you can proceed with enhancing your application without the sea of deprecation warnings clouding your log.</source>
          <target state="translated">Перезапустите ваш набор тестов по мере того,как вы делаете обновления в вашем файле рабочего процесса,и вы должны подтвердить,что ваши депрессии исчезли.После этого вы можете продолжить работу над улучшением своего приложения,не затуманивая журнал предупреждениями об опустошении.</target>
        </trans-unit>
        <trans-unit id="1459337c0ecc835d1d2041391957329cf96ed92d" translate="yes" xml:space="preserve">
          <source>Reset the application. This is typically used only in tests. It cleans up the application in the following order:</source>
          <target state="translated">Сбросьте приложение.Обычно это используется только в тестах.Он очищает приложение в следующем порядке:</target>
        </trans-unit>
        <trans-unit id="9799189643ce709a24fb886e74561834ed7c1a6f" translate="yes" xml:space="preserve">
          <source>Resetting Presentation State on Attribute Change with &lt;code&gt;didUpdateAttrs&lt;/code&gt;</source>
          <target state="translated">Сброс состояния представления при изменении атрибута с помощью &lt;code&gt;didUpdateAttrs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14de0ea979680e88715bf0fb25e6a27c36244df1" translate="yes" xml:space="preserve">
          <source>Responding to Browser Events</source>
          <target state="translated">Реагирование на события браузера</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="5dd10def5c86f482d9171ac3d500c6b0ae25364b" translate="yes" xml:space="preserve">
          <source>Resumes a test paused by &lt;code&gt;pauseTest&lt;/code&gt;.</source>
          <target state="translated">Возобновляет тест, приостановленный &lt;code&gt;pauseTest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c136ec01ad8662f631bfe9cf5dd76daebe9695f1" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a property from an Object, or a default value in the case that the property returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Извлекает значение свойства из объекта или значение по умолчанию в случае, если свойство возвращает &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f8358f1a7527129a6026137d59d3b142bea4da" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a property from the object.</source>
          <target state="translated">Получает стоимость имущества от объекта.</target>
        </trans-unit>
        <trans-unit id="c2507d71833d1926fc8ca2bfcba6650b2356a523" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a property, or a default value in the case that the property returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Извлекает значение свойства или значение по умолчанию в случае, если свойство возвращает &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9b109a01cbb856b78796ff1f23e3ed037d6d59e" translate="yes" xml:space="preserve">
          <source>Retrieving Multiple Records</source>
          <target state="translated">Получение нескольких записей</target>
        </trans-unit>
        <trans-unit id="f585070c87519f1f46d5aa282e338ef3ef4cffe8" translate="yes" xml:space="preserve">
          <source>Retrieving Related Model Records</source>
          <target state="translated">Получение соответствующих записей о моделях</target>
        </trans-unit>
        <trans-unit id="5763b513c21e726fa47e619aeec98e7a63c47120" translate="yes" xml:space="preserve">
          <source>Retrieving Related Records</source>
          <target state="translated">Получение сопутствующих записей</target>
        </trans-unit>
        <trans-unit id="3ea11ae149c9ff5b4ef4d8e06d23a82d3df6baab" translate="yes" xml:space="preserve">
          <source>Retrieving a Single Record</source>
          <target state="translated">Получение единой записи</target>
        </trans-unit>
        <trans-unit id="9cd9632ea5c6744340a949d9498150ea0dd8d956" translate="yes" xml:space="preserve">
          <source>Return a specific registered option for a particular factory.</source>
          <target state="translated">Возврат определенного зарегистрированного опциона для конкретного завода.</target>
        </trans-unit>
        <trans-unit id="29ebe6c216062fb1ce4cf798a7f1e3baeab920a9" translate="yes" xml:space="preserve">
          <source>Return registered options for a particular factory.</source>
          <target state="translated">Возврат зарегистрированных опций для конкретного завода.</target>
        </trans-unit>
        <trans-unit id="26b22776384430c648a6b859ff17b84f59ea040d" translate="yes" xml:space="preserve">
          <source>Return the new cumulative value.</source>
          <target state="translated">Возвратите новое кумулятивное значение.</target>
        </trans-unit>
        <trans-unit id="edee4fec8219eea58f41fb844b109d44f9727045" translate="yes" xml:space="preserve">
          <source>Return the registered options for all factories of a type.</source>
          <target state="translated">Вернуть зарегистрированные опции для всех заводов типа.</target>
        </trans-unit>
        <trans-unit id="3f2c37eae2ce5f96df692aaeedf57af072ef9d9e" translate="yes" xml:space="preserve">
          <source>Return to Step 1</source>
          <target state="translated">Вернуться к шагу 1</target>
        </trans-unit>
        <trans-unit id="86661c3a6c5cd6befa4e37cc90df459f0d9bf691" translate="yes" xml:space="preserve">
          <source>Return value from invoking the passed function. Please note, when called within an existing loop, no return value is possible.</source>
          <target state="translated">Возврат значения от вызова переданной функции.Обратите внимание,что при вызове в рамках существующего цикла возвращаемое значение невозможно.</target>
        </trans-unit>
        <trans-unit id="19e15fef1135e42fb3ddbd944fd5ba42b4c44461" translate="yes" xml:space="preserve">
          <source>Return values from a component with &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">Возвращаемые значения из компонента с &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f303cd37013bf328626e038174b28974872e0cbc" translate="yes" xml:space="preserve">
          <source>Returning a &lt;code&gt;DS.InvalidError&lt;/code&gt; from this method will cause the record to transition into the &lt;code&gt;invalid&lt;/code&gt; state and make the &lt;code&gt;errors&lt;/code&gt; object available on the record. When returning an &lt;code&gt;DS.InvalidError&lt;/code&gt; the store will attempt to normalize the error data returned from the server using the serializer's &lt;code&gt;extractErrors&lt;/code&gt; method.</source>
          <target state="translated">Возврат &lt;code&gt;DS.InvalidError&lt;/code&gt; из этого метода приведет к переходу записи в &lt;code&gt;invalid&lt;/code&gt; состояние и сделает объект &lt;code&gt;errors&lt;/code&gt; доступным в записи. При возврате &lt;code&gt;DS.InvalidError&lt;/code&gt; хранилище попытается нормализовать данные об ошибке, возвращаемые сервером, с помощью метода сериализатора &lt;code&gt;extractErrors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85b812af2c70b17fb4a0e4704404e2e2663bc781" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed function returns true for any item in the enumeration.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если переданная функция возвращает true для любого элемента в перечислении.</target>
        </trans-unit>
        <trans-unit id="0ca1e9e1279673b31d55774d9185dc03beed7b19" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed function returns true for every item in the enumeration. This corresponds with the &lt;code&gt;every()&lt;/code&gt; method in JavaScript 1.6.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; если переданная функция возвращает истину для каждого элемента в перечислении. Это соответствует методу &lt;code&gt;every()&lt;/code&gt; в JavaScript 1.6.</target>
        </trans-unit>
        <trans-unit id="48e8bff0730db4951905ce3907f251ae28d439c0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed object can be found in the array. This method is a Polyfill for ES 2016 Array.includes. If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the starting location to search is 0. If it's negative, searches from the index of &lt;code&gt;this.length + startAt&lt;/code&gt; by asc.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; если переданный объект можно найти в массиве. Этот метод представляет собой Polyfill для ES 2016 Array.includes. Если аргумент &lt;code&gt;startAt&lt;/code&gt; не указан, начальное местоположение для поиска - 0. Если оно отрицательное, поиск выполняется по индексу &lt;code&gt;this.length + startAt&lt;/code&gt; по asc.</target>
        </trans-unit>
        <trans-unit id="97d2d4c6d57998537e2ece3978bd7eda8781ffbc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed object can be found in the enumerable.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если переданный объект можно найти в перечисляемом.</target>
        </trans-unit>
        <trans-unit id="5e0cff20c4e03c114bb589de045dad56c4977ab9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed property resolves to the value of the second argument for all items in the enumerable. This method is often simpler/faster than using a callback.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если переданное свойство преобразуется в значение второго аргумента для всех элементов в перечисляемом. Этот метод часто проще / быстрее, чем использование обратного вызова.</target>
        </trans-unit>
        <trans-unit id="785710d311908f0da91ca0999d02fda0b1b3f90e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed property resolves to the value of the second argument for any item in the enumerable. This method is often simpler/faster than using a callback.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; если переданное свойство разрешается в значение второго аргумента для любого элемента в перечисляемом. Этот метод часто проще / быстрее, чем использование обратного вызова.</target>
        </trans-unit>
        <trans-unit id="125bbdbd31c014a3c75ab73874ead547c5f9f32b" translate="yes" xml:space="preserve">
          <source>Returns a consistent type for the passed object.</source>
          <target state="translated">Возвращает тип константы для переданного объекта.</target>
        </trans-unit>
        <trans-unit id="d5e31a7796519c4db2aefafeb16832aabfafcd9e" translate="yes" xml:space="preserve">
          <source>Returns a copy of the array with all &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; elements removed.</source>
          <target state="translated">Возвращает копию массива со всеми удаленными &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt; элементами.</target>
        </trans-unit>
        <trans-unit id="2b92287589187fde80aa3c9745f11bf4566c0019" translate="yes" xml:space="preserve">
          <source>Returns a hash containing the parameters of an ancestor route.</source>
          <target state="translated">Возвращает хэш,содержащий параметры маршрута предка.</target>
        </trans-unit>
        <trans-unit id="2703351044d1524246ab647abe9d450da6a2453f" translate="yes" xml:space="preserve">
          <source>Returns a jQuery object for this component's element. If you pass in a selector string, this method will return a jQuery object, using the current element as its buffer. For example, calling &lt;code&gt;component.$('li')&lt;/code&gt; will return a jQuery object containing all of the &lt;code&gt;li&lt;/code&gt; elements inside the DOM element of this component.</source>
          <target state="translated">Возвращает объект jQuery для этого элемента компонента. Если вы передадите строку селектора, этот метод вернет объект jQuery, используя текущий элемент в качестве своего буфера. Например, вызов &lt;code&gt;component.$('li')&lt;/code&gt; вернет объект jQuery, содержащий все элементы &lt;code&gt;li&lt;/code&gt; внутри элемента DOM этого компонента.</target>
        </trans-unit>
        <trans-unit id="8a47cf2c5ff6ea84daf5839f6f90517c7d1d2ada" translate="yes" xml:space="preserve">
          <source>Returns a jQuery object for this view's element. If you pass in a selector string, this method will return a jQuery object, using the current element as its buffer.</source>
          <target state="translated">Возвращает объект jQuery для элемента этого вида.Если передать в строке селектора,то этот метод вернет объект jQuery,используя текущий элемент в качестве его буфера.</target>
        </trans-unit>
        <trans-unit id="926fcdedb193ee950b728d011e0592df4e16f0a0" translate="yes" xml:space="preserve">
          <source>Returns a new array that is a slice of the receiver. This implementation uses the observable array methods to retrieve the objects for the new slice.</source>
          <target state="translated">Возвращает новый массив,который является срезом приемника.Эта реализация использует методы наблюдаемых массивов для получения объектов для нового среза.</target>
        </trans-unit>
        <trans-unit id="f490c002b2bf76e65c1ef0218a8c11e0b2f0ba00" translate="yes" xml:space="preserve">
          <source>Returns a new enumerable that contains only items containing a unique property value. The default implementation returns an array regardless of the receiver type.</source>
          <target state="translated">Возвращает новое перечисление,содержащее только элементы,содержащие уникальное значение свойства.Реализация по умолчанию возвращает массив независимо от типа получателя.</target>
        </trans-unit>
        <trans-unit id="bdd3af7ab7b2da54382d05f7328e37ab891fb2d3" translate="yes" xml:space="preserve">
          <source>Returns a new enumerable that contains only unique values. The default implementation returns an array regardless of the receiver type.</source>
          <target state="translated">Возвращает новое перечисление,содержащее только уникальные значения.Реализация по умолчанию возвращает массив независимо от типа приемника.</target>
        </trans-unit>
        <trans-unit id="31c2891af58e7eda6b60e3cadcd876d663730e1c" translate="yes" xml:space="preserve">
          <source>Returns a new enumerable that excludes the passed value. The default implementation returns an array regardless of the receiver type. If the receiver does not contain the value it returns the original enumerable.</source>
          <target state="translated">Возвращает новый пересчет,который исключает переданное значение.Реализация по умолчанию возвращает массив независимо от типа приемника.Если приемник не содержит значения,возвращает исходное перечисляемое.</target>
        </trans-unit>
        <trans-unit id="79b5522f2b1ae4f90cc466e02013320e2a3ad2b8" translate="yes" xml:space="preserve">
          <source>Returns a polymorphic relationship formatted as a JSON-API &quot;relationship object&quot;.</source>
          <target state="translated">Возвращает полиморфную связь,отформатированную как JSON-API &quot;объект связи&quot;.</target>
        </trans-unit>
        <trans-unit id="da5d72f3f51387291e0c92700f8ccbb22c667d59" translate="yes" xml:space="preserve">
          <source>Returns a promise that is fulfilled when all the given promises have been fulfilled, or rejected if any of them become rejected. The returned promise is fulfilled with a hash that has the same key names as the &lt;code&gt;promises&lt;/code&gt; object argument. If any of the values in the object are not promises, they will simply be copied over to the fulfilled object.</source>
          <target state="translated">Возвращает обещание, которое выполняется, когда все данные обещания были выполнены, или отклоняется, если какое-либо из них отклоняется. Возвращенное обещание выполняется с помощью хэша, который имеет те же имена ключей, что и аргумент объекта &lt;code&gt;promises&lt;/code&gt; . Если какие-либо значения в объекте не являются обещаниями, они будут просто скопированы в выполненный объект.</target>
        </trans-unit>
        <trans-unit id="82c815d0ca08ef29364305f689eaaae5497c95e1" translate="yes" xml:space="preserve">
          <source>Returns a promise that is fulfilled when all the given promises have been settled, or rejected if the passed parameters are invalid.</source>
          <target state="translated">Возвращает обещание,которое выполняется,когда все данные обещания были выполнены,или отклонено,если переданные параметры недействительны.</target>
        </trans-unit>
        <trans-unit id="6d3f9c4b4397f9ef81ee1535035150e16652f8d6" translate="yes" xml:space="preserve">
          <source>Returns a promise that is fulfilled when all the given promises have been settled. The return promise is fulfilled with an array of the states of the promises passed into the &lt;code&gt;promises&lt;/code&gt; array argument.</source>
          <target state="translated">Возвращает обещание, которое выполняется после выполнения всех заданных обещаний. Обещание возврата выполняется с помощью массива состояний обещаний, переданного в аргумент массива &lt;code&gt;promises&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6e385587e066b24048df3bceae7d07c05eb9136" translate="yes" xml:space="preserve">
          <source>Returns a relationship formatted as a JSON-API &quot;relationship object&quot;.</source>
          <target state="translated">Возвращает отношение,отформатированное как JSON-API &quot;объект отношения&quot;.</target>
        </trans-unit>
        <trans-unit id="52a97236412e0d9a5ce17c93a028e57570cea2e1" translate="yes" xml:space="preserve">
          <source>Returns a special object that can be used to observe individual properties on the array. Just get an equivalent property on this object and it will return an enumerable that maps automatically to the named key on the member objects.</source>
          <target state="translated">Возвращает специальный объект,с помощью которого можно наблюдать отдельные свойства массива.Просто получите эквивалентное свойство на этом объекте,и он вернет перечисление,которое автоматически сопоставляется с именованным ключом на объектах-членах массива.</target>
        </trans-unit>
        <trans-unit id="f1bb9132b749d70b8d6303a10f424698c9fb0eed" translate="yes" xml:space="preserve">
          <source>Returns a string representation which attempts to provide more information than Javascript's &lt;code&gt;toString&lt;/code&gt; typically does, in a generic way for all Ember objects.</source>
          <target state="translated">Возвращает строковое представление, которое пытается предоставить больше информации, чем обычно делает &lt;code&gt;toString&lt;/code&gt; в Javascript , общим способом для всех объектов Ember.</target>
        </trans-unit>
        <trans-unit id="1baffde3c198a82c1a9f24fd1699b9537bf5a9f0" translate="yes" xml:space="preserve">
          <source>Returns a unique id for the object. If the object does not yet have a guid, one will be assigned to it. You can call this on any object, &lt;code&gt;Ember.Object&lt;/code&gt;-based or not, but be aware that it will add a &lt;code&gt;_guid&lt;/code&gt; property.</source>
          <target state="translated">Возвращает уникальный идентификатор объекта. Если у объекта еще нет guid, он будет назначен ему. Вы можете вызвать это для любого объекта, на основе &lt;code&gt;Ember.Object&lt;/code&gt; или нет, но имейте в &lt;code&gt;_guid&lt;/code&gt; что он добавит свойство _guid .</target>
        </trans-unit>
        <trans-unit id="1f4ec976109d986b5a79d48479eb69b877f9ce1c" translate="yes" xml:space="preserve">
          <source>Returns an array mapped to the specified key.</source>
          <target state="translated">Возвращает массив,привязанный к указанному ключу.</target>
        </trans-unit>
        <trans-unit id="b64d16ac418315ac651a71cfd903dcf3f4c1950a" translate="yes" xml:space="preserve">
          <source>Returns an array mapped via the callback</source>
          <target state="translated">Возвращает массив,отображенный с помощью обратного вызова.</target>
        </trans-unit>
        <trans-unit id="829d878e18002574178651ec68a61b50ed634687" translate="yes" xml:space="preserve">
          <source>Returns an array with all of the items in the enumeration that the passed function returns true for. This method corresponds to &lt;code&gt;filter()&lt;/code&gt; defined in JavaScript 1.6.</source>
          <target state="translated">Возвращает массив со всеми элементами перечисления, для которых переданная функция возвращает true. Этот метод соответствует &lt;code&gt;filter()&lt;/code&gt; определенному в JavaScript 1.6.</target>
        </trans-unit>
        <trans-unit id="c71aa9a7da9062c13eb9514b5d81794253550ff0" translate="yes" xml:space="preserve">
          <source>Returns an array with all of the items in the enumeration where the passed function returns false. This method is the inverse of filter().</source>
          <target state="translated">Возвращает массив со всеми элементами перечисления,в котором переданная функция возвращает false.Этот метод является обратным по отношению к функции filter().</target>
        </trans-unit>
        <trans-unit id="78ff059f5f0f8f4ba1bb336fa61257c52bc1e554" translate="yes" xml:space="preserve">
          <source>Returns an array with just the items with the matched property. You can pass an optional second argument with the target value. Otherwise this will match any property that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Возвращает массив только с элементами с совпадающим свойством. Вы можете передать необязательный второй аргумент с целевым значением. В противном случае это будет соответствовать любому свойству, значение которого &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d725514851c9b11eac282307b62e805938ccc7" translate="yes" xml:space="preserve">
          <source>Returns an array with the items that do not have truthy values for key. You can pass an optional second argument with the target value. Otherwise this will match any property that evaluates to false.</source>
          <target state="translated">Возвращает массив с элементами,которые не имеют значений правды для ключа.Вы можете передать необязательный второй аргумент с целевым значением.В противном случае он будет совпадать с любым свойством,которое оценивается как ложное.</target>
        </trans-unit>
        <trans-unit id="1a3670a2d50cfc92881b423c60b1f1c2575feb6e" translate="yes" xml:space="preserve">
          <source>Returns an instance of the adapter for a given type. For example, &lt;code&gt;adapterFor('person')&lt;/code&gt; will return an instance of &lt;code&gt;App.PersonAdapter&lt;/code&gt;.</source>
          <target state="translated">Возвращает экземпляр адаптера для данного типа. Например, &lt;code&gt;adapterFor('person')&lt;/code&gt; вернет экземпляр &lt;code&gt;App.PersonAdapter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="673a33da06126a5640a2ab9e96c90786fc9c52f9" translate="yes" xml:space="preserve">
          <source>Returns an instance of the serializer for a given type. For example, &lt;code&gt;serializerFor('person')&lt;/code&gt; will return an instance of &lt;code&gt;App.PersonSerializer&lt;/code&gt;.</source>
          <target state="translated">Возвращает экземпляр сериализатора для заданного типа. Например, &lt;code&gt;serializerFor('person')&lt;/code&gt; вернет экземпляр &lt;code&gt;App.PersonSerializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57c8785371bfdb428b7960568f1bb17a9b411222" translate="yes" xml:space="preserve">
          <source>Returns an object that can be used to provide an owner to a manually created instance.</source>
          <target state="translated">Возвращает объект,который может быть использован для предоставления владельца созданного вручную экземпляра.</target>
        </trans-unit>
        <trans-unit id="fd2a4f6967074c15ba164a31f50b2fef12d1c233" translate="yes" xml:space="preserve">
          <source>Returns an object, whose keys are changed properties, and value is an [oldProp, newProp] array.</source>
          <target state="translated">Возвращает объект,ключами которого являются измененные свойства,а значением-массив [oldProp,newProp].</target>
        </trans-unit>
        <trans-unit id="eb72d59dd2b98c9d1f57e9369a6432daa8505854" translate="yes" xml:space="preserve">
          <source>Returns errors for a given attribute</source>
          <target state="translated">Возвращает ошибки для данного атрибута</target>
        </trans-unit>
        <trans-unit id="c53cee14bf3f2dd98c4f832e2cfc8603ac6576e6" translate="yes" xml:space="preserve">
          <source>Returns the Capitalized form of a string</source>
          <target state="translated">Возвращает капитализированную форму строки</target>
        </trans-unit>
        <trans-unit id="27bef32d6017037bf8ae7ec87140c840faa058d7" translate="yes" xml:space="preserve">
          <source>Returns the UpperCamelCase form of a string.</source>
          <target state="translated">Возвращает форму строки UpperCamelCase.</target>
        </trans-unit>
        <trans-unit id="3ea8d719e010027a981f551b7907ffaf6428b3c0" translate="yes" xml:space="preserve">
          <source>Returns the available classes a given type.</source>
          <target state="translated">Возвращает доступные классы данного типа.</target>
        </trans-unit>
        <trans-unit id="559a00b1190b2d1cae3fc144a9dbab5ae67bb15d" translate="yes" xml:space="preserve">
          <source>Returns the cached value for a property, if one exists. This can be useful for peeking at the value of a computed property that is generated lazily, without accidentally causing it to be created.</source>
          <target state="translated">Возвращает кэшированное значение свойства,если оно существует.Это может быть полезно для подглядывания за значением вычисленного свойства,которое генерируется лениво,не вызывая его случайного создания.</target>
        </trans-unit>
        <trans-unit id="c7c90e8f44c4bb41743551254bcbc3f92e3bc124" translate="yes" xml:space="preserve">
          <source>Returns the cached value of a computed property, if it exists. This allows you to inspect the value of a computed property without accidentally invoking it if it is intended to be generated lazily.</source>
          <target state="translated">Возвращает кэшированное значение вычисленного свойства,если оно существует.Это позволяет проверить значение вычисленного свойства без случайного обращения к нему,если оно предназначено для ленивого генерирования.</target>
        </trans-unit>
        <trans-unit id="fc4ee2b850450a7e973ddd1ed839152228fa5e24" translate="yes" xml:space="preserve">
          <source>Returns the controller of the current route, or a parent (or any ancestor) route in a route hierarchy.</source>
          <target state="translated">Возвращает контроллер текущего маршрута или родительский (или любой предковый)маршрут в иерархии маршрутов.</target>
        </trans-unit>
        <trans-unit id="9725708a8c5defae2f7c0cd978776509197591b1" translate="yes" xml:space="preserve">
          <source>Returns the current DOM element for the view.</source>
          <target state="translated">Возвращает текущий элемент DOM для вида.</target>
        </trans-unit>
        <trans-unit id="b98b32c89ebbfef46cceba77784cc4659c5bbd7e" translate="yes" xml:space="preserve">
          <source>Returns the current URL.</source>
          <target state="translated">Возвращает текущий URL.</target>
        </trans-unit>
        <trans-unit id="603c43d141eff0347fdae1c71f24b3fffbceee88" translate="yes" xml:space="preserve">
          <source>Returns the current path.</source>
          <target state="translated">Возвращает текущий путь.</target>
        </trans-unit>
        <trans-unit id="5f1aa9ae053c0edabb551d28c02b549a6462af84" translate="yes" xml:space="preserve">
          <source>Returns the currently active route name.</source>
          <target state="translated">Возвращает текущее активное имя маршрута.</target>
        </trans-unit>
        <trans-unit id="f9fe31d2ca8c909a9d417483d744e509af227d01" translate="yes" xml:space="preserve">
          <source>Returns the first item in the array for which the callback returns true. This method works similar to the &lt;code&gt;filter()&lt;/code&gt; method defined in JavaScript 1.6 except that it will stop working on the array once a match is found.</source>
          <target state="translated">Возвращает первый элемент в массиве, для которого обратный вызов возвращает истину. Этот метод работает аналогично методу &lt;code&gt;filter()&lt;/code&gt; определенному в JavaScript 1.6, за исключением того, что он перестанет работать с массивом, как только будет найдено совпадение.</target>
        </trans-unit>
        <trans-unit id="2e59a22f6a7f2a23baf41260a3a174ae4dda651e" translate="yes" xml:space="preserve">
          <source>Returns the first item with a property matching the passed value. You can pass an optional second argument with the target value. Otherwise this will match any property that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Возвращает первый элемент со свойством, соответствующим переданному значению. Вы можете передать необязательный второй аргумент с целевым значением. В противном случае это будет соответствовать любому свойству, значение которого &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5a026a77c75bacd53505cdcc6e9f209285cfdf2" translate="yes" xml:space="preserve">
          <source>Returns the index of the given object's first occurrence. If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the starting location to search is 0. If it's negative, will count backward from the end of the array. Returns -1 if no match is found.</source>
          <target state="translated">Возвращает индекс первого вхождения данного объекта. Если аргумент &lt;code&gt;startAt&lt;/code&gt; не указан, начальное местоположение для поиска - 0. Если оно отрицательное, будет отсчитываться в обратном порядке от конца массива. Возвращает -1, если совпадений не найдено.</target>
        </trans-unit>
        <trans-unit id="b0b515aad064fd3b288bb9d89c67df97fc51d2b5" translate="yes" xml:space="preserve">
          <source>Returns the index of the given object's last occurrence. If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the search starts from the last position. If it's negative, will count backward from the end of the array. Returns -1 if no match is found.</source>
          <target state="translated">Возвращает индекс последнего вхождения данного объекта. Если аргумент &lt;code&gt;startAt&lt;/code&gt; не указан, поиск начинается с последней позиции. Если он отрицательный, будет отсчитывать в обратном порядке от конца массива. Возвращает -1, если совпадений не найдено.</target>
        </trans-unit>
        <trans-unit id="53b4efc0ec12b66bfb72581aacfd1278f1182232" translate="yes" xml:space="preserve">
          <source>Returns the lowerCamelCase form of a string.</source>
          <target state="translated">Возвращает строку в форме нижнего кейса.</target>
        </trans-unit>
        <trans-unit id="9578d2b6bd478f1d1d2ab145665ede9e0378f6c2" translate="yes" xml:space="preserve">
          <source>Returns the model class for the particular &lt;code&gt;modelName&lt;/code&gt;.</source>
          <target state="translated">Возвращает класс модели для конкретного &lt;code&gt;modelName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bab782f8ac9d0f882b41382a9b9eba4f7d1cced" translate="yes" xml:space="preserve">
          <source>Returns the object at the given &lt;code&gt;index&lt;/code&gt;. If the given &lt;code&gt;index&lt;/code&gt; is negative or is greater or equal than the array length, returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Возвращает объект по заданному &lt;code&gt;index&lt;/code&gt; . Если данный &lt;code&gt;index&lt;/code&gt; отрицательный, больше или равен длине массива, возвращается значение &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3f7b4ca85546523dc009d25cb0b789a874b05c9" translate="yes" xml:space="preserve">
          <source>Returns the resolved model of a parent (or any ancestor) route in a route hierarchy. During a transition, all routes must resolve a model object, and if a route needs access to a parent route's model in order to resolve a model (or just reuse the model from a parent), it can call &lt;code&gt;this.modelFor(theNameOfParentRoute)&lt;/code&gt; to retrieve it. If the ancestor route's model was a promise, its resolved result is returned.</source>
          <target state="translated">Возвращает разрешенную модель родительского (или любого предка) маршрута в иерархии маршрутов. Во время перехода все маршруты должны разрешать объект модели, и если для маршрута требуется доступ к модели родительского маршрута, чтобы разрешить модель (или просто повторно использовать модель из родительского &lt;code&gt;this.modelFor(theNameOfParentRoute)&lt;/code&gt; ), он может вызвать this.modelFor (theNameOfParentRoute) для получить его. Если модель родительского маршрута была обещанием, возвращается его разрешенный результат.</target>
        </trans-unit>
        <trans-unit id="a84d41130ac37df9542127b00978dea35fe64b87" translate="yes" xml:space="preserve">
          <source>Returns the resource's ID.</source>
          <target state="translated">Возвращает идентификатор ресурса.</target>
        </trans-unit>
        <trans-unit id="bf66565ff73540d9dd7fc00f9444426f536c7d08" translate="yes" xml:space="preserve">
          <source>Returns the resource's attributes formatted as a JSON-API &quot;attributes object&quot;.</source>
          <target state="translated">Возвращает атрибуты ресурса,отформатированные как JSON-API &quot;объект атрибутов&quot;.</target>
        </trans-unit>
        <trans-unit id="415b933c18c5478e404754280a5d65c8ca1940a0" translate="yes" xml:space="preserve">
          <source>Returns the resource's relationships formatted as a JSON-API &quot;relationships object&quot;.</source>
          <target state="translated">Возвращает отношения ресурса,отформатированные как JSON-API &quot;объект отношений&quot;.</target>
        </trans-unit>
        <trans-unit id="afc70541a8fa4d9fce60946294448cc54071c811" translate="yes" xml:space="preserve">
          <source>Returns true if it is possible to catalog a list of available classes in the resolver for a given type.</source>
          <target state="translated">Возвращает true,если возможно каталогизировать список доступных классов в резольвере для данного типа.</target>
        </trans-unit>
        <trans-unit id="dbd27005b9eb80ac7f03ed6d41eccecffd320423" translate="yes" xml:space="preserve">
          <source>Returns true if the passed object is an array or Array-like.</source>
          <target state="translated">Возвращает true,если переданный объект является массивом или массивом.</target>
        </trans-unit>
        <trans-unit id="2cbfc0edc2a1571a31104dc3ac6c9e8701099f18" translate="yes" xml:space="preserve">
          <source>Returns true if the passed value is null or undefined. This avoids errors from JSLint complaining about use of ==, which can be technically confusing.</source>
          <target state="translated">Возвращает true,если переданное значение является нулевым или неопределенным.Это позволяет избежать ошибок из JSLint,жалующихся на использование ==,которые могут быть технически запутаны.</target>
        </trans-unit>
        <trans-unit id="cb7fd3ff2c053ac1f7adced8bb08e8be1c57f557" translate="yes" xml:space="preserve">
          <source>Reusing Route Context</source>
          <target state="translated">Контекст маршрута повторного использования</target>
        </trans-unit>
        <trans-unit id="f7a260f32f2ae28e993f2a321848e1adcfad19eb" translate="yes" xml:space="preserve">
          <source>Reverse objects in the array. Works just like &lt;code&gt;reverse()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Обратить объекты в массив. Работает так же, как &lt;code&gt;reverse()&lt;/code&gt; но совместим с KVO.</target>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">Route</target>
        </trans-unit>
        <trans-unit id="20bb4efd64b3d8c3fbab0cab5b9e525a3f5f3641" translate="yes" xml:space="preserve">
          <source>Route Handlers</source>
          <target state="translated">обработчики маршрутов</target>
        </trans-unit>
        <trans-unit id="6dcf16e1c5d3e9fd2ae4a4d54c174448fe43e1b6" translate="yes" xml:space="preserve">
          <source>Router</source>
          <target state="translated">Router</target>
        </trans-unit>
        <trans-unit id="15507cd11e5f36e3bd1000cd0d459f39fb04d158" translate="yes" xml:space="preserve">
          <source>Router and Route Handlers</source>
          <target state="translated">Маршрутизаторы и обработчики маршрутов</target>
        </trans-unit>
        <trans-unit id="eb04e4102ddcdddd2b4ad8996248c661dcd7e77f" translate="yes" xml:space="preserve">
          <source>RouterService</source>
          <target state="translated">RouterService</target>
        </trans-unit>
        <trans-unit id="a9d3b175c69e17dc9060b2a51d5088436b3d7c7d" translate="yes" xml:space="preserve">
          <source>RouterService  (public)</source>
          <target state="translated">РоутерСервис (общественный)</target>
        </trans-unit>
        <trans-unit id="bbe3002d2245379df83a5467ffff0fec18ef89e8" translate="yes" xml:space="preserve">
          <source>Routes and Templates</source>
          <target state="translated">Маршруты и шаблоны</target>
        </trans-unit>
        <trans-unit id="8987ca9f541ce3e64483abe2d701eb7b2b6a9540" translate="yes" xml:space="preserve">
          <source>Routes in this example application can now access the injected logger:</source>
          <target state="translated">Маршруты в этом примере приложения теперь могут получить доступ к впрыскиваемому логгеру:</target>
        </trans-unit>
        <trans-unit id="64588f6aefa7085fb2efbbcac558cdfba1c74948" translate="yes" xml:space="preserve">
          <source>Routes without dynamic segments will always execute the model hook.</source>
          <target state="translated">Маршруты без динамических сегментов всегда будут выполнять крюк модели.</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="1442914c6ee08b64a917d4c330cde7b015a3686d" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;ember t -s&lt;/code&gt; to verify that our new test is passing. To find the new test, locate &quot;Integration | Component | rental listing&quot; in the &quot;Module&quot; field of the test UI.</source>
          <target state="translated">Запустите &lt;code&gt;ember t -s&lt;/code&gt; , чтобы убедиться, что наш новый тест проходит. Чтобы найти новый тест, найдите &amp;laquo;Интеграция | Компонент | список аренды&amp;raquo; в поле &amp;laquo;Модуль&amp;raquo; пользовательского интерфейса теста.</target>
        </trans-unit>
        <trans-unit id="2dbbc67840c5e39c504d798d6593f53821d2cc88" translate="yes" xml:space="preserve">
          <source>Run a function meant for debugging.</source>
          <target state="translated">Запустите функцию,предназначенную для отладки.</target>
        </trans-unit>
        <trans-unit id="66a5ecdab45965e437f71333f302f2e5bab78442" translate="yes" xml:space="preserve">
          <source>Run in a full browser environment.</source>
          <target state="translated">Запустите полный браузер.</target>
        </trans-unit>
        <trans-unit id="edc3981913706bf02d5feb303f21804148ecbc99" translate="yes" xml:space="preserve">
          <source>Run the following command to install the addon:</source>
          <target state="translated">Для установки аддона выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="6f6ff3e3092b35d4ef3929076640b57e0d508a29" translate="yes" xml:space="preserve">
          <source>Run the tests again using the command &lt;code&gt;ember t -s&lt;/code&gt;, and toggle &quot;Hide passed tests&quot; to show your new passing test.</source>
          <target state="translated">Снова запустите тесты, используя команду &lt;code&gt;ember t -s&lt;/code&gt; , и переключите &amp;laquo;Скрыть пройденные тесты&amp;raquo;, чтобы показать ваш новый прохождение теста.</target>
        </trans-unit>
        <trans-unit id="113d8c01f0ce1a9637e7e61d07f886f1ce894435" translate="yes" xml:space="preserve">
          <source>Run time, where we begin executing the application once everything has loaded.</source>
          <target state="translated">Время выполнения,во время которого мы начинаем выполнение приложения после того,как все загружено.</target>
        </trans-unit>
        <trans-unit id="8cbc363f50b4971680e11de197253d5ebff17363" translate="yes" xml:space="preserve">
          <source>Run your tests with &lt;code&gt;ember test&lt;/code&gt; on the command-line. You can re-run your tests on every file-change with &lt;code&gt;ember test --server&lt;/code&gt;.</source>
          <target state="translated">Запустите свои тесты с помощью &lt;code&gt;ember test&lt;/code&gt; в командной строке. Вы можете повторно запускать свои тесты при каждом изменении файла с помощью &lt;code&gt;ember test --server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ce92b8f8a607252af27b98ddec45308f2f8137b" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;ember test --server&lt;/code&gt; will now show 7 failing tests (out of 15). Each of the 6 tests we setup above will fail, plus one ESLint test will fail saying, &lt;code&gt;assert is defined but never used&lt;/code&gt;. The tests above fail because QUnit requires at least one check for a specific condition (known as an &lt;code&gt;assert&lt;/code&gt;).</source>
          <target state="translated">Запуск &lt;code&gt;ember test --server&lt;/code&gt; теперь покажет 7 неудачных тестов (из 15). Каждый из 6 тестов, которые мы настроили выше, завершится ошибкой, плюс один тест ESLint завершится неудачно, говоря, что &lt;code&gt;assert is defined but never used&lt;/code&gt; . Вышеупомянутые тесты терпят неудачу, потому что QUnit требует хотя бы одной проверки определенного условия (известного как &lt;code&gt;assert&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="52d1f9fc84c72f964d3e2290880c642e3e33c2c8" translate="yes" xml:space="preserve">
          <source>Running this command generates three files: a component JavaScript file, a template, and a test file.</source>
          <target state="translated">При выполнении этой команды генерируются три файла:компонентный JavaScript-файл,шаблон и тестовый файл.</target>
        </trans-unit>
        <trans-unit id="42272791157160739ed302e320a2062a5ebaa316" translate="yes" xml:space="preserve">
          <source>Runs the passed target and method inside of a RunLoop, ensuring any deferred actions including bindings and views updates are flushed at the end.</source>
          <target state="translated">Запускает переданную цель и метод внутри RunLoop,гарантируя,что все отложенные действия,включая привязки и обновления представлений,будут промазаны в конце.</target>
        </trans-unit>
        <trans-unit id="429ee37aaa10a7c1e1dbc7f3832b6b87b1b491c2" translate="yes" xml:space="preserve">
          <source>SSR</source>
          <target state="translated">SSR</target>
        </trans-unit>
        <trans-unit id="3345733b5704ef652ed8eb46f076938ea03125bd" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;deleteRecord&lt;/code&gt;, but saves the record immediately.</source>
          <target state="translated">То же, что и &lt;code&gt;deleteRecord&lt;/code&gt; , но сразу сохраняет запись.</target>
        </trans-unit>
        <trans-unit id="4a7e069bd507c730311a8b251060b5b9997cb937" translate="yes" xml:space="preserve">
          <source>Sass/Less Comparison</source>
          <target state="translated">Меньшее сравнение</target>
        </trans-unit>
        <trans-unit id="25818b0851afccf72a718a0e15e8c5e40a99b3fc" translate="yes" xml:space="preserve">
          <source>Save the record and persist any changes to the record to an external source via the adapter.</source>
          <target state="translated">Сохраните запись и сохраните любые изменения записи на внешнем источнике через адаптер.</target>
        </trans-unit>
        <trans-unit id="6db7e04098ce89e31bb81c3fc95a3a70f998a013" translate="yes" xml:space="preserve">
          <source>Save this template and switch back to the &lt;code&gt;scientists&lt;/code&gt; template. Replace all our old code with our new componentized version. Components look like HTML tags but instead of using angle brackets (&lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt;) they use double curly braces (&lt;code&gt;{{component}}&lt;/code&gt;).</source>
          <target state="translated">Сохраните этот шаблон и вернитесь к шаблону &lt;code&gt;scientists&lt;/code&gt; . Замените весь наш старый код нашей новой компонентной версией. Компоненты выглядят как теги HTML, но вместо угловых скобок ( &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; ) они используют двойные фигурные скобки ( &lt;code&gt;{{component}}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="75008fab400537d9213cc7b35f572e830001bbbb" translate="yes" xml:space="preserve">
          <source>Saves all of the records in the &lt;code&gt;ManyArray&lt;/code&gt;.</source>
          <target state="translated">Сохраняет все записи в &lt;code&gt;ManyArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df3feb104ba2e45607091340bd579e0e82e620de" translate="yes" xml:space="preserve">
          <source>Saves all of the records in the &lt;code&gt;RecordArray&lt;/code&gt;.</source>
          <target state="translated">Сохраняет все записи в &lt;code&gt;RecordArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fe2b6866788c46de111214341e6e46e2056460c" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and expects the following payload when you update the &lt;code&gt;post&lt;/code&gt; model, which has a polymorphic &lt;code&gt;user&lt;/code&gt; relationship:</source>
          <target state="translated">Допустим, ваше пространство имен API определяет тип модели и ожидает следующую полезную нагрузку при обновлении модели &lt;code&gt;post&lt;/code&gt; , которая имеет полиморфные отношения &lt;code&gt;user&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d136d61c474d3b91c7e154860b021ed3fbba6838" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and expects the following payload when you update the &lt;code&gt;post&lt;/code&gt; model:</source>
          <target state="translated">Предположим, ваше пространство имен API определяет тип модели и ожидает следующую полезную нагрузку при обновлении модели &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ea662432dbe1c412446984e3028f23c30fe1a705" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and returns the following payload for the &lt;code&gt;post&lt;/code&gt; model, which has a polymorphic &lt;code&gt;user&lt;/code&gt; relationship:</source>
          <target state="translated">Предположим, ваше пространство имен API определяет тип модели и возвращает следующую полезную нагрузку для модели &lt;code&gt;post&lt;/code&gt; , которая имеет полиморфные отношения &lt;code&gt;user&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a903a2095a7bcdbfa11fb73fb67d71d335131cd8" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and returns the following payload for the &lt;code&gt;post&lt;/code&gt; model:</source>
          <target state="translated">Допустим, ваше пространство имен API определяет тип модели и возвращает следующую полезную нагрузку для модели &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bc16a7d79cd8b9582ffe6cf1c9f51f2a4e6b9968" translate="yes" xml:space="preserve">
          <source>Schedule a function to run one time during the current RunLoop. This is equivalent to calling &lt;code&gt;scheduleOnce&lt;/code&gt; with the &quot;actions&quot; queue.</source>
          <target state="translated">Запланируйте выполнение функции один раз в течение текущего цикла выполнения. Это эквивалентно вызову &lt;code&gt;scheduleOnce&lt;/code&gt; с очередью &amp;laquo;действий&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2fa9c050bafdf85859c52a24173e46d2b0a60bfa" translate="yes" xml:space="preserve">
          <source>Schedules a function to run one time in a given queue of the current RunLoop. Calling this method with the same queue/target/method combination will have no effect (past the initial call).</source>
          <target state="translated">Планирует выполнение функции один раз в заданной очереди текущего RunLoop.Вызов этого метода при той же комбинации очередь/цель/метод не будет иметь никакого эффекта (после первоначального вызова).</target>
        </trans-unit>
        <trans-unit id="415823adc474692ea63ccbfdd4bf9285fdf51e36" translate="yes" xml:space="preserve">
          <source>Schedules an item to run from within a separate run loop, after control has been returned to the system. This is equivalent to calling &lt;code&gt;run.later&lt;/code&gt; with a wait time of 1ms.</source>
          <target state="translated">Планирует запуск элемента в отдельном цикле выполнения после возврата управления в систему. Это эквивалентно вызову &lt;code&gt;run.later&lt;/code&gt; с временем ожидания 1 мс.</target>
        </trans-unit>
        <trans-unit id="2da8e5963f5b139e60b530201737776279520ba2" translate="yes" xml:space="preserve">
          <source>Second value to compare</source>
          <target state="translated">Второе значение для сравнения</target>
        </trans-unit>
        <trans-unit id="fbb14676cc33f6f4135e4da0888670ea8bff400b" translate="yes" xml:space="preserve">
          <source>Second, attribute and relationship names in the JSON API document should exactly match the name and casing of the &lt;code&gt;DS.attr()&lt;/code&gt;, &lt;code&gt;DS.belongsTo()&lt;/code&gt; and &lt;code&gt;DS.hasMany()&lt;/code&gt;, properties defined on the Model.</source>
          <target state="translated">Во-вторых, имена атрибутов и отношений в документе JSON API должны точно соответствовать имени и &lt;code&gt;DS.attr()&lt;/code&gt; , &lt;code&gt;DS.belongsTo()&lt;/code&gt; и &lt;code&gt;DS.hasMany()&lt;/code&gt; , определенных в модели.</target>
        </trans-unit>
        <trans-unit id="2505c754e96c76956a7be1f711c7c15d871a6591" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_findRecord&quot;&gt;findRecord&lt;/a&gt; if you would like to request this record from the backend.</source>
          <target state="translated">См. &lt;a href=&quot;#method_findRecord&quot;&gt;FindRecord,&lt;/a&gt; если вы хотите запросить эту запись из серверной части.</target>
        </trans-unit>
        <trans-unit id="e6b7139c565ccba6b41646265abe63665bc0e0fb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_peekAll&quot;&gt;peekAll&lt;/a&gt; to get an array of current records in the store, without waiting until a reload is finished.</source>
          <target state="translated">См. &lt;a href=&quot;#method_peekAll&quot;&gt;PeekAll,&lt;/a&gt; чтобы получить массив текущих записей в магазине, не дожидаясь завершения перезагрузки.</target>
        </trans-unit>
        <trans-unit id="886ff4d1e817dd0f2c949c0a7b4ce296faa34a4f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_peekRecord&quot;&gt;peekRecord&lt;/a&gt; to get the cached version of a record.</source>
          <target state="translated">См. &lt;a href=&quot;#method_peekRecord&quot;&gt;PeekRecord,&lt;/a&gt; чтобы получить кешированную версию записи.</target>
        </trans-unit>
        <trans-unit id="61ccab3b58667205608bc05c31f4f4471dba3cbc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_query&quot;&gt;query&lt;/a&gt; to only get a subset of records from the server.</source>
          <target state="translated">Просмотрите &lt;a href=&quot;#method_query&quot;&gt;запрос,&lt;/a&gt; чтобы получить только подмножество записей с сервера.</target>
        </trans-unit>
        <trans-unit id="46d9795971c80ea476d0b1500751d7a511c3ccff" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../passing-properties-to-a-component&quot;&gt;Passing Properties to a Component&lt;/a&gt; for more.</source>
          <target state="translated">См. &amp;laquo; &lt;a href=&quot;../passing-properties-to-a-component&quot;&gt;Передача свойств компоненту&amp;raquo;&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="3db6252e2ca3a79d9351ce05c47a2d29d1a3f0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component#event-names&quot;&gt;&quot;Event Names&quot;&lt;/a&gt; for a list of acceptable DOM event names.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component#event-names&quot;&gt;&amp;laquo;Имена событий&amp;raquo;&lt;/a&gt; для получения списка допустимых имен событий DOM.</target>
        </trans-unit>
        <trans-unit id="e8789001d899131f2e85e2f5f2831793db5bede0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ComputedProperty.html&quot;&gt;Ember.ComputedProperty&lt;/a&gt;, &lt;a href=&quot;https://emberjs.com/api/classes/Ember.computed.html&quot;&gt;Ember.computed&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ComputedProperty.html&quot;&gt;Ember.ComputedProperty&lt;/a&gt; , &lt;a href=&quot;https://emberjs.com/api/classes/Ember.computed.html&quot;&gt;Ember.computed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65ead4fce2d577717cfc6277eb28eb28c8681b44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt;Ember.LinkComponent&lt;/a&gt; for a complete list of overrideable properties. Be sure to also check out inherited properties of &lt;code&gt;LinkComponent&lt;/code&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt;Ember.LinkComponent&lt;/a&gt; для получения полного списка переопределяемых свойств. Не забудьте также проверить унаследованные свойства &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="045265cfa59bb6f41aaac98fec78959fdd19abe6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HashLocation&quot;&gt;Ember.Location.HashLocation&lt;/a&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HistoryLocation&quot;&gt;Ember.Location.HistoryLocation&lt;/a&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.NoneLocation&quot;&gt;Ember.Location.NoneLocation&lt;/a&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.AutoLocation&quot;&gt;Ember.Location.AutoLocation&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HashLocation&quot;&gt;Ember.Location.HashLocation&lt;/a&gt; . См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HistoryLocation&quot;&gt;Ember.Location.HistoryLocation&lt;/a&gt; . См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.NoneLocation&quot;&gt;Ember.Location.NoneLocation&lt;/a&gt; . См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.AutoLocation&quot;&gt;Ember.Location.AutoLocation&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01062a6ca91683116a2e4f5f08c832a71f5fe8f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt;Route.replaceWith&lt;/a&gt; for more info.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt;Route.replaceWith&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="857a99c53ed3cf0419cf7f9b690df0548804f0cb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt;Route.transitionTo&lt;/a&gt; for more info.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt;Route.transitionTo&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="881033150b0297e5f01d4a625bd73488021b52e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.String.html#method_loc&quot;&gt;Ember.String.loc&lt;/a&gt; for how to set up localized string references.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.String.html#method_loc&quot;&gt;Ember.String.loc,&lt;/a&gt; чтобы узнать, как настроить локализованные строковые ссылки.</target>
        </trans-unit>
        <trans-unit id="6112da6f0d617231dc4dbb1b45eeb398b827508d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;Ember.Templates.helpers.action&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;Ember.Templates.helpers.action&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e320b1d30f80cb3e78ed752a8fd867c8ef8c8dc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; for usage details.</source>
          <target state="translated">Подробнее об использовании см. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03d11afa96477f44a066fa485ba8101cf284b0ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt;Ember.Templates.helpers.textarea&lt;/a&gt; for usage details.</source>
          <target state="translated">Подробнее об использовании см. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt;Ember.Templates.helpers.textarea&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47faa79acc3c86a2306cd182fa2b1e0dd8b6cb51" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_yield&quot;&gt;Ember.Templates.helpers.yield&lt;/a&gt; for more information.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_yield&quot;&gt;Ember.Templates.helpers.yield&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="5d084a39940c5ca6a3dc230b8703de366598062d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/guides/templates/the-application-template/&quot;&gt;templates guide&lt;/a&gt; for additional information on using &lt;code&gt;{{outlet}}&lt;/code&gt; in &lt;code&gt;application.hbs&lt;/code&gt;. You may also specify a name for the &lt;code&gt;{{outlet}}&lt;/code&gt;, which is useful when using more than one &lt;code&gt;{{outlet}}&lt;/code&gt; in a template:</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/guides/templates/the-application-template/&quot;&gt;Руководство&lt;/a&gt; по шаблонам для получения дополнительной информации об использовании &lt;code&gt;{{outlet}}&lt;/code&gt; в &lt;code&gt;application.hbs&lt;/code&gt; . Вы также можете указать имя для &lt;code&gt;{{outlet}}&lt;/code&gt; , что полезно при использовании более одного &lt;code&gt;{{outlet}}&lt;/code&gt; в шаблоне:</target>
        </trans-unit>
        <trans-unit id="da7f7101e86e008a15c9fc249f9d10eeeb8ad692" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Ember.observer&lt;/code&gt;.</source>
          <target state="translated">См. &lt;code&gt;Ember.observer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6d38f9f2619d3888781eee8439db883f2023dd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Ember.on&lt;/code&gt;.</source>
          <target state="translated">См. &lt;code&gt;Ember.on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5654e29a2f9b281a9e8375d997a1390c911e728" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;serialize&lt;/code&gt; for information on how to customize the serialized form of a record.</source>
          <target state="translated">Смотрите &lt;code&gt;serialize&lt;/code&gt; для получения информации о том, как настроить сериализованную форму записи.</target>
        </trans-unit>
        <trans-unit id="c586195d203dee29ed62d91d26341ea7df6918eb" translate="yes" xml:space="preserve">
          <source>See Ember.Application.initializer for discussion on the usage of before and after.</source>
          <target state="translated">См.Ember.Application.initializer для обсуждения использования до и после.</target>
        </trans-unit>
        <trans-unit id="e38cd17e666018827e69a44432616458686394b7" translate="yes" xml:space="preserve">
          <source>See RSVP.Promise.catch.</source>
          <target state="translated">См.RSVP.Обещание поймать.</target>
        </trans-unit>
        <trans-unit id="392314b527dfbd25d9b7ed433a5cad392661aecf" translate="yes" xml:space="preserve">
          <source>See RSVP.Promise.finally.</source>
          <target state="translated">Смотрите RSVP.Обещание.Наконец-то.</target>
        </trans-unit>
        <trans-unit id="2192c68214bde1365823cd88f18083860287db7d" translate="yes" xml:space="preserve">
          <source>See RSVP.Promise.then.</source>
          <target state="translated">См.RSVP.Обещание.</target>
        </trans-unit>
        <trans-unit id="e4f6b4832e77e568563e9f9654dc677db5ef2bd6" translate="yes" xml:space="preserve">
          <source>See all observers for an object, key</source>
          <target state="translated">Смотрите все наблюдатели на объект,ключ</target>
        </trans-unit>
        <trans-unit id="f44d1816a0f33954c0c1b606d935226b15a7a275" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#method_replaceWith&quot;&gt;replaceWith&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;#method_replaceWith&quot;&gt;replaceWith&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65b6e8e3055ab3ad8943a84067c6dde10eeb6b38" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ControllerMixin.html#method_replaceRoute&quot;&gt;replaceRoute&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ControllerMixin.html#method_replaceRoute&quot;&gt;replaceRoute&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1131debc15fa7b2f9872d39240142f424b1f9d69" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember components&lt;/a&gt;</source>
          <target state="translated">Узнать больше о &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;компонентах Ember&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ba9f21e3fbfc35d0ad9d88b57d28f52f45794dc" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextArea.html&quot;&gt;Text Support Actions&lt;/a&gt;</source>
          <target state="translated">Узнать больше о &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextArea.html&quot;&gt;действиях текстовой поддержки&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8d27c03873709d7fb4d40eef28f6d91b6c1accb" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;Text Support Actions&lt;/a&gt;</source>
          <target state="translated">Узнать больше о &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;действиях текстовой поддержки&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aa5055098c1d7f1ee4bd170e24743c3af2dcaa6" translate="yes" xml:space="preserve">
          <source>See that we have used &lt;code&gt;moduleFor&lt;/code&gt;, one of the several unit-test helpers provided by Ember-Qunit. Test helpers provide us with some conveniences, such as the &lt;code&gt;subject&lt;/code&gt; function that handles lookup and instantiation for our object under test. Note that in a unit test you can customize the initialization of your object under test by passing to the &lt;code&gt;subject&lt;/code&gt; function an object containing the instance variables you would like to initialize. For example, to initialize the property 'foo' in our object under test, we would call &lt;code&gt;this.subject({ foo: 'bar' });&lt;/code&gt;</source>
          <target state="translated">Посмотрите, что мы использовали &lt;code&gt;moduleFor&lt;/code&gt; , один из нескольких помощников модульного тестирования, предоставляемых Ember-Qunit. Помощники по тестированию предоставляют нам некоторые удобства, такие как функция &lt;code&gt;subject&lt;/code&gt; которая обрабатывает поиск и создание экземпляра для нашего тестируемого объекта. Обратите внимание, что в модульном тесте вы можете настроить инициализацию вашего тестируемого объекта, передав функции- &lt;code&gt;subject&lt;/code&gt; объект, содержащий переменные экземпляра, которые вы хотите инициализировать. Например, чтобы инициализировать свойство 'foo' в нашем тестируемом объекте, мы должны вызвать &lt;code&gt;this.subject({ foo: 'bar' });&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae9382bccb52583673509854efe6c33c1551b8a4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://emberjs.com/guides/routing/rendering-a-template/&quot;&gt;routing guide&lt;/a&gt; for more information on how your &lt;code&gt;route&lt;/code&gt; interacts with the &lt;code&gt;{{outlet}}&lt;/code&gt; helper. Note: Your content &lt;strong&gt;will not render&lt;/strong&gt; if there isn't an &lt;code&gt;{{outlet}}&lt;/code&gt; for it.</source>
          <target state="translated">См. &lt;a href=&quot;https://emberjs.com/guides/routing/rendering-a-template/&quot;&gt;Руководство&lt;/a&gt; по маршрутизации для получения дополнительной информации о том, как ваш &lt;code&gt;route&lt;/code&gt; взаимодействует с помощником &lt;code&gt;{{outlet}}&lt;/code&gt; . Примечание. Ваш контент &lt;strong&gt;не будет отображаться,&lt;/strong&gt; если для него нет &lt;code&gt;{{outlet}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a57805751973ea57faaaae7c6e36d1170562cb5e" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;normalize&lt;/code&gt; documentation for more information.</source>
          <target state="translated">Дополнительную информацию см. В документации по &lt;code&gt;normalize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="466a6e9c7a1e57a171042a7f153306f2eec6b51f" translate="yes" xml:space="preserve">
          <source>See the Handlebars documentation on &lt;a href=&quot;http://handlebarsjs.com/#block-expressions&quot;&gt;block expressions&lt;/a&gt; for more.</source>
          <target state="translated">Подробнее см. Документацию Handlebars по &lt;a href=&quot;http://handlebarsjs.com/#block-expressions&quot;&gt;выражениям блоков&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f864ff30f39009bee652eeaa77b5d4e2cb3c219" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;Ember.EventDispatcher&lt;/code&gt; for more information.</source>
          <target state="translated">См. Документацию для &lt;code&gt;Ember.EventDispatcher&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="9d1186a24f13f7ddf3bb7bc489fbe38dfa0116f7" translate="yes" xml:space="preserve">
          <source>See the documentation on &lt;code&gt;Ember.Applications&lt;/code&gt;'s &lt;code&gt;rootElement&lt;/code&gt; for details.</source>
          <target state="translated">Обратитесь к документации по &lt;code&gt;Ember.Applications&lt;/code&gt; &amp;laquo;ы &lt;code&gt;rootElement&lt;/code&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="1adc341f4763a89fa8173df93fc2565a43324631" translate="yes" xml:space="preserve">
          <source>See the documentation on the &lt;code&gt;isBrowser&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;rootElement&lt;/code&gt; properties on &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; for details.</source>
          <target state="translated">Дополнительную информацию см. В документации по &lt;code&gt;isBrowser&lt;/code&gt; , &lt;code&gt;document&lt;/code&gt; и &lt;code&gt;rootElement&lt;/code&gt; на &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1824d460f7c3833816d20ccdd7e4598d1c806c7e" translate="yes" xml:space="preserve">
          <source>See the list of event names at the end of this page. Any event can be defined as an event handler in your component.</source>
          <target state="translated">См.список названий событий в конце этой страницы.Любое событие может быть определено как обработчик события в вашем компоненте.</target>
        </trans-unit>
        <trans-unit id="1a127955b9093eefeadddc3e86e6bc2ecfb11432" translate="yes" xml:space="preserve">
          <source>See {{#crossLink &quot;Ember.String/pluralize&quot;}}{{/crossLink}}</source>
          <target state="translated">Смотрите {{#crossLink &quot;Ember.String/pluralize&quot;}}}{{{/crossLink}}</target>
        </trans-unit>
        <trans-unit id="b2ec09c4221cd9352fad5f335a19d089d3aff099" translate="yes" xml:space="preserve">
          <source>See {{#crossLink &quot;Ember.String/singularize&quot;}}{{/crossLink}}</source>
          <target state="translated">Смотрите {{#crossLink &quot;Ember.String/singularize&quot;}}{{{/crossLink}}</target>
        </trans-unit>
        <trans-unit id="4908850b77074857fa2902c9a0c51ac951c3d066" translate="yes" xml:space="preserve">
          <source>Send an event. The execution of suspended listeners is skipped, and once listeners are removed. A listener without a target is executed on the passed object. If an array of actions is not passed, the actions stored on the passed object are invoked.</source>
          <target state="translated">Отправьте событие.Исполнение отстраненных слушателей пропускается,и как только слушатели удаляются.На переданном объекте выполняется слушатель без цели.Если массив действий не передан,то вызываются действия,хранящиеся на переданном объекте.</target>
        </trans-unit>
        <trans-unit id="a7cbd3195b0b1848a603028087345561cbdb3c83" translate="yes" xml:space="preserve">
          <source>Sending Actions</source>
          <target state="translated">Действия по отправке</target>
        </trans-unit>
        <trans-unit id="090be3d6246540fa8c78341d0fd9ec8bb7d44ef7" translate="yes" xml:space="preserve">
          <source>Sending from the Console to the Inspector</source>
          <target state="translated">Отправка из консоли инспектору</target>
        </trans-unit>
        <trans-unit id="064119347ce21be3830f42ad99fd305e6bb36ddb" translate="yes" xml:space="preserve">
          <source>Sending from the Inspector to the Console</source>
          <target state="translated">Отправка от Инспектора в Консоль</target>
        </trans-unit>
        <trans-unit id="37adf51f8e931f4ac6beffdc0bce4b8c9a345a4c" translate="yes" xml:space="preserve">
          <source>Sends a delete request for the record to the server.</source>
          <target state="translated">Отправляет запрос на удаление записи на сервер.</target>
        </trans-unit>
        <trans-unit id="291d83532f286c48f65ce13d9158d367234e5871" translate="yes" xml:space="preserve">
          <source>Sends an action to the router, which will delegate it to the currently active route hierarchy per the bubbling rules explained under &lt;code&gt;actions&lt;/code&gt;.</source>
          <target state="translated">Отправляет действие маршрутизатору, который делегирует его текущей активной иерархии маршрутов в соответствии с правилами восходящей маршрутизации, описанными в разделе &amp;laquo; &lt;code&gt;actions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21f60515d4413efa1948ac110388d426adab17c9" translate="yes" xml:space="preserve">
          <source>Serialize &lt;code&gt;belongsTo&lt;/code&gt; relationship when it is configured as an embedded object.</source>
          <target state="translated">Сериализовать отношение &lt;code&gt;belongsTo&lt;/code&gt; если оно настроено как внедренный объект.</target>
        </trans-unit>
        <trans-unit id="77f5a897d372d976dbdf3ed3fd84a1f9fe2c636a" translate="yes" xml:space="preserve">
          <source>Serializes &lt;code&gt;hasMany&lt;/code&gt; relationships when it is configured as embedded objects.</source>
          <target state="translated">Сериализует отношения &lt;code&gt;hasMany&lt;/code&gt; , когда он настроен как внедренные объекты.</target>
        </trans-unit>
        <trans-unit id="859739a640dcccec7d3c89114d041ab46afff14a" translate="yes" xml:space="preserve">
          <source>Serializes the record and sends it to the server.</source>
          <target state="translated">Сериализует запись и отправляет ее на сервер.</target>
        </trans-unit>
        <trans-unit id="aa92b22d8e89b667210a07e5334e64f079da918f" translate="yes" xml:space="preserve">
          <source>Serializes the record update and sends it to the server.</source>
          <target state="translated">Сериализует обновление записи и отправляет ее на сервер.</target>
        </trans-unit>
        <trans-unit id="761efa682a827fca2803f8da4a302dc39dc2208e" translate="yes" xml:space="preserve">
          <source>Serializing a &lt;code&gt;belongsTo&lt;/code&gt; relationship removes the property that refers to the parent record</source>
          <target state="translated">Сериализация отношения &lt;code&gt;belongsTo&lt;/code&gt; удаляет свойство, которое ссылается на родительскую запись</target>
        </trans-unit>
        <trans-unit id="5fe4ca86767cc1bd91544bb1b9f91724e637ec8b" translate="yes" xml:space="preserve">
          <source>Serializing a &lt;code&gt;hasMany&lt;/code&gt; relationship does not remove the property that refers to the parent record.</source>
          <target state="translated">Сериализация отношения &lt;code&gt;hasMany&lt;/code&gt; не удаляет свойство, которое ссылается на родительскую запись.</target>
        </trans-unit>
        <trans-unit id="b6798f213d4815c22490d46bda891a2bbd22a2a8" translate="yes" xml:space="preserve">
          <source>Serializing records</source>
          <target state="translated">Сериализация записей</target>
        </trans-unit>
        <trans-unit id="01fe9a20a8fdeb0f312fdcea1363c6a939cf772b" translate="yes" xml:space="preserve">
          <source>Server-Side Rendering</source>
          <target state="translated">Рендеринг на стороне сервера</target>
        </trans-unit>
        <trans-unit id="d4b08fda9668f41846dc7fb238475372e5a87571" translate="yes" xml:space="preserve">
          <source>Server-Side Rendering (also known as FastBoot)</source>
          <target state="translated">Рендеринг на стороне сервера (также известный как FastBoot)</target>
        </trans-unit>
        <trans-unit id="ddedf41976a8db9f179e56d77dad30a5828aa47a" translate="yes" xml:space="preserve">
          <source>Server-Side Resource Discovery</source>
          <target state="translated">Обнаружение ресурсов на стороне сервера</target>
        </trans-unit>
        <trans-unit id="626629d0773ba5b8e704de2a8cf4d1b2671d6966" translate="yes" xml:space="preserve">
          <source>Server-backed API calls that may not fit Ember Data.</source>
          <target state="translated">Вызовы API,поддерживаемые сервером,которые могут не соответствовать Ember Data.</target>
        </trans-unit>
        <trans-unit id="3788673593a9fb3cb0da7a56e2684739ac286fa2" translate="yes" xml:space="preserve">
          <source>Server-sent events or notifications.</source>
          <target state="translated">Отправляемые сервером события или уведомления.</target>
        </trans-unit>
        <trans-unit id="acca64b83535b9a1dff37a13cd176f393be7c195" translate="yes" xml:space="preserve">
          <source>Servers</source>
          <target state="translated">Servers</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">Service</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="8c95ce8ed53a712d7d11fe978a559e8aacdfb5cc" translate="yes" xml:space="preserve">
          <source>Services and Utilities</source>
          <target state="translated">Услуги и коммунальные услуги</target>
        </trans-unit>
        <trans-unit id="973e47a9c7779d6a3f292ac37ac9d79ba9c45893" translate="yes" xml:space="preserve">
          <source>Services are useful for features that require shared state or persistent connections. Example uses of services might include:</source>
          <target state="translated">Службы полезны для функций,требующих общего состояния или постоянных соединений.Примеры использования сервисов могут включать в себя:</target>
        </trans-unit>
        <trans-unit id="44de33fce9e667d81467d696283b746a2b89ae0f" translate="yes" xml:space="preserve">
          <source>Services can be generated using Ember CLI's &lt;code&gt;service&lt;/code&gt; generator. For example, the following command will create the &lt;code&gt;ShoppingCart&lt;/code&gt; service:</source>
          <target state="translated">Сервисы могут быть созданы с помощью генератора &lt;code&gt;service&lt;/code&gt; Ember CLI . Например, следующая команда создаст сервис &lt;code&gt;ShoppingCart&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f28ef67c082d95db9b197a590c7d6ac777b73ad0" translate="yes" xml:space="preserve">
          <source>Services must extend the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Service.html&quot;&gt;&lt;code&gt;Ember.Service&lt;/code&gt;&lt;/a&gt; base class:</source>
          <target state="translated">Сервисы должны расширять базовый класс &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Service.html&quot;&gt; &lt;code&gt;Ember.Service&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ac2ee51eb0d899834a5e76d58a0d52b264a8975b" translate="yes" xml:space="preserve">
          <source>Set a list of properties on an object. These properties are set inside a single &lt;code&gt;beginPropertyChanges&lt;/code&gt; and &lt;code&gt;endPropertyChanges&lt;/code&gt; batch, so observers will be buffered.</source>
          <target state="translated">Установите список свойств объекта. Эти свойства устанавливаются внутри одного &lt;code&gt;beginPropertyChanges&lt;/code&gt; и &lt;code&gt;endPropertyChanges&lt;/code&gt; , поэтому наблюдатели будут помещены в буфер .</target>
        </trans-unit>
        <trans-unit id="bb507d8cf4504dfd969277729f9d6cb3da94b46d" translate="yes" xml:space="preserve">
          <source>Set the value of a boolean property to the opposite of its current value.</source>
          <target state="translated">Установите значение булева свойства в противоположность его текущему значению.</target>
        </trans-unit>
        <trans-unit id="354b450dc637fea87122e449b4c6d64fd161d127" translate="yes" xml:space="preserve">
          <source>Set the value of a property to the current value minus some amount.</source>
          <target state="translated">Установите значение свойства на текущее значение минус некоторая сумма.</target>
        </trans-unit>
        <trans-unit id="0a474206fc22982beb1518f159723d7d5b1a7bd6" translate="yes" xml:space="preserve">
          <source>Set the value of a property to the current value plus some amount.</source>
          <target state="translated">Установите текущее значение свойства плюс некоторую сумму.</target>
        </trans-unit>
        <trans-unit id="022856defe2402ee0a7880769473d89d1b0fd118" translate="yes" xml:space="preserve">
          <source>Set this to provide an alternate class to &lt;code&gt;Ember.DefaultResolver&lt;/code&gt;</source>
          <target state="translated">Установите это, чтобы предоставить альтернативный класс &lt;code&gt;Ember.DefaultResolver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2871131570de12ffc4fe0e0fa49f2aa7a81352e" translate="yes" xml:space="preserve">
          <source>Sets a list of properties at once. These properties are set inside a single &lt;code&gt;beginPropertyChanges&lt;/code&gt; and &lt;code&gt;endPropertyChanges&lt;/code&gt; batch, so observers will be buffered.</source>
          <target state="translated">Устанавливает сразу список свойств. Эти свойства устанавливаются внутри одного &lt;code&gt;beginPropertyChanges&lt;/code&gt; и &lt;code&gt;endPropertyChanges&lt;/code&gt; , поэтому наблюдатели будут помещены в буфер .</target>
        </trans-unit>
        <trans-unit id="e54a99e025defe6d81185356e0087e36fb02c41f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;rel&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Устанавливает атрибут &lt;code&gt;rel&lt;/code&gt; HTML-элемента &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5e1f88540ae2f1f6c34ad87101fb61aaa2e4704" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;tabindex&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Устанавливает &lt;code&gt;tabindex&lt;/code&gt; атрибут &lt;code&gt;LinkComponent&lt;/code&gt; &amp;laquo;s HTML элемента.</target>
        </trans-unit>
        <trans-unit id="2bdac2845cc69ea660701ca0222c09a0c44c26f0" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;target&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Устанавливает &lt;code&gt;target&lt;/code&gt; атрибут HTML-элемента &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcf346b3d86476123ef32bd696299134f1d94520" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;title&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Устанавливает &lt;code&gt;title&lt;/code&gt; атрибута &lt;code&gt;LinkComponent&lt;/code&gt; &amp;laquo;s HTML элемента.</target>
        </trans-unit>
        <trans-unit id="b72787353f86d425923f841fb4aef6f74ac404b9" translate="yes" xml:space="preserve">
          <source>Sets the dependent keys on this computed property. Pass any number of arguments containing key paths that this computed property depends on.</source>
          <target state="translated">Устанавливает зависимые ключи на это вычисленное свойство.Передает любое количество аргументов,содержащих пути к ключам,от которых зависит это вычисленное свойство.</target>
        </trans-unit>
        <trans-unit id="8dcc21cc9416b36d9a48400e5dcfa0b900385d0e" translate="yes" xml:space="preserve">
          <source>Sets the provided key or path to the value.</source>
          <target state="translated">Устанавливает предоставленную клавишу или путь к значению.</target>
        </trans-unit>
        <trans-unit id="871a5db89a47b1c8ac126c47ae45dbaed6801707" translate="yes" xml:space="preserve">
          <source>Sets the value of a property on an object, respecting computed properties and notifying observers and other listeners of the change. If the property is not defined but the object implements the &lt;code&gt;setUnknownProperty&lt;/code&gt; method then that will be invoked as well.</source>
          <target state="translated">Устанавливает значение свойства объекта, учитывая вычисленные свойства и уведомляя наблюдателей и других слушателей об изменении. Если свойство не определено, но объект реализует метод &lt;code&gt;setUnknownProperty&lt;/code&gt; , он также будет вызван.</target>
        </trans-unit>
        <trans-unit id="290a8a4289954bb2a5ee87f2331ca5e9d2142b2b" translate="yes" xml:space="preserve">
          <source>Sets the value on the named property for each member. This is more ergonomic than using other methods defined on this helper. If the object implements Ember.Observable, the value will be changed to &lt;code&gt;set(),&lt;/code&gt; otherwise it will be set directly. &lt;code&gt;null&lt;/code&gt; objects are skipped.</source>
          <target state="translated">Устанавливает значение именованного свойства для каждого члена. Это более эргономично, чем использование других методов, определенных для этого помощника. Если объект реализует Ember.Observable, значение будет изменено на &lt;code&gt;set(),&lt;/code&gt; противном случае оно будет установлено напрямую. &lt;code&gt;null&lt;/code&gt; объекты пропускаются.</target>
        </trans-unit>
        <trans-unit id="b425d7e560cd8c0761f98a652da8de1351923229" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;sortQueryParams&lt;/code&gt; to a falsey value will respect the original order.</source>
          <target state="translated">Установка &lt;code&gt;sortQueryParams&lt;/code&gt; в значение false будет уважать исходный порядок.</target>
        </trans-unit>
        <trans-unit id="da33b396a5b97cdc6b9f02bcd176c913528421e0" translate="yes" xml:space="preserve">
          <source>Setting Computed Properties</source>
          <target state="translated">Установка вычислительных свойств</target>
        </trans-unit>
        <trans-unit id="b2159831f0f013e12890235b72b76c9ed8107ba6" translate="yes" xml:space="preserve">
          <source>Setting any dependent property will propagate changes through any computed properties that depend on them, all the way down the chain of computed properties you've created.</source>
          <target state="translated">Установка любого зависимого свойства будет распространять изменения через любые зависящие от них вычисленные свойства,всю цепочку вычисленных свойств,которые вы создали.</target>
        </trans-unit>
        <trans-unit id="5789f3a613624c39e98b0a04a128ab506fbe4ddc" translate="yes" xml:space="preserve">
          <source>Setting coalesceFindRequests to &lt;code&gt;true&lt;/code&gt; also works for &lt;code&gt;store.find&lt;/code&gt; requests and &lt;code&gt;belongsTo&lt;/code&gt; relationships accessed within the same runloop. If you set &lt;code&gt;coalesceFindRequests: true&lt;/code&gt;</source>
          <target state="translated">Установка coalesceFindRequests в &lt;code&gt;true&lt;/code&gt; также работает для &lt;code&gt;store.find&lt;/code&gt; запросов и &lt;code&gt;belongsTo&lt;/code&gt; отношений , доступа в том же runloop. Если вы установите &lt;code&gt;coalesceFindRequests: true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afe29c914c9d854075bf9ebee96af7585fe24770" translate="yes" xml:space="preserve">
          <source>Setting properties on the component in &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt;&lt;code&gt;didInsertElement()&lt;/code&gt;&lt;/a&gt; triggers a re-render, and for performance reasons, is not allowed.</source>
          <target state="translated">Установка свойств компонента в &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt; &lt;code&gt;didInsertElement()&lt;/code&gt; &lt;/a&gt; запускает повторный рендеринг и по соображениям производительности не допускается.</target>
        </trans-unit>
        <trans-unit id="f02aee210f24787a1e623ad68c0d1a1b060d3aeb" translate="yes" xml:space="preserve">
          <source>Setting query-params</source>
          <target state="translated">Установка параметров запроса</target>
        </trans-unit>
        <trans-unit id="3d7cc07cf937737b1517c6bf9374d4cc18998479" translate="yes" xml:space="preserve">
          <source>Setting up Data for the Nested Detail Route</source>
          <target state="translated">Настройка данных для вложенного детального маршрута</target>
        </trans-unit>
        <trans-unit id="04b56454c3e76a73bcf804097a9d07a7e2424bf3" translate="yes" xml:space="preserve">
          <source>Setup callbacks to be fired when the test helpers are injected into your application.</source>
          <target state="translated">Установка обратных вызовов,которые будут уволены,когда помощники теста будут введены в ваше приложение.</target>
        </trans-unit>
        <trans-unit id="7fd361ad8b078a558ea7b7da0dad0bbe6c028891" translate="yes" xml:space="preserve">
          <source>Several of the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;Ember.computed&lt;/a&gt; macros utilize the &lt;code&gt;[]&lt;/code&gt; key to implement common use-cases. For instance, to create a computed property that mapped properties from an array, you could use &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_map&quot;&gt;Ember.computed.map&lt;/a&gt; or build the computed property yourself:</source>
          <target state="translated">Некоторые макросы, &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;вычисленные Ember.com,&lt;/a&gt; используют ключ &lt;code&gt;[]&lt;/code&gt; для реализации общих сценариев использования . Например, для создания вычисляемого свойства, отображающего свойства из массива, вы можете использовать &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_map&quot;&gt;Ember.computed.map&lt;/a&gt; или самостоятельно построить вычисленное свойство:</target>
        </trans-unit>
        <trans-unit id="56671d09d11f94a0111d047a53973e69ddd5107c" translate="yes" xml:space="preserve">
          <source>Shadow DOM</source>
          <target state="translated">Shadow DOM</target>
        </trans-unit>
        <trans-unit id="a07efaea553500b80c6b1e25c2a1ad7f85b92746" translate="yes" xml:space="preserve">
          <source>Sharing Component Data with its Wrapped Content</source>
          <target state="translated">Обмен данными компонента с его обернутым содержимым</target>
        </trans-unit>
        <trans-unit id="5765ccb23e0fb8bade85df4ffb0d4efcfedb02e5" translate="yes" xml:space="preserve">
          <source>Shift an object from start of array or nil if none are left. Works just like &lt;code&gt;shift()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Сдвинуть объект с начала массива или nil, если ничего не осталось. Работает так же, как &lt;code&gt;shift()&lt;/code&gt; но совместим с KVO.</target>
        </trans-unit>
        <trans-unit id="bcb7f8e893a6eec69601e5f12cb167564cd7ea66" translate="yes" xml:space="preserve">
          <source>Should I use controllers in my application? I've heard they're going away!</source>
          <target state="translated">Должен ли я использовать контроллеры в моем приложении? Я слышал,что они уходят!</target>
        </trans-unit>
        <trans-unit id="6c4c063ccc2f6265cd6469510436e8100e2e23a9" translate="yes" xml:space="preserve">
          <source>Should actually retrieve the object at the specified index from the content. You can override this method in subclasses to transform the content item to something new.</source>
          <target state="translated">Должен действительно извлекать объект по указанному индексу из содержимого.Вы можете переопределить этот метод в подклассах,чтобы преобразовать элемент содержимого во что-то новое.</target>
        </trans-unit>
        <trans-unit id="e3cbebe0c33c59b226e4d26667ceeeb607570eb4" translate="yes" xml:space="preserve">
          <source>Show more details for a selected rental</source>
          <target state="translated">Показать более подробную информацию для выбранной аренды</target>
        </trans-unit>
        <trans-unit id="63295e39bc7e2edd921e15de80cf52a0162dce6f" translate="yes" xml:space="preserve">
          <source>Show rentals on the home page</source>
          <target state="translated">Показать аренду на главной странице</target>
        </trans-unit>
        <trans-unit id="a6df6bc849e9ed5bad5bd1b761e2d78888c983b9" translate="yes" xml:space="preserve">
          <source>Showing a property</source>
          <target state="translated">Показать собственность</target>
        </trans-unit>
        <trans-unit id="5feabe6b60582bbf4b541103f30632fee297466c" translate="yes" xml:space="preserve">
          <source>Sideloaded Data</source>
          <target state="translated">Боковая загрузка данных</target>
        </trans-unit>
        <trans-unit id="f5028052c614a640caa81611333680ece76b35e0" translate="yes" xml:space="preserve">
          <source>Silencing Deprecation Warnings During Compile</source>
          <target state="translated">Предупреждение об ослаблении изоляции во время сборки</target>
        </trans-unit>
        <trans-unit id="af61b24dae3801016bbf21366ede7ddbe142922e" translate="yes" xml:space="preserve">
          <source>Similar to how the default &lt;code&gt;loading&lt;/code&gt; event handlers are implemented, the default &lt;code&gt;error&lt;/code&gt; handlers will look for an appropriate error substate to enter, if one can be found.</source>
          <target state="translated">Подобно тому, как реализованы обработчики событий &lt;code&gt;loading&lt;/code&gt; по умолчанию, обработчики &lt;code&gt;error&lt;/code&gt; по умолчанию будут искать соответствующее подсостояние ошибки для ввода, если оно может быть найдено.</target>
        </trans-unit>
        <trans-unit id="717acf41849b10523800fa58b23cc2b20a9ef6da" translate="yes" xml:space="preserve">
          <source>Similar to map, this specialized function returns the value of the named property on all items in the enumeration.</source>
          <target state="translated">Подобно карте,эта специализированная функция возвращает значение именованного свойства на всех элементах перечисления.</target>
        </trans-unit>
        <trans-unit id="74e714802d7db3b86e903677715205f93a921c22" translate="yes" xml:space="preserve">
          <source>Similarly, if your backend store provides data in a format other than JSON API, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt;&lt;code&gt;normalizeResponse()&lt;/code&gt;&lt;/a&gt; hook. Using the same example as above, if the server provides data that looks like:</source>
          <target state="translated">Точно так же, если ваше внутреннее хранилище предоставляет данные в формате, отличном от JSON API, вы можете использовать ловушку &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt; &lt;code&gt;normalizeResponse()&lt;/code&gt; &lt;/a&gt; . Используя тот же пример, что и выше, если сервер предоставляет данные, которые выглядят так:</target>
        </trans-unit>
        <trans-unit id="e5ba23a2acdb58eae654126aeb02c16cfa736653" translate="yes" xml:space="preserve">
          <source>Similarly, in response to a &lt;code&gt;GET&lt;/code&gt; request for &lt;code&gt;/posts&lt;/code&gt;, the JSON should look like this:</source>
          <target state="translated">Точно так же в ответ на запрос &lt;code&gt;GET&lt;/code&gt; для &lt;code&gt;/posts&lt;/code&gt; JSON должен выглядеть так:</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">Простой пример</target>
        </trans-unit>
        <trans-unit id="5d072a0f490db522bd703110a84349b2f76d1d40" translate="yes" xml:space="preserve">
          <source>Simple Transition Example</source>
          <target state="translated">Простой пример перехода</target>
        </trans-unit>
        <trans-unit id="7b4ed4e4198e38ae80e5b6a6af9aeb8f248f3233" translate="yes" xml:space="preserve">
          <source>Simply converts the enumerable into a genuine array. The order is not guaranteed. Corresponds to the method implemented by Prototype.</source>
          <target state="translated">Просто преобразует бесчисленное в настоящий массив.Заказ не гарантирован.Соответствует методу,реализованному в Prototype.</target>
        </trans-unit>
        <trans-unit id="fe202f68e7bb9a71a693a3787ee7684995266c8a" translate="yes" xml:space="preserve">
          <source>Simply define a template called &lt;code&gt;loading&lt;/code&gt; (and optionally a corresponding route) that Ember will transition to. The intermediate transition into the loading substate happens immediately (synchronously), the URL won't be updated, and, unlike other transitions, the currently active transition won't be aborted.</source>
          <target state="translated">Просто определите шаблон под названием &lt;code&gt;loading&lt;/code&gt; (и, возможно, соответствующий маршрут), к которому будет переходить Ember. Промежуточный переход в подсостояние загрузки происходит немедленно (синхронно), URL-адрес не обновляется, и, в отличие от других переходов, текущий активный переход не будет прерван.</target>
        </trans-unit>
        <trans-unit id="97cf625e23a87e8fb775cd15dcb177e76da7d713" translate="yes" xml:space="preserve">
          <source>Simulates a key event type, e.g. &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt; with the desired keyCode on element found by the selector.</source>
          <target state="translated">Имитирует ключевой тип события, например , &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keyup&lt;/code&gt; с желаемой KeyCode на элементе найдено селектором.</target>
        </trans-unit>
        <trans-unit id="9d573de332969d08498e24e616e22a931b37eb39" translate="yes" xml:space="preserve">
          <source>Simulates a key event, e.g. &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt; with the desired keyCode Example:</source>
          <target state="translated">Имитирует ключевое событие, например , &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keyup&lt;/code&gt; с желаемым KEYCODE Пример:</target>
        </trans-unit>
        <trans-unit id="fe22422d207cd0772ccfa88aaa36392c7d87ecf6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;didUpdateAttrs&lt;/code&gt; is called prior to rerender, you can use this hook to execute code when specific attributes are changed. This hook can be an effective alternative to an observer, as it will run prior to a re-render, but after an attribute has changed.</source>
          <target state="translated">Поскольку &lt;code&gt;didUpdateAttrs&lt;/code&gt; вызывается до повторной визуализации, вы можете использовать эту ловушку для выполнения кода при изменении определенных атрибутов. Этот хук может быть эффективной альтернативой наблюдателю, поскольку он будет запускаться до повторного рендеринга, но после изменения атрибута.</target>
        </trans-unit>
        <trans-unit id="b527d855f262ec89fbcbd6c18de1d551d43311d9" translate="yes" xml:space="preserve">
          <source>Since Ember addons are npm packages, &lt;code&gt;ember install&lt;/code&gt; installs them in the &lt;code&gt;node_modules&lt;/code&gt; directory, and makes an entry in &lt;code&gt;package.json&lt;/code&gt;. Be sure to restart your server after the addon has installed successfully. Restarting the server will incorporate the new CSS and refreshing the browser window will give you this:</source>
          <target state="translated">Поскольку надстройки Ember представляют собой пакеты npm, &lt;code&gt;ember install&lt;/code&gt; устанавливает их в каталог &lt;code&gt;node_modules&lt;/code&gt; и делает запись в &lt;code&gt;package.json&lt;/code&gt; . Обязательно перезапустите сервер после успешной установки надстройки. При перезапуске сервера будет добавлен новый CSS, а обновление окна браузера даст вам следующее:</target>
        </trans-unit>
        <trans-unit id="5760823c11d76bb4f0f8aa397fbe539249ff2741" translate="yes" xml:space="preserve">
          <source>Since a JSON API Document can have meta defined in multiple locations you can use the specific serializer hooks if you need to customize the meta.</source>
          <target state="translated">Так как JSON API документ может иметь мету,определенную в нескольких местах,вы можете использовать специальные крючки сериалайзера,если вам нужно настроить мета.</target>
        </trans-unit>
        <trans-unit id="a3a256154d2dce95ced059699c91ae1f2f5c9d2c" translate="yes" xml:space="preserve">
          <source>Since a route's &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_beforeModel&quot;&gt;&lt;code&gt;beforeModel()&lt;/code&gt;&lt;/a&gt; executes before the &lt;code&gt;model()&lt;/code&gt; hook, it's a good place to do a redirect if you don't need any information that is contained in the model.</source>
          <target state="translated">Поскольку &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_beforeModel&quot;&gt; &lt;code&gt;beforeModel()&lt;/code&gt; &lt;/a&gt; маршрута выполняется до хука &lt;code&gt;model()&lt;/code&gt; , это хорошее место для перенаправления, если вам не нужна какая-либо информация, содержащаяся в модели.</target>
        </trans-unit>
        <trans-unit id="1df2b7cd90ba8966b9e8733c80dc430ec4b6a752" translate="yes" xml:space="preserve">
          <source>Since our component is expecting the filter process to be asynchronous, we return promises from our filter, using &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html&quot;&gt;Ember's RSVP library&lt;/a&gt;.</source>
          <target state="translated">Поскольку наш компонент ожидает, что процесс фильтрации будет асинхронным, мы возвращаем обещания из нашего фильтра, используя &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html&quot;&gt;библиотеку RSVP Ember&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="410a75600d988e5e0052e587fd06ad0d2fe20811" translate="yes" xml:space="preserve">
          <source>Since our data is hard-coded in Mirage, we know that there is only one rental with a city name of &quot;Seattle&quot;, so we assert that the number of listings is one and that the location it displays is named, &quot;Seattle&quot;.</source>
          <target state="translated">Так как наши данные жестко закодированы в Mirage,мы знаем,что есть только один прокат с названием города &quot;Сиэтл&quot;,поэтому мы утверждаем,что количество объявлений одно,и что место,которое он отображает,называется &quot;Сиэтл&quot;.</target>
        </trans-unit>
        <trans-unit id="ba722444287b7c4015475cc81a6d6d752afc68bd" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;didReceiveAttrs&lt;/code&gt; hook is called every time a component's attributes are updated whether on render or re-render, you can use the hook to effectively act as an observer, ensuring code is executed every time an attribute changes.</source>
          <target state="translated">Поскольку &lt;code&gt;didReceiveAttrs&lt;/code&gt; вызывается каждый раз, когда атрибуты компонента обновляются при рендеринге или повторном рендеринге, вы можете использовать ловушку, чтобы эффективно действовать в качестве наблюдателя, обеспечивая выполнение кода при каждом изменении атрибута.</target>
        </trans-unit>
        <trans-unit id="28d7c278a30e6ec4d4f3023b775fa6840cb84e97" translate="yes" xml:space="preserve">
          <source>Since the specific &lt;code&gt;id&lt;/code&gt; of the &lt;code&gt;user&lt;/code&gt; is not known beforehand, we can use &lt;code&gt;queryRecord&lt;/code&gt; to get the user:</source>
          <target state="translated">Поскольку конкретный &lt;code&gt;id&lt;/code&gt; из &lt;code&gt;user&lt;/code&gt; не известно заранее, мы можем использовать &lt;code&gt;queryRecord&lt;/code&gt; , чтобы заставить пользователя:</target>
        </trans-unit>
        <trans-unit id="51f0b4a52b8cebee35dc789d53b13ace54ffb771" translate="yes" xml:space="preserve">
          <source>Since there is no access to jQuery in the non-browser environment, you must also specify a DOM &lt;code&gt;Element&lt;/code&gt; object in the same &lt;code&gt;document&lt;/code&gt; for the &lt;code&gt;rootElement&lt;/code&gt; option (as opposed to a selector string like &lt;code&gt;&quot;body&quot;&lt;/code&gt;).</source>
          <target state="translated">Поскольку нет доступа к jQuery в среде, отличной от браузера, вы также должны указать объект DOM &lt;code&gt;Element&lt;/code&gt; в том же &lt;code&gt;document&lt;/code&gt; для параметра &lt;code&gt;rootElement&lt;/code&gt; (в отличие от строки селектора, такой как &lt;code&gt;&quot;body&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bd76475c68e526debe88fcdc606730652138849e" translate="yes" xml:space="preserve">
          <source>Since we added &lt;code&gt;:rental_id&lt;/code&gt; to the &lt;code&gt;show&lt;/code&gt; path in our router, &lt;code&gt;rental_id&lt;/code&gt; is now available in our &lt;code&gt;model&lt;/code&gt; hook. When we call &lt;code&gt;this.get('store').findRecord('rental', params.rental_id)&lt;/code&gt;, Ember Data queries &lt;code&gt;/rentals/our-id&lt;/code&gt; using a HTTP GET request (&lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;learn more about that here&lt;/a&gt;).</source>
          <target state="translated">Поскольку мы добавили &lt;code&gt;:rental_id&lt;/code&gt; в путь &lt;code&gt;show&lt;/code&gt; в нашем маршрутизаторе, &lt;code&gt;rental_id&lt;/code&gt; теперь доступен в нашем &lt;code&gt;model&lt;/code&gt; хуке. Когда мы вызываем &lt;code&gt;this.get('store').findRecord('rental', params.rental_id)&lt;/code&gt; , Ember Data запрашивает &lt;code&gt;/rentals/our-id&lt;/code&gt; с помощью HTTP-запроса GET ( &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;подробнее об этом здесь&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a193b3400008fcdd68f61cf30910ac15e02de1ad" translate="yes" xml:space="preserve">
          <source>Since we have already set up Ember Mirage in our development environment, Mirage will return the data we requested without actually making a network request.</source>
          <target state="translated">Так как мы уже установили Ember Mirage в нашей среде разработки,Mirage вернет данные,которые мы запрашивали,без реального запроса сети.</target>
        </trans-unit>
        <trans-unit id="d50f255275c91b6d41ca18a9a609fd25ba369850" translate="yes" xml:space="preserve">
          <source>Since we haven't added any functionality to our application yet, we'll use this first test to get started on running tests in our app.</source>
          <target state="translated">Поскольку мы еще не добавили никакой функциональности в наше приложение,мы воспользуемся этим первым тестом,чтобы начать запускать тесты в нашем приложении.</target>
        </trans-unit>
        <trans-unit id="59ca8024809d59f43c02b2a1ec4a73e4e2d23ac4" translate="yes" xml:space="preserve">
          <source>Since we want to remove this namespace, we can define a serializer for the application that will remove &quot;blog/&quot; from the payload key whenver it's encountered by Ember Data:</source>
          <target state="translated">Так как мы хотим удалить это пространство имён,мы можем определить сериализатор для приложения,которое удалит &quot;blog/&quot; из ключа полезной нагрузки,с которым сталкивается Ember Data:</target>
        </trans-unit>
        <trans-unit id="a516a3ce4b9fd1e3a2a9186564fe4ca0d9da8218" translate="yes" xml:space="preserve">
          <source>Skipping tests</source>
          <target state="translated">Пропускные тесты</target>
        </trans-unit>
        <trans-unit id="de370e832d39727a0c5b9309d06edd07070c125e" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; is shorthand for: &lt;code&gt;{ serialize: 'records', deserialize: 'records' }&lt;/code&gt;</source>
          <target state="translated">Итак, &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; - это сокращение для: &lt;code&gt;{ serialize: 'records', deserialize: 'records' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92b64ffe3c61fe82b2f00e41e184a5ff233a2011" translate="yes" xml:space="preserve">
          <source>So far in our example, the action we have passed to &lt;code&gt;button-with-confirmation&lt;/code&gt; is a function that accepts one argument, &lt;code&gt;messageType&lt;/code&gt;. Suppose we want to extend this by allowing &lt;code&gt;sendMessage&lt;/code&gt; to take a second argument, the actual text of the message the user is sending:</source>
          <target state="translated">До сих пор в нашем примере действие, которое мы передали &lt;code&gt;button-with-confirmation&lt;/code&gt; - это функция, которая принимает один аргумент, &lt;code&gt;messageType&lt;/code&gt; . Предположим, мы хотим расширить это, разрешив &lt;code&gt;sendMessage&lt;/code&gt; принимать второй аргумент, фактический текст сообщения, отправляемого пользователем:</target>
        </trans-unit>
        <trans-unit id="860179c222e257dfd377a3ba0841f6fa360f92ff" translate="yes" xml:space="preserve">
          <source>So far, our app is directly showing the user data from our Ember Data models. As our app grows, we will want to manipulate data further before presenting it to our users. For this reason, Ember offers Handlebars template helpers to decorate the data in our templates. Let's use a handlebars helper to allow our users to quickly see if a property is &quot;Standalone&quot; or part of a &quot;Community&quot;.</source>
          <target state="translated">Пока наше приложение показывает непосредственно пользовательские данные из наших моделей Ember Data.По мере роста нашего приложения мы захотим еще больше манипулировать данными перед тем,как представить их нашим пользователям.Поэтому Ember предлагает помощники для шаблонов Handlebars,которые украшают данные в наших шаблонах.Давайте воспользуемся помощником панели управления,чтобы наши пользователи могли быстро увидеть,является ли свойство &quot;Автономным&quot; или частью &quot;Сообщества&quot;.</target>
        </trans-unit>
        <trans-unit id="4beaba805d3a97bce58afc2f7cb86863c0470f86" translate="yes" xml:space="preserve">
          <source>So far, your application is listing data, but there is no way for the user to interact with the information. In web applications you often want to listen for user events like clicks or hovers. Ember makes this easy to do. First add an &lt;code&gt;action&lt;/code&gt; helper to the &lt;code&gt;li&lt;/code&gt; in your &lt;code&gt;people-list&lt;/code&gt; component.</source>
          <target state="translated">Пока ваше приложение перечисляет данные, но у пользователя нет возможности взаимодействовать с информацией. В веб-приложениях вы часто хотите отслеживать пользовательские события, такие как щелчки или наведение курсора. Ember позволяет легко это сделать. Сначала добавьте помощника &lt;code&gt;action&lt;/code&gt; к &lt;code&gt;li&lt;/code&gt; в вашем компоненте &lt;code&gt;people-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82dbd01dbf5e166342277657acc79af70412fa18" translate="yes" xml:space="preserve">
          <source>So this change to &lt;code&gt;firstName&lt;/code&gt; was observed by &lt;code&gt;fullName&lt;/code&gt; computed property, which was itself observed by the &lt;code&gt;description&lt;/code&gt; property.</source>
          <target state="translated">Таким образом, это изменение &lt;code&gt;firstName&lt;/code&gt; наблюдалось вычисляемым свойством &lt;code&gt;fullName&lt;/code&gt; , которое само наблюдалось свойством &lt;code&gt;description&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c179ab2cf598954fd3d4e13b9ad80cb323f34c9" translate="yes" xml:space="preserve">
          <source>So too with JSON API. By using JSON API to interop between your Ember app and your server, you can entirely change your backend stack without breaking your frontend. And as you add apps for other platforms, such as iOS and Android, you will be able to leverage JSON API libraries for those platforms to easily consume the same API your Ember app uses.</source>
          <target state="translated">Так же как и с JSON API.Используя JSON API для взаимодействия между вашим приложением Ember и вашим сервером,вы можете полностью изменить ваш бэкэнд-стек,не ломая ваш фронтэнд.И по мере добавления приложений для других платформ,таких как iOS и Android,вы сможете использовать библиотеки JSON API для этих платформ,чтобы легко использовать тот же самый API,который использует ваше Ember приложение.</target>
        </trans-unit>
        <trans-unit id="1b4ae5f1c58dc8bb8ea15838b3e9682246652530" translate="yes" xml:space="preserve">
          <source>So, how can we provide some visual feedback during the transition?</source>
          <target state="translated">Итак,как мы можем обеспечить визуальную обратную связь во время перехода?</target>
        </trans-unit>
        <trans-unit id="fd7b7f2884ce4c1630ffc4f76897bd0d01d7ef54" translate="yes" xml:space="preserve">
          <source>So, if we want to display a purchase total we can pass the value into the template in cents:</source>
          <target state="translated">Таким образом,если мы хотим отобразить общую сумму покупки,мы можем передать значение в шаблоне в центах:</target>
        </trans-unit>
        <trans-unit id="820ab04fe6d1513548b6823192b5113a17600f54" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;JSONAPIAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request.</source>
          <target state="translated">Некоторым API-интерфейсам требуются заголовки HTTP, например, для предоставления ключа API. Произвольные заголовки могут быть установлены в виде пар ключ / значение на &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &amp;laquo;сек &lt;code&gt;headers&lt;/code&gt; объекта и Ember данных будет отправить их вместе с каждым запросом AJAX.</target>
        </trans-unit>
        <trans-unit id="8b2ac0c846f9c6b1368c32fcb57645817bd2729e" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;RESTAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request.</source>
          <target state="translated">Некоторым API-интерфейсам требуются заголовки HTTP, например, для предоставления ключа API. Произвольные заголовки могут быть установлены в виде пар ключ / значение на &lt;code&gt;RESTAdapter&lt;/code&gt; &amp;laquo;s &lt;code&gt;headers&lt;/code&gt; объекта и Ember данных будет отправить их вместе с каждым запросом AJAX.</target>
        </trans-unit>
        <trans-unit id="1ff79da2240d73d23b85815d98e514154e6babb3" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;RESTAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request. For dynamic headers see &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.RESTAdapter.html#toc_headers-customization&quot;&gt;headers customization&lt;/a&gt;.</source>
          <target state="translated">Некоторым API-интерфейсам требуются заголовки HTTP, например, для предоставления ключа API. Произвольные заголовки могут быть установлены в виде пар ключ / значение на &lt;code&gt;RESTAdapter&lt;/code&gt; &amp;laquo;s &lt;code&gt;headers&lt;/code&gt; объекта и Ember данных будет отправить их вместе с каждым запросом AJAX. Для динамических заголовков см. &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.RESTAdapter.html#toc_headers-customization&quot;&gt;Настройку заголовков&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="589305bc3eb0d013e4fe10cb12d21b40cca5f01f" translate="yes" xml:space="preserve">
          <source>Some addons might conditionally include polyfills only if needed. Some linters may emit warnings when using features not yet fully supported in your targets. Some addons may even automatically prefix unsupported CSS properties.</source>
          <target state="translated">Некоторые дополнения могут условно включать в себя полизаполнители только при необходимости.Некоторые дополнения могут выдавать предупреждения при использовании функций,которые еще не полностью поддерживаются в ваших целях.Некоторые дополнения могут даже автоматически префиксовать неподдерживаемые свойства CSS.</target>
        </trans-unit>
        <trans-unit id="17a6dac8bf912ce569cbeab14f1bf531b4c08379" translate="yes" xml:space="preserve">
          <source>Some examples modifying that default behavior:</source>
          <target state="translated">Некоторые примеры изменения этого поведения по умолчанию:</target>
        </trans-unit>
        <trans-unit id="82534b5183631ee9d5eeba124dc1c2d8a8efa3a1" translate="yes" xml:space="preserve">
          <source>Some examples of how names are resolved:</source>
          <target state="translated">Некоторые примеры того,как имена разрешаются:</target>
        </trans-unit>
        <trans-unit id="9d5184c34d7d66d58908b766bee8f66460408f46" translate="yes" xml:space="preserve">
          <source>Some models may have properties that are deeply nested objects of readonly data. The na&amp;iuml;ve solution would be to define models for each nested object and use &lt;code&gt;hasMany&lt;/code&gt; and &lt;code&gt;belongsTo&lt;/code&gt; to recreate the nested relationship. However, since readonly data will never need to be updated and saved this often results in the creation of a great deal of code for very little benefit. An alternate approach is to define these relationships using an attribute with no transform (&lt;code&gt;DS.attr()&lt;/code&gt;). This makes it easy to access readonly values in computed properties and templates without the overhead of defining extraneous models.</source>
          <target state="translated">Некоторые модели могут иметь свойства, которые являются глубоко вложенными объектами данных только для чтения. Наивным решением было бы определить модели для каждого вложенного объекта и использовать &lt;code&gt;hasMany&lt;/code&gt; и &lt;code&gt;belongsTo&lt;/code&gt; для воссоздания вложенных отношений. Однако, поскольку данные только для чтения никогда не нужно будет обновлять и сохранять, это часто приводит к созданию большого объема кода с очень небольшой пользой. Альтернативный подход - определить эти отношения с помощью атрибута без преобразования ( &lt;code&gt;DS.attr()&lt;/code&gt; ). Это упрощает доступ к значениям только для чтения в вычисляемых свойствах и шаблонах без дополнительных затрат на определение посторонних моделей.</target>
        </trans-unit>
        <trans-unit id="0c345287ac108fa43e40986e9e0b206ee82b4fe8" translate="yes" xml:space="preserve">
          <source>Some of Ember's test helpers are promises that wait for the run loop to empty before resolving. If your application has code that runs &lt;em&gt;outside&lt;/em&gt; a run loop, these will resolve too early and give erroneous test failures which are difficult to find. Disabling autoruns help you identify these scenarios and helps both your testing and your application!</source>
          <target state="translated">Некоторые из помощников тестирования Ember - это обещания, которые ждут, пока цикл выполнения не опустеет, прежде чем разрешиться. Если в вашем приложении есть код, который выполняется &lt;em&gt;вне&lt;/em&gt; цикла выполнения, он будет разрешен слишком рано и приведет к ошибочным ошибкам тестирования, которые трудно найти. Отключение автозапуска поможет вам определить эти сценарии и поможет как вашему тестированию, так и вашему приложению!</target>
        </trans-unit>
        <trans-unit id="4979198f37570d49855015976a8e9dfdb6023e02" translate="yes" xml:space="preserve">
          <source>Some of the helpers we'll use commonly are:</source>
          <target state="translated">Некоторые из помощников,которых мы обычно используем:</target>
        </trans-unit>
        <trans-unit id="3748e66aa53dcbbdabc1f3d7af1f40169fdff824" translate="yes" xml:space="preserve">
          <source>Some of the more common ways to report a problem with the guides are:</source>
          <target state="translated">Некоторые из наиболее распространенных способов сообщить о проблеме с руководствами:</target>
        </trans-unit>
        <trans-unit id="5337883a101c091bf437d743927429e7f9b3a8dc" translate="yes" xml:space="preserve">
          <source>Some of the reasons this may happen:</source>
          <target state="translated">Некоторые из причин,по которым это может произойти:</target>
        </trans-unit>
        <trans-unit id="822e1f477acc562b0e523818fa99c2731cc5d901" translate="yes" xml:space="preserve">
          <source>Some of these features that you'll learn about in the guides are:</source>
          <target state="translated">Некоторые из этих особенностей,о которых вы узнаете в руководствах:</target>
        </trans-unit>
        <trans-unit id="66952b6d0704d8bd5ed88829a1728002186d07f9" translate="yes" xml:space="preserve">
          <source>Some other event in the app causes the URL to change.</source>
          <target state="translated">Другое событие в приложении приводит к изменению URL-адреса.</target>
        </trans-unit>
        <trans-unit id="6662963cf7cb67b19d16e3797446e1a4df2164ae" translate="yes" xml:space="preserve">
          <source>Some properties are not only grouped by inheritance, but also by framework level semantics. For example, if you inspect an Ember Data model, you can see &lt;code&gt;Attributes&lt;/code&gt;, &lt;code&gt;Belongs To&lt;/code&gt;, &lt;code&gt;Has Many&lt;/code&gt;, and &lt;code&gt;Flags&lt;/code&gt; groups.</source>
          <target state="translated">Некоторые свойства сгруппированы не только по наследованию, но и по семантике уровня инфраструктуры. Например, если вы изучите модель данных Ember, вы увидите группы &amp;laquo; &lt;code&gt;Attributes&lt;/code&gt; , &amp;laquo; &lt;code&gt;Belongs To&lt;/code&gt; , &amp;laquo; &lt;code&gt;Has Many&lt;/code&gt; и &amp;laquo; &lt;code&gt;Flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="325238f44bc39a7d51558fbf18caf5277d0da375" translate="yes" xml:space="preserve">
          <source>Some reasons for customizing an Adapter include using &lt;code&gt;underscores_case&lt;/code&gt; in your urls, using a medium other than REST to communicate with your backend API or even using a &lt;a href=&quot;https://github.com/locks/ember-localstorage-adapter&quot;&gt;local storage backend&lt;/a&gt;.</source>
          <target state="translated">Некоторые причины для настройки адаптера включают использование &lt;code&gt;underscores_case&lt;/code&gt; в ваших URL-адресах, использование носителя, отличного от REST, для связи с вашим внутренним API или даже использование &lt;a href=&quot;https://github.com/locks/ember-localstorage-adapter&quot;&gt;внутреннего хранилища&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2244f25ae871987e59d131e17c8c7397712981aa" translate="yes" xml:space="preserve">
          <source>Some routes always display the same model. For example, the &lt;code&gt;/photos&lt;/code&gt; route will always display the same list of photos available in the application. If your user leaves this route and comes back later, the model does not change.</source>
          <target state="translated">На некоторых маршрутах всегда отображается одна и та же модель. Например, маршрут &lt;code&gt;/photos&lt;/code&gt; всегда будет отображать один и тот же список фотографий, доступных в приложении. Если ваш пользователь покинет этот маршрут и вернется позже, модель не изменится.</target>
        </trans-unit>
        <trans-unit id="dfada9d7be3abdb25489a10a3babdd4c487f5a91" translate="yes" xml:space="preserve">
          <source>Some specific examples of units tests are:</source>
          <target state="translated">Некоторые конкретные примеры единичных тестов:</target>
        </trans-unit>
        <trans-unit id="f4c0047cd154d80ed200c3a10a6e33a060f165c8" translate="yes" xml:space="preserve">
          <source>Some times you might be working on a feature, but know that a certain test will fail so you might want to skip it. You can do it by using &lt;code&gt;skip&lt;/code&gt;:</source>
          <target state="translated">Иногда вы можете работать над функцией, но знаете, что определенный тест не пройден, поэтому вы можете пропустить его. Вы можете сделать это, используя &lt;code&gt;skip&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e8353c07cd51f4950ee2ad76a1992e4ffb81690e" translate="yes" xml:space="preserve">
          <source>Some types of computed properties are very common. Ember provides a number of computed property macros, which are shorter ways of expressing certain types of computed property.</source>
          <target state="translated">Некоторые типы вычисляемых свойств очень распространены.Ember предоставляет ряд макросов вычисляемых свойств,которые являются более короткими способами выражения определенных типов вычисляемых свойств.</target>
        </trans-unit>
        <trans-unit id="86c891d4cd8c7cba722589fb8d2aa6a1abb982b5" translate="yes" xml:space="preserve">
          <source>Sometimes a service may or may not exist, like when an initializer conditionally registers a service. Since normal injection will throw an error if the service doesn't exist, you must look up the service using Ember's &lt;a href=&quot;https://emberjs.com/api/classes/Ember.html#method_getOwner&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Иногда служба может существовать, а может и не существовать, например, когда инициализатор условно регистрирует службу. Поскольку обычная инъекция вызовет ошибку, если служба не существует, вы должны искать службу, используя вместо этого &lt;a href=&quot;https://emberjs.com/api/classes/Ember.html#method_getOwner&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt; Ember .</target>
        </trans-unit>
        <trans-unit id="3155e1aa9ca809aad16247d1dc430dba0afcf4d9" translate="yes" xml:space="preserve">
          <source>Sometimes controllers have dependencies on other controllers. This is accomplished by injecting one controller into another. For example, here are two simple controllers. The &lt;code&gt;CommentsController&lt;/code&gt; uses the &lt;code&gt;PostController&lt;/code&gt; via &lt;code&gt;inject&lt;/code&gt;:</source>
          <target state="translated">Иногда контроллеры зависят от других контроллеров. Это достигается путем вставки одного контроллера в другой. Например, вот два простых контроллера. &lt;code&gt;CommentsController&lt;/code&gt; использует &lt;code&gt;PostController&lt;/code&gt; через &lt;code&gt;inject&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9e4d9e623bb94a60e9ac83b620b9d575221d6a19" translate="yes" xml:space="preserve">
          <source>Sometimes the parent component invoking an action has some context needed for the action that the child component doesn't. Consider, for example, the case where the &lt;code&gt;button-with-confirmation&lt;/code&gt; component we've defined is used within &lt;code&gt;send-message&lt;/code&gt;. The &lt;code&gt;sendMessage&lt;/code&gt; action that we pass to the child component may expect a message type parameter to be provided as an argument:</source>
          <target state="translated">Иногда родительский компонент, вызывающий действие, имеет некоторый контекст, необходимый для действия, которого нет у дочернего компонента. Рассмотрим, например, случай, когда определенный нами компонент &lt;code&gt;button-with-confirmation&lt;/code&gt; используется в &lt;code&gt;send-message&lt;/code&gt; . Действие &lt;code&gt;sendMessage&lt;/code&gt; , которое мы передаем дочернему компоненту, может ожидать, что параметр типа сообщения будет предоставлен в качестве аргумента:</target>
        </trans-unit>
        <trans-unit id="b795927e172ff54b29fd66e4ef2233525e286ec2" translate="yes" xml:space="preserve">
          <source>Sometimes the value you want to propagate to a downstream promise can only be retrieved asynchronously. This can be achieved by returning a promise in the fulfillment or rejection handler. The downstream promise will then be pending until the returned promise is settled. This is called &lt;em&gt;assimilation&lt;/em&gt;.</source>
          <target state="translated">Иногда значение, которое вы хотите распространить на последующее обещание, можно получить только асинхронно. Это может быть достигнуто путем возврата обещания в обработчике выполнения или отклонения. Затем последующее обещание будет отложено до тех пор, пока не будет выполнено возвращенное обещание. Это называется &lt;em&gt;ассимиляцией&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6b416b736de5984855b00b7181426c6ea9cfe1" translate="yes" xml:space="preserve">
          <source>Sometimes we want to set relationships on already existing records. We can simply set a &lt;code&gt;belongsTo&lt;/code&gt; relationship:</source>
          <target state="translated">Иногда мы хотим установить отношения для уже существующих записей. Мы можем просто установить отношение &lt;code&gt;belongsTo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e3938ef49fd1f00900f13ab44705cfe380190afd" translate="yes" xml:space="preserve">
          <source>Sometimes you don't care if properties of individual array items change. In this case use the &lt;code&gt;[]&lt;/code&gt; key instead of &lt;code&gt;@each&lt;/code&gt;. Computed properties dependent on an array using the &lt;code&gt;[]&lt;/code&gt; key will only update if items are added to or removed from the array, or if the array property is set to a different array. For example:</source>
          <target state="translated">Иногда вам все равно, меняются ли свойства отдельных элементов массива. В этом случае используйте клавишу &lt;code&gt;[]&lt;/code&gt; вместо &lt;code&gt;@each&lt;/code&gt; . Вычисляемые свойства, зависящие от массива с использованием ключа &lt;code&gt;[]&lt;/code&gt; , будут обновляться только в том случае, если элементы добавляются в массив или удаляются из него, или если для свойства массива задан другой массив. Например:</target>
        </trans-unit>
        <trans-unit id="59593e85c482d9ccffbf9cb3f10447cbf9a7e137" translate="yes" xml:space="preserve">
          <source>Sometimes you have a computed property whose value depends on the properties of items in an array. For example, you may have an array of todo items, and want to calculate the incomplete todo's based on their &lt;code&gt;isDone&lt;/code&gt; property.</source>
          <target state="translated">Иногда у вас есть вычисляемое свойство, значение которого зависит от свойств элементов в массиве. Например, у вас может быть массив задач, и вы хотите вычислить неполные задачи на основе их свойства &lt;code&gt;isDone&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="416096650446b210755d175075d7e07b083b9ad1" translate="yes" xml:space="preserve">
          <source>Sometimes you need to fetch a model, but your route doesn't have the parameters, because it's a child route and the route directly above or a few levels above has the parameters that your route needs.</source>
          <target state="translated">Иногда вам нужно получить модель,но ваш маршрут не имеет параметров,потому что это дочерний маршрут,и маршрут прямо над ним или на нескольких уровнях выше имеет параметры,которые нужны вашему маршруту.</target>
        </trans-unit>
        <trans-unit id="559f553ca9e321ad0a7cbfeb49c2a261a0036395" translate="yes" xml:space="preserve">
          <source>Sometimes you need to retain the &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">Иногда нужно сохранить &lt;code&gt;this&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="069522e3125331b06bf7bf0225dd816607897fe7" translate="yes" xml:space="preserve">
          <source>Sometimes you want to redirect a user to a different page than what they requested for.</source>
          <target state="translated">Иногда вы хотите перенаправить пользователя на страницу,отличную от той,которую он запрашивал.</target>
        </trans-unit>
        <trans-unit id="2baef004d709137087990a2c9d850371fca71c1c" translate="yes" xml:space="preserve">
          <source>Sometimes, you may want to define a component that wraps content provided by other templates.</source>
          <target state="translated">Иногда вам может понадобиться определить компонент,обертывающий содержимое,предоставляемое другими шаблонами.</target>
        </trans-unit>
        <trans-unit id="96659bf5510b1ddbf595565c481a37824bc493f8" translate="yes" xml:space="preserve">
          <source>Specifies how records can be filtered. Records returned will need to have a &lt;code&gt;filterValues&lt;/code&gt; property with a key for every name in the returned array.</source>
          <target state="translated">Указывает, как можно фильтровать записи. Возвращаемые записи должны иметь свойство &lt;code&gt;filterValues&lt;/code&gt; с ключом для каждого имени в возвращаемом массиве.</target>
        </trans-unit>
        <trans-unit id="95f6dd8dc212ba5d85302c1420a17db8da9053f3" translate="yes" xml:space="preserve">
          <source>Specify a method that observes property changes.</source>
          <target state="translated">Укажите метод,который наблюдает за изменениями свойств.</target>
        </trans-unit>
        <trans-unit id="223591aeca04cad98919771b70c08a1289123a53" translate="yes" xml:space="preserve">
          <source>Specifying DOM event type</source>
          <target state="translated">Указание типа события DOM</target>
        </trans-unit>
        <trans-unit id="9dc9de0aa5ed554b19547386f6cca49a1ec57918" translate="yes" xml:space="preserve">
          <source>Specifying Initializer Order</source>
          <target state="translated">Указание заказа инициализатора</target>
        </trans-unit>
        <trans-unit id="5fdf0dd083e563032f5e6602ce7e005cc574889d" translate="yes" xml:space="preserve">
          <source>Specifying Keys</source>
          <target state="translated">Указательные ключи</target>
        </trans-unit>
        <trans-unit id="35833528563ce69a1f68854f07be8e7aa16a509d" translate="yes" xml:space="preserve">
          <source>Specifying Query Parameters</source>
          <target state="translated">Указание параметров запроса</target>
        </trans-unit>
        <trans-unit id="7c35f3946da6ff79b8757a6ceb8ee8d49df16369" translate="yes" xml:space="preserve">
          <source>Specifying a Root URL</source>
          <target state="translated">Указание URL-адреса корня</target>
        </trans-unit>
        <trans-unit id="3178f09d7674b2ba76416a9f78ffa51e9d2fdd63" translate="yes" xml:space="preserve">
          <source>Specifying a Route&amp;#x27;s Model</source>
          <target state="translated">Указание модели маршрута</target>
        </trans-unit>
        <trans-unit id="0aab4ef25ec9e8d4b45fcc096abf64fe7a154c92" translate="yes" xml:space="preserve">
          <source>Specifying a Route's Model</source>
          <target state="translated">Указание модели маршрута</target>
        </trans-unit>
        <trans-unit id="9d13a540e07e9718658fc51f3532a2a9665ff955" translate="yes" xml:space="preserve">
          <source>Specifying a Target</source>
          <target state="translated">Указание цели</target>
        </trans-unit>
        <trans-unit id="0576f645f0df389ae6ff04ea0100cb46c490b756" translate="yes" xml:space="preserve">
          <source>Specifying the Type of Event</source>
          <target state="translated">Указание типа события</target>
        </trans-unit>
        <trans-unit id="d91b92c60fdffefa96bc27ffdf887f5e281d0a13" translate="yes" xml:space="preserve">
          <source>Specifying the URL Type</source>
          <target state="translated">Указание типа URL-адреса</target>
        </trans-unit>
        <trans-unit id="c69285edae5096eb75f15a92d92d9083fbcd550c" translate="yes" xml:space="preserve">
          <source>Specifying whitelisted modifier keys</source>
          <target state="translated">Указание клавиш-модификаторов в белом списке</target>
        </trans-unit>
        <trans-unit id="9d4fa9e78c183321cef3a8e36a830b3610a9a700" translate="yes" xml:space="preserve">
          <source>Splits a string into separate units separated by spaces, eliminating any empty strings in the process. This is a convenience method for split that is mostly useful when applied to the &lt;code&gt;String.prototype&lt;/code&gt;.</source>
          <target state="translated">Разбивает строку на отдельные блоки, разделенные пробелами, исключая в процессе все пустые строки. Это удобный метод разделения, который в основном полезен при применении к &lt;code&gt;String.prototype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d1e61286aa50eb30bfbfd7083574b6c91fc2ff1" translate="yes" xml:space="preserve">
          <source>Standard CSS class names to apply to the view's outer element. This property automatically inherits any class names defined by the view's superclasses as well.</source>
          <target state="translated">Стандартные имена классов CSS для применения к внешнему элементу вида.Это свойство автоматически наследует имена любых классов,определенных суперклассами вида.</target>
        </trans-unit>
        <trans-unit id="8d2e5c61163ac5addfc66cdf3663694e20d997c0" translate="yes" xml:space="preserve">
          <source>Standard Method</source>
          <target state="translated">Стандартный метод</target>
        </trans-unit>
        <trans-unit id="bbbc2d09acef9d54bec542a8902adc3b0bd87a72" translate="yes" xml:space="preserve">
          <source>Start by running &lt;code&gt;ember g controller rentals/index&lt;/code&gt; to create an index controller for our nested route.</source>
          <target state="translated">Начнем с запуска &lt;code&gt;ember g controller rentals/index&lt;/code&gt; чтобы создать контроллер индекса для нашего вложенного маршрута.</target>
        </trans-unit>
        <trans-unit id="ed3689b34944e00b45a933d94ff2ffb05b06064e" translate="yes" xml:space="preserve">
          <source>Starting index in the array to replace. If idx &amp;gt;= length, then append to the end of the array.</source>
          <target state="translated">Начальный индекс в заменяемом массиве. Если idx&amp;gt; = length, добавить в конец массива.</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="e2943b559f079da6407626d86e22f36963a935be" translate="yes" xml:space="preserve">
          <source>Statements like &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_unless&quot;&gt;&lt;code&gt;unless&lt;/code&gt;&lt;/a&gt; are implemented as built-in helpers. Helpers can be invoked three ways, each of which is illustrated below with conditionals.</source>
          <target state="translated">Такие операторы, как &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_unless&quot;&gt; &lt;code&gt;unless&lt;/code&gt; &lt;/a&gt; , реализованы как встроенные помощники. Помощники могут быть вызваны тремя способами, каждый из которых проиллюстрирован ниже с условными операторами.</target>
        </trans-unit>
        <trans-unit id="c1feba1e46ddf6c53b1adc00d9107a1d9ebc21a7" translate="yes" xml:space="preserve">
          <source>States are hierarchical and every state is a substate of the &lt;code&gt;RootState&lt;/code&gt;. For example, a record can be in the &lt;code&gt;root.deleted.uncommitted&lt;/code&gt; state, then transition into the &lt;code&gt;root.deleted.inFlight&lt;/code&gt; state. If a child state does not implement an event handler, the state manager will attempt to invoke the event on all parent states until the root state is reached. The state hierarchy of a record is described in terms of a path string. You can determine a record's current state by getting the state's &lt;code&gt;stateName&lt;/code&gt; property:</source>
          <target state="translated">Состояния являются иерархическими, и каждое состояние является подсостоянием &lt;code&gt;RootState&lt;/code&gt; . Например, запись может находиться в состоянии &lt;code&gt;root.deleted.uncommitted&lt;/code&gt; , а затем перейти в состояние &lt;code&gt;root.deleted.inFlight&lt;/code&gt; . Если дочернее состояние не реализует обработчик событий, диспетчер состояний попытается вызвать событие во всех родительских состояниях, пока не будет достигнуто корневое состояние. Иерархия состояний записи описывается в виде строки пути. Вы можете определить текущее состояние записи, получив свойство &lt;code&gt;stateName&lt;/code&gt; состояния :</target>
        </trans-unit>
        <trans-unit id="00eb37c2ad8ac597d25ead8c96dc4b915e4541c5" translate="yes" xml:space="preserve">
          <source>Sticky Query Param Values</source>
          <target state="translated">Значения парама &quot;Sticky Query Param&quot;.</target>
        </trans-unit>
        <trans-unit id="0d8a7046c8d39d9cbd86abcdfb704b161a601f9e" translate="yes" xml:space="preserve">
          <source>Store</source>
          <target state="translated">Store</target>
        </trans-unit>
        <trans-unit id="f1666d2bcbc1f1662ac087a581ceacb42b38e437" translate="yes" xml:space="preserve">
          <source>Store createRecord() vs. push() vs. pushPayload()</source>
          <target state="translated">Хранить createRecord()vs.push()vs.pushPayload()</target>
        </trans-unit>
        <trans-unit id="9c9e836e042084875f2706702835fd50f3d499b1" translate="yes" xml:space="preserve">
          <source>Storing and Retrying a Transition</source>
          <target state="translated">Хранение и повторение перехода</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="b3d17fda1094db33050217bb63ea9c24bd2b99dc" translate="yes" xml:space="preserve">
          <source>String or Function</source>
          <target state="translated">Строка или функция</target>
        </trans-unit>
        <trans-unit id="1c9540a017269c9feb496d71189bffe50f7d5885" translate="yes" xml:space="preserve">
          <source>String...|Array</source>
          <target state="translated">String...|Array</target>
        </trans-unit>
        <trans-unit id="f0d3c25699981cc6a89aac831ec30d8b3c22399b" translate="yes" xml:space="preserve">
          <source>String.w()</source>
          <target state="translated">String.w()</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="5e2de559df2862cc71558e06f2eeae9cf0efe5c0" translate="yes" xml:space="preserve">
          <source>Strings will no longer have the convenience methods described in the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html&quot;&gt;&lt;code&gt;Ember.String&lt;/code&gt; API reference&lt;/a&gt;. Instead, you can use the similarly-named methods of the &lt;code&gt;Ember.String&lt;/code&gt; object and pass the string to use as the first parameter:</source>
          <target state="translated">У строк больше не будет удобных методов, описанных в &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html&quot;&gt;справочнике &lt;/a&gt; &lt;code&gt;Ember.String&lt;/code&gt; API . Вместо этого вы можете использовать одноименные методы объекта &lt;code&gt;Ember.String&lt;/code&gt; и передать строку для использования в качестве первого параметра:</target>
        </trans-unit>
        <trans-unit id="3524a89f0508fdccd88639d09b323af881a667b5" translate="yes" xml:space="preserve">
          <source>String|Function</source>
          <target state="translated">String|Function</target>
        </trans-unit>
        <trans-unit id="096cde0b9a1b5f451a441cdfbe8d57859fd850e0" translate="yes" xml:space="preserve">
          <source>String|Integer</source>
          <target state="translated">String|Integer</target>
        </trans-unit>
        <trans-unit id="7dffcf19da01173ef7755fae671bcdb375a056de" translate="yes" xml:space="preserve">
          <source>String|Number</source>
          <target state="translated">String|Number</target>
        </trans-unit>
        <trans-unit id="c54337b559e9f029d16387ab04f89b68d4a2d8c3" translate="yes" xml:space="preserve">
          <source>String|Number|Object</source>
          <target state="translated">String|Number|Object</target>
        </trans-unit>
        <trans-unit id="7510182a2f01b9f70534bd7ab87456330ddc7be5" translate="yes" xml:space="preserve">
          <source>String|Object</source>
          <target state="translated">String|Object</target>
        </trans-unit>
        <trans-unit id="baca1a7147855eb5795ff280775be4b9cf07d961" translate="yes" xml:space="preserve">
          <source>String|Property</source>
          <target state="translated">String|Property</target>
        </trans-unit>
        <trans-unit id="7087dd5b60a0e5d36d078de3709bb645d286db69" translate="yes" xml:space="preserve">
          <source>Stubbing Services</source>
          <target state="translated">Услуги Стуббинга</target>
        </trans-unit>
        <trans-unit id="27aa4c7ccfa314309a981fe2957b63393d5fce5e" translate="yes" xml:space="preserve">
          <source>Stubbing Services in Acceptance Tests</source>
          <target state="translated">Услуги по штуббированию в приемочных испытаниях</target>
        </trans-unit>
        <trans-unit id="87fc913c19cccd1420f6549019e6ab07d2652eb8" translate="yes" xml:space="preserve">
          <source>Submitting a post without a title displays a red validation state on the field and gives the user text indicating that the title is required.</source>
          <target state="translated">При отправке сообщения без заголовка в поле отображается красное состояние валидации и дается пользовательский текст,указывающий на то,что заголовок является обязательным.</target>
        </trans-unit>
        <trans-unit id="12d390f8025584ad2ceb29d8156199827eb766f2" translate="yes" xml:space="preserve">
          <source>Submodules</source>
          <target state="translated">Submodules</target>
        </trans-unit>
        <trans-unit id="6ef9815ada2a0398b68221d1261a977ff08f7246" translate="yes" xml:space="preserve">
          <source>Subscribe to a listener by using &lt;code&gt;Ember.subscribe&lt;/code&gt;:</source>
          <target state="translated">Подпишитесь на слушателя с помощью &lt;code&gt;Ember.subscribe&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb7e7cd9296878731ca54a308b73da381671370f" translate="yes" xml:space="preserve">
          <source>Subscribes a function to a named event and then cancels the subscription after the first time the event is triggered. It is good to use &lt;code&gt;one&lt;/code&gt; when you only care about the first time an event has taken place.</source>
          <target state="translated">Подписывает функцию на именованное событие, а затем отменяет подписку после первого запуска события. Это хорошо , чтобы использовать &lt;code&gt;one&lt;/code&gt; , когда вы заботитесь только в первый раз , это событие имело место.</target>
        </trans-unit>
        <trans-unit id="1a236ce5c458753d003516cfdb6d3fbc2147baa0" translate="yes" xml:space="preserve">
          <source>Subscribes to a named event with given function.</source>
          <target state="translated">Подписывается на названное событие с заданной функцией.</target>
        </trans-unit>
        <trans-unit id="21ff0eedd4b3be556de21a3ebae1bcf1865e815e" translate="yes" xml:space="preserve">
          <source>Success and failure</source>
          <target state="translated">Успех и неудачи</target>
        </trans-unit>
        <trans-unit id="d566bb22908b1ec9a9610a20f300bf499e0d3e6f" translate="yes" xml:space="preserve">
          <source>Supplying a model</source>
          <target state="translated">Поставка модели</target>
        </trans-unit>
        <trans-unit id="307ad7bba7045cbdfbe8ab3762416f0cfe2eeea8" translate="yes" xml:space="preserve">
          <source>Supplying a tagName</source>
          <target state="translated">Поставка тегName</target>
        </trans-unit>
        <trans-unit id="2a1281cd7b34a3b437d33cc93541bd5fe0eac5b8" translate="yes" xml:space="preserve">
          <source>Supplying an explicit dynamic segment value</source>
          <target state="translated">Обеспечение явного динамического значения сегмента</target>
        </trans-unit>
        <trans-unit id="ac7e6f74b23299de001ce35020dda39ed87fccdf" translate="yes" xml:space="preserve">
          <source>Supplying multiple models</source>
          <target state="translated">Поставка нескольких моделей</target>
        </trans-unit>
        <trans-unit id="3c4685eb55ed20aeb850f996709d097128114b51" translate="yes" xml:space="preserve">
          <source>Support for ES2015/ES6 JavaScript via the &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;Babel&lt;/a&gt; project. This includes support for &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;JavaScript modules&lt;/a&gt;, which are used throughout this guide.</source>
          <target state="translated">Поддержка ES2015 / ES6 JavaScript через проект &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;Babel&lt;/a&gt; . Это включает поддержку &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;модулей JavaScript&lt;/a&gt; , которые используются в этом руководстве.</target>
        </trans-unit>
        <trans-unit id="e2c0191bfc5d5b1bd1375a04ab5288df11a1e581" translate="yes" xml:space="preserve">
          <source>Supported Scenarios</source>
          <target state="translated">Поддерживаемые сценарии</target>
        </trans-unit>
        <trans-unit id="f158e8ae8a0fd5a1bbca7308d27f425549f52faa" translate="yes" xml:space="preserve">
          <source>Supporting both block and non-block component usage in one template</source>
          <target state="translated">Поддержка использования как блочных,так и неблокированных компонентов в одном шаблоне</target>
        </trans-unit>
        <trans-unit id="21d313eca972677af60300d5c32cdc508135a054" translate="yes" xml:space="preserve">
          <source>Supporting different editing styles will require different body components to provide special validation and highlighting. To load a different body component based on editing style, you can yield the component using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_component&quot;&gt;&lt;code&gt;component helper&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_hash&quot;&gt;&lt;code&gt;hash helper&lt;/code&gt;&lt;/a&gt;. Here, the appropriate component is assigned to a hash using nested helpers and yielded to the template. Notice &lt;code&gt;editStyle&lt;/code&gt; being used as an argument to the component helper.</source>
          <target state="translated">Для поддержки разных стилей редактирования потребуются разные компоненты тела, чтобы обеспечить специальную проверку и выделение. Для того, чтобы загрузить другой компонент тела , основанный на редактировании стиля, вы можете дать компонент с помощью &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_component&quot;&gt; &lt;code&gt;component helper&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_hash&quot;&gt; &lt;code&gt;hash helper&lt;/code&gt; &lt;/a&gt; . Здесь соответствующий компонент назначается хешу с помощью вложенных помощников и передается в шаблон. Обратите внимание, что &lt;code&gt;editStyle&lt;/code&gt; используется в качестве аргумента помощника компонента.</target>
        </trans-unit>
        <trans-unit id="870b6a43f9969937a6b78668e5f67b305829ac03" translate="yes" xml:space="preserve">
          <source>Suppose we have an object that has a property and a method observing that property.</source>
          <target state="translated">Предположим,что у нас есть объект,который имеет свойство и метод,наблюдающий за этим свойством.</target>
        </trans-unit>
        <trans-unit id="9675587d4669654928b069872d4f2938fc8dc804" translate="yes" xml:space="preserve">
          <source>Suppose you want to integrate your favorite date picker library into an Ember project. Typically, 3rd party JS/jQuery libraries require a DOM element to bind to. So, where is the best place to initialize and attach the library?</source>
          <target state="translated">Предположим,вы хотите интегрировать вашу любимую библиотеку по выбору даты в проект Ember.Обычно сторонние JS/jQuery библиотеки требуют DOM-элемент для привязки.Так где же лучше всего инициализировать и прикрепить библиотеку?</target>
        </trans-unit>
        <trans-unit id="20aeee9b0344b503f9d7a448f7aba7ca9a8c5cca" translate="yes" xml:space="preserve">
          <source>Synchronous Example</source>
          <target state="translated">Синхронный пример</target>
        </trans-unit>
        <trans-unit id="495d2949869c7e350f566c1678a60431b1cc2fcf" translate="yes" xml:space="preserve">
          <source>Synchronous Helpers</source>
          <target state="translated">Синхронные помощники</target>
        </trans-unit>
        <trans-unit id="342d5495308e369e444baf3f33f246d0bcc29b75" translate="yes" xml:space="preserve">
          <source>Synchronous example:</source>
          <target state="translated">Пример синхронизации:</target>
        </trans-unit>
        <trans-unit id="d54e57d31e1997c6a23c5f4f4a2538763d613e21" translate="yes" xml:space="preserve">
          <source>Synchronous helpers are performed immediately when triggered.</source>
          <target state="translated">Синхронные помощники выполняются сразу же при срабатывании.</target>
        </trans-unit>
        <trans-unit id="7863003b76de30fb0d39d091532fa48c8ca6a75e" translate="yes" xml:space="preserve">
          <source>Tackling Deprecations</source>
          <target state="translated">Решение проблем депрессий</target>
        </trans-unit>
        <trans-unit id="1d6f3b9629d6275a16e909978a30680b410d16c9" translate="yes" xml:space="preserve">
          <source>Tag name for the view's outer element. The tag name is only used when an element is first created. If you change the &lt;code&gt;tagName&lt;/code&gt; for an element, you must destroy and recreate the view element.</source>
          <target state="translated">Имя тега для внешнего элемента представления. Имя тега используется только при первом создании элемента. Если вы измените &lt;code&gt;tagName&lt;/code&gt; для элемента, вы должны уничтожить и воссоздать элемент представления.</target>
        </trans-unit>
        <trans-unit id="eb8e3e9f7283008461ee747f3e130db27bb0a277" translate="yes" xml:space="preserve">
          <source>Take for example the following routes:</source>
          <target state="translated">Возьмите,например,следующие маршруты:</target>
        </trans-unit>
        <trans-unit id="2c60cfa4ea62384dd026b50e8f6e0eed19938e00" translate="yes" xml:space="preserve">
          <source>Takes an ajax response, and returns the json payload or an error.</source>
          <target state="translated">Принимает реакцию на аякс и возвращает json грузоподъемность или ошибку.</target>
        </trans-unit>
        <trans-unit id="ab8aad230fdba67c86441e29f313daf20e0add73" translate="yes" xml:space="preserve">
          <source>TargetActionSupport</source>
          <target state="translated">TargetActionSupport</target>
        </trans-unit>
        <trans-unit id="d1e8254c86f37cbe15667c32cc8a8a8fff4cd1ef" translate="yes" xml:space="preserve">
          <source>Template compilation.</source>
          <target state="translated">Составление шаблона.</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="f26dba0d688990ff76ff8c4eada0b9b5921db5b4" translate="yes" xml:space="preserve">
          <source>Templates are backed with a context. A context is an object from which Handlebars expressions read their properties. In Ember this is often a component. For templates rendered by a route (like &lt;code&gt;application.hbs&lt;/code&gt;), the context is a controller.</source>
          <target state="translated">Шаблоны подкреплены контекстом. Контекст - это объект, из которого выражения Handlebars считывают свои свойства. В Ember это часто компонент. Для шаблонов, отображаемых маршрутом (например, &lt;code&gt;application.hbs&lt;/code&gt; ), контекстом является контроллер.</target>
        </trans-unit>
        <trans-unit id="bca019d1b04ef7b9ee38e243a74a67fd82e673fa" translate="yes" xml:space="preserve">
          <source>Templates can also display properties provided to them from their context, which is either a component or a route's controller. For example:</source>
          <target state="translated">Шаблоны также могут отображать свойства,предоставляемые им из их контекста,который является либо компонентом,либо контроллером маршрута.Например:</target>
        </trans-unit>
        <trans-unit id="517698063a175f12911d21c0535adc2e76938ecf" translate="yes" xml:space="preserve">
          <source>Templates manage the flow of an application's UI, and display state (through the DOM) to a user. For example, given a component with the property &quot;name&quot;, that component's template can use the name in several ways:</source>
          <target state="translated">Шаблоны управляют потоком пользовательского интерфейса приложения и отображают состояние (через DOM)для пользователя.Например,при наличии компонента со свойством &quot;имя&quot;,шаблон этого компонента может использовать это имя несколькими способами:</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="51813b0814adc6202a7752710fd028f16f5bf477" translate="yes" xml:space="preserve">
          <source>Test Helpers</source>
          <target state="translated">Тестовые помощники</target>
        </trans-unit>
        <trans-unit id="aed406fa903d6e94bc7feee88a130462ff9783a9" translate="yes" xml:space="preserve">
          <source>Test visiting our About and Contact pages</source>
          <target state="translated">Тест посетите наши страницы &quot;О компании&quot; и &quot;Контакты</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="c59410bf3ca2f20fd8b0393728deccf2dc47f93a" translate="yes" xml:space="preserve">
          <source>Testing Actions</source>
          <target state="translated">Испытательные действия</target>
        </trans-unit>
        <trans-unit id="06b38cb08494d08dd0969ccda46c766ca333f501" translate="yes" xml:space="preserve">
          <source>Testing Components</source>
          <target state="translated">Испытательные компоненты</target>
        </trans-unit>
        <trans-unit id="111ae9c10175e16d69526c94a465e0225d9f1710" translate="yes" xml:space="preserve">
          <source>Testing Computed Properties</source>
          <target state="translated">Тестирование вычисленных свойств</target>
        </trans-unit>
        <trans-unit id="91816ac28cf876440112f405559c1a49b916b2f0" translate="yes" xml:space="preserve">
          <source>Testing Controller Actions</source>
          <target state="translated">Действия контроллера тестирования</target>
        </trans-unit>
        <trans-unit id="bbdb40de641b7bd903d12a3a7d8dcdf9f0d4da40" translate="yes" xml:space="preserve">
          <source>Testing Controller Needs</source>
          <target state="translated">Контроллер тестирования Потребности</target>
        </trans-unit>
        <trans-unit id="a3634a65dd330502bee5446e899329476bf7ded2" translate="yes" xml:space="preserve">
          <source>Testing Controllers</source>
          <target state="translated">Контроллеры тестирования</target>
        </trans-unit>
        <trans-unit id="fcc10e5ab4dd75f9eb46dbd24ec0395685a9aa13" translate="yes" xml:space="preserve">
          <source>Testing Frameworks</source>
          <target state="translated">Механизмы тестирования</target>
        </trans-unit>
        <trans-unit id="e309e778695eab20a3a8bc01dba2b39e99684bfe" translate="yes" xml:space="preserve">
          <source>Testing Helpers</source>
          <target state="translated">Помощники по тестированию</target>
        </trans-unit>
        <trans-unit id="f487e84bdaccef5eb28911d350ffc027190e112c" translate="yes" xml:space="preserve">
          <source>Testing Models</source>
          <target state="translated">Испытательные модели</target>
        </trans-unit>
        <trans-unit id="82df70ae5a532aff7c33f9b6a39a13c4ceb157d6" translate="yes" xml:space="preserve">
          <source>Testing Object Methods</source>
          <target state="translated">Методы объекта тестирования</target>
        </trans-unit>
        <trans-unit id="10598855856ed90e10e02c787702f60e5e73921b" translate="yes" xml:space="preserve">
          <source>Testing Observers</source>
          <target state="translated">Тестировочные наблюдатели</target>
        </trans-unit>
        <trans-unit id="c2719b0d81b37187b81d8b3c83b30f393e2ac71c" translate="yes" xml:space="preserve">
          <source>Testing Our Application As We Go</source>
          <target state="translated">Тестирование нашего приложения на ходу</target>
        </trans-unit>
        <trans-unit id="a6c9220ff39e33f54e9415c82938ea24da9ff5cf" translate="yes" xml:space="preserve">
          <source>Testing Relationships</source>
          <target state="translated">Отношения в области тестирования</target>
        </trans-unit>
        <trans-unit id="3beda4357979b576777318de0cd80c86b2eba9a4" translate="yes" xml:space="preserve">
          <source>Testing Routes</source>
          <target state="translated">Маршруты тестирования</target>
        </trans-unit>
        <trans-unit id="48d04cd7bff00c397a2449e46bae4e190877dce0" translate="yes" xml:space="preserve">
          <source>Testing User Interaction</source>
          <target state="translated">Тестирование пользовательского взаимодействия</target>
        </trans-unit>
        <trans-unit id="627445291b103d97223f554921c6a4122db19397" translate="yes" xml:space="preserve">
          <source>Testing is a core part of the Ember framework and its development cycle.</source>
          <target state="translated">Тестирование является основной частью структуры Эмбера и цикла его разработки.</target>
        </trans-unit>
        <trans-unit id="9829d58d7519decb98a016ef2876759597109cbf" translate="yes" xml:space="preserve">
          <source>Testing routes can be done both via acceptance or unit tests. Acceptance tests will likely provide better coverage for routes because routes are typically used to perform transitions and load data, both of which are tested more easily in full context rather than isolation.</source>
          <target state="translated">Маршруты испытаний могут быть выполнены как приемочными,так и модульными испытаниями.Приемочные испытания,скорее всего,обеспечат лучшее покрытие для маршрутов,поскольку маршруты обычно используются для выполнения переходов и данных о нагрузке,причем оба эти вида испытаний легче проводить в полном контексте,а не в изоляции.</target>
        </trans-unit>
        <trans-unit id="c06feb4db18fe22ca99f672e2f6701eab0410aae" translate="yes" xml:space="preserve">
          <source>Tests can also be executed when you are running a local development server (started by running &lt;code&gt;ember server&lt;/code&gt;), at the &lt;code&gt;/tests&lt;/code&gt; URI which renders the &lt;code&gt;tests/index.html&lt;/code&gt; template. A word of caution using this approach: Tests run using &lt;code&gt;ember server&lt;/code&gt; have the environment configuration &lt;code&gt;development&lt;/code&gt;, whereas tests executed under &lt;code&gt;ember test --server&lt;/code&gt; are run with the configuration &lt;code&gt;test&lt;/code&gt;. This could cause differences in execution, such as which libraries are loaded and available. Therefore its recommended that you use &lt;code&gt;ember test --server&lt;/code&gt; for test execution.</source>
          <target state="translated">Тесты также могут выполняться, когда вы запускаете локальный сервер разработки (запускаемый с помощью &lt;code&gt;ember server&lt;/code&gt; ) по URI &lt;code&gt;/tests&lt;/code&gt; , который отображает шаблон &lt;code&gt;tests/index.html&lt;/code&gt; . Предостережение при использовании этого подхода: тесты, выполняемые с использованием &lt;code&gt;ember server&lt;/code&gt; имеют конфигурацию &lt;code&gt;development&lt;/code&gt; среды , тогда как тесты, выполняемые с использованием &lt;code&gt;ember test --server&lt;/code&gt; , запускаются с помощью &lt;code&gt;test&lt;/code&gt; конфигурации . Это может вызвать различия в выполнении, например, какие библиотеки загружены и доступны. Поэтому рекомендуется использовать &lt;code&gt;ember test --server&lt;/code&gt; для выполнения теста.</target>
        </trans-unit>
        <trans-unit id="397b6080e414f58dca5e208b2d6e35210d1b3660" translate="yes" xml:space="preserve">
          <source>Text Areas</source>
          <target state="translated">Текстовые области</target>
        </trans-unit>
        <trans-unit id="dc7b11db79436bd2c512f4d9967fc73904ef80da" translate="yes" xml:space="preserve">
          <source>Text field</source>
          <target state="translated">Текстовое поле</target>
        </trans-unit>
        <trans-unit id="f9168144e4f6dc56ba8e02f8cb5754a06a331b7a" translate="yes" xml:space="preserve">
          <source>Text fields</source>
          <target state="translated">Текстовые поля</target>
        </trans-unit>
        <trans-unit id="6803da9ee11ff492530f9c8867cacf0bf23256dc" translate="yes" xml:space="preserve">
          <source>TextArea</source>
          <target state="translated">TextArea</target>
        </trans-unit>
        <trans-unit id="ed595662ad10d27de0f2faece995e2ca2b8e7012" translate="yes" xml:space="preserve">
          <source>TextField</source>
          <target state="translated">TextField</target>
        </trans-unit>
        <trans-unit id="18d077a1a2979a8d6bce31e5dbe43320be8e25bf" translate="yes" xml:space="preserve">
          <source>TextField.max</source>
          <target state="translated">TextField.max</target>
        </trans-unit>
        <trans-unit id="5f0b052f28a0bd79ca6d930fe4c63eb5ecf68887" translate="yes" xml:space="preserve">
          <source>TextField.min</source>
          <target state="translated">TextField.min</target>
        </trans-unit>
        <trans-unit id="18e5d205fad575a252d1a26dc2fa9ef4f4a1b761" translate="yes" xml:space="preserve">
          <source>TextField.size</source>
          <target state="translated">TextField.size</target>
        </trans-unit>
        <trans-unit id="5c2de3d7d34ecad27d764569b0d805502a88a8e0" translate="yes" xml:space="preserve">
          <source>TextField.type</source>
          <target state="translated">TextField.type</target>
        </trans-unit>
        <trans-unit id="27df24da0e29d9bd616074b4f3101aac223ebbe7" translate="yes" xml:space="preserve">
          <source>TextSupport</source>
          <target state="translated">TextSupport</target>
        </trans-unit>
        <trans-unit id="b3412c92e9c7c36dbce60a4d0caa17409de5decd" translate="yes" xml:space="preserve">
          <source>Thanks to its use of the &lt;em&gt;adapter pattern&lt;/em&gt;, Ember Data can be configured to work with many different kinds of backends. There is &lt;a href=&quot;http://emberobserver.com/categories/ember-data-adapters&quot;&gt;an entire ecosystem of adapters&lt;/a&gt; that allow your Ember app to talk to different types of servers without you writing any networking code.</source>
          <target state="translated">Благодаря использованию &lt;em&gt;шаблона адаптера&lt;/em&gt; , Ember Data можно настроить для работы с множеством различных типов серверной части. Существует &lt;a href=&quot;http://emberobserver.com/categories/ember-data-adapters&quot;&gt;целая экосистема адаптеров,&lt;/a&gt; которые позволяют вашему приложению Ember взаимодействовать с разными типами серверов без написания какого-либо сетевого кода.</target>
        </trans-unit>
        <trans-unit id="318520d5f37197c6df1e09018c18e851802ae7ae" translate="yes" xml:space="preserve">
          <source>That being said, sometimes it is important to unit test your routes. For example, let's say we'd like to have an alert that can be triggered from anywhere within our application. The alert function &lt;code&gt;displayAlert&lt;/code&gt; should be put into the &lt;code&gt;ApplicationRoute&lt;/code&gt; because all actions and events bubble up to it from sub-routes and controllers.</source>
          <target state="translated">При этом иногда важно провести модульное тестирование ваших маршрутов. Например, предположим, что мы хотели бы иметь предупреждение, которое может запускаться из любого места в нашем приложении. Функцию предупреждения &lt;code&gt;displayAlert&lt;/code&gt; следует поместить в &lt;code&gt;ApplicationRoute&lt;/code&gt; , потому что все действия и события передаются ей из подмаршрутов и контроллеров.</target>
        </trans-unit>
        <trans-unit id="a36f83caf5ff2b93a1e4e5fcdc3584558ac63704" translate="yes" xml:space="preserve">
          <source>That default configuration matches the wider set of browsers that Ember.js itself supports. However, if your app does not need to support IE anymore, you can change it to:</source>
          <target state="translated">Эта конфигурация по умолчанию соответствует более широкому набору браузеров,которые поддерживает сам Ember.js.Однако,если вашему приложению больше не требуется поддержка IE,вы можете изменить его:</target>
        </trans-unit>
        <trans-unit id="1c82a49b447f0a46a1e511a5df799dfb0834560f" translate="yes" xml:space="preserve">
          <source>That file should export a function wrapped with &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html&quot;&gt;&lt;code&gt;Ember.Helper.helper()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Этот файл должен экспортировать функцию, заключенную в &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html&quot;&gt; &lt;code&gt;Ember.Helper.helper()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3b922bfea8e08f9290c3bf2fa6bff5f3b54ebd4c" translate="yes" xml:space="preserve">
          <source>That is Ember telling you that it has created:</source>
          <target state="translated">Это Эмбер говорит тебе,что она создала:</target>
        </trans-unit>
        <trans-unit id="e0de9e3a4d4633aeeb18a289a56bd4805b9cfcbf" translate="yes" xml:space="preserve">
          <source>That is why Ember CLI exposes a way of configuring what browsers your app targets. It can figure out automatically what features are supported by the browsers you are targeting, and apply the minimum set of transformations possible to your code.</source>
          <target state="translated">Вот почему Ember CLI раскрывает способ настройки того,какие браузеры являются целями вашего приложения.Он может автоматически определить,какие функции поддерживаются браузерами,в которых вы нацелены,и применить к вашему коду минимально возможный набор преобразований.</target>
        </trans-unit>
        <trans-unit id="9c3ec01be68e48073d9e918cf0f3b59651463160" translate="yes" xml:space="preserve">
          <source>That makes it easy to remember how to add an action to a component. It's like passing an attribute, but you use the &lt;code&gt;action&lt;/code&gt; helper to pass a function instead.</source>
          <target state="translated">Это позволяет легко запомнить, как добавить действие к компоненту. Это похоже на передачу атрибута, но вместо этого вы используете помощник &lt;code&gt;action&lt;/code&gt; для передачи функции.</target>
        </trans-unit>
        <trans-unit id="78ba75708cf1770d1ec144b19670b70c95278a4c" translate="yes" xml:space="preserve">
          <source>That said, sometimes you may want to make behavior of helpers configurable by the developers that call them from their templates. For example, let's abandon our Americentric ways and update our &lt;code&gt;format-currency&lt;/code&gt; helper to take an optional configuration for which currency symbol to display.</source>
          <target state="translated">Тем не менее, иногда вы можете захотеть сделать поведение помощников настраиваемым разработчиками, которые вызывают их из своих шаблонов. Например, давайте откажемся от наших американских методов и обновим наш помощник &lt;code&gt;format-currency&lt;/code&gt; , чтобы принять дополнительную конфигурацию для отображения символа валюты.</target>
        </trans-unit>
        <trans-unit id="d7606bb113640faa278cf7a28f2eb3e24d5170f8" translate="yes" xml:space="preserve">
          <source>That state is what the &lt;code&gt;ApplicationInstance&lt;/code&gt; manages: it is responsible for creating the container that contains all application state, and disposing of it once the particular test run or FastBoot request has finished.</source>
          <target state="translated">Этим состоянием управляет &lt;code&gt;ApplicationInstance&lt;/code&gt; : он отвечает за создание контейнера, который содержит все состояние приложения, и за его удаление после завершения конкретного тестового запуска или запроса FastBoot.</target>
        </trans-unit>
        <trans-unit id="e53c9021b9ec9d905f7edbfc8bee2fd601077a71" translate="yes" xml:space="preserve">
          <source>That way the generated URL will be deterministic and that simplifies caching mechanisms in the backend.</source>
          <target state="translated">Таким образом,сгенерированный URL будет детерминирован,что упрощает механизмы кэширования во внутреннем интерфейсе.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="cca06a831613fdc449a54b01a0421b8fde878db7" translate="yes" xml:space="preserve">
          <source>The &quot;this&quot; binding for the callback</source>
          <target state="translated">Эта&quot; привязка для обратного вызова</target>
        </trans-unit>
        <trans-unit id="ccc5b4bf89b158d0eb41c14adb3ba628e5e78e8e" translate="yes" xml:space="preserve">
          <source>The 'Whoops' error will be thrown on the next turn of the event loop and you can watch for it in your console. You can also handle it using a rejection handler given to &lt;code&gt;.then&lt;/code&gt; or &lt;code&gt;.catch&lt;/code&gt; on the returned promise.</source>
          <target state="translated">Ошибка 'Whoops' будет выдана на следующем повороте цикла событий, и вы сможете следить за ней в своей консоли. Вы также можете обработать это, используя обработчик отклонения, переданный в &lt;code&gt;.then&lt;/code&gt; или &lt;code&gt;.catch&lt;/code&gt; в возвращенном обещании.</target>
        </trans-unit>
        <trans-unit id="12f898edea55f5f355fe5f02c909ee411cb027ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Router.html#method_map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method of your Ember application's router can be invoked to define URL mappings. When calling &lt;code&gt;map()&lt;/code&gt;, you should pass a function that will be invoked with the value &lt;code&gt;this&lt;/code&gt; set to an object which you can use to create routes.</source>
          <target state="translated">Метод &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Router.html#method_map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; маршрутизатора вашего приложения Ember может быть вызван для определения сопоставлений URL-адресов. При вызове &lt;code&gt;map()&lt;/code&gt; , вы должны передать функцию , которая будет вызываться со значением &lt;code&gt;this&lt;/code&gt; набора на объект , который можно использовать для создания маршрутов.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
