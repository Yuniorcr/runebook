<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="75a493de9241c82f031763f7575bf52af90e724d" translate="yes" xml:space="preserve">
          <source>An example counting stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08acb151a713982f42c88e2ce1ebc13e3816477f" translate="yes" xml:space="preserve">
          <source>An example duplex stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17b8d98a540bae9dcb283f60ef724034d72f057" translate="yes" xml:space="preserve">
          <source>An example of the possible output looks like:</source>
          <target state="translated">Пример возможного вывода выглядит так:</target>
        </trans-unit>
        <trans-unit id="ef4051855537ff25bfcec1b43d6c23a547d8eeea" translate="yes" xml:space="preserve">
          <source>An example of this object looks like:</source>
          <target state="translated">Пример этого объекта выглядит так:</target>
        </trans-unit>
        <trans-unit id="dd7b93e397ecc47eaefd5ddf11e2dd3a5ecf52fc" translate="yes" xml:space="preserve">
          <source>An example policy file that would allow loading a file &lt;code&gt;checked.js&lt;/code&gt;:</source>
          <target state="translated">Пример файла политики, который позволит загрузить файл &lt;code&gt;checked.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2dba28fa39644fb344561450fbc7221ec876ad05" translate="yes" xml:space="preserve">
          <source>An example socket listening on an exclusive port is shown below.</source>
          <target state="translated">Пример прослушивания сокета в эксклюзивном порту показан ниже.</target>
        </trans-unit>
        <trans-unit id="0bfe7463612d597b46ebcb572f5c9578c2184e10" translate="yes" xml:space="preserve">
          <source>An example to read the last 10 bytes of a file which is 100 bytes long:</source>
          <target state="translated">Пример для чтения последних 10 байт файла длиной 100 байт:</target>
        </trans-unit>
        <trans-unit id="c8dbc9ff2161b0d335ddbb301e8328c46943af97" translate="yes" xml:space="preserve">
          <source>An example writable stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d30ee4a50e6e4b86d9d75d96b03bc39c11b3fe" translate="yes" xml:space="preserve">
          <source>An exception is thrown when any of the input arguments specify invalid values or types.</source>
          <target state="translated">Исключение бросается,когда любой из входных аргументов указывает недопустимые значения или типы.</target>
        </trans-unit>
        <trans-unit id="3bde95521f017404d4980ffe8a6e1bec685970ed" translate="yes" xml:space="preserve">
          <source>An exception is thrown when key derivation fails, otherwise the derived key is returned as a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Исключение генерируется, когда получение ключа не удается, в противном случае производный ключ возвращается как &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fea6f070cd0b84891be844a8303fa5b64d18cd5e" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if there is no active inspector.</source>
          <target state="translated">Исключение будет сделано,если нет активного инспектора.</target>
        </trans-unit>
        <trans-unit id="e07a43c5ecaa51806da3107ae1ddcb6b26acfe0e" translate="yes" xml:space="preserve">
          <source>An excessive amount of TLS renegotiations is detected, which is a potential vector for denial-of-service attacks.</source>
          <target state="translated">Обнаружено чрезмерное количество перезаключений TLS,что является потенциальным вектором атак типа &quot;отказ в обслуживании&quot;.</target>
        </trans-unit>
        <trans-unit id="621fc2854b0439015e157bdf7bb5600e1e14c87c" translate="yes" xml:space="preserve">
          <source>An immutable array of strings representing the root certificates (in PEM format) from the bundled Mozilla CA store as supplied by current Node.js version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d19b06a61b76fe42960a67fd72ca25306e372e" translate="yes" xml:space="preserve">
          <source>An immutable array of strings representing the root certificates (in PEM format) used for verifying peer certificates. This is the default value of the &lt;code&gt;ca&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Неизменяемый массив строк, представляющих корневые сертификаты (в формате PEM), используемые для проверки одноранговых сертификатов. Это значение по умолчанию &lt;code&gt;ca&lt;/code&gt; возможности &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f64687b379f25cbf7341d6c2db0587a3a214b1a6" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;&lt;code&gt;TextDecoder&lt;/code&gt; API.</source>
          <target state="translated">Реализация &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;стандартного&lt;/a&gt; API &lt;code&gt;TextDecoder&lt;/code&gt; WHATWG Encoding .</target>
        </trans-unit>
        <trans-unit id="465486ad112893f6cf37e501cabba08f692f0c30" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;&lt;code&gt;TextEncoder&lt;/code&gt; API. All instances of &lt;code&gt;TextEncoder&lt;/code&gt; only support UTF-8 encoding.</source>
          <target state="translated">Реализация &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard &lt;/a&gt; &lt;code&gt;TextEncoder&lt;/code&gt; API. Все экземпляры &lt;code&gt;TextEncoder&lt;/code&gt; поддерживают только кодировку UTF-8.</target>
        </trans-unit>
        <trans-unit id="772f242da466fc2876537ecd2e8ecd5fbfa3671c" translate="yes" xml:space="preserve">
          <source>An important drawback when calling &lt;code&gt;process.dlopen()&lt;/code&gt; is that the &lt;code&gt;module&lt;/code&gt; instance must be passed. Functions exported by the C++ Addon will be accessible via &lt;code&gt;module.exports&lt;/code&gt;.</source>
          <target state="translated">Важным недостатком вызова &lt;code&gt;process.dlopen()&lt;/code&gt; является необходимость передачи экземпляра &lt;code&gt;module&lt;/code&gt; . Функции, экспортируемые C ++ Addon, будут доступны через &lt;code&gt;module.exports&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ebe1511f4205a6788c71fe6bfbaa3175a76fbf3" translate="yes" xml:space="preserve">
          <source>An improved alternative API is available.</source>
          <target state="translated">Доступен улучшенный альтернативный API.</target>
        </trans-unit>
        <trans-unit id="75991723a893d8562531695bc09a4b9d4688d3a7" translate="yes" xml:space="preserve">
          <source>An independent resolver for DNS requests.</source>
          <target state="translated">Независимый преобразователь для DNS-запросов.</target>
        </trans-unit>
        <trans-unit id="cf8bc634a78c05d439a35bcfcabef1d71264eeba" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; class that provides performance metrics for specific Node.js operational milestones.</source>
          <target state="translated">Экземпляр класса &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; , который предоставляет метрики производительности для определенных этапов работы Node.js.</target>
        </trans-unit>
        <trans-unit id="073f106d3f9e3d5509f6a7b0b26f848582951349" translate="yes" xml:space="preserve">
          <source>An integer identifier for the current thread. On the corresponding worker object (if there is any), it is available as &lt;a href=&quot;#worker_threads_worker_threadid_1&quot;&gt;&lt;code&gt;worker.threadId&lt;/code&gt;&lt;/a&gt;. This value is unique for each &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; instance inside a single process.</source>
          <target state="translated">Целочисленный идентификатор текущего потока. На соответствующем рабочем объекте (если он есть) он доступен как &lt;a href=&quot;#worker_threads_worker_threadid_1&quot;&gt; &lt;code&gt;worker.threadId&lt;/code&gt; &lt;/a&gt; . Это значение уникально для каждого экземпляра &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; внутри одного процесса.</target>
        </trans-unit>
        <trans-unit id="2f5ec5e060c74b93d50346bf8f6f2198cd3ecdb3" translate="yes" xml:space="preserve">
          <source>An integer identifier for the referenced thread. Inside the worker thread, it is available as &lt;a href=&quot;#worker_threads_worker_threadid&quot;&gt;&lt;code&gt;require('worker_threads').threadId&lt;/code&gt;&lt;/a&gt;. This value is unique for each &lt;code&gt;Worker&lt;/code&gt; instance inside a single process.</source>
          <target state="translated">Целочисленный идентификатор указанного потока. Внутри рабочего потока он доступен как &lt;a href=&quot;#worker_threads_worker_threadid&quot;&gt; &lt;code&gt;require('worker_threads').threadId&lt;/code&gt; &lt;/a&gt; . Это значение уникально для каждого экземпляра &lt;code&gt;Worker&lt;/code&gt; внутри одного процесса.</target>
        </trans-unit>
        <trans-unit id="62c6f6c1e4eb21e635a4551d4f5637d6dfc06901" translate="yes" xml:space="preserve">
          <source>An internal method used to parse and execute &lt;code&gt;REPLServer&lt;/code&gt; keywords. Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;keyword&lt;/code&gt; is a valid keyword, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Внутренний метод, используемый для анализа и выполнения &lt;code&gt;REPLServer&lt;/code&gt; слов REPLServer . Возвращает &lt;code&gt;true&lt;/code&gt; если &lt;code&gt;keyword&lt;/code&gt; является допустимым ключевым словом, в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d397be77840ab5f827913c084b4c79b7fe2a871" translate="yes" xml:space="preserve">
          <source>An invalid (negative) size was passed for either the &lt;code&gt;recvBufferSize&lt;/code&gt; or &lt;code&gt;sendBufferSize&lt;/code&gt; options in &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt;&lt;code&gt;dgram.createSocket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для параметров &lt;code&gt;recvBufferSize&lt;/code&gt; или &lt;code&gt;sendBufferSize&lt;/code&gt; в &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt; &lt;code&gt;dgram.createSocket()&lt;/code&gt; &lt;/a&gt; недопустимый (отрицательный) размер .</target>
        </trans-unit>
        <trans-unit id="7811c770cd0545873f140d055f4619346dfbfaff" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;crypto#crypto_crypto_gethashes&quot;&gt;crypto digest algorithm&lt;/a&gt; was specified.</source>
          <target state="translated">Указан неверный &lt;a href=&quot;crypto#crypto_crypto_gethashes&quot;&gt;алгоритм&lt;/a&gt; криптодайджеста.</target>
        </trans-unit>
        <trans-unit id="8b6dce681dc9a6b84eac0557bbb9b1f6e6b2db2b" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file was found which failed parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c155df62e478d3b9758238feb53f02d10d5052" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;asyncId&lt;/code&gt; or &lt;code&gt;triggerAsyncId&lt;/code&gt; was passed using &lt;code&gt;AsyncHooks&lt;/code&gt;. An id less than -1 should never happen.</source>
          <target state="translated">Недопустимый &lt;code&gt;asyncId&lt;/code&gt; или &lt;code&gt;triggerAsyncId&lt;/code&gt; был передан с помощью &lt;code&gt;AsyncHooks&lt;/code&gt; . Идентификатор меньше -1 никогда не должен происходить.</target>
        </trans-unit>
        <trans-unit id="53097ec4ce908207bdaf04b568c122a0bf8fb6ed" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;options.protocol&lt;/code&gt; was passed to &lt;code&gt;http.request()&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;http.request()&lt;/code&gt; был передан недопустимый &lt;code&gt;options.protocol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42218c520bddcf03f853c29f8c39cb72deb7af44" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;package.json&lt;/code&gt; file was found which failed parsing.</source>
          <target state="translated">Обнаружен недопустимый файл &lt;code&gt;package.json&lt;/code&gt; , разбор которого завершился неудачно.</target>
        </trans-unit>
        <trans-unit id="9137a3f9b39eceb7fdf8223922ed3ee4bc96892f" translate="yes" xml:space="preserve">
          <source>An invalid HTTP header value was specified.</source>
          <target state="translated">Было указано недопустимое значение заголовка HTTP.</target>
        </trans-unit>
        <trans-unit id="4d9592829c9771da1ed36ca7f3ae4ac3e02fb945" translate="yes" xml:space="preserve">
          <source>An invalid HTTP informational status code has been specified. Informational status codes must be an integer between &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;199&lt;/code&gt; (inclusive).</source>
          <target state="translated">Указан недопустимый информационный код состояния HTTP. Информационные коды состояния должны быть целыми числами от &lt;code&gt;100&lt;/code&gt; до &lt;code&gt;199&lt;/code&gt; (включительно).</target>
        </trans-unit>
        <trans-unit id="83799af7f1d4bcb81b1ba9abe624aceb9dd1dd5f" translate="yes" xml:space="preserve">
          <source>An invalid HTTP status code has been specified. Status codes must be an integer between &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;599&lt;/code&gt; (inclusive).</source>
          <target state="translated">Указан недопустимый код состояния HTTP. Коды состояния должны быть целыми числами от &lt;code&gt;100&lt;/code&gt; до &lt;code&gt;599&lt;/code&gt; (включительно).</target>
        </trans-unit>
        <trans-unit id="a2b589c62d968af0c7d9fadb38e1a1697e4c0a9c" translate="yes" xml:space="preserve">
          <source>An invalid HTTP token was supplied.</source>
          <target state="translated">Поставлен недействительный HTTP-токен.</target>
        </trans-unit>
        <trans-unit id="1b05ff2c6deb148ba62b8fd02c85c5fe55314f80" translate="yes" xml:space="preserve">
          <source>An invalid HTTP/2 header value was specified.</source>
          <target state="translated">Было указано недопустимое значение заголовка HTTP/2.</target>
        </trans-unit>
        <trans-unit id="c275cebc9b7406d1b49bb487d1475c5739fe123b" translate="yes" xml:space="preserve">
          <source>An invalid URI was passed.</source>
          <target state="translated">Прошла недействительная УРТ.</target>
        </trans-unit>
        <trans-unit id="ee3a107d8f7d196eb5efd8908e428b326baa42e0" translate="yes" xml:space="preserve">
          <source>An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_url_input_base&quot;&gt;&lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</source>
          <target state="translated">Недействительный URL был передан &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_url_input_base&quot;&gt; &lt;code&gt;URL&lt;/code&gt; конструктор&lt;/a&gt; должен быть проанализирован. Выброшенный объект ошибки обычно имеет дополнительное свойство &lt;code&gt;'input'&lt;/code&gt; которое содержит URL-адрес, который не удалось проанализировать.</target>
        </trans-unit>
        <trans-unit id="9ddca0b75f36007e1835b117f0a56f78c281b32f" translate="yes" xml:space="preserve">
          <source>An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_url_input_base&quot;&gt;&lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad4b296955522d81c3e29330609d148ae654284" translate="yes" xml:space="preserve">
          <source>An invalid crypto engine identifier was passed to &lt;a href=&quot;crypto#crypto_crypto_setengine_engine_flags&quot;&gt;&lt;code&gt;require('crypto').setEngine()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В &lt;a href=&quot;crypto#crypto_crypto_setengine_engine_flags&quot;&gt; &lt;code&gt;require('crypto').setEngine()&lt;/code&gt; &lt;/a&gt; был передан недопустимый идентификатор криптосистемы .</target>
        </trans-unit>
        <trans-unit id="3c87de6f3d6bde59b26313418fd494f0540a908b" translate="yes" xml:space="preserve">
          <source>An invalid or unexpected value was passed in an options object.</source>
          <target state="translated">Некорректное или неожиданное значение было передано в объекте опций.</target>
        </trans-unit>
        <trans-unit id="de46bdff8a429a43fe6d0229ba2dab03fb547365" translate="yes" xml:space="preserve">
          <source>An invalid or unknown encoding option was passed to an API.</source>
          <target state="translated">В API была передана опция недействительной или неизвестной кодировки.</target>
        </trans-unit>
        <trans-unit id="24caaedef2e4a699105e8a8fc8217ae223022cf7" translate="yes" xml:space="preserve">
          <source>An invalid or unknown file encoding was passed.</source>
          <target state="translated">Была передана недействительная или неизвестная файловая кодировка.</target>
        </trans-unit>
        <trans-unit id="a007b066557bd652706f1a74c116ab07f669750a" translate="yes" xml:space="preserve">
          <source>An invalid or unknown process signal was passed to an API expecting a valid signal (such as &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt;&lt;code&gt;subprocess.kill()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">В API, ожидающий действительного сигнала (например, &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt; &lt;code&gt;subprocess.kill()&lt;/code&gt; &lt;/a&gt; ), был передан недопустимый или неизвестный сигнал процесса .</target>
        </trans-unit>
        <trans-unit id="a2cc1bcceb942d934ea0b3721ed55b0e52bb22c4" translate="yes" xml:space="preserve">
          <source>An invalid or unsupported value was passed for a given argument.</source>
          <target state="translated">Для данного аргумента передавалось недействительное или неподдерживаемое значение.</target>
        </trans-unit>
        <trans-unit id="7467250ab9219c384d82de1c709db4f285ccad29" translate="yes" xml:space="preserve">
          <source>An invalid parameter key was passed during construction of a Brotli stream.</source>
          <target state="translated">При построении потока Brotli был передан недействительный ключ параметра.</target>
        </trans-unit>
        <trans-unit id="81a0ff15c7024ddfbc1bf026e9ad2665191b4014" translate="yes" xml:space="preserve">
          <source>An invalid symlink type was passed to the &lt;a href=&quot;fs#fs_fs_symlink_target_path_type_callback&quot;&gt;&lt;code&gt;fs.symlink()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fs#fs_fs_symlinksync_target_path_type&quot;&gt;&lt;code&gt;fs.symlinkSync()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">В методы &lt;a href=&quot;fs#fs_fs_symlink_target_path_type_callback&quot;&gt; &lt;code&gt;fs.symlink()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;fs#fs_fs_symlinksync_target_path_type&quot;&gt; &lt;code&gt;fs.symlinkSync()&lt;/code&gt; &lt;/a&gt; был передан недопустимый тип символической ссылки .</target>
        </trans-unit>
        <trans-unit id="00a8ea030cf6ba0724a3964f36a2d15725147280" translate="yes" xml:space="preserve">
          <source>An invalid transfer object was passed to &lt;code&gt;postMessage()&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;postMessage()&lt;/code&gt; был передан недопустимый объект передачи .</target>
        </trans-unit>
        <trans-unit id="a2b09312d9dbda06905e152f8c7977c5e852e71e" translate="yes" xml:space="preserve">
          <source>An invalid value for the &lt;code&gt;format&lt;/code&gt; argument was passed to the &lt;code&gt;crypto.ECDH()&lt;/code&gt; class &lt;code&gt;getPublicKey()&lt;/code&gt; method.</source>
          <target state="translated">В метод &lt;code&gt;crypto.ECDH()&lt;/code&gt; класса &lt;code&gt;getPublicKey()&lt;/code&gt; было передано недопустимое значение аргумента &lt;code&gt;format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc084bd4b5ed2a8658576de1650e9b190ed4b7c4" translate="yes" xml:space="preserve">
          <source>An invalid value for the &lt;code&gt;key&lt;/code&gt; argument has been passed to the &lt;code&gt;crypto.ECDH()&lt;/code&gt; class &lt;code&gt;computeSecret()&lt;/code&gt; method. It means that the public key lies outside of the elliptic curve.</source>
          <target state="translated">Недопустимое значение &lt;code&gt;key&lt;/code&gt; аргумента было передано в метод &lt;code&gt;crypto.ECDH()&lt;/code&gt; класса &lt;code&gt;computeSecret()&lt;/code&gt; . Это означает, что открытый ключ лежит за пределами эллиптической кривой.</target>
        </trans-unit>
        <trans-unit id="3009fac2b6e73c17013ea91a7f4eaedc24157a05" translate="yes" xml:space="preserve">
          <source>An invalid value has been specified for an HTTP/2 setting.</source>
          <target state="translated">Для настройки HTTP/2 было указано недействительное значение.</target>
        </trans-unit>
        <trans-unit id="32ab517d4da5af678eb83c61361b8c36f8e2b5d5" translate="yes" xml:space="preserve">
          <source>An iterable argument (i.e. a value that works with &lt;code&gt;for...of&lt;/code&gt; loops) was required, but not provided to a Node.js API.</source>
          <target state="translated">Итерируемый аргумент (т. Е. Значение, которое работает с циклами &lt;code&gt;for...of&lt;/code&gt; ) был необходим, но не предоставлялся API Node.js.</target>
        </trans-unit>
        <trans-unit id="4610068747893484ab3879a4c639d496953ba03a" translate="yes" xml:space="preserve">
          <source>An npm module like &lt;a href=&quot;https://www.npmjs.com/package/asn1.js&quot;&gt;asn1.js&lt;/a&gt; may be used to parse the certificates.</source>
          <target state="translated">Для анализа сертификатов можно использовать модуль npm, например &lt;a href=&quot;https://www.npmjs.com/package/asn1.js&quot;&gt;asn1.js.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95da227cd31de28e86d36a76b4b278ad4698ef51" translate="yes" xml:space="preserve">
          <source>An object containing the outbound headers sent for this &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">Объект, содержащий исходящие заголовки, отправленные для этого &lt;code&gt;Http2Stream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="183b51e83da82dce17c49c6f273d37539988cb1c" translate="yes" xml:space="preserve">
          <source>An object containing the outbound trailers sent for this &lt;code&gt;HttpStream&lt;/code&gt;.</source>
          <target state="translated">Объект, содержащий исходящие трейлеры, отправленные для этого &lt;code&gt;HttpStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f487c2ed91ee4a19f8894795e55dc5b677aaaf" translate="yes" xml:space="preserve">
          <source>An object describing the current status of this &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">Объект, описывающий текущий статус этого &lt;code&gt;Http2Session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccbe3117ca08d126e354464168b8f810e16ed66e" translate="yes" xml:space="preserve">
          <source>An object that can be used to collect performance metrics from the current Node.js instance. It is similar to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;&lt;code&gt;window.performance&lt;/code&gt;&lt;/a&gt; in browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d012b4cbac012416e5a8413aafa99ab4508b3d1b" translate="yes" xml:space="preserve">
          <source>An object that needs to be explicitly listed in the &lt;code&gt;transferList&lt;/code&gt; argument is in the object passed to a &lt;code&gt;postMessage()&lt;/code&gt; call, but is not provided in the &lt;code&gt;transferList&lt;/code&gt; for that call. Usually, this is a &lt;code&gt;MessagePort&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b7871e6761c9fb25bf5b796b0baadaa89a7ed5" translate="yes" xml:space="preserve">
          <source>An object which contains arrays of sockets currently awaiting use by the agent when &lt;code&gt;keepAlive&lt;/code&gt; is enabled. Do not modify.</source>
          <target state="translated">Объект, который содержит массивы сокетов, ожидающих в настоящее время использования агентом, когда включен &lt;code&gt;keepAlive&lt;/code&gt; . Не изменять.</target>
        </trans-unit>
        <trans-unit id="0bec9feba2dd520f9e0bbc76822cbb0e52455087" translate="yes" xml:space="preserve">
          <source>An object which contains arrays of sockets currently in use by the agent. Do not modify.</source>
          <target state="translated">Объект,содержащий массивы сокетов,используемых в настоящее время агентом.Не изменять.</target>
        </trans-unit>
        <trans-unit id="574531c54ab478f216006078f3cf769b59551436" translate="yes" xml:space="preserve">
          <source>An object which contains queues of requests that have not yet been assigned to sockets. Do not modify.</source>
          <target state="translated">Объект,содержащий очереди запросов,которые еще не были назначены сокетам.Не изменять.</target>
        </trans-unit>
        <trans-unit id="c8c2ef690c15e955957189dc54681023c2809f41" translate="yes" xml:space="preserve">
          <source>An opaque value returned by &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;. It must be passed to &lt;a href=&quot;#n_api_napi_remove_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_remove_async_cleanup_hook&lt;/code&gt;&lt;/a&gt; when the chain of asynchronous cleanup events completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50691234f37a43a5cbb36f3b7d8d1a8227e344dc" translate="yes" xml:space="preserve">
          <source>An operation failed because the &lt;code&gt;Worker&lt;/code&gt; instance is not currently running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b65eb047b7d478fbb60f8f45b17eea8fff6a0c1" translate="yes" xml:space="preserve">
          <source>An operation outside the bounds of a &lt;code&gt;Buffer&lt;/code&gt; was attempted.</source>
          <target state="translated">Была предпринята попытка операции за пределами &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af34a6f3533f1490f6c0ad6743f050beea1de990" translate="yes" xml:space="preserve">
          <source>An operation was performed on a stream that had already been destroyed.</source>
          <target state="translated">Была проведена операция на уже уничтоженном ручье.</target>
        </trans-unit>
        <trans-unit id="932cb566059b93f41fa9ea4f4b56532c06b7c507" translate="yes" xml:space="preserve">
          <source>An option pair is incompatible with each other and can not be used at the same time.</source>
          <target state="translated">Опционная пара несовместима друг с другом и не может использоваться одновременно.</target>
        </trans-unit>
        <trans-unit id="c8ec70c5288ddd82e641736f55d4054d4105002d" translate="yes" xml:space="preserve">
          <source>An option pair is incompatible with each other and cannot be used at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95444c63949101ef084927c9ccadb4abbaaedae0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;callback&lt;/code&gt; function may be specified to as a way of reporting DNS errors or for determining when it is safe to reuse the &lt;code&gt;buf&lt;/code&gt; object. DNS lookups delay the time to send for at least one tick of the Node.js event loop.</source>
          <target state="translated">Необязательная функция &lt;code&gt;callback&lt;/code&gt; может быть указана как способ сообщения об ошибках DNS или для определения того, когда можно повторно использовать объект &lt;code&gt;buf&lt;/code&gt; . Поиск DNS задерживает время отправки по крайней мере на один тик цикла событий Node.js.</target>
        </trans-unit>
        <trans-unit id="b20732420864901a779e958ee3751618b59c91e1" translate="yes" xml:space="preserve">
          <source>An overview of available Node.js and JavaScript features for each &lt;code&gt;configure&lt;/code&gt; option:</source>
          <target state="translated">Обзор доступных функций Node.js и JavaScript для каждого параметра &lt;code&gt;configure&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="517634b9ccd1b10a5177eb481209c6e3ea5f0285" translate="yes" xml:space="preserve">
          <source>An unhandled error occurred (for instance, when an &lt;code&gt;'error'&lt;/code&gt; event is emitted by an &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; but an &lt;code&gt;'error'&lt;/code&gt; handler is not registered).</source>
          <target state="translated">Произошла необработанная ошибка (например, когда событие &lt;code&gt;'error'&lt;/code&gt; генерируется &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; ,&lt;/a&gt; но обработчик &lt;code&gt;'error'&lt;/code&gt; не зарегистрирован).</target>
        </trans-unit>
        <trans-unit id="d8bcdfb4911d0ae108bd19887ba6f3216c231e3f" translate="yes" xml:space="preserve">
          <source>An unknown Diffie-Hellman group name was given. See &lt;a href=&quot;crypto#crypto_crypto_getdiffiehellman_groupname&quot;&gt;&lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt;&lt;/a&gt; for a list of valid group names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e4b5da4f03ef3c7b6ac903cf3593f74c7a8b8d" translate="yes" xml:space="preserve">
          <source>An unknown cipher was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03eb20f5f7c3d76127e4c989549f01734b6a592" translate="yes" xml:space="preserve">
          <source>An unspecified or non-specific system error has occurred within the Node.js process. The error object will have an &lt;code&gt;err.info&lt;/code&gt; object property with additional details.</source>
          <target state="translated">В процессе Node.js. произошла неопределенная или неспецифическая системная ошибка. Объект ошибки будет иметь &lt;code&gt;err.info&lt;/code&gt; объекта err.info с дополнительными сведениями.</target>
        </trans-unit>
        <trans-unit id="67258f57db5b4a3cc9c6a65e3e3c6dfb93bb7131" translate="yes" xml:space="preserve">
          <source>An upgrade of zlib from 1.2.8 to 1.2.11 changed behavior when &lt;code&gt;windowBits&lt;/code&gt; is set to 8 for raw deflate streams. zlib would automatically set &lt;code&gt;windowBits&lt;/code&gt; to 9 if was initially set to 8. Newer versions of zlib will throw an exception, so Node.js restored the original behavior of upgrading a value of 8 to 9, since passing &lt;code&gt;windowBits = 9&lt;/code&gt; to zlib actually results in a compressed stream that effectively uses an 8-bit window only.</source>
          <target state="translated">Обновление zlib с 1.2.8 до 1.2.11 изменило поведение, когда для параметра &lt;code&gt;windowBits&lt;/code&gt; установлено значение 8 для необработанных потоков deflate. zlib автоматически установит для &lt;code&gt;windowBits&lt;/code&gt; значение 9, если изначально было установлено значение 8. Более новые версии zlib будут генерировать исключение, поэтому Node.js восстановил исходное поведение обновления значения от 8 до 9, поскольку передача &lt;code&gt;windowBits = 9&lt;/code&gt; в zlib фактически приводит к сжатый поток, который эффективно использует только 8-битное окно.</target>
        </trans-unit>
        <trans-unit id="00e6d062dac71b7d742d5963e696914e6babed7f" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;process.argv&lt;/code&gt;:</source>
          <target state="translated">И &lt;code&gt;process.argv&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="97fa00e54b04b304f7deb69f8dcf363d2c860ae0" translate="yes" xml:space="preserve">
          <source>And a &lt;code&gt;b.mjs&lt;/code&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1682ca355307660a3f96e00d5d42a46511a1296d" translate="yes" xml:space="preserve">
          <source>And then the child script, &lt;code&gt;'sub.js'&lt;/code&gt; might look like this:</source>
          <target state="translated">И тогда дочерний скрипт &lt;code&gt;'sub.js'&lt;/code&gt; может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="b3c11e24252f2dad6195fd778356100cba5fea75" translate="yes" xml:space="preserve">
          <source>Another common scenario is creating JavaScript functions that wrap C++ functions and returning those back to JavaScript:</source>
          <target state="translated">Другим распространенным сценарием является создание JavaScript-функций,которые обертывают C++-функции и возвращают их обратно в JavaScript:</target>
        </trans-unit>
        <trans-unit id="2063cb7c40b85070ef82e59ab101799c2f0c63ba" translate="yes" xml:space="preserve">
          <source>Another option is to use the macro &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt;, which will also construct a context-aware addon. Unlike &lt;code&gt;NODE_MODULE()&lt;/code&gt;, which is used to construct an addon around a given addon initializer function, &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; serves as the declaration of such an initializer to be followed by a function body.</source>
          <target state="translated">Другой вариант - использовать макрос &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; , который также создаст контекстно-зависимое дополнение. В отличие от &lt;code&gt;NODE_MODULE()&lt;/code&gt; , который используется для создания надстройки вокруг заданной функции инициализатора &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; , NODE_MODULE_INIT () служит объявлением такого инициализатора, за которым следует тело функции.</target>
        </trans-unit>
        <trans-unit id="64bee649fb004765d623fe6d5f4bbb2d5c4fca3f" translate="yes" xml:space="preserve">
          <source>Another subtlety with promises is that &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks are run only on chained promises. That means promises not created by &lt;code&gt;then()&lt;/code&gt;/&lt;code&gt;catch()&lt;/code&gt; will not have the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks fired on them. For more details see the details of the V8 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;PromiseHooks&lt;/a&gt; API.</source>
          <target state="translated">Еще одна тонкость с обещаниями заключается в том, что обратные вызовы &lt;code&gt;before&lt;/code&gt; и &lt;code&gt;after&lt;/code&gt; выполняются только для связанных обещаний. Это означает, что для обещаний, не созданных до &lt;code&gt;then()&lt;/code&gt; / &lt;code&gt;catch()&lt;/code&gt; , не будут запущены обратные вызовы &lt;code&gt;before&lt;/code&gt; и &lt;code&gt;after&lt;/code&gt; . Дополнительные сведения см. В подробностях API V8 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;PromiseHooks&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="452132444b9c17b1f4a3b5f53e637fb09b4050d7" translate="yes" xml:space="preserve">
          <source>Another way of stating this is that, unlike in synchronous code where there is an ever-growing list of unhandled exceptions, with Promises there can be a growing-and-shrinking list of unhandled rejections.</source>
          <target state="translated">Другой способ заявить об этом заключается в том,что в отличие от синхронного кода,где существует постоянно растущий список необработанных исключений,с обещаниями может быть растущий и сокращающийся список необработанных отказов.</target>
        </trans-unit>
        <trans-unit id="b5458511eeafd97391af848cefb0b1fefa7408ad" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;'message'&lt;/code&gt; handlers in the subprocess should verify that &lt;code&gt;socket&lt;/code&gt; exists, as the connection may have been closed during the time it takes to send the connection to the child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37742033adba3790a77e5a50e4d67d2fc75cc7f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Promise&lt;/code&gt;s created in VM contexts no longer have a &lt;code&gt;.domain&lt;/code&gt; property. Their handlers are still executed in the proper domain, however, and &lt;code&gt;Promise&lt;/code&gt;s created in the main context still possess a &lt;code&gt;.domain&lt;/code&gt; property.</source>
          <target state="translated">Любые &lt;code&gt;Promise&lt;/code&gt; созданные в контекстах виртуальных &lt;code&gt;.domain&lt;/code&gt; больше не имеют свойства .domain . Однако их обработчики по-прежнему выполняются в правильном домене, а &lt;code&gt;Promise&lt;/code&gt; , созданные в основном контексте, по-прежнему обладают свойством &lt;code&gt;.domain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2ee797e574b6c944fe2a4ff3ef79ed761ea396d" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">Любой &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; может быть передан как &lt;code&gt;buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="987efb4c260bd2f0023d795f7d3bff1fe65839a0" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;process.nextTick&lt;/code&gt;s or Promises scheduled on the microtask queue by JavaScript during the callback are ran before returning back to C/C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53139ef94d4a1932a95d3ff3710e504d2f270c2b" translate="yes" xml:space="preserve">
          <source>Any N-API function call may result in a pending JavaScript exception. This is obviously the case for any function that may cause the execution of JavaScript, but N-API specifies that an exception may be pending on return from any of the API functions.</source>
          <target state="translated">Любой вызов функции N-API может привести к отложенному исключению JavaScript.Очевидно,что это относится к любой функции,которая может привести к выполнению JavaScript,однако N-API указывает,что исключение может быть отложено по возвращении из любой из функций API.</target>
        </trans-unit>
        <trans-unit id="b79798cf5d9819d0e83cf9a7afc5a59744b1afa9" translate="yes" xml:space="preserve">
          <source>Any N-API function call may result in a pending JavaScript exception. This is the case for any of the API functions, even those that may not cause the execution of JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85017420a48e8df1372d29bc406784baba94cd7" translate="yes" xml:space="preserve">
          <source>Any invalid URL characters appearing in the value assigned the &lt;code&gt;search&lt;/code&gt; property will be &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;percent-encoded&lt;/a&gt;. The selection of which characters to percent-encode may vary somewhat from what the &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt;&lt;code&gt;url.parse()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format()&lt;/code&gt;&lt;/a&gt; methods would produce.</source>
          <target state="translated">Любые недопустимые символы URL-адреса, встречающиеся в значении, присвоенном свойству &lt;code&gt;search&lt;/code&gt; будут &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;закодированы в процентах&lt;/a&gt; . Выбор символов для процентного кодирования может несколько отличаться от того, что будут производить методы &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt; &lt;code&gt;url.parse()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c0b537637fbe5a97a8ea510f2cc54388523c455" translate="yes" xml:space="preserve">
          <source>Any invalid URL characters appearing in the value assigned the &lt;code&gt;username&lt;/code&gt; property will be &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;percent-encoded&lt;/a&gt;. The selection of which characters to percent-encode may vary somewhat from what the &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt;&lt;code&gt;url.parse()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format()&lt;/code&gt;&lt;/a&gt; methods would produce.</source>
          <target state="translated">Любые недопустимые символы URL-адреса, появляющиеся в значении, присвоенном свойству &lt;code&gt;username&lt;/code&gt; , будут &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;закодированы в процентах&lt;/a&gt; . Выбор символов для процентного кодирования может несколько отличаться от того, что будут производить методы &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt; &lt;code&gt;url.parse()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33cefc2f0c821e251811ee0c15f7e371f67bef7f" translate="yes" xml:space="preserve">
          <source>Any invalid exports entries will be ignored. This includes exports not starting with &lt;code&gt;&quot;./&quot;&lt;/code&gt; or a missing trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; for directory exports.</source>
          <target state="translated">Любые недопустимые записи экспорта будут проигнорированы. Это включает экспорт, не начинающийся с &lt;code&gt;&quot;./&quot;&lt;/code&gt; или отсутствующий в конце &lt;code&gt;&quot;/&quot;&lt;/code&gt; для экспорта каталогов.</target>
        </trans-unit>
        <trans-unit id="f5bcc1ea4bc6c1ed082dc9c60625ca47a450accf" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;napi_property_descriptor&lt;/code&gt; items can be associated with &lt;code&gt;object&lt;/code&gt; and freed whenever &lt;code&gt;object&lt;/code&gt; is garbage-collected by passing both &lt;code&gt;object&lt;/code&gt; and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Любые данные, &lt;code&gt;napi_property_descriptor&lt;/code&gt; от &lt;code&gt;NULL&lt;/code&gt; , которые передаются этому API через поле &lt;code&gt;data&lt;/code&gt; элементов napi_property_descriptor , могут быть связаны с &lt;code&gt;object&lt;/code&gt; и освобождены всякий раз, когда &lt;code&gt;object&lt;/code&gt; собирается сборщиком мусора, путем передачи как &lt;code&gt;object&lt;/code&gt; и данных в &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b71b60681d96bc59be31fce9833b0e59c9bccd7a" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; parameter can be associated with the resulting JavaScript function (which is returned in the &lt;code&gt;result&lt;/code&gt; parameter) and freed whenever the function is garbage-collected by passing both the JavaScript function and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Любые данные, отличные от &lt;code&gt;NULL&lt;/code&gt; , которые передаются этому API через параметр &lt;code&gt;data&lt;/code&gt; могут быть связаны с результирующей функцией JavaScript (которая возвращается в параметре &lt;code&gt;result&lt;/code&gt; ) и освобождаться всякий раз, когда функция собирается сборщиком мусора путем передачи как функции JavaScript, так и данных. в &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e4341c0c549edc565f407301b6c4985e11671d8" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; parameter or via the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;napi_property_descriptor&lt;/code&gt; array items can be associated with the resulting JavaScript constructor (which is returned in the &lt;code&gt;result&lt;/code&gt; parameter) and freed whenever the class is garbage-collected by passing both the JavaScript function and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Любые не- &lt;code&gt;NULL&lt;/code&gt; данные , которые передаются в это API через &lt;code&gt;data&lt;/code&gt; параметр или через &lt;code&gt;data&lt;/code&gt; поле из &lt;code&gt;napi_property_descriptor&lt;/code&gt; элементов массива может быть связан с результирующим конструктора JavaScript (который возвращается в &lt;code&gt;result&lt;/code&gt; параметра) и освобожденные всякий раз , когда класс garbage- собираются путем передачи функции JavaScript и данных в &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf59bed5f574b76e20145839cbd960bf2bbaa2c0" translate="yes" xml:space="preserve">
          <source>Any number of custom string condition names are permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a727689faff81bf2a17c199450888eb6c590f0" translate="yes" xml:space="preserve">
          <source>Any readable file descriptor, not necessarily for a regular file, is supported now.</source>
          <target state="translated">Теперь поддерживается любой читаемый дескриптор файла,не обязательно для обычного файла.</target>
        </trans-unit>
        <trans-unit id="b22e6a46bdfd55ba2aa0919e34f00684aa3e276f" translate="yes" xml:space="preserve">
          <source>Any readable file, not necessarily a regular file, is supported now.</source>
          <target state="translated">Любой читаемый файл,не обязательно обычный,теперь поддерживается.</target>
        </trans-unit>
        <trans-unit id="29ad5c9f4eb31a79a37b04a2ad79efddaa6cfb3e" translate="yes" xml:space="preserve">
          <source>Any settings changes only affect future calls to &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt; and have no effect on workers that are already running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818029576311bb510aea405d8af84fb06b2a3ef6" translate="yes" xml:space="preserve">
          <source>Any settings changes only affect future calls to &lt;code&gt;.fork()&lt;/code&gt; and have no effect on workers that are already running.</source>
          <target state="translated">Любые изменения настроек влияют только на будущие вызовы &lt;code&gt;.fork()&lt;/code&gt; и не влияют на уже запущенные рабочие процессы .</target>
        </trans-unit>
        <trans-unit id="086f6b403d4a50e709d7333c42d7e59d2ae3e96e" translate="yes" xml:space="preserve">
          <source>Any specified &lt;code&gt;FileHandle&lt;/code&gt; has to support reading.</source>
          <target state="translated">Любой указанный &lt;code&gt;FileHandle&lt;/code&gt; должен поддерживать чтение.</target>
        </trans-unit>
        <trans-unit id="f583facec8aebea8206ac5d519e4fe6a6f4a03d3" translate="yes" xml:space="preserve">
          <source>Any specified &lt;code&gt;FileHandle&lt;/code&gt; has to support writing.</source>
          <target state="translated">Любой указанный &lt;code&gt;FileHandle&lt;/code&gt; должен поддерживать запись.</target>
        </trans-unit>
        <trans-unit id="a8a24fd396ece2a0faf7e58fc0b99ffc56f0fe3f" translate="yes" xml:space="preserve">
          <source>Any specified file descriptor has to support reading.</source>
          <target state="translated">Любой указанный файловый дескриптор должен поддерживать чтение.</target>
        </trans-unit>
        <trans-unit id="972271aba1c4e163bf42812ad1009f80f68d559f" translate="yes" xml:space="preserve">
          <source>Any specifier string for which resolution is attempted and that is not listed in the dependencies results in an error according to the policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9087fb8a7f21f4d737d5e8de7a92e255f7cce8b3" translate="yes" xml:space="preserve">
          <source>Any specifier string that is &lt;code&gt;require()&lt;/code&gt;ed and not listed in the dependencies will result in an error according to the policy.</source>
          <target state="translated">Любая строка спецификатора, которая является &lt;code&gt;require()&lt;/code&gt; ed и не указана в зависимостях, приведет к ошибке в соответствии с политикой.</target>
        </trans-unit>
        <trans-unit id="3e45c7483390d6f6e779f68ded599f2da9295662" translate="yes" xml:space="preserve">
          <source>Any time an &lt;code&gt;Error&lt;/code&gt; object is routed through a domain, a few extra fields are added to it.</source>
          <target state="translated">Каждый раз, когда объект &lt;code&gt;Error&lt;/code&gt; маршрутизируется через домен, к нему добавляются несколько дополнительных полей.</target>
        </trans-unit>
        <trans-unit id="2d6c4b0264c6ae8f3ac16fb7f4789ba95a8d8a9e" translate="yes" xml:space="preserve">
          <source>Any use of the JavaScript &lt;code&gt;throw&lt;/code&gt; mechanism will raise an exception that &lt;em&gt;must&lt;/em&gt; be handled using &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; or the Node.js process will exit immediately.</source>
          <target state="translated">Любое использование механизма &lt;code&gt;throw&lt;/code&gt; JavaScript вызовет исключение, которое &lt;em&gt;необходимо&lt;/em&gt; обработать с помощью команды &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; иначе процесс Node.js завершится немедленно.</target>
        </trans-unit>
        <trans-unit id="9792aabb6a042539f039ce61b4052386400e3e32" translate="yes" xml:space="preserve">
          <source>Apart from the debugger, various V8 Profilers are available through the DevTools protocol.</source>
          <target state="translated">Кроме отладчика,через протокол DevTools доступны различные профилировщики V8.</target>
        </trans-unit>
        <trans-unit id="9101900f5bcd15c384db52a54e7b3cb3dd6a21a4" translate="yes" xml:space="preserve">
          <source>Append a new name-value pair to the query string.</source>
          <target state="translated">Добавить новую пару имя-значение к строке запроса.</target>
        </trans-unit>
        <trans-unit id="7f80fbc082b95cbd92edc2ffd0f1f111c7c6d25f" translate="yes" xml:space="preserve">
          <source>Applications running in Node.js will generally experience four categories of errors:</source>
          <target state="translated">Приложения,запущенные в Node.js,обычно сталкиваются с четырьмя категориями ошибок:</target>
        </trans-unit>
        <trans-unit id="ecfcbffbbe3ee7ba37594d932db7c2aa3c1f766c" translate="yes" xml:space="preserve">
          <source>Applications that are either writing data to or consuming data from a stream are not required to implement the stream interfaces directly and will generally have no reason to call &lt;code&gt;require('stream')&lt;/code&gt;.</source>
          <target state="translated">Приложения, которые либо записывают данные, либо потребляют данные из потока, не обязаны напрямую реализовывать потоковые интерфейсы и, как правило, не имеют причин для вызова &lt;code&gt;require('stream')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d70e34d28832a1567a71e9e777653995535deb8c" translate="yes" xml:space="preserve">
          <source>Applies multiple bug workarounds within OpenSSL. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt; for detail.</source>
          <target state="translated">Применяет несколько способов обхода ошибок в OpenSSL. Подробнее см. &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;Https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebbc578afdf322ff682f84b74e88081b7c51adb5" translate="yes" xml:space="preserve">
          <source>Array fallback support is provided for exports, similarly to import maps in order to be forward-compatible with fallback workflows in future:</source>
          <target state="translated">Поддержка резервного копирования массивов предусмотрена для экспорта,аналогично импорту карт,чтобы в будущем быть совместимым с резервными рабочими процессами:</target>
        </trans-unit>
        <trans-unit id="05fd7fe7245edc46acd4190581f9b48212b293f9" translate="yes" xml:space="preserve">
          <source>ArrayBuffers now also show their binary contents.</source>
          <target state="translated">ArrayBuffers теперь также показывают свое двоичное содержимое.</target>
        </trans-unit>
        <trans-unit id="9e67ec885b4b216999aa38417b40b9b22ba7be16" translate="yes" xml:space="preserve">
          <source>As CCM processes the whole message at once, &lt;code&gt;update()&lt;/code&gt; can only be called once.</source>
          <target state="translated">Поскольку CCM обрабатывает все сообщение сразу, &lt;code&gt;update()&lt;/code&gt; можно вызвать только один раз.</target>
        </trans-unit>
        <trans-unit id="bb4c3e05dd1e4e6e4215b9b7958808323444b6a0" translate="yes" xml:space="preserve">
          <source>As N-API calls are made, handles to objects in the heap for the underlying VM may be returned as &lt;code&gt;napi_values&lt;/code&gt;. These handles must hold the objects 'live' until they are no longer required by the native code, otherwise the objects could be collected before the native code was finished using them.</source>
          <target state="translated">При выполнении вызовов N-API дескрипторы объектов в куче для базовой виртуальной машины могут быть возвращены как &lt;code&gt;napi_values&lt;/code&gt; . Эти дескрипторы должны удерживать объекты &amp;laquo;вживую&amp;raquo; до тех пор, пока они не перестанут быть нужны машинному коду, в противном случае объекты могут быть собраны до того, как машинный код завершит их использование.</target>
        </trans-unit>
        <trans-unit id="db28e83227a15b74952266fb23d62f73dacbe341" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where data is written to produce a computed HMAC digest on the readable side, or</source>
          <target state="translated">Как &lt;a href=&quot;stream&quot;&gt;поток,&lt;/a&gt; который доступен как для чтения, так и для записи, где данные записываются для создания вычисленного дайджеста HMAC на читаемой стороне, или</target>
        </trans-unit>
        <trans-unit id="403e4e4b5bba26b7f611afd2c7e889715289f136" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where data is written to produce a computed hash digest on the readable side, or</source>
          <target state="translated">Как &lt;a href=&quot;stream&quot;&gt;поток,&lt;/a&gt; который доступен как для чтения, так и для записи, где данные записываются для создания вычисленного хеш-дайджеста на читаемой стороне, или</target>
        </trans-unit>
        <trans-unit id="015221db5afe28932e1236c8b140c5f28f25468b" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where plain encrypted data is written to produce unencrypted data on the readable side, or</source>
          <target state="translated">Как &lt;a href=&quot;stream&quot;&gt;поток,&lt;/a&gt; который доступен как для чтения, так и для записи, где простые зашифрованные данные записываются для получения незашифрованных данных на читаемой стороне, или</target>
        </trans-unit>
        <trans-unit id="c5b8647298ff710d8d93d34f4c639461d091a5f9" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where plain unencrypted data is written to produce encrypted data on the readable side, or</source>
          <target state="translated">Как &lt;a href=&quot;stream&quot;&gt;поток,&lt;/a&gt; который доступен как для чтения, так и для записи, где простые незашифрованные данные записываются для создания зашифрованных данных на читаемой стороне, или</target>
        </trans-unit>
        <trans-unit id="6b5fed1d45eebfac25d71dd1fe587cdd9807849f" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream#stream_duplex_and_transform_streams&quot;&gt;Duplex&lt;/a&gt; stream, &lt;code&gt;process.stdin&lt;/code&gt; can also be used in &quot;old&quot; mode that is compatible with scripts written for Node.js prior to v0.10. For more information see &lt;a href=&quot;stream#stream_compatibility_with_older_node_js_versions&quot;&gt;Stream compatibility&lt;/a&gt;.</source>
          <target state="translated">Как &lt;a href=&quot;stream#stream_duplex_and_transform_streams&quot;&gt;дуплексный&lt;/a&gt; поток, &lt;code&gt;process.stdin&lt;/code&gt; также может использоваться в &amp;laquo;старом&amp;raquo; режиме, который совместим со сценариями, написанными для Node.js до v0.10. Для получения дополнительной информации см. &lt;a href=&quot;stream#stream_compatibility_with_older_node_js_versions&quot;&gt;Совместимость потоков&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="410e9b2d10ecce76dabfb86570274d72595219f8" translate="yes" xml:space="preserve">
          <source>As a best practice, listeners should always be added for the &lt;code&gt;'error'&lt;/code&gt; events.</source>
          <target state="translated">Рекомендуется всегда добавлять слушателей для событий &lt;code&gt;'error'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ee474e3e0f75aba8a0736f69b8fe3ae0054fcc7" translate="yes" xml:space="preserve">
          <source>As a best practice, warnings should be emitted only once per process. To do so, it is recommended to place the &lt;code&gt;emitWarning()&lt;/code&gt; behind a simple boolean flag as illustrated in the example below:</source>
          <target state="translated">Рекомендуется выдавать предупреждения только один раз для каждого процесса. Для этого рекомендуется разместить &lt;code&gt;emitWarning()&lt;/code&gt; за простым логическим флагом, как показано в примере ниже:</target>
        </trans-unit>
        <trans-unit id="7ed469b0934ed8a0d4b6a9b659491d654e201e02" translate="yes" xml:space="preserve">
          <source>As a legacy interface, it is possible to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893a0e7985d40d06428253f41d17249252e5e982" translate="yes" xml:space="preserve">
          <source>As a result, these functions cannot have the same negative impact on other processing that happens on libuv's threadpool that &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; can have.</source>
          <target state="translated">В результате эти функции не могут иметь такое же негативное влияние на другую обработку, которая происходит в пуле потоков libuv, что может иметь &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96a263bf9c3a3e1471b7d6a5199c7e547aff51ba" translate="yes" xml:space="preserve">
          <source>As a still supported legacy interface, it is possible (but not recommended) to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</source>
          <target state="translated">Как все еще поддерживаемый устаревший интерфейс, можно (но не рекомендуется) создавать новые экземпляры класса &lt;code&gt;crypto.Certificate&lt;/code&gt; , как показано в примерах ниже.</target>
        </trans-unit>
        <trans-unit id="0f7e9db2a0d557344c2fb31e8cce5892ec260a7d" translate="yes" xml:space="preserve">
          <source>As a user is typing input into the REPL prompt, pressing &lt;strong&gt;Enter&lt;/strong&gt; will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23817098cad54d24748fb2d93a355688874a756" translate="yes" xml:space="preserve">
          <source>As a user is typing input into the REPL prompt, pressing the &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; key will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</source>
          <target state="translated">Когда пользователь вводит ввод в приглашение REPL, нажатие клавиши &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; отправит текущую строку ввода в функцию &lt;code&gt;eval&lt;/code&gt; . Для поддержки многострочного ввода функция eval может возвращать экземпляр &lt;code&gt;repl.Recoverable&lt;/code&gt; для предоставленной функции обратного вызова:</target>
        </trans-unit>
        <trans-unit id="c6fccee8b9bf59fc86ce6a5d4bb65cd0cfc15faa" translate="yes" xml:space="preserve">
          <source>As a writable &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; where written data is used to validate against the supplied signature, or</source>
          <target state="translated">В качестве записываемого &lt;a href=&quot;stream&quot;&gt;потока, в&lt;/a&gt; котором записанные данные используются для проверки соответствия предоставленной подписи, или</target>
        </trans-unit>
        <trans-unit id="7cde42be763a9088ab70ccb8053a1f89a2cbb50d" translate="yes" xml:space="preserve">
          <source>As a writable &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt;, where data to be signed is written and the &lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt;&lt;code&gt;sign.sign()&lt;/code&gt;&lt;/a&gt; method is used to generate and return the signature, or</source>
          <target state="translated">В качестве записываемого &lt;a href=&quot;stream&quot;&gt;потока&lt;/a&gt; , в который записываются данные, которые должны быть подписаны, и метод &lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt; &lt;code&gt;sign.sign()&lt;/code&gt; &lt;/a&gt; используется для генерации и возврата подписи, или</target>
        </trans-unit>
        <trans-unit id="3e8cba4404bac289608092f10fc7651b5ba03b91" translate="yes" xml:space="preserve">
          <source>As an alternative, use one of the following methods of constructing &lt;code&gt;Buffer&lt;/code&gt; objects:</source>
          <target state="translated">В качестве альтернативы используйте один из следующих методов создания объектов &lt;code&gt;Buffer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3789d6bcfed429e3819b4fe01b38622b383fbf67" translate="yes" xml:space="preserve">
          <source>As can be seen from the last example of the Module Namespace Exotic Object being logged, the &lt;code&gt;name&lt;/code&gt; export is copied off of the &lt;code&gt;module.exports&lt;/code&gt; object and set directly on the ES module namespace when the module is imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64039998e2554e82f38720b063b23f0119dbc6a6" translate="yes" xml:space="preserve">
          <source>As illustrated in the example, &lt;code&gt;executionAsyncId()&lt;/code&gt; and &lt;code&gt;execution&lt;/code&gt; each specify the value of the current execution context; which is delineated by calls to &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt;.</source>
          <target state="translated">Как показано в примере, &lt;code&gt;executionAsyncId()&lt;/code&gt; и &lt;code&gt;execution&lt;/code&gt; определяют значение текущего контекста выполнения; который обозначен вызовами &lt;code&gt;before&lt;/code&gt; и &lt;code&gt;after&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3918c9c0d50d8a4f8d9aaf017bcc2ec5ad9770f5" translate="yes" xml:space="preserve">
          <source>As object handles are returned they are associated with a 'scope'. The lifespan for the default scope is tied to the lifespan of the native method call. The result is that, by default, handles remain valid and the objects associated with these handles will be held live for the lifespan of the native method call.</source>
          <target state="translated">По мере возврата дескрипторов объектов они ассоциируются с &quot;областью действия&quot;.Продолжительность жизни области видимости по умолчанию привязана к продолжительности жизни родного вызова метода.В результате,по умолчанию,дескрипторы остаются действительными,а объекты,связанные с этими дескрипторами,будут удерживаться в реальном времени в течение срока службы родного вызова метода.</target>
        </trans-unit>
        <trans-unit id="9834fff63d7588efa59326159f69c956659559ab" translate="yes" xml:space="preserve">
          <source>As of Node.js 8.0.0, the handlers of Promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</source>
          <target state="translated">Начиная с Node.js 8.0.0, обработчики Promises запускаются внутри домена, в котором был сделан вызов &lt;code&gt;.then()&lt;/code&gt; или &lt;code&gt;.catch()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a38a8f139e9ec9cfb2265d445f1c3261cad7bf9b" translate="yes" xml:space="preserve">
          <source>As of Node.js 8.0.0, the handlers of promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0189f8b9225df62e106eca8c4f6f6f1b44cad42e" translate="yes" xml:space="preserve">
          <source>As of Node.js v0.10, &lt;a href=&quot;#dgram_socket_bind_options_callback&quot;&gt;&lt;code&gt;dgram.Socket#bind()&lt;/code&gt;&lt;/a&gt; changed to an asynchronous execution model. Legacy code would use synchronous behavior:</source>
          <target state="translated">Начиная с Node.js v0.10, &lt;a href=&quot;#dgram_socket_bind_options_callback&quot;&gt; &lt;code&gt;dgram.Socket#bind()&lt;/code&gt; &lt;/a&gt; изменен на асинхронную модель выполнения. Унаследованный код будет использовать синхронное поведение:</target>
        </trans-unit>
        <trans-unit id="3ac9c4c0bb4477aaaa1e3745bbccb9965faf1342" translate="yes" xml:space="preserve">
          <source>As of v10.0.0, a deprecation warning is printed at runtime when &lt;code&gt;--pending-deprecation&lt;/code&gt; is used or when the calling code is outside &lt;code&gt;node_modules&lt;/code&gt; in order to better target developers, rather than users.</source>
          <target state="translated">Начиная с v10.0.0, предупреждение об устаревании выводится во время выполнения, когда используется &lt;code&gt;--pending-deprecation&lt;/code&gt; или когда вызывающий код находится за пределами &lt;code&gt;node_modules&lt;/code&gt; , чтобы лучше ориентироваться на разработчиков, а не на пользователей.</target>
        </trans-unit>
        <trans-unit id="962c0a4bd1f3b3a805e3165b8c265f126b2e5613" translate="yes" xml:space="preserve">
          <source>As standalone program:</source>
          <target state="translated">Как отдельная программа:</target>
        </trans-unit>
        <trans-unit id="e5fc8eed674c2cbb60f3a625bde43e1979c80ee0" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Finished&lt;/code&gt; messages are message digests of the complete handshake (with a total of 192 bits for TLS 1.0 and more for SSL 3.0), they can be used for external authentication procedures when the authentication provided by SSL/TLS is not desired or is not enough.</source>
          <target state="translated">Поскольку сообщения &lt;code&gt;Finished&lt;/code&gt; являются дайджестами сообщения полного рукопожатия (всего 192 бит для TLS 1.0 и больше для SSL 3.0), они могут использоваться для внешних процедур аутентификации, когда аутентификация, обеспечиваемая SSL / TLS, нежелательна или не требуется. достаточно.</target>
        </trans-unit>
        <trans-unit id="88bf2c870d425e8691eb66779c8b4b9673081e4d" translate="yes" xml:space="preserve">
          <source>As the original API was undocumented and not generally useful for non-internal code, no replacement API is provided.</source>
          <target state="translated">Так как исходный API был недокументирован и в целом не был полезен для неинтернального кода,замена API не предусмотрена.</target>
        </trans-unit>
        <trans-unit id="7ce5ed7b5a829f51c0fead622120a3acc5c7dea0" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;modules#modules_accessing_the_main_module&quot;&gt;&lt;code&gt;require.main&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;process.mainModule&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; if there is no entry script.</source>
          <target state="translated">Как и в случае с &lt;a href=&quot;modules#modules_accessing_the_main_module&quot;&gt; &lt;code&gt;require.main&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;process.mainModule&lt;/code&gt; будет &lt;code&gt;undefined&lt;/code&gt; если нет сценария входа.</target>
        </trans-unit>
        <trans-unit id="3e93aac3acee4e879ccffb8b3d225e86c77d9862" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;import&lt;/code&gt; statements, for ES module usage the value of &lt;code&gt;&quot;main&quot;&lt;/code&gt; must be a full path including extension: &lt;code&gt;&quot;./index.mjs&quot;&lt;/code&gt;, not &lt;code&gt;&quot;./index&quot;&lt;/code&gt;.</source>
          <target state="translated">Как и в случае с операторами &lt;code&gt;import&lt;/code&gt; , для использования модуля ES значение &lt;code&gt;&quot;main&quot;&lt;/code&gt; должно быть полным путем, включая расширение: &lt;code&gt;&quot;./index.mjs&quot;&lt;/code&gt; , а не &lt;code&gt;&quot;./index&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f13dc0c86f08a261569b0c58c81b9883fa1e85d" translate="yes" xml:space="preserve">
          <source>As with checking for the server &lt;a href=&quot;#tls_event_secureconnection&quot;&gt;&lt;code&gt;'secureConnection'&lt;/code&gt;&lt;/a&gt; event, &lt;code&gt;pair.cleartext.authorized&lt;/code&gt; should be inspected to confirm whether the certificate used is properly authorized.</source>
          <target state="translated">Как и при проверке события &lt;a href=&quot;#tls_event_secureconnection&quot;&gt; &lt;code&gt;'secureConnection'&lt;/code&gt; &lt;/a&gt; &lt;code&gt;pair.cleartext.authorized&lt;/code&gt; необходимо проверить pair.cleartext.authorized , чтобы подтвердить, правильно ли авторизован используемый сертификат.</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="37ea4209ca4e870468d734a52d1e7e3c8af0584a" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;resolved&lt;/em&gt; is a String.</source>
          <target state="translated">Утверждение: &lt;em&gt;разрешено&lt;/em&gt; - это строка.</target>
        </trans-unit>
        <trans-unit id="73315c4aa74966395a159de06898a7604cca5821" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;resolvedTarget&lt;/em&gt; is contained in &lt;em&gt;packageURL&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b27249c08b015c5065fe1cbda4e800600527de9" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;specifier&lt;/em&gt; begins with &lt;em&gt;&quot;#&quot;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882349c7f5112244b43b6c72ec0991bbb983fb67" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;url&lt;/em&gt; corresponds to an existing file.</source>
          <target state="translated">Утверждение: &lt;em&gt;URL-адрес&lt;/em&gt; соответствует существующему файлу.</target>
        </trans-unit>
        <trans-unit id="ee8316c0bc9494b895cb21ebd8868a9b57e28863" translate="yes" xml:space="preserve">
          <source>Assertion Testing</source>
          <target state="translated">Тестирование на прочность</target>
        </trans-unit>
        <trans-unit id="053801980a55516453a16e9fc7c927980eae77e7" translate="yes" xml:space="preserve">
          <source>Assertion testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="d49cc2d0a2b818e7ed5faf9ef6b509305fbc9efa" translate="yes" xml:space="preserve">
          <source>Asserts that the function &lt;code&gt;fn&lt;/code&gt; does not throw an error.</source>
          <target state="translated">Утверждает, что функция &lt;code&gt;fn&lt;/code&gt; не выдает ошибку.</target>
        </trans-unit>
        <trans-unit id="e3957fccdb81b71e89905ba8f09f2b54b8f61f26" translate="yes" xml:space="preserve">
          <source>Assigning a property on &lt;code&gt;process.env&lt;/code&gt; will implicitly convert the value to a string. &lt;strong&gt;This behavior is deprecated.&lt;/strong&gt; Future versions of Node.js may throw an error when the value is not a string, number, or boolean.</source>
          <target state="translated">Назначение свойства для &lt;code&gt;process.env&lt;/code&gt; неявно преобразует значение в строку. &lt;strong&gt;Такое поведение устарело. &lt;/strong&gt;В будущих версиях Node.js может возникать ошибка, если значение не является строкой, числом или логическим значением.</target>
        </trans-unit>
        <trans-unit id="9ca62f7fe96600e58c09163bd1df22f790a65906" translate="yes" xml:space="preserve">
          <source>Assigning a value to &lt;code&gt;process.title&lt;/code&gt; might not result in an accurate label within process manager applications such as macOS Activity Monitor or Windows Services Manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd1090099518731cb82358f7150ea7e8e18982b" translate="yes" xml:space="preserve">
          <source>Assigning properties to the top-level &lt;code&gt;this&lt;/code&gt; as an alternative to &lt;code&gt;module.exports&lt;/code&gt; is deprecated. Developers should use &lt;code&gt;exports&lt;/code&gt; or &lt;code&gt;module.exports&lt;/code&gt; instead.</source>
          <target state="translated">Назначение свойств верхнему уровню &lt;code&gt;this&lt;/code&gt; в качестве альтернативы &lt;code&gt;module.exports&lt;/code&gt; устарело. Разработчикам следует использовать вместо них &lt;code&gt;exports&lt;/code&gt; или &lt;code&gt;module.exports&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06d00ede6deb155e49dc8cf86da916484c857d23" translate="yes" xml:space="preserve">
          <source>Assignment of the &lt;code&gt;_&lt;/code&gt; (underscore) variable</source>
          <target state="translated">Присвоение переменной &lt;code&gt;_&lt;/code&gt; (подчеркивание)</target>
        </trans-unit>
        <trans-unit id="d665fccb55c06268901cada38d0f82a9235c5575" translate="yes" xml:space="preserve">
          <source>Assignment to &lt;code&gt;module.exports&lt;/code&gt; must be done immediately. It cannot be done in any callbacks. This does not work:</source>
          <target state="translated">Присвоение &lt;code&gt;module.exports&lt;/code&gt; нужно делать немедленно. Это невозможно сделать ни в каких обратных вызовах. Это не работает:</target>
        </trans-unit>
        <trans-unit id="619b9ed00714b4d15db0a5b484877fe8405aa504" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;dgram.Socket&lt;/code&gt; to a remote address and port. Every message sent by this handle is automatically sent to that destination. Also, the socket will only receive messages from that remote peer. Trying to call &lt;code&gt;connect()&lt;/code&gt; on an already connected socket will result in an &lt;a href=&quot;errors#errors_err_socket_dgram_is_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_IS_CONNECTED&lt;/code&gt;&lt;/a&gt; exception. If &lt;code&gt;address&lt;/code&gt; is not provided, &lt;code&gt;'127.0.0.1'&lt;/code&gt; (for &lt;code&gt;udp4&lt;/code&gt; sockets) or &lt;code&gt;'::1'&lt;/code&gt; (for &lt;code&gt;udp6&lt;/code&gt; sockets) will be used by default. Once the connection is complete, a &lt;code&gt;'connect'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called. In case of failure, the &lt;code&gt;callback&lt;/code&gt; is called or, failing this, an &lt;code&gt;'error'&lt;/code&gt; event is emitted.</source>
          <target state="translated">Связывает &lt;code&gt;dgram.Socket&lt;/code&gt; на удаленный адрес и порт. Каждое сообщение, отправленное этим дескриптором, автоматически отправляется этому адресату. Кроме того, сокет будет получать сообщения только от этого удаленного узла. Попытка вызвать &lt;code&gt;connect()&lt;/code&gt; на уже подключенном сокете приведет к исключению &lt;a href=&quot;errors#errors_err_socket_dgram_is_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_IS_CONNECTED&lt;/code&gt; &lt;/a&gt; . Если &lt;code&gt;address&lt;/code&gt; не &lt;code&gt;udp6&lt;/code&gt; , по умолчанию будет использоваться &lt;code&gt;'127.0.0.1'&lt;/code&gt; (для сокетов &lt;code&gt;udp4&lt;/code&gt; ) или &lt;code&gt;'::1'&lt;/code&gt; (для сокетов udp6 ). После завершения &lt;code&gt;'connect'&lt;/code&gt; событие &amp;laquo;connect&amp;raquo; и вызывается дополнительная функция &lt;code&gt;callback&lt;/code&gt; . В случае неудачи &lt;code&gt;callback&lt;/code&gt; вызывается или, в противном случае, генерируется событие &lt;code&gt;'error'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="656d7cd44a1a91a56bfda8de731d5bafeb0237f1" translate="yes" xml:space="preserve">
          <source>Associates the value of the &lt;code&gt;type_tag&lt;/code&gt; pointer with the JavaScript object. &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt; can then be used to compare the tag that was attached to the object with one owned by the addon to ensure that the object has the right type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557e5ee8e017ecf16dc3152984786becaec6c1b9" translate="yes" xml:space="preserve">
          <source>Assuming an &lt;code&gt;a.mjs&lt;/code&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25c13e3a0fb1554e04e5083d12ad3e76e2f517a" translate="yes" xml:space="preserve">
          <source>Assuming an &lt;code&gt;index.mjs&lt;/code&gt; with</source>
          <target state="translated">Предполагая, что &lt;code&gt;index.mjs&lt;/code&gt; с</target>
        </trans-unit>
        <trans-unit id="49e794543de79d6c18544f3b4ca125a146181194" translate="yes" xml:space="preserve">
          <source>Assuming that the task is adding two numbers, using a file named &lt;code&gt;task_processor.js&lt;/code&gt; with the following content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3751c055775a3fd5e46bc50c33f4f8776b5e7427" translate="yes" xml:space="preserve">
          <source>Async Hooks</source>
          <target state="translated">Async Hooks</target>
        </trans-unit>
        <trans-unit id="84a29bec6f7a755d3607f0d91741e2b169bcefe1" translate="yes" xml:space="preserve">
          <source>Async functions may be used as event listeners. If an async handler function rejects, the rejection is captured and handled as described in &lt;a href=&quot;#events_eventtarget_error_handling&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt; error handling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbd038e382b67c6a00e5cdb344803c88d5aafb1" translate="yes" xml:space="preserve">
          <source>Async hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc139f7b1d50b9a66c62a8fe1c5279a87451a00" translate="yes" xml:space="preserve">
          <source>Async iterators register a permanent error handler on the stream to prevent any unhandled post-destroy errors.</source>
          <target state="translated">Итераторы Async регистрируют в потоке постоянный обработчик ошибок,чтобы предотвратить любые не обработанные послеуничтожения ошибки.</target>
        </trans-unit>
        <trans-unit id="df5103c1d76d680bba6764bfa32d48a6b5502e54" translate="yes" xml:space="preserve">
          <source>AsyncResource</source>
          <target state="translated">AsyncResource</target>
        </trans-unit>
        <trans-unit id="207846314a3990e8fdd3da08a9a913a385115f88" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/close.2.html&quot;&gt;&lt;code&gt;close(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронное &lt;a href=&quot;http://man7.org/linux/man-pages/man2/close.2.html&quot;&gt; &lt;code&gt;close(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="81c6358263c307be9ef8a686829bbed957e65382" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchmod.2.html&quot;&gt;&lt;code&gt;fchmod(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchmod.2.html&quot;&gt; &lt;code&gt;fchmod(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="bddd536b720e4429ebd9c889527ed28b6809dfa4" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchown.2.html&quot;&gt;&lt;code&gt;fchown(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchown.2.html&quot;&gt; &lt;code&gt;fchown(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="bb4350c9f114fb8c3901ce0679f5b22f08672228" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt;&lt;code&gt;fdatasync(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt; &lt;code&gt;fdatasync(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="ad34fcb6ace8aca75784902aada9d9e60f1b585a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt;&lt;code&gt;fdatasync(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt; &lt;code&gt;fdatasync(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="6ee0688b451469c96f066d51ebaee75bb1f3da28" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fstat.2.html&quot;&gt;&lt;code&gt;fstat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is an &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object. &lt;code&gt;fstat()&lt;/code&gt; is identical to &lt;a href=&quot;fs#fs_fs_stat_path_options_callback&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;, except that the file to be stat-ed is specified by the file descriptor &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fstat.2.html&quot;&gt; &lt;code&gt;fstat(2)&lt;/code&gt; &lt;/a&gt; . Обратный вызов получает два аргумента &lt;code&gt;(err, stats)&lt;/code&gt; где &lt;code&gt;stats&lt;/code&gt; - это объект &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;fstat()&lt;/code&gt; идентичен &lt;a href=&quot;fs#fs_fs_stat_path_options_callback&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt; , за исключением того, что файл, который нужно обработать, определяется файловым дескриптором &lt;code&gt;fd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24e6bc0bc1531b9eeca11deee09b0488be7a6867" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt;&lt;code&gt;fsync(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt; &lt;code&gt;fsync(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="c8ac0192924aff15e0c7c0acd33305cc5aa9309e" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt;&lt;code&gt;fsync(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt; &lt;code&gt;fsync(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="4b0c2bb494df453aecfc68a06ab9c256c05509c0" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/ftruncate.2.html&quot;&gt;&lt;code&gt;ftruncate(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/ftruncate.2.html&quot;&gt; &lt;code&gt;ftruncate(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="06dc3705c43322a051005430ab1d26a877c762fe" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lchown.2.html&quot;&gt;&lt;code&gt;lchown(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lchown.2.html&quot;&gt; &lt;code&gt;lchown(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="cfa6408a63fd1c60aef183cde8c36d760fa12120" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt;&lt;code&gt;link(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронная &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt; &lt;code&gt;link(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="9dc810a7f0da4267a165ebaa07ff3b7ea8bcb3af" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt;&lt;code&gt;link(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">Асинхронная &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt; &lt;code&gt;link(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="48142cc3d8a92cae4496ba279455589953a6b3a9" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt;&lt;code&gt;lstat(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object for the given symbolic link &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt; &lt;code&gt;lstat(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; решается с &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt; объекта для данной символической ссылки &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="875263631be328f78228047f131d9988dea3d292" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt;&lt;code&gt;lstat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is a &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object. &lt;code&gt;lstat()&lt;/code&gt; is identical to &lt;code&gt;stat()&lt;/code&gt;, except that if &lt;code&gt;path&lt;/code&gt; is a symbolic link, then the link itself is stat-ed, not the file that it refers to.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt; &lt;code&gt;lstat(2)&lt;/code&gt; &lt;/a&gt; . Обратный вызов получает два аргумента &lt;code&gt;(err, stats)&lt;/code&gt; где &lt;code&gt;stats&lt;/code&gt; - это объект &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;lstat()&lt;/code&gt; идентичен &lt;code&gt;stat()&lt;/code&gt; , за исключением того, что если &lt;code&gt;path&lt;/code&gt; является символьной ссылкой, то указывается сама ссылка, а не файл, на который она ссылается.</target>
        </trans-unit>
        <trans-unit id="f764dc94aab80d6bfa0fd0bec45fd64486a8310f" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt;&lt;code&gt;readlink(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;code&gt;linkString&lt;/code&gt; upon success.</source>
          <target state="translated">Асинхронная &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt; &lt;code&gt;readlink(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; решается с &lt;code&gt;linkString&lt;/code&gt; после успеха.</target>
        </trans-unit>
        <trans-unit id="046dd32472c9747bf8fae24c7e00dfc7dd0e552d" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt;&lt;code&gt;readlink(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, linkString)&lt;/code&gt;.</source>
          <target state="translated">Асинхронная &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt; &lt;code&gt;readlink(2)&lt;/code&gt; &lt;/a&gt; . Обратный вызов получает два аргумента &lt;code&gt;(err, linkString)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd168382f6368986c9aa40e2ab34d1be126cbe49" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/rmdir.2.html&quot;&gt;&lt;code&gt;rmdir(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/rmdir.2.html&quot;&gt; &lt;code&gt;rmdir(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="b8f047acee63c91786a3a386a177a4ee8d8d42ff" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/stat.2.html&quot;&gt;&lt;code&gt;stat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is an &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Асинхронная &lt;a href=&quot;http://man7.org/linux/man-pages/man2/stat.2.html&quot;&gt; &lt;code&gt;stat(2)&lt;/code&gt; &lt;/a&gt; . Обратный вызов получает два аргумента &lt;code&gt;(err, stats)&lt;/code&gt; где &lt;code&gt;stats&lt;/code&gt; - это объект &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47ae8dec819f652076ace32b100856d5cd524f7b" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt;&lt;code&gt;symlink(2)&lt;/code&gt;&lt;/a&gt; which creates the link called &lt;code&gt;path&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3193c4695bbec930962bab113df5c656f11410" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt;&lt;code&gt;symlink(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback. The &lt;code&gt;type&lt;/code&gt; argument is only available on Windows and ignored on other platforms. It can be set to &lt;code&gt;'dir'&lt;/code&gt;, &lt;code&gt;'file'&lt;/code&gt;, or &lt;code&gt;'junction'&lt;/code&gt;. If the &lt;code&gt;type&lt;/code&gt; argument is not set, Node will autodetect &lt;code&gt;target&lt;/code&gt; type and use &lt;code&gt;'file'&lt;/code&gt; or &lt;code&gt;'dir'&lt;/code&gt;. If the &lt;code&gt;target&lt;/code&gt; does not exist, &lt;code&gt;'file'&lt;/code&gt; will be used. Windows junction points require the destination path to be absolute. When using &lt;code&gt;'junction'&lt;/code&gt;, the &lt;code&gt;target&lt;/code&gt; argument will automatically be normalized to absolute path.</source>
          <target state="translated">Асинхронная &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt; &lt;code&gt;symlink(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения. &lt;code&gt;type&lt;/code&gt; аргумент доступен только на Windows , и игнорировали на других платформах. Он может иметь значение &lt;code&gt;'dir'&lt;/code&gt; , &lt;code&gt;'file'&lt;/code&gt; или &lt;code&gt;'junction'&lt;/code&gt; . Если аргумент &lt;code&gt;type&lt;/code&gt; не установлен, Node автоматически &lt;code&gt;target&lt;/code&gt; тип и будет использовать &lt;code&gt;'file'&lt;/code&gt; или &lt;code&gt;'dir'&lt;/code&gt; каталог &amp;raquo; . Если &lt;code&gt;target&lt;/code&gt; не существует, будет использован &lt;code&gt;'file'&lt;/code&gt; . Точки соединения Windows требуют, чтобы конечный путь был абсолютным. При использовании &lt;code&gt;'junction'&lt;/code&gt; , то &lt;code&gt;target&lt;/code&gt; Аргумент будет автоматически нормализован до абсолютного пути.</target>
        </trans-unit>
        <trans-unit id="5becefe8f043e2409d28bd6644782d0e8c9ed483" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/truncate.2.html&quot;&gt;&lt;code&gt;truncate(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback. A file descriptor can also be passed as the first argument. In this case, &lt;code&gt;fs.ftruncate()&lt;/code&gt; is called.</source>
          <target state="translated">Асинхронное &lt;a href=&quot;http://man7.org/linux/man-pages/man2/truncate.2.html&quot;&gt; &lt;code&gt;truncate(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения. Дескриптор файла также может быть передан в качестве первого аргумента. В этом случае &lt;code&gt;fs.ftruncate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="086e500b32994a55adb4a9bb6803347f1f01c959" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/unlink.2.html&quot;&gt;&lt;code&gt;unlink(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man2/unlink.2.html&quot;&gt; &lt;code&gt;unlink(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="30eda89daf29dd37b5c33ea6af171a0cbda2f48a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt;. Reads the contents of a directory. The callback gets two arguments &lt;code&gt;(err, files)&lt;/code&gt; where &lt;code&gt;files&lt;/code&gt; is an array of the names of the files in the directory excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt; . Читает содержимое каталога. Обратный вызов получает два аргумента &lt;code&gt;(err, files)&lt;/code&gt; где &lt;code&gt;files&lt;/code&gt; - это массив имен файлов в каталоге, исключая &lt;code&gt;'.'&lt;/code&gt; и &lt;code&gt;'..'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbb0824a63d5adeba58c7e2befadf249fff6a34a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt;&lt;code&gt;realpath(3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt; &lt;code&gt;realpath(3)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b83a298e5187f5282e1f6ffbb164af6c666961b4" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=lchmod&amp;amp;sektion=2&quot;&gt;&lt;code&gt;lchmod(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронный &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=lchmod&amp;amp;sektion=2&quot;&gt; &lt;code&gt;lchmod(2)&lt;/code&gt; &lt;/a&gt; . Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="5c386e768f620d9421694511c41f1869a7099c6b" translate="yes" xml:space="preserve">
          <source>Asynchronous Process Creation</source>
          <target state="translated">Создание асинхронного процесса</target>
        </trans-unit>
        <trans-unit id="870352c416c2838c61264150314eaa4a679049d3" translate="yes" xml:space="preserve">
          <source>Asynchronous Thread-safe Function Calls</source>
          <target state="translated">Асинхронные вызовы функций безопасности резьбы</target>
        </trans-unit>
        <trans-unit id="a03fedb2a557050dce7a75bc3afc2350375e0e56" translate="yes" xml:space="preserve">
          <source>Asynchronous context example</source>
          <target state="translated">асинхронный контекстный пример</target>
        </trans-unit>
        <trans-unit id="932d1107f2520700d1c17c3a107f791d9049a851" translate="yes" xml:space="preserve">
          <source>Asynchronous file open that returns a &lt;code&gt;Promise&lt;/code&gt; that, when resolved, yields a &lt;code&gt;FileHandle&lt;/code&gt; object. See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt;&lt;code&gt;open(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Открытие асинхронного файла, которое возвращает &lt;code&gt;Promise&lt;/code&gt; которое при разрешении дает объект &lt;code&gt;FileHandle&lt;/code&gt; . См. &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt; &lt;code&gt;open(2)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e7ff50f9f2650749375c6de24e52e7612612d38" translate="yes" xml:space="preserve">
          <source>Asynchronous file open. See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt;&lt;code&gt;open(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Открыт асинхронный файл. См. &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt; &lt;code&gt;open(2)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4011de6f6effa5362a35d4ec51b2e02903974ff" translate="yes" xml:space="preserve">
          <source>Asynchronous process creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ae8164adb84cce822fb1485a5cdaf4e6f315d5" translate="yes" xml:space="preserve">
          <source>Asynchronous system APIs are used by Node.js whenever possible, but where they do not exist, libuv's threadpool is used to create asynchronous node APIs based on synchronous system APIs. Node.js APIs that use the threadpool are:</source>
          <target state="translated">Асинхронные системные API используются Node.js по возможности,но там,где их нет,для создания асинхронных узловых API на основе синхронных системных API используется нитевой пул libuv.Node.js API,использующие потоковый интерфейс:</target>
        </trans-unit>
        <trans-unit id="2116a1ac7f9f0d1351792d43781b39c54b1ff200" translate="yes" xml:space="preserve">
          <source>Asynchronous thread-safe function calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3df2a3d6f21d146c21574f761ef4944133d9a7e" translate="yes" xml:space="preserve">
          <source>Asynchronous vs. Synchronous</source>
          <target state="translated">Асинхронный против синхронного</target>
        </trans-unit>
        <trans-unit id="b711aa13f0c6c18c2c4dcd68214019a1a4d2c2c2" translate="yes" xml:space="preserve">
          <source>Asynchronous vs. synchronous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ff317f81343d387b04d108c5d6283c4dcb0935" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to a file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Асинхронно добавлять данные в файл, создавая файл, если он еще не существует. &lt;code&gt;data&lt;/code&gt; могут быть строкой или &lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98a5c4afe98dc5cc8dcf18f90e97c71e236ec74c" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to a file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">Асинхронно добавлять данные в файл, создавая файл, если он еще не существует. &lt;code&gt;data&lt;/code&gt; могут быть строкой или &lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; будет решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="976cd5376ce8651fee81ccbed770f762bd05a695" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to this file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">Асинхронно добавляйте данные в этот файл, создавая файл, если он еще не существует. &lt;code&gt;data&lt;/code&gt; могут быть строкой или &lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; будет решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="1892b7d4690e77e49d808bad31fc4422c9b65b09" translate="yes" xml:space="preserve">
          <source>Asynchronously changes owner and group of a file. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронно меняет владельца и группу файла.Никакие аргументы,кроме возможного исключения,не даются для завершения обратного вызова.</target>
        </trans-unit>
        <trans-unit id="2dfd976004fd3b58537d85e14c807b6633f9f8bd" translate="yes" xml:space="preserve">
          <source>Asynchronously changes the permissions of a file. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронно изменяет права доступа к файлу.Никакие аргументы,кроме возможного исключения,не даются при обратном вызове в завершение.</target>
        </trans-unit>
        <trans-unit id="a40de80258a05223e74cdb1294b7987da7adad17" translate="yes" xml:space="preserve">
          <source>Asynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc5972b2e83a394368241b636afbbaac521139f" translate="yes" xml:space="preserve">
          <source>Asynchronously computes the canonical pathname by resolving &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt; and symbolic links.</source>
          <target state="translated">Асинхронно вычисляет канонический путь путем разрешения &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;..&lt;/code&gt; и символические ссылки.</target>
        </trans-unit>
        <trans-unit id="61e758277c877bffb922ed73601c1ec773283bec" translate="yes" xml:space="preserve">
          <source>Asynchronously copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. By default, &lt;code&gt;dest&lt;/code&gt; is overwritten if it already exists. No arguments other than a possible exception are given to the callback function. Node.js makes no guarantees about the atomicity of the copy operation. If an error occurs after the destination file has been opened for writing, Node.js will attempt to remove the destination.</source>
          <target state="translated">Асинхронно копирует &lt;code&gt;src&lt;/code&gt; в &lt;code&gt;dest&lt;/code&gt; . По умолчанию, &lt;code&gt;dest&lt;/code&gt; перезаписывается, если он уже существует. Функции обратного вызова не передаются никакие аргументы, кроме возможного исключения. Node.js не дает никаких гарантий относительно атомарности операции копирования. Если ошибка возникает после того, как целевой файл был открыт для записи, Node.js попытается удалить место назначения.</target>
        </trans-unit>
        <trans-unit id="0574311e1ef2b3da4f080981eca1cd288383a2b2" translate="yes" xml:space="preserve">
          <source>Asynchronously copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. By default, &lt;code&gt;dest&lt;/code&gt; is overwritten if it already exists. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">Асинхронно копирует &lt;code&gt;src&lt;/code&gt; в &lt;code&gt;dest&lt;/code&gt; . По умолчанию, &lt;code&gt;dest&lt;/code&gt; перезаписывается, если он уже существует. &lt;code&gt;Promise&lt;/code&gt; будет решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="b7c9346b0de6bb56fc8db44a7ecea4bb12c73076" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with either no arguments, or the first directory path created if &lt;code&gt;recursive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96ee6aa922ef2ca4b26e5513d0f8a3a0c0fff67" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Асинхронно создает каталог, а затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="fcb16e88dba803e857715fb54e9664c6c91965ad" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0c8dd0fcddb9b0398d333f8377db08d57ba88c" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронно создает каталог.Никакие аргументы,кроме возможных исключений,не даются при обратном вызове завершения.</target>
        </trans-unit>
        <trans-unit id="939198d49e024c21a1e1e8e46a1c0cdcd9fe7a68" translate="yes" xml:space="preserve">
          <source>Asynchronously get the number of concurrent connections on the server. Works when sockets were sent to forks.</source>
          <target state="translated">Асинхронно получать количество одновременных соединений на сервере.Работает,когда сокеты отправляются на вилки.</target>
        </trans-unit>
        <trans-unit id="c79f9ea168e2ce45b50d6380e32a4d09ef56cde7" translate="yes" xml:space="preserve">
          <source>Asynchronously iterates over the directory via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt; until all entries have been read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03edc635ff855c15d168e66fcad36748b96f3a5" translate="yes" xml:space="preserve">
          <source>Asynchronously open a directory. See &lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt;&lt;code&gt;opendir(3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d5f7ee95471270836f8f618f696033b04bd6d7" translate="yes" xml:space="preserve">
          <source>Asynchronously read the next directory entry via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b60a1ac407f4352799156d07820adf71cf5f4b" translate="yes" xml:space="preserve">
          <source>Asynchronously reads the entire contents of a file.</source>
          <target state="translated">Асинхронно считывает все содержимое файла.</target>
        </trans-unit>
        <trans-unit id="766290f37aa426d8129aecd96082d0a6226bde50" translate="yes" xml:space="preserve">
          <source>Asynchronously removes a file or symbolic link. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронно удаляет файл или символическую ссылку.Никакие аргументы,кроме возможных исключений,не даются для завершения обратного вызова.</target>
        </trans-unit>
        <trans-unit id="8f9db1ff0bc43c00c923d9581df460a90e202840" translate="yes" xml:space="preserve">
          <source>Asynchronously removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). No arguments other than a possible exception are given to the completion callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8843625268d4b77ea1512d3934aa5ff87185eb5" translate="yes" xml:space="preserve">
          <source>Asynchronously rename file at &lt;code&gt;oldPath&lt;/code&gt; to the pathname provided as &lt;code&gt;newPath&lt;/code&gt;. In the case that &lt;code&gt;newPath&lt;/code&gt; already exists, it will be overwritten. If there is a directory at &lt;code&gt;newPath&lt;/code&gt;, an error will be raised instead. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Асинхронно переименуйте файл в &lt;code&gt;oldPath&lt;/code&gt; в путь, указанный как &lt;code&gt;newPath&lt;/code&gt; . В случае, если &lt;code&gt;newPath&lt;/code&gt; уже существует, он будет перезаписан. Если в &lt;code&gt;newPath&lt;/code&gt; есть каталог , вместо этого будет выдана ошибка. Обратному вызову завершения не передаются никакие аргументы, кроме возможного исключения.</target>
        </trans-unit>
        <trans-unit id="58ece64d813f422b3fc9b6ecb0f0ff6b40f7434c" translate="yes" xml:space="preserve">
          <source>Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string or a buffer. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">Асинхронно записывает данные в файл, заменяя файл, если он уже существует. &lt;code&gt;data&lt;/code&gt; могут быть строкой или буфером. &lt;code&gt;Promise&lt;/code&gt; будет решен без каких - либо аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="df09d1bd914fced304f3666b66420161e4fb8bf5" translate="yes" xml:space="preserve">
          <source>Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string, a buffer, or an object with an own &lt;code&gt;toString&lt;/code&gt; function property. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40afcfc38b7a5f2938ce36281f7fe9f5e8725769" translate="yes" xml:space="preserve">
          <source>At this time coverage is only collected in the main thread and will not be output for code executed by worker threads.</source>
          <target state="translated">В это время покрытие собирается только в главном потоке и не будет выводиться для кода,выполняемого рабочими потоками.</target>
        </trans-unit>
        <trans-unit id="b19f4cf9dafd0485024999c5ac53d9a2b7fe4ae4" translate="yes" xml:space="preserve">
          <source>AtExit hooks</source>
          <target state="translated">крючки AtExit</target>
        </trans-unit>
        <trans-unit id="cea32cf122572dc5951380b0e98cbcb8bd4712d4" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;code&gt;'data'&lt;/code&gt; event listener to a stream that has not been explicitly paused will switch the stream into flowing mode. Data will then be passed as soon as it is available.</source>
          <target state="translated">Присоединение прослушивателя событий &lt;code&gt;'data'&lt;/code&gt; к потоку, который не был явно приостановлен, переключит поток в текущий режим. Затем данные будут переданы, как только они станут доступны.</target>
        </trans-unit>
        <trans-unit id="fd087322b0e9680ce97117b3037d67b230d66cc7" translate="yes" xml:space="preserve">
          <source>Attempting to fill a non-zero length buffer with a zero length buffer triggers a thrown exception.</source>
          <target state="translated">Попытка заполнить буфер ненулевой длины буфером нулевой длины вызывает брошенное исключение.</target>
        </trans-unit>
        <trans-unit id="e2e0426506e4725ac2d5585b495d07354c95a392" translate="yes" xml:space="preserve">
          <source>Attempting to resume normally after an uncaught exception can be similar to pulling out of the power cord when upgrading a computer &amp;mdash; nine out of ten times nothing happens - but the 10th time, the system becomes corrupted.</source>
          <target state="translated">Попытка возобновить работу в обычном режиме после неперехваченного исключения может быть аналогична выдергиванию шнура питания при обновлении компьютера - в девяти из десяти случаев ничего не происходит, но в десятый раз система оказывается поврежденной.</target>
        </trans-unit>
        <trans-unit id="081d720ee9440d5b17f5b1ea8f5e2ee8d0f998b1" translate="yes" xml:space="preserve">
          <source>Attempting to resume normally after an uncaught exception can be similar to pulling out the power cord when upgrading a computer. Nine out of ten times, nothing happens. But the tenth time, the system becomes corrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d283b1b61a25bccb1159e09a9877652fcdcde4" translate="yes" xml:space="preserve">
          <source>Attempting to set a TLS protocol &lt;code&gt;minVersion&lt;/code&gt; or &lt;code&gt;maxVersion&lt;/code&gt; conflicts with an attempt to set the &lt;code&gt;secureProtocol&lt;/code&gt; explicitly. Use one mechanism or the other.</source>
          <target state="translated">Попытка установить &lt;code&gt;minVersion&lt;/code&gt; или &lt;code&gt;maxVersion&lt;/code&gt; протокола TLS конфликтует с попыткой явно установить &lt;code&gt;secureProtocol&lt;/code&gt; . Используйте тот или иной механизм.</target>
        </trans-unit>
        <trans-unit id="e7450aeaf10a1d9835fb22749c80944a631c9bd8" translate="yes" xml:space="preserve">
          <source>Attempting to set a header field name or value that contains invalid characters will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">Попытка установить имя поля заголовка или значение, содержащее недопустимые символы, приведет к возникновению &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2888617845c16f508396fa9e8b37fa087e6b8e74" translate="yes" xml:space="preserve">
          <source>Attempts to set the scheduling priority for the process specified by &lt;code&gt;pid&lt;/code&gt;. If &lt;code&gt;pid&lt;/code&gt; is not provided or is &lt;code&gt;0&lt;/code&gt;, the process ID of the current process is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562a89091aa1d9d44d65d1f29272422e1ef026f" translate="yes" xml:space="preserve">
          <source>Attempts to use the server's preferences instead of the client's when selecting a cipher. Behavior depends on protocol version. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt;.</source>
          <target state="translated">Пытается использовать предпочтения сервера вместо предпочтений клиента при выборе шифра. Поведение зависит от версии протокола. См. &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;Https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c1bb6246c4b5eba2405c8d2e267c8ad678a420d" translate="yes" xml:space="preserve">
          <source>Automatically zero-fills all newly allocated &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;buffer#buffer_class_slowbuffer&quot;&gt;&lt;code&gt;SlowBuffer&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">Автоматически заполняет нулями все недавно выделенные экземпляры &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;buffer#buffer_class_slowbuffer&quot;&gt; &lt;code&gt;SlowBuffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="738a063d097a7709bdd510db350f157649f27d7e" translate="yes" xml:space="preserve">
          <source>Avoid overriding public methods such as &lt;code&gt;write()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cork()&lt;/code&gt;, &lt;code&gt;uncork()&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;destroy()&lt;/code&gt;, or emitting internal events such as &lt;code&gt;'error'&lt;/code&gt;, &lt;code&gt;'data'&lt;/code&gt;, &lt;code&gt;'end'&lt;/code&gt;, &lt;code&gt;'finish'&lt;/code&gt; and &lt;code&gt;'close'&lt;/code&gt; through &lt;code&gt;.emit()&lt;/code&gt;. Doing so can break current and future stream invariants leading to behavior and/or compatibility issues with other streams, stream utilities, and user expectations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ea6ab27794b1b786ec6f49c43b3be10f62e11b" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;code&gt;require.extensions&lt;/code&gt;. Use could cause subtle bugs and resolving the extensions gets slower with each registered extension.</source>
          <target state="translated">Избегайте использования &lt;code&gt;require.extensions&lt;/code&gt; . Использование может вызвать небольшие ошибки, и разрешение расширений будет медленнее с каждым зарегистрированным расширением.</target>
        </trans-unit>
        <trans-unit id="0c375b39ededa122db6c5e755a1b2e705c13957d" translate="yes" xml:space="preserve">
          <source>Avoiding duplicate warnings</source>
          <target state="translated">Избегая дублирования предупреждений</target>
        </trans-unit>
        <trans-unit id="d9f92545139fd65e2e2d3013e9f18410df9c8570" translate="yes" xml:space="preserve">
          <source>Awaiting multiple events emitted on &lt;code&gt;process.nextTick()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb72a563299c6d5a3e07e89e022add61bdd6549" translate="yes" xml:space="preserve">
          <source>Awaits the &lt;code&gt;asyncFn&lt;/code&gt; promise or, if &lt;code&gt;asyncFn&lt;/code&gt; is a function, immediately calls the function and awaits the returned promise to complete. It will then check that the promise is not rejected.</source>
          <target state="translated">Ожидающий &lt;code&gt;asyncFn&lt;/code&gt; обещание или, если &lt;code&gt;asyncFn&lt;/code&gt; функция, немедленно вызывает функцию и ждет возвращаемого обещания полного. Затем он проверит, не отклонено ли обещание.</target>
        </trans-unit>
        <trans-unit id="3d138ce5c31c73160ab7311fdf77259757306f4a" translate="yes" xml:space="preserve">
          <source>Awaits the &lt;code&gt;asyncFn&lt;/code&gt; promise or, if &lt;code&gt;asyncFn&lt;/code&gt; is a function, immediately calls the function and awaits the returned promise to complete. It will then check that the promise is rejected.</source>
          <target state="translated">Ожидающий &lt;code&gt;asyncFn&lt;/code&gt; обещание или, если &lt;code&gt;asyncFn&lt;/code&gt; функция, немедленно вызывает функцию и ждет возвращаемого обещания полного. Затем он проверит, что обещание отклонено.</target>
        </trans-unit>
        <trans-unit id="3f0851e07ee191f6c8c4aa05fb44f44b1c69f6c3" translate="yes" xml:space="preserve">
          <source>Back one character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5d5adc34f5db46d8710f2cc01e8099b5d73ab0" translate="yes" xml:space="preserve">
          <source>Background colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4707f4e95ebcde082b4994eb1217fdc6dea792d" translate="yes" xml:space="preserve">
          <source>Bare specifier package resolution lookup through node_modules</source>
          <target state="translated">Поиск разрешения пакета с голыми спецификаторами через node_modules</target>
        </trans-unit>
        <trans-unit id="b6b433ea5c3c6467576319c5fbc52ef203bda84f" translate="yes" xml:space="preserve">
          <source>Bare specifiers, and the bare specifier portion of deep import specifiers, are strings; but everything else in a specifier is a URL.</source>
          <target state="translated">Голые спецификаторы,а голая часть спецификатора глубокого импорта-это строки,но все остальное в спецификаторе-это URL.</target>
        </trans-unit>
        <trans-unit id="23565a0ceba01f9ffe5b0dc7106e82f8b29f21cf" translate="yes" xml:space="preserve">
          <source>Based on the recommendations of &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar1.pdf&quot;&gt;NIST SP 800-131A&lt;/a&gt;:</source>
          <target state="translated">На основании рекомендаций &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar1.pdf&quot;&gt;NIST SP 800-131A&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="13280a7df8d3cffc696b26b23c5b717ddabf4d54" translate="yes" xml:space="preserve">
          <source>Basic N-API Data Types</source>
          <target state="translated">Основные типы данных N-API</target>
        </trans-unit>
        <trans-unit id="79da5918337d66f317a8e0dced5fb16120e39c8c" translate="yes" xml:space="preserve">
          <source>Basic N-API data types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0531950c357a602b86bea24e2ae4c86d1cdf0398" translate="yes" xml:space="preserve">
          <source>Be an N-API addon, or</source>
          <target state="translated">Будь аддоном N-API,или</target>
        </trans-unit>
        <trans-unit id="210405f699c0ae9511b9065687cdcbd88db13e20" translate="yes" xml:space="preserve">
          <source>Be aware that in the &lt;code&gt;repl&lt;/code&gt; the error message will be different to the one thrown in a file! See below for further details.</source>
          <target state="translated">Имейте в виду, что в &lt;code&gt;repl&lt;/code&gt; сообщение об ошибке будет отличаться от сообщения в файле! Подробнее см. Ниже.</target>
        </trans-unit>
        <trans-unit id="86ef6349970d3f2c873fdffa2b201ee77e13d593" translate="yes" xml:space="preserve">
          <source>Be aware that modifying the value during the instance runtime may have unintended consequences if &lt;code&gt;rl.cursor&lt;/code&gt; is not also controlled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0176b12890631168006259f0fec8076d0bcb6f7" translate="yes" xml:space="preserve">
          <source>Be aware that unless the child environment is explicitly set, this environment variable will be inherited by any child processes, and if they use OpenSSL, it may cause them to trust the same CAs as node.</source>
          <target state="translated">Имейте в виду,что если дочернее окружение явно не установлено,эта переменная окружения будет наследоваться любыми дочерними процессами,и если они используют OpenSSL,это может заставить их доверять тем же CA,что и узел.</target>
        </trans-unit>
        <trans-unit id="a6afc55c88fc97ff27bc08b6c490a5d05c14cd25" translate="yes" xml:space="preserve">
          <source>Be declared as context-aware using &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; as described above</source>
          <target state="translated">Быть объявленным как контекстно-зависимое, используя &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; как описано выше</target>
        </trans-unit>
        <trans-unit id="f55a4443bed99d0be307da03b44f021cd62c58cd" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt;, each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, each side should operate (and buffer) independently of the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4b3d89eb904333fb7d3756c67f2538d7f90ca9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt;, each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, it is important for each side to operate (and buffer) independently of the other.</source>
          <target state="translated">Поскольку &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; потоки и потоки &lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; доступны для &lt;code&gt;Readable&lt;/code&gt; и &lt;code&gt;Writable&lt;/code&gt; , каждый из них поддерживает &lt;em&gt;два&lt;/em&gt; отдельных внутренних буфера, используемых для чтения и записи, что позволяет каждой стороне работать независимо от другой при сохранении соответствующего и эффективного потока данных. Например, экземпляры &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; - это &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; потоки, сторона &lt;code&gt;Readable&lt;/code&gt; которых позволяет использовать данные, полученные &lt;em&gt;от&lt;/em&gt; сокета, а сторона с возможностью &lt;code&gt;Writable&lt;/code&gt; позволяет записывать данные &lt;em&gt;в&lt;/em&gt;розетка. Поскольку данные могут быть записаны в сокет с большей или меньшей скоростью, чем их получают, важно, чтобы каждая сторона работала (и буферизовала) независимо от другой.</target>
        </trans-unit>
        <trans-unit id="e43c36cf51a09fe109b357563f98d416ccca8572" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PerformanceObserver&lt;/code&gt; instances introduce their own additional performance overhead, instances should not be left subscribed to notifications indefinitely. Users should disconnect observers as soon as they are no longer needed.</source>
          <target state="translated">Поскольку экземпляры &lt;code&gt;PerformanceObserver&lt;/code&gt; создают свои собственные дополнительные издержки производительности, экземпляры не следует оставлять подписанными на уведомления на неопределенный срок. Пользователи должны отключать наблюдателей, как только они больше не нужны.</target>
        </trans-unit>
        <trans-unit id="ee71d7f7ec47191268617382ca43907ab99fd18f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;kill()&lt;/code&gt; attempts to gracefully disconnect the worker process, it is susceptible to waiting indefinitely for the disconnect to complete. For example, if the worker enters an infinite loop, a graceful disconnect will never occur. If the graceful disconnect behavior is not needed, use &lt;code&gt;worker.process.kill()&lt;/code&gt;.</source>
          <target state="translated">Поскольку &lt;code&gt;kill()&lt;/code&gt; пытается аккуратно отключить рабочий процесс, он подвержен неопределенному ожиданию завершения отключения. Например, если рабочий входит в бесконечный цикл, постепенное отключение никогда не произойдет. Если &lt;code&gt;worker.process.kill()&lt;/code&gt; отключение не требуется, используйте worker.process.kill () .</target>
        </trans-unit>
        <trans-unit id="ef790698716c7ee0f926d652933fd27ca728b2e9" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;module&lt;/code&gt; provides a &lt;code&gt;filename&lt;/code&gt; property (normally equivalent to &lt;code&gt;__filename&lt;/code&gt;), the entry point of the current application can be obtained by checking &lt;code&gt;require.main.filename&lt;/code&gt;.</source>
          <target state="translated">Поскольку &lt;code&gt;module&lt;/code&gt; предоставляет свойство &lt;code&gt;filename&lt;/code&gt; (обычно эквивалентное &lt;code&gt;__filename&lt;/code&gt; ), точку входа текущего приложения можно получить, проверив &lt;code&gt;require.main.filename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b50eed8d664c34b92740bfba845ba13677a5bfc" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;nice&lt;/code&gt; values are Unix-specific, on Windows the &lt;code&gt;nice&lt;/code&gt; values of all processors are always 0.</source>
          <target state="translated">Поскольку значения &lt;code&gt;nice&lt;/code&gt; зависят от Unix, в Windows значения &lt;code&gt;nice&lt;/code&gt; для всех процессоров всегда равны 0.</target>
        </trans-unit>
        <trans-unit id="3936d9e027d4f7d849f82ddac675cb6b070b6236" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;server.listen()&lt;/code&gt; hands off most of the work to the master process, there are three cases where the behavior between a normal Node.js process and a cluster worker differs:</source>
          <target state="translated">Поскольку &lt;code&gt;server.listen()&lt;/code&gt; передает большую часть работы главному процессу, есть три случая, когда поведение обычного процесса Node.js и рабочего кластера различается:</target>
        </trans-unit>
        <trans-unit id="cc143ffcb4d59a69f5c64c321bc5d4cc6f4da8fe" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;vm.runInThisContext()&lt;/code&gt; does not have access to the local scope, &lt;code&gt;localVar&lt;/code&gt; is unchanged. In contrast, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;does&lt;/em&gt; have access to the local scope, so the value &lt;code&gt;localVar&lt;/code&gt; is changed. In this way &lt;code&gt;vm.runInThisContext()&lt;/code&gt; is much like an &lt;a href=&quot;https://es5.github.io/#x10.4.2&quot;&gt;indirect &lt;code&gt;eval()&lt;/code&gt; call&lt;/a&gt;, e.g. &lt;code&gt;(0,eval)('code')&lt;/code&gt;.</source>
          <target state="translated">Поскольку &lt;code&gt;vm.runInThisContext()&lt;/code&gt; не имеет доступа к локальной области, &lt;code&gt;localVar&lt;/code&gt; не изменяется. В противоположность этому , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; делает&lt;/em&gt; доступ к локальной области видимости, поэтому значение &lt;code&gt;localVar&lt;/code&gt; изменяется. Таким образом, &lt;code&gt;vm.runInThisContext()&lt;/code&gt; очень похож на &lt;a href=&quot;https://es5.github.io/#x10.4.2&quot;&gt;косвенный вызов &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; , например &lt;code&gt;(0,eval)('code')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a298b78360dc43f65882b92f932e420a9328bc04" translate="yes" xml:space="preserve">
          <source>Because JavaScript does not have support for multiple inheritance, the &lt;code&gt;stream.Duplex&lt;/code&gt; class is extended to implement a &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; stream (as opposed to extending the &lt;code&gt;stream.Readable&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;stream.Writable&lt;/code&gt; classes).</source>
          <target state="translated">Поскольку JavaScript не поддерживает множественное наследование, класс &lt;code&gt;stream.Duplex&lt;/code&gt; расширен для реализации потока &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; (в отличие от расширения классов &lt;code&gt;stream.Readable&lt;/code&gt; &lt;em&gt;и &lt;/em&gt; &lt;code&gt;stream.Writable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="546b904dea8d2798ff45c5b75fddfad99233aef5" translate="yes" xml:space="preserve">
          <source>Because Node.js looks up the &lt;code&gt;realpath&lt;/code&gt; of any modules it loads (that is, it resolves symlinks) and then &lt;a href=&quot;#modules_loading_from_node_modules_folders&quot;&gt;looks for their dependencies in &lt;code&gt;node_modules&lt;/code&gt; folders&lt;/a&gt;, this situation can be resolved with the following architecture:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b13c52658ca440c352bc51da120443fe5a4fc8" translate="yes" xml:space="preserve">
          <source>Because RSA public keys can be derived from private keys, a private key may be passed instead of a public key.</source>
          <target state="translated">Поскольку открытые ключи RSA могут быть получены из закрытых ключей,вместо открытого ключа может быть передан закрытый ключ.</target>
        </trans-unit>
        <trans-unit id="2ac5a6d6dda6d588b0c5c357a8ed768499a1bccf" translate="yes" xml:space="preserve">
          <source>Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;http://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</source>
          <target state="translated">Поскольку пул потоков libuv имеет фиксированный размер, это означает, что если по какой-либо причине какой-либо из этих API-интерфейсов занимает много времени, другие (на первый взгляд не связанные) API-интерфейсы, работающие в пуле потоков libuv, испытают снижение производительности. Чтобы смягчить эту проблему, одним из возможных решений является увеличение размера пула потоков libuv, установив для переменной среды &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; значение больше &lt;code&gt;4&lt;/code&gt; (текущее значение по умолчанию). Для получения дополнительной информации см. &lt;a href=&quot;http://docs.libuv.org/en/latest/threadpool.html&quot;&gt;Документацию&lt;/a&gt; по libuv threadpool .</target>
        </trans-unit>
        <trans-unit id="4635926cf8d3813810bdf88fa8b84fa493e089d4" translate="yes" xml:space="preserve">
          <source>Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;https://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f37f5b4a775883f5f6850c3e2e1562e198f6ea2" translate="yes" xml:space="preserve">
          <source>Because listeners are managed using an internal array, calling this will change the position indices of any listener registered &lt;em&gt;after&lt;/em&gt; the listener being removed. This will not impact the order in which listeners are called, but it means that any copies of the listener array as returned by the &lt;code&gt;emitter.listeners()&lt;/code&gt; method will need to be recreated.</source>
          <target state="translated">Поскольку слушатели управляются с помощью внутреннего массива, его вызов изменит индексы позиции любого слушателя, зарегистрированного &lt;em&gt;после&lt;/em&gt; удаления слушателя. Это не повлияет на порядок, в котором вызываются слушатели, но это означает, что любые копии массива слушателей, возвращенные методом &lt;code&gt;emitter.listeners()&lt;/code&gt; , необходимо будет воссоздать.</target>
        </trans-unit>
        <trans-unit id="849a766d1b140b80f9c44a7ca0d9d61ba5900944" translate="yes" xml:space="preserve">
          <source>Because long living server connections may block workers from disconnecting, it may be useful to send a message, so application specific actions may be taken to close them. It also may be useful to implement a timeout, killing a worker if the &lt;code&gt;'disconnect'&lt;/code&gt; event has not been emitted after some time.</source>
          <target state="translated">Поскольку долгоживущие серверные соединения могут блокировать отключение рабочих, может быть полезно отправить сообщение, поэтому для их закрытия могут быть предприняты определенные действия приложения. Также может быть полезно реализовать тайм-аут, убивающий работника, если событие &lt;code&gt;'disconnect'&lt;/code&gt; не было отправлено через некоторое время.</target>
        </trans-unit>
        <trans-unit id="f7456de8b5ba506390ade664594484a04a7cc299" translate="yes" xml:space="preserve">
          <source>Because of the internal mechanics of how the &lt;code&gt;process.nextTick()&lt;/code&gt; queue and the microtask queue that underlies Promises are implemented within V8 and Node.js, it is possible for code running within a context to &quot;escape&quot; the &lt;code&gt;timeout&lt;/code&gt; set using &lt;code&gt;vm.runInContext()&lt;/code&gt;, &lt;code&gt;vm.runInNewContext()&lt;/code&gt;, and &lt;code&gt;vm.runInThisContext()&lt;/code&gt;.</source>
          <target state="translated">Из-за внутренней механики того, как очередь &lt;code&gt;process.nextTick()&lt;/code&gt; очередь микрозадач, лежащая в основе Promises, реализованы в V8 и Node.js, код, выполняющийся в контексте, может &amp;laquo;избежать&amp;raquo; &lt;code&gt;timeout&lt;/code&gt; установленного с помощью &lt;code&gt;vm.runInContext()&lt;/code&gt; , &lt;code&gt;vm.runInNewContext()&lt;/code&gt; и &lt;code&gt;vm.runInThisContext()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4366452e42133138d37a810cef33032932211dc3" translate="yes" xml:space="preserve">
          <source>Because of the need for standard compliance, this method does not allow users to customize the serialization process of the URL. For more flexibility, &lt;a href=&quot;#url_url_format_url_options&quot;&gt;&lt;code&gt;require('url').format()&lt;/code&gt;&lt;/a&gt; method might be of interest.</source>
          <target state="translated">Из-за необходимости соблюдения стандартов этот метод не позволяет пользователям настраивать процесс сериализации URL-адреса. Для большей гибкости может быть интересен метод &lt;a href=&quot;#url_url_format_url_options&quot;&gt; &lt;code&gt;require('url').format()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60997f539863f89d6061a5995c36fb4628070f39" translate="yes" xml:space="preserve">
          <source>Because of the specific serialization and processing requirements imposed by the HTTP/2 protocol, it is not recommended for user code to read data from or write data to a &lt;code&gt;Socket&lt;/code&gt; instance bound to a &lt;code&gt;Http2Session&lt;/code&gt;. Doing so can put the HTTP/2 session into an indeterminate state causing the session and the socket to become unusable.</source>
          <target state="translated">Из-за особых требований к сериализации и обработке, предъявляемых протоколом HTTP / 2, пользовательскому коду не рекомендуется читать данные из экземпляра &lt;code&gt;Socket&lt;/code&gt; , привязанного к &lt;code&gt;Http2Session&lt;/code&gt; , или записывать данные в него . Это может перевести сеанс HTTP / 2 в неопределенное состояние, в результате чего сеанс и сокет станут непригодными для использования.</target>
        </trans-unit>
        <trans-unit id="691e395104f8dc313bf0ef893e4c24f4eaba778d" translate="yes" xml:space="preserve">
          <source>Because printing to the console is an asynchronous operation, &lt;code&gt;console.log()&lt;/code&gt; will cause the AsyncHooks callbacks to be called. Using &lt;code&gt;console.log()&lt;/code&gt; or similar asynchronous operations inside an AsyncHooks callback function will thus cause an infinite recursion. An easy solution to this when debugging is to use a synchronous logging operation such as &lt;code&gt;fs.writeFileSync(file, msg, flag)&lt;/code&gt;. This will print to the file and will not invoke AsyncHooks recursively because it is synchronous.</source>
          <target state="translated">Поскольку печать на консоль является асинхронной операцией, &lt;code&gt;console.log()&lt;/code&gt; вызовет обратные вызовы AsyncHooks. Таким образом, использование &lt;code&gt;console.log()&lt;/code&gt; или аналогичных асинхронных операций внутри функции обратного вызова AsyncHooks вызовет бесконечную рекурсию. &lt;code&gt;fs.writeFileSync(file, msg, flag)&lt;/code&gt; решением этой проблемы при отладке является использование операции синхронного ведения журнала, такой как fs.writeFileSync (file, msg, flag) . Это будет печатать в файл и не будет вызывать AsyncHooks рекурсивно, потому что это синхронно.</target>
        </trans-unit>
        <trans-unit id="86bb2b19e31fabe9224782de43b7a53fdd55cf16" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key may be passed instead of a public key.</source>
          <target state="translated">Поскольку открытые ключи могут быть получены из закрытых ключей,закрытый ключ может быть передан вместо открытого.</target>
        </trans-unit>
        <trans-unit id="302ca8c64322bc742ed684aba5f1bdb2293fb035" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key may be passed instead of a public key. In that case, this function behaves as if &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt; had been called, except that the type of the returned &lt;code&gt;KeyObject&lt;/code&gt; will be &lt;code&gt;'public'&lt;/code&gt; and that the private key cannot be extracted from the returned &lt;code&gt;KeyObject&lt;/code&gt;. Similarly, if a &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'private'&lt;/code&gt; is given, a new &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'public'&lt;/code&gt; will be returned and it will be impossible to extract the private key from the returned object.</source>
          <target state="translated">Поскольку открытые ключи могут быть получены из закрытых ключей, закрытый ключ может быть передан вместо открытого ключа. В этом случае эта функция ведет себя так, как если бы был вызван &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt; , за исключением того, что тип возвращаемого &lt;code&gt;KeyObject&lt;/code&gt; будет &lt;code&gt;'public'&lt;/code&gt; и закрытый ключ не может быть извлечен из возвращенного &lt;code&gt;KeyObject&lt;/code&gt; . Точно так же, если &lt;code&gt;KeyObject&lt;/code&gt; с типом &lt;code&gt;'private'&lt;/code&gt; будет возвращен новый &lt;code&gt;KeyObject&lt;/code&gt; с типом &lt;code&gt;'public'&lt;/code&gt; и будет невозможно извлечь закрытый ключ из возвращенного объекта.</target>
        </trans-unit>
        <trans-unit id="05ecf9b2eaee27ff7c7a9da7750dcabd7d10fe69" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key or a public key may be passed for &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Поскольку открытые ключи могут быть получены из закрытых ключей, закрытый ключ или открытый ключ может быть передан в качестве &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="751d641184d0abb77bddb3c071ae868de829e68a" translate="yes" xml:space="preserve">
          <source>Because the Euro (&lt;code&gt;&amp;euro;&lt;/code&gt;) sign is not representable in US-ASCII, it is replaced with &lt;code&gt;?&lt;/code&gt; in the transcoded &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Поскольку знак евро ( &lt;code&gt;&amp;euro;&lt;/code&gt; ) не может быть представлен в кодировке US-ASCII, он заменен на &lt;code&gt;?&lt;/code&gt; в перекодированном &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc43de7f332dadbf8e964b31bf82337c42ae6a98" translate="yes" xml:space="preserve">
          <source>Because the behavior of &lt;code&gt;new Buffer()&lt;/code&gt; is different depending on the type of the first argument, security and reliability issues can be inadvertently introduced into applications when argument validation or &lt;code&gt;Buffer&lt;/code&gt; initialization is not performed.</source>
          <target state="translated">Поскольку поведение &lt;code&gt;new Buffer()&lt;/code&gt; отличается в зависимости от типа первого аргумента, проблемы безопасности и надежности могут быть непреднамеренно внесены в приложения, когда не выполняется проверка аргумента или инициализация &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b80ae2aab5463a2451e9e29994ea910f7cbfd3b" translate="yes" xml:space="preserve">
          <source>Because the exact path to the compiled Addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt;), Addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</source>
          <target state="translated">Поскольку точный путь к скомпилированному двоичному файлу аддона может варьироваться в зависимости от того, как он скомпилирован (т.е. иногда он может находиться в &lt;code&gt;./build/Debug/&lt;/code&gt; ), аддоны могут использовать пакет &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;привязок&lt;/a&gt; для загрузки скомпилированного модуля.</target>
        </trans-unit>
        <trans-unit id="759e7b279652e8b338737a67f94ca404ef31de24" translate="yes" xml:space="preserve">
          <source>Because the exact path to the compiled addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt;), addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960d327e7a558fd7889ffc561ca8765449c5ca4e" translate="yes" xml:space="preserve">
          <source>Because the object cloning uses the structured clone algorithm, non-enumerable properties, property accessors, and object prototypes are not preserved. In particular, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; objects will be read as plain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;s on the receiving side.</source>
          <target state="translated">Поскольку при клонировании объекта используется алгоритм структурированного клонирования, неперечислимые свойства, средства доступа к свойствам и прототипы объектов не сохраняются. В частности, объекты &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; будут читаться как простые &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt; на принимающей стороне.</target>
        </trans-unit>
        <trans-unit id="11a2ae3e203e98e6708ca3bfd5ea9f78d0b7445b" translate="yes" xml:space="preserve">
          <source>Because workers are all separate processes, they can be killed or re-spawned depending on a program's needs, without affecting other workers. As long as there are some workers still alive, the server will continue to accept connections. If no workers are alive, existing connections will be dropped and new connections will be refused. Node.js does not automatically manage the number of workers, however. It is the application's responsibility to manage the worker pool based on its own needs.</source>
          <target state="translated">Поскольку все рабочие-это отдельные процессы,их можно убить или расколоть заново в зависимости от потребностей программы,не затрагивая при этом других рабочих.Пока некоторые рабочие еще живы,сервер будет продолжать принимать соединения.Если ни один из рабочих не останется в живых,существующие соединения будут сброшены,а новые соединения будут отклонены.Однако Node.js не управляет автоматически количеством рабочих.В обязанности приложения входит управление пулом рабочих на основе собственных потребностей.</target>
        </trans-unit>
        <trans-unit id="9d8251ebd1fcaa7d77c2d759766cc9c3e0380b63" translate="yes" xml:space="preserve">
          <source>Becomes &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event is emitted.</source>
          <target state="translated">Становится &lt;code&gt;true&lt;/code&gt; когда &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; событие end .</target>
        </trans-unit>
        <trans-unit id="aa8f810adb45fb720b0fea2ba6a9771faf5aa1f3" translate="yes" xml:space="preserve">
          <source>Before Node.js v6.0, this event emitted only the message and the handle, but not the worker object, contrary to what the documentation stated.</source>
          <target state="translated">До Node.js v6.0 это событие выдавало только сообщение и ручку,но не рабочий объект,вопреки тому,что было указано в документации.</target>
        </trans-unit>
        <trans-unit id="1862072372d6d10bc19cd20b5f8c5559cb8e3e70" translate="yes" xml:space="preserve">
          <source>Before a module's code is executed, Node.js will wrap it with a function wrapper that looks like the following:</source>
          <target state="translated">Перед выполнением кода модуля Node.js обернет его функциональной оберткой,которая выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="f998e665a4896197d04f48db4a8da278e7a7df50" translate="yes" xml:space="preserve">
          <source>Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; will print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Начиная с Node.js v11.0.0, называя эти функции с &lt;code&gt;digest&lt;/code&gt; набором на &lt;code&gt;null&lt;/code&gt; будет выдавать предупреждение устаревания для приведения в соответствие с поведением , когда &lt;code&gt;digest&lt;/code&gt; является &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d1aeaaf9c43a9bd8c9a9ab58576019610bafd74" translate="yes" xml:space="preserve">
          <source>Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; would print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0d66b8d04e6d1cb2aa6cafcc5829a375657d21" translate="yes" xml:space="preserve">
          <source>Below is an example that resolves &lt;code&gt;'archive.org'&lt;/code&gt; then reverse resolves the IP addresses that are returned.</source>
          <target state="translated">Ниже приведен пример, который разрешает &lt;code&gt;'archive.org'&lt;/code&gt; затем выполняет обратное разрешение возвращаемых IP-адресов.</target>
        </trans-unit>
        <trans-unit id="72e3c3bc48b16a53304db10d8a9c608f131d7315" translate="yes" xml:space="preserve">
          <source>Below we give a suggested directory structure that could work:</source>
          <target state="translated">Ниже мы приводим предлагаемую структуру каталога,которая может работать:</target>
        </trans-unit>
        <trans-unit id="11b7e6e8c6eb35d20df4fedefc372c1c039a0fe1" translate="yes" xml:space="preserve">
          <source>Below, &lt;code&gt;bar.js&lt;/code&gt; makes use of the &lt;code&gt;square&lt;/code&gt; module, which exports a Square class:</source>
          <target state="translated">Ниже &lt;code&gt;bar.js&lt;/code&gt; использует модуль &lt;code&gt;square&lt;/code&gt; , который экспортирует класс Square:</target>
        </trans-unit>
        <trans-unit id="17a245da23b3bed21115eda617d0db2f2984f389" translate="yes" xml:space="preserve">
          <source>Besides the async nature to await the completion behaves identically to &lt;a href=&quot;#assert_assert_doesnotthrow_fn_error_message&quot;&gt;&lt;code&gt;assert.doesNotThrow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Помимо асинхронной природы ожидания завершения ведет себя идентично &lt;a href=&quot;#assert_assert_doesnotthrow_fn_error_message&quot;&gt; &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a45abf14381a4bb6f946b2d0bd65a076aa40ecf7" translate="yes" xml:space="preserve">
          <source>Besides the async nature to await the completion behaves identically to &lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt;&lt;code&gt;assert.throws()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Помимо асинхронной природы ожидания завершения, ведет себя идентично &lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt; &lt;code&gt;assert.throws()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="104fb1cb9588bb03abf68534a3546fd1945904e8" translate="yes" xml:space="preserve">
          <source>Binding the inspector to a public IP (including &lt;code&gt;0.0.0.0&lt;/code&gt;) with an open port is insecure, as it allows external hosts to connect to the inspector and perform a &lt;a href=&quot;https://www.owasp.org/index.php/Code_Injection&quot;&gt;remote code execution&lt;/a&gt; attack.</source>
          <target state="translated">Привязка инспектора к общедоступному IP- &lt;code&gt;0.0.0.0&lt;/code&gt; (включая 0.0.0.0 ) с открытым портом небезопасна, поскольку позволяет внешним хостам подключаться к инспектору и выполнять атаку &lt;a href=&quot;https://www.owasp.org/index.php/Code_Injection&quot;&gt;удаленного выполнения кода&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a81151afeaca845d1c118c9e281d98d7d9aa8cc" translate="yes" xml:space="preserve">
          <source>Binds the given function to execute to this &lt;code&gt;AsyncResource&lt;/code&gt;'s scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd1d1ed2272fbc2405065c2720c1f4ba4bcd1e3" translate="yes" xml:space="preserve">
          <source>Binds the given function to the current execution context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c050254283d9f51e63070acdc4fe2abff851c1" translate="yes" xml:space="preserve">
          <source>Bit mask used to extract the file type code.</source>
          <target state="translated">Битовая маска,используемая для извлечения кода типа файла.</target>
        </trans-unit>
        <trans-unit id="38ca86f6b20a1c3f7445af772467122bf0798bbd" translate="yes" xml:space="preserve">
          <source>Blocking calls like these are mostly useful for simplifying general-purpose scripting tasks and for simplifying the loading/processing of application configuration at startup.</source>
          <target state="translated">Подобные блокировки вызовов наиболее полезны для упрощения задач скриптинга общего назначения,а также для упрощения загрузки/обработки конфигурации приложения при старте.</target>
        </trans-unit>
        <trans-unit id="e49e46f83817ae076662a9e1ac7de55763706d82" translate="yes" xml:space="preserve">
          <source>Blocks until a client (existing or connected later) has sent &lt;code&gt;Runtime.runIfWaitingForDebugger&lt;/code&gt; command.</source>
          <target state="translated">Блокируется до тех пор, пока клиент (существующий или подключенный позже) не отправит команду &lt;code&gt;Runtime.runIfWaitingForDebugger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1dce5d4ec8a3cc9860ad75df035f434cb66662f" translate="yes" xml:space="preserve">
          <source>Boolean (read-only). True if headers were sent, false otherwise.</source>
          <target state="translated">Булева (только для чтения).Правда,если заголовки были отправлены,ложь в противном случае.</target>
        </trans-unit>
        <trans-unit id="76723148e1cbee2a4ed22f5975c62c431496c11c" translate="yes" xml:space="preserve">
          <source>Boolean flag enabling &amp;ldquo;Large Window Brotli&amp;rdquo; mode (not compatible with the Brotli format as standardized in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7932.txt&quot;&gt;RFC 7932&lt;/a&gt;).</source>
          <target state="translated">Логический флаг, включающий режим &amp;laquo;Brotli с большим окном&amp;raquo; (несовместим с форматом Brotli, стандартизированным в &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7932.txt&quot;&gt;RFC 7932&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f451a245fcf06000ff5387581d65d298c952f303" translate="yes" xml:space="preserve">
          <source>Boolean flag that affects internal memory allocation patterns.</source>
          <target state="translated">Булевый флаг,который влияет на шаблоны распределения внутренней памяти.</target>
        </trans-unit>
        <trans-unit id="3a42a4932b1e3f92c12fd5ce48d4cc1f4d19e1b3" translate="yes" xml:space="preserve">
          <source>Boolean flag that decreases compression ratio in favour of decompression speed.</source>
          <target state="translated">Булевый флаг,уменьшающий коэффициент сжатия в пользу скорости декомпрессии.</target>
        </trans-unit>
        <trans-unit id="92d4f753ad73b5c861d36157e9f3f2578a9cdcf2" translate="yes" xml:space="preserve">
          <source>Boolean value that indicates whether the response has completed. Starts as &lt;code&gt;false&lt;/code&gt;. After &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; executes, the value will be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Логическое значение, указывающее, завершился ли ответ. Начинается как &lt;code&gt;false&lt;/code&gt; . После выполнения &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt; значение будет &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf2822adc71f67075195db6338c46e0cce22a6a1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams use the &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; API in various ways to communicate the current state of the stream.</source>
          <target state="translated">И для &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; и для &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; потоки используют API &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; различными способами для передачи текущего состояния потока.</target>
        </trans-unit>
        <trans-unit id="92e8067b8a9edf1e60f4288801983d6541113def" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams will store data in an internal buffer that can be retrieved using &lt;code&gt;writable.writableBuffer&lt;/code&gt; or &lt;code&gt;readable.readableBuffer&lt;/code&gt;, respectively.</source>
          <target state="translated">И &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; ,&lt;/a&gt; и &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; потоки будут хранить данные во внутреннем буфере, который можно получить с помощью &lt;code&gt;writable.writableBuffer&lt;/code&gt; или &lt;code&gt;readable.readableBuffer&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="bbec51338c60c845af43267d174e455dc0392770" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;breakEvalOnSigint&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; options were set in the &lt;a href=&quot;repl&quot;&gt;&lt;code&gt;REPL&lt;/code&gt;&lt;/a&gt; config, which is not supported.</source>
          <target state="translated">Оба параметра &lt;code&gt;breakEvalOnSigint&lt;/code&gt; и &lt;code&gt;eval&lt;/code&gt; были установлены в конфигурации &lt;a href=&quot;repl&quot;&gt; &lt;code&gt;REPL&lt;/code&gt; &lt;/a&gt; , которая не поддерживается.</target>
        </trans-unit>
        <trans-unit id="467b46157dc7c87e9e6bbd48b726836714d3c38a" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;utilization1&lt;/code&gt; and &lt;code&gt;utilization2&lt;/code&gt; are optional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a948f8e347862760ffc1a502a3aebe8d17c52726" translate="yes" xml:space="preserve">
          <source>Both session identifiers and session tickets timeout, causing the server to create new sessions. The timeout can be configured with the &lt;code&gt;sessionTimeout&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt;&lt;code&gt;tls.createServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">И идентификаторы сеанса, и тайм-аут билетов сеанса, заставляющий сервер создавать новые сеансы. &lt;code&gt;sessionTimeout&lt;/code&gt; аут можно настроить с помощью параметра &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt; &lt;code&gt;tls.createServer()&lt;/code&gt; &lt;/a&gt; в tls.createServer () .</target>
        </trans-unit>
        <trans-unit id="a10e9245332d2b98b4eb83e0a5e55107c7a90735" translate="yes" xml:space="preserve">
          <source>Both the tools listed here require that &lt;em&gt;users&lt;/em&gt; of the native addon have a C/C++ toolchain installed in order to successfully install the native addon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9d6bf311ebf7df595c65a8f4924a3b8d06c104" translate="yes" xml:space="preserve">
          <source>Break</source>
          <target state="translated">Break</target>
        </trans-unit>
        <trans-unit id="b99eb128fc73ee445a8e902924f23b26a340df57" translate="yes" xml:space="preserve">
          <source>Breaking changes to the API are expected in a future major release.</source>
          <target state="translated">Ожидается,что изменения в API будут прерваны в будущем крупном релизе.</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="0770db595a77f58797f867ec2524689f875b8bc6" translate="yes" xml:space="preserve">
          <source>Broadcasts a datagram on the socket. For connectionless sockets, the destination &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; must be specified. Connected sockets, on the other hand, will use their associated remote endpoint, so the &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; arguments must not be set.</source>
          <target state="translated">Передает дейтаграмму в сокет. Для сокетов без установления соединения необходимо указать &lt;code&gt;port&lt;/code&gt; назначения и &lt;code&gt;address&lt;/code&gt; . С другой стороны, подключенные сокеты будут использовать связанную с ними удаленную конечную точку, поэтому аргументы &lt;code&gt;port&lt;/code&gt; и &lt;code&gt;address&lt;/code&gt; задавать не нужно.</target>
        </trans-unit>
        <trans-unit id="4e011f868d39eb819acc8009c284479fbc5351d2" translate="yes" xml:space="preserve">
          <source>Brotli constants</source>
          <target state="translated">постоянные Бротли</target>
        </trans-unit>
        <trans-unit id="e35a1d0137590ab6558bd54fa26cadd2e3428d43" translate="yes" xml:space="preserve">
          <source>BrotliOptions</source>
          <target state="translated">BrotliOptions</target>
        </trans-unit>
        <trans-unit id="0e4985a83b4840ac6d361b21c082a700081c8d07" translate="yes" xml:space="preserve">
          <source>Browser-compatible &lt;code&gt;URL&lt;/code&gt; class, implemented by following the WHATWG URL Standard. &lt;a href=&quot;https://url.spec.whatwg.org/#example-url-parsing&quot;&gt;Examples of parsed URLs&lt;/a&gt; may be found in the Standard itself. The &lt;code&gt;URL&lt;/code&gt; class is also available on the global object.</source>
          <target state="translated">Класс &lt;code&gt;URL&lt;/code&gt; - адресов, совместимых с браузером , реализованный в соответствии со стандартом WHATWG URL. &lt;a href=&quot;https://url.spec.whatwg.org/#example-url-parsing&quot;&gt;Примеры проанализированных URL-адресов&lt;/a&gt; можно найти в самом Стандарте. Класс &lt;code&gt;URL&lt;/code&gt; также доступен в глобальном объекте.</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="12e4f799634fb783b669c5f1d00234c89318acee" translate="yes" xml:space="preserve">
          <source>Buffer Constants</source>
          <target state="translated">Буферные константы</target>
        </trans-unit>
        <trans-unit id="82e181c0c578cd6d80093a33c015125682729194" translate="yes" xml:space="preserve">
          <source>Buffer constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dd82d623fb976c8b655f70d02fd824c2106844" translate="yes" xml:space="preserve">
          <source>Buffering</source>
          <target state="translated">Buffering</target>
        </trans-unit>
        <trans-unit id="80ec43af70811a5e711008f27e40e58380191823" translate="yes" xml:space="preserve">
          <source>Buffers and Character Encodings</source>
          <target state="translated">Буферы и кодировка символов</target>
        </trans-unit>
        <trans-unit id="8d8051eed2cbf5d235babea08ddbf266827a3a5d" translate="yes" xml:space="preserve">
          <source>Buffers and TypedArray</source>
          <target state="translated">Буферы и TypedArray</target>
        </trans-unit>
        <trans-unit id="5af599f7836089ac79e0a63070c6a49a67056538" translate="yes" xml:space="preserve">
          <source>Buffers and TypedArrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fad64d18909a0efd248e0d86afff8fd51a2cce" translate="yes" xml:space="preserve">
          <source>Buffers and character encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5720d067f317b23fcf4f1282e5377ded87d7b40" translate="yes" xml:space="preserve">
          <source>Buffers and iteration</source>
          <target state="translated">Буферы и итерация</target>
        </trans-unit>
        <trans-unit id="2764e7dc64a6afa8f6572a70be9cc2ef88d207b2" translate="yes" xml:space="preserve">
          <source>Build tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3e65ffe7f20f69532c70292e8fe02a0ac31970" translate="yes" xml:space="preserve">
          <source>Build with a pre-installed ICU (&lt;code&gt;system-icu&lt;/code&gt;)</source>
          <target state="translated">Сборка с предустановленным ICU ( &lt;code&gt;system-icu&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="9bcc2b6605f2f44e32f3bbfe699d332c866107ee" translate="yes" xml:space="preserve">
          <source>Built-in libraries are now available as predefined variables.</source>
          <target state="translated">Встроенные библиотеки теперь доступны в виде предопределенных переменных.</target>
        </trans-unit>
        <trans-unit id="50db02894a4e9938cec795aa1e98dc847d42a037" translate="yes" xml:space="preserve">
          <source>Builtin modules</source>
          <target state="translated">Сборка модулей</target>
        </trans-unit>
        <trans-unit id="fb4ef6d1d8f93b1f5e0dce50d53bb7dc4546a3d7" translate="yes" xml:space="preserve">
          <source>Builtin modules will provide named exports of their public API, as well as a default export which can be used for, among other things, modifying the named exports. Named exports of builtin modules are updated when the corresponding exports property is accessed, redefined, or deleted.</source>
          <target state="translated">Модули Builtin будут предоставлять именованные экспорты своих публичных API,а также экспорт по умолчанию,который может быть использован,среди прочего,для модификации именованных экспортов.Именованные экспорты встроенных модулей обновляются,когда соответствующее экспортируемое свойство доступно,переопределено или удалено.</target>
        </trans-unit>
        <trans-unit id="6cc4d8aacb34c43335f1e66ea99bef9e07fbcadb" translate="yes" xml:space="preserve">
          <source>By default (&lt;code&gt;allowHalfOpen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;) the socket will send a FIN packet back and destroy its file descriptor once it has written out its pending write queue. However, if &lt;code&gt;allowHalfOpen&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the socket will not automatically &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; its writable side, allowing the user to write arbitrary amounts of data. The user must call &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; explicitly to close the connection (i.e. sending a FIN packet back).</source>
          <target state="translated">По умолчанию ( &lt;code&gt;allowHalfOpen&lt;/code&gt; имеет значение &lt;code&gt;false&lt;/code&gt; ) сокет отправит обратно пакет FIN и уничтожит его файловый дескриптор, как только он выпишет свою ожидающую очередь записи. Однако, если для параметра &lt;code&gt;allowHalfOpen&lt;/code&gt; установлено значение &lt;code&gt;true&lt;/code&gt; , сокет не будет автоматически &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; свою доступную для записи сторону, позволяя пользователю записывать произвольные объемы данных. Пользователь должен явно вызвать &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; чтобы закрыть соединение (т.е. отправить обратно пакет FIN).</target>
        </trans-unit>
        <trans-unit id="11ee0c95f68c87a49aaea054c734f0756de04a7a" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;EventEmitter&lt;/code&gt;s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. Obviously, not all events should be limited to just 10 listeners. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt;) to indicate an unlimited number of listeners.</source>
          <target state="translated">По умолчанию &lt;code&gt;EventEmitter&lt;/code&gt; будет печатать предупреждение, если для определенного события добавлено более &lt;code&gt;10&lt;/code&gt; слушателей. Это полезное значение по умолчанию, которое помогает находить утечки памяти. Очевидно, что не все события следует ограничивать только 10 слушателями. Метод &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; позволяет изменять ограничение для этого конкретного экземпляра &lt;code&gt;EventEmitter&lt;/code&gt; . Значение может быть установлено на &lt;code&gt;Infinity&lt;/code&gt; (или &lt;code&gt;0&lt;/code&gt; ), чтобы указать неограниченное количество слушателей.</target>
        </trans-unit>
        <trans-unit id="b34a6ead15624e8cbe54d0ff3b87b9f3f9e521d4" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;EventEmitter&lt;/code&gt;s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt;) to indicate an unlimited number of listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202557f7f915841f681d6b58d74b773f875d4053" translate="yes" xml:space="preserve">
          <source>By default all unhandled rejections trigger a warning plus a deprecation warning for the very first unhandled rejection in case no &lt;a href=&quot;process#process_event_unhandledrejection&quot;&gt;&lt;code&gt;unhandledRejection&lt;/code&gt;&lt;/a&gt; hook is used.</source>
          <target state="translated">По умолчанию все необработанные отклонения вызывают предупреждение плюс предупреждение об устаревании для самого первого необработанного отклонения, если не используется &lt;a href=&quot;process#process_event_unhandledrejection&quot;&gt; &lt;code&gt;unhandledRejection&lt;/code&gt; &lt;/a&gt; unhandledRejection.</target>
        </trans-unit>
        <trans-unit id="2ca914c407c4d158688627fe49d3c90e1428e782" translate="yes" xml:space="preserve">
          <source>By default inspector websocket url is available in stderr and under &lt;code&gt;/json/list&lt;/code&gt; endpoint on &lt;code&gt;http://host:port/json/list&lt;/code&gt;.</source>
          <target state="translated">По умолчанию URL-адрес веб-сокета инспектора доступен в stderr и в конечной точке &lt;code&gt;/json/list&lt;/code&gt; на &lt;code&gt;http://host:port/json/list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f91080334739e3155e81d4196ebb3f760a35023" translate="yes" xml:space="preserve">
          <source>By default set to 256. For agents with &lt;code&gt;keepAlive&lt;/code&gt; enabled, this sets the maximum number of sockets that will be left open in the free state.</source>
          <target state="translated">По умолчанию установлено значение 256. Для агентов с включенным &lt;code&gt;keepAlive&lt;/code&gt; это устанавливает максимальное количество сокетов, которые будут оставаться открытыми в свободном состоянии.</target>
        </trans-unit>
        <trans-unit id="b65d1a50bed16c68390d90247b5f954900e6c6a4" translate="yes" xml:space="preserve">
          <source>By default set to &lt;code&gt;Infinity&lt;/code&gt;. Determines how many concurrent sockets the agent can have open per origin. Origin is the returned value of &lt;a href=&quot;#http_agent_getname_options&quot;&gt;&lt;code&gt;agent.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">По умолчанию установлено на &lt;code&gt;Infinity&lt;/code&gt; . Определяет, сколько одновременных сокетов агент может открыть для каждого источника. Origin - это возвращаемое значение &lt;a href=&quot;#http_agent_getname_options&quot;&gt; &lt;code&gt;agent.getName()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90f3e115759bbe74d2057679e11974ae269546a8" translate="yes" xml:space="preserve">
          <source>By default set to &lt;code&gt;Infinity&lt;/code&gt;. Determines how many concurrent sockets the agent can have open. Unlike &lt;code&gt;maxSockets&lt;/code&gt;, this parameter applies across all origins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28813e2e7dfe7803dcf71ad39048b5aacd0e60af" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;node.async_hooks&lt;/code&gt;, and &lt;code&gt;v8&lt;/code&gt; categories are enabled.</source>
          <target state="translated">По умолчанию &lt;code&gt;node.async_hooks&lt;/code&gt; категории &lt;code&gt;node&lt;/code&gt; , node.async_hooks и &lt;code&gt;v8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d63f54a664f33273ebb1fe71197458ae8fa1d6cb" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instances format output using the &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; method before writing the output to the provided &lt;code&gt;Writable&lt;/code&gt; stream (&lt;code&gt;process.stdout&lt;/code&gt; by default). The &lt;code&gt;showProxy&lt;/code&gt; inspection option is set to true by default and the &lt;code&gt;colors&lt;/code&gt; option is set to true depending on the REPL's &lt;code&gt;useColors&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию экземпляры &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; форматируют вывод с помощью &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt; перед записью вывода в предоставленный поток с возможностью &lt;code&gt;Writable&lt;/code&gt; ( по умолчанию &lt;code&gt;process.stdout&lt;/code&gt; ). Для &lt;code&gt;showProxy&lt;/code&gt; проверки showProxy по умолчанию установлено значение true, а для параметра &lt;code&gt;colors&lt;/code&gt; установлено значение true, в зависимости от параметра &lt;code&gt;useColors&lt;/code&gt; REPL .</target>
        </trans-unit>
        <trans-unit id="8bf222e54eb55d9b78ad98ea0087d0727c9eb2bb" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.end()&lt;/code&gt;&lt;/a&gt; is called on the destination &lt;code&gt;Writable&lt;/code&gt; stream when the source &lt;code&gt;Readable&lt;/code&gt; stream emits &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt;, so that the destination is no longer writable. To disable this default behavior, the &lt;code&gt;end&lt;/code&gt; option can be passed as &lt;code&gt;false&lt;/code&gt;, causing the destination stream to remain open:</source>
          <target state="translated">По умолчанию &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.end()&lt;/code&gt; &lt;/a&gt; вызывается в целевом потоке с возможностью &lt;code&gt;Writable&lt;/code&gt; когда исходный поток с возможностью &lt;code&gt;Readable&lt;/code&gt; выдает &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; , так что место назначения больше не доступно для записи. Чтобы отключить это поведение по умолчанию, параметр &lt;code&gt;end&lt;/code&gt; может быть передан как &lt;code&gt;false&lt;/code&gt; , в результате чего целевой поток останется открытым:</target>
        </trans-unit>
        <trans-unit id="0cfb62c9e90d2b1c492b84ce0e3e9f6be5a1b1f1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;child_process.fork()&lt;/code&gt; will spawn new Node.js instances using the &lt;a href=&quot;process#process_process_execpath&quot;&gt;&lt;code&gt;process.execPath&lt;/code&gt;&lt;/a&gt; of the parent process. The &lt;code&gt;execPath&lt;/code&gt; property in the &lt;code&gt;options&lt;/code&gt; object allows for an alternative execution path to be used.</source>
          <target state="translated">По умолчанию &lt;code&gt;child_process.fork()&lt;/code&gt; порождает новые экземпляры Node.js, используя &lt;a href=&quot;process#process_process_execpath&quot;&gt; &lt;code&gt;process.execPath&lt;/code&gt; &lt;/a&gt; родительского процесса. Свойство &lt;code&gt;execPath&lt;/code&gt; в объекте &lt;code&gt;options&lt;/code&gt; позволяет использовать альтернативный путь выполнения.</target>
        </trans-unit>
        <trans-unit id="b37951cc194679e9b33730db8a32abc81d440f81" translate="yes" xml:space="preserve">
          <source>By default, Node.js will print process warnings to &lt;code&gt;stderr&lt;/code&gt;. The &lt;code&gt;--no-warnings&lt;/code&gt; command-line option can be used to suppress the default console output but the &lt;code&gt;'warning'&lt;/code&gt; event will still be emitted by the &lt;code&gt;process&lt;/code&gt; object.</source>
          <target state="translated">По умолчанию Node.js выводит предупреждения о процессе в &lt;code&gt;stderr&lt;/code&gt; . Параметр командной строки &lt;code&gt;--no-warnings&lt;/code&gt; можно использовать для подавления вывода консоли по умолчанию, но событие &lt;code&gt;'warning'&lt;/code&gt; все равно будет генерироваться объектом &lt;code&gt;process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75d7b2c5a51e3e9d87ab179d3e63be3365baf30e" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8427586d102b75ae9ef1d8e24762397831f29e" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">По умолчанию для одного события можно зарегистрировать не более &lt;code&gt;10&lt;/code&gt; слушателей. Этот предел может быть изменен для отдельных &lt;code&gt;EventEmitter&lt;/code&gt; экземпляров с помощью &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt; метод. Чтобы изменить значение по умолчанию для &lt;em&gt;всех &lt;/em&gt; &lt;code&gt;EventEmitter&lt;/code&gt; случаев &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; свойство может быть использовано. Если это значение не является положительным числом, будет &lt;code&gt;TypeError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfe72ff29c196538639169d072a2c000f836560d" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;FSWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f87a2e565b134494421fe1803569e3bfac561b" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;Immediate&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;immediate.ref()&lt;/code&gt; unless &lt;code&gt;immediate.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">По умолчанию все объекты &lt;code&gt;Immediate&lt;/code&gt; имеют &quot;ref'ed&quot;, поэтому обычно нет необходимости вызывать &lt;code&gt;immediate.ref()&lt;/code&gt; если не был вызван &lt;code&gt;immediate.unref()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57926dcf274bb35a5839fbac277de9df81a17bff" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;StatWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5d92384948c12af2e5fca7d9dad8301e55f2c2" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;Timeout&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;timeout.ref()&lt;/code&gt; unless &lt;code&gt;timeout.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">По умолчанию все объекты &lt;code&gt;Timeout&lt;/code&gt; имеют &quot;ref'ed&quot;, поэтому обычно нет необходимости вызывать &lt;code&gt;timeout.ref()&lt;/code&gt; если &lt;code&gt;timeout.unref()&lt;/code&gt; не был вызван ранее.</target>
        </trans-unit>
        <trans-unit id="c36ec7767812bd7d3ccfe70d5c9b2f50bd4cfeb2" translate="yes" xml:space="preserve">
          <source>By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d76964354342530522f73f2faa55b344082b7c" translate="yes" xml:space="preserve">
          <source>By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js' built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance is created.</source>
          <target state="translated">По умолчанию все экземпляры &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; используют функцию оценки, которая оценивает выражения JavaScript и предоставляет доступ к встроенным модулям Node.js. Это поведение по умолчанию можно изменить, передав альтернативную функцию оценки при &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; экземпляра repl.REPLServer .</target>
        </trans-unit>
        <trans-unit id="aae30d5c73d9d79e8a2188bc5f4b152b12c62f43" translate="yes" xml:space="preserve">
          <source>By default, all subpaths from a package can be imported (&lt;code&gt;import 'pkg/x.js'&lt;/code&gt;). Custom subpath aliasing and encapsulation can be provided through the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; field.</source>
          <target state="translated">По умолчанию все подпути из пакета могут быть импортированы ( &lt;code&gt;import 'pkg/x.js'&lt;/code&gt; ). Пользовательские псевдонимы и инкапсуляция подпути могут быть предоставлены через поле &lt;code&gt;&quot;exports&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04197712c1c9818e08ac42b34fb5a047bccfe77f" translate="yes" xml:space="preserve">
          <source>By default, binding a socket will cause it to block the Node.js process from exiting as long as the socket is open. The &lt;code&gt;socket.unref()&lt;/code&gt; method can be used to exclude the socket from the reference counting that keeps the Node.js process active, allowing the process to exit even if the socket is still listening.</source>
          <target state="translated">По умолчанию привязка сокета приведет к тому, что он заблокирует завершение процесса Node.js, пока сокет открыт. Метод &lt;code&gt;socket.unref()&lt;/code&gt; может использоваться для исключения сокета из подсчета ссылок, который поддерживает процесс Node.js активным, позволяя процессу выйти, даже если сокет все еще прослушивает.</target>
        </trans-unit>
        <trans-unit id="efcba8983b787530ecb21473310e7ebe0a8f27e7" translate="yes" xml:space="preserve">
          <source>By default, binding a socket will cause it to block the Node.js process from exiting as long as the socket is open. The &lt;code&gt;socket.unref()&lt;/code&gt; method can be used to exclude the socket from the reference counting that keeps the Node.js process active. The &lt;code&gt;socket.ref()&lt;/code&gt; method adds the socket back to the reference counting and restores the default behavior.</source>
          <target state="translated">По умолчанию привязка сокета приведет к тому, что он заблокирует завершение процесса Node.js, пока сокет открыт. Метод &lt;code&gt;socket.unref()&lt;/code&gt; может использоваться для исключения сокета из подсчета ссылок, который поддерживает активным процесс Node.js. Метод &lt;code&gt;socket.ref()&lt;/code&gt; добавляет сокет обратно в счетчик ссылок и восстанавливает поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c5ce7b938deba67e4d499ae5b1d2870e58e4d6c1" translate="yes" xml:space="preserve">
          <source>By default, characters requiring percent-encoding within the query string will be encoded as UTF-8. If an alternative encoding is required, then an alternative &lt;code&gt;encodeURIComponent&lt;/code&gt; option will need to be specified:</source>
          <target state="translated">По умолчанию символы, требующие процентного кодирования в строке запроса, будут закодированы как UTF-8. Если требуется альтернативная кодировка, необходимо указать альтернативную опцию &lt;code&gt;encodeURIComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="586223b1036b0561eb25201451bf0ae34312f587" translate="yes" xml:space="preserve">
          <source>By default, event listeners are invoked in the order they are added. The &lt;code&gt;emitter.prependListener()&lt;/code&gt; method can be used as an alternative to add the event listener to the beginning of the listeners array.</source>
          <target state="translated">По умолчанию прослушиватели событий вызываются в порядке добавления. Метод &lt;code&gt;emitter.prependListener()&lt;/code&gt; может использоваться как альтернатива для добавления прослушивателя событий в начало массива слушателей.</target>
        </trans-unit>
        <trans-unit id="c1e38041b50c72489bd19f967717d2410cc8d13c" translate="yes" xml:space="preserve">
          <source>By default, event listeners are invoked in the order they are added. The &lt;code&gt;emitter.prependOnceListener()&lt;/code&gt; method can be used as an alternative to add the event listener to the beginning of the listeners array.</source>
          <target state="translated">По умолчанию прослушиватели событий вызываются в порядке добавления. Метод &lt;code&gt;emitter.prependOnceListener()&lt;/code&gt; можно использовать в качестве альтернативы для добавления прослушивателя событий в начало массива слушателей.</target>
        </trans-unit>
        <trans-unit id="56b6961294edb6e4c7b9e26709dab66bab2bf262" translate="yes" xml:space="preserve">
          <source>By default, no encoding is assigned and stream data will be returned as &lt;code&gt;Buffer&lt;/code&gt; objects. Setting an encoding causes the stream data to be returned as strings of the specified encoding rather than as &lt;code&gt;Buffer&lt;/code&gt; objects. For instance, calling &lt;code&gt;readable.setEncoding('utf8')&lt;/code&gt; will cause the output data to be interpreted as UTF-8 data, and passed as strings. Calling &lt;code&gt;readable.setEncoding('hex')&lt;/code&gt; will cause the data to be encoded in hexadecimal string format.</source>
          <target state="translated">По умолчанию кодировка не назначается, и данные потока будут возвращены как объекты &lt;code&gt;Buffer&lt;/code&gt; . Установка кодировки приводит к тому, что данные потока возвращаются как строки указанной кодировки, а не как объекты &lt;code&gt;Buffer&lt;/code&gt; . Например, вызов &lt;code&gt;readable.setEncoding('utf8')&lt;/code&gt; приведет к тому, что выходные данные будут интерпретироваться как данные UTF-8 и переданы как строки. Вызов &lt;code&gt;readable.setEncoding('hex')&lt;/code&gt; приведет к кодированию данных в шестнадцатеричном строковом формате.</target>
        </trans-unit>
        <trans-unit id="ff40ed54cc4f4ccd28ee10c0119b4a839b9b0115" translate="yes" xml:space="preserve">
          <source>By default, percent-encoded characters within the query string will be assumed to use UTF-8 encoding. If an alternative character encoding is used, then an alternative &lt;code&gt;decodeURIComponent&lt;/code&gt; option will need to be specified:</source>
          <target state="translated">По умолчанию предполагается, что символы с процентной кодировкой в ​​строке запроса используют кодировку UTF-8. Если используется альтернативная кодировка символов, необходимо &lt;code&gt;decodeURIComponent&lt;/code&gt; альтернативную опцию decodeURIComponent :</target>
        </trans-unit>
        <trans-unit id="60948785cd003c40a0a9c199059ae2a5361c36dc" translate="yes" xml:space="preserve">
          <source>By default, pipes for &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned child. These pipes have limited (and platform-specific) capacity. If the child process writes to stdout in excess of that limit without the output being captured, the child process will block waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</source>
          <target state="translated">По умолчанию каналы для &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; и &lt;code&gt;stderr&lt;/code&gt; устанавливаются между родительским процессом Node.js и порожденным дочерним процессом. Эти трубы имеют ограниченную (и зависящую от платформы) пропускную способность. Если дочерний процесс записывает в stdout сверх этого предела без захвата вывода, дочерний процесс будет блокировать ожидание, пока буфер канала примет больше данных. Это идентично поведению труб в оболочке. Используйте опцию &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; если вывод не будет использоваться.</target>
        </trans-unit>
        <trans-unit id="31a9e1cb7eb320cc9a8451870dd64aea183c6d34" translate="yes" xml:space="preserve">
          <source>By default, pipes for &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned subprocess. These pipes have limited (and platform-specific) capacity. If the subprocess writes to stdout in excess of that limit without the output being captured, the subprocess blocks waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400d0ff5bd73c75192c512fbb90cd09f96e28a06" translate="yes" xml:space="preserve">
          <source>By default, promise executions are not assigned &lt;code&gt;asyncId&lt;/code&gt;s due to the relatively expensive nature of the &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;promise introspection API&lt;/a&gt; provided by V8. This means that programs using promises or &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; will not get correct execution and trigger ids for promise callback contexts by default.</source>
          <target state="translated">По умолчанию исполнения обещаний не присваиваются &lt;code&gt;asyncId&lt;/code&gt; из-за относительно дорогостоящего характера &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;API интроспекции обещаний,&lt;/a&gt; предоставляемого V8. Это означает, что программы, использующие обещания или &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; , по умолчанию не получат правильного выполнения и будут запускать идентификаторы для контекстов обратного вызова обещаний.</target>
        </trans-unit>
        <trans-unit id="181c6af1d7f4577c1f0e360a950d5338345d6d32" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;querystring.unescape()&lt;/code&gt; method will attempt to use the JavaScript built-in &lt;code&gt;decodeURIComponent()&lt;/code&gt; method to decode. If that fails, a safer equivalent that does not throw on malformed URLs will be used.</source>
          <target state="translated">По умолчанию метод &lt;code&gt;querystring.unescape()&lt;/code&gt; будет пытаться использовать для декодирования встроенный в &lt;code&gt;decodeURIComponent()&lt;/code&gt; метод decodeURIComponent () . Если это не удастся, будет использован более безопасный эквивалент, который не вызывает искаженных URL-адресов.</target>
        </trans-unit>
        <trans-unit id="1666cd8e190f6bfded703574656e38b236afc740" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;zlib&lt;/code&gt; methods will throw an error when decompressing truncated data. However, if it is known that the data is incomplete, or the desire is to inspect only the beginning of a compressed file, it is possible to suppress the default error handling by changing the flushing method that is used to decompress the last chunk of input data:</source>
          <target state="translated">По умолчанию методы &lt;code&gt;zlib&lt;/code&gt; выдают ошибку при распаковке усеченных данных. Однако, если известно, что данные неполные или желательно проверить только начало сжатого файла, можно подавить обработку ошибок по умолчанию, изменив метод сброса, который используется для распаковки последнего фрагмента ввода. данные:</target>
        </trans-unit>
        <trans-unit id="da9bb8d34bf7939f5a332d099389ca45ca0d4075" translate="yes" xml:space="preserve">
          <source>By default, the Node.js REPL will persist history between &lt;code&gt;node&lt;/code&gt; REPL sessions by saving inputs to a &lt;code&gt;.node_repl_history&lt;/code&gt; file located in the user's home directory. This can be disabled by setting the environment variable &lt;code&gt;NODE_REPL_HISTORY=''&lt;/code&gt;.</source>
          <target state="translated">По умолчанию Node.js REPL будет сохранять историю между сеансами &lt;code&gt;node&lt;/code&gt; REPL, сохраняя входные данные в файл &lt;code&gt;.node_repl_history&lt;/code&gt; , расположенный в домашнем каталоге пользователя. Это можно отключить, установив переменную среды &lt;code&gt;NODE_REPL_HISTORY=''&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e280f46107c6e1ae204fca9444f19eaac17e579" translate="yes" xml:space="preserve">
          <source>By default, the Server does not timeout sockets. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44601c24d6f4b82c2931ad704e76a372c8d477a1" translate="yes" xml:space="preserve">
          <source>By default, the Server's timeout value is 2 minutes, and sockets are destroyed automatically if they time out. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</source>
          <target state="translated">По умолчанию значение тайм-аута Сервера составляет 2 минуты, и сокеты автоматически уничтожаются, если они истекли. Однако, если обратный вызов назначен событию &lt;code&gt;'timeout'&lt;/code&gt; Сервера, тайм- ауты должны обрабатываться явно.</target>
        </trans-unit>
        <trans-unit id="9e32233c5b26929d2746af8624aac399f7bc395a" translate="yes" xml:space="preserve">
          <source>By default, the parent will wait for the detached child to exit. To prevent the parent from waiting for a given &lt;code&gt;subprocess&lt;/code&gt; to exit, use the &lt;code&gt;subprocess.unref()&lt;/code&gt; method. Doing so will cause the parent's event loop to not include the child in its reference count, allowing the parent to exit independently of the child, unless there is an established IPC channel between the child and the parent.</source>
          <target state="translated">По умолчанию родитель будет ждать выхода отсоединенного потомка. Чтобы родительский объект не ожидал завершения данного &lt;code&gt;subprocess&lt;/code&gt; , используйте метод &lt;code&gt;subprocess.unref()&lt;/code&gt; . Это приведет к тому, что родительский цикл событий не включит дочерний элемент в свой счетчик ссылок, что позволит родителю выйти независимо от дочернего элемента, если между дочерним и родительским элементом не будет установлен канал IPC.</target>
        </trans-unit>
        <trans-unit id="50e392a14118831caba4a7dec19f691bf0b23454" translate="yes" xml:space="preserve">
          <source>By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Readable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6f914836e899ec8e8fb2763f9587b4cce3f668" translate="yes" xml:space="preserve">
          <source>By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Writable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a29b8b2ca676c37fefa70d058c06106a270d08" translate="yes" xml:space="preserve">
          <source>By default, this function is the same as &lt;a href=&quot;net#net_net_createconnection_options_connectlistener&quot;&gt;&lt;code&gt;net.createConnection()&lt;/code&gt;&lt;/a&gt;. However, custom agents may override this method in case greater flexibility is desired.</source>
          <target state="translated">По умолчанию эта функция аналогична &lt;a href=&quot;net#net_net_createconnection_options_connectlistener&quot;&gt; &lt;code&gt;net.createConnection()&lt;/code&gt; &lt;/a&gt; . Однако пользовательские агенты могут переопределить этот метод, если требуется большая гибкость.</target>
        </trans-unit>
        <trans-unit id="8f8fd8723941036d695781128838085d766645f8" translate="yes" xml:space="preserve">
          <source>By default, when Node.js loads a module from a path that is symbolically linked to a different on-disk location, Node.js will dereference the link and use the actual on-disk &quot;real path&quot; of the module as both an identifier and as a root path to locate other dependency modules. In most cases, this default behavior is acceptable. However, when using symbolically linked peer dependencies, as illustrated in the example below, the default behavior causes an exception to be thrown if &lt;code&gt;moduleA&lt;/code&gt; attempts to require &lt;code&gt;moduleB&lt;/code&gt; as a peer dependency:</source>
          <target state="translated">По умолчанию, когда Node.js загружает модуль по пути, который символически связан с другим расположением на диске, Node.js разыменует ссылку и использует фактический &amp;laquo;реальный путь&amp;raquo; модуля на диске в качестве идентификатора. и как корневой путь для поиска других модулей зависимостей. В большинстве случаев это поведение по умолчанию приемлемо. Однако при использовании символьно связанных зависимостей одноранговых узлов, как показано в приведенном ниже примере, поведение по умолчанию вызывает исключение, если &lt;code&gt;moduleA&lt;/code&gt; пытается потребовать &lt;code&gt;moduleB&lt;/code&gt; как одноранговую зависимость:</target>
        </trans-unit>
        <trans-unit id="7fe520cb3ead24e33697421d46ca31e0abf7c414" translate="yes" xml:space="preserve">
          <source>By default, when a timer is scheduled using either &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;, the Node.js event loop will continue running as long as the timer is active. Each of the &lt;code&gt;Timeout&lt;/code&gt; objects returned by these functions export both &lt;code&gt;timeout.ref()&lt;/code&gt; and &lt;code&gt;timeout.unref()&lt;/code&gt; functions that can be used to control this default behavior.</source>
          <target state="translated">По умолчанию, когда таймер планируется с помощью &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt; , цикл обработки событий Node.js будет продолжать работать, пока таймер активен. Каждый из объектов &lt;code&gt;Timeout&lt;/code&gt; , возвращаемых этими функциями, экспортирует функции &lt;code&gt;timeout.ref()&lt;/code&gt; и &lt;code&gt;timeout.unref()&lt;/code&gt; которые можно использовать для управления этим поведением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3065fbd5646405d3e034627f36e052d9f472adf5" translate="yes" xml:space="preserve">
          <source>By default, when an immediate is scheduled, the Node.js event loop will continue running as long as the immediate is active. The &lt;code&gt;Immediate&lt;/code&gt; object returned by &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt; exports both &lt;code&gt;immediate.ref()&lt;/code&gt; and &lt;code&gt;immediate.unref()&lt;/code&gt; functions that can be used to control this default behavior.</source>
          <target state="translated">По умолчанию, когда немедленное запланировано, цикл событий Node.js будет продолжать работать, пока активен немедленный. &lt;code&gt;Immediate&lt;/code&gt; объект , возвращаемый &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt; экспортирует как &lt;code&gt;immediate.ref()&lt;/code&gt; и &lt;code&gt;immediate.unref()&lt;/code&gt; функции , которые могут быть использованы для управления поведением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="df525b9b496d3a9417e6e2e2031510338cec6c44" translate="yes" xml:space="preserve">
          <source>By doing this, Node.js achieves a few things:</source>
          <target state="translated">Делая это,Node.js достигает нескольких целей:</target>
        </trans-unit>
        <trans-unit id="6418ac2d8f06cd7d11f8f5419d7220d30b24e605" translate="yes" xml:space="preserve">
          <source>By marking a request whether it reused socket or not, we can do automatic error retry base on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0194902340c272bcb653453069bd90ea1b7290" translate="yes" xml:space="preserve">
          <source>By providing the &lt;code&gt;fs&lt;/code&gt; option it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writev&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt;. Overriding &lt;code&gt;write()&lt;/code&gt; without &lt;code&gt;writev()&lt;/code&gt; can reduce performance as some optimizations (&lt;code&gt;_writev()&lt;/code&gt;) will be disabled. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, and at least one of &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writev&lt;/code&gt; are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5158d499749c6872e4f43077f1bd6b1b066826" translate="yes" xml:space="preserve">
          <source>By providing the &lt;code&gt;fs&lt;/code&gt; option, it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;close&lt;/code&gt;. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;close&lt;/code&gt; are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d98a58837334c775ed31c6b9b2008e929d36ff9" translate="yes" xml:space="preserve">
          <source>By starting a REPL from a Unix socket-based server instead of stdin, it is possible to connect to a long-running Node.js process without restarting it.</source>
          <target state="translated">Запустив REPL с соокетного сервера Unix вместо stdin,можно подключиться к длительному процессу Node.js без его перезапуска.</target>
        </trans-unit>
        <trans-unit id="9a35d14f9d97613dca3959200e44548caf1a0658" translate="yes" xml:space="preserve">
          <source>By the time &lt;code&gt;main.js&lt;/code&gt; has loaded both modules, they're both finished. The output of this program would thus be:</source>
          <target state="translated">К тому времени, как &lt;code&gt;main.js&lt;/code&gt; загрузит оба модуля, они оба будут готовы . Таким образом, результат этой программы будет:</target>
        </trans-unit>
        <trans-unit id="5eb9b00d1377cab123223f4390f9cd60acd57dc7" translate="yes" xml:space="preserve">
          <source>By the very nature of how &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; works in JavaScript, there is almost never any way to safely &quot;pick up where it left off&quot;, without leaking references, or creating some other sort of undefined brittle state.</source>
          <target state="translated">По самой природе работы &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw&quot;&gt; &lt;code&gt;throw&lt;/code&gt; &lt;/a&gt; в JavaScript почти никогда не существует способа безопасно &amp;laquo;продолжить с того места, где он остановился&amp;raquo;, без утечки ссылок или создания какого-либо другого вида неопределенного хрупкого состояния.</target>
        </trans-unit>
        <trans-unit id="5525b6de8ddff52f4df5811bac7fe5456dec1113" translate="yes" xml:space="preserve">
          <source>By using the context of a domain, and the resilience of separating our program into multiple worker processes, we can react more appropriately, and handle errors with much greater safety.</source>
          <target state="translated">Используя контекст домена и устойчивость разделения нашей программы на несколько рабочих процессов,мы можем реагировать более адекватно и обрабатывать ошибки с гораздо большей безопасностью.</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="5519037c56c2d8df2d0e0bdc1591904d18fac337" translate="yes" xml:space="preserve">
          <source>C++ Addons</source>
          <target state="translated">C++дополнения</target>
        </trans-unit>
        <trans-unit id="8cbb6f65624193a286bcf163d47cd79ced6b7efd" translate="yes" xml:space="preserve">
          <source>C++ addons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5cbfdf509963f6db39f558bd1e8f80eee01336" translate="yes" xml:space="preserve">
          <source>C++ embedder API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e192c5e28df91fd85df36b2994082e21e363a26" translate="yes" xml:space="preserve">
          <source>C/C++ Addons</source>
          <target state="translated">C/C++дополнения</target>
        </trans-unit>
        <trans-unit id="d78bb26a6e6f8ac8e8e6f66793335ae354220795" translate="yes" xml:space="preserve">
          <source>C/C++ Addons - N-API</source>
          <target state="translated">C/C++дополнения-N-API</target>
        </trans-unit>
        <trans-unit id="5c185f3323b394a89ed5853791cd7152808ad05d" translate="yes" xml:space="preserve">
          <source>C/C++ addons with N-API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe67e8a053fa3580820f1db7af794d2048bdd882" translate="yes" xml:space="preserve">
          <source>CCM is one of the supported &lt;a href=&quot;https://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;AEAD algorithms&lt;/a&gt;. Applications which use this mode must adhere to certain restrictions when using the cipher API:</source>
          <target state="translated">CCM - один из поддерживаемых &lt;a href=&quot;https://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;алгоритмов AEAD&lt;/a&gt; . Приложения, которые используют этот режим, должны придерживаться определенных ограничений при использовании cipher API:</target>
        </trans-unit>
        <trans-unit id="8f16dd9b7ab2f0aa0df63aa37c3d38f01cb28a48" translate="yes" xml:space="preserve">
          <source>CCM mode</source>
          <target state="translated">режим CCM</target>
        </trans-unit>
        <trans-unit id="106a6ab814890693f968e34eca850c9ae55e9458" translate="yes" xml:space="preserve">
          <source>CMake.js</source>
          <target state="translated">CMake.js</target>
        </trans-unit>
        <trans-unit id="b96cf960a75d300ca5ec1dd380d22cb8aa64f0ad" translate="yes" xml:space="preserve">
          <source>CMake.js is a good choice for projects that already use CMake or for developers affected by limitations in node-gyp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d0e532c4be585300e6d6a20ca189552961b8ba" translate="yes" xml:space="preserve">
          <source>CPU Profiler</source>
          <target state="translated">процессорный профилировщик</target>
        </trans-unit>
        <trans-unit id="ed1bed94d31959de56b81d8c37631b93ab541397" translate="yes" xml:space="preserve">
          <source>CPU profiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509d4ff33e2f8df0e0aa8cc2808d8e1f12464a6b" translate="yes" xml:space="preserve">
          <source>Cached data cannot be created for modules which have already been evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="678e05070eba083ba5fa14b65273946fcb07e6f5" translate="yes" xml:space="preserve">
          <source>Calculates and returns the signature for &lt;code&gt;data&lt;/code&gt; using the given private key and algorithm. If &lt;code&gt;algorithm&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, then the algorithm is dependent upon the key type (especially Ed25519 and Ed448).</source>
          <target state="translated">Вычисляет и возвращает подпись для &lt;code&gt;data&lt;/code&gt; с использованием заданного закрытого ключа и алгоритма. Если &lt;code&gt;algorithm&lt;/code&gt; равен &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; , то алгоритм зависит от типа ключа (особенно Ed25519 и Ed448).</target>
        </trans-unit>
        <trans-unit id="95fd630d6511caa5d9699d2bac443dbcb5fa3f73" translate="yes" xml:space="preserve">
          <source>Calculates the HMAC digest of all of the data passed using &lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt;&lt;code&gt;hmac.update()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned;</source>
          <target state="translated">Вычисляет дайджест HMAC всех данных, переданных с помощью &lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt; &lt;code&gt;hmac.update()&lt;/code&gt; &lt;/a&gt; . Если &lt;code&gt;encoding&lt;/code&gt; возвращается строка; в противном случае возвращается &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="5a14de9b1932649b90d15be6146d2618d7a14172" translate="yes" xml:space="preserve">
          <source>Calculates the digest of all of the data passed to be hashed (using the &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt;&lt;code&gt;hash.update()&lt;/code&gt;&lt;/a&gt; method). If &lt;code&gt;encoding&lt;/code&gt; is provided a string will be returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Вычисляет дайджест всех данных, переданных для хеширования (с использованием &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt; &lt;code&gt;hash.update()&lt;/code&gt; &lt;/a&gt; ). Если &lt;code&gt;encoding&lt;/code&gt; будет возвращена строка; в противном случае возвращается &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9457a235861724a763c06f0e5d6db4023735abd" translate="yes" xml:space="preserve">
          <source>Calculates the signature on all the data passed through using either &lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt;&lt;code&gt;sign.update()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;sign.write()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вычисляет подпись для всех передаваемых данных с помощью функции &lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt; &lt;code&gt;sign.update()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;sign.write()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ceb0224f01d6ba9708d6616ddb7f724d30e14596" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#http2_http2stream_pushstream_headers_options_callback&quot;&gt;&lt;code&gt;http2stream.pushStream()&lt;/code&gt;&lt;/a&gt; with the given headers, and wrap the given &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt; on a newly created &lt;code&gt;Http2ServerResponse&lt;/code&gt; as the callback parameter if successful. When &lt;code&gt;Http2ServerRequest&lt;/code&gt; is closed, the callback is called with an error &lt;code&gt;ERR_HTTP2_INVALID_STREAM&lt;/code&gt;.</source>
          <target state="translated">Вызовите &lt;a href=&quot;#http2_http2stream_pushstream_headers_options_callback&quot;&gt; &lt;code&gt;http2stream.pushStream()&lt;/code&gt; &lt;/a&gt; с заданными заголовками и оберните данный &lt;a href=&quot;#http2_class_http2stream&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; &lt;/a&gt; на вновь созданном &lt;code&gt;Http2ServerResponse&lt;/code&gt; в качестве параметра обратного вызова в случае успеха. Когда &lt;code&gt;Http2ServerRequest&lt;/code&gt; закрыт, обратный вызов вызывается с ошибкой &lt;code&gt;ERR_HTTP2_INVALID_STREAM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a6320cde93d6145af956e406100afd55854873b" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;napi_get_version()&lt;/code&gt; to determine if the API is available.</source>
          <target state="translated">Вызовите &lt;code&gt;napi_get_version()&lt;/code&gt; чтобы определить, доступен ли API.</target>
        </trans-unit>
        <trans-unit id="94fd4ff755cb3c52aa6952f6c836cb40ee0731d8" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;node::AddEnvironmentCleanupHook()&lt;/code&gt;, passing it the above-created instance and a pointer to &lt;code&gt;DeleteInstance()&lt;/code&gt;. This will ensure the instance is deleted when the environment is torn down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4a1fc3fd98d71afaa54ca82c4213922df7f62c" translate="yes" xml:space="preserve">
          <source>Call Results</source>
          <target state="translated">Результаты звонков</target>
        </trans-unit>
        <trans-unit id="8054d82d9e8e1519fa719c6aeec455ce54f1c2d3" translate="yes" xml:space="preserve">
          <source>Call all &lt;code&gt;destroy&lt;/code&gt; hooks. This should only ever be called once. An error will be thrown if it is called more than once. This &lt;strong&gt;must&lt;/strong&gt; be manually called. If the resource is left to be collected by the GC then the &lt;code&gt;destroy&lt;/code&gt; hooks will never be called.</source>
          <target state="translated">Вызовите все крючки &lt;code&gt;destroy&lt;/code&gt; . Это следует вызывать только один раз. Если он вызывается более одного раза, будет выдана ошибка. Это &lt;strong&gt;необходимо&lt;/strong&gt; вызвать вручную. Если ресурс оставлен для сбора сборщиком мусора, то перехватчики &lt;code&gt;destroy&lt;/code&gt; не будут вызваны.</target>
        </trans-unit>
        <trans-unit id="b92f3809e9c65b9710749cc91f8c848297c7bf61" translate="yes" xml:space="preserve">
          <source>Call results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57087226be0373a2bba4cdeb9c854cbb6cbe9b4" translate="yes" xml:space="preserve">
          <source>Call the provided function with the provided arguments in the execution context of the async resource. This will establish the context, trigger the AsyncHooks before callbacks, call the function, trigger the AsyncHooks after callbacks, and then restore the original execution context.</source>
          <target state="translated">Вызов предоставленной функции с предоставленными аргументами в контексте выполнения ресурса async.Это установит контекст,сработает AsyncHooks перед вызовами,вызовет функцию,сработает AsyncHooks после вызова,а затем восстановит исходный контекст выполнения.</target>
        </trans-unit>
        <trans-unit id="e8d40d01d1721050b675b17b3c12103b068c0079" translate="yes" xml:space="preserve">
          <source>Callback example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee0872ef4ee5ce397c4c9b72978c9263346a48c" translate="yes" xml:space="preserve">
          <source>Callback functions must satisfy the following signature:</source>
          <target state="translated">Функции обратного вызова должны удовлетворять следующей подписи:</target>
        </trans-unit>
        <trans-unit id="5a9afb6f68faba23dc84836881b9eb5b8a1b083a" translate="yes" xml:space="preserve">
          <source>Callback should take two arguments &lt;code&gt;err&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">Обратный вызов должен принимать два аргумента: &lt;code&gt;err&lt;/code&gt; и &lt;code&gt;count&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fa4ffba520db1a7b5c34a1e5774758c79670c71" translate="yes" xml:space="preserve">
          <source>Callback will be invoked on streams which have already finished before the call to &lt;code&gt;finished(stream, cb)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="085c86076e0bb62f3d96e8ab9ed524f7896b4f57" translate="yes" xml:space="preserve">
          <source>Callbacks are run in last-in first-out order.</source>
          <target state="translated">Обратные вызовы выполняются в последнем порядке.</target>
        </trans-unit>
        <trans-unit id="97f0ddda0975556fed24b899d76bd09f3d4af829" translate="yes" xml:space="preserve">
          <source>Called after the resource corresponding to &lt;code&gt;asyncId&lt;/code&gt; is destroyed. It is also called asynchronously from the embedder API &lt;code&gt;emitDestroy()&lt;/code&gt;.</source>
          <target state="translated">Вызывается после уничтожения ресурса, соответствующего &lt;code&gt;asyncId&lt;/code&gt; . Он также вызывается асинхронно из API для внедрения &lt;code&gt;emitDestroy()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f73bc7c18321ec878ed5be8f3a395fdb861c3a42" translate="yes" xml:space="preserve">
          <source>Called immediately after the callback specified in &lt;code&gt;before&lt;/code&gt; is completed.</source>
          <target state="translated">Вызывается сразу после завершения обратного вызова, указанного в &lt;code&gt;before&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67c2b8bea298c5f79d398c93c499cd6cc2cc63bc" translate="yes" xml:space="preserve">
          <source>Called when &lt;code&gt;socket&lt;/code&gt; is attached to &lt;code&gt;request&lt;/code&gt; after being persisted because of the keep-alive options. Default behavior is to:</source>
          <target state="translated">Вызывается, когда &lt;code&gt;socket&lt;/code&gt; присоединяется к &lt;code&gt;request&lt;/code&gt; после сохранения из-за параметров проверки активности. По умолчанию:</target>
        </trans-unit>
        <trans-unit id="b43ca4223265ca6ece79115569f4b471b8e6e5b1" translate="yes" xml:space="preserve">
          <source>Called when &lt;code&gt;socket&lt;/code&gt; is detached from a request and could be persisted by the &lt;code&gt;Agent&lt;/code&gt;. Default behavior is to:</source>
          <target state="translated">Вызывается, когда &lt;code&gt;socket&lt;/code&gt; отключается от запроса и может быть сохранен &lt;code&gt;Agent&lt;/code&gt; . По умолчанию:</target>
        </trans-unit>
        <trans-unit id="b6e0fac62afd6b0e58d7b3a3ab50ee2fe316fbd3" translate="yes" xml:space="preserve">
          <source>Called when a class is constructed that has the &lt;em&gt;possibility&lt;/em&gt; to emit an asynchronous event. This &lt;em&gt;does not&lt;/em&gt; mean the instance must call &lt;code&gt;before&lt;/code&gt;/&lt;code&gt;after&lt;/code&gt; before &lt;code&gt;destroy&lt;/code&gt; is called, only that the possibility exists.</source>
          <target state="translated">Вызывается при создании класса, который имеет &lt;em&gt;возможность&lt;/em&gt; генерировать асинхронное событие. Это &lt;em&gt;не&lt;/em&gt; означает , что экземпляр должен позвонить , &lt;code&gt;before&lt;/code&gt; / &lt;code&gt;after&lt;/code&gt; того, как перед тем &lt;code&gt;destroy&lt;/code&gt; называется, только то , что существует возможность.</target>
        </trans-unit>
        <trans-unit id="3d63fa3265203b858c580696f09f2e560a220bbb" translate="yes" xml:space="preserve">
          <source>Called when the &lt;code&gt;resolve&lt;/code&gt; function passed to the &lt;code&gt;Promise&lt;/code&gt; constructor is invoked (either directly or through other means of resolving a promise).</source>
          <target state="translated">Вызывается, когда вызывается функция &lt;code&gt;resolve&lt;/code&gt; переданная конструктору &lt;code&gt;Promise&lt;/code&gt; (напрямую или с помощью других средств разрешения обещания).</target>
        </trans-unit>
        <trans-unit id="0006d6166a25633ad05674dbf8d3d512c6337747" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; can be significantly slower than the alternative &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; but ensures that the newly created &lt;code&gt;Buffer&lt;/code&gt; instance contents will &lt;em&gt;never contain sensitive data&lt;/em&gt;.</source>
          <target state="translated">Вызов &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; может быть значительно медленнее, чем альтернативный &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; но гарантирует, что вновь созданное содержимое экземпляра &lt;code&gt;Buffer&lt;/code&gt; &lt;em&gt;никогда не&lt;/em&gt; будет &lt;em&gt;содержать конфиденциальные данные&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0bbceabafc3e0854955c3b1892b91371ca84a3c4" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; can be measurably slower than the alternative &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; but ensures that the newly created &lt;code&gt;Buffer&lt;/code&gt; instance contents will never contain sensitive data from previous allocations, including data that might not have been allocated for &lt;code&gt;Buffer&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ca5213e7d7180fac30f6abbb6f91cb46f2b44a" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read([size])&lt;/code&gt;&lt;/a&gt; after the &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event has been emitted will return &lt;code&gt;null&lt;/code&gt;. No runtime error will be raised.</source>
          <target state="translated">Вызов &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read([size])&lt;/code&gt; &lt;/a&gt; после того &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; событие конца было выпущено, вернет &lt;code&gt;null&lt;/code&gt; . Ошибка времени выполнения возникнет.</target>
        </trans-unit>
        <trans-unit id="5a327da6454f2c24bf02624120f5cf6246f42a8a" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#zlib_zlib_flush_kind_callback&quot;&gt;&lt;code&gt;.flush()&lt;/code&gt;&lt;/a&gt; on a compression stream will make &lt;code&gt;zlib&lt;/code&gt; return as much output as currently possible. This may come at the cost of degraded compression quality, but can be useful when data needs to be available as soon as possible.</source>
          <target state="translated">Вызов &lt;a href=&quot;#zlib_zlib_flush_kind_callback&quot;&gt; &lt;code&gt;.flush()&lt;/code&gt; &lt;/a&gt; в потоке сжатия заставит &lt;code&gt;zlib&lt;/code&gt; вернуть максимально возможный объем вывода. Это может происходить за счет снижения качества сжатия, но может быть полезно, когда данные должны быть доступны как можно скорее.</target>
        </trans-unit>
        <trans-unit id="5141b4d2b9075af331be0843a1f8f08d2013a321" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Readable.from(string)&lt;/code&gt; or &lt;code&gt;Readable.from(buffer)&lt;/code&gt; will not have the strings or buffers be iterated to match the other streams semantics for performance reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e90c94816b0161805991665f9858088f6d8052" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;assert.fail()&lt;/code&gt; with more than one argument is deprecated and emits a warning.</source>
          <target state="translated">Вызов &lt;code&gt;assert.fail()&lt;/code&gt; с несколькими аргументами устарел и вызывает предупреждение.</target>
        </trans-unit>
        <trans-unit id="fab10f04d3c6a9f7d0706d38e8587f02801a351e" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;asyncLocalStorage.disable()&lt;/code&gt; is required before the &lt;code&gt;asyncLocalStorage&lt;/code&gt; can be garbage collected. This does not apply to stores provided by the &lt;code&gt;asyncLocalStorage&lt;/code&gt;, as those objects are garbage collected along with the corresponding async resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94280ccc0fd0253b42a97393c68cd22d5c301fd5" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;asyncLocalStorage.enterWith(store)&lt;/code&gt; will transition into the context for the remainder of the current synchronous execution and will persist through any following asynchronous calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20eb687e2b4b0f97d82ec63e8f711bda6bfced13" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;callback(err)&lt;/code&gt; will result in a &lt;code&gt;socket.destroy(err)&lt;/code&gt; call.</source>
          <target state="translated">Вызов &lt;code&gt;callback(err)&lt;/code&gt; приведет к &lt;code&gt;socket.destroy(err)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f20fc2ded04c4e55d0dd45d3b69ac3563bd9616" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;console.assert()&lt;/code&gt; with a falsy assertion will only cause the &lt;code&gt;message&lt;/code&gt; to be printed to the console without interrupting execution of subsequent code.</source>
          <target state="translated">Вызов &lt;code&gt;console.assert()&lt;/code&gt; с ложным утверждением только приведет к тому, что &lt;code&gt;message&lt;/code&gt; будет напечатано на консоли, не прерывая выполнение последующего кода.</target>
        </trans-unit>
        <trans-unit id="2eb35ea5b21c7f0f049a33e3bc5d6ddad7969a8f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;enter()&lt;/code&gt; changes only the active domain, and does not alter the domain itself. &lt;code&gt;enter()&lt;/code&gt; and &lt;code&gt;exit()&lt;/code&gt; can be called an arbitrary number of times on a single domain.</source>
          <target state="translated">Вызов &lt;code&gt;enter()&lt;/code&gt; изменяет только активный домен и не меняет сам домен. &lt;code&gt;enter()&lt;/code&gt; и &lt;code&gt;exit()&lt;/code&gt; можно вызывать произвольное количество раз в одном домене.</target>
        </trans-unit>
        <trans-unit id="f05af83268fb80cda3c54af7b3d16fdd9cc8698c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;exit()&lt;/code&gt; changes only the active domain, and does not alter the domain itself. &lt;code&gt;enter()&lt;/code&gt; and &lt;code&gt;exit()&lt;/code&gt; can be called an arbitrary number of times on a single domain.</source>
          <target state="translated">Вызов &lt;code&gt;exit()&lt;/code&gt; изменяет только активный домен и не меняет сам домен. &lt;code&gt;enter()&lt;/code&gt; и &lt;code&gt;exit()&lt;/code&gt; можно вызывать произвольное количество раз в одном домене.</target>
        </trans-unit>
        <trans-unit id="e6b53cb5489505dfb4b0981b2861e08d99ce49ff" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fs.close()&lt;/code&gt; on any file descriptor (&lt;code&gt;fd&lt;/code&gt;) that is currently in use through any other &lt;code&gt;fs&lt;/code&gt; operation may lead to undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2db601af89fbbe8f95838bb5a7e44f10c2e7e5" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fs.closeSync()&lt;/code&gt; on any file descriptor (&lt;code&gt;fd&lt;/code&gt;) that is currently in use through any other &lt;code&gt;fs&lt;/code&gt; operation may lead to undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8aa57b24478363b554d3943852be6a13be5ced" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fs.unwatchFile()&lt;/code&gt; with a filename that is not being watched is a no-op, not an error.</source>
          <target state="translated">Вызов &lt;code&gt;fs.unwatchFile()&lt;/code&gt; с именем файла, которое не отслеживается, - это не операция, а не ошибка.</target>
        </trans-unit>
        <trans-unit id="b0a4d0906433636ff7d216bf870a15233e09ddee" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;http2stream.pushStream()&lt;/code&gt; from within a pushed stream is not permitted and will throw an error.</source>
          <target state="translated">Вызов &lt;code&gt;http2stream.pushStream()&lt;/code&gt; из проталкиваемого потока недопустим и вызовет ошибку.</target>
        </trans-unit>
        <trans-unit id="d4f0d5f458a3b6c7a483e701e66f4412e43f2090" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;napi_wrap()&lt;/code&gt; a second time on an object will return an error. To associate another native instance with the object, use &lt;code&gt;napi_remove_wrap()&lt;/code&gt; first.</source>
          <target state="translated">Вызов &lt;code&gt;napi_wrap()&lt;/code&gt; второй раз для объекта вернет ошибку. Чтобы связать другой собственный экземпляр с объектом, &lt;code&gt;napi_remove_wrap()&lt;/code&gt; используйте napi_remove_wrap () .</target>
        </trans-unit>
        <trans-unit id="5ebda8add9c29049e05ed036aff1782a09cb87b1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;process.exit()&lt;/code&gt; will force the process to exit as quickly as possible even if there are still asynchronous operations pending that have not yet completed fully, including I/O operations to &lt;code&gt;process.stdout&lt;/code&gt; and &lt;code&gt;process.stderr&lt;/code&gt;.</source>
          <target state="translated">Вызов &lt;code&gt;process.exit()&lt;/code&gt; заставит процесс завершиться как можно быстрее, даже если все еще существуют незавершенные асинхронные операции, которые еще не завершены полностью, включая операции ввода-вывода для &lt;code&gt;process.stdout&lt;/code&gt; и &lt;code&gt;process.stderr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d190ead55e96738c98d8fed378efeb2cbb21ecc1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;process.umask()&lt;/code&gt; with no argument causes the process-wide umask to be written twice. This introduces a race condition between threads, and is a potential security vulnerability. There is no safe, cross-platform alternative API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5e3d3238ac01729339628783aa89ea9aa61529" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;process.umask()&lt;/code&gt; with no arguments is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7323b93b8e12f957933a587d47060d857018d255" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;readable.pause()&lt;/code&gt;, &lt;code&gt;readable.unpipe()&lt;/code&gt;, or receiving backpressure will cause the &lt;code&gt;readable.readableFlowing&lt;/code&gt; to be set as &lt;code&gt;false&lt;/code&gt;, temporarily halting the flowing of events but &lt;em&gt;not&lt;/em&gt; halting the generation of data. While in this state, attaching a listener for the &lt;code&gt;'data'&lt;/code&gt; event will not switch &lt;code&gt;readable.readableFlowing&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Вызов &lt;code&gt;readable.pause()&lt;/code&gt; , &lt;code&gt;readable.unpipe()&lt;/code&gt; или получение обратного давления приведет к тому, что &lt;code&gt;readable.readableFlowing&lt;/code&gt; будет установлен как &lt;code&gt;false&lt;/code&gt; , что временно остановит поток событий, но &lt;em&gt;не&lt;/em&gt; остановит генерацию данных. В этом состоянии присоединение слушателя к событию &lt;code&gt;'data'&lt;/code&gt; не переключит &lt;code&gt;readable.readableFlowing&lt;/code&gt; на &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a3f3a11ea8f6637aadcb714ac4728d792909580" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;realpath&lt;/code&gt; now works again for various edge cases on Windows.</source>
          <target state="translated">Вызов &lt;code&gt;realpath&lt;/code&gt; теперь снова работает для различных крайних случаев в Windows.</target>
        </trans-unit>
        <trans-unit id="a4e9f23e24b8d27f39bddad7d86d865e2f7733e8" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;realpathSync&lt;/code&gt; now works again for various edge cases on Windows.</source>
          <target state="translated">Вызов &lt;code&gt;realpathSync&lt;/code&gt; теперь снова работает для различных крайних случаев в Windows.</target>
        </trans-unit>
        <trans-unit id="5b678714991b62ac3cce51d8357294b5bf1dceb4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;rl.close()&lt;/code&gt; does not immediately stop other events (including &lt;code&gt;'line'&lt;/code&gt;) from being emitted by the &lt;code&gt;readline.Interface&lt;/code&gt; instance.</source>
          <target state="translated">Вызов &lt;code&gt;rl.close()&lt;/code&gt; не останавливает немедленно другие события (включая &lt;code&gt;'line'&lt;/code&gt; ) от &lt;code&gt;readline.Interface&lt;/code&gt; экземпляром readline.Interface .</target>
        </trans-unit>
        <trans-unit id="b6f61394faa3e62d84c5820e41b7b246c12212e0" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;rl.pause()&lt;/code&gt; does not immediately pause other events (including &lt;code&gt;'line'&lt;/code&gt;) from being emitted by the &lt;code&gt;readline.Interface&lt;/code&gt; instance.</source>
          <target state="translated">Вызов &lt;code&gt;rl.pause()&lt;/code&gt; не приостанавливает немедленную отправку других событий (включая &lt;code&gt;'line'&lt;/code&gt; ) экземпляром &lt;code&gt;readline.Interface&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8dea4b251b7c8b9c8fc41a049eef8c3b77a55bda" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;socket.ref()&lt;/code&gt; multiples times will have no additional effect.</source>
          <target state="translated">&lt;code&gt;socket.ref()&lt;/code&gt; вызов socket.ref () не даст никакого дополнительного эффекта.</target>
        </trans-unit>
        <trans-unit id="a06a1edf1cea527997b3f2119ac83309d1ae5287" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;socket.unref()&lt;/code&gt; multiple times will have no addition effect.</source>
          <target state="translated">&lt;code&gt;socket.unref()&lt;/code&gt; вызов socket.unref () не будет иметь никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="38a1a6ceda16214f70b7617e7a0377890f834eed" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;subprocess.ref()&lt;/code&gt; after making a call to &lt;code&gt;subprocess.unref()&lt;/code&gt; will restore the removed reference count for the child process, forcing the parent to wait for the child to exit before exiting itself.</source>
          <target state="translated">Вызов &lt;code&gt;subprocess.ref()&lt;/code&gt; после вызова &lt;code&gt;subprocess.unref()&lt;/code&gt; восстановит удаленный счетчик ссылок для дочернего процесса, вынуждая родителя дождаться завершения дочернего процесса перед выходом из себя.</target>
        </trans-unit>
        <trans-unit id="2833339af51f066ced2f958bc0e1083995e97d16" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;timeout.unref()&lt;/code&gt; creates an internal timer that will wake the Node.js event loop. Creating too many of these can adversely impact performance of the Node.js application.</source>
          <target state="translated">Вызов &lt;code&gt;timeout.unref()&lt;/code&gt; создает внутренний таймер, который разбудит цикл событий Node.js. Создание слишком большого количества из них может отрицательно сказаться на производительности приложения Node.js.</target>
        </trans-unit>
        <trans-unit id="f95e54c427a7b734f1c32352760edb016c2bd068" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a port will allow the thread to exit if this is the only active handle in the event system. If the port is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">Вызов &lt;code&gt;unref()&lt;/code&gt; для порта позволит потоку выйти, если это единственный активный дескриптор в системе событий. Если порт уже &lt;code&gt;unref()&lt;/code&gt; ed, &lt;code&gt;unref()&lt;/code&gt; вызов unref () не даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="02352fed74503165b45a489b4daee80456ad1743" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a server will allow the program to exit if this is the only active server in the event system. If the server is already &lt;code&gt;unref&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">Вызов &lt;code&gt;unref()&lt;/code&gt; на сервере позволит программе выйти, если это единственный активный сервер в системе событий. Если сервер уже не &lt;code&gt;unref&lt;/code&gt; вызов &lt;code&gt;unref()&lt;/code&gt; даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="4469cbd36594d3df846fdd2c07cb60bc99b17a15" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a socket will allow the program to exit if this is the only active socket in the event system. If the socket is already &lt;code&gt;unref&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">Вызов &lt;code&gt;unref()&lt;/code&gt; для сокета позволит программе выйти, если это единственный активный сокет в системе событий. Если сокет уже не &lt;code&gt;unref&lt;/code&gt; вызов &lt;code&gt;unref()&lt;/code&gt; даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="14de61ab041c4868c205fac22161fa4869982342" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a worker will allow the thread to exit if this is the only active handle in the event system. If the worker is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">Вызов &lt;code&gt;unref()&lt;/code&gt; для рабочего позволит потоку выйти, если это единственный активный дескриптор в системе событий. Если рабочий уже &lt;code&gt;unref()&lt;/code&gt; ed, &lt;code&gt;unref()&lt;/code&gt; вызов unref () не даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="afa91dc69bcf88ccf412777c1a3072768775cfdd" translate="yes" xml:space="preserve">
          <source>Calling a thread-safe function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab25ca3d5236395bcb978792bef3d17b01a9a47" translate="yes" xml:space="preserve">
          <source>Calling an asynchronous function without a callback throws a &lt;code&gt;TypeError&lt;/code&gt; in Node.js 10.0.0 onwards. See &lt;a href=&quot;https://github.com/nodejs/node/pull/12562&quot;&gt;https://github.com/nodejs/node/pull/12562&lt;/a&gt;.</source>
          <target state="translated">Вызов асинхронной функции без обратного вызова вызывает &lt;code&gt;TypeError&lt;/code&gt; TypeError в Node.js 10.0.0 и далее. См. &lt;a href=&quot;https://github.com/nodejs/node/pull/12562&quot;&gt;Https://github.com/nodejs/node/pull/12562&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e000b78e4a066abb436dcedf2fd0197163f31621" translate="yes" xml:space="preserve">
          <source>Calling the &lt;a href=&quot;#stream_readable_pipe_destination_options&quot;&gt;&lt;code&gt;stream.pipe()&lt;/code&gt;&lt;/a&gt; method to send the data to a &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вызов &lt;a href=&quot;#stream_readable_pipe_destination_options&quot;&gt; &lt;code&gt;stream.pipe()&lt;/code&gt; &lt;/a&gt; для отправки данных в &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6a5dd85e64a357d2f59a1b2211f6e5f33f7c20e" translate="yes" xml:space="preserve">
          <source>Calling the &lt;a href=&quot;#stream_readable_resume&quot;&gt;&lt;code&gt;stream.resume()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Вызов метода &lt;a href=&quot;#stream_readable_resume&quot;&gt; &lt;code&gt;stream.resume()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3c47f789d09be5edd65ad6fc03b86c1aeef7e16" translate="yes" xml:space="preserve">
          <source>Calling the &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write()&lt;/code&gt;&lt;/a&gt; method after calling &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.end()&lt;/code&gt;&lt;/a&gt; will raise an error.</source>
          <target state="translated">Вызов &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write()&lt;/code&gt; &lt;/a&gt; после вызова &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.end()&lt;/code&gt; &lt;/a&gt; вызовет ошибку.</target>
        </trans-unit>
        <trans-unit id="83c7f7a8bdbf4a9620ca24fdb52199d72c99f860" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;writable.end()&lt;/code&gt; method signals that no more data will be written to the &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;. The optional &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; arguments allow one final additional chunk of data to be written immediately before closing the stream. If provided, the optional &lt;code&gt;callback&lt;/code&gt; function is attached as a listener for the &lt;a href=&quot;#stream_event_finish&quot;&gt;&lt;code&gt;'finish'&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f85bd2e8a09f4bcd7f2dfe1cb1939e8aeea38bc" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;writable.end()&lt;/code&gt; method signals that no more data will be written to the &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;. The optional &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; arguments allow one final additional chunk of data to be written immediately before closing the stream. If provided, the optional &lt;code&gt;callback&lt;/code&gt; function is attached as a listener for the &lt;a href=&quot;#stream_event_finish&quot;&gt;&lt;code&gt;'finish'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Вызов &lt;code&gt;writable.end()&lt;/code&gt; метод сигналы , что нет больше данных не будут записаны на &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; . Необязательные аргументы &lt;code&gt;chunk&lt;/code&gt; и &lt;code&gt;encoding&lt;/code&gt; позволяют записать последний дополнительный фрагмент данных непосредственно перед закрытием потока. Если предоставляется, необязательная функция &lt;code&gt;callback&lt;/code&gt; присоединяется как прослушиватель для события &lt;a href=&quot;#stream_event_finish&quot;&gt; &lt;code&gt;'finish'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="486450554d452ea3ef58646033a7abfef517ec1c" translate="yes" xml:space="preserve">
          <source>Calling this constructor emits a deprecation warning now.</source>
          <target state="translated">При вызове этого конструктора теперь выдается предупреждение об опустошении.</target>
        </trans-unit>
        <trans-unit id="f248cdb963d84cfbf437baaa656287502ce623ff" translate="yes" xml:space="preserve">
          <source>Calling this constructor emits a deprecation warning when run from code outside the &lt;code&gt;node_modules&lt;/code&gt; directory.</source>
          <target state="translated">Вызов этого конструктора вызывает предупреждение об устаревании при запуске из кода вне каталога &lt;code&gt;node_modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70ddef5f629bd63f186e419574fe226c58ab4950" translate="yes" xml:space="preserve">
          <source>Calling this constructor no longer emits a deprecation warning.</source>
          <target state="translated">При вызове этого конструктора больше не выдается предупреждение об опустошении.</target>
        </trans-unit>
        <trans-unit id="a8116dccb9c8a3d9df8fbc521eec3b56fbd9a274" translate="yes" xml:space="preserve">
          <source>Calling this function without passing the &lt;code&gt;digest&lt;/code&gt; parameter is deprecated now and will emit a warning.</source>
          <target state="translated">Вызов этой функции без передачи параметра &lt;code&gt;digest&lt;/code&gt; устарел и приведет к выдаче предупреждения.</target>
        </trans-unit>
        <trans-unit id="548e58a933c8dfc41643f5b26e2332c4a57e23fb" translate="yes" xml:space="preserve">
          <source>Calling this only flushes data from the internal &lt;code&gt;zlib&lt;/code&gt; state, and does not perform flushing of any kind on the streams level. Rather, it behaves like a normal call to &lt;code&gt;.write()&lt;/code&gt;, i.e. it will be queued up behind other pending writes and will only produce output when data is being read from the stream.</source>
          <target state="translated">Вызов этого только очищает данные из внутреннего состояния &lt;code&gt;zlib&lt;/code&gt; и не выполняет сброс любого вида на уровне потоков. Скорее, он ведет себя как обычный вызов &lt;code&gt;.write()&lt;/code&gt; , то есть он будет помещен в очередь после других отложенных операций записи и будет производить вывод только тогда, когда данные считываются из потока.</target>
        </trans-unit>
        <trans-unit id="e20bdaa1bb2c895cecf9eb2cc38bf17eafebab5c" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;net#net_socket_ref&quot;&gt;&lt;code&gt;ref()&lt;/code&gt;&lt;/a&gt; on this &lt;code&gt;Http2Session&lt;/code&gt; instance's underlying &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вызовы &lt;a href=&quot;net#net_socket_ref&quot;&gt; &lt;code&gt;ref()&lt;/code&gt; &lt;/a&gt; на этом &lt;code&gt;Http2Session&lt;/code&gt; подстилающего экземпляр &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="152fa161791d1088060c2efd968b8eee1abf6c87" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;net#net_socket_unref&quot;&gt;&lt;code&gt;unref()&lt;/code&gt;&lt;/a&gt; on this &lt;code&gt;Http2Session&lt;/code&gt; instance's underlying &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вызовы &lt;a href=&quot;net#net_socket_unref&quot;&gt; &lt;code&gt;unref()&lt;/code&gt; &lt;/a&gt; на этом &lt;code&gt;Http2Session&lt;/code&gt; экземпляра базового &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a14ca6bd4c2f0838399d694595ecf5310324eb4" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;.disconnect()&lt;/code&gt; on each worker in &lt;code&gt;cluster.workers&lt;/code&gt;.</source>
          <target state="translated">Вызывает &lt;code&gt;.disconnect()&lt;/code&gt; для каждого &lt;code&gt;cluster.workers&lt;/code&gt; в cluster.workers .</target>
        </trans-unit>
        <trans-unit id="796b1e900e21675ef7498b7a251fcc986ab7ad4c" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;destroy()&lt;/code&gt; on the &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt; that received the &lt;a href=&quot;#http2_class_http2_http2serverrequest&quot;&gt;&lt;code&gt;Http2ServerRequest&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</source>
          <target state="translated">Вызывает &lt;code&gt;destroy()&lt;/code&gt; для &lt;a href=&quot;#http2_class_http2stream&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; &lt;/a&gt; , получившего &lt;a href=&quot;#http2_class_http2_http2serverrequest&quot;&gt; &lt;code&gt;Http2ServerRequest&lt;/code&gt; &lt;/a&gt; . Если &lt;code&gt;error&lt;/code&gt; , генерируется событие &lt;code&gt;'error'&lt;/code&gt; и &lt;code&gt;error&lt;/code&gt; передается в качестве аргумента всем слушателям события.</target>
        </trans-unit>
        <trans-unit id="508f724bce65948e92b765d2568208e631d6f536" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;destroy()&lt;/code&gt; on the socket that received the &lt;code&gt;IncomingMessage&lt;/code&gt;. If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</source>
          <target state="translated">Вызывает &lt;code&gt;destroy()&lt;/code&gt; для сокета, получившего &lt;code&gt;IncomingMessage&lt;/code&gt; . Если &lt;code&gt;error&lt;/code&gt; , генерируется событие &lt;code&gt;'error'&lt;/code&gt; и &lt;code&gt;error&lt;/code&gt; передается в качестве аргумента всем слушателям события.</target>
        </trans-unit>
        <trans-unit id="d9b10d623a7bd30e253e4f6daf7942b01152b96e" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;destroy()&lt;/code&gt; on the socket that received the &lt;code&gt;IncomingMessage&lt;/code&gt;. If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted on the socket and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9844a074979212b87bb51b9fdd608eeae7d70d55" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;message.connection.setTimeout(msecs, callback)&lt;/code&gt;.</source>
          <target state="translated">Вызывает &lt;code&gt;message.connection.setTimeout(msecs, callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c28bb749125d417f452a373b21d38a048ffd27" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;message.socket.setTimeout(msecs, callback)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dfd2135f4db726c47299bb55be26f7f4525a46" translate="yes" xml:space="preserve">
          <source>Cancel</source>
          <target state="translated">Cancel</target>
        </trans-unit>
        <trans-unit id="4ee591c4cf7f779e828b9fc5cc36321f176c8cf7" translate="yes" xml:space="preserve">
          <source>Cancel all outstanding DNS queries made by this resolver. The corresponding callbacks will be called with an error with code &lt;code&gt;ECANCELLED&lt;/code&gt;.</source>
          <target state="translated">Отмените все невыполненные DNS-запросы, сделанные этим преобразователем. Соответствующие обратные вызовы будут вызываться с ошибкой с кодом &lt;code&gt;ECANCELLED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2463832da8de25f89b0d8f4332b7e4c84c0a9c1" translate="yes" xml:space="preserve">
          <source>Cancelling Timers</source>
          <target state="translated">Отмена таймеров</target>
        </trans-unit>
        <trans-unit id="024a5c7b380a2a151a2d315141bde30c9d1af7c9" translate="yes" xml:space="preserve">
          <source>Cancelling timers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de46483cb35a84fb4908eb275a79a7f998204985" translate="yes" xml:space="preserve">
          <source>Cancels a &lt;code&gt;Timeout&lt;/code&gt; object created by &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Отменяет объект &lt;code&gt;Timeout&lt;/code&gt; , созданный &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78f7c92b5120d3533261efea5775bdb5aa171065" translate="yes" xml:space="preserve">
          <source>Cancels a &lt;code&gt;Timeout&lt;/code&gt; object created by &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Отменяет объект &lt;code&gt;Timeout&lt;/code&gt; , созданный &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ff2323e5e56e86f75579626820c490b760d9f85" translate="yes" xml:space="preserve">
          <source>Cancels an &lt;code&gt;Immediate&lt;/code&gt; object created by &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Отменяет объект &lt;code&gt;Immediate&lt;/code&gt; , созданный с помощью &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1f504b080a4a85ec363bced48a5ba42f894a4e7" translate="yes" xml:space="preserve">
          <source>Capture rejections of promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1d770c3ecdca9ecf80bacdda11923dcbcea1ca" translate="yes" xml:space="preserve">
          <source>Care must be taken when using &lt;code&gt;Transform&lt;/code&gt; streams in that data written to the stream can cause the &lt;code&gt;Writable&lt;/code&gt; side of the stream to become paused if the output on the &lt;code&gt;Readable&lt;/code&gt; side is not consumed.</source>
          <target state="translated">Необходимо соблюдать осторожность при использовании &lt;code&gt;Transform&lt;/code&gt; потоков в том , что данные , записанных в поток может вызвать &lt;code&gt;Writable&lt;/code&gt; стороны потока , чтобы стать паузой , если выход на &lt;code&gt;Readable&lt;/code&gt; стороны не расходуются.</target>
        </trans-unit>
        <trans-unit id="96a42da72cf01756093a37d8bd374857d5a0b61c" translate="yes" xml:space="preserve">
          <source>Careful planning is required to allow cyclic module dependencies to work correctly within an application.</source>
          <target state="translated">Для корректной работы циклических модульных зависимостей внутри приложения требуется тщательное планирование.</target>
        </trans-unit>
        <trans-unit id="78f8544ebbc1f8c06e2c0bc866cc14bb1d9b7692" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;.exitedAfterDisconnect&lt;/code&gt; to be set.</source>
          <target state="translated">Причины установки &lt;code&gt;.exitedAfterDisconnect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8bf593e3d4c135822610c6b1cedd2aabaf63730" translate="yes" xml:space="preserve">
          <source>Causes the salt length for &lt;code&gt;RSA_PKCS1_PSS_PADDING&lt;/code&gt; to be determined automatically when verifying a signature.</source>
          <target state="translated">Вызывает автоматическое определение длины соли для &lt;code&gt;RSA_PKCS1_PSS_PADDING&lt;/code&gt; при проверке подписи.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="5f3225c71f034b1eb05a74dd4d995132bb2a8513" translate="yes" xml:space="preserve">
          <source>Caveats: on Windows only the write permission can be changed, and the distinction among the permissions of group, owner or others is not implemented.</source>
          <target state="translated">Caveats:в Windows можно изменить только разрешение на запись,а различие между разрешениями группы,владельца и т.д.не реализовано.</target>
        </trans-unit>
        <trans-unit id="542a6be4be44519412c0a6a33063a112f507d046" translate="yes" xml:space="preserve">
          <source>Certain platforms (macOS, Linux) will use the value of &lt;code&gt;argv[0]&lt;/code&gt; for the process title while others (Windows, SunOS) will use &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">Некоторые платформы (macOS, Linux) будут использовать значение &lt;code&gt;argv[0]&lt;/code&gt; в качестве названия процесса, а другие (Windows, SunOS) будут использовать &lt;code&gt;command&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e6cefad56966b7f11fbbc717428ce6f816c9f77" translate="yes" xml:space="preserve">
          <source>Certain versions of &lt;code&gt;node::MakeCallback&lt;/code&gt; APIs available to native modules are deprecated. Please use the versions of the API that accept an &lt;code&gt;async_context&lt;/code&gt; parameter.</source>
          <target state="translated">Некоторые версии API-интерфейсов &lt;code&gt;node::MakeCallback&lt;/code&gt; доступные для собственных модулей, являются устаревшими. Используйте версии API, которые принимают параметр &lt;code&gt;async_context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10de46b3b341b6f837cf6d72972b9bf2b3f6e491" translate="yes" xml:space="preserve">
          <source>Certificate</source>
          <target state="translated">Certificate</target>
        </trans-unit>
        <trans-unit id="ba0b998ec4ee590a1525fb9ce924b5c6c3d689ee" translate="yes" xml:space="preserve">
          <source>Certificate Object</source>
          <target state="translated">Объект сертификации</target>
        </trans-unit>
        <trans-unit id="0e46ccea2e734333340472ce4905398e0d5aae79" translate="yes" xml:space="preserve">
          <source>Certificate object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b969b822cb62addc88af143d23d0f7ca1f38e76b" translate="yes" xml:space="preserve">
          <source>Certificate.exportChallenge(spkac)</source>
          <target state="translated">Certificate.exportChallenge(spkac)</target>
        </trans-unit>
        <trans-unit id="79c9f188b04a8c83116afff3489959f7520adee3" translate="yes" xml:space="preserve">
          <source>Certificate.exportPublicKey(spkac[, encoding])</source>
          <target state="translated">Сертификат.exportPublicKey(spkac[,кодировка])</target>
        </trans-unit>
        <trans-unit id="1dda9c4a42569f11fa531833a979e7b26c3cb3c1" translate="yes" xml:space="preserve">
          <source>Certificate.verifySpkac(spkac)</source>
          <target state="translated">Certificate.verifySpkac(spkac)</target>
        </trans-unit>
        <trans-unit id="f9f992008d089dc6749bdc02848d0d25794ae6cc" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;autoDestroy&lt;/code&gt; option default to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04764c0a352f5541e03bda016aef35d4b0a5fc25" translate="yes" xml:space="preserve">
          <source>Change maximum default size of HTTP headers from 8KB to 16KB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7347240ef01071152bcae9baf5c7851899ba69bb" translate="yes" xml:space="preserve">
          <source>Change the default &lt;code&gt;captureRejections&lt;/code&gt; option on all new &lt;code&gt;EventEmitter&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f98dd21e4e93a81eb0a556a457909ea7edded1" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by &lt;code&gt;path&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Измените временные метки файловой системы объекта, на который ссылается &lt;code&gt;path&lt;/code&gt; затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="f5ae887dbdc3043d85987ab885ebc8cadc9b1f81" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Измените временные метки файловой системы объекта, на который имеется ссылка по &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cae08d63ae772c6156e3a92a9ac517d0ce8564cb" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by the &lt;code&gt;FileHandle&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Измените временные метки файловой системы объекта, на который ссылается &lt;code&gt;FileHandle&lt;/code&gt; , затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="46496f35fc19324406d7348485838237b7709596" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by the supplied file descriptor. See &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.utimes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Измените временные метки файловой системы объекта, на который ссылается предоставленный дескриптор файла. См. &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt; &lt;code&gt;fs.utimes()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd760825006601f0d1db77dbe98faabe823c044e" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the symbolic link referenced by &lt;code&gt;path&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt;, or throws an exception when parameters are incorrect or the operation fails. This is the synchronous version of &lt;a href=&quot;#fs_fs_lutimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.lutimes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ff552ade7769c53f6d53d34c42849496b1419f" translate="yes" xml:space="preserve">
          <source>Change to asynchronous &lt;code&gt;socket.bind()&lt;/code&gt; behavior</source>
          <target state="translated">Изменение на асинхронное поведение &lt;code&gt;socket.bind()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a1c741f67d8e48d84d118fcd87e4354fd49b83d" translate="yes" xml:space="preserve">
          <source>Changed &quot;strict mode&quot; to &quot;strict assertion mode&quot; and &quot;legacy mode&quot; to &quot;legacy assertion mode&quot; to avoid confusion with the more usual meaning of &quot;strict mode&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349a5454cfd8fce11b754ed79b97cf46da235813" translate="yes" xml:space="preserve">
          <source>Changed 'flags' argument to 'mode' and imposed stricter type validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99165cb6ce1ec2addb736cdc095a100703df24e7" translate="yes" xml:space="preserve">
          <source>Changed error format to better support invalid public key error</source>
          <target state="translated">Изменен формат ошибки для лучшей поддержки недействительных ошибок открытого ключа</target>
        </trans-unit>
        <trans-unit id="1b9e66d0cd47c11f946bcf3f66b907d26166de1c" translate="yes" xml:space="preserve">
          <source>Changed error format to better support invalid public key error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbaeeddc5694fae75217f3656be4ccd5dbd5707" translate="yes" xml:space="preserve">
          <source>Changed from &lt;code&gt;--diagnostic-report-directory&lt;/code&gt; to &lt;code&gt;--report-directory&lt;/code&gt;</source>
          <target state="translated">Изменен с &lt;code&gt;--diagnostic-report-directory&lt;/code&gt; на &lt;code&gt;--report-directory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d928b9e11fd1ede5a9aee3ebf02c846b2674da63" translate="yes" xml:space="preserve">
          <source>Changed from &lt;code&gt;--diagnostic-report-directory&lt;/code&gt; to &lt;code&gt;--report-directory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3e674770217fdfd65427748478c31c04b73bfd" translate="yes" xml:space="preserve">
          <source>Changed signature of the &lt;code&gt;hook&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="cc7e98989841432b3d5053fdfb18c52a7c6d4880" translate="yes" xml:space="preserve">
          <source>Changes the access and modification times of a file in the same way as &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.utimes()&lt;/code&gt;&lt;/a&gt;, with the difference that if the path refers to a symbolic link, then the link is not dereferenced: instead, the timestamps of the symbolic link itself are changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b255768e8a5d1bf16e9b6dc0ce381a30d64a52" translate="yes" xml:space="preserve">
          <source>Changes the access and modification times of a file in the same way as &lt;a href=&quot;#fs_fspromises_utimes_path_atime_mtime&quot;&gt;&lt;code&gt;fsPromises.utimes()&lt;/code&gt;&lt;/a&gt;, with the difference that if the path refers to a symbolic link, then the link is not dereferenced: instead, the timestamps of the symbolic link itself are changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910411f3f6621c104d1594e3a510db26b10b2e3e" translate="yes" xml:space="preserve">
          <source>Changes the ownership of a file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Меняет владельца файла, затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="238102f2dbe75cd58d3152e5d40da5207a0dd1e7" translate="yes" xml:space="preserve">
          <source>Changes the ownership of the file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Изменяет владельца файла, затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="6fcb78fa81d0e40788cd6b2553daffb7f76a6bdf" translate="yes" xml:space="preserve">
          <source>Changes the ownership on a symbolic link then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Меняет владельца на символическую ссылку, затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="f1109f85ae69d0a1f63b598004239d9b62102c98" translate="yes" xml:space="preserve">
          <source>Changes the permissions of a file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon succces.</source>
          <target state="translated">Изменяет права доступа к файлу, а затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов при успешном завершении.</target>
        </trans-unit>
        <trans-unit id="65e2973aa15d11dbeae3f78f93ed89c70ba95575" translate="yes" xml:space="preserve">
          <source>Changes the permissions on a symbolic link then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success. This method is only implemented on macOS.</source>
          <target state="translated">Изменяет разрешения для символьной ссылки, затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха. Этот метод реализован только в macOS.</target>
        </trans-unit>
        <trans-unit id="3500b4fbd8a4cb2108b880eb1ad0fe03d4ca6987" translate="yes" xml:space="preserve">
          <source>Changes to the ticket keys are effective only for future server connections. Existing or currently pending server connections will use the previous keys.</source>
          <target state="translated">Изменения ключей билета действуют только для будущих соединений с сервером.Существующие или текущие соединения с сервером будут использовать предыдущие ключи.</target>
        </trans-unit>
        <trans-unit id="f3793c34f8c1fcfb9679d2e716615991d279b467" translate="yes" xml:space="preserve">
          <source>Changing the direction immediately searches for the next entry in the expected direction from the current position on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5594b0d22083d67868716b50b13a959c9ff6de" translate="yes" xml:space="preserve">
          <source>Check for equality between two JavaScript values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf528eddabeaaf5c884396ce600aae4ca5ee05" translate="yes" xml:space="preserve">
          <source>Check the type of a JavaScript value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d42fec64aa51ec3ce090c90f06d00fa184adfb" translate="yes" xml:space="preserve">
          <source>Child Node.js processes will have a &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;process.send()&lt;/code&gt;&lt;/a&gt; method of their own that allows the child to send messages back to the parent.</source>
          <target state="translated">Дочерние процессы Node.js будут иметь собственный метод &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;process.send()&lt;/code&gt; &lt;/a&gt; который позволяет дочерним процессам отправлять сообщения обратно родителю.</target>
        </trans-unit>
        <trans-unit id="26963308dd032b828d8addf78d8674866f0ac4ef" translate="yes" xml:space="preserve">
          <source>Child Process</source>
          <target state="translated">Детский процесс</target>
        </trans-unit>
        <trans-unit id="5091e72502f618e2b372fcb37e80054927942ac3" translate="yes" xml:space="preserve">
          <source>Child Processes</source>
          <target state="translated">Детские процессы</target>
        </trans-unit>
        <trans-unit id="5dd7bcb18ba5a5596ca39fc2b46bd4ee3eed258c" translate="yes" xml:space="preserve">
          <source>Child process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ba584ac6e1c17fc38d60a80fcb1aab76067a8b" translate="yes" xml:space="preserve">
          <source>Child processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f800dfc855a8d087469dd156d7740838a57bd431" translate="yes" xml:space="preserve">
          <source>Child processes support a serialization mechanism for IPC that is based on the &lt;a href=&quot;v8#v8_serialization_api&quot;&gt;serialization API of the &lt;code&gt;v8&lt;/code&gt; module&lt;/a&gt;, based on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;HTML structured clone algorithm&lt;/a&gt;. This is generally more powerful and supports more built-in JavaScript object types, such as &lt;code&gt;BigInt&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;ArrayBuffer&lt;/code&gt; and &lt;code&gt;TypedArray&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;RegExp&lt;/code&gt; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bd3c97ff8e567451615977d0e45a00fedacf24" translate="yes" xml:space="preserve">
          <source>ChildProcess</source>
          <target state="translated">ChildProcess</target>
        </trans-unit>
        <trans-unit id="61723dd6e790f56bdc8e9ea2ef53b6104004e939" translate="yes" xml:space="preserve">
          <source>Choose One API Style</source>
          <target state="translated">Выберите один стиль API</target>
        </trans-unit>
        <trans-unit id="b88bdca9cda81488b11540f0cade61a62a19e9fa" translate="yes" xml:space="preserve">
          <source>Choose one API style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc240f4f7aa523c3a97c7be9bf36139a483fb72" translate="yes" xml:space="preserve">
          <source>Chooses an HTTP parser library. Available values are:</source>
          <target state="translated">Выбирает библиотеку HTTP-парсеров.Доступны значения:</target>
        </trans-unit>
        <trans-unit id="f03b3d3edcb18f6d3a66daaf164ba1fa8637b7da" translate="yes" xml:space="preserve">
          <source>Chrome DevTools doesn't support debugging &lt;a href=&quot;worker_threads&quot;&gt;worker threads&lt;/a&gt; yet. &lt;a href=&quot;https://github.com/GoogleChromeLabs/ndb/&quot;&gt;ndb&lt;/a&gt; can be used to debug them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad1793e0814a287884fb61a145e768578af3982" translate="yes" xml:space="preserve">
          <source>Cipher</source>
          <target state="translated">Cipher</target>
        </trans-unit>
        <trans-unit id="1be878e682a29c4dd57e8d0f3cb03ae1d3ad43d9" translate="yes" xml:space="preserve">
          <source>Cipher names that start with &lt;code&gt;'tls_'&lt;/code&gt; are for TLSv1.3, all the others are for TLSv1.2 and below.</source>
          <target state="translated">Имена шифров, начинающиеся с &lt;code&gt;'tls_'&lt;/code&gt; предназначены для TLSv1.3, все остальные - для TLSv1.2 и ниже.</target>
        </trans-unit>
        <trans-unit id="62654c79e461119e8f24bd51dd8ebab7b66e8a41" translate="yes" xml:space="preserve">
          <source>Ciphers in OCB mode are now supported.</source>
          <target state="translated">Шифры в режиме OCB теперь поддерживаются.</target>
        </trans-unit>
        <trans-unit id="0ea99b533eb5ebf08717903cc4de2bbd57820c62" translate="yes" xml:space="preserve">
          <source>Circular references now include a marker to the reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b1a4e9fa748a5e728cafcf3e2894187d26c42e" translate="yes" xml:space="preserve">
          <source>Circular references point to their anchor by using a reference index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="e4bc2fab9760903c2ea26724c3ee3a290eccac10" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.alloc(size[, fill[, encoding]])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.alloc (размер [, заполнение [, кодировка]]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L326&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bd304f348bb695261ba6cd32faa4e542940dfe5" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.allocUnsafe(size)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L339&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.allocUnsafe (size) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L339&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86e43f6edbc5b8167cea5a836ddcaea95350c1d0" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.allocUnsafeSlow(size)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L349&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.allocUnsafeSlow (размер) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L349&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00b00d723cbd9373eb70e3428493296f8775d55d" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.byteLength(string[, encoding])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.byteLength (строка [, кодировка]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L556&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a4b100e5aeee6d2ef611bc39a6eaf423c586cc2" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.compare(buf1, buf2)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L478&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.compare (buf1, buf2) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L478&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c605df86339fa80c38fb11bfcb08f5bfe7302a88" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.concat(list[, totalLength])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.concat (список [, totalLength]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L500&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef8e43b8edb032504b82ee3dd2f60ea929fb6aff" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(array)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.from (массив) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12be169b38b981d89e1db463bcda8517c860d3c8" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.from (arrayBuffer [, byteOffset [, length]]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4de54c149a71d5b78b579751a9dc245f37848cc" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(buffer)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.from (buffer) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9494cd46f5ae3b535bc3943acba5b4db19453fa5" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(object[, offsetOrEncoding[, length]])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.from (object [, offsetOrEncoding [, length]]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0595098369046930958f6b9830440c03bf1370fd" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(string[, encoding])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.from (строка [, кодировка]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62c86e84072bc4c8feeed65e43f41328af790778" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.isBuffer(obj)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L474&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.isBuffer (obj) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L474&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4789044f0b05a25b98df355135b972c8c20e68fe" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.isEncoding(encoding)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L494&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Метод класса: Buffer.isEncoding (кодировка) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L494&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="336213b6b5e5ec95aa5e83647d4c38b8f2b0a3d7" translate="yes" xml:space="preserve">
          <source>Class Method: ECDH.convertKey(key, curve[, inputEncoding[, outputEncoding[, format]]])</source>
          <target state="translated">Классовый метод:ECDH.convertKey(key,curve[,inputEncoding[,outputEncoding[,format]]))</target>
        </trans-unit>
        <trans-unit id="b15f11a262a1df7da3c3768795bea76a9e35e5d6" translate="yes" xml:space="preserve">
          <source>Class Property: Buffer.poolSize&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L103&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Свойство класса: Buffer.poolSize &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L103&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b5d8ffd398b6a271dcf4e35e9c7c0a7b63bc79f" translate="yes" xml:space="preserve">
          <source>Class property: &lt;code&gt;Buffer.poolSize&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27501a5955ee17472ff57d63cea79162a8329776" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AssertionError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87212b23b1401aea44731c43dd87fcc56c01fb2d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AsyncHook&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09290e79a490339e8ffc7b59c31d7644a190928e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AsyncLocalStorage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6096c601317e64825c0710988967d5dc7841825d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AsyncResource&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293f6a8c7d94b1a255b19cff7e155f8d30685ba" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;BrotliOptions&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f828fd42665db8f6f2a9dd5050f327334772bbce" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Buffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f3b14c8f49ad2efe6de4d9834109175a935e7e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Certificate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df6b98aaf4cf1d51ebf78eb87894510f3ef3cb9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ChildProcess&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a9e5b624df1e9a13f51a0c843b96ca3d7f4451" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Cipher&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc27203bb7e040f46b594d99b94908da7c27e61c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ClientHttp2Session&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f07de9dddffe2d5cb06d46e3c4f07a77a79631" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ClientHttp2Stream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e516509baa6bce4ea4b3532205b4b8f110dec888" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Console&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e4f8271ddb6139edc4bc1ee53e4e0ec34d565" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Decipher&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98418180b8901301f3817ad89ee0677cff2acab" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;DiffieHellman&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ae295a9dec527ce8b322d09a92902a4d9d2a37" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;DiffieHellmanGroup&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b6752b069e495ff6e1c9ff23e52077acbeb537" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Domain&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f63da69bd63329259868acca2392ed4f496dd6" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ECDH&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd65832b9171e15f2f7591fcd8819aeca715c28" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Error&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cd5ed37a967c316999a87b71c00354a4f16ab0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31db6329b79fbaa1a55bfdc7dc535bcf8b140224" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EventEmitter&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fa930cde32a135dfb052005b9b8c9ceee18bae" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EventTarget&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d0ade417a6aad158118b0dc077e81c0495971c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;FileHandle&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8753e7d921543124c3b1d881243e6fd8b65db9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Hash&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c9819d29871dcd8e030d09624328d125c1e202" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Histogram&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddadc60603371e897e29f2c4ff6d3e0239507ba" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Hmac&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c7e4541eaaf5f94366e368bcd12c6bb0b0590d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2SecureServer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394b73a3c5ffeb6c78b92ba7030c287b58f626ec" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2Server&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169ad8eb0a83c8810b250c3aff40c76042a418f4" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2Session&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e124237bc25da608afe321f1818330deef798d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2Stream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad876c3d9b85c8f04e09542c0ffe9223cc252e7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Immediate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9289ec1ae4be07bf51d67fda5b97372b9546696" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Interface&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067fc60a88043b100bd9abd7e66333e05b0f2e59" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;KeyObject&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c061cbe7813597897703757964e7f550272c0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;MessageChannel&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f9a28178ccf618b92d8cf93b1161d5ad01c62b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;MessagePort&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abed10363fb294c297e130d888966f8cee6bfec8" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeEventTarget extends EventTarget&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e67f8295d7f905dfec697e65350295cf83de467" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Options&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d25f3e7e930c852cb28178512907a74085c4bd" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceEntry&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5201cd1f418bb602c826aa4061968b37ab4aeb5d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceNodeTiming extends PerformanceEntry&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2148126d641342d13ec4b14177524510183a8f8e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceObserverEntryList&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be364697bb7a99d7f1fb7f6d1719c993a4280526" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;REPLServer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bb5728be6f9914eeb2a288b27f7182b998cea6" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RangeError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993c430fc1095e2501d731ef15fe0f504e884e15" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ReferenceError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cd9cfbe08b19d60f39b8819b3441bfe575be0a" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ServerHttp2Session&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd33870a955bbb2abeacda6984a21cdaabb1cad3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ServerHttp2Stream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bc8e4345bc100ab81d5da8fe115c9600c653bb" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Sign&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4537ec24928e66d81d8e7b93a2ac86d13ee86800" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SlowBuffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faaa50b185a1f04a06ee0c39f85e30e829320ead" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;StringDecoder&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801bc2dafd82f3e1019a111b1422d5ac816bb4fa" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SyntaxError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daed51b13eda51c364ec171bca588b2882de1765" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SystemError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b090d270dde3a420368de8207da39e89fe06e74c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Timeout&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d3795fd2be1714ba689b9815da9abd174a4dbe" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;TypeError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9eda72439e4e1f0093c2479254b59b89668722" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;URL&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16e68f95f5c4f86d8d6aad5742ecb3434bb4ad8" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;URLSearchParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d07fecb03c4d8b846432e5b8f185d9a35c3b39e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Verify&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae94a89f90e9ec8c694bcdcb37a0a4d2ce813a02" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da48d8409ad872d80f21315957fcaaf5990834e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;assert.CallTracker&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e6f911818263c38883389b4e6f121517f944ec" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;dgram.Socket&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1304fa1e1982923f2a6555cb3f204900aa07df9d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;dns.Resolver&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0e4c0144dcc4ee68cfc12599cc32a34e5725b3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;dnsPromises.Resolver&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db25b4926e9ca3234a1adcfd7f1d27d43d520183" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.Dir&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a263f1f3c2c28caa4bfcafec3b22d1dd545cbee7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.Dirent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d400631423ec217e36a7338fdb2ab3313e2903a9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.FSWatcher&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9be66b6da0283d87f00c35d50b7c40e840a232c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.ReadStream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0877b27e0f8d90acbcdacc738211b0b918f10b5" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.StatWatcher&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e43479c5868708442559949ebf647672d1f609d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.Stats&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c627777e505fdee0f2cd519876b48090c4c027c5" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.WriteStream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43199a6a15f7e93878aa706cb9f1af67e9076c27" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.Agent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d0865a4816d4da588c1a580033ab25cb7c7a93" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.ClientRequest&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d645fddd2883b6506f912f1fd8b490a047ec65a0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.IncomingMessage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f1d676fbfe01cf74ebc4ac17e6cf1be889548b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.Server&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68586c3320b8f627f58b69292be72e2539e8d090" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.ServerResponse&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20467e5950e2c248b5072c448e7871bf8411c72a" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http2.Http2ServerRequest&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2842f44ea1464aac4711aedecd39f0da261019ca" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http2.Http2ServerResponse&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36810ce3c83edc9a734d4195c8ec551970cc22d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;https.Agent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48c06e2bb9e21b0e025fa27ccb7f0069926cc70" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;https.Server&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff60c03821be870b2ffa4e32bdfcc3bed1c9c9b7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;inspector.Session&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bb91eff141b2dc0d4caf6e00c2cf53bdc00c98" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;module.SourceMap&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff8763bb71dd01ee1a8657b94eec7f9708c9bb2" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;net.Server&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8127299b83e711d38b1297dc6a814038f25430e7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;net.Socket&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fac2ad3f855661500795b3d84e0e83be7fd37f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;perf_hooks.PerformanceObserver&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa046b8446417e649084aab58d362cbefe4e1ce2" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Duplex&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27580bc6d067c6f5ea229cf8197e72a21fdc6c8d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.PassThrough&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c08337c9ee22556da4d8fc00d149c9f9fb8b7d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Readable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5fd6ae02241467eef2d40de233758ddda73a82" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Transform&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9baf2aa7145db6b485140b54feff170629fadb" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Writable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2156ae839b992df6df04df3b580406b31aef6b3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.CryptoStream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8401dbf157c8cc1fa2df2471144c72b503350d6" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.SecurePair&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb1f3ade2693e34732f1def4a006ae3c9746341" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.Server&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7932b6139c70f60636091df0207b674c64380a72" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.TLSSocket&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f92abbc9ef8ddaf894ed623d77520922815503f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tty.ReadStream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40af4349e8ce9d8a7fbe802ea7420048edab33d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tty.WriteStream&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d63bc6ce12996f78e68fbd68d1e950ada6493e9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;util.TextDecoder&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25516dbca653ff9386bda8bae61c4ba4a18b7c0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;util.TextEncoder&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d9989066047df024f9901ad876ef89b7829045" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.DefaultDeserializer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cdbde4b5a92c8b76f02ad11c2801095a049b72" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.DefaultSerializer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4bf0067bc878656416599fcbcedcc383cfd15d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.Deserializer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997527e48ecb3c5ae1757feeab9844ceedc4329d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.Serializer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69db96ba8e7ecb3eeb4536145bd3d69de27130bc" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.Module&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8202eb48804c2007fd6210ba80c301ef5fff275" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.Script&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9b150144c6c5723cc943d4ffd1dfe1766ad50e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.SourceTextModule&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7d8162eda40278cd8f766647d3cda53a4a0bb2" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.SyntheticModule&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec045b2d5df15c204116039fc31dfd075a2e0efe" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.BrotliCompress&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e470bf06bc69ebfc858b296633b6abe2684d5897" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.BrotliDecompress&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fe835cb2a40918c087e14831794d7c6e022b36" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Deflate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1a9bcad8576c4eea57a59e532bb3a1ccf2f502" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.DeflateRaw&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066b144ced8e2a40b9c87c7502eb4930c6c90410" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Gunzip&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e6d8fa5fdbce52a6e1104595111c771ab5a294" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Gzip&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925d87d0551dca3e6c4a36a2ad7978b584864fb0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Inflate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d3c2d8921f325ff7972d7fc03ec9dce08d29f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.InflateRaw&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863fb4d97c1043e0eb2c36ea4871a1b8cb0935da" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Unzip&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49c05641bf8578e5f4a06269eb8a33caec20d56" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.ZlibBase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bee5dca77717117d2ea3be02b0a85e8328b8363" translate="yes" xml:space="preserve">
          <source>Class: AssertionError</source>
          <target state="translated">Класс:AssertionError</target>
        </trans-unit>
        <trans-unit id="6d89c69c426d0de4237b573e03a1b16d394b233d" translate="yes" xml:space="preserve">
          <source>Class: AsyncResource&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/async_hooks.js#L133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: AsyncResource &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/async_hooks.js#L133&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df6870e0644ad25a7dc8c078eb6c7058e89330f0" translate="yes" xml:space="preserve">
          <source>Class: BrotliOptions</source>
          <target state="translated">Класс:BrotliOptions</target>
        </trans-unit>
        <trans-unit id="ee91340540f9ff1d6eda0c3ff2611deada61f014" translate="yes" xml:space="preserve">
          <source>Class: Buffer</source>
          <target state="translated">Класс:Буфер</target>
        </trans-unit>
        <trans-unit id="7ea07e6292c4eec4c072b03d25a18317615da40d" translate="yes" xml:space="preserve">
          <source>Class: Certificate</source>
          <target state="translated">Класс:Сертификат</target>
        </trans-unit>
        <trans-unit id="6dfca7a0da2800bb450081a25c4c6922ded53539" translate="yes" xml:space="preserve">
          <source>Class: ChildProcess</source>
          <target state="translated">Класс:ChildProcess</target>
        </trans-unit>
        <trans-unit id="5f35c36984a11b5cb8f9df9b480e1dc1ad48cee7" translate="yes" xml:space="preserve">
          <source>Class: Cipher</source>
          <target state="translated">Класс:Шифр</target>
        </trans-unit>
        <trans-unit id="9772ea16b0b16a53ce1f500faf71e260f1958af6" translate="yes" xml:space="preserve">
          <source>Class: ClientHttp2Session</source>
          <target state="translated">Класс:ClientHttp2Session</target>
        </trans-unit>
        <trans-unit id="a0a74d71da9cf4b5a7d1fb9b972c8d3b30c490d3" translate="yes" xml:space="preserve">
          <source>Class: ClientHttp2Stream</source>
          <target state="translated">Класс:ClientHttp2Stream</target>
        </trans-unit>
        <trans-unit id="b1030ee1d76abf669683f525fd54f40dadf6ec4a" translate="yes" xml:space="preserve">
          <source>Class: Console</source>
          <target state="translated">Класс:Консоль</target>
        </trans-unit>
        <trans-unit id="94be7767bc80ec7404f3c0c38ab40f134438abc1" translate="yes" xml:space="preserve">
          <source>Class: CryptoStream</source>
          <target state="translated">Класс:CryptoStream</target>
        </trans-unit>
        <trans-unit id="8d4ba27c6fec639f6690b510c5baa27c6f946d5c" translate="yes" xml:space="preserve">
          <source>Class: Decipher</source>
          <target state="translated">Класс:Расшифровать</target>
        </trans-unit>
        <trans-unit id="d76911ae52c82753ed4161e351b3461546f92494" translate="yes" xml:space="preserve">
          <source>Class: DiffieHellman</source>
          <target state="translated">Класс:DiffieHellman</target>
        </trans-unit>
        <trans-unit id="401e3ac552c57c25fc587e4be68d0dc6f51e8ed5" translate="yes" xml:space="preserve">
          <source>Class: DiffieHellmanGroup</source>
          <target state="translated">Класс:DiffieHellmanGroup</target>
        </trans-unit>
        <trans-unit id="36860b0af82237a08fe0c130cbd1111d75165a57" translate="yes" xml:space="preserve">
          <source>Class: Domain</source>
          <target state="translated">Класс:Домен</target>
        </trans-unit>
        <trans-unit id="9b7002b14ba51117138db0d08961dd313855042b" translate="yes" xml:space="preserve">
          <source>Class: ECDH</source>
          <target state="translated">Класс:ECDH</target>
        </trans-unit>
        <trans-unit id="8a3a597e3722137704da8f7dc8649f5cbe6a85e8" translate="yes" xml:space="preserve">
          <source>Class: Error</source>
          <target state="translated">Класс:Ошибка</target>
        </trans-unit>
        <trans-unit id="fc67e3d56e36bfdaff45abf4ea446a2ceb036d7b" translate="yes" xml:space="preserve">
          <source>Class: EventEmitter</source>
          <target state="translated">Класс:EventEmitter</target>
        </trans-unit>
        <trans-unit id="eb651ff99a194e6231d2d6a9ccddb0992d633985" translate="yes" xml:space="preserve">
          <source>Class: Hash</source>
          <target state="translated">Класс:Хаш</target>
        </trans-unit>
        <trans-unit id="7edcd9901bee03137f2198db15bad6fb165c2489" translate="yes" xml:space="preserve">
          <source>Class: Histogram</source>
          <target state="translated">Класс:Гистограмма</target>
        </trans-unit>
        <trans-unit id="e7712bf8c14c2b069bd415f8ad1039d0fa70ade9" translate="yes" xml:space="preserve">
          <source>Class: Hmac</source>
          <target state="translated">Класс:Hmac</target>
        </trans-unit>
        <trans-unit id="055143c248f2dd8abbfca2cf9d3de70c4542fbf6" translate="yes" xml:space="preserve">
          <source>Class: Http2SecureServer</source>
          <target state="translated">Класс:Http2SecureServer</target>
        </trans-unit>
        <trans-unit id="53d5b1cdfe9ecfd0452ec17f8c7de326dbf1ab2c" translate="yes" xml:space="preserve">
          <source>Class: Http2Server</source>
          <target state="translated">Класс:Http2Server</target>
        </trans-unit>
        <trans-unit id="62a12fdafb1c79fe966203dce5ee47d5945e2a80" translate="yes" xml:space="preserve">
          <source>Class: Http2Session</source>
          <target state="translated">Класс:Http2Session</target>
        </trans-unit>
        <trans-unit id="d0c0e4d5bd1a7f02848afd26d4226fc6b34792c8" translate="yes" xml:space="preserve">
          <source>Class: Http2Stream</source>
          <target state="translated">Класс:Http2Stream</target>
        </trans-unit>
        <trans-unit id="c9ed8e0724da394f68c9c7aac8606be05926a4c9" translate="yes" xml:space="preserve">
          <source>Class: Immediate</source>
          <target state="translated">Класс:Немедленно</target>
        </trans-unit>
        <trans-unit id="f8ade0adf31707c878b07c45fa034fddbb4dee06" translate="yes" xml:space="preserve">
          <source>Class: Interface</source>
          <target state="translated">Класс:Интерфейс</target>
        </trans-unit>
        <trans-unit id="ddbf474d24c91341d0b5b926b44739b30142c430" translate="yes" xml:space="preserve">
          <source>Class: KeyObject</source>
          <target state="translated">Класс:KeyObject</target>
        </trans-unit>
        <trans-unit id="4a11c864b5123ffac1bf02b1987894716e9178e0" translate="yes" xml:space="preserve">
          <source>Class: MessageChannel</source>
          <target state="translated">Класс:MessageChannel</target>
        </trans-unit>
        <trans-unit id="ee173713a0263c0b29641e9c44da5d8804f1c133" translate="yes" xml:space="preserve">
          <source>Class: MessagePort</source>
          <target state="translated">Класс:MessagePort</target>
        </trans-unit>
        <trans-unit id="b6c40d8ac65690b8494f8e70f5c90fed80ace506" translate="yes" xml:space="preserve">
          <source>Class: Options</source>
          <target state="translated">Класс:Варианты</target>
        </trans-unit>
        <trans-unit id="95e417bb475601667efac8864a2d2f34dcbc6435" translate="yes" xml:space="preserve">
          <source>Class: Performance</source>
          <target state="translated">Класс:Производительность</target>
        </trans-unit>
        <trans-unit id="1febc9f73366381df9c70bb9e370d1872b0ca1fc" translate="yes" xml:space="preserve">
          <source>Class: PerformanceEntry</source>
          <target state="translated">Класс:PerformanceEntry</target>
        </trans-unit>
        <trans-unit id="660bc1eb3347f57ca0d77ff6760720b78cef946c" translate="yes" xml:space="preserve">
          <source>Class: PerformanceNodeTiming extends PerformanceEntry</source>
          <target state="translated">Класс:PerformanceNodeTiming расширяет PerformanceEntry</target>
        </trans-unit>
        <trans-unit id="49bd12691709816f0ad3cf3f60bf556a88a495e8" translate="yes" xml:space="preserve">
          <source>Class: PerformanceObserver&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/perf_hooks.js#L285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: PerformanceObserver &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/perf_hooks.js#L285&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2d71bddd2159350b0710cec7f08c41e14aad67b" translate="yes" xml:space="preserve">
          <source>Class: PerformanceObserverEntryList</source>
          <target state="translated">Класс:PerformanceObserverEntryList</target>
        </trans-unit>
        <trans-unit id="7971aa490eae2ba6177d084efef15f00e8a231aa" translate="yes" xml:space="preserve">
          <source>Class: REPLServer</source>
          <target state="translated">Класс:REPLServer</target>
        </trans-unit>
        <trans-unit id="bb53bf2faac6d90fa3c4bcef9dd2ea033396da60" translate="yes" xml:space="preserve">
          <source>Class: RangeError</source>
          <target state="translated">Класс:RangeError</target>
        </trans-unit>
        <trans-unit id="1ff1cba0df1133bd5ee2d424e6bfb925546fb9a7" translate="yes" xml:space="preserve">
          <source>Class: ReferenceError</source>
          <target state="translated">Класс:СправкаОшибка</target>
        </trans-unit>
        <trans-unit id="d6610a9a095cbb5bceb184ea6ef03375195896d7" translate="yes" xml:space="preserve">
          <source>Class: SecurePair</source>
          <target state="translated">Класс:SecurePair</target>
        </trans-unit>
        <trans-unit id="73983d4b4ae4bcf52d5358959a5ebcaf0f4db5ff" translate="yes" xml:space="preserve">
          <source>Class: ServerHttp2Session</source>
          <target state="translated">Класс:ServerHttp2Session</target>
        </trans-unit>
        <trans-unit id="90ecafc208a992e89d97aec23cfba5674695dfa1" translate="yes" xml:space="preserve">
          <source>Class: ServerHttp2Stream</source>
          <target state="translated">Класс:ServerHttp2Stream</target>
        </trans-unit>
        <trans-unit id="f02b8d27a4e11d427a9c8ffcd8a58e6cb0dcb8fe" translate="yes" xml:space="preserve">
          <source>Class: Sign</source>
          <target state="translated">Класс:Распишитесь на сайте .</target>
        </trans-unit>
        <trans-unit id="f402f70409b707e1cf81e329bd1d9cbb04e722ba" translate="yes" xml:space="preserve">
          <source>Class: SlowBuffer</source>
          <target state="translated">Класс:SlowBuffer</target>
        </trans-unit>
        <trans-unit id="14ea72601a1e4445d77a12385d1928ffeeb3a975" translate="yes" xml:space="preserve">
          <source>Class: StringDecoder</source>
          <target state="translated">Класс:StringDecoder</target>
        </trans-unit>
        <trans-unit id="c039928f51b3ce557b08b8c161c9776f3919083c" translate="yes" xml:space="preserve">
          <source>Class: SyntaxError</source>
          <target state="translated">Класс:СинтаксисОшибка</target>
        </trans-unit>
        <trans-unit id="6546bd0dc67ac75ecbb21fa8ef97ac2784e2c42a" translate="yes" xml:space="preserve">
          <source>Class: SystemError</source>
          <target state="translated">Класс:SystemError</target>
        </trans-unit>
        <trans-unit id="ca77ab749f487047c1c339f8f61efb068e74444f" translate="yes" xml:space="preserve">
          <source>Class: Timeout</source>
          <target state="translated">Класс:Таймаут</target>
        </trans-unit>
        <trans-unit id="a07fa94c48261641deb021767e49ce5bbbe00343" translate="yes" xml:space="preserve">
          <source>Class: TypeError</source>
          <target state="translated">Класс:TypeError</target>
        </trans-unit>
        <trans-unit id="9cbe7b594a816b5b5a63f3cd1339263238406bf2" translate="yes" xml:space="preserve">
          <source>Class: URL</source>
          <target state="translated">Класс:URL-АДРЕС</target>
        </trans-unit>
        <trans-unit id="c1ede861f38dede64144117f0a263f47d5cb3acd" translate="yes" xml:space="preserve">
          <source>Class: URLSearchParams</source>
          <target state="translated">Класс:URLSearchParams</target>
        </trans-unit>
        <trans-unit id="2c3dbdb817da19e37677c7b22b7b3ea95743a02f" translate="yes" xml:space="preserve">
          <source>Class: Verify</source>
          <target state="translated">Класс:Проверить</target>
        </trans-unit>
        <trans-unit id="d3d940ddc9abe58f39b5d8a8d49d75f2bf5a37cb" translate="yes" xml:space="preserve">
          <source>Class: Worker</source>
          <target state="translated">Класс:Рабочий</target>
        </trans-unit>
        <trans-unit id="ee0069323931cb8188be353cd2eff2673625921b" translate="yes" xml:space="preserve">
          <source>Class: assert.AssertionError&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/assert.js#L135&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: assert.AssertionError &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/assert.js#L135&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32620af846c88a6c6e5ef4add6064e4da05a6ea9" translate="yes" xml:space="preserve">
          <source>Class: assert.AssertionError&lt;a href=&quot;https://github.com/nodejs/node/blob/c1da528bc25c9cc5a8240a7b4f136f5968f6e113/lib/assert.js#L150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7646356f2df51dc886844401490ff50a7b8df9" translate="yes" xml:space="preserve">
          <source>Class: dgram.Socket&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/dgram.js#L88&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: dgram.Socket &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/dgram.js#L88&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f1245d31deaf0cd8a70c45ad46da689a419a765" translate="yes" xml:space="preserve">
          <source>Class: dns.Resolver</source>
          <target state="translated">Класс:днс.резольвер</target>
        </trans-unit>
        <trans-unit id="5eec419c0c522138b6d28cc206a9e5de84a0c64f" translate="yes" xml:space="preserve">
          <source>Class: dnsPromises.Resolver</source>
          <target state="translated">Класс:dnsPromises.Resolver</target>
        </trans-unit>
        <trans-unit id="63d596a0474b09de3ce23542bb0817ecd855247d" translate="yes" xml:space="preserve">
          <source>Class: fs.Dirent</source>
          <target state="translated">Класс:fs.Dirent</target>
        </trans-unit>
        <trans-unit id="32bb13d3d8cd1233db6906a10144788baafc15d8" translate="yes" xml:space="preserve">
          <source>Class: fs.FSWatcher</source>
          <target state="translated">Класс:fs.FSWatcher</target>
        </trans-unit>
        <trans-unit id="572eca4917fc3210a922b60070778ee660105b83" translate="yes" xml:space="preserve">
          <source>Class: fs.ReadStream</source>
          <target state="translated">Класс:fs.ReadStream</target>
        </trans-unit>
        <trans-unit id="1d3e6ac82044e79293f42dd0965dbdbe0823ea5b" translate="yes" xml:space="preserve">
          <source>Class: fs.Stats</source>
          <target state="translated">Класс:fs.Stats</target>
        </trans-unit>
        <trans-unit id="a2c81974801e4aff8ac1e5ba5973db293f034c82" translate="yes" xml:space="preserve">
          <source>Class: fs.WriteStream</source>
          <target state="translated">Класс:fs.WriteStream</target>
        </trans-unit>
        <trans-unit id="dd3d2d41e4d8701b85414e4141372fd43c9fe051" translate="yes" xml:space="preserve">
          <source>Class: http.Agent</source>
          <target state="translated">Класс:http.Агент</target>
        </trans-unit>
        <trans-unit id="858ae2efe19958bc0bcd201c0d05ed287bb41ab6" translate="yes" xml:space="preserve">
          <source>Class: http.ClientRequest</source>
          <target state="translated">Класс:http.ClientRequest</target>
        </trans-unit>
        <trans-unit id="f0f90a86616b70b7c34a7291a6fc608129d8462e" translate="yes" xml:space="preserve">
          <source>Class: http.IncomingMessage</source>
          <target state="translated">Класс:http.IncomingMessage</target>
        </trans-unit>
        <trans-unit id="ef0141af934b8c39f1edab875f23ee69096d2056" translate="yes" xml:space="preserve">
          <source>Class: http.Server</source>
          <target state="translated">Класс:http.Server</target>
        </trans-unit>
        <trans-unit id="cc662b9c387098851edd45a7ed5e318b286d4c31" translate="yes" xml:space="preserve">
          <source>Class: http.ServerResponse</source>
          <target state="translated">Класс:http.ServerResponse</target>
        </trans-unit>
        <trans-unit id="8ede30dd7e205f2ad51ffd5043b6d2c5253499b8" translate="yes" xml:space="preserve">
          <source>Class: http2.Http2ServerRequest</source>
          <target state="translated">Класс:http2.Http2ServerRequest</target>
        </trans-unit>
        <trans-unit id="f53b529b3e1e7a29a3a635b33a5a680c1b4a2ad6" translate="yes" xml:space="preserve">
          <source>Class: http2.Http2ServerResponse</source>
          <target state="translated">Класс:http2.Http2ServerResponse</target>
        </trans-unit>
        <trans-unit id="4d73fc1bdc8c0b1c0bea59de1af87ad1d4d21ef8" translate="yes" xml:space="preserve">
          <source>Class: https.Agent&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L144&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: https.Agent &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L144&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a5ce6b058e98b48dd8ff9073173543677d09416" translate="yes" xml:space="preserve">
          <source>Class: https.Server&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: https.Server &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L46&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0073527762c3a38e48ff45f4735d8e0f019fe89" translate="yes" xml:space="preserve">
          <source>Class: inspector.Session</source>
          <target state="translated">Занятие:инспектор.</target>
        </trans-unit>
        <trans-unit id="f7c9efa3f1c0df2ce051ba9dced85f1d7ca51e75" translate="yes" xml:space="preserve">
          <source>Class: net.Server&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L1070&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: net.Server &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L1070&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c728b92ec9ed66645064171f51275b5522d4bad" translate="yes" xml:space="preserve">
          <source>Class: net.Socket&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L236&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: net.Socket &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L236&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4585dad1ddb9ee702a469e8b3ce45cb5368dad87" translate="yes" xml:space="preserve">
          <source>Class: stream.Duplex</source>
          <target state="translated">Класс:поток.Дуплекс</target>
        </trans-unit>
        <trans-unit id="591fded34eab8e336702db78394cd67506a57fec" translate="yes" xml:space="preserve">
          <source>Class: stream.PassThrough</source>
          <target state="translated">Класс:stream.PassThrough</target>
        </trans-unit>
        <trans-unit id="e727b34caa07882e0e3d2f424db4c9f32759ef32" translate="yes" xml:space="preserve">
          <source>Class: stream.Readable</source>
          <target state="translated">Класс:stream.readable</target>
        </trans-unit>
        <trans-unit id="27c7c100e21b60cfe9f259349393d2d59e19a8d7" translate="yes" xml:space="preserve">
          <source>Class: stream.Transform</source>
          <target state="translated">Класс:поток.Преобразование</target>
        </trans-unit>
        <trans-unit id="e7fc0551d9f93663b10b16f1c305f9b6761ccea4" translate="yes" xml:space="preserve">
          <source>Class: stream.Writable</source>
          <target state="translated">Класс:stream.Writable</target>
        </trans-unit>
        <trans-unit id="cf580adf552f5943b00465f95eb1d451f48f362a" translate="yes" xml:space="preserve">
          <source>Class: tls.Server</source>
          <target state="translated">Класс:tls.Server</target>
        </trans-unit>
        <trans-unit id="266c110f36269a9dd6d8b7179dcbd694534d7fef" translate="yes" xml:space="preserve">
          <source>Class: tls.TLSSocket</source>
          <target state="translated">Класс:tls.TLSSocket</target>
        </trans-unit>
        <trans-unit id="8cda23b6d1e9dc869f485f0a6b4ae5cec1c4fcc1" translate="yes" xml:space="preserve">
          <source>Class: tty.ReadStream&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L42&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: tty.ReadStream &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L42&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14c4e5000edbe8baf9291fcfad1d7c5bf7ca76cc" translate="yes" xml:space="preserve">
          <source>Class: tty.WriteStream&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L80&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: tty.WriteStream &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L80&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2176201a8eb17202fda9eada206590ab0d8a5f3b" translate="yes" xml:space="preserve">
          <source>Class: util.TextDecoder</source>
          <target state="translated">Класс:use.TextDecoder</target>
        </trans-unit>
        <trans-unit id="225a821ad4ae8dd42565de0ab9fc4d91effbf7d9" translate="yes" xml:space="preserve">
          <source>Class: util.TextEncoder</source>
          <target state="translated">Класс:use.TextEncoder</target>
        </trans-unit>
        <trans-unit id="a1dd6ce5fb062867f583fca6877bd4e08ce6e249" translate="yes" xml:space="preserve">
          <source>Class: vm.Script</source>
          <target state="translated">Класс:vm.Script</target>
        </trans-unit>
        <trans-unit id="9c140e48cc581e4c97b858c58702bd26a98f14d8" translate="yes" xml:space="preserve">
          <source>Class: vm.SourceTextModule</source>
          <target state="translated">Класс:vm.SourceTextModule</target>
        </trans-unit>
        <trans-unit id="3c540cf26c882374d4b6c797ba59f97b5c4df290" translate="yes" xml:space="preserve">
          <source>Class: zlib.BrotliCompress&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L815&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.BrotliCompress &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L815&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21ad982768a17be628b475c2929baf1a8593f2b4" translate="yes" xml:space="preserve">
          <source>Class: zlib.BrotliDecompress&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L823&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.BrotliDecompress &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L823&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f550d3b072eb35f957e9787e2fc811a678680a42" translate="yes" xml:space="preserve">
          <source>Class: zlib.Deflate&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L695&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.Deflate &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L695&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f821e12183e76cf6291d97bc0a98ebc35e5016e1" translate="yes" xml:space="preserve">
          <source>Class: zlib.DeflateRaw&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L727&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.DeflateRaw &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L727&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e85c06b5b12e00902e6cd83d551a80afd898508" translate="yes" xml:space="preserve">
          <source>Class: zlib.Gunzip&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.Gunzip &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L719&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7c198a3e256c2e36c67572a7f0cc7ecc2ece130" translate="yes" xml:space="preserve">
          <source>Class: zlib.Gzip&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L711&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.Gzip &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L711&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4322d196f046aebe16fe93df5fca9302e83174e4" translate="yes" xml:space="preserve">
          <source>Class: zlib.Inflate&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L703&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.Inflate &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L703&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1916fabc525d061eecf452a39a4962c7e46d94c3" translate="yes" xml:space="preserve">
          <source>Class: zlib.InflateRaw&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L736&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.InflateRaw &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L736&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1350d4e7ef7676f24a19f7dd15e6ec215e8aa27" translate="yes" xml:space="preserve">
          <source>Class: zlib.Unzip&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">Класс: zlib.Unzip &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L744&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="980ed6673f63de346b3d489473fbef175ec32df7" translate="yes" xml:space="preserve">
          <source>Class: zlib.ZlibBase</source>
          <target state="translated">Класс:zlib.ZlibBase</target>
        </trans-unit>
        <trans-unit id="aa9f433a09a0d71ab935003b1ebd93f8e70f503c" translate="yes" xml:space="preserve">
          <source>Cleanup hooks may now be asynchronous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfc0c40cf622522920c5b4968f2565c85442775" translate="yes" xml:space="preserve">
          <source>Cleanup on exit of the current Node.js instance</source>
          <target state="translated">Очистка при выходе из текущего экземпляра Node.js.</target>
        </trans-unit>
        <trans-unit id="8cbea0dd03d659f6fc0af020526f99576b13aca1" translate="yes" xml:space="preserve">
          <source>Clear screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83530e1815352d08d7559083ed9fe11b37d61b98" translate="yes" xml:space="preserve">
          <source>Client connects to the server and sends an &lt;code&gt;'OCSPRequest'&lt;/code&gt; (via the status info extension in ClientHello).</source>
          <target state="translated">Клиент подключается к серверу и отправляет &lt;code&gt;'OCSPRequest'&lt;/code&gt; (через расширение информации о состоянии в ClientHello).</target>
        </trans-unit>
        <trans-unit id="9b7cc2a0a237b02bd18c475c2ab878b20b029ff1" translate="yes" xml:space="preserve">
          <source>Client validates the response and either destroys the socket or performs a handshake.</source>
          <target state="translated">Клиент проверяет ответ и либо уничтожает сокет,либо выполняет рукопожатие.</target>
        </trans-unit>
        <trans-unit id="5d3a08e6b324632a99205ff0c000dd4b31ad8fa4" translate="yes" xml:space="preserve">
          <source>Client-initiated renegotiation attack mitigation</source>
          <target state="translated">Инициированная клиентом перезаключенная атака по минимизации последствий</target>
        </trans-unit>
        <trans-unit id="3f05c67d59ace95834a9f9bd821143e71e8efc0a" translate="yes" xml:space="preserve">
          <source>Client-side example</source>
          <target state="translated">Пример со стороны клиента</target>
        </trans-unit>
        <trans-unit id="5b197dbe61813078ff8e2b5e607665e44a4c4995" translate="yes" xml:space="preserve">
          <source>ClientHttp2Session</source>
          <target state="translated">ClientHttp2Session</target>
        </trans-unit>
        <trans-unit id="7fc70a335ae1867faaff77960fa66720966f0085" translate="yes" xml:space="preserve">
          <source>ClientHttp2Stream</source>
          <target state="translated">ClientHttp2Stream</target>
        </trans-unit>
        <trans-unit id="9356a7830a1ab4cfef496cc697121b119fad5c6f" translate="yes" xml:space="preserve">
          <source>Close the underlying handle.</source>
          <target state="translated">Закрой нижнюю ручку.</target>
        </trans-unit>
        <trans-unit id="ae50316a0aa7c9805d6ed82df38055ff62f8937a" translate="yes" xml:space="preserve">
          <source>Close the underlying socket and stop listening for data on it. If a callback is provided, it is added as a listener for the &lt;a href=&quot;#dgram_event_close&quot;&gt;&lt;code&gt;'close'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Закройте базовый сокет и прекратите прослушивание данных на нем. Если предоставляется обратный вызов, он добавляется как прослушиватель для события &lt;a href=&quot;#dgram_event_close&quot;&gt; &lt;code&gt;'close'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1e3ae6a3f36eae2e25af6e890e376b2aff0609c" translate="yes" xml:space="preserve">
          <source>Closes the &lt;code&gt;Http2Stream&lt;/code&gt; instance by sending an &lt;code&gt;RST_STREAM&lt;/code&gt; frame to the connected HTTP/2 peer.</source>
          <target state="translated">Закрывает экземпляр &lt;code&gt;Http2Stream&lt;/code&gt; , отправляя кадр &lt;code&gt;RST_STREAM&lt;/code&gt; подключенному одноранговому узлу HTTP / 2.</target>
        </trans-unit>
        <trans-unit id="90aa5c8c38b8453581e4f0a38f89caf25684cae6" translate="yes" xml:space="preserve">
          <source>Closes the IPC channel between parent and child, allowing the child to exit gracefully once there are no other connections keeping it alive. After calling this method the &lt;code&gt;subprocess.connected&lt;/code&gt; and &lt;code&gt;process.connected&lt;/code&gt; properties in both the parent and child (respectively) will be set to &lt;code&gt;false&lt;/code&gt;, and it will be no longer possible to pass messages between the processes.</source>
          <target state="translated">Закрывает IPC-канал между родителем и потомком, позволяя потомку корректно выйти, если нет других соединений, поддерживающих его работу. После вызова этого метода для свойств &lt;code&gt;subprocess.connected&lt;/code&gt; и &lt;code&gt;process.connected&lt;/code&gt; в родительском и дочернем (соответственно) будет установлено значение &lt;code&gt;false&lt;/code&gt; , и больше будет невозможно передавать сообщения между процессами.</target>
        </trans-unit>
        <trans-unit id="b23804a0449627c9510bdc5ef3368ac152ce239a" translate="yes" xml:space="preserve">
          <source>Closes the file descriptor.</source>
          <target state="translated">Закрывает дескриптор файла.</target>
        </trans-unit>
        <trans-unit id="7bd60970fde2583fb6e37ac641bc3823907421c1" translate="yes" xml:space="preserve">
          <source>Closes the file handle after waiting for any pending operation on the handle to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75dc68bbdd56c9cbd58d4bbdabda84bcca2c47f" translate="yes" xml:space="preserve">
          <source>Cluster</source>
          <target state="translated">Cluster</target>
        </trans-unit>
        <trans-unit id="80a64dd5f45d9fb715134e38ce4612066b549518" translate="yes" xml:space="preserve">
          <source>Code repository and issue tracker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8cae0cc7280b8132a5dbc4f717c5748e2447d5" translate="yes" xml:space="preserve">
          <source>Coerce JavaScript values to specific JavaScript types (such as &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53e899409de575e1244cfe6fa90eaec6eb9f30b" translate="yes" xml:space="preserve">
          <source>Coerce a &lt;code&gt;Timeout&lt;/code&gt; to a primitive. The primitive can be used to clear the &lt;code&gt;Timeout&lt;/code&gt;. The primitive can only be used in the same thread where the timeout was created. Therefore, to use it across &lt;a href=&quot;worker_threads&quot;&gt;&lt;code&gt;worker_threads&lt;/code&gt;&lt;/a&gt; it must first be passed to the correct thread. This allows enhanced compatibility with browser &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;setInterval()&lt;/code&gt; implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef502b0ca48abd2a5e8cec682e639ff6c32d7286" translate="yes" xml:space="preserve">
          <source>Coercing the offsets to integers now handles values outside the 32-bit integer range properly.</source>
          <target state="translated">Принудительная обработка смещений к целым числам теперь корректно обрабатывает значения вне 32-битного целочисленного диапазона.</target>
        </trans-unit>
        <trans-unit id="1bfa05f9053ea71498a731db3bc6837c2172ca1a" translate="yes" xml:space="preserve">
          <source>Collecting HTTP/2 Performance Metrics</source>
          <target state="translated">Сбор показателей производительности HTTP/2</target>
        </trans-unit>
        <trans-unit id="529028624ea8e23bec9437eed43351cd264fe1ce" translate="yes" xml:space="preserve">
          <source>Collecting HTTP/2 performance metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f5792195fb8136faeef77ceb20296d74989e1c" translate="yes" xml:space="preserve">
          <source>Color output (if enabled) of &lt;code&gt;util.inspect&lt;/code&gt; is customizable globally via the &lt;code&gt;util.inspect.styles&lt;/code&gt; and &lt;code&gt;util.inspect.colors&lt;/code&gt; properties.</source>
          <target state="translated">Цветовой вывод (если включен) &lt;code&gt;util.inspect&lt;/code&gt; настраивается глобально с помощью свойств &lt;code&gt;util.inspect.styles&lt;/code&gt; и &lt;code&gt;util.inspect.colors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0d8230784db766154d6c1ff4966e49efa892e1f" translate="yes" xml:space="preserve">
          <source>Color styling uses ANSI control codes that may not be supported on all terminals. To verify color support use &lt;a href=&quot;tty#tty_writestream_hascolors_count_env&quot;&gt;&lt;code&gt;tty.hasColors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Цветовой стиль использует управляющие коды ANSI, которые могут поддерживаться не на всех терминалах. Чтобы проверить поддержку цвета, используйте &lt;a href=&quot;tty#tty_writestream_hascolors_count_env&quot;&gt; &lt;code&gt;tty.hasColors()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b91918e82d5cef17a745f0886369f20996ba6c7" translate="yes" xml:space="preserve">
          <source>Command Line Options</source>
          <target state="translated">Опции командной строки</target>
        </trans-unit>
        <trans-unit id="f0cab561b2d1b6a50046aaac51d5900407780ea5" translate="yes" xml:space="preserve">
          <source>Command reference</source>
          <target state="translated">Ссылка на команду</target>
        </trans-unit>
        <trans-unit id="f67e000a046a21604b2818c94a17c7ddab8e2442" translate="yes" xml:space="preserve">
          <source>Command-line options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0b4b72394982e026b43cb2db09fa5145ad7301" translate="yes" xml:space="preserve">
          <source>Commands and Special Keys</source>
          <target state="translated">Команды и специальные ключи</target>
        </trans-unit>
        <trans-unit id="4e1ca4b72c5872b942d411ffa31f6464b505951e" translate="yes" xml:space="preserve">
          <source>Commands and special keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92be5fa035fee22260aba9f79a65963da742ee1d" translate="yes" xml:space="preserve">
          <source>Common System Errors</source>
          <target state="translated">Общие системные ошибки</target>
        </trans-unit>
        <trans-unit id="ef08deaf3f4c249bbe9a48bd8e7379d9bb44230b" translate="yes" xml:space="preserve">
          <source>Common system errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8033c63f80a0687faa646f40064ddca5ac7658a0" translate="yes" xml:space="preserve">
          <source>CommonJS Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f0c8b47fa8755de2e6a42fa5925842da149a7" translate="yes" xml:space="preserve">
          <source>CommonJS modules consist of a &lt;code&gt;module.exports&lt;/code&gt; object which can be of any type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542deb57ecc58fd227e59b53356f94558c609262" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and Native Modules</source>
          <target state="translated">Модули CommonJS,JSON и аборигенные модули</target>
        </trans-unit>
        <trans-unit id="cf0e4eba6367908e6a37758a03578c6a444962e7" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and Native modules can be used with &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Модули CommonJS, JSON и Native можно использовать с &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc5d5f8bf1408cd9ec94fd7d33e89df84ef92d7d" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and native modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abf88640b642b6100fd4713e03f78464f62592e" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and native modules can be used with &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ccb30453ab89dbc276697018900c2f50212b90" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;buf1&lt;/code&gt; to &lt;code&gt;buf2&lt;/code&gt; typically for the purpose of sorting arrays of &lt;code&gt;Buffer&lt;/code&gt; instances. This is equivalent to calling &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf1.compare(buf2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сравнивает &lt;code&gt;buf1&lt;/code&gt; с &lt;code&gt;buf2&lt;/code&gt; , как правило, с целью сортировки массивов экземпляров &lt;code&gt;Buffer&lt;/code&gt; . Это эквивалентно вызову &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf1.compare(buf2)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ada6a4ede25d56bfe6118bcb823055fa788907a1" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;buf1&lt;/code&gt; to &lt;code&gt;buf2&lt;/code&gt;, typically for the purpose of sorting arrays of &lt;code&gt;Buffer&lt;/code&gt; instances. This is equivalent to calling &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf1.compare(buf2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7329f3b38a62c0f324292d3fe25680d52a97fdaa" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;buf&lt;/code&gt; with &lt;code&gt;target&lt;/code&gt; and returns a number indicating whether &lt;code&gt;buf&lt;/code&gt; comes before, after, or is the same as &lt;code&gt;target&lt;/code&gt; in sort order. Comparison is based on the actual sequence of bytes in each &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Сравнивает &lt;code&gt;buf&lt;/code&gt; с &lt;code&gt;target&lt;/code&gt; и возвращает число, указывающее, идет ли &lt;code&gt;buf&lt;/code&gt; до, после или совпадает с &lt;code&gt;target&lt;/code&gt; в порядке сортировки. Сравнение основано на фактической последовательности байтов в каждом &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="654c715fbc2fff5e31c10b96f4e85a596df737f3" translate="yes" xml:space="preserve">
          <source>Compares the pointer given as &lt;code&gt;type_tag&lt;/code&gt; with any that can be found on &lt;code&gt;js_object&lt;/code&gt;. If no tag is found on &lt;code&gt;js_object&lt;/code&gt; or, if a tag is found but it does not match &lt;code&gt;type_tag&lt;/code&gt;, then &lt;code&gt;result&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. If a tag is found and it matches &lt;code&gt;type_tag&lt;/code&gt;, then &lt;code&gt;result&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b52e2ee6d651b57fdc9ad10d7bbb24ca5e9c359" translate="yes" xml:space="preserve">
          <source>Comparison details</source>
          <target state="translated">Сравнение деталей</target>
        </trans-unit>
        <trans-unit id="949928fcaffafca4a96e2dcf44af151918d71bd2" translate="yes" xml:space="preserve">
          <source>Compatibility API</source>
          <target state="translated">API совместимости</target>
        </trans-unit>
        <trans-unit id="e1685df32db96b50d7007e22511d7c8fcb7a3937" translate="yes" xml:space="preserve">
          <source>Compatibility with Older Node.js Versions</source>
          <target state="translated">Совместимость со старыми версиями Node.js</target>
        </trans-unit>
        <trans-unit id="6413835c55396e8854853b2d37b72e339a275500" translate="yes" xml:space="preserve">
          <source>Compatibility with older Node.js versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d07b5e3b2ed558031b18dcb738c564565b0303" translate="yes" xml:space="preserve">
          <source>Compile-time deprecation.</source>
          <target state="translated">Депрессия во времени компиляции.</target>
        </trans-unit>
        <trans-unit id="62c7ad14ed9196d03fbbd8778af027d2783d1f59" translate="yes" xml:space="preserve">
          <source>Compiles the given code into the provided context (if no context is supplied, the current context is used), and returns it wrapped inside a function with the given &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c48a836dcb6a5027e827d0e895d6df08489f9ae" translate="yes" xml:space="preserve">
          <source>Compiles the given code into the provided context/sandbox (if no context is supplied, the current context is used), and returns it wrapped inside a function with the given &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">Компилирует данный код в предоставленный контекст / изолированную программную среду (если контекст не указан, используется текущий контекст) и возвращает его завернутым внутри функции с заданными &lt;code&gt;params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc5a622940147f5fde54e40bd8f9dd42748aa3f" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt;&lt;code&gt;BrotliCompress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сжать фрагмент данных с помощью &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt; &lt;code&gt;BrotliCompress&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a51ef9aa08748a455d376a484ca7a4ea2014c614" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сжать фрагмент данных с помощью &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="882c021e07cd95aa9596d9bb97bbd683575e933a" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt;&lt;code&gt;DeflateRaw&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сжать фрагмент данных с помощью &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt; &lt;code&gt;DeflateRaw&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddd950feef64772a2192ddc0fbfad70c8e5937b3" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt;&lt;code&gt;Gzip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сжать фрагмент данных с помощью &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt; &lt;code&gt;Gzip&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b836e8e2670339cdd499dfccffc683fa0654654" translate="yes" xml:space="preserve">
          <source>Compress data using deflate, and do not append a &lt;code&gt;zlib&lt;/code&gt; header.</source>
          <target state="translated">Сжимайте данные с помощью deflate и не &lt;code&gt;zlib&lt;/code&gt; заголовок zlib .</target>
        </trans-unit>
        <trans-unit id="6a5f382fe2bc977e5ffd68e64b49abcba50f3889" translate="yes" xml:space="preserve">
          <source>Compress data using deflate.</source>
          <target state="translated">Сжимайте данные с помощью сдува.</target>
        </trans-unit>
        <trans-unit id="5eff9f796879353b5f4b6b64990c52eba1c7edd4" translate="yes" xml:space="preserve">
          <source>Compress data using gzip.</source>
          <target state="translated">Сжимайте данные с помощью gzip.</target>
        </trans-unit>
        <trans-unit id="7d1f912218507ca3cc5b73350cf1bb6c9f78c08b" translate="yes" xml:space="preserve">
          <source>Compress data using the Brotli algorithm.</source>
          <target state="translated">Сжимайте данные с помощью алгоритма Бротли.</target>
        </trans-unit>
        <trans-unit id="c6c1e5d1d739c448afb871c4436a6df754d47162" translate="yes" xml:space="preserve">
          <source>Compressing HTTP requests and responses</source>
          <target state="translated">Сжатие HTTP-запросов и ответов</target>
        </trans-unit>
        <trans-unit id="2a729b5fe3cc43023943afc839ec7f014a9775a2" translate="yes" xml:space="preserve">
          <source>Compressing or decompressing a stream (such as a file) can be accomplished by piping the source stream data through a &lt;code&gt;zlib&lt;/code&gt; stream into a destination stream:</source>
          <target state="translated">Сжатие или распаковка потока (например, файла) может быть выполнено путем передачи данных исходного потока через поток &lt;code&gt;zlib&lt;/code&gt; в поток назначения:</target>
        </trans-unit>
        <trans-unit id="a1c648b47a9f2e63fd2d2f2fbdddbfee0ea552bb" translate="yes" xml:space="preserve">
          <source>Compressing or decompressing a stream (such as a file) can be accomplished by piping the source stream through a &lt;code&gt;zlib&lt;/code&gt;&lt;code&gt;Transform&lt;/code&gt; stream into a destination stream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687646452a200d59908103e90311205bb64151d2" translate="yes" xml:space="preserve">
          <source>Compression Error</source>
          <target state="translated">Ошибка компрессии</target>
        </trans-unit>
        <trans-unit id="e3ea1441e134ebbb31bc51cc9d81c6139db0a3c4" translate="yes" xml:space="preserve">
          <source>Compression and decompression are built around the Node.js &lt;a href=&quot;stream&quot;&gt;Streams API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06bcf5b1e1b82469c32de085fda03a5c32340dc" translate="yes" xml:space="preserve">
          <source>Compression levels.</source>
          <target state="translated">Уровни сжатия.</target>
        </trans-unit>
        <trans-unit id="107902d2b7faa488b978b8da1c9fb43aaf256260" translate="yes" xml:space="preserve">
          <source>Compression strategy.</source>
          <target state="translated">Стратегия компрессии.</target>
        </trans-unit>
        <trans-unit id="705d2325d10730a4e64b75746d16d86a88621f64" translate="yes" xml:space="preserve">
          <source>Compressor options</source>
          <target state="translated">Опции компрессора</target>
        </trans-unit>
        <trans-unit id="8c06a818419341dcc00c55c4d90cdf72d90fa31a" translate="yes" xml:space="preserve">
          <source>Computes the Diffie-Hellman secret based on a &lt;code&gt;privateKey&lt;/code&gt; and a &lt;code&gt;publicKey&lt;/code&gt;. Both keys must have the same &lt;code&gt;asymmetricKeyType&lt;/code&gt;, which must be one of &lt;code&gt;'dh'&lt;/code&gt; (for Diffie-Hellman), &lt;code&gt;'ec'&lt;/code&gt; (for ECDH), &lt;code&gt;'x448'&lt;/code&gt;, or &lt;code&gt;'x25519'&lt;/code&gt; (for ECDH-ES).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209cfc803ab4bbccd1b92cc5d64c90559099e286" translate="yes" xml:space="preserve">
          <source>Computes the shared secret using &lt;code&gt;otherPublicKey&lt;/code&gt; as the other party's public key and returns the computed shared secret. The supplied key is interpreted using specified &lt;code&gt;inputEncoding&lt;/code&gt;, and the returned secret is encoded using the specified &lt;code&gt;outputEncoding&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, &lt;code&gt;otherPublicKey&lt;/code&gt; is expected to be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">Вычисляет общий секрет, используя &lt;code&gt;otherPublicKey&lt;/code&gt; в качестве открытого ключа другой стороны, и возвращает вычисленный общий секрет. Предоставленный ключ интерпретируется с использованием указанного &lt;code&gt;inputEncoding&lt;/code&gt; , а возвращаемый секрет кодируется с использованием указанного &lt;code&gt;outputEncoding&lt;/code&gt; . Если &lt;code&gt;inputEncoding&lt;/code&gt; не &lt;code&gt;otherPublicKey&lt;/code&gt; , ожидается , что otherPublicKey будет &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad3852bf7998d9f16ec46b178a773a89c513afcb" translate="yes" xml:space="preserve">
          <source>Computes the shared secret using &lt;code&gt;otherPublicKey&lt;/code&gt; as the other party's public key and returns the computed shared secret. The supplied key is interpreted using the specified &lt;code&gt;inputEncoding&lt;/code&gt;, and secret is encoded using specified &lt;code&gt;outputEncoding&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, &lt;code&gt;otherPublicKey&lt;/code&gt; is expected to be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">Вычисляет общий секрет, используя &lt;code&gt;otherPublicKey&lt;/code&gt; в качестве открытого ключа другой стороны, и возвращает вычисленный общий секрет. Предоставленный ключ интерпретируется с использованием указанного &lt;code&gt;inputEncoding&lt;/code&gt; , а секрет кодируется с использованием указанного &lt;code&gt;outputEncoding&lt;/code&gt; . Если &lt;code&gt;inputEncoding&lt;/code&gt; не &lt;code&gt;otherPublicKey&lt;/code&gt; , ожидается , что otherPublicKey будет &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="ad824d940265b366316a0d82798b4bfaaaaa9bca" translate="yes" xml:space="preserve">
          <source>Configuration on module initialization is also available via environment variables:</source>
          <target state="translated">Конфигурация при инициализации модуля также доступна через переменные окружения:</target>
        </trans-unit>
        <trans-unit id="fd343cadfd8c4297debd9367427b8e3199a5a455" translate="yes" xml:space="preserve">
          <source>Connect Error</source>
          <target state="translated">Подключить ошибку</target>
        </trans-unit>
        <trans-unit id="019ca1e2c9079a1a064b9c9f761efaac20200ac7" translate="yes" xml:space="preserve">
          <source>Connects a session to the inspector back-end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd483354feaaad4c6488ff4e153b453de9c1f84" translate="yes" xml:space="preserve">
          <source>Connects a session to the inspector back-end. An exception will be thrown if there is already a connected session established either through the API or by a front-end connected to the Inspector WebSocket port.</source>
          <target state="translated">Подключает сеанс к задней части инспектора.Исключение будет брошено,если сеанс подключения уже установлен либо через API,либо через внешний интерфейс,подключенный к порту инспектора WebSocket.</target>
        </trans-unit>
        <trans-unit id="6a3ccd6375c4d43fa4d5595d475b4c4c0abaf23f" translate="yes" xml:space="preserve">
          <source>Connects a session to the main thread inspector back-end. An exception will be thrown if this API was not called on a Worker thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bce5eea9f5285b9caff03061be93178944a6b70" translate="yes" xml:space="preserve">
          <source>Consider this situation:</source>
          <target state="translated">Рассмотрим эту ситуацию:</target>
        </trans-unit>
        <trans-unit id="e52785568ffbed7cc5dfe29cb6cb4924433e7371" translate="yes" xml:space="preserve">
          <source>Considerations when transferring TypedArrays and Buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65dd03fe32462c1ef50bf727e2875b6d0a13a52" translate="yes" xml:space="preserve">
          <source>Consistently set socket timeout only when the socket connects.</source>
          <target state="translated">Последовательно устанавливать тайм-аут розетки только при ее подключении.</target>
        </trans-unit>
        <trans-unit id="9f3341d3710b74c1bace9f7d9d287f157faea4f4" translate="yes" xml:space="preserve">
          <source>Console</source>
          <target state="translated">Console</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="6885ebdd7073d6b1008150a4271ba49427d73555" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;tls.TLSSocket&lt;/code&gt; object from an existing TCP socket.</source>
          <target state="translated">&lt;code&gt;tls.TLSSocket&lt;/code&gt; новый объект tls.TLSSocket из существующего сокета TCP.</target>
        </trans-unit>
        <trans-unit id="db5f47689fca29a6b2a3dc3a12435f09750e7ad1" translate="yes" xml:space="preserve">
          <source>Constructor: new URL(input[, base])</source>
          <target state="translated">Конструктор:новый URL(input[,base])</target>
        </trans-unit>
        <trans-unit id="6e8280b203fc633489ff031c747d433819075e43" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams()</source>
          <target state="translated">Конструктор:новый URLSearchParams()</target>
        </trans-unit>
        <trans-unit id="d7a12d65ee7485d2e8c5b3d322591654410166c6" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams(iterable)</source>
          <target state="translated">Конструктор:новые URLSearchParams(итерабельные)</target>
        </trans-unit>
        <trans-unit id="ef957972061dfe971ae7ed8328f33934f82d6362" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams(obj)</source>
          <target state="translated">Конструктор:новый URLSearchParams(obj)</target>
        </trans-unit>
        <trans-unit id="acb5d88524215896d0eda1d976bf13a13625463b" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams(string)</source>
          <target state="translated">Конструктор:новый URLSearchParams(string)</target>
        </trans-unit>
        <trans-unit id="11a89e914bedec196f22f206b290ec5629177b77" translate="yes" xml:space="preserve">
          <source>Constructor: new inspector.Session()</source>
          <target state="translated">Конструктор:новый инспектор.Сессия()</target>
        </trans-unit>
        <trans-unit id="cf9ed2b3923e5608b657c5193c702543f56a3ead" translate="yes" xml:space="preserve">
          <source>Constructor: new stream.Writable([options])</source>
          <target state="translated">Конструктор:new stream.Writable([options]))</target>
        </trans-unit>
        <trans-unit id="efebf4343b8cda5afd208f14a3c5c74922c3e79e" translate="yes" xml:space="preserve">
          <source>Constructor: new vm.Script(code[, options])</source>
          <target state="translated">Конструктор:новый vm.Script(code[,опции])</target>
        </trans-unit>
        <trans-unit id="bf01f0a8a66bcc77139555e7b0fbc9aef87caedf" translate="yes" xml:space="preserve">
          <source>Constructor: new vm.SourceTextModule(code[, options])</source>
          <target state="translated">Конструктор:новый vm.SourceTextModule(code[,опции])</target>
        </trans-unit>
        <trans-unit id="7a2716cd99df92c674d90bf3be7264f6c1b60a32" translate="yes" xml:space="preserve">
          <source>Consuming Readable Streams with Async Iterators</source>
          <target state="translated">Потребление читаемых потоков с помощью итераторов Async</target>
        </trans-unit>
        <trans-unit id="55b8149b797db6c0f28965fd4339088b60844032" translate="yes" xml:space="preserve">
          <source>Consuming readable streams with async iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8850220933e5a730ec2dc2548619b4a5ef22513" translate="yes" xml:space="preserve">
          <source>Contains commonly used operating system-specific constants for error codes, process signals, and so on. The specific constants defined are described in &lt;a href=&quot;#os_os_constants_1&quot;&gt;OS constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2313cde4c4d594475138fe868c498b0196dee663" translate="yes" xml:space="preserve">
          <source>Context properties are not read-only by default. To specify read-only globals, context properties must be defined using &lt;code&gt;Object.defineProperty()&lt;/code&gt;:</source>
          <target state="translated">Свойства контекста по умолчанию не доступны только для чтения. Чтобы указать глобальные объекты, доступные только для чтения, свойства контекста должны быть определены с помощью &lt;code&gt;Object.defineProperty()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d9f3f1e0279409b35f7d388561f45dd59523090e" translate="yes" xml:space="preserve">
          <source>Context-aware addons</source>
          <target state="translated">Контекстно-зависимые дополнения</target>
        </trans-unit>
        <trans-unit id="ad25394c09efd907bfecf00713c6f5d1dd3ed976" translate="yes" xml:space="preserve">
          <source>Continue the next loop iteration.</source>
          <target state="translated">Продолжайте следующую итерацию петли.</target>
        </trans-unit>
        <trans-unit id="517aad1de32c1b4176dc8bd3bf6b9d050c9b89db" translate="yes" xml:space="preserve">
          <source>Continuing the above example, the following skeleton addon implementation illustrates the use of &lt;code&gt;napi_type_tag_object()&lt;/code&gt; and &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93299bc1cf08a655446ad464b16460a92aa9cf8b" translate="yes" xml:space="preserve">
          <source>Convenience Methods</source>
          <target state="translated">Удобство Методы</target>
        </trans-unit>
        <trans-unit id="1f619076858d6ded347f81f166e575080deac279" translate="yes" xml:space="preserve">
          <source>Convenience methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ff5738f21b77c9eec3b3ac05fcd9e8d12a3198" translate="yes" xml:space="preserve">
          <source>Convert from N-API value to a primitive C type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42902c990cbceb4f179b06cbf387d78d959552d5" translate="yes" xml:space="preserve">
          <source>Convert from a primitive C type to an N-API value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744d12ff097b4cdf6e8d44882fbcbe7fa1351158" translate="yes" xml:space="preserve">
          <source>Converting a &lt;code&gt;Buffer&lt;/code&gt; into a string using one of the above is referred to as decoding, and converting a string into a &lt;code&gt;Buffer&lt;/code&gt; is referred to as encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7736b5866f1089792465dadb41af34bd95c7f1" translate="yes" xml:space="preserve">
          <source>Converts the EC Diffie-Hellman public key specified by &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;curve&lt;/code&gt; to the format specified by &lt;code&gt;format&lt;/code&gt;. The &lt;code&gt;format&lt;/code&gt; argument specifies point encoding and can be &lt;code&gt;'compressed'&lt;/code&gt;, &lt;code&gt;'uncompressed'&lt;/code&gt; or &lt;code&gt;'hybrid'&lt;/code&gt;. The supplied key is interpreted using the specified &lt;code&gt;inputEncoding&lt;/code&gt;, and the returned key is encoded using the specified &lt;code&gt;outputEncoding&lt;/code&gt;.</source>
          <target state="translated">Преобразует открытый ключ EC Диффи-Хеллмана, заданный &lt;code&gt;key&lt;/code&gt; и &lt;code&gt;curve&lt;/code&gt; в формат, заданный параметром &lt;code&gt;format&lt;/code&gt; . В &lt;code&gt;format&lt;/code&gt; аргумент определяет точку кодирования и может быть &lt;code&gt;'compressed'&lt;/code&gt; , &lt;code&gt;'uncompressed'&lt;/code&gt; или &lt;code&gt;'hybrid'&lt;/code&gt; . Предоставленный ключ интерпретируется с использованием указанного &lt;code&gt;inputEncoding&lt;/code&gt; , а возвращаемый ключ кодируется с использованием указанного &lt;code&gt;outputEncoding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0346e3fd785f5d99144a1c02b9c2e857197d198" translate="yes" xml:space="preserve">
          <source>Copies data from a region of &lt;code&gt;buf&lt;/code&gt; to a region in &lt;code&gt;target&lt;/code&gt; even if the &lt;code&gt;target&lt;/code&gt; memory region overlaps with &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">Копирует данные из области &lt;code&gt;buf&lt;/code&gt; в область &lt;code&gt;target&lt;/code&gt; даже если &lt;code&gt;target&lt;/code&gt; область памяти перекрывается с &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e2fdc02df0a47f81fe4ecc3ed8f8e6e084d58d5" translate="yes" xml:space="preserve">
          <source>Copies data from a region of &lt;code&gt;buf&lt;/code&gt; to a region in &lt;code&gt;target&lt;/code&gt;, even if the &lt;code&gt;target&lt;/code&gt; memory region overlaps with &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f0139cfd5b9e65c5f39963edca4667e1a93a7" translate="yes" xml:space="preserve">
          <source>Copies the passed &lt;code&gt;buffer&lt;/code&gt; data onto a new &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">Копирует переданные данные &lt;code&gt;buffer&lt;/code&gt; в новый экземпляр &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a78fa347747de6accab57af2e36f26f24b67750" translate="yes" xml:space="preserve">
          <source>Core API</source>
          <target state="translated">Основной API</target>
        </trans-unit>
        <trans-unit id="bc6e3a410aa372c2487ec123aa51c13c61ba9355" translate="yes" xml:space="preserve">
          <source>Core Modules</source>
          <target state="translated">Модули ядра</target>
        </trans-unit>
        <trans-unit id="67d35c68c7df776a652523a80899e489b317a9b0" translate="yes" xml:space="preserve">
          <source>Core modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53b1974c86fa9608a82f8d059769ee1122bda7d" translate="yes" xml:space="preserve">
          <source>Core modules are always preferentially loaded if their identifier is passed to &lt;code&gt;require()&lt;/code&gt;. For instance, &lt;code&gt;require('http')&lt;/code&gt; will always return the built in HTTP module, even if there is a file by that name.</source>
          <target state="translated">Основные модули всегда предпочтительно загружаются, если их идентификатор передается в &lt;code&gt;require()&lt;/code&gt; . Например, &lt;code&gt;require('http')&lt;/code&gt; всегда будет возвращать встроенный HTTP-модуль, даже если есть файл с таким именем.</target>
        </trans-unit>
        <trans-unit id="18a444bb0eaa5d5c5c70af0097791a7565b4010e" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.es/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; abstract operation in the ECMAScript specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337c2273a123741dbebe1ed7455662a1b80086c0" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.es/ecma262/#sec-moduledeclarationlinking&quot;&gt;Link() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f3e4fc3633d7c695b451688db146d47301f39d" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.es/ecma262/#sec-moduleevaluation&quot;&gt;Evaluate() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30058252154c7f3803e95e6a2422e4ba07598d74" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; abstract operation in the ECMAScript specification.</source>
          <target state="translated">Соответствует абстрактной операции &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; в спецификации ECMAScript.</target>
        </trans-unit>
        <trans-unit id="89d8020a2038620e82de4de9ad4ab548d1ac8cb7" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduledeclarationinstantiation&quot;&gt;Instantiate() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">Соответствует &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduledeclarationinstantiation&quot;&gt;конкретному&lt;/a&gt; полю метода Instantiate () &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;записей модуля исходного текста&lt;/a&gt; в спецификации ECMAScript.</target>
        </trans-unit>
        <trans-unit id="335aeb0ce7e1295242e1a5b080497af27b11aaa3" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduleevaluation&quot;&gt;Evaluate() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">Соответствует &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduleevaluation&quot;&gt;конкретному&lt;/a&gt; полю метода Evaluate () &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;записей модуля исходного текста&lt;/a&gt; в спецификации ECMAScript.</target>
        </trans-unit>
        <trans-unit id="658703ed3a262a18969f60248ee132196f23b4cd" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;SSL_get_finished&lt;/code&gt; routine in OpenSSL and may be used to implement the &lt;code&gt;tls-unique&lt;/code&gt; channel binding from &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt;.</source>
          <target state="translated">Соответствует подпрограмме &lt;code&gt;SSL_get_finished&lt;/code&gt; в OpenSSL и может использоваться для реализации привязки канала &lt;code&gt;tls-unique&lt;/code&gt; из &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd33cb10079a3c04fe16b0de64bd1b1cae43516" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;SSL_get_peer_finished&lt;/code&gt; routine in OpenSSL and may be used to implement the &lt;code&gt;tls-unique&lt;/code&gt; channel binding from &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt;.</source>
          <target state="translated">Соответствует подпрограмме &lt;code&gt;SSL_get_peer_finished&lt;/code&gt; в OpenSSL и может использоваться для реализации привязки канала &lt;code&gt;tls-unique&lt;/code&gt; из &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63d7cbf24593135d66f07b5245c2d90ac41e524d" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[EvaluationError]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8619ca0519ef68f2c83155b82feff00c5c8697ad" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[EvaluationError]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">Соответствует полю &lt;code&gt;[[EvaluationError]]&lt;/code&gt; &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;записей модуля исходного текста&lt;/a&gt; в спецификации ECMAScript.</target>
        </trans-unit>
        <trans-unit id="a577bec8c2f8bb6807f02f358dead1810bb18476" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[RequestedModules]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b96a087d8c17e6c540a8830c50f96b012edbec" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[RequestedModules]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">Соответствует полю &lt;code&gt;[[RequestedModules]]&lt;/code&gt; &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;записей модуля исходного текста&lt;/a&gt; в спецификации ECMAScript.</target>
        </trans-unit>
        <trans-unit id="12a47f54079f0b1acfa0c7a09eeb7e114b5f8250" translate="yes" xml:space="preserve">
          <source>Coverage is output as an array of &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/tot/Profiler#type-ScriptCoverage&quot;&gt;ScriptCoverage&lt;/a&gt; objects on the top-level key &lt;code&gt;result&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7045a6da4882ca033b605752d377c4eb81b42e3b" translate="yes" xml:space="preserve">
          <source>Coverage output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf6c032fd6ae7c61f1b93da35fc44ebcaf1f1b8" translate="yes" xml:space="preserve">
          <source>Create a new JavaScript object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610dd1b37fc977df7dde1d4da1429edaaa5c502d" translate="yes" xml:space="preserve">
          <source>Create a new instance of the &lt;code&gt;inspector.Session&lt;/code&gt; class. The inspector session needs to be connected through &lt;a href=&quot;#inspector_session_connect&quot;&gt;&lt;code&gt;session.connect()&lt;/code&gt;&lt;/a&gt; before the messages can be dispatched to the inspector backend.</source>
          <target state="translated">Создайте новый экземпляр класса &lt;code&gt;inspector.Session&lt;/code&gt; . Сеанс инспектора должен быть подключен через &lt;a href=&quot;#inspector_session_connect&quot;&gt; &lt;code&gt;session.connect()&lt;/code&gt; &lt;/a&gt; прежде чем сообщения могут быть отправлены в серверную часть инспектора.</target>
        </trans-unit>
        <trans-unit id="54deb817cff3a4a7fdba839fc12d8509a4b8a400" translate="yes" xml:space="preserve">
          <source>Create a new resolver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcc409e40ec595c6632ed9d65254ab363ea9e00" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;AsyncIterator&lt;/code&gt; object that iterates through each line in the input stream as a string. This method allows asynchronous iteration of &lt;code&gt;readline.Interface&lt;/code&gt; objects through &lt;code&gt;for await...of&lt;/code&gt; loops.</source>
          <target state="translated">Создайте объект &lt;code&gt;AsyncIterator&lt;/code&gt; , который выполняет итерацию по каждой строке входного потока в виде строки. Этот метод допускает асинхронную итерацию объектов &lt;code&gt;readline.Interface&lt;/code&gt; через цикл &lt;code&gt;for await...of&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c44ef7baf4d253e9a35902b42e109fa6d31ebf4d" translate="yes" xml:space="preserve">
          <source>Created by &lt;a href=&quot;#fs_fs_opendir_path_options_callback&quot;&gt;&lt;code&gt;fs.opendir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fs_fs_opendirsync_path_options&quot;&gt;&lt;code&gt;fs.opendirSync()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#fs_fspromises_opendir_path_options&quot;&gt;&lt;code&gt;fsPromises.opendir()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49faf71491f45e8f62679a49f7c9cffd0d05f4b6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;.stack&lt;/code&gt; property on &lt;code&gt;targetObject&lt;/code&gt;, which when accessed returns a string representing the location in the code at which &lt;code&gt;Error.captureStackTrace()&lt;/code&gt; was called.</source>
          <target state="translated">Создает &lt;code&gt;.stack&lt;/code&gt; свойство на &lt;code&gt;targetObject&lt;/code&gt; , который , когда доступ возвращает строку , представляющую местоположение в коде , при которой &lt;code&gt;Error.captureStackTrace()&lt;/code&gt; была вызвана.</target>
        </trans-unit>
        <trans-unit id="861ea554e920de38cd6ca9bf8e78d7fc3fdea253" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DiffieHellman&lt;/code&gt; key exchange object and generates a prime of &lt;code&gt;primeLength&lt;/code&gt; bits using an optional specific numeric &lt;code&gt;generator&lt;/code&gt;. If &lt;code&gt;generator&lt;/code&gt; is not specified, the value &lt;code&gt;2&lt;/code&gt; is used.</source>
          <target state="translated">Создает объект &lt;code&gt;DiffieHellman&lt;/code&gt; ключами DiffieHellman и генерирует простое число из битов &lt;code&gt;primeLength&lt;/code&gt; , используя дополнительный специальный числовой &lt;code&gt;generator&lt;/code&gt; . Если &lt;code&gt;generator&lt;/code&gt; не указан, используется значение &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94ccec7a1bed4822778508279eba1d3cdea49d1f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DiffieHellman&lt;/code&gt; key exchange object using the supplied &lt;code&gt;prime&lt;/code&gt; and an optional specific &lt;code&gt;generator&lt;/code&gt;.</source>
          <target state="translated">Создает объект &lt;code&gt;DiffieHellman&lt;/code&gt; ключами Диффи-Хеллмана, используя предоставленное &lt;code&gt;prime&lt;/code&gt; и дополнительный специальный &lt;code&gt;generator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="633f7290cffe7d54d5d107ea22501818af866c84" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Histogram&lt;/code&gt; object that samples and reports the event loop delay over time. The delays will be reported in nanoseconds.</source>
          <target state="translated">Создает объект &lt;code&gt;Histogram&lt;/code&gt; , который производит выборку и сообщает о задержке цикла событий с течением времени. Задержки будут сообщаться в наносекундах.</target>
        </trans-unit>
        <trans-unit id="addb7bc35a2fda9c78340d8017729c3865adb5b2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Promise&lt;/code&gt; that is fulfilled when the &lt;code&gt;EventEmitter&lt;/code&gt; emits the given event or that is rejected if the &lt;code&gt;EventEmitter&lt;/code&gt; emits &lt;code&gt;'error'&lt;/code&gt; while waiting. The &lt;code&gt;Promise&lt;/code&gt; will resolve with an array of all the arguments emitted to the given event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d9586a173a523d220f163d6b9034f1ebee6404" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Promise&lt;/code&gt; that is resolved when the &lt;code&gt;EventEmitter&lt;/code&gt; emits the given event or that is rejected when the &lt;code&gt;EventEmitter&lt;/code&gt; emits &lt;code&gt;'error'&lt;/code&gt;. The &lt;code&gt;Promise&lt;/code&gt; will resolve with an array of all the arguments emitted to the given event.</source>
          <target state="translated">Создает &lt;code&gt;Promise&lt;/code&gt; , которое разрешается, когда &lt;code&gt;EventEmitter&lt;/code&gt; генерирует данное событие, или отклоняется, когда &lt;code&gt;EventEmitter&lt;/code&gt; выдает &lt;code&gt;'error'&lt;/code&gt; . &lt;code&gt;Promise&lt;/code&gt; рассосется со множеством всех аргументов , выбрасываемых в данном случае.</target>
        </trans-unit>
        <trans-unit id="f519284c6a4688da71e7f1ec6160dcba10c2f5aa" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;dgram.Socket&lt;/code&gt; object of the specified &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969be098b1da05dd2bc5a306c3c8264e3355f80f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;dgram.Socket&lt;/code&gt; object of the specified &lt;code&gt;type&lt;/code&gt;. The &lt;code&gt;type&lt;/code&gt; argument can be either &lt;code&gt;'udp4'&lt;/code&gt; or &lt;code&gt;'udp6'&lt;/code&gt;. An optional &lt;code&gt;callback&lt;/code&gt; function can be passed which is added as a listener for &lt;code&gt;'message'&lt;/code&gt; events.</source>
          <target state="translated">Создает объект &lt;code&gt;dgram.Socket&lt;/code&gt; указанного &lt;code&gt;type&lt;/code&gt; . &lt;code&gt;type&lt;/code&gt; аргумента может быть либо &lt;code&gt;'udp4'&lt;/code&gt; или &lt;code&gt;'udp6'&lt;/code&gt; . Может быть передана необязательная функция &lt;code&gt;callback&lt;/code&gt; которая добавляется как прослушиватель для событий &lt;code&gt;'message'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46ace698cde21ad3955f493363d8d446265cd505" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;dgram.Socket&lt;/code&gt; object. Once the socket is created, calling &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; will instruct the socket to begin listening for datagram messages. When &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; are not passed to &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; the method will bind the socket to the &quot;all interfaces&quot; address on a random port (it does the right thing for both &lt;code&gt;udp4&lt;/code&gt; and &lt;code&gt;udp6&lt;/code&gt; sockets). The bound address and port can be retrieved using &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().port&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Создает объект &lt;code&gt;dgram.Socket&lt;/code&gt; . После создания сокета вызов &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt; проинструктирует сокет начать прослушивание сообщений дейтаграммы. Когда &lt;code&gt;address&lt;/code&gt; и &lt;code&gt;port&lt;/code&gt; не передаются в &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt; метод привяжет сокет к адресу &amp;laquo;всех интерфейсов&amp;raquo; на случайном порту (это правильно как для &lt;code&gt;udp4&lt;/code&gt; и для &lt;code&gt;udp6&lt;/code&gt; ). Связанный адрес и порт можно получить с помощью &lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().address&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().port&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7193d4ef1dae3396c91e4d9d8130268717e69bd" translate="yes" xml:space="preserve">
          <source>Creates a code cache that can be used with the &lt;code&gt;Script&lt;/code&gt; constructor's &lt;code&gt;cachedData&lt;/code&gt; option. Returns a &lt;code&gt;Buffer&lt;/code&gt;. This method may be called at any time and any number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57645e834344545789ed737f1dfabbdb7b7fc6bb" translate="yes" xml:space="preserve">
          <source>Creates a code cache that can be used with the &lt;code&gt;SourceTextModule&lt;/code&gt; constructor's &lt;code&gt;cachedData&lt;/code&gt; option. Returns a &lt;code&gt;Buffer&lt;/code&gt;. This method may be called any number of times before the module has been evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15582251fcfe3743db495b81d51ed26272aa3de" translate="yes" xml:space="preserve">
          <source>Creates a code cache that can be used with the Script constructor's &lt;code&gt;cachedData&lt;/code&gt; option. Returns a Buffer. This method may be called at any time and any number of times.</source>
          <target state="translated">Создает кеш кода, который можно использовать с параметром &lt;code&gt;cachedData&lt;/code&gt; конструктора Script . Возвращает буфер. Этот метод можно вызывать в любое время и любое количество раз.</target>
        </trans-unit>
        <trans-unit id="bb46a1832e50ec07e277c4b0cf6fea0d3c2288c9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#assert_class_assert_calltracker&quot;&gt;&lt;code&gt;CallTracker&lt;/code&gt;&lt;/a&gt; object which can be used to track if functions were called a specific number of times. The &lt;code&gt;tracker.verify()&lt;/code&gt; must be called for the verification to take place. The usual pattern would be to call it in a &lt;a href=&quot;process#process_event_exit&quot;&gt;&lt;code&gt;process.on('exit')&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf2b8c4ea0eb4eefc28ec317ad6837af1158c25" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#tls_class_tls_server&quot;&gt;&lt;code&gt;tls.Server&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;secureConnectionListener&lt;/code&gt;, if provided, is automatically set as a listener for the &lt;a href=&quot;#tls_event_secureconnection&quot;&gt;&lt;code&gt;'secureConnection'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Создает новый &lt;a href=&quot;#tls_class_tls_server&quot;&gt; &lt;code&gt;tls.Server&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;secureConnectionListener&lt;/code&gt; , если это предусмотрено, автоматически устанавливается в качестве слушателя для &lt;a href=&quot;#tls_event_secureconnection&quot;&gt; &lt;code&gt;'secureConnection'&lt;/code&gt; &lt;/a&gt; события.</target>
        </trans-unit>
        <trans-unit id="d173b01aad9dfdc8a52f33573498da41307864c8" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Buffer&lt;/code&gt; containing &lt;code&gt;string&lt;/code&gt;. The &lt;code&gt;encoding&lt;/code&gt; parameter identifies the character encoding of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Создает новый &lt;code&gt;Buffer&lt;/code&gt; содержащий &lt;code&gt;string&lt;/code&gt; . Параметр &lt;code&gt;encoding&lt;/code&gt; определяет кодировку символов &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9856649ee604c511286b6abf88c530a2f5a548a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Buffer&lt;/code&gt; containing &lt;code&gt;string&lt;/code&gt;. The &lt;code&gt;encoding&lt;/code&gt; parameter identifies the character encoding to be used when converting &lt;code&gt;string&lt;/code&gt; into bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf51154b8c41364cbbddecade887b89d2c6563a4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Console&lt;/code&gt; with one or two writable stream instances. &lt;code&gt;stdout&lt;/code&gt; is a writable stream to print log or info output. &lt;code&gt;stderr&lt;/code&gt; is used for warning or error output. If &lt;code&gt;stderr&lt;/code&gt; is not provided, &lt;code&gt;stdout&lt;/code&gt; is used for &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">Создает новую &lt;code&gt;Console&lt;/code&gt; с одним или двумя доступными для записи экземплярами потока. &lt;code&gt;stdout&lt;/code&gt; - это поток с возможностью записи для вывода журнала или информации. &lt;code&gt;stderr&lt;/code&gt; используется для вывода предупреждений или ошибок. Если &lt;code&gt;stderr&lt;/code&gt; не указан, &lt;code&gt;stdout&lt;/code&gt; используется для &lt;code&gt;stderr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d4e1d962e7f5b123017efe6e420af0a8aac8274" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Deserializer&lt;/code&gt; object.</source>
          <target state="translated">Создает новый объект &lt;code&gt;Deserializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7872b5d87fca267c6b8f4b8e93ec4b1a28842ac9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Error&lt;/code&gt; object and sets the &lt;code&gt;error.message&lt;/code&gt; property to the provided text message. If an object is passed as &lt;code&gt;message&lt;/code&gt;, the text message is generated by calling &lt;code&gt;message.toString()&lt;/code&gt;. The &lt;code&gt;error.stack&lt;/code&gt; property will represent the point in the code at which &lt;code&gt;new Error()&lt;/code&gt; was called. Stack traces are dependent on &lt;a href=&quot;https://github.com/v8/v8/wiki/Stack-Trace-API&quot;&gt;V8's stack trace API&lt;/a&gt;. Stack traces extend only to either (a) the beginning of &lt;em&gt;synchronous code execution&lt;/em&gt;, or (b) the number of frames given by the property &lt;code&gt;Error.stackTraceLimit&lt;/code&gt;, whichever is smaller.</source>
          <target state="translated">Создает новый объект &lt;code&gt;Error&lt;/code&gt; и устанавливает свойство &lt;code&gt;error.message&lt;/code&gt; для предоставленного текстового сообщения. Если объект передается как &lt;code&gt;message&lt;/code&gt; , текстовое сообщение создается путем вызова &lt;code&gt;message.toString()&lt;/code&gt; . Свойство &lt;code&gt;error.stack&lt;/code&gt; будет представлять точку в коде, в которой был вызван &lt;code&gt;new Error()&lt;/code&gt; . &lt;a href=&quot;https://github.com/v8/v8/wiki/Stack-Trace-API&quot;&gt;Трассировка стека&lt;/a&gt; зависит от API трассировки стека V8 . Трассировки стека распространяются только на (а) начало &lt;em&gt;синхронного выполнения кода&lt;/em&gt; или (б) количество кадров, заданное свойством &lt;code&gt;Error.stackTraceLimit&lt;/code&gt; , в зависимости от того, что меньше.</target>
        </trans-unit>
        <trans-unit id="c67c9a49f8d245b9dab680a12fa5bb47d1022d46" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Hash&lt;/code&gt; object that contains a deep copy of the internal state of the current &lt;code&gt;Hash&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f35e67567b47c684eeffac3d1e66e7c87f030a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;PerformanceMark&lt;/code&gt; entry in the Performance Timeline. A &lt;code&gt;PerformanceMark&lt;/code&gt; is a subclass of &lt;code&gt;PerformanceEntry&lt;/code&gt; whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is always &lt;code&gt;'mark'&lt;/code&gt;, and whose &lt;code&gt;performanceEntry.duration&lt;/code&gt; is always &lt;code&gt;0&lt;/code&gt;. Performance marks are used to mark specific significant moments in the Performance Timeline.</source>
          <target state="translated">Создает новый &lt;code&gt;PerformanceMark&lt;/code&gt; запись в Performance Timeline. &lt;code&gt;PerformanceMark&lt;/code&gt; подкласс &lt;code&gt;PerformanceEntry&lt;/code&gt; которого &lt;code&gt;performanceEntry.entryType&lt;/code&gt; всегда &lt;code&gt;'mark'&lt;/code&gt; , и которого &lt;code&gt;performanceEntry.duration&lt;/code&gt; всегда &lt;code&gt;0&lt;/code&gt; . Отметки исполнения используются для обозначения определенных важных моментов на шкале времени исполнения.</target>
        </trans-unit>
        <trans-unit id="a9c508f0e96dc24226b4b314d31b9faf4350b538" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;PerformanceMeasure&lt;/code&gt; entry in the Performance Timeline. A &lt;code&gt;PerformanceMeasure&lt;/code&gt; is a subclass of &lt;code&gt;PerformanceEntry&lt;/code&gt; whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is always &lt;code&gt;'measure'&lt;/code&gt;, and whose &lt;code&gt;performanceEntry.duration&lt;/code&gt; measures the number of milliseconds elapsed since &lt;code&gt;startMark&lt;/code&gt; and &lt;code&gt;endMark&lt;/code&gt;.</source>
          <target state="translated">Создает новый &lt;code&gt;PerformanceMeasure&lt;/code&gt; запись в Performance Timeline. &lt;code&gt;PerformanceMeasure&lt;/code&gt; подкласс &lt;code&gt;PerformanceEntry&lt;/code&gt; которого &lt;code&gt;performanceEntry.entryType&lt;/code&gt; всегда &lt;code&gt;'measure'&lt;/code&gt; , и чье &lt;code&gt;performanceEntry.duration&lt;/code&gt; измеряет количество миллисекунд , прошедшее с момента &lt;code&gt;startMark&lt;/code&gt; и &lt;code&gt;endMark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba42bd2ef1522141d74454b4c85fc78b302b41e0" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Serializer&lt;/code&gt; object.</source>
          <target state="translated">Создает новый объект &lt;code&gt;Serializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="587a1edcd84fa14d185b744d17dddfb457d6fe96" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SourceTextModule&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3d7fd224b9e2172664c9deee0c85084b49b0b3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;StringDecoder&lt;/code&gt; instance.</source>
          <target state="translated">Создает новый экземпляр &lt;code&gt;StringDecoder&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e57e0c62b11066d4c81295403c6d96703484378e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SyntheticModule&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87db8396c574fc6b711f2bac00caa7973058f54e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;URL&lt;/code&gt; object by parsing the &lt;code&gt;input&lt;/code&gt; relative to the &lt;code&gt;base&lt;/code&gt;. If &lt;code&gt;base&lt;/code&gt; is passed as a string, it will be parsed equivalent to &lt;code&gt;new URL(base)&lt;/code&gt;.</source>
          <target state="translated">Создает новый объект &lt;code&gt;URL&lt;/code&gt; , анализируя &lt;code&gt;input&lt;/code&gt; относительно &lt;code&gt;base&lt;/code&gt; . Если &lt;code&gt;base&lt;/code&gt; передается как строка, она будет проанализирована как &lt;code&gt;new URL(base)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c50716411a3db17d970b33b214901d027924525" translate="yes" xml:space="preserve">
          <source>Creates a new ES &lt;code&gt;Module&lt;/code&gt; object.</source>
          <target state="translated">Создает новый объект ES &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b032e823eb03edd65ef1ba7c46ebbb6f8de2a82" translate="yes" xml:space="preserve">
          <source>Creates a new TCP or &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; server.</source>
          <target state="translated">Создает новый сервер TCP или &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4dbd2af6c1d9d533ef1ebccd2bbd37f35e55cca2" translate="yes" xml:space="preserve">
          <source>Creates a new instance of &lt;code&gt;AsyncLocalStorage&lt;/code&gt;. Store is only provided within a &lt;code&gt;run&lt;/code&gt; method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e776f7fa7e23615b2d8bf8c1ff1d7b5837a9c840" translate="yes" xml:space="preserve">
          <source>Creates a new secure pair object with two streams, one of which reads and writes the encrypted data and the other of which reads and writes the cleartext data. Generally, the encrypted stream is piped to/from an incoming encrypted data stream and the cleartext one is used as a replacement for the initial encrypted stream.</source>
          <target state="translated">Создает новую защищенную пару объектов с двумя потоками,один из которых читает и записывает зашифрованные данные,а другой читает и записывает данные в чистом тексте.Как правило,зашифрованный поток передается в/из входящего зашифрованного потока данных,а чистый текст используется как замена исходному зашифрованному потоку.</target>
        </trans-unit>
        <trans-unit id="acc52bfbed8482fc6bbd3689ddd2a9ebbfb324c3" translate="yes" xml:space="preserve">
          <source>Creates a new socket object.</source>
          <target state="translated">Создает новый объект гнезда.</target>
        </trans-unit>
        <trans-unit id="2f6e7b9d4b6897b9e7c68dd1a7dc11dc7bc6d632" translate="yes" xml:space="preserve">
          <source>Creates a predefined &lt;code&gt;DiffieHellman&lt;/code&gt; key exchange object. The supported groups are: &lt;code&gt;'modp1'&lt;/code&gt;, &lt;code&gt;'modp2'&lt;/code&gt;, &lt;code&gt;'modp5'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412&lt;/a&gt;, but see &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;Caveats&lt;/a&gt;) and &lt;code&gt;'modp14'&lt;/code&gt;, &lt;code&gt;'modp15'&lt;/code&gt;, &lt;code&gt;'modp16'&lt;/code&gt;, &lt;code&gt;'modp17'&lt;/code&gt;, &lt;code&gt;'modp18'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC 3526&lt;/a&gt;). The returned object mimics the interface of objects created by &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt;&lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt;&lt;/a&gt;, but will not allow changing the keys (with &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt;&lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt;&lt;/a&gt;, for example). The advantage of using this method is that the parties do not have to generate nor exchange a group modulus beforehand, saving both processor and communication time.</source>
          <target state="translated">Создает предопределенный &lt;code&gt;DiffieHellman&lt;/code&gt; обмена ключами DiffieHellman . Поддерживаемые группы: &lt;code&gt;'modp1'&lt;/code&gt; , &lt;code&gt;'modp2'&lt;/code&gt; , &lt;code&gt;'modp5'&lt;/code&gt; (определено в &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412&lt;/a&gt; , но см. &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;Предостережения&lt;/a&gt; ) и &lt;code&gt;'modp14'&lt;/code&gt; , &lt;code&gt;'modp15'&lt;/code&gt; , &lt;code&gt;'modp16'&lt;/code&gt; , &lt;code&gt;'modp17'&lt;/code&gt; , &lt;code&gt;'modp18'&lt;/code&gt; (определено в &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC 3526&lt;/a&gt; ). &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt; &lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt; &lt;/a&gt; объект имитирует интерфейс объектов, созданных с помощью crypto.createDiffieHellman () , но не позволяет изменять ключи (с помощью &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt; &lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt; &lt;/a&gt;, например). Преимущество использования этого метода заключается в том, что сторонам не нужно заранее генерировать и обмениваться групповым модулем, что экономит время процессора и связи.</target>
        </trans-unit>
        <trans-unit id="f8d79cb2af056655426725adb6ac8e4701a23b4d" translate="yes" xml:space="preserve">
          <source>Creates a predefined &lt;code&gt;DiffieHellmanGroup&lt;/code&gt; key exchange object. The supported groups are: &lt;code&gt;'modp1'&lt;/code&gt;, &lt;code&gt;'modp2'&lt;/code&gt;, &lt;code&gt;'modp5'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412&lt;/a&gt;, but see &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;Caveats&lt;/a&gt;) and &lt;code&gt;'modp14'&lt;/code&gt;, &lt;code&gt;'modp15'&lt;/code&gt;, &lt;code&gt;'modp16'&lt;/code&gt;, &lt;code&gt;'modp17'&lt;/code&gt;, &lt;code&gt;'modp18'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC 3526&lt;/a&gt;). The returned object mimics the interface of objects created by &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt;&lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt;&lt;/a&gt;, but will not allow changing the keys (with &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt;&lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt;&lt;/a&gt;, for example). The advantage of using this method is that the parties do not have to generate nor exchange a group modulus beforehand, saving both processor and communication time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae01e34f86babf6cfc9d4db217d4b26f757b780" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Создает символическую ссылку, затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="f22c81c47e49011fd378be15776a8ba7f151511f" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory and resolves the &lt;code&gt;Promise&lt;/code&gt; with the created directory path. A unique directory name is generated by appending six random characters to the end of the provided &lt;code&gt;prefix&lt;/code&gt;. Due to platform inconsistencies, avoid trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt;. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt; with random characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbfeb5ffe7100c76afddc5e2c44f9500b4a53f4" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory and resolves the &lt;code&gt;Promise&lt;/code&gt; with the created folder path. A unique directory name is generated by appending six random characters to the end of the provided &lt;code&gt;prefix&lt;/code&gt;. Due to platform inconsistencies, avoid trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt;. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt; with random characters.</source>
          <target state="translated">Создает уникальный временный каталог и разрешает &lt;code&gt;Promise&lt;/code&gt; с созданным путем к папке. Уникальное имя каталога создается путем добавления шести случайных символов в конец предоставленного &lt;code&gt;prefix&lt;/code&gt; . Из-за несогласованности платформы избегайте завершающих символов &lt;code&gt;X&lt;/code&gt; в &lt;code&gt;prefix&lt;/code&gt; . Некоторые платформы, в частности BSD, могут возвращать более шести случайных символов и заменять завершающие символы &lt;code&gt;X&lt;/code&gt; в &lt;code&gt;prefix&lt;/code&gt; случайными символами.</target>
        </trans-unit>
        <trans-unit id="f7800e1b0e924145a98553afbc8fdeebd911cc03" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory.</source>
          <target state="translated">Создает уникальный временный каталог.</target>
        </trans-unit>
        <trans-unit id="ecbf31f66cfc0a7cc849a453a5544be34ade1f8b" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;#fs_class_fs_dir&quot;&gt;&lt;code&gt;fs.Dir&lt;/code&gt;&lt;/a&gt;, which contains all further functions for reading from and cleaning up the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefff0ae1012c84ba50832c935ee6a4688705cf8" translate="yes" xml:space="preserve">
          <source>Creates an Elliptic Curve Diffie-Hellman (&lt;code&gt;ECDH&lt;/code&gt;) key exchange object using a predefined curve specified by the &lt;code&gt;curveName&lt;/code&gt; string. Use &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt;&lt;code&gt;crypto.getCurves()&lt;/code&gt;&lt;/a&gt; to obtain a list of available curve names. On recent OpenSSL releases, &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; will also display the name and description of each available elliptic curve.</source>
          <target state="translated">Создает объект обмена ключами Elliptic Curve Diffie-Hellman ( &lt;code&gt;ECDH&lt;/code&gt; ), используя предопределенную кривую, заданную строкой &lt;code&gt;curveName&lt;/code&gt; . Используйте &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt; &lt;code&gt;crypto.getCurves()&lt;/code&gt; &lt;/a&gt; чтобы получить список доступных имен кривых. В последних выпусках OpenSSL &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; также будет отображать имя и описание каждой доступной эллиптической кривой.</target>
        </trans-unit>
        <trans-unit id="3ff0f91d2c8c792bd5d5ecdc7c9fce7305188495" translate="yes" xml:space="preserve">
          <source>Creates an new &lt;code&gt;TextDecoder&lt;/code&gt; instance. The &lt;code&gt;encoding&lt;/code&gt; may specify one of the supported encodings or an alias.</source>
          <target state="translated">Создает новый экземпляр &lt;code&gt;TextDecoder&lt;/code&gt; . &lt;code&gt;encoding&lt;/code&gt; может указать один из поддерживаемых кодировок или псевдонима.</target>
        </trans-unit>
        <trans-unit id="4f8dd7aadaa774fd3a0ee0850e1bf1a2d26e9d0b" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Cipher&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;.</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Cipher&lt;/code&gt; , который использует заданный &lt;code&gt;algorithm&lt;/code&gt; и &lt;code&gt;password&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97d96bcb151743f1ae0f093f6fb0b4c794492163" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Cipher&lt;/code&gt; object, with the given &lt;code&gt;algorithm&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and initialization vector (&lt;code&gt;iv&lt;/code&gt;).</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Cipher&lt;/code&gt; с заданным &lt;code&gt;algorithm&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt; и вектором инициализации ( &lt;code&gt;iv&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="86bfab5bc0d4753aa7e45ac9e9b549b256f27690" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Decipher&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; (key).</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Decipher&lt;/code&gt; , который использует заданный &lt;code&gt;algorithm&lt;/code&gt; и &lt;code&gt;password&lt;/code&gt; (ключ).</target>
        </trans-unit>
        <trans-unit id="05daf002c0718e44663e4dfbf83d75c2601dca76" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Decipher&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and initialization vector (&lt;code&gt;iv&lt;/code&gt;).</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Decipher&lt;/code&gt; , который использует заданный &lt;code&gt;algorithm&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt; и вектор инициализации ( &lt;code&gt;iv&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dfbe3921bacab7503435332811688b212f7c21c0" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Hash&lt;/code&gt; object that can be used to generate hash digests using the given &lt;code&gt;algorithm&lt;/code&gt;. Optional &lt;code&gt;options&lt;/code&gt; argument controls stream behavior. For XOF hash functions such as &lt;code&gt;'shake256'&lt;/code&gt;, the &lt;code&gt;outputLength&lt;/code&gt; option can be used to specify the desired output length in bytes.</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Hash&lt;/code&gt; , который можно использовать для генерации хеш-дайджестов с использованием заданного &lt;code&gt;algorithm&lt;/code&gt; . Необязательный аргумент &lt;code&gt;options&lt;/code&gt; управляет поведением потока. Для хэш-функций XOF, таких как &lt;code&gt;'shake256'&lt;/code&gt; , можно использовать параметр &lt;code&gt;outputLength&lt;/code&gt; , чтобы указать желаемую длину вывода в байтах.</target>
        </trans-unit>
        <trans-unit id="0f23e8a3f43c21c2627b1021a92c09d404368794" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Sign&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt;. Use &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt;&lt;code&gt;crypto.getHashes()&lt;/code&gt;&lt;/a&gt; to obtain the names of the available digest algorithms. Optional &lt;code&gt;options&lt;/code&gt; argument controls the &lt;code&gt;stream.Writable&lt;/code&gt; behavior.</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Sign&lt;/code&gt; , который использует данный &lt;code&gt;algorithm&lt;/code&gt; . Используйте &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt; &lt;code&gt;crypto.getHashes()&lt;/code&gt; &lt;/a&gt; чтобы получить имена доступных алгоритмов дайджеста. Необязательный аргумент &lt;code&gt;options&lt;/code&gt; управляет поведением &lt;code&gt;stream.Writable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd8bf2612bd86aa139c5b56cd0caf9506739a20c" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Tracing&lt;/code&gt; object for the given set of &lt;code&gt;categories&lt;/code&gt;.</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Tracing&lt;/code&gt; для заданного набора &lt;code&gt;categories&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db92d150d8909efcd50b9a4bd6b14b435b57c1dd" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Verify&lt;/code&gt; object that uses the given algorithm. Use &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt;&lt;code&gt;crypto.getHashes()&lt;/code&gt;&lt;/a&gt; to obtain an array of names of the available signing algorithms. Optional &lt;code&gt;options&lt;/code&gt; argument controls the &lt;code&gt;stream.Writable&lt;/code&gt; behavior.</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Verify&lt;/code&gt; , который использует данный алгоритм. Используйте &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt; &lt;code&gt;crypto.getHashes()&lt;/code&gt; &lt;/a&gt; чтобы получить массив имен доступных алгоритмов подписи. Необязательный аргумент &lt;code&gt;options&lt;/code&gt; управляет поведением &lt;code&gt;stream.Writable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db710d2a72118c7d92a15e1433250866576f2fd1" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt;&lt;code&gt;BrotliCompress&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt; &lt;code&gt;BrotliCompress&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="910bb78abfc9a859998a74678c629277026f290c" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_brotlidecompress&quot;&gt;&lt;code&gt;BrotliDecompress&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_brotlidecompress&quot;&gt; &lt;code&gt;BrotliDecompress&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c7288d6bb60992c5befb81b2d42446effa47b79" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41a2248d33fcee16a941bdea0fc7e6525918416b" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt;&lt;code&gt;DeflateRaw&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt; &lt;code&gt;DeflateRaw&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0dbf195d9c9fbc21046c761cbdadb545f1837e17" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_gunzip&quot;&gt;&lt;code&gt;Gunzip&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_gunzip&quot;&gt; &lt;code&gt;Gunzip&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95f22b4640ff2203f5e47db51892eb380fccfe3d" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt;&lt;code&gt;Gzip&lt;/code&gt;&lt;/a&gt; object. See &lt;a href=&quot;#zlib_zlib&quot;&gt;example&lt;/a&gt;.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt; &lt;code&gt;Gzip&lt;/code&gt; &lt;/a&gt; . См. &lt;a href=&quot;#zlib_zlib&quot;&gt;Пример&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b2da6e5b341be788ca6de1b30803c698d0b7575" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_inflate&quot;&gt;&lt;code&gt;Inflate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_inflate&quot;&gt; &lt;code&gt;Inflate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2daa256748e8e5fe70fda4713de295ebbf30735" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_inflateraw&quot;&gt;&lt;code&gt;InflateRaw&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_inflateraw&quot;&gt; &lt;code&gt;InflateRaw&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43b4d69666843c880b0a8ce0fb473fd3f4499f9c" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_unzip&quot;&gt;&lt;code&gt;Unzip&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Создает и возвращает новый объект &lt;a href=&quot;#zlib_class_zlib_unzip&quot;&gt; &lt;code&gt;Unzip&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7cea4a3ecf372d6ec7165bb99279d250e5b23609" translate="yes" xml:space="preserve">
          <source>Creates and returns a new key object containing a private key. If &lt;code&gt;key&lt;/code&gt; is a string or &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt; is assumed to be &lt;code&gt;'pem'&lt;/code&gt;; otherwise, &lt;code&gt;key&lt;/code&gt; must be an object with the properties described above.</source>
          <target state="translated">Создает и возвращает новый ключевой объект, содержащий закрытый ключ. Если &lt;code&gt;key&lt;/code&gt; является строкой или &lt;code&gt;Buffer&lt;/code&gt; , предполагается &lt;code&gt;format&lt;/code&gt; &lt;code&gt;'pem'&lt;/code&gt; ; в противном случае &lt;code&gt;key&lt;/code&gt; должен быть объектом со свойствами, описанными выше.</target>
        </trans-unit>
        <trans-unit id="c804ec74ed5f02d037070d65a57297f0eea24d7c" translate="yes" xml:space="preserve">
          <source>Creates and returns a new key object containing a public key. If &lt;code&gt;key&lt;/code&gt; is a string or &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt; is assumed to be &lt;code&gt;'pem'&lt;/code&gt;; if &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'private'&lt;/code&gt;, the public key is derived from the given private key; otherwise, &lt;code&gt;key&lt;/code&gt; must be an object with the properties described above.</source>
          <target state="translated">Создает и возвращает новый ключевой объект, содержащий открытый ключ. Если &lt;code&gt;key&lt;/code&gt; является строкой или &lt;code&gt;Buffer&lt;/code&gt; , предполагается &lt;code&gt;format&lt;/code&gt; &lt;code&gt;'pem'&lt;/code&gt; ; если &lt;code&gt;key&lt;/code&gt; является &lt;code&gt;KeyObject&lt;/code&gt; с типом &lt;code&gt;'private'&lt;/code&gt; , открытый ключ является производным от данного закрытого ключа; в противном случае &lt;code&gt;key&lt;/code&gt; должен быть объектом со свойствами, описанными выше.</target>
        </trans-unit>
        <trans-unit id="5437727c2dcdf3fb4e73b69e059be356a7c50e80" translate="yes" xml:space="preserve">
          <source>Creates and returns a new key object containing a secret key for symmetric encryption or &lt;code&gt;Hmac&lt;/code&gt;.</source>
          <target state="translated">Создает и возвращает новый объект ключа, содержащий секретный ключ для симметричного шифрования или &lt;code&gt;Hmac&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="046fe71abcb910163bfbfce07bf64001443712d8" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterator&lt;/a&gt; for &lt;code&gt;buf&lt;/code&gt; values (bytes). This function is called automatically when a &lt;code&gt;Buffer&lt;/code&gt; is used in a &lt;code&gt;for..of&lt;/code&gt; statement.</source>
          <target state="translated">Создает и возвращает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;итератор&lt;/a&gt; для значений &lt;code&gt;buf&lt;/code&gt; (байтов). Эта функция вызывается автоматически, когда &lt;code&gt;Buffer&lt;/code&gt; используется в операторе &lt;code&gt;for..of&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d62268c7950db94b9a92f74779207323cdc52e9" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterator&lt;/a&gt; of &lt;code&gt;[index, byte]&lt;/code&gt; pairs from the contents of &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">Создает и возвращает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;итератор&lt;/a&gt; из &lt;code&gt;[index, byte]&lt;/code&gt; пар из содержимого &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c8f73eabddcfa4986a12c810155d3dac99e6ef8" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterator&lt;/a&gt; of &lt;code&gt;buf&lt;/code&gt; keys (indices).</source>
          <target state="translated">Создает и возвращает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;итератор&lt;/a&gt; из &lt;code&gt;buf&lt;/code&gt; ключей (индексов).</target>
        </trans-unit>
        <trans-unit id="f696e266ec1284b435f285957d301e9a5ca61ca1" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;code&gt;Hmac&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;. Optional &lt;code&gt;options&lt;/code&gt; argument controls stream behavior.</source>
          <target state="translated">Создает и возвращает объект &lt;code&gt;Hmac&lt;/code&gt; , который использует данный &lt;code&gt;algorithm&lt;/code&gt; и &lt;code&gt;key&lt;/code&gt; . Необязательный аргумент &lt;code&gt;options&lt;/code&gt; управляет поведением потока.</target>
        </trans-unit>
        <trans-unit id="f41c5af14aa6a079567de94c5e39061124b3400f" translate="yes" xml:space="preserve">
          <source>Creating &lt;code&gt;Worker&lt;/code&gt; instances inside of other &lt;code&gt;Worker&lt;/code&gt;s is possible.</source>
          <target state="translated">Возможно создание экземпляров &lt;code&gt;Worker&lt;/code&gt; внутри других &lt;code&gt;Worker&lt;/code&gt; 'ов .</target>
        </trans-unit>
        <trans-unit id="4b302ceb28568307311ff1b214724fe907d6ece1" translate="yes" xml:space="preserve">
          <source>Creating Readable Streams with Async Generators</source>
          <target state="translated">Создание читаемых потоков с помощью генераторов Async</target>
        </trans-unit>
        <trans-unit id="5bb4d1497f2be8242e2bd704d3afed44f8d9b22c" translate="yes" xml:space="preserve">
          <source>Creating a new &lt;code&gt;vm.Script&lt;/code&gt; object compiles &lt;code&gt;code&lt;/code&gt; but does not run it. The compiled &lt;code&gt;vm.Script&lt;/code&gt; can be run later multiple times. The &lt;code&gt;code&lt;/code&gt; is not bound to any global object; rather, it is bound before each run, just for that run.</source>
          <target state="translated">При создании нового объекта &lt;code&gt;vm.Script&lt;/code&gt; &lt;code&gt;code&lt;/code&gt; компилируется, но не запускается. Скомпилированный &lt;code&gt;vm.Script&lt;/code&gt; можно запускать позже несколько раз. &lt;code&gt;code&lt;/code&gt; не привязан к какому - либо глобальному объекту; скорее, он привязывается перед каждым запуском только для этого запуска.</target>
        </trans-unit>
        <trans-unit id="d4a1fc8d2739887fb7436a40a98232e2d08acef8" translate="yes" xml:space="preserve">
          <source>Creating a new resolver uses the default server settings. Setting the servers used for a resolver using &lt;a href=&quot;#dns_dns_setservers_servers&quot;&gt;&lt;code&gt;resolver.setServers()&lt;/code&gt;&lt;/a&gt; does not affect other resolvers:</source>
          <target state="translated">При создании нового распознавателя используются настройки сервера по умолчанию. Установка серверов, используемых для распознавателя с помощью &lt;a href=&quot;#dns_dns_setservers_servers&quot;&gt; &lt;code&gt;resolver.setServers()&lt;/code&gt; &lt;/a&gt; , не влияет на другие распознаватели:</target>
        </trans-unit>
        <trans-unit id="c9898857154be7c693dd6c4e5c9e30b390179899" translate="yes" xml:space="preserve">
          <source>Creating a new resolver uses the default server settings. Setting the servers used for a resolver using &lt;a href=&quot;#dns_dnspromises_setservers_servers&quot;&gt;&lt;code&gt;resolver.setServers()&lt;/code&gt;&lt;/a&gt; does not affect other resolvers:</source>
          <target state="translated">При создании нового распознавателя используются настройки сервера по умолчанию. Установка серверов, используемых для распознавателя с помощью &lt;a href=&quot;#dns_dnspromises_setservers_servers&quot;&gt; &lt;code&gt;resolver.setServers()&lt;/code&gt; &lt;/a&gt; , не влияет на другие распознаватели:</target>
        </trans-unit>
        <trans-unit id="859af298e2258f383cb18d630c5f7ad1a78e291c" translate="yes" xml:space="preserve">
          <source>Creating a self-signed certificate using the OpenSSL command-line interface is illustrated in the example below:</source>
          <target state="translated">Создание самоподписанного сертификата с использованием интерфейса командной строки OpenSSL проиллюстрировано в примере ниже:</target>
        </trans-unit>
        <trans-unit id="281ff6a3059c1f6ed0a254ee0efd442720f6b82b" translate="yes" xml:space="preserve">
          <source>Creating and maintaining an addon that benefits from the ABI stability provided by N-API carries with it certain &lt;a href=&quot;n-api#n_api_implications_of_abi_stability&quot;&gt;implementation considerations&lt;/a&gt;.</source>
          <target state="translated">Создание и поддержка аддона, который выигрывает от стабильности ABI, обеспечиваемой N-API, требует определенных рекомендаций по &lt;a href=&quot;n-api#n_api_implications_of_abi_stability&quot;&gt;реализации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa98474d743dc0bd7f4857bf4b6965f5277b0de4" translate="yes" xml:space="preserve">
          <source>Creating and using a large number of zlib objects simultaneously can cause significant memory fragmentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0a57380932f79f428705fed6a1ebb839a37af1" translate="yes" xml:space="preserve">
          <source>Creating readable streams with async generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="e158a0e5361840fbb27d9dee0315ebf553283bc3" translate="yes" xml:space="preserve">
          <source>Creation of a &lt;a href=&quot;zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; object failed due to incorrect configuration.</source>
          <target state="translated">Не удалось создать объект &lt;a href=&quot;zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; из-за неправильной конфигурации.</target>
        </trans-unit>
        <trans-unit id="e849494484ed2e3c1a93babc3e347d2e98ac8604" translate="yes" xml:space="preserve">
          <source>Crypto</source>
          <target state="translated">Crypto</target>
        </trans-unit>
        <trans-unit id="ad966676447bf067d6159b58c8d9636c78cf1a40" translate="yes" xml:space="preserve">
          <source>Crypto Constants</source>
          <target state="translated">криптоконстанты</target>
        </trans-unit>
        <trans-unit id="795698fe57c8b1e6fd6479044f1c39874bf87cc0" translate="yes" xml:space="preserve">
          <source>Crypto constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9654ee1c347773162335e16a3dc47973dae4c65c" translate="yes" xml:space="preserve">
          <source>CryptoStream</source>
          <target state="translated">CryptoStream</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="de46ae766f89cea388f24245e2d74391f4232814" translate="yes" xml:space="preserve">
          <source>Currently importing JSON modules are only supported in the &lt;code&gt;commonjs&lt;/code&gt; mode and are loaded using the CJS loader. &lt;a href=&quot;https://html.spec.whatwg.org/#creating-a-json-module-script&quot;&gt;WHATWG JSON modules specification&lt;/a&gt; are still being standardized, and are experimentally supported by including the additional flag &lt;code&gt;--experimental-json-modules&lt;/code&gt; when running Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c665816aa82707fbf80cbec61ecd394e060366" translate="yes" xml:space="preserve">
          <source>Currently only the &amp;ldquo;default export&amp;rdquo; is supported for CommonJS files or packages:</source>
          <target state="translated">В настоящее время для файлов или пакетов CommonJS поддерживается только &amp;laquo;экспорт по умолчанию&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="37c61c4cb455a903ad09bf2181f46777058288c6" translate="yes" xml:space="preserve">
          <source>Currently possible values are:</source>
          <target state="translated">В настоящее время возможны значения:</target>
        </trans-unit>
        <trans-unit id="3580625f03297579863311a1444aaed2a0cd29c6" translate="yes" xml:space="preserve">
          <source>Currently two methods are commonly used to achieve Perfect Forward Secrecy (note the character &quot;E&quot; appended to the traditional abbreviations):</source>
          <target state="translated">В настоящее время для достижения Совершенства Форвардной Тайны обычно используются два метода (обратите внимание на символ &quot;E&quot;,прилагаемый к традиционным сокращениям):</target>
        </trans-unit>
        <trans-unit id="e5cb3b3c87095b5ab0527671486620718f3ae3eb" translate="yes" xml:space="preserve">
          <source>Currently two methods are commonly used to achieve perfect forward secrecy (note the character &quot;E&quot; appended to the traditional abbreviations):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c4f4eb27002360755a576ca8fb848155143a5a" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;for await...of&lt;/code&gt; loop can be a bit slower. If &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; flow and speed are both essential, a mixed approach can be applied:</source>
          <target state="translated">В настоящее время цикл &lt;code&gt;for await...of&lt;/code&gt; может быть немного медленнее. Если поток и скорость &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; важны, можно применить смешанный подход:</target>
        </trans-unit>
        <trans-unit id="5ceded851a35eec5a124a6b34f636032d3f10ef6" translate="yes" xml:space="preserve">
          <source>Currently, overriding &lt;code&gt;Error.prepareStackTrace&lt;/code&gt; is ignored when the &lt;code&gt;--enable-source-maps&lt;/code&gt; flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328afef5c7ee2861dc1344ae4feffaac29949ef9" translate="yes" xml:space="preserve">
          <source>Custom &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; implementations &lt;em&gt;may&lt;/em&gt; implement the &lt;code&gt;transform._flush()&lt;/code&gt; method. This will be called when there is no more written data to be consumed, but before the &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event is emitted signaling the end of the &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">Реализации пользовательского &lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt;&lt;em&gt; могут&lt;/em&gt; реализовывать метод &lt;code&gt;transform._flush()&lt;/code&gt; . Это будет вызываться, когда больше нет записанных данных для использования, но до того, как будет выпущено событие &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; сигнализирующее об окончании потока &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57497d360f13a585a86f864dd659757db39a08c4" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Duplex&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; constructor and implement &lt;em&gt;both&lt;/em&gt; the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;writable._write()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6a583187c72696117a6ebb5c2d5f872c9d5f8b" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Duplex&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; constructor and implement &lt;em&gt;both&lt;/em&gt; the &lt;code&gt;readable._read()&lt;/code&gt; and &lt;code&gt;writable._write()&lt;/code&gt; methods.</source>
          <target state="translated">Пользовательский &lt;code&gt;Duplex&lt;/code&gt; потоки &lt;em&gt;должны&lt;/em&gt; вызвать &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; конструктор и реализовать &lt;em&gt;как&lt;/em&gt; в &lt;code&gt;readable._read()&lt;/code&gt; и &lt;code&gt;writable._write()&lt;/code&gt; метода.</target>
        </trans-unit>
        <trans-unit id="240c12f0518b36f635f0dfcbfa82ee6afe6d1b63" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Readable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Readable([options])&lt;/code&gt; constructor and implement the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c5efe40f367d812fccf5c2f294af0f1f1a02fd" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Readable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Readable([options])&lt;/code&gt; constructor and implement the &lt;code&gt;readable._read()&lt;/code&gt; method.</source>
          <target state="translated">Настраиваемые потоки для &lt;code&gt;Readable&lt;/code&gt; &lt;em&gt;должны&lt;/em&gt; вызывать &lt;code&gt;new stream.Readable([options])&lt;/code&gt; и реализовывать метод &lt;code&gt;readable._read()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1318d112f9e1fae2312d1c3a38302040cd0ce570" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Writable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Writable([options])&lt;/code&gt; constructor and implement the &lt;code&gt;writable._write()&lt;/code&gt; and/or &lt;code&gt;writable._writev()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8651edb1971cccfdd90f17fdad43e9030a954aa2" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Writable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Writable([options])&lt;/code&gt; constructor and implement the &lt;code&gt;writable._write()&lt;/code&gt; method. The &lt;code&gt;writable._writev()&lt;/code&gt; method &lt;em&gt;may&lt;/em&gt; also be implemented.</source>
          <target state="translated">Настраиваемые &lt;code&gt;Writable&lt;/code&gt; потоки &lt;em&gt;должны&lt;/em&gt; вызывать &lt;code&gt;new stream.Writable([options])&lt;/code&gt; и реализовывать метод &lt;code&gt;writable._write()&lt;/code&gt; . Также &lt;em&gt;может&lt;/em&gt; быть реализован метод &lt;code&gt;writable._writev()&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e60d8ad094ec27952577a405e93a261987d1313" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;[util.inspect.custom](depth, opts)&lt;/code&gt; functions typically return a string but may return a value of any type that will be formatted accordingly by &lt;code&gt;util.inspect()&lt;/code&gt;.</source>
          <target state="translated">Пользовательские функции &lt;code&gt;[util.inspect.custom](depth, opts)&lt;/code&gt; обычно возвращают строку, но могут возвращать значение любого типа, которое будет соответствующим образом отформатировано с помощью &lt;code&gt;util.inspect()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="384a7e4db30f89fc72c3c090991519ba0980fa09" translate="yes" xml:space="preserve">
          <source>Custom Asynchronous Operations</source>
          <target state="translated">Пользовательские асинхронные операции</target>
        </trans-unit>
        <trans-unit id="c2d3af7ed1269787b3f905f1ebb743a5369bb1bd" translate="yes" xml:space="preserve">
          <source>Custom Evaluation Functions</source>
          <target state="translated">Пользовательские функции оценки</target>
        </trans-unit>
        <trans-unit id="1aea5483a9617e3df79bd8f3a134d8bbbe759633" translate="yes" xml:space="preserve">
          <source>Custom asynchronous operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6445c8568aa7b6058d96f0f5d2e8851cd208e442" translate="yes" xml:space="preserve">
          <source>Custom dictionaries are now supported by &lt;code&gt;InflateRaw&lt;/code&gt;.</source>
          <target state="translated">Пользовательские словари теперь поддерживаются &lt;code&gt;InflateRaw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="108963fbc6ff9a4bbd95e23e408e53066d58ec0d" translate="yes" xml:space="preserve">
          <source>Custom error validation:</source>
          <target state="translated">Настраиваемая проверка на ошибки:</target>
        </trans-unit>
        <trans-unit id="07063e3086de6ec382abcb92473cdc51cf757366" translate="yes" xml:space="preserve">
          <source>Custom evaluation functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80eb443f3ab134e25aea7fc6ba84cf767387aa29" translate="yes" xml:space="preserve">
          <source>Custom inspection functions can now return &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">Теперь пользовательские функции проверки могут возвращать &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32e5526a656dd195eb28b226185900d2a27b55d4" translate="yes" xml:space="preserve">
          <source>Custom inspection functions on Objects</source>
          <target state="translated">Функции выборочной проверки на Объектах</target>
        </trans-unit>
        <trans-unit id="3d40526999df820323c8d123006c9f7324f22910" translate="yes" xml:space="preserve">
          <source>Custom inspection functions on objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b3c107bf9cdad2c6a30640529d42a81e56b173" translate="yes" xml:space="preserve">
          <source>Custom promisified functions</source>
          <target state="translated">Пользовательские обещанные функции</target>
        </trans-unit>
        <trans-unit id="71bef58a330c9b2a591a74330fc89e9ad572480a" translate="yes" xml:space="preserve">
          <source>Custom validation object/error instance:</source>
          <target state="translated">Настраиваемый объект/эксперт проверки:</target>
        </trans-unit>
        <trans-unit id="b43b849f9ae704f1648e93a5d460cfed34c61d47" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;util.inspect&lt;/code&gt; colors</source>
          <target state="translated">Настройка цветов &lt;code&gt;util.inspect&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
