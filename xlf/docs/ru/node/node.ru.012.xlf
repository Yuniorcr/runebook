<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="95fbb303d7117ac0cc3ddd8c21e8aa6323d739de" translate="yes" xml:space="preserve">
          <source>The numeric identifier of the device containing the file.</source>
          <target state="translated">Цифровой идентификатор устройства,содержащего файл.</target>
        </trans-unit>
        <trans-unit id="5bcfd36761a1de493eeb09cab611d6b7581ca7fe" translate="yes" xml:space="preserve">
          <source>The numeric representation of the local port. For example, &lt;code&gt;80&lt;/code&gt; or &lt;code&gt;21&lt;/code&gt;.</source>
          <target state="translated">Числовое представление локального порта. Например, &lt;code&gt;80&lt;/code&gt; или &lt;code&gt;21&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="042883a8dd9e1f35f72278a7a8626cb40d0978ea" translate="yes" xml:space="preserve">
          <source>The numeric representation of the remote port. For example, &lt;code&gt;80&lt;/code&gt; or &lt;code&gt;21&lt;/code&gt;.</source>
          <target state="translated">Числовое представление удаленного порта. Например, &lt;code&gt;80&lt;/code&gt; или &lt;code&gt;21&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b62dd787bc222e91a4a0ed4bf6ba392d5a6fb778" translate="yes" xml:space="preserve">
          <source>The numeric stream identifier of this &lt;code&gt;Http2Stream&lt;/code&gt; instance. Set to &lt;code&gt;undefined&lt;/code&gt; if the stream identifier has not yet been assigned.</source>
          <target state="translated">Числовой идентификатор потока этого экземпляра &lt;code&gt;Http2Stream&lt;/code&gt; . Установите значение &lt;code&gt;undefined&lt;/code&gt; , если идентификатор потока еще не назначен.</target>
        </trans-unit>
        <trans-unit id="aa8f383702a5ceae99ce4b389c67ad72755ba3f7" translate="yes" xml:space="preserve">
          <source>The numeric user identifier of the user that owns the file (POSIX).</source>
          <target state="translated">Числовой идентификатор пользователя,которому принадлежит файл (POSIX).</target>
        </trans-unit>
        <trans-unit id="5cb1b68058d104a308062e11d73d1e40f866b4ff" translate="yes" xml:space="preserve">
          <source>The object no longer accidentally exposes native C++ bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9383b10ddf25c0ce6d97c93198a1bf00d5916ca1" translate="yes" xml:space="preserve">
          <source>The object returned by the &lt;code&gt;querystring.parse()&lt;/code&gt; method &lt;em&gt;does not&lt;/em&gt; prototypically inherit from the JavaScript &lt;code&gt;Object&lt;/code&gt;. This means that typical &lt;code&gt;Object&lt;/code&gt; methods such as &lt;code&gt;obj.toString()&lt;/code&gt;, &lt;code&gt;obj.hasOwnProperty()&lt;/code&gt;, and others are not defined and &lt;em&gt;will not work&lt;/em&gt;.</source>
          <target state="translated">Объект , возвращаемый в &lt;code&gt;querystring.parse()&lt;/code&gt; метод &lt;em&gt;не&lt;/em&gt; прототипически наследовать от JavaScript &lt;code&gt;Object&lt;/code&gt; . Это означает, что типичные методы &lt;code&gt;Object&lt;/code&gt; такие как &lt;code&gt;obj.toString()&lt;/code&gt; , &lt;code&gt;obj.hasOwnProperty()&lt;/code&gt; и другие, не определены и &lt;em&gt;не будут работать&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="be819bdae9121513238d1f9a8e195544167c627a" translate="yes" xml:space="preserve">
          <source>The object returned by the &lt;code&gt;response.getHeaders()&lt;/code&gt; method &lt;em&gt;does not&lt;/em&gt; prototypically inherit from the JavaScript &lt;code&gt;Object&lt;/code&gt;. This means that typical &lt;code&gt;Object&lt;/code&gt; methods such as &lt;code&gt;obj.toString()&lt;/code&gt;, &lt;code&gt;obj.hasOwnProperty()&lt;/code&gt;, and others are not defined and &lt;em&gt;will not work&lt;/em&gt;.</source>
          <target state="translated">Объект , возвращаемый в &lt;code&gt;response.getHeaders()&lt;/code&gt; метод &lt;em&gt;не&lt;/em&gt; прототипически наследовать от JavaScript &lt;code&gt;Object&lt;/code&gt; . Это означает, что типичные методы &lt;code&gt;Object&lt;/code&gt; такие как &lt;code&gt;obj.toString()&lt;/code&gt; , &lt;code&gt;obj.hasOwnProperty()&lt;/code&gt; и другие, не определены и &lt;em&gt;не будут работать&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4ebb203e4256fb19d4ef99599ca9b09d60bab677" translate="yes" xml:space="preserve">
          <source>The object that acts as the namespace for all W3C &lt;a href=&quot;https://webassembly.org&quot;&gt;WebAssembly&lt;/a&gt; related functionality. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot;&gt;Mozilla Developer Network&lt;/a&gt; for usage and compatibility.</source>
          <target state="translated">Объект, который действует как пространство имен для всех функций, связанных с W3C &lt;a href=&quot;https://webassembly.org&quot;&gt;WebAssembly&lt;/a&gt; . Информацию об использовании и совместимости см. В &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot;&gt;сети разработчиков Mozilla&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b541c74cc18aaa314b7c832f7d31793b35808668" translate="yes" xml:space="preserve">
          <source>The objects listed here are specific to Node.js. There are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;built-in objects&lt;/a&gt; that are part of the JavaScript language itself, which are also globally accessible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5307f8ae4e7b8daeba7438d364931e5ea281096" translate="yes" xml:space="preserve">
          <source>The objects listed here are specific to Node.js. There are a number of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;built-in objects&lt;/a&gt; that are part of the JavaScript language itself, which are also globally accessible.</source>
          <target state="translated">Перечисленные здесь объекты относятся к Node.js. Есть ряд &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;встроенных объектов,&lt;/a&gt; которые являются частью самого языка JavaScript, которые также доступны по всему миру.</target>
        </trans-unit>
        <trans-unit id="499501b23d67779dbab01a6a26119c1c65a4262b" translate="yes" xml:space="preserve">
          <source>The only attribute of a worker that cannot be set via &lt;code&gt;.setupMaster()&lt;/code&gt; is the &lt;code&gt;env&lt;/code&gt; passed to &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc78f21c4e5c2db90b51724d6195216ddadfbc62" translate="yes" xml:space="preserve">
          <source>The only attribute of a worker that cannot be set via &lt;code&gt;.setupMaster()&lt;/code&gt; is the &lt;code&gt;env&lt;/code&gt; passed to &lt;code&gt;.fork()&lt;/code&gt;.</source>
          <target state="translated">Единственный атрибут рабочего, который не может быть установлен через &lt;code&gt;.setupMaster()&lt;/code&gt; - это &lt;code&gt;env&lt;/code&gt; , переданный в &lt;code&gt;.fork()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c18120e27e4c6e292bcb271ec4406958e025cda8" translate="yes" xml:space="preserve">
          <source>The only way to know for sure that the datagram has been sent is by using a &lt;code&gt;callback&lt;/code&gt;. If an error occurs and a &lt;code&gt;callback&lt;/code&gt; is given, the error will be passed as the first argument to the &lt;code&gt;callback&lt;/code&gt;. If a &lt;code&gt;callback&lt;/code&gt; is not given, the error is emitted as an &lt;code&gt;'error'&lt;/code&gt; event on the &lt;code&gt;socket&lt;/code&gt; object.</source>
          <target state="translated">Единственный способ узнать наверняка, что дейтаграмма была отправлена, - использовать &lt;code&gt;callback&lt;/code&gt; . Если возникает ошибка и передается &lt;code&gt;callback&lt;/code&gt; , ошибка будет передана в качестве первого аргумента &lt;code&gt;callback&lt;/code&gt; . Если &lt;code&gt;callback&lt;/code&gt; не задан, ошибка выдается как событие &lt;code&gt;'error'&lt;/code&gt; в объекте &lt;code&gt;socket&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7647e89cb4fdb8b632085740a5be4e8b940e567a" translate="yes" xml:space="preserve">
          <source>The operating system CPU architecture for which the Node.js binary was compiled. Possible values are: &lt;code&gt;'arm'&lt;/code&gt;, &lt;code&gt;'arm64'&lt;/code&gt;, &lt;code&gt;'ia32'&lt;/code&gt;, &lt;code&gt;'mips'&lt;/code&gt;,&lt;code&gt;'mipsel'&lt;/code&gt;, &lt;code&gt;'ppc'&lt;/code&gt;, &lt;code&gt;'ppc64'&lt;/code&gt;, &lt;code&gt;'s390'&lt;/code&gt;, &lt;code&gt;'s390x'&lt;/code&gt;, &lt;code&gt;'x32'&lt;/code&gt;, and &lt;code&gt;'x64'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576168f18bf6a9c771bad8bf0ef707c41bacf3dc" translate="yes" xml:space="preserve">
          <source>The operating system-specific end-of-line marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad3e7e145c0e7190f2d6920ff4570771b7cd38d" translate="yes" xml:space="preserve">
          <source>The opposite of &lt;a href=&quot;#domain_domain_add_emitter&quot;&gt;&lt;code&gt;domain.add(emitter)&lt;/code&gt;&lt;/a&gt;. Removes domain handling from the specified emitter.</source>
          <target state="translated">Противоположность &lt;a href=&quot;#domain_domain_add_emitter&quot;&gt; &lt;code&gt;domain.add(emitter)&lt;/code&gt; &lt;/a&gt; . Удаляет обработку домена из указанного эмиттера.</target>
        </trans-unit>
        <trans-unit id="caab31fb22afb4b240d3935cb5134e9f4f33d038" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;byteOffset&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; arguments specify a memory range within the &lt;code&gt;arrayBuffer&lt;/code&gt; that will be shared by the &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Необязательные аргументы &lt;code&gt;byteOffset&lt;/code&gt; и &lt;code&gt;length&lt;/code&gt; указывают диапазон памяти в &lt;code&gt;arrayBuffer&lt;/code&gt; , который будет использоваться &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4cce0bb94cb39d36b419142e4a7c61c1067e805" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;callback&lt;/code&gt; argument can be used to replace the logging function with a different function that doesn't have any initialization or unnecessary wrapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b96aca949c2dfad90f34208e151d92d5c4e3782" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;callback&lt;/code&gt; is a function that is invoked after the message is sent but before the child may have received it. The function is called with a single argument: &lt;code&gt;null&lt;/code&gt; on success, or an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object on failure.</source>
          <target state="translated">Необязательный &lt;code&gt;callback&lt;/code&gt; - это функция, которая вызывается после отправки сообщения, но до того, как дочерний элемент может его получить. Функция вызывается с одним аргументом: &lt;code&gt;null&lt;/code&gt; в случае успеха или объект &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; в случае ошибки.</target>
        </trans-unit>
        <trans-unit id="0f4bda021a4230b873e23262d38a21e96fd815c9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;callback&lt;/code&gt; parameter will be added as a one-time listener for the &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Необязательный параметр &lt;code&gt;callback&lt;/code&gt; будет добавлен как одноразовый прослушиватель для события &lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f75dfbd1ccb81dcb45cc7787f70bf228fab77d5" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;callback&lt;/code&gt; parameter will be added as a one-time listener for the &lt;a href=&quot;#net_event_timeout&quot;&gt;&lt;code&gt;'timeout'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Необязательный параметр &lt;code&gt;callback&lt;/code&gt; будет добавлен в качестве одноразового прослушивателя для события &lt;a href=&quot;#net_event_timeout&quot;&gt; &lt;code&gt;'timeout'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a388a3c8ef1c6891f4bc45f8cf75c4ca428eb38" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;callback&lt;/code&gt; parameter will be executed when the data is finally written out - this may not be immediately.</source>
          <target state="translated">Необязательный параметр &lt;code&gt;callback&lt;/code&gt; будет выполнен, когда данные будут окончательно записаны - это может быть не сразу.</target>
        </trans-unit>
        <trans-unit id="3f398da22b9a537a80ef95f6587773ea48b8d1eb" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;callback&lt;/code&gt; parameter will be executed when the data is finally written out, which may not be immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848a2877fc4fdda35fdaabacb12c2f613d9bff6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;constructorOpt&lt;/code&gt; argument accepts a function. If given, all frames above &lt;code&gt;constructorOpt&lt;/code&gt;, including &lt;code&gt;constructorOpt&lt;/code&gt;, will be omitted from the generated stack trace.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;constructorOpt&lt;/code&gt; принимает функцию. Если указано, все кадры выше &lt;code&gt;constructorOpt&lt;/code&gt; , включая &lt;code&gt;constructorOpt&lt;/code&gt; , будут исключены из сгенерированной трассировки стека.</target>
        </trans-unit>
        <trans-unit id="1ad586a6a1c5973d95690ca8fdc184bb4c8b9ce9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;endMark&lt;/code&gt; argument must identify any &lt;em&gt;existing&lt;/em&gt;&lt;code&gt;PerformanceMark&lt;/code&gt; in the Performance Timeline or any of the timestamp properties provided by the &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; class. &lt;code&gt;endMark&lt;/code&gt; will be &lt;code&gt;performance.now()&lt;/code&gt; if no parameter is passed, otherwise if the named &lt;code&gt;endMark&lt;/code&gt; does not exist, an error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd4f60ba39ba1f7450156da76a6991f33b60f2b" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;flags&lt;/code&gt; argument uses &lt;code&gt;ENGINE_METHOD_ALL&lt;/code&gt; by default. The &lt;code&gt;flags&lt;/code&gt; is a bit field taking one of or a mix of the following flags (defined in &lt;code&gt;crypto.constants&lt;/code&gt;):</source>
          <target state="translated">Необязательные &lt;code&gt;flags&lt;/code&gt; аргумент использует &lt;code&gt;ENGINE_METHOD_ALL&lt;/code&gt; по умолчанию. Эти &lt;code&gt;flags&lt;/code&gt; являются битовым полем принимая один из или смесь из следующих флагов (определенно в &lt;code&gt;crypto.constants&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="cc9f65c30553afbd1b4d82c484f88aa304441ee3" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options.statCheck&lt;/code&gt; function may be specified to give user code an opportunity to set additional content headers based on the &lt;code&gt;fs.Stat&lt;/code&gt; details of the given fd. If the &lt;code&gt;statCheck&lt;/code&gt; function is provided, the &lt;code&gt;http2stream.respondWithFD()&lt;/code&gt; method will perform an &lt;code&gt;fs.fstat()&lt;/code&gt; call to collect details on the provided file descriptor.</source>
          <target state="translated">Необязательная функция &lt;code&gt;options.statCheck&lt;/code&gt; может быть указана, чтобы дать пользовательскому коду возможность устанавливать дополнительные заголовки содержимого на &lt;code&gt;fs.Stat&lt;/code&gt; деталей fs.Stat данного fd. Если &lt;code&gt;statCheck&lt;/code&gt; функция &lt;code&gt;http2stream.respondWithFD()&lt;/code&gt; метод http2stream.respondWithFD () выполнит &lt;code&gt;fs.fstat()&lt;/code&gt; для сбора сведений о предоставленном дескрипторе файла.</target>
        </trans-unit>
        <trans-unit id="b8ca99509b25a6ab5ee70308bafe39a1b71f3d06" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options.statCheck&lt;/code&gt; function may be specified to give user code an opportunity to set additional content headers based on the &lt;code&gt;fs.Stat&lt;/code&gt; details of the given file:</source>
          <target state="translated">Необязательная функция &lt;code&gt;options.statCheck&lt;/code&gt; может быть указана, чтобы дать пользовательскому коду возможность устанавливать дополнительные заголовки контента на &lt;code&gt;fs.Stat&lt;/code&gt; деталей fs.Stat данного файла:</target>
        </trans-unit>
        <trans-unit id="30b397372595487a1e26df98289fea04b5b45c5e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the filenames passed to the callback. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the filenames returned will be passed as &lt;code&gt;Buffer&lt;/code&gt; objects.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов, используемую для имен файлов, переданных в обратный вызов. Если для &lt;code&gt;encoding&lt;/code&gt; установлено значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращенные имена файлов будут переданы как объекты &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72091fa8c95571c209adee473c28da126c9baae6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the filenames returned. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the filenames returned will be passed as &lt;code&gt;Buffer&lt;/code&gt; objects.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов, которая будет использоваться для возвращаемых имен файлов. Если для &lt;code&gt;encoding&lt;/code&gt; установлено значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращенные имена файлов будут переданы как объекты &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a3104057b5c38fd9e4bdac45532ce193dd2ed26" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the filenames. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the filenames returned will be passed as &lt;code&gt;Buffer&lt;/code&gt; objects.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов для использования в именах файлов. Если для &lt;code&gt;encoding&lt;/code&gt; задано значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращенные имена файлов будут переданы как объекты &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb2522fc8cd80845e2a3e2842ca468e7ddb1fc0" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the link path passed to the callback. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the link path returned will be passed as a &lt;code&gt;Buffer&lt;/code&gt; object.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов, которая будет использоваться для пути ссылки, переданной в обратный вызов. Если для &lt;code&gt;encoding&lt;/code&gt; задано значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращаемый путь ссылки будет передан как объект &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc5b6bb3218a1bc4526850c82e33474df9261f0f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the link path returned. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the link path returned will be passed as a &lt;code&gt;Buffer&lt;/code&gt; object.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов, которая будет использоваться для возвращаемого пути ссылки. Если для &lt;code&gt;encoding&lt;/code&gt; задано значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращаемый путь ссылки будет передан как объект &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eb7ec41225ab0c4c453df7c72a1c959224af868" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the path passed to the callback. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the path returned will be passed as a &lt;code&gt;Buffer&lt;/code&gt; object.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов, которая будет использоваться для пути, переданного в обратный вызов. Если для &lt;code&gt;encoding&lt;/code&gt; установлено значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращенный путь будет передан как объект &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbb0aa1d9d2894d118c49c7e7622ffb29c1d85fd" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the path returned. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the path returned will be passed as a &lt;code&gt;Buffer&lt;/code&gt; object.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов, которая будет использоваться для возвращаемого пути. Если для &lt;code&gt;encoding&lt;/code&gt; установлено значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращенный путь будет передан как объект &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5a60b46a69ed6136f940f53c21b10d9760164ad" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use for the path. If the &lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;'buffer'&lt;/code&gt;, the path returned will be passed as a &lt;code&gt;Buffer&lt;/code&gt; object.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим кодировку символов для использования в пути. Если для &lt;code&gt;encoding&lt;/code&gt; установлено значение &lt;code&gt;'buffer'&lt;/code&gt; , возвращенный путь будет передан как объект &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9b1ce0f8bd5bffe9b99b0262eb3a242c5e14124" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be a string specifying an encoding, or an object with an &lt;code&gt;encoding&lt;/code&gt; property specifying the character encoding to use.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть строкой, определяющей кодировку, или объектом со свойством &lt;code&gt;encoding&lt;/code&gt; определяющим используемую кодировку символов.</target>
        </trans-unit>
        <trans-unit id="aadca4acdf449aec7197e7dc17a104a173c63dbb" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be an integer specifying &lt;code&gt;mode&lt;/code&gt; (permission and sticky bits), or an object with a &lt;code&gt;mode&lt;/code&gt; property and a &lt;code&gt;recursive&lt;/code&gt; property indicating whether parent directories should be created. Calling &lt;code&gt;fs.mkdir()&lt;/code&gt; when &lt;code&gt;path&lt;/code&gt; is a directory that exists results in an error only when &lt;code&gt;recursive&lt;/code&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72f65bfd27c29868388c460c4fee4a3c00dfdde" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be an integer specifying &lt;code&gt;mode&lt;/code&gt; (permission and sticky bits), or an object with a &lt;code&gt;mode&lt;/code&gt; property and a &lt;code&gt;recursive&lt;/code&gt; property indicating whether parent directories should be created. Calling &lt;code&gt;fsPromises.mkdir()&lt;/code&gt; when &lt;code&gt;path&lt;/code&gt; is a directory that exists results in a rejection only when &lt;code&gt;recursive&lt;/code&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29432448e6ca0758f3927cc455e95393816652f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be an integer specifying mode (permission and sticky bits), or an object with a &lt;code&gt;mode&lt;/code&gt; property and a &lt;code&gt;recursive&lt;/code&gt; property indicating whether parent folders should be created. Calling &lt;code&gt;fs.mkdir()&lt;/code&gt; when &lt;code&gt;path&lt;/code&gt; is a directory that exists results in an error only when &lt;code&gt;recursive&lt;/code&gt; is false.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть целочисленным, определяющим режим (разрешение и липкие биты), или объектом со свойством &lt;code&gt;mode&lt;/code&gt; и &lt;code&gt;recursive&lt;/code&gt; свойством, указывающим, следует ли создавать родительские папки. Вызов &lt;code&gt;fs.mkdir()&lt;/code&gt; когда &lt;code&gt;path&lt;/code&gt; - это каталог, который существует, приводит к ошибке только тогда, когда &lt;code&gt;recursive&lt;/code&gt; - ложь.</target>
        </trans-unit>
        <trans-unit id="fe44a69d963c148c4578bad831ce5ae5a6ff0b73" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument can be an integer specifying mode (permission and sticky bits), or an object with a &lt;code&gt;mode&lt;/code&gt; property and a &lt;code&gt;recursive&lt;/code&gt; property indicating whether parent folders should be created. Calling &lt;code&gt;fsPromises.mkdir()&lt;/code&gt; when &lt;code&gt;path&lt;/code&gt; is a directory that exists results in a rejection only when &lt;code&gt;recursive&lt;/code&gt; is false.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;options&lt;/code&gt; может быть целочисленным, определяющим режим (разрешение и липкие биты), или объектом со свойством &lt;code&gt;mode&lt;/code&gt; и &lt;code&gt;recursive&lt;/code&gt; свойством, указывающим, следует ли создавать родительские папки. Вызов &lt;code&gt;fsPromises.mkdir()&lt;/code&gt; когда &lt;code&gt;path&lt;/code&gt; - это существующий каталог, приводит к отклонению только в том случае, если &lt;code&gt;recursive&lt;/code&gt; имеет значение false.</target>
        </trans-unit>
        <trans-unit id="8df1775ddf99a0878d244350e8f9f93ec0727826" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; argument controls stream behavior. For XOF hash functions such as &lt;code&gt;'shake256'&lt;/code&gt;, the &lt;code&gt;outputLength&lt;/code&gt; option can be used to specify the desired output length in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261827080f081a265d9518c196a9756632d4c999" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;sendHandle&lt;/code&gt; argument that may be passed to &lt;code&gt;subprocess.send()&lt;/code&gt; is for passing a TCP server or socket object to the child process. The child will receive the object as the second argument passed to the callback function registered on the &lt;a href=&quot;process#process_event_message&quot;&gt;&lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt; event. Any data that is received and buffered in the socket will not be sent to the child.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;sendHandle&lt;/code&gt; , который может быть передан в &lt;code&gt;subprocess.send()&lt;/code&gt; предназначен для передачи объекта TCP-сервера или сокета дочернему процессу. Потомок получит объект в качестве второго аргумента, переданного функции обратного вызова, зарегистрированной в событии &lt;a href=&quot;process#process_event_message&quot;&gt; &lt;code&gt;'message'&lt;/code&gt; &lt;/a&gt; . Любые данные, полученные и буферизованные в сокете, не будут отправлены потомку.</target>
        </trans-unit>
        <trans-unit id="21776c2a95a91147668e079bc279b294e52498a6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;size&lt;/code&gt; argument specifies a specific number of bytes to read. If &lt;code&gt;size&lt;/code&gt; bytes are not available to be read, &lt;code&gt;null&lt;/code&gt; will be returned &lt;em&gt;unless&lt;/em&gt; the stream has ended, in which case all of the data remaining in the internal buffer will be returned.</source>
          <target state="translated">Необязательный аргумент &lt;code&gt;size&lt;/code&gt; указывает конкретное количество байтов для чтения. Если байты &lt;code&gt;size&lt;/code&gt; недоступны для чтения, будет возвращено значение &lt;code&gt;null&lt;/code&gt; , &lt;em&gt;если&lt;/em&gt; поток не закончился, и в этом случае будут возвращены все данные, оставшиеся во внутреннем буфере.</target>
        </trans-unit>
        <trans-unit id="7dcc1ff991ba74f3e2341e794b5bd2a7209b9bd5" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;targetStart&lt;/code&gt;, &lt;code&gt;targetEnd&lt;/code&gt;, &lt;code&gt;sourceStart&lt;/code&gt;, and &lt;code&gt;sourceEnd&lt;/code&gt; arguments can be used to limit the comparison to specific ranges within &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;buf&lt;/code&gt; respectively.</source>
          <target state="translated">Необязательные &lt;code&gt;targetStart&lt;/code&gt; , &lt;code&gt;targetEnd&lt;/code&gt; , &lt;code&gt;sourceStart&lt;/code&gt; и &lt;code&gt;sourceEnd&lt;/code&gt; могут использоваться для ограничения сравнения определенными диапазонами в пределах &lt;code&gt;target&lt;/code&gt; и &lt;code&gt;buf&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="de8fd304a1c7493a27d13d17ca2a7665914145e8" translate="yes" xml:space="preserve">
          <source>The optional returned reference is initially a weak reference, meaning it has a reference count of 0. Typically this reference count would be incremented temporarily during async operations that require the instance to remain valid.</source>
          <target state="translated">Необязательно возвращаемая ссылка изначально является слабой ссылкой,что означает,что она имеет счетчик ссылок 0.Обычно этот счетчик ссылок временно увеличивается при асинхронных операциях,требующих,чтобы экземпляр оставался действительным.</target>
        </trans-unit>
        <trans-unit id="2bf5d71ef6bb11c383df71dca6fed4c4d1e8880f" translate="yes" xml:space="preserve">
          <source>The output of running this script is:</source>
          <target state="translated">Результат выполнения этого скрипта:</target>
        </trans-unit>
        <trans-unit id="45989adee27623dee9b58303d643cfed64b9aa3e" translate="yes" xml:space="preserve">
          <source>The owner may read, write and execute the file.</source>
          <target state="translated">Владелец может читать,записывать и выполнять файл.</target>
        </trans-unit>
        <trans-unit id="705e766de26998db30b9b74945357c8783455fd0" translate="yes" xml:space="preserve">
          <source>The package scope applies not only to initial entry points (&lt;code&gt;node --experimental-modules my-app.js&lt;/code&gt;) but also to files referenced by &lt;code&gt;import&lt;/code&gt; statements and &lt;code&gt;import()&lt;/code&gt; expressions.</source>
          <target state="translated">Область действия пакета применяется не только к начальным точкам входа ( &lt;code&gt;node --experimental-modules my-app.js&lt;/code&gt; ), но также и к файлам, на которые ссылаются операторы &lt;code&gt;import&lt;/code&gt; и выражения &lt;code&gt;import()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7564c3f9eff583a58e8d21cd99ee8d14688a3bf" translate="yes" xml:space="preserve">
          <source>The passed &lt;code&gt;options&lt;/code&gt; object can be a string now.</source>
          <target state="translated">Теперь переданный объект &lt;code&gt;options&lt;/code&gt; может быть строкой.</target>
        </trans-unit>
        <trans-unit id="b59339c89766317598c7665c33ea20dd610e99de" translate="yes" xml:space="preserve">
          <source>The passed &lt;code&gt;options&lt;/code&gt; object will never be modified.</source>
          <target state="translated">Переданный &lt;code&gt;options&lt;/code&gt; объект никогда не будет изменен.</target>
        </trans-unit>
        <trans-unit id="fb2d39c4340f5b4b6c986cba1d575aa90762c3be" translate="yes" xml:space="preserve">
          <source>The path for the main script of a worker is neither an absolute path nor a relative path starting with &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;.</source>
          <target state="translated">Путь к основному сценарию рабочего не является ни абсолютным, ни относительным путем, начинающимся с &lt;code&gt;./&lt;/code&gt; или &lt;code&gt;../&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a68f2ecb4bd3f38847a7eeccce766303a522feb" translate="yes" xml:space="preserve">
          <source>The path to the file the stream is reading from as specified in the first argument to &lt;code&gt;fs.createReadStream()&lt;/code&gt;. If &lt;code&gt;path&lt;/code&gt; is passed as a string, then &lt;code&gt;readStream.path&lt;/code&gt; will be a string. If &lt;code&gt;path&lt;/code&gt; is passed as a &lt;code&gt;Buffer&lt;/code&gt;, then &lt;code&gt;readStream.path&lt;/code&gt; will be a &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Путь к файлу, из которого выполняется чтение потока, указан в первом аргументе функции &lt;code&gt;fs.createReadStream()&lt;/code&gt; . Если &lt;code&gt;path&lt;/code&gt; передается в виде строки, &lt;code&gt;readStream.path&lt;/code&gt; будет строкой. Если &lt;code&gt;path&lt;/code&gt; передается как &lt;code&gt;Buffer&lt;/code&gt; , тогда &lt;code&gt;readStream.path&lt;/code&gt; будет &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3bb0d95641a2afd52bb195881c3abca28b19aa5" translate="yes" xml:space="preserve">
          <source>The path to the file the stream is writing to as specified in the first argument to &lt;a href=&quot;#fs_fs_createwritestream_path_options&quot;&gt;&lt;code&gt;fs.createWriteStream()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;path&lt;/code&gt; is passed as a string, then &lt;code&gt;writeStream.path&lt;/code&gt; will be a string. If &lt;code&gt;path&lt;/code&gt; is passed as a &lt;code&gt;Buffer&lt;/code&gt;, then &lt;code&gt;writeStream.path&lt;/code&gt; will be a &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Путь к файлу, в который записывается поток, указан в первом аргументе функции &lt;a href=&quot;#fs_fs_createwritestream_path_options&quot;&gt; &lt;code&gt;fs.createWriteStream()&lt;/code&gt; &lt;/a&gt; . Если &lt;code&gt;path&lt;/code&gt; передается как строка, то &lt;code&gt;writeStream.path&lt;/code&gt; будет строкой. Если &lt;code&gt;path&lt;/code&gt; передается как &lt;code&gt;Buffer&lt;/code&gt; , тогда &lt;code&gt;writeStream.path&lt;/code&gt; будет &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5303b9030ddafd814201239d3425172e5de09971" translate="yes" xml:space="preserve">
          <source>The pathname used for the main script of a worker has an unknown file extension.</source>
          <target state="translated">Параметр,используемый для главного скрипта рабочего,имеет неизвестное файловое расширение.</target>
        </trans-unit>
        <trans-unit id="842995cd8000d0efb4e4627b63f283405c9de9df" translate="yes" xml:space="preserve">
          <source>The policy manifest will be used to enforce constraints on code loaded by Node.js.</source>
          <target state="translated">Политический манифест будет использоваться для введения ограничений на код,загруженный Node.js.</target>
        </trans-unit>
        <trans-unit id="f37ced12d39d64c1acd89371245e9dd2d45e0ac9" translate="yes" xml:space="preserve">
          <source>The port used by Node.js's debugger when enabled.</source>
          <target state="translated">Порт,используемый отладчиком Node.js при включении.</target>
        </trans-unit>
        <trans-unit id="dec6b7a7b66dcadd093ce17f9ff0d5581242e4cb" translate="yes" xml:space="preserve">
          <source>The port used by the Node.js debugger when enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95b5aab3ab3fba91f054dea6c27fd9fd3c7181c" translate="yes" xml:space="preserve">
          <source>The port value can be an empty string in which case the port depends on the protocol/scheme:</source>
          <target state="translated">Значение порта может быть пустой строкой,в этом случае порт зависит от протокола/схемы:</target>
        </trans-unit>
        <trans-unit id="35240f5bbe9b687669eb3a21a6d605183b197a00" translate="yes" xml:space="preserve">
          <source>The port value may be a number or a string containing a number in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;65535&lt;/code&gt; (inclusive). Setting the value to the default port of the &lt;code&gt;URL&lt;/code&gt; objects given &lt;code&gt;protocol&lt;/code&gt; will result in the &lt;code&gt;port&lt;/code&gt; value becoming the empty string (&lt;code&gt;''&lt;/code&gt;).</source>
          <target state="translated">Значение порта может быть числом или строкой, содержащей число в диапазоне от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;65535&lt;/code&gt; (включительно). Установка значения порта по умолчанию для &lt;code&gt;URL&lt;/code&gt; - объектов данного &lt;code&gt;protocol&lt;/code&gt; приведет к тому, что значение &lt;code&gt;port&lt;/code&gt; станет пустой строкой ( &lt;code&gt;''&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="516b367bb725dc118632a0063079984861a1c67f" translate="yes" xml:space="preserve">
          <source>The preceding module supports named imports in ES modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e1752bb85ccb2347cdba3385d98029d5ceffb3" translate="yes" xml:space="preserve">
          <source>The predefined color codes are: &lt;code&gt;white&lt;/code&gt;, &lt;code&gt;grey&lt;/code&gt;, &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;cyan&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;magenta&lt;/code&gt;, &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;yellow&lt;/code&gt;. There are also &lt;code&gt;bold&lt;/code&gt;, &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;underline&lt;/code&gt; and &lt;code&gt;inverse&lt;/code&gt; codes.</source>
          <target state="translated">Предопределенные цветовые коды: &lt;code&gt;white&lt;/code&gt; , &lt;code&gt;grey&lt;/code&gt; , &lt;code&gt;black&lt;/code&gt; , &lt;code&gt;blue&lt;/code&gt; , &lt;code&gt;cyan&lt;/code&gt; , &lt;code&gt;green&lt;/code&gt; , &lt;code&gt;magenta&lt;/code&gt; , &lt;code&gt;red&lt;/code&gt; и &lt;code&gt;yellow&lt;/code&gt; . Также есть &lt;code&gt;bold&lt;/code&gt; , &lt;code&gt;italic&lt;/code&gt; , &lt;code&gt;underline&lt;/code&gt; и &lt;code&gt;inverse&lt;/code&gt; коды.</target>
        </trans-unit>
        <trans-unit id="a8feec306734bdd21e98aea495e525ccece43f81" translate="yes" xml:space="preserve">
          <source>The previously undocumented &lt;code&gt;timers.active()&lt;/code&gt; is deprecated. Please use the publicly documented &lt;a href=&quot;timers#timers_timeout_refresh&quot;&gt;&lt;code&gt;timeout.refresh()&lt;/code&gt;&lt;/a&gt; instead. If re-referencing the timeout is necessary, &lt;a href=&quot;timers#timers_timeout_ref&quot;&gt;&lt;code&gt;timeout.ref()&lt;/code&gt;&lt;/a&gt; can be used with no performance impact since Node.js 10.</source>
          <target state="translated">Ранее недокументированные &lt;code&gt;timers.active()&lt;/code&gt; устарели. Вместо этого используйте публично задокументированный &lt;a href=&quot;timers#timers_timeout_refresh&quot;&gt; &lt;code&gt;timeout.refresh()&lt;/code&gt; &lt;/a&gt; . Если ссылка на тайм-аут необходима, можно использовать &lt;a href=&quot;timers#timers_timeout_ref&quot;&gt; &lt;code&gt;timeout.ref()&lt;/code&gt; &lt;/a&gt; производительности, начиная с Node.js 10.</target>
        </trans-unit>
        <trans-unit id="8fa2c8b129174c0fc077a4918a3e4b0112acc742" translate="yes" xml:space="preserve">
          <source>The previously undocumented and &quot;private&quot; &lt;code&gt;timers._unrefActive()&lt;/code&gt; is deprecated. Please use the publicly documented &lt;a href=&quot;timers#timers_timeout_refresh&quot;&gt;&lt;code&gt;timeout.refresh()&lt;/code&gt;&lt;/a&gt; instead. If unreferencing the timeout is necessary, &lt;a href=&quot;timers#timers_timeout_unref&quot;&gt;&lt;code&gt;timeout.unref()&lt;/code&gt;&lt;/a&gt; can be used with no performance impact since Node.js 10.</source>
          <target state="translated">Ранее недокументированные и &amp;laquo;частные&amp;raquo; &lt;code&gt;timers._unrefActive()&lt;/code&gt; устарели. Вместо этого используйте публично задокументированный &lt;a href=&quot;timers#timers_timeout_refresh&quot;&gt; &lt;code&gt;timeout.refresh()&lt;/code&gt; &lt;/a&gt; . Если необходимо не ссылаться на тайм-аут, можно использовать &lt;a href=&quot;timers#timers_timeout_unref&quot;&gt; &lt;code&gt;timeout.unref()&lt;/code&gt; &lt;/a&gt; без влияния на производительность, начиная с Node.js 10.</target>
        </trans-unit>
        <trans-unit id="c7e811ac507e899887eadb3b761ab472eb68ab19" translate="yes" xml:space="preserve">
          <source>The primary intent of &lt;code&gt;writable.cork()&lt;/code&gt; is to accommodate a situation in which several small chunks are written to the stream in rapid succession. Instead of immediately forwarding them to the underlying destination, &lt;code&gt;writable.cork()&lt;/code&gt; buffers all the chunks until &lt;code&gt;writable.uncork()&lt;/code&gt; is called, which will pass them all to &lt;code&gt;writable._writev()&lt;/code&gt;, if present. This prevents a head-of-line blocking situation where data is being buffered while waiting for the first small chunk to be processed. However, use of &lt;code&gt;writable.cork()&lt;/code&gt; without implementing &lt;code&gt;writable._writev()&lt;/code&gt; may have an adverse effect on throughput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301d6f86720b7caebae0c21957576c82619859d7" translate="yes" xml:space="preserve">
          <source>The primary intent of &lt;code&gt;writable.cork()&lt;/code&gt; is to avoid a situation where writing many small chunks of data to a stream do not cause a backup in the internal buffer that would have an adverse impact on performance. In such situations, implementations that implement the &lt;code&gt;writable._writev()&lt;/code&gt; method can perform buffered writes in a more optimized manner.</source>
          <target state="translated">Основная цель &lt;code&gt;writable.cork()&lt;/code&gt; - избежать ситуации, когда запись большого количества небольших фрагментов данных в поток не приводит к резервному копированию во внутреннем буфере, что отрицательно сказывается на производительности. В таких ситуациях реализации, реализующие метод &lt;code&gt;writable._writev()&lt;/code&gt; могут выполнять буферизованную запись более оптимизированным образом.</target>
        </trans-unit>
        <trans-unit id="64985acfc6f181ff488fc6817834027a19e84721" translate="yes" xml:space="preserve">
          <source>The process could not be killed, or</source>
          <target state="translated">Процесс нельзя было убить,или</target>
        </trans-unit>
        <trans-unit id="e873e5b18616841f05efdd386c89f6ba201225db" translate="yes" xml:space="preserve">
          <source>The process could not be spawned, or</source>
          <target state="translated">Процесс не мог быть порожден,или</target>
        </trans-unit>
        <trans-unit id="4bfa64f515a1b0181d935c05f6c69ffff6fbfd05" translate="yes" xml:space="preserve">
          <source>The process object. See the &lt;a href=&quot;process#process_process&quot;&gt;&lt;code&gt;process&lt;/code&gt; object&lt;/a&gt; section.</source>
          <target state="translated">Объект процесса. См &lt;a href=&quot;process#process_process&quot;&gt; &lt;code&gt;process&lt;/code&gt; объекта&lt;/a&gt; раздел.</target>
        </trans-unit>
        <trans-unit id="19a87c186d9fc90f05f38ed4cba9e32faeadbae9" translate="yes" xml:space="preserve">
          <source>The process scheduling priority above &lt;code&gt;PRIORITY_ABOVE_NORMAL&lt;/code&gt; and below &lt;code&gt;PRIORITY_HIGHEST&lt;/code&gt;. This corresponds to &lt;code&gt;HIGH_PRIORITY_CLASS&lt;/code&gt; on Windows, and a nice value of &lt;code&gt;-14&lt;/code&gt; on all other platforms.</source>
          <target state="translated">Приоритет планирования процесса выше &lt;code&gt;PRIORITY_ABOVE_NORMAL&lt;/code&gt; и ниже &lt;code&gt;PRIORITY_HIGHEST&lt;/code&gt; . Это соответствует &lt;code&gt;HIGH_PRIORITY_CLASS&lt;/code&gt; в Windows и хорошему значению &lt;code&gt;-14&lt;/code&gt; на всех других платформах.</target>
        </trans-unit>
        <trans-unit id="a8b5e718648dcd24e1f04e65ec6ef9126189b362" translate="yes" xml:space="preserve">
          <source>The process scheduling priority above &lt;code&gt;PRIORITY_LOW&lt;/code&gt; and below &lt;code&gt;PRIORITY_NORMAL&lt;/code&gt;. This corresponds to &lt;code&gt;BELOW_NORMAL_PRIORITY_CLASS&lt;/code&gt; on Windows, and a nice value of &lt;code&gt;10&lt;/code&gt; on all other platforms.</source>
          <target state="translated">Приоритет планирования процесса выше &lt;code&gt;PRIORITY_LOW&lt;/code&gt; и ниже &lt;code&gt;PRIORITY_NORMAL&lt;/code&gt; . Это соответствует &lt;code&gt;BELOW_NORMAL_PRIORITY_CLASS&lt;/code&gt; в Windows и хорошему значению &lt;code&gt;10&lt;/code&gt; на всех других платформах.</target>
        </trans-unit>
        <trans-unit id="07f606e78cf90aabba4bf4bb1ef36128cea4c14f" translate="yes" xml:space="preserve">
          <source>The process scheduling priority above &lt;code&gt;PRIORITY_NORMAL&lt;/code&gt; and below &lt;code&gt;PRIORITY_HIGH&lt;/code&gt;. This corresponds to &lt;code&gt;ABOVE_NORMAL_PRIORITY_CLASS&lt;/code&gt; on Windows, and a nice value of &lt;code&gt;-7&lt;/code&gt; on all other platforms.</source>
          <target state="translated">Приоритет планирования процесса выше &lt;code&gt;PRIORITY_NORMAL&lt;/code&gt; и ниже &lt;code&gt;PRIORITY_HIGH&lt;/code&gt; . Это соответствует &lt;code&gt;ABOVE_NORMAL_PRIORITY_CLASS&lt;/code&gt; в Windows и хорошему значению &lt;code&gt;-7&lt;/code&gt; на всех других платформах.</target>
        </trans-unit>
        <trans-unit id="681821ab96576ebe60cbcdd765ffba967ab60b31" translate="yes" xml:space="preserve">
          <source>The properties available on the assigned network address object include:</source>
          <target state="translated">Свойства,доступные в назначенном объекте сетевого адреса,включают в себя:</target>
        </trans-unit>
        <trans-unit id="15089f6598bc6c72817c26575069415cd75bbb85" translate="yes" xml:space="preserve">
          <source>The properties included on each object include:</source>
          <target state="translated">Свойства,включенные в каждый объект,включают в себя:</target>
        </trans-unit>
        <trans-unit id="32cbb03653d9c062d765fd9dedb500b4ce391d11" translate="yes" xml:space="preserve">
          <source>The protocol identifier (&lt;code&gt;'h2'&lt;/code&gt; in the examples) may be any valid &lt;a href=&quot;https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids&quot;&gt;ALPN Protocol ID&lt;/a&gt;.</source>
          <target state="translated">Идентификатор протокола ( в примерах &lt;code&gt;'h2'&lt;/code&gt; ) может быть любым допустимым &lt;a href=&quot;https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids&quot;&gt;идентификатором протокола ALPN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="682dd72da7ec2fc2dd775aaa85fc979fb00717b6" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;origin&lt;/code&gt; of the context are made visible through the Inspector API.</source>
          <target state="translated">Предоставленное &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;origin&lt;/code&gt; контекста становятся видимыми через Inspector API.</target>
        </trans-unit>
        <trans-unit id="0c874b3f599c2f388ee9adaf7c51cc16c6ca9ab2" translate="yes" xml:space="preserve">
          <source>The provided address family is not understood by the Node.js API.</source>
          <target state="translated">Предоставленное семейство адресов не понимается API Node.js.</target>
        </trans-unit>
        <trans-unit id="0d5a7141a0afa24f729a66e2573aa9e735d8af9e" translate="yes" xml:space="preserve">
          <source>The range (&lt;code&gt;max - min&lt;/code&gt;) must be less than 2&lt;sup&gt;48&lt;/sup&gt;. &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; must be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger&quot;&gt;safe integers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ce53307f0479c8ec03dffd96128613abfed0ef" translate="yes" xml:space="preserve">
          <source>The raw headers as they were received are retained in the &lt;code&gt;rawHeaders&lt;/code&gt; property, which is an array of &lt;code&gt;[key, value, key2, value2, ...]&lt;/code&gt;. For example, the previous message header object might have a &lt;code&gt;rawHeaders&lt;/code&gt; list like the following:</source>
          <target state="translated">Необработанные заголовки в том &lt;code&gt;rawHeaders&lt;/code&gt; , в котором они были получены, сохраняются в свойстве rawHeaders , которое представляет собой массив &lt;code&gt;[key, value, key2, value2, ...]&lt;/code&gt; . Например, у объекта заголовка предыдущего сообщения может быть список &lt;code&gt;rawHeaders&lt;/code&gt; , подобный следующему:</target>
        </trans-unit>
        <trans-unit id="83f581d673868d237fedae3567c8e5ca1905d79d" translate="yes" xml:space="preserve">
          <source>The raw request/response headers list exactly as they were received.</source>
          <target state="translated">Заголовки необработанных запросов/ответов перечисляются именно в том виде,в котором они были получены.</target>
        </trans-unit>
        <trans-unit id="b985d4474679d7d8436722ff0ebeff67e3eb82aa" translate="yes" xml:space="preserve">
          <source>The raw request/response trailer keys and values exactly as they were received. Only populated at the &lt;code&gt;'end'&lt;/code&gt; event.</source>
          <target state="translated">Необработанные ключи и значения трейлера запроса / ответа в том виде, в каком они были получены. Заполняется только в &lt;code&gt;'end'&lt;/code&gt; события.</target>
        </trans-unit>
        <trans-unit id="5d9dff5cd0c71c07633537409b66578e6b80505c" translate="yes" xml:space="preserve">
          <source>The read-only path of this directory as was provided to &lt;a href=&quot;#fs_fs_opendir_path_options_callback&quot;&gt;&lt;code&gt;fs.opendir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fs_fs_opendirsync_path_options&quot;&gt;&lt;code&gt;fs.opendirSync()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#fs_fspromises_opendir_path_options&quot;&gt;&lt;code&gt;fsPromises.opendir()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df59cd5882c36bd6c67c750c332e85dde52821" translate="yes" xml:space="preserve">
          <source>The reading will begin at the current position. For example, if the file already had &lt;code&gt;'Hello World&lt;/code&gt;' and six bytes are read with the file descriptor, the call to &lt;code&gt;fs.readFile()&lt;/code&gt; with the same file descriptor, would give &lt;code&gt;'World'&lt;/code&gt;, rather than &lt;code&gt;'Hello World'&lt;/code&gt;.</source>
          <target state="translated">Чтение начнется с текущей позиции. Например, если в файле уже было &lt;code&gt;'Hello World&lt;/code&gt; &amp;raquo; и шесть байтов считываются с файловым дескриптором, вызов &lt;code&gt;fs.readFile()&lt;/code&gt; с тем же файловым дескриптором даст &lt;code&gt;'World'&lt;/code&gt; , а не &lt;code&gt;'Hello World'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a5389685a663870c4323e668ef2d2e417308f1a" translate="yes" xml:space="preserve">
          <source>The reason for this error handling behavior is that these callbacks are running at potentially volatile points in an object's lifetime, for example during class construction and destruction. Because of this, it is deemed necessary to bring down the process quickly in order to prevent an unintentional abort in the future. This is subject to change in the future if a comprehensive analysis is performed to ensure an exception can follow the normal control flow without unintentional side effects.</source>
          <target state="translated">Причина такого поведения при работе с ошибками заключается в том,что эти обратные вызовы выполняются в потенциально нестабильных точках времени жизни объекта,например,при построении и уничтожении классов.Поэтому считается необходимым быстро свернуть процесс,чтобы предотвратить непреднамеренное прерывание в будущем.Это может измениться в будущем,если будет проведен всесторонний анализ для обеспечения того,чтобы исключение могло следовать нормальному управляющему потоку без непреднамеренных побочных эффектов.</target>
        </trans-unit>
        <trans-unit id="7e95038a9c64315188042fc9eab57e4956f07d72" translate="yes" xml:space="preserve">
          <source>The reason this is problematic is because writes to &lt;code&gt;process.stdout&lt;/code&gt; in Node.js are sometimes &lt;em&gt;asynchronous&lt;/em&gt; and may occur over multiple ticks of the Node.js event loop. Calling &lt;code&gt;process.exit()&lt;/code&gt;, however, forces the process to exit &lt;em&gt;before&lt;/em&gt; those additional writes to &lt;code&gt;stdout&lt;/code&gt; can be performed.</source>
          <target state="translated">Причина, по которой это проблематично, заключается в том, что запись в &lt;code&gt;process.stdout&lt;/code&gt; в Node.js иногда бывает &lt;em&gt;асинхронной&lt;/em&gt; и может происходить за несколько тиков цикла событий Node.js. Однако вызов &lt;code&gt;process.exit()&lt;/code&gt; заставляет процесс завершиться &lt;em&gt;до&lt;/em&gt; того, как будут выполнены эти дополнительные записи в стандартный &lt;code&gt;stdout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="882e863942bbfdb2c275d570776a56f3cb7eed13" translate="yes" xml:space="preserve">
          <source>The recursive option is only supported on macOS and Windows.</source>
          <target state="translated">Параметр рекурсивности поддерживается только в макросах и Windows.</target>
        </trans-unit>
        <trans-unit id="0d5da93cf7c47ffd68713f07c2a2d70da3b7c85f" translate="yes" xml:space="preserve">
          <source>The recursive option is only supported on macOS and Windows. An &lt;code&gt;ERR_FEATURE_UNAVAILABLE_ON_PLATFORM&lt;/code&gt; exception will be thrown when the option is used on a platform that does not support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96411a8d35be2600a6fa3cb907c90d1ed0ea5379" translate="yes" xml:space="preserve">
          <source>The reference must be freed once it is no longer needed.</source>
          <target state="translated">Ссылка должна быть освобождена,если в ней больше нет необходимости.</target>
        </trans-unit>
        <trans-unit id="6cc848b653807d38e0a4cbaec6143db941486dc6" translate="yes" xml:space="preserve">
          <source>The registered event listeners is synchronously invoked in the order they were registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da8026af719b1ab6b55c12dbb1cb53a3be6fd63" translate="yes" xml:space="preserve">
          <source>The report is intended for development, test and production use, to capture and preserve information for problem determination. It includes JavaScript and native stack traces, heap statistics, platform information, resource usage etc. With the report option enabled, diagnostic reports can be triggered on unhandled exceptions, fatal errors and user signals, in addition to triggering programmatically through API calls.</source>
          <target state="translated">Отчет предназначен для разработки,тестирования и использования в производстве,сбора и сохранения информации для определения проблем.Он включает в себя трассы JavaScript и родного стека,статистику кучи,информацию о платформе,использовании ресурсов и т.д.При включенной опции отчета диагностические отчеты могут запускаться по необработанным исключениям,фатальным ошибкам и пользовательским сигналам,а также запускаться программно через вызовы API.</target>
        </trans-unit>
        <trans-unit id="02f104dfa09be26fcee1ec1287c9793da8d202a7" translate="yes" xml:space="preserve">
          <source>The request authority pseudo header field. It can also be accessed via &lt;code&gt;req.headers[':authority']&lt;/code&gt;.</source>
          <target state="translated">Поле псевдозаголовка центра запроса. К нему также можно получить доступ через &lt;code&gt;req.headers[':authority']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8cc8ec77eab284c5b1d9a9e8bee79b0a4e96211" translate="yes" xml:space="preserve">
          <source>The request inherits from &lt;a href=&quot;stream#stream_stream&quot;&gt;Stream&lt;/a&gt;, and additionally implements the following:</source>
          <target state="translated">Запрос наследуется от &lt;a href=&quot;stream#stream_stream&quot;&gt;Stream&lt;/a&gt; и дополнительно реализует следующее:</target>
        </trans-unit>
        <trans-unit id="d2f1ed5fc05d92917b60ebf9072ab11385b53fc9" translate="yes" xml:space="preserve">
          <source>The request method as a string. Read only. Examples: &lt;code&gt;'GET'&lt;/code&gt;, &lt;code&gt;'DELETE'&lt;/code&gt;.</source>
          <target state="translated">Метод запроса в виде строки. Только чтение. Примеры: &lt;code&gt;'GET'&lt;/code&gt; , &lt;code&gt;'DELETE'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b820a151f8af96f9a8410852cebe4b9fce928d9" translate="yes" xml:space="preserve">
          <source>The request method as a string. Read-only. Examples: &lt;code&gt;'GET'&lt;/code&gt;, &lt;code&gt;'DELETE'&lt;/code&gt;.</source>
          <target state="translated">Метод запроса в виде строки. Только для чтения. Примеры: &lt;code&gt;'GET'&lt;/code&gt; , &lt;code&gt;'DELETE'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf2b93920ae2dda23261c83e7efa9025f30a8059" translate="yes" xml:space="preserve">
          <source>The request scheme pseudo header field indicating the scheme portion of the target URL.</source>
          <target state="translated">В поле псевдозаголовка схемы запроса указывается часть схемы целевого URL.</target>
        </trans-unit>
        <trans-unit id="d62ea70efeb08e31455b4542aaf477b0d2b0fbb4" translate="yes" xml:space="preserve">
          <source>The request to promote a handle is made through &lt;a href=&quot;#n_api_napi_escape_handle&quot;&gt;&lt;code&gt;napi_escape_handle&lt;/code&gt;&lt;/a&gt; which can only be called once.</source>
          <target state="translated">Запрос на продвижение дескриптора выполняется через &lt;a href=&quot;#n_api_napi_escape_handle&quot;&gt; &lt;code&gt;napi_escape_handle&lt;/code&gt; ,&lt;/a&gt; который можно вызвать только один раз.</target>
        </trans-unit>
        <trans-unit id="c35bb861539c1d20772a3a4da4e40cab1b2864ac" translate="yes" xml:space="preserve">
          <source>The request/response headers object.</source>
          <target state="translated">Объект заголовков запроса/ответа.</target>
        </trans-unit>
        <trans-unit id="efa13e0d6f5d17d44de1820e6c6f833cd6533735" translate="yes" xml:space="preserve">
          <source>The request/response trailers object. Only populated at the &lt;code&gt;'end'&lt;/code&gt; event.</source>
          <target state="translated">Объект трейлеров запроса / ответа. Заполняется только в &lt;code&gt;'end'&lt;/code&gt; события.</target>
        </trans-unit>
        <trans-unit id="76afa09b3c9e4455c22d150e86e0a878c83b5f18" translate="yes" xml:space="preserve">
          <source>The requested functionality is not supported in worker threads.</source>
          <target state="translated">Запрашиваемая функциональность не поддерживается в рабочих потоках.</target>
        </trans-unit>
        <trans-unit id="130c49b75db4d5f28d69526125533d14026a98f8" translate="yes" xml:space="preserve">
          <source>The resolve hook returns the resolved file URL and module format for a given module specifier and parent file URL:</source>
          <target state="translated">Крючок разрешения возвращает URL разрешенного файла и формат модуля для заданного спецификатора модуля и URL родительского файла:</target>
        </trans-unit>
        <trans-unit id="01c7f5cd9e64e948205f4e8da34e92946ac36c24" translate="yes" xml:space="preserve">
          <source>The resolver can throw the following errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad6fadfeabaeb9c9c66df7b9fd54f216fa3d3aa" translate="yes" xml:space="preserve">
          <source>The resolver has the following properties:</source>
          <target state="translated">Резольвер обладает следующими свойствами:</target>
        </trans-unit>
        <trans-unit id="965055eab4b20e712cee07e74d7e15f1dc310a7e" translate="yes" xml:space="preserve">
          <source>The response inherits from &lt;a href=&quot;stream#stream_stream&quot;&gt;Stream&lt;/a&gt;, and additionally implements the following:</source>
          <target state="translated">Ответ наследуется от &lt;a href=&quot;stream#stream_stream&quot;&gt;Stream&lt;/a&gt; и дополнительно реализует следующее:</target>
        </trans-unit>
        <trans-unit id="b18e030ec3ca1714e02a7b098543adb935c78705" translate="yes" xml:space="preserve">
          <source>The result generally does not make any guarantees about what kinds of properties or behavior a value exposes in JavaScript. They are primarily useful for addon developers who prefer to do type checking in JavaScript.</source>
          <target state="translated">Результат,как правило,не дает никаких гарантий о том,какие свойства или поведение значения отображаются в JavaScript.Они в первую очередь полезны для разработчиков addon,которые предпочитают делать проверку типов на JavaScript.</target>
        </trans-unit>
        <trans-unit id="b8b8022504a26ffb5513f898bea8594dd091a830" translate="yes" xml:space="preserve">
          <source>The result of a previous call to &lt;code&gt;process.cpuUsage()&lt;/code&gt; can be passed as the argument to the function, to get a diff reading.</source>
          <target state="translated">Результат предыдущего вызова &lt;code&gt;process.cpuUsage()&lt;/code&gt; может быть передан в качестве аргумента функции, чтобы получить показание diff.</target>
        </trans-unit>
        <trans-unit id="0c970c11e0a87e0dc98113377ad10bd2ef4c395a" translate="yes" xml:space="preserve">
          <source>The result of this function no longer contains a fraction component on Windows.</source>
          <target state="translated">Результат этой функции больше не содержит дробного компонента в Windows.</target>
        </trans-unit>
        <trans-unit id="350b994c82684bd0c40d5f8bba62015f9d892265" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;BigInt&lt;/code&gt; is calculated as: (&amp;ndash;1)&lt;sup&gt;&lt;code&gt;sign_bit&lt;/code&gt;&lt;/sup&gt; (&lt;code&gt;words[0]&lt;/code&gt; &amp;times; (2&lt;sup&gt;64&lt;/sup&gt;)&lt;sup&gt;0&lt;/sup&gt; + &lt;code&gt;words[1]&lt;/code&gt; &amp;times; (2&lt;sup&gt;64&lt;/sup&gt;)&lt;sup&gt;1&lt;/sup&gt; + &amp;hellip;)</source>
          <target state="translated">Результирующий &lt;code&gt;BigInt&lt;/code&gt; вычисляется как: (&amp;ndash;1) &lt;sup&gt; &lt;code&gt;sign_bit&lt;/code&gt; &lt;/sup&gt; ( &lt;code&gt;words[0]&lt;/code&gt; &amp;times; (2 &lt;sup&gt;64&lt;/sup&gt; ) &lt;sup&gt;0&lt;/sup&gt; + &lt;code&gt;words[1]&lt;/code&gt; &amp;times; (2 &lt;sup&gt;64&lt;/sup&gt; ) &lt;sup&gt;1&lt;/sup&gt; +&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="090264918bf0db3d97f15783938c5710acd286f9" translate="yes" xml:space="preserve">
          <source>The resulting output will resemble:</source>
          <target state="translated">Полученный результат будет напоминать:</target>
        </trans-unit>
        <trans-unit id="6592f1ecacf5d99cad7d854240afeddc010dff43" translate="yes" xml:space="preserve">
          <source>The resulting path is normalized and trailing slashes are removed unless the path is resolved to the root directory.</source>
          <target state="translated">Результирующий путь нормализуется,а трейлинговые слэши удаляются,если только путь не разрешен в корневую директорию.</target>
        </trans-unit>
        <trans-unit id="6755c8e673605ed2b394bffd53b16e00aa04ed50" translate="yes" xml:space="preserve">
          <source>The return value &lt;code&gt;{ publicKey, privateKey }&lt;/code&gt; represents the generated key pair. When PEM encoding was selected, the respective key will be a string, otherwise it will be a buffer containing the data encoded as DER.</source>
          <target state="translated">Возвращаемое значение &lt;code&gt;{ publicKey, privateKey }&lt;/code&gt; представляет сгенерированную пару ключей. Когда была выбрана кодировка PEM, соответствующий ключ будет строкой, в противном случае это будет буфер, содержащий данные, закодированные как DER.</target>
        </trans-unit>
        <trans-unit id="8540d6f242c1449e741beb63b74e073fc037812e" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;Init&lt;/code&gt; is treated as the &lt;code&gt;exports&lt;/code&gt; object for the module. The &lt;code&gt;Init&lt;/code&gt; method is passed an empty object via the &lt;code&gt;exports&lt;/code&gt; parameter as a convenience. If &lt;code&gt;Init&lt;/code&gt; returns &lt;code&gt;NULL&lt;/code&gt;, the parameter passed as &lt;code&gt;exports&lt;/code&gt; is exported by the module. N-API modules cannot modify the &lt;code&gt;module&lt;/code&gt; object but can specify anything as the &lt;code&gt;exports&lt;/code&gt; property of the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d46df7105ceb22c98097c79674b8da75df0880" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;Init&lt;/code&gt; is treated as the &lt;code&gt;exports&lt;/code&gt; object for the module. The &lt;code&gt;Init&lt;/code&gt; method is passed an empty object via the &lt;code&gt;exports&lt;/code&gt; parameter as a convenience. If &lt;code&gt;Init&lt;/code&gt; returns NULL, the parameter passed as &lt;code&gt;exports&lt;/code&gt; is exported by the module. N-API modules cannot modify the &lt;code&gt;module&lt;/code&gt; object but can specify anything as the &lt;code&gt;exports&lt;/code&gt; property of the module.</source>
          <target state="translated">Возвращаемое значение &lt;code&gt;Init&lt;/code&gt; рассматривается как объект &lt;code&gt;exports&lt;/code&gt; для модуля. Для &lt;code&gt;Init&lt;/code&gt; методу Init передается пустой объект через параметр &lt;code&gt;exports&lt;/code&gt; . Если &lt;code&gt;Init&lt;/code&gt; возвращает NULL, параметр, переданный как &lt;code&gt;exports&lt;/code&gt; , экспортируется модулем. Модули N-API не могут изменять объект &lt;code&gt;module&lt;/code&gt; но могут указывать что угодно в качестве свойства &lt;code&gt;exports&lt;/code&gt; модуля.</target>
        </trans-unit>
        <trans-unit id="b7768bae4378835321f00405e40f7b2cd7232e22" translate="yes" xml:space="preserve">
          <source>The return value includes fractions of a second. Use &lt;code&gt;Math.floor()&lt;/code&gt; to get whole seconds.</source>
          <target state="translated">Возвращаемое значение включает доли секунды. Используйте &lt;code&gt;Math.floor()&lt;/code&gt; чтобы получить целые секунды.</target>
        </trans-unit>
        <trans-unit id="97d244151a2074f335e80ec7c64b042a2a7bf155" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;true&lt;/code&gt; if the internal buffer is less than the &lt;code&gt;highWaterMark&lt;/code&gt; configured when the stream was created after admitting &lt;code&gt;chunk&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is returned, further attempts to write data to the stream should stop until the &lt;a href=&quot;#stream_event_drain&quot;&gt;&lt;code&gt;'drain'&lt;/code&gt;&lt;/a&gt; event is emitted.</source>
          <target state="translated">Возвращаемое значение - &lt;code&gt;true&lt;/code&gt; если внутренний буфер меньше, чем &lt;code&gt;highWaterMark&lt;/code&gt; , настроенный при создании потока после принятия &lt;code&gt;chunk&lt;/code&gt; . Если возвращается &lt;code&gt;false&lt;/code&gt; , дальнейшие попытки записи данных в поток должны прекращаться до тех пор, пока не будет &lt;a href=&quot;#stream_event_drain&quot;&gt; &lt;code&gt;'drain'&lt;/code&gt; &lt;/a&gt; событие &amp;laquo;слив&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="26d76acade904502d2ab1c10b9e6ee013a9e7a40" translate="yes" xml:space="preserve">
          <source>The return value is equivalent to &lt;a href=&quot;process#process_process_arch&quot;&gt;&lt;code&gt;process.arch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cc4b1ac76c7772ee2e1e982aae790cb286904e" translate="yes" xml:space="preserve">
          <source>The return value is equivalent to &lt;a href=&quot;process#process_process_platform&quot;&gt;&lt;code&gt;process.platform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1ee035941771511703ba74230eaf82a6d8a77f" translate="yes" xml:space="preserve">
          <source>The return value of a handler function is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a297e4c1534ad58591aefd1896f05fb34a3b663" translate="yes" xml:space="preserve">
          <source>The return value will be &lt;code&gt;napi_ok&lt;/code&gt; if the request was successful and no uncaught JavaScript exception was thrown. If an error occurred AND an exception was thrown, the &lt;code&gt;napi_status&lt;/code&gt; value for the error will be returned. If an exception was thrown, and no error occurred, &lt;code&gt;napi_pending_exception&lt;/code&gt; will be returned.</source>
          <target state="translated">Возвращаемое значение будет &lt;code&gt;napi_ok&lt;/code&gt; , если запрос был успешным и не было сгенерировано неперехваченное исключение JavaScript. Если произошла ошибка И было создано исключение, будет &lt;code&gt;napi_status&lt;/code&gt; значение napi_status для ошибки. Если было &lt;code&gt;napi_pending_exception&lt;/code&gt; исключение и ошибок не было, будет возвращено napi_pending_exception .</target>
        </trans-unit>
        <trans-unit id="a30bf17d9b1e59d4e5f5069fa0021e31e3506815" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;MessagePort&lt;/code&gt; will be an object in the target context, and will inherit from its global &lt;code&gt;Object&lt;/code&gt; class. Objects passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt;&lt;code&gt;port.onmessage()&lt;/code&gt;&lt;/a&gt; listener will also be created in the target context and inherit from its global &lt;code&gt;Object&lt;/code&gt; class.</source>
          <target state="translated">Возвращенный &lt;code&gt;MessagePort&lt;/code&gt; будет объект в целевом контексте, и унаследует от своего глобального &lt;code&gt;Object&lt;/code&gt; класса. Объекты, передаваемые &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt; &lt;code&gt;port.onmessage()&lt;/code&gt; &lt;/a&gt; , также будут созданы в целевом контексте и унаследованы от его глобального класса &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfc70b1227f01401a4b050e13257206410687bd0" translate="yes" xml:space="preserve">
          <source>The returned buffer is statically allocated and does not need to be freed.</source>
          <target state="translated">Возвращаемый буфер статически выделен и не нуждается в освобождении.</target>
        </trans-unit>
        <trans-unit id="38fcc6c2ece2cf3c7e594688e04adf2e09823305" translate="yes" xml:space="preserve">
          <source>The returned function will be a wrapper around the supplied callback function. When the returned function is called, any errors that are thrown will be routed to the domain's &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="translated">Возвращенная функция будет оболочкой для предоставленной функции обратного вызова. Когда вызывается возвращенная функция, любые возникающие ошибки будут перенаправлены на событие &lt;code&gt;'error'&lt;/code&gt; домена .</target>
        </trans-unit>
        <trans-unit id="2d318eb946457587672c9d9705f3cc85af1dd775" translate="yes" xml:space="preserve">
          <source>The returned function will have an &lt;code&gt;asyncResource&lt;/code&gt; property referencing the &lt;code&gt;AsyncResource&lt;/code&gt; to which the function is bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03e4b5f6edfce2e491d26c75c656ecf3f9be2a9" translate="yes" xml:space="preserve">
          <source>The returned object no longer inherits from &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">Возвращенный объект больше не наследуется от &lt;code&gt;Object.prototype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efca954612151fbe49aeec68bf42cb1165e6aba5" translate="yes" xml:space="preserve">
          <source>The returned object will have the following properties:</source>
          <target state="translated">Возвращаемый объект будет иметь следующие свойства:</target>
        </trans-unit>
        <trans-unit id="44bb5d6c3855220369956ba8708ec28034c18d86" translate="yes" xml:space="preserve">
          <source>The returned result is different from the statistics returned by &lt;code&gt;v8.getHeapSpaceStatistics()&lt;/code&gt; in that &lt;code&gt;vm.measureMemory()&lt;/code&gt; measure the memory reachable by each V8 specific contexts in the current instance of the V8 engine, while the result of &lt;code&gt;v8.getHeapSpaceStatistics()&lt;/code&gt; measure the memory occupied by each heap space in the current V8 instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2663bc23f657359a1e5a0d9802b2b8ab09e2c133" translate="yes" xml:space="preserve">
          <source>The safest way to respond to a thrown error is to shut down the process. Of course, in a normal web server, there may be many open connections, and it is not reasonable to abruptly shut those down because an error was triggered by someone else.</source>
          <target state="translated">Самый безопасный способ реагирования на выброшенную ошибку-это остановить процесс.Конечно,на обычном веб-сервере может быть много открытых подключений,и нецелесообразно их внезапно закрывать,потому что ошибка была спровоцирована кем-то другим.</target>
        </trans-unit>
        <trans-unit id="17642e3dfd2688c6cd67e72a34c50952e74d46ec" translate="yes" xml:space="preserve">
          <source>The same options as &lt;a href=&quot;#child_process_child_process_exec_command_options_callback&quot;&gt;&lt;code&gt;child_process.exec()&lt;/code&gt;&lt;/a&gt; are supported. Since a shell is not spawned, behaviors such as I/O redirection and file globbing are not supported.</source>
          <target state="translated">Поддерживаются те же параметры, что и &lt;a href=&quot;#child_process_child_process_exec_command_options_callback&quot;&gt; &lt;code&gt;child_process.exec()&lt;/code&gt; &lt;/a&gt; . Поскольку оболочка не создается, такие действия, как перенаправление ввода-вывода и подстановка файлов, не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="b5c131d6859b462a4ccc2f3ff1ca448377cb2782" translate="yes" xml:space="preserve">
          <source>The scheduling policy, either &lt;code&gt;cluster.SCHED_RR&lt;/code&gt; for round-robin or &lt;code&gt;cluster.SCHED_NONE&lt;/code&gt; to leave it to the operating system. This is a global setting and effectively frozen once either the first worker is spawned, or &lt;a href=&quot;#cluster_cluster_setupmaster_settings&quot;&gt;&lt;code&gt;.setupMaster()&lt;/code&gt;&lt;/a&gt; is called, whichever comes first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61aae47bb566b3e756d07254aa9ebf2e27b0d263" translate="yes" xml:space="preserve">
          <source>The scheduling policy, either &lt;code&gt;cluster.SCHED_RR&lt;/code&gt; for round-robin or &lt;code&gt;cluster.SCHED_NONE&lt;/code&gt; to leave it to the operating system. This is a global setting and effectively frozen once either the first worker is spawned, or &lt;code&gt;cluster.setupMaster()&lt;/code&gt; is called, whichever comes first.</source>
          <target state="translated">Политика планирования: &lt;code&gt;cluster.SCHED_RR&lt;/code&gt; для циклического перебора или &lt;code&gt;cluster.SCHED_NONE&lt;/code&gt; , чтобы оставить это операционной системе. Это глобальный параметр, который фактически замораживается после того, как &lt;code&gt;cluster.setupMaster()&lt;/code&gt; первый рабочий процесс или вызывается cluster.setupMaster () , в зависимости от того, что наступит раньше.</target>
        </trans-unit>
        <trans-unit id="a1108ba05be7f85b2c2a446fb6ad5e88bb3a3f9d" translate="yes" xml:space="preserve">
          <source>The script can access the &lt;a href=&quot;globals&quot;&gt;global scope&lt;/a&gt;. Function and &lt;code&gt;var&lt;/code&gt; declarations in the script will be added to the &lt;a href=&quot;globals#globals_global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; object. Variable declarations made using &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; will be visible globally, but will not be added to the &lt;a href=&quot;globals#globals_global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478005d19999ae183e0f7a9bb0ae6f007bd16fbb" translate="yes" xml:space="preserve">
          <source>The search paths for the module.</source>
          <target state="translated">Пути поиска модуля.</target>
        </trans-unit>
        <trans-unit id="0cfd0df8336c867963656caf2b437c62fdf98b4d" translate="yes" xml:space="preserve">
          <source>The second approach is to try to handle the exception. There will be cases where the native code can catch the exception, take the appropriate action, and then continue. This is only recommended in specific cases where it is known that the exception can be safely handled. In these cases &lt;a href=&quot;#n_api_napi_get_and_clear_last_exception&quot;&gt;&lt;code&gt;napi_get_and_clear_last_exception&lt;/code&gt;&lt;/a&gt; can be used to get and clear the exception. On success, result will contain the handle to the last JavaScript &lt;code&gt;Object&lt;/code&gt; thrown. If it is determined, after retrieving the exception, the exception cannot be handled after all it can be re-thrown it with &lt;a href=&quot;#n_api_napi_throw&quot;&gt;&lt;code&gt;napi_throw&lt;/code&gt;&lt;/a&gt; where error is the JavaScript &lt;code&gt;Error&lt;/code&gt; object to be thrown.</source>
          <target state="translated">Второй подход - попытаться обработать исключение. Бывают случаи, когда собственный код может перехватить исключение, предпринять соответствующее действие и затем продолжить. Это рекомендуется только в особых случаях, когда известно, что исключение можно безопасно обработать. В этих случаях &lt;a href=&quot;#n_api_napi_get_and_clear_last_exception&quot;&gt; &lt;code&gt;napi_get_and_clear_last_exception&lt;/code&gt; &lt;/a&gt; можно использовать для получения и удаления исключения. В случае успеха результат будет содержать дескриптор последнего брошенного &lt;code&gt;Object&lt;/code&gt; JavaScript . Если определено, после извлечения исключение, исключение не может быть обработан в конце концов это может быть повторно брошено его &lt;a href=&quot;#n_api_napi_throw&quot;&gt; &lt;code&gt;napi_throw&lt;/code&gt; &lt;/a&gt; где ошибка является JavaScript &lt;code&gt;Error&lt;/code&gt; объект , который будет брошен.</target>
        </trans-unit>
        <trans-unit id="dc926d997d4c579499bbdcda07f643f7920bddbb" translate="yes" xml:space="preserve">
          <source>The second approach is where the master process creates the listen socket and sends it to interested workers. The workers then accept incoming connections directly.</source>
          <target state="translated">Второй подход заключается в том,что мастер-процесс создает прослушивающую розетку и отправляет ее заинтересованным работникам.Затем рабочие принимают входящие соединения напрямую.</target>
        </trans-unit>
        <trans-unit id="338ae710bded6a0f6fd004eec96b553cb3dbb378" translate="yes" xml:space="preserve">
          <source>The second approach should, in theory, give the best performance. In practice however, distribution tends to be very unbalanced due to operating system scheduler vagaries. Loads have been observed where over 70% of all connections ended up in just two processes, out of a total of eight.</source>
          <target state="translated">Второй подход,теоретически,должен давать наилучшие результаты.Однако на практике распределение,как правило,очень несбалансировано из-за капризов планировщика операционной системы.Наблюдаются нагрузки,когда более 70% всех соединений заканчиваются всего лишь двумя процессами из восьми.</target>
        </trans-unit>
        <trans-unit id="a15f3c8ca4baed085ff4f00bb83df9df5112dc61" translate="yes" xml:space="preserve">
          <source>The second argument can now be an &lt;code&gt;options&lt;/code&gt; object with &lt;code&gt;recursive&lt;/code&gt; and &lt;code&gt;mode&lt;/code&gt; properties.</source>
          <target state="translated">Второй аргумент теперь может быть объектом &lt;code&gt;options&lt;/code&gt; с &lt;code&gt;recursive&lt;/code&gt; свойствами и свойствами &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="056385b629217bf4d47083a5cf61e4dbc958e791" translate="yes" xml:space="preserve">
          <source>The second argument is optional. If &lt;code&gt;options&lt;/code&gt; is provided as a string, it specifies the &lt;code&gt;encoding&lt;/code&gt;. Otherwise &lt;code&gt;options&lt;/code&gt; should be passed as an object.</source>
          <target state="translated">Второй аргумент не обязателен. Если &lt;code&gt;options&lt;/code&gt; представлены в виде строки, они указывают &lt;code&gt;encoding&lt;/code&gt; . В противном случае &lt;code&gt;options&lt;/code&gt; следует передавать как объект.</target>
        </trans-unit>
        <trans-unit id="9dafbecade7b94f6c57417ea5afec4a5bc9790e3" translate="yes" xml:space="preserve">
          <source>The sections below describe the additional tools available for developing and deploying Node.js native addons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e19e2fd3684a2ee8b1c503085e8dc2cb74704b7" translate="yes" xml:space="preserve">
          <source>The selected public or private key encoding is incompatible with other options.</source>
          <target state="translated">Выбранная кодировка открытого или закрытого ключа несовместима с другими опциями.</target>
        </trans-unit>
        <trans-unit id="d2b9aebdd568a045c5581d3668edfbe15a6a2bea" translate="yes" xml:space="preserve">
          <source>The semantics of Node.js's &lt;code&gt;require()&lt;/code&gt; function were designed to be general enough to support a number of reasonable directory structures. Package manager programs such as &lt;code&gt;dpkg&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt;, and &lt;code&gt;npm&lt;/code&gt; will hopefully find it possible to build native packages from Node.js modules without modification.</source>
          <target state="translated">Семантика функции &lt;code&gt;require()&lt;/code&gt; Node.js была разработана так, чтобы быть достаточно общей для поддержки ряда разумных структур каталогов. &lt;code&gt;npm&lt;/code&gt; надеяться, что программы-менеджеры пакетов, такие как &lt;code&gt;dpkg&lt;/code&gt; , &lt;code&gt;rpm&lt;/code&gt; и npm, смогут создавать собственные пакеты из модулей Node.js без изменений.</target>
        </trans-unit>
        <trans-unit id="c9e7e477b28102f006aa9e1ae786b6e5fff1d8ea" translate="yes" xml:space="preserve">
          <source>The semantics of the Node.js &lt;code&gt;require()&lt;/code&gt; function were designed to be general enough to support reasonable directory structures. Package manager programs such as &lt;code&gt;dpkg&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt;, and &lt;code&gt;npm&lt;/code&gt; will hopefully find it possible to build native packages from Node.js modules without modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765c907408a72b7c359b1e6e3c2a44d833e954e0" translate="yes" xml:space="preserve">
          <source>The serialization API provides means of serializing JavaScript values in a way that is compatible with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;HTML structured clone algorithm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd892ccc6dffe2bd093abfe21edcd6594062c97" translate="yes" xml:space="preserve">
          <source>The serialization API provides means of serializing JavaScript values in a way that is compatible with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;HTML structured clone algorithm&lt;/a&gt;. The format is backward-compatible (i.e. safe to store to disk).</source>
          <target state="translated">API сериализации предоставляет средства сериализации значений JavaScript способом, совместимым с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;алгоритмом структурированного клонирования HTML&lt;/a&gt; . Формат обратно совместим (то есть безопасен для хранения на диске).</target>
        </trans-unit>
        <trans-unit id="6375e172794a973dd431fe6fb6d9d47672ad78be" translate="yes" xml:space="preserve">
          <source>The server can be a TCP server or an &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; server, depending on what it &lt;a href=&quot;#net_server_listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; to.</source>
          <target state="translated">Сервер может быть TCP-сервером или &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC-&lt;/a&gt; сервером, в зависимости от того, что он &lt;a href=&quot;#net_server_listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2404f9b86c98cba231fff8bebda45b2ca16649b5" translate="yes" xml:space="preserve">
          <source>The server can be tested by connecting to it using the example client from &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сервер можно протестировать, подключившись к нему с помощью примера клиента из &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aede112d180e1d47ab7a08eaa5b0ea3c6ed75bc2" translate="yes" xml:space="preserve">
          <source>The server's current certificate can be parsed to obtain the OCSP URL and certificate ID; after obtaining an OCSP response, &lt;code&gt;callback(null, resp)&lt;/code&gt; is then invoked, where &lt;code&gt;resp&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; instance containing the OCSP response. Both &lt;code&gt;certificate&lt;/code&gt; and &lt;code&gt;issuer&lt;/code&gt; are &lt;code&gt;Buffer&lt;/code&gt; DER-representations of the primary and issuer's certificates. These can be used to obtain the OCSP certificate ID and OCSP endpoint URL.</source>
          <target state="translated">Текущий сертификат сервера можно проанализировать для получения URL-адреса OCSP и идентификатора сертификата; после получения ответа OCSP вызывается &lt;code&gt;callback(null, resp)&lt;/code&gt; , где &lt;code&gt;resp&lt;/code&gt; - это экземпляр &lt;code&gt;Buffer&lt;/code&gt; содержащий ответ OCSP. И &lt;code&gt;certificate&lt;/code&gt; и &lt;code&gt;issuer&lt;/code&gt; являются &lt;code&gt;Buffer&lt;/code&gt; DER-представлениями первичного сертификата и сертификата эмитента. Их можно использовать для получения идентификатора сертификата OCSP и URL-адреса конечной точки OCSP.</target>
        </trans-unit>
        <trans-unit id="ea711def7d72186a6796edc378b6d6298bc4d28d" translate="yes" xml:space="preserve">
          <source>The servers encrypt the entire session state and send it to the client as a &quot;ticket&quot;. When reconnecting, the state is sent to the server in the initial connection. This mechanism avoids the need for server-side session cache. If the server doesn't use the ticket, for any reason (failure to decrypt it, it's too old, etc.), it will create a new session and send a new ticket. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5077&quot;&gt;RFC 5077&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76accd0d371c0c87373d40be1eddae24ddb6507b" translate="yes" xml:space="preserve">
          <source>The shell should understand the &lt;code&gt;-c&lt;/code&gt; switch. If the shell is &lt;code&gt;'cmd.exe'&lt;/code&gt;, it should understand the &lt;code&gt;/d /s /c&lt;/code&gt; switches and command line parsing should be compatible.</source>
          <target state="translated">Оболочка должна понимать ключ &lt;code&gt;-c&lt;/code&gt; . Если оболочка - &lt;code&gt;'cmd.exe'&lt;/code&gt; , она должна понимать переключатели &lt;code&gt;/d /s /c&lt;/code&gt; и синтаксический анализ командной строки должен быть совместимым.</target>
        </trans-unit>
        <trans-unit id="aeb000fbdb4d2424b01088fd13f9a5381e396488" translate="yes" xml:space="preserve">
          <source>The shell should understand the &lt;code&gt;-c&lt;/code&gt; switch. If the shell is &lt;code&gt;'cmd.exe'&lt;/code&gt;, it should understand the &lt;code&gt;/d /s /c&lt;/code&gt; switches and command-line parsing should be compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21be831d3adf2892b25eaf65824eb2c524ecba41" translate="yes" xml:space="preserve">
          <source>The shell that executed Node.js should see the exit code as &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Оболочка, запустившая Node.js, должна увидеть код выхода как &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05c0d6d3b494c3c20fef212dff014249c946a65b" translate="yes" xml:space="preserve">
          <source>The signal handler will receive the signal's name (&lt;code&gt;'SIGINT'&lt;/code&gt;, &lt;code&gt;'SIGTERM'&lt;/code&gt;, etc.) as the first argument.</source>
          <target state="translated">Обработчик сигнала получит имя сигнала ( &lt;code&gt;'SIGINT'&lt;/code&gt; , &lt;code&gt;'SIGTERM'&lt;/code&gt; и т. Д.) В качестве первого аргумента.</target>
        </trans-unit>
        <trans-unit id="47e574501f3a0d99059119864ec3279d3f9294c3" translate="yes" xml:space="preserve">
          <source>The signal used to trigger the creation of a diagnostic report. Defaults to &lt;code&gt;'SIGUSR2'&lt;/code&gt;.</source>
          <target state="translated">Сигнал, используемый для запуска создания диагностического отчета. По умолчанию &lt;code&gt;'SIGUSR2'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d52541ad62fc4e1c6ca8683f187715851a92c6fd" translate="yes" xml:space="preserve">
          <source>The simple asynchronous work APIs above may not be appropriate for every scenario. When using any other asynchronous mechanism, the following APIs are necessary to ensure an asynchronous operation is properly tracked by the runtime.</source>
          <target state="translated">Простые асинхронные рабочие API,приведенные выше,могут подходить не для каждого сценария.При использовании любого другого асинхронного механизма для обеспечения правильного отслеживания асинхронной операции во время выполнения необходимы следующие API.</target>
        </trans-unit>
        <trans-unit id="0cf28a9f4765208e101d68cf21ce0fa06a19c689" translate="yes" xml:space="preserve">
          <source>The size of the file in bytes.</source>
          <target state="translated">Размер файла в байтах.</target>
        </trans-unit>
        <trans-unit id="2a5cdd3536fe2bed3772a134a40f524b1ba55908" translate="yes" xml:space="preserve">
          <source>The socket timeout logic is set up on connection, so changing this value only affects new connections to the server, not any existing connections.</source>
          <target state="translated">Логика таймаута сокета настраивается на соединение,поэтому изменение этого значения влияет только на новые соединения с сервером,а не на существующие соединения.</target>
        </trans-unit>
        <trans-unit id="6c1c5af86acdb2cbdf7981b86ae3b974f13c3df2" translate="yes" xml:space="preserve">
          <source>The special handling of the &lt;code&gt;'error'&lt;/code&gt; event is only used when &lt;code&gt;events.once()&lt;/code&gt; is used to wait for another event. If &lt;code&gt;events.once()&lt;/code&gt; is used to wait for the '&lt;code&gt;error'&lt;/code&gt; event itself, then it is treated as any other kind of event without special handling:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471976270e8935af1d178909e020a76781b88bf1" translate="yes" xml:space="preserve">
          <source>The specific &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcfaca3f84262ad37f21835b36d6a8ca0a1720e" translate="yes" xml:space="preserve">
          <source>The specific &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; object is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9568eb7140ccc6f348c4550a9426056f00bc293" translate="yes" xml:space="preserve">
          <source>The specific operation of &lt;code&gt;console.clear()&lt;/code&gt; can vary across operating systems and terminal types. For most Linux operating systems, &lt;code&gt;console.clear()&lt;/code&gt; operates similarly to the &lt;code&gt;clear&lt;/code&gt; shell command. On Windows, &lt;code&gt;console.clear()&lt;/code&gt; will clear only the output in the current terminal viewport for the Node.js binary.</source>
          <target state="translated">Конкретные операции &lt;code&gt;console.clear()&lt;/code&gt; могут различаться в зависимости от операционной системы и типа терминала. Для большинства операционных систем Linux &lt;code&gt;console.clear()&lt;/code&gt; работает аналогично команде &lt;code&gt;clear&lt;/code&gt; shell. В Windows &lt;code&gt;console.clear()&lt;/code&gt; очищает только вывод в текущем окне просмотра терминала для двоичного файла Node.js.</target>
        </trans-unit>
        <trans-unit id="26f56414b822e235f350940f03c7fed02c4a3f19" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;secureProtocol&lt;/code&gt; method is invalid. It is either unknown, or disabled because it is insecure.</source>
          <target state="translated">Указанный метод &lt;code&gt;secureProtocol&lt;/code&gt; недействителен. Он либо неизвестен, либо отключен, поскольку небезопасен.</target>
        </trans-unit>
        <trans-unit id="d4404d9ad06af7978ed7f6400d6bff8448f52f29" translate="yes" xml:space="preserve">
          <source>The specifier string does not perform any searching and must match exactly what is provided to the &lt;code&gt;require()&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt;. Therefore, multiple specifiers may be needed in the policy if it uses multiple different strings to point to the same module (such as excluding the extension).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1dd38b3953bad12ed9a2d4c03e49e9322e0421" translate="yes" xml:space="preserve">
          <source>The specifier string does not perform any searching and must match exactly what is provided to the &lt;code&gt;require()&lt;/code&gt;. Therefore, multiple specifiers may be needed in the policy if &lt;code&gt;require()&lt;/code&gt; uses multiple different strings to point to the same module (such as excluding the extension).</source>
          <target state="translated">Строка спецификатора не выполняет никакого поиска и должна точно соответствовать тому, что предоставлено &lt;code&gt;require()&lt;/code&gt; . Следовательно, в политике может &lt;code&gt;require()&lt;/code&gt; несколько спецификаторов, если require () использует несколько разных строк для указания на один и тот же модуль (например, исключая расширение).</target>
        </trans-unit>
        <trans-unit id="71c55e13b6ab04144ed0ca0148cd676f281a362f" translate="yes" xml:space="preserve">
          <source>The specifiers of all dependencies of this module. The returned array is frozen to disallow any changes to it.</source>
          <target state="translated">Спецификаторы всех зависимостей этого модуля.Возвращаемый массив замораживается,чтобы запретить его изменение.</target>
        </trans-unit>
        <trans-unit id="6712a27a78d38007f4db6badef0327b5c9f247ac" translate="yes" xml:space="preserve">
          <source>The speed of &lt;code&gt;zlib&lt;/code&gt; compression is affected most dramatically by the &lt;code&gt;level&lt;/code&gt; setting. A higher level will result in better compression, but will take longer to complete. A lower level will result in less compression, but will be much faster.</source>
          <target state="translated">На скорость сжатия &lt;code&gt;zlib&lt;/code&gt; наиболее сильно влияет настройка &lt;code&gt;level&lt;/code&gt; . Более высокий уровень приведет к лучшему сжатию, но для завершения потребуется больше времени. Более низкий уровень приведет к меньшему сжатию, но будет намного быстрее.</target>
        </trans-unit>
        <trans-unit id="baae50c19885878970af46308a9fcef6e3ca5413" translate="yes" xml:space="preserve">
          <source>The stack trace is extended to include the point in time at which the &lt;code&gt;domain&lt;/code&gt; module had been loaded.</source>
          <target state="translated">Трассировки стека расширена , чтобы включить в момент времени , в котором &lt;code&gt;domain&lt;/code&gt; был загружен модуль.</target>
        </trans-unit>
        <trans-unit id="d04dab8c062b60270fff8951733a2c1bf12db8dc" translate="yes" xml:space="preserve">
          <source>The standard deviation of the recorded event loop delays.</source>
          <target state="translated">Стандартное отклонение регистрируемых задержек контура обработки событий.</target>
        </trans-unit>
        <trans-unit id="12d4241096406199958bcd38c41ce903d3de3859" translate="yes" xml:space="preserve">
          <source>The stream is closed when the &lt;code&gt;'error'&lt;/code&gt; event is emitted unless the &lt;a href=&quot;#stream_new_stream_writable_options&quot;&gt;&lt;code&gt;autoDestroy&lt;/code&gt;&lt;/a&gt; option was set to &lt;code&gt;false&lt;/code&gt; when creating the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2ac76df98dbcdd434e991056889f9574990f71" translate="yes" xml:space="preserve">
          <source>The stream is not closed when the &lt;code&gt;'error'&lt;/code&gt; event is emitted unless the &lt;a href=&quot;#stream_constructor_new_stream_writable_options&quot;&gt;&lt;code&gt;autoDestroy&lt;/code&gt;&lt;/a&gt; option was set to &lt;code&gt;true&lt;/code&gt; when creating the stream.</source>
          <target state="translated">Поток не закрывается при возникновении события &lt;code&gt;'error'&lt;/code&gt; если для параметра &lt;a href=&quot;#stream_constructor_new_stream_writable_options&quot;&gt; &lt;code&gt;autoDestroy&lt;/code&gt; не&lt;/a&gt; было установлено значение &lt;code&gt;true&lt;/code&gt; при создании потока.</target>
        </trans-unit>
        <trans-unit id="a44550d4120786eeeb6f0da72c77067c943d5e7f" translate="yes" xml:space="preserve">
          <source>The stream is not piped to any writable destination.</source>
          <target state="translated">Поток не направляется к месту назначения,которое можно записать.</target>
        </trans-unit>
        <trans-unit id="138b0e7f3ba481dfbd0c57d82fdbac0b326fefae" translate="yes" xml:space="preserve">
          <source>The stream's write() callback and return value are exposed.</source>
          <target state="translated">Обратный вызов write()и возвращаемое значение потока выставляются.</target>
        </trans-unit>
        <trans-unit id="350def31fd9875bd3d581c4fbb2b29aebcde0c4d" translate="yes" xml:space="preserve">
          <source>The string passed to &lt;code&gt;require()&lt;/code&gt; is the name of the target in &lt;code&gt;binding.gyp&lt;/code&gt; responsible for creating the &lt;code&gt;.node&lt;/code&gt; file.</source>
          <target state="translated">Строка, переданная в &lt;code&gt;require()&lt;/code&gt; является именем цели в &lt;code&gt;binding.gyp&lt;/code&gt; , ответственной за создание файла &lt;code&gt;.node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f4858a294cb8f6108238742da8a2f702b4e7800" translate="yes" xml:space="preserve">
          <source>The string representation of the local IP address the remote client is connecting on. For example, in a server listening on &lt;code&gt;'0.0.0.0'&lt;/code&gt;, if a client connects on &lt;code&gt;'192.168.1.1'&lt;/code&gt;, the value of &lt;code&gt;socket.localAddress&lt;/code&gt; would be &lt;code&gt;'192.168.1.1'&lt;/code&gt;.</source>
          <target state="translated">Строковое представление локального IP-адреса, к которому подключается удаленный клиент. Например, на сервере, прослушивающем &lt;code&gt;'0.0.0.0'&lt;/code&gt; , если клиент подключается к &lt;code&gt;'192.168.1.1'&lt;/code&gt; , значение &lt;code&gt;socket.localAddress&lt;/code&gt; будет &lt;code&gt;'192.168.1.1'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c907e196491aec5b81c0d022d86f6e906bde2939" translate="yes" xml:space="preserve">
          <source>The string representation of the remote IP address. For example, &lt;code&gt;'74.125.127.100'&lt;/code&gt; or &lt;code&gt;'2001:4860:a005::68'&lt;/code&gt;. Value may be &lt;code&gt;undefined&lt;/code&gt; if the socket is destroyed (for example, if the client disconnected).</source>
          <target state="translated">Строковое представление удаленного IP-адреса. Например, &quot; &lt;code&gt;'74.125.127.100'&lt;/code&gt; или &lt;code&gt;'2001:4860:a005::68'&lt;/code&gt; . Значение может быть &lt;code&gt;undefined&lt;/code&gt; если сокет разрушен (например, если клиент отключился).</target>
        </trans-unit>
        <trans-unit id="2179deb625958e34cb0c9470426542821e19d005" translate="yes" xml:space="preserve">
          <source>The string representation of the remote IP family. &lt;code&gt;'IPv4'&lt;/code&gt; or &lt;code&gt;'IPv6'&lt;/code&gt;.</source>
          <target state="translated">Строковое представление семейства удаленных IP-адресов. &lt;code&gt;'IPv4'&lt;/code&gt; или &lt;code&gt;'IPv6'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b14d2cbabe1d821f1fe19c891d331b602e974058" translate="yes" xml:space="preserve">
          <source>The string representing the stack trace is lazily generated when the &lt;code&gt;error.stack&lt;/code&gt; property is &lt;strong&gt;accessed&lt;/strong&gt;.</source>
          <target state="translated">Строка , представляющая трассировки стека лениво генерируется , когда &lt;code&gt;error.stack&lt;/code&gt; свойство &lt;strong&gt;доступа&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="98fe85fdbe508ef6c827c907e5d2f1831bd9b29d" translate="yes" xml:space="preserve">
          <source>The substring that was used for the matching.</source>
          <target state="translated">Подстрока,которая была использована для сопоставления.</target>
        </trans-unit>
        <trans-unit id="d4576fd7cf24c54c52dedbc9e9bd4dfe7af6d9fe" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;callback&lt;/code&gt; function is called with two arguments: &lt;code&gt;err&lt;/code&gt; and &lt;code&gt;derivedKey&lt;/code&gt;. If an error occurs while deriving the key, &lt;code&gt;err&lt;/code&gt; will be set; otherwise &lt;code&gt;err&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;. By default, the successfully generated &lt;code&gt;derivedKey&lt;/code&gt; will be passed to the callback as a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. An error will be thrown if any of the input arguments specify invalid values or types.</source>
          <target state="translated">Предоставленная функция &lt;code&gt;callback&lt;/code&gt; вызывается с двумя аргументами: &lt;code&gt;err&lt;/code&gt; и производный &lt;code&gt;derivedKey&lt;/code&gt; . Если при получении ключа произойдет ошибка, будет установлена ошибка &lt;code&gt;err&lt;/code&gt; ; в противном случае &lt;code&gt;err&lt;/code&gt; будет &lt;code&gt;null&lt;/code&gt; . По умолчанию успешно сгенерированный производный &lt;code&gt;derivedKey&lt;/code&gt; будет передан обратному вызову как &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; . Ошибка будет выдана, если какой-либо из входных аргументов указывает недопустимые значения или типы.</target>
        </trans-unit>
        <trans-unit id="0957fe6b3d636aed70380ea3ee84cc5c69bf4bee" translate="yes" xml:space="preserve">
          <source>The synchronous form blocks the Node.js event loop and further JavaScript execution until the operation is complete. Exceptions are thrown immediately and can be handled using &lt;code&gt;try&amp;hellip;catch&lt;/code&gt;, or can be allowed to bubble up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b6f6c400f32e4c15818f48380024fa6f42a8c5" translate="yes" xml:space="preserve">
          <source>The syntax of these values is not validated by the Node.js implementation and are passed through as provided by the user or received from the peer.</source>
          <target state="translated">Синтаксис этих значений не проверяется реализацией Node.js и передается в том виде,в котором он был предоставлен пользователем или получен от равноправного пользователя.</target>
        </trans-unit>
        <trans-unit id="6225c4c4ebdc288d3a2d4ec23c52209f6023bf46" translate="yes" xml:space="preserve">
          <source>The term &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Perfect_forward_secrecy&quot;&gt;Forward Secrecy&lt;/a&gt;&quot; or &quot;Perfect Forward Secrecy&quot; describes a feature of key-agreement (i.e., key-exchange) methods. That is, the server and client keys are used to negotiate new temporary keys that are used specifically and only for the current communication session. Practically, this means that even if the server's private key is compromised, communication can only be decrypted by eavesdroppers if the attacker manages to obtain the key-pair specifically generated for the session.</source>
          <target state="translated">Термин &amp;laquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Perfect_forward_secrecy&quot;&gt;прямая секретность&lt;/a&gt; &amp;raquo; или &amp;laquo;совершенная прямая секретность&amp;raquo; описывает особенность методов согласования ключей (то есть обмена ключами). То есть ключи сервера и клиента используются для согласования новых временных ключей, которые используются специально и только для текущего сеанса связи. На практике это означает, что даже если закрытый ключ сервера скомпрометирован, перехватчики могут расшифровать обмен данными только в том случае, если злоумышленнику удастся получить пару ключей, специально сгенерированную для сеанса.</target>
        </trans-unit>
        <trans-unit id="e930ba3f37adc9345f4bcca9cb555bc0b2e00b12" translate="yes" xml:space="preserve">
          <source>The term &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Perfect_forward_secrecy&quot;&gt;forward secrecy&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;perfect forward secrecy&lt;/em&gt; describes a feature of key-agreement (i.e., key-exchange) methods. That is, the server and client keys are used to negotiate new temporary keys that are used specifically and only for the current communication session. Practically, this means that even if the server's private key is compromised, communication can only be decrypted by eavesdroppers if the attacker manages to obtain the key-pair specifically generated for the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bad6d5ba86517581ea93518756b284caea90d77" translate="yes" xml:space="preserve">
          <source>The thread id as given by &lt;a href=&quot;worker_threads#worker_threads_worker_threadid&quot;&gt;&lt;code&gt;worker_threads.threadId&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644b7390ff4919cf711608e29230a6b5cd65c540" translate="yes" xml:space="preserve">
          <source>The thread which is generating the report will wait for the reports from Worker threads to finish. However, the latency for this will usually be low, as both running JavaScript and the event loop are interrupted to generate the report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5027f2889856b5eff5759ff3a0048ebbb10df85e" translate="yes" xml:space="preserve">
          <source>The thread-safe function can be &quot;aborted&quot; by giving a value of &lt;code&gt;napi_tsfn_abort&lt;/code&gt; to &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt;. This will cause all subsequent APIs associated with the thread-safe function except &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; to return &lt;code&gt;napi_closing&lt;/code&gt; even before its reference count reaches zero. In particular, &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; will return &lt;code&gt;napi_closing&lt;/code&gt;, thus informing the threads that it is no longer possible to make asynchronous calls to the thread-safe function. This can be used as a criterion for terminating the thread. &lt;strong&gt;Upon receiving a return value of &lt;code&gt;napi_closing&lt;/code&gt; from &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; a thread must make no further use of the thread-safe function because it is no longer guaranteed to be allocated.&lt;/strong&gt;</source>
          <target state="translated">Поточно-безопасную функцию можно &amp;laquo;прервать&amp;raquo;, задав значение &lt;code&gt;napi_tsfn_abort&lt;/code&gt; для &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; . Это приведет к тому, что все последующие API, связанные с потокобезопасной функцией, за исключением &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; будут возвращать &lt;code&gt;napi_closing&lt;/code&gt; даже до того, как его счетчик ссылок достигнет нуля. В частности, &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; вернет &lt;code&gt;napi_closing&lt;/code&gt; , тем самым информируя потоки о том, что больше невозможно выполнять асинхронные вызовы потокобезопасной функции. Это можно использовать как критерий для завершения потока. &lt;strong&gt;После получения возвращаемого значения &lt;code&gt;napi_closing&lt;/code&gt; от &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; поток не должен больше использовать потокобезопасную функцию, потому что не гарантируется его выделение.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c593e7d8b94b3676794e201f5b57070222f901e3" translate="yes" xml:space="preserve">
          <source>The thread-safe function can be &quot;aborted&quot; by giving a value of &lt;code&gt;napi_tsfn_abort&lt;/code&gt; to &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt;. This will cause all subsequent APIs associated with the thread-safe function except &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; to return &lt;code&gt;napi_closing&lt;/code&gt; even before its reference count reaches zero. In particular, &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; will return &lt;code&gt;napi_closing&lt;/code&gt;, thus informing the threads that it is no longer possible to make asynchronous calls to the thread-safe function. This can be used as a criterion for terminating the thread. &lt;strong&gt;Upon receiving a return value of &lt;code&gt;napi_closing&lt;/code&gt; from &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; a thread must not use the thread-safe function anymore because it is no longer guaranteed to be allocated.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63541238aa26564d51eb28716b3e8da2eb477a58" translate="yes" xml:space="preserve">
          <source>The three tools listed here permit native addon developers and maintainers to create and upload binaries to public or private servers. These tools are typically integrated with CI/CD build systems like &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://www.appveyor.com&quot;&gt;AppVeyor&lt;/a&gt; to build and upload binaries for a variety of platforms and architectures. These binaries are then available for download by users who do not need to have a C/C++ toolchain installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae69600838324998125805013d93da028ccbe298" translate="yes" xml:space="preserve">
          <source>The timeout passed to &lt;code&gt;Atomics.wait&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e67c9640ec1fa6137f83769ae5b65b87eb23576" translate="yes" xml:space="preserve">
          <source>The timer functions within Node.js implement a similar API as the timers API provided by Web Browsers but use a different internal implementation that is built around the Node.js &lt;a href=&quot;https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/#setimmediate-vs-settimeout&quot;&gt;Event Loop&lt;/a&gt;.</source>
          <target state="translated">Функции таймера в системе Node.js реализовать подобный API , как таймеры API , предоставляемые веб - браузеры , но использовать другую внутреннюю реализацию, которая построена вокруг Node.js &lt;a href=&quot;https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/#setimmediate-vs-settimeout&quot;&gt;Loop Event&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24142a2f59af56bc69ad24cdd8ff0eb028144072" translate="yes" xml:space="preserve">
          <source>The times in the stat object have the following semantics:</source>
          <target state="translated">Время в объекте статистики имеет следующую семантику:</target>
        </trans-unit>
        <trans-unit id="11338b33321f7c1210af69f2e5b2929e07ab4a7f" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the creation time of this file expressed in milliseconds since the POSIX Epoch.</source>
          <target state="translated">Временная метка,указывающая время создания этого файла,выражается в миллисекундах со времен эпохи POSIX.</target>
        </trans-unit>
        <trans-unit id="17b34123fd039eac484c0932d35c7d243a87f909" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the creation time of this file.</source>
          <target state="translated">Временная метка,указывающая время создания этого файла.</target>
        </trans-unit>
        <trans-unit id="724e46ddf25f0bcf42fa24bc37ddf8c0097582d7" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the last time the file status was changed expressed in milliseconds since the POSIX Epoch.</source>
          <target state="translated">Временная метка,указывающая на последнее изменение статуса файла,выражается в миллисекундах со времен эпохи POSIX.</target>
        </trans-unit>
        <trans-unit id="61773109ba1c85f4ebece132711c5158b722aa5c" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the last time the file status was changed.</source>
          <target state="translated">Временная метка,указывающая на последнее изменение статуса файла.</target>
        </trans-unit>
        <trans-unit id="069fd01b27a0105d764e62a925be9ce027926e36" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the last time this file was accessed expressed in milliseconds since the POSIX Epoch.</source>
          <target state="translated">Временная метка,указывающая на последний доступ к этому файлу,выражается в миллисекундах со времен эпохи POSIX.</target>
        </trans-unit>
        <trans-unit id="bb6699921685ac3e2dd128110a9aa9134e05fa52" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the last time this file was accessed.</source>
          <target state="translated">Временная метка,указывающая на последний доступ к этому файлу.</target>
        </trans-unit>
        <trans-unit id="97c50105501bb2bfd22cb492162a0f85fc156c0e" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the last time this file was modified expressed in milliseconds since the POSIX Epoch.</source>
          <target state="translated">Временная метка,указывающая на последний раз,когда этот файл был изменен,выражается в миллисекундах со времен эпохи POSIX.</target>
        </trans-unit>
        <trans-unit id="d04d4005b317a67d275b64117bfd954f165821eb" translate="yes" xml:space="preserve">
          <source>The timestamp indicating the last time this file was modified.</source>
          <target state="translated">Временная метка,указывающая на последний раз,когда этот файл был изменен.</target>
        </trans-unit>
        <trans-unit id="4ee4420a40bacb4b309040070a2a109b60250f40" translate="yes" xml:space="preserve">
          <source>The total number of milliseconds elapsed for this entry. This value will not be meaningful for all Performance Entry types.</source>
          <target state="translated">Общее количество миллисекунд,прошедших для этой записи.Это значение не будет иметь значения для всех типов записи &quot;Производительность&quot;.</target>
        </trans-unit>
        <trans-unit id="dceaa4442e4a67a592b8e691c590ea3c3a720f78" translate="yes" xml:space="preserve">
          <source>The tracing system uses the same time source as the one used by &lt;code&gt;process.hrtime()&lt;/code&gt;. However the trace-event timestamps are expressed in microseconds, unlike &lt;code&gt;process.hrtime()&lt;/code&gt; which returns nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abafe3c3983a12616d3ab9d5970201bbaeddb49e" translate="yes" xml:space="preserve">
          <source>The transcoding process will use substitution characters if a given byte sequence cannot be adequately represented in the target encoding. For instance:</source>
          <target state="translated">В процессе транскодирования будут использоваться подстановочные символы,если заданная последовательность байтов не может быть адекватно представлена в целевой кодировке.Например:</target>
        </trans-unit>
        <trans-unit id="580e806012432ab96eb065a247141bef72a7f774" translate="yes" xml:space="preserve">
          <source>The type of an asynchronous resource was invalid. Users are also able to define their own types if using the public embedder API.</source>
          <target state="translated">Тип асинхронного ресурса был недействительным.Пользователи также могут определять свои собственные типы при использовании публичного API встраиваемого ресурса.</target>
        </trans-unit>
        <trans-unit id="c4fe24a1a4412575d21267293d8a210703d96afd" translate="yes" xml:space="preserve">
          <source>The type of the performance entry. Currently it may be one of: &lt;code&gt;'node'&lt;/code&gt;, &lt;code&gt;'mark'&lt;/code&gt;, &lt;code&gt;'measure'&lt;/code&gt;, &lt;code&gt;'gc'&lt;/code&gt;, &lt;code&gt;'function'&lt;/code&gt;, &lt;code&gt;'http2'&lt;/code&gt; or &lt;code&gt;'http'&lt;/code&gt;.</source>
          <target state="translated">Тип записи о производительности. В настоящее время это может быть одно из: &lt;code&gt;'node'&lt;/code&gt; , &lt;code&gt;'mark'&lt;/code&gt; , &lt;code&gt;'measure'&lt;/code&gt; , &lt;code&gt;'gc'&lt;/code&gt; , &lt;code&gt;'function'&lt;/code&gt; , &lt;code&gt;'http2'&lt;/code&gt; или &lt;code&gt;'http'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a75304b33d14797ab764eb8c4c7d32f6e108038" translate="yes" xml:space="preserve">
          <source>The type of the performance entry. It may be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5e053536c481a8b50ecd5b068ee7fcf0ba2c2e" translate="yes" xml:space="preserve">
          <source>The type tags are now properly compared and there are a couple minor comparison adjustments to make the check less surprising.</source>
          <target state="translated">Тэги типов теперь правильно сравниваются,и есть пара небольших корректировок сравнения,чтобы сделать проверку менее удивительной.</target>
        </trans-unit>
        <trans-unit id="d1ae4d26f68ff9e770ba1c7b9fe1bb317ab919ab" translate="yes" xml:space="preserve">
          <source>The typical flow of an OCSP Request is as follows:</source>
          <target state="translated">Типичный поток OCSP-запроса выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="ed60e000342dc962c9266db500477f9e994c8a86" translate="yes" xml:space="preserve">
          <source>The underlying memory for &lt;code&gt;Buffer&lt;/code&gt; instances created in this way is &lt;em&gt;not initialized&lt;/em&gt;. The contents of the newly created &lt;code&gt;Buffer&lt;/code&gt; are unknown and &lt;em&gt;may contain sensitive data&lt;/em&gt;. Use &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(0)&lt;/code&gt;&lt;/a&gt; to initialize such &lt;code&gt;Buffer&lt;/code&gt; instances with zeroes.</source>
          <target state="translated">Базовая память для экземпляров &lt;code&gt;Buffer&lt;/code&gt; , созданных таким образом, &lt;em&gt;не инициализируется&lt;/em&gt; . Содержимое вновь созданного &lt;code&gt;Buffer&lt;/code&gt; неизвестно и &lt;em&gt;может содержать конфиденциальные данные&lt;/em&gt; . Используйте &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(0)&lt;/code&gt; &lt;/a&gt; для инициализации таких экземпляров &lt;code&gt;Buffer&lt;/code&gt; нулями.</target>
        </trans-unit>
        <trans-unit id="58b7a5f60ed15b149caff061065151e09d20b14b" translate="yes" xml:space="preserve">
          <source>The underlying memory for &lt;code&gt;Buffer&lt;/code&gt; instances created in this way is &lt;em&gt;not initialized&lt;/em&gt;. The contents of the newly created &lt;code&gt;Buffer&lt;/code&gt; are unknown and &lt;em&gt;may contain sensitive data&lt;/em&gt;. Use &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; instead to initialize &lt;code&gt;Buffer&lt;/code&gt; instances with zeroes.</source>
          <target state="translated">Базовая память для экземпляров &lt;code&gt;Buffer&lt;/code&gt; , созданных таким образом, &lt;em&gt;не инициализируется&lt;/em&gt; . Содержимое вновь созданного &lt;code&gt;Buffer&lt;/code&gt; неизвестно и &lt;em&gt;может содержать конфиденциальные данные&lt;/em&gt; . &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; этого используйте Buffer.alloc (), чтобы инициализировать экземпляры &lt;code&gt;Buffer&lt;/code&gt; нулями.</target>
        </trans-unit>
        <trans-unit id="4ef9fd7dad9eaa34841c0f3a9cab53f8a8cb3e58" translate="yes" xml:space="preserve">
          <source>The underlying memory for &lt;code&gt;Buffer&lt;/code&gt; instances created in this way is &lt;em&gt;not initialized&lt;/em&gt;. The contents of the newly created &lt;code&gt;Buffer&lt;/code&gt; are unknown and &lt;em&gt;may contain sensitive data&lt;/em&gt;. Use &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; instead to initialize &lt;code&gt;Buffer&lt;/code&gt; instances with zeroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a787b77e22fb6f3e77127ec8593459c30794b75" translate="yes" xml:space="preserve">
          <source>The underlying memory for &lt;code&gt;SlowBuffer&lt;/code&gt; instances is &lt;em&gt;not initialized&lt;/em&gt;. The contents of a newly created &lt;code&gt;SlowBuffer&lt;/code&gt; are unknown and may contain sensitive data. Use &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(0)&lt;/code&gt;&lt;/a&gt; to initialize a &lt;code&gt;SlowBuffer&lt;/code&gt; with zeroes.</source>
          <target state="translated">Базовая память для экземпляров &lt;code&gt;SlowBuffer&lt;/code&gt; &lt;em&gt;не инициализируется&lt;/em&gt; . Содержимое вновь созданного &lt;code&gt;SlowBuffer&lt;/code&gt; неизвестно и может содержать конфиденциальные данные. Используйте &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(0)&lt;/code&gt; &lt;/a&gt; чтобы инициализировать &lt;code&gt;SlowBuffer&lt;/code&gt; нулями.</target>
        </trans-unit>
        <trans-unit id="867a8f54f53cc42a74637197afdab6fff988978b" translate="yes" xml:space="preserve">
          <source>The undocumented &lt;code&gt;net._setSimultaneousAccepts()&lt;/code&gt; function was originally intended for debugging and performance tuning when using the &lt;code&gt;child_process&lt;/code&gt; and &lt;code&gt;cluster&lt;/code&gt; modules on Windows. The function is not generally useful and is being removed. See discussion here: &lt;a href=&quot;https://github.com/nodejs/node/issues/18391&quot;&gt;https://github.com/nodejs/node/issues/18391&lt;/a&gt;</source>
          <target state="translated">Недокументированная &lt;code&gt;net._setSimultaneousAccepts()&lt;/code&gt; изначально предназначалась для отладки и настройки производительности при использовании модулей &lt;code&gt;child_process&lt;/code&gt; и &lt;code&gt;cluster&lt;/code&gt; в Windows. Функция обычно бесполезна и удаляется. См. Обсуждение здесь: &lt;a href=&quot;https://github.com/nodejs/node/issues/18391&quot;&gt;https://github.com/nodejs/node/issues/18391&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b521521f75103faccb7d51cd9d2f1b5e0e6ccaf" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;readable.setEncoding()&lt;/code&gt; will change the behavior of how the &lt;code&gt;highWaterMark&lt;/code&gt; operates in non-object mode.</source>
          <target state="translated">Использование &lt;code&gt;readable.setEncoding()&lt;/code&gt; изменит поведение &lt;code&gt;highWaterMark&lt;/code&gt; в необъектном режиме.</target>
        </trans-unit>
        <trans-unit id="27af502777cc48272ed80adad79f83defdbec1fe" translate="yes" xml:space="preserve">
          <source>The use of the &lt;code&gt;'error'&lt;/code&gt; event mechanism is most common for &lt;a href=&quot;stream&quot;&gt;stream-based&lt;/a&gt; and &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;event emitter-based&lt;/a&gt; APIs, which themselves represent a series of asynchronous operations over time (as opposed to a single operation that may pass or fail).</source>
          <target state="translated">Использование механизма событий &lt;code&gt;'error'&lt;/code&gt; наиболее распространено для API на &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;основе &lt;/a&gt;&lt;a href=&quot;stream&quot;&gt;потоков&lt;/a&gt; и источников событий , которые сами представляют собой серию асинхронных операций с течением времени (в отличие от одной операции, которая может пройти или потерпеть неудачу).</target>
        </trans-unit>
        <trans-unit id="f9afa630637657eabbb89a3f52ab510d1fb28688" translate="yes" xml:space="preserve">
          <source>The use of the Extended CONNECT Protocol is enabled by HTTP/2 servers by using the &lt;code&gt;enableConnectProtocol&lt;/code&gt; setting:</source>
          <target state="translated">Использование расширенного протокола CONNECT разрешено серверами HTTP / 2 с помощью параметра &lt;code&gt;enableConnectProtocol&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="300d2118e20daa8e0f1e2f8f53ad243a96013499" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;'android'&lt;/code&gt; may also be returned if Node.js is built on the Android operating system. &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#androidandroid-based-devices-eg-firefox-os&quot;&gt;Android support is experimental&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f4a988511ad2f772cdb10a461f62d9115d066c" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;'android'&lt;/code&gt; may also be returned if the Node.js is built on the Android operating system. However, Android support in Node.js &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#androidandroid-based-devices-eg-firefox-os&quot;&gt;is experimental&lt;/a&gt;.</source>
          <target state="translated">Значение &lt;code&gt;'android'&lt;/code&gt; также может быть возвращено, если Node.js создан в операционной системе Android. Однако поддержка Android в Node.js &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#androidandroid-based-devices-eg-firefox-os&quot;&gt;носит экспериментальный характер&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c07b4ef549b464279da1a098d4302bead0c3d309" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;'android'&lt;/code&gt; may also be returned if the Node.js is built on the Android operating system. However, Android support in Node.js is considered &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#androidandroid-based-devices-eg-firefox-os&quot;&gt;to be experimental&lt;/a&gt; at this time.</source>
          <target state="translated">Значение &lt;code&gt;'android'&lt;/code&gt; также может быть возвращено, если Node.js создан в операционной системе Android. Однако в настоящее время поддержка Android в Node.js считается &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#androidandroid-based-devices-eg-firefox-os&quot;&gt;экспериментальной&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="941fe2cec88cb061344cd4ca3f47041ec7d3d800" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;0&lt;/code&gt; is now accepted as a file descriptor.</source>
          <target state="translated">Значение &lt;code&gt;0&lt;/code&gt; теперь принимается в качестве дескриптора файла.</target>
        </trans-unit>
        <trans-unit id="ddbfd621c854ebb6c9668e80ef6194f125b93fb8" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;undefined&lt;/code&gt; cannot be used for cases where there is not a thrown exception due to possible ambiguity with &lt;code&gt;throw undefined;&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;undefined&lt;/code&gt; не может использоваться в случаях, когда не возникает исключение из-за возможной неоднозначности с &lt;code&gt;throw undefined;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="d78b331e35be7b21a30c47f32e06a07819b550e7" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;homedir&lt;/code&gt; returned by &lt;code&gt;os.userInfo()&lt;/code&gt; is provided by the operating system. This differs from the result of &lt;code&gt;os.homedir()&lt;/code&gt;, which queries environment variables for the home directory before falling back to the operating system response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22adcf410f61546f4cf7752ab0362f5a6a5606a" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;homedir&lt;/code&gt; returned by &lt;code&gt;os.userInfo()&lt;/code&gt; is provided by the operating system. This differs from the result of &lt;code&gt;os.homedir()&lt;/code&gt;, which queries several environment variables for the home directory before falling back to the operating system response.</source>
          <target state="translated">Значение &lt;code&gt;homedir&lt;/code&gt; , возвращаемое &lt;code&gt;os.userInfo()&lt;/code&gt; , предоставляется операционной системой. Это отличается от результата &lt;code&gt;os.homedir()&lt;/code&gt; , который запрашивает несколько переменных среды для домашнего каталога, прежде чем вернуться к ответу операционной системы.</target>
        </trans-unit>
        <trans-unit id="6329830cca711ff7e90b6ad78fe1cb5caa3423e1" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; is &lt;a href=&quot;globals#globals_global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; within the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c400444128a7253063ab3d3ca508cbfb8b9928" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;urlObject.hash&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;urlObject.hash&lt;/code&gt; добавляется в &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f11b40efff2f11ec85da3f23b35a76cc6588c477" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;urlObject.pathname&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;urlObject.pathname&lt;/code&gt; добавляется в &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5ee59ce8058895b38d6200c77460df3494139ea" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;urlObject.port&lt;/code&gt; is coerced to a string and appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;urlObject.port&lt;/code&gt; приводится к строке и добавляется к &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a81e556419112a8d0a931ecf395dd3247be233" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;urlObject.search&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;urlObject.search&lt;/code&gt; добавляется к &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7948e802953d66c2402ca8fa5d1b25f66c1e5b8" translate="yes" xml:space="preserve">
          <source>The value passed to &lt;code&gt;postMessage()&lt;/code&gt; contained an object that is not supported for transferring.</source>
          <target state="translated">Значение, переданное в &lt;code&gt;postMessage()&lt;/code&gt; содержало объект, который не поддерживается для передачи.</target>
        </trans-unit>
        <trans-unit id="e79bd05eced9303cb66ff355ac9f577ee93b88c0" translate="yes" xml:space="preserve">
          <source>The value returned is an array of objects containing the following properties:</source>
          <target state="translated">Возвращаемое значение представляет собой массив объектов,содержащих следующие свойства:</target>
        </trans-unit>
        <trans-unit id="ca7dd665e8fdfe267d513d08093ce8bedbca4171" translate="yes" xml:space="preserve">
          <source>The value will be &lt;code&gt;true&lt;/code&gt; if decoding errors result in a &lt;code&gt;TypeError&lt;/code&gt; being thrown.</source>
          <target state="translated">Значение будет &lt;code&gt;true&lt;/code&gt; если ошибки декодирования приводят к возникновению ошибки &lt;code&gt;TypeError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1ca85b3627e52d634af29f4b8a623574861fb2b" translate="yes" xml:space="preserve">
          <source>The value will be &lt;code&gt;true&lt;/code&gt; if the decoding result will include the byte order mark.</source>
          <target state="translated">Значение будет &lt;code&gt;true&lt;/code&gt; если результат декодирования будет включать отметку порядка байтов.</target>
        </trans-unit>
        <trans-unit id="104132237db0b7ecb17081ab083c9af7c1d419d4" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;exports&lt;/code&gt; will be available inside the function body following the macro invocation.</source>
          <target state="translated">Переменные &lt;code&gt;env&lt;/code&gt; и &lt;code&gt;exports&lt;/code&gt; будут доступны внутри тела функции после вызова макроса.</target>
        </trans-unit>
        <trans-unit id="1ca2642bb4155ee750ac00797ce4a46dc67ac445" translate="yes" xml:space="preserve">
          <source>The various loader hooks can be used together to accomplish wide-ranging customizations of Node.js&amp;rsquo; code loading and evaluation behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d706806806ea43c9c128b45cdecd01ed8d570e" translate="yes" xml:space="preserve">
          <source>The vm context passed into the API is not yet initialized. This could happen when an error occurs (and is caught) during the creation of the context, for example, when the allocation fails or the maximum call stack size is reached when the context is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3768d673fbfe9fe1a8bf340a95d76c85f8f437" translate="yes" xml:space="preserve">
          <source>The workaround in this situation is to call the &lt;a href=&quot;#stream_readable_resume&quot;&gt;&lt;code&gt;stream.resume()&lt;/code&gt;&lt;/a&gt; method to begin the flow of data:</source>
          <target state="translated">Обходной путь в этой ситуации - вызвать метод &lt;a href=&quot;#stream_readable_resume&quot;&gt; &lt;code&gt;stream.resume()&lt;/code&gt; &lt;/a&gt; чтобы начать поток данных:</target>
        </trans-unit>
        <trans-unit id="4d6edeb8cb0fc86e77857d0fda8d129467b2e13b" translate="yes" xml:space="preserve">
          <source>The worker processes are spawned using the &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt; method, so that they can communicate with the parent via IPC and pass server handles back and forth.</source>
          <target state="translated">Рабочие процессы &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; &lt;/a&gt; с помощью метода child_process.fork () , чтобы они могли связываться с родителем через IPC и передавать серверные дескрипторы туда и обратно.</target>
        </trans-unit>
        <trans-unit id="aaa2d3ce72e4b3a43da91c13bc4934c0350da0af" translate="yes" xml:space="preserve">
          <source>The wrapper function is expected to be called exactly &lt;code&gt;exact&lt;/code&gt; times. If the function has not been called exactly &lt;code&gt;exact&lt;/code&gt; times when &lt;a href=&quot;#assert_tracker_verify&quot;&gt;&lt;code&gt;tracker.verify()&lt;/code&gt;&lt;/a&gt; is called, then &lt;a href=&quot;#assert_tracker_verify&quot;&gt;&lt;code&gt;tracker.verify()&lt;/code&gt;&lt;/a&gt; will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052d8814bbbc21731431f0d8bff6bf49f919c5ba" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;request.url&lt;/code&gt; will be:</source>
          <target state="translated">Тогда &lt;code&gt;request.url&lt;/code&gt; будет:</target>
        </trans-unit>
        <trans-unit id="0c414cc316bb380ca834b2610259a592dc194ac7" translate="yes" xml:space="preserve">
          <source>Then in another file we could do:</source>
          <target state="translated">Тогда в другом файле мы могли бы это сделать:</target>
        </trans-unit>
        <trans-unit id="0bfbe586e02fe7477b1253341534ea2bb9055af6" translate="yes" xml:space="preserve">
          <source>Then, in &lt;code&gt;myobject.h&lt;/code&gt;, the wrapper class inherits from &lt;code&gt;node::ObjectWrap&lt;/code&gt;:</source>
          <target state="translated">Затем в &lt;code&gt;myobject.h&lt;/code&gt; класс-оболочка наследуется от &lt;code&gt;node::ObjectWrap&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="90426bdb684915cfaf8776137e646120a460c1af" translate="yes" xml:space="preserve">
          <source>Then, the above function can be invoked from a native add-on using the following code:</source>
          <target state="translated">Затем,приведенная выше функция может быть вызвана из родного дополнения с помощью следующего кода:</target>
        </trans-unit>
        <trans-unit id="73571d4285a148f8c850321e41ee7538063e9a0e" translate="yes" xml:space="preserve">
          <source>There are a few design considerations when declaring a module that may be loaded multiple times. The documentation of &lt;a href=&quot;addons#addons_context_aware_addons&quot;&gt;context-aware addons&lt;/a&gt; provides more details.</source>
          <target state="translated">При объявлении модуля, который может загружаться несколько раз, следует учитывать несколько конструктивных соображений. Документация &lt;a href=&quot;addons#addons_context_aware_addons&quot;&gt;контекстно-зависимых надстроек&lt;/a&gt; предоставляет более подробную информацию.</target>
        </trans-unit>
        <trans-unit id="ba61ede2581496949913fe44efcbd9784cfd62d9" translate="yes" xml:space="preserve">
          <source>There are a few special headers that should be noted.</source>
          <target state="translated">Следует отметить несколько специальных заголовков.</target>
        </trans-unit>
        <trans-unit id="136d6e7557a4d34635921dd2991584bcb620088d" translate="yes" xml:space="preserve">
          <source>There are cases (for example, resolving promises) where it is necessary to have the equivalent of the scope associated with a callback in place when making certain N-API calls. If there is no other script on the stack the &lt;a href=&quot;#n_api_napi_open_callback_scope&quot;&gt;&lt;code&gt;napi_open_callback_scope&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_close_callback_scope&quot;&gt;&lt;code&gt;napi_close_callback_scope&lt;/code&gt;&lt;/a&gt; functions can be used to open/close the required scope.</source>
          <target state="translated">Бывают случаи (например, выполнение обещаний), когда необходимо иметь эквивалент области, связанной с обратным вызовом, при выполнении определенных вызовов N-API. Если в стеке нет другого скрипта, для открытия / закрытия требуемой области можно использовать функции &lt;a href=&quot;#n_api_napi_open_callback_scope&quot;&gt; &lt;code&gt;napi_open_callback_scope&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#n_api_napi_close_callback_scope&quot;&gt; &lt;code&gt;napi_close_callback_scope&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbf25be1fb4ee565e1f98036a323d619cf26ae97" translate="yes" xml:space="preserve">
          <source>There are environments in which Node.js addons may need to be loaded multiple times in multiple contexts. For example, the &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt; runtime runs multiple instances of Node.js in a single process. Each instance will have its own &lt;code&gt;require()&lt;/code&gt; cache, and thus each instance will need a native addon to behave correctly when loaded via &lt;code&gt;require()&lt;/code&gt;. From the addon's perspective, this means that it must support multiple initializations.</source>
          <target state="translated">Существуют среды, в которых надстройки Node.js могут потребоваться загружать несколько раз в разных контекстах. Например, среда выполнения &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt; запускает несколько экземпляров Node.js в одном процессе. Каждый экземпляр будет иметь свой собственный кеш &lt;code&gt;require()&lt;/code&gt; , и, следовательно, каждому экземпляру потребуется собственный аддон для правильного поведения при загрузке через &lt;code&gt;require()&lt;/code&gt; . С точки зрения аддона это означает, что он должен поддерживать несколько инициализаций.</target>
        </trans-unit>
        <trans-unit id="efb4ff938e74b88ea0e6e30ab328bd442468ef8f" translate="yes" xml:space="preserve">
          <source>There are equivalents to the zlib options for Brotli-based streams, although these options have different ranges than the zlib ones:</source>
          <target state="translated">Существуют эквиваленты опций zlib для потоков,основанных на Brotli,хотя эти опции имеют различные диапазоны,отличные от диапазонов zlib:</target>
        </trans-unit>
        <trans-unit id="9941613492520ff34cf0deb38e791800ee7a5c07" translate="yes" xml:space="preserve">
          <source>There are four fundamental stream types within Node.js:</source>
          <target state="translated">В Node.js есть четыре фундаментальных типа потоков:</target>
        </trans-unit>
        <trans-unit id="dde1500fca17353440ae8484822501b542d81fb1" translate="yes" xml:space="preserve">
          <source>There are four types of specifiers:</source>
          <target state="translated">Существует четыре типа спецификаторов:</target>
        </trans-unit>
        <trans-unit id="8a931ff5d55f1c3afbe2f95105c6e77b48277bb0" translate="yes" xml:space="preserve">
          <source>There are many stream objects provided by Node.js. For instance, a &lt;a href=&quot;http#http_class_http_incomingmessage&quot;&gt;request to an HTTP server&lt;/a&gt; and &lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; are both stream instances.</source>
          <target state="translated">Node.js. предоставляет множество потоковых объектов. Например, &lt;a href=&quot;http#http_class_http_incomingmessage&quot;&gt;запрос к HTTP-серверу&lt;/a&gt; и &lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt; являются экземплярами потока.</target>
        </trans-unit>
        <trans-unit id="489828fe1e889442eeda5f8face869dde3d76a80" translate="yes" xml:space="preserve">
          <source>There are occasions where &lt;code&gt;napi_instanceof()&lt;/code&gt; is insufficient for ensuring that a JavaScript object is a wrapper for a certain native type. This is the case especially when wrapped JavaScript objects are passed back into the addon via static methods rather than as the &lt;code&gt;this&lt;/code&gt; value of prototype methods. In such cases there is a chance that they may be unwrapped incorrectly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b08753e896dc3b6a7c1f8c73d6f29652afc9286" translate="yes" xml:space="preserve">
          <source>There are ongoing efforts to make the latter code possible.</source>
          <target state="translated">В настоящее время предпринимаются усилия,направленные на то,чтобы сделать возможным использование последнего кода.</target>
        </trans-unit>
        <trans-unit id="cca70f7a24329f2fb4b95221882a8404c5c05645" translate="yes" xml:space="preserve">
          <source>There are only 5 TLSv1.3 cipher suites:</source>
          <target state="translated">Существует только 5 номеров с шифром TLSv1.3:</target>
        </trans-unit>
        <trans-unit id="5431d0afa6129bcba426cef1e17c022c359e7b17" translate="yes" xml:space="preserve">
          <source>There are several options and other constants available for Brotli-based streams:</source>
          <target state="translated">Существует несколько вариантов и других констант,доступных для потоков,основанных на Brotli:</target>
        </trans-unit>
        <trans-unit id="42e16077da0035c3069c49856eb3033b4b72553d" translate="yes" xml:space="preserve">
          <source>There are several options that can be set on Brotli encoders, affecting compression efficiency and speed. Both the keys and the values can be accessed as properties of the &lt;code&gt;zlib.constants&lt;/code&gt; object.</source>
          <target state="translated">На кодировщиках Brotli можно установить несколько параметров, влияющих на эффективность и скорость сжатия. Доступ к ключам и значениям можно получить как к свойствам объекта &lt;code&gt;zlib.constants&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68a19ad87ed88b1d5cfb1b645ade3d15711bd59d" translate="yes" xml:space="preserve">
          <source>There are several types of error conditions that may arise when using the &lt;code&gt;http2&lt;/code&gt; module:</source>
          <target state="translated">Есть несколько типов ошибок, которые могут возникнуть при использовании модуля &lt;code&gt;http2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="26c7f747d478773cb0c7b9fd07d4c61acf3a4a1f" translate="yes" xml:space="preserve">
          <source>There are some cases where it is necessary to trigger a refresh of the underlying readable stream mechanisms, without actually consuming any data. In such cases, it is possible to call &lt;code&gt;readable.read(0)&lt;/code&gt;, which will always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">В некоторых случаях необходимо запустить обновление базовых механизмов читаемых потоков без фактического потребления каких-либо данных. В таких случаях можно вызвать &lt;code&gt;readable.read(0)&lt;/code&gt; , который всегда будет возвращать &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd9ef41883fe3bdd2c2207efb8d44bad0186fe1c" translate="yes" xml:space="preserve">
          <source>There are subtle consequences in choosing one over the other, please consult the &lt;a href=&quot;#dns_implementation_considerations&quot;&gt;Implementation considerations section&lt;/a&gt; for more information.</source>
          <target state="translated">Выбор одного из них влечет за собой тонкие последствия; дополнительную информацию см. В &lt;a href=&quot;#dns_implementation_considerations&quot;&gt;разделе &amp;laquo;&lt;/a&gt; Рекомендации по реализации&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="6d6fbe184691d2e54bbf5609f598f34c9f95c95a" translate="yes" xml:space="preserve">
          <source>There are three options for implementing Addons: N-API, nan, or direct use of internal V8, libuv and Node.js libraries. Unless you need direct access to functionality which is not exposed by N-API, use N-API. Refer to the section &lt;a href=&quot;n-api&quot;&gt;C/C++ Addons - N-API&lt;/a&gt; for more information on N-API.</source>
          <target state="translated">Есть три варианта реализации аддонов: N-API, nan или прямое использование внутренних библиотек V8, libuv и Node.js. Если вам не нужен прямой доступ к функциям, которые не предоставляются N-API, используйте N-API. Обратитесь к разделу &lt;a href=&quot;n-api&quot;&gt;Дополнения C / C ++ - N-API&lt;/a&gt; для получения дополнительной информации о N-API.</target>
        </trans-unit>
        <trans-unit id="6a84e67ac6afa19b0bb7e32d3243ac6912e617a6" translate="yes" xml:space="preserve">
          <source>There are three options for implementing addons: N-API, nan, or direct use of internal V8, libuv and Node.js libraries. Unless there is a need for direct access to functionality which is not exposed by N-API, use N-API. Refer to &lt;a href=&quot;n-api&quot;&gt;C/C++ addons with N-API&lt;/a&gt; for more information on N-API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e769f43d8b2c2a24eea5250cfae5e60ed961a3d5" translate="yes" xml:space="preserve">
          <source>There are two key differences between the Node.js &lt;code&gt;EventTarget&lt;/code&gt; and the &lt;a href=&quot;https://dom.spec.whatwg.org/#eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt; Web API&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db4014699f46bd5890e62e4dba34c251b486d78" translate="yes" xml:space="preserve">
          <source>There are two ways to create new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instances from a &lt;code&gt;Buffer&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f793dc4fcaeca43b4ba873686274c2e8f8925a7" translate="yes" xml:space="preserve">
          <source>There can be multiple persistent references created which refer to the same object, each of which will either keep the object live or not based on its individual count.</source>
          <target state="translated">Может быть создано несколько постоянных ссылок,которые относятся к одному и тому же объекту,каждая из которых либо сохранит объект,либо не будет основываться на его индивидуальном количестве.</target>
        </trans-unit>
        <trans-unit id="0fe3f1751523750e75dcc6278c56537ba6011fcb" translate="yes" xml:space="preserve">
          <source>There is a special case when sending a &lt;code&gt;{cmd: 'NODE_foo'}&lt;/code&gt; message. Messages containing a &lt;code&gt;NODE_&lt;/code&gt; prefix in the &lt;code&gt;cmd&lt;/code&gt; property are reserved for use within Node.js core and will not be emitted in the child's &lt;a href=&quot;process#process_event_message&quot;&gt;&lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt; event. Rather, such messages are emitted using the &lt;code&gt;'internalMessage'&lt;/code&gt; event and are consumed internally by Node.js. Applications should avoid using such messages or listening for &lt;code&gt;'internalMessage'&lt;/code&gt; events as it is subject to change without notice.</source>
          <target state="translated">Особый случай отправки сообщения &lt;code&gt;{cmd: 'NODE_foo'}&lt;/code&gt; . Сообщения, содержащие префикс &lt;code&gt;NODE_&lt;/code&gt; в свойстве &lt;code&gt;cmd&lt;/code&gt; , зарезервированы для использования в ядре Node.js и не будут отправляться в дочернем событии &lt;a href=&quot;process#process_event_message&quot;&gt; &lt;code&gt;'message'&lt;/code&gt; &lt;/a&gt; . Скорее, такие сообщения отправляются с помощью события &lt;code&gt;'internalMessage'&lt;/code&gt; и потребляются внутри Node.js. Приложениям следует избегать использования таких сообщений или прослушивания событий &lt;code&gt;'internalMessage'&lt;/code&gt; поскольку они могут быть изменены без предварительного уведомления.</target>
        </trans-unit>
        <trans-unit id="7f4a67800306ac64b920c2be0c83ae4d3007f584" translate="yes" xml:space="preserve">
          <source>There is also the &lt;code&gt;PROMISE&lt;/code&gt; resource type, which is used to track &lt;code&gt;Promise&lt;/code&gt; instances and asynchronous work scheduled by them.</source>
          <target state="translated">Существует также тип ресурса &lt;code&gt;PROMISE&lt;/code&gt; , который используется для отслеживания экземпляров &lt;code&gt;Promise&lt;/code&gt; и запланированной ими асинхронной работы.</target>
        </trans-unit>
        <trans-unit id="e31048695af7ec9e8cc2c7c604352f23bc3184d4" translate="yes" xml:space="preserve">
          <source>There is an edge case worth noting when using the &lt;code&gt;events.once()&lt;/code&gt; function to await multiple events emitted on in the same batch of &lt;code&gt;process.nextTick()&lt;/code&gt; operations, or whenever multiple events are emitted synchronously. Specifically, because the &lt;code&gt;process.nextTick()&lt;/code&gt; queue is drained before the &lt;code&gt;Promise&lt;/code&gt; microtask queue, and because &lt;code&gt;EventEmitter&lt;/code&gt; emits all events synchronously, it is possible for &lt;code&gt;events.once()&lt;/code&gt; to miss an event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741d73c54f957fe61e35c6abd8637dba21b785cc" translate="yes" xml:space="preserve">
          <source>There is no equivalent to this API in browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7ccafeacce74e97b6782160f11feb38555669c" translate="yes" xml:space="preserve">
          <source>There is no guaranteed ordering when using asynchronous methods. So the following is prone to error because the &lt;code&gt;fs.stat()&lt;/code&gt; operation may complete before the &lt;code&gt;fs.rename()&lt;/code&gt; operation:</source>
          <target state="translated">При использовании асинхронных методов нет гарантированного порядка. Таким образом, следующее подвержено ошибкам, поскольку &lt;code&gt;fs.stat()&lt;/code&gt; может завершиться до операции &lt;code&gt;fs.rename()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="70935f1d3d5e4fd62d42c2c159e6aea9b6c95079" translate="yes" xml:space="preserve">
          <source>There is no guaranteed ordering when using either the callback or promise-based methods. For example, the following is prone to error because the &lt;code&gt;fs.stat()&lt;/code&gt; operation might complete before the &lt;code&gt;fs.rename()&lt;/code&gt; operation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9499af4d83f7a3933b926f5089a91e801e6f9b3b" translate="yes" xml:space="preserve">
          <source>There is no notion of a top level for a &lt;code&gt;Promise&lt;/code&gt; chain at which rejections can always be handled. Being inherently asynchronous in nature, a &lt;code&gt;Promise&lt;/code&gt; rejection can be handled at a future point in time &amp;mdash; possibly much later than the event loop turn it takes for the &lt;code&gt;'unhandledRejection'&lt;/code&gt; event to be emitted.</source>
          <target state="translated">Нет понятия верхнего уровня для цепочки &lt;code&gt;Promise&lt;/code&gt; на котором всегда можно обрабатывать отклонения. Будучи по сути асинхронным по своей природе, отклонение &lt;code&gt;Promise&lt;/code&gt; может быть обработано в будущем - возможно, намного позже, чем цикл обработки событий, необходимый для &lt;code&gt;'unhandledRejection'&lt;/code&gt; события unhandledRejection.</target>
        </trans-unit>
        <trans-unit id="3485b253ac4903049655572c6b7db990c6f6ad19" translate="yes" xml:space="preserve">
          <source>There is no notion of a top level for a &lt;code&gt;Promise&lt;/code&gt; chain at which rejections can always be handled. Being inherently asynchronous in nature, a &lt;code&gt;Promise&lt;/code&gt; rejection can be handled at a future point in time, possibly much later than the event loop turn it takes for the &lt;code&gt;'unhandledRejection'&lt;/code&gt; event to be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41af3e735ab2e346b33ec05065393fa3da84547" translate="yes" xml:space="preserve">
          <source>There is no requirement that the output be the same size as the input, the same number of chunks, or arrive at the same time. For example, a &lt;code&gt;Hash&lt;/code&gt; stream will only ever have a single chunk of output which is provided when the input is ended. A &lt;code&gt;zlib&lt;/code&gt; stream will produce output that is either much smaller or much larger than its input.</source>
          <target state="translated">Не требуется, чтобы выходные данные были того же размера, что и входные, или чтобы они приходили в одно и то же время. Например, поток &lt;code&gt;Hash&lt;/code&gt; всегда будет иметь только один фрагмент вывода, который предоставляется по окончании ввода. &lt;code&gt;zlib&lt;/code&gt; поток будет производить выходной сигнал , который является либо намного меньше или намного больше , чем его вход.</target>
        </trans-unit>
        <trans-unit id="f6752fbe1232a75370c52187c18b0bfebe5cef5a" translate="yes" xml:space="preserve">
          <source>There is no semi-colon after &lt;code&gt;NODE_MODULE&lt;/code&gt; as it's not a function (see &lt;code&gt;node.h&lt;/code&gt;).</source>
          <target state="translated">После &lt;code&gt;NODE_MODULE&lt;/code&gt; нет точки с запятой, поскольку это не функция (см. &lt;code&gt;node.h&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1761405f7560e0613a6cad3aca984566accc5d24" translate="yes" xml:space="preserve">
          <source>There is no way to prevent the exiting of the event loop at this point, and once all &lt;code&gt;'exit'&lt;/code&gt; listeners have finished running the Node.js process will terminate.</source>
          <target state="translated">На этом этапе невозможно предотвратить выход из цикла событий, и как только все обработчики &lt;code&gt;'exit'&lt;/code&gt; завершат выполнение, процесс Node.js завершится.</target>
        </trans-unit>
        <trans-unit id="c8d9cd97680b932da70dad66e0e134e8da83ab30" translate="yes" xml:space="preserve">
          <source>There is not normally a reason to call this method because &lt;code&gt;ECDH&lt;/code&gt; only requires a private key and the other party's public key to compute the shared secret. Typically either &lt;a href=&quot;#crypto_ecdh_generatekeys_encoding_format&quot;&gt;&lt;code&gt;ecdh.generateKeys()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt;&lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt;&lt;/a&gt; will be called. The &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt;&lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt;&lt;/a&gt; method attempts to generate the public point/key associated with the private key being set.</source>
          <target state="translated">Обычно нет причин для вызова этого метода, потому что &lt;code&gt;ECDH&lt;/code&gt; требует только закрытый ключ и открытый ключ другой стороны для вычисления общего секрета. Обычно &lt;a href=&quot;#crypto_ecdh_generatekeys_encoding_format&quot;&gt; &lt;code&gt;ecdh.generateKeys()&lt;/code&gt; &lt;/a&gt; либо ecdh.generateKeys (), либо &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt; &lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt; &lt;/a&gt; . Метод &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt; &lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt; &lt;/a&gt; пытается сгенерировать общедоступную точку / ключ, связанный с устанавливаемым закрытым ключом.</target>
        </trans-unit>
        <trans-unit id="3f3585e14ee5cd0674d2bfffe8a62484838e8f1d" translate="yes" xml:space="preserve">
          <source>There may be a delay between the &lt;code&gt;'disconnect'&lt;/code&gt; and &lt;code&gt;'exit'&lt;/code&gt; events. These events can be used to detect if the process is stuck in a cleanup or if there are long-living connections.</source>
          <target state="translated">Между событиями &lt;code&gt;'disconnect'&lt;/code&gt; и &lt;code&gt;'exit'&lt;/code&gt; может быть задержка . Эти события можно использовать, чтобы определить, застрял ли процесс при очистке или есть долговечные соединения.</target>
        </trans-unit>
        <trans-unit id="bba3543dee9ea91f94206f53de987930f9874179" translate="yes" xml:space="preserve">
          <source>There was a bug in Node.js or incorrect usage of Node.js internals. To fix the error, open an issue at &lt;a href=&quot;https://github.com/nodejs/node/issues&quot;&gt;https://github.com/nodejs/node/issues&lt;/a&gt;.</source>
          <target state="translated">Ошибка в Node.js или некорректное использование внутренних компонентов Node.js. Чтобы исправить ошибку, откройте проблему по адресу &lt;a href=&quot;https://github.com/nodejs/node/issues&quot;&gt;https://github.com/nodejs/node/issues&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db2fa69bb8b4d9e6a5a4775222f61ead5ed51450" translate="yes" xml:space="preserve">
          <source>There was an attempt to use a &lt;code&gt;MessagePort&lt;/code&gt; instance in a closed state, usually after &lt;code&gt;.close()&lt;/code&gt; has been called.</source>
          <target state="translated">Была попытка использовать экземпляр &lt;code&gt;MessagePort&lt;/code&gt; в закрытом состоянии, обычно после &lt;code&gt;.close()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c2872699c52fca493a736da697cd1c55a7b7f65" translate="yes" xml:space="preserve">
          <source>Therefore to read a file's whole contents from a &lt;code&gt;readable&lt;/code&gt;, it is necessary to collect chunks across multiple &lt;code&gt;'readable'&lt;/code&gt; events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754f342c55d3348d9516f90760098a1bea3cfcb1" translate="yes" xml:space="preserve">
          <source>These APIs provide the type &lt;code&gt;napi_threadsafe_function&lt;/code&gt; as well as APIs to create, destroy, and call objects of this type. &lt;code&gt;napi_create_threadsafe_function()&lt;/code&gt; creates a persistent reference to a &lt;code&gt;napi_value&lt;/code&gt; that holds a JavaScript function which can be called from multiple threads. The calls happen asynchronously. This means that values with which the JavaScript callback is to be called will be placed in a queue, and, for each value in the queue, a call will eventually be made to the JavaScript function.</source>
          <target state="translated">Эти API-интерфейсы предоставляют тип &lt;code&gt;napi_threadsafe_function&lt;/code&gt; , а также API-интерфейсы для создания, уничтожения и вызова объектов этого типа. &lt;code&gt;napi_create_threadsafe_function()&lt;/code&gt; создает постоянную ссылку на &lt;code&gt;napi_value&lt;/code&gt; , которая содержит функцию JavaScript, которую можно вызывать из нескольких потоков. Вызовы происходят асинхронно. Это означает, что значения, с которыми должен быть вызван обратный вызов JavaScript, будут помещены в очередь, и для каждого значения в очереди в конечном итоге будет выполнен вызов функции JavaScript.</target>
        </trans-unit>
        <trans-unit id="a36e985e57f05c7e84c751dd0c4673cc6bb7e955" translate="yes" xml:space="preserve">
          <source>These APIs support doing one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3247d3394f4459aabb0d5e7cfa8d13e0f7db8b" translate="yes" xml:space="preserve">
          <source>These APIs support doing one of the following: 1. Coerce JavaScript values to specific JavaScript types (such as &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;). 2. Check the type of a JavaScript value. 3. Check for equality between two JavaScript values.</source>
          <target state="translated">Эти API-интерфейсы поддерживают выполнение одного из следующих действий: 1. Приводят значения JavaScript к определенным типам JavaScript (например, &lt;code&gt;Number&lt;/code&gt; или &lt;code&gt;String&lt;/code&gt; ). 2. Проверьте тип значения JavaScript. 3. Проверьте равенство двух значений JavaScript.</target>
        </trans-unit>
        <trans-unit id="f7a10234d3fe5a51cc4325ae088318cfc712a583" translate="yes" xml:space="preserve">
          <source>These CommonJS variables are not available in ES modules.</source>
          <target state="translated">Эти переменные CommonJS недоступны в модулях ES.</target>
        </trans-unit>
        <trans-unit id="749928e253ba002f7186e912db98b776c93c0d85" translate="yes" xml:space="preserve">
          <source>These advanced options are available for controlling decompression:</source>
          <target state="translated">Эти дополнительные опции доступны для управления декомпрессией:</target>
        </trans-unit>
        <trans-unit id="0b9f62edc3aaf20d90f4845d04676a42b04260ea" translate="yes" xml:space="preserve">
          <source>These are mostly for historic reasons.</source>
          <target state="translated">В основном по историческим причинам.</target>
        </trans-unit>
        <trans-unit id="487b22b66f8d184a53a9dcfbab6f9a187dd0c70a" translate="yes" xml:space="preserve">
          <source>These behaviors are partly for historical reasons, as changing them would create backward incompatibility, but they are also expected by some users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f723d23d902d3dc9557352556e6b5d454055d450" translate="yes" xml:space="preserve">
          <source>These behaviors are partly for historical reasons, as changing them would create backwards incompatibility, but they are also expected by some users.</source>
          <target state="translated">Такое поведение частично объясняется историческими причинами,поскольку их изменение может привести к обратной несовместимости,но оно также ожидается некоторыми пользователями.</target>
        </trans-unit>
        <trans-unit id="6a5b136b6b60c4ed00d8df2d82c0a6a7ad030249" translate="yes" xml:space="preserve">
          <source>These errors have never been released, but had been present on master between releases.</source>
          <target state="translated">Эти ошибки никогда не были выпущены,но присутствовали на мастере между релизами.</target>
        </trans-unit>
        <trans-unit id="d444a6c59b18503b6828306190b3da244c05eaa9" translate="yes" xml:space="preserve">
          <source>These functions are implemented quite differently than &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt;. They do not use &lt;a href=&quot;http://man7.org/linux/man-pages/man3/getaddrinfo.3.html&quot;&gt;&lt;code&gt;getaddrinfo(3)&lt;/code&gt;&lt;/a&gt; and they &lt;em&gt;always&lt;/em&gt; perform a DNS query on the network. This network communication is always done asynchronously, and does not use libuv's threadpool.</source>
          <target state="translated">Эти функции реализованы иначе, чем &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; . Они не используют &lt;a href=&quot;http://man7.org/linux/man-pages/man3/getaddrinfo.3.html&quot;&gt; &lt;code&gt;getaddrinfo(3)&lt;/code&gt; &lt;/a&gt; и &lt;em&gt;всегда&lt;/em&gt; выполняют DNS-запросы в сети. Эта сетевая связь всегда выполняется асинхронно и не использует пул потоков libuv.</target>
        </trans-unit>
        <trans-unit id="24cdde9c4ce42694fdfee71a149f5983befb138f" translate="yes" xml:space="preserve">
          <source>These functions implement the following interfaces:</source>
          <target state="translated">Эти функции реализуют следующие интерфейсы:</target>
        </trans-unit>
        <trans-unit id="067e9ba51bba0fff71ca73b5284b6b724824a791" translate="yes" xml:space="preserve">
          <source>These objects are available in all modules. The following variables may appear to be global but are not. They exist only in the scope of modules, see the &lt;a href=&quot;modules&quot;&gt;module system documentation&lt;/a&gt;:</source>
          <target state="translated">Эти объекты доступны во всех модулях. Следующие переменные могут показаться глобальными, но это не так. Они существуют только в составе модулей, см. &lt;a href=&quot;modules&quot;&gt;Документацию&lt;/a&gt; по модульной системе :</target>
        </trans-unit>
        <trans-unit id="a92a2040e1759234554eb3d95876ef117287affb" translate="yes" xml:space="preserve">
          <source>These stat objects are instances of &lt;code&gt;fs.Stat&lt;/code&gt;.</source>
          <target state="translated">Эти объекты stat являются экземплярами &lt;code&gt;fs.Stat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81ffaa5610a923a366ff2fb68c7b7ae7e89cef81" translate="yes" xml:space="preserve">
          <source>These stat objects are instances of &lt;code&gt;fs.Stat&lt;/code&gt;. If the &lt;code&gt;bigint&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, the numeric values in these objects are specified as &lt;code&gt;BigInt&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f5c6bb153f7ecd9533f0a1d47aa3444a5f2641" translate="yes" xml:space="preserve">
          <source>These times are relative to an arbitrary time in the past, and not related to the time of day and therefore not subject to clock drift. The primary use is for measuring performance between intervals:</source>
          <target state="translated">Эти времена относительны к произвольному времени в прошлом,не связаны с временем суток и,следовательно,не подвержены дрейфу часов.Основное применение-измерение производительности между интервалами:</target>
        </trans-unit>
        <trans-unit id="0406dde620b7e64bbd32e4cb8c0bbc3121260bb2" translate="yes" xml:space="preserve">
          <source>They are used internally by &lt;a href=&quot;console#console_console_log_data_args&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;console#console_console_error_data_args&quot;&gt;&lt;code&gt;console.error()&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">Они используются внутри &lt;a href=&quot;console#console_console_log_data_args&quot;&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;console#console_console_error_data_args&quot;&gt; &lt;code&gt;console.error()&lt;/code&gt; &lt;/a&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="b30b2dac4cfcbca285a7b7116de61f5f1237d363" translate="yes" xml:space="preserve">
          <source>They do not use the same set of configuration files than what &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; uses. For instance, &lt;em&gt;they do not use the configuration from &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">Они не используют тот же набор файлов конфигурации, что и &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; . Например, &lt;em&gt;они не используют конфигурацию из &lt;code&gt;/etc/hosts&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2ea56235428b28cef1f2f9acfba69b76b619221b" translate="yes" xml:space="preserve">
          <source>This &quot;Hello world&quot; example is a simple Addon, written in C++, that is the equivalent of the following JavaScript code:</source>
          <target state="translated">Этот пример &quot;Hello world&quot; представляет собой простой аддон,написанный на языке Си++,что эквивалентно следующему JavaScript-коду:</target>
        </trans-unit>
        <trans-unit id="692dfc84db615cfec92e46e7af4aeebc4271f4fe" translate="yes" xml:space="preserve">
          <source>This &quot;Hello world&quot; example is a simple addon, written in C++, that is the equivalent of the following JavaScript code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e9a4260b22fdad1a565eaa4103d9039fdbf381" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;ArrayBuffer&lt;/code&gt; is not guaranteed to correspond exactly to the original &lt;code&gt;Buffer&lt;/code&gt;. See the notes on &lt;code&gt;buf.byteOffset&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2512370bd56df49b594b7a713133b58f497c3cd9" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Error&lt;/code&gt; is thrown when a read is attempted on a TTY &lt;code&gt;WriteStream&lt;/code&gt;, such as &lt;code&gt;process.stdout.on('data')&lt;/code&gt;.</source>
          <target state="translated">Эта &lt;code&gt;Error&lt;/code&gt; возникает при попытке чтения TTY &lt;code&gt;WriteStream&lt;/code&gt; , такого как &lt;code&gt;process.stdout.on('data')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39742e84897b18f0eedc2af5e9fd8236a7c65b9b" translate="yes" xml:space="preserve">
          <source>This API allocates a &lt;code&gt;node::Buffer&lt;/code&gt; object and initializes it with data backed by the passed in buffer. While this is still a fully-supported data structure, in most cases using a &lt;code&gt;TypedArray&lt;/code&gt; will suffice.</source>
          <target state="translated">Этот API выделяет объект &lt;code&gt;node::Buffer&lt;/code&gt; и инициализирует его данными, поддерживаемыми переданным в буфере. Хотя это все еще полностью поддерживаемая структура данных, в большинстве случаев достаточно использовать &lt;code&gt;TypedArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f9f6383f8d100211478dc2ef9a8cec62954908a" translate="yes" xml:space="preserve">
          <source>This API allocates a &lt;code&gt;node::Buffer&lt;/code&gt; object and initializes it with data copied from the passed-in buffer. While this is still a fully-supported data structure, in most cases using a &lt;code&gt;TypedArray&lt;/code&gt; will suffice.</source>
          <target state="translated">Этот API выделяет объект &lt;code&gt;node::Buffer&lt;/code&gt; и инициализирует его данными, скопированными из переданного буфера. Хотя это все еще полностью поддерживаемая структура данных, в большинстве случаев достаточно использовать &lt;code&gt;TypedArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="735a91d83874cde7676b3e25ee0191cf41805cb1" translate="yes" xml:space="preserve">
          <source>This API allocates a &lt;code&gt;node::Buffer&lt;/code&gt; object. While this is still a fully-supported data structure, in most cases using a &lt;code&gt;TypedArray&lt;/code&gt; will suffice.</source>
          <target state="translated">Этот API выделяет объект &lt;code&gt;node::Buffer&lt;/code&gt; . Хотя это все еще полностью поддерживаемая структура данных, в большинстве случаев достаточно использовать &lt;code&gt;TypedArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b77dc094889eb2692e801516cd866717730e4b3" translate="yes" xml:space="preserve">
          <source>This API allocates a JavaScript &lt;code&gt;Date&lt;/code&gt; object.</source>
          <target state="translated">Этот API выделяет объект &lt;code&gt;Date&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="c196cb0b40fe69112ca66200c4a74b7260d08ead" translate="yes" xml:space="preserve">
          <source>This API allocates a JavaScript value with external data attached to it. This is used to pass external data through JavaScript code, so it can be retrieved later by native code using &lt;a href=&quot;#n_api_napi_get_value_external&quot;&gt;&lt;code&gt;napi_get_value_external&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7998ea99d1cc838811e0d8df86d28e4a62bc8591" translate="yes" xml:space="preserve">
          <source>This API allocates a JavaScript value with external data attached to it. This is used to pass external data through JavaScript code, so it can be retrieved later by native code. The API allows the caller to pass in a finalize callback, in case the underlying native resource needs to be cleaned up when the external JavaScript value gets collected.</source>
          <target state="translated">Данный API выделяет значение JavaScript с прикрепленными к нему внешними данными.Это используется для передачи внешних данных через JavaScript-код,чтобы впоследствии получить их по собственному коду.API позволяет вызывающему абоненту передать завершающий обратный вызов в случае,если при сборе внешнего JavaScript-значения необходимо очистить основной родной ресурс.</target>
        </trans-unit>
        <trans-unit id="363266f752f8dea9471bad2f288fed6c4c06c654" translate="yes" xml:space="preserve">
          <source>This API allocates a default JavaScript &lt;code&gt;Object&lt;/code&gt;. It is the equivalent of doing &lt;code&gt;new Object()&lt;/code&gt; in JavaScript.</source>
          <target state="translated">Этот API выделяет JavaScript по умолчанию &lt;code&gt;Object&lt;/code&gt; . Это эквивалент выполнения &lt;code&gt;new Object()&lt;/code&gt; в JavaScript.</target>
        </trans-unit>
        <trans-unit id="a39488fe93d490d5976e523becbfa7322dd2f6d7" translate="yes" xml:space="preserve">
          <source>This API allocates a work object that is used to execute logic asynchronously. It should be freed using &lt;a href=&quot;#n_api_napi_delete_async_work&quot;&gt;&lt;code&gt;napi_delete_async_work&lt;/code&gt;&lt;/a&gt; once the work is no longer required.</source>
          <target state="translated">Этот API выделяет рабочий объект, который используется для асинхронного выполнения логики. Его следует освободить с помощью &lt;a href=&quot;#n_api_napi_delete_async_work&quot;&gt; &lt;code&gt;napi_delete_async_work&lt;/code&gt; ,&lt;/a&gt; когда работа больше не требуется.</target>
        </trans-unit>
        <trans-unit id="d63e8ba62f11bb852241a2b0aa7b58d201a30b7b" translate="yes" xml:space="preserve">
          <source>This API allows an add-on author to create a function object in native code. This is the primary mechanism to allow calling &lt;em&gt;into&lt;/em&gt; the add-on's native code &lt;em&gt;from&lt;/em&gt; JavaScript.</source>
          <target state="translated">Этот API позволяет автору надстройки создавать объект функции в собственном коде. Это основной механизм, позволяющий вызова &lt;em&gt;в&lt;/em&gt; адд-родного кода &lt;em&gt;из&lt;/em&gt; JavaScript.</target>
        </trans-unit>
        <trans-unit id="8dd5fc62dd12610ddf00da4580f78086ea7a8a67" translate="yes" xml:space="preserve">
          <source>This API associates &lt;code&gt;data&lt;/code&gt; with the currently running Agent. &lt;code&gt;data&lt;/code&gt; can later be retrieved using &lt;code&gt;napi_get_instance_data()&lt;/code&gt;. Any existing data associated with the currently running Agent which was set by means of a previous call to &lt;code&gt;napi_set_instance_data()&lt;/code&gt; will be overwritten. If a &lt;code&gt;finalize_cb&lt;/code&gt; was provided by the previous call, it will not be called.</source>
          <target state="translated">Этот API связывает &lt;code&gt;data&lt;/code&gt; с текущим работающим агентом. &lt;code&gt;data&lt;/code&gt; могут быть позже получены с помощью &lt;code&gt;napi_get_instance_data()&lt;/code&gt; . Любые существующие данные, связанные с текущим работающим агентом, которые были установлены посредством предыдущего вызова &lt;code&gt;napi_set_instance_data()&lt;/code&gt; будут перезаписаны. Если &lt;code&gt;finalize_cb&lt;/code&gt; был предоставлен предыдущим вызовом, он не будет вызываться.</target>
        </trans-unit>
        <trans-unit id="bb9807accb784346da4b294170dca41195385db4" translate="yes" xml:space="preserve">
          <source>This API attempts to delete the &lt;code&gt;key&lt;/code&gt; own property from &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">Этот API пытается удалить собственное свойство &lt;code&gt;key&lt;/code&gt; из &lt;code&gt;object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c14effd61c957bf8b764c352d4e546b6d39372bb" translate="yes" xml:space="preserve">
          <source>This API attempts to delete the specified &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">Этот API пытается удалить указанный &lt;code&gt;index&lt;/code&gt; из &lt;code&gt;object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eefd9d0b3eff1797f4ec8fa9a473e7edc0d2a2cb" translate="yes" xml:space="preserve">
          <source>This API can be called even if there is a pending JavaScript exception.</source>
          <target state="translated">Этот API может быть вызван,даже если есть ожидаемое JavaScript исключение.</target>
        </trans-unit>
        <trans-unit id="2de8f84612348b342d10646507923c0aa5b2c0a3" translate="yes" xml:space="preserve">
          <source>This API cancels queued work if it has not yet been started. If it has already started executing, it cannot be cancelled and &lt;code&gt;napi_generic_failure&lt;/code&gt; will be returned. If successful, the &lt;code&gt;complete&lt;/code&gt; callback will be invoked with a status value of &lt;code&gt;napi_cancelled&lt;/code&gt;. The work should not be deleted before the &lt;code&gt;complete&lt;/code&gt; callback invocation, even if it has been successfully cancelled.</source>
          <target state="translated">Этот API отменяет работу в очереди, если она еще не была запущена. Если он уже начал выполняться, его нельзя отменить, и будет возвращено &lt;code&gt;napi_generic_failure&lt;/code&gt; . В случае успеха будет вызван &lt;code&gt;complete&lt;/code&gt; обратный вызов со значением статуса &lt;code&gt;napi_cancelled&lt;/code&gt; . Работа не должна быть удалена до &lt;code&gt;complete&lt;/code&gt; вызова обратного вызова, даже если она была успешно отменена.</target>
        </trans-unit>
        <trans-unit id="57431dbca7e08b81d45fb5a6037ae282b5c085fc" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in has the named own property. &lt;code&gt;key&lt;/code&gt; must be a string or a &lt;code&gt;Symbol&lt;/code&gt;, or an error will be thrown. N-API will not perform any conversion between data types.</source>
          <target state="translated">Этот API проверяет, имеет ли переданный &lt;code&gt;Object&lt;/code&gt; указанное собственное свойство. &lt;code&gt;key&lt;/code&gt; должен быть строкой или &lt;code&gt;Symbol&lt;/code&gt; , иначе будет выдана ошибка. N-API не выполняет преобразование между типами данных.</target>
        </trans-unit>
        <trans-unit id="df00668a39c6c8f23284d619d34702ee2bdec177" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in has the named property.</source>
          <target state="translated">Этот API проверяет, имеет ли переданный &lt;code&gt;Object&lt;/code&gt; указанное свойство.</target>
        </trans-unit>
        <trans-unit id="77017a1b76496c7920bf9d3ddbbe51f4eec0e781" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in is a &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">Этот API проверяет , является ли &lt;code&gt;Object&lt;/code&gt; принят в этом &lt;code&gt;DataView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85cd50d093b265fd67db2b9b8fc771fec5f784aa" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in is a buffer.</source>
          <target state="translated">Этот API проверяет , является ли &lt;code&gt;Object&lt;/code&gt; передается в это буфер.</target>
        </trans-unit>
        <trans-unit id="8b04720a7d7ea49d3d60de79014fb69fa8491a06" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in is a date.</source>
          <target state="translated">Этот API проверяет , является ли &lt;code&gt;Object&lt;/code&gt; принят в это дата.</target>
        </trans-unit>
        <trans-unit id="5e43a0f69097cd9621e0e8616fc96ff13206b854" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in is a typed array.</source>
          <target state="translated">Этот API проверяет , является ли &lt;code&gt;Object&lt;/code&gt; принят в это напечатанная массив.</target>
        </trans-unit>
        <trans-unit id="b1512ceb15a56445f12edb557bed0d491dd21b2b" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in is an &lt;code&gt;Error&lt;/code&gt;.</source>
          <target state="translated">Этот API проверяет , является ли &lt;code&gt;Object&lt;/code&gt; передается в это &lt;code&gt;Error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23864b8fd9618610d06ad4c9de555c8fc662e0f9" translate="yes" xml:space="preserve">
          <source>This API checks if the &lt;code&gt;Object&lt;/code&gt; passed in is an array buffer.</source>
          <target state="translated">Этот API проверяет, является ли переданный &lt;code&gt;Object&lt;/code&gt; буфером массива.</target>
        </trans-unit>
        <trans-unit id="e8c7e3fe1e7df4ee3d1c160136ec8c8b57a30461" translate="yes" xml:space="preserve">
          <source>This API closes the scope passed in. Scopes must be closed in the reverse order from which they were created.</source>
          <target state="translated">Этот API закрывает переданный диапазон.Сцены должны быть закрыты в обратном порядке,из которого они были созданы.</target>
        </trans-unit>
        <trans-unit id="5d1aae2a2f436ea48d9c7acff12819c96b4925cc" translate="yes" xml:space="preserve">
          <source>This API converts a single &lt;code&gt;BigInt&lt;/code&gt; value into a sign bit, 64-bit little-endian array, and the number of elements in the array. &lt;code&gt;sign_bit&lt;/code&gt; and &lt;code&gt;words&lt;/code&gt; may be both set to &lt;code&gt;NULL&lt;/code&gt;, in order to get only &lt;code&gt;word_count&lt;/code&gt;.</source>
          <target state="translated">Этот API преобразует одно значение &lt;code&gt;BigInt&lt;/code&gt; в знаковый бит, 64-битный массив с прямым порядком байтов и количество элементов в массиве. &lt;code&gt;sign_bit&lt;/code&gt; и &lt;code&gt;words&lt;/code&gt; могут быть установлены в &lt;code&gt;NULL&lt;/code&gt; , чтобы получить только &lt;code&gt;word_count&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce0e25291cf2e6b501788d49eeebff5721c4a9c8" translate="yes" xml:space="preserve">
          <source>This API converts an array of unsigned 64-bit words into a single &lt;code&gt;BigInt&lt;/code&gt; value.</source>
          <target state="translated">Этот API преобразует массив 64-битных слов без знака в одно значение &lt;code&gt;BigInt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dacc40682bb28b50a6f0c8a84eaeb75999988ac" translate="yes" xml:space="preserve">
          <source>This API converts the C &lt;code&gt;int64_t&lt;/code&gt; type to the JavaScript &lt;code&gt;BigInt&lt;/code&gt; type.</source>
          <target state="translated">Этот API преобразует тип C &lt;code&gt;int64_t&lt;/code&gt; в тип JavaScript &lt;code&gt;BigInt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39a65c954085e0b75e67379733eefa4137788a57" translate="yes" xml:space="preserve">
          <source>This API converts the C &lt;code&gt;uint64_t&lt;/code&gt; type to the JavaScript &lt;code&gt;BigInt&lt;/code&gt; type.</source>
          <target state="translated">Этот API преобразует тип C &lt;code&gt;uint64_t&lt;/code&gt; в тип JavaScript &lt;code&gt;BigInt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="872b6fbfcb10c1766c01c033a11510d812c343c5" translate="yes" xml:space="preserve">
          <source>This API create a new reference with the specified reference count to the &lt;code&gt;Object&lt;/code&gt; passed in.</source>
          <target state="translated">Этот API создает новую ссылку с указанным счетчиком ссылок на переданный &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb7a9e00501915d315dc9db028de926ed4735c81" translate="yes" xml:space="preserve">
          <source>This API creates a JavaScript &lt;code&gt;DataView&lt;/code&gt; object over an existing &lt;code&gt;ArrayBuffer&lt;/code&gt;. &lt;code&gt;DataView&lt;/code&gt; objects provide an array-like view over an underlying data buffer, but one which allows items of different size and type in the &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">Этот API создает объект JavaScript &lt;code&gt;DataView&lt;/code&gt; поверх существующего &lt;code&gt;ArrayBuffer&lt;/code&gt; . Объекты &lt;code&gt;DataView&lt;/code&gt; обеспечивают представление в виде массива над нижележащим буфером данных, но оно позволяет использовать элементы разного размера и типа в &lt;code&gt;ArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2689ecf9af46ba39953d951567d6520bf653ba1" translate="yes" xml:space="preserve">
          <source>This API creates a JavaScript &lt;code&gt;String&lt;/code&gt; object from a UTF16-LE-encoded C string. The native string is copied.</source>
          <target state="translated">Этот API создает объект JavaScript &lt;code&gt;String&lt;/code&gt; из строки C в кодировке UTF16-LE. Собственная строка копируется.</target>
        </trans-unit>
        <trans-unit id="5d7c7b178115d5c2e4337be18e30534c47276b07" translate="yes" xml:space="preserve">
          <source>This API creates a JavaScript &lt;code&gt;String&lt;/code&gt; object from a UTF8-encoded C string. The native string is copied.</source>
          <target state="translated">Этот API создает объект JavaScript &lt;code&gt;String&lt;/code&gt; из строки C в кодировке UTF8. Собственная строка копируется.</target>
        </trans-unit>
        <trans-unit id="f8feb6065755866e5b518ec3409fce83787d5f3d" translate="yes" xml:space="preserve">
          <source>This API creates a JavaScript &lt;code&gt;String&lt;/code&gt; object from an ISO-8859-1-encoded C string. The native string is copied.</source>
          <target state="translated">Этот API создает объект JavaScript &lt;code&gt;String&lt;/code&gt; из строки C в кодировке ISO-8859-1. Собственная строка копируется.</target>
        </trans-unit>
        <trans-unit id="78e932bf060993a76782b2993b8d0e5d90ca6cbe" translate="yes" xml:space="preserve">
          <source>This API creates a JavaScript &lt;code&gt;Symbol&lt;/code&gt; object from a UTF8-encoded C string.</source>
          <target state="translated">Этот API создает объект &lt;code&gt;Symbol&lt;/code&gt; JavaScript из строки C в кодировке UTF8.</target>
        </trans-unit>
        <trans-unit id="dd3e74bf0ee6bf2199a6c976eeb4432bd41d78cf" translate="yes" xml:space="preserve">
          <source>This API creates a JavaScript &lt;code&gt;TypedArray&lt;/code&gt; object over an existing &lt;code&gt;ArrayBuffer&lt;/code&gt;. &lt;code&gt;TypedArray&lt;/code&gt; objects provide an array-like view over an underlying data buffer where each element has the same underlying binary scalar datatype.</source>
          <target state="translated">Этот API создает объект JavaScript &lt;code&gt;TypedArray&lt;/code&gt; поверх существующего &lt;code&gt;ArrayBuffer&lt;/code&gt; . Объекты &lt;code&gt;TypedArray&lt;/code&gt; обеспечивают представление в виде массива над базовым буфером данных, где каждый элемент имеет один и тот же базовый двоичный скалярный тип данных.</target>
        </trans-unit>
        <trans-unit id="eb7871e3b46d5ec2a3996e81a299debc3b8ecc76" translate="yes" xml:space="preserve">
          <source>This API creates a deferred object and a JavaScript promise.</source>
          <target state="translated">Этот API создает отложенный объект и JavaScript обещание.</target>
        </trans-unit>
        <trans-unit id="25573620c7961f244c4fcf1ec2dc339f590285c9" translate="yes" xml:space="preserve">
          <source>This API decrements the reference count for the reference passed in and returns the resulting reference count.</source>
          <target state="translated">Этот API декрементирует счетчик ссылок для переданной ссылки и возвращает результирующий счетчик ссылок.</target>
        </trans-unit>
        <trans-unit id="8eff332e350a0e574536ca03420ca38be0ab632a" translate="yes" xml:space="preserve">
          <source>This API deletes the reference passed in.</source>
          <target state="translated">Этот API удаляет переданную ссылку.</target>
        </trans-unit>
        <trans-unit id="23a2cb69e25f56f3c362034320b9ab3929281f96" translate="yes" xml:space="preserve">
          <source>This API does not observe leap seconds; they are ignored, as ECMAScript aligns with POSIX time specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6fca0a073178b69d2f39a3d83f5c7410fddeac" translate="yes" xml:space="preserve">
          <source>This API frees a previously allocated work object.</source>
          <target state="translated">Этот API освобождает ранее выделенный рабочий объект.</target>
        </trans-unit>
        <trans-unit id="dd8d73286c93051c5ede6fc340006b9e8edcb1b1" translate="yes" xml:space="preserve">
          <source>This API gets the element at the requested index.</source>
          <target state="translated">Этот API получает элемент в запрошенном индексе.</target>
        </trans-unit>
        <trans-unit id="7f0b9e72b1ac3277c4602c64072072238f09ab14" translate="yes" xml:space="preserve">
          <source>This API gets the requested property from the &lt;code&gt;Object&lt;/code&gt; passed in.</source>
          <target state="translated">Этот API получает запрошенное свойство из переданного &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98a5e0c385afa6d2fa9a179e263dfa1942ac13cb" translate="yes" xml:space="preserve">
          <source>This API implements the abstract operation &lt;code&gt;ToBoolean()&lt;/code&gt; as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-toboolean&quot;&gt;Section 7.1.2&lt;/a&gt; of the ECMAScript Language Specification. This API can be re-entrant if getters are defined on the passed-in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Этот API реализует абстрактную операцию &lt;code&gt;ToBoolean()&lt;/code&gt; как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-toboolean&quot;&gt;разделе 7.1.2&lt;/a&gt; Спецификации языка ECMAScript. Этот API можно повторно использовать, если геттеры определены в переданном &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d25a05e4ed2a43028a62b36f7a945008651ab9c6" translate="yes" xml:space="preserve">
          <source>This API implements the abstract operation &lt;code&gt;ToNumber()&lt;/code&gt; as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-tonumber&quot;&gt;Section 7.1.3&lt;/a&gt; of the ECMAScript Language Specification. This API can be re-entrant if getters are defined on the passed-in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Этот API реализует абстрактную операцию &lt;code&gt;ToNumber()&lt;/code&gt; как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-tonumber&quot;&gt;разделе 7.1.3&lt;/a&gt; Спецификации языка ECMAScript. Этот API можно повторно использовать, если геттеры определены в переданном &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dcbf1148507fc0d2cb75126a083441bb025a61e" translate="yes" xml:space="preserve">
          <source>This API implements the abstract operation &lt;code&gt;ToObject()&lt;/code&gt; as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-toobject&quot;&gt;Section 7.1.13&lt;/a&gt; of the ECMAScript Language Specification. This API can be re-entrant if getters are defined on the passed-in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Этот API реализует абстрактную операцию &lt;code&gt;ToObject()&lt;/code&gt; как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-toobject&quot;&gt;разделе 7.1.13&lt;/a&gt; Спецификации языка ECMAScript. Этот API можно повторно использовать, если геттеры определены в переданном &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fddc49ca9e6f7884f4f7402d158c3562d69f3dad" translate="yes" xml:space="preserve">
          <source>This API implements the abstract operation &lt;code&gt;ToString()&lt;/code&gt; as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-toobject&quot;&gt;Section 7.1.13&lt;/a&gt; of the ECMAScript Language Specification. This API can be re-entrant if getters are defined on the passed-in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96806471eb397aab399550c79244f2cb6c1c198e" translate="yes" xml:space="preserve">
          <source>This API implements the abstract operation &lt;code&gt;ToString()&lt;/code&gt; as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-tostring&quot;&gt;Section 7.1.13&lt;/a&gt; of the ECMAScript Language Specification. This API can be re-entrant if getters are defined on the passed-in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Этот API реализует абстрактную операцию &lt;code&gt;ToString()&lt;/code&gt; как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-tostring&quot;&gt;разделе 7.1.13&lt;/a&gt; Спецификации языка ECMAScript. Этот API можно повторно использовать, если геттеры определены в переданном &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f06230c0740f7b63f1615ff39e6c8deed4c8847d" translate="yes" xml:space="preserve">
          <source>This API increments the reference count for the reference passed in and returns the resulting reference count.</source>
          <target state="translated">Этот API увеличивает счетчик ссылок для переданной ссылки и возвращает результирующий счетчик ссылок.</target>
        </trans-unit>
        <trans-unit id="b8c58ad460418d4b4b95ff2da9afea0a0ec2d635" translate="yes" xml:space="preserve">
          <source>This API is hazardous because in the following case:</source>
          <target state="translated">Этот API опасен,потому что в следующем случае:</target>
        </trans-unit>
        <trans-unit id="bb85535a8220d4eff8e0e3a7ee1e3a079d312053" translate="yes" xml:space="preserve">
          <source>This API is no longer deprecated.</source>
          <target state="translated">Этот API больше не устарел.</target>
        </trans-unit>
        <trans-unit id="d0c5024828803462de5995e87af9efa3f1777afa" translate="yes" xml:space="preserve">
          <source>This API is no longer experimental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd41e783eaf560ec51e472abe82e76eb74feeda5" translate="yes" xml:space="preserve">
          <source>This API is under development, and changes (including incompatible changes to the API or wire format) may occur until this warning is removed.</source>
          <target state="translated">Данный API находится в стадии разработки,и изменения (включая несовместимые изменения в API или формате провода)могут происходить до тех пор,пока это предупреждение не будет удалено.</target>
        </trans-unit>
        <trans-unit id="3dfa3ff17965f642d6a192310726a8f5b8b20e85" translate="yes" xml:space="preserve">
          <source>This API is used to convert from the C &lt;code&gt;double&lt;/code&gt; type to the JavaScript &lt;code&gt;Number&lt;/code&gt; type.</source>
          <target state="translated">Этот API используется для преобразования из C &lt;code&gt;double&lt;/code&gt; типа на JavaScript &lt;code&gt;Number&lt;/code&gt; типа.</target>
        </trans-unit>
        <trans-unit id="49877d21ef96ccd14727aaa7c002c5ffab88048a" translate="yes" xml:space="preserve">
          <source>This API is used to convert from the C &lt;code&gt;int32_t&lt;/code&gt; type to the JavaScript &lt;code&gt;Number&lt;/code&gt; type.</source>
          <target state="translated">Этот API используется для преобразования типа C &lt;code&gt;int32_t&lt;/code&gt; в тип JavaScript &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92bc6f15a322ff8b07f019e96a8cdf7d530c3029" translate="yes" xml:space="preserve">
          <source>This API is used to convert from the C &lt;code&gt;int64_t&lt;/code&gt; type to the JavaScript &lt;code&gt;Number&lt;/code&gt; type.</source>
          <target state="translated">Этот API используется для преобразования типа C &lt;code&gt;int64_t&lt;/code&gt; в тип JavaScript &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6503e99b292474ebaf2bcc59e2356b6df0fa3d82" translate="yes" xml:space="preserve">
          <source>This API is used to convert from the C &lt;code&gt;uint32_t&lt;/code&gt; type to the JavaScript &lt;code&gt;Number&lt;/code&gt; type.</source>
          <target state="translated">Этот API используется для преобразования типа C &lt;code&gt;uint32_t&lt;/code&gt; в тип JavaScript &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="942e3ae495c5a4657aae15a037f4e246e6f8be57" translate="yes" xml:space="preserve">
          <source>This API is used to indicate that the event loop running on the main thread may exit before &lt;code&gt;func&lt;/code&gt; is destroyed. Similar to &lt;a href=&quot;http://docs.libuv.org/en/v1.x/handle.html#c.uv_unref&quot;&gt;&lt;code&gt;uv_unref&lt;/code&gt;&lt;/a&gt; it is also idempotent.</source>
          <target state="translated">Этот API используется, чтобы указать, что цикл событий, выполняющийся в основном потоке, может завершиться до того, как &lt;code&gt;func&lt;/code&gt; будет уничтожен. Подобно &lt;a href=&quot;http://docs.libuv.org/en/v1.x/handle.html#c.uv_unref&quot;&gt; &lt;code&gt;uv_unref&lt;/code&gt; ,&lt;/a&gt; он также идемпотентен.</target>
        </trans-unit>
        <trans-unit id="69d5e56003b7f8cb4d12ffc8eab17a293a3dc17b" translate="yes" xml:space="preserve">
          <source>This API is used to indicate that the event loop running on the main thread may exit before &lt;code&gt;func&lt;/code&gt; is destroyed. Similar to &lt;a href=&quot;https://docs.libuv.org/en/v1.x/handle.html#c.uv_unref&quot;&gt;&lt;code&gt;uv_unref&lt;/code&gt;&lt;/a&gt; it is also idempotent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b33e42364a61da332e3e2db27d345503de5d1d5" translate="yes" xml:space="preserve">
          <source>This API is used to indicate that the event loop running on the main thread should not exit until &lt;code&gt;func&lt;/code&gt; has been destroyed. Similar to &lt;a href=&quot;http://docs.libuv.org/en/v1.x/handle.html#c.uv_ref&quot;&gt;&lt;code&gt;uv_ref&lt;/code&gt;&lt;/a&gt; it is also idempotent.</source>
          <target state="translated">Этот API используется, чтобы указать, что цикл событий, выполняемый в основном потоке, не должен завершаться, пока &lt;code&gt;func&lt;/code&gt; не будет уничтожен. Подобно &lt;a href=&quot;http://docs.libuv.org/en/v1.x/handle.html#c.uv_ref&quot;&gt; &lt;code&gt;uv_ref&lt;/code&gt; ,&lt;/a&gt; он также идемпотентен.</target>
        </trans-unit>
        <trans-unit id="0c0b66e358caa382c17ce63f4a5db0114fdfabe6" translate="yes" xml:space="preserve">
          <source>This API is used to indicate that the event loop running on the main thread should not exit until &lt;code&gt;func&lt;/code&gt; has been destroyed. Similar to &lt;a href=&quot;https://docs.libuv.org/en/v1.x/handle.html#c.uv_ref&quot;&gt;&lt;code&gt;uv_ref&lt;/code&gt;&lt;/a&gt; it is also idempotent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587cd767b10603c8d3213430b7152df4d2279b2e" translate="yes" xml:space="preserve">
          <source>This API is used to retrieve the underlying data buffer of a &lt;code&gt;node::Buffer&lt;/code&gt; and it's length.</source>
          <target state="translated">Этот API используется для получения базового буфера данных &lt;code&gt;node::Buffer&lt;/code&gt; и его длины.</target>
        </trans-unit>
        <trans-unit id="0254baecc8eba4b547466faecb90c78e6d68158b" translate="yes" xml:space="preserve">
          <source>This API is used to retrieve the underlying data buffer of an &lt;code&gt;ArrayBuffer&lt;/code&gt; and its length.</source>
          <target state="translated">Этот API используется для получения базового буфера данных &lt;code&gt;ArrayBuffer&lt;/code&gt; и его длины.</target>
        </trans-unit>
        <trans-unit id="36b58192525902070d2c0a7c428788e7464512e3" translate="yes" xml:space="preserve">
          <source>This API is used to return the JavaScript singleton object that is used to represent the given boolean value.</source>
          <target state="translated">Этот API используется для возврата однокнопочного объекта JavaScript,который используется для представления заданного булевого значения.</target>
        </trans-unit>
        <trans-unit id="2b8a478e9e4ad0ba2b83ceb79f6fe8b2726590f0" translate="yes" xml:space="preserve">
          <source>This API may be called from any thread which makes use of &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">Этот API можно вызвать из любого потока, использующего &lt;code&gt;func&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a193c4c7abe861db8905fcb50538ab5a608deb2" translate="yes" xml:space="preserve">
          <source>This API may be called from any thread which will start making use of &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">Этот API можно вызвать из любого потока, который начнет использовать &lt;code&gt;func&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6266d5dc6d62f9a22ff00a8bf12ea4d6477e4048" translate="yes" xml:space="preserve">
          <source>This API may be called from any thread which will stop making use of &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">Этот API можно вызывать из любого потока, который перестанет использовать &lt;code&gt;func&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab533709169cd3a484819689ba1c7142adf5ce42" translate="yes" xml:space="preserve">
          <source>This API may only be called from the main thread.</source>
          <target state="translated">Данный API может быть вызван только из главного потока.</target>
        </trans-unit>
        <trans-unit id="319b4e36a7ead231d4ea80e0de94d083ff5268fa" translate="yes" xml:space="preserve">
          <source>This API open a new scope from which one object can be promoted to the outer scope.</source>
          <target state="translated">Этот API открывает новую область видимости,из которой один объект может быть перемещен во внешнюю область видимости.</target>
        </trans-unit>
        <trans-unit id="1d428023fa95497e48d68ac408f843d544e50ef9" translate="yes" xml:space="preserve">
          <source>This API open a new scope.</source>
          <target state="translated">Этот API открывает новые возможности.</target>
        </trans-unit>
        <trans-unit id="a93e16643b3e03345deb8f8210fcb379c0d37099" translate="yes" xml:space="preserve">
          <source>This API opens a new scope from which one object can be promoted to the outer scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52465275dd21628e32d7a1dd63399f75db334558" translate="yes" xml:space="preserve">
          <source>This API opens a new scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f3e0e9a51f400dccede73be29a7a7dc94bdbcc" translate="yes" xml:space="preserve">
          <source>This API promotes the handle to the JavaScript object so that it is valid for the lifetime of the outer scope. It can only be called once per scope. If it is called more than once an error will be returned.</source>
          <target state="translated">Этот API продвигает дескриптор к объекту JavaScript так,чтобы он был действителен на время жизни внешней области видимости.Он может быть вызван только один раз на каждую область видимости.Если он будет вызван более одного раза,то будет возвращена ошибка.</target>
        </trans-unit>
        <trans-unit id="c5d285a239d764c227e486f18daf3332cdb1bfa0" translate="yes" xml:space="preserve">
          <source>This API queries a &lt;code&gt;napi_value&lt;/code&gt; to check if it represents an error object.</source>
          <target state="translated">Этот API запрашивает значение &lt;code&gt;napi_value&lt;/code&gt; , чтобы проверить, представляет ли он объект ошибки.</target>
        </trans-unit>
        <trans-unit id="07a858ab5884aa274ef23a00e2dbfc7bb56465d0" translate="yes" xml:space="preserve">
          <source>This API rejects a JavaScript promise by way of the deferred object with which it is associated. Thus, it can only be used to reject JavaScript promises for which the corresponding deferred object is available. This effectively means that the promise must have been created using &lt;code&gt;napi_create_promise()&lt;/code&gt; and the deferred object returned from that call must have been retained in order to be passed to this API.</source>
          <target state="translated">Этот API отклоняет обещание JavaScript посредством отложенного объекта, с которым он связан. Таким образом, его можно использовать только для отклонения обещаний JavaScript, для которых доступен соответствующий отложенный объект. Это фактически означает, что обещание должно быть создано с помощью &lt;code&gt;napi_create_promise()&lt;/code&gt; а отложенный объект, возвращенный из этого вызова, должен быть сохранен, чтобы быть переданным в этот API.</target>
        </trans-unit>
        <trans-unit id="bdfac549e19d0fd3951aa268d2754e865e81e0fd" translate="yes" xml:space="preserve">
          <source>This API represents behavior similar to invoking the &lt;code&gt;typeof&lt;/code&gt; Operator on the object as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typeof-operator&quot;&gt;Section 12.5.5&lt;/a&gt; of the ECMAScript Language Specification. However, it has support for detecting an External value. If &lt;code&gt;value&lt;/code&gt; has a type that is invalid, an error is returned.</source>
          <target state="translated">Этот API представляет поведение, подобное &lt;code&gt;typeof&lt;/code&gt; оператора typeof для объекта, как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typeof-operator&quot;&gt;Разделе 12.5.5&lt;/a&gt; Спецификации языка ECMAScript. Однако он поддерживает определение внешнего значения. Если &lt;code&gt;value&lt;/code&gt; имеет недопустимый тип, возвращается ошибка.</target>
        </trans-unit>
        <trans-unit id="37b45f96b0b997e3a98523c6bb3d2db3bf4f8b51" translate="yes" xml:space="preserve">
          <source>This API represents behavior similar to invoking the &lt;code&gt;typeof&lt;/code&gt; Operator on the object as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typeof-operator&quot;&gt;Section 12.5.5&lt;/a&gt; of the ECMAScript Language Specification. However, there are some differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52bdf433c534f2133fcb54ff7c6f2707cbe4de1" translate="yes" xml:space="preserve">
          <source>This API represents invoking the &lt;code&gt;IsArray&lt;/code&gt; operation on the object as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-isarray&quot;&gt;Section 7.2.2&lt;/a&gt; of the ECMAScript Language Specification.</source>
          <target state="translated">Этот API представляет собой &lt;code&gt;IsArray&lt;/code&gt; операции IsArray для объекта, как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-isarray&quot;&gt;разделе 7.2.2&lt;/a&gt; спецификации языка ECMAScript.</target>
        </trans-unit>
        <trans-unit id="071bc6a2988b5ec1974c804b6e1314b62d4f8f5f" translate="yes" xml:space="preserve">
          <source>This API represents invoking the &lt;code&gt;instanceof&lt;/code&gt; Operator on the object as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-instanceofoperator&quot;&gt;Section 12.10.4&lt;/a&gt; of the ECMAScript Language Specification.</source>
          <target state="translated">Этот API представляет собой вызов оператора &lt;code&gt;instanceof&lt;/code&gt; для объекта, как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-instanceofoperator&quot;&gt;разделе 12.10.4&lt;/a&gt; спецификации языка ECMAScript.</target>
        </trans-unit>
        <trans-unit id="0c169ebc6223ec0195007a1a8dddc814e6e1bb9f" translate="yes" xml:space="preserve">
          <source>This API represents the invocation of the &lt;code&gt;ArrayBuffer&lt;/code&gt; detach operation as defined in &lt;a href=&quot;https://tc39.es/ecma262/#sec-detacharraybuffer&quot;&gt;Section 24.1.1.3&lt;/a&gt; of the ECMAScript Language Specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8244e2d276441f1fdca1221750307d283ca0d4" translate="yes" xml:space="preserve">
          <source>This API represents the invocation of the &lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;code&gt;IsDetachedBuffer&lt;/code&gt; operation as defined in &lt;a href=&quot;https://tc39.es/ecma262/#sec-isdetachedbuffer&quot;&gt;Section 24.1.1.2&lt;/a&gt; of the ECMAScript Language Specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d161386d078bae13e76126f77747e5f73c7af9e" translate="yes" xml:space="preserve">
          <source>This API represents the invocation of the Strict Equality algorithm as defined in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-strict-equality-comparison&quot;&gt;Section 7.2.14&lt;/a&gt; of the ECMAScript Language Specification.</source>
          <target state="translated">Этот API представляет собой вызов алгоритма строгого равенства, как определено в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-strict-equality-comparison&quot;&gt;разделе 7.2.14&lt;/a&gt; спецификации языка ECMAScript.</target>
        </trans-unit>
        <trans-unit id="9985bed5b2b909c86b4c219b81b72403588f5ec9" translate="yes" xml:space="preserve">
          <source>This API requests that the previously allocated work be scheduled for execution. Once it returns successfully, this API must not be called again with the same &lt;code&gt;napi_async_work&lt;/code&gt; item or the result will be undefined.</source>
          <target state="translated">Этот API запрашивает, чтобы запланированная ранее работа была запланирована для выполнения. После успешного возврата этот API нельзя вызывать снова с тем же элементом &lt;code&gt;napi_async_work&lt;/code&gt; , иначе результат будет неопределенным.</target>
        </trans-unit>
        <trans-unit id="06d16e5f9910adb2bd8786d4e2bb452ed0ff9dff" translate="yes" xml:space="preserve">
          <source>This API resolves a JavaScript promise by way of the deferred object with which it is associated. Thus, it can only be used to resolve JavaScript promises for which the corresponding deferred object is available. This effectively means that the promise must have been created using &lt;code&gt;napi_create_promise()&lt;/code&gt; and the deferred object returned from that call must have been retained in order to be passed to this API.</source>
          <target state="translated">Этот API разрешает обещание JavaScript посредством отложенного объекта, с которым он связан. Таким образом, его можно использовать только для разрешения обещаний JavaScript, для которых доступен соответствующий отложенный объект. Это фактически означает, что обещание должно быть создано с помощью &lt;code&gt;napi_create_promise()&lt;/code&gt; а отложенный объект, возвращенный из этого вызова, должен быть сохранен, чтобы быть переданным в этот API.</target>
        </trans-unit>
        <trans-unit id="27002effa854efa84116cc6ba528e82a613dccf1" translate="yes" xml:space="preserve">
          <source>This API retrieves a &lt;code&gt;napi_extended_error_info&lt;/code&gt; structure with information about the last error that occurred.</source>
          <target state="translated">Этот API извлекает структуру &lt;code&gt;napi_extended_error_info&lt;/code&gt; с информацией о последней произошедшей ошибке.</target>
        </trans-unit>
        <trans-unit id="c54fae2ce18788face29f37c323cbd4a9728444f" translate="yes" xml:space="preserve">
          <source>This API retrieves data that was previously associated with the currently running Agent via &lt;code&gt;napi_set_instance_data()&lt;/code&gt;. If no data is set, the call will succeed and &lt;code&gt;data&lt;/code&gt; will be set to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">Этот API извлекает данные, которые ранее были связаны с текущим запущенным агентом через &lt;code&gt;napi_set_instance_data()&lt;/code&gt; . Если данные не установлены, вызов будет успешным, и &lt;code&gt;data&lt;/code&gt; будут установлены в &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65239448f493d9f6ef4cbb9fa475b6583cc8a2fc" translate="yes" xml:space="preserve">
          <source>This API retrieves the external data pointer that was previously passed to &lt;code&gt;napi_create_external()&lt;/code&gt;.</source>
          <target state="translated">Этот API извлекает указатель внешних данных, который ранее был передан в &lt;code&gt;napi_create_external()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0eee031ab3af3225681355d84afe4145095683c" translate="yes" xml:space="preserve">
          <source>This API returns a JavaScript &lt;code&gt;Error&lt;/code&gt; with the text provided.</source>
          <target state="translated">Этот API возвращает &lt;code&gt;Error&lt;/code&gt; JavaScript с предоставленным текстом.</target>
        </trans-unit>
        <trans-unit id="db44d290a91d87cc4443be06ede8203a66b55369" translate="yes" xml:space="preserve">
          <source>This API returns a JavaScript &lt;code&gt;RangeError&lt;/code&gt; with the text provided.</source>
          <target state="translated">Этот API возвращает &lt;code&gt;RangeError&lt;/code&gt; JavaScript RangeError с предоставленным текстом.</target>
        </trans-unit>
        <trans-unit id="fa81b73ac735abebb0edffd8561f17aa7d32742e" translate="yes" xml:space="preserve">
          <source>This API returns a JavaScript &lt;code&gt;TypeError&lt;/code&gt; with the text provided.</source>
          <target state="translated">Этот API возвращает &lt;code&gt;TypeError&lt;/code&gt; JavaScript TypeError с предоставленным текстом.</target>
        </trans-unit>
        <trans-unit id="eac49581d384370c2fd8061e8992f383a07a12f6" translate="yes" xml:space="preserve">
          <source>This API returns an N-API value corresponding to a JavaScript &lt;code&gt;Array&lt;/code&gt; type. JavaScript arrays are described in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-array-objects&quot;&gt;Section 22.1&lt;/a&gt; of the ECMAScript Language Specification.</source>
          <target state="translated">Этот API возвращает значение N-API, соответствующее типу &lt;code&gt;Array&lt;/code&gt; JavaScript . Массивы JavaScript описаны в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-array-objects&quot;&gt;разделе 22.1&lt;/a&gt; спецификации языка ECMAScript.</target>
        </trans-unit>
        <trans-unit id="5ebdcd06ac50a711b98eac9ad3ba26e473236254" translate="yes" xml:space="preserve">
          <source>This API returns an N-API value corresponding to a JavaScript &lt;code&gt;Array&lt;/code&gt; type. The &lt;code&gt;Array&lt;/code&gt;'s length property is set to the passed-in length parameter. However, the underlying buffer is not guaranteed to be pre-allocated by the VM when the array is created - that behavior is left to the underlying VM implementation. If the buffer must be a contiguous block of memory that can be directly read and/or written via C, consider using &lt;a href=&quot;#n_api_napi_create_external_arraybuffer&quot;&gt;&lt;code&gt;napi_create_external_arraybuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот API возвращает значение N-API, соответствующее типу &lt;code&gt;Array&lt;/code&gt; JavaScript . Свойство длины &lt;code&gt;Array&lt;/code&gt; устанавливается равным переданному параметру длины. Однако не гарантируется, что базовый буфер будет предварительно выделен виртуальной машиной при создании массива - это поведение остается на усмотрение базовой реализации виртуальной машины. Если буфер должен быть непрерывным блоком памяти, который можно напрямую читать и / или записывать через C, рассмотрите возможность использования &lt;a href=&quot;#n_api_napi_create_external_arraybuffer&quot;&gt; &lt;code&gt;napi_create_external_arraybuffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6f1e1ad010526c6b95577249e9d20e0bd898f13" translate="yes" xml:space="preserve">
          <source>This API returns an N-API value corresponding to a JavaScript &lt;code&gt;Array&lt;/code&gt; type. The &lt;code&gt;Array&lt;/code&gt;'s length property is set to the passed-in length parameter. However, the underlying buffer is not guaranteed to be pre-allocated by the VM when the array is created. That behavior is left to the underlying VM implementation. If the buffer must be a contiguous block of memory that can be directly read and/or written via C, consider using &lt;a href=&quot;#n_api_napi_create_external_arraybuffer&quot;&gt;&lt;code&gt;napi_create_external_arraybuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bae849b3abb7d0a846a00b3211719de9de8557" translate="yes" xml:space="preserve">
          <source>This API returns an N-API value corresponding to a JavaScript &lt;code&gt;ArrayBuffer&lt;/code&gt;. &lt;code&gt;ArrayBuffer&lt;/code&gt;s are used to represent fixed-length binary data buffers. They are normally used as a backing-buffer for &lt;code&gt;TypedArray&lt;/code&gt; objects. The &lt;code&gt;ArrayBuffer&lt;/code&gt; allocated will have an underlying byte buffer whose size is determined by the &lt;code&gt;length&lt;/code&gt; parameter that's passed in. The underlying buffer is optionally returned back to the caller in case the caller wants to directly manipulate the buffer. This buffer can only be written to directly from native code. To write to this buffer from JavaScript, a typed array or &lt;code&gt;DataView&lt;/code&gt; object would need to be created.</source>
          <target state="translated">Этот API возвращает значение N-API, соответствующее &lt;code&gt;ArrayBuffer&lt;/code&gt; JavaScript . &lt;code&gt;ArrayBuffer&lt;/code&gt; используются для представления буферов двоичных данных фиксированной длины. Обычно они используются в качестве резервного буфера для объектов &lt;code&gt;TypedArray&lt;/code&gt; . &lt;code&gt;ArrayBuffer&lt;/code&gt; выделено будет иметь базовый буфер байт, размер которого определяется &lt;code&gt;length&lt;/code&gt; параметр , который передается в системе . Основной буфер необязательно возвращается обратно к абоненту в случае , если вызывающий абонент хочет напрямую манипулировать буфер. В этот буфер можно записать только непосредственно из машинного кода. Для записи в этот буфер из JavaScript необходимо создать типизированный массив или объект &lt;code&gt;DataView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5abde2fefb489242a6fbaf801b7da355c609cf82" translate="yes" xml:space="preserve">
          <source>This API returns an N-API value corresponding to a JavaScript &lt;code&gt;ArrayBuffer&lt;/code&gt;. The underlying byte buffer of the &lt;code&gt;ArrayBuffer&lt;/code&gt; is externally allocated and managed. The caller must ensure that the byte buffer remains valid until the finalize callback is called.</source>
          <target state="translated">Этот API возвращает значение N-API, соответствующее &lt;code&gt;ArrayBuffer&lt;/code&gt; JavaScript . Базовый байтовый буфер &lt;code&gt;ArrayBuffer&lt;/code&gt; выделяется извне и управляется. Вызывающий должен гарантировать, что байтовый буфер остается действительным до тех пор, пока не будет вызван обратный вызов finalize.</target>
        </trans-unit>
        <trans-unit id="54dc707b3f198fc07141776bb634e4e4e63b2b8f" translate="yes" xml:space="preserve">
          <source>This API returns an array containing the names of the available properties of this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa79ae1b37565525274506b36dd7fc40477368cb" translate="yes" xml:space="preserve">
          <source>This API returns if the &lt;code&gt;Object&lt;/code&gt; passed in has an element at the requested index.</source>
          <target state="translated">Этот API возвращается, если переданный &lt;code&gt;Object&lt;/code&gt; имеет элемент по запрошенному индексу.</target>
        </trans-unit>
        <trans-unit id="c604c612d96a87d8101af3ddf6bfc01f4b4d68ec" translate="yes" xml:space="preserve">
          <source>This API returns the &lt;code&gt;global&lt;/code&gt; object.</source>
          <target state="translated">Этот API возвращает &lt;code&gt;global&lt;/code&gt; объект.</target>
        </trans-unit>
        <trans-unit id="48a7f0383f00e9573b596f72e50a2cb7b8d0000d" translate="yes" xml:space="preserve">
          <source>This API returns the &lt;code&gt;new.target&lt;/code&gt; of the constructor call. If the current callback is not a constructor call, the result is &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает &lt;code&gt;new.target&lt;/code&gt; вызова конструктора. Если текущий обратный вызов не является вызовом конструктора, результатом будет &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca0876caff75d7fcb5c27bc7d32784621271953f" translate="yes" xml:space="preserve">
          <source>This API returns the &lt;code&gt;null&lt;/code&gt; object.</source>
          <target state="translated">Этот API возвращает &lt;code&gt;null&lt;/code&gt; объект.</target>
        </trans-unit>
        <trans-unit id="6f4b499dfda4f2e7f389bb8a459c0442468d26c5" translate="yes" xml:space="preserve">
          <source>This API returns the C &lt;code&gt;int32&lt;/code&gt; primitive equivalent of the given JavaScript &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает C &lt;code&gt;int32&lt;/code&gt; примитивного эквивалент данной JavaScript &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="827d0e5a4fe902762d8fdbd2a59f01ff491412f5" translate="yes" xml:space="preserve">
          <source>This API returns the C &lt;code&gt;int64&lt;/code&gt; primitive equivalent of the given JavaScript &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает C &lt;code&gt;int64&lt;/code&gt; примитивного эквивалент данной JavaScript &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2df8e3cc2f4a8dd457d5502a718bb8bd98790b34" translate="yes" xml:space="preserve">
          <source>This API returns the C &lt;code&gt;int64_t&lt;/code&gt; primitive equivalent of the given JavaScript &lt;code&gt;BigInt&lt;/code&gt;. If needed it will truncate the value, setting &lt;code&gt;lossless&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает примитивный эквивалент C &lt;code&gt;int64_t&lt;/code&gt; заданного JavaScript &lt;code&gt;BigInt&lt;/code&gt; . При необходимости он обрежет значение, установив для параметра &lt;code&gt;lossless&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="accfb9b3a000444a53160665ebc8ad9cca255ff1" translate="yes" xml:space="preserve">
          <source>This API returns the C &lt;code&gt;uint64_t&lt;/code&gt; primitive equivalent of the given JavaScript &lt;code&gt;BigInt&lt;/code&gt;. If needed it will truncate the value, setting &lt;code&gt;lossless&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает примитивный эквивалент C &lt;code&gt;uint64_t&lt;/code&gt; заданного JavaScript &lt;code&gt;BigInt&lt;/code&gt; . При необходимости он обрежет значение, установив для параметра &lt;code&gt;lossless&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a1a204e8e4a5df3c6cc124c41060a09c140f51d" translate="yes" xml:space="preserve">
          <source>This API returns the C boolean primitive equivalent of the given JavaScript &lt;code&gt;Boolean&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает логический примитивный эквивалент C заданного &lt;code&gt;Boolean&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="ca2b5220b79fdd14c56eb3008d7a5c1f99fb540c" translate="yes" xml:space="preserve">
          <source>This API returns the C double primitive equivalent of the given JavaScript &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает C двойной примитивного эквивалент данной JavaScript &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76fc91334d0e8e6d7cd76625caa8bac8a9d82ab4" translate="yes" xml:space="preserve">
          <source>This API returns the C double primitive of time value for the given JavaScript &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает двойной примитив C значения времени для заданной &lt;code&gt;Date&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="a89a951199f81c03153d5318b6b870955ad2668b" translate="yes" xml:space="preserve">
          <source>This API returns the C primitive equivalent of the given &lt;code&gt;napi_value&lt;/code&gt; as a &lt;code&gt;uint32_t&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает примитивный эквивалент заданного &lt;code&gt;napi_value&lt;/code&gt; C как &lt;code&gt;uint32_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="252de5913968c0e14b8dc66ec544741c0d2689fb" translate="yes" xml:space="preserve">
          <source>This API returns the ISO-8859-1-encoded string corresponding the value passed in.</source>
          <target state="translated">Этот API возвращает строку в кодировке ISO-8859-1,соответствующую переданному значению.</target>
        </trans-unit>
        <trans-unit id="84ae74192a0873baca176de8e267018dc4cfbd5a" translate="yes" xml:space="preserve">
          <source>This API returns the UTF16-encoded string corresponding the value passed in.</source>
          <target state="translated">Данный API возвращает строку в кодировке UTF16,соответствующую переданному значению.</target>
        </trans-unit>
        <trans-unit id="2c87b6403f35f26e7404749f214ce41091747843" translate="yes" xml:space="preserve">
          <source>This API returns the UTF8-encoded string corresponding the value passed in.</source>
          <target state="translated">Данный API возвращает строку в кодировке UTF8,соответствующую переданному значению.</target>
        </trans-unit>
        <trans-unit id="c0b748b497bba3eb1c898153dfbd929b87db172b" translate="yes" xml:space="preserve">
          <source>This API returns the Undefined object.</source>
          <target state="translated">Этот API возвращает Неопределенный объект.</target>
        </trans-unit>
        <trans-unit id="adba2f90399935e0690e7ea6510c317990dbccfb" translate="yes" xml:space="preserve">
          <source>This API returns the highest N-API version supported by the Node.js runtime. N-API is planned to be additive such that newer releases of Node.js may support additional API functions. In order to allow an addon to use a newer function when running with versions of Node.js that support it, while providing fallback behavior when running with Node.js versions that don't support it:</source>
          <target state="translated">Данный API возвращает самую высокую версию N-API,поддерживаемую во время выполнения Node.js.Планируется,что N-API будет добавлен таким образом,что более новые выпуски Node.js могут поддерживать дополнительные функции API.Для того чтобы аддон мог использовать более новую функцию при запуске с версиями Node.js,которые его поддерживают,а также для обеспечения отката при запуске с версиями Node.js,которые его не поддерживают:</target>
        </trans-unit>
        <trans-unit id="522d2a776db00199579b4671e9a78264576e9097" translate="yes" xml:space="preserve">
          <source>This API returns the length of an array.</source>
          <target state="translated">Этот API возвращает длину массива.</target>
        </trans-unit>
        <trans-unit id="62dde4493dbecb32a8daa6b7073d93a0a48999a4" translate="yes" xml:space="preserve">
          <source>This API returns the names of the enumerable properties of &lt;code&gt;object&lt;/code&gt; as an array of strings. The properties of &lt;code&gt;object&lt;/code&gt; whose key is a symbol will not be included.</source>
          <target state="translated">Этот API возвращает имена перечислимых свойств &lt;code&gt;object&lt;/code&gt; в виде массива строк. Свойства &lt;code&gt;object&lt;/code&gt; , ключом которого является символ, не будут включены.</target>
        </trans-unit>
        <trans-unit id="40720472b0f1b38ae83da6f85669c9b6c99e9e15" translate="yes" xml:space="preserve">
          <source>This API returns true if an exception is pending.</source>
          <target state="translated">Этот API возвращает true,если исключение находится в процессе рассмотрения.</target>
        </trans-unit>
        <trans-unit id="70f8fc304edc0eb1ff4bd3a9bd31242f6e63b866" translate="yes" xml:space="preserve">
          <source>This API returns various properties of a &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">Этот API возвращает различные свойства &lt;code&gt;DataView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="094bf686b8d41acd51551e48f0d5506a78066bcd" translate="yes" xml:space="preserve">
          <source>This API returns various properties of a typed array.</source>
          <target state="translated">Данный API возвращает различные свойства типизированного массива.</target>
        </trans-unit>
        <trans-unit id="8443a100e796e230e9a632cdd639d47a8dd0c30e" translate="yes" xml:space="preserve">
          <source>This API set a property on the &lt;code&gt;Object&lt;/code&gt; passed in.</source>
          <target state="translated">Этот API устанавливает свойство переданного &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="055ca98bb19b6d2b39f8280d72632e38436dcde6" translate="yes" xml:space="preserve">
          <source>This API sets and element on the &lt;code&gt;Object&lt;/code&gt; passed in.</source>
          <target state="translated">Этот набор API и элемент переданного &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3259243731814fd2604630f35f7dc1e7cb7967f" translate="yes" xml:space="preserve">
          <source>This API should not be called with &lt;code&gt;napi_tsfn_blocking&lt;/code&gt; from a JavaScript thread, because, if the queue is full, it may cause the JavaScript thread to deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1442d6affa3740f89af3af8d557d700b4757238" translate="yes" xml:space="preserve">
          <source>This API throws a JavaScript &lt;code&gt;Error&lt;/code&gt; with the text provided.</source>
          <target state="translated">Этот API выдает &lt;code&gt;Error&lt;/code&gt; JavaScript с предоставленным текстом.</target>
        </trans-unit>
        <trans-unit id="b3dd51c041226d76a52e71a99edd9a2f1b9f2b71" translate="yes" xml:space="preserve">
          <source>This API throws a JavaScript &lt;code&gt;RangeError&lt;/code&gt; with the text provided.</source>
          <target state="translated">Этот API выдает &lt;code&gt;RangeError&lt;/code&gt; JavaScript RangeError с предоставленным текстом.</target>
        </trans-unit>
        <trans-unit id="be4f91f940ec94f29555da2de8b293137ec65b17" translate="yes" xml:space="preserve">
          <source>This API throws a JavaScript &lt;code&gt;TypeError&lt;/code&gt; with the text provided.</source>
          <target state="translated">Этот API выдает &lt;code&gt;TypeError&lt;/code&gt; JavaScript TypeError с предоставленным текстом.</target>
        </trans-unit>
        <trans-unit id="1e9614bea2e91f427dd259be89411bcf53308e40" translate="yes" xml:space="preserve">
          <source>This API throws the JavaScript value provided.</source>
          <target state="translated">Этот API выбрасывает предоставленное значение JavaScript.</target>
        </trans-unit>
        <trans-unit id="99f41202181c70e315d0fe22903a8a88e874c6f3" translate="yes" xml:space="preserve">
          <source>This API uses libuv's threadpool, which can have surprising and negative performance implications for some applications; see the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;&lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">Этот API использует пул потоков libuv, что может иметь неожиданные и отрицательные последствия для производительности некоторых приложений; см. документацию &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt; &lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="5421be1b58e3a5f37657e78acf463c299fc19571" translate="yes" xml:space="preserve">
          <source>This API will return &lt;code&gt;napi_closing&lt;/code&gt; if &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; was called with &lt;code&gt;abort&lt;/code&gt; set to &lt;code&gt;napi_tsfn_abort&lt;/code&gt; from any thread. The value is only added to the queue if the API returns &lt;code&gt;napi_ok&lt;/code&gt;.</source>
          <target state="translated">Этот API вернет &lt;code&gt;napi_closing&lt;/code&gt; , если &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; был вызван с параметром &lt;code&gt;abort&lt;/code&gt; для &lt;code&gt;napi_tsfn_abort&lt;/code&gt; из любого потока. Значение добавляется в очередь только в том случае, если API возвращает &lt;code&gt;napi_ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca4d7acb60577ff5a3d284f73b617fe9d4f84288" translate="yes" xml:space="preserve">
          <source>This Module Namespace Exotic Object can be directly observed either when using &lt;code&gt;import * as m from 'cjs'&lt;/code&gt; or a dynamic import:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0484acdcfb56a632e947996df777e0189ffd6889" translate="yes" xml:space="preserve">
          <source>This allows programs to localize their dependencies, so that they do not clash.</source>
          <target state="translated">Это позволяет программам локализовать свои зависимости,чтобы они не вступали в конфликт.</target>
        </trans-unit>
        <trans-unit id="8849f713925ba1f9a6b09df33af235ddaf81cd16" translate="yes" xml:space="preserve">
          <source>This also works with timers that are returned from &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;. If their callback function throws, it will be caught by the domain &lt;code&gt;'error'&lt;/code&gt; handler.</source>
          <target state="translated">Это также работает с таймерами, которые возвращаются из &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt; . Если их функция обратного вызова вызывает &lt;code&gt;'error'&lt;/code&gt; , она будет перехвачена обработчиком ошибок домена .</target>
        </trans-unit>
        <trans-unit id="820157915a230f72b4dfebbb307e744ce07bc105" translate="yes" xml:space="preserve">
          <source>This becomes &lt;code&gt;null&lt;/code&gt; when sending a socket to a child with &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;. To poll forks and get current number of active connections, use asynchronous &lt;a href=&quot;#net_server_getconnections_callback&quot;&gt;&lt;code&gt;server.getConnections()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Это становится &lt;code&gt;null&lt;/code&gt; при отправке сокета дочернему &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; &lt;/a&gt; с помощью child_process.fork () . Чтобы опросить вилки и получить текущее количество активных подключений, используйте вместо этого асинхронный &lt;a href=&quot;#net_server_getconnections_callback&quot;&gt; &lt;code&gt;server.getConnections()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0403c54b19cf7c518c743ac412f170084964d2d4" translate="yes" xml:space="preserve">
          <source>This behavior can be observed by doing something like opening a resource then closing it before the resource can be used. The following snippet demonstrates this.</source>
          <target state="translated">Такое поведение можно наблюдать,делая что-то вроде открытия ресурса,а затем его закрытия до того,как ресурс может быть использован.Следующий фрагмент демонстрирует это.</target>
        </trans-unit>
        <trans-unit id="4d3be871fb0a41430f8168f7829d357513f35f9e" translate="yes" xml:space="preserve">
          <source>This behavior matches how &lt;code&gt;import&lt;/code&gt; behaves in browser environments, assuming a typically configured server.</source>
          <target state="translated">Это поведение соответствует тому, как &lt;code&gt;import&lt;/code&gt; ведет себя в средах браузера, при условии, что это обычно настроенный сервер.</target>
        </trans-unit>
        <trans-unit id="88491dff6c51b120ea1b1d70767ea3bf8c1f612b" translate="yes" xml:space="preserve">
          <source>This can be addressed by passing &lt;code&gt;microtaskMode: 'afterEvaluate'&lt;/code&gt; to the code that creates the &lt;code&gt;Context&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09d684d7a4d21b175c08bdd339dca1134e4b755" translate="yes" xml:space="preserve">
          <source>This can be called many times with new data as it is streamed.</source>
          <target state="translated">Это может быть вызвано много раз с новыми данными по мере их передачи в потоковом режиме.</target>
        </trans-unit>
        <trans-unit id="7c491563022589b8a9b5c79a33442425c69e8e3b" translate="yes" xml:space="preserve">
          <source>This can be overridden for servers and client requests by passing the &lt;code&gt;maxHeaderSize&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c880dd4ffae1216437534bad1ef14743456d2388" translate="yes" xml:space="preserve">
          <source>This can be used primarily to re-initialize REPL context to some pre-defined state:</source>
          <target state="translated">В первую очередь это может быть использовано для повторной инициализации контекста REPL до некоторого предопределенного состояния:</target>
        </trans-unit>
        <trans-unit id="cdf292923a244ea9d67a38073716924be27282d5" translate="yes" xml:space="preserve">
          <source>This can be used to implement continuation local storage without the use of a tracking &lt;code&gt;Map&lt;/code&gt; to store the metadata:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f813d16b38829c4c7b83c4595769721b0e2f9aa" translate="yes" xml:space="preserve">
          <source>This can be used to restart the worker by calling &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt; again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884b5d2f2fb4791a811ef2a6aa11b44f1d059e43" translate="yes" xml:space="preserve">
          <source>This can be used to restart the worker by calling &lt;code&gt;.fork()&lt;/code&gt; again.</source>
          <target state="translated">Это можно использовать для перезапуска &lt;code&gt;.fork()&lt;/code&gt; снова вызвав .fork () .</target>
        </trans-unit>
        <trans-unit id="adb47d3b708ed81016472d29ae643286daa0d023" translate="yes" xml:space="preserve">
          <source>This can be used when collecting input from a TTY stream to retrieve the current value that has been processed thus far, prior to the &lt;code&gt;line&lt;/code&gt; event being emitted. Once the &lt;code&gt;line&lt;/code&gt; event has been emitted, this property will be an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cb9ba6df123ad25e5c1f7880d8d7faab015f8c" translate="yes" xml:space="preserve">
          <source>This can be useful for cases where the original function does not follow the standard format of taking an error-first callback as the last argument.</source>
          <target state="translated">Это может быть полезно в тех случаях,когда исходная функция не следует стандартному формату принятия обратного вызова по ошибке в качестве последнего аргумента.</target>
        </trans-unit>
        <trans-unit id="cc26040f8f9ecbf7bbd37bcaa328d37dfb1dd0f1" translate="yes" xml:space="preserve">
          <source>This can cause problems when accessing the underlying &lt;code&gt;ArrayBuffer&lt;/code&gt; directly using &lt;code&gt;buf.buffer&lt;/code&gt;, as other parts of the &lt;code&gt;ArrayBuffer&lt;/code&gt; may be unrelated to the &lt;code&gt;Buffer&lt;/code&gt; object itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2698ef50db0dc91fafb011a769f5cfdfc45098" translate="yes" xml:space="preserve">
          <source>This can cause problems when accessing the underlying &lt;code&gt;ArrayBuffer&lt;/code&gt; directly using &lt;code&gt;buf.buffer&lt;/code&gt;, as the first bytes in this &lt;code&gt;ArrayBuffer&lt;/code&gt; may be unrelated to the &lt;code&gt;buf&lt;/code&gt; object itself.</source>
          <target state="translated">Это может вызвать проблемы при доступе к базовому &lt;code&gt;ArrayBuffer&lt;/code&gt; напрямую с помощью &lt;code&gt;buf.buffer&lt;/code&gt; , поскольку первые байты в этом &lt;code&gt;ArrayBuffer&lt;/code&gt; могут не иметь отношения к самому объекту &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94c39157bbaadfeac0740fd2bddc3c5a9e18fe2b" translate="yes" xml:space="preserve">
          <source>This can only be called from the master process.</source>
          <target state="translated">Это может быть вызвано только из мастер-процесса.</target>
        </trans-unit>
        <trans-unit id="2bf60ae930ac6615a4d1242e8315c9eb04f632ba" translate="yes" xml:space="preserve">
          <source>This can only happen when native addons create &lt;code&gt;SharedArrayBuffer&lt;/code&gt;s in &quot;externalized&quot; mode, or put existing &lt;code&gt;SharedArrayBuffer&lt;/code&gt; into externalized mode.</source>
          <target state="translated">Это может произойти только тогда, когда собственные &lt;code&gt;SharedArrayBuffer&lt;/code&gt; создают SharedArrayBuffer в &amp;laquo;внешнем&amp;raquo; режиме или &lt;code&gt;SharedArrayBuffer&lt;/code&gt; существующий SharedArrayBuffer во внешний режим.</target>
        </trans-unit>
        <trans-unit id="6199ec1544ac620470d1eb68d66a477d9db98885" translate="yes" xml:space="preserve">
          <source>This change was made while &lt;code&gt;async_hooks&lt;/code&gt; was an experimental API.</source>
          <target state="translated">Это изменение было внесено, когда &lt;code&gt;async_hooks&lt;/code&gt; был экспериментальным API.</target>
        </trans-unit>
        <trans-unit id="f5c8587a30eab7a428dcbb7513f0b815a15706fa" translate="yes" xml:space="preserve">
          <source>This class inherits from &lt;a href=&quot;net#net_class_net_server&quot;&gt;&lt;code&gt;net.Server&lt;/code&gt;&lt;/a&gt; and has the following additional events:</source>
          <target state="translated">Этот класс наследуется от &lt;a href=&quot;net#net_class_net_server&quot;&gt; &lt;code&gt;net.Server&lt;/code&gt; &lt;/a&gt; и имеет следующие дополнительные события:</target>
        </trans-unit>
        <trans-unit id="bb154621216808fa548d91e360e57e7c8109d9f7" translate="yes" xml:space="preserve">
          <source>This class inherits from &lt;a href=&quot;stream#stream_class_stream_transform&quot;&gt;&lt;code&gt;stream.Transform&lt;/code&gt;&lt;/a&gt;, allowing &lt;code&gt;zlib&lt;/code&gt; objects to be used in pipes and similar stream operations.</source>
          <target state="translated">Этот класс наследуется от &lt;a href=&quot;stream#stream_class_stream_transform&quot;&gt; &lt;code&gt;stream.Transform&lt;/code&gt; &lt;/a&gt; , что позволяет использовать объекты &lt;code&gt;zlib&lt;/code&gt; вканалах и аналогичных потоковых операциях.</target>
        </trans-unit>
        <trans-unit id="8e88b64435ae0d469109330906f76139a67a2d71" translate="yes" xml:space="preserve">
          <source>This class is a subclass of &lt;code&gt;tls.Server&lt;/code&gt; and emits events same as &lt;a href=&quot;http#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;http#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Этот класс является подклассом &lt;code&gt;tls.Server&lt;/code&gt; и генерирует события так же, как &lt;a href=&quot;http#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt; . См. &lt;a href=&quot;http#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="16c329449b1b3c4b04d85f37f6e6b48c47ddc4d5" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of a TCP socket or a streaming &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; endpoint (uses named pipes on Windows, and Unix domain sockets otherwise). A &lt;code&gt;net.Socket&lt;/code&gt; is also a &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;duplex stream&lt;/a&gt;, so it can be both readable and writable, and it is also an &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот класс является абстракцией сокета TCP или конечной точки &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; потоковой передачи (в противном случае используются именованные каналы в Windows и сокеты домена Unix). &lt;code&gt;net.Socket&lt;/code&gt; также &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;дуплекс потока&lt;/a&gt; , так что он может быть как для чтения и записи, и это также &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb6db2a0d099fbb5e70fab688511fc3b030d22f5" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of a TCP socket or a streaming &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; endpoint (uses named pipes on Windows, and Unix domain sockets otherwise). It is also an &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb39e860eb677e256cb393655fda70a7c3d4eaa" translate="yes" xml:space="preserve">
          <source>This class is now exported.</source>
          <target state="translated">Этот класс теперь экспортируется.</target>
        </trans-unit>
        <trans-unit id="44e839a369fec339f5305657a162e8136375a579" translate="yes" xml:space="preserve">
          <source>This class is used to create a TCP or &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; server.</source>
          <target state="translated">Этот класс используется для создания сервера TCP или &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd4c4aa236c69d8176bdaffd55ffe16275814e30" translate="yes" xml:space="preserve">
          <source>This class is used to create asynchronous state within callbacks and promise chains. It allows storing data throughout the lifetime of a web request or any other asynchronous duration. It is similar to thread-local storage in other languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92b7b6bb57bdc44b8ea493af6aace2149818803" translate="yes" xml:space="preserve">
          <source>This class was renamed from &lt;code&gt;Zlib&lt;/code&gt; to &lt;code&gt;ZlibBase&lt;/code&gt;.</source>
          <target state="translated">Этот класс был переименован из &lt;code&gt;Zlib&lt;/code&gt; в &lt;code&gt;ZlibBase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de024a70044896351480dcb7c1b1ad560f5c6459" translate="yes" xml:space="preserve">
          <source>This configures Node.js to interpret string input as CommonJS or as an ES module. String input is input via &lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;--print&lt;/code&gt;, or &lt;code&gt;STDIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244101b103efaee2124df7a27e0b69d17a4c72b4" translate="yes" xml:space="preserve">
          <source>This creates a view of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; without copying the underlying memory. For example, when passed a reference to the &lt;code&gt;.buffer&lt;/code&gt; property of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance, the newly created &lt;code&gt;Buffer&lt;/code&gt; will share the same allocated memory as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это создает представление &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; без копирования базовой памяти. Например, при передаче ссылки на &lt;code&gt;.buffer&lt;/code&gt; свойство &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; Например, вновь созданный &lt;code&gt;Buffer&lt;/code&gt; будет один и тот же выделенную память как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="642feea22e99d5b86e730cd2666b24ed829c2acf" translate="yes" xml:space="preserve">
          <source>This creates a view of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; without copying the underlying memory. For example, when passed a reference to the &lt;code&gt;.buffer&lt;/code&gt; property of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance, the newly created &lt;code&gt;Buffer&lt;/code&gt; will share the same allocated memory as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это создает представление &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; без копирования базовой памяти. Например, при передаче ссылки на &lt;code&gt;.buffer&lt;/code&gt; свойство &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; Например, вновь созданный &lt;code&gt;Buffer&lt;/code&gt; будет один и тот же выделенную память как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f70a9e943eb437948e2007e44c804669a3a635f8" translate="yes" xml:space="preserve">
          <source>This default can be replaced entirely using the &lt;a href=&quot;cli#cli_tls_cipher_list_list&quot;&gt;&lt;code&gt;--tls-cipher-list&lt;/code&gt;&lt;/a&gt; command line switch (directly, or via the &lt;a href=&quot;cli#cli_node_options_options&quot;&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt;&lt;/a&gt; environment variable). For instance, the following makes &lt;code&gt;ECDHE-RSA-AES128-GCM-SHA256:!RC4&lt;/code&gt; the default TLS cipher suite:</source>
          <target state="translated">Это значение по умолчанию можно полностью заменить с помощью переключателя командной строки &lt;a href=&quot;cli#cli_tls_cipher_list_list&quot;&gt; &lt;code&gt;--tls-cipher-list&lt;/code&gt; &lt;/a&gt; (напрямую или через переменную среды &lt;a href=&quot;cli#cli_node_options_options&quot;&gt; &lt;code&gt;NODE_OPTIONS&lt;/code&gt; &lt;/a&gt; ). Например, следующее делает &lt;code&gt;ECDHE-RSA-AES128-GCM-SHA256:!RC4&lt;/code&gt; набором шифров TLS по умолчанию:</target>
        </trans-unit>
        <trans-unit id="c3e306cc187ad3b8c8c5117038d5c054feb07697" translate="yes" xml:space="preserve">
          <source>This default can be replaced entirely using the &lt;a href=&quot;cli#cli_tls_cipher_list_list&quot;&gt;&lt;code&gt;--tls-cipher-list&lt;/code&gt;&lt;/a&gt; command-line switch (directly, or via the &lt;a href=&quot;cli#cli_node_options_options&quot;&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt;&lt;/a&gt; environment variable). For instance, the following makes &lt;code&gt;ECDHE-RSA-AES128-GCM-SHA256:!RC4&lt;/code&gt; the default TLS cipher suite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52314f1ca567086d94d0b2153e5c443a8d5ccef" translate="yes" xml:space="preserve">
          <source>This deprecation has been superseded by the deprecation of the &lt;code&gt;process.binding()&lt;/code&gt; API (&lt;a href=&quot;#DEP0111&quot;&gt;DEP0111&lt;/a&gt;).</source>
          <target state="translated">Это устаревание заменено устареванием API &lt;code&gt;process.binding()&lt;/code&gt; ( &lt;a href=&quot;#DEP0111&quot;&gt;DEP0111&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c190b3f34fae908925a1a6be8e8afe5048e36e2" translate="yes" xml:space="preserve">
          <source>This document contains two primary sections and a third section for notes. The first section explains how to use existing streams within an application. The second section explains how to create new types of streams.</source>
          <target state="translated">Настоящий документ содержит два основных раздела и третий раздел для примечаний.В первом разделе объясняется,как использовать существующие потоки внутри приложения.Во втором разделе объясняется,как создавать новые типы потоков.</target>
        </trans-unit>
        <trans-unit id="62e0d03e950af6c192f429106a4d7a544db728f4" translate="yes" xml:space="preserve">
          <source>This doesn't turn &lt;code&gt;fs.open()&lt;/code&gt; or &lt;code&gt;fsPromises.open()&lt;/code&gt; into a synchronous blocking call. If synchronous operation is desired, something like &lt;code&gt;fs.openSync()&lt;/code&gt; should be used.</source>
          <target state="translated">Это не превращает &lt;code&gt;fs.open()&lt;/code&gt; или &lt;code&gt;fsPromises.open()&lt;/code&gt; в синхронный блокирующий вызов. Если требуется синхронная работа, следует использовать что-то вроде &lt;code&gt;fs.openSync()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="511c5720a26dc7d320da43671cc5b1fecc46d7b6" translate="yes" xml:space="preserve">
          <source>This environment variable is ignored when &lt;code&gt;node&lt;/code&gt; runs as setuid root or has Linux file capabilities set.</source>
          <target state="translated">Эта переменная среды игнорируется, когда &lt;code&gt;node&lt;/code&gt; запускается как setuid root или для файлов Linux установлены возможности.</target>
        </trans-unit>
        <trans-unit id="6e6ca02ed62b1234e7dfc3664b35ddb769fa981f" translate="yes" xml:space="preserve">
          <source>This error is designed to prevent accidentally overwriting a callback registered from another module.</source>
          <target state="translated">Эта ошибка предназначена для предотвращения случайной перезаписи обратного вызова,зарегистрированного из другого модуля.</target>
        </trans-unit>
        <trans-unit id="b9977cdce2fd4b47c0997cc9ad3729a7f41f972a" translate="yes" xml:space="preserve">
          <source>This event can also be explicitly emitted by users to inject connections into the HTTP server. In that case, any &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; stream can be passed.</source>
          <target state="translated">Это событие также может быть явно создано пользователями для вставки соединений в HTTP-сервер. В этом случае можно передать любой &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; поток.</target>
        </trans-unit>
        <trans-unit id="5c553b5e91dff230374b24a70b3a2617cfe02603" translate="yes" xml:space="preserve">
          <source>This event can also be explicitly emitted by users to inject connections into the TLS server. In that case, any &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; stream can be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a0c432576c88ea7fd6ac6682ca82473146468d" translate="yes" xml:space="preserve">
          <source>This event is emitted when a new TCP stream is established, before the TLS handshake begins. &lt;code&gt;socket&lt;/code&gt; is typically an object of type &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;. Usually users will not want to access this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b0d428fb2bcfd24f28cd7691efd806371c187e" translate="yes" xml:space="preserve">
          <source>This event is emitted when a new TCP stream is established. &lt;code&gt;socket&lt;/code&gt; is typically an object of type &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;. Usually users will not want to access this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2d4b6cd4a5729a1807f57603f4e80b4da71d69" translate="yes" xml:space="preserve">
          <source>This event is emitted when a new TCP stream is established. &lt;code&gt;socket&lt;/code&gt; is typically an object of type &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;. Usually users will not want to access this event. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. The &lt;code&gt;socket&lt;/code&gt; can also be accessed at &lt;code&gt;request.connection&lt;/code&gt;.</source>
          <target state="translated">Это событие генерируется, когда устанавливается новый поток TCP. &lt;code&gt;socket&lt;/code&gt; - это обычно объект типа &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; . Обычно пользователи не хотят получать доступ к этому событию. В частности, сокет не будет генерировать &lt;code&gt;'readable'&lt;/code&gt; события из-за того, как синтаксический анализатор протокола подключается к сокету. К &lt;code&gt;socket&lt;/code&gt; также можно получить доступ по &lt;code&gt;request.connection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66fa4ee297e42f821aa6c5e39bfbf8cf100dc851" translate="yes" xml:space="preserve">
          <source>This event is emitted when a new TCP stream is established. &lt;code&gt;socket&lt;/code&gt; is typically an object of type &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;. Usually users will not want to access this event. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. The &lt;code&gt;socket&lt;/code&gt; can also be accessed at &lt;code&gt;request.socket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f345cc8a09df280597dfb6653ff618e979ce58bb" translate="yes" xml:space="preserve">
          <source>This event is guaranteed to be passed an instance of the &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; class, a subclass of &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;, unless the user specifies a socket type other than &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a890977d51324cd393c8898f763d1cb6d447e8" translate="yes" xml:space="preserve">
          <source>This event is the same as the one provided by &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это событие совпадает с событием, предоставленным &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8091d5c0132da2ce578d23516bf7b26daf3174a5" translate="yes" xml:space="preserve">
          <source>This event might not be emitted if &lt;code&gt;http2stream.end()&lt;/code&gt; is called before trailers are received and the incoming data is not being read or listened for.</source>
          <target state="translated">Это событие может не &lt;code&gt;http2stream.end()&lt;/code&gt; если http2stream.end () вызывается до приема трейлеров, а входящие данные не читаются и не прослушиваются.</target>
        </trans-unit>
        <trans-unit id="6e42e31a1c6291ea1620368f27b2644f12f5bfaa" translate="yes" xml:space="preserve">
          <source>This example uses a two-argument form of &lt;code&gt;Init()&lt;/code&gt; that receives the full &lt;code&gt;module&lt;/code&gt; object as the second argument. This allows the Addon to completely overwrite &lt;code&gt;exports&lt;/code&gt; with a single function instead of adding the function as a property of &lt;code&gt;exports&lt;/code&gt;.</source>
          <target state="translated">В этом примере используется форма &lt;code&gt;Init()&lt;/code&gt; с двумя аргументами, которая получает полный объект &lt;code&gt;module&lt;/code&gt; в качестве второго аргумента. Это позволяет аддону полностью перезаписывать &lt;code&gt;exports&lt;/code&gt; с помощью одной функции вместо того, чтобы добавлять функцию как свойство &lt;code&gt;exports&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d0a35cc513f8432ce78b0f093625a881d170862" translate="yes" xml:space="preserve">
          <source>This example uses a two-argument form of &lt;code&gt;Init()&lt;/code&gt; that receives the full &lt;code&gt;module&lt;/code&gt; object as the second argument. This allows the addon to completely overwrite &lt;code&gt;exports&lt;/code&gt; with a single function instead of adding the function as a property of &lt;code&gt;exports&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53e228887749d0c0419e29bc7e571d4700538a6" translate="yes" xml:space="preserve">
          <source>This example will echo back all messages from the master:</source>
          <target state="translated">В этом примере будут отображены все сообщения от ведущего устройства:</target>
        </trans-unit>
        <trans-unit id="a85c797866ee7d1ad692e8f7298750e061674f0a" translate="yes" xml:space="preserve">
          <source>This feature depends on the underlying operating system providing a way to be notified of filesystem changes.</source>
          <target state="translated">Эта функция зависит от базовой операционной системы,предоставляющей способ уведомления об изменениях файловой системы.</target>
        </trans-unit>
        <trans-unit id="eacad87587423d69625ed5d43b2a928821b829b6" translate="yes" xml:space="preserve">
          <source>This feature has been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe4cf3e3f69627b03a85ed87c00d5a21b561899" translate="yes" xml:space="preserve">
          <source>This feature is currently experimental and behavior might still change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9672c5c130d16069c2cb01cb9a6fb0915f6961" translate="yes" xml:space="preserve">
          <source>This feature is currently experimental and the name might change or it might be completely removed again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2bb0948bf98b0d72951fab0d71632f50f1639c" translate="yes" xml:space="preserve">
          <source>This feature is not available in &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads.</source>
          <target state="translated">Эта функция недоступна в &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; потоках.</target>
        </trans-unit>
        <trans-unit id="318da36545ca71c8357ead6931515e132410af72" translate="yes" xml:space="preserve">
          <source>This feature is only available if the &lt;code&gt;node&lt;/code&gt; executable was compiled with &lt;a href=&quot;intl#intl_options_for_building_node_js&quot;&gt;ICU&lt;/a&gt; enabled. If not, the domain names are passed through unchanged.</source>
          <target state="translated">Эта функция доступна только в том случае, если исполняемый файл &lt;code&gt;node&lt;/code&gt; был скомпилирован с включенным &lt;a href=&quot;intl#intl_options_for_building_node_js&quot;&gt;ICU&lt;/a&gt; . В противном случае доменные имена передаются без изменений.</target>
        </trans-unit>
        <trans-unit id="353351e40895571a9fe1a94d54ee8ac76890b44d" translate="yes" xml:space="preserve">
          <source>This flag exists so that the main module can be opted-in to the same behavior that &lt;code&gt;--preserve-symlinks&lt;/code&gt; gives to all other imports; they are separate flags, however, for backward compatibility with older Node.js versions.</source>
          <target state="translated">Этот флаг существует для того, чтобы для основного модуля можно было выбрать такое же поведение, которое &lt;code&gt;--preserve-symlinks&lt;/code&gt; дает для всех других операций импорта; Однако это отдельные флаги для обратной совместимости со старыми версиями Node.js.</target>
        </trans-unit>
        <trans-unit id="22fd36e23827a3db1f425306badbacaded4ffb64" translate="yes" xml:space="preserve">
          <source>This flag exists to aid in experimentation with the internal implementation of the Node.js http parser. This flag is likely to become a no-op and removed at some point in the future.</source>
          <target state="translated">Этот флаг существует для помощи в экспериментах с внутренней реализацией парсера Node.js http.Этот флаг,скорее всего,в какой-то момент в будущем превратится в no-op и будет удален.</target>
        </trans-unit>
        <trans-unit id="62d2caffde3a99f9ad79f9ef28e6d3f1fc2ba015" translate="yes" xml:space="preserve">
          <source>This flag is inherited from V8 and is subject to change upstream. It may disappear in a non-semver-major release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef0d9ec3e79a5d118740d96d95026bba3f19b0a" translate="yes" xml:space="preserve">
          <source>This function MUST NOT be called by application code directly. It should be implemented by child classes, and called by the internal &lt;code&gt;Readable&lt;/code&gt; class methods only.</source>
          <target state="translated">Эта функция НЕ ДОЛЖНА вызываться кодом приложения напрямую. Он должен быть реализован дочерними классами и вызываться только внутренними методами класса &lt;code&gt;Readable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49a676e99b324309fcea6e9319c1afc529b01374" translate="yes" xml:space="preserve">
          <source>This function MUST NOT be called by application code directly. It should be implemented by child classes, and called by the internal &lt;code&gt;Writable&lt;/code&gt; class methods only.</source>
          <target state="translated">Эта функция НЕ ДОЛЖНА вызываться кодом приложения напрямую. Он должен быть реализован дочерними классами и вызываться только внутренними методами класса &lt;code&gt;Writable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f33ccfcd0f74d271bd116cb4c56da77fb246945" translate="yes" xml:space="preserve">
          <source>This function adds a hook that will run before a given Node.js instance shuts down. If necessary, such hooks can be removed before they are run using &lt;code&gt;RemoveEnvironmentCleanupHook()&lt;/code&gt;, which has the same signature. Callbacks are run in last-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de80300bdb948c051cf6cc4090a49b1df7ff897" translate="yes" xml:space="preserve">
          <source>This function adds a hook that will run before a given Node.js instance shuts down. If necessary, such hooks can be removed using &lt;code&gt;RemoveEnvironmentCleanupHook()&lt;/code&gt; before they are run, which has the same signature.</source>
          <target state="translated">Эта функция добавляет ловушку, которая будет запущена до закрытия данного экземпляра Node.js. При необходимости такие хуки можно удалить с помощью &lt;code&gt;RemoveEnvironmentCleanupHook()&lt;/code&gt; перед их запуском, имеющей ту же сигнатуру.</target>
        </trans-unit>
        <trans-unit id="90ca9c092fb3cd108c85d11cc79640ed5f5ff9ea" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt;&lt;code&gt;realpath(3)&lt;/code&gt;&lt;/a&gt;, with some exceptions:</source>
          <target state="translated">Эта функция ведет себя как &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt; &lt;code&gt;realpath(3)&lt;/code&gt; &lt;/a&gt; , за некоторыми исключениями:</target>
        </trans-unit>
        <trans-unit id="b68ec689236f9a0971c9dc975d6d90cad1215953" translate="yes" xml:space="preserve">
          <source>This function can be overwritten by providing alternative function as part of the &lt;code&gt;options.checkServerIdentity&lt;/code&gt; option passed to &lt;code&gt;tls.connect()&lt;/code&gt;. The overwriting function can call &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; of course, to augment the checks done with additional verification.</source>
          <target state="translated">Эту функцию можно перезаписать, предоставив альтернативную функцию как часть параметра &lt;code&gt;options.checkServerIdentity&lt;/code&gt; , передаваемого в &lt;code&gt;tls.connect()&lt;/code&gt; . Функция перезаписи, конечно же, может вызвать &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; , чтобы дополнить проверки, выполняемые дополнительной проверкой.</target>
        </trans-unit>
        <trans-unit id="19be6f8a2996df1dc3d420cff41c083dff365e49" translate="yes" xml:space="preserve">
          <source>This function creates a new &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; with all options set to default, immediately initiates connection with &lt;a href=&quot;#net_socket_connect_path_connectlistener&quot;&gt;&lt;code&gt;socket.connect(path[, connectListener])&lt;/code&gt;&lt;/a&gt;, then returns the &lt;code&gt;net.Socket&lt;/code&gt; that starts the connection.</source>
          <target state="translated">Эта функция создает новый &lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; со всеми параметрами по умолчанию, немедленно инициирует соединение с &lt;a href=&quot;#net_socket_connect_path_connectlistener&quot;&gt; &lt;code&gt;socket.connect(path[, connectListener])&lt;/code&gt; &lt;/a&gt; , затем возвращает &lt;code&gt;net.Socket&lt;/code&gt; , который запускает соединение.</target>
        </trans-unit>
        <trans-unit id="e1ad29049dcb1287306ecc15dd61f9a7c9096e21" translate="yes" xml:space="preserve">
          <source>This function creates a new &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; with all options set to default, immediately initiates connection with &lt;a href=&quot;#net_socket_connect_port_host_connectlistener&quot;&gt;&lt;code&gt;socket.connect(port[, host][, connectListener])&lt;/code&gt;&lt;/a&gt;, then returns the &lt;code&gt;net.Socket&lt;/code&gt; that starts the connection.</source>
          <target state="translated">Эта функция создает новый &lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; со всеми параметрами, установленными по умолчанию, немедленно инициирует соединение с &lt;a href=&quot;#net_socket_connect_port_host_connectlistener&quot;&gt; &lt;code&gt;socket.connect(port[, host][, connectListener])&lt;/code&gt; &lt;/a&gt; , затем возвращает &lt;code&gt;net.Socket&lt;/code&gt; , который запускает соединение.</target>
        </trans-unit>
        <trans-unit id="cb7a012e16cda321f95feeb4747e891fbb16db52" translate="yes" xml:space="preserve">
          <source>This function does not work on AIX versions before 7.1, it will resolve the &lt;code&gt;Promise&lt;/code&gt; with an error using code &lt;code&gt;UV_ENOSYS&lt;/code&gt;.</source>
          <target state="translated">Эта функция не работает в версиях AIX до 7.1, она разрешит &lt;code&gt;Promise&lt;/code&gt; с ошибкой, используя код &lt;code&gt;UV_ENOSYS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42b8c900f932b0d2bf423ef68b4068f49e84544a" translate="yes" xml:space="preserve">
          <source>This function does not work on AIX versions before 7.1, it will return the error &lt;code&gt;UV_ENOSYS&lt;/code&gt;.</source>
          <target state="translated">Эта функция не работает в версиях AIX до 7.1, она вернет ошибку &lt;code&gt;UV_ENOSYS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5697cdda4de768e2cf54b723a122efe5653b963a" translate="yes" xml:space="preserve">
          <source>This function ensures that &lt;code&gt;path&lt;/code&gt; is resolved absolutely, and that the URL control characters are correctly encoded when converting into a File URL.</source>
          <target state="translated">Эта функция гарантирует, что &lt;code&gt;path&lt;/code&gt; определен абсолютно, и что управляющие символы URL-адреса правильно закодированы при преобразовании в URL-адрес файла.</target>
        </trans-unit>
        <trans-unit id="1108aee998992248b38802c507c72b2ed7d96209" translate="yes" xml:space="preserve">
          <source>This function ensures the correct decodings of percent-encoded characters as well as ensuring a cross-platform valid absolute path string.</source>
          <target state="translated">Данная функция обеспечивает правильное декодирование символов,закодированных в процентах,а также обеспечивает кросс-платформенную валидацию строки абсолютного пути.</target>
        </trans-unit>
        <trans-unit id="a70fc6c3e16322065cdff0ce2620dd70b68cc89b" translate="yes" xml:space="preserve">
          <source>This function executes a string of JavaScript code and returns its result with the following caveats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6da0e5af272e064260e3498115fb5e36dc75e6f" translate="yes" xml:space="preserve">
          <source>This function fills the &lt;code&gt;version&lt;/code&gt; struct with the major, minor, and patch version of Node.js that is currently running, and the &lt;code&gt;release&lt;/code&gt; field with the value of &lt;a href=&quot;process#process_process_release&quot;&gt;&lt;code&gt;process.release.name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция заполняет структуру &lt;code&gt;version&lt;/code&gt; основной, дополнительной и исправленной версией Node.js, которая выполняется в данный момент, а поле &lt;code&gt;release&lt;/code&gt; - значением &lt;a href=&quot;process#process_process_release&quot;&gt; &lt;code&gt;process.release.name&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4badebe3055deecf26d575320a5dc0d908bb82ac" translate="yes" xml:space="preserve">
          <source>This function gives V8 an indication of the amount of externally allocated memory that is kept alive by JavaScript objects (i.e. a JavaScript object that points to its own memory allocated by a native module). Registering externally allocated memory will trigger global garbage collections more often than it would otherwise.</source>
          <target state="translated">Эта функция дает V8 указание на объем внешней памяти,которая поддерживается объектами JavaScript (т.е.JavaScript-объектом,который указывает на свою собственную память,выделенную &quot;родным&quot; модулем).Регистрация памяти,выделенной извне,будет вызывать глобальные мусорные коллекции чаще,чем это было бы в противном случае.</target>
        </trans-unit>
        <trans-unit id="b17195473e810af1aa1ea35771a8d98831afcd81" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readBigUint64BE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa92f9057f7e94696ed20cc3e8e5783964bde9d" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readBigUint64LE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c87095fe78fe415ecf76676138daab46f795497" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUint16BE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a599fe2ebb6e0c90f94e70d45ed6a6288849ec55" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUint16LE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddf061751bfc021947a9bb28f05d5f92b30e724" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUint32BE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d062235ab556e4b8b487be4c2cbf719bc71bb59c" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUint32LE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca68f13ed6e5def2798c66c6ee71a5996cfd8f9" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUint8()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4f4188ecc0c8acd718f14536ebb52296b31683" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUintBE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acda940e611ac5151444acf58a6c596bc91a4ff5" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.readUintLE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae0c648e7e8b4c6c06ab3bdc166c10fd01a29bc" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeBigUint64BE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d989597ca83ce92b2ebc974227e030f79836246b" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeBigUint64LE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7882fe6b12a08ba2ecedc0ac073aa0c6926d56e8" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUint16BE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4ede003e84631aa7ba9cf2c18f90f4daa2ea5b" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUint16LE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2a193ac4613205dba1af950bb14e9c274d1578" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUint32BE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc823e61d2d24573479596ab4f4b6978195712b4" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUint32LE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d2df3a4f68377357ed939a55b364d4097c457c" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUint8()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402a6fa5e58d03fc7bbe60b46e8a7c35f0c26ebd" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUintBE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a24117e8fc9cb06efe4145ec7da0fd24e48708" translate="yes" xml:space="preserve">
          <source>This function is also available as &lt;code&gt;buf.writeUintLE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857c61c4553c47ab5c22be99637b828b0046272f" translate="yes" xml:space="preserve">
          <source>This function is asynchronous because the ES module resolver in Node.js is asynchronous. With the introduction of &lt;a href=&quot;https://github.com/tc39/proposal-top-level-await&quot;&gt;Top-Level Await&lt;/a&gt;, these use cases will be easier as they won't require an async function wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1a128b76492cea694295767529e32daed47241" translate="yes" xml:space="preserve">
          <source>This function is asynchronous. When the connection is established, the &lt;a href=&quot;#net_event_connect&quot;&gt;&lt;code&gt;'connect'&lt;/code&gt;&lt;/a&gt; event will be emitted. If there is a problem connecting, instead of a &lt;a href=&quot;#net_event_connect&quot;&gt;&lt;code&gt;'connect'&lt;/code&gt;&lt;/a&gt; event, an &lt;a href=&quot;#net_event_error_1&quot;&gt;&lt;code&gt;'error'&lt;/code&gt;&lt;/a&gt; event will be emitted with the error passed to the &lt;a href=&quot;#net_event_error_1&quot;&gt;&lt;code&gt;'error'&lt;/code&gt;&lt;/a&gt; listener. The last parameter &lt;code&gt;connectListener&lt;/code&gt;, if supplied, will be added as a listener for the &lt;a href=&quot;#net_event_connect&quot;&gt;&lt;code&gt;'connect'&lt;/code&gt;&lt;/a&gt; event &lt;strong&gt;once&lt;/strong&gt;.</source>
          <target state="translated">Эта функция асинхронная. Когда соединение будет установлено, будет выдано событие &lt;a href=&quot;#net_event_connect&quot;&gt; &lt;code&gt;'connect'&lt;/code&gt; &lt;/a&gt; . Если есть проблема с подключением, вместо события &lt;a href=&quot;#net_event_connect&quot;&gt; &lt;code&gt;'connect'&lt;/code&gt; &lt;/a&gt; выдано событие &lt;a href=&quot;#net_event_error_1&quot;&gt; &lt;code&gt;'error'&lt;/code&gt; &lt;/a&gt; с передачей &lt;a href=&quot;#net_event_error_1&quot;&gt; &lt;code&gt;'error'&lt;/code&gt; &lt;/a&gt; прослушиватель &amp;laquo;error&amp;raquo; . Последний параметр &lt;code&gt;connectListener&lt;/code&gt; , если он указан, будет добавлен в качестве слушателя для события &lt;a href=&quot;#net_event_connect&quot;&gt; &lt;code&gt;'connect'&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; один раз&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="04d4248379ca91265c113f72fb881941a2bc6374" translate="yes" xml:space="preserve">
          <source>This function is asynchronous. When the server starts listening, the &lt;a href=&quot;#net_event_listening&quot;&gt;&lt;code&gt;'listening'&lt;/code&gt;&lt;/a&gt; event will be emitted. The last parameter &lt;code&gt;callback&lt;/code&gt; will be added as a listener for the &lt;a href=&quot;#net_event_listening&quot;&gt;&lt;code&gt;'listening'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Эта функция асинхронная. Когда сервер начинает прослушивание, &lt;a href=&quot;#net_event_listening&quot;&gt; &lt;code&gt;'listening'&lt;/code&gt; &lt;/a&gt; событие &quot;прослушивание&quot; . &lt;code&gt;callback&lt;/code&gt; последнего параметра будет добавлен в качестве слушателя для события &lt;a href=&quot;#net_event_listening&quot;&gt; &lt;code&gt;'listening'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2bee66a03f4e0be219c5798f053d5e9b9c3e847d" translate="yes" xml:space="preserve">
          <source>This function is based on a constant-time algorithm. Returns true if &lt;code&gt;a&lt;/code&gt; is equal to &lt;code&gt;b&lt;/code&gt;, without leaking timing information that would allow an attacker to guess one of the values. This is suitable for comparing HMAC digests or secret values like authentication cookies or &lt;a href=&quot;https://www.w3.org/TR/capability-urls/&quot;&gt;capability urls&lt;/a&gt;.</source>
          <target state="translated">Эта функция основана на алгоритме постоянного времени. Возвращает истину, если &lt;code&gt;a&lt;/code&gt; равно &lt;code&gt;b&lt;/code&gt; , без утечки информации о времени, которая позволила бы злоумышленнику угадать одно из значений. Это подходит для сравнения дайджестов HMAC или секретных значений, таких как файлы cookie аутентификации или &lt;a href=&quot;https://www.w3.org/TR/capability-urls/&quot;&gt;URL-адреса возможностей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f26bf91d7cc00bfeb0aad8763630fd384b5df2c" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt;, except in that it takes an &lt;code&gt;inspectOptions&lt;/code&gt; argument which specifies options that are passed along to &lt;a href=&quot;#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция идентична &lt;a href=&quot;#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt; , за исключением того, что она принимает аргумент &lt;code&gt;inspectOptions&lt;/code&gt; , который указывает параметры, которые передаются в &lt;a href=&quot;#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="617bb9f000f555b14d080241e1d35366b287a613" translate="yes" xml:space="preserve">
          <source>This function is not completely equivalent to &lt;code&gt;querystring.parse()&lt;/code&gt;. One difference is that &lt;code&gt;querystring.parse()&lt;/code&gt; does url decoding:</source>
          <target state="translated">Эта функция не полностью эквивалентна &lt;code&gt;querystring.parse()&lt;/code&gt; . Одно отличие состоит в том, что &lt;code&gt;querystring.parse()&lt;/code&gt; выполняет декодирование URL:</target>
        </trans-unit>
        <trans-unit id="eb6a3e28055b4eb1c155f9eed1a1ea921b27b662" translate="yes" xml:space="preserve">
          <source>This function is now cross-platform consistent and no longer returns a path with a trailing slash on any platform</source>
          <target state="translated">Эта функция теперь является кроссплатформенной последовательной и больше не возвращает путь с трейлинговым слешем на любой платформе.</target>
        </trans-unit>
        <trans-unit id="547b61aa8084b6f0d2b8892c94a1327d80d9a29d" translate="yes" xml:space="preserve">
          <source>This function is now cross-platform consistent and no longer returns a path with a trailing slash on any platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d18b4c1d734142a1855c74af4c046ac1c0027b" translate="yes" xml:space="preserve">
          <source>This function is only available for zlib-based streams, i.e. not Brotli.</source>
          <target state="translated">Эта функция доступна только для потоков на основе zlib,т.е.не для Brotli.</target>
        </trans-unit>
        <trans-unit id="8a50b04599b1f0639a100cf46f5d1c6f9b45123c" translate="yes" xml:space="preserve">
          <source>This function is only available on POSIX platforms (i.e. not Windows or Android).</source>
          <target state="translated">Эта функция доступна только на платформах POSIX (т.е.не Windows и не Android).</target>
        </trans-unit>
        <trans-unit id="dcddf4c38c715eb9dc19e1f8b915629007eb9f86" translate="yes" xml:space="preserve">
          <source>This function is only available on POSIX platforms (i.e. not Windows or Android). This feature is not available in &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads.</source>
          <target state="translated">Эта функция доступна только на платформах POSIX (то есть не в Windows или Android). Эта функция недоступна в &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; потоках.</target>
        </trans-unit>
        <trans-unit id="9b8337051652d8cca59af0a3ee06f51154cfa9f8" translate="yes" xml:space="preserve">
          <source>This function is only called if the certificate passed all other checks, such as being issued by trusted CA (&lt;code&gt;options.ca&lt;/code&gt;).</source>
          <target state="translated">Эта функция вызывается только в том случае, если сертификат прошел все другие проверки, например, был выпущен доверенным &lt;code&gt;options.ca&lt;/code&gt; сертификации ( options.ca ).</target>
        </trans-unit>
        <trans-unit id="4dd8d9762971f53a0f4b9c54c5b91e951886daa4" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;#crypto_crypto_randombytes_size_callback&quot;&gt;&lt;code&gt;crypto.randomBytes()&lt;/code&gt;&lt;/a&gt; but requires the first argument to be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; that will be filled. It also requires that a callback is passed in.</source>
          <target state="translated">Эта функция похожа на &lt;a href=&quot;#crypto_crypto_randombytes_size_callback&quot;&gt; &lt;code&gt;crypto.randomBytes()&lt;/code&gt; &lt;/a&gt; но требует, чтобы первым аргументом был &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; который будет заполнен. Также требуется, чтобы был передан обратный вызов.</target>
        </trans-unit>
        <trans-unit id="a0be84b52a05de61cb37d8e8aafedfc9056c383b" translate="yes" xml:space="preserve">
          <source>This function now returns a Promise. Passing a callback is deprecated, and was useless up to this version, as the Worker was actually terminated synchronously. Terminating is now a fully asynchronous operation.</source>
          <target state="translated">Теперь эта функция возвращает Обещание.Передача обратного вызова устарела,и была бесполезна до этой версии,так как Рабочий на самом деле был прерван синхронно.Прекращение теперь является полностью асинхронной операцией.</target>
        </trans-unit>
        <trans-unit id="894173e491bab80c84c852bbf2fd895d54ca239e" translate="yes" xml:space="preserve">
          <source>This function now supports RSA-PSS keys.</source>
          <target state="translated">Эта функция теперь поддерживает клавиши RSA-PSS.</target>
        </trans-unit>
        <trans-unit id="1d299f2177608180223cfccb77b867a0f516eab6" translate="yes" xml:space="preserve">
          <source>This function now supports key objects.</source>
          <target state="translated">Эта функция теперь поддерживает ключевые объекты.</target>
        </trans-unit>
        <trans-unit id="91771921fecce0493df003c3b93efccae8cfb43d" translate="yes" xml:space="preserve">
          <source>This function operates asynchronously. The &lt;code&gt;'close'&lt;/code&gt; event will be emitted when the server has no more open connections.</source>
          <target state="translated">Эта функция работает асинхронно. &lt;code&gt;'close'&lt;/code&gt; будет сгенерировано событие , когда сервер не имеет больше открытых соединений.</target>
        </trans-unit>
        <trans-unit id="0516587396d5bc4b5aea745b473a81786e9cfdf7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the worker is connected to its master via its IPC channel, &lt;code&gt;false&lt;/code&gt; otherwise. A worker is connected to its master after it has been created. It is disconnected after the &lt;code&gt;'disconnect'&lt;/code&gt; event is emitted.</source>
          <target state="translated">Эта функция возвращает &lt;code&gt;true&lt;/code&gt; если воркер подключен к своему мастеру через свой канал IPC, в противном случае - &lt;code&gt;false&lt;/code&gt; . Рабочий подключается к своему мастеру после того, как был создан. Он отключается после &lt;code&gt;'disconnect'&lt;/code&gt; события &amp;laquo;разъединение&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="a3544713b214d05ed5bf6d144fbd49ea7c59cdb9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the worker's process has terminated (either because of exiting or being signaled). Otherwise, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Эта функция возвращает &lt;code&gt;true&lt;/code&gt; если рабочий процесс завершился (либо из-за выхода, либо из-за сигнала). В противном случае возвращается &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28d972587f7fd8928ac54fe47aed457c4167ba5b" translate="yes" xml:space="preserve">
          <source>This function should only be used for reconnecting a socket after &lt;code&gt;'close'&lt;/code&gt; has been emitted or otherwise it may lead to undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af382458c7c1694962f7272d5dc6257cee21c759" translate="yes" xml:space="preserve">
          <source>This function takes an optional additional argument &lt;code&gt;err&lt;/code&gt; - an &lt;code&gt;Error&lt;/code&gt; object that will be used as the context for the JavaScript stack printed in the report.</source>
          <target state="translated">Эта функция принимает необязательный дополнительный аргумент &lt;code&gt;err&lt;/code&gt; - объект &lt;code&gt;Error&lt;/code&gt; , который будет использоваться в качестве контекста для стека JavaScript, напечатанного в отчете.</target>
        </trans-unit>
        <trans-unit id="85a6696b2b5e9ad1b7f6b1c4ddafeb81b81510f6" translate="yes" xml:space="preserve">
          <source>This function takes an optional additional argument &lt;code&gt;err&lt;/code&gt; - an &lt;code&gt;Error&lt;/code&gt; object that will be used as the context for the JavaScript stack printed in the report. When using report to handle errors in a callback or an exception handler, this allows the report to include the location of the original error as well as where it was handled.</source>
          <target state="translated">Эта функция принимает необязательный дополнительный аргумент &lt;code&gt;err&lt;/code&gt; - объект &lt;code&gt;Error&lt;/code&gt; , который будет использоваться в качестве контекста для стека JavaScript, напечатанного в отчете. При использовании отчета для обработки ошибок в обратном вызове или обработчике исключений это позволяет отчету включать в себя местоположение исходной ошибки, а также место ее обработки.</target>
        </trans-unit>
        <trans-unit id="2598594008e308c577b78ccab80128ea1021d684" translate="yes" xml:space="preserve">
          <source>This function takes an optional additional argument &lt;code&gt;err&lt;/code&gt; which is an &lt;code&gt;Error&lt;/code&gt; object that will be used as the context for the JavaScript stack printed in the report. When using report to handle errors in a callback or an exception handler, this allows the report to include the location of the original error as well as where it was handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aed6487576d7dd9ad1eb9e85fc412600a086575" translate="yes" xml:space="preserve">
          <source>This function takes an optional additional argument &lt;code&gt;err&lt;/code&gt;, which is an &lt;code&gt;Error&lt;/code&gt; object that will be used as the context for the JavaScript stack printed in the report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ea37c691223737f81084a936fc91467e04f445" translate="yes" xml:space="preserve">
          <source>This function takes an optional additional argument &lt;code&gt;filename&lt;/code&gt;, which is the name of a file into which the report is written.</source>
          <target state="translated">Эта функция принимает необязательный дополнительный аргумент &lt;code&gt;filename&lt;/code&gt; , который является именем файла, в который записывается отчет.</target>
        </trans-unit>
        <trans-unit id="5f1d19a17165c41d2e0284a1b5c28f86bd5da3dc" translate="yes" xml:space="preserve">
          <source>This function will kill the worker. In the master, it does this by disconnecting the &lt;code&gt;worker.process&lt;/code&gt;, and once disconnected, killing with &lt;code&gt;signal&lt;/code&gt;. In the worker, it does it by disconnecting the channel, and then exiting with code &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Эта функция убьет рабочего. В мастере он делает это, отключая &lt;code&gt;worker.process&lt;/code&gt; , а после отключения убивает с помощью &lt;code&gt;signal&lt;/code&gt; . В воркере это делается отключением канала и выходом с кодом &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc334c0e240796cb69b50cfdf422e85bbfb6b48c" translate="yes" xml:space="preserve">
          <source>This functionality has been removed.</source>
          <target state="translated">Эта функциональность была удалена.</target>
        </trans-unit>
        <trans-unit id="36e8179328462918849467415bc6e47b53741e6f" translate="yes" xml:space="preserve">
          <source>This happens when:</source>
          <target state="translated">Такое случается,когда:</target>
        </trans-unit>
        <trans-unit id="c6a7c9955e027e73c53547cdbc2c54fa7e69027d" translate="yes" xml:space="preserve">
          <source>This has the same false positives and negatives as described in &lt;a href=&quot;#tty_writestream_getcolordepth_env&quot;&gt;&lt;code&gt;writeStream.getColorDepth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это имеет те же ложные срабатывания и отрицательные результаты, как описано в &lt;a href=&quot;#tty_writestream_getcolordepth_env&quot;&gt; &lt;code&gt;writeStream.getColorDepth()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af19c7ad3abc63f1d8cfd897e2ce7c93b37d4059" translate="yes" xml:space="preserve">
          <source>This implementation lies at a lower level than the &lt;a href=&quot;esm#esm_ecmascript_modules&quot;&gt;ECMAScript Module loader&lt;/a&gt;. There is also currently no way to interact with the Loader, though support is planned.</source>
          <target state="translated">Эта реализация находится на более низком уровне, чем &lt;a href=&quot;esm#esm_ecmascript_modules&quot;&gt;загрузчик модуля ECMAScript&lt;/a&gt; . Также в настоящее время нет возможности взаимодействовать с загрузчиком, хотя поддержка планируется.</target>
        </trans-unit>
        <trans-unit id="4cc43cf5c93c4064080045c3dcadfc716ce173eb" translate="yes" xml:space="preserve">
          <source>This implementation lies at a lower level than the &lt;a href=&quot;esm#esm_modules_ecmascript_modules&quot;&gt;ECMAScript Module loader&lt;/a&gt;. There is also no way to interact with the Loader yet, though support is planned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7d6f9a64fbfdcb7e7c59dad106536b0e46b04e" translate="yes" xml:space="preserve">
          <source>This integration is in line with the &lt;a href=&quot;https://github.com/webassembly/esm-integration&quot;&gt;ES Module Integration Proposal for Web Assembly&lt;/a&gt;.</source>
          <target state="translated">Эта интеграция соответствует &lt;a href=&quot;https://github.com/webassembly/esm-integration&quot;&gt;предложению по интеграции модуля ES для веб-сборки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b04d8ad3ebc5af27ac4b4e1c10756739a2d2124" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;true&lt;/code&gt; if the socket is not connected yet, either because &lt;code&gt;.connect()&lt;/code&gt; has not yet been called or because it is still in the process of connecting (see &lt;a href=&quot;#net_socket_connecting&quot;&gt;&lt;code&gt;socket.connecting&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Это &lt;code&gt;true&lt;/code&gt; если сокет еще не подключен, потому что &lt;code&gt;.connect()&lt;/code&gt; еще не был вызван или потому что он все еще находится в процессе подключения (см. &lt;a href=&quot;#net_socket_connecting&quot;&gt; &lt;code&gt;socket.connecting&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c6a303413dae5cf2f56522f80094d23bc472745a" translate="yes" xml:space="preserve">
          <source>This is a list of system errors commonly-encountered when writing a Node.js program. For a comprehensive list, see the &lt;a href=&quot;http://man7.org/linux/man-pages/man3/errno.3.html&quot;&gt;&lt;code&gt;errno&lt;/code&gt;(3) man page&lt;/a&gt;.</source>
          <target state="translated">Это список системных ошибок, которые часто встречаются при написании программы на Node.js. Полный список см. На &lt;a href=&quot;http://man7.org/linux/man-pages/man3/errno.3.html&quot;&gt; &lt;code&gt;errno&lt;/code&gt; странице errno (3)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6384af73049677961508c308274b10195affbf33" translate="yes" xml:space="preserve">
          <source>This is a list of system errors commonly-encountered when writing a Node.js program. For a comprehensive list, see the &lt;a href=&quot;https://man7.org/linux/man-pages/man3/errno.3.html&quot;&gt;&lt;code&gt;errno&lt;/code&gt;(3) man page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615981803bb95c92778608ec98aa86e6b7bec7bb" translate="yes" xml:space="preserve">
          <source>This is a property on the &lt;code&gt;buffer&lt;/code&gt; module returned by &lt;code&gt;require('buffer')&lt;/code&gt;, not on the &lt;code&gt;Buffer&lt;/code&gt; global or a &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">Это свойство модуля &lt;code&gt;buffer&lt;/code&gt; возвращаемого функцией &lt;code&gt;require('buffer')&lt;/code&gt; , а не глобального &lt;code&gt;Buffer&lt;/code&gt; или экземпляра &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22812016d42b8d66cb470ae9bc87b4d2aece8842" translate="yes" xml:space="preserve">
          <source>This is a readable stream which contains data written to &lt;a href=&quot;process#process_process_stderr&quot;&gt;&lt;code&gt;process.stderr&lt;/code&gt;&lt;/a&gt; inside the worker thread. If &lt;code&gt;stderr: true&lt;/code&gt; was not passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, then data will be piped to the parent thread's &lt;a href=&quot;process#process_process_stderr&quot;&gt;&lt;code&gt;process.stderr&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">Это читаемый поток, который содержит данные, записанные в &lt;a href=&quot;process#process_process_stderr&quot;&gt; &lt;code&gt;process.stderr&lt;/code&gt; &lt;/a&gt; внутри рабочего потока. Если &lt;code&gt;stderr: true&lt;/code&gt; не был передан конструктору &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; , то данные будут переданы в поток &lt;a href=&quot;process#process_process_stderr&quot;&gt; &lt;code&gt;process.stderr&lt;/code&gt; &lt;/a&gt; родительского потока.</target>
        </trans-unit>
        <trans-unit id="ef6edca8b742a017994b5d4c4977f24985399057" translate="yes" xml:space="preserve">
          <source>This is a readable stream which contains data written to &lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; inside the worker thread. If &lt;code&gt;stdout: true&lt;/code&gt; was not passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, then data will be piped to the parent thread's &lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">Это читаемый поток, который содержит данные, записанные в &lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt; внутри рабочего потока. Если &lt;code&gt;stdout: true&lt;/code&gt; не был передан конструктору &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; , то данные будут переданы в поток &lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt; родительского потока.</target>
        </trans-unit>
        <trans-unit id="6afd75c5ddd399af67dafff5027ffe863f1e6152" translate="yes" xml:space="preserve">
          <source>This is also emitted in case this &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; stream emits an error when a &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; stream pipes into it.</source>
          <target state="translated">Это также генерируется в случае, если этот &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; поток выдает ошибку, когда в него поступает доступный для &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; поток.</target>
        </trans-unit>
        <trans-unit id="7266000cead4bb9d2f0e14e9324975faa9eb3a46" translate="yes" xml:space="preserve">
          <source>This is an abstraction used to control and modify the lifetime of objects created within a particular scope. In general, N-API values are created within the context of a handle scope. When a native method is called from JavaScript, a default handle scope will exist. If the user does not explicitly create a new handle scope, N-API values will be created in the default handle scope. For any invocations of code outside the execution of a native method (for instance, during a libuv callback invocation), the module is required to create a scope before invoking any functions that can result in the creation of JavaScript values.</source>
          <target state="translated">Это абстракция,используемая для управления и изменения времени жизни объектов,созданных в определенной области.В общем случае,значения N-API создаются в контексте области видимости handle.При вызове родного метода из JavaScript будет существовать область видимости handle по умолчанию.Если пользователь явно не создает новую область видимости handle,то значения N-API будут созданы в области видимости handle по умолчанию.Для любых вызовов кода вне выполнения &quot;родного&quot; метода (например,во время обратного вызова libuv),модуль должен создать область видимости перед вызовом любых функций,которые могут привести к созданию значений JavaScript.</target>
        </trans-unit>
        <trans-unit id="ac28259e1a0df374cd212eac367f298bb33dcf21" translate="yes" xml:space="preserve">
          <source>This is an opaque pointer that is used to represent a JavaScript value.</source>
          <target state="translated">Это непрозрачный указатель,который используется для представления значения JavaScript.</target>
        </trans-unit>
        <trans-unit id="9f727952d85916df43ab81b94013dad46a0ffb66" translate="yes" xml:space="preserve">
          <source>This is an opaque pointer that represents a JavaScript function which can be called asynchronously from multiple threads via &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt;.</source>
          <target state="translated">Это непрозрачный указатель, представляющий функцию JavaScript, которую можно вызывать асинхронно из нескольких потоков с помощью &lt;code&gt;napi_call_threadsafe_function()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4d7f80ddbb26766196c61aca550b0031231b661" translate="yes" xml:space="preserve">
          <source>This is automatically called by any readline instance on its &lt;code&gt;input&lt;/code&gt; if the &lt;code&gt;input&lt;/code&gt; is a terminal. Closing the &lt;code&gt;readline&lt;/code&gt; instance does not stop the &lt;code&gt;input&lt;/code&gt; from emitting &lt;code&gt;'keypress'&lt;/code&gt; events.</source>
          <target state="translated">Это автоматически вызывается любым экземпляром readline на его &lt;code&gt;input&lt;/code&gt; если &lt;code&gt;input&lt;/code&gt; является терминалом. Закрытие &lt;code&gt;readline&lt;/code&gt; экземпляра не останавливает &lt;code&gt;input&lt;/code&gt; от излучающего &lt;code&gt;'keypress'&lt;/code&gt; события.</target>
        </trans-unit>
        <trans-unit id="513ca07430a1834e15b4c394a7795cf89cbe75bd" translate="yes" xml:space="preserve">
          <source>This is important when developing APIs in order to give users the opportunity to assign event handlers &lt;em&gt;after&lt;/em&gt; an object has been constructed but before any I/O has occurred:</source>
          <target state="translated">Это важно при разработке API-интерфейсов, чтобы дать пользователям возможность назначать обработчики событий &lt;em&gt;после того,&lt;/em&gt; как объект был создан, но до того, как произойдет какой-либо ввод-вывод:</target>
        </trans-unit>
        <trans-unit id="357a4cb22700e3b307528201a96ec4a2b0b9733a" translate="yes" xml:space="preserve">
          <source>This is in addition to a single internal output slab buffer of size &lt;code&gt;chunkSize&lt;/code&gt;, which defaults to 16K.</source>
          <target state="translated">Это в дополнение к одному внутреннему выходному буферу slab-буфера размером &lt;code&gt;chunkSize&lt;/code&gt; , который по умолчанию равен 16K.</target>
        </trans-unit>
        <trans-unit id="0e3d91f0352da1646e45574d84c00b75bddafb4b" translate="yes" xml:space="preserve">
          <source>This is less performant than transpiling source files before running Node.js; a transpiler loader should only be used for development and testing purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ba21f3ad7e7c13655130ea573064167080a992" translate="yes" xml:space="preserve">
          <source>This is not a hard limit. The &lt;code&gt;EventEmitter&lt;/code&gt; instance will allow more listeners to be added but will output a trace warning to stderr indicating that a &quot;possible EventEmitter memory leak&quot; has been detected. For any single &lt;code&gt;EventEmitter&lt;/code&gt;, the &lt;code&gt;emitter.getMaxListeners()&lt;/code&gt; and &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; methods can be used to temporarily avoid this warning:</source>
          <target state="translated">Это не жесткий предел. &lt;code&gt;EventEmitter&lt;/code&gt; экземпляр позволит большему количеству слушателей , которые будут добавлены , но будет выводить предупреждение трассировки потока ошибок , указывающее , что &amp;laquo;возможная утечка памяти EventEmitter&amp;raquo; была обнаружена. Для любого отдельного &lt;code&gt;EventEmitter&lt;/code&gt; , то &lt;code&gt;emitter.getMaxListeners()&lt;/code&gt; и &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; методы могут быть использованы , чтобы временно избежать этого предупреждения:</target>
        </trans-unit>
        <trans-unit id="3d247546ea140a0078a900e014d8747b999296d6" translate="yes" xml:space="preserve">
          <source>This is not a problem in common cases with &lt;code&gt;latin1&lt;/code&gt; or &lt;code&gt;ascii&lt;/code&gt;. But it is advised to be mindful about this behavior when working with strings that could contain multi-byte characters.</source>
          <target state="translated">Это не проблема в обычных случаях с &lt;code&gt;latin1&lt;/code&gt; или &lt;code&gt;ascii&lt;/code&gt; . Но рекомендуется помнить об этом поведении при работе со строками, которые могут содержать многобайтовые символы.</target>
        </trans-unit>
        <trans-unit id="3d02f8a61048e89839ba3d326aaa6f920c92db2d" translate="yes" xml:space="preserve">
          <source>This is not used in Node.js and is provided purely for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c66676dbad5fdaa521ab930e256e4fa335eadac" translate="yes" xml:space="preserve">
          <source>This is now defined as a shared symbol.</source>
          <target state="translated">Теперь это определяется как общий символ.</target>
        </trans-unit>
        <trans-unit id="f5242dbc0ccf6b9ae1f9550732bf4ac3daf1ddd8" translate="yes" xml:space="preserve">
          <source>This is primarily useful for opening files on NFS mounts as it allows skipping the potentially stale local cache. It has a very real impact on I/O performance so using this flag is not recommended unless it is needed.</source>
          <target state="translated">Это в первую очередь полезно при открытии файлов на NFS монтировках,так как позволяет пропустить потенциально залежавшийся локальный кэш.Это очень реально влияет на производительность ввода/вывода,поэтому использование этого флага не рекомендуется,если в этом нет необходимости.</target>
        </trans-unit>
        <trans-unit id="13659d9d635a0bb9731d74ddaa44ccbacf7114d8" translate="yes" xml:space="preserve">
          <source>This is the abstraction to use to reference a &lt;code&gt;napi_value&lt;/code&gt;. This allows for users to manage the lifetimes of JavaScript values, including defining their minimum lifetimes explicitly.</source>
          <target state="translated">Это абстракция, используемая для ссылки на &lt;code&gt;napi_value&lt;/code&gt; . Это позволяет пользователям управлять временем жизни значений JavaScript, в том числе явно определять минимальное время жизни.</target>
        </trans-unit>
        <trans-unit id="34a774ab2a4921da0fd743e3684fff94908d9756" translate="yes" xml:space="preserve">
          <source>This is the extent of Node.js's awareness of &lt;code&gt;package.json&lt;/code&gt; files.</source>
          <target state="translated">Это степень осведомленности Node.js о файлах &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b5770f4a8b8d2b91b8b89200402bfc85d1d9ae4" translate="yes" xml:space="preserve">
          <source>This is the extent of the awareness of &lt;code&gt;package.json&lt;/code&gt; files within Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d91ef4e57195bccfb6358ea28c6511e77bda4df" translate="yes" xml:space="preserve">
          <source>This is the final event emitted by any &lt;code&gt;Worker&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4dc164d26c00c2e0663b4d38c3db42c8434ee4" translate="yes" xml:space="preserve">
          <source>This is the legacy version of &lt;a href=&quot;#process_process_hrtime_bigint&quot;&gt;&lt;code&gt;process.hrtime.bigint()&lt;/code&gt;&lt;/a&gt; before &lt;code&gt;bigint&lt;/code&gt; was introduced in JavaScript.</source>
          <target state="translated">Это устаревшая версия &lt;a href=&quot;#process_process_hrtime_bigint&quot;&gt; &lt;code&gt;process.hrtime.bigint()&lt;/code&gt; &lt;/a&gt; до того, как &lt;code&gt;bigint&lt;/code&gt; был введен в JavaScript.</target>
        </trans-unit>
        <trans-unit id="2525459183823536083e4ebd1435d86bbd1b85ed" translate="yes" xml:space="preserve">
          <source>This is the most basic way to use a domain.</source>
          <target state="translated">Это самый простой способ использования домена.</target>
        </trans-unit>
        <trans-unit id="80b89f0e469cc98dfba15cb1d10494441d90a747" translate="yes" xml:space="preserve">
          <source>This is the raw HTTP body and has nothing to do with higher-level multi-part body encodings that may be used.</source>
          <target state="translated">Это сырое тело HTTP и не имеет ничего общего с более высокоуровневыми многочастичными кодировками тела,которые могут быть использованы.</target>
        </trans-unit>
        <trans-unit id="538139721ac2a46c540659479840eaa7091999c5" translate="yes" xml:space="preserve">
          <source>This is the same behavior as &lt;code&gt;buf.subarray()&lt;/code&gt;.</source>
          <target state="translated">Это то же поведение, что и у &lt;code&gt;buf.subarray()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8885bf9fac1f550c45c516012648aa0d3c485186" translate="yes" xml:space="preserve">
          <source>This is the size (in bytes) of pre-allocated internal &lt;code&gt;Buffer&lt;/code&gt; instances used for pooling. This value may be modified.</source>
          <target state="translated">Это размер (в байтах) предварительно выделенных внутренних экземпляров &lt;code&gt;Buffer&lt;/code&gt; используемых для объединения. Это значение можно изменить.</target>
        </trans-unit>
        <trans-unit id="48967cae6d1c2b0c2a13e4b791916ed7e65a4ccd" translate="yes" xml:space="preserve">
          <source>This is useful for tracking potential errors in an application while using the &lt;code&gt;Promise&lt;/code&gt; constructor, as multiple resolutions are silently swallowed. However, the occurrence of this event does not necessarily indicate an error. For example, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race&quot;&gt;&lt;code&gt;Promise.race()&lt;/code&gt;&lt;/a&gt; can trigger a &lt;code&gt;'multipleResolves'&lt;/code&gt; event.</source>
          <target state="translated">Это полезно для отслеживания потенциальных ошибок в приложении при использовании конструктора &lt;code&gt;Promise&lt;/code&gt; , так как несколько разрешений игнорируются. Однако появление этого события не обязательно указывает на ошибку. Например, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race&quot;&gt; &lt;code&gt;Promise.race()&lt;/code&gt; &lt;/a&gt; может вызвать событие &lt;code&gt;'multipleResolves'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01763a87bcd722e13be0664e3816427229bb3d32" translate="yes" xml:space="preserve">
          <source>This issue also occurs when the &lt;code&gt;loop()&lt;/code&gt; call is scheduled using the &lt;code&gt;process.nextTick()&lt;/code&gt; and &lt;code&gt;queueMicrotask()&lt;/code&gt; functions.</source>
          <target state="translated">Эта проблема также возникает, когда вызов &lt;code&gt;loop()&lt;/code&gt; запланирован с использованием функций &lt;code&gt;process.nextTick()&lt;/code&gt; и &lt;code&gt;queueMicrotask()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c84e6ba5ec93b3229b046976c5bb2ea3de0008df" translate="yes" xml:space="preserve">
          <source>This issue occurs because all contexts share the same microtask and nextTick queues.</source>
          <target state="translated">Эта проблема возникает потому,что все контексты имеют одну и ту же микрозадачу и очереди на следующий тик.</target>
        </trans-unit>
        <trans-unit id="087b80944dc12b408a7190bd19a55dd80487fba1" translate="yes" xml:space="preserve">
          <source>This macro includes &lt;code&gt;NAPI_MODULE&lt;/code&gt;, and declares an &lt;code&gt;Init&lt;/code&gt; function with a special name and with visibility beyond the addon. This will allow Node.js to initialize the module even if it is loaded multiple times.</source>
          <target state="translated">Этот макрос включает &lt;code&gt;NAPI_MODULE&lt;/code&gt; и объявляет функцию &lt;code&gt;Init&lt;/code&gt; со специальным именем и с видимостью за пределами аддона. Это позволит Node.js инициализировать модуль, даже если он загружается несколько раз.</target>
        </trans-unit>
        <trans-unit id="65b6d753134ef1843140e701dbcf7c6cf6f1c011" translate="yes" xml:space="preserve">
          <source>This mainly adds some input validation on top of &lt;code&gt;Object.setPrototypeOf(constructor.prototype, superConstructor.prototype)&lt;/code&gt;. As an additional convenience, &lt;code&gt;superConstructor&lt;/code&gt; will be accessible through the &lt;code&gt;constructor.super_&lt;/code&gt; property.</source>
          <target state="translated">В основном это добавляет некоторую проверку ввода поверх &lt;code&gt;Object.setPrototypeOf(constructor.prototype, superConstructor.prototype)&lt;/code&gt; . В качестве дополнительного удобства &lt;code&gt;superConstructor&lt;/code&gt; будет доступен через свойство &lt;code&gt;constructor.super_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbe38e8ab91654a3718be6a69fd1e9049d8a23cf" translate="yes" xml:space="preserve">
          <source>This method adds HTTP trailing headers (a header but at the end of the message) to the response.</source>
          <target state="translated">Этот метод добавляет HTTP трейлинговые заголовки (заголовок,но в конце сообщения)к ответу.</target>
        </trans-unit>
        <trans-unit id="65a6ac889d5d3a2216eb8e367915333b528d1f56" translate="yes" xml:space="preserve">
          <source>This method allows a JavaScript function object to be called from a native add-on. This API is similar to &lt;code&gt;napi_call_function&lt;/code&gt;. However, it is used to call &lt;em&gt;from&lt;/em&gt; native code back &lt;em&gt;into&lt;/em&gt; JavaScript &lt;em&gt;after&lt;/em&gt; returning from an async operation (when there is no other script on the stack). It is a fairly simple wrapper around &lt;code&gt;node::MakeCallback&lt;/code&gt;.</source>
          <target state="translated">Этот метод позволяет вызывать объект функции JavaScript из собственного надстройки. Этот API похож на &lt;code&gt;napi_call_function&lt;/code&gt; . Однако он используется для вызова &lt;em&gt;из&lt;/em&gt; собственного кода обратно &lt;em&gt;в&lt;/em&gt; JavaScript &lt;em&gt;после&lt;/em&gt; возврата из асинхронной операции (когда в стеке нет другого скрипта). Это довольно простая оболочка вокруг &lt;code&gt;node::MakeCallback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="314d268cd28ce9b140b0dded93860db9fb90479e" translate="yes" xml:space="preserve">
          <source>This method allows a JavaScript function object to be called from a native add-on. This is the primary mechanism of calling back &lt;em&gt;from&lt;/em&gt; the add-on's native code &lt;em&gt;into&lt;/em&gt; JavaScript. For the special case of calling into JavaScript after an async operation, see &lt;a href=&quot;#n_api_napi_make_callback&quot;&gt;&lt;code&gt;napi_make_callback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод позволяет вызывать объект функции JavaScript из собственного надстройки. Это основной механизм обратного вызова &lt;em&gt;из&lt;/em&gt; собственного кода надстройки &lt;em&gt;в&lt;/em&gt; JavaScript. Для особого случая вызова JavaScript после асинхронной операции см. &lt;a href=&quot;#n_api_napi_make_callback&quot;&gt; &lt;code&gt;napi_make_callback&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b47fa157850c2f5703ae846bb53e6699d8248ed" translate="yes" xml:space="preserve">
          <source>This method allows the efficient definition of multiple properties on a given object. The properties are defined using property descriptors (see &lt;a href=&quot;#n_api_napi_property_descriptor&quot;&gt;&lt;code&gt;napi_property_descriptor&lt;/code&gt;&lt;/a&gt;). Given an array of such property descriptors, this API will set the properties on the object one at a time, as defined by &lt;code&gt;DefineOwnProperty()&lt;/code&gt; (described in &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc&quot;&gt;Section 9.1.6&lt;/a&gt; of the ECMA-262 specification).</source>
          <target state="translated">Этот метод позволяет эффективно определять несколько свойств данного объекта. Свойства определяются с помощью дескрипторов свойств (см. &lt;a href=&quot;#n_api_napi_property_descriptor&quot;&gt; &lt;code&gt;napi_property_descriptor&lt;/code&gt; &lt;/a&gt; ). Учитывая массив таких дескрипторов свойств, этот API будет устанавливать свойства объекта по одному, как определено &lt;code&gt;DefineOwnProperty()&lt;/code&gt; (описано в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc&quot;&gt;Разделе 9.1.6 спецификации&lt;/a&gt; ECMA-262).</target>
        </trans-unit>
        <trans-unit id="3024bc40da0e8b2f8456ff7b850738108b0ba432" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;console.log()&lt;/code&gt; passing it the arguments received. This method does not produce any XML formatting.</source>
          <target state="translated">Этот метод вызывает &lt;code&gt;console.log()&lt;/code&gt; передавая ему полученные аргументы. Этот метод не производит никакого форматирования XML.</target>
        </trans-unit>
        <trans-unit id="a58dad5fbe14785fff61707964fc0d135efd16a6" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a particular &lt;code&gt;Agent&lt;/code&gt; subclass.</source>
          <target state="translated">Этот метод может быть переопределен конкретным подклассом &lt;code&gt;Agent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="044476cda3ae03b23c22f5aa1722fe2c9153e73c" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a particular &lt;code&gt;Agent&lt;/code&gt; subclass. If this method returns a falsy value, the socket will be destroyed instead of persisting it for use with the next request.</source>
          <target state="translated">Этот метод может быть переопределен конкретным подклассом &lt;code&gt;Agent&lt;/code&gt; . Если этот метод возвращает ложное значение, сокет будет уничтожен, а не сохранен для использования со следующим запросом.</target>
        </trans-unit>
        <trans-unit id="411dbf433a68f70422dbaf488ba5f65a2beaeff4" translate="yes" xml:space="preserve">
          <source>This method can be used to request a peer's certificate after the secure connection has been established.</source>
          <target state="translated">Этот метод может быть использован для запроса сертификата пиринговой компании после установления защищенного соединения.</target>
        </trans-unit>
        <trans-unit id="880393178dbd75cbd21c9662d8dee3698a77a077" translate="yes" xml:space="preserve">
          <source>This method can be used, in particular, to increase cache hits.</source>
          <target state="translated">Этот метод может быть использован,в частности,для увеличения количества попаданий в кэш.</target>
        </trans-unit>
        <trans-unit id="5f4cb1d7d9a937c696a9d3a130cc76d5f3a14117" translate="yes" xml:space="preserve">
          <source>This method cannot be called while the module is being evaluated (&lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'evaluating'&lt;/code&gt;) to prevent infinite recursion.</source>
          <target state="translated">Этот метод нельзя вызвать во время оценки модуля ( &lt;code&gt;module.status&lt;/code&gt; - &lt;code&gt;'evaluating'&lt;/code&gt; ), чтобы предотвратить бесконечную рекурсию.</target>
        </trans-unit>
        <trans-unit id="ae61ef6fb5c5e0b2e4e9dd9285bb0ec91b77d7af" translate="yes" xml:space="preserve">
          <source>This method cannot be called while the module is being evaluated (&lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'evaluating'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce10b9da65b616da4694a90a9e7a21235864fb9b" translate="yes" xml:space="preserve">
          <source>This method defaults to the &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; constructor and can be overridden on subclasses.</source>
          <target state="translated">По умолчанию в этом методе используется конструктор &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; ,&lt;/a&gt; и его можно переопределить в подклассах.</target>
        </trans-unit>
        <trans-unit id="fe24c9359e77ab155e2cf5807443c493af258ac7" translate="yes" xml:space="preserve">
          <source>This method disables the instance of &lt;code&gt;AsyncLocalStorage&lt;/code&gt;. All subsequent calls to &lt;code&gt;asyncLocalStorage.getStore()&lt;/code&gt; will return &lt;code&gt;undefined&lt;/code&gt; until &lt;code&gt;asyncLocalStorage.run()&lt;/code&gt; is called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59adf1d819f06dbe25fb548331d4b223442948c" translate="yes" xml:space="preserve">
          <source>This method does not display anything unless used in the inspector. Stops the current JavaScript CPU profiling session if one has been started and prints the report to the &lt;strong&gt;Profiles&lt;/strong&gt; panel of the inspector. See &lt;a href=&quot;#console_console_profile_label&quot;&gt;&lt;code&gt;console.profile()&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">Этот метод ничего не отображает, если он не используется в инспекторе. Останавливает текущий сеанс профилирования ЦП JavaScript, если он был запущен, и печатает отчет на панели &amp;laquo; &lt;strong&gt;Профили&amp;raquo;&lt;/strong&gt; инспектора. См. Пример &lt;a href=&quot;#console_console_profile_label&quot;&gt; &lt;code&gt;console.profile()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ec4a52764354b50bcb9a5cfff971e55a8182917" translate="yes" xml:space="preserve">
          <source>This method does not display anything unless used in the inspector. The &lt;code&gt;console.markTimeline()&lt;/code&gt; method is the deprecated form of &lt;a href=&quot;#console_console_timestamp_label&quot;&gt;&lt;code&gt;console.timeStamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод ничего не отображает, если он не используется в инспекторе. Метод &lt;code&gt;console.markTimeline()&lt;/code&gt; - это устаревшая форма &lt;a href=&quot;#console_console_timestamp_label&quot;&gt; &lt;code&gt;console.timeStamp()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c9644bae39bdc4b2a06283995736aff4accc9db" translate="yes" xml:space="preserve">
          <source>This method does not display anything unless used in the inspector. The &lt;code&gt;console.profile()&lt;/code&gt; method starts a JavaScript CPU profile with an optional label until &lt;a href=&quot;#console_console_profileend_label&quot;&gt;&lt;code&gt;console.profileEnd()&lt;/code&gt;&lt;/a&gt; is called. The profile is then added to the &lt;strong&gt;Profile&lt;/strong&gt; panel of the inspector.</source>
          <target state="translated">Этот метод ничего не отображает, если он не используется в инспекторе. Метод &lt;code&gt;console.profile()&lt;/code&gt; запускает профиль процессора JavaScript с необязательной меткой до тех пор, пока не будет вызвана &lt;a href=&quot;#console_console_profileend_label&quot;&gt; &lt;code&gt;console.profileEnd()&lt;/code&gt; &lt;/a&gt; . Затем профиль добавляется на панель &amp;laquo; &lt;strong&gt;Профиль&amp;raquo;&lt;/strong&gt; инспектора.</target>
        </trans-unit>
        <trans-unit id="66b73ac52f9f87f1e288fc8b5563d582410feaa9" translate="yes" xml:space="preserve">
          <source>This method does not display anything unless used in the inspector. The &lt;code&gt;console.timeStamp()&lt;/code&gt; method adds an event with the label &lt;code&gt;'label'&lt;/code&gt; to the &lt;strong&gt;Timeline&lt;/strong&gt; panel of the inspector.</source>
          <target state="translated">Этот метод ничего не отображает, если он не используется в инспекторе. Метод &lt;code&gt;console.timeStamp()&lt;/code&gt; добавляет событие с меткой &lt;code&gt;'label'&lt;/code&gt; на панель &lt;strong&gt;временной&lt;/strong&gt; шкалы инспектора.</target>
        </trans-unit>
        <trans-unit id="902c866e4222a0e01ce48bdc721e0e086336e617" translate="yes" xml:space="preserve">
          <source>This method does not display anything unless used in the inspector. The &lt;code&gt;console.timeline()&lt;/code&gt; method is the deprecated form of &lt;a href=&quot;#console_console_time_label&quot;&gt;&lt;code&gt;console.time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод ничего не отображает, если он не используется в инспекторе. Метод &lt;code&gt;console.timeline()&lt;/code&gt; - это устаревшая форма &lt;a href=&quot;#console_console_time_label&quot;&gt; &lt;code&gt;console.time()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89dc19b7a95d7304b45400b37628fe89d51d2642" translate="yes" xml:space="preserve">
          <source>This method does not display anything unless used in the inspector. The &lt;code&gt;console.timelineEnd()&lt;/code&gt; method is the deprecated form of &lt;a href=&quot;#console_console_timeend_label&quot;&gt;&lt;code&gt;console.timeEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод ничего не отображает, если он не используется в инспекторе. Метод &lt;code&gt;console.timelineEnd()&lt;/code&gt; является устаревшей формой &lt;a href=&quot;#console_console_timeend_label&quot;&gt; &lt;code&gt;console.timeEnd()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ee1a742255ec0013c5a3a66d547b57b65aa47b9" translate="yes" xml:space="preserve">
          <source>This method exists for parity with the Web &lt;code&gt;MessagePort&lt;/code&gt; API. In Node.js, it is only useful for ignoring messages when no event listener is present. Node.js also diverges in its handling of &lt;code&gt;.onmessage&lt;/code&gt;. Setting it will automatically call &lt;code&gt;.start()&lt;/code&gt;, but unsetting it will let messages queue up until a new handler is set or the port is discarded.</source>
          <target state="translated">Этот метод существует для паритета с API Web &lt;code&gt;MessagePort&lt;/code&gt; . В Node.js это полезно только для игнорирования сообщений, когда нет прослушивателя событий. Node.js также отличается в обработке &lt;code&gt;.onmessage&lt;/code&gt; . При его установке автоматически вызывается &lt;code&gt;.start()&lt;/code&gt; , но при его снятии сообщения встают в очередь до тех пор, пока не будет установлен новый обработчик или порт не будет удален.</target>
        </trans-unit>
        <trans-unit id="1bd0e8798533a40b472a574de3407e9a7b72f42b" translate="yes" xml:space="preserve">
          <source>This method freezes a given object. This prevents new properties from being added to it, existing properties from being removed, prevents changing the enumerability, configurability, or writability of existing properties, and prevents the values of existing properties from being changed. It also prevents the object's prototype from being changed. This is described in &lt;a href=&quot;https://tc39.es/ecma262/#sec-object.freeze&quot;&gt;Section 19.1.2.6&lt;/a&gt; of the ECMA-262 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfb7ad344e3264e6f56ee6b803df6669da02258" translate="yes" xml:space="preserve">
          <source>This method has a custom variant for promises that is available using &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">У этого метода есть собственный вариант обещаний, доступный с помощью &lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d57d1e099a57589123cef0225673441664e1e377" translate="yes" xml:space="preserve">
          <source>This method is aliased as &lt;code&gt;worker.destroy()&lt;/code&gt; for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb57dbb6c324bb36be5d114bc6d97130ad87632c" translate="yes" xml:space="preserve">
          <source>This method is aliased as &lt;code&gt;worker.destroy()&lt;/code&gt; for backwards compatibility.</source>
          <target state="translated">Этот метод имеет псевдоним &lt;code&gt;worker.destroy()&lt;/code&gt; для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="e775a3566b8847c710d9cc718838379fe8af31e8" translate="yes" xml:space="preserve">
          <source>This method is almost identical to &lt;a href=&quot;#domain_domain_bind_callback&quot;&gt;&lt;code&gt;domain.bind(callback)&lt;/code&gt;&lt;/a&gt;. However, in addition to catching thrown errors, it will also intercept &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; objects sent as the first argument to the function.</source>
          <target state="translated">Этот метод почти идентичен &lt;a href=&quot;#domain_domain_bind_callback&quot;&gt; &lt;code&gt;domain.bind(callback)&lt;/code&gt; &lt;/a&gt; . Однако, помимо перехвата &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; ошибок, он также перехватывает объекты Error, отправленные в качестве первого аргумента функции.</target>
        </trans-unit>
        <trans-unit id="55fe8b47083e44662b3b21e0205abdb2450ff04a" translate="yes" xml:space="preserve">
          <source>This method is automatically called when an &lt;code&gt;URL&lt;/code&gt; object is serialized with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод автоматически вызывается, когда объект &lt;code&gt;URL&lt;/code&gt; сериализуется с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28801c3e02284a4ad1c8e05607ca10e063aca0d7" translate="yes" xml:space="preserve">
          <source>This method is called to generate error objects that will be thrown when an object can not be cloned.</source>
          <target state="translated">Этот метод вызывается для генерации объектов ошибок,которые будут брошены,когда объект не может быть клонирован.</target>
        </trans-unit>
        <trans-unit id="700f32b0f67ecb7c4ac4e3ae91ec634c886d4a35" translate="yes" xml:space="preserve">
          <source>This method is called to read some kind of host object, i.e. an object that is created by native C++ bindings. If it is not possible to deserialize the data, a suitable exception should be thrown.</source>
          <target state="translated">Этот метод вызывается для чтения какого-то хост-объекта,т.е.объекта,который создается с помощью родных связок C++.Если десериализация данных невозможна,то должно быть брошено подходящее исключение.</target>
        </trans-unit>
        <trans-unit id="b50d7fb37c7e66d40b59fce47a8cf43fd69d830e" translate="yes" xml:space="preserve">
          <source>This method is called to write some kind of host object, i.e. an object created by native C++ bindings. If it is not possible to serialize &lt;code&gt;object&lt;/code&gt;, a suitable exception should be thrown.</source>
          <target state="translated">Этот метод вызывается для записи некоторого вида хост-объекта, то есть объекта, созданного собственными привязками C ++. Если сериализовать &lt;code&gt;object&lt;/code&gt; невозможно , должно быть сгенерировано подходящее исключение.</target>
        </trans-unit>
        <trans-unit id="cc90c26b3f24d636637240e71fd082c904e9c070" translate="yes" xml:space="preserve">
          <source>This method is called when the serializer is going to serialize a &lt;code&gt;SharedArrayBuffer&lt;/code&gt; object. It must return an unsigned 32-bit integer ID for the object, using the same ID if this &lt;code&gt;SharedArrayBuffer&lt;/code&gt; has already been serialized. When deserializing, this ID will be passed to &lt;a href=&quot;#v8_deserializer_transferarraybuffer_id_arraybuffer&quot;&gt;&lt;code&gt;deserializer.transferArrayBuffer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод вызывается, когда сериализатор собирается сериализовать объект &lt;code&gt;SharedArrayBuffer&lt;/code&gt; . Он должен возвращать беззнаковый 32-разрядный целочисленный идентификатор для объекта, используя тот же идентификатор, если этот &lt;code&gt;SharedArrayBuffer&lt;/code&gt; уже был сериализован. При десериализации этот идентификатор будет передан в &lt;a href=&quot;#v8_deserializer_transferarraybuffer_id_arraybuffer&quot;&gt; &lt;code&gt;deserializer.transferArrayBuffer()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a90ca117688b90f4f93a88c2020c612e45a213fe" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;a href=&quot;#n_api_napi_get_property&quot;&gt;&lt;code&gt;napi_get_property&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;napi_value&lt;/code&gt; created from the string passed in as &lt;code&gt;utf8Name&lt;/code&gt;.</source>
          <target state="translated">Этот метод эквивалентен вызову &lt;a href=&quot;#n_api_napi_get_property&quot;&gt; &lt;code&gt;napi_get_property&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;napi_value&lt;/code&gt; , созданным из строки, переданной как &lt;code&gt;utf8Name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff0f235c75ab596d17873611663abac578a666d2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;a href=&quot;#n_api_napi_has_property&quot;&gt;&lt;code&gt;napi_has_property&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;napi_value&lt;/code&gt; created from the string passed in as &lt;code&gt;utf8Name&lt;/code&gt;.</source>
          <target state="translated">Этот метод эквивалентен вызову &lt;a href=&quot;#n_api_napi_has_property&quot;&gt; &lt;code&gt;napi_has_property&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;napi_value&lt;/code&gt; , созданным из строки, переданной как &lt;code&gt;utf8Name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fffe0150f23e478ffc2985c081f396a015cdadd" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;a href=&quot;#n_api_napi_set_property&quot;&gt;&lt;code&gt;napi_set_property&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;napi_value&lt;/code&gt; created from the string passed in as &lt;code&gt;utf8Name&lt;/code&gt;.</source>
          <target state="translated">Этот метод эквивалентен вызову &lt;a href=&quot;#n_api_napi_set_property&quot;&gt; &lt;code&gt;napi_set_property&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;napi_value&lt;/code&gt; , созданным из строки, переданной как &lt;code&gt;utf8Name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19464a10e7ec85fab298874a00280da292ea3dfb" translate="yes" xml:space="preserve">
          <source>This method is guaranteed to return an instance of the &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; class, a subclass of &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;, unless the user specifies a socket type other than &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79406247f664fad5db62dc93aae5d2cdf35f025d" translate="yes" xml:space="preserve">
          <source>This method is inherited from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray&quot;&gt;&lt;code&gt;TypedArray#subarray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b2abbf6b99b52821177c95dfb1032a424b6a78" translate="yes" xml:space="preserve">
          <source>This method is intentionally generic and works with the web platform &lt;a href=&quot;https://dom.spec.whatwg.org/#interface-eventtarget&quot;&gt;EventTarget&lt;/a&gt; interface, which has no special &lt;code&gt;'error'&lt;/code&gt; event semantics and does not listen to the &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3517d618f187f767a89b4300a1b63a8e5b17cacd" translate="yes" xml:space="preserve">
          <source>This method is meaningful only on Windows system. On POSIX systems, the method is non-operational and always returns &lt;code&gt;path&lt;/code&gt; without modifications.</source>
          <target state="translated">Этот метод имеет смысл только в системе Windows. В системах POSIX этот метод не работает и всегда возвращает &lt;code&gt;path&lt;/code&gt; без изменений.</target>
        </trans-unit>
        <trans-unit id="25056a0846e91f46d370fe64132434ed4f7def8b" translate="yes" xml:space="preserve">
          <source>This method is meaningful only on Windows systems. On POSIX systems, the method is non-operational and always returns &lt;code&gt;path&lt;/code&gt; without modifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c983f46e76b9dd0433799a448f5bdb19ed94b9c5" translate="yes" xml:space="preserve">
          <source>This method is not compatible with the &lt;code&gt;Uint8Array.prototype.slice()&lt;/code&gt;, which is a superclass of &lt;code&gt;Buffer&lt;/code&gt;. To copy the slice, use &lt;code&gt;Uint8Array.prototype.slice()&lt;/code&gt;.</source>
          <target state="translated">Этот метод несовместим с &lt;code&gt;Uint8Array.prototype.slice()&lt;/code&gt; , который является суперклассом &lt;code&gt;Buffer&lt;/code&gt; . Чтобы скопировать фрагмент, используйте &lt;code&gt;Uint8Array.prototype.slice()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b32b22b8c3858f8f2465d3884aa82bd24680b6ec" translate="yes" xml:space="preserve">
          <source>This method is not present on the &lt;code&gt;Deserializer&lt;/code&gt; class itself but can be provided by subclasses.</source>
          <target state="translated">Этот метод отсутствует в &lt;code&gt;Deserializer&lt;/code&gt; классе Deserializer , но может быть предоставлен подклассами.</target>
        </trans-unit>
        <trans-unit id="9f595b58310133998e11cc3f534439b34974ab0b" translate="yes" xml:space="preserve">
          <source>This method is not present on the &lt;code&gt;Serializer&lt;/code&gt; class itself but can be provided by subclasses.</source>
          <target state="translated">Этот метод отсутствует в самом классе &lt;code&gt;Serializer&lt;/code&gt; , но может быть предоставлен подклассами.</target>
        </trans-unit>
        <trans-unit id="c26e9b3b06705355d77378147bd81e2be0268ac9" translate="yes" xml:space="preserve">
          <source>This method is only available if &lt;code&gt;http2session.type&lt;/code&gt; is equal to &lt;code&gt;http2.constants.NGHTTP2_SESSION_CLIENT&lt;/code&gt;.</source>
          <target state="translated">Этот метод доступен, только если &lt;code&gt;http2session.type&lt;/code&gt; равно &lt;code&gt;http2.constants.NGHTTP2_SESSION_CLIENT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cc56a973921f1c8e3418ef2a7ab83893408b1d1" translate="yes" xml:space="preserve">
          <source>This method is only valid when using &lt;a href=&quot;#fs_fs_lstat_path_options_callback&quot;&gt;&lt;code&gt;fs.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод действителен только при использовании &lt;a href=&quot;#fs_fs_lstat_path_options_callback&quot;&gt; &lt;code&gt;fs.lstat()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f78dbde2f747ddef4d4559acc66df6ead53e6a5" translate="yes" xml:space="preserve">
          <source>This method is to be used when the &lt;code&gt;asyncLocalStorage&lt;/code&gt; is not in use anymore in the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2ae0bdcbd8efcf11842d83c6ae7c582606fc85" translate="yes" xml:space="preserve">
          <source>This method is used after the module is linked to set the values of exports. If it is called before the module is linked, an &lt;a href=&quot;errors#ERR_VM_MODULE_STATUS&quot;&gt;&lt;code&gt;ERR_VM_MODULE_STATUS&lt;/code&gt;&lt;/a&gt; error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79bf54fc2158426a1f13109023fc9410f485037" translate="yes" xml:space="preserve">
          <source>This method is used to instantiate a new JavaScript value using a given &lt;code&gt;napi_value&lt;/code&gt; that represents the constructor for the object. For example, consider the following snippet:</source>
          <target state="translated">Этот метод используется для создания экземпляра нового значения JavaScript с использованием заданного значения &lt;code&gt;napi_value&lt;/code&gt; , представляющего конструктор объекта. Например, рассмотрим следующий фрагмент:</target>
        </trans-unit>
        <trans-unit id="137f79d3611d70d649552c51bbc155deba38dbc3" translate="yes" xml:space="preserve">
          <source>This method is used within a callback function to retrieve details about the call like the arguments and the &lt;code&gt;this&lt;/code&gt; pointer from a given callback info.</source>
          <target state="translated">Этот метод используется в функции обратного вызова для извлечения сведений о вызове, таких как аргументы и указатель &lt;code&gt;this&lt;/code&gt; , из заданной информации обратного вызова.</target>
        </trans-unit>
        <trans-unit id="60fde3ca8666014eb1362597c31de1875933d209" translate="yes" xml:space="preserve">
          <source>This method makes the IPC channel keep the event loop of the parent process running if &lt;code&gt;.unref()&lt;/code&gt; has been called before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251db73775a8b3eb3fd6d9fbf270dcd66e16a1b7" translate="yes" xml:space="preserve">
          <source>This method makes the IPC channel keep the event loop of the process running if &lt;code&gt;.unref()&lt;/code&gt; has been called before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a4b339f84ffd2a9b0ba60d97efea903da7fe04" translate="yes" xml:space="preserve">
          <source>This method makes the IPC channel not keep the event loop of the parent process running, and lets it finish even while the channel is open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df073da75d6db77d3f3df5fbdcc741763d5d7bc9" translate="yes" xml:space="preserve">
          <source>This method makes the IPC channel not keep the event loop of the process running, and lets it finish even while the channel is open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55f033607e44dce887582c62c0f096d380f7f0b" translate="yes" xml:space="preserve">
          <source>This method may be called at most one time on a message before &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">Этот метод может быть вызван не более одного раза в сообщении до &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3526009bcd91f17d5aa041034e585a5c485866dd" translate="yes" xml:space="preserve">
          <source>This method must only be called once on a message and it must be called before &lt;a href=&quot;#http_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">Этот метод должен вызываться только один раз для сообщения, и он должен вызываться до &lt;a href=&quot;#http_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dec2a56a8fed198bcdf723bd5b7ecf90cb7dc580" translate="yes" xml:space="preserve">
          <source>This method no longer supports multiple calls that don&amp;rsquo;t map to individual &lt;code&gt;console.time()&lt;/code&gt; calls; see below for details.</source>
          <target state="translated">Этот метод больше не поддерживает множественные вызовы, которые не отображаются на отдельные вызовы &lt;code&gt;console.time()&lt;/code&gt; ; подробности см. ниже.</target>
        </trans-unit>
        <trans-unit id="f6f47d3b4379f25f04e6a25df0b8f764ba8d8b4d" translate="yes" xml:space="preserve">
          <source>This method now returns a reference to &lt;code&gt;ClientRequest&lt;/code&gt;.</source>
          <target state="translated">Теперь этот метод возвращает ссылку на &lt;code&gt;ClientRequest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a29f826336bbe3debd8646a229b260cfd3ea8a80" translate="yes" xml:space="preserve">
          <source>This method now returns a reference to &lt;code&gt;ServerResponse&lt;/code&gt;.</source>
          <target state="translated">Теперь этот метод возвращает ссылку на &lt;code&gt;ServerResponse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bead6ce0f903b94b3581fba9b0c460760d9b196" translate="yes" xml:space="preserve">
          <source>This method now returns a reference to &lt;code&gt;decipher&lt;/code&gt;.</source>
          <target state="translated">Теперь этот метод возвращает ссылку на &lt;code&gt;decipher&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="326608dac58b4293b056bd095e3a8d421c4657b5" translate="yes" xml:space="preserve">
          <source>This method now returns a reference to &lt;code&gt;worker&lt;/code&gt;.</source>
          <target state="translated">Теперь этот метод возвращает ссылку на &lt;code&gt;worker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eccd72d8d3bfb8524959d772fbf00e2e2ccd4284" translate="yes" xml:space="preserve">
          <source>This method now returns a reference to &lt;code&gt;writable&lt;/code&gt;.</source>
          <target state="translated">Теперь этот метод возвращает ссылку на &lt;code&gt;writable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f736dde7b82e9ca5487f277a3fc447dc5f614522" translate="yes" xml:space="preserve">
          <source>This method now supports passing &lt;code&gt;options&lt;/code&gt;, specifically &lt;code&gt;options.ttl&lt;/code&gt;.</source>
          <target state="translated">Этот метод теперь поддерживает передачу &lt;code&gt;options&lt;/code&gt; , в частности, &lt;code&gt;options.ttl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edb4af30902bebe24d30824096149434c6b8e2b5" translate="yes" xml:space="preserve">
          <source>This method now throws if the GCM tag length is invalid.</source>
          <target state="translated">Этот метод теперь бросает,если длина GCM-тега недействительна.</target>
        </trans-unit>
        <trans-unit id="0970dd484b399eb1d57fb730f0ead071cb410ad4" translate="yes" xml:space="preserve">
          <source>This method relies on &lt;code&gt;Object.prototype.toString()&lt;/code&gt; behavior. It is possible to obtain an incorrect result when the &lt;code&gt;object&lt;/code&gt; argument manipulates &lt;code&gt;@@toStringTag&lt;/code&gt;.</source>
          <target state="translated">Этот метод основан на поведении &lt;code&gt;Object.prototype.toString()&lt;/code&gt; . Если аргумент &lt;code&gt;object&lt;/code&gt; манипулирует &lt;code&gt;@@toStringTag&lt;/code&gt; можно получить неверный результат .</target>
        </trans-unit>
        <trans-unit id="6e9bf5991fa9c748c4ddd11e088d41c09880c593" translate="yes" xml:space="preserve">
          <source>This method returns a boolean for flow control now.</source>
          <target state="translated">Теперь этот метод возвращает булевую строку для управления потоком.</target>
        </trans-unit>
        <trans-unit id="049623077d54205258c2f93454b1d1ee06027dbc" translate="yes" xml:space="preserve">
          <source>This method returns the current store. If this method is called outside of an asynchronous context initialized by calling &lt;code&gt;asyncLocalStorage.run&lt;/code&gt;, it will return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718308cf0c5761b550f5d72b6cf7018c6b6197ad" translate="yes" xml:space="preserve">
          <source>This method seals a given object. This prevents new properties from being added to it, as well as marking all existing properties as non-configurable. This is described in &lt;a href=&quot;https://tc39.es/ecma262/#sec-object.seal&quot;&gt;Section 19.1.2.20&lt;/a&gt; of the ECMA-262 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9df835392f53f83cbf43706f5a9c14ab012c2f6" translate="yes" xml:space="preserve">
          <source>This method signals to the server that all of the response headers and body have been sent; that server should consider this message complete. The method, &lt;code&gt;response.end()&lt;/code&gt;, MUST be called on each response.</source>
          <target state="translated">Этот метод сообщает серверу, что все заголовки и тело ответа отправлены; этот сервер должен считать это сообщение завершенным. Метод &lt;code&gt;response.end()&lt;/code&gt; ДОЛЖЕН быть вызван для каждого ответа.</target>
        </trans-unit>
        <trans-unit id="ed78b55e754e7fa16630f5733386b1ad180489e2" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;errors#errors_err_socket_bad_port&quot;&gt;&lt;code&gt;ERR_SOCKET_BAD_PORT&lt;/code&gt;&lt;/a&gt; if called on an unbound socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e295612b73a29336c23b8ca6f269cd989dccbf9" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;errors#errors_err_socket_buffer_size&quot;&gt;&lt;code&gt;ERR_SOCKET_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt; if called on an unbound socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa965434bb457984be24fcb690fab82b4955073" translate="yes" xml:space="preserve">
          <source>This method throws &lt;code&gt;EBADF&lt;/code&gt; if called on an unbound socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91894603a2d6878685230629c869c5cc4c825298" translate="yes" xml:space="preserve">
          <source>This method will throw an error if the target &lt;code&gt;pid&lt;/code&gt; does not exist. As a special case, a signal of &lt;code&gt;0&lt;/code&gt; can be used to test for the existence of a process. Windows platforms will throw an error if the &lt;code&gt;pid&lt;/code&gt; is used to kill a process group.</source>
          <target state="translated">Этот метод выдаст ошибку, если целевой &lt;code&gt;pid&lt;/code&gt; не существует. В качестве особого случая сигнал &lt;code&gt;0&lt;/code&gt; может использоваться для проверки существования процесса. Платформы Windows выдадут ошибку, если &lt;code&gt;pid&lt;/code&gt; используется для уничтожения группы процессов.</target>
        </trans-unit>
        <trans-unit id="d7a1dc1cbb67ff0479ab2d4ec138ffb994e39f33" translate="yes" xml:space="preserve">
          <source>This method works much like &lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;resolve.conf&lt;/a&gt;. That is, if attempting to resolve with the first server provided results in a &lt;code&gt;NOTFOUND&lt;/code&gt; error, the &lt;code&gt;resolve()&lt;/code&gt; method will &lt;em&gt;not&lt;/em&gt; attempt to resolve with subsequent servers provided. Fallback DNS servers will only be used if the earlier ones time out or result in some other error.</source>
          <target state="translated">Этот метод работает так же, как &lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;resolve.conf&lt;/a&gt; . То есть, если попытка разрешения с использованием первого предоставленного сервера приводит к ошибке &lt;code&gt;NOTFOUND&lt;/code&gt; , метод &lt;code&gt;resolve()&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; будет пытаться разрешить с предоставленными последующими серверами. Резервные DNS-серверы будут использоваться только в том случае, если истекло время ожидания более ранних из них или возникла другая ошибка.</target>
        </trans-unit>
        <trans-unit id="338d35f90fcbabeed9638d0994745e773b223f83" translate="yes" xml:space="preserve">
          <source>This method works much like &lt;a href=&quot;https://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;resolve.conf&lt;/a&gt;. That is, if attempting to resolve with the first server provided results in a &lt;code&gt;NOTFOUND&lt;/code&gt; error, the &lt;code&gt;resolve()&lt;/code&gt; method will &lt;em&gt;not&lt;/em&gt; attempt to resolve with subsequent servers provided. Fallback DNS servers will only be used if the earlier ones time out or result in some other error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5d4255578cc98dd0bf8203ac9635b394724a79" translate="yes" xml:space="preserve">
          <source>This methods runs a function synchronously outside of a context and return its return value. The store is not accessible within the callback function or the asynchronous operations created within the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bd57aad2273e41bbc9d4b198d65622d5de140c" translate="yes" xml:space="preserve">
          <source>This methods runs a function synchronously within a context and return its return value. The store is not accessible outside of the callback function or the asynchronous operations created within the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ac9951e9c15f0ad4db6383a1db28445d3d11d9" translate="yes" xml:space="preserve">
          <source>This mode provides a balance between features and binary size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b0496aa78380171e1c86de496fc1c12964b92b" translate="yes" xml:space="preserve">
          <source>This mode provides a good balance between features and binary size, and it is the default behavior if no &lt;code&gt;--with-intl&lt;/code&gt; flag is passed. The official binaries are also built in this mode.</source>
          <target state="translated">Этот режим обеспечивает хороший баланс между функциями и размером двоичного файла, и это поведение по умолчанию, если не передан флаг &lt;code&gt;--with-intl&lt;/code&gt; . Официальные двоичные файлы также создаются в этом режиме.</target>
        </trans-unit>
        <trans-unit id="58478d1f06fd4faab8d57954c1994c2807d9e162" translate="yes" xml:space="preserve">
          <source>This module provides an implementation of a subset of the W3C &lt;a href=&quot;https://w3c.github.io/perf-timing-primer/&quot;&gt;Web Performance APIs&lt;/a&gt; as well as additional APIs for Node.js-specific performance measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61829d000837d81bc1af29b5a18d65d68b23b06e" translate="yes" xml:space="preserve">
          <source>This must be called after the module has been instantiated; otherwise it will throw an error. It could be called also when the module has already been evaluated, in which case it will do one of the following two things:</source>
          <target state="translated">Это должно быть вызвано после того,как модуль инстанцирован;в противном случае это приведет к ошибке.Он также может быть вызван,когда модуль уже был вычислен,и в этом случае он сделает одну из следующих двух вещей:</target>
        </trans-unit>
        <trans-unit id="6f7e3676799bc8a3bb8082ebb54448a8f098105d" translate="yes" xml:space="preserve">
          <source>This must be called after the module has been linked; otherwise it will reject. It could be called also when the module has already been evaluated, in which case it will either do nothing if the initial evaluation ended in success (&lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'evaluated'&lt;/code&gt;) or it will re-throw the exception that the initial evaluation resulted in (&lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'errored'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9b793d8f4835801a2e03d986f43b29e0294b7f" translate="yes" xml:space="preserve">
          <source>This object is created internally and is returned from &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt;. It can be passed to &lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt;&lt;code&gt;clearImmediate()&lt;/code&gt;&lt;/a&gt; in order to cancel the scheduled actions.</source>
          <target state="translated">Этот объект создается внутри и возвращается из &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt; . Его можно передать в &lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt; &lt;code&gt;clearImmediate()&lt;/code&gt; &lt;/a&gt; , чтобы отменить запланированные действия.</target>
        </trans-unit>
        <trans-unit id="30df376bcf445e9ea2fd9f87e4e31b34c96b80ed" translate="yes" xml:space="preserve">
          <source>This object is created internally and is returned from &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;. It can be passed to either &lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt;&lt;code&gt;clearInterval()&lt;/code&gt;&lt;/a&gt; in order to cancel the scheduled actions.</source>
          <target state="translated">Этот объект создается внутри и возвращается из &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt; . Его можно передать в &lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt; &lt;code&gt;clearTimeout()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt; &lt;code&gt;clearInterval()&lt;/code&gt; &lt;/a&gt; , чтобы отменить запланированные действия.</target>
        </trans-unit>
        <trans-unit id="11bcec38f2abde0cda814ffe6df5a8ef30f2d46d" translate="yes" xml:space="preserve">
          <source>This object is created internally and returned from &lt;a href=&quot;#http_http_request_options_callback&quot;&gt;&lt;code&gt;http.request()&lt;/code&gt;&lt;/a&gt;. It represents an &lt;em&gt;in-progress&lt;/em&gt; request whose header has already been queued. The header is still mutable using the &lt;a href=&quot;#http_request_setheader_name_value&quot;&gt;&lt;code&gt;setHeader(name, value)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#http_request_getheader_name&quot;&gt;&lt;code&gt;getHeader(name)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#http_request_removeheader_name&quot;&gt;&lt;code&gt;removeHeader(name)&lt;/code&gt;&lt;/a&gt; API. The actual header will be sent along with the first data chunk or when calling &lt;a href=&quot;#http_request_end_data_encoding_callback&quot;&gt;&lt;code&gt;request.end()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот объект создается внутри и возвращается из &lt;a href=&quot;#http_http_request_options_callback&quot;&gt; &lt;code&gt;http.request()&lt;/code&gt; &lt;/a&gt; . Он представляет собой &lt;em&gt;незавершенный&lt;/em&gt; запрос, заголовок которого уже поставлен в очередь. Заголовок по-прежнему можно &lt;a href=&quot;#http_request_setheader_name_value&quot;&gt; &lt;code&gt;setHeader(name, value)&lt;/code&gt; &lt;/a&gt; с помощью API setHeader (имя, значение) , &lt;a href=&quot;#http_request_getheader_name&quot;&gt; &lt;code&gt;getHeader(name)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#http_request_removeheader_name&quot;&gt; &lt;code&gt;removeHeader(name)&lt;/code&gt; &lt;/a&gt; . Фактический заголовок будет отправлен вместе с первым фрагментом данных или при вызове &lt;a href=&quot;#http_request_end_data_encoding_callback&quot;&gt; &lt;code&gt;request.end()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="276727d393a49049986a6764a6b9df30b3c6e8d1" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server &amp;mdash; not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Этот объект создается внутри HTTP-сервером, а не пользователем. Он передается как второй параметр событию &lt;a href=&quot;#http2_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b243244bb0ee3d29d16ef5c4abcf7c8294d4366" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server &amp;mdash; not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Этот объект создается внутри HTTP-сервером, а не пользователем. Он передается как второй параметр событию &lt;a href=&quot;#http_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d42c4c77f2412e6c0e13465d846324fb36177a5" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server, not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6828f42c873a55b00234dc584cf52b644aef0a4c" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server, not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b590c4862d8c62879d75abd1aa21bce18d4bbd42" translate="yes" xml:space="preserve">
          <source>This object is not intended to be changed or set manually.</source>
          <target state="translated">Этот объект не предназначен для изменения или установки вручную.</target>
        </trans-unit>
        <trans-unit id="39f42f9d3b7870458abec1b8bba415750246f54d" translate="yes" xml:space="preserve">
          <source>This operation cannot be undone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d68cfded63649ce7ce6716537aea2949bfdc24a" translate="yes" xml:space="preserve">
          <source>This operator is inherited from &lt;code&gt;Uint8Array&lt;/code&gt;, so its behavior on out-of-bounds access is the same as &lt;code&gt;UInt8Array&lt;/code&gt; - that is, getting returns &lt;code&gt;undefined&lt;/code&gt; and setting does nothing.</source>
          <target state="translated">Этот оператор унаследован от &lt;code&gt;Uint8Array&lt;/code&gt; , поэтому его поведение при доступе за &lt;code&gt;UInt8Array&lt;/code&gt; такое же, как у UInt8Array, то есть получение значений &lt;code&gt;undefined&lt;/code&gt; , а установка ничего не делает.</target>
        </trans-unit>
        <trans-unit id="7b68e9509c532127f52fafc15b3bbfa8dc0ae41a" translate="yes" xml:space="preserve">
          <source>This operator is inherited from &lt;code&gt;Uint8Array&lt;/code&gt;, so its behavior on out-of-bounds access is the same as &lt;code&gt;Uint8Array&lt;/code&gt;. In other words, &lt;code&gt;buf[index]&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; when &lt;code&gt;index&lt;/code&gt; is negative or greater or equal to &lt;code&gt;buf.length&lt;/code&gt;, and &lt;code&gt;buf[index] = value&lt;/code&gt; does not modify the buffer if &lt;code&gt;index&lt;/code&gt; is negative or &lt;code&gt;&amp;gt;= buf.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5bc0556c47cdb09e41d5ea59f149aa88e6a463" translate="yes" xml:space="preserve">
          <source>This option is a no-op. It is kept for compatibility.</source>
          <target state="translated">Этот вариант-&quot;нет-нет-нет&quot;.Он сохраняется для совместимости.</target>
        </trans-unit>
        <trans-unit id="4951046a2e8ef3ca45424f2c3f92fe4d355065b2" translate="yes" xml:space="preserve">
          <source>This option is no longer experimental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab4df6e22ae62c4d079027a2c218b72789bdc22" translate="yes" xml:space="preserve">
          <source>This option makes the resulting binary link against ICU statically and include a full set of ICU data. A binary created this way has no further external dependencies and supports all locales, but might be rather large. See &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#build-with-full-icu-support-all-locales-supported-by-icu&quot;&gt;BUILDING.md&lt;/a&gt; on how to compile a binary using this mode.</source>
          <target state="translated">Эта опция делает результирующую двоичную ссылку на ICU статически и включает полный набор данных ICU. Созданный таким образом двоичный файл не имеет дополнительных внешних зависимостей и поддерживает все языковые стандарты, но может быть довольно большим. См. &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#build-with-full-icu-support-all-locales-supported-by-icu&quot;&gt;BUILDING.md&lt;/a&gt; о том, как скомпилировать двоичный файл в этом режиме.</target>
        </trans-unit>
        <trans-unit id="883efe526d0eeec11102d9602133026d76078e17" translate="yes" xml:space="preserve">
          <source>This option makes the resulting binary link against ICU statically and include a full set of ICU data. A binary created this way has no further external dependencies and supports all locales, but might be rather large. This is the default behavior if no &lt;code&gt;--with-intl&lt;/code&gt; flag is passed. The official binaries are also built in this mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394a6a9a97a53a953940a51f3bdcf234aa0c8526" translate="yes" xml:space="preserve">
          <source>This option makes the resulting binary link against the ICU library statically, and includes a subset of ICU data (typically only the English locale) within the &lt;code&gt;node&lt;/code&gt; executable.</source>
          <target state="translated">Эта опция создает статическую двоичную ссылку на библиотеку ICU и включает подмножество данных ICU (обычно только английскую локаль) в исполняемый файл &lt;code&gt;node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28fb57d096952e1be65ad8500b5938bfe5fc415f" translate="yes" xml:space="preserve">
          <source>This optional function will be called before the stream closes, delaying the &lt;code&gt;'finish'&lt;/code&gt; event until &lt;code&gt;callback&lt;/code&gt; is called. This is useful to close resources or write buffered data before a stream ends.</source>
          <target state="translated">Эта дополнительная функция будет вызываться до закрытия потока, задерживая событие &lt;code&gt;'finish'&lt;/code&gt; до &lt;code&gt;callback&lt;/code&gt; . Это полезно для закрытия ресурсов или записи буферизованных данных до завершения потока.</target>
        </trans-unit>
        <trans-unit id="1e3da6c9301c93f8176d26d36040c1dd6fd9b584" translate="yes" xml:space="preserve">
          <source>This optional function will be called in a tick after the stream constructor has returned, delaying any &lt;code&gt;_write()&lt;/code&gt;, &lt;code&gt;_final()&lt;/code&gt; and &lt;code&gt;_destroy()&lt;/code&gt; calls until &lt;code&gt;callback&lt;/code&gt; is called. This is useful to initialize state or asynchronously initialize resources before the stream can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b3259a863b34aca5868a5d91c49dfe546aa404" translate="yes" xml:space="preserve">
          <source>This optional function will be scheduled in the next tick by the stream constructor, delaying any &lt;code&gt;_read()&lt;/code&gt; and &lt;code&gt;_destroy()&lt;/code&gt; calls until &lt;code&gt;callback&lt;/code&gt; is called. This is useful to initialize state or asynchronously initialize resources before the stream can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a912ac54f282aa0ebdc6b3d1ffc8071941bc6bc" translate="yes" xml:space="preserve">
          <source>This particular operation may be hard to use in a Node.js context, as the streaming layer makes it hard to know which data will end up in this frame. Also, there is currently no way to consume this data through the Node.js API.</source>
          <target state="translated">Эту конкретную операцию может быть сложно использовать в контексте Node.js,так как потоковый слой затрудняет понимание того,какие данные окажутся в этом кадре.Кроме того,в настоящее время нет возможности использовать эти данные через API Node.js.</target>
        </trans-unit>
        <trans-unit id="019c5d87354ac10b6f36fe3aa511b3b40d2ed49a" translate="yes" xml:space="preserve">
          <source>This pool could be used as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a02d3eca403bdc666212cf0c86fe38b7d15dd1" translate="yes" xml:space="preserve">
          <source>This property contains the number of bytes (or objects) in the queue ready to be read. The value provides introspection data regarding the status of the &lt;code&gt;highWaterMark&lt;/code&gt;.</source>
          <target state="translated">Это свойство содержит количество байтов (или объектов) в очереди, готовых к чтению. Значение предоставляет данные самоанализа относительно статуса &lt;code&gt;highWaterMark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb9e3144be10a8f3e780007f6d355783bf984b8d" translate="yes" xml:space="preserve">
          <source>This property contains the number of bytes (or objects) in the queue ready to be written. The value provides introspection data regarding the status of the &lt;code&gt;highWaterMark&lt;/code&gt;.</source>
          <target state="translated">Это свойство содержит количество байтов (или объектов) в очереди, готовых к записи. Значение предоставляет данные самоанализа относительно статуса &lt;code&gt;highWaterMark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="386fd84fec99ef9b47b7d16488786592c44b6e77" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;true&lt;/code&gt; if the underlying file has not been opened yet, i.e. before the &lt;code&gt;'ready'&lt;/code&gt; event is emitted.</source>
          <target state="translated">Это свойство &lt;code&gt;true&lt;/code&gt; если базовый файл еще не был открыт, то есть до того, &lt;code&gt;'ready'&lt;/code&gt; событие &amp;laquo;готов&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="7fec8e8f93a4601a9b7a5243b25b3bca584a0d87" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;true&lt;/code&gt; if the worker exited due to &lt;code&gt;.kill()&lt;/code&gt; or &lt;code&gt;.disconnect()&lt;/code&gt;. If the worker exited any other way, it is &lt;code&gt;false&lt;/code&gt;. If the worker has not exited, it is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f517051737746faa183df11c32566027df8f1e76" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;undefined&lt;/code&gt; for unrecognized &lt;code&gt;KeyObject&lt;/code&gt; types and symmetric keys.</source>
          <target state="translated">Это свойство не &lt;code&gt;undefined&lt;/code&gt; для нераспознанных типов &lt;code&gt;KeyObject&lt;/code&gt; и симметричных ключей.</target>
        </trans-unit>
        <trans-unit id="d3602e2ea022e3bc39b7484318da9a603e6288b8" translate="yes" xml:space="preserve">
          <source>This property is a reference to the instance itself.</source>
          <target state="translated">Это свойство является ссылкой на сам экземпляр.</target>
        </trans-unit>
        <trans-unit id="e33cc887d6f76fe29d205691170fbab8a5395204" translate="yes" xml:space="preserve">
          <source>This property is deprecated.</source>
          <target state="translated">Эта собственность устарела.</target>
        </trans-unit>
        <trans-unit id="f73f92d394bd6733681726663afa3be14f683e89" translate="yes" xml:space="preserve">
          <source>This property is deprecated. Please use &lt;code&gt;crypto.setFips()&lt;/code&gt; and &lt;code&gt;crypto.getFips()&lt;/code&gt; instead.</source>
          <target state="translated">Это свойство устарело. Пожалуйста, используйте &lt;code&gt;crypto.setFips()&lt;/code&gt; и &lt;code&gt;crypto.getFips()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8853fccd2133c9b9842c8f0088d75409954f4216" translate="yes" xml:space="preserve">
          <source>This property is guaranteed to be an instance of the &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; class, a subclass of &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;, unless the user specified a socket type other than &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a656096a20de49803ec12a402ed5a91dccea98" translate="yes" xml:space="preserve">
          <source>This property is particularly useful as a means of determining if a client or server fully transmitted a message before a connection was terminated:</source>
          <target state="translated">Это свойство особенно полезно для определения того,полностью ли клиент или сервер передал сообщение до того,как соединение было прервано:</target>
        </trans-unit>
        <trans-unit id="f429a22f8731ad82e20fb7b571d26a7a167f34d0" translate="yes" xml:space="preserve">
          <source>This property now returns &lt;code&gt;undefined&lt;/code&gt; for KeyObject instances of unrecognized type instead of aborting.</source>
          <target state="translated">Это свойство теперь возвращает значение &lt;code&gt;undefined&lt;/code&gt; для экземпляров KeyObject нераспознанного типа вместо прерывания.</target>
        </trans-unit>
        <trans-unit id="0258cc0d87a79ada93448982013acd1442be2048" translate="yes" xml:space="preserve">
          <source>This property refers to the value of underlying file descriptor of &lt;code&gt;process.stderr&lt;/code&gt;. The value is fixed at &lt;code&gt;2&lt;/code&gt;. In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this field does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d2b06eec651f39ccf3c9d6223d4bc3c22e2f93" translate="yes" xml:space="preserve">
          <source>This property refers to the value of underlying file descriptor of &lt;code&gt;process.stdin&lt;/code&gt;. The value is fixed at &lt;code&gt;0&lt;/code&gt;. In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this field does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e844b6956113839c2be7aaa33d95e92dee6d1883" translate="yes" xml:space="preserve">
          <source>This property refers to the value of underlying file descriptor of &lt;code&gt;process.stdout&lt;/code&gt;. The value is fixed at &lt;code&gt;1&lt;/code&gt;. In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this field does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac2df8cfb8a6ab600d58d12a18a1fd49b8186b6" translate="yes" xml:space="preserve">
          <source>This property reflects the current state of a &lt;code&gt;Readable&lt;/code&gt; stream as described in the &lt;a href=&quot;#stream_three_states&quot;&gt;Three states&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bac265f5b733744a963486d246686da65c6443" translate="yes" xml:space="preserve">
          <source>This property represents the state of the connection as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefab09d53dbef4bb15074330e33f073160962a7" translate="yes" xml:space="preserve">
          <source>This property shows the number of characters buffered for writing. The buffer may contain strings whose length after encoding is not yet known. So this number is only an approximation of the number of bytes in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a6a91551ecd980b558ff842b37549796e6bf30" translate="yes" xml:space="preserve">
          <source>This property shows the number of characters currently buffered to be written. See &lt;a href=&quot;net#net_socket_buffersize&quot;&gt;&lt;code&gt;net.Socket.bufferSize&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Это свойство показывает количество символов, которые в данный момент буферизированы для записи. См. &lt;a href=&quot;net#net_socket_buffersize&quot;&gt; &lt;code&gt;net.Socket.bufferSize&lt;/code&gt; &lt;/a&gt; для подробностей.</target>
        </trans-unit>
        <trans-unit id="275fd6bab7ae5428d094e40bf2e70f30dde5cd7c" translate="yes" xml:space="preserve">
          <source>This represents the underlying binary scalar datatype of the &lt;code&gt;TypedArray&lt;/code&gt;. Elements of this enum correspond to &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typedarray-objects&quot;&gt;Section 22.2&lt;/a&gt; of the &lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;ECMAScript Language Specification&lt;/a&gt;.</source>
          <target state="translated">Это представляет собой базовый двоичный скалярный тип данных &lt;code&gt;TypedArray&lt;/code&gt; . Элементы этого перечисления соответствуют &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typedarray-objects&quot;&gt;22.2&lt;/a&gt; в &lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;спецификации ECMAScript языка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="750611976052ddea1aefb70b31d097d53f3ce423" translate="yes" xml:space="preserve">
          <source>This restricts the N-API surface to just the functionality that was available in the specified (and earlier) versions.</source>
          <target state="translated">Это ограничивает поверхность N-API только функциональностью,которая была доступна в указанных (и более ранних)версиях.</target>
        </trans-unit>
        <trans-unit id="34670d73c4e4f5a65a2cb44fbd1ad5dc7e3c2e51" translate="yes" xml:space="preserve">
          <source>This section was moved to &lt;a href=&quot;module#module_source_map_v3_support&quot;&gt;Modules: &lt;code&gt;module&lt;/code&gt; core module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3356fbb2ec8113ec889350faf51d5150518f85cf" translate="yes" xml:space="preserve">
          <source>This section was moved to &lt;a href=&quot;module#module_the_module_object&quot;&gt;Modules: &lt;code&gt;module&lt;/code&gt; core module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ef0fd0665d4357db1b84a2e19547d2706f8eb2" translate="yes" xml:space="preserve">
          <source>This section was moved to &lt;a href=&quot;packages&quot;&gt;Modules: Packages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e161eae495f60eecc39fcb871e7db25d724d21cd" translate="yes" xml:space="preserve">
          <source>This sends a chunk of the response body. This method may be called multiple times to provide successive parts of the body.</source>
          <target state="translated">Это посылает кусок ответного тела.Этот метод может быть вызван несколько раз,чтобы обеспечить последовательные части тела.</target>
        </trans-unit>
        <trans-unit id="f47c2c3b1777de556577edd88a50fe16d9b43ef1" translate="yes" xml:space="preserve">
          <source>This should only be disabled for testing; HTTP requires the Date header in responses.</source>
          <target state="translated">Это должно быть отключено только для тестирования;HTTP требует заголовок Date в ответах.</target>
        </trans-unit>
        <trans-unit id="f59eae131a4bc1e43befd9071b9f0e34721e73ef" translate="yes" xml:space="preserve">
          <source>This status does not convey any information regarding if &lt;code&gt;module.link()&lt;/code&gt; has been called. See &lt;code&gt;module.linkingStatus&lt;/code&gt; for that.</source>
          <target state="translated">Этот статус не передает никакой информации о том, был ли &lt;code&gt;module.link()&lt;/code&gt; . См. Для этого &lt;code&gt;module.linkingStatus&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0116ac87fb2193b9cadfa6e6c4b58a397209ffa8" translate="yes" xml:space="preserve">
          <source>This symbol shall be used to install a listener for only monitoring &lt;code&gt;'error'&lt;/code&gt; events. Listeners installed using this symbol are called before the regular &lt;code&gt;'error'&lt;/code&gt; listeners are called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d49c824be76a8237417ac95208be1205943ec8d" translate="yes" xml:space="preserve">
          <source>This throws an error if &lt;code&gt;value&lt;/code&gt; cannot be serialized.</source>
          <target state="translated">Это вызывает ошибку, если &lt;code&gt;value&lt;/code&gt; не может быть сериализовано.</target>
        </trans-unit>
        <trans-unit id="c1f045702ea4da181894894d719dc7571a2ba4e1" translate="yes" xml:space="preserve">
          <source>This transition will continue for the &lt;em&gt;entire&lt;/em&gt; synchronous execution. This means that if, for example, the context is entered within an event handler subsequent event handlers will also run within that context unless specifically bound to another context with an &lt;code&gt;AsyncResource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c184cfb934c9b738977c32837985d21a951b41c" translate="yes" xml:space="preserve">
          <source>This type of record contains an array property called &lt;code&gt;entries&lt;/code&gt; which refers to &lt;a href=&quot;#dns_dns_resolvetxt_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveTxt()&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</source>
          <target state="translated">Этот тип записи содержит свойство массива, называемое &lt;code&gt;entries&lt;/code&gt; которое относится к &lt;a href=&quot;#dns_dns_resolvetxt_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveTxt()&lt;/code&gt; &lt;/a&gt; , например &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6eeca1c2f00a4310890a7139dcfe6a2e6c8c965b" translate="yes" xml:space="preserve">
          <source>This type of record contains an array property called &lt;code&gt;entries&lt;/code&gt; which refers to &lt;a href=&quot;#dns_dnspromises_resolvetxt_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveTxt()&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</source>
          <target state="translated">Этот тип записи содержит свойство массива, называемое &lt;code&gt;entries&lt;/code&gt; которое относится к &lt;a href=&quot;#dns_dnspromises_resolvetxt_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveTxt()&lt;/code&gt; &lt;/a&gt; , например &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fe3642f2b14cc07a05a25a58a28addaf29cbab1" translate="yes" xml:space="preserve">
          <source>This use of the &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; module in the REPL has these side effects:</source>
          <target state="translated">Такое использование модуля &lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; в REPL имеет следующие побочные эффекты:</target>
        </trans-unit>
        <trans-unit id="aba8179089db1922508405d8b782dab836cca61d" translate="yes" xml:space="preserve">
          <source>This value is also available as &lt;a href=&quot;#buffer_buffer_kmaxlength&quot;&gt;&lt;code&gt;buffer.kMaxLength&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это значение также доступно как &lt;a href=&quot;#buffer_buffer_kmaxlength&quot;&gt; &lt;code&gt;buffer.kMaxLength&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1960fefc47eea7af53d2386124418b76d027b6f6" translate="yes" xml:space="preserve">
          <source>This value may depend on the JS engine that is being used.</source>
          <target state="translated">Это значение может зависеть от используемого JS-двигателя.</target>
        </trans-unit>
        <trans-unit id="1786c62ca4014aae9c8daf35face4f14af3bb962" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_dirname&quot;&gt;&lt;code&gt;__dirname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта переменная может показаться глобальной, но это не так. См. &lt;a href=&quot;modules#modules_dirname&quot;&gt; &lt;code&gt;__dirname&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a88498e969bb560f2877e63299e4b7964f93ae3a" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_exports&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта переменная может показаться глобальной, но это не так. Смотрите &lt;a href=&quot;modules#modules_exports&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12ae6d48315f5836aaba96e8fe5033389f67632a" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_filename&quot;&gt;&lt;code&gt;__filename&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта переменная может показаться глобальной, но это не так. См. &lt;a href=&quot;modules#modules_filename&quot;&gt; &lt;code&gt;__filename&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d045d7bbd376d894aa22ac1819fb6f7283f644a" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_module&quot;&gt;&lt;code&gt;module&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта переменная может показаться глобальной, но это не так. См. &lt;a href=&quot;modules#modules_module&quot;&gt; &lt;code&gt;module&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0714b1ea5c5b147147404c53c9c7ea1c9d011bd2" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта переменная может показаться глобальной, но это не так. См. &lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7388904d6f49c90b401aa690cef27c57e52dd479" translate="yes" xml:space="preserve">
          <source>This was an undocumented helper function not intended for use outside Node.js core and obsoleted by the removal of NPN (Next Protocol Negotiation) support.</source>
          <target state="translated">Это была незадокументированная вспомогательная функция,не предназначенная для использования за пределами ядра Node.js и устаревшая после удаления поддержки NPN (Next Protocol Negotiation).</target>
        </trans-unit>
        <trans-unit id="ce2a6d546b034160617c687e3f2691f4eb71b066" translate="yes" xml:space="preserve">
          <source>This was never a documented feature.</source>
          <target state="translated">Это никогда не было задокументировано.</target>
        </trans-unit>
        <trans-unit id="946c9714458dbb894196ffd1f153f59f0b8d6c98" translate="yes" xml:space="preserve">
          <source>This will ensure that the per-addon-instance data reaches each binding that can be called from JavaScript. The per-addon-instance data must also be passed into any asynchronous callbacks the addon may create.</source>
          <target state="translated">Это гарантирует,что данные по каждому аддонесу достигнут каждой привязки,которая может быть вызвана из JavaScript.Данные по каждому аддону также должны передаваться в любые асинхронные обратные вызовы,которые может создать аддон.</target>
        </trans-unit>
        <trans-unit id="110650dd72d6d2fde8d01c7a0259236b0dc7296b" translate="yes" xml:space="preserve">
          <source>This will not change the behavior in other error-throwing situations, e.g. when the input data has an invalid format. Using this method, it will not be possible to determine whether the input ended prematurely or lacks the integrity checks, making it necessary to manually check that the decompressed result is valid.</source>
          <target state="translated">Это не изменит поведения в других ситуациях разбрасывания ошибок,например,когда входные данные имеют неправильный формат.Используя этот метод,невозможно будет определить,преждевременно ли завершился ввод или нет проверки целостности,что делает необходимым вручную проверить корректность распакованного результата.</target>
        </trans-unit>
        <trans-unit id="d25a5d904dfe4b2d558d89e8b007b3cb884783fb" translate="yes" xml:space="preserve">
          <source>This will not work because the callback function passed to &lt;code&gt;fs.readFile()&lt;/code&gt; is called asynchronously. By the time the callback has been called, the surrounding code, including the &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; block, will have already exited. Throwing an error inside the callback &lt;strong&gt;can crash the Node.js process&lt;/strong&gt; in most cases. If &lt;a href=&quot;domain&quot;&gt;domains&lt;/a&gt; are enabled, or a handler has been registered with &lt;code&gt;process.on('uncaughtException')&lt;/code&gt;, such errors can be intercepted.</source>
          <target state="translated">Это не сработает, потому что функция обратного вызова, переданная в &lt;code&gt;fs.readFile()&lt;/code&gt; вызывается асинхронно. К тому времени, как обратный вызов будет вызван, окружающий код, включая блок &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; , уже завершится. Сообщение об ошибке в обратном &lt;strong&gt;вызове&lt;/strong&gt; в большинстве случаев &lt;strong&gt;может привести к сбою процесса Node.js. &lt;/strong&gt;Если &lt;a href=&quot;domain&quot;&gt;домены&lt;/a&gt; включены или обработчик был зарегистрирован в &lt;code&gt;process.on('uncaughtException')&lt;/code&gt; , такие ошибки можно перехватить.</target>
        </trans-unit>
        <trans-unit id="3b97a9813dd547ff5a18b92d60ea9c7c60a244fb" translate="yes" xml:space="preserve">
          <source>This will opt into the default &lt;code&gt;NAPI_VERSION&lt;/code&gt; for the given release of Node.js. In order to ensure compatibility with specific versions of N-API, the version can be specified explicitly when including the header:</source>
          <target state="translated">При этом будет &lt;code&gt;NAPI_VERSION&lt;/code&gt; по умолчанию для данной версии Node.js. Чтобы обеспечить совместимость с конкретными версиями N-API, версию можно указать явно при включении заголовка:</target>
        </trans-unit>
        <trans-unit id="c2caba2077af1acf81bcaf212679d9efc23f7b46" translate="yes" xml:space="preserve">
          <source>This will track where the current cursor lands in the input string, when reading input from a TTY stream. The position of cursor determines the portion of the input string that will be modified as input is processed, as well as the column where the terminal caret will be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b61b4fd778d330c4d9ae04ee169c3836b77a3e" translate="yes" xml:space="preserve">
          <source>This will, however, generally degrade compression.</source>
          <target state="translated">Это,однако,в целом ухудшит компрессию.</target>
        </trans-unit>
        <trans-unit id="898d4d4c37da591f1dbaea989ea4b845e4eb4dcd" translate="yes" xml:space="preserve">
          <source>This would result in a large number of handles being created, consuming substantial resources. In addition, even though the native code could only use the most recent handle, all of the associated objects would also be kept alive since they all share the same scope.</source>
          <target state="translated">В результате будет создано большое количество ручек,потребляющих значительные ресурсы.Кроме того,несмотря на то,что родной код мог использовать только самый последний дескриптор,все связанные с ним объекты также остались бы живы,так как все они имеют одинаковую область видимости.</target>
        </trans-unit>
        <trans-unit id="d467439a515ceca23a9a5fc18245fc89bdccd935" translate="yes" xml:space="preserve">
          <source>Though the call to &lt;code&gt;dns.lookup()&lt;/code&gt; will be asynchronous from JavaScript's perspective, it is implemented as a synchronous call to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/getaddrinfo.3.html&quot;&gt;&lt;code&gt;getaddrinfo(3)&lt;/code&gt;&lt;/a&gt; that runs on libuv's threadpool. This can have surprising negative performance implications for some applications, see the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;&lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">Хотя вызов &lt;code&gt;dns.lookup()&lt;/code&gt; будет асинхронным с точки зрения JavaScript, он реализован как синхронный вызов &lt;a href=&quot;http://man7.org/linux/man-pages/man3/getaddrinfo.3.html&quot;&gt; &lt;code&gt;getaddrinfo(3)&lt;/code&gt; &lt;/a&gt; который выполняется в пуле потоков libuv. Это может иметь неожиданные негативные последствия для производительности некоторых приложений, дополнительную информацию см. &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt; &lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt; &lt;/a&gt; документации UV_THREADPOOL_SIZE .</target>
        </trans-unit>
        <trans-unit id="bf8b9bcd61ac02e20b1f70392f83be7f64e30820" translate="yes" xml:space="preserve">
          <source>Threadpool Usage</source>
          <target state="translated">Использование резьбовой пул</target>
        </trans-unit>
        <trans-unit id="194378c3031d5f4c91d972a4e5fae3797161a3bf" translate="yes" xml:space="preserve">
          <source>Threadpool usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b84236df57d6e40394ff631a8881c1eb98f55ef" translate="yes" xml:space="preserve">
          <source>Threadpool usage and performance considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c31834fd4f46e0567ccae1bc9794a97e2ef2ae6" translate="yes" xml:space="preserve">
          <source>Threads can be added to and removed from a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; object during its existence. Thus, in addition to specifying an initial number of threads upon creation, &lt;code&gt;napi_acquire_threadsafe_function&lt;/code&gt; can be called to indicate that a new thread will start making use of the thread-safe function. Similarly, &lt;code&gt;napi_release_threadsafe_function&lt;/code&gt; can be called to indicate that an existing thread will stop making use of the thread-safe function.</source>
          <target state="translated">Потоки могут добавляться и удаляться из объекта &lt;code&gt;napi_threadsafe_function&lt;/code&gt; во время его существования. Таким образом, помимо указания начального количества потоков при создании, можно вызвать &lt;code&gt;napi_acquire_threadsafe_function&lt;/code&gt; , чтобы указать, что новый поток начнет использовать потокобезопасную функцию. Точно так же можно вызвать &lt;code&gt;napi_release_threadsafe_function&lt;/code&gt; , чтобы указать, что существующий поток перестанет использовать потокобезопасную функцию.</target>
        </trans-unit>
        <trans-unit id="dd491a1a20798b4f3eab7ca47ce9cde3c1a3f963" translate="yes" xml:space="preserve">
          <source>Three States</source>
          <target state="translated">Три государства</target>
        </trans-unit>
        <trans-unit id="6e9c26957242e69ce7b5e779efca06887090978a" translate="yes" xml:space="preserve">
          <source>Three states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50789f4c54d6872bdd31a68fcda1c02e644ea74" translate="yes" xml:space="preserve">
          <source>Throw a &lt;em&gt;Module Not Found&lt;/em&gt; error.</source>
          <target state="translated">Выдает ошибку &quot; &lt;em&gt;Модуль не найден&quot;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3c2047ffcc9c1f89b1e17b907380a299308c953e" translate="yes" xml:space="preserve">
          <source>Throw a &lt;em&gt;Package Import Not Defined&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157fa426a458f5a47aca54e42c4db7bded9d4f50" translate="yes" xml:space="preserve">
          <source>Throw a &lt;em&gt;Package Path Not Exported&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8170c71e55e480b36becd3a8bdae44cd43c0144e" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Invalid Module Specifier&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6f0a31b4716ff39675671a8367ef62be40d012" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Invalid Package Configuration&lt;/em&gt; error.</source>
          <target state="translated">Выдает ошибку &lt;em&gt;неверной конфигурации пакета&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a78220df6c48d2fb08d8df29384d6309dc62e9a0" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Invalid Specifier&lt;/em&gt; error.</source>
          <target state="translated">Бросок &lt;em&gt;Недопустимого спецификатор&lt;/em&gt; ошибки.</target>
        </trans-unit>
        <trans-unit id="14508f1d752fa9f1a58cf9aef8de034062c7fcf3" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Unsupported Directory Import&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b845975caf9cd24e6a6a64484cf34be9a5885d" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Unsupported File Extension&lt;/em&gt; error.</source>
          <target state="translated">Бросьте &lt;em&gt;неподдерживаемых расширение файла&lt;/em&gt; ошибок.</target>
        </trans-unit>
        <trans-unit id="274bb320296e78e649774ab7cf14c8bffcb9c969" translate="yes" xml:space="preserve">
          <source>Throw errors for deprecations.</source>
          <target state="translated">Бросайте ошибки для депрессий.</target>
        </trans-unit>
        <trans-unit id="ca7b995e33945e66abe60ea39498a0102ea95fab" translate="yes" xml:space="preserve">
          <source>Thrown in case a function option does not provide a valid value for one of its returned object properties on execution.</source>
          <target state="translated">Бросается в случае,если опция функции не предоставляет действительного значения для одного из возвращаемых свойств объекта при выполнении.</target>
        </trans-unit>
        <trans-unit id="e035afeae4a1775ec604c8b5d8f677f77e629c2f" translate="yes" xml:space="preserve">
          <source>Thrown in case a function option does not provide an expected value type for one of its returned object properties on execution.</source>
          <target state="translated">Бросается в случае,если опция функции не предоставляет ожидаемого типа значения для одного из свойств возвращаемого объекта при исполнении.</target>
        </trans-unit>
        <trans-unit id="500f81cca30019a552ab883030a9f388e713b7de" translate="yes" xml:space="preserve">
          <source>Thrown in case a function option does not return an expected value type on execution, such as when a function is expected to return a promise.</source>
          <target state="translated">Бросается в том случае,если функция не возвращает тип ожидаемого значения при выполнении,например,когда функция должна вернуть обещание.</target>
        </trans-unit>
        <trans-unit id="5ad63a3ff43abbab909982b69d4d78b65b2aafab" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to recursively dispatch an event on &lt;code&gt;EventTarget&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9dfd60d599c5257e4849241e700802dc509d8e" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;ERR_OUT_OF_RANGE&lt;/code&gt; instead of &lt;code&gt;ERR_INDEX_OUT_OF_RANGE&lt;/code&gt;.</source>
          <target state="translated">Выдает &lt;code&gt;ERR_OUT_OF_RANGE&lt;/code&gt; вместо &lt;code&gt;ERR_INDEX_OUT_OF_RANGE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f533babc33348b6d3fb4950583edc945f148749" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;value&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;. This is useful when testing the &lt;code&gt;error&lt;/code&gt; argument in callbacks. The stack trace contains all frames from the error passed to &lt;code&gt;ifError()&lt;/code&gt; including the potential new frames for &lt;code&gt;ifError()&lt;/code&gt; itself.</source>
          <target state="translated">Выбрасывает &lt;code&gt;value&lt;/code&gt; если &lt;code&gt;value&lt;/code&gt; не является &lt;code&gt;undefined&lt;/code&gt; или &lt;code&gt;null&lt;/code&gt; . Это полезно при проверке аргумента &lt;code&gt;error&lt;/code&gt; в обратных вызовах. Трассировка стека содержит все кадры из ошибки, переданной в &lt;code&gt;ifError()&lt;/code&gt; включая потенциальные новые кадры для &lt;code&gt;ifError()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d293028683a03e7c8565aef633c4bd64df69e5d" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;errors#errors_class_systemerror&quot;&gt;&lt;code&gt;SystemError&lt;/code&gt;&lt;/a&gt; if a user has no &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;homedir&lt;/code&gt;.</source>
          <target state="translated">Выдает &lt;a href=&quot;errors#errors_class_systemerror&quot;&gt; &lt;code&gt;SystemError&lt;/code&gt; ,&lt;/a&gt; если у пользователя нет &lt;code&gt;username&lt;/code&gt; или &lt;code&gt;homedir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb037643826c156fd10159ab0e43d2a4ebea39d9" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; with the provided error message or a default error message. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab0da4aef65302e8e7125139145d3ae9207952c" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;AssertionError&lt;/code&gt; with the provided error message or a default error message. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">Выдает &lt;code&gt;AssertionError&lt;/code&gt; с предоставленным сообщением об ошибке или сообщением об ошибке по умолчанию. Если параметр &lt;code&gt;message&lt;/code&gt; является экземпляром &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; он будет выдан вместо &lt;code&gt;AssertionError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f221650e50054f81fe163161fb94d86584723cb" translate="yes" xml:space="preserve">
          <source>Throws if the &lt;code&gt;fromEnc&lt;/code&gt; or &lt;code&gt;toEnc&lt;/code&gt; specify invalid character encodings or if conversion from &lt;code&gt;fromEnc&lt;/code&gt; to &lt;code&gt;toEnc&lt;/code&gt; is not permitted.</source>
          <target state="translated">&lt;code&gt;fromEnc&lt;/code&gt; если fromEnc или &lt;code&gt;toEnc&lt;/code&gt; указывают недопустимые кодировки символов или если преобразование &lt;code&gt;fromEnc&lt;/code&gt; в &lt;code&gt;toEnc&lt;/code&gt; не разрешено.</target>
        </trans-unit>
        <trans-unit id="60660bb221304e5fad9ca2c2dd92e7d7c409ce60" translate="yes" xml:space="preserve">
          <source>Thus, even if a cycle is encountered, or if there are dependency conflicts, every module will be able to get a version of its dependency that it can use.</source>
          <target state="translated">Таким образом,даже в случае возникновения цикла или конфликтов зависимостей,каждый модуль сможет получить версию своей зависимости,которую он сможет использовать.</target>
        </trans-unit>
        <trans-unit id="f395da331ca8317cd167d68da7aed50270080a44" translate="yes" xml:space="preserve">
          <source>Thus, for an addon to remain ABI-compatible across Node.js major versions, it must make use exclusively of N-API by restricting itself to using</source>
          <target state="translated">Таким образом,для того,чтобы аддон оставался ABI-совместимым в основных версиях Node.js,он должен использовать исключительно N-API,ограничиваясь только использованием</target>
        </trans-unit>
        <trans-unit id="112c3024c3d7912fd57cd8ebb68639fc60c09698" translate="yes" xml:space="preserve">
          <source>Thus, for an addon to remain ABI-compatible across Node.js major versions, it must use N-API exclusively by restricting itself to using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="551d6adf37a9cb1b523706676a5c3aab5b5fcb93" translate="yes" xml:space="preserve">
          <source>Timeout interactions with asynchronous tasks and Promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7f027cfebdbd1cfd15712b89e96328bae876ed" translate="yes" xml:space="preserve">
          <source>Timeout limitations when using process.nextTick(), Promises, and queueMicrotask()</source>
          <target state="translated">Ограничения по таймауту при использовании функций process.nextTick(),Promises и queueMicrotask().</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="f7391e8fca236efbdf30a41b1765e03b0aedeea8" translate="yes" xml:space="preserve">
          <source>To access it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f285c5caf3395120404e2b15ef1afaae7633a15" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;stream&lt;/code&gt; module:</source>
          <target state="translated">Чтобы получить доступ к модулю &lt;code&gt;stream&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="113093009a6693093866588b6702951e8ef8612a" translate="yes" xml:space="preserve">
          <source>To achieve consistent results when working with POSIX file paths on any operating system, use &lt;a href=&quot;#path_path_posix&quot;&gt;&lt;code&gt;path.posix&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Чтобы добиться согласованных результатов при работе с путями к файлам POSIX в любой операционной системе, используйте &lt;a href=&quot;#path_path_posix&quot;&gt; &lt;code&gt;path.posix&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="89017d2ede47b0785d45ee78f6f27262e118a2db" translate="yes" xml:space="preserve">
          <source>To achieve consistent results when working with Windows file paths on any operating system, use &lt;a href=&quot;#path_path_win32&quot;&gt;&lt;code&gt;path.win32&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Чтобы добиться согласованных результатов при работе с путями к файлам Windows в любой операционной системе, используйте &lt;a href=&quot;#path_path_win32&quot;&gt; &lt;code&gt;path.win32&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b45c1d802e95d3410405265dfd8e4d44f4dbfd27" translate="yes" xml:space="preserve">
          <source>To add the method &lt;code&gt;hello&lt;/code&gt; as a function so that it can be called as a method provided by the addon:</source>
          <target state="translated">Чтобы добавить метод &lt;code&gt;hello&lt;/code&gt; как функцию, чтобы его можно было вызывать как метод, предоставленный аддоном:</target>
        </trans-unit>
        <trans-unit id="81c0394f49db892821115b54c6eb0edd5cc1ba09" translate="yes" xml:space="preserve">
          <source>To be notified when the file was modified, not just accessed, it is necessary to compare &lt;code&gt;curr.mtime&lt;/code&gt; and &lt;code&gt;prev.mtime&lt;/code&gt;.</source>
          <target state="translated">Чтобы получать уведомления о том, что файл был изменен, а не только что был осуществлен доступ, необходимо сравнить &lt;code&gt;curr.mtime&lt;/code&gt; и &lt;code&gt;prev.mtime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="817d0bb7fcad591dfad28392604533ca026ba506" translate="yes" xml:space="preserve">
          <source>To be used in conjunction with &lt;code&gt;--experimental-modules&lt;/code&gt;. Sets the resolution algorithm for resolving specifiers. Valid options are &lt;code&gt;explicit&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">Для использования вместе с &lt;code&gt;--experimental-modules&lt;/code&gt; . Устанавливает алгоритм разрешения для разрешения спецификаторов. Допустимые параметры: &lt;code&gt;explicit&lt;/code&gt; и &lt;code&gt;node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8a3354dac48c927a38f89348c115a2d20de7cf0" translate="yes" xml:space="preserve">
          <source>To begin watching an expression, type &lt;code&gt;watch('my_expression')&lt;/code&gt;. The command &lt;code&gt;watchers&lt;/code&gt; will print the active watchers. To remove a watcher, type &lt;code&gt;unwatch('my_expression')&lt;/code&gt;.</source>
          <target state="translated">Чтобы начать просмотр выражения, введите &lt;code&gt;watch('my_expression')&lt;/code&gt; . &lt;code&gt;watchers&lt;/code&gt; команд распечатают активных наблюдателей. Чтобы удалить наблюдателя, введите &lt;code&gt;unwatch('my_expression')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0304f4e61d19a2c2ac88f8d7fae8f457554b26" translate="yes" xml:space="preserve">
          <source>To break on the first line of the application code, pass the &lt;code&gt;--inspect-brk&lt;/code&gt; flag instead of &lt;code&gt;--inspect&lt;/code&gt;.</source>
          <target state="translated">Чтобы прервать первую строку кода приложения, передайте флаг &lt;code&gt;--inspect-brk&lt;/code&gt; вместо &lt;code&gt;--inspect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22dfb32e7c28d8dcaa05c55a622e6cdce176c30b" translate="yes" xml:space="preserve">
          <source>To build this example, the &lt;code&gt;myobject.cc&lt;/code&gt; file must be added to the &lt;code&gt;binding.gyp&lt;/code&gt;:</source>
          <target state="translated">Для того, чтобы построить этот пример, то &lt;code&gt;myobject.cc&lt;/code&gt; файл должен быть добавлен к &lt;code&gt;binding.gyp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb2546fbdf0da09b297499ea21ca759167d5daca" translate="yes" xml:space="preserve">
          <source>To catch both events, create each of the Promises &lt;em&gt;before&lt;/em&gt; awaiting either of them, then it becomes possible to use &lt;code&gt;Promise.all()&lt;/code&gt;, &lt;code&gt;Promise.race()&lt;/code&gt;, or &lt;code&gt;Promise.allSettled()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257192fca64c7e5ef4beea84df13594a588d02bf" translate="yes" xml:space="preserve">
          <source>To change the default timeout use the &lt;a href=&quot;cli#cli_http_server_default_timeout_milliseconds&quot;&gt;&lt;code&gt;--http-server-default-timeout&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">Чтобы изменить время ожидания по умолчанию, используйте &lt;a href=&quot;cli#cli_http_server_default_timeout_milliseconds&quot;&gt; &lt;code&gt;--http-server-default-timeout&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83bf60ee112d40f394c9009468f70ac11d5c5c03" translate="yes" xml:space="preserve">
          <source>To check for support for a non-English locale (i.e. &lt;code&gt;full-icu&lt;/code&gt; or &lt;code&gt;system-icu&lt;/code&gt;), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; can be a good distinguishing factor:</source>
          <target state="translated">Чтобы проверить поддержку неанглийской локали (например, &lt;code&gt;full-icu&lt;/code&gt; или &lt;code&gt;system-icu&lt;/code&gt; ), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; может быть хорошим отличительным фактором:</target>
        </trans-unit>
        <trans-unit id="6f9ed209f8f372fe4035b55216331b230379fdb5" translate="yes" xml:space="preserve">
          <source>To check if a file exists without manipulating it afterwards, &lt;a href=&quot;#fs_fs_access_path_mode_callback&quot;&gt;&lt;code&gt;fs.access()&lt;/code&gt;&lt;/a&gt; is recommended.</source>
          <target state="translated">Чтобы проверить, существует ли файл, не &lt;a href=&quot;#fs_fs_access_path_mode_callback&quot;&gt; &lt;code&gt;fs.access()&lt;/code&gt; &lt;/a&gt; его впоследствии, рекомендуется использовать fs.access () .</target>
        </trans-unit>
        <trans-unit id="72931344905502cc560ea0d63014dbb48946d73e" translate="yes" xml:space="preserve">
          <source>To check if a stream is connected to a &lt;a href=&quot;tty#tty_tty&quot;&gt;TTY&lt;/a&gt; context, check the &lt;code&gt;isTTY&lt;/code&gt; property.</source>
          <target state="translated">Чтобы проверить, подключен ли поток к контексту &lt;a href=&quot;tty#tty_tty&quot;&gt;TTY&lt;/a&gt; , проверьте свойство &lt;code&gt;isTTY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84c7039869bdb8532ecd51ab012fbbe93984c08f" translate="yes" xml:space="preserve">
          <source>To configure any of them, a custom &lt;a href=&quot;#http_class_http_agent&quot;&gt;&lt;code&gt;http.Agent&lt;/code&gt;&lt;/a&gt; instance must be created.</source>
          <target state="translated">Для настройки любого из них необходимо создать собственный экземпляр &lt;a href=&quot;#http_class_http_agent&quot;&gt; &lt;code&gt;http.Agent&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d69007751c2a41a54e8aeb848a171b7cce6a5036" translate="yes" xml:space="preserve">
          <source>To connect on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt; the second line would just be changed to:</source>
          <target state="translated">Для подключения к сокету &lt;code&gt;/tmp/echo.sock&lt;/code&gt; вторую строку нужно просто изменить на:</target>
        </trans-unit>
        <trans-unit id="13ba3f87d486426a67fdfd4e20f95fec780e8f03" translate="yes" xml:space="preserve">
          <source>To connect on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a6196d20446e42af34618037ad4de017d40178" translate="yes" xml:space="preserve">
          <source>To control how ICU is used in Node.js, four &lt;code&gt;configure&lt;/code&gt; options are available during compilation. Additional details on how to compile Node.js are documented in &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt;.</source>
          <target state="translated">Чтобы контролировать использование ICU в Node.js, во время компиляции доступны четыре параметра &lt;code&gt;configure&lt;/code&gt; . Дополнительные сведения о том, как компилировать Node.js, описаны в &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67c2ffbe92be0f9b51c9a83a429725a64f6213f9" translate="yes" xml:space="preserve">
          <source>To correctly order the operations, move the &lt;code&gt;fs.stat()&lt;/code&gt; call into the callback of the &lt;code&gt;fs.rename()&lt;/code&gt; operation:</source>
          <target state="translated">Чтобы правильно упорядочить операции, переместите &lt;code&gt;fs.stat()&lt;/code&gt; в обратный вызов операции &lt;code&gt;fs.rename()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f0520e0374ec9ffcd9c6cf5ec0d679283c3270e7" translate="yes" xml:space="preserve">
          <source>To create a custom dynamic module that doesn't correspond to one of the existing &lt;code&gt;format&lt;/code&gt; interpretations, the &lt;code&gt;dynamicInstantiate&lt;/code&gt; hook can be used. This hook is called only for modules that return &lt;code&gt;format: 'dynamic'&lt;/code&gt; from the &lt;code&gt;resolve&lt;/code&gt; hook.</source>
          <target state="translated">Чтобы создать собственный динамический модуль, который не соответствует одной из существующих интерпретаций &lt;code&gt;format&lt;/code&gt; , можно использовать ловушку &lt;code&gt;dynamicInstantiate&lt;/code&gt; . Эта ловушка вызывается только для модулей, которые возвращают &lt;code&gt;format: 'dynamic'&lt;/code&gt; из ловушки &lt;code&gt;resolve&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e176982d3949a6fa8a4834a7abff97fa762f0cb" translate="yes" xml:space="preserve">
          <source>To create custom messaging channels (which is encouraged over using the default global channel because it facilitates separation of concerns), users can create a &lt;code&gt;MessageChannel&lt;/code&gt; object on either thread and pass one of the &lt;code&gt;MessagePort&lt;/code&gt;s on that &lt;code&gt;MessageChannel&lt;/code&gt; to the other thread through a pre-existing channel, such as the global one.</source>
          <target state="translated">Для создания настраиваемых каналов обмена сообщениями (что рекомендуется по сравнению с использованием глобального канала по умолчанию, поскольку он облегчает разделение задач) пользователи могут создать объект &lt;code&gt;MessageChannel&lt;/code&gt; в любом потоке и передать один из &lt;code&gt;MessagePort&lt;/code&gt; в этом &lt;code&gt;MessageChannel&lt;/code&gt; другому потоку через предварительный существующий канал, например глобальный.</target>
        </trans-unit>
        <trans-unit id="1a3b265855273805adaa9745965d95cb45ba31be" translate="yes" xml:space="preserve">
          <source>To customize the default module resolution, loader hooks can optionally be provided via a &lt;code&gt;--experimental-loader ./loader-name.mjs&lt;/code&gt; argument to Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c2ed95d362ac6e310208df03daab20b4ae57a0" translate="yes" xml:space="preserve">
          <source>To customize the default module resolution, loader hooks can optionally be provided via a &lt;code&gt;--loader ./loader-name.mjs&lt;/code&gt; argument to Node.js.</source>
          <target state="translated">Чтобы настроить разрешение модуля по умолчанию, перехватчики загрузчика могут быть дополнительно предоставлены через аргумент &lt;code&gt;--loader ./loader-name.mjs&lt;/code&gt; для Node.js.</target>
        </trans-unit>
        <trans-unit id="152f25ba7578f4f82f7a056c9eb04659230b3677" translate="yes" xml:space="preserve">
          <source>To deactivate the colors, use the &lt;code&gt;NODE_DISABLE_COLORS&lt;/code&gt; environment variable. This will also deactivate the colors in the REPL.</source>
          <target state="translated">Чтобы отключить цвета, используйте переменную среды &lt;code&gt;NODE_DISABLE_COLORS&lt;/code&gt; . Это также отключит цвета в REPL.</target>
        </trans-unit>
        <trans-unit id="f63281065a3a3689c14d9466b15bbe449245428a" translate="yes" xml:space="preserve">
          <source>To deactivate the colors, use the &lt;code&gt;NO_COLOR&lt;/code&gt; or &lt;code&gt;NODE_DISABLE_COLORS&lt;/code&gt; environment variables. This will also deactivate the colors in the REPL. For more on color support in terminal environments, read the tty &lt;a href=&quot;tty#tty_writestream_getcolordepth_env&quot;&gt;getColorDepth()&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee22bab1313bf7a33041e942c66c0625221d4e94" translate="yes" xml:space="preserve">
          <source>To define a class so that new instances can be created (often used with &lt;a href=&quot;#n_api_object_wrap&quot;&gt;Object Wrap&lt;/a&gt;):</source>
          <target state="translated">Чтобы определить класс, чтобы можно было создавать новые экземпляры (часто используется с &lt;a href=&quot;#n_api_object_wrap&quot;&gt;Object Wrap&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="ed68c74bf87981629a008b2e07694c150206ebab" translate="yes" xml:space="preserve">
          <source>To define a class so that new instances can be created (often used with &lt;a href=&quot;#n_api_object_wrap&quot;&gt;Object wrap&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b902ed0de8270b9fb62fc619759f8ad4b57a9" translate="yes" xml:space="preserve">
          <source>To enforce a specific color support, use one of the below environment settings.</source>
          <target state="translated">Чтобы обеспечить поддержку определенного цвета,используйте один из приведенных ниже параметров среды.</target>
        </trans-unit>
        <trans-unit id="563ac46b64bfdec1cb057f5366a2341549beff68" translate="yes" xml:space="preserve">
          <source>To ensure that the pointer retrieved from the first argument is indeed a pointer to a database handle and, similarly, that the pointer retrieved from the second argument is indeed a pointer to a query handle, the implementation of &lt;code&gt;queryHasRecords()&lt;/code&gt; has to perform a type validation. Retaining the JavaScript class constructor from which the database handle was instantiated and the constructor from which the query handle was instantiated in &lt;code&gt;napi_ref&lt;/code&gt;s can help, because &lt;code&gt;napi_instanceof()&lt;/code&gt; can then be used to ensure that the instances passed into &lt;code&gt;queryHashRecords()&lt;/code&gt; are indeed of the correct type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f753794b1f35b9fdcfce66da0b9225f594ed1" translate="yes" xml:space="preserve">
          <source>To exit with a 'failure' code:</source>
          <target state="translated">Выход с кодом &quot;отказ&quot;:</target>
        </trans-unit>
        <trans-unit id="ba26739dd8d319b8071919705bb005ee5baa56d8" translate="yes" xml:space="preserve">
          <source>To extract the parameters from the query string, the &lt;code&gt;require('querystring').parse&lt;/code&gt; function can be used, or &lt;code&gt;true&lt;/code&gt; can be passed as the second argument to &lt;code&gt;require('url').parse&lt;/code&gt;.</source>
          <target state="translated">Чтобы извлечь параметры из строки запроса, можно использовать функцию &lt;code&gt;require('querystring').parse&lt;/code&gt; или передать &lt;code&gt;true&lt;/code&gt; в качестве второго аргумента &lt;code&gt;require('url').parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5727ff4630ff91a10fefc92eb21eadd2192abbee" translate="yes" xml:space="preserve">
          <source>To extract the parameters from the query string, the &lt;code&gt;require('querystring').parse&lt;/code&gt; function can be used, or &lt;code&gt;true&lt;/code&gt; can be passed as the second argument to &lt;code&gt;require('url').parse&lt;/code&gt;:</source>
          <target state="translated">Чтобы извлечь параметры из строки запроса, можно использовать функцию &lt;code&gt;require('querystring').parse&lt;/code&gt; или передать &lt;code&gt;true&lt;/code&gt; в качестве второго аргумента &lt;code&gt;require('url').parse&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3fefe10ff6dde1978c8f6041595748b6a6792d9d" translate="yes" xml:space="preserve">
          <source>To fully customize the output of a &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance pass in a new function for the &lt;code&gt;writer&lt;/code&gt; option on construction. The following example, for instance, simply converts any input text to upper case:</source>
          <target state="translated">Для того, чтобы полностью настроить выход в &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; экземпляр прохода в новой функции для &lt;code&gt;writer&lt;/code&gt; вариант по строительству. В следующем примере, например, просто преобразуется любой вводимый текст в верхний регистр:</target>
        </trans-unit>
        <trans-unit id="f82f342e2108d2b1a12ccbbfb5e1444bf37c6bd0" translate="yes" xml:space="preserve">
          <source>To generate integrity strings, a script such as &lt;code&gt;printf &quot;sha384-$(cat checked.js | openssl dgst -sha384 -binary | base64)&quot;&lt;/code&gt; can be used.</source>
          <target state="translated">Для создания строк целостности можно использовать такой сценарий, как &lt;code&gt;printf &quot;sha384-$(cat checked.js | openssl dgst -sha384 -binary | base64)&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad9bff9dfa86ac3f581dc9a1a87860cd6b7f4e57" translate="yes" xml:space="preserve">
          <source>To generate the certificate and key for this example, run:</source>
          <target state="translated">Чтобы сгенерировать сертификат и ключ для этого примера,запустите:</target>
        </trans-unit>
        <trans-unit id="69f64fd3b92ea07f26cf029da8688a34b5e1c399" translate="yes" xml:space="preserve">
          <source>To get the exact filename that will be loaded when &lt;code&gt;require()&lt;/code&gt; is called, use the &lt;code&gt;require.resolve()&lt;/code&gt; function.</source>
          <target state="translated">Чтобы получить точное имя файла, которое будет загружено при вызове &lt;code&gt;require()&lt;/code&gt; , используйте функцию &lt;code&gt;require.resolve()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ff57305218fef61e7a1c5f3ae88348b43634dfe" translate="yes" xml:space="preserve">
          <source>To get the response, add a listener for &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; to the request object. &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; will be emitted from the request object when the response headers have been received. The &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; event is executed with one argument which is an instance of &lt;a href=&quot;#http_class_http_incomingmessage&quot;&gt;&lt;code&gt;http.IncomingMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы получить ответ, добавьте слушателя для &lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt; к объекту запроса. &lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt; будет отправлен из объекта запроса, когда будут получены заголовки ответа. &lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt; событие выполняется с одним аргументом , который является экземпляром &lt;a href=&quot;#http_class_http_incomingmessage&quot;&gt; &lt;code&gt;http.IncomingMessage&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="044ebf34f23de583098254e8634e645a39e8143c" translate="yes" xml:space="preserve">
          <source>To get the string representation of the error code, use &lt;a href=&quot;util#util_util_getsystemerrorname_err&quot;&gt;&lt;code&gt;util.getSystemErrorName(error.errno)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901383fa9c06c6cbf4f565534c4023b071c8fa19" translate="yes" xml:space="preserve">
          <source>To get the version string without the prepended &lt;em&gt;v&lt;/em&gt;, use &lt;code&gt;process.versions.node&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa20aefae1fe619888a9d19f8166927723ea251" translate="yes" xml:space="preserve">
          <source>To guard against crashing the Node.js process the &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; module can be used. (Note, however, that the &lt;code&gt;domain&lt;/code&gt; module is deprecated.)</source>
          <target state="translated">Для защиты от сбоя процесса Node.js можно использовать модуль &lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; . (Обратите внимание, однако, что модуль &lt;code&gt;domain&lt;/code&gt; устарел.)</target>
        </trans-unit>
        <trans-unit id="4a3925d0a0110a53c1988b899e2668ed5402b3d3" translate="yes" xml:space="preserve">
          <source>To handle the errors that it catches, listen to its &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c953e56d44954a70f8f7788b1edcd731a0e9806" translate="yes" xml:space="preserve">
          <source>To handle this case, N-API provides the ability to establish a new 'scope' to which newly created handles will be associated. Once those handles are no longer required, the scope can be 'closed' and any handles associated with the scope are invalidated. The methods available to open/close scopes are &lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt;&lt;code&gt;napi_open_handle_scope&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt;&lt;code&gt;napi_close_handle_scope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы справиться с этим случаем, N-API предоставляет возможность установить новую &amp;laquo;область действия&amp;raquo;, с которой будут связаны вновь созданные дескрипторы. Когда эти дескрипторы больше не требуются, область действия может быть &amp;laquo;закрыта&amp;raquo;, а любые дескрипторы, связанные с областью действия, становятся недействительными. Доступные методы для открытия / закрытия областей: &lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt; &lt;code&gt;napi_open_handle_scope&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt; &lt;code&gt;napi_close_handle_scope&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae9fb9267ffb10903bb86fc63715f4cd0cfcaaf" translate="yes" xml:space="preserve">
          <source>To have a module execute code multiple times, export a function, and call that function.</source>
          <target state="translated">Чтобы модуль выполнял код несколько раз,экспортируйте функцию и вызывайте ее.</target>
        </trans-unit>
        <trans-unit id="56b15cec207bf8e8429b8350d22d585ee8bda635" translate="yes" xml:space="preserve">
          <source>To illustrate the behavior, imagine this hypothetical implementation of &lt;code&gt;require()&lt;/code&gt;, which is quite similar to what is actually done by &lt;code&gt;require()&lt;/code&gt;:</source>
          <target state="translated">Чтобы проиллюстрировать поведение, представьте себе эту гипотетическую реализацию &lt;code&gt;require()&lt;/code&gt; , которая очень похожа на то, что на самом деле делает &lt;code&gt;require()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d68e5b68a41d9794b3e7248a2d7f36459e1a791e" translate="yes" xml:space="preserve">
          <source>To include an ES module into CommonJS, use &lt;a href=&quot;#esm_import-expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы включить модуль ES в CommonJS, используйте &lt;a href=&quot;#esm_import-expressions&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d089308ad7fa8608dc856e8dfd0c999ca3ce0d66" translate="yes" xml:space="preserve">
          <source>To include an ES module into CommonJS, use &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652a3cd9523950c5d1acf707c7efb8f626e43774" translate="yes" xml:space="preserve">
          <source>To listen on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt; the third line from the last would just be changed to:</source>
          <target state="translated">Чтобы прослушивать сокет &lt;code&gt;/tmp/echo.sock&lt;/code&gt; , третья строка из последней должна быть просто изменена на:</target>
        </trans-unit>
        <trans-unit id="4902deed6b5f58c97833c40362dfd51cfd1113c3" translate="yes" xml:space="preserve">
          <source>To listen on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21739c6890c2acc4bdec505b9f422fb0e996afe2" translate="yes" xml:space="preserve">
          <source>To maintain existing behaviour &lt;code&gt;response.finished&lt;/code&gt; should be replaced with &lt;code&gt;response.writableEnded&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e10d026ab12717e40d75bbfd814a562f51e4156" translate="yes" xml:space="preserve">
          <source>To make the creation of &lt;code&gt;Buffer&lt;/code&gt; instances more reliable and less error-prone, the various forms of the &lt;code&gt;new Buffer()&lt;/code&gt; constructor have been &lt;strong&gt;deprecated&lt;/strong&gt; and replaced by separate &lt;code&gt;Buffer.from()&lt;/code&gt;, &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">Для того, чтобы создание &lt;code&gt;Buffer&lt;/code&gt; экземпляров более надежных и менее подвержены ошибкам, различные формы &lt;code&gt;new Buffer()&lt;/code&gt; конструктор были &lt;strong&gt;устаревшие&lt;/strong&gt; и заменены отдельной &lt;code&gt;Buffer.from()&lt;/code&gt; , &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; , и &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; методы.</target>
        </trans-unit>
        <trans-unit id="eb5ae203366178adec792f09dee66772cb19c68f" translate="yes" xml:space="preserve">
          <source>To make the creation of &lt;code&gt;Buffer&lt;/code&gt; instances more reliable and less error-prone, the various forms of the &lt;code&gt;new Buffer()&lt;/code&gt; constructor have been &lt;strong&gt;deprecated&lt;/strong&gt; and replaced by separate &lt;code&gt;Buffer.from()&lt;/code&gt;, &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7d1841b070660f5e124c6d0b0e5f09de0a3865" translate="yes" xml:space="preserve">
          <source>To mitigate tampering with policy files on disk, an integrity for the policy file itself may be provided via &lt;code&gt;--policy-integrity&lt;/code&gt;. This allows running &lt;code&gt;node&lt;/code&gt; and asserting the policy file contents even if the file is changed on disk.</source>
          <target state="translated">Чтобы предотвратить вмешательство в файлы политики на диске, целостность самого файла политики может быть обеспечена с помощью &lt;code&gt;--policy-integrity&lt;/code&gt; . Это позволяет запустить &lt;code&gt;node&lt;/code&gt; и подтвердить содержимое файла политики, даже если файл был изменен на диске.</target>
        </trans-unit>
        <trans-unit id="1a99036e7fc6f4dd433ceb4a4d4fe866ee586c79" translate="yes" xml:space="preserve">
          <source>To mitigate the risk, renegotiation is limited to three times every ten minutes. An &lt;code&gt;'error'&lt;/code&gt; event is emitted on the &lt;a href=&quot;#tls_class_tls_tlssocket&quot;&gt;&lt;code&gt;tls.TLSSocket&lt;/code&gt;&lt;/a&gt; instance when this threshold is exceeded. The limits are configurable:</source>
          <target state="translated">Чтобы снизить риск, повторное согласование ограничено до трех раз каждые десять минут. При превышении этого порога в экземпляре &lt;a href=&quot;#tls_class_tls_tlssocket&quot;&gt; &lt;code&gt;tls.TLSSocket&lt;/code&gt; генерируется&lt;/a&gt; событие &lt;code&gt;'error'&lt;/code&gt; . Пределы настраиваются:</target>
        </trans-unit>
        <trans-unit id="6bd92caa0dd0e220612d4509343caa388124bfc1" translate="yes" xml:space="preserve">
          <source>To nest &lt;code&gt;Domain&lt;/code&gt; objects as children of a parent &lt;code&gt;Domain&lt;/code&gt; they must be explicitly added.</source>
          <target state="translated">Чтобы &lt;code&gt;Domain&lt;/code&gt; объекты домена в качестве дочерних по отношению к родительскому &lt;code&gt;Domain&lt;/code&gt; они должны быть явно добавлены.</target>
        </trans-unit>
        <trans-unit id="e8af107ea8ff0e7e34570ffa65be2ae9ff7ad82a" translate="yes" xml:space="preserve">
          <source>To parse the URL into its parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3735245b8ad30f17b7512872187c1aa1d62b39" translate="yes" xml:space="preserve">
          <source>To parse the url into its parts &lt;code&gt;require('url').parse(request.url)&lt;/code&gt; can be used:</source>
          <target state="translated">Для разбора URL-адреса на части можно использовать &lt;code&gt;require('url').parse(request.url)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="773a385d557159d7209e8d59495c1d4ae2e640ae" translate="yes" xml:space="preserve">
          <source>To parse the url into its parts, &lt;code&gt;new URL()&lt;/code&gt; can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60e9cd07a257263fb8969b08ff3c393206c09af" translate="yes" xml:space="preserve">
          <source>To receive pushed streams on the client, set a listener for the &lt;code&gt;'stream'&lt;/code&gt; event on the &lt;code&gt;ClientHttp2Session&lt;/code&gt;:</source>
          <target state="translated">Для того, чтобы получить сдвинуты потоки на клиенте, установить перехватчик для &lt;code&gt;'stream'&lt;/code&gt; события на &lt;code&gt;ClientHttp2Session&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9fa7f2103554e2af5c33c5202941bd62a5133842" translate="yes" xml:space="preserve">
          <source>To restart a crashed application in a more reliable way, whether &lt;code&gt;'uncaughtException'&lt;/code&gt; is emitted or not, an external monitor should be employed in a separate process to detect application failures and recover or restart as needed.</source>
          <target state="translated">Чтобы перезапустить аварийное приложение более надежным способом, независимо от того , генерируется ли &lt;code&gt;'uncaughtException'&lt;/code&gt; или нет, внешний монитор должен использоваться в отдельном процессе для обнаружения сбоев приложения и восстановления или перезапуска по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="f906fc2e9ed75535f0e33b7e1aaaf78e72fcf87b" translate="yes" xml:space="preserve">
          <source>To set a function to be returned by the &lt;code&gt;require()&lt;/code&gt; for the addon:</source>
          <target state="translated">Чтобы установить функцию, возвращаемую функцией &lt;code&gt;require()&lt;/code&gt; для аддона:</target>
        </trans-unit>
        <trans-unit id="b4f2374e10f3a7eb6b83d547d6c57c17e364858d" translate="yes" xml:space="preserve">
          <source>To test it in JavaScript:</source>
          <target state="translated">Чтобы протестировать его на JavaScript:</target>
        </trans-unit>
        <trans-unit id="a0b29e9bbd29bf287a671314a5215366e894cdec" translate="yes" xml:space="preserve">
          <source>To test it, run the following JavaScript:</source>
          <target state="translated">Чтобы протестировать его,запустите следующий JavaScript:</target>
        </trans-unit>
        <trans-unit id="80e061ad3871e4c5c14888dba30a6440671c5a6d" translate="yes" xml:space="preserve">
          <source>To test:</source>
          <target state="translated">Для проверки:</target>
        </trans-unit>
        <trans-unit id="4606c24e18a786400a447c1828c1a5df8796aaf7" translate="yes" xml:space="preserve">
          <source>To this end, N-API provides a way to allocate data such that its life cycle is tied to the life cycle of the Agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86732a9994de407a5b4f9e7fdc6f58ff1d7808fa" translate="yes" xml:space="preserve">
          <source>To this end, N-API provides type-tagging capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e39ad99eeff4166287ae62024f1f20d4affe06b" translate="yes" xml:space="preserve">
          <source>To this env, N-API provides a way to allocate data such that its life cycle is tied to the life cycle of the Agent.</source>
          <target state="translated">Для этого N-API предоставляет способ распределения данных таким образом,чтобы их жизненный цикл был привязан к жизненному циклу Агента.</target>
        </trans-unit>
        <trans-unit id="b5395666fc1a664a6eb308266e88f8f63adf53a4" translate="yes" xml:space="preserve">
          <source>To unset the capture function, &lt;code&gt;process.setUncaughtExceptionCaptureCallback(null)&lt;/code&gt; may be used. Calling this method with a non-&lt;code&gt;null&lt;/code&gt; argument while another capture function is set will throw an error.</source>
          <target state="translated">Чтобы отключить функцию захвата, можно использовать &lt;code&gt;process.setUncaughtExceptionCaptureCallback(null)&lt;/code&gt; . Вызов этого метода с &lt;code&gt;null&lt;/code&gt; аргументом при установленной другой функции захвата вызовет ошибку.</target>
        </trans-unit>
        <trans-unit id="012fe7e6f8e20a96385f534d6d6e01f2918b08c3" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;strict&lt;/code&gt; mode:</source>
          <target state="translated">Чтобы использовать &lt;code&gt;strict&lt;/code&gt; режим:</target>
        </trans-unit>
        <trans-unit id="1ba4716684f52476f95f24b69f86ae65d28cd012" translate="yes" xml:space="preserve">
          <source>To use N-API in the above &quot;Hello world&quot; example, replace the content of &lt;code&gt;hello.cc&lt;/code&gt; with the following. All other instructions remain the same.</source>
          <target state="translated">Чтобы использовать N-API в приведенном выше примере &amp;laquo;Hello world&amp;raquo;, замените содержимое &lt;code&gt;hello.cc&lt;/code&gt; следующим. Все остальные инструкции остаются прежними.</target>
        </trans-unit>
        <trans-unit id="c2030286b077ae9f310389c7d604ec2ac5189637" translate="yes" xml:space="preserve">
          <source>To use Perfect Forward Secrecy using &lt;code&gt;DHE&lt;/code&gt; with the &lt;code&gt;tls&lt;/code&gt; module, it is required to generate Diffie-Hellman parameters and specify them with the &lt;code&gt;dhparam&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;. The following illustrates the use of the OpenSSL command-line interface to generate such parameters:</source>
          <target state="translated">Чтобы использовать Perfect Forward Secrecy с использованием &lt;code&gt;DHE&lt;/code&gt; с модулем &lt;code&gt;tls&lt;/code&gt; , необходимо сгенерировать параметры Диффи-Хеллмана и указать их с &lt;code&gt;dhparam&lt;/code&gt; параметра &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; &lt;/a&gt; для tls.createSecureContext () . Ниже показано использование интерфейса командной строки OpenSSL для генерации таких параметров:</target>
        </trans-unit>
        <trans-unit id="d0a5c6de3c73d917b80285249a110f4f66a4f266" translate="yes" xml:space="preserve">
          <source>To use legacy assertion mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409731a0c399b993f15524f4692dc78e27a98aeb" translate="yes" xml:space="preserve">
          <source>To use legacy mode:</source>
          <target state="translated">Использовать старый режим:</target>
        </trans-unit>
        <trans-unit id="b9501e0f16f826f87e9350e123b56bd36119f5d9" translate="yes" xml:space="preserve">
          <source>To use more than one constant, use the bitwise OR &lt;code&gt;|&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a200c232ad3bd583aabc76d909f585e995a5dc" translate="yes" xml:space="preserve">
          <source>To use perfect forward secrecy using &lt;code&gt;DHE&lt;/code&gt; with the &lt;code&gt;tls&lt;/code&gt; module, it is required to generate Diffie-Hellman parameters and specify them with the &lt;code&gt;dhparam&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;. The following illustrates the use of the OpenSSL command-line interface to generate such parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20a336e72da316b2c9c2163a7733348225e4cc6" translate="yes" xml:space="preserve">
          <source>To use strict assertion mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5ad91da59de7323cefe83cf2f0b20fda7969fd" translate="yes" xml:space="preserve">
          <source>To use the HTTP server and client one must &lt;code&gt;require('http')&lt;/code&gt;.</source>
          <target state="translated">Для использования HTTP-сервера и клиента необходимо &lt;code&gt;require('http')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71784b618df5ed1f33114983208856ba2d4ca1c0" translate="yes" xml:space="preserve">
          <source>To use this module:</source>
          <target state="translated">Использовать этот модуль:</target>
        </trans-unit>
        <trans-unit id="b7399a303049823aaa63a8aa2b18850c567f8783" translate="yes" xml:space="preserve">
          <source>To verify that ICU is enabled at all (&lt;code&gt;system-icu&lt;/code&gt;, &lt;code&gt;small-icu&lt;/code&gt;, or &lt;code&gt;full-icu&lt;/code&gt;), simply checking the existence of &lt;code&gt;Intl&lt;/code&gt; should suffice:</source>
          <target state="translated">Чтобы убедиться, что ICU вообще включен ( &lt;code&gt;system-icu&lt;/code&gt; , &lt;code&gt;small-icu&lt;/code&gt; или &lt;code&gt;full-icu&lt;/code&gt; ), достаточно просто проверить наличие &lt;code&gt;Intl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="767a6b4283338f258039c6484f378f9774bf103f" translate="yes" xml:space="preserve">
          <source>To view this documentation as a manual page in a terminal, run &lt;code&gt;man node&lt;/code&gt;.</source>
          <target state="translated">Чтобы просмотреть эту документацию как справочную страницу в терминале, запустите &lt;code&gt;man node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa49ae28e51088359080f4611ccdaeaee55d06b4" translate="yes" xml:space="preserve">
          <source>Too much HTTP header data was received. In order to protect against malicious or malconfigured clients, if more than 8KB of HTTP header data is received then HTTP parsing will abort without a request or response object being created, and an &lt;code&gt;Error&lt;/code&gt; with this code will be emitted.</source>
          <target state="translated">Получено слишком много данных заголовка HTTP. Для защиты от злонамеренных или неправильно настроенных клиентов, если получено более 8 КБ данных HTTP-заголовка, анализ HTTP будет прерван без создания объекта запроса или ответа, и будет &lt;code&gt;Error&lt;/code&gt; с этим кодом.</target>
        </trans-unit>
        <trans-unit id="6f88bcb86a810807252c2f25ecd279d2e929c894" translate="yes" xml:space="preserve">
          <source>Trace Event provides a mechanism to centralize tracing information generated by V8, Node.js core, and userspace code.</source>
          <target state="translated">Trace Event обеспечивает механизм централизации информации о трассировке,генерируемой ядром V8,ядром Node.js и кодом пользовательского пространства.</target>
        </trans-unit>
        <trans-unit id="522930d7db32b707108991daae748228a5372efb" translate="yes" xml:space="preserve">
          <source>Trace Events</source>
          <target state="translated">Отслеживаемые события</target>
        </trans-unit>
        <trans-unit id="a397d20d155f600d42049a221bc3c7232e0e47bf" translate="yes" xml:space="preserve">
          <source>Trace events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c7adc15802eb0b8935f3924650c3799b474e55" translate="yes" xml:space="preserve">
          <source>Tracing can be enabled with the &lt;code&gt;--trace-event-categories&lt;/code&gt; command-line flag or by using the &lt;code&gt;trace_events&lt;/code&gt; module. The &lt;code&gt;--trace-event-categories&lt;/code&gt; flag accepts a list of comma-separated category names.</source>
          <target state="translated">Трассировку можно включить с помощью &lt;code&gt;--trace-event-categories&lt;/code&gt; командной строки --trace-event-Categories или с помощью модуля &lt;code&gt;trace_events&lt;/code&gt; . &lt;code&gt;--trace-event-categories&lt;/code&gt; флаг принимает список имен категорий , разделенных запятыми.</target>
        </trans-unit>
        <trans-unit id="94e1656659df1321444d7824a33ef26cfdf8bed9" translate="yes" xml:space="preserve">
          <source>Track heap object allocations for heap snapshots.</source>
          <target state="translated">Отслеживать распределение объектов кучи для снимков кучи.</target>
        </trans-unit>
        <trans-unit id="3dede6c9f5b091d4f1178b0d775ad848dfc2fe33" translate="yes" xml:space="preserve">
          <source>Tracks the event loop delay at a given sampling rate.</source>
          <target state="translated">Отслеживает задержку цикла обработки событий с заданной частотой дискретизации.</target>
        </trans-unit>
        <trans-unit id="32233aa3037754c48a35202d5c815e9963127c0e" translate="yes" xml:space="preserve">
          <source>Tracks the event loop delay at a given sampling rate. The constructor of this class not exposed to users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751fa34c39229191e6c74b37aabdea80d0e08f00" translate="yes" xml:space="preserve">
          <source>Trailers will &lt;strong&gt;only&lt;/strong&gt; be emitted if chunked encoding is used for the response; if it is not (e.g. if the request was HTTP/1.0), they will be silently discarded.</source>
          <target state="translated">Трейлеры будут выдаваться &lt;strong&gt;только в&lt;/strong&gt; том случае, если для ответа используется фрагментированная кодировка; если это не так (например, если запрос был HTTP / 1.0), они будут отброшены без уведомления.</target>
        </trans-unit>
        <trans-unit id="f752da73347f44bd141752afbe732a41e970f215" translate="yes" xml:space="preserve">
          <source>Trailing garbage at the end of the input stream will now result in an &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="translated">Конечный мусор в конце входного потока теперь приведет к событию &lt;code&gt;'error'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="969267a9a3af0fbc68033e5c7098f852a9c4f7be" translate="yes" xml:space="preserve">
          <source>Trailing headers have already been sent on the &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">Конечные заголовки уже были отправлены в &lt;code&gt;Http2Stream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cec91881e34f290385e04905cd9b4c93523b2df" translate="yes" xml:space="preserve">
          <source>Transfer a &lt;code&gt;MessagePort&lt;/code&gt; to a different &lt;a href=&quot;vm&quot;&gt;&lt;code&gt;vm&lt;/code&gt;&lt;/a&gt; Context. The original &lt;code&gt;port&lt;/code&gt; object will be rendered unusable, and the returned &lt;code&gt;MessagePort&lt;/code&gt; instance will take its place.</source>
          <target state="translated">Перенесите &lt;code&gt;MessagePort&lt;/code&gt; в другой контекст &lt;a href=&quot;vm&quot;&gt; &lt;code&gt;vm&lt;/code&gt; &lt;/a&gt; . Исходный объект &lt;code&gt;port&lt;/code&gt; станет непригодным для использования, а возвращенный экземпляр &lt;code&gt;MessagePort&lt;/code&gt; займет его место.</target>
        </trans-unit>
        <trans-unit id="f821472ecd36f99690900f79391a7c77f149a02e" translate="yes" xml:space="preserve">
          <source>Transform streams are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams where the output is in some way related to the input. Like all &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams, &lt;code&gt;Transform&lt;/code&gt; streams implement both the &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">Потоки преобразования - это &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; потоки, в которых вывод каким-либо образом связан с вводом. Как и все &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; потоки, потоки &lt;code&gt;Transform&lt;/code&gt; реализуют интерфейсы с возможностью &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d44411ee4a477c4003d0a4fd42fc9852f8eec42" translate="yes" xml:space="preserve">
          <source>Transmits a &lt;code&gt;GOAWAY&lt;/code&gt; frame to the connected peer &lt;em&gt;without&lt;/em&gt; shutting down the &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">Передает кадр &lt;code&gt;GOAWAY&lt;/code&gt; подключенному &lt;code&gt;Http2Session&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; завершая Http2Session .</target>
        </trans-unit>
        <trans-unit id="ea9576ac65abef46df5e8efa3c56554f7250f9bd" translate="yes" xml:space="preserve">
          <source>Transpiler loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a8085f322954c5cb827e7d3811aff927e4beb4" translate="yes" xml:space="preserve">
          <source>Trigger an &lt;code&gt;'uncaughtException'&lt;/code&gt; in JavaScript. Useful if an async callback throws an exception with no way to recover.</source>
          <target state="translated">Вызвать &lt;code&gt;'uncaughtException'&lt;/code&gt; в JavaScript. Полезно, если асинхронный обратный вызов вызывает исключение без возможности восстановления.</target>
        </trans-unit>
        <trans-unit id="88fd9bf4f298a1d2622150397c550c3d7a9663cc" translate="yes" xml:space="preserve">
          <source>Triggered immediately after &lt;code&gt;'connect'&lt;/code&gt;.</source>
          <target state="translated">Срабатывает сразу после &lt;code&gt;'connect'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="00719949dbe60c953bfc33c3a4fc7d650107ce37" translate="yes" xml:space="preserve">
          <source>True if headers were sent, false otherwise (read-only).</source>
          <target state="translated">Правда,если заголовки были отправлены,ложь в противном случае (только для чтения).</target>
        </trans-unit>
        <trans-unit id="52aaf50525ff477ac5ccb10f3e94474da0a7e6a3" translate="yes" xml:space="preserve">
          <source>True if the process is a master. This is determined by the &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt;. If &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt; is undefined, then &lt;code&gt;isMaster&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Верно, если процесс мастер. Это определяется &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt; . Если &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt; не определен, то &lt;code&gt;isMaster&lt;/code&gt; это &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f753bfbea14649b01155a879f0a01fd20d9acfb3" translate="yes" xml:space="preserve">
          <source>True if the process is not a master (it is the negation of &lt;code&gt;cluster.isMaster&lt;/code&gt;).</source>
          <target state="translated">Истинно, если процесс не является ведущим (это отрицание &lt;code&gt;cluster.isMaster&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a402e4d3f2f574d66f39eac4a0a59eb01b7429dc" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;path&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success. The &lt;code&gt;path&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be a string or &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Обрезает &lt;code&gt;path&lt;/code&gt; затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха. &lt;code&gt;path&lt;/code&gt; &lt;em&gt;должен&lt;/em&gt; быть строкой или &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e6fcf342166aa2b3f7da014c8cfdbe02e48d00f" translate="yes" xml:space="preserve">
          <source>Truncates the file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">Обрезает файл, затем разрешает &lt;code&gt;Promise&lt;/code&gt; без аргументов в случае успеха.</target>
        </trans-unit>
        <trans-unit id="eb397e6582ffce2afa6f0c50c11a1da76968e2e5" translate="yes" xml:space="preserve">
          <source>Try to construct a table with the columns of the properties of &lt;code&gt;tabularData&lt;/code&gt; (or use &lt;code&gt;properties&lt;/code&gt;) and rows of &lt;code&gt;tabularData&lt;/code&gt; and log it. Falls back to just logging the argument if it can&amp;rsquo;t be parsed as tabular.</source>
          <target state="translated">Попробуйте построить таблицу со столбцами свойств &lt;code&gt;tabularData&lt;/code&gt; (или используйте &lt;code&gt;properties&lt;/code&gt; ) и строками &lt;code&gt;tabularData&lt;/code&gt; и зарегистрируйте ее. Возвращается к простой регистрации аргумента, если он не может быть проанализирован как табличный.</target>
        </trans-unit>
        <trans-unit id="bd5dbabbefef5321cc8fd2b28e920d3d40a94172" translate="yes" xml:space="preserve">
          <source>Trying to use &lt;a href=&quot;process#process_process_setuncaughtexceptioncapturecallback_fn&quot;&gt;&lt;code&gt;process.setUncaughtExceptionCaptureCallback()&lt;/code&gt;&lt;/a&gt; throws an &lt;a href=&quot;errors#errors_err_domain_cannot_set_uncaught_exception_capture&quot;&gt;&lt;code&gt;ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">Попытка использовать &lt;a href=&quot;process#process_process_setuncaughtexceptioncapturecallback_fn&quot;&gt; &lt;code&gt;process.setUncaughtExceptionCaptureCallback()&lt;/code&gt; &lt;/a&gt; вызывает ошибку &lt;a href=&quot;errors#errors_err_domain_cannot_set_uncaught_exception_capture&quot;&gt; &lt;code&gt;ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21b131d9028db7e6607d213bfbc66c0ff665f5d4" translate="yes" xml:space="preserve">
          <source>Turning auto padding off will only work if the input data's length is a multiple of the ciphers block size.</source>
          <target state="translated">Выключение автоматической подкладки будет работать только в том случае,если длина входных данных кратна размеру блока шифров.</target>
        </trans-unit>
        <trans-unit id="33207f4af1d127df91481b71b60c34a426f9170e" translate="yes" xml:space="preserve">
          <source>Two Reading Modes</source>
          <target state="translated">Два режима чтения</target>
        </trans-unit>
        <trans-unit id="27d8454a7bd0ba08acf51f96558585ee7039de1c" translate="yes" xml:space="preserve">
          <source>Two reading modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="7dbaee6b3d72c5fb2d6b4e87ebb27439475283a2" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;events#events_class_eventtarget&quot;&gt;&amp;lt;EventTarget&amp;gt;&lt;/a&gt; The &lt;code&gt;EventTarget&lt;/code&gt; dispatching the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf3e2cffad5a828a7aa4148e91fb5cc50141041" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab2fdbf860e78b084aa29dd2be0b21f910fe1b8" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; Always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd98bdcf8d930cfc4fddad7bdbcbed014cb5963b" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; True if the event has not been canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592434911cf70ed7c8d94bc575c5dc4ad5fcd012" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; True if the event was created with the &lt;code&gt;cancelable&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc31d3d2b5210c7375845876ff2a16826ac9806" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b6894e9b972a02fbebf6decdecb826a9a08499" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; Returns &lt;code&gt;0&lt;/code&gt; while an event is not being dispatched, &lt;code&gt;2&lt;/code&gt; while it is being dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21a74a74290067e973bcaa8fa38d6218f2fc11f" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bad3fe9a9d788bf5ced613088a28a42982f43d" translate="yes" xml:space="preserve">
          <source>Type: Compile-time</source>
          <target state="translated">Тип:Время сборки</target>
        </trans-unit>
        <trans-unit id="2e2f71bebdcf0432ba9dae30fc4cd34d69a994d9" translate="yes" xml:space="preserve">
          <source>Type: Deprecation revoked</source>
          <target state="translated">Тип:Исключенная депрессия</target>
        </trans-unit>
        <trans-unit id="4afacd032dbf0b042ddec6e49a24f87b169ee946" translate="yes" xml:space="preserve">
          <source>Type: Documentation-only</source>
          <target state="translated">Тип:Только для документации</target>
        </trans-unit>
        <trans-unit id="f4038b1c0b648006573b34c3b0edb7a524d16ee2" translate="yes" xml:space="preserve">
          <source>Type: Documentation-only (supports &lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt;&lt;code&gt;--pending-deprecation&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Тип: только для документации (поддерживает &lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt; &lt;code&gt;--pending-deprecation&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c0334739797e8108100cffbf45a4decc971aeb44" translate="yes" xml:space="preserve">
          <source>Type: End-of-Life</source>
          <target state="translated">Тип:End-of-Life</target>
        </trans-unit>
        <trans-unit id="c05f59a4cce67895e11eed8826cf4cee5bd54571" translate="yes" xml:space="preserve">
          <source>Type: End-of-Life.</source>
          <target state="translated">Тип:Конец жизни.</target>
        </trans-unit>
        <trans-unit id="daf411b4184b37552deeb3149950b164297c489d" translate="yes" xml:space="preserve">
          <source>Type: Runtime</source>
          <target state="translated">Тип:Время исполнения</target>
        </trans-unit>
        <trans-unit id="ebfbea69b5d285abfce6c4bef135a0ed69b7b0de" translate="yes" xml:space="preserve">
          <source>Type: Runtime (supports &lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt;&lt;code&gt;--pending-deprecation&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Тип: время выполнения (поддерживает &lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt; &lt;code&gt;--pending-deprecation&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="024bfd95e02496791b2881c7c1f7dd42376280b5" translate="yes" xml:space="preserve">
          <source>Type: Runtime &lt;code&gt;Transform._transformState&lt;/code&gt; will be removed in future versions where it is no longer required due to simplification of the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="44f1ccbdc81b78ae74c2d0ae854796e4d7061770" translate="yes" xml:space="preserve">
          <source>Typed array slices are handled correctly now.</source>
          <target state="translated">Теперь типизированные фрагменты массива обрабатываются корректно.</target>
        </trans-unit>
        <trans-unit id="38f54df64da42601768ef91ee31423fac4d49160" translate="yes" xml:space="preserve">
          <source>Types of Streams</source>
          <target state="translated">Типы потоков</target>
        </trans-unit>
        <trans-unit id="d580373209dd6a1707a0a6d7b5661be32ac592f2" translate="yes" xml:space="preserve">
          <source>Types of streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7824c5156ab482008ad2ab94f44f8d1d1cdb802" translate="yes" xml:space="preserve">
          <source>Typically when wrapping a class instance, a finalize callback should be provided that simply deletes the native instance that is received as the &lt;code&gt;data&lt;/code&gt; argument to the finalize callback.</source>
          <target state="translated">Как правило, при упаковке экземпляра класса должен быть предоставлен обратный вызов finalize, который просто удаляет собственный экземпляр, полученный в качестве аргумента &lt;code&gt;data&lt;/code&gt; для обратного вызова finalize.</target>
        </trans-unit>
        <trans-unit id="f65c7601001c43a1759b63d4de8c6cbfa1fdec3a" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;response&lt;/code&gt; is a digitally signed object from the server's CA that contains information about server's certificate revocation status.</source>
          <target state="translated">Как правило, &lt;code&gt;response&lt;/code&gt; представляет собой объект с цифровой подписью от ЦС сервера, который содержит информацию о статусе отзыва сертификата сервера.</target>
        </trans-unit>
        <trans-unit id="1a77b330d905af0212c5c7ff0c6a442a27aabe49" translate="yes" xml:space="preserve">
          <source>Typically, the size of the current buffer is measured against the &lt;code&gt;highWaterMark&lt;/code&gt; in &lt;em&gt;bytes&lt;/em&gt;. However, after &lt;code&gt;setEncoding()&lt;/code&gt; is called, the comparison function will begin to measure the buffer's size in &lt;em&gt;characters&lt;/em&gt;.</source>
          <target state="translated">Обычно размер текущего буфера измеряется по &lt;code&gt;highWaterMark&lt;/code&gt; в &lt;em&gt;байтах&lt;/em&gt; . Однако после &lt;code&gt;setEncoding()&lt;/code&gt; функция сравнения начнет измерять размер буфера в &lt;em&gt;символах&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="219e224c2a9b92a6e101f6876f27314c5bbac679" translate="yes" xml:space="preserve">
          <source>Typically, this is managed through the number of &lt;code&gt;'disconnect'&lt;/code&gt; and &lt;code&gt;'message'&lt;/code&gt; listeners on the &lt;code&gt;process&lt;/code&gt; object. However, this method can be used to explicitly request a specific behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31db7cab86864065f3e106f86c44b514de32cc5" translate="yes" xml:space="preserve">
          <source>UDP/Datagram</source>
          <target state="translated">UDP/Datagram</target>
        </trans-unit>
        <trans-unit id="9f78a32c9e9869badba95ed40dd1e0e645130d94" translate="yes" xml:space="preserve">
          <source>UDP/Datagram Sockets</source>
          <target state="translated">UDP/Datagram Sockets</target>
        </trans-unit>
        <trans-unit id="fb468ca992673c8e389166a22b228b123bbe372c" translate="yes" xml:space="preserve">
          <source>UDP/datagram</source>
          <target state="translated">UDP/datagram</target>
        </trans-unit>
        <trans-unit id="acc6e7e4a3651dd476a52e5cffe0d3c3489395d7" translate="yes" xml:space="preserve">
          <source>UDP/datagram sockets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="0aa6d0c7243e93e5b8220dee83a136c689b755fa" translate="yes" xml:space="preserve">
          <source>URL Strings and URL Objects</source>
          <target state="translated">Строки и объекты URL-адреса</target>
        </trans-unit>
        <trans-unit id="668c7293b4faab50fd65a1538e196f37e127ab64" translate="yes" xml:space="preserve">
          <source>URL object support</source>
          <target state="translated">поддержка объектов URL-адреса</target>
        </trans-unit>
        <trans-unit id="79b0dc43bf17928f302cb7ea469c8717b49e7aa7" translate="yes" xml:space="preserve">
          <source>URL strings and URL objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c577ae467a3484accd429a3a86f410b07ee886" translate="yes" xml:space="preserve">
          <source>URL-based paths</source>
          <target state="translated">URL-пути</target>
        </trans-unit>
        <trans-unit id="b19e8d66e7f004e226c44a75766dadab7d09911a" translate="yes" xml:space="preserve">
          <source>URLSearchParams</source>
          <target state="translated">URLSearchParams</target>
        </trans-unit>
        <trans-unit id="aaa0bde7f5196da87592a553fbff4a7d60686471" translate="yes" xml:space="preserve">
          <source>URLs are permitted to only contain a certain range of characters. Any character falling outside of that range must be encoded. How such characters are encoded, and which characters to encode depends entirely on where the character is located within the structure of the URL.</source>
          <target state="translated">URL-адреса могут содержать только определенный диапазон символов.Любой символ,выходящий за пределы этого диапазона,должен быть закодирован.Как кодируются такие символы,и какие символы кодировать,полностью зависит от того,где этот символ находится в структуре URL-адреса.</target>
        </trans-unit>
        <trans-unit id="1caa901ddac6183bbfa527108f80fb9a81c3fb50" translate="yes" xml:space="preserve">
          <source>URLs with a &lt;code&gt;file:&lt;/code&gt; scheme will now always use the correct number of slashes regardless of &lt;code&gt;slashes&lt;/code&gt; option. A false-y &lt;code&gt;slashes&lt;/code&gt; option with no protocol is now also respected at all times.</source>
          <target state="translated">URL-адреса с &lt;code&gt;file:&lt;/code&gt; схема теперь всегда будет использовать правильное количество косых черт независимо от параметра &lt;code&gt;slashes&lt;/code&gt; . Опция ложных &lt;code&gt;slashes&lt;/code&gt; y без протокола теперь также всегда соблюдается.</target>
        </trans-unit>
        <trans-unit id="7ce43f682f8e00790c8ef30d56b7ba3f345e48bf" translate="yes" xml:space="preserve">
          <source>URLs with a &lt;code&gt;file:&lt;/code&gt; scheme will now always use the correct number of slashes regardless of &lt;code&gt;slashes&lt;/code&gt; option. A falsy &lt;code&gt;slashes&lt;/code&gt; option with no protocol is now also respected at all times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf77927f71e28dcf1f204b6a54ebaa27e8f22d5" translate="yes" xml:space="preserve">
          <source>UTF-8 encodes the &lt;code&gt;input&lt;/code&gt; string and returns a &lt;code&gt;Uint8Array&lt;/code&gt; containing the encoded bytes.</source>
          <target state="translated">UTF-8 кодирует &lt;code&gt;input&lt;/code&gt; строку и возвращает &lt;code&gt;Uint8Array&lt;/code&gt; , содержащий закодированные байты.</target>
        </trans-unit>
        <trans-unit id="b71146a62fb63a8add8a5579d875bb69309a465e" translate="yes" xml:space="preserve">
          <source>UTF-8 encodes the &lt;code&gt;src&lt;/code&gt; string to the &lt;code&gt;dest&lt;/code&gt; Uint8Array and returns an object containing the read Unicode code units and written UTF-8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a020ddc6f85f9747d28e1db856f35e5132b29d" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions only emit the &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event if the &lt;code&gt;repl&lt;/code&gt; is used as standalone program. If the &lt;code&gt;repl&lt;/code&gt; is included anywhere in another application, adding a listener for this event will throw an &lt;a href=&quot;errors#errors_err_invalid_repl_input&quot;&gt;&lt;code&gt;ERR_INVALID_REPL_INPUT&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">Неперехваченные исключения &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt; &lt;code&gt;'uncaughtException'&lt;/code&gt; &lt;/a&gt; событие uncaughtException только в том случае, если &lt;code&gt;repl&lt;/code&gt; используется как отдельная программа. Если &lt;code&gt;repl&lt;/code&gt; включен где-либо в другом приложении, добавление прослушивателя для этого события вызовет исключение &lt;a href=&quot;errors#errors_err_invalid_repl_input&quot;&gt; &lt;code&gt;ERR_INVALID_REPL_INPUT&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00499514ac2e595db5c7987996d23850bbb67efb" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions only emit the &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event in the standalone REPL. Adding a listener for this event in a REPL within another Node.js program throws &lt;a href=&quot;errors#errors_err_invalid_repl_input&quot;&gt;&lt;code&gt;ERR_INVALID_REPL_INPUT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12780a16241be2fa7756cbd98a691718ec9bd790" translate="yes" xml:space="preserve">
          <source>Undefined value error is identified by &lt;code&gt;code: 'ERR_HTTP_INVALID_HEADER_VALUE'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355754b0f03869d3cdd89f47abdc47135392a8b0" translate="yes" xml:space="preserve">
          <source>Under normal circumstances, there is no need to modify the report triggering signal. However, if &lt;code&gt;SIGUSR2&lt;/code&gt; is already used for other purposes, then this flag helps to change the signal for report generation and preserve the original meaning of &lt;code&gt;SIGUSR2&lt;/code&gt; for the said purposes.</source>
          <target state="translated">В нормальных условиях нет необходимости изменять сигнал запуска отчета. Однако, если &lt;code&gt;SIGUSR2&lt;/code&gt; уже используется для других целей, то этот флаг помогает изменить сигнал для генерации отчета и сохранить исходное значение &lt;code&gt;SIGUSR2&lt;/code&gt; для указанных целей.</target>
        </trans-unit>
        <trans-unit id="91d9c4087497cf56cdc0c9a2696808d747e7494c" translate="yes" xml:space="preserve">
          <source>Under the hood, &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; uses the same operating system facilities as most other programs. For instance, &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; will almost always resolve a given name the same way as the &lt;code&gt;ping&lt;/code&gt; command. On most POSIX-like operating systems, the behavior of the &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; function can be modified by changing settings in &lt;a href=&quot;http://man7.org/linux/man-pages/man5/nsswitch.conf.5.html&quot;&gt;&lt;code&gt;nsswitch.conf(5)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;&lt;code&gt;resolv.conf(5)&lt;/code&gt;&lt;/a&gt;, but changing these files will change the behavior of all other programs running on the same operating system.</source>
          <target state="translated">Под капотом &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; использует те же возможности операционной системы, что и большинство других программ. Например, &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; почти всегда разрешает заданное имя так же, как команда &lt;code&gt;ping&lt;/code&gt; . В большинстве операционных систем, подобных POSIX, поведение функции &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; можно изменить, изменив настройки в &lt;a href=&quot;http://man7.org/linux/man-pages/man5/nsswitch.conf.5.html&quot;&gt; &lt;code&gt;nsswitch.conf(5)&lt;/code&gt; &lt;/a&gt; и / или &lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt; &lt;code&gt;resolv.conf(5)&lt;/code&gt; &lt;/a&gt; , но изменение этих файлов изменит поведение все другие программы, работающие в той же операционной системе.</target>
        </trans-unit>
        <trans-unit id="580e3fbd2559f3ee3cfa1776417d5a62f4c14b7c" translate="yes" xml:space="preserve">
          <source>Underscores instead of dashes are now allowed for Node.js options as well, in addition to V8 options.</source>
          <target state="translated">Подчеркивания вместо тире теперь разрешены и для опций Node.js,в дополнение к опциям V8.</target>
        </trans-unit>
        <trans-unit id="9c2e7282fb0e27b15982f88c5929897b3adfb4d7" translate="yes" xml:space="preserve">
          <source>Unflag Top-Level Await.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6535069f12c408de03e4a4245fa064b53e80ecc" translate="yes" xml:space="preserve">
          <source>Unfortunately, &lt;code&gt;napi_instanceof()&lt;/code&gt; does not protect against prototype manipulation. For example, the prototype of the database handle instance can be set to the prototype of the constructor for query handle instances. In this case, the database handle instance can appear as a query handle instance, and it will pass the &lt;code&gt;napi_instanceof()&lt;/code&gt; test for a query handle instance, while still containing a pointer to a database handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6da39f1b5c6c93e6c62b868278c8947240fb88" translate="yes" xml:space="preserve">
          <source>Unhandled &lt;code&gt;Promise&lt;/code&gt; rejections will now emit a process warning.</source>
          <target state="translated">При отклонении необработанных &lt;code&gt;Promise&lt;/code&gt; теперь будет появляться предупреждение процесса.</target>
        </trans-unit>
        <trans-unit id="464f051574cc9f087c75400c48b33f6db9e3b08d" translate="yes" xml:space="preserve">
          <source>Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.</source>
          <target state="translated">Необработанные отказы от обещаний не имеют смысла.В будущем не обработанные отказы от обещаний завершат процесс Node.js ненулевым кодом выхода.</target>
        </trans-unit>
        <trans-unit id="584854aa0e9467ba1a8c66c80f5e294682497d95" translate="yes" xml:space="preserve">
          <source>Unicode characters appearing within the host name of &lt;code&gt;input&lt;/code&gt; will be automatically converted to ASCII using the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571721324afa74a8ee617292febb542f1513c933" translate="yes" xml:space="preserve">
          <source>Unicode characters appearing within the hostname of &lt;code&gt;input&lt;/code&gt; will be automatically converted to ASCII using the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; algorithm.</source>
          <target state="translated">Символы Unicode, появляющиеся в имени хоста &lt;code&gt;input&lt;/code&gt; будут автоматически преобразованы в ASCII с использованием алгоритма &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12b0a12e37a0aa70166ef0879f9a3b2e21c18fa6" translate="yes" xml:space="preserve">
          <source>Unknown values for the resolved module location cause failures but are not guaranteed to be forward compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44850afeb4065072620c926d0775df5f7048af1" translate="yes" xml:space="preserve">
          <source>Unless an application is dynamically generating and running code, &lt;code&gt;ReferenceError&lt;/code&gt; instances indicate a bug in the code or its dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929fece4ad5f5e7b4b1b96bae39ed7f671795daa" translate="yes" xml:space="preserve">
          <source>Unless an application is dynamically generating and running code, &lt;code&gt;ReferenceError&lt;/code&gt; instances should always be considered a bug in the code or its dependencies.</source>
          <target state="translated">Если приложение динамически не генерирует и не запускает код, экземпляры &lt;code&gt;ReferenceError&lt;/code&gt; всегда следует рассматривать как ошибку в коде или его зависимостях.</target>
        </trans-unit>
        <trans-unit id="fe2b51adbc6c7b0bc926ec919779dce328f8537f" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified when creating a &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; instance, each &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; thread has its own copy of &lt;code&gt;process.env&lt;/code&gt;, based on its parent thread&amp;rsquo;s &lt;code&gt;process.env&lt;/code&gt;, or whatever was specified as the &lt;code&gt;env&lt;/code&gt; option to the &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor. Changes to &lt;code&gt;process.env&lt;/code&gt; will not be visible across &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, and only the main thread can make changes that are visible to the operating system or to native add-ons.</source>
          <target state="translated">Если явно не указано при создании &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; экземпляра, каждый &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; поток имеет свою собственную копию &lt;code&gt;process.env&lt;/code&gt; , на основе родительского потока &lt;code&gt;process.env&lt;/code&gt; , или что был указан в качестве &lt;code&gt;env&lt;/code&gt; опции к &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; конструктора. Изменения в &lt;code&gt;process.env&lt;/code&gt; не будут видны для всех &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; потоков, и только основной поток может вносить изменения, которые видны операционной системе или собственным надстройкам.</target>
        </trans-unit>
        <trans-unit id="a72e9d9932fe774a0515db2c6aaea624c04effad" translate="yes" xml:space="preserve">
          <source>Unless for reasons discussed in &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object Lifetime Management&lt;/a&gt;, creating a handle and/or callback scope inside a &lt;code&gt;napi_callback&lt;/code&gt; is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edc9ad8deb45d66b9a4ce8ca1ee4d65518cb9fc" translate="yes" xml:space="preserve">
          <source>Unless for reasons discussed in &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object Lifetime Management&lt;/a&gt;, creating a handle and/or callback scope inside the function body is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2172d325e09251aae77841665a275f9f12e96c85" translate="yes" xml:space="preserve">
          <source>Unless otherwise scoped within blocks or functions, variables declared either implicitly or using the &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt; keywords are declared at the global scope.</source>
          <target state="translated">Если иное не ограничено блоками или функциями, переменные, объявленные неявно или с использованием ключевых слов &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; или &lt;code&gt;var&lt;/code&gt; , объявляются в глобальной области.</target>
        </trans-unit>
        <trans-unit id="f2b9cb312ebc7377e0acc37ab64028e168b79e3b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#n_api_napi_add_env_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_env_cleanup_hook&lt;/code&gt;&lt;/a&gt;, the hook is allowed to be asynchronous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738279034066201991d76c70c2c3ad5d7acd5fb5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#process_process_hrtime_time&quot;&gt;&lt;code&gt;process.hrtime()&lt;/code&gt;&lt;/a&gt;, it does not support an additional &lt;code&gt;time&lt;/code&gt; argument since the difference can just be computed directly by subtraction of the two &lt;code&gt;bigint&lt;/code&gt;s.</source>
          <target state="translated">В отличие от &lt;a href=&quot;#process_process_hrtime_time&quot;&gt; &lt;code&gt;process.hrtime()&lt;/code&gt; &lt;/a&gt; , он не поддерживает дополнительный аргумент &lt;code&gt;time&lt;/code&gt; так как разницу можно просто вычислить путем вычитания двух &lt;code&gt;bigint&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="a7d31182b596602990e6a1b35091501ddc7cd0bd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push(chunk)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;stream.unshift(chunk)&lt;/code&gt; will not end the reading process by resetting the internal reading state of the stream. This can cause unexpected results if &lt;code&gt;readable.unshift()&lt;/code&gt; is called during a read (i.e. from within a &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;stream._read()&lt;/code&gt;&lt;/a&gt; implementation on a custom stream). Following the call to &lt;code&gt;readable.unshift()&lt;/code&gt; with an immediate &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push('')&lt;/code&gt;&lt;/a&gt; will reset the reading state appropriately, however it is best to simply avoid calling &lt;code&gt;readable.unshift()&lt;/code&gt; while in the process of performing a read.</source>
          <target state="translated">В отличие от &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push(chunk)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;stream.unshift(chunk)&lt;/code&gt; не завершает процесс чтения, сбрасывая внутреннее состояние чтения потока. Это может привести к неожиданным результатам, если &lt;code&gt;readable.unshift()&lt;/code&gt; вызывается во время чтения (т. &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;stream._read()&lt;/code&gt; &lt;/a&gt; реализации stream._read () в настраиваемом потоке). После вызова &lt;code&gt;readable.unshift()&lt;/code&gt; с немедленным &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push('')&lt;/code&gt; &lt;/a&gt; состояние чтения будет соответствующим образом сброшено, однако лучше просто избегать вызова &lt;code&gt;readable.unshift()&lt;/code&gt; в процессе выполнения чтения.</target>
        </trans-unit>
        <trans-unit id="ffbea780c221ab67ef22ff2efead15150ae9d4ad" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;querystring&quot;&gt;&lt;code&gt;querystring&lt;/code&gt;&lt;/a&gt; module, duplicate keys in the form of array values are not allowed. Arrays are stringified using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString&quot;&gt;&lt;code&gt;array.toString()&lt;/code&gt;&lt;/a&gt;, which simply joins all array elements with commas.</source>
          <target state="translated">В отличие от модуля &lt;a href=&quot;querystring&quot;&gt; &lt;code&gt;querystring&lt;/code&gt; &lt;/a&gt; , дублирование ключей в виде значений массива не допускается. Массивы структурируются с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString&quot;&gt; &lt;code&gt;array.toString()&lt;/code&gt; &lt;/a&gt; , которая просто объединяет все элементы массива запятыми.</target>
        </trans-unit>
        <trans-unit id="cf1a2bd2bcaee5665438d46897ea1c835ab3373a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;EventEmitter&lt;/code&gt;, any given &lt;code&gt;listener&lt;/code&gt; can be registered at most once per event &lt;code&gt;type&lt;/code&gt;. Attempts to register a &lt;code&gt;listener&lt;/code&gt; multiple times are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93286044bb9cc680edddcad0e702f7630a603e80" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;child_process&lt;/code&gt; or &lt;code&gt;cluster&lt;/code&gt;, &lt;code&gt;worker_threads&lt;/code&gt; can share memory. They do so by transferring &lt;code&gt;ArrayBuffer&lt;/code&gt; instances or sharing &lt;code&gt;SharedArrayBuffer&lt;/code&gt; instances.</source>
          <target state="translated">В отличие от &lt;code&gt;child_process&lt;/code&gt; или &lt;code&gt;cluster&lt;/code&gt; , &lt;code&gt;worker_threads&lt;/code&gt; может совместно использовать память. Они делают это путем передачи экземпляров &lt;code&gt;ArrayBuffer&lt;/code&gt; или совместного &lt;code&gt;SharedArrayBuffer&lt;/code&gt; экземпляров SharedArrayBuffer .</target>
        </trans-unit>
        <trans-unit id="786c293ea8a2a263e26d57c1c94d19f2b5a49165" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;eval&lt;/code&gt;, this function does not allow the script to access the current lexical scope, and therefore also does not allow to access the &lt;a href=&quot;modules#modules_the_module_scope&quot;&gt;module scope&lt;/a&gt;, meaning that pseudo-globals such as &lt;code&gt;require&lt;/code&gt; will not be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31b651c0bd301bf713d75fd4cc4cb768e5aecc6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;vm.Script&lt;/code&gt; however, every &lt;code&gt;vm.Module&lt;/code&gt; object is bound to a context from its creation. Operations on &lt;code&gt;vm.Module&lt;/code&gt; objects are intrinsically asynchronous, in contrast with the synchronous nature of &lt;code&gt;vm.Script&lt;/code&gt; objects. The use of 'async' functions can help with manipulating &lt;code&gt;vm.Module&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc66008fe7449b513d18dc2e492a0bd73292fdec" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;vm.Script&lt;/code&gt; however, every &lt;code&gt;vm.SourceTextModule&lt;/code&gt; object is bound to a context from its creation. Operations on &lt;code&gt;vm.SourceTextModule&lt;/code&gt; objects are intrinsically asynchronous, in contrast with the synchronous nature of &lt;code&gt;vm.Script&lt;/code&gt; objects. With the help of async functions, however, manipulating &lt;code&gt;vm.SourceTextModule&lt;/code&gt; objects is fairly straightforward.</source>
          <target state="translated">Однако, в отличие от &lt;code&gt;vm.Script&lt;/code&gt; , каждый объект &lt;code&gt;vm.SourceTextModule&lt;/code&gt; привязан к контексту с момента его создания. Операции с объектами &lt;code&gt;vm.SourceTextModule&lt;/code&gt; по своей сути асинхронны, в отличие от синхронной природы объектов &lt;code&gt;vm.Script&lt;/code&gt; . Однако с помощью асинхронных функций манипулировать объектами &lt;code&gt;vm.SourceTextModule&lt;/code&gt; довольно просто.</target>
        </trans-unit>
        <trans-unit id="0599776b2acdfbdb39a04e0dc3671e103e9a70bf" translate="yes" xml:space="preserve">
          <source>Unlike modules written in JavaScript, developing and deploying Node.js native addons using N-API requires an additional set of tools. Besides the basic tools required to develop for Node.js, the native addon developer requires a toolchain that can compile C and C++ code into a binary. In addition, depending upon how the native addon is deployed, the &lt;em&gt;user&lt;/em&gt; of the native addon will also need to have a C/C++ toolchain installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5877252fff27f076a79408216302ad7142ca78" translate="yes" xml:space="preserve">
          <source>Unlike other methods operating on &lt;code&gt;Module&lt;/code&gt;, this function completes synchronously and returns nothing.</source>
          <target state="translated">В отличие от других методов, работающих с &lt;code&gt;Module&lt;/code&gt; , эта функция завершается синхронно и ничего не возвращает.</target>
        </trans-unit>
        <trans-unit id="d88dff4d6b12aaa62861c546611f134585732b86" translate="yes" xml:space="preserve">
          <source>Unlike the 16 kb default &lt;code&gt;highWaterMark&lt;/code&gt; for a readable stream, the stream returned by this method has a default &lt;code&gt;highWaterMark&lt;/code&gt; of 64 kb.</source>
          <target state="translated">В отличие от &lt;code&gt;highWaterMark&lt;/code&gt; по умолчанию 16 кб для читаемого потока поток, возвращаемый этим методом, имеет значение &lt;code&gt;highWaterMark&lt;/code&gt; по умолчанию 64 кб.</target>
        </trans-unit>
        <trans-unit id="c89fbd3cb8564198493b0872bc897f53689f1cdc" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fork.2.html&quot;&gt;&lt;code&gt;fork(2)&lt;/code&gt;&lt;/a&gt; POSIX system call, &lt;code&gt;child_process.fork()&lt;/code&gt; does not clone the current process.</source>
          <target state="translated">В отличие от системного вызова POSIX &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fork.2.html&quot;&gt; &lt;code&gt;fork(2)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;child_process.fork()&lt;/code&gt; не клонирует текущий процесс.</target>
        </trans-unit>
        <trans-unit id="14ecf150019ebe6bc4270fdded6d714de98dea3b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;http://man7.org/linux/man-pages/man3/exec.3.html&quot;&gt;&lt;code&gt;exec(3)&lt;/code&gt;&lt;/a&gt; POSIX system call, &lt;code&gt;child_process.exec()&lt;/code&gt; does not replace the existing process and uses a shell to execute the command.</source>
          <target state="translated">В отличие от системного вызова POSIX &lt;a href=&quot;http://man7.org/linux/man-pages/man3/exec.3.html&quot;&gt; &lt;code&gt;exec(3)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;child_process.exec()&lt;/code&gt; не заменяет существующий процесс и использует оболочку для выполнения команды.</target>
        </trans-unit>
        <trans-unit id="8550f7544a3f4ee9abeb8cba1ce111534a3ad502" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;https&lt;/code&gt; API, &lt;code&gt;tls.connect()&lt;/code&gt; does not enable the SNI (Server Name Indication) extension by default, which may cause some servers to return an incorrect certificate or reject the connection altogether. To enable SNI, set the &lt;code&gt;servername&lt;/code&gt; option in addition to &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a651eaa44463d71d0ba17228140a40f73da19e4" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;request&lt;/code&gt; object, if the response closes prematurely, the &lt;code&gt;response&lt;/code&gt; object does not emit an &lt;code&gt;'error'&lt;/code&gt; event but instead emits the &lt;code&gt;'aborted'&lt;/code&gt; event.</source>
          <target state="translated">В отличие от объекта &lt;code&gt;request&lt;/code&gt; , если ответ закрывается преждевременно, объект &lt;code&gt;response&lt;/code&gt; не генерирует событие &lt;code&gt;'error'&lt;/code&gt; а вместо этого генерирует событие &lt;code&gt;'aborted'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="245fd6876839504d24af1a18605a9594e7b65485" translate="yes" xml:space="preserve">
          <source>Unlike the callback-based API (&lt;code&gt;fs.fstat()&lt;/code&gt;, &lt;code&gt;fs.fchown()&lt;/code&gt;, &lt;code&gt;fs.fchmod()&lt;/code&gt;, and so on), a numeric file descriptor is not used by the promise-based API. Instead, the promise-based API uses the &lt;code&gt;FileHandle&lt;/code&gt; class in order to help avoid accidental leaking of unclosed file descriptors after a &lt;code&gt;Promise&lt;/code&gt; is resolved or rejected.</source>
          <target state="translated">В отличие от API на основе обратного вызова ( &lt;code&gt;fs.fstat()&lt;/code&gt; , &lt;code&gt;fs.fchown()&lt;/code&gt; , &lt;code&gt;fs.fchmod()&lt;/code&gt; и т. Д.), Числовой файловый дескриптор не используется API на основе обещаний. Вместо этого API на основе обещаний использует класс &lt;code&gt;FileHandle&lt;/code&gt; , чтобы помочь избежать случайной утечки незакрытых файловых дескрипторов после разрешения или отклонения &lt;code&gt;Promise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aec5e222fb21197428b2bc12e8d85d03d3d352d7" translate="yes" xml:space="preserve">
          <source>Unregisters &lt;code&gt;fun&lt;/code&gt; as a function to be run with the &lt;code&gt;arg&lt;/code&gt; parameter once the current Node.js environment exits. Both the argument and the function value need to be exact matches.</source>
          <target state="translated">Отменяет регистрацию &lt;code&gt;fun&lt;/code&gt; как функцию, запускаемую с параметром &lt;code&gt;arg&lt;/code&gt; после выхода из текущей среды Node.js. И аргумент, и значение функции должны точно совпадать.</target>
        </trans-unit>
        <trans-unit id="d18fe6d2e5688021879f7a873899d3115ce6e749" translate="yes" xml:space="preserve">
          <source>Unregisters the cleanup hook corresponding to &lt;code&gt;remove_handle&lt;/code&gt;. This will prevent the hook from being executed, unless it has already started executing. This must be called on any &lt;code&gt;napi_async_cleanup_hook_handle&lt;/code&gt; value obtained from &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c4b2669e9c330ac9f73450acc1e9a90e0c45de" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;Hmac&lt;/code&gt; content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">Обновление &lt;code&gt;Hmac&lt;/code&gt; контента с заданными &lt;code&gt;data&lt;/code&gt; , кодирование которых даны в &lt;code&gt;inputEncoding&lt;/code&gt; . Если &lt;code&gt;encoding&lt;/code&gt; не указана, а &lt;code&gt;data&lt;/code&gt; представляют собой строку, применяется кодировка &lt;code&gt;'utf8'&lt;/code&gt; . Если &lt;code&gt;data&lt;/code&gt; представляют собой &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; , &lt;code&gt;inputEncoding&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="93605dc813a8e916582ddbffd733db79b79cce3c" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;Sign&lt;/code&gt; content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">Обновляет содержимое &lt;code&gt;Sign&lt;/code&gt; заданными &lt;code&gt;data&lt;/code&gt; , кодировка которых указана в &lt;code&gt;inputEncoding&lt;/code&gt; . Если &lt;code&gt;encoding&lt;/code&gt; не указана, а &lt;code&gt;data&lt;/code&gt; представляют собой строку, применяется кодировка &lt;code&gt;'utf8'&lt;/code&gt; . Если &lt;code&gt;data&lt;/code&gt; представляют собой &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; , &lt;code&gt;inputEncoding&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="a2260478143ea14e9583ad4e3b793657f13996f1" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;Verify&lt;/code&gt; content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">Обновление &lt;code&gt;Verify&lt;/code&gt; контента с заданными &lt;code&gt;data&lt;/code&gt; , кодирование которых даны в &lt;code&gt;inputEncoding&lt;/code&gt; . Если &lt;code&gt;inputEncoding&lt;/code&gt; не указан , а &lt;code&gt;data&lt;/code&gt; являются строкой, применяется кодировка &lt;code&gt;'utf8'&lt;/code&gt; . Если &lt;code&gt;data&lt;/code&gt; представляют собой &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; , &lt;code&gt;inputEncoding&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="77d2af3d6057a23de355899c59dd7f7a41c92d30" translate="yes" xml:space="preserve">
          <source>Updates the cipher with &lt;code&gt;data&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is given, the &lt;code&gt;data&lt;/code&gt; argument is a string using the specified encoding. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is not given, &lt;code&gt;data&lt;/code&gt; must be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">Обновляет шифр &lt;code&gt;data&lt;/code&gt; . Если &lt;code&gt;inputEncoding&lt;/code&gt; аргумент inputEncoding, аргумент &lt;code&gt;data&lt;/code&gt; представляет собой строку, использующую указанную кодировку. Если аргумент &lt;code&gt;inputEncoding&lt;/code&gt; не указан, &lt;code&gt;data&lt;/code&gt; должны быть &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; . Если &lt;code&gt;data&lt;/code&gt; представляют собой &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; , &lt;code&gt;inputEncoding&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="db6770b018c405d1e79d9580f71bd8cf8282662f" translate="yes" xml:space="preserve">
          <source>Updates the current local settings for this &lt;code&gt;Http2Session&lt;/code&gt; and sends a new &lt;code&gt;SETTINGS&lt;/code&gt; frame to the connected HTTP/2 peer.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; текущие локальные параметры для этого сеанса Http2Session и отправляет новый кадр &lt;code&gt;SETTINGS&lt;/code&gt; подключенному одноранговому узлу HTTP / 2.</target>
        </trans-unit>
        <trans-unit id="957c600a690a3a36412946efac93320156d3eb42" translate="yes" xml:space="preserve">
          <source>Updates the decipher with &lt;code&gt;data&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is given, the &lt;code&gt;data&lt;/code&gt; argument is a string using the specified encoding. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is not given, &lt;code&gt;data&lt;/code&gt; must be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">Обновляет дешифратор &lt;code&gt;data&lt;/code&gt; . Если &lt;code&gt;inputEncoding&lt;/code&gt; аргумент inputEncoding, аргумент &lt;code&gt;data&lt;/code&gt; представляет собой строку, использующую указанную кодировку. Если аргумент &lt;code&gt;inputEncoding&lt;/code&gt; не указан, &lt;code&gt;data&lt;/code&gt; должны быть &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; . Если &lt;code&gt;data&lt;/code&gt; есть &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;inputEncoding&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="5ed45c49beca4ce2a38119d874096a97e38115cc" translate="yes" xml:space="preserve">
          <source>Updates the hash content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">Обновляет хэш-содержимое заданными &lt;code&gt;data&lt;/code&gt; , кодировка которых указана в &lt;code&gt;inputEncoding&lt;/code&gt; . Если &lt;code&gt;encoding&lt;/code&gt; не указана, а &lt;code&gt;data&lt;/code&gt; представляют собой строку, применяется кодировка &lt;code&gt;'utf8'&lt;/code&gt; . Если &lt;code&gt;data&lt;/code&gt; представляют собой &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; или &lt;code&gt;DataView&lt;/code&gt; , &lt;code&gt;inputEncoding&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="7d2950e7ca60835246638412bbc7c834bf90e01b" translate="yes" xml:space="preserve">
          <source>Updates the priority for this &lt;code&gt;Http2Stream&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; приоритет для этого экземпляра Http2Stream .</target>
        </trans-unit>
        <trans-unit id="da0f7a31471fb4f5f448dffafa53fb94e1f6c0de" translate="yes" xml:space="preserve">
          <source>Uploading precompiled binaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b150488cf43f5c486b4617e1a3281d94130a34" translate="yes" xml:space="preserve">
          <source>Upon assigning a value to the port, the value will first be converted to a string using &lt;code&gt;.toString()&lt;/code&gt;.</source>
          <target state="translated">После присвоения значения порту оно сначала будет преобразовано в строку с помощью &lt;code&gt;.toString()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8d1386e91a02cb0c85bee48bbf4edcff35a05d0" translate="yes" xml:space="preserve">
          <source>Upon creation of a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; a &lt;code&gt;napi_finalize&lt;/code&gt; callback can be provided. This callback will be invoked on the main thread when the thread-safe function is about to be destroyed. It receives the context and the finalize data given during construction, and provides an opportunity for cleaning up after the threads e.g. by calling &lt;code&gt;uv_thread_join()&lt;/code&gt;. &lt;strong&gt;Aside from the main loop thread, no threads should be using the thread-safe function after the finalize callback completes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21b6b47f79ea7bf24d3448220aa0114efedd561" translate="yes" xml:space="preserve">
          <source>Upon creation of a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; a &lt;code&gt;napi_finalize&lt;/code&gt; callback can be provided. This callback will be invoked on the main thread when the thread-safe function is about to be destroyed. It receives the context and the finalize data given during construction, and provides an opportunity for cleaning up after the threads e.g. by calling &lt;code&gt;uv_thread_join()&lt;/code&gt;. &lt;strong&gt;It is important that, aside from the main loop thread, there be no threads left using the thread-safe function after the finalize callback completes.&lt;/strong&gt;</source>
          <target state="translated">При создании &lt;code&gt;napi_threadsafe_function&lt;/code&gt; &lt;code&gt;napi_finalize&lt;/code&gt; может быть предусмотрен обратный вызов. Этот обратный вызов будет вызван в основном потоке, когда потокобезопасная функция вот-вот будет уничтожена. Он получает контекст и данные финализации, указанные во время построения, и предоставляет возможность для очистки после потоков, например, путем вызова &lt;code&gt;uv_thread_join()&lt;/code&gt; . &lt;strong&gt;Важно, чтобы, кроме потока основного цикла, не оставалось потоков, использующих потокобезопасную функцию после завершения обратного вызова finalize.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0ce53004853a0d3cc308cfeea91d8ad9ccd6880" translate="yes" xml:space="preserve">
          <source>Upon success, the &lt;code&gt;Promise&lt;/code&gt; is resolved without arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="2de39f1fb97e8b9fad2a13c376d5983dda0775fd" translate="yes" xml:space="preserve">
          <source>Usage &amp;amp; Example</source>
          <target state="translated">Использование и пример</target>
        </trans-unit>
        <trans-unit id="e52c8372eec3736296f93f87fe2977417bbb2721" translate="yes" xml:space="preserve">
          <source>Usage and example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36ee1550e836b658bce06b4f1d49c2dec79550a" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;ECDH&lt;/code&gt; with non-dynamically generated key pairs has been simplified. Now, &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt;&lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt;&lt;/a&gt; can be called with a preselected private key and the associated public point (key) will be computed and stored in the object. This allows code to only store and provide the private part of the EC key pair. &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt;&lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt;&lt;/a&gt; now also validates that the private key is valid for the selected curve.</source>
          <target state="translated">&lt;code&gt;ECDH&lt;/code&gt; использование ECDH с нединамически генерируемыми парами ключей. Теперь &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt; &lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt; &lt;/a&gt; может быть вызван с предварительно выбранным закрытым ключом, и связанная публичная точка (ключ) будет вычислена и сохранена в объекте. Это позволяет коду хранить и предоставлять только частную часть пары ключей EC. &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt; &lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt; &lt;/a&gt; теперь также проверяет, что закрытый ключ действителен для выбранной кривой.</target>
        </trans-unit>
        <trans-unit id="5ff118bed7c719c614a84434b5439be16bf71d2c" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;util.inherits()&lt;/code&gt; is discouraged. Please use the ES6 &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; keywords to get language level inheritance support. Also note that the two styles are &lt;a href=&quot;https://github.com/nodejs/node/issues/4179&quot;&gt;semantically incompatible&lt;/a&gt;.</source>
          <target state="translated">Использование &lt;code&gt;util.inherits()&lt;/code&gt; не рекомендуется. Используйте &lt;code&gt;class&lt;/code&gt; ES6 и ключевые слова &lt;code&gt;extends&lt;/code&gt; , чтобы получить поддержку наследования на уровне языка. Также обратите внимание, что эти два стиля &lt;a href=&quot;https://github.com/nodejs/node/issues/4179&quot;&gt;семантически несовместимы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7631402d6fe2c428c59f2ef506230c3fbbc9e7d" translate="yes" xml:space="preserve">
          <source>Usage with &lt;code&gt;async/await&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="eae67d2af37c578abfdf9b05166c5445461a54fd" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt;&lt;code&gt;crypto.getCurves()&lt;/code&gt;&lt;/a&gt; to obtain a list of available curve names. On recent OpenSSL releases, &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; will also display the name and description of each available elliptic curve.</source>
          <target state="translated">Используйте &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt; &lt;code&gt;crypto.getCurves()&lt;/code&gt; &lt;/a&gt; чтобы получить список доступных имен кривых. В последних выпусках OpenSSL &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; также будет отображать имя и описание каждой доступной эллиптической кривой.</target>
        </trans-unit>
        <trans-unit id="765064bc0f2ebbee5fd48d238b26225a203b8acc" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;async_hooks#async_hooks_asyncresource_runinasyncscope_fn_thisarg_args&quot;&gt;&lt;code&gt;asyncResource.runInAsyncScope()&lt;/code&gt;&lt;/a&gt; API instead which provides a much safer, and more convenient, alternative. See &lt;a href=&quot;https://github.com/nodejs/node/pull/18513&quot;&gt;https://github.com/nodejs/node/pull/18513&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;async_hooks#async_hooks_asyncresource_runinasyncscope_fn_thisarg_args&quot;&gt; &lt;code&gt;asyncResource.runInAsyncScope()&lt;/code&gt; &lt;/a&gt; используйте asyncResource.runInAsyncScope () API, который обеспечивает гораздо более безопасную и удобную альтернативу. См. &lt;a href=&quot;https://github.com/nodejs/node/pull/18513&quot;&gt;Https://github.com/nodejs/node/pull/18513&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49f7b175b350d863eddd6c45e7bde6196f5a3dae" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http#http_request_destroy_error&quot;&gt;&lt;code&gt;request.destroy()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;http#http_request_abort&quot;&gt;&lt;code&gt;request.abort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6154b148a1c536c520dcd143957f4ee42fa11bca" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http#http_response_writablefinished&quot;&gt;&lt;code&gt;response.writableFinished&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http#http_response_writableended&quot;&gt;&lt;code&gt;response.writableEnded&lt;/code&gt;&lt;/a&gt; accordingly instead to avoid the ambigiuty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fffe7297300dbe9e8fff2c0d9e6bf6dadca3c2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Content-Length&lt;/code&gt; or &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0002c56173cba9691148346f5ff59f5e6272f3f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cwd&lt;/code&gt; to specify the working directory from which the process is spawned. If not given, the default is to inherit the current working directory.</source>
          <target state="translated">Используйте &lt;code&gt;cwd&lt;/code&gt; , чтобы указать рабочий каталог, из которого запускается процесс. Если не указан, по умолчанию наследуется текущий рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="f76aedfcb8be71f942f01d87d5c0635892414e98" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;delete&lt;/code&gt; to delete a property from &lt;code&gt;process.env&lt;/code&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;delete&lt;/code&gt; для удаления свойства из &lt;code&gt;process.env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf939c90dc4dd9f69fea1af3d6551d592973f347" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;env&lt;/code&gt; to specify environment variables that will be visible to the new process, the default is &lt;a href=&quot;process#process_process_env&quot;&gt;&lt;code&gt;process.env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;env&lt;/code&gt; , чтобы указать переменные среды, которые будут видны новому процессу, по умолчанию - &lt;a href=&quot;process#process_process_env&quot;&gt; &lt;code&gt;process.env&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf8f57531e78c20b41a30f579a4c55918a56c3e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nc&lt;/code&gt; to connect to a Unix domain socket server:</source>
          <target state="translated">Используйте &lt;code&gt;nc&lt;/code&gt; для подключения к серверу сокетов домена Unix:</target>
        </trans-unit>
        <trans-unit id="356edf58e99c3593deffa78d682258b2fdf50801" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;require('crypto')&lt;/code&gt; to access this module.</source>
          <target state="translated">Используйте &lt;code&gt;require('crypto')&lt;/code&gt; для доступа к этому модулю.</target>
        </trans-unit>
        <trans-unit id="38303ef87943f896c6983d0f7cf9a70cfee6997e" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;#esm_dynamic_instantiate_hook&quot;&gt;dynamic instantiate hook&lt;/a&gt;</source>
          <target state="translated">Используйте &lt;a href=&quot;#esm_dynamic_instantiate_hook&quot;&gt;динамический экземпляр хука&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8deebbe7ac1f499b778249832e695a840225107" translate="yes" xml:space="preserve">
          <source>Use an insecure HTTP parser that accepts invalid HTTP headers. This may allow interoperability with non-conformant HTTP implementations. It may also allow request smuggling and other HTTP attacks that rely on invalid headers being accepted. Avoid using this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec969f970ae2da31370314777710e2a530ab15f" translate="yes" xml:space="preserve">
          <source>Use bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store. The default store is selectable at build-time.</source>
          <target state="translated">Используйте Mozilla CA store в комплекте с текущей версией Node.js или используйте OpenSSL CA store по умолчанию.Магазин по умолчанию выбирается во время сборки.</target>
        </trans-unit>
        <trans-unit id="66143e2c420f8a7613239f1e3efea9682fa4826d" translate="yes" xml:space="preserve">
          <source>Use care when dropping privileges:</source>
          <target state="translated">Будьте осторожны,когда отказываетесь от привилегий:</target>
        </trans-unit>
        <trans-unit id="c22810f5eadd6fdab3516f9428266e7d74af7b11" translate="yes" xml:space="preserve">
          <source>Use care when using &lt;code&gt;.searchParams&lt;/code&gt; to modify the &lt;code&gt;URL&lt;/code&gt; because, per the WHATWG specification, the &lt;code&gt;URLSearchParams&lt;/code&gt; object uses different rules to determine which characters to percent-encode. For instance, the &lt;code&gt;URL&lt;/code&gt; object will not percent encode the ASCII tilde (&lt;code&gt;~&lt;/code&gt;) character, while &lt;code&gt;URLSearchParams&lt;/code&gt; will always encode it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f880e14ac8f636e000356a9df1eb2bc8423b67a" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;SlowBuffer&lt;/code&gt; should be used only as a last resort &lt;em&gt;after&lt;/em&gt; a developer has observed undue memory retention in their applications.</source>
          <target state="translated">Использование &lt;code&gt;SlowBuffer&lt;/code&gt; следует использовать только в крайнем случае &lt;em&gt;после&lt;/em&gt; того, как разработчик отметил чрезмерное сохранение памяти в своих приложениях.</target>
        </trans-unit>
        <trans-unit id="fb9a785beb4586226520f84b421e62184beadeba" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;crypto.timingSafeEqual&lt;/code&gt; does not guarantee that the &lt;em&gt;surrounding&lt;/em&gt; code is timing-safe. Care should be taken to ensure that the surrounding code does not introduce timing vulnerabilities.</source>
          <target state="translated">Использование &lt;code&gt;crypto.timingSafeEqual&lt;/code&gt; не гарантирует, что &lt;em&gt;окружающий&lt;/em&gt; код безопасен по времени. Следует позаботиться о том, чтобы окружающий код не привносил временные уязвимости.</target>
        </trans-unit>
        <trans-unit id="a2d44bc65ec8f3fb2f025187a40ecd2da6969c33" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;readable.push('')&lt;/code&gt; is not recommended.</source>
          <target state="translated">Использование &lt;code&gt;readable.push('')&lt;/code&gt; не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="d7a18f27832e42f62a26d1adff869deccc220b01" translate="yes" xml:space="preserve">
          <source>Use of the &lt;a href=&quot;crypto#crypto_crypto_pbkdf2_password_salt_iterations_keylen_digest_callback&quot;&gt;&lt;code&gt;crypto.pbkdf2()&lt;/code&gt;&lt;/a&gt; API without specifying a digest was deprecated in Node.js 6.0 because the method defaulted to using the non-recommended &lt;code&gt;'SHA1'&lt;/code&gt; digest. Previously, a deprecation warning was printed. Starting in Node.js 8.0.0, calling &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; or &lt;code&gt;crypto.pbkdf2Sync()&lt;/code&gt; with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;undefined&lt;/code&gt; will throw a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">Использование API &lt;a href=&quot;crypto#crypto_crypto_pbkdf2_password_salt_iterations_keylen_digest_callback&quot;&gt; &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; &lt;/a&gt; без указания дайджеста было объявлено устаревшим в Node.js 6.0, потому что по умолчанию для этого метода использовался не рекомендуемый дайджест &lt;code&gt;'SHA1'&lt;/code&gt; . Ранее выводилось предупреждение об устаревании. Начиная с Node.js 8.0.0, вызов &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; или &lt;code&gt;crypto.pbkdf2Sync()&lt;/code&gt; с &lt;code&gt;digest&lt;/code&gt; установленным на &lt;code&gt;undefined&lt;/code&gt; , вызовет &lt;code&gt;TypeError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7240b7777dbbea1e8a1ef48b75d9dcfb9881251" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;101&lt;/code&gt; Informational status code is forbidden in HTTP/2.</source>
          <target state="translated">Использование информационного кода статуса &lt;code&gt;101&lt;/code&gt; в HTTP / 2 запрещено.</target>
        </trans-unit>
        <trans-unit id="e598d7c6a0b9a276ca5b3bfcb5495de0f13c1ad6" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;completer&lt;/code&gt; Function</source>
          <target state="translated">Использование в &lt;code&gt;completer&lt;/code&gt; функции</target>
        </trans-unit>
        <trans-unit id="d093439750831928b8de4711644263144b0afd9f" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;completer&lt;/code&gt; function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32435c7a197f2836dfd3532944c2482f4fd236" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;readable.pipe()&lt;/code&gt; method is recommended for most users as it has been implemented to provide the easiest way of consuming stream data. Developers that require more fine-grained control over the transfer and generation of data can use the &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;readable.on('readable')&lt;/code&gt;/&lt;code&gt;readable.read()&lt;/code&gt; or the &lt;code&gt;readable.pause()&lt;/code&gt;/&lt;code&gt;readable.resume()&lt;/code&gt; APIs.</source>
          <target state="translated">Для большинства пользователей рекомендуется использовать метод &lt;code&gt;readable.pipe()&lt;/code&gt; как он был реализован, чтобы обеспечить самый простой способ использования потоковых данных. Разработчики, которым требуется более детальный контроль над передачей и генерацией данных, могут использовать API-интерфейсы &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;readable.on('readable')&lt;/code&gt; / &lt;code&gt;readable.read()&lt;/code&gt; или &lt;code&gt;readable.pause()&lt;/code&gt; / &lt;code&gt;readable.resume()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51dda8e8d6b44f5c574aaf42f7777da76a59fa0f" translate="yes" xml:space="preserve">
          <source>Use of the API is unsafe.</source>
          <target state="translated">Использование API небезопасно.</target>
        </trans-unit>
        <trans-unit id="948edf4448016b2dd50434fa23064801c2a1cb22" translate="yes" xml:space="preserve">
          <source>Use of the legacy &lt;code&gt;url.parse()&lt;/code&gt; method is discouraged. Users should use the WHATWG &lt;code&gt;URL&lt;/code&gt; API. Because the &lt;code&gt;url.parse()&lt;/code&gt; method uses a lenient, non-standard algorithm for parsing URL strings, security issues can be introduced. Specifically, issues with &lt;a href=&quot;https://hackerone.com/reports/678487&quot;&gt;host name spoofing&lt;/a&gt; and incorrect handling of usernames and passwords have been identified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb58157819114bf578e605246aad486b041e117" translate="yes" xml:space="preserve">
          <source>Use of this pre-allocated internal memory pool is a key difference between calling &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; vs. &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;. Specifically, &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; will &lt;em&gt;never&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool, while &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool if &lt;code&gt;size&lt;/code&gt; is less than or equal to half &lt;a href=&quot;#buffer_class_property_buffer_poolsize&quot;&gt;&lt;code&gt;Buffer.poolSize&lt;/code&gt;&lt;/a&gt;. The difference is subtle but can be important when an application requires the additional performance that &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; provides.</source>
          <target state="translated">Использование этого предварительно выделенного пула внутренней памяти - ключевое различие между вызовом &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; и &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt; . В частности, &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; не будет &lt;em&gt;никогда&lt;/em&gt; использовать внутренний &lt;code&gt;Buffer&lt;/code&gt; бассейн, в то время как &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt; &lt;em&gt;будет&lt;/em&gt; использовать внутренний &lt;code&gt;Buffer&lt;/code&gt; бассейн , если &lt;code&gt;size&lt;/code&gt; меньше или равен половине &lt;a href=&quot;#buffer_class_property_buffer_poolsize&quot;&gt; &lt;code&gt;Buffer.poolSize&lt;/code&gt; &lt;/a&gt; . Разница небольшая, но может быть важна, когда приложению требуется дополнительная производительность, &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; обеспечивает Buffer.allocUnsafe () .</target>
        </trans-unit>
        <trans-unit id="e255a577e807bc002dfb0d84533a52b730e80888" translate="yes" xml:space="preserve">
          <source>Use of this pre-allocated internal memory pool is a key difference between calling &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; vs. &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;. Specifically, &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; will &lt;em&gt;never&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool, while &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool if &lt;code&gt;size&lt;/code&gt; is less than or equal to half &lt;a href=&quot;#buffer_class_property_buffer_poolsize&quot;&gt;&lt;code&gt;Buffer.poolSize&lt;/code&gt;&lt;/a&gt;. The difference is subtle but can be important when an application requires the additional performance that &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a11077ab4673062788e7639d751aef808d830d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&quot;scopes&quot;&lt;/code&gt; field of a manifest to set configuration for many resources at once. The &lt;code&gt;&quot;scopes&quot;&lt;/code&gt; field works by matching resources by their segments. If a scope or resource includes &lt;code&gt;&quot;cascade&quot;: true&lt;/code&gt;, unknown specifiers will be searched for in their containing scope. The containing scope for cascading is found by recursively reducing the resource URL by removing segments for &lt;a href=&quot;https://url.spec.whatwg.org/#special-scheme&quot;&gt;special schemes&lt;/a&gt;, keeping trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; suffixes, and removing the query and hash fragment. This leads to the eventual reduction of the URL to its origin. If the URL is non-special the scope will be located by the URL's origin. If no scope is found for the origin or in the case of opaque origins, a protocol string can be used as a scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c412511e5a0d8bdf92bc274feb5291adda3aa57" translate="yes" xml:space="preserve">
          <source>Use the dynamically loaded pointer to invoke the function.</source>
          <target state="translated">Для вызова функции используйте динамически загружаемый указатель.</target>
        </trans-unit>
        <trans-unit id="ae952fa27153fb5a58933981baea15f63402ec27" translate="yes" xml:space="preserve">
          <source>Use the internal &lt;code&gt;require()&lt;/code&gt; machinery to look up the location of a module, but rather than loading the module, just return the resolved filename.</source>
          <target state="translated">Используйте внутренний механизм &lt;code&gt;require()&lt;/code&gt; для поиска местоположения модуля, но вместо загрузки модуля просто верните разрешенное имя файла.</target>
        </trans-unit>
        <trans-unit id="15ee6e17c37012897af5f61e78384cc87974d16d" translate="yes" xml:space="preserve">
          <source>Use the specified file as a security policy.</source>
          <target state="translated">Используйте указанный файл в качестве политики безопасности.</target>
        </trans-unit>
        <trans-unit id="3380a8b2c6439c7c83ba160cfc5cef5210723c7c" translate="yes" xml:space="preserve">
          <source>Use this to determine what colors the terminal supports. Due to the nature of colors in terminals it is possible to either have false positives or false negatives. It depends on process information and the environment variables that may lie about what terminal is used. It is possible to pass in an &lt;code&gt;env&lt;/code&gt; object to simulate the usage of a specific terminal. This can be useful to check how specific environment settings behave.</source>
          <target state="translated">Используйте это, чтобы определить, какие цвета поддерживает терминал. Из-за характера цветов в терминалах возможны ложные срабатывания или ложные отрицательные результаты. Это зависит от информации о процессе и переменных среды, которые могут не соответствовать используемому терминалу. Можно передать объект &lt;code&gt;env&lt;/code&gt; для имитации использования определенного терминала. Это может быть полезно для проверки поведения конкретных настроек среды.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
