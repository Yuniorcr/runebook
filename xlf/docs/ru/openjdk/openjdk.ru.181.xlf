<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="431790292384e64efc177cdca9b3ed328240fae3" translate="yes" xml:space="preserve">
          <source>Whenever it is invoked on the same Permission object more than once during an execution of a Java application, the &lt;code&gt;hashCode&lt;/code&gt; method must consistently return the same integer. This integer need not remain consistent from one execution of an application to another execution of the same application.</source>
          <target state="translated">Каждый раз, когда он вызывается для одного и того же объекта Permission более одного раза во время выполнения приложения Java, метод &lt;code&gt;hashCode&lt;/code&gt; должен последовательно возвращать одно и то же целое число. Это целое число не обязательно должно оставаться непротиворечивым от одного выполнения приложения к другому выполнению того же самого приложения.</target>
        </trans-unit>
        <trans-unit id="588f7fe1bed2c7e664ebaf61ee198d0177166e9e" translate="yes" xml:space="preserve">
          <source>Whenever it is invoked on the same object more than once during an execution of a Java application, the &lt;code&gt;hashCode&lt;/code&gt; method must consistently return the same integer, provided no information used in &lt;code&gt;equals&lt;/code&gt; comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application.</source>
          <target state="translated">Всякий раз, когда он вызывается для одного и того же объекта более одного раза во время выполнения приложения Java, метод &lt;code&gt;hashCode&lt;/code&gt; должен последовательно возвращать одно и то же целое число, при условии, что никакая информация, используемая в &lt;code&gt;equals&lt;/code&gt; сравнениях для объекта, не изменяется. Это целое число не обязательно должно оставаться непротиворечивым от одного выполнения приложения к другому выполнению того же самого приложения.</target>
        </trans-unit>
        <trans-unit id="ffc62db80b67ec0b4098632184a3dc10efde0cdb" translate="yes" xml:space="preserve">
          <source>Whenever it succeeds, it calls the previously instantiated resource bundle's &lt;a href=&quot;#setParent(java.util.ResourceBundle)&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method with the new resource bundle. This continues until the list of names is exhausted or the current bundle already has a non-null parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ded5fcd7a735ce98c847740a18c44d83d66cc2" translate="yes" xml:space="preserve">
          <source>Whenever it succeeds, it calls the previously instantiated resource bundle's &lt;a href=&quot;resourcebundle#setParent-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method with the new resource bundle. This continues until the list of names is exhausted or the current bundle already has a non-null parent.</source>
          <target state="translated">В случае успеха он вызывает метод &lt;a href=&quot;resourcebundle#setParent-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setParent&lt;/code&gt; &lt;/a&gt; ранее созданного набора ресурсов с новым пакетом ресурсов. Это продолжается до тех пор, пока список имен не будет исчерпан или пока текущий пакет не имеет ненулевого родителя.</target>
        </trans-unit>
        <trans-unit id="57eb7967ad7144cde59c41a7d4448d0900ba0c25" translate="yes" xml:space="preserve">
          <source>Where 'name' is the &lt;code&gt;ExecutionControlProvider&lt;/code&gt;&lt;a href=&quot;executioncontrolprovider#name()&quot;&gt;name&lt;/a&gt;. Where 'param' is a Map key from &lt;a href=&quot;executioncontrolprovider#defaultParameters()&quot;&gt;&lt;code&gt;ExecutionControlProvider.defaultParameters()&lt;/code&gt;&lt;/a&gt; and the parenthesized value; See, for example, &lt;a href=&quot;../execution/jdiexecutioncontrolprovider&quot;&gt;&lt;code&gt;JdiExecutionControlProvider&lt;/code&gt;&lt;/a&gt;. Where 'identifier' is a sequence of &lt;a href=&quot;../../../../java.base/java/lang/character#isJavaIdentifierPart(int)&quot;&gt;Java identifier part characters&lt;/a&gt; from the Basic Multilingual Plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6905fb07fa47d960a6cc1c5c35a7ad900455a52" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;foo&lt;/code&gt; becomes a wrapper for the actual native method with the appended prefix &quot;wrapped_&quot;. Note that &quot;wrapped_&quot; would be a poor choice of prefix since it might conceivably form the name of an existing method thus something like &quot;$$$MyAgentWrapped$$$_&quot; would be better but would make these examples less readable.</source>
          <target state="translated">Где &lt;code&gt;foo&lt;/code&gt; становится оболочкой для собственно собственного метода с добавленным префиксом wrapped_. Обратите внимание, что &amp;laquo;wrapped_&amp;raquo; будет плохим выбором префикса, поскольку он, вероятно, может формировать имя существующего метода, поэтому что-то вроде &amp;laquo;$$$ MyAgentWrapped $$$ _&amp;raquo; было бы лучше, но сделало бы эти примеры менее читабельными.</target>
        </trans-unit>
        <trans-unit id="9fff88ed5ff71cb64ca036661748f73a8e3a0800" translate="yes" xml:space="preserve">
          <source>Where a file is registered with a watch service by means of a symbolic link then it is implementation specific if the watch continues to depend on the existence of the symbolic link after it is registered.</source>
          <target state="translated">Если файл зарегистрирован в часовом сервисе с помощью символической ссылки,то это специфическая реализация,если часы продолжают зависеть от наличия символической ссылки после регистрации.</target>
        </trans-unit>
        <trans-unit id="d790f6a28291e56f379a271ae7232a655fb1d865" translate="yes" xml:space="preserve">
          <source>Where a membership key is not source-specific and the underlying operation system supports source filtering, then the &lt;a href=&quot;#block(java.net.InetAddress)&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unblock(java.net.InetAddress)&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eef4e93d3c18e96b9b78253a20017e48bb542d" translate="yes" xml:space="preserve">
          <source>Where a membership key is not source-specific and the underlying operation system supports source filtering, then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">Если ключ членства не зависит от источника и соответствующая операционная система поддерживает фильтрацию источника, тогда методы &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt; могут использоваться для блокировки или разблокировки многоадресных дейтаграмм с определенных адресов источника.</target>
        </trans-unit>
        <trans-unit id="ef0ae8bbc1659706ac95235ca1ce689fe57f64b3" translate="yes" xml:space="preserve">
          <source>Where an I/O operation completes immediately, and the initiating thread is one of the pooled threads in the group then the completion handler may be invoked directly by the initiating thread. To avoid stack overflow, an implementation may impose a limit as to the number of activations on the thread stack. Some I/O operations may prohibit invoking the completion handler directly by the initiating thread (see &lt;a href=&quot;asynchronousserversocketchannel#accept(A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8898ed0b51f593284e7f77a4f867cd2fc2e666cb" translate="yes" xml:space="preserve">
          <source>Where an I/O operation completes immediately, and the initiating thread is one of the pooled threads in the group then the completion handler may be invoked directly by the initiating thread. To avoid stack overflow, an implementation may impose a limit as to the number of activations on the thread stack. Some I/O operations may prohibit invoking the completion handler directly by the initiating thread (see &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Если операция ввода-вывода завершается немедленно, а инициирующий поток является одним из потоков, объединенных в пул в группе, то обработчик завершения может быть вызван непосредственно инициирующим потоком. Чтобы избежать переполнения стека, реализация может наложить ограничение на количество активаций в стеке потока. Некоторые операции ввода-вывода могут запрещать вызов обработчика завершения непосредственно инициирующим потоком (см. &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="66ce7e87d0492095ddc6703b1b7f0c7420f96474" translate="yes" xml:space="preserve">
          <source>Where an implementation does not support any notion of group then this method always throws &lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;&lt;code&gt;UserPrincipalNotFoundException&lt;/code&gt;&lt;/a&gt;. Where the namespace for user accounts and groups is the same, then this method is identical to invoking &lt;a href=&quot;#lookupPrincipalByName(java.lang.String)&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bcdaf392a0bc8b6a2ade4e800476f90476c33e" translate="yes" xml:space="preserve">
          <source>Where an implementation does not support any notion of group then this method always throws &lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;&lt;code&gt;UserPrincipalNotFoundException&lt;/code&gt;&lt;/a&gt;. Where the namespace for user accounts and groups is the same, then this method is identical to invoking &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если реализация не поддерживает какое-либо понятие группы, этот метод всегда выдает &lt;a href=&quot;userprincipalnotfoundexception&quot;&gt; &lt;code&gt;UserPrincipalNotFoundException&lt;/code&gt; &lt;/a&gt; . Если пространство имен для учетных записей пользователей и групп одинаково, этот метод идентичен &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb723c111014ba92d8f87833b389ec9ea6719988" translate="yes" xml:space="preserve">
          <source>Where an implementation provides a means to start agents from the command-line interface, an agent is started by adding the following option to the command-line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f90c3240707b3d864205080111e67313bf0eee" translate="yes" xml:space="preserve">
          <source>Where an implementation supports an ACL model that differs from the NFSv4 defined ACL model then setting the initial ACL when creating the file must translate the ACL to the model supported by the file system. Methods that create a file should reject (by throwing &lt;a href=&quot;../../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;) any attempt to create a file that would be less secure as a result of the translation.</source>
          <target state="translated">Если реализация поддерживает модель ACL, которая отличается от модели ACL, определенной в NFSv4, то установка начального ACL при создании файла должна преобразовать ACL в модель, поддерживаемую файловой системой. Методы, которые создают файл, должны отклонять (бросая &lt;a href=&quot;../../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; ) любую попытку создать файл, который был бы менее безопасным в результате перевода.</target>
        </trans-unit>
        <trans-unit id="8b05be389f68d5924db16624428d14d236ca56aa" translate="yes" xml:space="preserve">
          <source>Where desired, &lt;a href=&quot;processbuilder#redirect-input&quot;&gt; process I/O can also be redirected&lt;/a&gt; using methods of the &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907849eb829645989d02022a9256583b35ccf13" translate="yes" xml:space="preserve">
          <source>Where desired, &lt;a href=&quot;processbuilder#redirect-input&quot;&gt; subprocess I/O can also be redirected&lt;/a&gt; using methods of the &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">При желании &lt;a href=&quot;processbuilder#redirect-input&quot;&gt;ввод-вывод подпроцесса также можно перенаправить&lt;/a&gt; с помощью методов класса &lt;a href=&quot;processbuilder&quot;&gt; &lt;code&gt;ProcessBuilder&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8cf0baa75731ca6a5102a9d1799ad35f096def7" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the attribute value. The attribute value is returned as a byte array (byte[]). The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to write the value of a user-defined attribute from a buffer (as if by invoking the &lt;a href=&quot;#write(java.lang.String,java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method), or byte array (byte[]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbeca4a7ecd10802c77529dde8b082e44d0dd19" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the attribute value. The attribute value is returned as a byte array (byte[]). The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to write the value of a user-defined attribute from a buffer (as if by invoking the &lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method), or byte array (byte[]).</source>
          <target state="translated">Если требуется динамический доступ к атрибутам файла, для чтения значения атрибута можно использовать метод &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; . Значение атрибута возвращается в виде байтового массива (byte []). Метод &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; может использоваться для записи значения определенного пользователем атрибута из буфера (как если бы путем вызова метода &lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; ) или байтового массива (byte []).</target>
        </trans-unit>
        <trans-unit id="ebb78ae3ef6ed103a9eb1696cdee777cab788dee" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fileownerattributeview&quot;&gt;&lt;code&gt;FileOwnerAttributeView&lt;/code&gt;&lt;/a&gt;, and in addition, the following attributes are supported:</source>
          <target state="translated">Если требуется динамический доступ к атрибутам файла, атрибуты, поддерживаемые этим представлением атрибутов, определены в &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;fileownerattributeview&quot;&gt; &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; &lt;/a&gt; , и, кроме того, поддерживаются следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="4e8ebe996cadf7a3b2a8cb30caf8f69a0b7ddda3" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by &lt;code&gt;
 BasicFileAttributeView&lt;/code&gt;, and in addition, the following attributes are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277ea500a19bef26e680e53fb1654aac09fa83bc" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by &lt;code&gt;BasicFileAttributeView&lt;/code&gt;, and in addition, the following attributes are supported:</source>
          <target state="translated">Если требуется динамический доступ к атрибутам файла, атрибуты, поддерживаемые этим представлением атрибутов, определены в &lt;code&gt;BasicFileAttributeView&lt;/code&gt; , и, кроме того, поддерживаются следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="cf674cc8cdf6492af75c97ec90cc9a040aea0c29" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as follows:</source>
          <target state="translated">Там,где требуется динамический доступ к атрибутам файла,атрибуты,поддерживаемые этим представлением атрибутов,выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="8d820fbab2fe6e4127e50646c4e71b92a8792a22" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view have the following names and types:</source>
          <target state="translated">Там,где требуется динамический доступ к атрибутам файла,атрибуты,поддерживаемые данным видом атрибутов,имеют следующие имена и типы:</target>
        </trans-unit>
        <trans-unit id="1a3a8b24e5fea76a61408fffd2a003c38a23b39a" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that &lt;code&gt;0L&lt;/code&gt; is returned, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d91b56e88fa1a42f8c6d2adc7c084514e56e79" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that &lt;code&gt;0L&lt;/code&gt; is returned, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда возвращается &lt;code&gt;0L&lt;/code&gt; , или когда одновременно требуются несколько атрибутов одного и того же файла, можно использовать метод &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7de0392e6d47b4862228ebe6d2a818b846d1aedb" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a directory then the file attributes can be read with the &lt;a href=&quot;#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isDirectory()&quot;&gt;&lt;code&gt;BasicFileAttributes.isDirectory()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005cb3d94ffb0d26668ec1404f37b73b1ba29dc4" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a directory then the file attributes can be read with the &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isDirectory--&quot;&gt;&lt;code&gt;BasicFileAttributes.isDirectory()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда файл не является каталогом, атрибуты файла могут быть прочитаны с &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt; метода readAttributes, а тип файла протестирован с помощью &lt;a href=&quot;attribute/basicfileattributes#isDirectory--&quot;&gt; &lt;code&gt;BasicFileAttributes.isDirectory()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="007567199ff26eceed4a5f4b5e1dc57ccb4d5705" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a directory, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbbcba21c28c4d8c2c4924803def9e4ddb35ba8" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a directory, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда файл не является каталогом или когда требуется несколько атрибутов одного и того же файла одновременно, тогда можно использовать метод &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74b9eef79be9b70ff82dc87b633ac874427f7ef1" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a normal file, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b25c773a1934ae542e41dcabec7d24973199b" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a normal file, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда файл не является обычным файлом или когда требуется несколько атрибутов одного и того же файла одновременно, то можно использовать метод &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21258737e247b6c14994cdb209414cffbf2cb58c" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a regular file then the file attributes can be read with the &lt;a href=&quot;#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isRegularFile()&quot;&gt;&lt;code&gt;BasicFileAttributes.isRegularFile()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f695b12ef8bb76e6aea55a25eeab17ff1669ac" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a regular file then the file attributes can be read with the &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isRegularFile--&quot;&gt;&lt;code&gt;BasicFileAttributes.isRegularFile()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда файл не является обычным файлом, атрибуты файла могут быть прочитаны с &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt; метода readAttributes, а тип файла протестирован с помощью &lt;a href=&quot;attribute/basicfileattributes#isRegularFile--&quot;&gt; &lt;code&gt;BasicFileAttributes.isRegularFile()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b73ecca6efa6b0c0122ee193aadbfbbac0725868" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a symbolic link then the file attributes can be read with the &lt;a href=&quot;#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isSymbolicLink()&quot;&gt;&lt;code&gt;BasicFileAttributes.isSymbolicLink()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b99909cf143f334a41da20c3faff5347727a01c" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a symbolic link then the file attributes can be read with the &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isSymbolicLink--&quot;&gt;&lt;code&gt;BasicFileAttributes.isSymbolicLink()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда файл не является символической ссылкой, атрибуты файла можно прочитать с &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt; метода readAttributes, а тип файла протестировать с помощью &lt;a href=&quot;attribute/basicfileattributes#isSymbolicLink--&quot;&gt; &lt;code&gt;BasicFileAttributes.isSymbolicLink()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a3da2048af042507ba49cb66f0ec70eb628b60c" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case where &lt;code&gt;0L&lt;/code&gt; is returned, or where several attributes of the same file are required at the same time, or where the time of last access or the creation time are required, then the &lt;a href=&quot;../nio/file/files#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used. If however only the time of last modification is required, then the &lt;a href=&quot;../nio/file/files#getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;Files.getLastModifiedTime&lt;/code&gt;&lt;/a&gt; method may be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaa3530ad31cc461c41f4ed0c962b27b0124c2a" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case where &lt;code&gt;0L&lt;/code&gt; is returned, or where several attributes of the same file are required at the same time, or where the time of last access or the creation time are required, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">Если требуется отличить исключение ввода-вывода от случая, когда возвращается &lt;code&gt;0L&lt;/code&gt; , или когда несколько атрибутов одного и того же файла требуются одновременно, или когда требуется время последнего доступа или время создания, тогда &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt; метод Files.readAttributes .</target>
        </trans-unit>
        <trans-unit id="15c805f474acebca2530400cb8d6a021d50edd5e" translate="yes" xml:space="preserve">
          <source>Where possible, a newly constructed &lt;code&gt;DatagramSocket&lt;/code&gt; has the &lt;a href=&quot;socketoptions#SO_BROADCAST&quot;&gt;&lt;code&gt;SO_BROADCAST&lt;/code&gt;&lt;/a&gt; socket option enabled so as to allow the transmission of broadcast datagrams. In order to receive broadcast packets a DatagramSocket should be bound to the wildcard address. In some implementations, broadcast packets may also be received when a DatagramSocket is bound to a more specific address.</source>
          <target state="translated">Там , где это возможно, недавно построенный &lt;code&gt;DatagramSocket&lt;/code&gt; имеет &lt;a href=&quot;socketoptions#SO_BROADCAST&quot;&gt; &lt;code&gt;SO_BROADCAST&lt;/code&gt; &lt;/a&gt; опция сокета включена таким образом , чтобы разрешить передачу широковещательных дейтаграмм. Чтобы получать широковещательные пакеты, DatagramSocket должен быть привязан к подстановочному адресу. В некоторых реализациях широковещательные пакеты также могут приниматься, когда DatagramSocket привязан к более конкретному адресу.</target>
        </trans-unit>
        <trans-unit id="75db673482e4c428800f7f45f472cc74cb1cd427" translate="yes" xml:space="preserve">
          <source>Where possible, a newly constructed &lt;code&gt;DatagramSocket&lt;/code&gt; has the &lt;a href=&quot;standardsocketoptions#SO_BROADCAST&quot;&gt;&lt;code&gt;SO_BROADCAST&lt;/code&gt;&lt;/a&gt; socket option enabled so as to allow the transmission of broadcast datagrams. In order to receive broadcast packets a DatagramSocket should be bound to the wildcard address. In some implementations, broadcast packets may also be received when a DatagramSocket is bound to a more specific address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2251eb2bdde2077099e46a23fa2296253a4452" translate="yes" xml:space="preserve">
          <source>Where possible, applications should use &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt; and &lt;code&gt;LocalDateTime&lt;/code&gt; to better model the domain. For example, a birthday should be stored in a code &lt;code&gt;LocalDate&lt;/code&gt;. Bear in mind that any use of a &lt;a href=&quot;zoneid&quot;&gt;time-zone&lt;/a&gt;, such as 'Europe/Paris', adds considerable complexity to a calculation. Many applications can be written only using &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt; and &lt;code&gt;Instant&lt;/code&gt;, with the time-zone added at the user interface (UI) layer.</source>
          <target state="translated">По возможности приложения должны использовать &lt;code&gt;LocalDate&lt;/code&gt; , &lt;code&gt;LocalTime&lt;/code&gt; и &lt;code&gt;LocalDateTime&lt;/code&gt; для лучшего моделирования домена. Например, день рождения следует хранить в коде &lt;code&gt;LocalDate&lt;/code&gt; . Имейте в виду, что любое использование &lt;a href=&quot;zoneid&quot;&gt;часового пояса&lt;/a&gt; , такого как &amp;laquo;Европа / Париж&amp;raquo;, значительно усложняет вычисления. Многие приложения могут быть написаны только с использованием &lt;code&gt;LocalDate&lt;/code&gt; , &lt;code&gt;LocalTime&lt;/code&gt; и &lt;code&gt;Instant&lt;/code&gt; , с добавлением часового пояса на уровне пользовательского интерфейса (UI).</target>
        </trans-unit>
        <trans-unit id="91b2e2e10f69ab09824cf8a20764fb8ed9c2bb88" translate="yes" xml:space="preserve">
          <source>Where several modules are defined to the same class loader, and where more than one module contains a resource with the given name, then the ordering is not specified and may be very unpredictable. When overriding this method it is recommended that an implementation ensures that any delegation is consistent with the &lt;a href=&quot;#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource(String)&lt;/code&gt;&lt;/a&gt; method. This should ensure that the first element returned by the Enumeration's &lt;code&gt;nextElement&lt;/code&gt; method is the same resource that the &lt;code&gt;getResource(String)&lt;/code&gt; method would return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30feb1a1deb63d86d797b59fc10ebf6c8ef8b081" translate="yes" xml:space="preserve">
          <source>Where several modules are defined to the same class loader, and where more than one module contains a resource with the given name, then the ordering that modules are searched is not specified and may be very unpredictable. When overriding this method it is recommended that an implementation ensures that any delegation is consistent with the &lt;a href=&quot;#getResources(java.lang.String)&quot;&gt;&lt;code&gt;getResources(String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e0bb7fc901d05afac4326d164f35bed3f81996" translate="yes" xml:space="preserve">
          <source>Where symbolic links are supported, but the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; does not support symbolic links, then this may fail with an &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. Additionally, some operating systems may require that the Java virtual machine be started with implementation specific privileges to create symbolic links, in which case this method may throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">Если поддерживаются символические ссылки, но базовое &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; не поддерживает символические ссылки, это может привести к &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; . Кроме того, некоторые операционные системы могут потребовать, чтобы виртуальная машина Java была запущена с привилегиями конкретной реализации для создания символических ссылок, и в этом случае этот метод может вызвать &lt;code&gt;IOException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aff3ccdb832b941a77362ca0a3153b1ed7d1a9da" translate="yes" xml:space="preserve">
          <source>Where syntactically malformed entries are encountered, the entry is ignored and the remainder of entries in file are processed. For instances where duplicate country code entries exist, the behavior of the Currency information for that &lt;code&gt;Currency&lt;/code&gt; is undefined and the remainder of entries in file are processed.</source>
          <target state="translated">Если встречаются синтаксически искаженные записи, они игнорируются, а остальные записи в файле обрабатываются. В случаях, когда существуют повторяющиеся записи кода страны, поведение информации о валюте для этой &lt;code&gt;Currency&lt;/code&gt; не определено, и обрабатываются оставшиеся записи в файле.</target>
        </trans-unit>
        <trans-unit id="645bad2c04254cc2a6d121dc714e9825c14fd591" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;../../util/concurrent/future#cancel(boolean)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method is invoked with the &lt;code&gt;
 mayInterruptIfRunning&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt; then the I/O operation may be interrupted by closing the channel. In that case all threads waiting on the result of the I/O operation throw &lt;code&gt;CancellationException&lt;/code&gt; and any other I/O operations outstanding on the channel complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bfb8c567532e837621aeea501dc3f1ddcd12e2" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method is invoked with the &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt; then the I/O operation may be interrupted by closing the channel. In that case all threads waiting on the result of the I/O operation throw &lt;code&gt;CancellationException&lt;/code&gt; and any other I/O operations outstanding on the channel complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если метод &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; вызывается с параметром &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; , установленным в значение &lt;code&gt;true&lt;/code&gt; , тогда операция ввода-вывода может быть прервана путем закрытия канала. В этом случае все потоки, ожидающие результата операции ввода-вывода, &lt;code&gt;CancellationException&lt;/code&gt; исключение CancellationException, а любые другие операции ввода-вывода, ожидающие выполнения на канале, завершаются с исключением &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6c5daf70ef6f15c107a25281f6a04621e811b36" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;cancel&lt;/code&gt; method is invoked to cancel read or write operations then it is recommended that all buffers used in the I/O operations be discarded or care taken to ensure that the buffers are not accessed while the channel remains open.</source>
          <target state="translated">Если &lt;code&gt;cancel&lt;/code&gt; метод вызывается для отмены чтения или операции записи , то рекомендуется , чтобы все буферы , используемые в операциях ввода / вывода быть отброшены или затраченные гарантировать , что буферы не доступны в то время как канал остается открытым.</target>
        </trans-unit>
        <trans-unit id="9d8305902030508a453b89974c5e0784154948cf" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;modified_package_name&lt;/code&gt; is the package name of this object with &lt;code&gt;'/'&lt;/code&gt; substituted for &lt;code&gt;'.'&lt;/code&gt; (&lt;code&gt;'\u002e'&lt;/code&gt;).</source>
          <target state="translated">Где &lt;code&gt;modified_package_name&lt;/code&gt; - это имя пакета этого объекта с заменой &lt;code&gt;'/'&lt;/code&gt; на &lt;code&gt;'.'&lt;/code&gt; ( &lt;code&gt;'\u002e'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="20aa13f386a65b9aa665ab0dd65397813225275a" translate="yes" xml:space="preserve">
          <source>Where the channel is &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bound&lt;/code&gt;&lt;/a&gt; to an Internet Protocol socket address then the return value from this method is of type &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt;&lt;code&gt;InetSocketAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1d4e9876a115d289cc3d3d89044c6ff716cd4b" translate="yes" xml:space="preserve">
          <source>Where the channel is &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bound&lt;/code&gt;&lt;/a&gt; to an Internet Protocol socket address then the return value from this method is of type &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt;&lt;code&gt;InetSocketAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5776a8c2e2eb012135f9b2f791b325011a696da1" translate="yes" xml:space="preserve">
          <source>Where the channel is &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bound&lt;/code&gt;&lt;/a&gt; to an Internet Protocol socket address then the return value from this method is of type &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt;&lt;code&gt;InetSocketAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если канал &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bound&lt;/code&gt; &lt;/a&gt; к адресу сокета Интернет-протокола, то возвращаемое значение этого метода имеет тип &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt; &lt;code&gt;InetSocketAddress&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b5a252c98def07c02e37f2ec2055c98d16f0a55" translate="yes" xml:space="preserve">
          <source>Where the channel is bound and connected to an Internet Protocol socket address then the return value from this method is of type &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt;&lt;code&gt;InetSocketAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если канал привязан и подключен к адресу сокета Интернет-протокола, то возвращаемое значение этого метода имеет тип &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt; &lt;code&gt;InetSocketAddress&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3d56641ee7619e7defb7d614564f85e1460565f" translate="yes" xml:space="preserve">
          <source>Where the directory is opened successfully, then the entries in the directory, and their &lt;em&gt;descendants&lt;/em&gt; are visited. When all entries have been visited, or an I/O error occurs during iteration of the directory, then the directory is closed and the visitor's &lt;a href=&quot;filevisitor#postVisitDirectory(T,java.io.IOException)&quot;&gt;&lt;code&gt;postVisitDirectory&lt;/code&gt;&lt;/a&gt; method is invoked. The file tree walk then continues, by default, at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddadcdbdf7fecb97856976200f59b9dff77b97ca" translate="yes" xml:space="preserve">
          <source>Where the directory is opened successfully, then the entries in the directory, and their &lt;em&gt;descendants&lt;/em&gt; are visited. When all entries have been visited, or an I/O error occurs during iteration of the directory, then the directory is closed and the visitor's &lt;a href=&quot;filevisitor#postVisitDirectory-T-java.io.IOException-&quot;&gt;&lt;code&gt;postVisitDirectory&lt;/code&gt;&lt;/a&gt; method is invoked. The file tree walk then continues, by default, at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">Если каталог открывается успешно, то посещаются записи в каталоге и их &lt;em&gt;потомки&lt;/em&gt; . После посещения всех записей или возникновения ошибки ввода-вывода во время итерации каталога каталог закрывается и &lt;a href=&quot;filevisitor#postVisitDirectory-T-java.io.IOException-&quot;&gt; &lt;code&gt;postVisitDirectory&lt;/code&gt; &lt;/a&gt; метод посетителя postVisitDirectory . Затем обход дерева файлов продолжается, по умолчанию, на следующем &lt;em&gt;родственнике&lt;/em&gt; каталога.</target>
        </trans-unit>
        <trans-unit id="f20fbb77d5a28e0705439af43dcf961b9abb6e04" translate="yes" xml:space="preserve">
          <source>Where the file is a directory, and the directory could not be opened, then the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked with the I/O exception, after which, the file tree walk continues, by default, at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">Если файл является каталогом, и каталог не может быть открыт, тогда &lt;code&gt;visitFileFailed&lt;/code&gt; метод visitFileFailed с исключением ввода-вывода, после чего обход дерева файлов продолжается, по умолчанию, на следующем &lt;em&gt;родственнике&lt;/em&gt; каталога.</target>
        </trans-unit>
        <trans-unit id="813178800981aaf7228102a5aacbe600959c9826" translate="yes" xml:space="preserve">
          <source>Where the file system supports Access Control Lists, and it uses an ACL model that differs from the NFSv4 defined ACL model, then this method must translate the ACL to the model supported by the file system. This method should reject (by throwing &lt;a href=&quot;../../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;) any attempt to write an ACL that would appear to make the file more secure than would be the case if the ACL were updated. Where an implementation does not support a mapping of &lt;a href=&quot;aclentrytype#AUDIT&quot;&gt;&lt;code&gt;AclEntryType.AUDIT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;aclentrytype#ALARM&quot;&gt;&lt;code&gt;AclEntryType.ALARM&lt;/code&gt;&lt;/a&gt; entries, then this method ignores these entries when writing the ACL.</source>
          <target state="translated">Если файловая система поддерживает списки управления доступом и использует модель ACL, которая отличается от модели ACL, определенной в NFSv4, то этот метод должен преобразовать ACL в модель, поддерживаемую файловой системой. Этот метод должен отклонять (бросая &lt;a href=&quot;../../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; ) любую попытку записи ACL, которая могла бы сделать файл более безопасным, чем это было бы в случае обновления ACL. Если реализация не поддерживает сопоставление записей &lt;a href=&quot;aclentrytype#AUDIT&quot;&gt; &lt;code&gt;AclEntryType.AUDIT&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;aclentrytype#ALARM&quot;&gt; &lt;code&gt;AclEntryType.ALARM&lt;/code&gt; &lt;/a&gt; , то этот метод игнорирует эти записи при записи ACL.</target>
        </trans-unit>
        <trans-unit id="1bf3aa721e02b8abb961e05d45c9ccdfa7286d66" translate="yes" xml:space="preserve">
          <source>Where the filter terminates due to an uncaught error or runtime exception then it is propagated to the &lt;a href=&quot;../../util/iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../util/iterator#next()&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; method. Where an &lt;code&gt;
 IOException&lt;/code&gt; is thrown, it results in the &lt;code&gt;hasNext&lt;/code&gt; or &lt;code&gt;
 next&lt;/code&gt; method throwing a &lt;a href=&quot;directoryiteratorexception&quot;&gt;&lt;code&gt;DirectoryIteratorException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IOException&lt;/code&gt; as the cause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8251e33247a11466c53d88af669cedf9a7c9b244" translate="yes" xml:space="preserve">
          <source>Where the filter terminates due to an uncaught error or runtime exception then it is propagated to the &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../util/iterator#next--&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; method. Where an &lt;code&gt;IOException&lt;/code&gt; is thrown, it results in the &lt;code&gt;hasNext&lt;/code&gt; or &lt;code&gt;next&lt;/code&gt; method throwing a &lt;a href=&quot;directoryiteratorexception&quot;&gt;&lt;code&gt;DirectoryIteratorException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IOException&lt;/code&gt; as the cause.</source>
          <target state="translated">Если фильтр завершается из-за неперехваченной ошибки или исключения времени выполнения, он распространяется на метод &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../util/iterator#next--&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; . Когда выбрасывается &lt;code&gt;IOException&lt;/code&gt; , это приводит к &lt;code&gt;hasNext&lt;/code&gt; метод hasNext или &lt;code&gt;next&lt;/code&gt; генерирует исключение &lt;a href=&quot;directoryiteratorexception&quot;&gt; &lt;code&gt;DirectoryIteratorException&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;IOException&lt;/code&gt; в качестве причины.</target>
        </trans-unit>
        <trans-unit id="6af0ee5404f0be6ffe44935c032e92267f7c81e1" translate="yes" xml:space="preserve">
          <source>Where the impact lies, however, is in constructing and showing a Swing application. Calls to an application's &lt;code&gt;main&lt;/code&gt; method, or methods in &lt;code&gt;Applet&lt;/code&gt;, are not invoked on the event dispatching thread. As such, care must be taken to transfer control to the event dispatching thread when constructing and showing an application or applet. The preferred way to transfer control and begin working with Swing is to use &lt;code&gt;invokeLater&lt;/code&gt;. The &lt;code&gt;invokeLater&lt;/code&gt; method schedules a &lt;code&gt;Runnable&lt;/code&gt; to be processed on the event dispatching thread. The following two examples work equally well for transferring control and starting up a Swing application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51f5961597e3abbd7cbd8e36154eb7f8ad2d5be" translate="yes" xml:space="preserve">
          <source>Where the nodes to be removed are read-only descendants of an &lt;code&gt;EntityReference&lt;/code&gt;, the &lt;code&gt;EntityReference&lt;/code&gt; must be removed instead of the read-only nodes. If any &lt;code&gt;EntityReference&lt;/code&gt; to be removed has descendants that are not &lt;code&gt;EntityReference&lt;/code&gt;, &lt;code&gt;Text&lt;/code&gt;, or &lt;code&gt;CDATASection&lt;/code&gt; nodes, the &lt;code&gt;replaceWholeText&lt;/code&gt; method must fail before performing any modification of the document, raising a &lt;code&gt;DOMException&lt;/code&gt; with the code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e95719d37b90a01bb50bb0f34cef6a4524dc4a" translate="yes" xml:space="preserve">
          <source>Where the tabs are placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312f35b21c5541d25fef137d0c9ff3c37934f56a" translate="yes" xml:space="preserve">
          <source>Where there is insufficient space to store the attribute, or the attribute name or value exceed an implementation specific maximum size then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">Если недостаточно места для хранения атрибута или если имя или значение атрибута превышают максимальный размер, определенный для реализации, возникает &lt;code&gt;IOException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78177395926d156536f0c1ac9740391b9dc6422e" translate="yes" xml:space="preserve">
          <source>Where this method returns &lt;code&gt;true&lt;/code&gt;, then the associated thread pool has also &lt;a href=&quot;../../util/concurrent/executorservice#isTerminated()&quot;&gt;&lt;code&gt;terminated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3596c9771db04fbff45896ebd877c1d02f0912e" translate="yes" xml:space="preserve">
          <source>Where this method returns &lt;code&gt;true&lt;/code&gt;, then the associated thread pool has also &lt;a href=&quot;../../util/concurrent/executorservice#isTerminated--&quot;&gt;&lt;code&gt;terminated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если этот метод возвращает &lt;code&gt;true&lt;/code&gt; , значит, связанный пул потоков также &lt;a href=&quot;../../util/concurrent/executorservice#isTerminated--&quot;&gt; &lt;code&gt;terminated&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca7c18078eeeb8440182461deea920927988a9b5" translate="yes" xml:space="preserve">
          <source>Where two scroll bars meet, the row header meets the column header, or a scroll bar meets one of the headers, both components stop short of the corner, leaving a rectangular space which is, by default, empty. These spaces can potentially exist in any number of the four corners. In the previous diagram, the top right space is present and identified by the label &quot;corner component&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85fba4d6258a50067fbdc6fb4924687e3519a29" translate="yes" xml:space="preserve">
          <source>Where value limitations are given, any value outside of that set is reserved for future use; the value will be treated as the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93b49aca4151b6c139adc0aa283a778340da4f0" translate="yes" xml:space="preserve">
          <source>Where, in this case, the method handle is bound to the VarHandle instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c9d617c105e0ab6aed38dbb10fa98dbb5056d6" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;code&gt;PrintService&lt;/code&gt; connected to a physical printer can be reused, a &lt;code&gt;StreamPrintService&lt;/code&gt; connected to a stream cannot. The underlying &lt;code&gt;StreamPrintService&lt;/code&gt; may be disposed by the print system with the &lt;a href=&quot;streamprintservice#dispose()&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; method before returning from the &lt;a href=&quot;docprintjob#print(javax.print.Doc,javax.print.attribute.PrintRequestAttributeSet)&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DocPrintJob&lt;/code&gt; so that the print system knows this printer is no longer usable. This is equivalent to a physical printer going offline - permanently. Applications may supply a &lt;code&gt;null&lt;/code&gt; print stream to create a queryable service. It is not valid to create a &lt;code&gt;PrintJob&lt;/code&gt; for such a stream. Implementations which allocate resources on construction should examine the stream and may wish to only allocate resources if the stream is &lt;code&gt;non-null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6a9723c6d2f9343f85c6d8af60801d7b7682ec" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;code&gt;PrintService&lt;/code&gt; connected to a physical printer can be reused, a &lt;code&gt;StreamPrintService&lt;/code&gt; connected to a stream cannot. The underlying &lt;code&gt;StreamPrintService&lt;/code&gt; may be disposed by the print system with the &lt;a href=&quot;streamprintservice#dispose--&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; method before returning from the &lt;a href=&quot;docprintjob#print-javax.print.Doc-javax.print.attribute.PrintRequestAttributeSet-&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DocPrintJob&lt;/code&gt; so that the print system knows this printer is no longer usable. This is equivalent to a physical printer going offline - permanently. Applications may supply a null print stream to create a queryable service. It is not valid to create a PrintJob for such a stream. Implementations which allocate resources on construction should examine the stream and may wish to only allocate resources if the stream is non-null.</source>
          <target state="translated">В то время как &lt;code&gt;PrintService&lt;/code&gt; , подключенный к физическому принтеру, можно использовать повторно, &lt;code&gt;StreamPrintService&lt;/code&gt; , подключенный к потоку, не может. , Лежащие в основе &lt;code&gt;StreamPrintService&lt;/code&gt; не могут быть расположены с помощью системы печати с &lt;a href=&quot;streamprintservice#dispose--&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt; метода перед возвратом из &lt;a href=&quot;docprintjob#print-javax.print.Doc-javax.print.attribute.PrintRequestAttributeSet-&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt; метода &lt;code&gt;DocPrintJob&lt;/code&gt; так, чтобы система печати знает , этот принтер больше не может использоваться. Это эквивалентно постоянному отключению физического принтера от сети. Приложения могут предоставлять нулевой поток печати для создания запрашиваемой службы. Недопустимо создавать PrintJob для такого потока. Реализации, которые выделяют ресурсы при построении, должны проверять поток и могут пожелать выделить ресурсы только в том случае, если поток не равен нулю.</target>
        </trans-unit>
        <trans-unit id="68dfcf4573839943af330771499a40761c894968" translate="yes" xml:space="preserve">
          <source>Whereas these are not (reason in parentheses):</source>
          <target state="translated">В то время как это не так (причина в скобках):</target>
        </trans-unit>
        <trans-unit id="034389c570341c477b986ed7aab5d2ac27118931" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;waitForIdle&lt;/code&gt; is automatically called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0787c7934fdfd663c379d9463c168a4a31331bbd" translate="yes" xml:space="preserve">
          <source>Whether C++-style comments are to be recognized and skipped.</source>
          <target state="translated">Должны ли комментарии в стиле C++распознаваться и пропускаться.</target>
        </trans-unit>
        <trans-unit id="e0848da24388d28c1afb73d61f7a7588fee7e498" translate="yes" xml:space="preserve">
          <source>Whether C-style comments are to be recognized and skipped.</source>
          <target state="translated">Должны ли комментарии в стиле С распознаваться и пропускаться.</target>
        </trans-unit>
        <trans-unit id="3ce96c4b92120512de6ee705be9cc10faccd0e37" translate="yes" xml:space="preserve">
          <source>Whether a &lt;a href=&quot;tifftag&quot;&gt;&lt;code&gt;TIFFTag&lt;/code&gt;&lt;/a&gt; with tag number equal to &lt;code&gt;tagNumber&lt;/code&gt; is present in this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368fda18947ddfae823fba3ad12c0006e725b91a" translate="yes" xml:space="preserve">
          <source>Whether a byte buffer is direct or non-direct may be determined by invoking its &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method. This method is provided so that explicit buffer management can be done in performance-critical code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a1385dc9a39d4da44928c4400ff21a87209713" translate="yes" xml:space="preserve">
          <source>Whether a byte buffer is direct or non-direct may be determined by invoking its &lt;a href=&quot;bytebuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method. This method is provided so that explicit buffer management can be done in performance-critical code.</source>
          <target state="translated">Является ли байтовый буфер прямым или непрямым, можно определить, вызвав его метод &lt;a href=&quot;bytebuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; . Этот метод предоставляется для того, чтобы явное управление буфером могло выполняться в критичном для производительности коде.</target>
        </trans-unit>
        <trans-unit id="76ac3d7ca9570e219636389efe4d99114c39fbb9" translate="yes" xml:space="preserve">
          <source>Whether a lock is exclusive or shared may be determined by invoking its &lt;a href=&quot;#isShared()&quot;&gt;&lt;code&gt;isShared&lt;/code&gt;&lt;/a&gt; method. Some platforms do not support shared locks, in which case a request for a shared lock is automatically converted into a request for an exclusive lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059d74aa74a1f70698c412f2b1b1fb68c363877d" translate="yes" xml:space="preserve">
          <source>Whether a lock is exclusive or shared may be determined by invoking its &lt;a href=&quot;filelock#isShared--&quot;&gt;&lt;code&gt;isShared&lt;/code&gt;&lt;/a&gt; method. Some platforms do not support shared locks, in which case a request for a shared lock is automatically converted into a request for an exclusive lock.</source>
          <target state="translated">Независимо от того, является ли блокировка эксклюзивной или общей, можно определить, вызвав ее метод &lt;a href=&quot;filelock#isShared--&quot;&gt; &lt;code&gt;isShared&lt;/code&gt; &lt;/a&gt; . Некоторые платформы не поддерживают разделяемые блокировки, и в этом случае запрос разделяемой блокировки автоматически преобразуется в запрос эксклюзивной блокировки.</target>
        </trans-unit>
        <trans-unit id="ca6533c544c3a0529e57beea5f901c658d036545" translate="yes" xml:space="preserve">
          <source>Whether a particular component is or is not defined in an instance depends upon the type of the URI being represented. An absolute URI has a scheme component. An opaque URI has a scheme, a scheme-specific part, and possibly a fragment, but has no other components. A hierarchical URI always has a path (though it may be empty) and a scheme-specific-part (which at least contains the path), and may have any of the other components. If the authority component is present and is server-based then the host component will be defined and the user-information and port components may be defined.</source>
          <target state="translated">Определяется ли конкретный компонент в экземпляре или нет,зависит от типа представляемого URI.Абсолютный URI имеет компонент схемы.Непрозрачный URI имеет схему,часть,специфичную для схемы,и,возможно,фрагмент,но не имеет других компонентов.Иерархический URI всегда имеет путь (хотя он может быть и пустым)и схемную часть (которая,по крайней мере,содержит путь),и может содержать любые другие компоненты.Если компонент авторизации присутствует и базируется на сервере,то будет определен хост-компонент и могут быть определены компоненты информации о пользователе и порте.</target>
        </trans-unit>
        <trans-unit id="b7b45add21d97d6f92bb3c58b9dd4adb30ed79cd" translate="yes" xml:space="preserve">
          <source>Whether a thread is a daemon thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d404f71e4894750c15b6981c1f6ed118e11a813d" translate="yes" xml:space="preserve">
          <source>Whether a virtual machine has a console is dependent upon the underlying platform and also upon the manner in which the virtual machine is invoked. If the virtual machine is started from an interactive command line without redirecting the standard input and output streams then its console will exist and will typically be connected to the keyboard and display from which the virtual machine was launched. If the virtual machine is started automatically, for example by a background job scheduler, then it will typically not have a console.</source>
          <target state="translated">Имеет ли виртуальная машина консоль,зависит от базовой платформы,а также от способа вызова виртуальной машины.Если виртуальная машина запускается из интерактивной командной строки без перенаправления стандартных входных и выходных потоков,то ее консоль будет существовать и,как правило,будет подключена к клавиатуре и дисплею,с которого была запущена виртуальная машина.Если виртуальная машина запускается автоматически,например,с помощью планировщика фоновых заданий,то обычно у нее не будет консоли.</target>
        </trans-unit>
        <trans-unit id="7b2f8d65d541d32da6ac4db35fde558abe5bba9b" translate="yes" xml:space="preserve">
          <source>Whether aliases are case sensitive is implementation dependent. In order to avoid problems, it is recommended not to use aliases in a KeyStore that only differ in case.</source>
          <target state="translated">Являются ли псевдонимы чувствительными к регистру,зависит от реализации.Чтобы избежать проблем,рекомендуется не использовать в KeyStore псевдонимы,которые различаются только в случае необходимости.</target>
        </trans-unit>
        <trans-unit id="e459ddcf8add7fb4f45be0659b059f816d4f3a8a" translate="yes" xml:space="preserve">
          <source>Whether keystores are persistent, and the mechanisms used by the keystore if it is persistent, are not specified here. This allows use of a variety of techniques for protecting sensitive (e.g., private or secret) keys. Smart cards or other integrated cryptographic engines (SafeKeyper) are one option, and simpler mechanisms such as files may also be used (in a variety of formats).</source>
          <target state="translated">Постоянны ли клавиатурные блоки,и механизмы,используемые клавиатурой,если она постоянна,здесь не указаны.Это позволяет использовать различные методы защиты чувствительных (например,частных или секретных)ключей.Смарт-карты или другие интегрированные криптографические движки (SafeKeyper)являются одним из вариантов,и могут также использоваться (в различных форматах)более простые механизмы,такие как файлы.</target>
        </trans-unit>
        <trans-unit id="839575dd0da2dbc62283eccad2a293850044e605" translate="yes" xml:space="preserve">
          <source>Whether line terminators are to be returned as tokens or treated as white space that merely separates tokens.</source>
          <target state="translated">Должны ли терминаторы линии быть возвращены как маркеры или обработаны как белое пространство,которое просто разделяет маркеры.</target>
        </trans-unit>
        <trans-unit id="64009d2c9b3c4d0e007e474d4b10457e969ea24e" translate="yes" xml:space="preserve">
          <source>Whether new values can be written to the attribute.</source>
          <target state="translated">Могут ли новые значения быть записаны в атрибут.</target>
        </trans-unit>
        <trans-unit id="b03220d01de6d75c311d805bed01816711949222" translate="yes" xml:space="preserve">
          <source>Whether or not a channel is registered with one or more selectors may be determined by invoking the &lt;a href=&quot;#isRegistered()&quot;&gt;&lt;code&gt;isRegistered&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0c61cf2fb7a55d68d476b3cbe4799a77c242a1" translate="yes" xml:space="preserve">
          <source>Whether or not a channel is registered with one or more selectors may be determined by invoking the &lt;a href=&quot;selectablechannel#isRegistered--&quot;&gt;&lt;code&gt;isRegistered&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Зарегистрирован ли канал одним или несколькими селекторами, можно определить, вызвав метод &lt;a href=&quot;selectablechannel#isRegistered--&quot;&gt; &lt;code&gt;isRegistered&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d4e0c74b1ca2cffb49ee764de91039c786dd2b9" translate="yes" xml:space="preserve">
          <source>Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one &lt;code&gt;FileWriter&lt;/code&gt; (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.</source>
          <target state="translated">Будет ли файл доступен или может быть создан, зависит от базовой платформы. Некоторые платформы, в частности, позволяют открывать файл для записи только одним &lt;code&gt;FileWriter&lt;/code&gt; (или другим объектом записи файла) одновременно. В таких ситуациях конструкторы в этом классе не сработают, если задействованный файл уже открыт.</target>
        </trans-unit>
        <trans-unit id="ea35fdbb197a6d4bef3ff403fa57d76ec3b52a58" translate="yes" xml:space="preserve">
          <source>Whether or not a lock actually prevents another program from accessing the content of the locked region is system-dependent and therefore unspecified. The native file-locking facilities of some systems are merely</source>
          <target state="translated">Действительно ли блокировка мешает другой программе получить доступ к содержимому заблокированного региона,зависит от системы и,следовательно,не определено.Родные средства блокировки файлов в некоторых системах просто</target>
        </trans-unit>
        <trans-unit id="5484541c29643b9a5f36af7eafe3c332aef64933" translate="yes" xml:space="preserve">
          <source>Whether or not a read-write lock will improve performance over the use of a mutual exclusion lock depends on the frequency that the data is read compared to being modified, the duration of the read and write operations, and the contention for the data - that is, the number of threads that will try to read or write the data at the same time. For example, a collection that is initially populated with data and thereafter infrequently modified, while being frequently searched (such as a directory of some kind) is an ideal candidate for the use of a read-write lock. However, if updates become frequent then the data spends most of its time being exclusively locked and there is little, if any increase in concurrency. Further, if the read operations are too short the overhead of the read-write lock implementation (which is inherently more complex than a mutual exclusion lock) can dominate the execution cost, particularly as many read-write lock implementations still serialize all threads through a small section of code. Ultimately, only profiling and measurement will establish whether the use of a read-write lock is suitable for your application.</source>
          <target state="translated">Будет ли блокировка чтения и записи улучшать производительность по сравнению с использованием блокировки взаимного исключения,зависит от частоты считывания данных по сравнению с модификацией,продолжительности операций чтения и записи,а также от соперничества за данные-то есть от количества потоков,которые будут пытаться читать или записывать данные одновременно.Например,коллекция,которая изначально заполнена данными,а затем редко модифицируется,при частом поиске (например,каталог какого-нибудь типа),является идеальным кандидатом для использования блокировки чтения и записи.Однако,если обновления становятся частыми,то данные большую часть времени тратят исключительно на блокировку,а параллелизм увеличивается незначительно,а то и вовсе незначительно.Более того,если операции чтения слишком коротки,то накладные расходы,связанные с реализацией блокировки чтения-записи (которая по своей природе более сложна,чем взаимная блокировка исключений)могут доминировать в стоимости выполнения,особенно если учесть,что многие реализации блокировки чтения-записи все еще сериализуют все потоки через небольшой участок кода.В конечном счете,только профилирование и измерения установят,подходит ли использование блокировки чтения-записи для вашего приложения.</target>
        </trans-unit>
        <trans-unit id="ab8f019130320385026e5dab14b4180991ab8cbe" translate="yes" xml:space="preserve">
          <source>Whether or not a selection operation blocks to wait for one or more channels to become ready, and if so for how long, is the only essential difference between the three selection methods.</source>
          <target state="translated">Блокирует ли операция выбора ожидание готовности одного или нескольких каналов,и если да,то как долго,является единственной существенной разницей между тремя методами выбора.</target>
        </trans-unit>
        <trans-unit id="41ee46a746e75b2c44835c6bb604f840669e2531" translate="yes" xml:space="preserve">
          <source>Whether or not a thread writing bytes to a pipe will block until another thread reads those bytes, or some previously-written bytes, from the pipe is system-dependent and therefore unspecified. Many pipe implementations will buffer up to a certain number of bytes between the sink and source channels, but such buffering should not be assumed.</source>
          <target state="translated">Будет ли резьба,записывающая байты в трубу,блокироваться до тех пор,пока другая резьба не прочитает эти байты,или некоторые ранее записанные байты из трубы,зависят от системы и,следовательно,не определены.Многие реализации труб будут буферизировать до определённого количества байт между потоком и исходным каналом,но такую буферизацию не следует предполагать.</target>
        </trans-unit>
        <trans-unit id="f1753321a954e7b513350ab852758250afb77bcc" translate="yes" xml:space="preserve">
          <source>Whether or not the border has rounded corners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefaa51af10ff6b34610a73fe360a147bd71b1e4" translate="yes" xml:space="preserve">
          <source>Whether or not the drawing buffer has been recently restored from a lost state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d74f9e48a7c981d657e06b3f4e62aa762abfdf7" translate="yes" xml:space="preserve">
          <source>Whether or not the drawing buffer was lost since the last call to &lt;code&gt;getDrawGraphics&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46af6682380966e3f1a4318992d86f116b4966b" translate="yes" xml:space="preserve">
          <source>Whether or not the drawing buffer was restored since the last call to &lt;code&gt;getDrawGraphics&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcdb3967632f01437df753633766fd60adb3757" translate="yes" xml:space="preserve">
          <source>Whether or not the lead anchor notification is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67aae029276f7596e2d6a2c6bdefef7f78062c8" translate="yes" xml:space="preserve">
          <source>Whether or not the returned key is trusted and the mechanisms used to determine that is implementation-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882147ddaf8db0c13715bcfc2446b83df5e1174d" translate="yes" xml:space="preserve">
          <source>Whether or not the root component of this path starts with the root component of the given path is file system specific. If this path does not have a root component and the given path has a root component then this path does not start with the given path.</source>
          <target state="translated">Начинается ли корневой компонент этого пути с корневого компонента данного пути или нет,зависит от файловой системы.Если в этом пути нет корневой компоненты,а в данном пути есть корневая компонента,то этот путь не начинается с этого пути.</target>
        </trans-unit>
        <trans-unit id="5561b885c61970439f8e8ab1f7452ebbd54f6012" translate="yes" xml:space="preserve">
          <source>Whether or not the views are continuously redisplayed while resizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8dadabe9f784b22272f65c7af34baa4ecf3fe7" translate="yes" xml:space="preserve">
          <source>Whether or not this is equal to the argument.</source>
          <target state="translated">Приравнивается ли это к аргументу или нет.</target>
        </trans-unit>
        <trans-unit id="2c8782dc43c139a892cf9eca05fb5d76826e3adf" translate="yes" xml:space="preserve">
          <source>Whether or not two path are equal depends on the file system implementation. In some cases the paths are compared without regard to case, and others are case sensitive. This method does not access the file system and the file is not required to exist. Where required, the &lt;a href=&quot;files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method may be used to check if two paths locate the same file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8370dbb2c98105665a87fe7a4451e4d08277efed" translate="yes" xml:space="preserve">
          <source>Whether or not two path are equal depends on the file system implementation. In some cases the paths are compared without regard to case, and others are case sensitive. This method does not access the file system and the file is not required to exist. Where required, the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method may be used to check if two paths locate the same file.</source>
          <target state="translated">Равны ли два пути, зависит от реализации файловой системы. В некоторых случаях пути сравниваются без учета регистра, а в других - с учетом регистра. Этот метод не имеет доступа к файловой системе, и файл не обязательно должен существовать. При необходимости можно использовать метод &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;isSameFile&lt;/code&gt; ,&lt;/a&gt; чтобы проверить , совпадают ли два пути с одним и тем же файлом.</target>
        </trans-unit>
        <trans-unit id="8284d3a1a8d812ad6669b46283821c095c0da402" translate="yes" xml:space="preserve">
          <source>Whether the characters of identifiers are converted to lowercase.</source>
          <target state="translated">Преобразуются ли символы идентификаторов в нижний регистр.</target>
        </trans-unit>
        <trans-unit id="8cb35ed334e6abf3cc5d46cfafbdff505f970f2b" translate="yes" xml:space="preserve">
          <source>Whether the checks for Java language access control can be suppressed (and thus, whether access can be enabled) depends on whether the reflected object corresponds to a member in an exported or open package (see &lt;a href=&quot;#setAccessible(boolean)&quot;&gt;&lt;code&gt;setAccessible(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abed7ebf656d855109885e2ad219cda0e430ff8f" translate="yes" xml:space="preserve">
          <source>Whether the directory is traversable or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7b655899be35706a060ba063ac17985c822863" translate="yes" xml:space="preserve">
          <source>Whether the directory is traversable or not. This might be useful, for example, if you want a directory to represent a compound document and don't want the user to descend into it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bdf44965cf1882a7b82e577ba831bb4aa3aad8" translate="yes" xml:space="preserve">
          <source>Whether the effect of sheet collation is achieved by placing copies of a document in multiple output bins or in the same output bin with implementation defined document separation is implementation dependent. Also whether it is achieved by making multiple passes over the job or by using an output sorter is implementation dependent.</source>
          <target state="translated">Реализация зависит от того,достигается ли эффект компоновки листов путем размещения копий документа в нескольких выходных корзинах или в одном выходном корзине с определённым реализацией разделением документов.Также зависит от реализации,достигается ли это путем выполнения нескольких проходов по заданию или с помощью выходного сортировщика.</target>
        </trans-unit>
        <trans-unit id="80415a2402a1eeb4d1614afdc0790cc2cd751eb2" translate="yes" xml:space="preserve">
          <source>Whether the field type is integral.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d9b917bd4457293707b233fdfaf38f800ca2f" translate="yes" xml:space="preserve">
          <source>Whether the given file is accepted by this filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b221a5fcef637ecf18d19b895618107e0ec7d34" translate="yes" xml:space="preserve">
          <source>Whether the progress bar is horizontal or vertical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d6a865c13d64eec6f0217eba676663f0999299" translate="yes" xml:space="preserve">
          <source>Whether the progress bar is horizontal or vertical. The default is &lt;code&gt;HORIZONTAL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07e8763f02114da7e0c71037a504961880c1abb" translate="yes" xml:space="preserve">
          <source>Whether the slider is horizontal or vertical The default is horizontal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b500b42f712219c24a8bd54914f1fa1b4e445284" translate="yes" xml:space="preserve">
          <source>Whether the value of the attribute can be read.</source>
          <target state="translated">Может ли быть прочитано значение атрибута.</target>
        </trans-unit>
        <trans-unit id="d7db98311d27050f8bbb866412a5ea00983c801f" translate="yes" xml:space="preserve">
          <source>Whether to display a border around the progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7eb02de3d8787df6eadd74e0b934899bf8467f" translate="yes" xml:space="preserve">
          <source>Whether to display a border around the progress bar. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb449420de50b1f70b9cf8aa6735bcb426d5e7f" translate="yes" xml:space="preserve">
          <source>Whether to display a string of text on the progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce38cd557d077996b81c259fa55fc8d873bb920" translate="yes" xml:space="preserve">
          <source>Whether to display a string of text on the progress bar. The default is &lt;code&gt;false&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; causes a textual display of the progress to be rendered on the progress bar. If the &lt;code&gt;progressString&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the percentage of completion is displayed on the progress bar. Otherwise, the &lt;code&gt;progressString&lt;/code&gt; is rendered on the progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49449561f235eb64ebabd8dfba321eb0bf01fd39" translate="yes" xml:space="preserve">
          <source>Whether to read fields of unrecognized tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610c7400d727b3d0294243a02c10a7e75f931042" translate="yes" xml:space="preserve">
          <source>Which is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31b01303e594ceee1ff860c123b19192ba02c04" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;../java.base/java/lang/invoke/package-summary&quot;&gt;&lt;code&gt;java.lang.invoke&lt;/code&gt;&lt;/a&gt; provides a low level API for dynamic linking of &lt;code&gt;invokedynamic&lt;/code&gt; call sites, it does not provide a way to express higher level operations on objects, nor methods that implement them. These operations are the usual ones in object-oriented environments: property access, access of elements of collections, invocation of methods and constructors (potentially with multiple dispatch, e.g. link- and run-time equivalents of Java overloaded method resolution). These are all functions that are normally desired in a language on the JVM. If a language is statically typed and its type system matches that of the JVM, it can accomplish this with use of the usual invocation, field access, etc. instructions (e.g. &lt;code&gt;invokevirtual&lt;/code&gt;, &lt;code&gt;getfield&lt;/code&gt;). However, if the language is dynamic (hence, types of some expressions are not known until evaluated at run time), or its object model or type system don't match closely that of the JVM, then it should use &lt;code&gt;invokedynamic&lt;/code&gt; call sites instead and let Dynalink manage them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2f17106f12b2db4361609c9dfa05eb46f32c85" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;CompositeView&lt;/code&gt; does not impose a layout policy on its child &lt;code&gt;View&lt;/code&gt;s, it does allow for inseting the child &lt;code&gt;View&lt;/code&gt;s it will contain. The insets can be set by either &lt;a href=&quot;#setInsets(short,short,short,short)&quot;&gt;&lt;code&gt;setInsets(short, short, short, short)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setParagraphInsets(javax.swing.text.AttributeSet)&quot;&gt;&lt;code&gt;setParagraphInsets(javax.swing.text.AttributeSet)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c42976582ea88cec97c24e4c0d10841777ac466" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;Deque&lt;/code&gt; implementations are not strictly required to prohibit the insertion of null elements, they are strongly encouraged to do so. Users of any &lt;code&gt;Deque&lt;/code&gt; implementations that do allow null elements are strongly encouraged</source>
          <target state="translated">Хотя реализации &lt;code&gt;Deque&lt;/code&gt; не строго обязаны запрещать вставку нулевых элементов, им настоятельно рекомендуется это делать. &lt;code&gt;Deque&lt;/code&gt; настоятельно рекомендуем пользователям любых реализаций Deque , допускающих использование нулевых элементов.</target>
        </trans-unit>
        <trans-unit id="fb58b702756ba42a1d313a2e0f860c7578277589" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;NamedOperation&lt;/code&gt; can be constructed directly, it is often convenient to use the &lt;a href=&quot;operation#named(java.lang.Object)&quot;&gt;&lt;code&gt;Operation.named(Object)&lt;/code&gt;&lt;/a&gt; factory method instead, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5eb5618aa0f45c146e1471d0e208b60c8075087" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;NamespaceOperation&lt;/code&gt; can be constructed directly, it is often convenient to use the &lt;a href=&quot;operation#withNamespace(jdk.dynalink.Namespace)&quot;&gt;&lt;code&gt;Operation.withNamespace(Namespace)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;operation#withNamespaces(jdk.dynalink.Namespace...)&quot;&gt;&lt;code&gt;Operation.withNamespaces(Namespace...)&lt;/code&gt;&lt;/a&gt; factory methods instead, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6ef8f821513dcce4a530375fb519e3029c0687" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;TreePath&lt;/code&gt; is serializable, a &lt;code&gt;
 NotSerializableException&lt;/code&gt; is thrown if any elements of the path are not serializable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c173ac8703a05aa36fea05d64c73f4930ea483" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;dropWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.DoubleSupplier)&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd08eb3b81d66f20546d1029c826ea0fbe16bd34" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;dropWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.IntSupplier)&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a60decffcb60cd8818f4e94cb70dfd3ab19008" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;dropWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.LongSupplier)&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a29b609ce06935cf71396d9bc3de52f946081d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;dropWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.Supplier)&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;dropWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bebbe990bf762b2089ef58b873ffcb3559acbd" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.DoubleSupplier)&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae011e82778ef6bc326d638878e4e4eb7c86dc3" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.IntSupplier)&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52357540a609522f143b04a6d7f5344f0cb8965b" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.LongSupplier)&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5292e16f7d0f56673e81e44acea4610d6162687f" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.Supplier)&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c116ddf414b394a7666553a5a6b566a1451776ab" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;doublestream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;limit()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;maxSize&lt;/code&gt; , поскольку &lt;code&gt;limit(n)&lt;/code&gt; ограничен для возврата не только любых &lt;em&gt;n&lt;/em&gt; элементов, а &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование источника неупорядоченного потока (например, &lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt; &lt;code&gt;generate(DoubleSupplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению работы &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, если позволяет семантика вашей ситуации. Если требуется согласованность с порядком обнаружения и вы испытываете низкую производительность или низкую загрузку памяти с помощью &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;doublestream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt; может повысить производительность.</target>
        </trans-unit>
        <trans-unit id="07ed1f5d7e24e0c78296347da906a9d60feefd38" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;intstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;limit()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;maxSize&lt;/code&gt; , поскольку &lt;code&gt;limit(n)&lt;/code&gt; ограничен для возврата не только любых &lt;em&gt;n&lt;/em&gt; элементов, а &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование неупорядоченного источника потока (например, &lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt; &lt;code&gt;generate(IntSupplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению работы &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, если позволяет семантика вашей ситуации. Если требуется согласованность с порядком обнаружения и вы испытываете низкую производительность или низкую загрузку памяти с помощью &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;intstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt; может повысить производительность.</target>
        </trans-unit>
        <trans-unit id="50f1dd72f901eaef160af7e84d23600d1ebf7971" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;longstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;limit()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;maxSize&lt;/code&gt; , поскольку &lt;code&gt;limit(n)&lt;/code&gt; ограничен для возврата не только любых &lt;em&gt;n&lt;/em&gt; элементов, а &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование неупорядоченного источника потока (например, &lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt; &lt;code&gt;generate(LongSupplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению работы &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, если позволяет семантика вашей ситуации. Если требуется согласованность с порядком обнаружения и вы испытываете низкую производительность или низкую загрузку памяти с помощью &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;longstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt; может повысить производительность.</target>
        </trans-unit>
        <trans-unit id="e7b022b1174615a655ebcf28b81dbf48a9f1556b" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;limit()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;maxSize&lt;/code&gt; , поскольку &lt;code&gt;limit(n)&lt;/code&gt; ограничен для возврата не только любых &lt;em&gt;n&lt;/em&gt; элементов, а &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование неупорядоченного источника потока (например, &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt; &lt;code&gt;generate(Supplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению работы &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, если позволяет семантика вашей ситуации. Если требуется согласованность с порядком обнаружения, и вы испытываете низкую производительность или использование памяти с помощью &lt;code&gt;limit()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;basestream#sequential--&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt; может повысить производительность.</target>
        </trans-unit>
        <trans-unit id="7b87dc7fad8d14aab16d4ddc4f41ded925891b0e" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.DoubleSupplier)&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd851600c5d344782f73398b78b6e28503994a09" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.IntSupplier)&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33a9aba4905d83925c9ee06f4fa960c35c02c78" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.LongSupplier)&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0b2ed9d6a481a9b272dda6c65ea3e9ae7c5297" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.Supplier)&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d731aa21902009fd224b6c3c7d21287ffacde8" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;doublestream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;skip()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;n&lt;/code&gt; , поскольку &lt;code&gt;skip(n)&lt;/code&gt; ограничивается пропуском не только любых &lt;em&gt;n&lt;/em&gt; элементов, но и &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование неупорядоченного источника потока (например, &lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt; &lt;code&gt;generate(DoubleSupplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, если семантика вашей ситуации позволяет. Если требуется согласованность с порядком встреч, и вы испытываете низкую производительность или использование памяти с помощью &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;doublestream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt; может улучшить производительность.</target>
        </trans-unit>
        <trans-unit id="8b6aed4201bbc532174a6b1ac759cb47bf878a52" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;intstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;skip()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;n&lt;/code&gt; , поскольку &lt;code&gt;skip(n)&lt;/code&gt; ограничивается пропуском не только любых &lt;em&gt;n&lt;/em&gt; элементов, но и &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование источника неупорядоченного потока (например, &lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt; &lt;code&gt;generate(IntSupplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, если семантика вашей ситуации позволяет. Если требуется согласованность с порядком встреч, и вы испытываете низкую производительность или использование памяти с помощью &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;intstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt; может улучшить производительность.</target>
        </trans-unit>
        <trans-unit id="08e49b292a5f6675c12e6e8084622cb9a1123c41" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;longstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;skip()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;n&lt;/code&gt; , поскольку &lt;code&gt;skip(n)&lt;/code&gt; ограничивается пропуском не только любых &lt;em&gt;n&lt;/em&gt; элементов, но и &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование источника неупорядоченного потока (например, &lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt; &lt;code&gt;generate(LongSupplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, если семантика вашей ситуации позволяет. Если требуется согласованность с порядком встреч, и вы испытываете низкую производительность или использование памяти с помощью &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;longstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt; может улучшить производительность.</target>
        </trans-unit>
        <trans-unit id="e1b922a638d8b7b0bf464d0b07da3f9937acce8a" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">Хотя &lt;code&gt;skip()&lt;/code&gt; обычно является дешевой операцией для последовательных потоковых конвейеров, она может быть довольно дорогой для упорядоченных параллельных конвейеров, особенно для больших значений &lt;code&gt;n&lt;/code&gt; , поскольку &lt;code&gt;skip(n)&lt;/code&gt; ограничивается пропуском не только любых &lt;em&gt;n&lt;/em&gt; элементов, но и &lt;em&gt;первых n&lt;/em&gt; элементов. элементы в порядке встречи. Использование неупорядоченного источника потока (например, &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt; &lt;code&gt;generate(Supplier)&lt;/code&gt; &lt;/a&gt; ) или удаление ограничения порядка с помощью &lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt; может привести к значительному ускорению &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, если семантика вашей ситуации позволяет. Если требуется согласованность с порядком встреч, и вы испытываете низкую производительность или использование памяти с помощью &lt;code&gt;skip()&lt;/code&gt; в параллельных конвейерах, переключение на последовательное выполнение с помощью &lt;a href=&quot;basestream#sequential--&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt; может улучшить производительность.</target>
        </trans-unit>
        <trans-unit id="f11e1ce2eaeeb9a61aafb14bbaaa04b134c253c4" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;takeWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.DoubleSupplier)&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536720f4d6e048e3bfc2daf23b8be0d5f28b62ff" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;takeWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.IntSupplier)&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996949649b893c1211f1e5529c0828c15fa967ef" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;takeWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.LongSupplier)&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8939e26489616f38385fb9a8f6b0914d6faecc" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;takeWhile()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, since the operation is constrained to return not just any valid prefix, but the longest prefix of elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;#generate(java.util.function.Supplier)&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;takeWhile()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44ebb750484feed7acd90b248717e6c6a220783" translate="yes" xml:space="preserve">
          <source>While DefaultMutableTreeNode implements the MutableTreeNode interface and will allow you to add in any implementation of MutableTreeNode not all of the methods in DefaultMutableTreeNode will be applicable to all MutableTreeNodes implementations. Especially with some of the enumerations that are provided, using some of these methods assumes the DefaultMutableTreeNode contains only DefaultMutableNode instances. All of the TreeNode/MutableTreeNode methods will behave as defined no matter what implementations are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4167a99521bae55a855564642cb10cb92285c449" translate="yes" xml:space="preserve">
          <source>While JAXP supports validation as a feature of an XML parser, represented by either a &lt;a href=&quot;../parsers/saxparser&quot;&gt;&lt;code&gt;SAXParser&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../parsers/documentbuilder&quot;&gt;&lt;code&gt;DocumentBuilder&lt;/code&gt;&lt;/a&gt; instance, the &lt;code&gt;Validation&lt;/code&gt; API is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21ea13fd41327eba1978d9dc59ed4e742694b36" translate="yes" xml:space="preserve">
          <source>While XPath expressions select nodes in the XML document, the XPath API allows the selected nodes to be coalesced into one of the following data types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c1d5877bbdead7eaf0421be72e2ef20db6441f" translate="yes" xml:space="preserve">
          <source>While a &lt;code id=&quot;ELEM_VS_TYPE&quot;&gt;TypeElement&lt;/code&gt; represents a class or interface</source>
          <target state="translated">Хотя &lt;code id=&quot;ELEM_VS_TYPE&quot;&gt;TypeElement&lt;/code&gt; представляет класс или интерфейс</target>
        </trans-unit>
        <trans-unit id="9231d9bdcc9f4e1959e5ee9d3a56a9d2a170bb99" translate="yes" xml:space="preserve">
          <source>While a &lt;code&gt;CachedRowSet&lt;/code&gt; object is disconnected, it can be much leaner than a &lt;code&gt;ResultSet&lt;/code&gt; object with the same data. As a result, it can be especially suitable for sending data to a thin client such as a PDA, where it would be inappropriate to use a JDBC driver due to resource limitations or security considerations. Thus, a &lt;code&gt;CachedRowSet&lt;/code&gt; object provides a means to &quot;get rows in&quot; without the need to implement the full JDBC API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e4f165db1002fe6fbf12ff195d30f7e4cff77b" translate="yes" xml:space="preserve">
          <source>While a &lt;code&gt;Chronology&lt;/code&gt; object typically uses &lt;code&gt;ChronoField&lt;/code&gt; and is based on an era, year-of-era, month-of-year, day-of-month model of a date, this is not required. A &lt;code&gt;Chronology&lt;/code&gt; instance may represent a totally different kind of calendar system, such as the Mayan.</source>
          <target state="translated">Хотя объект &lt;code&gt;Chronology&lt;/code&gt; обычно использует &lt;code&gt;ChronoField&lt;/code&gt; и основан на модели даты, год-эра, месяц-год, день-месяц, это не требуется. &lt;code&gt;Chronology&lt;/code&gt; экземпляр может представлять собой совершенно другой вид календарной системы, такие , как майя.</target>
        </trans-unit>
        <trans-unit id="9784eeccfaf1f4a4f0da131846253a9ef6b0027f" translate="yes" xml:space="preserve">
          <source>While a &lt;code&gt;TypeElement&lt;/code&gt; represents a class or interface</source>
          <target state="translated">Хотя &lt;code&gt;TypeElement&lt;/code&gt; представляет класс или интерфейс</target>
        </trans-unit>
        <trans-unit id="b1518d4c45f16c46674f0f206ccd4613201a8ad4" translate="yes" xml:space="preserve">
          <source>While all three of the &lt;code&gt;prototypeCellValue&lt;/code&gt;, &lt;code&gt;fixedCellHeight&lt;/code&gt;, and &lt;code&gt;fixedCellWidth&lt;/code&gt; properties may be modified by this method, &lt;code&gt;PropertyChangeEvent&lt;/code&gt; notifications are only sent when the &lt;code&gt;prototypeCellValue&lt;/code&gt; property changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ace92ef3bab3caea4c0ffa2acf86708693deef" translate="yes" xml:space="preserve">
          <source>While an implementation may not recognize all CSS properties within a CSS declaration block, it is expected to provide access to all specified properties in the style sheet through the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface. Furthermore, implementations that support a specific level of CSS should correctly handle CSS shorthand properties for that level. For a further discussion of shorthand properties, see the &lt;code&gt;CSS2Properties&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b017d1c42ec1554655bf855dc44af27a7a96ca5" translate="yes" xml:space="preserve">
          <source>While applications write to the &lt;code&gt;LoginContext&lt;/code&gt; API, authentication technology providers implement the &lt;code&gt;LoginModule&lt;/code&gt; interface. A &lt;code&gt;Configuration&lt;/code&gt; specifies the LoginModule(s) to be used with a particular login application. Therefore different LoginModules can be plugged in under the application without requiring any modifications to the application itself.</source>
          <target state="translated">Пока приложения пишут в &lt;code&gt;LoginContext&lt;/code&gt; API, поставщики технологий аутентификации реализуют интерфейс &lt;code&gt;LoginModule&lt;/code&gt; . &lt;code&gt;Configuration&lt;/code&gt; определяет LoginModule (ы) , который будет использоваться с конкретным приложением авторизации. Поэтому различные модули LoginModules могут быть подключены к приложению, не требуя каких-либо изменений в самом приложении.</target>
        </trans-unit>
        <trans-unit id="2406ab2abac29e951c9626f9ef877429a290fa9c" translate="yes" xml:space="preserve">
          <source>While building the MBeanInfo, this method calls the customization hooks that make it possible for subclasses to supply their custom descriptions, parameter names, etc...</source>
          <target state="translated">При построении MBeanInfo этот метод вызывает крючки настройки,которые позволяют подклассам предоставлять свои пользовательские описания,имена параметров и т.д....</target>
        </trans-unit>
        <trans-unit id="73b5f4ac2141a2818394c1e963ca8d4434b78746" translate="yes" xml:space="preserve">
          <source>While callers may invoke &lt;code&gt;login&lt;/code&gt; directly, the provider may also invoke &lt;code&gt;login&lt;/code&gt; on behalf of callers if it determines that a login must be performed prior to certain operations.</source>
          <target state="translated">Хотя вызывающие абоненты могут вызывать &lt;code&gt;login&lt;/code&gt; напрямую, провайдер также может вызывать &lt;code&gt;login&lt;/code&gt; от имени вызывающих абонентов, если он определяет, что вход в систему должен быть выполнен до определенных операций.</target>
        </trans-unit>
        <trans-unit id="498a5c4d7f0598c6bbc42679f4696f06bbc47c30" translate="yes" xml:space="preserve">
          <source>While for case 2, it defines 4 URI Entries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868ad264cb55aef3c8dd9f1593aca303b1f31c60" translate="yes" xml:space="preserve">
          <source>While iterating through the &lt;code&gt;Set&lt;/code&gt;, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown if a security manager is installed and the caller does not have a &lt;a href=&quot;privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; to access a particular Credential. The &lt;code&gt;Iterator&lt;/code&gt; is nevertheless advanced to the next element in the &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6354a2a3180a9378c7eb02538eb193186e5effba" translate="yes" xml:space="preserve">
          <source>While iterating through the &lt;code&gt;Set&lt;/code&gt;, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown if the caller does not have permission to access a particular Credential. The &lt;code&gt;Iterator&lt;/code&gt; is nevertheless advanced to next element in the &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Во время итерации &lt;code&gt;Set&lt;/code&gt; создается исключение &lt;code&gt;SecurityException&lt;/code&gt; , если вызывающий объект не имеет разрешения на доступ к определенным учетным данным. Тем не менее, &lt;code&gt;Iterator&lt;/code&gt; к следующему элементу &lt;code&gt;Set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fa2ee2232311c188a194a08d7481eaf402f451e" translate="yes" xml:space="preserve">
          <source>While parsing an input source, errors are reported to the application through the error handler (&lt;code&gt;LSParser.domConfig&lt;/code&gt;'s &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-error-handler&quot;&gt;error-handler&lt;/a&gt;&quot; parameter). This specification does in no way try to define all possible errors that can occur while parsing XML, or any other markup, but some common error cases are defined. The types (&lt;code&gt;DOMError.type&lt;/code&gt;) of errors and warnings defined by this specification are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86165e5f29fc9b9137f2a5569a7128b787a2ddbb" translate="yes" xml:space="preserve">
          <source>While serializing a document, the parameter &quot;discard-default-content&quot; controls whether or not non-specified data is serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4536abd5f3f04b1e2ed476be040c60ab02acb7" translate="yes" xml:space="preserve">
          <source>While serializing, errors and warnings are reported to the application through the error handler (&lt;code&gt;LSSerializer.domConfig&lt;/code&gt;'s &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-error-handler&quot;&gt;error-handler&lt;/a&gt;&quot; parameter). This specification does in no way try to define all possible errors and warnings that can occur while serializing a DOM node, but some common error and warning cases are defined. The types ( &lt;code&gt;DOMError.type&lt;/code&gt;) of errors and warnings defined by this specification are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbca553bfbbeff28515b4164ea76df1af2bbd56" translate="yes" xml:space="preserve">
          <source>While some programs will choose to dedicate a thread to removing reference objects from one or more queues and processing them, this is by no means necessary. A tactic that often works well is to examine a reference queue in the course of performing some other fairly-frequent action. For example, a hashtable that uses weak references to implement weak keys could poll its reference queue each time the table is accessed. This is how the &lt;a href=&quot;../../util/weakhashmap&quot;&gt;&lt;code&gt;WeakHashMap&lt;/code&gt;&lt;/a&gt; class works. Because the &lt;a href=&quot;referencequeue#poll()&quot;&gt;&lt;code&gt;ReferenceQueue.poll&lt;/code&gt;&lt;/a&gt; method simply checks an internal data structure, this check will add little overhead to the hashtable access methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c239e1b59a3047897d29f5e117079370e9edd962" translate="yes" xml:space="preserve">
          <source>While tables for abbreviated streams are often obtained by first reading another abbreviated stream containing only the tables, in some applications the tables are fixed ahead of time. This class allows the tables to be specified directly from client code. If no tables are specified either in the stream or in a &lt;code&gt;JPEGImageReadParam&lt;/code&gt;, then the stream is presumed to use the &quot;standard&quot; visually lossless tables. See &lt;a href=&quot;jpegqtable&quot;&gt;&lt;code&gt;JPEGQTable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jpeghuffmantable&quot;&gt;&lt;code&gt;JPEGHuffmanTable&lt;/code&gt;&lt;/a&gt; for more information on the default tables.</source>
          <target state="translated">Хотя таблицы для сокращенных потоков часто получаются путем первого чтения другого сокращенного потока, содержащего только таблицы, в некоторых приложениях таблицы фиксируются заранее. Этот класс позволяет указывать таблицы непосредственно из клиентского кода. Если таблицы не указаны ни в потоке, ни в &lt;code&gt;JPEGImageReadParam&lt;/code&gt; , то предполагается, что поток использует &amp;laquo;стандартные&amp;raquo; таблицы без визуальных потерь. См. &lt;a href=&quot;jpegqtable&quot;&gt; &lt;code&gt;JPEGQTable&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;jpeghuffmantable&quot;&gt; &lt;code&gt;JPEGHuffmanTable&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации о таблицах по умолчанию.</target>
        </trans-unit>
        <trans-unit id="1b216501bc1079107fcb46b023f11ebfbbaf13fc" translate="yes" xml:space="preserve">
          <source>While tables for abbreviated streams are often specified by first writing an abbreviated stream containing only the tables, in some applications the tables are fixed ahead of time. This class allows the tables to be specified directly from client code.</source>
          <target state="translated">В то время как таблицы для сокращенных потоков часто задаются при первой записи сокращенного потока,содержащего только таблицы,в некоторых приложениях таблицы фиксируются заранее.Данный класс позволяет указывать таблицы непосредственно из клиентского кода.</target>
        </trans-unit>
        <trans-unit id="f55e7baa234a92f09d11651aeeb34c78f17b723e" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;Collection&lt;/code&gt; interface adds no stipulations to the general contract for the &lt;code&gt;Object.equals&lt;/code&gt;, programmers who implement the &lt;code&gt;Collection&lt;/code&gt; interface &quot;directly&quot; (in other words, create a class that is a &lt;code&gt;Collection&lt;/code&gt; but is not a &lt;code&gt;Set&lt;/code&gt; or a &lt;code&gt;List&lt;/code&gt;) must exercise care if they choose to override the &lt;code&gt;Object.equals&lt;/code&gt;. It is not necessary to do so, and the simplest course of action is to rely on &lt;code&gt;Object&lt;/code&gt;'s implementation, but the implementor may wish to implement a &quot;value comparison&quot; in place of the default &quot;reference comparison.&quot; (The &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; interfaces mandate such value comparisons.)</source>
          <target state="translated">Хотя интерфейс &lt;code&gt;Collection&lt;/code&gt; не добавляет никаких условий к общему контракту для &lt;code&gt;Object.equals&lt;/code&gt; , программисты, которые реализуют интерфейс &lt;code&gt;Collection&lt;/code&gt; &amp;laquo;напрямую&amp;raquo; (другими словами, создают класс, который является &lt;code&gt;Collection&lt;/code&gt; но не является &lt;code&gt;Set&lt;/code&gt; или &lt;code&gt;List&lt;/code&gt; ), должны проявлять осторожность. если они решат переопределить &lt;code&gt;Object.equals&lt;/code&gt; . В этом нет необходимости, и самый простой способ действий - полагаться на реализацию &lt;code&gt;Object&lt;/code&gt; , но разработчик может пожелать реализовать &amp;laquo;сравнение значений&amp;raquo; вместо стандартного &amp;laquo;сравнения ссылок&amp;raquo;. (Интерфейсы &lt;code&gt;List&lt;/code&gt; и &lt;code&gt;Set&lt;/code&gt; требуют такого сравнения значений.)</target>
        </trans-unit>
        <trans-unit id="f5d22b4fafaee2e3b5d5f3ee0154553c12123ed3" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;Externalizable&lt;/code&gt; interface extends &lt;code&gt;
 Serializable&lt;/code&gt;, the three methods and one field above are &lt;em&gt;not&lt;/em&gt; used for externalizable classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b34ed17b895b7570e58dbe128c1061764f2836" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;JOptionPane&lt;/code&gt; class may appear complex because of the large number of methods, almost all uses of this class are one-line calls to one of the static &lt;code&gt;showXxxDialog&lt;/code&gt; methods shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e95138eee0f8263aaeecdb23d34bbf507f801" translate="yes" xml:space="preserve">
          <source>While the child view is being accessed a read lock is acquired on the associated document so that the model is stable while being accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18005f1749c0380a1dd553fb852a3af3b6131165" translate="yes" xml:space="preserve">
          <source>While the drag and drop implementation calls &lt;code&gt;canImport&lt;/code&gt; to determine the suitability of a transfer before calling this method, the implementation of paste does not. As such, it cannot be assumed that the transfer is acceptable upon a call to this method for paste. It is recommended that &lt;code&gt;canImport&lt;/code&gt; be explicitly called to cover this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efe8fc428299599c701c1333f6be7122c0cee74" translate="yes" xml:space="preserve">
          <source>While the hook is being called, the new &lt;code&gt;ConstantCallSite&lt;/code&gt; object is in a partially constructed state. In this state, a call to &lt;code&gt;getTarget&lt;/code&gt;, or any other attempt to use the target, will result in an &lt;code&gt;IllegalStateException&lt;/code&gt;. It is legal at all times to obtain the call site's type using the &lt;code&gt;type&lt;/code&gt; method.</source>
          <target state="translated">Пока вызывается ловушка, новый объект &lt;code&gt;ConstantCallSite&lt;/code&gt; находится в частично сконструированном состоянии. В этом состоянии вызов &lt;code&gt;getTarget&lt;/code&gt; или любая другая попытка использовать цель приведет к &lt;code&gt;IllegalStateException&lt;/code&gt; . В любое время допустимо получение типа сайта вызова с помощью метода &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e64de2c787d87b6255db69fb316860954d89cac4" translate="yes" xml:space="preserve">
          <source>While the scoping mechanism for &lt;code&gt;synchronized&lt;/code&gt; methods and statements makes it much easier to program with monitor locks, and helps avoid many common programming errors involving locks, there are occasions where you need to work with locks in a more flexible way. For example, some algorithms for traversing concurrently accessed data structures require the use of &quot;hand-over-hand&quot; or &quot;chain locking&quot;: you acquire the lock of node A, then node B, then release A and acquire C, then release B and acquire D and so on. Implementations of the &lt;code&gt;Lock&lt;/code&gt; interface enable the use of such techniques by allowing a lock to be acquired and released in different scopes, and allowing multiple locks to be acquired and released in any order.</source>
          <target state="translated">Хотя механизм области видимости для &lt;code&gt;synchronized&lt;/code&gt; методов и операторов значительно упрощает программирование с блокировками монитора и помогает избежать многих распространенных ошибок программирования, связанных с блокировками, бывают случаи, когда вам нужно работать с блокировками более гибко. Например, некоторые алгоритмы для обхода структур данных, к которым осуществляется одновременный доступ, требуют использования &amp;laquo;ручного управления&amp;raquo; или &amp;laquo;цепной блокировки&amp;raquo;: вы получаете блокировку узла A, затем узла B, затем освобождаете A и получаете C, затем освобождаете B и приобрести D и так далее. Реализации интерфейса &lt;code&gt;Lock&lt;/code&gt; позволяют использовать такие методы, позволяя получать и снимать блокировку в различных областях, а также позволяя получать и снимать несколько блокировок в любом порядке.</target>
        </trans-unit>
        <trans-unit id="e4da0d73a5a72455f5512b34b17d391abf383ff0" translate="yes" xml:space="preserve">
          <source>While the specification of this method in the &lt;a href=&quot;writer#write(java.lang.String,int,int)&quot;&gt;superclass&lt;/a&gt; recommends that an &lt;a href=&quot;../lang/indexoutofboundsexception&quot;&gt;&lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;&lt;/a&gt; be thrown if &lt;code&gt;len&lt;/code&gt; is negative or &lt;code&gt;off + len&lt;/code&gt; is negative, the implementation in this class does not throw such an exception in these cases but instead simply writes no characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa594a26798c1bce1231654fe91cf1056a98394" translate="yes" xml:space="preserve">
          <source>While the stream is open, the &lt;code&gt;append(char)&lt;/code&gt;, &lt;code&gt;
 append(CharSequence)&lt;/code&gt;, &lt;code&gt;append(CharSequence, int, int)&lt;/code&gt;, &lt;code&gt;flush()&lt;/code&gt;, &lt;code&gt;write(int)&lt;/code&gt;, &lt;code&gt;write(char[])&lt;/code&gt;, and &lt;code&gt;write(char[], int, int)&lt;/code&gt; methods do nothing. After the stream has been closed, these methods all throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b18e67ae96f95fb89082471b6693cb13e2e148" translate="yes" xml:space="preserve">
          <source>While the stream is open, the &lt;code&gt;available()&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;read(byte[])&lt;/code&gt;, &lt;code&gt;read(byte[], int, int)&lt;/code&gt;, &lt;code&gt;readAllBytes()&lt;/code&gt;, &lt;code&gt;readNBytes(byte[], int, int)&lt;/code&gt;, &lt;code&gt;readNBytes(int)&lt;/code&gt;, &lt;code&gt;skip(long)&lt;/code&gt;, &lt;code&gt;skipNBytes(long)&lt;/code&gt;, and &lt;code&gt;transferTo()&lt;/code&gt; methods all behave as if end of stream has been reached. After the stream has been closed, these methods all throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f27c207d45817eb6f9a257c7c530eb9bfcf4665" translate="yes" xml:space="preserve">
          <source>While the stream is open, the &lt;code&gt;available()&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;read(byte[])&lt;/code&gt;, &lt;code&gt;read(byte[], int, int)&lt;/code&gt;, &lt;code&gt;readAllBytes()&lt;/code&gt;, &lt;code&gt;readNBytes(byte[], int, int)&lt;/code&gt;, &lt;code&gt;readNBytes(int)&lt;/code&gt;, &lt;code&gt;skip(long)&lt;/code&gt;, and &lt;code&gt;transferTo()&lt;/code&gt; methods all behave as if end of stream has been reached. After the stream has been closed, these methods all throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915add191b3db03099891be3aeb321c9cad7cf68" translate="yes" xml:space="preserve">
          <source>While the stream is open, the &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;read(char[])&lt;/code&gt;, &lt;code&gt;read(char[], int, int)&lt;/code&gt;, &lt;code&gt;read(CharBuffer)&lt;/code&gt;, &lt;code&gt;
 ready()&lt;/code&gt;, &lt;code&gt;skip(long)&lt;/code&gt;, and &lt;code&gt;transferTo()&lt;/code&gt; methods all behave as if end of stream has been reached. After the stream has been closed, these methods all throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354a3e678c0afc6d9c995cad19836af2c60e94bf" translate="yes" xml:space="preserve">
          <source>While the stream is open, the &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;read(char[])&lt;/code&gt;, &lt;code&gt;read(char[], int, int)&lt;/code&gt;, &lt;code&gt;read(Charbuffer)&lt;/code&gt;, &lt;code&gt;
 ready()&lt;/code&gt;, &lt;code&gt;skip(long)&lt;/code&gt;, and &lt;code&gt;transferTo()&lt;/code&gt; methods all behave as if end of stream has been reached. After the stream has been closed, these methods all throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e5439eae991a55c97ddfd38870798ef229cbcd" translate="yes" xml:space="preserve">
          <source>While the stream is open, the &lt;code&gt;write(int)&lt;/code&gt;, &lt;code&gt;
 write(byte[])&lt;/code&gt;, and &lt;code&gt;write(byte[], int, int)&lt;/code&gt; methods do nothing. After the stream has been closed, these methods all throw &lt;code&gt;
 IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1904d24dfdb2dc325b56134c9dce9b4ddaba55" translate="yes" xml:space="preserve">
          <source>While the unit of time of the return value is milliseconds, the granularity of the value depends on the underlying file system and may be larger. For example, some file systems use time stamps in units of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a236fbeded33e61e30714b2af91dd5dfd1beff" translate="yes" xml:space="preserve">
          <source>While this class has been part of swing for a while now, it is public as of 1.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebba50ef7f7692c7039eeb694af9a571417cf59" translate="yes" xml:space="preserve">
          <source>While this class inherits from &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;, a few of the inherited tuning methods are not useful for it. In particular, because it acts as a fixed-sized pool using &lt;code&gt;corePoolSize&lt;/code&gt; threads and an unbounded queue, adjustments to &lt;code&gt;maximumPoolSize&lt;/code&gt; have no useful effect. Additionally, it is almost never a good idea to set &lt;code&gt;corePoolSize&lt;/code&gt; to zero or use &lt;code&gt;allowCoreThreadTimeOut&lt;/code&gt; because this may leave the pool without threads to handle tasks once they become eligible to run.</source>
          <target state="translated">Хотя этот класс наследуется от &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; , некоторые из унаследованных методов настройки для него бесполезны. В частности, поскольку он действует как пул фиксированного размера, использующий потоки &lt;code&gt;corePoolSize&lt;/code&gt; и неограниченную очередь, изменения в &lt;code&gt;maximumPoolSize&lt;/code&gt; не имеют никакого полезного эффекта. Кроме того, почти никогда не рекомендуется устанавливать &lt;code&gt;corePoolSize&lt;/code&gt; на ноль или использовать &lt;code&gt;allowCoreThreadTimeOut&lt;/code&gt; , потому что это может оставить пул без потоков для обработки задач, когда они станут доступными для выполнения.</target>
        </trans-unit>
        <trans-unit id="37f43590d9884fbad9cdec8f02f0705df36bced7" translate="yes" xml:space="preserve">
          <source>While this interface method is declared to throw &lt;code&gt;
 Exception&lt;/code&gt;, implementers are &lt;em&gt;strongly&lt;/em&gt; encouraged to declare concrete implementations of the &lt;code&gt;close&lt;/code&gt; method to throw more specific exceptions, or to throw no exception at all if the close operation cannot fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c294c7b4d4f86f3493751e198f59f458ef4183c" translate="yes" xml:space="preserve">
          <source>While this interface method is declared to throw &lt;code&gt;Exception&lt;/code&gt;, implementers are &lt;em&gt;strongly&lt;/em&gt; encouraged to declare concrete implementations of the &lt;code&gt;close&lt;/code&gt; method to throw more specific exceptions, or to throw no exception at all if the close operation cannot fail.</source>
          <target state="translated">Хотя этот интерфейсный метод объявлен как генерирующий &lt;code&gt;Exception&lt;/code&gt; , разработчикам &lt;em&gt;настоятельно&lt;/em&gt; рекомендуется объявить конкретные реализации метода &lt;code&gt;close&lt;/code&gt; , чтобы генерировать более конкретные исключения, или вообще не генерировать исключение, если операция закрытия не может завершиться неудачей.</target>
        </trans-unit>
        <trans-unit id="5aafec2ecc872a5e693872afd5344f871ab06e7e" translate="yes" xml:space="preserve">
          <source>While this is a public method, this is typically only useful for subclassers of &lt;code&gt;JFormattedTextField&lt;/code&gt;. &lt;code&gt;JFormattedTextField&lt;/code&gt; will invoke this method at the appropriate times when the value changes, or its internal state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79111a912067f71a2c429865902e2e2dfdb6357a" translate="yes" xml:space="preserve">
          <source>While this is a public method, this is typically only useful for subclassers of &lt;code&gt;JFormattedTextField&lt;/code&gt;. &lt;code&gt;JFormattedTextField&lt;/code&gt; will invoke this method at the appropriate times when the value changes, or its internal state changes. You will only need to invoke this yourself if you are subclassing &lt;code&gt;JFormattedTextField&lt;/code&gt; and installing/uninstalling &lt;code&gt;AbstractFormatter&lt;/code&gt; at a different time than &lt;code&gt;JFormattedTextField&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8962e33fe4ae692b6f0669c0b0060997d23406a" translate="yes" xml:space="preserve">
          <source>While this may seem a more roundabout way to perform an aggregation compared to simply mutating a running total in a loop, reduction operations parallelize more gracefully, without needing additional synchronization and with greatly reduced risk of data races.</source>
          <target state="translated">Хотя это может показаться более обходным способом выполнения агрегации по сравнению с простым мутированием бегущей суммы в цикле,операции по сокращению распараллеливания выполняются более изящно,без необходимости дополнительной синхронизации и со значительно сниженным риском гонок с данными.</target>
        </trans-unit>
        <trans-unit id="a47a2652b0c502dd1c763501db1290a29367490b" translate="yes" xml:space="preserve">
          <source>While this method is public, it should only be invoked by the &lt;code&gt;UIManager&lt;/code&gt; when the look and feel is set as the current look and feel and after &lt;code&gt;initialize&lt;/code&gt; has been invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a95185dab9cb4d4601e61790a61c53f8e58816" translate="yes" xml:space="preserve">
          <source>While this method returns an array of &lt;code&gt;
 Constructor&amp;lt;T&amp;gt;&lt;/code&gt; objects (that is an array of constructors from this class), the return type of this method is &lt;code&gt;
 Constructor&amp;lt;?&amp;gt;[]&lt;/code&gt; and &lt;em&gt;not&lt;/em&gt;&lt;code&gt;Constructor&amp;lt;T&amp;gt;[]&lt;/code&gt; as might be expected. This less informative return type is necessary since after being returned from this method, the array could be modified to hold &lt;code&gt;Constructor&lt;/code&gt; objects for different classes, which would violate the type guarantees of &lt;code&gt;Constructor&amp;lt;T&amp;gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c581298e75ef5bf15df9b06bf2c664ea73c5c346" translate="yes" xml:space="preserve">
          <source>While writing an object via writeUnshared does not in itself guarantee a unique reference to the object when it is deserialized, it allows a single object to be defined multiple times in a stream, so that multiple calls to readUnshared by the receiver will not conflict. Note that the rules described above only apply to the base-level object written with writeUnshared, and not to any transitively referenced sub-objects in the object graph to be serialized.</source>
          <target state="translated">В то время как запись объекта через writeUnshared сама по себе не гарантирует уникальную ссылку на объект при его десериализации,она позволяет многократно определять один объект в потоке,так что многократные вызовы readUnshared со стороны получателя не будут конфликтовать.Обратите внимание,что правила,описанные выше,применяются только к объекту базового уровня,написанному с помощью writeUnshared,и не применяются к любым переходно-направленным подобъектам в объектном графе для сериализации.</target>
        </trans-unit>
        <trans-unit id="6b0d3c4f0480a5e74d5383ac9ba2edc90d882c39" translate="yes" xml:space="preserve">
          <source>WhileLoopTree</source>
          <target state="translated">WhileLoopTree</target>
        </trans-unit>
        <trans-unit id="5da2d68669a03b947051233558b6ce56e6780f0a" translate="yes" xml:space="preserve">
          <source>White_Space</source>
          <target state="translated">White_Space</target>
        </trans-unit>
        <trans-unit id="325016380fb9842b99430cbb0b7cb06becabcdfe" translate="yes" xml:space="preserve">
          <source>Whitespace is allowed on either side of ',', ';', '=', and '+'. Such whitespace is accepted but not generated by this code, and is ignored when comparing names.</source>
          <target state="translated">Пробельные символы разрешены с обеих сторон от ',',';','=' и '+'.Такой пробел принимается,но не генерируется этим кодом,и игнорируется при сравнении имен.</target>
        </trans-unit>
        <trans-unit id="3ef5e18e6403c342fcf6ad4db4c278abb2cb9d38" translate="yes" xml:space="preserve">
          <source>Whitespace is not significant in the above regular expressions.</source>
          <target state="translated">Пробельные символы не значимы в приведенных выше регулярных выражениях.</target>
        </trans-unit>
        <trans-unit id="6d620fb7a85a0616f4a4e6e9dda029e04472a323" translate="yes" xml:space="preserve">
          <source>Wide Area Information Server (WAIS) protocol.</source>
          <target state="translated">Протокол сервера широкополосной информации (WAIS).</target>
        </trans-unit>
        <trans-unit id="4088f5317f57ea6f119849410abea3f8143240d0" translate="yes" xml:space="preserve">
          <source>Widget for user to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="969d00f2cb9efe3539d44d8c60c74f5ad9d4d231" translate="yes" xml:space="preserve">
          <source>Width in pixels of the region of image data that this SampleModel describes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad438ebb7fecc02d85771ba7a5e164704291d2aa" translate="yes" xml:space="preserve">
          <source>Width margin between each column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1391aceba26f92ebfa3692913a873cad2e88d4" translate="yes" xml:space="preserve">
          <source>Width of border around image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1962f060f9fe9059e9a8a6c80aa4a55652760749" translate="yes" xml:space="preserve">
          <source>Width of border around image. See the border attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d4e6ae97de9d8e0668c4d723b13f4d0fb48f3e" translate="yes" xml:space="preserve">
          <source>Width of border around the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0c6f8902b918d8abe553b58cfd7895baa25253" translate="yes" xml:space="preserve">
          <source>Width of border around the object. See the border attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e3d6c9d2f09610830e5f522f7dc3562cd09301" translate="yes" xml:space="preserve">
          <source>Width of control (in characters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fff79d676a28a0dd3d706794781c8d39249359f" translate="yes" xml:space="preserve">
          <source>Width of control (in characters). See the cols attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50794f4688ae96bdb4341321c3ffa61a405c19eb" translate="yes" xml:space="preserve">
          <source>Width of the back buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c249f6d47c523ac145af2ace67f2b7577b5b942" translate="yes" xml:space="preserve">
          <source>Width or height of the divider based on orientation &lt;code&gt;BasicSplitPaneUI&lt;/code&gt; adds two to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3145705b3544273fd612b777459ce0a3125581a" translate="yes" xml:space="preserve">
          <source>WildcardTree</source>
          <target state="translated">WildcardTree</target>
        </trans-unit>
        <trans-unit id="d5208bbe059aa1046c3f08361ea1e178ca24d291" translate="yes" xml:space="preserve">
          <source>WildcardType</source>
          <target state="translated">WildcardType</target>
        </trans-unit>
        <trans-unit id="66c44a9ca081e2d89075ec9d49d2689c74584a8a" translate="yes" xml:space="preserve">
          <source>WildcardType represents a wildcard type expression, such as &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;? extends Number&lt;/code&gt;, or &lt;code&gt;? super Integer&lt;/code&gt;.</source>
          <target state="translated">WildcardType представляет выражение типа подстановочного знака, например &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;? extends Number&lt;/code&gt; , или &lt;code&gt;? super Integer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce867c4c796e6dbe1d3e38766feb789822009ee1" translate="yes" xml:space="preserve">
          <source>WildcardType.getExtendsBound()</source>
          <target state="translated">WildcardType.getExtendsBound()</target>
        </trans-unit>
        <trans-unit id="330bde92db69c2198109194787e6c21b7478f2c0" translate="yes" xml:space="preserve">
          <source>WildcardType.getLowerBounds()</source>
          <target state="translated">WildcardType.getLowerBounds()</target>
        </trans-unit>
        <trans-unit id="f81da7284909bf43711682454467244f68db18a0" translate="yes" xml:space="preserve">
          <source>WildcardType.getSuperBound()</source>
          <target state="translated">WildcardType.getSuperBound()</target>
        </trans-unit>
        <trans-unit id="97172c5abf520854245e039ae23bd4e64bc5422f" translate="yes" xml:space="preserve">
          <source>WildcardType.getUpperBounds()</source>
          <target state="translated">WildcardType.getUpperBounds()</target>
        </trans-unit>
        <trans-unit id="521d06dd779ba79ee4cea678dbe14d70dbe38387" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;java.awt.Image&lt;/code&gt; is not visible, the &lt;code&gt;java.desktop&lt;/code&gt; module is not loaded, or the &lt;code&gt;java.desktop&lt;/code&gt; module is not in the run-time image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33509e2ec308e6546857b8da6aba57cee35ab90" translate="yes" xml:space="preserve">
          <source>Will be called to see whether or not this cookie should be accepted.</source>
          <target state="translated">Будет звонить,чтобы узнать,следует ли принять этот куки-файл.</target>
        </trans-unit>
        <trans-unit id="37fa7a262702fe582d3a1dccfa6ad0f9944b59d4" translate="yes" xml:space="preserve">
          <source>Will check the role according to its corresponding role definition provided in relation's relation type</source>
          <target state="translated">Будет проверять роль в соответствии с ее соответствующим определением роли,предоставленным в типе отношений отношения</target>
        </trans-unit>
        <trans-unit id="6ccf06bf2935ecc384eb6df2769fb29a28f7bd2b" translate="yes" xml:space="preserve">
          <source>Will not always find a match (or the correct match) if some part of the parse is ambiguous. For example, if the pattern &quot;{1},{2}&quot; is used with the string arguments {&quot;a,b&quot;, &quot;c&quot;}, it will format as &quot;a,b,c&quot;. When the result is parsed, it will return {&quot;a&quot;, &quot;b,c&quot;}.</source>
          <target state="translated">Не всегда найдет совпадение (или правильное совпадение),если какая-то часть разбора неоднозначна.Например,если используется шаблон &quot;{1},{2}&quot; со строковыми аргументами {&quot;a,b&quot;,&quot;c&quot;},то он отформатируется как &quot;a,b,c&quot;.При разборе результата он вернёт {&quot;a&quot;,&quot;b,c&quot;}}.</target>
        </trans-unit>
        <trans-unit id="c58deb92d1c5c729de051dba7b43a35ac3101b21" translate="yes" xml:space="preserve">
          <source>Will not see uncommitted data (make &quot;dirty&quot; reads).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d669a272be58163914a204bccea56c09fa69e531" translate="yes" xml:space="preserve">
          <source>Will send a notification (RelationNotification with type RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the relation is a MBean or not).</source>
          <target state="translated">Отправит уведомление (RelationNotification с типом RELATION_BASIC_UPDATE или RELATION_MBEAN_UPDATE,в зависимости от того,является ли отношение мегабайтом или нет).</target>
        </trans-unit>
        <trans-unit id="c456f440fcf296338c58bf917ef98c5c5d7bac84" translate="yes" xml:space="preserve">
          <source>Will send one notification (RelationNotification with type RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the relation is a MBean or not) per updated role.</source>
          <target state="translated">Отправляет одно уведомление (RelationNotification с типом RELATION_BASIC_UPDATE или RELATION_MBEAN_UPDATE,в зависимости от того,является ли отношение MBean или нет)на каждую обновленную роль.</target>
        </trans-unit>
        <trans-unit id="af60309eed9f0f92d76603dc55ac020d8599207d" translate="yes" xml:space="preserve">
          <source>Will start editing for node if there is a &lt;code&gt;cellEditor&lt;/code&gt; and &lt;code&gt;shouldSelectCell&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95d75c28c35065fc1c57b0e876887193f122021" translate="yes" xml:space="preserve">
          <source>WinListener</source>
          <target state="translated">WinListener</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="5084a061070a3f1aa4d1ecab3a00df323a3b610e" translate="yes" xml:space="preserve">
          <source>Window events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b21379200b4ccc460b4492fe0d5374614171a" translate="yes" xml:space="preserve">
          <source>Window focus events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac26c71e069b6eaa7e969b40aec9f9b5620310d" translate="yes" xml:space="preserve">
          <source>Window.AccessibleAWTWindow</source>
          <target state="translated">Window.AccessibleAWTWindow</target>
        </trans-unit>
        <trans-unit id="507611730a02b402edd6e7ba76a6fcebba9f788e" translate="yes" xml:space="preserve">
          <source>Window.Type</source>
          <target state="translated">Window.Type</target>
        </trans-unit>
        <trans-unit id="5dca9b99152803aee06162ae5e180ed80d355a7c" translate="yes" xml:space="preserve">
          <source>WindowAdapter</source>
          <target state="translated">WindowAdapter</target>
        </trans-unit>
        <trans-unit id="d30877c43152fe36a3fd859538a40a5cdaf9bfe2" translate="yes" xml:space="preserve">
          <source>WindowConstants</source>
          <target state="translated">WindowConstants</target>
        </trans-unit>
        <trans-unit id="506bdfc6c0c9e73aacc009ccc59240f421dee55e" translate="yes" xml:space="preserve">
          <source>WindowEvent</source>
          <target state="translated">WindowEvent</target>
        </trans-unit>
        <trans-unit id="389aeec541bb01caf058a1c61a1a55c203773d3c" translate="yes" xml:space="preserve">
          <source>WindowFocusListener</source>
          <target state="translated">WindowFocusListener</target>
        </trans-unit>
        <trans-unit id="d1e4bbe2f756a9e07443c61cb2a25527b3f01627" translate="yes" xml:space="preserve">
          <source>WindowListener</source>
          <target state="translated">WindowListener</target>
        </trans-unit>
        <trans-unit id="36d800c05ccdf96a77f664405b24b1d515a7dcaa" translate="yes" xml:space="preserve">
          <source>WindowStateListener</source>
          <target state="translated">WindowStateListener</target>
        </trans-unit>
        <trans-unit id="b23f002c02bd817e7699352ab74ddf1956672a1c" translate="yes" xml:space="preserve">
          <source>Windows NT chooses to represent users, groups and realms (or domains) with not only common names, but also relatively unique numbers. These numbers are called Security IDentifiers, or SIDs. Windows NT also provides services that render these SIDs into string forms. This class represents these string forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ec586bd67aec6c5c53fd30fb990d116b2bc3ae" translate="yes" xml:space="preserve">
          <source>Windows are capable of generating the following WindowEvents: WindowOpened, WindowClosed, WindowGainedFocus, WindowLostFocus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e736d7e9cd07fdd5619eb22e9d6ea04daf0e51ae" translate="yes" xml:space="preserve">
          <source>Windows cannot overlap the full-screen window. All other application windows will always appear beneath the full-screen window in the Z-order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593ac35fa2bd24a666d120e3789447fbf9c25e2a" translate="yes" xml:space="preserve">
          <source>WindowsNT/x86/4.0/lib/stat.dll</source>
          <target state="translated">WindowsNT/x86/4.0/lib/stat.dll</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="de916a95a394d60b5970c72c8e49b95595c376f5" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; and &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt;, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce065a2774362ea1c0b4b2a9c6d578002c87fa95" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt;, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled together as a single document with no regard to new sheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000a0d000df5c6984649ddbd1ee6d53891ba7395" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt;, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled together as a single document, but document &lt;code&gt;b&lt;/code&gt; starts on a new sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702bb02b91946be2e7d1e7c71af340e7112b4fc2" translate="yes" xml:space="preserve">
          <source>With SEPARATE_DOCUMENTS_UNCOLLATED_COPIES and SEPARATE_DOCUMENTS_COLLATED_COPIES, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled separately.</source>
          <target state="translated">С SEPARATE_DOCUMENTS_UNCOLLATED_COPIES и SEPARATE_DOCUMENTS_COLLATED_COPIES документы &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; сшиваются отдельно.</target>
        </trans-unit>
        <trans-unit id="c6940d372bef23c372a894b2611764845d087573" translate="yes" xml:space="preserve">
          <source>With SINGLE_DOCUMENT, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled together as a single document with no regard to new sheets.</source>
          <target state="translated">С помощью SINGLE_DOCUMENT документы &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; сшиваются как единый документ без учета новых листов.</target>
        </trans-unit>
        <trans-unit id="6aea5edd4595a1343229324f4788e3637ab7593b" translate="yes" xml:space="preserve">
          <source>With SINGLE_DOCUMENT_NEW_SHEET, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled together as a single document, but document &lt;code&gt;b&lt;/code&gt; starts on a new sheet.</source>
          <target state="translated">При использовании SINGLE_DOCUMENT_NEW_SHEET документы &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; сшиваются как один документ, но документ &lt;code&gt;b&lt;/code&gt; начинается с нового листа.</target>
        </trans-unit>
        <trans-unit id="7a7f0a9b6a27b5ea272b2faa2111b50312da5684" translate="yes" xml:space="preserve">
          <source>With Version 0 cookies, values should not contain white space, brackets, parentheses, equals signs, commas, double quotes, slashes, question marks, at signs, colons, and semicolons. Empty values may not behave the same way on all browsers.</source>
          <target state="translated">В кукисах версии 0 значения не должны содержать пробелов,скобок,круглых скобок,знаков равенства,запятых,двойных кавычек,косых черт,вопросительных знаков,у знаков,двоеточий и точек с запятой.Пустые значения могут вести себя не одинаково во всех браузерах.</target>
        </trans-unit>
        <trans-unit id="bf66f17ae2780078f9fea48695737926c268f057" translate="yes" xml:space="preserve">
          <source>With a PermissionCollection, you can:</source>
          <target state="translated">С помощью PermissionCollection,ты можешь:</target>
        </trans-unit>
        <trans-unit id="ddf292b706b0ea961ebe157c83d2d5ff0fdfda77" translate="yes" xml:space="preserve">
          <source>With a reference to the &lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; element, a relative XPath expression can be written to select the &lt;code&gt;&amp;lt;manufacturer&amp;gt;&lt;/code&gt; child element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7921a6a2bd87af6e70cb7478096f1f706c0eed48" translate="yes" xml:space="preserve">
          <source>With attribute type synonyms, a directory can assign multiple names to the same attribute. For example, &quot;cn&quot; and &quot;commonName&quot; might both refer to the same attribute. Asking for &quot;cn&quot; might return the &quot;commonName&quot; attribute.</source>
          <target state="translated">При использовании синонимов типа атрибута каталог может присвоить одному и тому же атрибуту несколько имён.Например,&quot;cn&quot; и &quot;commonName&quot; могут относиться к одному и тому же атрибуту.Запрос &quot;cn&quot; может вернуть атрибут &quot;commonName&quot;.</target>
        </trans-unit>
        <trans-unit id="342174bb35309e577ba49df9b6a0136aab3a5327" translate="yes" xml:space="preserve">
          <source>With both intervals and &lt;code&gt;Spring&lt;/code&gt;s we can define &quot;-&quot; and &lt;em&gt;min&lt;/em&gt; in terms of negation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b146947ce59686776207df75fa9d667325f9863" translate="yes" xml:space="preserve">
          <source>With most look and feels, the user can drag out a tool bar into a separate window (unless the &lt;code&gt;floatable&lt;/code&gt; property is set to &lt;code&gt;false&lt;/code&gt;). For drag-out to work correctly, it is recommended that you add &lt;code&gt;JToolBar&lt;/code&gt; instances to one of the four &quot;sides&quot; of a container whose layout manager is a &lt;code&gt;BorderLayout&lt;/code&gt;, and do not add children to any of the other four &quot;sides&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aee19fea36c937253e601d256a319bb86142c5d" translate="yes" xml:space="preserve">
          <source>With some complex reduction operations, for example a &lt;code&gt;collect()&lt;/code&gt; that produces a &lt;code&gt;Map&lt;/code&gt;, such as:</source>
          <target state="translated">С некоторыми сложными операциями сокращения, например, с помощью &lt;code&gt;collect()&lt;/code&gt; который создает &lt;code&gt;Map&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="5e5f811ed587d929e889b7d29ba9d4370ee0e985" translate="yes" xml:space="preserve">
          <source>With the above code, the health status is collected unnecessarily even when the log level FINER is disabled. With the Supplier-accepting version as below, the status will only be collected when the log level FINER is enabled.</source>
          <target state="translated">При использовании вышеуказанного кода,состояние здоровья собирается излишне даже при отключенном уровне журнала FINER.В версии для поставщиков,описанной ниже,статус будет собираться только при включенном уровне журнала FINER.</target>
        </trans-unit>
        <trans-unit id="dc2156a4e2b3c1c33c618ec6f586c7ea7f4199d8" translate="yes" xml:space="preserve">
          <source>With the exception of re-imaging an entire document for multiple collated copies, the increasing page index order means that when page N is requested if a client needs to calculate page break position, it may safely discard any state related to pages &amp;lt; N, and make current that for page N. &quot;State&quot; usually is just the calculated position in the document that corresponds to the start of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2024497e2bf2f02b354dda9dd14a083e17ac2ff2" translate="yes" xml:space="preserve">
          <source>With the exception of selected printer, the PrinterJob state is not updated to reflect the user's changes. For the selections to affect a printer job, the attributes must be specified in the call to the &lt;code&gt;print(PrintRequestAttributeSet)&lt;/code&gt; method. If using the Pageable interface, clients which intend to use media selected by the user must create a PageFormat derived from the user's selections. If the user cancels the dialog, the attributes will not reflect any changes made by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e344a6ab10b8325512c520c0690b8d3e445352c1" translate="yes" xml:space="preserve">
          <source>With the following HTML content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618b01eeb003ee4b1ffdf3f6106417f6de534070" translate="yes" xml:space="preserve">
          <source>With the information retrieved from the methods &lt;code&gt;getStatus&lt;/code&gt; and &lt;code&gt;getConflictValue&lt;/code&gt;, the application may make a determination as to which value should be persisted in the data source. The application then calls the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;setResolvedValue&lt;/code&gt;, which sets the value to be persisted in the &lt;code&gt;RowSet&lt;/code&gt; object and also in the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20e7358b9286868d2d9a41c8b600c7c286dd9b1" translate="yes" xml:space="preserve">
          <source>With this addition of a semicolon the input is a complete source snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa5906aa1c7ed8368080a25444cc18e3529411d" translate="yes" xml:space="preserve">
          <source>With this addition of a semicolon the input is a complete source snippet. This will only be returned when the end of input is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ff6037d8867d2b3d47892d80515cedec13ebae" translate="yes" xml:space="preserve">
          <source>With this increased flexibility comes additional responsibility. The absence of block-structured locking removes the automatic release of locks that occurs with &lt;code&gt;synchronized&lt;/code&gt; methods and statements. In most cases, the following idiom should be used:</source>
          <target state="translated">Повышенная гибкость дает дополнительную ответственность. Отсутствие блокировок с блочной структурой устраняет автоматическое снятие блокировок, которое происходит с &lt;code&gt;synchronized&lt;/code&gt; методами и операторами. В большинстве случаев следует использовать следующую идиому:</target>
        </trans-unit>
        <trans-unit id="d3c389bbd15c03f9dd881098991d518ed6f3894d" translate="yes" xml:space="preserve">
          <source>Within a</source>
          <target state="translated">В пределах</target>
        </trans-unit>
        <trans-unit id="eaa46bf4774a02d445fea7fa33dbb744f6506eaa" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt;, or &lt;code&gt;Entity&lt;/code&gt; being serialized, &lt;code&gt;Nodes&lt;/code&gt; are processed as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2a1649d264fff3b41ff1e86e92590c9426695c" translate="yes" xml:space="preserve">
          <source>Within a bracket expression the &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; characters match themselves. The (&lt;code&gt;-&lt;/code&gt;) character matches itself if it is the first character within the brackets, or the first character after the &lt;code&gt;!&lt;/code&gt; if negating.</source>
          <target state="translated">В выражении в скобках &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; и &lt;code&gt;\&lt;/code&gt; символы совпадают. Символ ( &lt;code&gt;-&lt;/code&gt; ) соответствует самому себе, если он является первым символом в скобках или первым символом после &lt;code&gt;!&lt;/code&gt; если отрицать.</target>
        </trans-unit>
        <trans-unit id="83d916c5bbfc33ee16ea209e9686d45596a9c2ac" translate="yes" xml:space="preserve">
          <source>Within each &lt;code&gt;ClassLoader&lt;/code&gt; instance all classes from the same java package have the same Package object. The static methods allow a package to be found by name or the set of all packages known to the current class loader to be found.</source>
          <target state="translated">В каждом экземпляре &lt;code&gt;ClassLoader&lt;/code&gt; все классы из одного пакета Java имеют один и тот же объект Package. Статические методы позволяют найти пакет по имени или найти набор всех пакетов, известных текущему загрузчику классов.</target>
        </trans-unit>
        <trans-unit id="0668371fa9b725d274f510f8d695c661c8f6c217" translate="yes" xml:space="preserve">
          <source>Within each such subset only the most specific methods are selected. Let method M be a method from a set of methods with same VM signature (return type, name, parameter types). M is most specific if there is no such method N != M from the same set, such that N is more specific than M. N is more specific than M if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5391ea4c2aede0070693a361a2994f5e4a6a05" translate="yes" xml:space="preserve">
          <source>Within each such subset only the most specific methods are selected. Let method M be a method from a set of methods with same signature and return type. M is most specific if there is no such method N != M from the same set, such that N is more specific than M. N is more specific than M if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f444b6815c4d0578f6ec1b24cacc82f1de3a985" translate="yes" xml:space="preserve">
          <source>Within markup, but outside of attributes, any occurrence of a character that cannot be represented in the output character encoding is reported as a &lt;code&gt;DOMError&lt;/code&gt; fatal error. An example would be serializing the element &amp;lt;LaCa&amp;ntilde;ada/&amp;gt; with &lt;code&gt;encoding=&quot;us-ascii&quot;&lt;/code&gt;. This will result with a generation of a &lt;code&gt;DOMError&lt;/code&gt; &quot;wf-invalid-character-in-node-name&quot; (as proposed in &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-well-formed&quot;&gt;well-formed&lt;/a&gt;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65be46b0d82a65208f681b65c6b6af3ea153929" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;activate&lt;/code&gt; method, a controller obtains initial values by querying the &lt;code&gt;IIOMetadata&lt;/code&gt; object's settings, either using the XML DOM tree or a plug-in specific interface, modifies values by whatever means, then modifies the &lt;code&gt;IIOMetadata&lt;/code&gt; object's settings, using either the &lt;code&gt;setFromTree&lt;/code&gt; or &lt;code&gt;mergeTree&lt;/code&gt; methods, or a plug-in specific interface. In general, applications may expect that when the &lt;code&gt;activate&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IIOMetadata&lt;/code&gt; object is ready for use in a write operation.</source>
          <target state="translated">В методе &lt;code&gt;activate&lt;/code&gt; контроллер получает начальные значения, запрашивая &lt;code&gt;IIOMetadata&lt;/code&gt; объекта IIOMetadata , используя дерево XML DOM или специальный интерфейс плагина, изменяет значения любыми способами, а затем изменяет &lt;code&gt;IIOMetadata&lt;/code&gt; объекта IIOMetadata , используя либо &lt;code&gt;setFromTree&lt;/code&gt; , либо &lt;code&gt;mergeTree&lt;/code&gt; . методы или интерфейс конкретного плагина. В общем, приложения могут ожидать, что, когда метод &lt;code&gt;activate&lt;/code&gt; вернет &lt;code&gt;true&lt;/code&gt; , объект &lt;code&gt;IIOMetadata&lt;/code&gt; будет готов к использованию в операции записи.</target>
        </trans-unit>
        <trans-unit id="83029e44e09a5ba0623249885430579f4267be4f" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;activate&lt;/code&gt; method, a controller obtains initial values by querying the &lt;code&gt;IIOParam&lt;/code&gt; object's &lt;code&gt;get&lt;/code&gt; methods, modifies values by whatever means, then invokes the &lt;code&gt;IIOParam&lt;/code&gt; object's &lt;code&gt;set&lt;/code&gt; methods to modify the appropriate settings. Normally, these &lt;code&gt;set&lt;/code&gt; methods will be invoked all at once at a final commit in order that a cancel operation not disturb existing values. In general, applications may expect that when the &lt;code&gt;activate&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IIOParam&lt;/code&gt; object is ready for use in a read or write operation.</source>
          <target state="translated">В &lt;code&gt;activate&lt;/code&gt; методе контроллер получает начальные значения, запрашивая &lt;code&gt;IIOParam&lt;/code&gt; объекта &lt;code&gt;get&lt;/code&gt; методы, ценности модифицирует любыми средствами, затем вызывает &lt;code&gt;IIOParam&lt;/code&gt; объекта &lt;code&gt;set&lt;/code&gt; методов , чтобы изменить соответствующие настройки. Обычно эти методы &lt;code&gt;set&lt;/code&gt; будут вызываться все сразу при окончательной фиксации, чтобы операция отмены не нарушала существующие значения. В общем, приложения могут ожидать, что, когда метод &lt;code&gt;activate&lt;/code&gt; вернет &lt;code&gt;true&lt;/code&gt; , объект &lt;code&gt;IIOParam&lt;/code&gt; будет готов к использованию в операции чтения или записи.</target>
        </trans-unit>
        <trans-unit id="76c301b37038720275724c001f96646390680990" translate="yes" xml:space="preserve">
          <source>Within the character data of a document (outside of markup), any characters that cannot be represented directly are replaced with character references. Occurrences of '&amp;lt;' and '&amp;amp;' are replaced by the predefined entities &amp;amp;lt; and &amp;amp;amp;. The other predefined entities (&amp;amp;gt;, &amp;amp;apos;, and &amp;amp;quot;) might not be used, except where needed (e.g. using &amp;amp;gt; in cases such as ']]&amp;gt;'). Any characters that cannot be represented directly in the output character encoding are serialized as numeric character references (and since character encoding standards commonly use hexadecimal representations of characters, using the hexadecimal representation when serializing character references is encouraged).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1759a0ebe8a5e5c04ff2fdb42ee3e41043aa418f" translate="yes" xml:space="preserve">
          <source>Without anchoring bounds, the boundaries of this matcher's region will not match anchors such as ^ and $.</source>
          <target state="translated">Без привязки границ,границы области этого матча не будут совпадать с такими якорями,как ^ и $.</target>
        </trans-unit>
        <trans-unit id="d683f7eface7d10e82e3f102080ec5410bd6835c" translate="yes" xml:space="preserve">
          <source>Without this warning, an applet may pop up windows without the user knowing that they belong to an applet. Since users may make security-sensitive decisions based on whether or not the window belongs to an applet (entering a username and password into a dialog box, for example), disabling this warning banner may allow applets to trick the user into entering such information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd52a68c735f034b00232a476c8c2e710db36a9" translate="yes" xml:space="preserve">
          <source>Word boundary analysis is used by search and replace functions, as well as within text editing applications that allow the user to select words with a double click. Word selection provides correct interpretation of punctuation marks within and following words. Characters that are not part of a word, such as symbols or punctuation marks, have word-breaks on both sides.</source>
          <target state="translated">Анализ границ слов используется функциями поиска и замены,а также в приложениях редактирования текста,которые позволяют пользователю выбирать слова двойным щелчком мыши.Выбор слов обеспечивает правильную интерпретацию знаков препинания внутри и после слов.Символы,не являющиеся частью слова,такие как символы или знаки препинания,имеют разрывы слов с обеих сторон.</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="6e99a8e4272c2db9e95f06a1f314a0f285a61837" translate="yes" xml:space="preserve">
          <source>Would result in the string '123-____'. If &lt;code&gt;setPlaceholder(&quot;555-1212&quot;)&lt;/code&gt; was invoked '123-1212' would result. The placeholder String is only used on the initial format, on subsequent formats only the placeholder character will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642d596b44e19ab47c9e267aa3cf4a6030e0380b" translate="yes" xml:space="preserve">
          <source>Wrap a key.</source>
          <target state="translated">Заверни ключ.</target>
        </trans-unit>
        <trans-unit id="3bcf468a4c3b40978bdee293e80fc65249f9482b" translate="yes" xml:space="preserve">
          <source>Wrap an existing exception in a SAXParseException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b650cb303bad45cc633704145a571455dd7664" translate="yes" xml:space="preserve">
          <source>Wrap an existing exception in a TransformerConfigurationException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b39d6715671bdb2580af79800238414d13f1fd7" translate="yes" xml:space="preserve">
          <source>Wrap an existing exception in a TransformerException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3ecd9442f9e1b1059ee6690619be457c11839a" translate="yes" xml:space="preserve">
          <source>Wrapped value (&lt;code&gt;Integer.valueOf(5)&lt;/code&gt;, &lt;code&gt;Boolean.FALSE&lt;/code&gt;, etc)</source>
          <target state="translated">&lt;code&gt;Integer.valueOf(5)&lt;/code&gt; значение ( Integer.valueOf (5) , &lt;code&gt;Boolean.FALSE&lt;/code&gt; и т. Д.)</target>
        </trans-unit>
        <trans-unit id="adbbb2fc6c4f8e1a93cb3431a12402bc3b7237ec" translate="yes" xml:space="preserve">
          <source>WrappedPlainView</source>
          <target state="translated">WrappedPlainView</target>
        </trans-unit>
        <trans-unit id="a9ebad9ce612c251b607a54c6d2d4842c89b63b2" translate="yes" xml:space="preserve">
          <source>Wrapper</source>
          <target state="translated">Wrapper</target>
        </trans-unit>
        <trans-unit id="2dbad62d494925b0cc5a9b12acb2cba9f5175ae5" translate="yes" xml:space="preserve">
          <source>Wrapper for primitive graphics calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0316ad77425467f6a86336f0b3c23b4f8eb43e" translate="yes" xml:space="preserve">
          <source>Wrapper information for malformed and incomplete snippets also generate wrappers. The list is in snippet encounter order. The wrapper changes as the environment changes, so calls to this method at different times may yield different results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92704fc2036355b575a4c4fbf65bd7b09813a44e" translate="yes" xml:space="preserve">
          <source>Wrapping the attribute value into an Annotation object guarantees that adjacent text runs don't get merged even if the attribute values are equal, and indicates to text containers that the attribute should be discarded if the underlying text is modified.</source>
          <target state="translated">Обертывание значения атрибута в объект Annotation гарантирует,что запущенный соседний текст не будет объединен,даже если значения атрибута равны,и указывает текстовым контейнерам,что атрибут должен быть отброшен в случае изменения основного текста.</target>
        </trans-unit>
        <trans-unit id="cca5fcd7b5b7c14fbea5ee4fc3296a93d35e1da8" translate="yes" xml:space="preserve">
          <source>Wraps a byte array into a buffer.</source>
          <target state="translated">Обертывает массив байт в буфер.</target>
        </trans-unit>
        <trans-unit id="3e43b98c51021b6537868fda39974c26611122c5" translate="yes" xml:space="preserve">
          <source>Wraps a byte array to be sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cfb840ede8be7ea7901c7dfd0a6e52d56476fa" translate="yes" xml:space="preserve">
          <source>Wraps a byte array to be sent to the client. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, a &lt;code&gt;SaslException&lt;/code&gt; is thrown.</source>
          <target state="translated">Оборачивает байтовый массив для отправки клиенту. Этот метод может быть вызван только после завершения аутентификационного обмена (т. &lt;code&gt;isComplete()&lt;/code&gt; Когда isComplete () возвращает true) и только если аутентификационный обмен согласовал целостность и / или конфиденциальность в качестве качества защиты; в противном случае создается &lt;code&gt;SaslException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1be73d2494fd5ecf63ee8bc9278f31e2926d14e" translate="yes" xml:space="preserve">
          <source>Wraps a byte array to be sent to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58ede29ff7ee729e1131d3a1d2647f530332ea4" translate="yes" xml:space="preserve">
          <source>Wraps a byte array to be sent to the server. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">Оборачивает байтовый массив для отправки на сервер. Этот метод может быть вызван только после завершения аутентификационного обмена (т. &lt;code&gt;isComplete()&lt;/code&gt; Когда isComplete () возвращает true) и только если аутентификационный обмен согласовал целостность и / или конфиденциальность в качестве качества защиты; в противном случае создается &lt;code&gt;IllegalStateException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67b1374ef549a7e954a05b9ec7009fb8bc41734f" translate="yes" xml:space="preserve">
          <source>Wraps a char array into a buffer.</source>
          <target state="translated">Обертывает char-массив в буфер.</target>
        </trans-unit>
        <trans-unit id="f7b95771a9ecdaf8c4f0c45b0a3050463bc0fb11" translate="yes" xml:space="preserve">
          <source>Wraps a character sequence into a buffer.</source>
          <target state="translated">Обертывает последовательность символов в буфер.</target>
        </trans-unit>
        <trans-unit id="9cf8f103948e6b6d2a2e2dcbd8e83ddda5dcdf8e" translate="yes" xml:space="preserve">
          <source>Wraps a double array into a buffer.</source>
          <target state="translated">Обертывает двойной массив в буфер.</target>
        </trans-unit>
        <trans-unit id="7c38a95681b8bf75718f777dc7681e478936ebe7" translate="yes" xml:space="preserve">
          <source>Wraps a float array into a buffer.</source>
          <target state="translated">Обертывает плавающий массив в буфер.</target>
        </trans-unit>
        <trans-unit id="e875d8d4d7f1a26ef5338640a04b767dbb14b0fd" translate="yes" xml:space="preserve">
          <source>Wraps a long array into a buffer.</source>
          <target state="translated">Обертывает длинный массив в буфер.</target>
        </trans-unit>
        <trans-unit id="7a45b9eefe39a4cdc4f096f2050c4639eeae92e4" translate="yes" xml:space="preserve">
          <source>Wraps a short array into a buffer.</source>
          <target state="translated">Обертывает короткий массив в буфер.</target>
        </trans-unit>
        <trans-unit id="35438f1499f1a894d95345e3941ad2b29de6319a" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; if the MBeanInfo passed in parameter is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d32f710973f4fd61bdd696efd70daf69bd5b7d" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; if the ModelMBean is currently registered in the MBeanServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526e84458ea6e6f011221fcab33932da84f5ba1d" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; if the MBeanInfo passed in parameter is null.</source>
          <target state="translated">Обертывания &lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; если MBeanInfo передается в параметре равно нулю.</target>
        </trans-unit>
        <trans-unit id="5b976fffcdb3184f30e314babf43e006ea0f5ad5" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;../../../java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; if the ModelMBean is currently registered in the MBeanServer.</source>
          <target state="translated">Обертка в &lt;a href=&quot;../../../java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt; если ModelMBean в настоящее время зарегистрирован в MBeanServer.</target>
        </trans-unit>
        <trans-unit id="0edf81e480b4a49c11c2dbafe5b84b7869d1aa13" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; with an unchecked exception.</source>
          <target state="translated">Обертывания &lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; с непроверенным исключением.</target>
        </trans-unit>
        <trans-unit id="6afb0fee856f2866c314288124d5fc7949a1696a" translate="yes" xml:space="preserve">
          <source>Wraps an int array into a buffer.</source>
          <target state="translated">Обертывает массив int в буфер.</target>
        </trans-unit>
        <trans-unit id="f46c77a2dce440c1be651d2cef94b153c69cfdb1" translate="yes" xml:space="preserve">
          <source>Wraps an output stream for encoding byte data using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme.</source>
          <target state="translated">Оборачивает выходной поток для кодирования байтовых данных с использованием схемы кодирования &lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="484e8635160ff209f16a26350fd86bb6ec73ccc2" translate="yes" xml:space="preserve">
          <source>Wraps an throwable thrown in the executing client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0bad816dddec56a1fb6f782b800ce84060f392" translate="yes" xml:space="preserve">
          <source>Wraps an throwable thrown in the executing client. An instance of &lt;code&gt;EvalException&lt;/code&gt; can be returned in the &lt;a href=&quot;snippetevent#exception()&quot;&gt;&lt;code&gt;SnippetEvent.exception()&lt;/code&gt;&lt;/a&gt; query. The name of the throwable thrown is available from &lt;a href=&quot;#getExceptionClassName()&quot;&gt;&lt;code&gt;getExceptionClassName()&lt;/code&gt;&lt;/a&gt;. Message and stack can be queried by methods on &lt;code&gt;Exception&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b5eee30743d96f3a2465542a9df99878df7b23" translate="yes" xml:space="preserve">
          <source>Wraps exceptions thrown by the preRegister(), preDeregister() methods of the &lt;code&gt;MBeanRegistration&lt;/code&gt; interface.</source>
          <target state="translated">Обертывает исключения, создаваемые методами preRegister (), preDeregister () интерфейса &lt;code&gt;MBeanRegistration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac820c6009b39e20e5ac984441a6a70e50be36a4" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;#getCharContent(boolean)&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a990b08c589c006db4f034d5b0f85b8c7bd9875" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;#getCharContent(boolean)&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2449189a10e5f2a06487a9d1438073749161da" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;simplejavafileobject#getCharContent-boolean-&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">&lt;a href=&quot;simplejavafileobject#getCharContent-boolean-&quot;&gt;Оборачивает&lt;/a&gt; результат getCharContent (boolean) в Reader. Подклассы могут изменять это поведение до тех пор, пока &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; контракт FileObject .</target>
        </trans-unit>
        <trans-unit id="ab924b7847e5e470bb4f8f381c5b7f772f8b220f" translate="yes" xml:space="preserve">
          <source>Wraps the result of openOutputStream in a Writer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18643b36bb23e1c01a06054ba0da36eec75ea0b6" translate="yes" xml:space="preserve">
          <source>Wraps the result of openOutputStream in a Writer. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">Оборачивает результат openOutputStream в Writer. Подклассы могут изменять это поведение до тех пор, пока &lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt; контракт FileObject .</target>
        </trans-unit>
        <trans-unit id="d5c0446c81d41ca1fdd8fea8cfadd9a744960cb5" translate="yes" xml:space="preserve">
          <source>Wraps the specified transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18aba0f6a8421686c79cd18305b44edb5756ae50" translate="yes" xml:space="preserve">
          <source>Wraps the specified transform. The transform is cloned and a reference to the clone is kept. The original transform is unchanged. If null is passed as the argument, this constructor behaves as though it were the identity transform. (Note that it is preferable to use &lt;a href=&quot;#IDENTITY&quot;&gt;&lt;code&gt;IDENTITY&lt;/code&gt;&lt;/a&gt; in this case.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da588377e328486ae18afd15219a2649754d3c0" translate="yes" xml:space="preserve">
          <source>Wraps this segment in a &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ef84101ba37aa05699837c391abecc35bc93c2" translate="yes" xml:space="preserve">
          <source>Wraps this segment in a &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;. Some of the properties of the returned buffer are linked to the properties of this segment. For instance, if this segment is &lt;em&gt;immutable&lt;/em&gt; (e.g. the segment has access mode &lt;a href=&quot;#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; but not &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt;), then the resulting buffer is &lt;em&gt;read-only&lt;/em&gt; (see &lt;a href=&quot;../../../../java.base/java/nio/buffer#isReadOnly()&quot;&gt;&lt;code&gt;Buffer.isReadOnly()&lt;/code&gt;&lt;/a&gt;. Additionally, if this is a native memory segment, the resulting buffer is &lt;em&gt;direct&lt;/em&gt; (see &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#isDirect()&quot;&gt;&lt;code&gt;ByteBuffer.isDirect()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f27a22b91fffa5fca45a36aaea975d25f5a8b2" translate="yes" xml:space="preserve">
          <source>WritableByteChannel</source>
          <target state="translated">WritableByteChannel</target>
        </trans-unit>
        <trans-unit id="232d2eb15dd5a8e6d5b8d3468d075c115e7d592c" translate="yes" xml:space="preserve">
          <source>WritableByteChannel.write()</source>
          <target state="translated">WritableByteChannel.write()</target>
        </trans-unit>
        <trans-unit id="8df121d40ab265ffb282618abaddabf62bf4b394" translate="yes" xml:space="preserve">
          <source>WritableRaster</source>
          <target state="translated">WritableRaster</target>
        </trans-unit>
        <trans-unit id="d89b72e5d40182fe2b3219c24a22ac87a1fc4964" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage</source>
          <target state="translated">WritableRenderedImage</target>
        </trans-unit>
        <trans-unit id="028b998a60e46208ce0ede4aa3a7013db3bcb901" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage is a common interface for objects which contain or can produce image data in the form of Rasters and which can be modified and/or written over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b356fedb82416c4bf9703a0aa4ef5cd0e33afc43" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage is a common interface for objects which contain or can produce image data in the form of Rasters and which can be modified and/or written over. The image data may be stored/produced as a single tile or a regular array of tiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22974bfb92e8c252f00719977a7781037b8ef4a" translate="yes" xml:space="preserve">
          <source>WritableRenderedImage provides notification to other interested objects when a tile is checked out for writing (via the getWritableTile method) and when the last writer of a particular tile relinquishes its access (via a call to releaseWritableTile). Additionally, it allows any caller to determine whether any tiles are currently checked out (via hasTileWriters), and to obtain a list of such tiles (via getWritableTileIndices, in the form of a Vector of Point objects).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da714036977cab66b8b81ed578fe655c485e622" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9ce4be9f1bfb0073774626ee67a785eab41413" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file. Characters are encoded into bytes using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792c5eb24bd75a6c8f430ef046aca72eecc461f1" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../../lang/charsequence&quot;&gt;CharSequence&lt;/a&gt; to a file. Characters are encoded into bytes using the specified &lt;a href=&quot;../charset/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294afe002c539f61c1c0ee3dcb972c7d74bf355b" translate="yes" xml:space="preserve">
          <source>Write a DTD section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ffb7b91778bf9267476f98e09dcacd6f27df3d" translate="yes" xml:space="preserve">
          <source>Write a DTD section. This string represents the entire doctypedecl production from the XML 1.0 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc0bd7118775692ac86213afd1d0d2701cb9b4d" translate="yes" xml:space="preserve">
          <source>Write a byte of data to the stream. If it is not a newline, then the byte is appended to the internal buffer. If it is a newline, then the currently buffered line is sent to the log's output stream, prefixed with the appropriate logging information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c22110dc7ee6d680da89d0b08efd62d28b6ef7" translate="yes" xml:space="preserve">
          <source>Write a portion of a string to the buffer.</source>
          <target state="translated">Запишите в буфер часть строки.</target>
        </trans-unit>
        <trans-unit id="4652631a628afd8a3f8a588fd0dbd737d2146884" translate="yes" xml:space="preserve">
          <source>Write a portion of a string.</source>
          <target state="translated">Напишите часть строки.</target>
        </trans-unit>
        <trans-unit id="354cde68fb6c2f936b7c59bf670319ba0dcf0ab7" translate="yes" xml:space="preserve">
          <source>Write a portion of an array of characters.</source>
          <target state="translated">Запишите часть массива символов.</target>
        </trans-unit>
        <trans-unit id="330fefb058de9e90d4a9120ede2b9e5d7c7923ca" translate="yes" xml:space="preserve">
          <source>Write a single character.</source>
          <target state="translated">Напишите один иероглиф.</target>
        </trans-unit>
        <trans-unit id="994c1ba05bfadf4cef0d6733c4c98bd025355fa4" translate="yes" xml:space="preserve">
          <source>Write a string of text followed by a newline character to a document stream opened by &lt;code&gt;open()&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498783f0999ed7eb8d0d11df50117632250e49f4" translate="yes" xml:space="preserve">
          <source>Write a string of text followed by a newline character to a document stream opened by &lt;code&gt;open()&lt;/code&gt; . The text is parsed into the document's structure model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cdad9bf95a1d8bc5e861dbd1d5513d4131edf9" translate="yes" xml:space="preserve">
          <source>Write a string of text to a document stream opened by &lt;code&gt;open()&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf4f5d1c6394d5c94d488c2922b7aae5b015b7a" translate="yes" xml:space="preserve">
          <source>Write a string of text to a document stream opened by &lt;code&gt;open()&lt;/code&gt; . The text is parsed into the document's structure model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e749d40ff493a236a023d30fb9fbee8148a6ef" translate="yes" xml:space="preserve">
          <source>Write a string.</source>
          <target state="translated">Напиши строку.</target>
        </trans-unit>
        <trans-unit id="0556df9723ab76c236dd36201ca6d8bc8762ef74" translate="yes" xml:space="preserve">
          <source>Write a subarray of bytes. Pass each through write byte method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4bcd6ffc98fa169157314d2485ef4b0ffb5451" translate="yes" xml:space="preserve">
          <source>Write access mode; write operations are supported by a segment which supports this access mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0669d7506d09ace8cad4d0f0e36010749d28970c" translate="yes" xml:space="preserve">
          <source>Write accesses to the segment's content &lt;a href=&quot;../../../java/util/concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happens-before&lt;/i&gt;&lt;/a&gt; hand-over from the current owner thread to the new owner thread, which in turn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a06ba0fb5f245b45c41b384d2689f6921e992d" translate="yes" xml:space="preserve">
          <source>Write an XML representation of the specified object to the output.</source>
          <target state="translated">Запишите XML представление указанного объекта на выход.</target>
        </trans-unit>
        <trans-unit id="be7a56a69ad18401ec15997f7d4e84d91cfc1967" translate="yes" xml:space="preserve">
          <source>Write an object to the underlying storage or stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf1d95422469a4ca47028cba75c57280225b87b" translate="yes" xml:space="preserve">
          <source>Write an object to the underlying storage or stream. The class that implements this interface defines how the object is written.</source>
          <target state="translated">Запишите объект в соответствующее хранилище или поток.Класс,реализующий данный интерфейс,определяет,как будет записываться объект.</target>
        </trans-unit>
        <trans-unit id="1f519448d10b81232efe702c1adf54399740a1e6" translate="yes" xml:space="preserve">
          <source>Write any cached data to the underlying output mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1449e213dd3fcab37865b1ea7eed0c6a6eda03c" translate="yes" xml:space="preserve">
          <source>Write content from a document to the given stream as plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47582b3fc1fd1ce73fc7f30356e130a469fc033d" translate="yes" xml:space="preserve">
          <source>Write content from a document to the given stream in a format appropriate for this kind of content handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81829db29a2fbd204bf7a7893714606039435c4e" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f04a37c7592d94e8a688b1e22ea47eb19aaa578" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Characters are encoded into bytes using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Записывать строки текста в файл. Символы кодируются в байты с использованием &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc7e0443ea36cc424ea3c38e6c6339b26fa90a65" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property &lt;code&gt;
 line.separator&lt;/code&gt;. Characters are encoded into bytes using the specified charset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422a884c7d36bcb6e46158dea6218bc82e12cb81" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property &lt;code&gt;line.separator&lt;/code&gt;. Characters are encoded into bytes using the specified charset.</source>
          <target state="translated">Записывайте строки текста в файл. Каждая строка представляет собой последовательность символов и записывается в файл последовательно, причем каждая строка заканчивается разделителем строк платформы, как определено системным свойством &lt;code&gt;line.separator&lt;/code&gt; . Символы кодируются в байты с использованием указанной кодировки.</target>
        </trans-unit>
        <trans-unit id="deab5959d8a2b2e287acf5a1e8d177d50eebcbfc" translate="yes" xml:space="preserve">
          <source>Write permission, group.</source>
          <target state="translated">Пишите разрешение,группа.</target>
        </trans-unit>
        <trans-unit id="ded98708196db3375d703bc829781b7516b5d82b" translate="yes" xml:space="preserve">
          <source>Write permission, others.</source>
          <target state="translated">Пишите разрешение,другие.</target>
        </trans-unit>
        <trans-unit id="b5122274cf00f9236d161b83cf0b1959eac868b3" translate="yes" xml:space="preserve">
          <source>Write permission, owner.</source>
          <target state="translated">Пишите разрешение,владелец.</target>
        </trans-unit>
        <trans-unit id="dc4ca2f6cd629c41dd78f0c1bd4a77413a6ba272" translate="yes" xml:space="preserve">
          <source>Write text to the output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27677af8097cdc9a850db19aa4fc10ea237786a" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ae6a769a32d1c96d1a4d08e0485664c6f49728" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration. Defaults the XML version to 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fdef7127a3c69001637df99c66003fee11b2af" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration. Defaults the XML version to 1.0, and the encoding to utf-8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1b062ab03bc27d496ac4ab537a5eded352d293" translate="yes" xml:space="preserve">
          <source>Write the XML Declaration. Note that the encoding parameter does not set the actual encoding of the underlying output. That must be set when the instance of the XMLStreamWriter is created using the XMLOutputFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9895c1ecb033c87ffe0c615c065d32dfcc621b1a" translate="yes" xml:space="preserve">
          <source>Write the buffered fields to the stream.</source>
          <target state="translated">Запишите буферизованные поля в поток.</target>
        </trans-unit>
        <trans-unit id="f155bd1e4a1fbf0d9f77f04b5cf3659190cb7a16" translate="yes" xml:space="preserve">
          <source>Write the data and fields to the specified ObjectOutput stream, which must be the same stream that produced this &lt;code&gt;PutField&lt;/code&gt; object.</source>
          <target state="translated">Запишите данные и поля в указанный поток ObjectOutput, который должен быть тем же потоком, который создал этот объект &lt;code&gt;PutField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d78cda2a78c150de7205e7faea5f60ac062cf74" translate="yes" xml:space="preserve">
          <source>Write the new values to the data source if there is no conflict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb67d8d108ef50bcb4d3a9affa038eaff061a85" translate="yes" xml:space="preserve">
          <source>Write the non-static and non-transient fields of the current class to this stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3c2de8de514c7b931148e12444f33c0c77a32e" translate="yes" xml:space="preserve">
          <source>Write the non-static and non-transient fields of the current class to this stream. This may only be called from the writeObject method of the class being serialized. It will throw the NotActiveException if it is called otherwise.</source>
          <target state="translated">Запишите в этот поток нестатические и непереходные поля текущего класса.Это может быть вызвано только из метода writeObject сериализуемого класса.Если он будет вызван по-другому,то будет выброшено NotActiveException.</target>
        </trans-unit>
        <trans-unit id="2edab8000ccaace4ff203cc13300679ac4b1d96b" translate="yes" xml:space="preserve">
          <source>Write the specified class descriptor to the ObjectOutputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f5b81bb83d33a942ae2cbeb1415c3a0749b149" translate="yes" xml:space="preserve">
          <source>Write the specified class descriptor to the ObjectOutputStream. Class descriptors are used to identify the classes of objects written to the stream. Subclasses of ObjectOutputStream may override this method to customize the way in which class descriptors are written to the serialization stream. The corresponding method in ObjectInputStream, &lt;code&gt;readClassDescriptor&lt;/code&gt;, should then be overridden to reconstitute the class descriptor from its custom stream representation. By default, this method writes class descriptors according to the format defined in the Object Serialization specification.</source>
          <target state="translated">Запишите указанный дескриптор класса в ObjectOutputStream. Дескрипторы классов используются для идентификации классов объектов, записываемых в поток. Подклассы ObjectOutputStream могут переопределить этот метод, чтобы настроить способ записи дескрипторов класса в поток сериализации. Затем соответствующий метод в ObjectInputStream, &lt;code&gt;readClassDescriptor&lt;/code&gt; , должен быть переопределен, чтобы восстановить дескриптор класса из его пользовательского представления потока. По умолчанию этот метод записывает дескрипторы классов в соответствии с форматом, определенным в спецификации сериализации объектов.</target>
        </trans-unit>
        <trans-unit id="561471854d9e617fefb6f5e631dd834e2f7a127c" translate="yes" xml:space="preserve">
          <source>Write the specified object to the ObjectOutputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677457df7e5bc80c0b6feefc69e3beb6b15a7123" translate="yes" xml:space="preserve">
          <source>Write the specified object to the ObjectOutputStream. The class of the object, the signature of the class, and the values of the non-transient and non-static fields of the class and all of its supertypes are written. Default serialization for a class can be overridden using the writeObject and the readObject methods. Objects referenced by this object are written transitively so that a complete equivalent graph of objects can be reconstructed by an ObjectInputStream.</source>
          <target state="translated">Запишите указанный объект в ObjectOutputStream.Записываются класс объекта,сигнатура класса,а также значения непереходящих и нестатических полей класса и всех его супертипов.Сериализация класса по умолчанию может быть переопределена с помощью методов writeObject и readObject.Объекты,на которые ссылается этот объект,записываются транзитивно,так что полный эквивалентный граф объектов может быть реконструирован с помощью ObjectInputStream.</target>
        </trans-unit>
        <trans-unit id="d8c20a4b40326e735cd9da6418440d4414b1a4ab" translate="yes" xml:space="preserve">
          <source>Write the specified object to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625c55deeb63764ede0c1729277f79d569d6d1fa" translate="yes" xml:space="preserve">
          <source>Write the specified object to the output stream. The serialized form will denote a series of expressions, the combined effect of which will create an equivalent object when the input stream is read. By default, the object is assumed to be a &lt;em&gt;JavaBean&lt;/em&gt; with a nullary constructor, whose state is defined by the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods returned by the Introspector.</source>
          <target state="translated">Записать указанный объект в выходной поток. Сериализованная форма будет обозначать серию выражений, комбинированный эффект которых создаст эквивалентный объект при чтении входного потока. По умолчанию предполагается, что объект является &lt;em&gt;JavaBean-компонентом&lt;/em&gt; с нулевым конструктором, состояние которого определяется соответствующими парами методов &amp;laquo;установщика&amp;raquo; и &amp;laquo;получателя&amp;raquo;, возвращаемыми интроспектором.</target>
        </trans-unit>
        <trans-unit id="a0f768933c7776774b2478fd947d9ef03d2ebe96" translate="yes" xml:space="preserve">
          <source>Write this &lt;code&gt;ICC_Profile&lt;/code&gt; to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278995a53b7c0304511a3172b13a3a18f1b7e97c" translate="yes" xml:space="preserve">
          <source>Write this &lt;code&gt;ICC_Profile&lt;/code&gt; to an &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fe4c369854ef11a28df02657f28c0c907503a3" translate="yes" xml:space="preserve">
          <source>Write this ICC_Profile to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d9c07bfd2efb9ad99f30ea021931a574f4f6d6" translate="yes" xml:space="preserve">
          <source>Write this ICC_Profile to an OutputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936da01feb2f096577e8365b734cb08599ce6a37" translate="yes" xml:space="preserve">
          <source>WriteAbortedException</source>
          <target state="translated">WriteAbortedException</target>
        </trans-unit>
        <trans-unit id="6248c802937f8babd7f472dab3a9ccaa3cd8ca1e" translate="yes" xml:space="preserve">
          <source>WriteAbortedException.getCause()</source>
          <target state="translated">WriteAbortedException.getCause()</target>
        </trans-unit>
        <trans-unit id="d927b7d3922dccb6d4373916a1a508a5f9825f5b" translate="yes" xml:space="preserve">
          <source>WriteAbortedException.getMessage()</source>
          <target state="translated">WriteAbortedException.getMessage()</target>
        </trans-unit>
        <trans-unit id="9ee45a046a695fc62952355259c464d3782298a5" translate="yes" xml:space="preserve">
          <source>WriteLock</source>
          <target state="translated">WriteLock</target>
        </trans-unit>
        <trans-unit id="7c5510f1ed33e3b93fd55caec8daa43bd1ce2d2f" translate="yes" xml:space="preserve">
          <source>WritePendingException</source>
          <target state="translated">WritePendingException</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="3a612b47fe0eec805b37e580fcd5618c583e4cf4" translate="yes" xml:space="preserve">
          <source>Writer.append()</source>
          <target state="translated">Writer.append()</target>
        </trans-unit>
        <trans-unit id="b91c0ca8400fde6125b0c11f2497f37000c08a06" translate="yes" xml:space="preserve">
          <source>Writer.close()</source>
          <target state="translated">Writer.close()</target>
        </trans-unit>
        <trans-unit id="e0c57d77abf55ac12872750811814a29d64dcbfe" translate="yes" xml:space="preserve">
          <source>Writer.flush()</source>
          <target state="translated">Writer.flush()</target>
        </trans-unit>
        <trans-unit id="6b58bc364a56f8d61ed239ce03e81a9366cf0f8e" translate="yes" xml:space="preserve">
          <source>Writer.write()</source>
          <target state="translated">Writer.write()</target>
        </trans-unit>
        <trans-unit id="b2be28b744c30e1c5c5fb3a3d946aee604890aab" translate="yes" xml:space="preserve">
          <source>Writers should call &lt;code&gt;clearAbortRequest&lt;/code&gt; at the beginning of each write operation, and poll the value of &lt;code&gt;abortRequested&lt;/code&gt; regularly during the write.</source>
          <target state="translated">Писатели должны вызывать &lt;code&gt;clearAbortRequest&lt;/code&gt; в начале каждой операции записи и регулярно опрашивать значение &lt;code&gt;abortRequested&lt;/code&gt; во время записи.</target>
        </trans-unit>
        <trans-unit id="aecde5df091918dfeffcca27e002a97115f41c8d" translate="yes" xml:space="preserve">
          <source>Writers that do not make use of stream metadata (</source>
          <target state="translated">Писатели,которые не используют метаданные потока (</target>
        </trans-unit>
        <trans-unit id="2005d7caf2832e9b66c2ea6efe4c5aa8727e0190" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this file output stream.</source>
          <target state="translated">Записывает байты &lt;code&gt;b.length&lt;/code&gt; из указанного массива байтов в этот выходной поток файла.</target>
        </trans-unit>
        <trans-unit id="475a7013d71b2530ccf213898f664fa5353bdd4f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this file, starting at the current file pointer.</source>
          <target state="translated">Записывает байты &lt;code&gt;b.length&lt;/code&gt; из указанного массива байтов в этот файл, начиная с указателя текущего файла.</target>
        </trans-unit>
        <trans-unit id="94ad317d7b0ac67a67357470a8dfe034c14d2f1b" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this output stream.</source>
          <target state="translated">Записывает байты &lt;code&gt;b.length&lt;/code&gt; из указанного массива байтов в этот выходной поток.</target>
        </trans-unit>
        <trans-unit id="e624a17a648a4933d0e79844ab18e51cf30d0121" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this output stream. The general contract for &lt;code&gt;write(b)&lt;/code&gt; is that it should have exactly the same effect as the call &lt;code&gt;write(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">Записывает байты &lt;code&gt;b.length&lt;/code&gt; из указанного массива байтов в этот выходной поток. Общий контракт для &lt;code&gt;write(b)&lt;/code&gt; заключается в том, что он должен иметь тот же эффект, что и вызов &lt;code&gt;write(b, 0, b.length)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5534222ccd82110cbb41a1dc6f9a045112f429c8" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes to this output stream.</source>
          <target state="translated">Записывает байты &lt;code&gt;b.length&lt;/code&gt; в этот выходной поток.</target>
        </trans-unit>
        <trans-unit id="c1d0bdd8cec5ae9557cd3f32c364cea21614290d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from array &lt;code&gt;b&lt;/code&gt;, in order, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0e3c34e35200d337717f421eb2f8500aba265d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from array &lt;code&gt;b&lt;/code&gt;, in order, to the output stream. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;off&lt;/code&gt; is negative, or &lt;code&gt;len&lt;/code&gt; is negative, or &lt;code&gt;off+len&lt;/code&gt; is greater than the length of the array &lt;code&gt;b&lt;/code&gt;, then an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are written. Otherwise, the byte &lt;code&gt;b[off]&lt;/code&gt; is written first, then &lt;code&gt;b[off+1]&lt;/code&gt;, and so on; the last byte written is &lt;code&gt;b[off+len-1]&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из массива &lt;code&gt;b&lt;/code&gt; по порядку в выходной поток. Если &lt;code&gt;b&lt;/code&gt; имеет значение &lt;code&gt;null&lt;/code&gt; , создается &lt;code&gt;NullPointerException&lt;/code&gt; . Если &lt;code&gt;off&lt;/code&gt; отрицательно, или &lt;code&gt;len&lt;/code&gt; отрицательно, или &lt;code&gt;off+len&lt;/code&gt; больше, чем длина массива &lt;code&gt;b&lt;/code&gt; , возникает &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; . Если &lt;code&gt;len&lt;/code&gt; равно нулю, то байты не записываются. В противном случае сначала записывается байт &lt;code&gt;b[off]&lt;/code&gt; , затем &lt;code&gt;b[off+1]&lt;/code&gt; и так далее; последний записанный байт - &lt;code&gt;b[off+len-1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7493c7432d9d918d61b6c3585fce1581bbd60fd" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified &lt;code&gt;byte&lt;/code&gt; array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива &lt;code&gt;byte&lt;/code&gt; начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот выходной поток.</target>
        </trans-unit>
        <trans-unit id="f7ed92cd5964e41ce5935be590a970273e849d1d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to the underlying output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90204d909dc82fb7e5d3bbd0045ef72ec9d3faa" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to the underlying output stream. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в базовый выходной поток. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;len&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a8058c4fe448481ba9f9667cd3950b5d1ac6e95" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c2ffa0a4decb3975339af3e1141064e1cf801f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this buffered output stream.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот буферизованный выходной поток.</target>
        </trans-unit>
        <trans-unit id="df6022a3c457bef633289c3b1eea0afc7d2501d2" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this byte array output stream.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в выходной поток этого массива байтов.</target>
        </trans-unit>
        <trans-unit id="f47416c1bae43204d3ed0a20b6c785b1c8477de5" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this file output stream.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот выходной поток файла.</target>
        </trans-unit>
        <trans-unit id="7c910c38a8bd891a83fe0ebe30f88a0297205886" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this file.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот файл.</target>
        </trans-unit>
        <trans-unit id="38c566418d538790a5eeae487d789010f4523286" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот выходной поток.</target>
        </trans-unit>
        <trans-unit id="4f851862b3139a3a60a822bd0fb6f38f95f98ef1" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream. The general contract for &lt;code&gt;write(b, off, len)&lt;/code&gt; is that some of the bytes in the array &lt;code&gt;b&lt;/code&gt; are written to the output stream in order; element &lt;code&gt;b[off]&lt;/code&gt; is the first byte written and &lt;code&gt;b[off+len-1]&lt;/code&gt; is the last byte written by this operation.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот выходной поток. Общий контракт для &lt;code&gt;write(b, off, len)&lt;/code&gt; заключается в том, что некоторые байты в массиве &lt;code&gt;b&lt;/code&gt; записываются в выходной поток по порядку; element &lt;code&gt;b[off]&lt;/code&gt; - это первый записанный байт, а &lt;code&gt;b[off+len-1]&lt;/code&gt; - это последний байт, записанный этой операцией.</target>
        </trans-unit>
        <trans-unit id="c116a4517eaa68fb9db4dc9686e30823cb0481f2" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131be3d9bd6c996bc02177007f5a10d152efcafd" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream. This method blocks until all the bytes are written to the output stream.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот конвейерный выходной поток. Этот метод блокируется до тех пор, пока все байты не будут записаны в выходной поток.</target>
        </trans-unit>
        <trans-unit id="629af15734b4e0f5ce6696e3b16a10fcb7aa816f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf544354bc9caf492bbe86ef1abd2a2a4934186" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this stream. If automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">Записывает в этот поток &lt;code&gt;len&lt;/code&gt; байтов из указанного массива байтов, начиная со смещения &lt;code&gt;off&lt;/code&gt; . Если автоматическая очистка включена, будет вызван метод &lt;code&gt;flush&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0325a3c22e720aad80e29d337fb29a1216024c8d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters from the specified character array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f574fcc90500ee21973d3a8593ee72900cccc153" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters from the specified character array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream. This method blocks until all the characters are written to the output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">Записывает &lt;code&gt;len&lt;/code&gt; символов из указанного массива символов, начиная со смещения &lt;code&gt;off&lt;/code&gt; , в этот конвейерный выходной поток. Этот метод блокируется до тех пор, пока все символы не будут записаны в выходной поток. Если поток считывал символы данных из подключенного входного потока по конвейеру, но поток больше не работает, возникает &lt;code&gt;IOException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f01163c247ccac36f98237d94dc0b5ab8aaa2406" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt;, starting at character &lt;code&gt;offset&lt;/code&gt;, to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89daa9fc4ab3d15a77384b157392739823e5c257" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt;, starting at character &lt;code&gt;offset&lt;/code&gt;, to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; represents. The string will overwrite the existing characters in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt; value will be increased to accommodate the extra characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851de5604a486c60e5125c7a29a7e550895176b8" translate="yes" xml:space="preserve">
          <source>Writes A Portion of an array of characters.</source>
          <target state="translated">Записывает порцию из массива символов.</target>
        </trans-unit>
        <trans-unit id="a283b0703eab7e9782450eee6c79c7aaaa9c7957" translate="yes" xml:space="preserve">
          <source>Writes a 16 bit char.</source>
          <target state="translated">Пишет 16-битный шар.</target>
        </trans-unit>
        <trans-unit id="ca54d5eb5995c8bab76c02647925ee1f9521c712" translate="yes" xml:space="preserve">
          <source>Writes a 16 bit short.</source>
          <target state="translated">Пишет коротко 16 бит.</target>
        </trans-unit>
        <trans-unit id="057353e65922065a994b45703b910bf34047ab73" translate="yes" xml:space="preserve">
          <source>Writes a 32 bit float.</source>
          <target state="translated">Пишет 32-битное плавучее средство.</target>
        </trans-unit>
        <trans-unit id="c587a1942eeaf8dca64d6b527fb861b258ae3eb4" translate="yes" xml:space="preserve">
          <source>Writes a 32 bit int.</source>
          <target state="translated">Пишет 32-битное &quot;int&quot;.</target>
        </trans-unit>
        <trans-unit id="6071f86794e94e93ef2903e2a285a17fb6ff2270" translate="yes" xml:space="preserve">
          <source>Writes a 64 bit double.</source>
          <target state="translated">Пишет 64-битный двойной.</target>
        </trans-unit>
        <trans-unit id="ff1fe9b0868e3a400b0850e8cb5d3afef880236e" translate="yes" xml:space="preserve">
          <source>Writes a 64 bit long.</source>
          <target state="translated">Пишет длиной 64 бита.</target>
        </trans-unit>
        <trans-unit id="144135fe6a8176a2fd809e5dce65a41b9d674878" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56efcb35978d3f06a812ffb670b34f94389cacc" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialBlob&lt;/code&gt; SQL &lt;code&gt;BLOB&lt;/code&gt; value before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ea08fa6afe5ea479439001df19499ba21a8430" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08e5c41b2c35f3a884d25f9d8a8bfb34ced6103" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialClob&lt;/code&gt; SQL &lt;code&gt;CLOB&lt;/code&gt; value before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798be35dcc4f07fd6b0ae715272f89610fd64df1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636814d8cf3b67bf23c99b7f771ee075f88a3374" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to a serializable &lt;code&gt;SerialRef&lt;/code&gt; SQL &lt;code&gt;REF&lt;/code&gt; value before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8faba2a0fd1366ce7b8632168b17391d486b5e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d363669fd2b9a7fa973904d4dc302d0c14ca56c" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;CHAR&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt;, or &lt;code&gt;LONGVARCHAR&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c82abcc2a6031cf5de89c3f40ed0c7b95e4503" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bce86c88fab81328de73526546c89a47a0e4b2" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to an SQL structured type before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa37549b16c8a2519ce9a3687936f0f07666745" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ea925b355afa858794bc3e803f693c259afae1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155670a01232f738dceb009105519f94cd2248c1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the file as a one-byte value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6349876fc09182b7513e2eb1fd4bd3e55d4b98d6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the file as a one-byte value. The value &lt;code&gt;true&lt;/code&gt; is written out as the value &lt;code&gt;(byte)1&lt;/code&gt;; the value &lt;code&gt;false&lt;/code&gt; is written out as the value &lt;code&gt;(byte)0&lt;/code&gt;. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает &lt;code&gt;boolean&lt;/code&gt; значение в файл как однобайтовое значение. Значение &lt;code&gt;true&lt;/code&gt; записывается как значение &lt;code&gt;(byte)1&lt;/code&gt; ; значение &lt;code&gt;false&lt;/code&gt; записывается как значение &lt;code&gt;(byte)0&lt;/code&gt; . Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="12b530b90dc8d6c34bfe7ce905c795548bb350b9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the underlying output stream as a 1-byte value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf2d9ed9e1c02ddbe3d89c723dcba2e53e42da9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the underlying output stream as a 1-byte value. The value &lt;code&gt;true&lt;/code&gt; is written out as the value &lt;code&gt;(byte)1&lt;/code&gt;; the value &lt;code&gt;false&lt;/code&gt; is written out as the value &lt;code&gt;(byte)0&lt;/code&gt;. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;boolean&lt;/code&gt; значение в базовый выходной поток как 1-байтовое значение. Значение &lt;code&gt;true&lt;/code&gt; записывается как значение &lt;code&gt;(byte)1&lt;/code&gt; ; значение &lt;code&gt;false&lt;/code&gt; записывается как значение &lt;code&gt;(byte)0&lt;/code&gt; . Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccab39520060070dde762a951b5e9f4cef217922" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95726257c14b22438de24b52e49b6a02de7eab08" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to the stream. If &lt;code&gt;v&lt;/code&gt; is true, the value &lt;code&gt;(byte)1&lt;/code&gt; is written; if &lt;code&gt;v&lt;/code&gt; is false, the value &lt;code&gt;(byte)0&lt;/code&gt; is written.</source>
          <target state="translated">Записывает в поток &lt;code&gt;boolean&lt;/code&gt; значение. Если &lt;code&gt;v&lt;/code&gt; истинно, записывается значение &lt;code&gt;(byte)1&lt;/code&gt; ; если &lt;code&gt;v&lt;/code&gt; ложно, записывается значение &lt;code&gt;(byte)0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7954ffaaa34e2883ad4a1325fb8863bb017aa172" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4b1822b1f04ea72708cfe5295251a6c88b3464" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream. If the argument &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the value &lt;code&gt;(byte)1&lt;/code&gt; is written; if &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value &lt;code&gt;(byte)0&lt;/code&gt; is written. The byte written by this method may be read by the &lt;code&gt;readBoolean&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;boolean&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;boolean&lt;/code&gt; значение в этот выходной поток. Если аргумент &lt;code&gt;v&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; , то значение &lt;code&gt;(byte)1&lt;/code&gt; записывается; если &lt;code&gt;v&lt;/code&gt; является &lt;code&gt;false&lt;/code&gt; , то значение &lt;code&gt;(byte)0&lt;/code&gt; записывается. Байт, записанный этим методом, может быть прочитан методом &lt;code&gt;readBoolean&lt;/code&gt; интерфейса &lt;code&gt;DataInput&lt;/code&gt; , который затем вернет &lt;code&gt;boolean&lt;/code&gt; равное &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc0bdbc304ed1a878f530d104ecb981483b8abc6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24a0d82e4ec0d4586e61016d6bb4cb55ac02d93" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226b956afa02c16af4e38b4a4db3a94bf6b32311" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; to the file as a one-byte value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a444c3352131269a2014fd441028ab3058f1b7" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; to the file as a one-byte value. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает &lt;code&gt;byte&lt;/code&gt; в файл как однобайтовое значение. Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="a939e11e65fc3a32a69989756481896e92055cac" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the file as a two-byte value, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a398562bfe5665a5c3cb088f44ff93b0c13218" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the file as a two-byte value, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает &lt;code&gt;char&lt;/code&gt; в файл как двухбайтовое значение, сначала старший байт. Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="7a8024ee2d733a5dde0d484821170eb30275a356" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the underlying output stream as a 2-byte value, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f1c2dfbde644fbb6c4c155f32906af8e2ee5c6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the underlying output stream as a 2-byte value, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;char&lt;/code&gt; в базовый поток вывода как 2-байтовое значение, сначала старший байт. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bbc6d917ff455c037781056578d00e4f4b388cd" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; value, which is comprised of two bytes, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93587e1f09c65fb748c39e365179e015b1c4a2e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; value, which is comprised of two bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">Записывает значение типа &lt;code&gt;char&lt;/code&gt; , состоящее из двух байтов, в выходной поток. Записываемые байтовые значения в указанном порядке:</target>
        </trans-unit>
        <trans-unit id="5da554cad4ed11876c2f538fc7a916a28ed5a347" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b842735b4381060da9c4b5e14aac5d144420c4" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;DOUBLE&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbd7c92457324520d422019ae1f2be3d912115c" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of eight bytes, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cf095e7c43223f0750c5a4985360abd3124032" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of eight bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to a &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the &lt;code&gt;long&lt;/code&gt; value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method. The bytes written by this method may be read by the &lt;code&gt;readDouble&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;double&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;double&lt;/code&gt; значение, состоящее из восьми байтов, в выходной поток. Он делает это так, как если бы он сначала преобразует это значение типа &lt;code&gt;double&lt;/code&gt; в &lt;code&gt;long&lt;/code&gt; точно так же, как метод &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; , а затем записывает значение &lt;code&gt;long&lt;/code&gt; точно так же, как метод &lt;code&gt;writeLong&lt;/code&gt; . Байты, записанные этим методом, могут быть прочитаны методом &lt;code&gt;readDouble&lt;/code&gt; интерфейса &lt;code&gt;DataInput&lt;/code&gt; , который затем вернет &lt;code&gt;double&lt;/code&gt; равное &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a947a1cfaafe404e203be28b1b2303e0b7c673d7" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d147e0e0d772cce4f1c826771d88ee33f93033" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to a &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the long value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c74f862659641ca760a0b4f5dbfe586ef1a16a" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to an &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the long value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method.</source>
          <target state="translated">Записывает &lt;code&gt;double&lt;/code&gt; значение, состоящее из четырех байтов, в выходной поток. Он делает это так, как будто он сначала преобразует это значение типа &lt;code&gt;double&lt;/code&gt; в &lt;code&gt;long&lt;/code&gt; точно так же, как метод &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; , а затем записывает значение long точно так же, как метод &lt;code&gt;writeLong&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="696fcd25e8c07d56053db6ad276a63ec4ce34071" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e425d4085560efb681f434759145902b95c308e1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;REAL&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46ad218b9afdb0674da63775c5ae864b605f115" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7505d5b28cd6dc24eb7936640d871233ddd0a4" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;float&lt;/code&gt; value to an &lt;code&gt;int&lt;/code&gt; in exactly the manner of the &lt;code&gt;Float.floatToIntBits&lt;/code&gt; method and then writes the &lt;code&gt;int&lt;/code&gt; value in exactly the manner of the &lt;code&gt;writeInt&lt;/code&gt; method. The bytes written by this method may be read by the &lt;code&gt;readFloat&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;float&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Записывает значение с &lt;code&gt;float&lt;/code&gt; , состоящее из четырех байтов, в выходной поток. Он делает это так, как если бы он сначала преобразует это значение с &lt;code&gt;float&lt;/code&gt; в &lt;code&gt;int&lt;/code&gt; точно так же, как метод &lt;code&gt;Float.floatToIntBits&lt;/code&gt; , а затем записывает значение &lt;code&gt;int&lt;/code&gt; точно так же, как метод &lt;code&gt;writeInt&lt;/code&gt; . Байты, записанные этим методом, могут быть прочитаны методом &lt;code&gt;readFloat&lt;/code&gt; интерфейса &lt;code&gt;DataInput&lt;/code&gt; , который затем вернет число с &lt;code&gt;float&lt;/code&gt; равное &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5bc045873743c0ed400214abeb97588134df17b" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;float&lt;/code&gt; value to an &lt;code&gt;int&lt;/code&gt; in exactly the manner of the &lt;code&gt;Float.floatToIntBits&lt;/code&gt; method and then writes the int value in exactly the manner of the &lt;code&gt;writeInt&lt;/code&gt; method.</source>
          <target state="translated">Записывает значение с &lt;code&gt;float&lt;/code&gt; , состоящее из четырех байтов, в выходной поток. Он делает это так, как если бы он сначала преобразует это значение с &lt;code&gt;float&lt;/code&gt; в &lt;code&gt;int&lt;/code&gt; точно так же, как метод &lt;code&gt;Float.floatToIntBits&lt;/code&gt; , а затем записывает значение int точно так же, как метод &lt;code&gt;writeInt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c83ea96896ae8f5436a6aaa4859236c2aaf1ffec" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b017c54fe11f7471c30be1a56fe857dd74f0f6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;NUMERIC&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452031f5ee72921a288236c0b6a26e63a6a7bbc9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53464c77dc827a0b2303547abdc64eec0dc61db6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;DATE&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b620918c71921bd543a3ee3ac81b3d78236ed1eb" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55188659110941d98ac08fcc76d1a090d472b2c1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;TIME&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c24d5b17a0e026c5d7d374aa2559609ace759c" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a591b58703a67375938736a34ac6cdf53113b82d" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;TIMESTAMP&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a6c04ca4913bbb6d71dcdb430bdadb44602d6f" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e41834abe596a0f73b3cafbac1894059f99cb6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;BIGINT&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8895918fb39b48000205955fa45fde016f0c3d15" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the file as eight bytes, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c528963d4d2b5dc906130b6855614969aa9489" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the file as eight bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает в файл &lt;code&gt;long&lt;/code&gt; как восемь байтов, сначала старший байт. Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="611eb1e8ef355d7f42537bc6bae8d758ff6c8171" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the underlying output stream as eight bytes, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6accb6c7c3e908a144c301fc776e1a0598feb1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the underlying output stream as eight bytes, high byte first. In no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;long&lt;/code&gt; в базовый поток вывода как восемь байтов, сначала старший байт. Ни при каких исключениях &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c456969b969a70b0bafd0d849d8758576665b3e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; value, which is comprised of eight bytes, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90977f382f90c1a5eef7e30f250984dbbf685fc0" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; value, which is comprised of eight bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">Записывает &lt;code&gt;long&lt;/code&gt; значение, состоящее из восьми байтов, в выходной поток. Записываемые байтовые значения в указанном порядке:</target>
        </trans-unit>
        <trans-unit id="1b73432a8b187a60ddbd8f3ea3cfe32efefece8a" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54483bbc01a1757da60b9e15f662ba88b52cf5f" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;SMALLINT&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88192947ad3bae1375cd61982af7c10dfe7bf288" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the file as two bytes, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c5c0b7c3097cdebd2722567ae9d781529b69f1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the file as two bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает в файл &lt;code&gt;short&lt;/code&gt; как два байта, сначала старший байт. Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="95148813e930a56ec7f9ba7cf377c3af425484b9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the underlying output stream as two bytes, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02db58dd011e754f2707096b88fe2f8be9f657ed" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the underlying output stream as two bytes, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;short&lt;/code&gt; в базовый выходной поток как два байта, сначала старший байт. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a90364be6749249db375cff460e3c17c03c9bbd9" translate="yes" xml:space="preserve">
          <source>Writes a CData section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3d8a106b37266209385784427f6dc8189f1133" translate="yes" xml:space="preserve">
          <source>Writes a SQL &lt;code&gt;DATALINK&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b458ebbec899f10fb20f20b8b4375124ea3e7e52" translate="yes" xml:space="preserve">
          <source>Writes a String as a sequence of bytes.</source>
          <target state="translated">Записывает строку в виде последовательности байтов.</target>
        </trans-unit>
        <trans-unit id="afc7866c1825e9380b11088c400178f95a95cdbc" translate="yes" xml:space="preserve">
          <source>Writes a String as a sequence of chars.</source>
          <target state="translated">Пишет строку как последовательность символов.</target>
        </trans-unit>
        <trans-unit id="c2392262bb2e4275d7538e0294036fdf89687e24" translate="yes" xml:space="preserve">
          <source>Writes a boolean.</source>
          <target state="translated">Пишет булев.</target>
        </trans-unit>
        <trans-unit id="f0dab3f9cfd243fc6ebe7043ee7a66237ab74a99" translate="yes" xml:space="preserve">
          <source>Writes a byte to the compressed output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0da5fee9a3c6b16bf35955f5f5c35dce130ca60" translate="yes" xml:space="preserve">
          <source>Writes a byte to the compressed output stream. This method will block until the byte can be written.</source>
          <target state="translated">Записывает байт в сжатый выходной поток.Этот метод будет блокировать до тех пор,пока байт не будет записан.</target>
        </trans-unit>
        <trans-unit id="9cf89ed21330c27e5aa3cc0f34d382c423419609" translate="yes" xml:space="preserve">
          <source>Writes a byte to the uncompressed output stream.</source>
          <target state="translated">Записывает байт в несжатый выходной поток.</target>
        </trans-unit>
        <trans-unit id="3d47656c06088ca641ef1044e64c889463161b7a" translate="yes" xml:space="preserve">
          <source>Writes a byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311374422e4c207200ae10ac5f074fff7eabacab" translate="yes" xml:space="preserve">
          <source>Writes a byte. This method will block until the byte is actually written.</source>
          <target state="translated">Пишет байт.Этот метод будет блокировать до тех пор,пока байт не будет записан на самом деле.</target>
        </trans-unit>
        <trans-unit id="4f8553b815db13b6c88e3d97f9c0023965b0af9c" translate="yes" xml:space="preserve">
          <source>Writes a byte. Will block until the byte is actually written.</source>
          <target state="translated">Пишет байт.Блокирует до тех пор,пока байт не будет действительно написан.</target>
        </trans-unit>
        <trans-unit id="5447f774a2ec3a7588ab7fffc585fd0847e17bfa" translate="yes" xml:space="preserve">
          <source>Writes a character to the buffer.</source>
          <target state="translated">Записывает символ в буфер.</target>
        </trans-unit>
        <trans-unit id="e7ba7473a4f82684254953fa98bca6d77362c61b" translate="yes" xml:space="preserve">
          <source>Writes a datagram to this channel.</source>
          <target state="translated">Записывает дату на этот канал.</target>
        </trans-unit>
        <trans-unit id="5efe0d1f19523d7334f9c488613efaa72bee6fd2" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this console's output stream using the specified format string and arguments.</source>
          <target state="translated">Записывает отформатированную строку в выходной поток этой консоли,используя указанную строку формата и аргументы.</target>
        </trans-unit>
        <trans-unit id="508af09289f72e03d16ae1e4dd4b7e1a9e501d48" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified format string and arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a45e7a61a42a1faa620f3d8e59e1e8f0e6e5cc2" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified format string and arguments. The locale used is the one defined during the construction of this formatter.</source>
          <target state="translated">Записывает отформатированную строку в место назначения данного объекта,используя строку и аргументы указанного формата.При построении этого формата используется локаль,определенная при построении данного формата.</target>
        </trans-unit>
        <trans-unit id="b64a4a6ece44814969f921375d7b1535d8bf355a" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified locale, format string, and arguments.</source>
          <target state="translated">Записывает отформатированную строку в место назначения этого объекта,используя указанную локаль,строку форматирования и аргументы.</target>
        </trans-unit>
        <trans-unit id="ff42503cbe9f3786576fcf934db44ca1703f1239" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this output stream using the specified format string and arguments.</source>
          <target state="translated">Записывает отформатированную строку в этот выходной поток,используя строку указанного формата и аргументы.</target>
        </trans-unit>
        <trans-unit id="684abf86f0ae0bf9ca4893fa8d75709f881ea701" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this writer using the specified format string and arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df82bdd3d3608dc3ca77522fb3a2ccea02508a72" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this writer using the specified format string and arguments. If automatic flushing is enabled, calls to this method will flush the output buffer.</source>
          <target state="translated">Записывает в этот записывающее устройство форматированную строку,используя указанную строку форматирования и аргументы.Если включена автоматическая промывка,то при обращении к этому методу будет произведена промывка выходного буфера.</target>
        </trans-unit>
        <trans-unit id="17ff8b03f28f8652982d3549e1d470d8e0fa7304" translate="yes" xml:space="preserve">
          <source>Writes a line separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cc625afc6e32e0218832c9bab473756248e92a" translate="yes" xml:space="preserve">
          <source>Writes a line separator. The line separator string is defined by the system property &lt;code&gt;line.separator&lt;/code&gt;, and is not necessarily a single newline ('\n') character.</source>
          <target state="translated">Записывает разделитель строк. Строка разделителя строк определяется системным свойством &lt;code&gt;line.separator&lt;/code&gt; и не обязательно является одним символом новой строки ('\ n').</target>
        </trans-unit>
        <trans-unit id="27e81462b6e6b65223f5d2486f4dfbf626128a46" translate="yes" xml:space="preserve">
          <source>Writes a namespace to the output stream If the prefix argument to this method is the empty string, &quot;xmlns&quot;, or null this method will delegate to writeDefaultNamespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea473561fce7d15d0a8632a6efe064700e72fc5" translate="yes" xml:space="preserve">
          <source>Writes a packet to the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06d1baf2766748f705a9ec924d45f761ff2e183" translate="yes" xml:space="preserve">
          <source>Writes a portion of a String.</source>
          <target state="translated">Пишет часть Струны.</target>
        </trans-unit>
        <trans-unit id="f72fbef395487327da1536d1995e28bc5cf9fb4c" translate="yes" xml:space="preserve">
          <source>Writes a portion of a string.</source>
          <target state="translated">Пишет часть строки.</target>
        </trans-unit>
        <trans-unit id="56b0793b26c4a0f3cdcde22d46d24b35623bc380" translate="yes" xml:space="preserve">
          <source>Writes a portion of an array of characters.</source>
          <target state="translated">Записывает часть массива символов.</target>
        </trans-unit>
        <trans-unit id="07fcbd7544ddeccee9b06f0cd837cd28b8435c95" translate="yes" xml:space="preserve">
          <source>Writes a processing instruction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502ed5705e51254c59ad06919f6929d8c661179e" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bits, given by the &lt;code&gt;numBits&lt;/code&gt; least significant bits of the &lt;code&gt;bits&lt;/code&gt; argument in left-to-right order, to the stream at the current bit offset within the current byte position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7238cdbf395d0c16e058e39542beedf0196e6462" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bits, given by the &lt;code&gt;numBits&lt;/code&gt; least significant bits of the &lt;code&gt;bits&lt;/code&gt; argument in left-to-right order, to the stream at the current bit offset within the current byte position. The upper &lt;code&gt;64 - numBits&lt;/code&gt; bits of the argument are ignored. The bit offset is advanced by &lt;code&gt;numBits&lt;/code&gt; and reduced modulo 8. Note that a bit offset of 0 always indicates the most-significant bit of the byte, and bytes of bits are written out in sequence as they are encountered. Thus bit writes are always effectively in network byte order. The actual stream byte order setting is ignored.</source>
          <target state="translated">Записывает последовательность битов, заданную наименьшими значащими битами &lt;code&gt;numBits&lt;/code&gt; аргумента &lt;code&gt;bits&lt;/code&gt; в порядке слева направо, в поток с текущим смещением битов в текущей позиции байта. Верхние &lt;code&gt;64 - numBits&lt;/code&gt; биты аргумента игнорируются. Битовое смещение &lt;code&gt;numBits&lt;/code&gt; на numBits и уменьшается по модулю 8. Обратите внимание, что битовое смещение, равное 0, всегда указывает на самый старший бит байта, и байты битов записываются в последовательности по мере их появления. Таким образом, запись битов всегда осуществляется в сетевом порядке байтов. Фактическая установка порядка байтов потока игнорируется.</target>
        </trans-unit>
        <trans-unit id="314d6e211d9795052649ceb03da878a72709c282" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190c55636cfdf74b2ffb6a71ed2f57d50aeccf84" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position. If &lt;code&gt;b.length&lt;/code&gt; is 0, nothing is written. The byte &lt;code&gt;b[0]&lt;/code&gt; is written first, then the byte &lt;code&gt;b[1]&lt;/code&gt;, and so on.</source>
          <target state="translated">Записывает последовательность байтов в поток в текущей позиции. Если &lt;code&gt;b.length&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается байт &lt;code&gt;b[0]&lt;/code&gt; , затем байт &lt;code&gt;b[1]&lt;/code&gt; и так далее.</target>
        </trans-unit>
        <trans-unit id="2235f3a78e2b1cb2ccd3a4168c479386e4f14d39" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The byte &lt;code&gt;b[off]&lt;/code&gt; is written first, then the byte &lt;code&gt;b[off + 1]&lt;/code&gt;, and so on.</source>
          <target state="translated">Записывает последовательность байтов в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается байт &lt;code&gt;b[off]&lt;/code&gt; , затем байт &lt;code&gt;b[off + 1]&lt;/code&gt; и так далее.</target>
        </trans-unit>
        <trans-unit id="998e981037032866593747f4cad33ac3eb0066f8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from a subsequence of the given buffers.</source>
          <target state="translated">Записывает последовательность байт в этот канал из подпоследовательности заданных буферов.</target>
        </trans-unit>
        <trans-unit id="df42d642ba05e494d2cc831543ce9f23be20461b" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from a subsequence of the given buffers. This operation, sometimes called a &lt;em&gt;gathering write&lt;/em&gt;, is often useful when implementing network protocols that group data into segments consisting of one or more fixed-length headers followed by a variable-length body. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">Записывает в этот канал последовательность байтов из подпоследовательности заданных буферов. Эта операция, иногда называемая &lt;em&gt;сборной записью&lt;/em&gt; , часто бывает полезна при реализации сетевых протоколов, которые группируют данные в сегменты, состоящие из одного или нескольких заголовков фиксированной длины, за которыми следует тело переменной длины. Параметр &lt;code&gt;handler&lt;/code&gt; - это обработчик завершения, который вызывается, когда операция записи завершается (или терпит неудачу). Результат, переданный обработчику завершения, - это количество записанных байтов.</target>
        </trans-unit>
        <trans-unit id="02441dac40077efefece8a0e55188a3959f39c79" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffer, starting at the given file position.</source>
          <target state="translated">Записывает последовательность байт в этот канал из заданного буфера,начиная с заданной позиции файла.</target>
        </trans-unit>
        <trans-unit id="4b2b6d5918fe10f4267a0ae46ec7f71362fad27f" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffer.</source>
          <target state="translated">Записывает последовательность байт в этот канал из заданного буфера.</target>
        </trans-unit>
        <trans-unit id="41853481b79dd7251b056000a101757ebc59a7f7" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffers.</source>
          <target state="translated">Записывает последовательность байт в этот канал из заданных буферов.</target>
        </trans-unit>
        <trans-unit id="59c5ccb857f9bc25462065a57d0ce514fa8bf281" translate="yes" xml:space="preserve">
          <source>Writes a sequence of chars to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25372ececa06540883487ffc569630583f3356c4" translate="yes" xml:space="preserve">
          <source>Writes a sequence of chars to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The char &lt;code&gt;c[off]&lt;/code&gt; is written first, then the char &lt;code&gt;c[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">Записывает последовательность символов в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается char &lt;code&gt;c[off]&lt;/code&gt; , затем char &lt;code&gt;c[off + 1]&lt;/code&gt; и так далее. Порядок байтов потока используется для определения порядка записи отдельных байтов.</target>
        </trans-unit>
        <trans-unit id="7a3d4937205bb517a2764876ca8d0ce3625add0c" translate="yes" xml:space="preserve">
          <source>Writes a sequence of doubles to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d73713479b20f3c0e88b9a7d06d7681fdd8c40" translate="yes" xml:space="preserve">
          <source>Writes a sequence of doubles to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The double &lt;code&gt;d[off]&lt;/code&gt; is written first, then the double &lt;code&gt;d[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">Записывает последовательность двойников в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается двойное &lt;code&gt;d[off]&lt;/code&gt; , затем двойное &lt;code&gt;d[off + 1]&lt;/code&gt; и так далее. Порядок байтов потока используется для определения порядка, в котором записываются отдельные байты.</target>
        </trans-unit>
        <trans-unit id="446789ef076930615fe1f5c41aac52f13cc1cee0" translate="yes" xml:space="preserve">
          <source>Writes a sequence of floats to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5692e375b6806782e1c51563426dd418bee68f" translate="yes" xml:space="preserve">
          <source>Writes a sequence of floats to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The float &lt;code&gt;f[off]&lt;/code&gt; is written first, then the float &lt;code&gt;f[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">Записывает последовательность чисел с плавающей запятой в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается float &lt;code&gt;f[off]&lt;/code&gt; , затем float &lt;code&gt;f[off + 1]&lt;/code&gt; и так далее. Порядок байтов потока используется для определения порядка, в котором записываются отдельные байты.</target>
        </trans-unit>
        <trans-unit id="de705ba6a174586a9c837cd917c5bd44f25429f8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of ints to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e22e143b7aa537e10aa473bc7180b02b29a9e27" translate="yes" xml:space="preserve">
          <source>Writes a sequence of ints to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The int &lt;code&gt;i[off]&lt;/code&gt; is written first, then the int &lt;code&gt;i[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">Записывает последовательность int в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается int &lt;code&gt;i[off]&lt;/code&gt; , затем int &lt;code&gt;i[off + 1]&lt;/code&gt; и так далее. Порядок байтов потока используется для определения порядка, в котором записываются отдельные байты.</target>
        </trans-unit>
        <trans-unit id="69c5aaa383ce6ea26910c68605710771e3d57380" translate="yes" xml:space="preserve">
          <source>Writes a sequence of longs to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f619dc03c935ddbc5713f176006c9051deaeab8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of longs to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The long &lt;code&gt;l[off]&lt;/code&gt; is written first, then the long &lt;code&gt;l[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">Записывает последовательность long в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается длинное &lt;code&gt;l[off]&lt;/code&gt; , затем длинное &lt;code&gt;l[off + 1]&lt;/code&gt; и так далее. Порядок байтов потока используется для определения порядка, в котором записываются отдельные байты.</target>
        </trans-unit>
        <trans-unit id="4e2827725195f2c36013b35ab2dccbe6663b69f6" translate="yes" xml:space="preserve">
          <source>Writes a sequence of shorts to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21ca2f4d5f95b31acfd2f5bbc0ce005cc3a5fb6" translate="yes" xml:space="preserve">
          <source>Writes a sequence of shorts to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The short &lt;code&gt;s[off]&lt;/code&gt; is written first, then the short &lt;code&gt;s[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">Записывает последовательность коротких замыканий в поток в текущей позиции. Если &lt;code&gt;len&lt;/code&gt; равно 0, ничего не записывается. Сначала записывается короткое &lt;code&gt;s[off]&lt;/code&gt; , затем короткое &lt;code&gt;s[off + 1]&lt;/code&gt; и так далее. Порядок байтов потока используется для определения порядка, в котором записываются отдельные байты.</target>
        </trans-unit>
        <trans-unit id="9e25011a9c8fdafeb10663081e9d168f9a6cefb9" translate="yes" xml:space="preserve">
          <source>Writes a set of attributes to the given object stream for the purpose of serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3b3b853ce10c9f53ce13bee2be516282c111c7" translate="yes" xml:space="preserve">
          <source>Writes a set of attributes to the given object stream for the purpose of serialization. This will take special care to deal with static attribute keys that have been registered wit the &lt;code&gt;registerStaticAttributeKey&lt;/code&gt; method. Any attribute key not registered as a static key will be serialized directly. All values are expected to be serializable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cbf0c42aabe7ea4836e02acdffa16497650e0c" translate="yes" xml:space="preserve">
          <source>Writes a single bit, given by the least significant bit of the argument, to the stream at the current bit offset within the current byte position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b943c58e32fcea952a5a176b2b64b74481ec8ac" translate="yes" xml:space="preserve">
          <source>Writes a single bit, given by the least significant bit of the argument, to the stream at the current bit offset within the current byte position. The upper 31 bits of the argument are ignored. The given bit replaces the previous bit at that position. The bit offset is advanced by one and reduced modulo 8.</source>
          <target state="translated">Записывает один бит,заданный наименее значащим битом аргумента,в поток при текущем смещении битов в пределах текущей позиции байта.Верхний 31 бит аргумента игнорируется.Приведенный бит заменяет предыдущий бит в данной позиции.Смещение битов сдвигается на единицу и уменьшается по модулю 8.</target>
        </trans-unit>
        <trans-unit id="001052a859bb1446c0fd19a7d0140fd8e78c87da" translate="yes" xml:space="preserve">
          <source>Writes a single byte to the stream at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d25d450c91f1b954e5d3226b5eb0d63eb9f3de1" translate="yes" xml:space="preserve">
          <source>Writes a single byte to the stream at the current position. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">Записывает один байт в поток в текущей позиции. 24 старших бита &lt;code&gt;b&lt;/code&gt; игнорируются.</target>
        </trans-unit>
        <trans-unit id="664dba2ff2df999d8a27b0049a85c61d9db7e29f" translate="yes" xml:space="preserve">
          <source>Writes a single character.</source>
          <target state="translated">Пишет один иероглиф.</target>
        </trans-unit>
        <trans-unit id="f933296edffab5638d15f828802522dc84897cf3" translate="yes" xml:space="preserve">
          <source>Writes a single character. The character to be written is contained in the 16 low-order bits of the given integer value; the 16 high-order bits are ignored.</source>
          <target state="translated">Пишет один иероглиф.Записываемый символ содержится в 16 младших битах заданного целого значения;16 старших бит игнорируются.</target>
        </trans-unit>
        <trans-unit id="358e1ae6ec30a51046bb824cdc45a4602b363152" translate="yes" xml:space="preserve">
          <source>Writes a start tag to the output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bd4c043b641203f67a25a8faaedf06ff7164e9" translate="yes" xml:space="preserve">
          <source>Writes a start tag to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75052e90a50a88eddb0c2fcd32eec44274289114" translate="yes" xml:space="preserve">
          <source>Writes a start tag to the output. All writeStartElement methods open a new scope in the internal namespace context. Writing the corresponding EndElement causes the scope to be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e408c44ea4aa78ea372d668a61e9a79e9878cfa" translate="yes" xml:space="preserve">
          <source>Writes a stream of ASCII characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c35566fb936fe3c434bc325013cef4ac2fd2d64" translate="yes" xml:space="preserve">
          <source>Writes a stream of ASCII characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver will do any necessary conversion from ASCII to the database &lt;code&gt;CHAR&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d35bd84279b6609e622d6ab06f4beb72906404" translate="yes" xml:space="preserve">
          <source>Writes a stream of Unicode characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103c70c642901a5a9a51a3605fe74dc57e1fabd2" translate="yes" xml:space="preserve">
          <source>Writes a stream of Unicode characters to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver will do any necessary conversion from Unicode to the database &lt;code&gt;CHAR&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df213335179c5ed8ca6afe71e0677d7424da6195" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a MIDI file of the file type indicated to the external file provided.</source>
          <target state="translated">Записывает поток байт,представляющий MIDI-файл,тип файла,указанный во внешнем файле.</target>
        </trans-unit>
        <trans-unit id="e8a5f176816806a6fbca88570a3f6372ece24192" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a MIDI file of the file type indicated to the output stream provided.</source>
          <target state="translated">Записывает поток байт,представляющий собой MIDI-файл типа файла,указанного в предоставленном выходном потоке.</target>
        </trans-unit>
        <trans-unit id="d0e751b02c4917e9384d9893ee2785bf31c7eb4d" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a file of the MIDI file type indicated to the external file provided.</source>
          <target state="translated">Записывает поток байт,представляющий собой файл MIDI-типа,указанный во внешнем файле.</target>
        </trans-unit>
        <trans-unit id="68b7db83aee7a60d72e213514b372c08156d7b87" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a file of the MIDI file type indicated to the output stream provided.</source>
          <target state="translated">Записывает поток байт,представляющий собой файл типа MIDI-файл,указанный в предоставленном выходном потоке.</target>
        </trans-unit>
        <trans-unit id="9036acda052c4911938040861a1e300f1ef2410e" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file format indicated to the external file provided.</source>
          <target state="translated">Записывает поток байт,представляющий собой аудиофайл формата файла,указанного во внешнем файле.</target>
        </trans-unit>
        <trans-unit id="6fb88014c7ccd9861b8e71915804360144829a00" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddecea0d160b45426ce4e501d8df92507ba73a8" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided. Some file types require that the length be written into the file header, and cannot be written from start to finish unless the length is known in advance. An attempt to write such a file type will fail with an &lt;code&gt;IOException&lt;/code&gt; if the length in the audio file format is &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61ebe87fae82a3f3e78f56158a3a4c202901a7e" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided. Some file types require that the length be written into the file header, and cannot be written from start to finish unless the length is known in advance. An attempt to write such a file type will fail with an IOException if the length in the audio file format is &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Записывает поток байтов, представляющий аудиофайл типа файла, указанного для предоставленного выходного потока. Некоторые типы файлов требуют, чтобы длина была записана в заголовок файла, и не могут быть записаны от начала до конца, если длина не известна заранее. Попытка записать такой тип файла завершится ошибкой с исключением IOException, если длина в формате аудиофайла равна &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8f0adc20f1af94af22a8e4d67c6778209fd2469" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the external file provided.</source>
          <target state="translated">Записывает поток байт,представляющий собой аудиофайл указанного типа,во внешний предоставляемый файл.</target>
        </trans-unit>
        <trans-unit id="5347af5a0d11f28a81ca89b06b58fba3a2384a75" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3e579ee5254986120d6bd885e12ecea3e2510c" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided. Some file types require that the length be written into the file header; such files cannot be written from start to finish unless the length is known in advance. An attempt to write a file of such a type will fail with an &lt;code&gt;IOException&lt;/code&gt; if the length in the audio file type is &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457626ec7057ea1509e697c0d5f9754010afd06b" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided. Some file types require that the length be written into the file header; such files cannot be written from start to finish unless the length is known in advance. An attempt to write a file of such a type will fail with an IOException if the length in the audio file type is &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">Записывает поток байтов, представляющий аудиофайл указанного типа файла, в предоставленный выходной поток. Некоторые типы файлов требуют, чтобы длина была записана в заголовок файла; такие файлы нельзя записать от начала до конца, если заранее не известна длина. Попытка записать файл такого типа завершится ошибкой IOException, если длина в типе аудиофайла - &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d764e9d1a1cb8b672089bc62810766169a891d6b" translate="yes" xml:space="preserve">
          <source>Writes a stream of uninterpreted bytes to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0603b3d486c3582197330dfc0883ac877fa7af38" translate="yes" xml:space="preserve">
          <source>Writes a string to the file as a sequence of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfebbe442291a3e8e465b80272932906f7ed4fb" translate="yes" xml:space="preserve">
          <source>Writes a string to the file as a sequence of characters. Each character is written to the data output stream as if by the &lt;code&gt;writeChar&lt;/code&gt; method. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает строку в файл как последовательность символов. Каждый символ записывается в поток вывода данных, как если бы он был методом &lt;code&gt;writeChar&lt;/code&gt; . Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="b63ac37afa3c7e30a7ec3f4bba3342bb93883711" translate="yes" xml:space="preserve">
          <source>Writes a string to the file using &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; encoding in a machine-independent manner.</source>
          <target state="translated">Записывает строку в файл с использованием &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;модифицированной кодировки UTF-8&lt;/a&gt; машинно-независимым образом.</target>
        </trans-unit>
        <trans-unit id="b0ca487aa3c16ea83ab86aed17493dcc33edb03f" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6f810066617d11d6cb068e9ebc2b6257515d4f" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream. For every character in the string &lt;code&gt;s&lt;/code&gt;, taken in order, one byte is written to the output stream. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">Записывает строку в выходной поток. Для каждого символа в строке &lt;code&gt;s&lt;/code&gt; , взятого по порядку, в выходной поток записывается один байт. Если &lt;code&gt;s&lt;/code&gt; равно &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;NullPointerException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc2a7fd94389452a3c96d490dbd418c7fc0f9085" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream. For every character in the string &lt;code&gt;s&lt;/code&gt;, taken in order, two bytes are written to the output stream, ordered according to the current byte order setting. If network byte order is being used, the high-order byte is written first; the order is reversed otherwise. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">Записывает строку в выходной поток. Для каждого символа в строке &lt;code&gt;s&lt;/code&gt; , взятого по порядку, в выходной поток записываются два байта, упорядоченные в соответствии с текущим значением порядка байтов. Если используется сетевой порядок байтов, первым записывается старший байт; в противном случае порядок будет обратным. Если &lt;code&gt;s&lt;/code&gt; равно &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;NullPointerException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0718eb4fd31a016094bf9fb2c14b92e5e34e810c" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream as a sequence of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2333de6bb14f6753c8467ddb361808ddce3a17" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream as a sequence of characters. Each character is written to the data output stream as if by the &lt;code&gt;writeChar&lt;/code&gt; method. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by twice the length of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Записывает строку в базовый выходной поток как последовательность символов. Каждый символ записывается в поток вывода данных, как если бы он был методом &lt;code&gt;writeChar&lt;/code&gt; . Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается вдвое по сравнению с длиной &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1f60a0c985ee3c99884db52d5d00830332832d9" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream using &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; encoding in a machine-independent manner.</source>
          <target state="translated">Записывает строку в базовый выходной поток с использованием &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;модифицированной кодировки UTF-8&lt;/a&gt; машинно-независимым образом.</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">Пишет строку.</target>
        </trans-unit>
        <trans-unit id="5a1953b8b9d27d19a7b5afed0358700c0f0015e7" translate="yes" xml:space="preserve">
          <source>Writes a string. This method cannot be inherited from the Writer class because it must suppress I/O exceptions.</source>
          <target state="translated">Пишет строку.Этот метод не может быть наследуемым от класса Writer,так как он должен подавлять исключения ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="eb6ba0073288a7f37d493353625aab60dc1fed80" translate="yes" xml:space="preserve">
          <source>Writes a sub array of bytes.</source>
          <target state="translated">Записывает подмассив байт.</target>
        </trans-unit>
        <trans-unit id="f22826c17e01b8bd59b4c5796200d64c603fcf1a" translate="yes" xml:space="preserve">
          <source>Writes all bytes from the specified byte array to this stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8803c2d78bed399e9ad588006376c473344e3347" translate="yes" xml:space="preserve">
          <source>Writes all bytes from the specified byte array to this stream. If automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0df9dc457ff568fd4c4f2c296551eeed0d5de99" translate="yes" xml:space="preserve">
          <source>Writes all or part of the given &lt;code&gt;byte&lt;/code&gt; array to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents and returns the number of bytes written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3916c44b0f32a0be157b07e40b36b95460d2286" translate="yes" xml:space="preserve">
          <source>Writes all or part of the given &lt;code&gt;byte&lt;/code&gt; array to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents and returns the number of bytes written. Writing starts at position &lt;code&gt;pos&lt;/code&gt; in the &lt;code&gt;BLOB&lt;/code&gt; value;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba3884f1c2a43aa01130052e714b962961fe375" translate="yes" xml:space="preserve">
          <source>Writes all or part of the given &lt;code&gt;byte&lt;/code&gt; array to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents and returns the number of bytes written. Writing starts at position &lt;code&gt;pos&lt;/code&gt; in the &lt;code&gt;BLOB&lt;/code&gt; value; &lt;code&gt;len&lt;/code&gt; bytes from the given byte array are written. The array of bytes will overwrite the existing bytes in the &lt;code&gt;Blob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Blob&lt;/code&gt; value is reached while writing the array of bytes, then the length of the &lt;code&gt;Blob&lt;/code&gt; value will be increased to accommodate the extra bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8600843172fc5ab2a734a9e588ad884c7079c4af" translate="yes" xml:space="preserve">
          <source>Writes an &quot;unshared&quot; object to the ObjectOutputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4a23d3b350bf5bfadf2b639abb0bdae3bb550b" translate="yes" xml:space="preserve">
          <source>Writes an &quot;unshared&quot; object to the ObjectOutputStream. This method is identical to writeObject, except that it always writes the given object as a new, unique object in the stream (as opposed to a back-reference pointing to a previously serialized instance). Specifically:</source>
          <target state="translated">Записывает &quot;неразделенный&quot; объект в ObjectOutputStream.Этот метод идентичен методу writeObject,за исключением того,что он всегда записывает данный объект как новый,уникальный объект в потоке (в отличие от обратной ссылки,указывающей на ранее сериализованный экземпляр).В частности:</target>
        </trans-unit>
        <trans-unit id="1740f6f71c4cd03887821da91243ca075fe07b7b" translate="yes" xml:space="preserve">
          <source>Writes an 8 bit byte.</source>
          <target state="translated">Пишет 8-ми байт.</target>
        </trans-unit>
        <trans-unit id="6c180c959eabf9437bdf6b923f53cbff4e46e305" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;Array&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25811b29146a7e96216cf995ac952bf827c6c7d1" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;Array&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to a serializable &lt;code&gt;SerialArray&lt;/code&gt; SQL &lt;code&gt;ARRAY&lt;/code&gt; value before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e4a51e27dbbb2d1fa9e791eaa83fc6e7d81bc8" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672c9a7f2d0d068e3cb4e8d6a9ddf3485c9df6a4" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;INTEGER&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bfe788ce31762630ef5185bd75a500a0052987" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the file as four bytes, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e21e726eeab5953cd125b7495eec89ed335d609" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the file as four bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает &lt;code&gt;int&lt;/code&gt; в файл как четыре байта, сначала старший байт. Запись начинается с текущей позиции указателя файла.</target>
        </trans-unit>
        <trans-unit id="f4a4ba08cd12771cf8e041f1c2a9ab0bc67ead61" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the underlying output stream as four bytes, high byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc8ec8c439b095c865cb112354e78c579eab601" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the underlying output stream as four bytes, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;int&lt;/code&gt; в базовый выходной поток как четыре байта, сначала старший байт. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21fd77840911adcb012148e0dd277d71fbc9f872" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; value, which is comprised of four bytes, to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04bb9fdd6e28e1e95affa5629a2ce9b0aeb2c1d" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; value, which is comprised of four bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">Записывает значение &lt;code&gt;int&lt;/code&gt; , состоящее из четырех байтов, в выходной поток. Записываемые байтовые значения в указанном порядке:</target>
        </trans-unit>
        <trans-unit id="6564ff5174255cf0e7122d7fc5cb299aea6bc492" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f372b9f15bffd1cd7326fb3b4792b5cc954e159" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; object in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts this value to a serializable &lt;code&gt;SerialDatalink&lt;/code&gt; SQL &lt;code&gt;DATALINK&lt;/code&gt; value before return it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8354c8cfe9f0d9932569289c2573c78614272a" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;ARRAY&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b88fbfeb3285de8f20dc32999b639f985e8827e" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;BLOB&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cc9a2762874135cdf783e5ef59bd592db783ab" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;CLOB&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac466542da1fd570e1cd8a85e10a89c5a0478d3" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;NCLOB&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0bab43ec185e7755ca9c724c82dd497e3a75ed" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;REF&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32b75a2ac4c35b2bd936894dad35a1a6f742c74" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;ROWID&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc969edfce1a8e9fcd57215da43efe7e17bb98e" translate="yes" xml:space="preserve">
          <source>Writes an SQL &lt;code&gt;XML&lt;/code&gt; value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7240a87818ff11b59c7bd527a158977756f9198d" translate="yes" xml:space="preserve">
          <source>Writes an SQL structured type value to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44ca6e735d840ae66abcebcaf5b0d7cfe24713f" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;bytes&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474a9b337ecaac54d234baeb045aa62283d0dc8" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;bytes&lt;/code&gt; in the Java programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts it to an SQL &lt;code&gt;VARBINARY&lt;/code&gt; or &lt;code&gt;LONGVARBINARY&lt;/code&gt; before returning it to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5217c0bfa237688fd5947f4b90ec0cc289c0ec25" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the compressed output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91391ca01713b61e3a68471e88e1a2ec74a5e484" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.</source>
          <target state="translated">Записывает массив байт в сжатый выходной поток.Этот метод будет блокировать до тех пор,пока не будут записаны все байты.</target>
        </trans-unit>
        <trans-unit id="6dce90598d23fb38220959b230e17daa56e43c23" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the current ZIP entry data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcc78bbe57b6ce8a96809d5c51d5bdd7eb8d10e" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the current ZIP entry data. This method will block until all the bytes are written.</source>
          <target state="translated">Записывает массив байт в текущие входные данные ZIP.Этот метод будет блокироваться до тех пор,пока не будут записаны все байты.</target>
        </trans-unit>
        <trans-unit id="b65fd57256c0433acff32087a2d8da5eaf47411f" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the uncompressed output stream.</source>
          <target state="translated">Записывает массив байт в несжатый выходной поток.</target>
        </trans-unit>
        <trans-unit id="197c4236f7ff27946de3d127438d615e38302ed3" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184076d4a82e468a9041fc00d661d8b7d8f621bd" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes. This method will block until the bytes are actually written.</source>
          <target state="translated">Записывает массив байт.Этот метод будет блокировать до тех пор,пока байты не будут действительно записаны.</target>
        </trans-unit>
        <trans-unit id="8dd5aee302b286670386d8cc0bc1e852dfd89da5" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes. Will block until the bytes are actually written.</source>
          <target state="translated">Записывает массив байт.Блокирует до тех пор,пока байты не будут действительно записаны.</target>
        </trans-unit>
        <trans-unit id="ea42af8fd102a5d23675fcd8f7e1a21accb34a84" translate="yes" xml:space="preserve">
          <source>Writes an array of characters.</source>
          <target state="translated">Записывает массив символов.</target>
        </trans-unit>
        <trans-unit id="928868e95fe6511cf01eeb699debe02725148a7f" translate="yes" xml:space="preserve">
          <source>Writes an array of characters. This method cannot be inherited from the Writer class because it must suppress I/O exceptions.</source>
          <target state="translated">Записывает массив символов.Этот метод не может быть наследуемым от класса Writer,так как он должен подавлять исключения ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="52aa56d648776d9495d9366408ffa13186bb65ce" translate="yes" xml:space="preserve">
          <source>Writes an attribute to the output stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2be112208b86261986a1ae461b3c896dc388e6c" translate="yes" xml:space="preserve">
          <source>Writes an attribute to the output stream without a prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff7d6a6f1bfe9778737c1fd78975331a3f83b47" translate="yes" xml:space="preserve">
          <source>Writes an empty element tag to the output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f365dd8923cf096a9c9ae1d8063f6577f24f28f0" translate="yes" xml:space="preserve">
          <source>Writes an end tag to the output relying on the internal state of the writer to determine the prefix and local name of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6c2c4a372fcf8e32fba62c76c2b54b46f82b19" translate="yes" xml:space="preserve">
          <source>Writes an entity reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845ca9715bac35ef1947ecff1b01781b98b923f3" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to a &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7e466b9e9f6735bac5eb62165c0f91b84b2869" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to a &lt;code&gt;File&lt;/code&gt;. If there is already a &lt;code&gt;File&lt;/code&gt; present, its contents are discarded.</source>
          <target state="translated">Записывает изображение с помощью произвольного &lt;code&gt;ImageWriter&lt;/code&gt; , поддерживающего данный формат, в &lt;code&gt;File&lt;/code&gt; . Если &lt;code&gt;File&lt;/code&gt; уже присутствует, его содержимое отбрасывается.</target>
        </trans-unit>
        <trans-unit id="c33f9616c13e7b7edbad66a907a09cd89959adef" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">Записывает изображение с помощью произвольного &lt;code&gt;ImageWriter&lt;/code&gt; , поддерживающего данный формат, в &lt;code&gt;OutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="029b27106448a88b4763369b511ecf056a37b60f" translate="yes" xml:space="preserve">
          <source>Writes an image using the an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e3dd58b633ef56e1113523580bcc40cd8f5260" translate="yes" xml:space="preserve">
          <source>Writes an image using the an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;ImageOutputStream&lt;/code&gt;. The image is written to the &lt;code&gt;ImageOutputStream&lt;/code&gt; starting at the current stream pointer, overwriting existing stream data from that point forward, if present.</source>
          <target state="translated">Записывает изображение с помощью произвольного &lt;code&gt;ImageWriter&lt;/code&gt; , поддерживающего данный формат, в &lt;code&gt;ImageOutputStream&lt;/code&gt; . Изображение записывается в &lt;code&gt;ImageOutputStream&lt;/code&gt; , начиная с указателя текущего потока, перезаписывая существующие данные потока с этой точки вперед, если они есть.</target>
        </trans-unit>
        <trans-unit id="90f8a005a0e018089c9a966aa619c33c07892546" translate="yes" xml:space="preserve">
          <source>Writes an xml comment with the data enclosed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de95ba3e3608236749217a0c7e571c0056a27af" translate="yes" xml:space="preserve">
          <source>Writes any cached events to the underlying output mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab24f3dcbe1fa930ff321e8116207af7e2609aeb" translate="yes" xml:space="preserve">
          <source>Writes any remaining uncompressed data to the output stream and closes the underlying output stream.</source>
          <target state="translated">Записывает все оставшиеся несжатые данные в выходной поток и закрывает лежащий в его основе выходной поток.</target>
        </trans-unit>
        <trans-unit id="ea812aceedf14d0e6ad904b2cb8f433e4915a909" translate="yes" xml:space="preserve">
          <source>Writes array of bytes to the compressed output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf35ba162e8457e73f54882a5c5184fa9e4fc908" translate="yes" xml:space="preserve">
          <source>Writes array of bytes to the compressed output stream. This method will block until all the bytes are written.</source>
          <target state="translated">Записывает массив байт в сжатый выходной поток.Этот метод будет блокировать до тех пор,пока не будут записаны все байты.</target>
        </trans-unit>
        <trans-unit id="37ced05917aa020878d79b8932701d27f22098fc" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a4f11dbea6b299c527b750b72fea853ce19352" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line. The requested number of bytes of data are read from the specified array, starting at the given offset into the array, and written to the data line's buffer. If the caller attempts to write more data than can currently be written (see &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;), this method blocks until the requested amount of data has been written. This applies even if the requested amount of data to write is greater than the data line's buffer size. However, if the data line is closed, stopped, or flushed before the requested amount has been written, the method no longer blocks, but returns the number of bytes written thus far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f542e25c7d41a9ed23b80d6673b5442bf3f0be9" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line. The requested number of bytes of data are read from the specified array, starting at the given offset into the array, and written to the data line's buffer. If the caller attempts to write more data than can currently be written (see &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;), this method blocks until the requested amount of data has been written. This applies even if the requested amount of data to write is greater than the data line's buffer size. However, if the data line is closed, stopped, or flushed before the requested amount has been written, the method no longer blocks, but returns the number of bytes written thus far.</source>
          <target state="translated">Записывает аудиоданные в микшер через эту строку исходных данных. Запрошенное количество байтов данных считывается из указанного массива, начиная с заданного смещения в массив, и записывается в буфер строки данных. Если вызывающий абонент пытается записать больше данных, чем может быть записано в данный момент (см. &amp;laquo; &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; ), этот метод блокируется до тех пор, пока не будет записан запрошенный объем данных. Это применимо, даже если запрошенный объем данных для записи превышает размер буфера строки данных. Однако, если строка данных закрывается, останавливается или сбрасывается до того, как запрошенная сумма была записана, метод больше не блокируется, а возвращает количество байтов, записанных на данный момент.</target>
        </trans-unit>
        <trans-unit id="70af5ea88b88ac39f37fa0e6431e3587c4947620" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539e94f80819f8addfe61f29f8d0c0095d59f44a" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. All bytes in the byte array are written to the file. The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has been created or truncated, or after some bytes have been written to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e219a2917354808d12478e2ed7441db173e738" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. All bytes in the byte array are written to the file. The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">Записывает байты в файл. Параметр &lt;code&gt;options&lt;/code&gt; указывает, как файл создается или открывается. Если параметры отсутствуют, этот метод работает так, как если бы присутствовали параметры &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; . Другими словами, он открывает файл для записи, создания файла, если он не существует, или первоначального усечения существующего &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; до размера &lt;code&gt;0&lt;/code&gt; . Все байты в байтовом массиве записываются в файл. Метод гарантирует, что файл будет закрыт, когда все байты будут записаны (или возникнет ошибка ввода-вывода или другое исключение времени выполнения). Если возникает ошибка ввода-вывода, это может происходить после того, как файл был создан или усечен, или после того, как в файл были записаны некоторые байты.</target>
        </trans-unit>
        <trans-unit id="3aa9eb435ce66122fd3b1fbb9683dc6f39b12396" translate="yes" xml:space="preserve">
          <source>Writes characters to the buffer.</source>
          <target state="translated">Записывает символы в буфер.</target>
        </trans-unit>
        <trans-unit id="7d60a1b7a1a3d14a49cb496536b68fe0e5783720" translate="yes" xml:space="preserve">
          <source>Writes content from a document to the given stream as plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97477c205ceea09c92c5946659e274241b1ae36" translate="yes" xml:space="preserve">
          <source>Writes content from a document to the given stream in a format appropriate for this kind of content handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26649091ef7b5d2a209d730bd88924f12963e9c" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given double value, in the current byte order, into this buffer at the current position, and then increments the position by eight.</source>
          <target state="translated">Записывает в этот буфер восемь байтов,содержащих заданное двойное значение,в текущем порядке байтов,а затем увеличивает позицию на восемь.</target>
        </trans-unit>
        <trans-unit id="29fc7be2d2fa2a9838cc38ff4c3934f5c3f3655d" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given double value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">Восемь байт,содержащих заданное двойное значение,в текущем порядке байт,записывает в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="cc89b642bf8674896232f688adbc8ebc5d1dfdc8" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given long value, in the current byte order, into this buffer at the current position, and then increments the position by eight.</source>
          <target state="translated">Записывает в этот буфер восемь байт,содержащих заданное длинное значение,в текущем порядке байт,а затем увеличивает позицию на восемь.</target>
        </trans-unit>
        <trans-unit id="2bb4a200c6266d5b89a3ab96d32530f2a49d3e59" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given long value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">Записывает в этот буфер по данному индексу восемь байт,содержащих заданное длинное значение,в текущем порядке байт.</target>
        </trans-unit>
        <trans-unit id="2487fee69be7365dce9130ceec028a6bb7fc07e9" translate="yes" xml:space="preserve">
          <source>Writes every character in the string &lt;code&gt;s&lt;/code&gt;, to the output stream, in order, two bytes per character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d0787a90c45f72d95f7e055e81599ca892dbaf" translate="yes" xml:space="preserve">
          <source>Writes every character in the string &lt;code&gt;s&lt;/code&gt;, to the output stream, in order, two bytes per character. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;s.length&lt;/code&gt; is zero, then no characters are written. Otherwise, the character &lt;code&gt;s[0]&lt;/code&gt; is written first, then &lt;code&gt;s[1]&lt;/code&gt;, and so on; the last character written is &lt;code&gt;s[s.length-1]&lt;/code&gt;. For each character, two bytes are actually written, high-order byte first, in exactly the manner of the &lt;code&gt;writeChar&lt;/code&gt; method.</source>
          <target state="translated">Записывает каждый символ в строке &lt;code&gt;s&lt;/code&gt; в выходной поток по два байта на символ. Если &lt;code&gt;s&lt;/code&gt; равно &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;NullPointerException&lt;/code&gt; . Если &lt;code&gt;s.length&lt;/code&gt; равно нулю, символы не записываются. В противном случае сначала записывается символ &lt;code&gt;s[0]&lt;/code&gt; , затем &lt;code&gt;s[1]&lt;/code&gt; и так далее; последний записанный символ - &lt;code&gt;s[s.length-1]&lt;/code&gt; . Для каждого символа фактически записываются два байта, сначала старший байт, точно так же, как метод &lt;code&gt;writeChar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b4e00ea7b401f90dc90c64677abaf47d2170156" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given float value, in the current byte order, into this buffer at the current position, and then increments the position by four.</source>
          <target state="translated">Записывает четыре байта,содержащих заданное значение плавающей запятой,в этот буфер в текущем порядке байт,а затем увеличивает позицию на четыре.</target>
        </trans-unit>
        <trans-unit id="5d979f53ff93d5b35a5d4de9156c84a797cd1d5a" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given float value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">Записывает в этот буфер по данному индексу четыре байта,содержащие заданное значение с плавающей точкой,в текущем порядке байт.</target>
        </trans-unit>
        <trans-unit id="d8eac6d4c7237a86bdd435eec454a1165fa276c0" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given int value, in the current byte order, into this buffer at the current position, and then increments the position by four.</source>
          <target state="translated">Записывает четыре байта,содержащих заданное значение int,в текущем порядке байт,в этот буфер на текущей позиции,а затем увеличивает позицию на четыре.</target>
        </trans-unit>
        <trans-unit id="5cf0746092fdb63187e2dce0e857024f58099778" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given int value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">Записывает в этот буфер по данному индексу четыре байта,содержащие заданное значение int,в текущем порядке байт.</target>
        </trans-unit>
        <trans-unit id="ceb6f95baf23beaeef39ebca1fb801718774f47c" translate="yes" xml:space="preserve">
          <source>Writes next block of compressed data to the output stream.</source>
          <target state="translated">Записывает следующий блок сжатых данных в выходной поток.</target>
        </trans-unit>
        <trans-unit id="f716150ad2b59e1e2c39f51e686b6112c9516c37" translate="yes" xml:space="preserve">
          <source>Writes out a &lt;code&gt;byte&lt;/code&gt; to the underlying output stream as a 1-byte value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793d3092c9065640c3553038c363272625fcd2c4" translate="yes" xml:space="preserve">
          <source>Writes out a &lt;code&gt;byte&lt;/code&gt; to the underlying output stream as a 1-byte value. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Записывает &lt;code&gt;byte&lt;/code&gt; в базовый выходной поток как 1-байтовое значение. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d781a8fad1ddbd48d34b00f1d27f845c18c1752a" translate="yes" xml:space="preserve">
          <source>Writes out a character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4149ecfaf0a53ba4649ab673e88332a5ee9da18" translate="yes" xml:space="preserve">
          <source>Writes out a character. This is implemented to invoke the &lt;code&gt;write&lt;/code&gt; method that takes a char[].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b140b7ef352adc85171d5601e6a4059a8beb9ddb" translate="yes" xml:space="preserve">
          <source>Writes out a start tag appropriately indented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cd99484ad8b2ddeeb11187543a4b9e32ee97be" translate="yes" xml:space="preserve">
          <source>Writes out a start tag appropriately indented. Also increments the indent level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc971c51b7b35d342948b59ee6c8ece76c15bf" translate="yes" xml:space="preserve">
          <source>Writes out a start tag for the &amp;lt;font&amp;gt; tag. Because font tags cannot be nested, this method closes out any enclosing font tag before writing out a new start tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f42a920e1137b6f79fa6f072c0a5db14d2ce25" translate="yes" xml:space="preserve">
          <source>Writes out a start tag for the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356d987d07c2b42cce555e735e5353fcf20d7274" translate="yes" xml:space="preserve">
          <source>Writes out a start tag for the element. Ignores all synthesized elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e7980350f2d5d345b80613927c3a10708d9d12" translate="yes" xml:space="preserve">
          <source>Writes out a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493534febd569e8eefd0de76e69315ffc098581b" translate="yes" xml:space="preserve">
          <source>Writes out a string. This is implemented to invoke the &lt;code&gt;write&lt;/code&gt; method that takes a char[].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242b41b748966187939dd514ce8f221ecfb52196" translate="yes" xml:space="preserve">
          <source>Writes out all empty elements (all tags that have no corresponding end tag).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fd8d7e498fa017170b717aede40700f6694fc2" translate="yes" xml:space="preserve">
          <source>Writes out all the attributes for the following types: StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15c5c0d66618d9399589ac1eea1921ed967d0f6" translate="yes" xml:space="preserve">
          <source>Writes out all the attributes for the following types: StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants. The attribute name and value are separated by a colon. Each pair is separated by a semicolon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea000abebf3e796c2231c4084f5c3ec51fda40e" translate="yes" xml:space="preserve">
          <source>Writes out all the named styles as the content of the &amp;lt;style&amp;gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95aa7506da86487c9d8a3dd4aad789dffcf726cb" translate="yes" xml:space="preserve">
          <source>Writes out an end tag appropriately indented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a3e8b63a7d7db5de505123b83e2632e59b6f4a" translate="yes" xml:space="preserve">
          <source>Writes out an end tag appropriately indented. Also decrements the indent level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e658fa4cec6ec79dc0e2ffcd3905fbdaf669c0" translate="yes" xml:space="preserve">
          <source>Writes out an end tag for the &amp;lt;font&amp;gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d31826423dc7c1e67f148ff784ac0beacea46fe" translate="yes" xml:space="preserve">
          <source>Writes out an end tag for the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a070bf3f90011012888b6f65043e51f7be1db04" translate="yes" xml:space="preserve">
          <source>Writes out comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3bee8704d332f162a00133a136ad93991e1fcd" translate="yes" xml:space="preserve">
          <source>Writes out text that is contained in a TEXTAREA form element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8271b9150a2c67ce97fd91c10873bb46909d357" translate="yes" xml:space="preserve">
          <source>Writes out text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc7bcf64efcb93db19ad0308ad3a28eed435488" translate="yes" xml:space="preserve">
          <source>Writes out text. If a range is specified when the constructor is invoked, then only the appropriate range of text is written out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2feb0ee03b2fb37577d2683165471850570c57" translate="yes" xml:space="preserve">
          <source>Writes out the &amp;lt;head&amp;gt; and &amp;lt;style&amp;gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &amp;lt;style&amp;gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d67167a503faefc3b4e96ac0d49dfd64c919c5a" translate="yes" xml:space="preserve">
          <source>Writes out the &amp;lt;head&amp;gt; and &amp;lt;style&amp;gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &amp;lt;style&amp;gt; tag. The content is surrounded by valid HTML comment markers to ensure that the document is viewable in applications/browsers that do not support the tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb594e7c2614c3f26268fa1d6f121a7690ffbc18" translate="yes" xml:space="preserve">
          <source>Writes out the attribute set in an HTML-compliant manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50df6d6c3b3e39b2b4d38cb825b404ff3b15a69f" translate="yes" xml:space="preserve">
          <source>Writes out the attribute set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbd16063a5b5b4cb118131679e17c07f900bc85" translate="yes" xml:space="preserve">
          <source>Writes out the attribute set. Ignores all attributes with a key of type HTML.Tag, attributes with a key of type StyleConstants, and attributes with a key of type HTML.Attribute.ENDTAG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b012971e329c1b5642a4a72d93bbe2b77837d70" translate="yes" xml:space="preserve">
          <source>Writes out the content of the Option form element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522f62e68017f3dd760479be9b0d3f17baeb3def" translate="yes" xml:space="preserve">
          <source>Writes out the content of the SELECT form element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d59bf0b74e182fe97baa2f628898aa78e036aba" translate="yes" xml:space="preserve">
          <source>Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab68f7962761ed64910659bf2f1f7f92a40c4d4" translate="yes" xml:space="preserve">
          <source>Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way. Given that attributes such as font family and font size have no direct mapping to HTML tags, a &amp;lt;span&amp;gt; tag is generated and its style attribute is set to contain the list of remaining attributes just like inline styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1da4ae2350b8ea9bf6c7b5422ed8adaeef31d8e" translate="yes" xml:space="preserve">
          <source>Writes out the set of attributes as &quot; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&quot; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0f5a5f07a705ce87b430d9d69b03ff6c74cbfc" translate="yes" xml:space="preserve">
          <source>Writes out the set of attributes as &quot; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&quot; pairs. It throws an IOException when encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fb3884fdd7120949e40123aff7eb69222dd291" translate="yes" xml:space="preserve">
          <source>Writes out the string to the underlying output stream as a sequence of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05d15e021ce2f4dcac9e9d78114869b4a50f886" translate="yes" xml:space="preserve">
          <source>Writes out the string to the underlying output stream as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by the length of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Записывает строку в базовый выходной поток как последовательность байтов. Каждый символ в строке записывается последовательно, отбрасывая его старшие восемь бит. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на длину &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d426192659256406de28eda44669a9ce5d358062" translate="yes" xml:space="preserve">
          <source>Writes recording data to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37980950b6bfa72a356d0cb2c6fe45c994849d35" translate="yes" xml:space="preserve">
          <source>Writes recording data to the specified file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3054c268468152f2a8887eea01d971616cbb74" translate="yes" xml:space="preserve">
          <source>Writes remaining compressed data to the output stream and closes the underlying stream.</source>
          <target state="translated">Записывает оставшиеся сжатые данные в выходной поток и закрывает основной поток.</target>
        </trans-unit>
        <trans-unit id="28f3ab69dea5b395ecbb033c1f9e3a56f4abd902" translate="yes" xml:space="preserve">
          <source>Writes statement &lt;code&gt;oldStm&lt;/code&gt; to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61581676dc1ea35473d6a783082bf72e9c80ceec" translate="yes" xml:space="preserve">
          <source>Writes statement &lt;code&gt;oldStm&lt;/code&gt; to the stream. The &lt;code&gt;oldStm&lt;/code&gt; should be written entirely in terms of the callers environment, i.e. the target and all arguments should be part of the object graph being written. These expressions represent a series of &quot;what happened&quot; expressions which tell the output stream how to produce an object graph like the original.</source>
          <target state="translated">Записывает оператор &lt;code&gt;oldStm&lt;/code&gt; в поток. &lt;code&gt;oldStm&lt;/code&gt; должны быть написаны полностью с точки зрения окружающей среды , вызывающим абонентам, то есть цель и все аргументы должны быть частью объекта графа записывается. Эти выражения представляют собой серию выражений &amp;laquo;что произошло&amp;raquo;, которые сообщают выходному потоку, как создать граф объектов, подобный исходному.</target>
        </trans-unit>
        <trans-unit id="f052f35920dd89a7054c35d1df3b6bfb93d13930" translate="yes" xml:space="preserve">
          <source>Writes text to a character-output stream, buffering characters so as to provide for the efficient writing of single characters, arrays, and strings.</source>
          <target state="translated">Записывает текст в поток вывода символов,буферизируя символы таким образом,чтобы обеспечить эффективную запись отдельных символов,массивов и строк.</target>
        </trans-unit>
        <trans-unit id="597dfd2df5025e0ac661bb05d062c2aa056c141e" translate="yes" xml:space="preserve">
          <source>Writes text to character files using a default buffer size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6167d657904cfcab0dbb9315dd6a6ecb18ddf064" translate="yes" xml:space="preserve">
          <source>Writes text to character files using a default buffer size. Encoding from characters to bytes uses either a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;charset&lt;/a&gt; or the platform's &lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;default charset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862b19d4b6ff1b6eff3c4ad6b6bdab89231c477b" translate="yes" xml:space="preserve">
          <source>Writes the 16 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f7ffb3816bb380e3513417982c2f71b9fe2e32" translate="yes" xml:space="preserve">
          <source>Writes the 16 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream. The 16 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">Записывает в поток 16 младших битов &lt;code&gt;v&lt;/code&gt; . 16 старших битов &lt;code&gt;v&lt;/code&gt; игнорируются. Если поток использует сетевой порядок байтов, записанные байты по порядку будут следующими:</target>
        </trans-unit>
        <trans-unit id="2285f29a0b24000b5b0b1f1f80d441c9b5148486" translate="yes" xml:space="preserve">
          <source>Writes the 32 bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1695f3633211b76ec7f857f5454ea6a247025c8d" translate="yes" xml:space="preserve">
          <source>Writes the 32 bits of &lt;code&gt;v&lt;/code&gt; to the stream. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">Записывает 32 бита &lt;code&gt;v&lt;/code&gt; в поток. Если поток использует сетевой порядок байтов, записанные байты по порядку будут следующими:</target>
        </trans-unit>
        <trans-unit id="12bdda69ade361eb7dbeae8003665e8a3eff12fb" translate="yes" xml:space="preserve">
          <source>Writes the 64 bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad02fac0fe368119ddb18c395ff897d2d58089f" translate="yes" xml:space="preserve">
          <source>Writes the 64 bits of &lt;code&gt;v&lt;/code&gt; to the stream. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">Записывает 64 бита &lt;code&gt;v&lt;/code&gt; в поток. Если поток использует сетевой порядок байтов, записанные байты по порядку будут следующими:</target>
        </trans-unit>
        <trans-unit id="d1e7aaab26c2b74832628edc0bc5c54f2c2b6383" translate="yes" xml:space="preserve">
          <source>Writes the 8 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1804455e9da4aaf420e36d129972367ec781e360" translate="yes" xml:space="preserve">
          <source>Writes the 8 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.)</source>
          <target state="translated">Записывает в поток 8 младших битов &lt;code&gt;v&lt;/code&gt; . 24 старших бита &lt;code&gt;v&lt;/code&gt; игнорируются. (Это означает, что &lt;code&gt;writeByte&lt;/code&gt; делает то же самое, что и &lt;code&gt;write&lt;/code&gt; для целочисленного аргумента.)</target>
        </trans-unit>
        <trans-unit id="19e78fdb1971c9362622f784b86e72a51fdd9069" translate="yes" xml:space="preserve">
          <source>Writes the Manifest to the specified OutputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cd571628123202a3823b52aeb30a696038cb43" translate="yes" xml:space="preserve">
          <source>Writes the Manifest to the specified OutputStream. Attributes.Name.MANIFEST_VERSION must be set in MainAttributes prior to invoking this method.</source>
          <target state="translated">Записывает Манифест в указанный OutputStream.Attributes.Name.MANIFEST_VERSION должен быть установлен в MainAttributes до вызова этого метода.</target>
        </trans-unit>
        <trans-unit id="56a6e43f8f49e535184e69201b1785713f290620" translate="yes" xml:space="preserve">
          <source>Writes the changes in this &lt;code&gt;RowSetWriter&lt;/code&gt; object's rowset back to the data source from which it got its data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed35cca7d83e05daee22aa9a3f126d06b836d5a5" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of the specified byte array to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e9501319b3d34bbec70c3333e794fa37a6d454" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; to the specified output stream argument, as if by calling the output stream's write method using &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24338bb5d1fb51bd9cbd3d86a25bb4355deba24" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of this byte array output stream to the specified output stream argument, as if by calling the output stream's write method using &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt;.</source>
          <target state="translated">Записывает полное содержимое этого выходного потока массива байтов в указанный аргумент выходного потока, как если бы путем вызова метода записи выходного потока с помощью &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff4dae149c1ce83c7a6b820b14212cbe3bbf93f1" translate="yes" xml:space="preserve">
          <source>Writes the contents of the buffer to another character stream.</source>
          <target state="translated">Записывает содержимое буфера в другой поток символов.</target>
        </trans-unit>
        <trans-unit id="625df89357bdd2344ade2b496e40fd50120f1e3a" translate="yes" xml:space="preserve">
          <source>Writes the data, properties, and metadata for this &lt;code&gt;WebRowSet&lt;/code&gt; object to the given &lt;code&gt;OutputStream&lt;/code&gt; object in XML format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c40001a80f650ccea2798916fa3dc59bfca35b4" translate="yes" xml:space="preserve">
          <source>Writes the data, properties, and metadata for this &lt;code&gt;WebRowSet&lt;/code&gt; object to the given &lt;code&gt;Writer&lt;/code&gt; object in XML format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def01038d2b375e9be7d7c972c662a60bf85f6ed" translate="yes" xml:space="preserve">
          <source>Writes the default namespace to the stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1da37e0b3c109b19027e60ce196dfcfe9d6bb8" translate="yes" xml:space="preserve">
          <source>Writes the field values, time stamp, and event duration to the Flight Recorder system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79062814f665166b5bf8b4fbf187fc654014a55" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object to the specified &lt;code&gt;java.io.Writer&lt;/code&gt; output stream as an XML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53959f7ef1e7a69156e9085d95064c77f4d010b" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object to the specified &lt;code&gt;java.io.Writer&lt;/code&gt; output stream as an XML document. This document includes the rowset's data, metadata, and properties plus the appropriate XML tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc66b6ae43cb5f22e10fbdc9f01c80ebb40e0aa" translate="yes" xml:space="preserve">
          <source>Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d16b2514bafe679b47004e8cd89d3c68d61aebc" translate="yes" xml:space="preserve">
          <source>Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position &lt;code&gt;pos&lt;/code&gt;. The string will overwrite the existing characters in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt; value will be increased to accommodate the extra characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a742d5137a159149b8c8b646d025117a64f0e3" translate="yes" xml:space="preserve">
          <source>Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents, at the position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a11fbed6e0f0c000e7ac73c751f5706337ffea4" translate="yes" xml:space="preserve">
          <source>Writes the given array of bytes to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents, starting at position &lt;code&gt;pos&lt;/code&gt;, and returns the number of bytes written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7a837912d2ada585ea670a18a22c40ee3566d8" translate="yes" xml:space="preserve">
          <source>Writes the given array of bytes to the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents, starting at position &lt;code&gt;pos&lt;/code&gt;, and returns the number of bytes written. The array of bytes will overwrite the existing bytes in the &lt;code&gt;Blob&lt;/code&gt; object starting at the position &lt;code&gt;pos&lt;/code&gt;. If the end of the &lt;code&gt;Blob&lt;/code&gt; value is reached while writing the array of bytes, then the length of the &lt;code&gt;Blob&lt;/code&gt; value will be increased to accommodate the extra bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d0f592eeac5c796ea935b5d994096745d157f7" translate="yes" xml:space="preserve">
          <source>Writes the given byte into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает заданный байт в этот буфер в текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="dd7b88652ec60af74a840f947c7b86d252782b34" translate="yes" xml:space="preserve">
          <source>Writes the given byte into this buffer at the given index.</source>
          <target state="translated">Записывает заданный байт в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="6a61149f23f16decaac4eae92463c7ef12672ae5" translate="yes" xml:space="preserve">
          <source>Writes the given char into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает заданный график в этот буфер при текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="4f770fa38d98aec466fccb25555cc99c0b9ddbaf" translate="yes" xml:space="preserve">
          <source>Writes the given char into this buffer at the given index.</source>
          <target state="translated">Записывает заданный график в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="f2d1506e6de2b9485d5e760430b8d8a6e992441f" translate="yes" xml:space="preserve">
          <source>Writes the given double into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает указанный двойник в этот буфер при текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="68ee8a87d76de1cd2a770b8396c4ab7cf9175f3b" translate="yes" xml:space="preserve">
          <source>Writes the given double into this buffer at the given index.</source>
          <target state="translated">Записывает данный двойник в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="370abd73ada65b5904921d209602fcc69611ebec" translate="yes" xml:space="preserve">
          <source>Writes the given float into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает заданный плавающий диск в этот буфер при текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="07eaa541d5c0633efea85fbc2ae9bba6c20a12a6" translate="yes" xml:space="preserve">
          <source>Writes the given float into this buffer at the given index.</source>
          <target state="translated">Записывает заданный плавающий диск в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="19e622dee348636b8ed78c68d535a1074887c524" translate="yes" xml:space="preserve">
          <source>Writes the given int into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает заданную int в этот буфер при текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="b845c5f27efaa6c518dc0d967f43b3a146bebef9" translate="yes" xml:space="preserve">
          <source>Writes the given int into this buffer at the given index.</source>
          <target state="translated">Записывает заданную int в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="712fe7e7e38b5fd24f11498bd179d0ff8bdc747b" translate="yes" xml:space="preserve">
          <source>Writes the given long into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает заданную длину в этот буфер при текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="fabaa8aff4aa813be322673a9965363c8f76cba7" translate="yes" xml:space="preserve">
          <source>Writes the given long into this buffer at the given index.</source>
          <target state="translated">Записывает заданную длину в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="9495203bcfa27d90ba40a65bedf36e96cec6cc11" translate="yes" xml:space="preserve">
          <source>Writes the given short into this buffer at the current position, and then increments the position.</source>
          <target state="translated">Записывает данную короткую в этот буфер при текущей позиции,а затем увеличивает позицию.</target>
        </trans-unit>
        <trans-unit id="10ed6376a80a004d623217c1faeb7c99a1dda8a2" translate="yes" xml:space="preserve">
          <source>Writes the given short into this buffer at the given index.</source>
          <target state="translated">Записывает данную короткую в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="0d58e1f54ac285ebe48be0cf8a78bf6938ac3d49" translate="yes" xml:space="preserve">
          <source>Writes the line separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1871aeccc02c9dbbfa7844c873c3486c323372" translate="yes" xml:space="preserve">
          <source>Writes the line separator. This invokes &lt;code&gt;output&lt;/code&gt; directly as well as setting the &lt;code&gt;lineLength&lt;/code&gt; to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b3e59953847a43bcec280307207b82f61a7fe6" translate="yes" xml:space="preserve">
          <source>Writes the line separator. This is overriden to make sure we don't replace the newline content in case it is outside normal ascii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d0b6fd544532d6da39d30f6b008384dfc920fd" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f6324944e39f9ec811cc3204c298ba8e22898" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language. The driver converts this to a SQL &lt;code&gt;NCHAR&lt;/code&gt; or &lt;code&gt;NVARCHAR&lt;/code&gt; or &lt;code&gt;LONGNVARCHAR&lt;/code&gt; value (depending on the argument's size relative to the driver's limits on &lt;code&gt;NVARCHAR&lt;/code&gt; values) when it sends it to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1f3589491c7e59f4409b383151d9dbaea50dfd" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7661a9ba802f0f8404dcff2f25d0e79592926c" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java boolean. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac60e91c51e05c39515073eaf54895db2613b6e4" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a639b1d5b4b69d9459220fd2461435c95a20fc2" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java byte. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9593bde4bf357c583e7328e5ea9018696aabeee7" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java double.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6bfb271a92d8c8e21181c42abe87ecff6afb06" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java double. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9b1e5fa972f78972b24c6e7825131d395a8ccc" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4c3c391c1b9901ee09ed26e81a11b12b2b70d4" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java float. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dec4054e8f37abc1c891b14916680cd86d65a1" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6ffa745bb17cb2125b60fa279c0798e5670e2f" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java int. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47790b3016da43b530a0ad20df6ae1300b2e0e29" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1612f1a47c6ca7a2deed650adf88239bc52b77a1" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java long. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9e25e8282f094090e93103d929b57bc1dae11f" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java short.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7c5fcc6f952395e88a8fee07a40dc57357b4ce" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a Java short. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae795241e4d0dbed163c78ace2898ad64a209d95" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.math.BigDecimal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966a161abb638bc66e062577c6601a2f0243654b" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.math.BigDecimal object. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b6f38a64127bc13fe0460d5ba6bb6f767b58c8" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Date object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c8593503581612e5c62a36c73e3be22c143d60" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Date object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc86fddad392435fe68b386370732f81602fca4f" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Time object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f27154a6884b242089f59999a75bc40f12eefa" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Time object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22105b1215f732b1187e26860f8ed1a36976e32" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Timestamp object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e422e5fae800f499fb8e1d4969f89024012858c" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a java.sql.Timestamp object. Writes the next attribute to the stream as a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6ba5d83a2992ff0d3a302518dd1dd97f407273" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a stream of ASCII characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38ae5c63be734084b684282016282bc8c0a5985" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a stream of Unicode characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0970c547d7936b50ee00426701f83ff57fde3cfa" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as a stream of uninterpreted bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f36f131f8ab34500af50462c7eadd92c2b76022" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as an array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e61a033c461fb7dcfbfdeeada45e9ae7b6869b0" translate="yes" xml:space="preserve">
          <source>Writes the next attribute to the stream as an array of bytes. Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt; in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d975120559c26edf427658d3a3c3d0ebc4d2550" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;byte&lt;/code&gt; to the piped output stream.</source>
          <target state="translated">Записывает указанный &lt;code&gt;byte&lt;/code&gt; в конвейерный выходной поток.</target>
        </trans-unit>
        <trans-unit id="5f14d6eee88508e464e25626a9203ab46c7ae8c1" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;byte&lt;/code&gt; to this output stream.</source>
          <target state="translated">Записывает указанный &lt;code&gt;byte&lt;/code&gt; в этот выходной поток.</target>
        </trans-unit>
        <trans-unit id="2ded1a3671d9de0d3963eef8e96f5518c65ec142" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;char&lt;/code&gt; to the piped output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8ccadb9cba29bd2eb5a6b400b75de445d2099d" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;char&lt;/code&gt; to the piped output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">Записывает указанный &lt;code&gt;char&lt;/code&gt; в конвейерный выходной поток. Если поток считывал символы данных из подключенного входного потока по конвейеру, но поток больше не работает, возникает &lt;code&gt;IOException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ab111c3fb2ece34959961ef2a47f24f69db4b45" translate="yes" xml:space="preserve">
          <source>Writes the specified byte (the low eight bits of the argument &lt;code&gt;b&lt;/code&gt;) to the underlying output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a361965d78596b1ec164e036366e12d2c75bb2c" translate="yes" xml:space="preserve">
          <source>Writes the specified byte (the low eight bits of the argument &lt;code&gt;b&lt;/code&gt;) to the underlying output stream. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Записывает указанный байт (младшие восемь бит аргумента &lt;code&gt;b&lt;/code&gt; ) в базовый выходной поток. Если исключение не генерируется, &lt;code&gt;written&lt;/code&gt; счетчик увеличивается на &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f395fe152479fa6fe3982d50f757a564445e03a3" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112760f7a5bd1088e95174f743f77e6540d54a2b" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this buffered output stream.</source>
          <target state="translated">Записывает указанный байт в этот буферизованный выходной поток.</target>
        </trans-unit>
        <trans-unit id="7609567d3c31861f0c015f22b9e866c66abef6ef" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this byte array output stream.</source>
          <target state="translated">Записывает указанный байт в этот поток вывода байтового массива.</target>
        </trans-unit>
        <trans-unit id="f7ca3263ecdf5bfa2fcb28af4f0f50c9aa5238d5" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4802f7b977b1bf85147c28f9685965b5454afa" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file output stream. Implements the &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">Записывает указанный байт в этот выходной поток файла. Реализует метод &lt;code&gt;write&lt;/code&gt; &lt;code&gt;OutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aef8e765886b82ee496b736f4dd9d04b5b58c2cb" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b729d9dffaa8a1f4157fef1e1ce618b624909b04" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file. The write starts at the current file pointer.</source>
          <target state="translated">Записывает указанный байт в этот файл.Запись начинается с текущего указателя на файл.</target>
        </trans-unit>
        <trans-unit id="ba3a4edd85917756c50fa03243093621eed1d538" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this output stream.</source>
          <target state="translated">Записывает указанный байт в этот выходной поток.</target>
        </trans-unit>
        <trans-unit id="b599b1fa291253a78c3e88600501e421edb1c042" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this output stream. The general contract for &lt;code&gt;write&lt;/code&gt; is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">Записывает указанный байт в этот выходной поток. Общий контракт на &lt;code&gt;write&lt;/code&gt; заключается в том, что в выходной поток записывается один байт. Записываемый байт - это восемь младших битов аргумента &lt;code&gt;b&lt;/code&gt; . 24 старших бита &lt;code&gt;b&lt;/code&gt; игнорируются.</target>
        </trans-unit>
        <trans-unit id="8971c513647c69b909bf210695c94f545ca38243" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e958c00a95c755222bae929710882f0ef7598984" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this stream. If the byte is a newline and automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">Записывает указанный байт в этот поток. Если байт является новой строкой и включена автоматическая очистка, будет вызван метод &lt;code&gt;flush&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b17cdee8b1cf493966a1e22479e14f7926cbdbfb" translate="yes" xml:space="preserve">
          <source>Writes the string to the file as a sequence of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7ff01c245c6e87c2ac4ef96cf3070915dfcaaf" translate="yes" xml:space="preserve">
          <source>Writes the string to the file as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. The write starts at the current position of the file pointer.</source>
          <target state="translated">Записывает строку в файл в виде последовательности байт.Каждый символ в строке записывается последовательно,отбрасывая его старшие восемь бит.Запись начинается с текущей позиции указателя на файл.</target>
        </trans-unit>
        <trans-unit id="d0a5af43cf06c929a83885e6406856a92aa5cc38" translate="yes" xml:space="preserve">
          <source>Writes the value of a user-defined attribute from a buffer.</source>
          <target state="translated">Записывает из буфера значение пользовательского атрибута.</target>
        </trans-unit>
        <trans-unit id="6de7b1d847ae56079e54f185e80246ad8ca6539e" translate="yes" xml:space="preserve">
          <source>Writes this object to the given SQL data stream, converting it back to its SQL value in the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10aa40878b44a62bd75f37a923af2794ac38513" translate="yes" xml:space="preserve">
          <source>Writes this object to the given SQL data stream, converting it back to its SQL value in the data source. The implementation of the method must follow this protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207b013c329390f09844c66437576494a2852d98" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output character stream in a format suitable for using the &lt;a href=&quot;#load(java.io.Reader)&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e35b34ff21aa3824ad435b3d42b717ac1044a7" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output character stream in a format suitable for using the &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Записывает этот список свойств (пары ключей и элементов) в этой таблице &lt;code&gt;Properties&lt;/code&gt; в выходной поток символов в формате, подходящем для использования метода &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e495c69a1b37a4ce090a0f61eb84303001e2f066" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output stream in a format suitable for loading into a &lt;code&gt;Properties&lt;/code&gt; table using the &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b4a7c90bf5626fec9c9f129aa1374ad6737d2c" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output stream in a format suitable for loading into a &lt;code&gt;Properties&lt;/code&gt; table using the &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Записывает этот список свойств (пары ключей и элементов) в этой таблице &lt;code&gt;Properties&lt;/code&gt; в выходной поток в формате, подходящем для загрузки в таблицу &lt;code&gt;Properties&lt;/code&gt; с помощью метода &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d1e33d407f7be7c57261888fc679ef1b7584671" translate="yes" xml:space="preserve">
          <source>Writes to the output stream all the bytes in array &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13a505bf6f1163d15ecf793f7208b545f326a38" translate="yes" xml:space="preserve">
          <source>Writes to the output stream all the bytes in array &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;b.length&lt;/code&gt; is zero, then no bytes are written. Otherwise, the byte &lt;code&gt;b[0]&lt;/code&gt; is written first, then &lt;code&gt;b[1]&lt;/code&gt;, and so on; the last byte written is &lt;code&gt;b[b.length-1]&lt;/code&gt;.</source>
          <target state="translated">Записывает в выходной поток все байты в массиве &lt;code&gt;b&lt;/code&gt; . Если &lt;code&gt;b&lt;/code&gt; имеет значение &lt;code&gt;null&lt;/code&gt; , создается &lt;code&gt;NullPointerException&lt;/code&gt; . Если &lt;code&gt;b.length&lt;/code&gt; равно нулю, байты не записываются. В противном случае сначала записывается байт &lt;code&gt;b[0]&lt;/code&gt; , затем &lt;code&gt;b[1]&lt;/code&gt; и так далее; последний записанный байт - &lt;code&gt;b[b.length-1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8514d628233a1a6ce1964bd5fc5b29aeaa728dad" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low- order bits of the argument &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3634369cc0a70228335b7c0d1b3ea2b4c26bb08d" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low- order bits of the argument &lt;code&gt;v&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.) The byte written by this method may be read by the &lt;code&gt;readByte&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;byte&lt;/code&gt; equal to &lt;code&gt;(byte)v&lt;/code&gt;.</source>
          <target state="translated">Записывает в выходной поток восемь младших битов аргумента &lt;code&gt;v&lt;/code&gt; . 24 старших бита &lt;code&gt;v&lt;/code&gt; игнорируются. (Это означает, что &lt;code&gt;writeByte&lt;/code&gt; выполняет то же самое, что и &lt;code&gt;write&lt;/code&gt; для целочисленного аргумента.) Байт, записанный этим методом, может быть прочитан методом &lt;code&gt;readByte&lt;/code&gt; интерфейса &lt;code&gt;DataInput&lt;/code&gt; , который затем вернет &lt;code&gt;byte&lt;/code&gt; равный &lt;code&gt;(byte)v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0cf69d6c69bcf0faa8baab0cbc731ba085221ea" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e71f080b530ff97228da57a38da0da555e275b" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">Записывает в выходной поток восемь младших битов аргумента &lt;code&gt;b&lt;/code&gt; . 24 старших бита &lt;code&gt;b&lt;/code&gt; игнорируются.</target>
        </trans-unit>
        <trans-unit id="2c65468e87575c6e9fa9a826657a87e56933e290" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f0fe973a856a893d528e0a57e3fd8c6d66f0de" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;v&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.) The byte written by this method may be read by the &lt;code&gt;readByte&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;byte&lt;/code&gt; equal to &lt;code&gt;(byte)v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf32e90bca78d37e28d45fb95b94078d84950f46" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1839e48f3104f8ae0db661096310023645bcf7d2" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object. When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt;, this method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream. Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method of the given object, which writes the object's attributes to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363c2b77917ba97ed7dfdca74cae97621fbdddc4" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given &lt;code&gt;SQLData&lt;/code&gt; object. When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt;, this method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream. Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method of the given object, which writes the object's attributes to the stream. The implementation of the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; calls the appropriate &lt;code&gt;SQLOutput&lt;/code&gt; writer method(s) for writing each of the object's attributes in order. The attributes must be read from an &lt;code&gt;SQLInput&lt;/code&gt; input stream and written to an &lt;code&gt;SQLOutput&lt;/code&gt; output stream in the same order in which they were listed in the SQL definition of the user-defined type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e830ac9520dde8effa90ef42b6c3c7f73f65364" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8873fa76c2f527781970d368373d33a03dbd6d75" translate="yes" xml:space="preserve">
          <source>Writes to the stream the data contained in the given object. The object will be converted to the specified targetSqlType before being sent to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcbd1fcd9c20910e4d19c79a6908b0180531555" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given char value, in the current byte order, into this buffer at the current position, and then increments the position by two.</source>
          <target state="translated">Записывает два байта,содержащих заданное значение графика,в этот буфер в текущем порядке байт,а затем увеличивает позицию на два.</target>
        </trans-unit>
        <trans-unit id="e978de920f972d75d95f1255bab54910641e5e61" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given char value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">Записывает в этот буфер по данному индексу два байта,содержащих заданное значение графика,в текущем порядке байт.</target>
        </trans-unit>
        <trans-unit id="6fc0c682093f02b665c23020bba01582a4b98e28" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given short value, in the current byte order, into this buffer at the current position, and then increments the position by two.</source>
          <target state="translated">Записывает два байта,содержащих заданное короткое значение,в текущем порядке байт,в этот буфер на текущей позиции,а затем увеличивает позицию на два.</target>
        </trans-unit>
        <trans-unit id="0f419b1c9cfcd70b38af34a51aebf7df8b86f76e" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given short value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">Записывает два байта,содержащих заданное короткое значение,в текущем порядке байт,в этот буфер по данному индексу.</target>
        </trans-unit>
        <trans-unit id="e6d8fbbfcfd69eef504dcac6d1ae51eb79ffbc5f" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../../java.base/java/io/datainput#modified-utf-8&quot;&gt; modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f8bb9bf8b8a3b9415c961461d6b9561351459f" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../../java.base/java/io/datainput#modified-utf-8&quot;&gt; modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee80091edbeade9265ab307086b86eb4ae01dddf" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6256eb9d0d72cbe71b13a3c7e9f7676978fe16" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="translated">Записывает два байта информации о длине в выходной поток в сетевом порядке байтов, за которым следует &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;измененное представление UTF-8&lt;/a&gt; каждого символа в строке &lt;code&gt;s&lt;/code&gt; . Если &lt;code&gt;s&lt;/code&gt; равно &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;NullPointerException&lt;/code&gt; . Каждый символ в строке &lt;code&gt;s&lt;/code&gt; преобразуется в группу из одного, двух или трех байтов, в зависимости от значения символа.</target>
        </trans-unit>
        <trans-unit id="61fed0fe63590aa8fe08508149b0ac07f0edb001" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream, followed by the &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb381ca0baa70d627eb89fc91539d21b5b1970f" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream, followed by the &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="translated">Записывает два байта информации о длине в выходной поток, за которыми следует &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;измененное представление UTF-8&lt;/a&gt; каждого символа в строке &lt;code&gt;s&lt;/code&gt; . Если &lt;code&gt;s&lt;/code&gt; равно &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;NullPointerException&lt;/code&gt; . Каждый символ в строке &lt;code&gt;s&lt;/code&gt; преобразуется в группу из одного, двух или трех байтов, в зависимости от значения символа.</target>
        </trans-unit>
        <trans-unit id="11a7c7a4a4b01ec9ba0d240cb1a9682883bcf927" translate="yes" xml:space="preserve">
          <source>Writes two bytes to the output stream to represent the value of the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840baa9d6bfa2b29f18593baa6d5a15f4137eaeb" translate="yes" xml:space="preserve">
          <source>Writes two bytes to the output stream to represent the value of the argument. The byte values to be written, in the order shown, are:</source>
          <target state="translated">Записывает два байта в выходной поток для представления значения аргумента.Значения байтов записываются в указанном порядке:</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="95ad111c35bebeafa25fe06efdef5f08bcb7e909" translate="yes" xml:space="preserve">
          <source>Writing GIF images</source>
          <target state="translated">Написание изображений в формате GIF</target>
        </trans-unit>
        <trans-unit id="424422e9c1df6af363f8dd1c46652e8af0cdb465" translate="yes" xml:space="preserve">
          <source>Writing a &lt;code&gt;WebRowSet&lt;/code&gt; object includes printing the rowset's data, metadata, and properties, all with the appropriate XML tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddf90dcfc18cbf45f914c903cf3587716a02561" translate="yes" xml:space="preserve">
          <source>Writing a packet does not do any integrity checking on the packet aside from checking the packet length. Checking the packet length requires checking that the value of the &lt;code&gt;length&lt;/code&gt; field (as indicated by the first four bytes of the packet) is 11 or greater. Consequently the length of the byte array provided to this method, that is &lt;code&gt;pkt.length&lt;/code&gt;, must be 11 or more, and must be equal or greater than the value of the &lt;code&gt;length&lt;/code&gt; field. If the length of the byte array is greater than the value of the &lt;code&gt;length&lt;/code&gt; field then all bytes from element &lt;code&gt;pkt[length]&lt;/code&gt; onwards are ignored. In other words, any additional bytes that follow the packet in the byte array are ignored and will not be transmitted to the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd3c35e027988d3e72acc1181f58b176b562470" translate="yes" xml:space="preserve">
          <source>Writing out a bean, on the other hand, sometimes requires special knowledge of the bean's type. If the bean's state can be expressed using only the no-argument constructor and public getter and setter methods for properties, no special knowledge is required. Otherwise, the bean requires a custom &lt;em&gt;persistence delegate&lt;/em&gt; -- an object that is in charge of writing out beans of a particular type. All classes provided in the JDK that descend from &lt;code&gt;java.awt.Component&lt;/code&gt;, as well as all their properties, automatically have persistence delegates.</source>
          <target state="translated">С другой стороны, для написания bean-компонента иногда требуется специальное знание типа bean-компонента. Если состояние bean-компонента может быть выражено с использованием только конструктора без аргументов и общедоступных методов получения и установки для свойств, никаких специальных знаний не требуется. В противном случае для bean-компонента требуется настраиваемый &lt;em&gt;делегат сохранения состояния&lt;/em&gt; - объект, отвечающий за запись bean-компонентов определенного типа. Все классы, представленные в JDK, которые происходят от &lt;code&gt;java.awt.Component&lt;/code&gt; , а также все их свойства автоматически имеют делегатов сохранения.</target>
        </trans-unit>
        <trans-unit id="2aca6c8bd10dab33a4eec99abb3e68b55ac1f71c" translate="yes" xml:space="preserve">
          <source>Writing to file descriptors</source>
          <target state="translated">Запись в дескрипторы файлов</target>
        </trans-unit>
        <trans-unit id="087742bd2a01740eeb022cb23d5b57ca20a16d8d" translate="yes" xml:space="preserve">
          <source>WrongMethodTypeException</source>
          <target state="translated">WrongMethodTypeException</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="db449d7dc04f973b1ad97228d3cd5fa1f5225e0b" translate="yes" xml:space="preserve">
          <source>X be the MBean named by &lt;code&gt;name&lt;/code&gt;,</source>
          <target state="translated">X - это MBean, названный по &lt;code&gt;name&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="04d117bbef4a6bcdcdff089df98755d8aa7b99de" translate="yes" xml:space="preserve">
          <source>X coordinate the control point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6eed17085cd961824e6cc026bad4e1f6bbfdf9a" translate="yes" xml:space="preserve">
          <source>X dimension (&amp;micro;m).</source>
          <target state="translated">Размер X (мкм).</target>
        </trans-unit>
        <trans-unit id="7f266332102748822354cc0a5aa107093c35ebbd" translate="yes" xml:space="preserve">
          <source>X dimension.</source>
          <target state="translated">X размер.</target>
        </trans-unit>
        <trans-unit id="b5610424b8a02ba2abc09a2e8508cc30ad10e2b3" translate="yes" xml:space="preserve">
          <source>X,</source>
          <target state="translated">X,</target>
        </trans-unit>
        <trans-unit id="34826acc1a06fc5b72d40097770b09d8e5c62652" translate="yes" xml:space="preserve">
          <source>X, as a &lt;a href=&quot;#cg&quot;&gt;capturing group&lt;/a&gt;</source>
          <target state="translated">X, как &lt;a href=&quot;#cg&quot;&gt;захватывающая группа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="153bf828911a9b26f94f5e8da8f2fb9bb7b28fe4" translate="yes" xml:space="preserve">
          <source>X.509, PGP, and SDSI certificates can all be implemented by subclassing the Certificate class, even though they contain different sets of information, and they store and retrieve the information in different ways.</source>
          <target state="translated">X.509,PGP и SDSI сертификаты могут быть реализованы путем подклассификации класса сертификатов,даже если они содержат различные наборы информации,и они хранят и извлекают информацию различными способами.</target>
        </trans-unit>
        <trans-unit id="4590145268458005ff818a940acd5d70ab872d49" translate="yes" xml:space="preserve">
          <source>X25519</source>
          <target state="translated">X25519</target>
        </trans-unit>
        <trans-unit id="1c1a210cdcf74ff605ceeee78ea3b4156161eddf" translate="yes" xml:space="preserve">
          <source>X448</source>
          <target state="translated">X448</target>
        </trans-unit>
        <trans-unit id="1bd269c56dd4b87ce14015ee8fa37115311520bf" translate="yes" xml:space="preserve">
          <source>X500Principal</source>
          <target state="translated">X500Principal</target>
        </trans-unit>
        <trans-unit id="ebe07aff1a5d06134e103668254133e47ebed3d3" translate="yes" xml:space="preserve">
          <source>X500Principal.equals()</source>
          <target state="translated">X500Principal.equals()</target>
        </trans-unit>
        <trans-unit id="44f531c8910ef1690c5414e940f95622b4b29dac" translate="yes" xml:space="preserve">
          <source>X500Principal.getEncoded()</source>
          <target state="translated">X500Principal.getEncoded()</target>
        </trans-unit>
        <trans-unit id="08dc2bb2b748578a12935a031ae247bdbc506c92" translate="yes" xml:space="preserve">
          <source>X500Principal.getName()</source>
          <target state="translated">X500Principal.getName()</target>
        </trans-unit>
        <trans-unit id="85e52a880efe4b288d45c41cedbc91debb817b34" translate="yes" xml:space="preserve">
          <source>X500Principal.hashCode()</source>
          <target state="translated">X500Principal.hashCode()</target>
        </trans-unit>
        <trans-unit id="f6d4ed090724f259caa864b84485151a2f5ed2a6" translate="yes" xml:space="preserve">
          <source>X500Principal.toString()</source>
          <target state="translated">X500Principal.toString()</target>
        </trans-unit>
        <trans-unit id="aa7c4644ed192385ca463ead0261d1728512dd3b" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential</source>
          <target state="translated">X500PrivateCredential</target>
        </trans-unit>
        <trans-unit id="d034f128505231d7ac518742ffbbed3e97e6e481" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.destroy()</source>
          <target state="translated">X500PrivateCredential.destroy()</target>
        </trans-unit>
        <trans-unit id="a6e9eecb44deb79c51837aacde9e046aa902e33a" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getAlias()</source>
          <target state="translated">X500PrivateCredential.getAlias()</target>
        </trans-unit>
        <trans-unit id="9f750adea9e5263dff3d30eb16f0098cfb5c1a5b" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getCertificate()</source>
          <target state="translated">X500PrivateCredential.getCertificate()</target>
        </trans-unit>
        <trans-unit id="6ad4479421ed09f884c8c3e0c36adabeee8170df" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getPrivateKey()</source>
          <target state="translated">X500PrivateCredential.getPrivateKey()</target>
        </trans-unit>
        <trans-unit id="ef0ff1d8b5787f71f3646c30049b1d7a2bca631f" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.isDestroyed()</source>
          <target state="translated">X500PrivateCredential.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="686dd940cc8227b0aa2cd69ee1f44cfa6d1e893f" translate="yes" xml:space="preserve">
          <source>X509CRL</source>
          <target state="translated">X509CRL</target>
        </trans-unit>
        <trans-unit id="7110aa0404043c957aa839aa47f0f0c0a235d814" translate="yes" xml:space="preserve">
          <source>X509CRL.equals()</source>
          <target state="translated">X509CRL.equals()</target>
        </trans-unit>
        <trans-unit id="a8d0f2a8e61792cb750521d01ae1c425200eee29" translate="yes" xml:space="preserve">
          <source>X509CRL.getEncoded()</source>
          <target state="translated">X509CRL.getEncoded()</target>
        </trans-unit>
        <trans-unit id="2f2c2d9ad2feed06f68886e5534e5a1725acf6f0" translate="yes" xml:space="preserve">
          <source>X509CRL.getIssuerDN()</source>
          <target state="translated">X509CRL.getIssuerDN()</target>
        </trans-unit>
        <trans-unit id="d5041e1c7a5b762dee37a31bfd82a14e09c5c33e" translate="yes" xml:space="preserve">
          <source>X509CRL.getIssuerX500Principal()</source>
          <target state="translated">X509CRL.getIssuerX500Principal()</target>
        </trans-unit>
        <trans-unit id="b2723672bad69076cb03b2b1698dc03f59d0ea09" translate="yes" xml:space="preserve">
          <source>X509CRL.getNextUpdate()</source>
          <target state="translated">X509CRL.getNextUpdate()</target>
        </trans-unit>
        <trans-unit id="406fe17fe2408adebb3de6191ff98d0aae6574e7" translate="yes" xml:space="preserve">
          <source>X509CRL.getRevokedCertificate()</source>
          <target state="translated">X509CRL.getRevokedCertificate()</target>
        </trans-unit>
        <trans-unit id="c282b03b35ba6133d7f69263475d3e79c4c96d18" translate="yes" xml:space="preserve">
          <source>X509CRL.getRevokedCertificates()</source>
          <target state="translated">X509CRL.getRevokedCertificates()</target>
        </trans-unit>
        <trans-unit id="676975bb590ac24ff50fbec531440b871beceedb" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgName()</source>
          <target state="translated">X509CRL.getSigAlgName()</target>
        </trans-unit>
        <trans-unit id="cca79e74cc8ba51fac9fb5484e66124607d369d9" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgOID()</source>
          <target state="translated">X509CRL.getSigAlgOID()</target>
        </trans-unit>
        <trans-unit id="28c2198822dff08b6100d64abef2998ea91df931" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgParams()</source>
          <target state="translated">X509CRL.getSigAlgParams()</target>
        </trans-unit>
        <trans-unit id="817097db4f4524b7475ee9a94624753adaeec91b" translate="yes" xml:space="preserve">
          <source>X509CRL.getSignature()</source>
          <target state="translated">X509CRL.getSignature()</target>
        </trans-unit>
        <trans-unit id="a6853b01102efc16cd41b4f21b2c2403aa88fbec" translate="yes" xml:space="preserve">
          <source>X509CRL.getTBSCertList()</source>
          <target state="translated">X509CRL.getTBSCertList()</target>
        </trans-unit>
        <trans-unit id="859688e6f0f0d21f0915e65120c504f1568c0fa0" translate="yes" xml:space="preserve">
          <source>X509CRL.getThisUpdate()</source>
          <target state="translated">X509CRL.getThisUpdate()</target>
        </trans-unit>
        <trans-unit id="666eba5f3eb0836f485542f2b3612b3740a26658" translate="yes" xml:space="preserve">
          <source>X509CRL.getVersion()</source>
          <target state="translated">X509CRL.getVersion()</target>
        </trans-unit>
        <trans-unit id="ef777faf32e00157c932d26e4a91ee3ec2d48f1e" translate="yes" xml:space="preserve">
          <source>X509CRL.hashCode()</source>
          <target state="translated">X509CRL.hashCode()</target>
        </trans-unit>
        <trans-unit id="7df628731cfd156631b4a6dde9d8100f8bf13d59" translate="yes" xml:space="preserve">
          <source>X509CRL.verify()</source>
          <target state="translated">X509CRL.verify()</target>
        </trans-unit>
        <trans-unit id="4929c310370b1f2c4432d741b376aa8796d6daa6" translate="yes" xml:space="preserve">
          <source>X509CRLEntry</source>
          <target state="translated">X509CRLEntry</target>
        </trans-unit>
        <trans-unit id="6f506b182e9c3e2ee873d77a6b41722c00ad04f0" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.equals()</source>
          <target state="translated">X509CRLEntry.equals()</target>
        </trans-unit>
        <trans-unit id="4ea40e3fc5a6e22b9ad4abfb207a580ed449dd38" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getCertificateIssuer()</source>
          <target state="translated">X509CRLEntry.getCertificateIssuer()</target>
        </trans-unit>
        <trans-unit id="236c0633cfcd4437299c5cfa51b69a58189686f3" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getEncoded()</source>
          <target state="translated">X509CRLEntry.getEncoded()</target>
        </trans-unit>
        <trans-unit id="dc242325ee95b283e2bce2346034bb12bd0bfcec" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getRevocationDate()</source>
          <target state="translated">X509CRLEntry.getRevocationDate()</target>
        </trans-unit>
        <trans-unit id="c8deeea3d6af56508cad742a99121e62126d0753" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getRevocationReason()</source>
          <target state="translated">X509CRLEntry.getRevocationReason()</target>
        </trans-unit>
        <trans-unit id="70dc85fba9f70a00f5b5be5375f4f46bd97ff72f" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getSerialNumber()</source>
          <target state="translated">X509CRLEntry.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="82ac9fc56fd26a520483391d1fc255e7a65ad123" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.hasExtensions()</source>
          <target state="translated">X509CRLEntry.hasExtensions()</target>
        </trans-unit>
        <trans-unit id="e49e98981f178c407f6c206c52398697a35c2131" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.hashCode()</source>
          <target state="translated">X509CRLEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="002a4ee189ce5a952707a0330d74fddbc21248bf" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.toString()</source>
          <target state="translated">X509CRLEntry.toString()</target>
        </trans-unit>
        <trans-unit id="0537cdb42327ff3a67d3ea83f714032cba724024" translate="yes" xml:space="preserve">
          <source>X509CRLSelector</source>
          <target state="translated">X509CRLSelector</target>
        </trans-unit>
        <trans-unit id="005121bdf2647a03921558ab963894a107961c75" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.addIssuer()</source>
          <target state="translated">X509CRLSelector.addIssuer()</target>
        </trans-unit>
        <trans-unit id="7aceb5d988f24a52dd02f464ca3d9494b9babed9" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.addIssuerName()</source>
          <target state="translated">X509CRLSelector.addIssuerName()</target>
        </trans-unit>
        <trans-unit id="8284e8efc69ac3a83307e2cafdf63753734cc0c4" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.clone()</source>
          <target state="translated">X509CRLSelector.clone()</target>
        </trans-unit>
        <trans-unit id="db9deb73c56072075cef0974014cbfa6b6abb260" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getCertificateChecking()</source>
          <target state="translated">X509CRLSelector.getCertificateChecking()</target>
        </trans-unit>
        <trans-unit id="6ab4ca2011fa8c661e4158060a00d8943b99ef0e" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getDateAndTime()</source>
          <target state="translated">X509CRLSelector.getDateAndTime()</target>
        </trans-unit>
        <trans-unit id="5532ca5d6569c1cbe8f868920ffc31a6e9707b99" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getIssuerNames()</source>
          <target state="translated">X509CRLSelector.getIssuerNames()</target>
        </trans-unit>
        <trans-unit id="032e18f3ad4222c7bc737794768e950215da9b65" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getIssuers()</source>
          <target state="translated">X509CRLSelector.getIssuers()</target>
        </trans-unit>
        <trans-unit id="07343df6a607c3fccbbf96fd3aa6b9b3a4fc4ef9" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getMaxCRL()</source>
          <target state="translated">X509CRLSelector.getMaxCRL()</target>
        </trans-unit>
        <trans-unit id="5caa7704f0fbf71e8eda99020577a4f32ed3aec7" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getMinCRL()</source>
          <target state="translated">X509CRLSelector.getMinCRL()</target>
        </trans-unit>
        <trans-unit id="cd016510ad0b64a2934299f67f11e5252571bb4c" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.match()</source>
          <target state="translated">X509CRLSelector.match()</target>
        </trans-unit>
        <trans-unit id="258d0b9571e5a2fda60a3574315cefbabaa4dd5a" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setCertificateChecking()</source>
          <target state="translated">X509CRLSelector.setCertificateChecking()</target>
        </trans-unit>
        <trans-unit id="d500c0b9ab0836602fbfeff49c264f434688fe8b" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setDateAndTime()</source>
          <target state="translated">X509CRLSelector.setDateAndTime()</target>
        </trans-unit>
        <trans-unit id="96a92cb7a8b71831980d1424a5364d676285b68d" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setIssuerNames()</source>
          <target state="translated">X509CRLSelector.setIssuerNames()</target>
        </trans-unit>
        <trans-unit id="90cfbcab2db3279ddd6db3561807d714cfdd0713" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setIssuers()</source>
          <target state="translated">X509CRLSelector.setIssuers()</target>
        </trans-unit>
        <trans-unit id="bf06aacef9a3be1a9ced4a10cbdd678a2f274350" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setMaxCRLNumber()</source>
          <target state="translated">X509CRLSelector.setMaxCRLNumber()</target>
        </trans-unit>
        <trans-unit id="86a0b242f3cd5aa3f58de645180e4a240a5db1f7" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setMinCRLNumber()</source>
          <target state="translated">X509CRLSelector.setMinCRLNumber()</target>
        </trans-unit>
        <trans-unit id="4321c653c660b241a08140ff511b46a70156446e" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.toString()</source>
          <target state="translated">X509CRLSelector.toString()</target>
        </trans-unit>
        <trans-unit id="94342e1781dc9c33a70ca21cb6357db0b0b9dd67" translate="yes" xml:space="preserve">
          <source>X509CertSelector</source>
          <target state="translated">X509CertSelector</target>
        </trans-unit>
        <trans-unit id="849c98616043746f73f4de24a5afbac1d44d1497" translate="yes" xml:space="preserve">
          <source>X509CertSelector.addPathToName()</source>
          <target state="translated">X509CertSelector.addPathToName()</target>
        </trans-unit>
        <trans-unit id="6278349d36bb944f429eb415b0b2f5653f53be35" translate="yes" xml:space="preserve">
          <source>X509CertSelector.addSubjectAlternativeName()</source>
          <target state="translated">X509CertSelector.addSubjectAlternativeName()</target>
        </trans-unit>
        <trans-unit id="ed2ee8251ff17d4037102b86a0eb818ed7b9158b" translate="yes" xml:space="preserve">
          <source>X509CertSelector.clone()</source>
          <target state="translated">X509CertSelector.clone()</target>
        </trans-unit>
        <trans-unit id="4f7c0218aa9ee861a280f2a8a3d681319af44dc2" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getAuthorityKeyIdentifier()</source>
          <target state="translated">X509CertSelector.getAuthorityKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="40d694ea6a0a9eae7c98a82ec7b08ba8c6e7d8c0" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getBasicConstraints()</source>
          <target state="translated">X509CertSelector.getBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="489a03ee864e5186cbe7e408a9342a09b16aa78a" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getCertificate()</source>
          <target state="translated">X509CertSelector.getCertificate()</target>
        </trans-unit>
        <trans-unit id="bdaabe014d6ad8fd33d855ee9bb1f16ef2b29b42" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getCertificateValid()</source>
          <target state="translated">X509CertSelector.getCertificateValid()</target>
        </trans-unit>
        <trans-unit id="e0b06dfa030eecee34ff0d43f2bf88f7c677a1f8" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getExtendedKeyUsage()</source>
          <target state="translated">X509CertSelector.getExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="df6a6707a1f1e6b86730e8d99239277ba12cc213" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuer()</source>
          <target state="translated">X509CertSelector.getIssuer()</target>
        </trans-unit>
        <trans-unit id="ae7e401dc377f554ece71569312befdac83a6d76" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuerAsBytes()</source>
          <target state="translated">X509CertSelector.getIssuerAsBytes()</target>
        </trans-unit>
        <trans-unit id="fff1dd584edf03c78d3f48961f0068ee33aec9fd" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuerAsString()</source>
          <target state="translated">X509CertSelector.getIssuerAsString()</target>
        </trans-unit>
        <trans-unit id="fb95fd548f3274ae1629644c5d7f19e3399b95b9" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getKeyUsage()</source>
          <target state="translated">X509CertSelector.getKeyUsage()</target>
        </trans-unit>
        <trans-unit id="201ecc89e49a111d0b388bd6788c96cf2da4cfe1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getMatchAllSubjectAltNames()</source>
          <target state="translated">X509CertSelector.getMatchAllSubjectAltNames()</target>
        </trans-unit>
        <trans-unit id="d832903d93a4fa039be163837346386802abfb52" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getNameConstraints()</source>
          <target state="translated">X509CertSelector.getNameConstraints()</target>
        </trans-unit>
        <trans-unit id="c963901b33f3f86f39cdd1dd2864b23d5088719e" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPathToNames()</source>
          <target state="translated">X509CertSelector.getPathToNames()</target>
        </trans-unit>
        <trans-unit id="781ef4d399e43252f203c8dc4b5efd48a663b7ac" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPolicy()</source>
          <target state="translated">X509CertSelector.getPolicy()</target>
        </trans-unit>
        <trans-unit id="28ebd04b297719d66e00f58a120d42c627462c32" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPrivateKeyValid()</source>
          <target state="translated">X509CertSelector.getPrivateKeyValid()</target>
        </trans-unit>
        <trans-unit id="299d03b8810ccbde189382f778e1e69a9edf5518" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSerialNumber()</source>
          <target state="translated">X509CertSelector.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="30fadb44582a38c2c581267a782a13ef48ce3f8c" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubject()</source>
          <target state="translated">X509CertSelector.getSubject()</target>
        </trans-unit>
        <trans-unit id="8fe339cc206ef73ed54a20b13ef60192e178f844" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAlternativeNames()</source>
          <target state="translated">X509CertSelector.getSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="ca470a951b9db1a85e008465b33f7f0025fd4ed7" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAsBytes()</source>
          <target state="translated">X509CertSelector.getSubjectAsBytes()</target>
        </trans-unit>
        <trans-unit id="aed8aae80b16c67e2bd98bedd10564828eed6a02" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAsString()</source>
          <target state="translated">X509CertSelector.getSubjectAsString()</target>
        </trans-unit>
        <trans-unit id="024358cc8426c59dad8537730df35ef69e5374a4" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectKeyIdentifier()</source>
          <target state="translated">X509CertSelector.getSubjectKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="f5738e2b6e6f38f47f261f937e072b25f4ec2eb5" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectPublicKey()</source>
          <target state="translated">X509CertSelector.getSubjectPublicKey()</target>
        </trans-unit>
        <trans-unit id="650c289d16e4fd83b1e95660cbfed07706bb9286" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectPublicKeyAlgID()</source>
          <target state="translated">X509CertSelector.getSubjectPublicKeyAlgID()</target>
        </trans-unit>
        <trans-unit id="227c01cacf995c323f3ba2ddda72a8c1d03e6e30" translate="yes" xml:space="preserve">
          <source>X509CertSelector.match()</source>
          <target state="translated">X509CertSelector.match()</target>
        </trans-unit>
        <trans-unit id="68c0f28130a6bf8d3c2abd14522f6c6c9688eb02" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setAuthorityKeyIdentifier()</source>
          <target state="translated">X509CertSelector.setAuthorityKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="0743dae5d1f40b69fc2ed7f9f8063b882e1c6506" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setBasicConstraints()</source>
          <target state="translated">X509CertSelector.setBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="3f91236f46d4c1ca997bb1dd60eaa6480e178eac" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setCertificate()</source>
          <target state="translated">X509CertSelector.setCertificate()</target>
        </trans-unit>
        <trans-unit id="f753e79d07d1c7ff8e7766426c9008f7d741f947" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setCertificateValid()</source>
          <target state="translated">X509CertSelector.setCertificateValid()</target>
        </trans-unit>
        <trans-unit id="357a71aae1cd2f35c6a80fb733aa1088092c6474" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setExtendedKeyUsage()</source>
          <target state="translated">X509CertSelector.setExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="9ea83d746002bc0aa736e6f65afa241bdcc775dc" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setIssuer()</source>
          <target state="translated">X509CertSelector.setIssuer()</target>
        </trans-unit>
        <trans-unit id="c56e1298bc77fda9dd1a56fdf04575b296fc14b7" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setKeyUsage()</source>
          <target state="translated">X509CertSelector.setKeyUsage()</target>
        </trans-unit>
        <trans-unit id="b486a38a689304e6df785424134afd125d8d5032" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setMatchAllSubjectAltNames()</source>
          <target state="translated">X509CertSelector.setMatchAllSubjectAltNames()</target>
        </trans-unit>
        <trans-unit id="b48400dc4f916de3cc95f9337e25d568a2a1c742" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setNameConstraints()</source>
          <target state="translated">X509CertSelector.setNameConstraints()</target>
        </trans-unit>
        <trans-unit id="fe470ccac7aaaa2979faf49d5584f5491d1c6565" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPathToNames()</source>
          <target state="translated">X509CertSelector.setPathToNames()</target>
        </trans-unit>
        <trans-unit id="dfaf5c753f0e41d22b63a535d3937b53aae07e5f" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPolicy()</source>
          <target state="translated">X509CertSelector.setPolicy()</target>
        </trans-unit>
        <trans-unit id="6d0c7877f10fc09b324ca3d3047400411f1c6ea4" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPrivateKeyValid()</source>
          <target state="translated">X509CertSelector.setPrivateKeyValid()</target>
        </trans-unit>
        <trans-unit id="86af9d1edb45e22a2903875dd9b2971784e2c8d1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSerialNumber()</source>
          <target state="translated">X509CertSelector.setSerialNumber()</target>
        </trans-unit>
        <trans-unit id="ec33f3cc9bc744f7b4f027680c1da2ad2b108a48" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubject()</source>
          <target state="translated">X509CertSelector.setSubject()</target>
        </trans-unit>
        <trans-unit id="7424eda4b963ea374a5ffa98029c541ca2d056a1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectAlternativeNames()</source>
          <target state="translated">X509CertSelector.setSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="ac907bb460f67c33f513b32cdf50d78c639a3427" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectKeyIdentifier()</source>
          <target state="translated">X509CertSelector.setSubjectKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="e6a4ccb21547f2a34b70f98ec9ba1b1eaeb60dd0" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectPublicKey()</source>
          <target state="translated">X509CertSelector.setSubjectPublicKey()</target>
        </trans-unit>
        <trans-unit id="1e9218b693cd7e79257d7ae26d7276128e5c3b2b" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectPublicKeyAlgID()</source>
          <target state="translated">X509CertSelector.setSubjectPublicKeyAlgID()</target>
        </trans-unit>
        <trans-unit id="c5a923a527dc9c62dba9aebf1122462312f07cc2" translate="yes" xml:space="preserve">
          <source>X509CertSelector.toString()</source>
          <target state="translated">X509CertSelector.toString()</target>
        </trans-unit>
        <trans-unit id="f6f0e8b60112f1c3be8ebabdeb6d7e48d60d9d02" translate="yes" xml:space="preserve">
          <source>X509Certificate</source>
          <target state="translated">X509Certificate</target>
        </trans-unit>
        <trans-unit id="7d60e0e197d0c0d506aa9dca6d156b869f512905" translate="yes" xml:space="preserve">
          <source>X509Certificate.checkValidity()</source>
          <target state="translated">X509Certificate.checkValidity()</target>
        </trans-unit>
        <trans-unit id="5f9840aac5626ba3ca82b57ed531cd3d3f4c15d3" translate="yes" xml:space="preserve">
          <source>X509Certificate.getBasicConstraints()</source>
          <target state="translated">X509Certificate.getBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="8647c6b8afd81e28f330459dec8c7e3ccd121504" translate="yes" xml:space="preserve">
          <source>X509Certificate.getExtendedKeyUsage()</source>
          <target state="translated">X509Certificate.getExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="008ce5566e57c20d1a7ef32f815136c72bee066c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getInstance()</source>
          <target state="translated">X509Certificate.getInstance()</target>
        </trans-unit>
        <trans-unit id="ac9c7d03b54b6ef087068f76feb5ca6ca90487ea" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerAlternativeNames()</source>
          <target state="translated">X509Certificate.getIssuerAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="7ceb0ae93b0e59134baf7b2cea3a9b450c9ddc10" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerDN()</source>
          <target state="translated">X509Certificate.getIssuerDN()</target>
        </trans-unit>
        <trans-unit id="2a45c4d375bea0212b9380afe65c7359177ff695" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerUniqueID()</source>
          <target state="translated">X509Certificate.getIssuerUniqueID()</target>
        </trans-unit>
        <trans-unit id="81b58aa8abdd44a650146b3a19b6a2755b7ceddf" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerX500Principal()</source>
          <target state="translated">X509Certificate.getIssuerX500Principal()</target>
        </trans-unit>
        <trans-unit id="e6633e0189c761013fb963894756a20bd053a6c4" translate="yes" xml:space="preserve">
          <source>X509Certificate.getKeyUsage()</source>
          <target state="translated">X509Certificate.getKeyUsage()</target>
        </trans-unit>
        <trans-unit id="12e70fdfd017b4e91263c6b022d715a90fce8f33" translate="yes" xml:space="preserve">
          <source>X509Certificate.getNotAfter()</source>
          <target state="translated">X509Certificate.getNotAfter()</target>
        </trans-unit>
        <trans-unit id="9a92edc1a9f8a4fd9110f3acb8fda4b1b3c6ab4e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getNotBefore()</source>
          <target state="translated">X509Certificate.getNotBefore()</target>
        </trans-unit>
        <trans-unit id="27da78eb87b805e2444b1f82afb90e9bc7835b4c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSerialNumber()</source>
          <target state="translated">X509Certificate.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="6f8af08573e408c5a6b7bc75cb80ecc6b451cb9e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgName()</source>
          <target state="translated">X509Certificate.getSigAlgName()</target>
        </trans-unit>
        <trans-unit id="607a3a0749c8b1dab746e512d28d69eda4f25849" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgOID()</source>
          <target state="translated">X509Certificate.getSigAlgOID()</target>
        </trans-unit>
        <trans-unit id="02b5c5e5de572fff22a8a962331d8bfb41d52abc" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgParams()</source>
          <target state="translated">X509Certificate.getSigAlgParams()</target>
        </trans-unit>
        <trans-unit id="abf0378af3325f51ffce60cc5e76863d6e64cb7c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSignature()</source>
          <target state="translated">X509Certificate.getSignature()</target>
        </trans-unit>
        <trans-unit id="63ea54ab328cdf2e3ffeca94bf86dcb1fc3ba3b2" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectAlternativeNames()</source>
          <target state="translated">X509Certificate.getSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="db892dc548dadaea8e72280046ee97a7d31aff5e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectDN()</source>
          <target state="translated">X509Certificate.getSubjectDN()</target>
        </trans-unit>
        <trans-unit id="2efa2a18e43e940888c9b04b569ccc74f02ab50b" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectUniqueID()</source>
          <target state="translated">X509Certificate.getSubjectUniqueID()</target>
        </trans-unit>
        <trans-unit id="28cd8f5a485793a0f7cad8c499296d29e2ac48d4" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectX500Principal()</source>
          <target state="translated">X509Certificate.getSubjectX500Principal()</target>
        </trans-unit>
        <trans-unit id="33d127567465109550abfdba854639b9080179ac" translate="yes" xml:space="preserve">
          <source>X509Certificate.getTBSCertificate()</source>
          <target state="translated">X509Certificate.getTBSCertificate()</target>
        </trans-unit>
        <trans-unit id="cfdd8cbb40490d2380f820a508eb536dc1f316f5" translate="yes" xml:space="preserve">
          <source>X509Certificate.getVersion()</source>
          <target state="translated">X509Certificate.getVersion()</target>
        </trans-unit>
        <trans-unit id="06976b95a9323811dcf9535aa216a7ec252ae43d" translate="yes" xml:space="preserve">
          <source>X509Certificate.verify()</source>
          <target state="translated">X509Certificate.verify()</target>
        </trans-unit>
        <trans-unit id="cc2e615ba7cbd040c10d3be3571d5078c66f8b54" translate="yes" xml:space="preserve">
          <source>X509Data</source>
          <target state="translated">X509Data</target>
        </trans-unit>
        <trans-unit id="ae8f17ee616d8138bab4d4f0e4737dd1f9da13cc" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec</source>
          <target state="translated">X509EncodedKeySpec</target>
        </trans-unit>
        <trans-unit id="626dd44a2314d53b33d369a1f08f07026b41ff51" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec.getEncoded()</source>
          <target state="translated">X509EncodedKeySpec.getEncoded()</target>
        </trans-unit>
        <trans-unit id="5839e3e80e77157ebc8b17529536f8d4a0941fd3" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec.getFormat()</source>
          <target state="translated">X509EncodedKeySpec.getFormat()</target>
        </trans-unit>
        <trans-unit id="d234842c0789a795b12742b8d823eef9ed978f36" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager</source>
          <target state="translated">X509ExtendedKeyManager</target>
        </trans-unit>
        <trans-unit id="b493b829ae35b2377354cbba6507ba8b89557e66" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager.chooseEngineClientAlias()</source>
          <target state="translated">X509ExtendedKeyManager.chooseEngineClientAlias()</target>
        </trans-unit>
        <trans-unit id="268c5e4bfe9daff1d0c54174fb32327af88ecc99" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager.chooseEngineServerAlias()</source>
          <target state="translated">X509ExtendedKeyManager.chooseEngineServerAlias()</target>
        </trans-unit>
        <trans-unit id="4ab0984afa85cd2e8f19d0156d09d7aef547baaf" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager</source>
          <target state="translated">X509ExtendedTrustManager</target>
        </trans-unit>
        <trans-unit id="308fba37a669971bdf5c83e790461904ac757d89" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager.checkClientTrusted()</source>
          <target state="translated">X509ExtendedTrustManager.checkClientTrusted()</target>
        </trans-unit>
        <trans-unit id="2339dd435d457b4c465d46b8f4645892098fa99f" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager.checkServerTrusted()</source>
          <target state="translated">X509ExtendedTrustManager.checkServerTrusted()</target>
        </trans-unit>
        <trans-unit id="80b51310f31ac6afeea08769e4d4b9f50226c664" translate="yes" xml:space="preserve">
          <source>X509Extension</source>
          <target state="translated">X509Extension</target>
        </trans-unit>
        <trans-unit id="e5f5dadf1208209f33dc58be405a7eb9ebcb5d0d" translate="yes" xml:space="preserve">
          <source>X509Extension.getCriticalExtensionOIDs()</source>
          <target state="translated">X509Extension.getCriticalExtensionOIDs()</target>
        </trans-unit>
        <trans-unit id="71bb077b1f322fd963fa780ed45ada48fbd41624" translate="yes" xml:space="preserve">
          <source>X509Extension.getExtensionValue()</source>
          <target state="translated">X509Extension.getExtensionValue()</target>
        </trans-unit>
        <trans-unit id="3e4a2928f4c2275aeba3a445dda0561efd55c7f5" translate="yes" xml:space="preserve">
          <source>X509Extension.getNonCriticalExtensionOIDs()</source>
          <target state="translated">X509Extension.getNonCriticalExtensionOIDs()</target>
        </trans-unit>
        <trans-unit id="5d5e4a7a3f7e1ee7a5fb70fc335737e9208f5abe" translate="yes" xml:space="preserve">
          <source>X509Extension.hasUnsupportedCriticalExtension()</source>
          <target state="translated">X509Extension.hasUnsupportedCriticalExtension()</target>
        </trans-unit>
        <trans-unit id="6220cf77d0d34cae0d597adcdf425c3abce279b5" translate="yes" xml:space="preserve">
          <source>X509IssuerSerial</source>
          <target state="translated">X509IssuerSerial</target>
        </trans-unit>
        <trans-unit id="dd3d3c5c395ab8f86b05f638bc2e2f70a0b2cf27" translate="yes" xml:space="preserve">
          <source>X509KeyManager</source>
          <target state="translated">X509KeyManager</target>
        </trans-unit>
        <trans-unit id="beab63b45c7665300d68a9a410348592b8d02385" translate="yes" xml:space="preserve">
          <source>X509KeyManager.chooseClientAlias()</source>
          <target state="translated">X509KeyManager.chooseClientAlias()</target>
        </trans-unit>
        <trans-unit id="e2ed5257aee8f84943c3c5175c5720366da48e31" translate="yes" xml:space="preserve">
          <source>X509KeyManager.chooseServerAlias()</source>
          <target state="translated">X509KeyManager.chooseServerAlias()</target>
        </trans-unit>
        <trans-unit id="546a546e5697acf8b86342e95b6031173171bf16" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getCertificateChain()</source>
          <target state="translated">X509KeyManager.getCertificateChain()</target>
        </trans-unit>
        <trans-unit id="360d2a2870aa288733c777b743cf1e807d032144" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getClientAliases()</source>
          <target state="translated">X509KeyManager.getClientAliases()</target>
        </trans-unit>
        <trans-unit id="aac579d7db0dfe6ca743f44f435647577da385a7" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getPrivateKey()</source>
          <target state="translated">X509KeyManager.getPrivateKey()</target>
        </trans-unit>
        <trans-unit id="e3ca12c81385c04439e1e70f0e10117530ced15d" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getServerAliases()</source>
          <target state="translated">X509KeyManager.getServerAliases()</target>
        </trans-unit>
        <trans-unit id="3398eab6590ac27408e569fc599faf599df3542b" translate="yes" xml:space="preserve">
          <source>X509TrustManager</source>
          <target state="translated">X509TrustManager</target>
        </trans-unit>
        <trans-unit id="b49a3c450c79104083adf3bf74cf91b3b48f5e5d" translate="yes" xml:space="preserve">
          <source>X509TrustManager.checkClientTrusted()</source>
          <target state="translated">X509TrustManager.checkClientTrusted()</target>
        </trans-unit>
        <trans-unit id="629ebeabcce436e9b7c77948c6913d0dc0dcf13a" translate="yes" xml:space="preserve">
          <source>X509TrustManager.checkServerTrusted()</source>
          <target state="translated">X509TrustManager.checkServerTrusted()</target>
        </trans-unit>
        <trans-unit id="c6144704bd36cad2146f534a13d9f8f6ba6eaabf" translate="yes" xml:space="preserve">
          <source>X509TrustManager.getAcceptedIssuers()</source>
          <target state="translated">X509TrustManager.getAcceptedIssuers()</target>
        </trans-unit>
        <trans-unit id="76c2edae465246aa26b0ff1bee9fd3b755611967" translate="yes" xml:space="preserve">
          <source>XAConnection</source>
          <target state="translated">XAConnection</target>
        </trans-unit>
        <trans-unit id="6787db011941d44e2a8b3eab70c087e56129c431" translate="yes" xml:space="preserve">
          <source>XAConnectionBuilder</source>
          <target state="translated">XAConnectionBuilder</target>
        </trans-unit>
        <trans-unit id="f0523ae2f59dd9e2c59e420113c94bae314feb13" translate="yes" xml:space="preserve">
          <source>XADataSource</source>
          <target state="translated">XADataSource</target>
        </trans-unit>
        <trans-unit id="bb284274415eb83f5f2baa08b5fc1d9f2a6efa61" translate="yes" xml:space="preserve">
          <source>XAER_ASYNC</source>
          <target state="translated">XAER_ASYNC</target>
        </trans-unit>
        <trans-unit id="dadbb855e925668e84ee8a8ef3783fc2c8d1de90" translate="yes" xml:space="preserve">
          <source>XAER_DUPID</source>
          <target state="translated">XAER_DUPID</target>
        </trans-unit>
        <trans-unit id="5b22cf5171ebbc5232aa6b8051b43cd1ff53c18a" translate="yes" xml:space="preserve">
          <source>XAER_INVAL</source>
          <target state="translated">XAER_INVAL</target>
        </trans-unit>
        <trans-unit id="fbf0ba17d7abb15669590db0ad5a834ef16539cd" translate="yes" xml:space="preserve">
          <source>XAER_NOTA</source>
          <target state="translated">XAER_NOTA</target>
        </trans-unit>
        <trans-unit id="3241a99d17fea78a9a97d02a84b4f7a1f0dee77d" translate="yes" xml:space="preserve">
          <source>XAER_OUTSIDE</source>
          <target state="translated">XAER_OUTSIDE</target>
        </trans-unit>
        <trans-unit id="5cb21154c19010904ddcbce89b38ae6fcf3b497d" translate="yes" xml:space="preserve">
          <source>XAER_PROTO</source>
          <target state="translated">XAER_PROTO</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
