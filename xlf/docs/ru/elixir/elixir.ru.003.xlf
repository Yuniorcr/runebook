<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="752a1e9b12c54f11f83f193b6e7e0f92855b7977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.config&quot;&gt;Mix.Config&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;mix.config&quot;&gt;Mix.Config&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="8e023475fc4df9fffc15d6fc0a0d7717e5b83415" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.invalidtaskerror&quot;&gt;&lt;code&gt;Mix.InvalidTaskError&lt;/code&gt;&lt;/a&gt; - raised if the task is not a valid &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;mix.invalidtaskerror&quot;&gt; &lt;code&gt;Mix.InvalidTaskError&lt;/code&gt; &lt;/a&gt; - возникает, если задача не является допустимой&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3ec1ff81d7f1080936b0febb0aa952f910aa1fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.notaskerror&quot;&gt;&lt;code&gt;Mix.NoTaskError&lt;/code&gt;&lt;/a&gt; - raised if the task could not be found</source>
          <target state="translated">&lt;a href=&quot;mix.notaskerror&quot;&gt; &lt;code&gt;Mix.NoTaskError&lt;/code&gt; &lt;/a&gt; - возникает, если задача не может быть найдена</target>
        </trans-unit>
        <trans-unit id="5c677e3f1f259755fa3f96be0c45316596ebc797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt; - compiles the current project</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.compile&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; - компилирует текущий проект</target>
        </trans-unit>
        <trans-unit id="d6a8d5016761f4053bcdaa56708cc845b615425d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.run&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; - runs a particular command inside the project</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.run&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; - запускает определенную команду внутри проекта</target>
        </trans-unit>
        <trans-unit id="2358ed348da2582570341409ccc481a62c1e53df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.test&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; - runs tests for the given project</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.test&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; &lt;/a&gt; - запускает тесты для данного проекта</target>
        </trans-unit>
        <trans-unit id="c316fd8d5de1f8da8fbd200c8c42fd187eef614a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module#create/3&quot;&gt;&lt;code&gt;Module.create/3&lt;/code&gt;&lt;/a&gt; works similarly to &lt;a href=&quot;kernel#defmodule/2&quot;&gt;&lt;code&gt;Kernel.defmodule/2&lt;/code&gt;&lt;/a&gt; and return the same results. While one could also use &lt;code&gt;defmodule&lt;/code&gt; to define modules dynamically, this function is preferred when the module body is given by a quoted expression.</source>
          <target state="translated">&lt;a href=&quot;module#create/3&quot;&gt; &lt;code&gt;Module.create/3&lt;/code&gt; &lt;/a&gt; работает аналогично&lt;a href=&quot;kernel#defmodule/2&quot;&gt; &lt;code&gt;Kernel.defmodule/2&lt;/code&gt; &lt;/a&gt; и возвращает те же результаты. Хотя можно также использовать &lt;code&gt;defmodule&lt;/code&gt; для динамического определения модулей, эта функция предпочтительна, когда тело модуля задается выражением в кавычках.</target>
        </trans-unit>
        <trans-unit id="5a552ca3d68c4940b63204e106377afb5227900f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; - date and time without time zone in a given calendar</source>
          <target state="translated">&lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; - дата и время без часового пояса в данном календаре</target>
        </trans-unit>
        <trans-unit id="795fcfd3094435b941433023a73deca26dfd15dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Elixir's naming conventions&lt;/a&gt; recommend aliases to be in &lt;code&gt;CamelCase&lt;/code&gt; format.</source>
          <target state="translated">&lt;a href=&quot;naming-conventions&quot;&gt;Соглашения об именах в Elixir&lt;/a&gt; рекомендуют использовать псевдонимы в формате &lt;code&gt;CamelCase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04263e351a4b9f4ffac59f718fd002f1edc70330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Elixir's naming conventions&lt;/a&gt; recommend calls to be in &lt;code&gt;snake_case&lt;/code&gt; format.</source>
          <target state="translated">&lt;a href=&quot;naming-conventions&quot;&gt;Соглашения об именах в Elixir&lt;/a&gt; рекомендуют использовать формат &lt;code&gt;snake_case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8316ade5b0d5c78eacb485f81af0dcb76b700814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Elixir's naming conventions&lt;/a&gt; recommend variables to be in &lt;code&gt;snake_case&lt;/code&gt; format.</source>
          <target state="translated">&lt;a href=&quot;naming-conventions&quot;&gt;Соглашения об именах в Elixir&lt;/a&gt; рекомендуют использовать переменные в формате &lt;code&gt;snake_case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2aeb50ce30bbcec0b868786c63869980dfef20db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt; - naming conventions for Elixir code</source>
          <target state="translated">&lt;a href=&quot;naming-conventions&quot;&gt;Соглашения об именах&lt;/a&gt; - соглашения об именах для кода Elixir</target>
        </trans-unit>
        <trans-unit id="ba1a01bf8100f2dc6664e2ecd2165950596b4e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators&quot;&gt;Operators&lt;/a&gt; - lists all Elixir operators and their precedence</source>
          <target state="translated">&lt;a href=&quot;operators&quot;&gt;Операторы&lt;/a&gt; - список всех операторов Эликсира и их приоритета.</target>
        </trans-unit>
        <trans-unit id="e6815098ef75f4494bffb738a8f6e6679d60a543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators&quot;&gt;Operators&lt;/a&gt; - lists all Elixir operators and their precedences</source>
          <target state="translated">&lt;a href=&quot;operators&quot;&gt;Операторы&lt;/a&gt; - перечисляет все операторы Elixir и их приоритеты.</target>
        </trans-unit>
        <trans-unit id="188040d4851406ab2a5a59ffe0852c6206852147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; - manipulates file system paths</source>
          <target state="translated">&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; - манипулирует путями файловой системы</target>
        </trans-unit>
        <trans-unit id="742af53bb89073cb4f65e88fc72d3f596c148dc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;patterns-and-guards&quot;&gt;Patterns and Guards&lt;/a&gt; - an introduction to patterns, guards, and extensions</source>
          <target state="translated">&lt;a href=&quot;patterns-and-guards&quot;&gt;Паттерны и охранники&lt;/a&gt; - введение в узоры, защитные ограждения и расширения</target>
        </trans-unit>
        <trans-unit id="63556b745fa1ef0e326ba71846b76e95c98a91b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; - mechanisms to interact with the external world</source>
          <target state="translated">&lt;a href=&quot;port&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt; - механизмы взаимодействия с внешним миром</target>
        </trans-unit>
        <trans-unit id="d20d5bebe6399b29580eff6e2cdd45c0d588f543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; - light-weight threads of execution</source>
          <target state="translated">&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; - легкие потоки выполнения</target>
        </trans-unit>
        <trans-unit id="606c252e169e9c4e539fa9db90eabec991bb35c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; - inclusive ranges between two integers</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; - включая диапазоны между двумя целыми числами</target>
        </trans-unit>
        <trans-unit id="2bc6688699dc2b5b21fef9b970e35579a335a81c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; - regular expressions</source>
          <target state="translated">&lt;a href=&quot;regex&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; - регулярные выражения</target>
        </trans-unit>
        <trans-unit id="487ac6755b4c02bc28d7061363a4998010ba678a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;registry&quot;&gt;&lt;code&gt;Registry&lt;/code&gt;&lt;/a&gt; - a key-value process-based storage</source>
          <target state="translated">&lt;a href=&quot;registry&quot;&gt; &lt;code&gt;Registry&lt;/code&gt; &lt;/a&gt; - хранилище на основе процессов</target>
        </trans-unit>
        <trans-unit id="0e1addb47a75508c95b4cb5ad44d02d66134f5c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;registry#start_link/1&quot;&gt;&lt;code&gt;Registry.start_link/1&lt;/code&gt;&lt;/a&gt; (v1.5)</source>
          <target state="translated">&lt;a href=&quot;registry#start_link/1&quot;&gt; &lt;code&gt;Registry.start_link/1&lt;/code&gt; &lt;/a&gt; (v1.5)</target>
        </trans-unit>
        <trans-unit id="babb4391b8d36cffa3c844020cc65115068900ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; behaviour</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; поведение</target>
        </trans-unit>
        <trans-unit id="4872ecd581bd5d5c32141c3ba9059c36d4fd620e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; модуль</target>
        </trans-unit>
        <trans-unit id="9fd9d29e037018e9cb2ac8314b28dcb9ef427700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="c400517e882dc05623cc9e3890c5e761d86491f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#chunk_every/2&quot;&gt;&lt;code&gt;Stream.chunk_every/2&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;stream#chunk_every/4&quot;&gt;&lt;code&gt;/3/4&lt;/code&gt;&lt;/a&gt; (v1.5)</source>
          <target state="translated">&lt;a href=&quot;stream#chunk_every/2&quot;&gt; &lt;code&gt;Stream.chunk_every/2&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;stream#chunk_every/4&quot;&gt; &lt;code&gt;/3/4&lt;/code&gt; &lt;/a&gt; (v1.5)</target>
        </trans-unit>
        <trans-unit id="1b7308bab347b3ace0d38312450217267bba64a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#filter/2&quot;&gt;&lt;code&gt;Stream.filter/2&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;stream#map/2&quot;&gt;&lt;code&gt;Stream.map/2&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="translated">&lt;a href=&quot;stream#filter/2&quot;&gt; &lt;code&gt;Stream.filter/2&lt;/code&gt; &lt;/a&gt; +&lt;a href=&quot;stream#map/2&quot;&gt; &lt;code&gt;Stream.map/2&lt;/code&gt; &lt;/a&gt; ( версия 1.0)</target>
        </trans-unit>
        <trans-unit id="512e2c04c0bf27e903d762614cf171047bce02e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#transform/3&quot;&gt;&lt;code&gt;Stream.transform/3&lt;/code&gt;&lt;/a&gt; is useful as it can be used as the basis to implement many of the functions defined in this module. For example, we can implement &lt;code&gt;Stream.take(enum, n)&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;a href=&quot;stream#transform/3&quot;&gt; &lt;code&gt;Stream.transform/3&lt;/code&gt; &lt;/a&gt; полезен, так как его можно использовать в качестве основы для реализации многих функций, определенных в этом модуле. Например, мы можем реализовать &lt;code&gt;Stream.take(enum, n)&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="7ee12740be56e212e671452cc643e0050c7e1dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#uniq_by/2&quot;&gt;&lt;code&gt;Stream.uniq_by/2&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="translated">&lt;a href=&quot;stream#uniq_by/2&quot;&gt; &lt;code&gt;Stream.uniq_by/2&lt;/code&gt; &lt;/a&gt; (v1.2)</target>
        </trans-unit>
        <trans-unit id="f6f3ecde3d37829aa2a988dba11a36d52f8cfe7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; - UTF-8 encoded binaries representing characters</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; - двоичные файлы в кодировке UTF-8, представляющие символы</target>
        </trans-unit>
        <trans-unit id="bac3856bd61205ddc217ecf80566010d0c3da394" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#to_charlist/1&quot;&gt;&lt;code&gt;String.to_charlist/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="translated">&lt;a href=&quot;string#to_charlist/1&quot;&gt; &lt;code&gt;String.to_charlist/1&lt;/code&gt; &lt;/a&gt; ( версия 1.3)</target>
        </trans-unit>
        <trans-unit id="a7db21feca244e40ddb6f5b0b21af55f8dd292cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#trim/1&quot;&gt;&lt;code&gt;String.trim/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#trim/2&quot;&gt;&lt;code&gt;String.trim/2&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="translated">&lt;a href=&quot;string#trim/1&quot;&gt; &lt;code&gt;String.trim/1&lt;/code&gt; &lt;/a&gt; и&lt;a href=&quot;string#trim/2&quot;&gt; &lt;code&gt;String.trim/2&lt;/code&gt; &lt;/a&gt; (v1.3)</target>
        </trans-unit>
        <trans-unit id="52a544fc6791cd22422f9ad0a46a15e5d0dd0630" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#trim_leading/1&quot;&gt;&lt;code&gt;String.trim_leading/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#trim_trailing/1&quot;&gt;&lt;code&gt;String.trim_trailing/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="translated">&lt;a href=&quot;string#trim_leading/1&quot;&gt; &lt;code&gt;String.trim_leading/1&lt;/code&gt; &lt;/a&gt; и&lt;a href=&quot;string#trim_trailing/1&quot;&gt; &lt;code&gt;String.trim_trailing/1&lt;/code&gt; &lt;/a&gt; (v1.3)</target>
        </trans-unit>
        <trans-unit id="563abdd13980ad64f48fcbf3b03db61d1b237bf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#valid?/1&quot;&gt;&lt;code&gt;String.valid?/1&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="translated">&lt;a href=&quot;string#valid?/1&quot;&gt; &lt;code&gt;String.valid?/1&lt;/code&gt; &lt;/a&gt; ( версия 1.0)</target>
        </trans-unit>
        <trans-unit id="c0f6f3d0c667d647e6ddc029090ac49965be7a1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string.chars&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; - converts data types to their outside world representation as strings (non-programming based)</source>
          <target state="translated">&lt;a href=&quot;string.chars&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt; - преобразует типы данных в их представление внешнего мира в виде строк (не на основе программирования)</target>
        </trans-unit>
        <trans-unit id="f9654861d4f22cabb2997d4fd0327f003d9f8488" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;structs&quot;&gt;Structs&lt;/a&gt; offer similar functionality.</source>
          <target state="translated">&lt;a href=&quot;structs&quot;&gt;Структуры&lt;/a&gt; предлагают аналогичные функции.</target>
        </trans-unit>
        <trans-unit id="a281e3c3982802a2d7e0f03de2dc69e269adfd23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; - a process that is responsible for starting, supervising and shutting down other processes</source>
          <target state="translated">&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; - процесс, который отвечает за запуск, контроль и завершение других процессов.</target>
        </trans-unit>
        <trans-unit id="45ad9a8d4bcebd61f4d41a38bdedc9d784f438d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; (v1.0);</source>
          <target state="translated">&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; и&lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; (v1.0);</target>
        </trans-unit>
        <trans-unit id="3a94a2f9b4e9ae17eee4aa7581def0182495d1f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supervisor.spec&quot;&gt;Supervisor.Spec&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;supervisor.spec&quot;&gt;Supervisor.Spec&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="76ee3a3ae51868023fc07ab81d63b7a2ac9c1148" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-reference&quot;&gt;Syntax Reference&lt;/a&gt; - the language syntax reference</source>
          <target state="translated">&lt;a href=&quot;syntax-reference&quot;&gt;Справочник&lt;/a&gt; по синтаксису - справочник по синтаксису языка</target>
        </trans-unit>
        <trans-unit id="1af5e4ad711d14caadcd783a42263dee82c6061e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; - reads and writes system information</source>
          <target state="translated">&lt;a href=&quot;system&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt; - читает и записывает системную информацию</target>
        </trans-unit>
        <trans-unit id="3529bfa579838f5bdafbc4181cf1f5810d706b35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;system#cwd/0&quot;&gt;&lt;code&gt;System.cwd/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;system#cwd!/0&quot;&gt;&lt;code&gt;System.cwd!/0&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system#cwd/0&quot;&gt; &lt;code&gt;System.cwd/0&lt;/code&gt; &lt;/a&gt; и&lt;a href=&quot;system#cwd!/0&quot;&gt; &lt;code&gt;System.cwd!/0&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3656a28e8c3171699f4777a61d95c0748d5a2233" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; - a process that performs computations</source>
          <target state="translated">&lt;a href=&quot;task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; - процесс, выполняющий вычисления</target>
        </trans-unit>
        <trans-unit id="bfd47395f9e512a1ae5e7ce3f460221262cf87a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task#await/2&quot;&gt;&lt;code&gt;Task.await/2&lt;/code&gt;&lt;/a&gt; is used to read the message sent by the task.</source>
          <target state="translated">&lt;a href=&quot;task#await/2&quot;&gt; &lt;code&gt;Task.await/2&lt;/code&gt; &lt;/a&gt; используется для чтения сообщения, отправленного задачей.</target>
        </trans-unit>
        <trans-unit id="8ced8b3db18e9b20a34db397b977cd042451a23f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task#yield/2&quot;&gt;&lt;code&gt;Task.yield/2&lt;/code&gt;&lt;/a&gt; is an alternative to &lt;a href=&quot;#await/2&quot;&gt;&lt;code&gt;await/2&lt;/code&gt;&lt;/a&gt; where the caller will temporarily block, waiting until the task replies or crashes. If the result does not arrive within the timeout, it can be called again at a later moment. This allows checking for the result of a task multiple times. If a reply does not arrive within the desired time, &lt;a href=&quot;task#shutdown/2&quot;&gt;&lt;code&gt;Task.shutdown/2&lt;/code&gt;&lt;/a&gt; can be used to stop the task.</source>
          <target state="translated">&lt;a href=&quot;task#yield/2&quot;&gt; &lt;code&gt;Task.yield/2&lt;/code&gt; &lt;/a&gt; - это альтернатива&lt;a href=&quot;#await/2&quot;&gt; &lt;code&gt;await/2&lt;/code&gt; ,при&lt;/a&gt; которой вызывающий абонент временно блокируется, ожидая ответа или сбоя задачи. Если результат не приходит в течение тайм-аута, его можно вызвать снова позже. Это позволяет проверять результат выполнения задачи несколько раз. Если ответ не приходит в желаемое время,можно использовать&lt;a href=&quot;task#shutdown/2&quot;&gt; &lt;code&gt;Task.shutdown/2&lt;/code&gt; &lt;/a&gt; для остановки задачи.</target>
        </trans-unit>
        <trans-unit id="4b3bb77534e241922cdacc4ca0f17ab8d309bf0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task#yield_many/2&quot;&gt;&lt;code&gt;Task.yield_many/2&lt;/code&gt;&lt;/a&gt; allows developers to spawn multiple tasks and retrieve the results received in a given timeframe. If we combine it with &lt;a href=&quot;task#shutdown/2&quot;&gt;&lt;code&gt;Task.shutdown/2&lt;/code&gt;&lt;/a&gt;, it allows us to gather those results and cancel the tasks that have not replied in time.</source>
          <target state="translated">&lt;a href=&quot;task#yield_many/2&quot;&gt; &lt;code&gt;Task.yield_many/2&lt;/code&gt; &lt;/a&gt; позволяет разработчикам создавать несколько задач и извлекать результаты, полученные за заданный период времени. Если мы объединим его с&lt;a href=&quot;task#shutdown/2&quot;&gt; &lt;code&gt;Task.shutdown/2&lt;/code&gt; &lt;/a&gt; , это позволит нам собрать эти результаты и отменить задачи, которые не ответили вовремя.</target>
        </trans-unit>
        <trans-unit id="81526bfa2cfadb8e6d1a8fcedacb01165467d5a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task.supervisor&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt; - a supervisor for managing tasks exclusively</source>
          <target state="translated">&lt;a href=&quot;task.supervisor&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; &lt;/a&gt; - супервизор исключительно для управления задачами</target>
        </trans-unit>
        <trans-unit id="1542b25d8ddcaf84821d707d4a4beadabf4c4392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;hour:minute:second&lt;/code&gt; structs in a given calendar</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; - &lt;code&gt;hour:minute:second&lt;/code&gt; в заданном календаре</target>
        </trans-unit>
        <trans-unit id="423a093cfcce1218c50d111caa55a4649f40f5dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; - collections of a fixed number of elements</source>
          <target state="translated">&lt;a href=&quot;tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; - коллекции из фиксированного количества элементов</target>
        </trans-unit>
        <trans-unit id="233de3022fd955515e9dde638037598bfc4b6bb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typespecs&quot;&gt;Typespecs&lt;/a&gt;- types and function specifications, including list of types</source>
          <target state="translated">&lt;a href=&quot;typespecs&quot;&gt;Typespecs&lt;/a&gt; - типы и спецификации функций, включая список типов</target>
        </trans-unit>
        <trans-unit id="0c9947e13d7b243b2482e95e48f7279d04adf2b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;charlist/0&lt;/code&gt;&lt;/a&gt; type (v1.3)</source>
          <target state="translated">&lt;a href=&quot;typespecs#built-in-types&quot;&gt; &lt;code&gt;charlist/0&lt;/code&gt; &lt;/a&gt; (v1.3)</target>
        </trans-unit>
        <trans-unit id="8cfda3e2f0cfcff1eaf58b193b4a046745f63578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unicode-syntax&quot;&gt;Unicode Syntax&lt;/a&gt; - outlines Elixir support for Unicode</source>
          <target state="translated">&lt;a href=&quot;unicode-syntax&quot;&gt;Синтаксис Unicode&lt;/a&gt; - описывает поддержку Elixir для Unicode</target>
        </trans-unit>
        <trans-unit id="296ebd621ab9e6ccee9d86d9480e7bbc3484dd44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; - representation of URIs that identify resources</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; - представление URI, которые идентифицируют ресурсы</target>
        </trans-unit>
        <trans-unit id="e6362264ced78e4b2ee85130e03aeff8fe6f7aad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri#query_decoder/1&quot;&gt;&lt;code&gt;URI.query_decoder/1&lt;/code&gt;&lt;/a&gt; - decodes a query string, pair by pair</source>
          <target state="translated">&lt;a href=&quot;uri#query_decoder/1&quot;&gt; &lt;code&gt;URI.query_decoder/1&lt;/code&gt; &lt;/a&gt; - декодирует строку запроса, пара за парой</target>
        </trans-unit>
        <trans-unit id="cd193c2eaf6d61258dd27f9f3b33c6573439e1a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;version&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; - representation of versions and requirements</source>
          <target state="translated">&lt;a href=&quot;version&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; - представление версий и требований</target>
        </trans-unit>
        <trans-unit id="c491c5ace435fbb7ea23b4692f93f04abdc356ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-documentation&quot;&gt;Writing Documentation&lt;/a&gt; - guidelines for writing documentation in Elixir</source>
          <target state="translated">&lt;a href=&quot;writing-documentation&quot;&gt;Написание документации&lt;/a&gt; - рекомендации по написанию документации на Эликсире</target>
        </trans-unit>
        <trans-unit id="52a7ac7ea1051805cbafe8369a454d82fd7548df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; и &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="612bae2db797cfc8c5ffa671c68d7b5ee9f766c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$date&lt;/code&gt; - the date the log message was sent</source>
          <target state="translated">&lt;code&gt;$date&lt;/code&gt; - дата отправки сообщения журнала</target>
        </trans-unit>
        <trans-unit id="1e27cf791ece301fbe4bc7aa23bf0cc05260b3be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$level&lt;/code&gt; - the log level</source>
          <target state="translated">&lt;code&gt;$level&lt;/code&gt; - уровень лога</target>
        </trans-unit>
        <trans-unit id="39a7e37f7d9d33acf3128f33dd5006d745b27f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$levelpad&lt;/code&gt; - sets to a single space if level is 4 characters long, otherwise set to the empty space. Used to align the message after level.</source>
          <target state="translated">&lt;code&gt;$levelpad&lt;/code&gt; - устанавливается в один пробел, если уровень составляет 4 символа, в противном случае устанавливается в пустое пространство. Используется для выравнивания сообщения после уровня.</target>
        </trans-unit>
        <trans-unit id="1316ea0587adeaa791140a7a0ae72ee2ac489f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$message&lt;/code&gt; - the log message</source>
          <target state="translated">&lt;code&gt;$message&lt;/code&gt; - сообщение журнала</target>
        </trans-unit>
        <trans-unit id="d78545a44192ff2a450487193efd3fd049d8d9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$metadata&lt;/code&gt; - user controlled data presented in &lt;code&gt;&quot;key=val key2=val2 &quot;&lt;/code&gt; format</source>
          <target state="translated">&lt;code&gt;$metadata&lt;/code&gt; - данные, управляемые пользователем, представлены в формате &lt;code&gt;&quot;key=val key2=val2 &quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d31e6ec447b40d5f46c2f9a1efc3b2b01720311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$node&lt;/code&gt; - the node that prints the message</source>
          <target state="translated">&lt;code&gt;$node&lt;/code&gt; - узел, который печатает сообщение</target>
        </trans-unit>
        <trans-unit id="f1f43a0541c4ad09bd7ce46628e2f3dad01a6c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$time&lt;/code&gt; - the time the log message was sent</source>
          <target state="translated">&lt;code&gt;$time&lt;/code&gt; - время отправки сообщения журнала</target>
        </trans-unit>
        <trans-unit id="88ec5c45c24a49aa7af1d141c03f4b616996d976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt;: indicates the start of a formatted section</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; : указывает начало форматированного раздела</target>
        </trans-unit>
        <trans-unit id="09dd76e424c7b93db8c98b46f96ab4b7e44fff16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%counter&lt;/code&gt; - the index of the history</source>
          <target state="translated">&lt;code&gt;%counter&lt;/code&gt; - индекс истории</target>
        </trans-unit>
        <trans-unit id="d8560d1fb9e0d1d9c2360164d2a153384d6968c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%node&lt;/code&gt; - the name of the local node</source>
          <target state="translated">&lt;code&gt;%node&lt;/code&gt; - имя локального узла</target>
        </trans-unit>
        <trans-unit id="52e61f153c6e8c17d0ca2b87041e0769e2aebc51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%prefix&lt;/code&gt; - a prefix given by &lt;a href=&quot;https://hexdocs.pm/iex/IEx.Server.html&quot;&gt;&lt;code&gt;IEx.Server&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;%prefix&lt;/code&gt; - префикс, присвоенный &lt;a href=&quot;https://hexdocs.pm/iex/IEx.Server.html&quot;&gt; &lt;code&gt;IEx.Server&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="672ac2f0caf0c9907bcc10ae9cd5d61fb31cac63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%prefix&lt;/code&gt; - a prefix given by &lt;a href=&quot;iex.server&quot;&gt;&lt;code&gt;IEx.Server&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;%prefix&lt;/code&gt; - префикс, присвоенный &lt;a href=&quot;iex.server&quot;&gt; &lt;code&gt;IEx.Server&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="320189d02b0c5a020b30c186a89050798f9c0b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;and&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;and&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21f345ad5b3f281af29d18ac4edd975e035a12a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;List.flatten(&amp;amp;1, &amp;amp;2)&lt;/code&gt; is the same as writing &lt;code&gt;fn(list, tail) -&amp;gt; List.flatten(list, tail) end&lt;/code&gt; which in this case is equivalent to &lt;code&gt;&amp;amp;List.flatten/2&lt;/code&gt;. You can read more about the capture operator &lt;code&gt;&amp;amp;&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#&amp;amp;/1&quot;&gt;the &lt;code&gt;Kernel.SpecialForms&lt;/code&gt; documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;List.flatten(&amp;amp;1, &amp;amp;2)&lt;/code&gt; - это то же самое, что и запись &lt;code&gt;fn(list, tail) -&amp;gt; List.flatten(list, tail) end&lt;/code&gt; что в данном случае эквивалентно &lt;code&gt;&amp;amp;List.flatten/2&lt;/code&gt; . Вы можете прочитать больше об операторе захвата &lt;code&gt;&amp;amp;&lt;/code&gt; в &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#&amp;amp;/1&quot;&gt;в &lt;code&gt;Kernel.SpecialForms&lt;/code&gt; документации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c51ac9075bc0115e974fe9846c26495129890071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;%=&lt;/code&gt; in middle and end expressions in &lt;a href=&quot;https://hexdocs.pm/eex/EEx.html&quot;&gt;&lt;code&gt;EEx&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;%=&lt;/code&gt; в средних и конечных выражениях в &lt;a href=&quot;https://hexdocs.pm/eex/EEx.html&quot;&gt; &lt;code&gt;EEx&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="949c03e8fd0925d22d9be81382fa506f28562aba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;-&lt;/code&gt; - see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#for/1&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#with/1&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;-&lt;/code&gt; - посмотреть &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#for/1&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#with/1&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60e337837782cdcb3fc4cbb44614054b4b7da067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;code&gt;\\&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;code&gt;\\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca5b94838549faf56cf1f898f1878ddccd283877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; и &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="969208821482ea86f305f30697cb9d7862ca00cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0a441bfb43acf588242c3b4d8045e36b151e965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Continue&amp;gt;&lt;/code&gt; includes the code point &lt;code&gt;@&lt;/code&gt; (0040)</source>
          <target state="translated">&lt;code&gt;&amp;lt;Continue&amp;gt;&lt;/code&gt; включает кодовую точку &lt;code&gt;@&lt;/code&gt; (0040)</target>
        </trans-unit>
        <trans-unit id="0de3e622fcddc0b95bb4bdae86439b3888f05db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Ending&amp;gt;&lt;/code&gt; is an addition specific to Elixir that includes only the code points &lt;code&gt;?&lt;/code&gt; (003F) and &lt;code&gt;!&lt;/code&gt; (0021).</source>
          <target state="translated">&lt;code&gt;&amp;lt;Ending&amp;gt;&lt;/code&gt; - это специфичное для Elixir дополнение, которое включает только кодовые точки &lt;code&gt;?&lt;/code&gt; (003F) и &lt;code&gt;!&lt;/code&gt; (0021).</target>
        </trans-unit>
        <trans-unit id="a8fbb08325d95aa54fe836015c4d47374e309e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; includes the code point &lt;code&gt;_&lt;/code&gt; (005F)</source>
          <target state="translated">&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; включает кодовую точку &lt;code&gt;_&lt;/code&gt; (005F)</target>
        </trans-unit>
        <trans-unit id="4839d335a8ae5a0140206f57ce5caa63a3067f1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; must not include Lu (letter uppercase) and Lt (letter titlecase) characters</source>
          <target state="translated">&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; не должен включать символы Lu (заглавные буквы) и Lt (заглавные буквы).</target>
        </trans-unit>
        <trans-unit id="caf4d7348c548b8e7fa90c1185cb03dab8277505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt;: the format itself (see below)</source>
          <target state="translated">&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; : сам формат (см. ниже)</target>
        </trans-unit>
        <trans-unit id="4d74ede145b8dbc24f83cc4234e4fb2e66631eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;padding&amp;gt;&lt;/code&gt;: set the padding (see below)</source>
          <target state="translated">&lt;code&gt;&amp;lt;padding&amp;gt;&lt;/code&gt; : установить отступ (см. ниже)</target>
        </trans-unit>
        <trans-unit id="b74277d048cca331a40896d1fd9f9db9279efda5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt;: a number indicating the minimum size of the formatted section</source>
          <target state="translated">&lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt; : число, указывающее минимальный размер отформатированного раздела</target>
        </trans-unit>
        <trans-unit id="98e88aaa56490fe81e943ef8b58b60ab2a605c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; и &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ced4b60b59e50d6abcd98a00d3c18b7582dee8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;()&lt;/code&gt; to mean &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;()&lt;/code&gt; означает &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af3815890bb9fddf633ab22d174f8331ae8c0dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; и &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65fca8dd52bcc94cd91907287a2eec2f45e807e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; - two adjacent &lt;code&gt;*&lt;/code&gt;'s used as a single pattern will match all files and zero or more directories and subdirectories.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; - два соседних символа &lt;code&gt;*&lt;/code&gt; , используемые в качестве единого шаблона, будут соответствовать всем файлам, нулю или более каталогам и подкаталогам.</target>
        </trans-unit>
        <trans-unit id="913c4def43547f4bdffd11069ca7716e201b37b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; - matches any number of characters up to the end of the filename, the next dot, or the next slash.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; - соответствует любому количеству символов до конца имени файла, следующей точки или следующей косой черты.</target>
        </trans-unit>
        <trans-unit id="587da06c8291c46e06bdbb9176600c30b3b41d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="900c75466aa12e18548994e5461439a213678a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;..&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;..&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab1dc097eea0737cdcc211f73643aa7383f04693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;..&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;code&gt;+++&lt;/code&gt;&lt;code&gt;---&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;..&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;code&gt;+++&lt;/code&gt;&lt;code&gt;---&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a58721e317a663f3f70bd919555e501c8280c19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de79e88c802c67e1f45a25313a7ec08ba966c8f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;not&lt;/code&gt;&lt;code&gt;~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;not&lt;/code&gt;&lt;code&gt;~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f445404dca862751f9d3a37c114efbd9e811952f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all-warnings&lt;/code&gt; - prints warnings even from files that do not need to be recompiled</source>
          <target state="translated">&lt;code&gt;--all-warnings&lt;/code&gt; - выводит предупреждения даже из файлов, которые не нужно перекомпилировать</target>
        </trans-unit>
        <trans-unit id="be21c38cb39aedf0eba5958c70214da38f309949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt; - deletes all dependencies</source>
          <target state="translated">&lt;code&gt;--all&lt;/code&gt; - удаляет все зависимости</target>
        </trans-unit>
        <trans-unit id="4b8a687e1c3d4c7059beb741070aedbf831935d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt; - lists all dependencies, regardless of specified environment</source>
          <target state="translated">&lt;code&gt;--all&lt;/code&gt; - перечисляет все зависимости, независимо от указанной среды</target>
        </trans-unit>
        <trans-unit id="32cbbb944d6784783b869fe3348485b8c25d2cc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt; - unlocks all dependencies</source>
          <target state="translated">&lt;code&gt;--all&lt;/code&gt; - разблокирует все зависимости</target>
        </trans-unit>
        <trans-unit id="85f2da4f8be29a192290ca75641560d2c8dd1a6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt; - updates all dependencies</source>
          <target state="translated">&lt;code&gt;--all&lt;/code&gt; - обновляет все зависимости</target>
        </trans-unit>
        <trans-unit id="d1b1744a2e010ec9c501f023a79699e80d2d1662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--app&lt;/code&gt; - limit running the command to the given app. This option may be given multiple times</source>
          <target state="translated">&lt;code&gt;--app&lt;/code&gt; - ограничить выполнение команды данным приложением. Этот вариант можно использовать несколько раз</target>
        </trans-unit>
        <trans-unit id="ab30916912a2324ff735945e1169e2bbc278f3a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--app&lt;/code&gt; - specifies a custom app name to be used for building the archive from Git, GitHub, or Hex</source>
          <target state="translated">&lt;code&gt;--app&lt;/code&gt; - указывает пользовательское имя приложения, которое будет использоваться для создания архива из Git, GitHub или Hex</target>
        </trans-unit>
        <trans-unit id="c6126e50f922e9c15b91bf28e69376ad8428b6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--app&lt;/code&gt; - specifies a custom app name to be used for building the escript from Git, GitHub, or Hex</source>
          <target state="translated">&lt;code&gt;--app&lt;/code&gt; - указывает пользовательское имя приложения, которое будет использоваться для создания эскрипта из Git, GitHub или Hex</target>
        </trans-unit>
        <trans-unit id="b40e1635e477e77193e6922315904905173840d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--build&lt;/code&gt; - deletes only compiled files (keeps source files)</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; - удаляет только скомпилированные файлы (сохраняет исходные файлы)</target>
        </trans-unit>
        <trans-unit id="7138babb409aa5bcb643da6c1ce133ec426df184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--callers&lt;/code&gt; - prints detailed information about immediate callers and called functions</source>
          <target state="translated">&lt;code&gt;--callers&lt;/code&gt; - выводит подробную информацию о вызывающих абонентах и ​​вызываемых функциях.</target>
        </trans-unit>
        <trans-unit id="f39169f061172b9a6408f95c09393c8c4e547d08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--calls&lt;/code&gt; - filters out any results with a call count lower than this</source>
          <target state="translated">&lt;code&gt;--calls&lt;/code&gt; - отфильтровывает любые результаты с меньшим количеством вызовов, чем это</target>
        </trans-unit>
        <trans-unit id="3836325a94627fa094567617e34862d06134ed9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cd&lt;/code&gt; - (since v1.10.4) the directory to run the command in</source>
          <target state="translated">&lt;code&gt;--cd&lt;/code&gt; - (начиная с v1.10.4) каталог для запуска команды в</target>
        </trans-unit>
        <trans-unit id="f40b3a3ccfaa5d1cd8f4fa221793ce4fc9b4936b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--check-equivalent&lt;/code&gt; - checks if the files after formatting have the same AST as before formatting. If the ASTs are not equivalent, it is a bug in the code formatter. This option is useful if you suspect you have ran into a formatter bug and you would like confirmation.</source>
          <target state="translated">&lt;code&gt;--check-equivalent&lt;/code&gt; - проверяет, имеют ли файлы после форматирования тот же AST, что и до форматирования. Если AST не эквивалентны, это ошибка в программе форматирования кода. Эта опция полезна, если вы подозреваете, что столкнулись с ошибкой форматирования, и хотите получить подтверждение.</target>
        </trans-unit>
        <trans-unit id="9c96772e5adbfe76328c7ce8c48692f9b3f77c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--check-formatted&lt;/code&gt; - checks that the file is already formatted. This is useful in pre-commit hooks and CI scripts if you want to reject contributions with unformatted code. However keep in mind that the formatted output may differ between Elixir versions as improvements and fixes are applied to the formatter.</source>
          <target state="translated">&lt;code&gt;--check-formatted&lt;/code&gt; - проверяет, что файл уже отформатирован. Это полезно в обработчиках перед фиксацией и сценариях CI, если вы хотите отклонить вклады с неформатированным кодом. Однако имейте в виду, что форматированный вывод может отличаться в зависимости от версии Elixir, так как к форматеру применяются улучшения и исправления.</target>
        </trans-unit>
        <trans-unit id="171d6b436e45b71b5435f78d01fa738b27456d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--check-unused&lt;/code&gt; - checks that the &lt;code&gt;mix.lock&lt;/code&gt; file has no unused dependencies. This is useful in pre-commit hooks and CI scripts if you want to reject contributions with extra dependencies</source>
          <target state="translated">&lt;code&gt;--check-unused&lt;/code&gt; - проверяет, что в файле &lt;code&gt;mix.lock&lt;/code&gt; нет неиспользуемых зависимостей. Это полезно в обработчиках перед фиксацией и сценариях CI, если вы хотите отклонить вклады с дополнительными зависимостями.</target>
        </trans-unit>
        <trans-unit id="7e7ee2fb9e2750e179dd2d5f79f35ca5c81d631b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color&lt;/code&gt; - enables color in the output</source>
          <target state="translated">&lt;code&gt;--color&lt;/code&gt; - включает цвет в выводе</target>
        </trans-unit>
        <trans-unit id="452d1ca19c578d8b7f0a4ff3f2dc946b3d98960f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--compile-path&lt;/code&gt; - where to find &lt;code&gt;.beam&lt;/code&gt; files and write the resulting &lt;code&gt;.app&lt;/code&gt; file, defaults to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html#compile_path/0&quot;&gt;&lt;code&gt;Mix.Project.compile_path/0&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--compile-path&lt;/code&gt; - где найти файлы &lt;code&gt;.beam&lt;/code&gt; и записать полученный файл &lt;code&gt;.app&lt;/code&gt; , по умолчанию &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html#compile_path/0&quot;&gt; &lt;code&gt;Mix.Project.compile_path/0&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da2a0143509d40cd9f2702bcb6f6f5c91c5e2df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--config&lt;/code&gt; - loads the given configuration files</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; - загружает указанные файлы конфигурации</target>
        </trans-unit>
        <trans-unit id="bbe1bf0ba94c35c8c0b64cc65dee85a93b3c7d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cover&lt;/code&gt; - runs coverage tool. See &quot;Coverage&quot; section below</source>
          <target state="translated">&lt;code&gt;--cover&lt;/code&gt; - запускает инструмент покрытия. См. Раздел &amp;laquo;Покрытие&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="537776f3e19c8156b9b4cb5c9b44ad31fac1b954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--debug-info&lt;/code&gt; (&lt;code&gt;--no-debug-info&lt;/code&gt;) - attaches (or not) debug info to compiled modules</source>
          <target state="translated">&lt;code&gt;--debug-info&lt;/code&gt; ( &lt;code&gt;--no-debug-info&lt;/code&gt; ) - присоединяет (или нет) отладочную информацию к скомпилированным модулям</target>
        </trans-unit>
        <trans-unit id="77f2d312ddf536e924e3256b37ba307ec4975231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--detached&lt;/code&gt; in &lt;code&gt;Kernel.CLI&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--detached&lt;/code&gt; в &lt;code&gt;Kernel.CLI&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e71c7eec1662685ae39d65f3cd4513527a81b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--detached&lt;/code&gt; in CLI</source>
          <target state="translated">&lt;code&gt;--detached&lt;/code&gt; в CLI</target>
        </trans-unit>
        <trans-unit id="522e165adfbaeb1dba0dfafad28e640111a723d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--details&lt;/code&gt; - includes profile data for each profiled process</source>
          <target state="translated">&lt;code&gt;--details&lt;/code&gt; - включает данные профиля для каждого профилированного процесса</target>
        </trans-unit>
        <trans-unit id="fa7f6b1febe2093b6122a66083f218d11394b3a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--docs&lt;/code&gt; (&lt;code&gt;--no-docs&lt;/code&gt;) - attaches (or not) documentation to compiled modules</source>
          <target state="translated">&lt;code&gt;--docs&lt;/code&gt; ( --no &lt;code&gt;--no-docs&lt;/code&gt; ) - прикрепляет (или нет) документацию к скомпилированным модулям</target>
        </trans-unit>
        <trans-unit id="695c18b9336e0066733cc61e4785813b133be187" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--dot-formatter&lt;/code&gt; - path to the file with formatter configuration. Defaults to &lt;code&gt;.formatter.exs&lt;/code&gt; if one is available. See the &quot;Formatting options&quot; section above for more information.</source>
          <target state="translated">&lt;code&gt;--dot-formatter&lt;/code&gt; - путь к файлу с конфигурацией форматтера. По умолчанию используется &lt;code&gt;.formatter.exs&lt;/code&gt; , если он доступен. См. Раздел &amp;laquo;Параметры форматирования&amp;raquo; выше для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="1f30352ffd4b674ab8255d965b373d273a30099a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--dry-run&lt;/code&gt; - does not save files after formatting.</source>
          <target state="translated">&lt;code&gt;--dry-run&lt;/code&gt; - не сохраняет файлы после форматирования.</target>
        </trans-unit>
        <trans-unit id="2774bf1f5e318d03163965240fc058392bec9a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--erl &quot;-detached&quot;&lt;/code&gt; (v1.0)</source>
          <target state="translated">&lt;code&gt;--erl &quot;-detached&quot;&lt;/code&gt; (v1.0)</target>
        </trans-unit>
        <trans-unit id="a5c80d56523e6d299cfbe7900c94e84ba3aad286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--erl-config&lt;/code&gt; - path to an Erlang term file that will be loaded as Mix config</source>
          <target state="translated">&lt;code&gt;--erl-config&lt;/code&gt; - путь к файлу терминов Erlang, который будет загружен как Mix config</target>
        </trans-unit>
        <trans-unit id="bdff8a846979ab1b31f0ea3245910bd0dc1f3fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; - evaluate the given code</source>
          <target state="translated">&lt;code&gt;--eval&lt;/code&gt; , &lt;code&gt;-e&lt;/code&gt; - оценить данный код</target>
        </trans-unit>
        <trans-unit id="a440958607c6615ac2e5544ae60214283a1cbdd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; - evaluates the given code</source>
          <target state="translated">&lt;code&gt;--eval&lt;/code&gt; , &lt;code&gt;-e&lt;/code&gt; - оценивает данный код</target>
        </trans-unit>
        <trans-unit id="e7020794c7f78130b4b27c00c342b82cd39162d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exclude&lt;/code&gt; - exclude applications which you do not want to see printed. &lt;code&gt;kernel&lt;/code&gt;, &lt;code&gt;stdlib&lt;/code&gt; and &lt;code&gt;compiler&lt;/code&gt; are always excluded from the tree.</source>
          <target state="translated">&lt;code&gt;--exclude&lt;/code&gt; - исключить приложения, которые вы не хотите печатать. &lt;code&gt;kernel&lt;/code&gt; , &lt;code&gt;stdlib&lt;/code&gt; и &lt;code&gt;compiler&lt;/code&gt; всегда исключаются из дерева.</target>
        </trans-unit>
        <trans-unit id="d9506aa3419c094464cde408c9d3d4d41493daa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exclude&lt;/code&gt; - exclude dependencies which you do not want to see printed.</source>
          <target state="translated">&lt;code&gt;--exclude&lt;/code&gt; - исключить зависимости, которые вы не хотите выводить на печать.</target>
        </trans-unit>
        <trans-unit id="54700bf6946f1ab2ec54efd5ba8530fda1c599b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exclude&lt;/code&gt; - excludes tests that match the filter</source>
          <target state="translated">&lt;code&gt;--exclude&lt;/code&gt; - исключает тесты, соответствующие фильтру</target>
        </trans-unit>
        <trans-unit id="b129b7bd958066bad0375a9d3064dc024c2f0c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exclude&lt;/code&gt; - paths to exclude</source>
          <target state="translated">&lt;code&gt;--exclude&lt;/code&gt; - исключаемые пути</target>
        </trans-unit>
        <trans-unit id="16b069bb05ac51ff00fe9f2ac8de50af4f3562dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--export-coverage&lt;/code&gt; - the name of the file to export coverage results too. Only has an effect when used with &lt;code&gt;--cover&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--export-coverage&lt;/code&gt; - имя файла для экспорта результатов покрытия. Имеет эффект только при использовании с &lt;code&gt;--cover&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d2bb14c4d0a11a8acb6f718cd89db3ceb4db8bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--failed&lt;/code&gt; - runs only tests that failed the last time they ran</source>
          <target state="translated">&lt;code&gt;--failed&lt;/code&gt; - запускает только те тесты, которые не прошли в последний раз.</target>
        </trans-unit>
        <trans-unit id="91fc3d2fb5db2f6afb311d9c83cd599dc7d57aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--filter&lt;/code&gt; - unlocks only deps matching the given name</source>
          <target state="translated">&lt;code&gt;--filter&lt;/code&gt; - разблокирует только депы, соответствующие заданному имени</target>
        </trans-unit>
        <trans-unit id="99557e401051d7412741efb5f0e944e7ea436c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - force compilation of deps</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - форсировать компиляцию deps</target>
        </trans-unit>
        <trans-unit id="827fd7d1824f40c1c77948119dcb078d520931cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces checking regardless of modification time</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительная проверка независимо от времени модификации</target>
        </trans-unit>
        <trans-unit id="1792de50526771f9f0bd7589f5649e9f5be310a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces compilation</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - форсирует компиляцию</target>
        </trans-unit>
        <trans-unit id="cdc481a2f3cb228969a02ca36353dd035a4d6f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces compilation regardless of compilation times</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительная компиляция независимо от времени компиляции</target>
        </trans-unit>
        <trans-unit id="6c571a4483ee220d311fcbf826219ae8e72d2827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces compilation regardless of modification times</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительная компиляция независимо от времени модификации</target>
        </trans-unit>
        <trans-unit id="51ba6135ec561de5d82520498e60b65ff1a92170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces installation without a shell prompt; primarily intended for automation in build systems like &lt;code&gt;make&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительная установка без приглашения оболочки; в первую очередь предназначен для автоматизации в системах сборки, таких как &lt;code&gt;make&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25d2de8e7ad9ad6f39ef174f6a73807299ffa7bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces installation without a shell prompt; primarily intended for automation in build systems like Make</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительная установка без приглашения оболочки; в первую очередь предназначен для автоматизации в системах сборки, таких как Make</target>
        </trans-unit>
        <trans-unit id="3d60e2a67ccc5f19b2bd077d34d885c9c9273b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces recompilation</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительная перекомпиляция</target>
        </trans-unit>
        <trans-unit id="105ba9feeb78d893dcb9f3113db429cf7fb86df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces uninstallation without a shell prompt; primarily intended for automation</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - принудительное удаление без приглашения оболочки; в первую очередь предназначен для автоматизации</target>
        </trans-unit>
        <trans-unit id="1b19d19453517b2c7b88e9b598346f786ae09c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--format&lt;/code&gt; - Can be set to one of either:</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; - Может принимать одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="4cf3d73af1fb02da21a08d68dabdcaf60474361f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--format&lt;/code&gt; - can be set to one of:</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; - может принимать одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="c25726aab25951d6c2de929997db087ff0b0037f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--formatter&lt;/code&gt; - sets the formatter module that will print the results. Defaults to &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.CLIFormatter.html&quot;&gt;&lt;code&gt;ExUnit.CLIFormatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--formatter&lt;/code&gt; - устанавливает модуль форматирования, который будет печатать результаты. По умолчанию &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.CLIFormatter.html&quot;&gt; &lt;code&gt;ExUnit.CLIFormatter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2758904563632a36311c13f7f85afa4dfafdb3d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--formatter&lt;/code&gt; - sets the formatter module that will print the results. Defaults to ExUnit's built-in CLI formatter</source>
          <target state="translated">&lt;code&gt;--formatter&lt;/code&gt; - устанавливает модуль форматирования, который будет печатать результаты. По умолчанию используется встроенный форматировщик интерфейса командной строки ExUnit.</target>
        </trans-unit>
        <trans-unit id="ec95279396f062a37c20d8e9c11952a0b5b70653" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--if-missing&lt;/code&gt; - performs installation only if Hex is not installed yet; intended to avoid repeatedly reinstalling Hex in automation when a script may be run multiple times</source>
          <target state="translated">&lt;code&gt;--if-missing&lt;/code&gt; - выполнить установку, только если Hex еще не установлен; предназначен для предотвращения повторной переустановки Hex при автоматизации, когда сценарий может запускаться несколько раз</target>
        </trans-unit>
        <trans-unit id="5611ba927fd610547497b87d876016c4d9c11edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-module-conflict&lt;/code&gt; - does not emit warnings if a module was previously defined</source>
          <target state="translated">&lt;code&gt;--ignore-module-conflict&lt;/code&gt; - не выдает предупреждений, если модуль был ранее определен</target>
        </trans-unit>
        <trans-unit id="7a83bdc491cac93091b6438f7519ffb0927e1035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-dot-files&lt;/code&gt; - adds dot files from priv directory to the archive.</source>
          <target state="translated">&lt;code&gt;--include-dot-files&lt;/code&gt; - добавляет в архив точечные файлы из каталога Priv.</target>
        </trans-unit>
        <trans-unit id="38b17980402cd74c65c5537ece25ddf3c7e363d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-siblings&lt;/code&gt; - includes dependencies that have &lt;code&gt;:in_umbrella&lt;/code&gt; set to true in the current project in the reports. This can be used to find callers or to analyze graphs between projects</source>
          <target state="translated">&lt;code&gt;--include-siblings&lt;/code&gt; - включает в отчеты зависимости, для которых &lt;code&gt;:in_umbrella&lt;/code&gt; установлено значение true в текущем проекте. Это можно использовать для поиска абонентов или для анализа графиков между проектами.</target>
        </trans-unit>
        <trans-unit id="f8447b429dc984ac90fea158a175108107c469ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include&lt;/code&gt; - includes tests that match the filter</source>
          <target state="translated">&lt;code&gt;--include&lt;/code&gt; - включает тесты, соответствующие фильтру</target>
        </trans-unit>
        <trans-unit id="68eaaaa9732497644badfa0a728baf028028fdbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--label&lt;/code&gt; - only shows relationships with the given label The labels are &quot;compile&quot;, &quot;struct&quot; and &quot;runtime&quot;</source>
          <target state="translated">&lt;code&gt;--label&lt;/code&gt; - показывает только отношения с данной меткой. Метки: &quot;compile&quot;, &quot;struct&quot; и &quot;runtime&quot;</target>
        </trans-unit>
        <trans-unit id="4c441be9c4155d93ab08d76f73dac357cfc12a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--label&lt;/code&gt; - only shows relationships with the given label. By default, it keeps all labels that are transitive. The labels are &quot;compile&quot;, &quot;export&quot; and &quot;runtime&quot;. See &quot;Dependencies types&quot; section below</source>
          <target state="translated">&lt;code&gt;--label&lt;/code&gt; - показывает только отношения с данным ярлыком. По умолчанию он сохраняет все транзитивные метки. Ярлыки: &quot;компиляция&quot;, &quot;экспорт&quot; и &quot;время выполнения&quot;. См. Раздел &amp;laquo;Типы зависимостей&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="726b9e7538119807f0b95629722d0a2bd2e56cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--limit&lt;/code&gt; - filters out any results with a call count less than the limit</source>
          <target state="translated">&lt;code&gt;--limit&lt;/code&gt; - отфильтровывает любые результаты с количеством звонков меньше лимита</target>
        </trans-unit>
        <trans-unit id="ecd45c4a461fa90e57e476227b6f93e4f181afc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--list&lt;/code&gt; - lists all enabled compilers</source>
          <target state="translated">&lt;code&gt;--list&lt;/code&gt; - перечисляет все включенные компиляторы</target>
        </trans-unit>
        <trans-unit id="28912ea9cbc84b0a333b1f3925634b64e0383314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--listen-on-stdin&lt;/code&gt; - runs tests, and then listens on stdin. Receiving a newline will result in the tests being run again. Very useful when combined with &lt;code&gt;--stale&lt;/code&gt; and external commands which produce output on stdout upon file system modifications</source>
          <target state="translated">&lt;code&gt;--listen-on-stdin&lt;/code&gt; - запускает тесты, а затем прослушивает stdin. Получение новой строки приведет к повторному запуску тестов. Очень полезно в сочетании с &lt;code&gt;--stale&lt;/code&gt; и внешними командами, которые производят вывод на стандартный вывод при изменениях файловой системы.</target>
        </trans-unit>
        <trans-unit id="8715f025eb829996e6cb41c84fcb3b65473dea67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--long-compilation-threshold N&lt;/code&gt; - sets the &quot;long compilation&quot; threshold (in seconds) to &lt;code&gt;N&lt;/code&gt; (see the docs for &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.ParallelCompiler.html#compile/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;--long-compilation-threshold N&lt;/code&gt; - устанавливает порог &quot;длинной компиляции&quot; (в секундах) &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.ParallelCompiler.html#compile/2&quot;&gt; &lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt; &lt;/a&gt; &lt;code&gt;N&lt;/code&gt; (см. документацию для Kernel.ParallelCompiler.compile / 2 )</target>
        </trans-unit>
        <trans-unit id="9bd0839c0d2416e67aed50b67d05c3ac283f058b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--matching&lt;/code&gt; - only profile calls matching the given &lt;code&gt;Module.function/arity&lt;/code&gt; pattern</source>
          <target state="translated">&lt;code&gt;--matching&lt;/code&gt; - только профильные вызовы , соответствующие данному &lt;code&gt;Module.function/arity&lt;/code&gt; шаблон</target>
        </trans-unit>
        <trans-unit id="878401e009de0585d7e6fb3eab427ef18c25cb93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--max-cases&lt;/code&gt; - sets the maximum number of tests running asynchronously. Only tests from different modules run in parallel. Defaults to twice the number of cores</source>
          <target state="translated">&lt;code&gt;--max-cases&lt;/code&gt; - устанавливает максимальное количество тестов, выполняющихся асинхронно. Параллельно запускаются только тесты из разных модулей. По умолчанию в два раза больше ядер</target>
        </trans-unit>
        <trans-unit id="6c40e9c73fb0b3b3f8bda43d85c8d4e456c7d521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--max-failures&lt;/code&gt; - the suite stops evaluating tests when this number of test failures is reached. It runs all tests if omitted</source>
          <target state="translated">&lt;code&gt;--max-failures&lt;/code&gt; - набор прекращает оценку тестов, когда достигается это количество неудачных тестов. Если не указано, запускаются все тесты</target>
        </trans-unit>
        <trans-unit id="760809efa86f819082427ab7d422d94038e830eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--min-cycle-size&lt;/code&gt; - controls the minimum cycle size on formats like &lt;code&gt;stats&lt;/code&gt; and &lt;code&gt;cycles&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--min-cycle-size&lt;/code&gt; - контролирует минимальный размер цикла для таких форматов, как &lt;code&gt;stats&lt;/code&gt; и &lt;code&gt;cycles&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb7e689cfd398b25e0e488101bddb1bae5de3234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--module&lt;/code&gt; - filters out any results not pertaining to the given module</source>
          <target state="translated">&lt;code&gt;--module&lt;/code&gt; - отфильтровывает любые результаты, не относящиеся к данному модулю</target>
        </trans-unit>
        <trans-unit id="1a2143e25842700ed54d72b90b80efa2d374e09d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-app-loading&lt;/code&gt; - does not load applications (including from deps)</source>
          <target state="translated">&lt;code&gt;--no-app-loading&lt;/code&gt; - не загружает приложения (в том числе из deps)</target>
        </trans-unit>
        <trans-unit id="ef11ad9a498e2894e3ba3b005942222f0d3ba228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-app-loading&lt;/code&gt; - does not load applications (including from deps) before compiling</source>
          <target state="translated">&lt;code&gt;--no-app-loading&lt;/code&gt; - не загружает приложения (в том числе из deps) перед компиляцией</target>
        </trans-unit>
        <trans-unit id="bd6cb0552226cff1c8feb42f1b805a611d5b7439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-archives-check&lt;/code&gt; - does not check archive</source>
          <target state="translated">&lt;code&gt;--no-archives-check&lt;/code&gt; - не проверять архив</target>
        </trans-unit>
        <trans-unit id="6c07f7b26f62a3a7f84d89f9a8ef3b13fbdff49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-archives-check&lt;/code&gt; - does not check archives</source>
          <target state="translated">&lt;code&gt;--no-archives-check&lt;/code&gt; - не проверять архивы</target>
        </trans-unit>
        <trans-unit id="1fbfb641cbbba63dc192e57c5d7d021ccb4be0ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-archives-check&lt;/code&gt; - does not check archives before fetching deps</source>
          <target state="translated">&lt;code&gt;--no-archives-check&lt;/code&gt; - не проверять архивы перед загрузкой deps</target>
        </trans-unit>
        <trans-unit id="ea311f18572b295d63e7a3eec0212a0ba5f37315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-archives-check&lt;/code&gt; - skips checking of archives</source>
          <target state="translated">&lt;code&gt;--no-archives-check&lt;/code&gt; - пропускает проверку архивов</target>
        </trans-unit>
        <trans-unit id="1c8b8de617e15059f40a389d93bd1ca71cfa9460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-color&lt;/code&gt; - disables color in the output</source>
          <target state="translated">&lt;code&gt;--no-color&lt;/code&gt; - отключает цвет на выходе</target>
        </trans-unit>
        <trans-unit id="cdae5f3d4023a38cc7b41cfb75440fb41b7d20f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not actually compile, only loads code and perform checks</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - фактически не компилируется, только загружает код и выполняет проверки</target>
        </trans-unit>
        <trans-unit id="61f85a6e419fb107979f30aae834d5b591652306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not compile before assembling the release</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - перед сборкой релиза не компилируется</target>
        </trans-unit>
        <trans-unit id="017e62d626b123ee270bea239df252b3bc52c3af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not compile dependencies</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - не компилирует зависимости</target>
        </trans-unit>
        <trans-unit id="6d6628d5c91dd15476bc39e5dbd6ce99b637f3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not compile even if files require compilation</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - не компилируется, даже если файлы требуют компиляции</target>
        </trans-unit>
        <trans-unit id="99392dda5c512dab0deed58e2063b9dd7eb5a957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not compile, even if files require compilation</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - не компилируется, даже если файлы требуют компиляции</target>
        </trans-unit>
        <trans-unit id="ec13fcd65a8f6647602badcf66bc47e9c85cf236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - skips compilation. Only applies when &lt;code&gt;mix.exs&lt;/code&gt; is available.</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - пропускает компиляцию. Применяется только когда доступен &lt;code&gt;mix.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01722bc34e1e2f3cb7ba6a2a7c15ecef99e9ed53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - does not check dependencies</source>
          <target state="translated">&lt;code&gt;--no-deps-check&lt;/code&gt; - не проверяет зависимости</target>
        </trans-unit>
        <trans-unit id="91ef31fd791a0a21729350017aef9ff92e846ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - does not check or compile deps, only load available ones</source>
          <target state="translated">&lt;code&gt;--no-deps-check&lt;/code&gt; - не проверяет и не компилирует deps, загружает только доступные</target>
        </trans-unit>
        <trans-unit id="4eacb01561319d3b453ffe243ff7e8165b919a61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - skips checking of dependencies</source>
          <target state="translated">&lt;code&gt;--no-deps-check&lt;/code&gt; - пропускает проверку зависимостей</target>
        </trans-unit>
        <trans-unit id="21a17f14150c7d7920efa2cb48106be1aff8ea33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check Elixir version</source>
          <target state="translated">&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - не проверять версию Эликсира</target>
        </trans-unit>
        <trans-unit id="916541657cb9f6bec3ebd5bfa32a030e7095ce2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check the Elixir version from &lt;code&gt;mix.exs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - не проверять версию Эликсира из &lt;code&gt;mix.exs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8035cda315456c3d6b7ac3a19c4b962f7bcbeb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check the Elixir version from mix.exs</source>
          <target state="translated">&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - не проверять версию Эликсира из mix.exs</target>
        </trans-unit>
        <trans-unit id="39178ceee30f55244179a5cb024b34f28d9ba535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-halt&lt;/code&gt; - does not halt the system after running the command</source>
          <target state="translated">&lt;code&gt;--no-halt&lt;/code&gt; - не останавливает систему после выполнения команды</target>
        </trans-unit>
        <trans-unit id="77a3e409287d98c2ec778f282b04ea25c236a32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-load-deps&lt;/code&gt; - does not load deps from the code path</source>
          <target state="translated">&lt;code&gt;--no-load-deps&lt;/code&gt; - не загружает зависимости от пути кода</target>
        </trans-unit>
        <trans-unit id="568a490842f2b72036f1e61cc6e8a7d856db30e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-mix-exs&lt;/code&gt; - allows the command to run even if there is no mix.exs</source>
          <target state="translated">&lt;code&gt;--no-mix-exs&lt;/code&gt; exs - разрешить выполнение команды, даже если нет mix.exs</target>
        </trans-unit>
        <trans-unit id="f9c47e295e7df8ff1132942297f9d68773585802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-protocol-consolidation&lt;/code&gt; - skips protocol consolidation</source>
          <target state="translated">&lt;code&gt;--no-protocol-consolidation&lt;/code&gt; - пропускает консолидацию протоколов</target>
        </trans-unit>
        <trans-unit id="7af8af07319c57b23cf33ba859229d195eacae6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-start&lt;/code&gt; - does not actually start applications, only compiles and loads code</source>
          <target state="translated">&lt;code&gt;--no-start&lt;/code&gt; - фактически не запускает приложения, а только компилирует и загружает код</target>
        </trans-unit>
        <trans-unit id="4b77cf4c238bb6f18492c34cb6bd22c2dfa9c5f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-start&lt;/code&gt; - does not start applications after compilation</source>
          <target state="translated">&lt;code&gt;--no-start&lt;/code&gt; - не запускать приложения после компиляции</target>
        </trans-unit>
        <trans-unit id="5212ec5fe4d6616677d849cb1cb85e65f93a5b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-validate-compile-env&lt;/code&gt; - does not validate the application compile environment</source>
          <target state="translated">&lt;code&gt;--no-validate-compile-env&lt;/code&gt; - не проверяет среду компиляции приложения</target>
        </trans-unit>
        <trans-unit id="9f21b2ffee00a1fcb419835382ef1c0f0b8e9bff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-warmup&lt;/code&gt; - does not execute code once before profiling</source>
          <target state="translated">&lt;code&gt;--no-warmup&lt;/code&gt; - не выполнять код один раз перед профилированием</target>
        </trans-unit>
        <trans-unit id="e8ca2641d5a1fe80356ac98e1e0435b866c99ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-warmup&lt;/code&gt; - skips the warmup step before profiling</source>
          <target state="translated">&lt;code&gt;--no-warmup&lt;/code&gt; - пропускает этап разминки перед профилированием</target>
        </trans-unit>
        <trans-unit id="cf1fdd04784557bd1b0cc386210ab749cd19b910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only-direct&lt;/code&gt; - the &lt;code&gt;--label&lt;/code&gt; option will restrict itself to only direct dependencies instead of transitive ones</source>
          <target state="translated">&lt;code&gt;--only-direct&lt;/code&gt; - параметр &lt;code&gt;--label&lt;/code&gt; ограничит себя только прямыми зависимостями вместо транзитивных</target>
        </trans-unit>
        <trans-unit id="f91bb9d694b30304d263282b364a21c0fa4d0785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only-nodes&lt;/code&gt; - only shows the node names (no edges)</source>
          <target state="translated">&lt;code&gt;--only-nodes&lt;/code&gt; - показывает только имена узлов (без ребер)</target>
        </trans-unit>
        <trans-unit id="a3d215c6f08f5cd987e666c7d0aedbee4363d6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only&lt;/code&gt; - only fetches dependencies for given environment</source>
          <target state="translated">&lt;code&gt;--only&lt;/code&gt; - выбирает зависимости только для данной среды</target>
        </trans-unit>
        <trans-unit id="333a8cd444220f78913f4cfe0730190ff29ddaa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only&lt;/code&gt; - runs only tests that match the filter</source>
          <target state="translated">&lt;code&gt;--only&lt;/code&gt; - запускает только те тесты, которые соответствуют фильтру</target>
        </trans-unit>
        <trans-unit id="b6b4b208ca3e6dc33d7da856d78cd245b46dc7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only&lt;/code&gt; - the environment to show dependencies for</source>
          <target state="translated">&lt;code&gt;--only&lt;/code&gt; - среда для отображения зависимостей</target>
        </trans-unit>
        <trans-unit id="017b565b1e7833135b157b2aff146c989ece9a3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--organization&lt;/code&gt; - set this for Hex private packages belonging to an organization</source>
          <target state="translated">&lt;code&gt;--organization&lt;/code&gt; - установите это для частных пакетов Hex, принадлежащих организации</target>
        </trans-unit>
        <trans-unit id="eb6ed363af60cae9fa1f39ec02a832122d549d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--overwrite&lt;/code&gt; - if there is an existing release version, overwrite it</source>
          <target state="translated">&lt;code&gt;--overwrite&lt;/code&gt; - если есть существующая версия релиза, перезаписать ее</target>
        </trans-unit>
        <trans-unit id="38df593fe3865407a26f4a2b7ca2905ab883817b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--parallel&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt; - makes all requires parallel</source>
          <target state="translated">&lt;code&gt;--parallel&lt;/code&gt; , &lt;code&gt;-p&lt;/code&gt; - все требует параллельности</target>
        </trans-unit>
        <trans-unit id="9b388d27b66146ca997c24ff4059b71c281c1825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--partitions&lt;/code&gt; - sets the amount of partitions to split tests in. This option requires the &lt;code&gt;MIX_TEST_PARTITION&lt;/code&gt; environment variable to be set. See the &quot;Operating system process partitioning&quot; section for more information</source>
          <target state="translated">&lt;code&gt;--partitions&lt;/code&gt; - устанавливает количество разделов для разбиения тестов. Эта опция требует, чтобы была установлена ​​переменная среды &lt;code&gt;MIX_TEST_PARTITION&lt;/code&gt; . См. Раздел &amp;laquo;Разбиение процессов операционной системы&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="8f22adc20bbc67f5bbc080e4c06482a4436483cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--path&lt;/code&gt; - the path of the release</source>
          <target state="translated">&lt;code&gt;--path&lt;/code&gt; - путь выпуска</target>
        </trans-unit>
        <trans-unit id="17d8356ccbd57dcb43940d68a27e0c1d671103e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--permanent&lt;/code&gt; - starts the application as permanent</source>
          <target state="translated">&lt;code&gt;--permanent&lt;/code&gt; - запускает приложение как постоянное</target>
        </trans-unit>
        <trans-unit id="37ac00f417999d0774684f020ef2b4b57eb969d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--preload-modules&lt;/code&gt; - preloads all modules defined in applications</source>
          <target state="translated">&lt;code&gt;--preload-modules&lt;/code&gt; - предварительно загружает все модули, определенные в приложениях</target>
        </trans-unit>
        <trans-unit id="cf52a90c537f6f02673abdbf83238b8aa9d92489" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--profile&lt;/code&gt; - if set to &lt;code&gt;time&lt;/code&gt;, outputs timing information of compilation steps</source>
          <target state="translated">&lt;code&gt;--profile&lt;/code&gt; - если установлено &lt;code&gt;time&lt;/code&gt; , выводит информацию о времени этапов компиляции</target>
        </trans-unit>
        <trans-unit id="69d064d8b9934a4d3fe15f2458cdf850d925d0f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--quiet&lt;/code&gt; - does not write progress to the standard output</source>
          <target state="translated">&lt;code&gt;--quiet&lt;/code&gt; - не выводить прогресс на стандартный вывод</target>
        </trans-unit>
        <trans-unit id="01494812d74e545da1e1defbcb844b59fe181f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--raise&lt;/code&gt; - raises if the test suite failed</source>
          <target state="translated">&lt;code&gt;--raise&lt;/code&gt; - повышается, если набор тестов не прошел</target>
        </trans-unit>
        <trans-unit id="07e0c8f7a23d81a8fdac7145779ccee916679fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--repo&lt;/code&gt; - set this for self-hosted Hex instances, defaults to &lt;code&gt;hexpm&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--repo&lt;/code&gt; - установить для &lt;code&gt;hexpm&lt;/code&gt; экземпляров Hex, по умолчанию - hexpm</target>
        </trans-unit>
        <trans-unit id="eda0d2121e6ec7e2266b83aa7a93a290098af96f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--require&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - executes the given pattern/file</source>
          <target state="translated">&lt;code&gt;--require&lt;/code&gt; , &lt;code&gt;-r&lt;/code&gt; - выполняет данный шаблон / файл</target>
        </trans-unit>
        <trans-unit id="33cd6742d9b1ec9410c866fbd63fffbf0238954b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--require&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - requires pattern before running the command</source>
          <target state="translated">&lt;code&gt;--require&lt;/code&gt; , &lt;code&gt;-r&lt;/code&gt; - требует шаблона перед запуском команды</target>
        </trans-unit>
        <trans-unit id="3083c950ea24959f68005aa337392c4b7b6265c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--return-errors&lt;/code&gt; - returns error status and diagnostics instead of exiting on error</source>
          <target state="translated">&lt;code&gt;--return-errors&lt;/code&gt; - возвращает статус ошибки и диагностику вместо выхода при ошибке</target>
        </trans-unit>
        <trans-unit id="88013f972497d520bceeef31f4d1c2c98dec41f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--seed&lt;/code&gt; - seeds the random number generator used to randomize the order of tests; &lt;code&gt;--seed 0&lt;/code&gt; disables randomization</source>
          <target state="translated">&lt;code&gt;--seed&lt;/code&gt; - инициализирует генератор случайных чисел, используемый для рандомизации порядка тестов; &lt;code&gt;--seed 0&lt;/code&gt; отключает рандомизацию</target>
        </trans-unit>
        <trans-unit id="b46847e5703c0d5755416b1f56e3dcda68bdd19a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sha512&lt;/code&gt; - checks the Rebar script matches the given SHA-512 checksum</source>
          <target state="translated">&lt;code&gt;--sha512&lt;/code&gt; - проверяет соответствие скрипта Rebar заданной контрольной сумме SHA-512</target>
        </trans-unit>
        <trans-unit id="d5d14c3804b44e16a06ad3dcbd26c279a9edaa0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sha512&lt;/code&gt; - checks the archive matches the given SHA-512 checksum. Only applies to installations via a local path</source>
          <target state="translated">&lt;code&gt;--sha512&lt;/code&gt; - проверяет соответствие архива заданной контрольной сумме SHA-512. Применимо только к установкам через локальный путь</target>
        </trans-unit>
        <trans-unit id="b10aeebbc36d6863d3c5f15441019e8ac9b22a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sha512&lt;/code&gt; - checks the escript matches the given SHA-512 checksum. Only applies to installations via a local path</source>
          <target state="translated">&lt;code&gt;--sha512&lt;/code&gt; - проверяет соответствие эскрипта заданной контрольной сумме SHA-512. Применимо только к установкам через локальный путь</target>
        </trans-unit>
        <trans-unit id="f1cb6065759e01d07320e753611ea7250c5217dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sink&lt;/code&gt; - displays all files that reference the given file (directly or indirectly)</source>
          <target state="translated">&lt;code&gt;--sink&lt;/code&gt; - отображает все файлы, которые ссылаются на данный файл (прямо или косвенно)</target>
        </trans-unit>
        <trans-unit id="3005d4721fffb6ba76b7a5b356a847b16224df72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--skip-local-deps&lt;/code&gt; - skips non-remote dependencies, such as path deps, from compiling</source>
          <target state="translated">&lt;code&gt;--skip-local-deps&lt;/code&gt; - пропускает не удаленные зависимости, такие как зависимости пути, от компиляции</target>
        </trans-unit>
        <trans-unit id="7d1e88df88192aa5e1a86faececc5ee3a2eace6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--skip-umbrella-children&lt;/code&gt; - skips umbrella applications from compiling</source>
          <target state="translated">&lt;code&gt;--skip-umbrella-children&lt;/code&gt; - пропускает зонтичные приложения из компиляции</target>
        </trans-unit>
        <trans-unit id="5cc03307608423b54c288c4e9bf5a93b39bd8c12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--slowest&lt;/code&gt; - prints timing information for the N slowest tests. Automatically sets &lt;code&gt;--trace&lt;/code&gt; and &lt;code&gt;--preload-modules&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--slowest&lt;/code&gt; - выводит информацию о времени для N самых медленных тестов. Автоматически устанавливает &lt;code&gt;--trace&lt;/code&gt; и &lt;code&gt;--preload-modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0ecff763b154e11a3a0d74f5300dcacedd56a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sort key&lt;/code&gt; - sorts the output by given key: &lt;code&gt;acc&lt;/code&gt; (default) or &lt;code&gt;own&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--sort key&lt;/code&gt; - сортирует вывод по заданному ключу: &lt;code&gt;acc&lt;/code&gt; (по умолчанию) или &lt;code&gt;own&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db2c4c5ff49654340496a49bb7c06262cc510475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sort&lt;/code&gt; - sorts the results by &lt;code&gt;time&lt;/code&gt; or &lt;code&gt;calls&lt;/code&gt; (default: &lt;code&gt;time&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--sort&lt;/code&gt; - сортирует результаты по &lt;code&gt;time&lt;/code&gt; или &lt;code&gt;calls&lt;/code&gt; (по умолчанию: &lt;code&gt;time&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b26f9f08c7f32f64f804789eab37300e90fc23fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--source&lt;/code&gt; - displays all files that the given source file references (directly or indirectly)</source>
          <target state="translated">&lt;code&gt;--source&lt;/code&gt; - отображает все файлы, на которые ссылается данный исходный файл (прямо или косвенно)</target>
        </trans-unit>
        <trans-unit id="df641f035cd100611c807c58602f94b1c01adb45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--stale&lt;/code&gt; - runs only tests which reference modules that changed since the last time tests were ran with &lt;code&gt;--stale&lt;/code&gt;. You can read more about this option in the &quot;Stale&quot; section below</source>
          <target state="translated">&lt;code&gt;--stale&lt;/code&gt; - запускает только тесты, ссылочные модули которых изменились с момента последнего &lt;code&gt;--stale&lt;/code&gt; тестов с --stale . Вы можете узнать больше об этой опции в разделе &amp;laquo;Устаревшие&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="b68e5e750615f5bff4130b28a2fc4c3bafcffcd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--stale&lt;/code&gt; - runs only tests which reference modules that changed since the last time tests were ran with &lt;code&gt;--stale&lt;/code&gt;. You can read more about this option in the &quot;The --stale option&quot; section below</source>
          <target state="translated">&lt;code&gt;--stale&lt;/code&gt; - запускает только тесты, ссылочные модули которых изменились с момента последнего &lt;code&gt;--stale&lt;/code&gt; тестов с --stale . Вы можете узнать больше об этой опции в разделе &amp;laquo;Опция --stale&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="aa28619011d147bb293b6230a69c561ca166af3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--submodules&lt;/code&gt; - fetches repository submodules before building archive from Git or GitHub</source>
          <target state="translated">&lt;code&gt;--submodules&lt;/code&gt; - выбирает подмодули репозитория перед сборкой архива из Git или GitHub</target>
        </trans-unit>
        <trans-unit id="34b02926819f3adcd6914cd279eba568e3221b04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--submodules&lt;/code&gt; - fetches repository submodules before building escript from Git or GitHub</source>
          <target state="translated">&lt;code&gt;--submodules&lt;/code&gt; - выбирает подмодули репозитория перед сборкой скрипта из Git или GitHub</target>
        </trans-unit>
        <trans-unit id="8a84d9e447323811c10b00ae195c347860e6c841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--target&lt;/code&gt; - only fetches dependencies for given target</source>
          <target state="translated">&lt;code&gt;--target&lt;/code&gt; - извлекает зависимости только для данной цели</target>
        </trans-unit>
        <trans-unit id="f347b93dfa3260a4867419d753e97a06bb7b486d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--target&lt;/code&gt; - the target to show dependencies for</source>
          <target state="translated">&lt;code&gt;--target&lt;/code&gt; - цель, для которой нужно показать зависимости</target>
        </trans-unit>
        <trans-unit id="91360fc3f3a7de2564e6d442f6353c002505d33b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--temporary&lt;/code&gt; - starts the application as temporary</source>
          <target state="translated">&lt;code&gt;--temporary&lt;/code&gt; - Contemporary - запускает приложение как временное</target>
        </trans-unit>
        <trans-unit id="75fde89a7538cb80b2f5892df820f2332bdb6db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--time&lt;/code&gt; - filters out any results that took lower than specified (in &amp;micro;s)</source>
          <target state="translated">&lt;code&gt;--time&lt;/code&gt; - отфильтровывает любые результаты, которые были меньше указанного (в мкс)</target>
        </trans-unit>
        <trans-unit id="cbdf7ba051ab9c6bbea636da1a5ceba3503662a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--timeout&lt;/code&gt; - sets the timeout for the tests</source>
          <target state="translated">&lt;code&gt;--timeout&lt;/code&gt; - устанавливает тайм-аут для тестов</target>
        </trans-unit>
        <trans-unit id="a5968b7b14dbfd3d4c4fa51114eedbcef7327a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--trace&lt;/code&gt; - runs tests with detailed reporting. Automatically sets &lt;code&gt;--max-cases&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. Note that in trace mode test timeouts will be ignored as timeout is set to &lt;code&gt;:infinity&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--trace&lt;/code&gt; - запускает тесты с подробным отчетом. Автоматически устанавливает &lt;code&gt;--max-cases&lt;/code&gt; на &lt;code&gt;1&lt;/code&gt; . Обратите внимание, что в режиме трассировки таймауты теста будут проигнорированы, так как таймаут установлен на &lt;code&gt;:infinity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d0da52d2c0114dd5ca2b1f192b5e06577dc91c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tracer&lt;/code&gt; - adds a compiler tracer in addition to any specified in the &lt;code&gt;mix.exs&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;--tracer&lt;/code&gt; - добавляет трейсер компилятора в дополнение к любому, указанному в файле &lt;code&gt;mix.exs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd251225d231d2bdee4831911cdca027be4c3335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--unlock&lt;/code&gt; - also unlocks the deleted dependencies</source>
          <target state="translated">&lt;code&gt;--unlock&lt;/code&gt; - также разблокирует удаленные зависимости</target>
        </trans-unit>
        <trans-unit id="14145ac4e6472e903f7c78da88bcdc4a19fd1b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--unused&lt;/code&gt; - deletes only unused dependencies (i.e. dependencies no longer mentioned in &lt;code&gt;mix.exs&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--unused&lt;/code&gt; - удаляет только неиспользуемые зависимости (т.е. зависимости, больше не упоминаемые в &lt;code&gt;mix.exs&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bb1bdded9e3f675fb69bd81f0092794cfad1e7e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--unused&lt;/code&gt; - unlocks only unused dependencies (no longer mentioned in the &lt;code&gt;mix.exs&lt;/code&gt; file)</source>
          <target state="translated">&lt;code&gt;--unused&lt;/code&gt; - разблокирует только неиспользуемые зависимости (больше не упоминается в файле &lt;code&gt;mix.exs&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="06bb1f53da48506457e3df2659cbffcec86cc42b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--verbose&lt;/code&gt; - prints each file being compiled</source>
          <target state="translated">&lt;code&gt;--verbose&lt;/code&gt; - печатает каждый компилируемый файл</target>
        </trans-unit>
        <trans-unit id="e139fa2fc575747acfdb39b0c1e318f58162351d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt; - the version of the release</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; - версия релиза</target>
        </trans-unit>
        <trans-unit id="f61195ee0afe2a7c5fccccfa111edadc33eb6b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--warnings-as-errors&lt;/code&gt; - treats warnings as errors and returns a non-zero exit code</source>
          <target state="translated">&lt;code&gt;--warnings-as-errors&lt;/code&gt; - обрабатывает предупреждения как ошибки и возвращает ненулевой код выхода.</target>
        </trans-unit>
        <trans-unit id="c33ef09ac6b3502120d4298a6af7177cb85de29e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--warnings-as-errors&lt;/code&gt; - treats warnings in the current project as errors and return a non-zero exit code</source>
          <target state="translated">&lt;code&gt;--warnings-as-errors&lt;/code&gt; - обрабатывает предупреждения в текущем проекте как ошибки и возвращает ненулевой код выхода.</target>
        </trans-unit>
        <trans-unit id="3ef495305104f52b946f80561f7afd151a9052d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;: no padding, removes all padding from the format</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; : без отступов, удаляет все отступы из формата</target>
        </trans-unit>
        <trans-unit id="96cb323e69c10f0f04e09b45d42815d96c77cd5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; - specifies the input directory to archive. If there is a &lt;code&gt;mix.exs&lt;/code&gt;, defaults to the current application build.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; - указывает входной каталог для архивации. Если есть &lt;code&gt;mix.exs&lt;/code&gt; , по умолчанию используется текущая сборка приложения.</target>
        </trans-unit>
        <trans-unit id="0c163ad55f736332026afe0c407d56de3c4da417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; - specifies output file name. If there is a &lt;code&gt;mix.exs&lt;/code&gt;, defaults to &quot;APP-VERSION.ez&quot;.</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; - указывает имя выходного файла. Если есть &lt;code&gt;mix.exs&lt;/code&gt; , по умолчанию используется &amp;laquo;APP-VERSION.ez&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2fc68dac6dc8514b1a9fed093fdedcdc813f99ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; и &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f9e5df77b841ed1090a4f8410d9c954aea00daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/U&lt;/code&gt; (v1.1)</source>
          <target state="translated">&lt;code&gt;/U&lt;/code&gt; (версия 1.1)</target>
        </trans-unit>
        <trans-unit id="9f58699bbefca954cc8dd7196ec70b53d19f2faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/r&lt;/code&gt; option in &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;/r&lt;/code&gt; &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; / r в Regex</target>
        </trans-unit>
        <trans-unit id="291b62c3beef98c2335e59fa4912815e7f714495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/r&lt;/code&gt; option in &lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;/r&lt;/code&gt; &lt;a href=&quot;regex&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; / r в Regex</target>
        </trans-unit>
        <trans-unit id="df737b1e12e05573a42a852bcd1407aaafabc009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - if there is no matching message in the mailbox, the timeout will occur immediately</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; - если в почтовом ящике нет подходящего сообщения, тайм-аут произойдет немедленно</target>
        </trans-unit>
        <trans-unit id="b2d2a5de25521b12a0a075992df4b6eac3319b2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: pad with zeroes</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; : панель с нулями</target>
        </trans-unit>
        <trans-unit id="d31097e40149dbd3988acc8d4b1311ddd0d99274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o001&lt;/code&gt; - execute permission: other</source>
          <target state="translated">&lt;code&gt;0o001&lt;/code&gt; - разрешение на выполнение: другое</target>
        </trans-unit>
        <trans-unit id="2bbb3322e7e493338806be21e65a46759149714f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o002&lt;/code&gt; - write permission: other</source>
          <target state="translated">&lt;code&gt;0o002&lt;/code&gt; - разрешение на запись: другое</target>
        </trans-unit>
        <trans-unit id="b652aa959a0346aafcecfdac049f696b40942a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o004&lt;/code&gt; - read permission: other</source>
          <target state="translated">&lt;code&gt;0o004&lt;/code&gt; - разрешение на чтение: другое</target>
        </trans-unit>
        <trans-unit id="c20a6b167f555bfc0b63c0567375794b88cc781d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o010&lt;/code&gt; - execute permission: group</source>
          <target state="translated">&lt;code&gt;0o010&lt;/code&gt; - разрешение на выполнение: группа</target>
        </trans-unit>
        <trans-unit id="4e1122a2884ce64782740fe0827e9c0c42e575b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o020&lt;/code&gt; - write permission: group</source>
          <target state="translated">&lt;code&gt;0o020&lt;/code&gt; - разрешение на запись: группа</target>
        </trans-unit>
        <trans-unit id="d3af5be11967de594a5ab60eea0b44ed1c7d6b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o040&lt;/code&gt; - read permission: group</source>
          <target state="translated">&lt;code&gt;0o040&lt;/code&gt; - разрешение на чтение: группа</target>
        </trans-unit>
        <trans-unit id="7b8bf8687b8e5a759bf9d49eb2dfdab1ded0b731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o100&lt;/code&gt; - execute permission: owner</source>
          <target state="translated">&lt;code&gt;0o100&lt;/code&gt; - разрешение на выполнение: владелец</target>
        </trans-unit>
        <trans-unit id="4b2364ceaf1e663d934bfae57960cf17770698b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o200&lt;/code&gt; - write permission: owner</source>
          <target state="translated">&lt;code&gt;0o200&lt;/code&gt; - разрешение на запись: владелец</target>
        </trans-unit>
        <trans-unit id="4c848c5d34c1092d4c466fe2af469d9e9db593a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o400&lt;/code&gt; - read permission: owner</source>
          <target state="translated">&lt;code&gt;0o400&lt;/code&gt; - разрешение на чтение: владелец</target>
        </trans-unit>
        <trans-unit id="f0b5132494fc2edc417787787b4be34d5c4cb6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0xHEX&lt;/code&gt; (v1.0)</source>
          <target state="translated">&lt;code&gt;0xHEX&lt;/code&gt; ( версия 1.0)</target>
        </trans-unit>
        <trans-unit id="7267de70a3a03e53a733ceefaa278aee0f430894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt; means that the function on the left side &lt;em&gt;returns&lt;/em&gt; a value whose type is what&amp;rsquo;s on the right side. Function specs are written with the &lt;code&gt;@spec&lt;/code&gt; directive, placed right before the function definition. The &lt;code&gt;round/1&lt;/code&gt; function could be written as:</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; означает, что функция с левой стороны &lt;em&gt;возвращает&lt;/em&gt; значение, тип которого соответствует типу справа. Спецификации функций записываются с &lt;code&gt;@spec&lt;/code&gt; директивы @spec , размещенной прямо перед определением функции. &lt;code&gt;round/1&lt;/code&gt; функция может быть записана в виде:</target>
        </trans-unit>
        <trans-unit id="342719b863e291f639d3f0399270735ba22cba6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:abbreviated_day_of_week_names&lt;/code&gt; - a function that receives a number and returns the abbreviated name of the corresponding day of week, if the option is not received it defaults to a function that returns the abbreviated day of week names in English</source>
          <target state="translated">&lt;code&gt;:abbreviated_day_of_week_names&lt;/code&gt; - функция, которая получает число и возвращает сокращенное название соответствующего дня недели, если опция не получена, по умолчанию используется функция, которая возвращает сокращенные названия дней недели на английском языке</target>
        </trans-unit>
        <trans-unit id="f6f03ac9b3ec43378906b1b0b9e6aeee1211f98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:abbreviated_month_names&lt;/code&gt; - a function that receives a number and returns the abbreviated name of the corresponding month, if the option is not received it defaults to a function that returns the abbreviated month names in English</source>
          <target state="translated">&lt;code&gt;:abbreviated_month_names&lt;/code&gt; - функция, которая получает число и возвращает сокращенное название соответствующего месяца, если опция не получена, по умолчанию используется функция, которая возвращает сокращенные названия месяцев на английском языке</target>
        </trans-unit>
        <trans-unit id="fbf3dab9f39a99b7857fd48497920b5271a2dd44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:abs&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is treated as relative to the current monotonic time. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is the absolute value of the Erlang monotonic time at which &lt;code&gt;msg&lt;/code&gt; should be delivered to &lt;code&gt;dest&lt;/code&gt;. To read more about Erlang monotonic time and other time-related concepts, look at the documentation for the &lt;a href=&quot;https://hexdocs.pm/elixir/System.html&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:abs&lt;/code&gt; - (булево) , когда &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;time&lt;/code&gt; рассматривается как относительно текущего времени монотонной. Когда &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;time&lt;/code&gt; - это абсолютное значение монотонного времени Эрланга, в которое &lt;code&gt;msg&lt;/code&gt; должно быть доставлено в &lt;code&gt;dest&lt;/code&gt; . Чтобы узнать больше о монотонном времени Erlang и других концепциях, связанных со временем, просмотрите документацию по модулю &lt;a href=&quot;https://hexdocs.pm/elixir/System.html&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4521efb66eb5e2360ee82a3e719d7406030a0403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:abs&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is treated as relative to the current monotonic time. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is the absolute value of the Erlang monotonic time at which &lt;code&gt;msg&lt;/code&gt; should be delivered to &lt;code&gt;dest&lt;/code&gt;. To read more about Erlang monotonic time and other time-related concepts, look at the documentation for the &lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:abs&lt;/code&gt; - (логическое значение) если &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;time&lt;/code&gt; обрабатывается относительно текущего монотонного времени. Когда &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;time&lt;/code&gt; - это абсолютное значение монотонного времени Эрланга, в которое &lt;code&gt;msg&lt;/code&gt; должно быть доставлено в &lt;code&gt;dest&lt;/code&gt; . Чтобы узнать больше о монотонном времени Erlang и других концепциях, связанных со временем, обратитесь к документации по модулю &lt;a href=&quot;system&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2f074fc6de86695a18292aaf89e93ac0f14d597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:accumulate&lt;/code&gt; - several calls to the same attribute will accumulate instead of overriding the previous one. New attributes are always added to the top of the accumulated list.</source>
          <target state="translated">&lt;code&gt;:accumulate&lt;/code&gt; - несколько вызовов одного и того же атрибута будут накапливаться, а не отменять предыдущий. Новые атрибуты всегда добавляются в начало накопленного списка.</target>
        </trans-unit>
        <trans-unit id="1fcae26b7b0636fa02bce9ebb3cb0b3d5abe4e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:active&lt;/code&gt; - the count of all actively running child processes managed by this supervisor</source>
          <target state="translated">&lt;code&gt;:active&lt;/code&gt; - количество всех активно запущенных дочерних процессов, управляемых этим супервизором</target>
        </trans-unit>
        <trans-unit id="330b222c7af10c1dfda6100254622ed78ab5877d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alert&lt;/code&gt; - for alerts, actions that must be taken immediately, ex. corrupted database</source>
          <target state="translated">&lt;code&gt;:alert&lt;/code&gt; - для предупреждений, действий, которые необходимо предпринять немедленно, например. поврежденная база данных</target>
        </trans-unit>
        <trans-unit id="f64825e09fa8411f24acc9cc40afd9cbc0b7134d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alias&lt;/code&gt; - Used for alias hygiene.</source>
          <target state="translated">&lt;code&gt;:alias&lt;/code&gt; - Используется для псевдонима гигиены.</target>
        </trans-unit>
        <trans-unit id="a137007f918cc443c1925c345b4e4940503896b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - a list of task aliases. For more information, check out the &quot;Aliases&quot; section in the documentation for the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - список псевдонимов задач. Для получения дополнительной информации ознакомьтесь с разделом &amp;laquo;Псевдонимы&amp;raquo; в документации к модулю &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt; &lt;code&gt;Mix&lt;/code&gt; &lt;/a&gt; . По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5eb942413bc8d853aa8f542bbcea8a306fd8370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - a list of task aliases. For more information, check out the &quot;Aliases&quot; section in the documentation for the &lt;a href=&quot;mix&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - список псевдонимов задач. Для получения дополнительной информации ознакомьтесь с разделом &amp;laquo;Псевдонимы&amp;raquo; в документации к модулю &lt;a href=&quot;mix&quot;&gt; &lt;code&gt;Mix&lt;/code&gt; &lt;/a&gt; . По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ab92366f4fc76ba23b935612ed1c53e95db740b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - a list of tuples with the alias and its target</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - список кортежей с псевдонимом и его целью</target>
        </trans-unit>
        <trans-unit id="c8fc957df4e5736b10df85918af0dad49cc12ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - see the &quot;Aliases&quot; section below</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - см. раздел &quot;Псевдонимы&quot; ниже</target>
        </trans-unit>
        <trans-unit id="23ff011d2a36260aa603d1a7c67b0fdebc41c327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alive_continuation_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; and more input is expected</source>
          <target state="translated">&lt;code&gt;:alive_continuation_prompt&lt;/code&gt; - используется, когда &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt; &lt;code&gt;Node.alive?/0&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;true&lt;/code&gt; и ожидается дополнительный ввод</target>
        </trans-unit>
        <trans-unit id="c7d6d99578177a7e8a0f27bd1b17c65a0d3efabd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alive_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:alive_prompt&lt;/code&gt; - используется, когда &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt; &lt;code&gt;Node.alive?/0&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31c8da84fd5705c5745022cf1b203625becf8a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all&lt;/code&gt; - all captured subpatterns including the complete matching string (this is the default)</source>
          <target state="translated">&lt;code&gt;:all&lt;/code&gt; - все захваченные подшаблоны, включая полную строку соответствия (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="9468774e8fce99d06a12416f53afd5d2b9f7a187" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all&lt;/code&gt; - all messages will be logged, conceptually identical to &lt;code&gt;:debug&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:all&lt;/code&gt; - все сообщения будут регистрироваться, концептуально идентичны &lt;code&gt;:debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a91b3cd8d76a8fa6991851485bcaffb09fe126a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all_but_first&lt;/code&gt; - all but the first matching subpattern, i.e. all explicitly captured subpatterns, but not the complete matching part of the string</source>
          <target state="translated">&lt;code&gt;:all_but_first&lt;/code&gt; - все, кроме первого совпадающего подшаблона, т.е. все явно захваченные подшаблоны, но не полностью совпадающая часть строки</target>
        </trans-unit>
        <trans-unit id="860fdf8a8d2e8bf2285b2b2c56bfcbeea61a7552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all_names&lt;/code&gt; - captures all named subpattern matches in the Regex as a list ordered &lt;strong&gt;alphabetically&lt;/strong&gt; by the names of the subpatterns</source>
          <target state="translated">&lt;code&gt;:all_names&lt;/code&gt; - захватывает все именованные совпадения подшаблонов в регулярном выражении в виде списка, упорядоченного в &lt;strong&gt;алфавитном порядке&lt;/strong&gt; по именам подшаблонов</target>
        </trans-unit>
        <trans-unit id="91918dd8a10073443b332f33763e6aa24e8332b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all_names&lt;/code&gt; - captures all names in the Regex</source>
          <target state="translated">&lt;code&gt;:all_names&lt;/code&gt; - захватывает все имена в регулярном выражении</target>
        </trans-unit>
        <trans-unit id="1e9d29dc168f0783899b8e58a6b2413f3a76018e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:allow_nonexistent_atoms&lt;/code&gt; - see the &quot;Parsing unknown switches&quot; section below</source>
          <target state="translated">&lt;code&gt;:allow_nonexistent_atoms&lt;/code&gt; - см. раздел &amp;laquo;Анализ неизвестных переключателей&amp;raquo; ниже</target>
        </trans-unit>
        <trans-unit id="8d131d269f741254b20823188ba4014a5dbda88d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:allow_pre&lt;/code&gt; (boolean) - when &lt;code&gt;false&lt;/code&gt;, pre-release versions will not match unless the operand is a pre-release version. Defaults to &lt;code&gt;true&lt;/code&gt;. For examples, please refer to the table above under the &quot;Requirements&quot; section.</source>
          <target state="translated">&lt;code&gt;:allow_pre&lt;/code&gt; (boolean) - если &lt;code&gt;false&lt;/code&gt; , предварительные версии не будут совпадать, если только операнд не является предварительной версией. По умолчанию &lt;code&gt;true&lt;/code&gt; . Примеры см. В таблице выше в разделе &amp;laquo;Требования&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="b4ddbb8f02c9eff73685d51754fb6a16f2e85b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:am_pm_names&lt;/code&gt; - a function that receives either &lt;code&gt;:am&lt;/code&gt; or &lt;code&gt;:pm&lt;/code&gt; and returns the name of the period of the day, if the option is not received it defaults to a function that returns &lt;code&gt;&quot;am&quot;&lt;/code&gt; and &lt;code&gt;&quot;pm&quot;&lt;/code&gt;, respectively</source>
          <target state="translated">&lt;code&gt;:am_pm_names&lt;/code&gt; - функция, которая получает либо &lt;code&gt;:am&lt;/code&gt; , либо &lt;code&gt;:pm&lt;/code&gt; и возвращает название периода дня, если опция не получена, по умолчанию используется функция, которая возвращает &lt;code&gt;&quot;am&quot;&lt;/code&gt; и &lt;code&gt;&quot;pm&quot;&lt;/code&gt; соответственно</target>
        </trans-unit>
        <trans-unit id="7ef03d8f5bf69c00b213f75abb1d9349cd826997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ambiguous_op&lt;/code&gt; - Used for improved error messages in the compiler.</source>
          <target state="translated">&lt;code&gt;:ambiguous_op&lt;/code&gt; - Используется для улучшенных сообщений об ошибках в компиляторе.</target>
        </trans-unit>
        <trans-unit id="f43bf36ddbfd772da72000a29d2d227902843677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:app&lt;/code&gt; - the app that starts with the escript. Defaults to app name. Set it to &lt;code&gt;nil&lt;/code&gt; if no application should be started.</source>
          <target state="translated">&lt;code&gt;:app&lt;/code&gt; - приложение, которое начинается с эскрипта. По умолчанию используется имя приложения. Установите значение &lt;code&gt;nil&lt;/code&gt; , если никакое приложение не должно запускаться.</target>
        </trans-unit>
        <trans-unit id="5007b8a45951d5573468c1b280b8949a82b13e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:app&lt;/code&gt; - when set to &lt;code&gt;false&lt;/code&gt;, does not read the app file for this dependency. By default, the app file is read</source>
          <target state="translated">&lt;code&gt;:app&lt;/code&gt; - при значении &lt;code&gt;false&lt;/code&gt; не читает файл приложения для этой зависимости. По умолчанию файл приложения читается</target>
        </trans-unit>
        <trans-unit id="76a374a494c4b682b48c537607ed28d7d7ca5eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:append&lt;/code&gt; - the file will be opened for writing, and it will be created if it does not exist. Every write operation to a file opened with append will take place at the end of the file.</source>
          <target state="translated">&lt;code&gt;:append&lt;/code&gt; - файл будет открыт для записи, а если не существует, он будет создан. Каждая операция записи в файл, открытый с помощью добавления, будет выполняться в конце файла.</target>
        </trans-unit>
        <trans-unit id="5f7c6ce71fd08b05d65a0cf165345667be5def2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:append_first&lt;/code&gt; option in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defdelegate/2&quot;&gt;&lt;code&gt;Kernel.defdelegate/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:append_first&lt;/code&gt; параметр &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defdelegate/2&quot;&gt; &lt;code&gt;Kernel.defdelegate/2&lt;/code&gt; &lt;/a&gt; в Kernel.defdelegate / 2</target>
        </trans-unit>
        <trans-unit id="aaeb7d272198859be41859bd55e062152f9f69cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:append_first&lt;/code&gt; option in &lt;a href=&quot;kernel#defdelegate/2&quot;&gt;&lt;code&gt;Kernel.defdelegate/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:append_first&lt;/code&gt; параметр &lt;a href=&quot;kernel#defdelegate/2&quot;&gt; &lt;code&gt;Kernel.defdelegate/2&lt;/code&gt; &lt;/a&gt; в Kernel.defdelegate / 2</target>
        </trans-unit>
        <trans-unit id="20988cf8cfc56b4226e8ddca56e6e3d46dc87990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:application&lt;/code&gt; - the current application</source>
          <target state="translated">&lt;code&gt;:application&lt;/code&gt; - текущее приложение</target>
        </trans-unit>
        <trans-unit id="595725064d18fd3d7b80606746e67d8d8b71684f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:applications&lt;/code&gt; - a keyword list that configures and adds new applications to the release. The key is the application name and the value is one of:</source>
          <target state="translated">&lt;code&gt;:applications&lt;/code&gt; - список ключевых слов, который настраивает и добавляет новые приложения в выпуск. Ключ - это имя приложения, а значение - одно из:</target>
        </trans-unit>
        <trans-unit id="6909f55bb106ba40e7f244594163fc1b6a00a12d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:applications&lt;/code&gt; - a map of application with their definitions</source>
          <target state="translated">&lt;code&gt;:applications&lt;/code&gt; - карта приложения с их определениями</target>
        </trans-unit>
        <trans-unit id="823ccfe1dd945a900485bc9fbf3c87dbbee965cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:applications&lt;/code&gt; - all applications your application depends on at runtime. By default, this list is automatically inferred from your dependencies. Mix and other tools use the application list in order to start your dependencies before starting the application itself.</source>
          <target state="translated">&lt;code&gt;:applications&lt;/code&gt; - все приложения, от которых зависит ваше приложение во время выполнения. По умолчанию этот список автоматически выводится из ваших зависимостей. Mix и другие инструменты используют список приложений для запуска ваших зависимостей перед запуском самого приложения.</target>
        </trans-unit>
        <trans-unit id="56f83ef1508d909d20a94523ff82e2adf056c28b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:arg0&lt;/code&gt; - sets the command arg0</source>
          <target state="translated">&lt;code&gt;:arg0&lt;/code&gt; - устанавливает команду arg0</target>
        </trans-unit>
        <trans-unit id="84020d860f82d1a83862393258e63197ab308bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:arity&lt;/code&gt; - (integer) the number of arguments the function is to be called with.</source>
          <target state="translated">&lt;code&gt;:arity&lt;/code&gt; - (целое число) количество аргументов, с которыми должна быть вызвана функция.</target>
        </trans-unit>
        <trans-unit id="90b0a1d7ef2d2c37e84774f9382128fdc89cbcd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - the function to call on the target given in &lt;code&gt;:to&lt;/code&gt;. This parameter is optional and defaults to the name being delegated (&lt;code&gt;funs&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - функция для вызова цели, заданной в &lt;code&gt;:to&lt;/code&gt; . Этот параметр является необязательным и по умолчанию соответствует делегируемому имени ( &lt;code&gt;funs&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5d307ef0f23cd030cf98170e03e453b0866d0e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as_char_lists&lt;/code&gt; value in &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</source>
          <target state="translated">&lt;code&gt;:as_char_lists&lt;/code&gt; значение &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html#t:t/0&quot;&gt; &lt;code&gt;Inspect.Opts.t/0&lt;/code&gt; &lt;/a&gt; типа</target>
        </trans-unit>
        <trans-unit id="a193be5bdbb46f900203a45e88e7da67185a2c99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as_char_lists&lt;/code&gt; value in &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</source>
          <target state="translated">&lt;code&gt;:as_char_lists&lt;/code&gt; значение &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt; &lt;code&gt;Inspect.Opts.t/0&lt;/code&gt; &lt;/a&gt; типа</target>
        </trans-unit>
        <trans-unit id="87a4c0055bcfdec950152ed8097ff43cabc13d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as_charlists&lt;/code&gt; value (v1.3)</source>
          <target state="translated">&lt;code&gt;:as_charlists&lt;/code&gt; значение as_charlists (v1.3)</target>
        </trans-unit>
        <trans-unit id="773c5585973d244ca06db6b9e506648f27b7ecf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assert_receive_timeout&lt;/code&gt; - the timeout to be used on &lt;code&gt;assert_receive&lt;/code&gt; calls in milliseconds, defaults to &lt;code&gt;100&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:assert_receive_timeout&lt;/code&gt; - таймаут, который будет использоваться при &lt;code&gt;assert_receive&lt;/code&gt; в миллисекундах, по умолчанию &lt;code&gt;100&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="1205e1c5ed1bb5f3aa1831f2aec5365c2277fb15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:async&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, the request for cancellation is synchronous. When &lt;code&gt;true&lt;/code&gt;, the request for cancellation is asynchronous, meaning that the request to cancel the timer is issued and &lt;code&gt;:ok&lt;/code&gt; is returned right away. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:async&lt;/code&gt; - (логическое) если &lt;code&gt;false&lt;/code&gt; , запрос на отмену синхронный. Если установлено значение &lt;code&gt;true&lt;/code&gt; , запрос на отмену является асинхронным, что означает, что запрос на отмену таймера выдается и сразу же возвращается &lt;code&gt;:ok&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70717c3aa296e089f4c263b2d126aba4c02882b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:async&lt;/code&gt; - configures tests in this module to run concurrently with tests in other modules. Tests in the same module never run concurrently. It should be enabled only if tests do not change any global state. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:async&lt;/code&gt; - настраивает тесты в этом модуле для запуска одновременно с тестами в других модулях. Тесты в одном модуле никогда не запускаются одновременно. Его следует включать только в том случае, если тесты не изменяют какое-либо глобальное состояние. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b538ec5bfa5f7de2c886ae97bf16b53b5fb313f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:async&lt;/code&gt; - if the test case is in async mode</source>
          <target state="translated">&lt;code&gt;:async&lt;/code&gt; - если тестовый пример находится в асинхронном режиме</target>
        </trans-unit>
        <trans-unit id="51fba88cf8c4b9e78d9a2cf96e8a1c08a62bcbf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:attributes&lt;/code&gt; - a keyword list with all persisted attributes</source>
          <target state="translated">&lt;code&gt;:attributes&lt;/code&gt; - список ключевых слов со всеми сохраненными атрибутами</target>
        </trans-unit>
        <trans-unit id="4b2e695b6cbfd2b85c207c5e2c98f2077a60b202" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:autorun&lt;/code&gt; - if ExUnit should run by default on exit. Defaults to &lt;code&gt;true&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:autorun&lt;/code&gt; - если ExUnit должен запускаться по умолчанию при выходе. По умолчанию &lt;code&gt;true&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="1c8059405d3cdce4a528b9cd4ac86ebc56cdad49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:backends&lt;/code&gt; - the backends to be used. Defaults to &lt;code&gt;[:console]&lt;/code&gt;. See the &quot;Backends&quot; section for more information.</source>
          <target state="translated">&lt;code&gt;:backends&lt;/code&gt; - используемые бэкэнды. По умолчанию &lt;code&gt;[:console]&lt;/code&gt; . См. Раздел &amp;laquo;Backends&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ef85c6df134efeb6d027f68a4dbc0c2b206bdc36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:base&lt;/code&gt; - prints integers as &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:octal&lt;/code&gt;, &lt;code&gt;:decimal&lt;/code&gt;, or &lt;code&gt;:hex&lt;/code&gt;, defaults to &lt;code&gt;:decimal&lt;/code&gt;. When inspecting binaries any &lt;code&gt;:base&lt;/code&gt; other than &lt;code&gt;:decimal&lt;/code&gt; implies &lt;code&gt;binaries: :as_binaries&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:base&lt;/code&gt; - печатает целые числа , как &lt;code&gt;:binary&lt;/code&gt; , &lt;code&gt;:octal&lt;/code&gt; , &lt;code&gt;:decimal&lt;/code&gt; , или &lt;code&gt;:hex&lt;/code&gt; , по умолчанию &lt;code&gt;:decimal&lt;/code&gt; . При проверке двоичных файлов любая &lt;code&gt;:base&lt;/code&gt; кроме &lt;code&gt;:decimal&lt;/code&gt; подразумевает &lt;code&gt;binaries: :as_binaries&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44acdacb2cb9ed52bb1002463b3930e428b73fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:beam_timestamp&lt;/code&gt; - the modification timestamp to give all BEAM files</source>
          <target state="translated">&lt;code&gt;:beam_timestamp&lt;/code&gt; - отметка времени модификации для всех файлов BEAM</target>
        </trans-unit>
        <trans-unit id="f16fbc09bb3058aafa36663da21da5ec090b4fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binaries&lt;/code&gt; - when &lt;code&gt;:as_binaries&lt;/code&gt; all binaries will be printed in bit syntax.</source>
          <target state="translated">&lt;code&gt;:binaries&lt;/code&gt; - когда &lt;code&gt;:as_binaries&lt;/code&gt; все двоичные файлы будут напечатаны в битовом синтаксисе.</target>
        </trans-unit>
        <trans-unit id="ad6382784af12dd21fc39d66a5c2bb24fff27b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binaries&lt;/code&gt; - when &lt;code&gt;:as_strings&lt;/code&gt; all binaries will be printed as strings, non-printable bytes will be escaped.</source>
          <target state="translated">&lt;code&gt;:binaries&lt;/code&gt; - когда &lt;code&gt;:as_strings&lt;/code&gt; все двоичные файлы будут напечатаны как строки, непечатаемые байты будут экранированы.</target>
        </trans-unit>
        <trans-unit id="eef142091f0ed044b0ee7bcd02501cb51f8695ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binary&lt;/code&gt; - opens the file in binary mode, disabling special handling of Unicode sequences (default mode).</source>
          <target state="translated">&lt;code&gt;:binary&lt;/code&gt; - открывает файл в двоичном режиме, отключая специальную обработку последовательностей Unicode (режим по умолчанию).</target>
        </trans-unit>
        <trans-unit id="5d8a31615330118b7cb2718da80ba80b28070bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binary&lt;/code&gt; - opens the file in binary mode, disabling special handling of unicode sequences (default mode).</source>
          <target state="translated">&lt;code&gt;:binary&lt;/code&gt; - открывает файл в двоичном режиме, отключая специальную обработку последовательностей Unicode (режим по умолчанию).</target>
        </trans-unit>
        <trans-unit id="3c45124a259150c99e6b6f5feb4f0b7589e6e20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:bind_quoted&lt;/code&gt; - passes a binding to the macro. Whenever a binding is given, &lt;a href=&quot;#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt; is automatically disabled.</source>
          <target state="translated">&lt;code&gt;:bind_quoted&lt;/code&gt; - передает привязку к макросу. Всякий раз, когда дается привязка, &lt;a href=&quot;#unquote/1&quot;&gt; &lt;code&gt;unquote/1&lt;/code&gt; &lt;/a&gt; автоматически отключается.</target>
        </trans-unit>
        <trans-unit id="24c305373a10b201f7857da615524911c9e2994d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:bind_quoted&lt;/code&gt; will translate to the same code as the example above. &lt;code&gt;:bind_quoted&lt;/code&gt; can be used in many cases and is seen as good practice, not only because it helps prevent us from running into common mistakes, but also because it allows us to leverage other tools exposed by macros, such as unquote fragments discussed in some sections below.</source>
          <target state="translated">&lt;code&gt;:bind_quoted&lt;/code&gt; преобразуется в тот же код, что и в примере выше. &lt;code&gt;:bind_quoted&lt;/code&gt; может использоваться во многих случаях и считается хорошей практикой не только потому, что он помогает нам избежать распространенных ошибок, но также потому, что он позволяет нам использовать другие инструменты, предоставляемые макросами, такие как фрагменты удаления кавычек, обсуждаемые в некоторых разделах ниже.</target>
        </trans-unit>
        <trans-unit id="e75f055662a966c3ac4d23b1f65a615d6ed0a5d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binding&lt;/code&gt; - an initial set of variables for the evaluator</source>
          <target state="translated">&lt;code&gt;:binding&lt;/code&gt; - начальный набор переменных для оценщика</target>
        </trans-unit>
        <trans-unit id="e5627a6848f16665e3976cd59c764cb2f9240492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:blame_diff&lt;/code&gt; - ... when blaming source with no match</source>
          <target state="translated">&lt;code&gt;:blame_diff&lt;/code&gt; - ... при обвинении источника без совпадения</target>
        </trans-unit>
        <trans-unit id="c81ff59c85fc924fa179aea38251f0610f37d711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:boolean&lt;/code&gt; - sets the value to &lt;code&gt;true&lt;/code&gt; when given (see also the &quot;Negation switches&quot; section below)</source>
          <target state="translated">&lt;code&gt;:boolean&lt;/code&gt; - устанавливает значение &lt;code&gt;true&lt;/code&gt; , если оно задано (см. также раздел &amp;laquo;Переключатели отрицания&amp;raquo; ниже)</target>
        </trans-unit>
        <trans-unit id="b2146465ff9f1024d7529f70ab1053d94595c299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:boot_scripts&lt;/code&gt; - a map of boot scripts with the boot script name as key and a keyword list with &lt;strong&gt;all&lt;/strong&gt; applications that are part of it and their modes as value</source>
          <target state="translated">&lt;code&gt;:boot_scripts&lt;/code&gt; - карта сценариев загрузки с именем сценария загрузки в качестве ключа и список ключевых слов со &lt;strong&gt;всеми&lt;/strong&gt; приложениями, которые являются его частью, и их режимами в качестве значения</target>
        </trans-unit>
        <trans-unit id="af269ab1f373eed4ebf588209c6d7519011e2b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:branch&lt;/code&gt; - the Git branch to checkout</source>
          <target state="translated">&lt;code&gt;:branch&lt;/code&gt; - ветка Git для оформления заказа</target>
        </trans-unit>
        <trans-unit id="2f4a71a8a1979c21f1b4c022926a0137a6279455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:break&lt;/code&gt; - If &lt;code&gt;:strict&lt;/code&gt;, always break between each element. If &lt;code&gt;:flex&lt;/code&gt;, breaks only when necessary. If &lt;code&gt;:maybe&lt;/code&gt;, chooses &lt;code&gt;:flex&lt;/code&gt; only if all elements are text-based, otherwise is &lt;code&gt;:strict&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:break&lt;/code&gt; - Если &lt;code&gt;:strict&lt;/code&gt; , всегда разрыв между элементами. Если &lt;code&gt;:flex&lt;/code&gt; , ломается только при необходимости. Если &lt;code&gt;:maybe&lt;/code&gt; , выбирает &lt;code&gt;:flex&lt;/code&gt; , только если все элементы являются текстовыми, иначе &lt;code&gt;:strict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="314b0f0cc6b1b6cfd34d23a546b65d0e3cb10d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brutal_kill&lt;/code&gt; - the child process is unconditionally and immediately terminated using &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:brutal_kill&lt;/code&gt; - дочерний процесс безоговорочно и немедленно завершается с помощью &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="500eb8b45714f83acf97bca387c62cc53f3e9ab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brutal_kill&lt;/code&gt; - the child process is unconditionally terminated using &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:brutal_kill&lt;/code&gt; - дочерний процесс безоговорочно завершается с помощью &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4eded5f5526c4d93d705fb757c6fa9c41a88419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brutal_kill&lt;/code&gt;: the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is killed and so &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt; is not called.</source>
          <target state="translated">&lt;code&gt;:brutal_kill&lt;/code&gt; : &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; убит, поэтому &lt;a href=&quot;#c:terminate/2&quot;&gt; &lt;code&gt;terminate/2&lt;/code&gt; &lt;/a&gt; не вызывается.</target>
        </trans-unit>
        <trans-unit id="0108e8ed764cccaf8a9622769a03ccd87ef72f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build&lt;/code&gt; - the Elixir version, short Git revision hash and Erlang/OTP release it was compiled with</source>
          <target state="translated">&lt;code&gt;:build&lt;/code&gt; - версия Elixir, короткий хеш ревизии Git и версия Erlang / OTP, с которой она была скомпилирована</target>
        </trans-unit>
        <trans-unit id="4824520c87255a8ae92b31057e50421c5984aca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build_embedded&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, embeds all code and priv content in the &lt;code&gt;_build&lt;/code&gt; directory instead of using symlinks.</source>
          <target state="translated">&lt;code&gt;:build_embedded&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , встраивает весь код и приватное содержимое в каталог &lt;code&gt;_build&lt;/code&gt; вместо использования символических ссылок.</target>
        </trans-unit>
        <trans-unit id="4b5484c26fc9650759dc8657559a91cb44689618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build_path&lt;/code&gt; - the directory where build artifacts should be written to. This option is intended only for child apps within a larger umbrella application so that each child app can use the common &lt;code&gt;_build&lt;/code&gt; directory of the parent umbrella. In a non-umbrella context, configuring this has undesirable side-effects (such as skipping some compiler checks) and should be avoided.</source>
          <target state="translated">&lt;code&gt;:build_path&lt;/code&gt; - каталог, в который должны быть записаны артефакты сборки. Этот параметр предназначен только для дочерних приложений в более крупном зонтичном приложении, поэтому каждое дочернее приложение может использовать общий каталог &lt;code&gt;_build&lt;/code&gt; родительского зонтика. В контексте, не являющемся зонтичным, такая настройка имеет нежелательные побочные эффекты (например, пропуск некоторых проверок компилятора), и ее следует избегать.</target>
        </trans-unit>
        <trans-unit id="dd99a2c33b55d1a69a9587b4bb0af10426a0b947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build_per_environment&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, builds will be &lt;em&gt;per-environment&lt;/em&gt;. If &lt;code&gt;false&lt;/code&gt;, builds will go in &lt;code&gt;_build/shared&lt;/code&gt; regardless of the Mix environment. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:build_per_environment&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , сборки будут для &lt;em&gt;среды&lt;/em&gt; . Если &lt;code&gt;false&lt;/code&gt; , сборки будут идти в &lt;code&gt;_build/shared&lt;/code&gt; независимо от среды Mix. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d0167414ab3cf6453dfc901a3d259f8711132ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:callee&lt;/code&gt; - a tuple containing the module, function, and arity of the call</source>
          <target state="translated">&lt;code&gt;:callee&lt;/code&gt; - кортеж, содержащий модуль, функцию и арность вызова</target>
        </trans-unit>
        <trans-unit id="85ae32a071915b3533546d64e72c73927eeb9ae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:caller_module&lt;/code&gt; - the module where the function is called</source>
          <target state="translated">&lt;code&gt;:caller_module&lt;/code&gt; - модуль, в котором вызывается функция</target>
        </trans-unit>
        <trans-unit id="ef939268ba77317d76f85a3b7dd66198140767ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:callers&lt;/code&gt; - prints detailed information about immediate callers and called functions</source>
          <target state="translated">&lt;code&gt;:callers&lt;/code&gt; - выводит подробную информацию о вызывающих абонентах и ​​вызываемых функциях.</target>
        </trans-unit>
        <trans-unit id="e2ab4664ff39cf3a52162945342d572197e78f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:calls&lt;/code&gt; - filters out any results with a call count lower than this</source>
          <target state="translated">&lt;code&gt;:calls&lt;/code&gt; - отфильтровывает любые результаты с меньшим количеством звонков</target>
        </trans-unit>
        <trans-unit id="2bd1894f5a3f5a30fcd5c811ec646b681b9c1263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture&lt;/code&gt; - what to capture in the result. Check the moduledoc for &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; to see the possible capture values.</source>
          <target state="translated">&lt;code&gt;:capture&lt;/code&gt; - что захватить в результате. Проверьте moduledoc для &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; ,&lt;/a&gt; чтобы увидеть возможные значения захвата.</target>
        </trans-unit>
        <trans-unit id="6d8b30c9bda8b9d5c925c50ff71b04cc0624b302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture_log&lt;/code&gt; - if ExUnit should default to keeping track of log messages and print them on test failure. Can be overridden for individual tests via &lt;code&gt;@tag capture_log: false&lt;/code&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:capture_log&lt;/code&gt; - если ExUnit должен по умолчанию отслеживать сообщения журнала и распечатывать их при ошибке теста. Можно переопределить для отдельных тестов с помощью &lt;code&gt;@tag capture_log: false&lt;/code&gt; . По умолчанию &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="eb32d02cd5e283de334001ed1dbc2a75c5e14397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture_log&lt;/code&gt; - see the &quot;Log Capture&quot; section below</source>
          <target state="translated">&lt;code&gt;:capture_log&lt;/code&gt; - см. раздел &amp;laquo; Запись журнала&amp;raquo; ниже</target>
        </trans-unit>
        <trans-unit id="54063bbf44c35e20d14340a49f2b03ea65e7f87c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture_prompt&lt;/code&gt; - Define if prompts (specified as arguments to &lt;code&gt;IO.get*&lt;/code&gt; functions) should be captured. Defaults to &lt;code&gt;true&lt;/code&gt;. For IO devices other than &lt;code&gt;:stdio&lt;/code&gt;, the option is ignored.</source>
          <target state="translated">&lt;code&gt;:capture_prompt&lt;/code&gt; - Определить, следует ли захватывать &lt;code&gt;IO.get*&lt;/code&gt; (указанные как аргументы для функций IO.get * ). По умолчанию &lt;code&gt;true&lt;/code&gt; . Для устройств ввода-вывода, отличных от &lt;code&gt;:stdio&lt;/code&gt; , этот параметр игнорируется.</target>
        </trans-unit>
        <trans-unit id="a976aeccf8b136b23d96243573d5ad3f90feff55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture_prompt&lt;/code&gt; - if set to &lt;code&gt;true&lt;/code&gt;, prompts (specified as arguments to &lt;code&gt;IO.get*&lt;/code&gt; functions) are captured in the output. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:capture_prompt&lt;/code&gt; - если установлено значение &lt;code&gt;true&lt;/code&gt; , подсказки (указанные как аргументы для функций &lt;code&gt;IO.get*&lt;/code&gt; ) захватываются в выводе. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e71fb20ea5f67c8b80dc6f80c30eb36f8786b79e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:case&lt;/code&gt; - specifies the character case to accept when decoding</source>
          <target state="translated">&lt;code&gt;:case&lt;/code&gt; - указывает регистр символов, принимаемый при декодировании</target>
        </trans-unit>
        <trans-unit id="16866b7a1d0f42f9879a9ae9c5c4f646d1217a30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:case&lt;/code&gt; - specifies the character case to use when encoding</source>
          <target state="translated">&lt;code&gt;:case&lt;/code&gt; - указывает регистр символов, используемый при кодировании</target>
        </trans-unit>
        <trans-unit id="e642546d5bded6195f0157312815d897717be000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cd&lt;/code&gt; - (since v1.11.0) the directory to run the command in</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; - (начиная с v1.11.0) каталог для запуска команды в</target>
        </trans-unit>
        <trans-unit id="21508534dad45b8bec3ece213d2d2a6622d96eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cd&lt;/code&gt; - the directory to run the command in</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; - каталог для запуска команды в</target>
        </trans-unit>
        <trans-unit id="7ba1729080d1b351e1e8d635eac4ee4899f67663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:char_lists&lt;/code&gt; key in &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</source>
          <target state="translated">&lt;code&gt;:char_lists&lt;/code&gt; ключ в &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html#t:t/0&quot;&gt; &lt;code&gt;Inspect.Opts.t/0&lt;/code&gt; &lt;/a&gt; типа</target>
        </trans-unit>
        <trans-unit id="54d002aa167c3fc26d4d02239a204fbde9f4f9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:char_lists&lt;/code&gt; key in &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</source>
          <target state="translated">&lt;code&gt;:char_lists&lt;/code&gt; ключ в &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt; &lt;code&gt;Inspect.Opts.t/0&lt;/code&gt; &lt;/a&gt; типа</target>
        </trans-unit>
        <trans-unit id="864527a5099f3d301dca0b94a93fcfccd5332eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charlist&lt;/code&gt; - when this term is given, read operations on the file will return charlists rather than binaries.</source>
          <target state="translated">&lt;code&gt;:charlist&lt;/code&gt; - когда указан этот термин, операции чтения файла будут возвращать списки символов, а не двоичные файлы.</target>
        </trans-unit>
        <trans-unit id="4cf2f98473b195ebd5a623fec480eec38f98f68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charlists&lt;/code&gt; - when &lt;code&gt;:as_charlists&lt;/code&gt; all lists will be printed as charlists, non-printable elements will be escaped.</source>
          <target state="translated">&lt;code&gt;:charlists&lt;/code&gt; - когда &lt;code&gt;:as_charlists&lt;/code&gt; все списки будут напечатаны как списки символов, непечатаемые элементы будут экранированы.</target>
        </trans-unit>
        <trans-unit id="773bfbbd557b43af1872e6c9b5cc9dd563a09fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charlists&lt;/code&gt; key (v1.3)</source>
          <target state="translated">&lt;code&gt;:charlists&lt;/code&gt; ключ charlists (v1.3)</target>
        </trans-unit>
        <trans-unit id="3782c750c5692ac9621a03107c88a98232424894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:closing&lt;/code&gt; - contains metadata about the closing pair, such as a &lt;code&gt;}&lt;/code&gt; in a tuple or in a map, or such as the closing &lt;code&gt;)&lt;/code&gt; in a function call with parens. The &lt;code&gt;:closing&lt;/code&gt; does not delimit the end of expression if there are &lt;code&gt;:do&lt;/code&gt; and &lt;code&gt;:end&lt;/code&gt; metadata (when &lt;code&gt;:token_metadata&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;:closing&lt;/code&gt; - содержит метаданные о закрывающей паре, такие как a &lt;code&gt;}&lt;/code&gt; в кортеже или на карте, или такие как закрытие &lt;code&gt;)&lt;/code&gt; в вызове функции с скобками. &lt;code&gt;:closing&lt;/code&gt; не разграничивает конец выражения , если существует &lt;code&gt;:do&lt;/code&gt; и &lt;code&gt;:end&lt;/code&gt; метаданные (когда &lt;code&gt;:token_metadata&lt;/code&gt; верно)</target>
        </trans-unit>
        <trans-unit id="b399bf660245a512224a34cb7d080da4c3c5f5b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:colors&lt;/code&gt; - a keyword list of color options to be used by some formatters:</source>
          <target state="translated">&lt;code&gt;:colors&lt;/code&gt; - список ключевых слов параметров цвета, который будет использоваться некоторыми программами форматирования:</target>
        </trans-unit>
        <trans-unit id="70fae83d098f90d9742bc1d8962c366ab05ab9d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:colors&lt;/code&gt; - a keyword list of coloring options.</source>
          <target state="translated">&lt;code&gt;:colors&lt;/code&gt; - список ключевых слов вариантов раскраски.</target>
        </trans-unit>
        <trans-unit id="e033c888260b3113e091932a43193eb0cfdcb129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:colors&lt;/code&gt; - a keyword list of colors to be used by some formatters. The only option so far is &lt;code&gt;[enabled: boolean]&lt;/code&gt; which defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:colors&lt;/code&gt; - список ключевых слов цветов, которые будут использоваться некоторыми программами форматирования. На данный момент единственный вариант - &lt;code&gt;[enabled: boolean]&lt;/code&gt; умолчанию это &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt; &lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="e47c99025ee51ee42379d1e36b5d9c48e1298d21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:column&lt;/code&gt; - (since v1.11.0) the starting column of the string being parsed. Defaults to 1.</source>
          <target state="translated">&lt;code&gt;:column&lt;/code&gt; - (начиная с v1.11.0) начальный столбец анализируемой строки. По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="82e95cf54c1075a7ff680047be8e2cecf51134db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:column&lt;/code&gt; - the column number of the AST node (when &lt;code&gt;:columns&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;:column&lt;/code&gt; - номер столбца узла AST (когда &lt;code&gt;:columns&lt;/code&gt; истинно)</target>
        </trans-unit>
        <trans-unit id="bc7ea4612df433c6d6a52f40d6ecdce8939022e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:columns&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, attach a &lt;code&gt;:column&lt;/code&gt; key to the quoted metadata. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:columns&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , присоединить ключ &lt;code&gt;:column&lt;/code&gt; к цитируемым метаданным. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b0bb6b405ded48dd2b80233764246532f1bc166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:comment&lt;/code&gt; - comment line to follow shebang directive in the escript. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:comment&lt;/code&gt; - строка комментария для следования директиве shebang в escript. По умолчанию &lt;code&gt;&quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44e5f44f2d2d0dc61a0facf8a51c018903af6f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile&lt;/code&gt; - a command (string) to compile the dependency; defaults to a &lt;code&gt;mix&lt;/code&gt;, &lt;code&gt;rebar&lt;/code&gt; or &lt;code&gt;make&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;:compile&lt;/code&gt; - команда (строка) для компиляции зависимости; по умолчанию используется команда &lt;code&gt;mix&lt;/code&gt; , &lt;code&gt;rebar&lt;/code&gt; или &lt;code&gt;make&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a7ce00c3fdd346c7c28a9ad3b30ec5a6219d039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile&lt;/code&gt; - a list with compiler metadata</source>
          <target state="translated">&lt;code&gt;:compile&lt;/code&gt; - список с метаданными компилятора</target>
        </trans-unit>
        <trans-unit id="40c6d6c98cf43e4fd869e672eca174e134a26d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_application&lt;/code&gt; - sets the &lt;code&gt;:application&lt;/code&gt; metadata value to the configured value at compilation time. This configuration is automatically set by Mix and made available as metadata when logging.</source>
          <target state="translated">&lt;code&gt;:compile_time_application&lt;/code&gt; - устанавливает значение метаданных &lt;code&gt;:application&lt;/code&gt; равным настроенному значению во время компиляции. Эта конфигурация автоматически устанавливается Mix и становится доступной в виде метаданных при регистрации.</target>
        </trans-unit>
        <trans-unit id="0e002f290bf581858fcbce0a01cac58885e7e4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_application&lt;/code&gt; - sets the &lt;code&gt;:application&lt;/code&gt; metadata value to the configured value at compilation time. This configuration is usually only useful for build tools to automatically add the application to the metadata for &lt;a href=&quot;logger#debug/2&quot;&gt;&lt;code&gt;Logger.debug/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;logger#info/2&quot;&gt;&lt;code&gt;Logger.info/2&lt;/code&gt;&lt;/a&gt;, etc. style of calls.</source>
          <target state="translated">&lt;code&gt;:compile_time_application&lt;/code&gt; - устанавливает значение метаданных &lt;code&gt;:application&lt;/code&gt; равным настроенному значению во время компиляции. Эта конфигурация обычно полезна только для инструментов сборки, чтобы автоматически добавлять приложение в метаданные для стиля вызовов &lt;a href=&quot;logger#debug/2&quot;&gt; &lt;code&gt;Logger.debug/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;logger#info/2&quot;&gt; &lt;code&gt;Logger.info/2&lt;/code&gt; &lt;/a&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="d9c1e56a0d6464ad91b303dc03acbbf4f40e5251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_purge_level&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; app environment</source>
          <target state="translated">&lt;code&gt;:compile_time_purge_level&lt;/code&gt; в среде приложения &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0b6bde1dfdbdb0192aa284dd56c5604692f0bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; - purges &lt;em&gt;at compilation time&lt;/em&gt; all calls that match the given conditions. This means that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; calls with level lower than this option will be completely removed at compile time, accruing no overhead at runtime. This configuration expects a list of keyword lists. Each keyword list contains a metadata key and the matching value that should be purged. A special key named &lt;code&gt;:level_lower_than&lt;/code&gt; can be used to purge all messages with a lower logger level. Remember that if you want to purge log calls from a dependency, the dependency must be recompiled.</source>
          <target state="translated">&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; - очищает &lt;em&gt;во время компиляции&lt;/em&gt; все вызовы, соответствующие заданным условиям. Это означает, что вызовы &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; с уровнем ниже, чем эта опция, будут полностью удалены во время компиляции, не увеличивая накладных расходов во время выполнения. Эта конфигурация ожидает список списков ключевых слов. Каждый список ключевых слов содержит ключ метаданных и соответствующее значение, которое следует удалить. Специальный ключ с именем &lt;code&gt;:level_lower_than&lt;/code&gt; может использоваться для очистки всех сообщений с более низким уровнем регистратора. Помните, что если вы хотите очистить вызовы журнала от зависимости, зависимость необходимо перекомпилировать.</target>
        </trans-unit>
        <trans-unit id="d3a46f3d823404cc6ef5e32e30a969dc0227cbcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; - purges &lt;em&gt;at compilation time&lt;/em&gt; all calls that match the given conditions. This means that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; calls with level lower than this option will be completely removed at compile time, accruing no overhead at runtime. This configuration expects a list of keyword lists. Each keyword list contains a metadata key and the matching value that should be purged. Some special keys are supported:</source>
          <target state="translated">&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; - удаляет &lt;em&gt;во время компиляции&lt;/em&gt; все вызовы, соответствующие заданным условиям. Это означает, что вызовы &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; с уровнем ниже, чем эта опция, будут полностью удалены во время компиляции, не увеличивая накладных расходов во время выполнения. Эта конфигурация ожидает список списков ключевых слов. Каждый список ключевых слов содержит ключ метаданных и соответствующее значение, которое следует удалить. Поддерживаются некоторые специальные ключи:</target>
        </trans-unit>
        <trans-unit id="c23a3f29a6692f7899b7fee3702489447b3e2be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; app environment (v1.7)</source>
          <target state="translated">&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; в среде приложения &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; (v1.7)</target>
        </trans-unit>
        <trans-unit id="45d5355a301472cd1f663107bd6a4986887a9f9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compilers&lt;/code&gt; - compilers to run, defaults to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#compilers/0&quot;&gt;&lt;code&gt;Mix.compilers/0&lt;/code&gt;&lt;/a&gt;, which are &lt;code&gt;[:yecc, :leex, :erlang, :elixir, :app]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:compilers&lt;/code&gt; - компиляторы для запуска, по умолчанию &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#compilers/0&quot;&gt; &lt;code&gt;Mix.compilers/0&lt;/code&gt; &lt;/a&gt; , то есть &lt;code&gt;[:yecc, :leex, :erlang, :elixir, :app]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fef4d56e6d5f352d2eff46ec9e2c0a7f3e55a258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compilers&lt;/code&gt; - compilers to run, defaults to &lt;a href=&quot;mix#compilers/0&quot;&gt;&lt;code&gt;Mix.compilers/0&lt;/code&gt;&lt;/a&gt;, which are &lt;code&gt;[:yecc, :leex, :erlang, :elixir, :xref, :app]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:compilers&lt;/code&gt; - компиляторы для запуска, по умолчанию &lt;a href=&quot;mix#compilers/0&quot;&gt; &lt;code&gt;Mix.compilers/0&lt;/code&gt; &lt;/a&gt; , то есть &lt;code&gt;[:yecc, :leex, :erlang, :elixir, :xref, :app]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26d947e4118c95ae88ec5e2804d30860c642617e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compressed&lt;/code&gt; - makes it possible to read or write gzip compressed files.</source>
          <target state="translated">&lt;code&gt;:compressed&lt;/code&gt; - позволяет читать или записывать файлы, сжатые gzip.</target>
        </trans-unit>
        <trans-unit id="360858d505123f225c8071b11354794cec2ec9ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:config_path&lt;/code&gt; - a string representing the path of the main config file. See &lt;a href=&quot;#config_files/0&quot;&gt;&lt;code&gt;config_files/0&lt;/code&gt;&lt;/a&gt; for more information. Defaults to &lt;code&gt;&quot;config/config.exs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:config_path&lt;/code&gt; - строка, представляющая путь к основному файлу конфигурации. См. &lt;a href=&quot;#config_files/0&quot;&gt; &lt;code&gt;config_files/0&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации. По умолчанию &lt;code&gt;&quot;config/config.exs&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8c44f173a42f43a18c9f61425463a82c1877e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:config_providers&lt;/code&gt; - a list of &lt;code&gt;{config_provider, term}&lt;/code&gt; tuples where the first element is a module that implements the &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Provider.html&quot;&gt;&lt;code&gt;Config.Provider&lt;/code&gt;&lt;/a&gt; behaviour and &lt;code&gt;term&lt;/code&gt; is the value given to it on &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Provider.html#c:init/1&quot;&gt;&lt;code&gt;Config.Provider.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:config_providers&lt;/code&gt; - список кортежей &lt;code&gt;{config_provider, term}&lt;/code&gt; где первый элемент - это модуль, реализующий поведение &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Provider.html&quot;&gt; &lt;code&gt;Config.Provider&lt;/code&gt; ,&lt;/a&gt; а &lt;code&gt;term&lt;/code&gt; - это значение, присвоенное ему в &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Provider.html#c:init/1&quot;&gt; &lt;code&gt;Config.Provider.init/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="918fceb334c9e58eef01b4d6734748734cd8fe0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:config_providers&lt;/code&gt; - a list of tuples with custom config providers. See &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Provider.html&quot;&gt;&lt;code&gt;Config.Provider&lt;/code&gt;&lt;/a&gt; for more information. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:config_providers&lt;/code&gt; - список кортежей с настраиваемыми поставщиками конфигурации. См. &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Provider.html&quot;&gt; &lt;code&gt;Config.Provider&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3ae31ccf107015968b992bab69027e0706435bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:console&lt;/code&gt; - logs messages to the console (enabled by default)</source>
          <target state="translated">&lt;code&gt;:console&lt;/code&gt; - выводить сообщения в консоль (по умолчанию включено)</target>
        </trans-unit>
        <trans-unit id="c3f29d28cd3787157664a0925f5ceb0ee2cd6162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:consolidate_protocols&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, runs protocol consolidation via the &lt;code&gt;compile.protocols&lt;/code&gt; task. The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:consolidate_protocols&lt;/code&gt; - когда &lt;code&gt;true&lt;/code&gt; , идет консолидация протокола через &lt;code&gt;compile.protocols&lt;/code&gt; задачи. Значение по умолчанию - &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c1164c25317f2871f53de609b2457c7b6d769ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:consolidated?&lt;/code&gt; - returns whether the protocol is consolidated</source>
          <target state="translated">&lt;code&gt;:consolidated?&lt;/code&gt; - возвращает, консолидирован ли протокол</target>
        </trans-unit>
        <trans-unit id="b1a617523747506294cfff867728cd74ca9ea565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cont&lt;/code&gt; - the enumeration should continue</source>
          <target state="translated">&lt;code&gt;:cont&lt;/code&gt; - перечисление следует продолжить</target>
        </trans-unit>
        <trans-unit id="032f4c07410573af397c4dee186d8166ca757d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:context&lt;/code&gt; - Defines the context in which the AST was generated. For example, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt; will include the module calling &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt; as the context. This is often used to distinguish regular code from code generated by a macro or by &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; - Определяет контекст, в котором был создан AST. Например, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;quote/2&lt;/code&gt; &lt;/a&gt; будет включать модуль, вызывающий &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;quote/2&lt;/code&gt; &lt;/a&gt; в качестве контекста. Это часто используется, чтобы отличить обычный код от кода, созданного макросом или &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;quote/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="312e96f5abb41a11aa4d2ca265e6662b9de8270c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:context&lt;/code&gt; - sets the resolution context.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; - устанавливает контекст разрешения.</target>
        </trans-unit>
        <trans-unit id="257bc626dcfc78a08e1e2b7e6d5cdbf6daafc08b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:continuation_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; and more input is expected</source>
          <target state="translated">&lt;code&gt;:continuation_prompt&lt;/code&gt; - используется, когда &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt; &lt;code&gt;Node.alive?/0&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;false&lt;/code&gt; и ожидается дополнительный ввод</target>
        </trans-unit>
        <trans-unit id="43385c292df6df45c75733e23e1946b75729ef4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cookie&lt;/code&gt; - a string representing the Erlang Distribution cookie. If this option is not set, a random cookie is written to the &lt;code&gt;releases/COOKIE&lt;/code&gt; file when the first release is assembled. At runtime, we will first attempt to fetch the cookie from the &lt;code&gt;RELEASE_COOKIE&lt;/code&gt; environment variable and then we'll read the &lt;code&gt;releases/COOKIE&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;:cookie&lt;/code&gt; - строка, представляющая файл cookie распространения Erlang. Если этот параметр не установлен, в файл &lt;code&gt;releases/COOKIE&lt;/code&gt; записывается случайный cookie- файл при сборке первого выпуска. Во время выполнения мы сначала попытаемся получить cookie из &lt;code&gt;RELEASE_COOKIE&lt;/code&gt; среды RELEASE_COOKIE, а затем прочитаем файл release &lt;code&gt;releases/COOKIE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45e7aa3927c034de9a5e74418ba211afa85591ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:count&lt;/code&gt; - counts the number of times the switch is given</source>
          <target state="translated">&lt;code&gt;:count&lt;/code&gt; - подсчитывает количество нажатий переключателя</target>
        </trans-unit>
        <trans-unit id="09c2e49135c8b4c3aab273b92b44809f3c193487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:counter&lt;/code&gt; - The variable counter used for variable hygiene. In terms of the compiler, each variable is identified by the combination of either &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;metadata[:counter]&lt;/code&gt;, or &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:counter&lt;/code&gt; - переменный счетчик, используемый для переменной гигиены. С точки зрения компилятора, каждая переменная идентифицируется комбинацией либо &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;metadata[:counter]&lt;/code&gt; , либо &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af4d41f25ac0d75bd759954004651278a6469992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:crash_reason&lt;/code&gt; - a two-element tuple with the throw/error/exit reason as first argument and the stacktrace as second. A throw will always be &lt;code&gt;{:nocatch, term}&lt;/code&gt;. An error is always an &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; struct. All other entries are exits. The console backend ignores this metadata by default but it can be useful to other backends, such as the ones that report errors to third-party services</source>
          <target state="translated">&lt;code&gt;:crash_reason&lt;/code&gt; - двухэлементный кортеж с причиной выброса / ошибки / выхода в качестве первого аргумента и трассировки стека в качестве второго. Бросок всегда будет &lt;code&gt;{:nocatch, term}&lt;/code&gt; . Ошибка всегда является структурой &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; . Все остальные записи - выходы. Бэкэнд консоли игнорирует эти метаданные по умолчанию, но может быть полезен другим бэкэндам, например тем, которые сообщают об ошибках сторонним службам.</target>
        </trans-unit>
        <trans-unit id="a592278e2343426e735edf03be76639edb478d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:critical&lt;/code&gt; - for critical conditions</source>
          <target state="translated">&lt;code&gt;:critical&lt;/code&gt; - для критических условий</target>
        </trans-unit>
        <trans-unit id="978e4e3589383f3a92961254fb2ca4c7019c36cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:custom_options&lt;/code&gt; (since v1.9.0) - a keyword list storing custom user-defined options. Useful when implementing the &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol for nested structs to pass the custom options through.</source>
          <target state="translated">&lt;code&gt;:custom_options&lt;/code&gt; (начиная с версии v1.9.0) - список ключевых слов, в котором хранятся пользовательские параметры. Полезно при реализации &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; протокол вложенными Структуры , чтобы передать пользовательские параметры через.</target>
        </trans-unit>
        <trans-unit id="bad041f28c0f5d18e5ca098270781d96c4bf90a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:custom_options&lt;/code&gt; (since v1.9.0) - a keyword list storing custom user-defined options. Useful when implementing the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol for nested structs to pass the custom options through.</source>
          <target state="translated">&lt;code&gt;:custom_options&lt;/code&gt; (начиная с v1.9.0) - список ключевых слов, в котором хранятся пользовательские параметры. Полезно при реализации &lt;a href=&quot;inspect&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; протокол вложенными Структуры , чтобы передать пользовательские параметры через.</target>
        </trans-unit>
        <trans-unit id="7ba1042479c5c37f3209bbf7d986103d4f5442d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:date&lt;/code&gt; - a string representation of the ISO8601 date and time it was built</source>
          <target state="translated">&lt;code&gt;:date&lt;/code&gt; - строковое представление даты и времени создания ISO8601</target>
        </trans-unit>
        <trans-unit id="dd48bea635d33db662194c4f9d9a4c079d206327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:day_of_week_names&lt;/code&gt; - a function that receives a number and returns the name of the corresponding day of week, if the option is not received it defaults to a function that returns the day of week names in English</source>
          <target state="translated">&lt;code&gt;:day_of_week_names&lt;/code&gt; - функция, которая получает число и возвращает название соответствующего дня недели, если опция не получена, по умолчанию используется функция, которая возвращает названия дней недели на английском языке</target>
        </trans-unit>
        <trans-unit id="6f82f085a250ea7fd0719d7180ec22aed8086392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug&lt;/code&gt; - color for debug messages. Defaults to: &lt;code&gt;:cyan&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; - цвет отладочных сообщений. По умолчанию &lt;code&gt;:cyan&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="681f370fb1331eef535f91a454cc7417a9cad1c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug&lt;/code&gt; - for debug-related messages</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; - для сообщений, связанных с отладкой</target>
        </trans-unit>
        <trans-unit id="8ec3dc955cd25e2703b69e0d1c25a8a24af0b82f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug&lt;/code&gt; - if present, the corresponding function in the &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html&quot;&gt;&lt;code&gt;:sys&lt;/code&gt; module&lt;/a&gt; is invoked</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; - если присутствует, вызывается соответствующая функция в &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html&quot;&gt;модуле &lt;/a&gt; &lt;code&gt;:sys&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a366246852f8587a2d5b667869aea111b89d9e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug_info&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain debug information in the compiled module. This allows a developer to reconstruct the original source code. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:debug_info&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; сохранять отладочную информацию в скомпилированном модуле. Это позволяет разработчику восстановить исходный исходный код. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85e3cdaa771140af392122385503de4094e17406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug_info&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain debug information in the compiled module. This allows a developer to reconstruct the original source code. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:debug_info&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; сохранить отладочную информацию в скомпилированном модуле. Это позволяет разработчику восстановить исходный исходный код. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da4455354fdf5c3fffd2fce8e5f3a011ddb7fcd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:default_prompt&lt;/code&gt; - используется, когда &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt; &lt;code&gt;Node.alive?/0&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="748975cfd744cc0c4c15209a0a65f0a44c13867d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default_task&lt;/code&gt; - a string representing the default task to be run by &lt;code&gt;mix&lt;/code&gt; when no task is specified. Defaults to &lt;code&gt;&quot;run&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:default_task&lt;/code&gt; - строка, представляющая задачу по умолчанию, которая будет запускаться &lt;code&gt;mix&lt;/code&gt; способом, когда задача не указана. По умолчанию &lt;code&gt;&quot;run&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4349740b52fa25b60adb8c75e6f1e2c5e3174407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:delayed_write&lt;/code&gt;, &lt;code&gt;:raw&lt;/code&gt;, &lt;code&gt;:ram&lt;/code&gt;, &lt;code&gt;:read_ahead&lt;/code&gt;, &lt;code&gt;:sync&lt;/code&gt;, &lt;code&gt;{:encoding, ...}&lt;/code&gt;, &lt;code&gt;{:read_ahead, pos_integer}&lt;/code&gt;, &lt;code&gt;{:delayed_write, non_neg_integer, non_neg_integer}&lt;/code&gt; - for more information about these options see &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#open-2&quot;&gt;&lt;code&gt;:file.open/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:delayed_write&lt;/code&gt; , &lt;code&gt;:raw&lt;/code&gt; , &lt;code&gt;:ram&lt;/code&gt; , &lt;code&gt;:read_ahead&lt;/code&gt; , &lt;code&gt;:sync&lt;/code&gt; , &lt;code&gt;{:encoding, ...}&lt;/code&gt; , &lt;code&gt;{:read_ahead, pos_integer}&lt;/code&gt; , &lt;code&gt;{:delayed_write, non_neg_integer, non_neg_integer}&lt;/code&gt; - для получения дополнительной информации об этих параметрах см &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#open-2&quot;&gt; &lt;code&gt;:file.open/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fbd141a6972b5abd0b35fd9a2372889b08992f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:delimiter&lt;/code&gt; - contains the opening delimiter for sigils, strings, and charlists as a string (such as &lt;code&gt;&quot;{&quot;&lt;/code&gt;, &lt;code&gt;&quot;/&quot;&lt;/code&gt;, &lt;code&gt;&quot;'&quot;&lt;/code&gt;, and the like)</source>
          <target state="translated">&lt;code&gt;:delimiter&lt;/code&gt; - содержит открывающий разделитель для сигил, строк и списков символов в виде строки (например, &lt;code&gt;&quot;{&quot;&lt;/code&gt; , &lt;code&gt;&quot;/&quot;&lt;/code&gt; , &lt;code&gt;&quot;'&quot;&lt;/code&gt; и т.п.)</target>
        </trans-unit>
        <trans-unit id="0acca2d3fc1e113a21a83ace1d7ff0278d7145bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deps&lt;/code&gt; - a list of dependencies of this project. Refer to the documentation for the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Deps.html&quot;&gt;&lt;code&gt;Mix.Tasks.Deps&lt;/code&gt;&lt;/a&gt; task for more information. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:deps&lt;/code&gt; - список зависимостей этого проекта. Дополнительные сведения см. В документации по задаче &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Deps.html&quot;&gt; &lt;code&gt;Mix.Tasks.Deps&lt;/code&gt; &lt;/a&gt; . По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98f6e2dc36fcc6b45118ebe7fb97b952e45de6cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deps&lt;/code&gt; - a list of dependencies of this project. Refer to the documentation for the &lt;a href=&quot;mix.tasks.deps&quot;&gt;&lt;code&gt;Mix.Tasks.Deps&lt;/code&gt;&lt;/a&gt; task for more information. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:deps&lt;/code&gt; - список зависимостей этого проекта. Дополнительные сведения см. В документации по задаче &lt;a href=&quot;mix.tasks.deps&quot;&gt; &lt;code&gt;Mix.Tasks.Deps&lt;/code&gt; &lt;/a&gt; . По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c8b1c05b88b106947f059059e28dc60fe86e8e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deps_path&lt;/code&gt; - directory where dependencies are stored. Also see &lt;a href=&quot;#deps_path/1&quot;&gt;&lt;code&gt;deps_path/1&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;&quot;deps&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:deps_path&lt;/code&gt; - каталог, в котором хранятся зависимости. Также см. &lt;a href=&quot;#deps_path/1&quot;&gt; &lt;code&gt;deps_path/1&lt;/code&gt; &lt;/a&gt; . По умолчанию &lt;code&gt;&quot;deps&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65ffa1c92105b5cfc7acab4e0af14311447acdaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:depth&lt;/code&gt; - only returns dependencies to the depth level, a depth of 1 will only return top-level dependencies</source>
          <target state="translated">&lt;code&gt;:depth&lt;/code&gt; - возвращает зависимости только на уровень глубины, глубина 1 возвращает только зависимости верхнего уровня</target>
        </trans-unit>
        <trans-unit id="b8f1874ab0b8fbcc80869d95903a0dd1f91f05c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:describe&lt;/code&gt; - the describe block the test belongs to</source>
          <target state="translated">&lt;code&gt;:describe&lt;/code&gt; - блок описания, к которому принадлежит тест</target>
        </trans-unit>
        <trans-unit id="356c33fd11a467f3b716eeaa3c087835a4642a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:dest&lt;/code&gt; - the destination directory for the BEAM files. When using &lt;a href=&quot;#compile/2&quot;&gt;&lt;code&gt;compile/2&lt;/code&gt;&lt;/a&gt;, this information is only used to properly annotate the BEAM files before they are loaded into memory. If you want a file to actually be written to &lt;code&gt;dest&lt;/code&gt;, use &lt;a href=&quot;#compile_to_path/3&quot;&gt;&lt;code&gt;compile_to_path/3&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;:dest&lt;/code&gt; - каталог назначения для файлов BEAM. При использовании &lt;a href=&quot;#compile/2&quot;&gt; &lt;code&gt;compile/2&lt;/code&gt; &lt;/a&gt; эта информация используется только для правильного аннотирования файлов BEAM перед их загрузкой в ​​память. Если вы хотите, чтобы файл действительно записывался в &lt;code&gt;dest&lt;/code&gt; , используйте вместо него &lt;a href=&quot;#compile_to_path/3&quot;&gt; &lt;code&gt;compile_to_path/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2538cd271b193546bd4d878c826cf89e60eee09a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:details&lt;/code&gt; - includes profile data for each profiled process</source>
          <target state="translated">&lt;code&gt;:details&lt;/code&gt; - включает данные профиля для каждого профилированного процесса</target>
        </trans-unit>
        <trans-unit id="29f022f42efa6ac9d98b08d2435b207f23c308b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:dev&lt;/code&gt; - the default environment</source>
          <target state="translated">&lt;code&gt;:dev&lt;/code&gt; - окружение по умолчанию</target>
        </trans-unit>
        <trans-unit id="dcaf3dec0c41e1f5e8c230f476d5271b4f67b65c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:dev&lt;/code&gt; - the one in which Mix tasks (like &lt;code&gt;compile&lt;/code&gt;) run by default</source>
          <target state="translated">&lt;code&gt;:dev&lt;/code&gt; - тот, в котором задачи Mix (например, &lt;code&gt;compile&lt;/code&gt; ) запускаются по умолчанию</target>
        </trans-unit>
        <trans-unit id="7232a5b83835049ee81f4046c8518f44296e42ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:device&lt;/code&gt; - the device to log error messages to. Defaults to &lt;code&gt;:user&lt;/code&gt; but can be changed to something else such as &lt;code&gt;:standard_error&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:device&lt;/code&gt; - устройство для записи сообщений об ошибках. По умолчанию &lt;code&gt;:user&lt;/code&gt; , но можно изменить на что-нибудь другое, например &lt;code&gt;:standard_error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06cc09e16cc96322865d6c95c3223271d8c59f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:diff_delete&lt;/code&gt; - color of the deletions on diffs, defaults to &lt;code&gt;:red&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:diff_delete&lt;/code&gt; - цвет удалений на различиях, по умолчанию &lt;code&gt;:red&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="34d30cf35de27f7a4592184c8f79ef8a88f6d363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:diff_delete_whitespace&lt;/code&gt; - color of the whitespace deletions on diffs, defaults to &lt;code&gt;IO.ANSI.color_background(0, 2, 0)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:diff_delete_whitespace&lt;/code&gt; - цвет удаления пробелов на различиях, по умолчанию &lt;code&gt;IO.ANSI.color_background(0, 2, 0)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="256282ce256cfbd6e3beadba0361d1221a5e2dc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:diff_insert&lt;/code&gt; - color of the insertions on diffs, defaults to &lt;code&gt;:green&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:diff_insert&lt;/code&gt; - цвет вставок на диффах, по умолчанию &lt;code&gt;:green&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="d32c132debda65004cc26ea6952b0ece66adcc30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:diff_insert_whitespace&lt;/code&gt; - color of the whitespace insertions on diffs, defaults to &lt;code&gt;IO.ANSI.color_background(2, 0, 0)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:diff_insert_whitespace&lt;/code&gt; - цвет вставки пробелов в &lt;code&gt;IO.ANSI.color_background(2, 0, 0)&lt;/code&gt; , по умолчанию IO.ANSI.color_background (2, 0, 0) ;</target>
        </trans-unit>
        <trans-unit id="fa7fc2533374e65d713f33e47954135bd97ce842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold&lt;/code&gt; - if the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; manager has more than &lt;code&gt;:discard_threshold&lt;/code&gt; messages in its queue, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will change to &lt;em&gt;discard mode&lt;/em&gt; and messages will be discarded directly in the clients. &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will return to &lt;em&gt;sync mode&lt;/em&gt; once the number of messages in the queue is reduced to one below the &lt;code&gt;discard_threshold&lt;/code&gt;. Defaults to 500 messages.</source>
          <target state="translated">&lt;code&gt;:discard_threshold&lt;/code&gt; - если &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; менеджер имеет более чем &lt;code&gt;:discard_threshold&lt;/code&gt; сообщения в очереди, &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; будет меняться в &lt;em&gt;сброшенном режим&lt;/em&gt; и сообщения будут удалены непосредственно в клиентах. &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; вернется в &lt;em&gt;режим синхронизации, как&lt;/em&gt; только количество сообщений в очереди уменьшится до одного ниже &lt;code&gt;discard_threshold&lt;/code&gt; . По умолчанию 500 сообщений.</target>
        </trans-unit>
        <trans-unit id="c18481ed9b9a339a384cee8ee3e6e2c0d48f4d2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold_for_error_logger&lt;/code&gt; - if &lt;code&gt;:error_logger&lt;/code&gt; has more than &lt;code&gt;discard_threshold&lt;/code&gt; messages in its inbox, messages will be dropped until the message queue goes down to &lt;code&gt;discard_threshold * 0.75&lt;/code&gt; entries. The threshold will be checked once again after 10% of threshold messages are processed, to avoid messages from being constantly dropped. For example, if the threshold is 500 (the default) and the inbox has 600 messages, 225 messages will dropped, bringing the inbox down to 375 (0.75 &lt;em&gt; threshold) entries and 50 (0.1 &lt;/em&gt; threshold) messages will be processed before the threshold is checked once again.</source>
          <target state="translated">&lt;code&gt;:discard_threshold_for_error_logger&lt;/code&gt; - если &lt;code&gt;:error_logger&lt;/code&gt; имеет больше сообщений &lt;code&gt;discard_threshold&lt;/code&gt; в своем почтовом ящике, сообщения будут отбрасываться, пока очередь сообщений не опустится до &lt;code&gt;discard_threshold * 0.75&lt;/code&gt; записей. Порог будет проверен еще раз после обработки 10% пороговых сообщений, чтобы сообщения не отбрасывались постоянно. Например, если порог равен 500 (по умолчанию), а в почтовом ящике 600 сообщений, 225 сообщений будут отброшены, в результате чего в почтовом ящике останется 375 ( &lt;em&gt;порог&lt;/em&gt; 0,75 &lt;em&gt;) записей, и 50 (&lt;/em&gt; порог &lt;em&gt;0,1&lt;/em&gt; ) сообщений будут обработаны до проверки порога. снова.</target>
        </trans-unit>
        <trans-unit id="d16ff7330a226fe871171f28f408062ba7ab708f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold_periodic_check&lt;/code&gt; - a periodic check that checks and reports if logger is discarding messages. It logs a warn message whenever the system is (or continues) in discard mode and it logs a warn message whenever if the system was discarding messages but stopped doing so after the previous check. By default it runs every &lt;code&gt;30_000&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;:discard_threshold_periodic_check&lt;/code&gt; - периодическая проверка, которая проверяет и сообщает, отбрасывает ли регистратор сообщения. Он регистрирует предупреждающее сообщение всякий раз, когда система находится (или продолжает) в режиме отмены, и регистрирует предупреждающее сообщение всякий раз, когда система отбрасывала сообщения, но перестала это делать после предыдущей проверки. По умолчанию он запускается каждые &lt;code&gt;30_000&lt;/code&gt; миллисекунд.</target>
        </trans-unit>
        <trans-unit id="cbee7bb3bd74a75d32ae5182b3fbbc7b3325d796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold_periodic_check&lt;/code&gt; - a periodic check that checks and reports if logger is discarding messages. It logs a warning message whenever the system is (or continues) in discard mode and it logs a warning message whenever if the system was discarding messages but stopped doing so after the previous check. By default it runs every &lt;code&gt;30_000&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;:discard_threshold_periodic_check&lt;/code&gt; - периодическая проверка, которая проверяет и сообщает, отбрасывает ли регистратор сообщения. Он регистрирует предупреждающее сообщение всякий раз, когда система находится (или продолжает) в режиме отмены, и регистрирует предупреждающее сообщение всякий раз, когда система отбрасывала сообщения, но перестала это делать после предыдущей проверки. По умолчанию он запускается каждые &lt;code&gt;30_000&lt;/code&gt; миллисекунд.</target>
        </trans-unit>
        <trans-unit id="706565ddcb19ab940c25f21f3b6dc6454e57ffd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:do&lt;/code&gt; - contains metadata about the &lt;code&gt;do&lt;/code&gt; location in a function call with &lt;code&gt;do/end&lt;/code&gt; blocks (when &lt;code&gt;:token_metadata&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;:do&lt;/code&gt; - содержит метаданные о местоположении &lt;code&gt;do&lt;/code&gt; в вызове функции с блоками &lt;code&gt;do/end&lt;/code&gt; (когда &lt;code&gt;:token_metadata&lt;/code&gt; истинно)</target>
        </trans-unit>
        <trans-unit id="5f8d22ad3b29ab798774e0d9075473e0e9e58703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_bold&lt;/code&gt; - (bright)</source>
          <target state="translated">&lt;code&gt;:doc_bold&lt;/code&gt; - (яркий)</target>
        </trans-unit>
        <trans-unit id="c76fb43a8cfa20e7d652c378e76b5231769f65ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_code&lt;/code&gt; - the attributes for code blocks (cyan, bright)</source>
          <target state="translated">&lt;code&gt;:doc_code&lt;/code&gt; - атрибуты кодовых блоков (голубой, яркий)</target>
        </trans-unit>
        <trans-unit id="bd48a018181c208feb037ca024cb0fe8eca850ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_headings&lt;/code&gt; - h1 and h2 (yellow, bright)</source>
          <target state="translated">&lt;code&gt;:doc_headings&lt;/code&gt; - h1 и h2 (желтый, яркий)</target>
        </trans-unit>
        <trans-unit id="54e1dae42dae1fac42ee2a23ba3c6ee5ee860f9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_inline_code&lt;/code&gt; - inline code (cyan)</source>
          <target state="translated">&lt;code&gt;:doc_inline_code&lt;/code&gt; - встроенный код (голубой)</target>
        </trans-unit>
        <trans-unit id="03756bea266f9b3003d144361ec0ff1c52038387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_title&lt;/code&gt; - the overall heading for the output (reverse, yellow, bright)</source>
          <target state="translated">&lt;code&gt;:doc_title&lt;/code&gt; - общий заголовок для вывода (обратный, желтый, яркий)</target>
        </trans-unit>
        <trans-unit id="81a7b5ae0ab7ed320d67e3110119b97105fe3bbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_underline&lt;/code&gt; - (underline)</source>
          <target state="translated">&lt;code&gt;:doc_underline&lt;/code&gt; - (подчеркивание)</target>
        </trans-unit>
        <trans-unit id="1dbc0ce4530bceb58cac498314dfccaf2bc16aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:docs&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain documentation in the compiled module. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:docs&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; сохранять документацию в скомпилированном модуле. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79f85a87686e2922b9ee3a69824d50113bd83ca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:domain&lt;/code&gt; - a list of domains for the logged message. For example, all Elixir reports default to &lt;code&gt;[:elixir]&lt;/code&gt;. Erlang reports may start with &lt;code&gt;[:otp]&lt;/code&gt; or &lt;code&gt;[:sasl]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:domain&lt;/code&gt; - список доменов для зарегистрированного сообщения. Например, для всех отчетов Elixir по умолчанию используется &lt;code&gt;[:elixir]&lt;/code&gt; . Отчеты Erlang могут начинаться с &lt;code&gt;[:otp]&lt;/code&gt; или &lt;code&gt;[:sasl]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccb3326b6537cb358fba659cd34bec6b2ab0a257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:done&lt;/code&gt; is passed as a command when no further values will be injected. This is useful when there's a need to close resources or normalizing values. A collectable must be returned when the command is &lt;code&gt;:done&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:done&lt;/code&gt; передается как команда, когда больше не вводятся значения. Это полезно, когда необходимо закрыть ресурсы или нормализовать значения. Коллекционный предмет должен быть возвращен, когда команда &lt;code&gt;:done&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="952825bf21042f7f214fcbdbb10e28419c785862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing permission for reading the file, or for searching one of the parent directories</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - отсутствует разрешение на чтение файла или на поиск в одном из родительских каталогов</target>
        </trans-unit>
        <trans-unit id="b1ff086a676868908ef67a293bc6627fba51140b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing permission for the file or one of its parents</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - отсутствует разрешение для файла или одного из его родителей</target>
        </trans-unit>
        <trans-unit id="e6b36c2a1032622d4a4d6168546b4bbc9d7d45c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing permission for writing the file or searching one of the parent directories</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - отсутствует разрешение на запись файла или поиск в одном из родительских каталогов</target>
        </trans-unit>
        <trans-unit id="9f0ceebf88c0e7454da8d62044ddf9518a134bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing search or write permissions for the parent directories of &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - отсутствуют права на поиск или запись для родительских каталогов &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d7e5a19325351f92bf8bfbcb6e4b8cabf375150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - the command does not point to an executable file</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - команда не указывает на исполняемый файл</target>
        </trans-unit>
        <trans-unit id="cad6abbd025ec6eb167e068b2e00a4068430b8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_cycle&lt;/code&gt; - after the given files are compiled, invokes this function that return a list with potentially more files to compile</source>
          <target state="translated">&lt;code&gt;:each_cycle&lt;/code&gt; - после компиляции данных файлов вызывает эту функцию, которая возвращает список с потенциально большим количеством файлов для компиляции</target>
        </trans-unit>
        <trans-unit id="92a71b98c7bebdc22eec02ac3223c326a502fe57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_cycle&lt;/code&gt; - after the given files are compiled, invokes this function that should return the following values:</source>
          <target state="translated">&lt;code&gt;:each_cycle&lt;/code&gt; - после компиляции данных файлов вызывает эту функцию, которая должна возвращать следующие значения:</target>
        </trans-unit>
        <trans-unit id="cab07037df62a66a3bc83cee466f8793e6a4fa9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_file&lt;/code&gt; - for each file compiled, invokes the callback passing the file</source>
          <target state="translated">&lt;code&gt;:each_file&lt;/code&gt; - для каждого скомпилированного файла вызывает обратный вызов, передавая файл</target>
        </trans-unit>
        <trans-unit id="cf7b9937a823cd09db22ce5cceb392547443fce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_long_compilation&lt;/code&gt; - for each file that takes more than a given timeout (see the &lt;code&gt;:long_compilation_threshold&lt;/code&gt; option) to compile, invoke this callback passing the file as its argument</source>
          <target state="translated">&lt;code&gt;:each_long_compilation&lt;/code&gt; - для каждого файла, для компиляции которого требуется больше заданного времени ожидания (см. параметр &lt;code&gt;:long_compilation_threshold&lt;/code&gt; ), вызывать этот обратный вызов, передавая файл в качестве аргумента</target>
        </trans-unit>
        <trans-unit id="59c62eef896cd8d9456aa074ddac5a5016f96c9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_module&lt;/code&gt; - for each module compiled, invokes the callback passing the file, module and the module bytecode</source>
          <target state="translated">&lt;code&gt;:each_module&lt;/code&gt; - для каждого скомпилированного модуля вызывает обратный вызов, передавая файл, модуль и байт-код модуля</target>
        </trans-unit>
        <trans-unit id="2e3bcdd1a2047ef25cd1a08636476e6d77afe98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eagain&lt;/code&gt; - there are no more available operating system processes</source>
          <target state="translated">&lt;code&gt;:eagain&lt;/code&gt; - больше нет доступных процессов операционной системы</target>
        </trans-unit>
        <trans-unit id="a88a3b738e038a29e53424ec10268ed52a69ed70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eexist&lt;/code&gt; - there is already a file or directory named &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:eexist&lt;/code&gt; - уже существует файл или каталог с именем &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c569953dc2e94f0a737eba07f3f5222c11f14e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:einval&lt;/code&gt; - filename had an improper type, such as tuple</source>
          <target state="translated">&lt;code&gt;:einval&lt;/code&gt; - имя файла имеет неправильный тип, например кортеж</target>
        </trans-unit>
        <trans-unit id="fbac08f99fa254b946bd8ab1b216fd7f77f5b7ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:einval&lt;/code&gt; - path is not a symbolic link</source>
          <target state="translated">&lt;code&gt;:einval&lt;/code&gt; - путь не является символической ссылкой</target>
        </trans-unit>
        <trans-unit id="72c2fd3cb6f9166cb09ead95fc9e2e13d47e5c79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eisdir&lt;/code&gt; - the named file is a directory</source>
          <target state="translated">&lt;code&gt;:eisdir&lt;/code&gt; - указанный файл является каталогом</target>
        </trans-unit>
        <trans-unit id="e086ab8b34178517715e8b20f173325cc0728880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:elixir&lt;/code&gt; - matches the current Elixir version against the given requirement</source>
          <target state="translated">&lt;code&gt;:elixir&lt;/code&gt; - соответствует текущей версии Elixir заданному требованию</target>
        </trans-unit>
        <trans-unit id="7bc227a94cb200732225ea93d24ebcc8fd16fc59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:elixirc_options&lt;/code&gt; - compilation options that apply to Elixir's compiler. See &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#put_compiler_option/2&quot;&gt;&lt;code&gt;Code.put_compiler_option/2&lt;/code&gt;&lt;/a&gt; for a complete list of options. These options are often overridable from the command line using the switches above.</source>
          <target state="translated">&lt;code&gt;:elixirc_options&lt;/code&gt; - параметры компиляции, которые применяются к компилятору Эликсира. См. &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#put_compiler_option/2&quot;&gt; &lt;code&gt;Code.put_compiler_option/2&lt;/code&gt; &lt;/a&gt; для получения полного списка опций. Эти параметры часто можно переопределить из командной строки с помощью переключателей, указанных выше.</target>
        </trans-unit>
        <trans-unit id="651e4cab7112acf3270e7f1896a314d80c8db9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:elixirc_options&lt;/code&gt; - compilation options that apply to Elixir's compiler. They are the same as the command line options listed above. They must be specified as atoms and use underscores instead of dashes (for example, &lt;code&gt;:debug_info&lt;/code&gt;). These options can always be overridden from the command line and they have the same defaults as their command line counterparts, as documented above.</source>
          <target state="translated">&lt;code&gt;:elixirc_options&lt;/code&gt; - параметры компиляции, которые применяются к компилятору Эликсира. Они такие же, как параметры командной строки, перечисленные выше. Они должны быть указаны как атомы и использовать &lt;code&gt;:debug_info&lt;/code&gt; подчеркивания вместо дефисов (например : debug_info ). Эти параметры всегда можно переопределить из командной строки, и они имеют те же значения по умолчанию, что и их аналоги в командной строке, как описано выше.</target>
        </trans-unit>
        <trans-unit id="f1e6c6f0f639cf8a5cf20cbd11cb01841fd3b7b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:elixirc_paths&lt;/code&gt; - directories to find source files. Defaults to &lt;code&gt;[&quot;lib&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:elixirc_paths&lt;/code&gt; - каталоги для поиска исходных файлов. По умолчанию &lt;code&gt;[&quot;lib&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f24d240852a229a134f9be9fc030117ea4e88b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:embed_elixir&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; embeds Elixir and its children apps (&lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;mix&lt;/code&gt;, and the like) mentioned in the &lt;code&gt;:applications&lt;/code&gt; list inside the &lt;code&gt;application/0&lt;/code&gt; function in &lt;code&gt;mix.exs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:embed_elixir&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , встраивает Elixir и его дочерние приложения ( &lt;code&gt;ex_unit&lt;/code&gt; , &lt;code&gt;mix&lt;/code&gt; и т.п.), упомянутые в списке &lt;code&gt;:applications&lt;/code&gt; , внутри функции &lt;code&gt;application/0&lt;/code&gt; в &lt;code&gt;mix.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cccbe8f39470ee20cccec70c87f01935c76923f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:embed_elixir&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; embeds Elixir and its children apps (&lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;mix&lt;/code&gt;, etc.) mentioned in the &lt;code&gt;:applications&lt;/code&gt; list inside the &lt;code&gt;application/0&lt;/code&gt; function in &lt;code&gt;mix.exs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:embed_elixir&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , встраивает Elixir и его дочерние приложения ( &lt;code&gt;ex_unit&lt;/code&gt; , &lt;code&gt;mix&lt;/code&gt; и т. д.), упомянутые в списке &lt;code&gt;:applications&lt;/code&gt; , внутри функции &lt;code&gt;application/0&lt;/code&gt; в &lt;code&gt;mix.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fbc9eccbf31dd6a5aa8c63a416288c195cfa529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:emergency&lt;/code&gt; - when system is unusable, panics</source>
          <target state="translated">&lt;code&gt;:emergency&lt;/code&gt; - когда система не работает, паникает</target>
        </trans-unit>
        <trans-unit id="33e7b7c1a73931c0c4a0ee9fd4693c49e27fdd02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:emfile&lt;/code&gt; - there are no more available file descriptors (for the operating system process that the Erlang emulator runs in)</source>
          <target state="translated">&lt;code&gt;:emfile&lt;/code&gt; - больше нет доступных файловых дескрипторов (для процесса операционной системы, в котором работает эмулятор Erlang)</target>
        </trans-unit>
        <trans-unit id="2468b2ea1beef09e91f0e2289620f2f182848867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:emu_args&lt;/code&gt; - emulator arguments to embed in the escript file. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:emu_args&lt;/code&gt; - аргументы эмулятора для вставки в файл escript. По умолчанию &lt;code&gt;&quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="568fbb2adc07b38118f6274d84b2821a34cbbae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - boolean option to enable colors, defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - логическая опция для включения цветов, по умолчанию &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt; &lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="882c0e3abdc286cf6040091a4c5625e33de15d11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - boolean value that allows for switching the coloring on and off</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - логическое значение, позволяющее включать и выключать раскраску</target>
        </trans-unit>
        <trans-unit id="06f63776b25960b20d2a19331b5ace5c14a73d1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - boolean value that allows for switching the coloring on and off. Defaults to: &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - логическое значение, позволяющее включать и выключать раскраску. По умолчанию: &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt; &lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c10c5fef4163fa7a9c0fc8136bdf142a4d8d0b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - shows ANSI formatting (defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - показывает форматирование ANSI (по умолчанию &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt; &lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4c096724bd83650a760568a218b2effa1c51b7b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enametoolong&lt;/code&gt; - the external command given was too long</source>
          <target state="translated">&lt;code&gt;:enametoolong&lt;/code&gt; - внешняя команда дана слишком долго</target>
        </trans-unit>
        <trans-unit id="7a7d4961b215b01fdf3792387f7a87bc5ba8e191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:encoding&lt;/code&gt; (since v1.10.0) - encoding of the IO device. Allowed values are &lt;code&gt;:unicode&lt;/code&gt; (default) and &lt;code&gt;:latin1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:encoding&lt;/code&gt; (начиная с v1.10.0) - кодировка IO устройства. Допустимые значения &lt;code&gt;:unicode&lt;/code&gt; (по умолчанию) и &lt;code&gt;:latin1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0a9b483283dcbbace6124cd508be96f0ee152a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:end&lt;/code&gt; - contains metadata about the &lt;code&gt;end&lt;/code&gt; location in a function call with &lt;code&gt;do/end&lt;/code&gt; blocks (when &lt;code&gt;:token_metadata&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;:end&lt;/code&gt; - содержит метаданные о &lt;code&gt;end&lt;/code&gt; местоположении в вызове функции с блоками &lt;code&gt;do/end&lt;/code&gt; (когда &lt;code&gt;:token_metadata&lt;/code&gt; истинно)</target>
        </trans-unit>
        <trans-unit id="a47c7276af5dc580d52ef2affc575b96b386e8ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:end_of_expression&lt;/code&gt; - denotes when the end of expression effectively happens. Available for all expressions except the last one inside a &lt;code&gt;__block__&lt;/code&gt; (when &lt;code&gt;:token_metadata&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;:end_of_expression&lt;/code&gt; - обозначает, когда фактически наступает конец выражения. Доступно для всех выражений, кроме последнего, внутри &lt;code&gt;__block__&lt;/code&gt; (когда &lt;code&gt;:token_metadata&lt;/code&gt; истинно)</target>
        </trans-unit>
        <trans-unit id="7baca3bb150d64e17a73c60bc395550d3f266a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enfile&lt;/code&gt; - the file table is full (for the entire operating system)</source>
          <target state="translated">&lt;code&gt;:enfile&lt;/code&gt; - таблица файлов заполнена (для всей операционной системы)</target>
        </trans-unit>
        <trans-unit id="aba3e663e86d5b07dd58e8a7eae197d96df10879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:engine&lt;/code&gt; - the EEx engine to be used for compilation.</source>
          <target state="translated">&lt;code&gt;:engine&lt;/code&gt; - движок EEx, который будет использоваться для компиляции.</target>
        </trans-unit>
        <trans-unit id="814f99ae2ca73876d415da60f83490728cbd4cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - компонент &lt;code&gt;path&lt;/code&gt; не существует</target>
        </trans-unit>
        <trans-unit id="380b5ad014b356d6d2296f68b2b9f805380ab7e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - a component of the file name does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - компонент имени файла не существует</target>
        </trans-unit>
        <trans-unit id="dba8835e197222e8dc613a153563411b9ba07a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - path does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - пути не существует</target>
        </trans-unit>
        <trans-unit id="41da83e2602197774b3acbc9b9320f635cd73bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - the command does not point to an existing file</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - команда не указывает на существующий файл</target>
        </trans-unit>
        <trans-unit id="12ce31f30da80d734ecbe64ef214b9bedbc005a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - the file does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - файл не существует</target>
        </trans-unit>
        <trans-unit id="a9a67a7014247712cb81925ea23d1dccb7b257a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enomem&lt;/code&gt; - there is not enough memory for the contents of the file</source>
          <target state="translated">&lt;code&gt;:enomem&lt;/code&gt; - не хватает памяти для содержимого файла</target>
        </trans-unit>
        <trans-unit id="b2a8aa1de1f49aad3c3d07c7dbc41acf283778fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enomem&lt;/code&gt; - there was not enough memory to create the port</source>
          <target state="translated">&lt;code&gt;:enomem&lt;/code&gt; - не хватило памяти для создания порта</target>
        </trans-unit>
        <trans-unit id="f0348bd594037ce9b59c812e6e8e729ddb0c4f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enospc&lt;/code&gt; - there is no space left on the device</source>
          <target state="translated">&lt;code&gt;:enospc&lt;/code&gt; - на устройстве не осталось места</target>
        </trans-unit>
        <trans-unit id="c96e285bec5866819ee45da5a24da7d78f550b73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotdir&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; is not a directory</source>
          <target state="translated">&lt;code&gt;:enotdir&lt;/code&gt; - компонент &lt;code&gt;path&lt;/code&gt; не является каталогом</target>
        </trans-unit>
        <trans-unit id="4cdecadca53bc900ea87bf95e3c10d579001af56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotdir&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; is not a directory; on some platforms, &lt;code&gt;:enoent&lt;/code&gt; is returned instead</source>
          <target state="translated">&lt;code&gt;:enotdir&lt;/code&gt; - компонент &lt;code&gt;path&lt;/code&gt; не является каталогом; на некоторых платформах вместо этого возвращается &lt;code&gt;:enoent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="979df61dc45d3ba8ae2ba676f39b57a7937e62cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotdir&lt;/code&gt; - a component of the file name is not a directory; on some platforms, &lt;code&gt;:enoent&lt;/code&gt; is returned instead</source>
          <target state="translated">&lt;code&gt;:enotdir&lt;/code&gt; - компонент имени файла не является каталогом; на некоторых платформах вместо этого возвращается &lt;code&gt;:enoent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab3e6dee7546260f7f2e0e3337ba3ad512628a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotsup&lt;/code&gt; - symbolic links are not supported on the current platform</source>
          <target state="translated">&lt;code&gt;:enotsup&lt;/code&gt; - символические ссылки не поддерживаются на текущей платформе</target>
        </trans-unit>
        <trans-unit id="10e1c070b5f0fd8af681630bd7bf146c92eeebc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - a list of environment variables, defaults to &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - список переменных среды, по умолчанию &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2565f477328e171e896ee6eec30071d0c1a641c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - a list of the environment or free variables. For named functions, the returned list is always empty.</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - список переменных окружения или свободных. Для именованных функций возвращаемый список всегда пуст.</target>
        </trans-unit>
        <trans-unit id="ea18571ff6f9e62b8539e43d3ce352232521efa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - an enumerable of tuples containing environment key-value as binary</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - перечисление кортежей, содержащих ключ-значение среды как двоичное</target>
        </trans-unit>
        <trans-unit id="6d0dde5924abeccfc95d67e2feb7a5b204a07222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - an enumerable of tuples containing environment key-value as binary. The child process inherits all environment variables from its parent process, the Elixir application, except those overwritten or cleared using this option. Specify a value of &lt;code&gt;nil&lt;/code&gt; to clear (unset) an environment variable, which is useful for preventing credentials passed to the application from leaking into child processes.</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - перечисление кортежей, содержащих двоичный ключ-значение среды. Дочерний процесс наследует все переменные среды от своего родительского процесса, приложения Elixir, за исключением тех, которые перезаписываются или очищаются с помощью этой опции. Укажите значение &lt;code&gt;nil&lt;/code&gt; , чтобы очистить (сбросить) переменную среды, что полезно для предотвращения утечки учетных данных, передаваемых в приложение, в дочерние процессы.</target>
        </trans-unit>
        <trans-unit id="7629d1796b8d78ea272bfca84db78e3883b60c1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - environment options to the executed command</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - параметры среды для выполняемой команды</target>
        </trans-unit>
        <trans-unit id="c212698788c0c3cf999c4c9210fcb33e71ada52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - the &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; used for the evaluator</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; ,&lt;/a&gt; используемый для оценщика</target>
        </trans-unit>
        <trans-unit id="9fa2cf9db759f4c1e7cbea2eef6d3c5fba5e3f0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - the default values for the application environment. The application environment is one of the most common ways to configure applications. See the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; module for mechanisms to read and write to the application environment.</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - значения по умолчанию для среды приложения. Среда приложений - один из наиболее распространенных способов настройки приложений. См. В модуле &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; механизмы чтения и записи в среду приложения.</target>
        </trans-unit>
        <trans-unit id="d2df36a10ba0acd1172601b2ab7430af4776ea46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - the environment (as an atom) to run the dependency on; defaults to &lt;code&gt;:prod&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - окружение (в виде атома), от которого запускается зависимость; по умолчанию &lt;code&gt;:prod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c007bb16c228f530f9c75075ac255736a3acfd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - the environment the configuration file runs on. See &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html#config_env/0&quot;&gt;&lt;code&gt;Config.config_env/0&lt;/code&gt;&lt;/a&gt; for sample usage</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - среда, в которой выполняется файл конфигурации. См. &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html#config_env/0&quot;&gt; &lt;code&gt;Config.config_env/0&lt;/code&gt; &lt;/a&gt; для примера использования</target>
        </trans-unit>
        <trans-unit id="264f872f83cb34b029ee82794a94fa87ee30e3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eof&lt;/code&gt; - end of file was encountered</source>
          <target state="translated">&lt;code&gt;:eof&lt;/code&gt; - обнаружен конец файла</target>
        </trans-unit>
        <trans-unit id="e27af3f5d0ec3d22a4638ec72e094b63583d8670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eperm&lt;/code&gt; - the file is a directory and user is not super-user</source>
          <target state="translated">&lt;code&gt;:eperm&lt;/code&gt; - файл является каталогом, а пользователь не является суперпользователем</target>
        </trans-unit>
        <trans-unit id="296de1e8a396af58fe47df8df1a26f280b2a6f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eprof&lt;/code&gt; provides time information of each function call and can be useful when you want to discover the bottlenecks related to this.</source>
          <target state="translated">&lt;code&gt;:eprof&lt;/code&gt; предоставляет информацию о времени каждого вызова функции и может быть полезен, когда вы хотите обнаружить узкие места, связанные с этим.</target>
        </trans-unit>
        <trans-unit id="85b0d166023eb8d76d48d62891f0b8840481da6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eq&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; are equal</source>
          <target state="translated">&lt;code&gt;:eq&lt;/code&gt; , если &lt;code&gt;left&lt;/code&gt; и &lt;code&gt;right&lt;/code&gt; равны</target>
        </trans-unit>
        <trans-unit id="42e3393a93a5d008b00386cc1f5d6d3cb903166c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_include_path&lt;/code&gt; - directory for adding include files. Defaults to &lt;code&gt;&quot;include&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_include_path&lt;/code&gt; - каталог для добавления включаемых файлов. По умолчанию &lt;code&gt;&quot;include&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76fbc236e0e56887b4a1173fbbd7833ac0a51999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_options&lt;/code&gt; - compilation options that apply to Erlang's compiler. Defaults to &lt;code&gt;[:debug_info]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_options&lt;/code&gt; - параметры компиляции, которые применяются к компилятору Erlang. По умолчанию &lt;code&gt;[:debug_info]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="360f1ccb0d726cb03b607048456757ac7cc4a321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_options&lt;/code&gt; - compilation options that apply to Erlang's compiler. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_options&lt;/code&gt; - параметры компиляции, которые применяются к компилятору Erlang. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f62f0a8c8e564eedbaf5cfb6fe00eb53e17ba10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_paths&lt;/code&gt; - directories to find source files. Defaults to &lt;code&gt;[&quot;src&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_paths&lt;/code&gt; - каталоги для поиска исходных файлов. По умолчанию &lt;code&gt;[&quot;src&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cc95859fbbca6410fb5ed17676809fc7215a5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; - An issue that caused compilation to fail</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; - Проблема, которая привела к сбою компиляции</target>
        </trans-unit>
        <trans-unit id="9379ca379488f639fc8b777306e3930b2dae7b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; - color for error and higher messages. Defaults to: &lt;code&gt;:red&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; - цвет для сообщений об ошибках и выше. По умолчанию &lt;code&gt;:red&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fd5376d781013643d2a9bb659eb6afe794f9504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; - color for error messages. Defaults to: &lt;code&gt;:red&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; - цвет сообщений об ошибках. По умолчанию &lt;code&gt;:red&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31a10a3b8dbd4c7aab40dfa8071f1356ef413681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; - for errors</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; - для ошибок</target>
        </trans-unit>
        <trans-unit id="bf6269591e107f846068d38934df341927bd74c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erts_source&lt;/code&gt; - the erts source as a charlist (or nil)</source>
          <target state="translated">&lt;code&gt;:erts_source&lt;/code&gt; - источник erts в виде списка символов (или nil)</target>
        </trans-unit>
        <trans-unit id="65da7a136dd261910b00607d381957cc948201ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erts_version&lt;/code&gt; - the erts version as a charlist</source>
          <target state="translated">&lt;code&gt;:erts_version&lt;/code&gt; - версия erts в виде списка символов</target>
        </trans-unit>
        <trans-unit id="095353125fb7342ff1e76eeb308d2be2c1435d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_error&lt;/code&gt; - ... error messages</source>
          <target state="translated">&lt;code&gt;:eval_error&lt;/code&gt; - ... сообщения об ошибках</target>
        </trans-unit>
        <trans-unit id="c48cddb9aad3016c44aebe1180d8c1a5b3c6847d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_info&lt;/code&gt; - ... various informational messages</source>
          <target state="translated">&lt;code&gt;:eval_info&lt;/code&gt; - ... различные информационные сообщения</target>
        </trans-unit>
        <trans-unit id="74dca15ff7a946fe32a0ef8bc6862bc832ee0f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_interrupt&lt;/code&gt; - ... interrupt messages</source>
          <target state="translated">&lt;code&gt;:eval_interrupt&lt;/code&gt; - ... сообщения о прерывании</target>
        </trans-unit>
        <trans-unit id="5b2132d42c0d9ac00454b2b79efdaf4ed739b2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_result&lt;/code&gt; - color for an expression's resulting value</source>
          <target state="translated">&lt;code&gt;:eval_result&lt;/code&gt; - цвет результирующего значения выражения</target>
        </trans-unit>
        <trans-unit id="513d36260f2b2b3be18ad90251fb5f2a9dfa6876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:except&lt;/code&gt; - generates tests for all functions except those listed (list of &lt;code&gt;{function, arity}&lt;/code&gt; tuples, and/or &lt;code&gt;:moduledoc&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:except&lt;/code&gt; - генерирует тесты для всех функций, кроме перечисленных (список кортежей &lt;code&gt;{function, arity}&lt;/code&gt; и / или &lt;code&gt;:moduledoc&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2c30d8efab4a195ded9404d6420e728a84a8a5c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - a list of modules and &lt;code&gt;{module, function, arity}&lt;/code&gt; tuples to ignore when checking cross references. For example: &lt;code&gt;[MissingModule, {MissingModule2, :missing_func, 2}]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:exclude&lt;/code&gt; - список модулей и кортежей &lt;code&gt;{module, function, arity}&lt;/code&gt; следует игнорировать при проверке перекрестных ссылок. Например: &lt;code&gt;[MissingModule, {MissingModule2, :missing_func, 2}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3aacf92c87e88a742e82f66c11c07a55063a2c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - specifies which tests are run by skipping tests that match the filter;</source>
          <target state="translated">&lt;code&gt;:exclude&lt;/code&gt; - указывает, какие тесты запускаются, пропуская тесты, соответствующие фильтру;</target>
        </trans-unit>
        <trans-unit id="a50a207f30c1900f8498e7905fc0b436bcb53c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclusive&lt;/code&gt; - the file, when opened for writing, is created if it does not exist. If the file exists, open will return &lt;code&gt;{:error, :eexist}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:exclusive&lt;/code&gt; - файл при открытии на запись создается, если не существует. Если файл существует, open вернет &lt;code&gt;{:error, :eexist}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43f1aa8016ab1d7111601bd69dcc885274399e5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:existing_atoms_only&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, raises an error when non-existing atoms are found by the tokenizer. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:existing_atoms_only&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; выдает ошибку, когда токенизатор обнаруживает несуществующие атомы. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62419e96d71347357821fbab4e9cb8a3d94de1eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exit&lt;/code&gt; (default) - the process that spawned the tasks exits.</source>
          <target state="translated">&lt;code&gt;:exit&lt;/code&gt; (по умолчанию) - процесс, породивший задачи, завершается.</target>
        </trans-unit>
        <trans-unit id="d4f8fac3b505214e5c15b489ce6bbf23e2358e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:export&lt;/code&gt; (a keyword list) - specifies formatter configuration to be exported. See the &quot;Importing dependencies configuration&quot; section below.</source>
          <target state="translated">&lt;code&gt;:export&lt;/code&gt; (список ключевых слов) - определяет экспортируемую конфигурацию средства форматирования. См. Раздел &amp;laquo;Импорт конфигурации зависимостей&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="40be2d8ee00d494bac78ac0cae70c396cf602b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:export&lt;/code&gt; - a file name to export results to instead of generating the result on the fly. The &lt;code&gt;.coverdata&lt;/code&gt; extension is automatically added to the given file. This option is automatically set via the &lt;code&gt;--export-coverage&lt;/code&gt; option or when using process partitioning. See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.Coverage.html&quot;&gt;&lt;code&gt;mix test.coverage&lt;/code&gt;&lt;/a&gt; to compile a report from multiple exports.</source>
          <target state="translated">&lt;code&gt;:export&lt;/code&gt; - имя файла для экспорта результатов вместо генерации результата на лету. Расширение &lt;code&gt;.coverdata&lt;/code&gt; автоматически добавляется к данному файлу. Этот параметр автоматически устанавливается с помощью параметра &lt;code&gt;--export-coverage&lt;/code&gt; или при использовании разделения процессов. См. &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.Coverage.html&quot;&gt; &lt;code&gt;mix test.coverage&lt;/code&gt; &lt;/a&gt; чтобы составить отчет из нескольких экспортов.</target>
        </trans-unit>
        <trans-unit id="c28c9f8f14eb7476426f3256bb131fea22c17aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra_applications&lt;/code&gt; - a list of OTP applications your application depends on which are not included in &lt;code&gt;:deps&lt;/code&gt; (usually defined in &lt;code&gt;deps/0&lt;/code&gt; in your &lt;code&gt;mix.exs&lt;/code&gt;). For example, here you can declare a dependency on applications that ship with Erlang/OTP or Elixir, like &lt;code&gt;:crypto&lt;/code&gt; or &lt;code&gt;:logger&lt;/code&gt;. Optional extra applications can be declared as a tuple, such as &lt;code&gt;{:ex_unit, :optional}&lt;/code&gt;. Mix guarantees all non-optional applications are started before your application starts.</source>
          <target state="translated">&lt;code&gt;:extra_applications&lt;/code&gt; - список приложений OTP, от которых зависит ваше приложение, которые не включены в &lt;code&gt;:deps&lt;/code&gt; (обычно определяются в &lt;code&gt;deps/0&lt;/code&gt; в вашем &lt;code&gt;mix.exs&lt;/code&gt; ). Например, здесь вы можете объявить зависимость от приложений, которые поставляются с Erlang / OTP или Elixir, например &lt;code&gt;:crypto&lt;/code&gt; или &lt;code&gt;:logger&lt;/code&gt; . Необязательные дополнительные приложения могут быть объявлены как кортеж, например &lt;code&gt;{:ex_unit, :optional}&lt;/code&gt; . Mix гарантирует, что все необязательные приложения будут запущены до запуска вашего приложения.</target>
        </trans-unit>
        <trans-unit id="229c31d3d046115e0277c4ff36de8c1bb035ad00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra_arguments&lt;/code&gt; - arguments that are prepended to the arguments specified in the child spec given to &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt;. Defaults to an empty list.</source>
          <target state="translated">&lt;code&gt;:extra_arguments&lt;/code&gt; - аргументы, которые добавляются к аргументам, указанным в дочерней спецификации, данной для &lt;a href=&quot;#start_child/2&quot;&gt; &lt;code&gt;start_child/2&lt;/code&gt; &lt;/a&gt; . По умолчанию пустой список.</target>
        </trans-unit>
        <trans-unit id="3caf6d681898f3fe21b3b0cf5131dd8537107f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:failures_manifest_file&lt;/code&gt; - specifies a path to the file used to store failures between runs;</source>
          <target state="translated">&lt;code&gt;:failures_manifest_file&lt;/code&gt; - указывает путь к файлу, который используется для хранения сбоев между запусками;</target>
        </trans-unit>
        <trans-unit id="da3945e3873fdf84ea830757b81a1bff5413198e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - (since v1.11.0) the file of the test module</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - (начиная с v1.11.0) файл тестового модуля</target>
        </trans-unit>
        <trans-unit id="b18ee74d75fa7b22f6e73ab616e6edbc0fad1232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - a binary representing the file where the function is called</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - двоичный файл, представляющий файл, в котором вызывается функция</target>
        </trans-unit>
        <trans-unit id="42bd613bfbd2dff6aad93c3ad0f3d08e241d644d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - sets the quoted expressions to have the given file.</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - устанавливает для выражений в кавычках указанный файл.</target>
        </trans-unit>
        <trans-unit id="83628dfc3abcd80d61383bcec6b39bcaffa88388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the current file</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - текущий файл</target>
        </trans-unit>
        <trans-unit id="d0dd18cb8d2841e659e12fd4302ec0cc14b0a9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file on which the test was defined</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - файл, на котором был определен тест</target>
        </trans-unit>
        <trans-unit id="1dda279c58d3f4e3d298d509ea820785a89eb59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file to be considered in the evaluation</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - файл для рассмотрения при оценке</target>
        </trans-unit>
        <trans-unit id="45a2ed8e87c341b33312269f359bd716ab23a0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file to be used in the template. Defaults to the given file the template is read from or to &quot;nofile&quot; when compiling from a string.</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - файл, который будет использоваться в шаблоне. По умолчанию для данного файла, из которого читается шаблон, или в &quot;nofile&quot; при компиляции из строки.</target>
        </trans-unit>
        <trans-unit id="b26d07d235ad36a11f2c9180f1b8b89ff982b674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file which contains the string, used for error reporting</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - файл, содержащий строку, используемую для сообщения об ошибке</target>
        </trans-unit>
        <trans-unit id="6dc611c640f269caa3a82ea22a15287fbceecf4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the filename to be reported in case of parsing errors. Defaults to &quot;nofile&quot;.</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - имя файла, о котором будет сообщено в случае ошибок парсинга. По умолчанию &quot;nofile&quot;.</target>
        </trans-unit>
        <trans-unit id="d0942c719b872d1e450e24ed84a86dd40a82be46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:first&lt;/code&gt; - only the first captured subpattern, which is always the complete matching part of the string; all explicitly captured subpatterns are discarded</source>
          <target state="translated">&lt;code&gt;:first&lt;/code&gt; - только первый захваченный подшаблон, который всегда является полной совпадающей частью строки; все явно захваченные подшаблоны отбрасываются</target>
        </trans-unit>
        <trans-unit id="0c322fe960fab972ffb0306d0c1e3f93c7a45f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:first&lt;/code&gt; - the initial date on the range</source>
          <target state="translated">&lt;code&gt;:first&lt;/code&gt; - начальная дата диапазона</target>
        </trans-unit>
        <trans-unit id="14be838ed8119c6a73fcc8eb15b33319b54eb430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:float&lt;/code&gt; - parses the value as a float</source>
          <target state="translated">&lt;code&gt;:float&lt;/code&gt; - анализирует значение как float</target>
        </trans-unit>
        <trans-unit id="3475cb10aa8d5ec710e0de9630be3ccc49770d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:flush&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, guarantees all messages currently sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; are processed before the backend is added</source>
          <target state="translated">&lt;code&gt;:flush&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , гарантирует, что все сообщения, отправленные в данный момент в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; ,&lt;/a&gt; будут обработаны до добавления бэкэнда</target>
        </trans-unit>
        <trans-unit id="1fdcf21ae48a19d0dae3448e91103e49902e7e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:flush&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, guarantees all messages currently sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; are processed before the backend is removed</source>
          <target state="translated">&lt;code&gt;:flush&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , гарантирует, что все сообщения, отправленные в данный момент в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; ,&lt;/a&gt; будут обработаны до того, как бэкэнд будет удален</target>
        </trans-unit>
        <trans-unit id="14c62953988ffa658a210ac23a7bd9a6107198b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - forces copying without a shell prompt</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - принудительное копирование без приглашения оболочки</target>
        </trans-unit>
        <trans-unit id="dc1956f830ff9d4b1f875088dd9b5763ebc0d1e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - forces creation without a shell prompt</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - форсирует создание без приглашения оболочки</target>
        </trans-unit>
        <trans-unit id="228b588ba959d003fc6777e1934745da21242700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, forces the application to recompile</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , заставляет приложение перекомпилировать</target>
        </trans-unit>
        <trans-unit id="9771a70af8124259a8cabc657fba5827635ab114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_do_end_blocks&lt;/code&gt; (since v1.9.0) - when &lt;code&gt;true&lt;/code&gt;, converts all inline usages of &lt;code&gt;do: ...&lt;/code&gt;, &lt;code&gt;else: ...&lt;/code&gt; and friends into &lt;code&gt;do/end&lt;/code&gt; blocks. Defaults to &lt;code&gt;false&lt;/code&gt;. Note that this option is convergent: once you set it to &lt;code&gt;true&lt;/code&gt;, all keywords will be converted. If you set it to &lt;code&gt;false&lt;/code&gt; later on, &lt;code&gt;do/end&lt;/code&gt; blocks won't be converted back to keywords.</source>
          <target state="translated">&lt;code&gt;:force_do_end_blocks&lt;/code&gt; (начиная с v1.9.0) - когда &lt;code&gt;true&lt;/code&gt; , преобразует все встроенные использования &lt;code&gt;do: ...&lt;/code&gt; , &lt;code&gt;else: ...&lt;/code&gt; и друзей в блоки &lt;code&gt;do/end&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; . Обратите внимание, что этот параметр является конвергентным: как только вы установите для него значение &lt;code&gt;true&lt;/code&gt; , все ключевые слова будут преобразованы. Если позже вы установите для него значение &lt;code&gt;false&lt;/code&gt; , блоки &lt;code&gt;do/end&lt;/code&gt; не будут преобразованы обратно в ключевые слова.</target>
        </trans-unit>
        <trans-unit id="c60922aca7a67e715351593e65c1ec5bec306d07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_do_end_blocks&lt;/code&gt; (since v1.9.0) - when &lt;code&gt;true&lt;/code&gt;, converts all inline usages of &lt;code&gt;do: ...&lt;/code&gt;, &lt;code&gt;else: ...&lt;/code&gt; and friends into &lt;code&gt;do/end&lt;/code&gt; blocks. Defaults to &lt;code&gt;false&lt;/code&gt;. Notice this option is convergent: once you set it to &lt;code&gt;true&lt;/code&gt;, all keywords will be converted. If you set it to &lt;code&gt;false&lt;/code&gt; later on, &lt;code&gt;do/end&lt;/code&gt; blocks won't be converted back to keywords.</source>
          <target state="translated">&lt;code&gt;:force_do_end_blocks&lt;/code&gt; (начиная с v1.9.0) - если &lt;code&gt;true&lt;/code&gt; , преобразует все встроенные использования &lt;code&gt;do: ...&lt;/code&gt; , &lt;code&gt;else: ...&lt;/code&gt; и друзей в блоки &lt;code&gt;do/end&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; . Обратите внимание, что этот параметр является конвергентным: как только вы установите для него значение &lt;code&gt;true&lt;/code&gt; , все ключевые слова будут преобразованы. Если позже вы установите для него значение &lt;code&gt;false&lt;/code&gt; , блоки &lt;code&gt;do/end&lt;/code&gt; не будут преобразованы обратно в ключевые слова.</target>
        </trans-unit>
        <trans-unit id="9d4d3ac9df734be7dd80220bc9e297d02f245f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:format&lt;/code&gt; - set to &lt;code&gt;:keyword&lt;/code&gt; when an atom is defined as a keyword</source>
          <target state="translated">&lt;code&gt;:format&lt;/code&gt; - устанавливается в &lt;code&gt;:keyword&lt;/code&gt; если атом определен как ключевое слово</target>
        </trans-unit>
        <trans-unit id="ade4fd03ee5517dde1fbb47e40df60fa69b41ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:format&lt;/code&gt; - the format message used to print logs. Defaults to: &lt;code&gt;&quot;\n$time $metadata[$level] $levelpad$message\n&quot;&lt;/code&gt;. It may also be a &lt;code&gt;{module, function}&lt;/code&gt; tuple that is invoked with the log level, the message, the current timestamp and the metadata.</source>
          <target state="translated">&lt;code&gt;:format&lt;/code&gt; - формат сообщения, используемый для печати журналов. По умолчанию: &lt;code&gt;&quot;\n$time $metadata[$level] $levelpad$message\n&quot;&lt;/code&gt; . Это также может быть кортеж &lt;code&gt;{module, function}&lt;/code&gt; который вызывается с уровнем журнала, сообщением, текущей меткой времени и метаданными.</target>
        </trans-unit>
        <trans-unit id="e03a54c5f8b4324d96f5c6b90954ebbb1a8b9b0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:format&lt;/code&gt; - the logging format for that backend</source>
          <target state="translated">&lt;code&gt;:format&lt;/code&gt; - формат журнала для этого бэкенда</target>
        </trans-unit>
        <trans-unit id="d84013ec019cc9e2e56bab38728273e94b8c9ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:formatters&lt;/code&gt; - the formatters that will print results, defaults to &lt;code&gt;[ExUnit.CLIFormatter]&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:formatters&lt;/code&gt; - средства форматирования, которые будут печатать результаты, по умолчанию &lt;code&gt;[ExUnit.CLIFormatter]&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="9f21f13df07bdf313c4311849a2c4c7d71db3176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definition to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; - (двоичный файл, представляющий путь к файлу) путь к файлу Erlang, который содержит определение записи для извлечения; с этой опцией эта функция использует тот же поиск пути, что &lt;code&gt;-include&lt;/code&gt; атрибут -include, используемый в модулях Erlang.</target>
        </trans-unit>
        <trans-unit id="33d20068b8df920861904c1e148ff56e88ba75e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definitions to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; - (двоичный файл, представляющий путь к файлу) путь к файлу Erlang, который содержит определения записей для извлечения; с этой опцией эта функция использует тот же поиск пути, что &lt;code&gt;-include&lt;/code&gt; атрибут -include, используемый в модулях Erlang.</target>
        </trans-unit>
        <trans-unit id="1f9317e56bb2aad56e242ff43ddc563cc63a8a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from_lib&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definition to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include_lib&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from_lib&lt;/code&gt; - (двоичный файл, представляющий путь к файлу) путь к файлу Erlang, который содержит определение записи для извлечения; с этой опцией эта функция использует тот же поиск пути, что &lt;code&gt;-include_lib&lt;/code&gt; атрибут -include_lib, используемый в модулях Erlang.</target>
        </trans-unit>
        <trans-unit id="d49003a32cd3f3c1ef902e3bb6624c660fbdd61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from_lib&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definitions to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include_lib&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from_lib&lt;/code&gt; - (двоичный файл, представляющий путь к файлу) путь к файлу Erlang, который содержит определения записей для извлечения; с этой опцией эта функция использует тот же поиск пути, что &lt;code&gt;-include_lib&lt;/code&gt; атрибут -include_lib, используемый в модулях Erlang.</target>
        </trans-unit>
        <trans-unit id="a15f514c5261f2207ac9693c997f1808f9cf7867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:function&lt;/code&gt; - purges all messages with the &quot;function/arity&quot; Remember that if you want to purge log calls from a dependency, the dependency must be recompiled.</source>
          <target state="translated">&lt;code&gt;:function&lt;/code&gt; - очищает все сообщения с помощью &quot;function / arity&quot;. Помните, что если вы хотите очистить вызовы журнала из зависимости, зависимость должна быть перекомпилирована.</target>
        </trans-unit>
        <trans-unit id="ea5551a489aceb85424c07198983288e56fbcb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:function&lt;/code&gt; - the current function</source>
          <target state="translated">&lt;code&gt;:function&lt;/code&gt; - текущая функция</target>
        </trans-unit>
        <trans-unit id="e9b6a139e4df7c770149c0dfecde94fd08d77125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:function&lt;/code&gt; - the function to invoke on the child to start it</source>
          <target state="translated">&lt;code&gt;:function&lt;/code&gt; - функция, которую нужно вызвать у дочернего элемента, чтобы запустить его</target>
        </trans-unit>
        <trans-unit id="578ef5825dd77b7c34a43996dbea0fcbbb9ec47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - a keyword list of public functions and their arities</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - список ключевых слов публичных функций и их частей</target>
        </trans-unit>
        <trans-unit id="695e339aa1be99725be5ebefbbb7b3d3ce31cf9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - a list of tuples where the first element is a module and the second a list of imported function names and arity; the list of function names and arity must be sorted</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - список кортежей, где первый элемент является модулем, а второй - списком импортированных имён функций и арности; список имён функций и арности должен быть отсортирован</target>
        </trans-unit>
        <trans-unit id="b75b2d7ee3778a0f844feccaaf563d01109bbe98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - returns a keyword list of protocol functions and their arities</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - возвращает список ключевых слов функций протокола и их составов</target>
        </trans-unit>
        <trans-unit id="54f87ff51516faee1c969434f3cd87556e10c219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - returns keyword list of protocol functions and their arities</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - возвращает список ключевых слов функций протокола и их составов</target>
        </trans-unit>
        <trans-unit id="adcd93b7e5a3a91b160c873261ed426da6ae6e76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gen_server&lt;/code&gt; module documentation</source>
          <target state="translated">&lt;code&gt;:gen_server&lt;/code&gt; документация модуля gen_server</target>
        </trans-unit>
        <trans-unit id="3a890a838aaf1ac05acf878060ab5b7b0624b437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:generated&lt;/code&gt; - Whether the code should be considered as generated by the compiler or not. This means the compiler and tools like Dialyzer may not emit certain warnings.</source>
          <target state="translated">&lt;code&gt;:generated&lt;/code&gt; - Следует ли считать код сгенерированным компилятором или нет. Это означает, что компилятор и такие инструменты, как Dialyzer, могут не выдавать определенные предупреждения.</target>
        </trans-unit>
        <trans-unit id="908d027ada7a560cb6fda994b55682e5a4c4df2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:generated&lt;/code&gt; - marks the given chunk as generated so it does not emit warnings. Currently it only works on special forms (for example, you can annotate a &lt;code&gt;case&lt;/code&gt; but not an &lt;code&gt;if&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:generated&lt;/code&gt; - помечает данный блок как сгенерированный, поэтому предупреждения не выдаются. В настоящее время он работает только со специальными формами (например, вы можете аннотировать &lt;code&gt;case&lt;/code&gt; но не &lt;code&gt;if&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d5e52154a6efa12057a7eb0fcb84cf6b60caafd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:git&lt;/code&gt; - the Git repository URI</source>
          <target state="translated">&lt;code&gt;:git&lt;/code&gt; - URI репозитория Git</target>
        </trans-unit>
        <trans-unit id="aa05859c2357283ba9d40ac1c5dbb182a99b3630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:github&lt;/code&gt; - a shortcut for specifying Git repos from GitHub, uses &lt;code&gt;:git&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:github&lt;/code&gt; - ярлык для указания репозиториев Git из GitHub, использует &lt;code&gt;:git&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70bfc766be50b86a1c2ec8aba9ecab3a461e466f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:global&lt;/code&gt; - (boolean) if &lt;code&gt;true&lt;/code&gt;, all occurrences of &lt;code&gt;pattern&lt;/code&gt; are replaced with &lt;code&gt;replacement&lt;/code&gt;, otherwise only the first occurrence is replaced. Defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:global&lt;/code&gt; - (логическое) если &lt;code&gt;true&lt;/code&gt; , все вхождения &lt;code&gt;pattern&lt;/code&gt; заменяются &lt;code&gt;replacement&lt;/code&gt; , в противном случае заменяется только первое вхождение. По умолчанию &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="097c07e7f6a5f99133f7bd86225e34ba3db42f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:global&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, replaces only the first occurrence (defaults to &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:global&lt;/code&gt; - при &lt;code&gt;false&lt;/code&gt; заменяет только первое вхождение (по умолчанию &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c9131108aa90aaaa873d754ba826d5ebab6b0f22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gt&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is greater than &lt;code&gt;right&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:gt&lt;/code&gt; , если &lt;code&gt;left&lt;/code&gt; больше &lt;code&gt;right&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ecf8939a635a10f38ca06d893312c92484c3f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:halt&lt;/code&gt; - the enumeration should halt immediately</source>
          <target state="translated">&lt;code&gt;:halt&lt;/code&gt; - перечисление должно немедленно прекратиться</target>
        </trans-unit>
        <trans-unit id="4ce6f05ffbb38e1c066d27620fc8cea9f0d957f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:handle_otp_reports&lt;/code&gt; - redirects OTP reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. This effectively disables Erlang standard logger. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:handle_otp_reports&lt;/code&gt; - перенаправляет отчеты OTP в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; ,&lt;/a&gt; чтобы они были отформатированы в терминах Elixir. Это эффективно отключает стандартный регистратор Erlang. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ac6d846aeb20f43f7c6a37e2d65861ac53133e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:handle_sasl_reports&lt;/code&gt; - redirects supervisor, crash and progress reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. Your application must guarantee &lt;code&gt;:sasl&lt;/code&gt; is started before &lt;code&gt;:logger&lt;/code&gt;. This means you may see some initial reports written in Erlang syntax until the Logger application kicks in. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:handle_sasl_reports&lt;/code&gt; - перенаправляет отчеты о диспетчере, сбоях и прогрессе в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; ,&lt;/a&gt; чтобы они были отформатированы в терминах Elixir. Ваше приложение должно гарантировать &lt;code&gt;:sasl&lt;/code&gt; запущен до &lt;code&gt;:logger&lt;/code&gt; . Это означает, что вы можете видеть некоторые начальные отчеты, написанные в синтаксисе Erlang, пока не запустится приложение Logger. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92e59f20a413c1b60ad9a520e7637c7ae404296e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:handle_sasl_reports&lt;/code&gt; - redirects supervisor, crash and progress reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. Your application must guarantee &lt;code&gt;:sasl&lt;/code&gt; is started before &lt;code&gt;:logger&lt;/code&gt;. This means you may see some initial reports written in Erlang syntax until the Logger application kicks in. Defaults to &lt;code&gt;false&lt;/code&gt;. This option only has an effect if &lt;code&gt;:handle_otp_reports&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;:handle_sasl_reports&lt;/code&gt; - перенаправляет отчеты супервизора, сбоях и прогрессе в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; ,&lt;/a&gt; чтобы они были отформатированы в терминах Elixir. Ваше приложение должно гарантировать &lt;code&gt;:sasl&lt;/code&gt; запущен до &lt;code&gt;:logger&lt;/code&gt; . Это означает, что вы можете видеть некоторые начальные отчеты, написанные в синтаксисе Erlang, пока не запустится приложение Logger. По умолчанию &lt;code&gt;false&lt;/code&gt; . Этот параметр действует только в том случае, если &lt;code&gt;:handle_otp_reports&lt;/code&gt; истинно.</target>
        </trans-unit>
        <trans-unit id="fa5396ef39aafd9ba1ea29f7f97ecacb20e94fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hibernate_after&lt;/code&gt; - if present, the GenServer process awaits any message for the given number of milliseconds and if no message is received, the process goes into hibernation automatically (by calling &lt;a href=&quot;http://www.erlang.org/doc/man/proc_lib.html#hibernate-3&quot;&gt;&lt;code&gt;:proc_lib.hibernate/3&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;:hibernate_after&lt;/code&gt; - если присутствует, процесс GenServer ожидает любого сообщения в течение заданного количества миллисекунд, и если сообщение не получено, процесс автоматически переходит в режим гибернации (путем вызова &lt;a href=&quot;http://www.erlang.org/doc/man/proc_lib.html#hibernate-3&quot;&gt; &lt;code&gt;:proc_lib.hibernate/3&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a1b1c0cdff5887100263fab3f10643bcdf4683b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hint&lt;/code&gt; - A suggestion for style or good practices that is not as severe as a warning</source>
          <target state="translated">&lt;code&gt;:hint&lt;/code&gt; - Совет по стилю или передовым методам, не столь серьезный, как предупреждение</target>
        </trans-unit>
        <trans-unit id="4a93d555b0c183bd3e89ff6543fe00eceb84bf8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - a name used to identify the child specification internally by the supervisor; defaults to the given module name for the child worker/supervisor</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - имя, используемое супервизором для внутренней идентификации дочерней спецификации; по умолчанию используется имя данного модуля для дочернего работника / супервизора</target>
        </trans-unit>
        <trans-unit id="5d2bd5a3289d5f6402dff634a2e01ba7da04a087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - any term used to identify the child specification internally by the supervisor; defaults to the given module. In the case of conflicting &lt;code&gt;:id&lt;/code&gt; values, the supervisor will refuse to initialize and require explicit IDs. This key is required.</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - любой термин, используемый для внутренней идентификации дочерней спецификации супервизором; по умолчанию для данного модуля. В случае конфликта значений &lt;code&gt;:id&lt;/code&gt; супервизор откажется от инициализации и потребует явные идентификаторы. Этот ключ обязателен.</target>
        </trans-unit>
        <trans-unit id="9aa32f91c5c26e445e55e9f0a92bec59b0bb5531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - the child specification identifier, defaults to the current module</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - идентификатор дочерней спецификации, по умолчанию текущий модуль</target>
        </trans-unit>
        <trans-unit id="6cf5bda6391a8cb3a87b388b9b9dc7c603361838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ignore_module_conflict&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, override modules that were already defined without raising errors. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:ignore_module_conflict&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , переопределить модули, которые уже были определены, не вызывая ошибок. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ca116b1f5c37d9cd6a0e3232af60e52107229d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ignore_modules&lt;/code&gt; - modules to ignore from generating reports and in summaries</source>
          <target state="translated">&lt;code&gt;:ignore_modules&lt;/code&gt; - модули игнорировать при формировании отчетов и в сводках</target>
        </trans-unit>
        <trans-unit id="8f3adeb15d5af28ec79c623e1e9fe8447ae6c460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:impls&lt;/code&gt; - if consolidated, returns &lt;code&gt;{:consolidated, modules}&lt;/code&gt; with the list of modules implementing the protocol, otherwise &lt;code&gt;:not_consolidated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:impls&lt;/code&gt; - если объединено, возвращает &lt;code&gt;{:consolidated, modules}&lt;/code&gt; : Consolidated , modules} со списком модулей, реализующих протокол, иначе &lt;code&gt;:not_consolidated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1229934663b9059e943e81a8461ae1339830582b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:import&lt;/code&gt; - Used for import hygiene.</source>
          <target state="translated">&lt;code&gt;:import&lt;/code&gt; - Используется для импортной гигиены.</target>
        </trans-unit>
        <trans-unit id="ce107800e4a0df0162fbda2cb03193e0d98e05ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:import&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, one can test a function defined in the module without referring to the module name. However, this is not feasible when there is a clash with a module like &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;. In these cases, &lt;code&gt;:import&lt;/code&gt; should be set to &lt;code&gt;false&lt;/code&gt; and a full &lt;code&gt;Module.function&lt;/code&gt; construct should be used.</source>
          <target state="translated">&lt;code&gt;:import&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , можно протестировать функцию, определенную в модуле, не обращаясь к имени модуля. Однако это невозможно, когда возникает конфликт с таким модулем, как &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; . В этих случаях &lt;code&gt;:import&lt;/code&gt; должно быть установлено в &lt;code&gt;false&lt;/code&gt; и должна использоваться полная конструкция &lt;code&gt;Module.function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f415d526e0c6d59a71639c665cdba961bff539b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:import_deps&lt;/code&gt; (a list of dependencies as atoms) - specifies a list of dependencies whose formatter configuration will be imported. When specified, the formatter should run in the same directory as the &lt;code&gt;mix.exs&lt;/code&gt; file that defines those dependencies. See the &quot;Importing dependencies configuration&quot; section below for more information.</source>
          <target state="translated">&lt;code&gt;:import_deps&lt;/code&gt; (список зависимостей в виде атомов) - указывает список зависимостей, конфигурация форматировщика которых будет импортирована. Если указано, &lt;code&gt;mix.exs&lt;/code&gt; форматирования должно работать в том же каталоге, что и файл mix.exs , определяющий эти зависимости. См. Раздел &amp;laquo;Импорт конфигурации зависимостей&amp;raquo; ниже для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ba6c3a1d8636357d260b9c1b00f69e5f0de8e863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:imports&lt;/code&gt; - a list of already imported paths or &lt;code&gt;:disabled&lt;/code&gt; to disable imports</source>
          <target state="translated">&lt;code&gt;:imports&lt;/code&gt; - список уже импортированных путей или &lt;code&gt;:disabled&lt;/code&gt; для отключения импорта</target>
        </trans-unit>
        <trans-unit id="5a09ae807547a81a4c9084cbbf34a410fa00e607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:in_umbrella&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, sets a path dependency pointing to &quot;../#{app}&quot;, sharing the same environment as the current application</source>
          <target state="translated">&lt;code&gt;:in_umbrella&lt;/code&gt; - при значении &lt;code&gt;true&lt;/code&gt; устанавливает зависимость пути, указывающую на &quot;../#{app}&quot;, используя ту же среду, что и текущее приложение</target>
        </trans-unit>
        <trans-unit id="40146d329bda497ffaba403a459f39a54b2c565a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include&lt;/code&gt; - specifies which tests are run by skipping tests that do not match the filter. Keep in mind that all tests are included by default, so unless they are excluded first, the &lt;code&gt;:include&lt;/code&gt; option has no effect. To only run the tests that match the &lt;code&gt;:include&lt;/code&gt; filter, exclude the &lt;code&gt;:test&lt;/code&gt; tag first (see the documentation for &lt;a href=&quot;exunit.case&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; for more information on tags);</source>
          <target state="translated">&lt;code&gt;:include&lt;/code&gt; - указывает, какие тесты запускаются, пропуская тесты, не соответствующие фильтру. Имейте в виду, что все тесты включены по умолчанию, поэтому, если они не исключены первыми, параметр &lt;code&gt;:include&lt;/code&gt; не действует. Чтобы запускать только те тесты, которые соответствуют фильтру &lt;code&gt;:include&lt;/code&gt; , сначала исключите тег &lt;code&gt;:test&lt;/code&gt; ( дополнительную информацию о тегах см. В документации по &lt;a href=&quot;exunit.case&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; );</target>
        </trans-unit>
        <trans-unit id="a0cd596958147effe57051bf312e4e1bbb99e2e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include&lt;/code&gt; - specifies which tests are run by skipping tests that do not match the filter. Keep in mind that all tests are included by default, so unless they are excluded first, the &lt;code&gt;:include&lt;/code&gt; option has no effect. To only run the tests that match the &lt;code&gt;:include&lt;/code&gt; filter, exclude the &lt;code&gt;:test&lt;/code&gt; tag first (see the documentation for &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; for more information on tags);</source>
          <target state="translated">&lt;code&gt;:include&lt;/code&gt; - указывает, какие тесты запускаются, пропуская тесты, не соответствующие фильтру. Имейте в виду, что все тесты включены по умолчанию, поэтому, если они не исключены первыми, параметр &lt;code&gt;:include&lt;/code&gt; не действует. Чтобы запускать только те тесты, которые соответствуют фильтру &lt;code&gt;:include&lt;/code&gt; , сначала исключите тег &lt;code&gt;:test&lt;/code&gt; ( дополнительную информацию о тегах см. В документации по &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; );</target>
        </trans-unit>
        <trans-unit id="a5c5c52acb1644d22f65a7aa211c2a5ea34cc440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include_captures&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, includes in the result the matches of the regular expression. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:include_captures&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , включает в результат совпадения регулярного выражения. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e82c360d83a985a185957d3ce1f8c164d8529bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include_captures&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, includes in the result the matches of the regular expression. The matches are not counted towards the maximum number of parts if combined with the &lt;code&gt;:parts&lt;/code&gt; option. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:include_captures&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , включает в результат совпадения регулярного выражения. Совпадения не засчитываются в максимальное количество деталей, если они объединены с опцией &lt;code&gt;:parts&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5be0809964f2e96d1bebb4ecb5c254365ad50974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include_erts&lt;/code&gt; - a boolean, string, or anonymous function of arity zero. If a boolean, it indicates whether the Erlang Runtime System (ERTS), which includes the Erlang VM, should be included in the release. The default is &lt;code&gt;true&lt;/code&gt;, which is also the recommended value. If a string, it represents the path to an existing ERTS installation. If an anonymous function of arity zero, it's a function that returns any of the above (boolean or string).</source>
          <target state="translated">&lt;code&gt;:include_erts&lt;/code&gt; - логическая, строковая или анонимная функция с нулевой арностью. Если логическое значение, оно указывает, следует ли включать в выпуск Erlang Runtime System (ERTS), которая включает в себя виртуальную машину Erlang. По умолчанию установлено значение &lt;code&gt;true&lt;/code&gt; , что также является рекомендуемым значением. Если строка, она представляет собой путь к существующей установке ERTS. Если анонимная функция с нулевой арностью, это функция, которая возвращает любое из вышеперечисленного (логическое или строковое).</target>
        </trans-unit>
        <trans-unit id="d155a337a240ac4e471616e4f31fcebd62d0d019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include_executables_for&lt;/code&gt; - a list of atoms detailing for which Operating Systems executable files should be generated for. By default, it is set to &lt;code&gt;[:unix, :windows]&lt;/code&gt;. You can customize those as follows:</source>
          <target state="translated">&lt;code&gt;:include_executables_for&lt;/code&gt; - список атомов, для которых должны быть созданы исполняемые файлы операционных систем. По умолчанию он установлен на &lt;code&gt;[:unix, :windows]&lt;/code&gt; . Вы можете настроить их следующим образом:</target>
        </trans-unit>
        <trans-unit id="36fe3a0812e39b9994016d149c588bc740918b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:included_applications&lt;/code&gt; - specifies a list of applications that will be included in the application. It is the responsibility of the primary application to start the supervision tree of all included applications, as only the primary application will be started. A process in an included application considers itself belonging to the primary application.</source>
          <target state="translated">&lt;code&gt;:included_applications&lt;/code&gt; - указывает список приложений, которые будут включены в приложение. Основное приложение несет ответственность за запуск дерева наблюдения за всеми включенными приложениями, так как будет запущено только основное приложение. Процесс во включенном приложении считает себя принадлежащим основному приложению.</target>
        </trans-unit>
        <trans-unit id="1d219f634d918b08b542c36093a04ed56c728d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:includes&lt;/code&gt; - (a list of directories as binaries) if the record being extracted depends on relative includes, this option allows developers to specify the directory where those relative includes exist.</source>
          <target state="translated">&lt;code&gt;:includes&lt;/code&gt; - (список каталогов в виде двоичных файлов), если извлекаемая запись зависит от относительных включений, этот параметр позволяет разработчикам указать каталог, в котором существуют эти относительные включения.</target>
        </trans-unit>
        <trans-unit id="820f201041639bfdb4c616682c974b417f7529b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:indentation&lt;/code&gt; - (since v1.11.0) an integer added to the column after every new line. Defaults to 0.</source>
          <target state="translated">&lt;code&gt;:indentation&lt;/code&gt; - (начиная с v1.11.0) целое число, добавляемое в столбец после каждой новой строки. По умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="c90155b587f502fb4057a65b9529718fa5ab1a25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:indentation&lt;/code&gt; - indentation of a sigil heredoc</source>
          <target state="translated">&lt;code&gt;:indentation&lt;/code&gt; - отступ сигилы heredoc</target>
        </trans-unit>
        <trans-unit id="8bc58eb044e96d2ac4139b46539604afbedd1b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:index&lt;/code&gt; - (integer) an index into the module function table.</source>
          <target state="translated">&lt;code&gt;:index&lt;/code&gt; - (целое число) индекс в таблице функций модуля.</target>
        </trans-unit>
        <trans-unit id="e190ebd964c6f74899c9d9ea4ffd4740fba1a7dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; - if the child process is a supervisor, this is a mechanism to give the subtree enough time to shut down; it can also be used with workers with care</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; - если дочерний процесс является супервизором, это механизм, дающий поддереву достаточно времени для завершения работы; его также можно использовать с осторожностью</target>
        </trans-unit>
        <trans-unit id="47e7c339f719f1ba87b731d97bfd8f2dcdfe4c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; - the process should wait indefinitely for a matching message, this is the same as not using the after clause</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; - процесс должен бесконечно ждать соответствующего сообщения, это то же самое, что и не использовать предложение after</target>
        </trans-unit>
        <trans-unit id="8df0395a89aeadf01011c4db9e8cf8cc24826aa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; - works as an integer except the supervisor will wait indefinitely for the child to terminate. If the child process is a supervisor, the recommended value is &lt;code&gt;:infinity&lt;/code&gt; to give the supervisor and its children enough time to shut down. This option can be used with regular workers but doing so is discouraged and requires extreme care. If not used carefully, the child process will never terminate, preventing your application from terminating as well.</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; - работает как целое число, за исключением того, что супервизор будет бесконечно ждать завершения дочернего процесса. Если дочерний процесс является супервизором, рекомендуемое значение &lt;code&gt;:infinity&lt;/code&gt; чтобы дать супервизору и его дочерним процессам достаточно времени для завершения. Этот вариант можно использовать с обычными работниками, но это не рекомендуется и требует особой осторожности. При неосторожном использовании дочерний процесс никогда не завершится, что также предотвратит завершение вашего приложения.</target>
        </trans-unit>
        <trans-unit id="a8dbf7115e02240f2b176ba4da6652e8aa75a9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; | &lt;code&gt;non_neg_integer()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; | &lt;code&gt;non_neg_integer()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="135a9903ff3ba53daebd5f5053e4a9ac895c2b35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - (boolean) whether to return information about the timer being cancelled. When the &lt;code&gt;:async&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then either an integer or &lt;code&gt;false&lt;/code&gt; (like described above) is returned. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;:ok&lt;/code&gt; is returned. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, a message in the form &lt;code&gt;{:cancel_timer, timer_ref, result}&lt;/code&gt; (where &lt;code&gt;result&lt;/code&gt; is an integer or &lt;code&gt;false&lt;/code&gt; like described above) is sent to the caller of this function when the cancellation has been performed. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, no message is sent. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - (логическое) следует ли возвращать информацию об отменяемом таймере. Когда параметр &lt;code&gt;:async&lt;/code&gt; имеет значение &lt;code&gt;false&lt;/code&gt; и &lt;code&gt;:info&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , возвращается либо целое число, либо &lt;code&gt;false&lt;/code&gt; (как описано выше). Если &lt;code&gt;:async&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; и &lt;code&gt;:info&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; , возвращается &lt;code&gt;:ok&lt;/code&gt; . Если &lt;code&gt;:async&lt;/code&gt; это &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;:info&lt;/code&gt; это &lt;code&gt;true&lt;/code&gt; , сообщение в виде &lt;code&gt;{:cancel_timer, timer_ref, result}&lt;/code&gt; (где &lt;code&gt;result&lt;/code&gt; является целым числом или &lt;code&gt;false&lt;/code&gt; как описано выше) отправляется вызывающей стороне этой функции, когда отмена выполнена. Если &lt;code&gt;:async&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;:info&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; , сообщение не отправляется. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea2c7e9a7d3590f0ba739f388dc996f1944debaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - color for info and notice messages. Defaults to: &lt;code&gt;:normal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - цвет информационных сообщений и уведомлений. По умолчанию &lt;code&gt;:normal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b4933296bfab87bd658b44b43cd6498e0a849be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - color for info messages. Defaults to: &lt;code&gt;:normal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - цвет информационных сообщений. По умолчанию &lt;code&gt;:normal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db645ea766baec875bdf8d97dda08c9614892961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - for information of any kind</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - для любой информации</target>
        </trans-unit>
        <trans-unit id="65ad5406eae85b862148682b5394ebe457e9ad8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:information&lt;/code&gt; - Any other information relevant to compilation that does not fit into the above categories</source>
          <target state="translated">&lt;code&gt;:information&lt;/code&gt; - Любая другая информация, относящаяся к компиляции, которая не попадает в указанные выше категории.</target>
        </trans-unit>
        <trans-unit id="677f9abb255ccba412c00a34754e5e872e282b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:initial_call&lt;/code&gt; - the initial call that started the process</source>
          <target state="translated">&lt;code&gt;:initial_call&lt;/code&gt; - начальный вызов, запустивший процесс</target>
        </trans-unit>
        <trans-unit id="eb881762becf1312a02306e934cd2eeaa714d436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inputs&lt;/code&gt; (a list of paths and patterns) - specifies the default inputs to be used by this task. For example, &lt;code&gt;[&quot;mix.exs&quot;, &quot;{config,lib,test}/**/*.{ex,exs}&quot;]&lt;/code&gt;. Patterns are expanded with &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html#wildcard/2&quot;&gt;&lt;code&gt;Path.wildcard/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:inputs&lt;/code&gt; (список путей и шаблонов) - указывает входные данные по умолчанию, которые будут использоваться этой задачей. Например, &lt;code&gt;[&quot;mix.exs&quot;, &quot;{config,lib,test}/**/*.{ex,exs}&quot;]&lt;/code&gt; . Шаблоны расширяются с помощью &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html#wildcard/2&quot;&gt; &lt;code&gt;Path.wildcard/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cdb50280c19d880b5cc4cf058f9492f0538d03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inspect_fun&lt;/code&gt; (since v1.9.0) - a function to build algebra documents, defaults to &lt;a href=&quot;inspect#inspect/2&quot;&gt;&lt;code&gt;Inspect.inspect/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:inspect_fun&lt;/code&gt; (начиная с v1.9.0) - функция для построения документов алгебры, по умолчанию &lt;a href=&quot;inspect#inspect/2&quot;&gt; &lt;code&gt;Inspect.inspect/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75fd1ac56a2c815c7a93dbdaea464960dfe042cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inspect_fun&lt;/code&gt; (since v1.9.0) - a function to build algebra documents. Defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html#inspect/2&quot;&gt;&lt;code&gt;Inspect.inspect/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:inspect_fun&lt;/code&gt; (начиная с v1.9.0) - функция для построения документов алгебры. По умолчанию &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html#inspect/2&quot;&gt; &lt;code&gt;Inspect.inspect/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="478c72c9e8ca03f1a7e7055f56f5b7cba72029b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:integer&lt;/code&gt; - parses the value as an integer</source>
          <target state="translated">&lt;code&gt;:integer&lt;/code&gt; - анализирует значение как целое число</target>
        </trans-unit>
        <trans-unit id="fdbc470f79fb94903328c6f39edfa25e4814ce3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:into&lt;/code&gt; - injects the result into the given collectable, defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:into&lt;/code&gt; - вводит результат в указанный объект коллекции, по умолчанию &lt;code&gt;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b762107e1184f8171517179ebe1615a533ac906c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:keep&lt;/code&gt; - Used by &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt; with the option &lt;code&gt;location: :keep&lt;/code&gt; to annotate the file and the line number of the quoted source.</source>
          <target state="translated">&lt;code&gt;:keep&lt;/code&gt; - Используется &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;quote/2&lt;/code&gt; &lt;/a&gt; с опцией &lt;code&gt;location: :keep&lt;/code&gt; для аннотирования файла и номера строки цитируемого источника.</target>
        </trans-unit>
        <trans-unit id="70064458c46048674fd3049e7898d1e0f4d3430a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:keep&lt;/code&gt; - keeps duplicated elements instead of overriding them; works with all types except &lt;code&gt;:count&lt;/code&gt;. Specifying &lt;code&gt;switch_name: :keep&lt;/code&gt; assumes the type of &lt;code&gt;:switch_name&lt;/code&gt; will be &lt;code&gt;:string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:keep&lt;/code&gt; - сохраняет повторяющиеся элементы, а не заменяет их; работает со всеми типами кроме &lt;code&gt;:count&lt;/code&gt; . Указание &lt;code&gt;switch_name: :keep&lt;/code&gt; предполагает, что тип &lt;code&gt;:switch_name&lt;/code&gt; будет &lt;code&gt;:string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39d97c4ff4023dee72a8c0e860d2fb1c6d67bc66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:keys&lt;/code&gt; - choose if keys are &lt;code&gt;:unique&lt;/code&gt; or &lt;code&gt;:duplicate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:keys&lt;/code&gt; - выберите, будут ли ключи &lt;code&gt;:unique&lt;/code&gt; или &lt;code&gt;:duplicate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60a57fda340d8a5254330249f474b8fd2ac6de78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:keys&lt;/code&gt; - chooses if keys are &lt;code&gt;:unique&lt;/code&gt; or &lt;code&gt;:duplicate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:keys&lt;/code&gt; - выбирает, являются ли ключи &lt;code&gt;:unique&lt;/code&gt; или &lt;code&gt;:duplicate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd71fc337316f4ab6feab2c88cf3c5e5a766588b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:kill_task&lt;/code&gt; - the task that timed out is killed. The value emitted for that task is &lt;code&gt;{:exit, :timeout}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:kill_task&lt;/code&gt; - задача, у которой истекло время, уничтожается. Для этой задачи создается значение &lt;code&gt;{:exit, :timeout}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24a084d67c6640e0923595e52dbfd91d8bb01a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:last&lt;/code&gt; - the last date on the range</source>
          <target state="translated">&lt;code&gt;:last&lt;/code&gt; - последняя дата в диапазоне</target>
        </trans-unit>
        <trans-unit id="06e38f3211d4d16b38b267a06c3d3cb0bf0004f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:leex_options&lt;/code&gt; - compilation options that apply to Leex's compiler.</source>
          <target state="translated">&lt;code&gt;:leex_options&lt;/code&gt; - параметры компиляции, которые применяются к компилятору Leex.</target>
        </trans-unit>
        <trans-unit id="1225144aa27034b0d81c58de0f7464a08642bee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the level to be logged by this backend. Note that messages are filtered by the general &lt;code&gt;:level&lt;/code&gt; configuration for the &lt;code&gt;:logger&lt;/code&gt; application first.</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - уровень, который будет регистрироваться этим сервером. Обратите внимание, что сообщения сначала фильтруются по общей конфигурации &lt;code&gt;:level&lt;/code&gt; для приложения &lt;code&gt;:logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e82ef36071e632e2a67467c8c1bc95888dbb2911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the logging level for that backend</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - уровень ведения журнала для этого бэкенда</target>
        </trans-unit>
        <trans-unit id="e57043745e815564b62acd811fcada5bed6106a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the logging level. Attempting to log any message with severity less than the configured level will simply cause the message to be ignored. Keep in mind that each backend may have its specific level, too.</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - уровень логирования. Попытка зарегистрировать любое сообщение с серьезностью ниже настроенного уровня просто приведет к тому, что сообщение будет проигнорировано. Имейте в виду, что у каждой серверной ВМ тоже может быть свой определенный уровень.</target>
        </trans-unit>
        <trans-unit id="d8860795af9e00594498140d1ad5270469756815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the logging level. Attempting to log any message with severity less than the configured level will simply cause the message to be ignored. Keep in mind that each backend may have its specific level, too. In addition to levels mentioned above it also support 2 &quot;meta-levels&quot;:</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - уровень логирования. Попытка зарегистрировать любое сообщение с серьезностью ниже настроенного уровня просто приведет к тому, что сообщение будет проигнорировано. Имейте в виду, что у каждой серверной ВМ тоже может быть свой определенный уровень. В дополнение к упомянутым выше уровням он также поддерживает 2 &amp;laquo;мета-уровня&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="047fbbbddf30ddf9716fb16ebb73a43798921e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level_lower_than&lt;/code&gt; - purges all messages with a lower logger level</source>
          <target state="translated">&lt;code&gt;:level_lower_than&lt;/code&gt; - удаляет все сообщения с более низким уровнем логгера</target>
        </trans-unit>
        <trans-unit id="9bf3d1b72789db394754467f50936fef78e2e7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:limit&lt;/code&gt; - filters out any results with a call count less than the limit</source>
          <target state="translated">&lt;code&gt;:limit&lt;/code&gt; - отфильтровывает любые результаты с количеством звонков меньше лимита</target>
        </trans-unit>
        <trans-unit id="2bce6dc86182edddc8cde120d500ffcdfaf4dc61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:limit&lt;/code&gt; - limits the number of items that are inspected for tuples, bitstrings, maps, lists and any other collection of items, with the exception of printable strings and printable charlists which use the &lt;code&gt;:printable_limit&lt;/code&gt; option. If you don't want to limit the number of items to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;. It accepts a positive integer or &lt;code&gt;:infinity&lt;/code&gt;. Defaults to &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:limit&lt;/code&gt; - ограничивает количество элементов, которые проверяются на наличие кортежей, битовых строк, карт, списков и любых других наборов элементов, за исключением печатаемых строк и печатаемых списков символов, которые используют параметр &lt;code&gt;:printable_limit&lt;/code&gt; . Если вы не хотите ограничивать количество элементов определенным числом, используйте &lt;code&gt;:infinity&lt;/code&gt; . Он принимает положительное целое число или &lt;code&gt;:infinity&lt;/code&gt; . По умолчанию &lt;code&gt;50&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96babec87fbfa1c0a7cbedd90ec6c4d8521799f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:limit&lt;/code&gt; - limits the number of items that are inspected for tuples, bitstrings, maps, lists and any other collection of items. It does not apply to printable strings nor printable charlists and defaults to 50. If you don't want to limit the number of items to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:limit&lt;/code&gt; - ограничивает количество элементов, которые проверяются на наличие кортежей, битовых строк, карт, списков и любых других наборов элементов. Он не применяется ни к печатаемым строкам, ни к печатаемым спискам символов и по умолчанию равен 50. Если вы не хотите ограничивать количество элементов определенным числом, используйте &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ada2f0f60d821eb2050beb051de48a12caeb781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - The line number of the AST node.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - Номер строки узла AST.</target>
        </trans-unit>
        <trans-unit id="4cad28eb5f13df59acaa32093a5192458d9e4265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - an integer representing the line where the function is called</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - целое число, представляющее строку, в которой вызывается функция</target>
        </trans-unit>
        <trans-unit id="116b911288ea64fa4603f7a07c910262702ea937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - sets the quoted expressions to have the given line.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - устанавливает для цитируемых выражений указанную строку.</target>
        </trans-unit>
        <trans-unit id="a6ebd1e3836bd7a3b8c0f87fe479605c7530172f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the current line</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - текущая строка</target>
        </trans-unit>
        <trans-unit id="94adff86d5306cecbe77a7b2a6606dcb16528005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line on which the script starts</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - строка, на которой запускается скрипт</target>
        </trans-unit>
        <trans-unit id="25084f08da62ccd2201c3fa92937e3b739b7ebb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line on which the test was defined</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - строка, на которой был определен тест</target>
        </trans-unit>
        <trans-unit id="1b989307db0050c4efcd1ee3d0a43e008ff59b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line the string starts, used for error reporting</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - строка, с которой начинается строка, используется для сообщения об ошибке</target>
        </trans-unit>
        <trans-unit id="11a2b66d58cf07b5048d9e8d53162ec8ead79bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line to be used as the template start. Defaults to 1.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - строка, которая будет использоваться как начало шаблона. По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="e5c61f6182fbc8078913b865f784e03908578b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the starting line of the string being parsed. Defaults to 1.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - начальная строка анализируемой строки. По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="77bb2d3b2eeb04279005e57fde106fd5ff0f8325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line_length&lt;/code&gt; - the line length to aim for when formatting the document. Defaults to 98. Note this value is used as reference but it is not enforced by the formatter as sometimes user intervention is required. See &quot;Running the formatter&quot; section</source>
          <target state="translated">&lt;code&gt;:line_length&lt;/code&gt; - длина строки, к которой нужно стремиться при форматировании документа. По умолчанию 98. Обратите внимание, что это значение используется как ссылка, но оно не применяется программой форматирования, поскольку иногда требуется вмешательство пользователя. См. Раздел &amp;laquo;Запуск форматера&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="cb1b1a65b908cbf7ce8cd7fdbed7020e111e6090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:listeners&lt;/code&gt; - a list of named processes which are notified of &lt;code&gt;:register&lt;/code&gt; and &lt;code&gt;:unregister&lt;/code&gt; events. The registered process must be monitored by the listener if the listener wants to be notified if the registered process crashes.</source>
          <target state="translated">&lt;code&gt;:listeners&lt;/code&gt; - список именованных процессов, которые получают уведомления о событиях &lt;code&gt;:register&lt;/code&gt; и &lt;code&gt;:unregister&lt;/code&gt; . Зарегистрированный процесс должен отслеживаться слушателем, если слушатель хочет получить уведомление о сбое зарегистрированного процесса.</target>
        </trans-unit>
        <trans-unit id="fa043f0dff064cb682fdd299973d4bc38c3ba50e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:literal_encoder&lt;/code&gt; (since v1.10.0) - how to encode literals in the AST. It must be a function that receives two arguments, the literal and its metadata, and it must return &lt;code&gt;{:ok, ast :: Macro.t}&lt;/code&gt; or &lt;code&gt;{:error, reason :: binary}&lt;/code&gt;. If you return anything than the literal itself as the &lt;code&gt;term&lt;/code&gt;, then the AST is no longer valid. This option may still useful for textual analysis of the source code.</source>
          <target state="translated">&lt;code&gt;:literal_encoder&lt;/code&gt; (начиная с v1.10.0 ) - как кодировать литералы в AST. Это должна быть функция, которая принимает два аргумента, литерал и его метаданные, и должна возвращать &lt;code&gt;{:ok, ast :: Macro.t}&lt;/code&gt; или &lt;code&gt;{:error, reason :: binary}&lt;/code&gt; . Если вы вернете что-либо, кроме самого литерала в качестве &lt;code&gt;term&lt;/code&gt; , то AST больше не действует. Эта опция по-прежнему может быть полезна для текстового анализа исходного кода.</target>
        </trans-unit>
        <trans-unit id="2ec0bdb09a6d07838931ccd4205fe1382a74c2d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:load&lt;/code&gt; - the application is only loaded</source>
          <target state="translated">&lt;code&gt;:load&lt;/code&gt; - приложение только загружается</target>
        </trans-unit>
        <trans-unit id="8e4270b3e26050f47c1f14b584eb23a882fd38e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:local&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple using the machine time</source>
          <target state="translated">&lt;code&gt;:local&lt;/code&gt; - возвращает кортеж &lt;code&gt;{date, time}&lt;/code&gt; с использованием машинного времени</target>
        </trans-unit>
        <trans-unit id="66efb4896e446c1f34523926e772a137032a5ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:local&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple using the same time zone as the machine</source>
          <target state="translated">&lt;code&gt;:local&lt;/code&gt; - возвращает кортеж &lt;code&gt;{date, time}&lt;/code&gt; использующий тот же часовой пояс, что и компьютер</target>
        </trans-unit>
        <trans-unit id="bc19a16ae5fa4808e1f40602f2d27dcd7c7e005c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:locals_without_parens&lt;/code&gt; - a keyword list of name and arity pairs that should be kept without parens whenever possible. The arity may be the atom &lt;code&gt;:*&lt;/code&gt;, which implies all arities of that name. The formatter already includes a list of functions and this option augments this list.</source>
          <target state="translated">&lt;code&gt;:locals_without_parens&lt;/code&gt; - список ключевых слов, состоящий из пар имени и арности, которые по возможности следует хранить без скобок. Арность может быть атомом &lt;code&gt;:*&lt;/code&gt; , что подразумевает все арности этого имени. Средство форматирования уже включает список функций, и эта опция дополняет этот список.</target>
        </trans-unit>
        <trans-unit id="46c8ed9d7abb55c570e2979257428f2694a4603f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:location&lt;/code&gt; - when set to &lt;code&gt;:keep&lt;/code&gt;, keeps the current line and file from quote. Read the &quot;Stacktrace information&quot; section below for more information.</source>
          <target state="translated">&lt;code&gt;:location&lt;/code&gt; - при значении &lt;code&gt;:keep&lt;/code&gt; сохраняет текущую строку и файл в кавычках. Прочтите раздел &amp;laquo;Информация о трассировке стека&amp;raquo; ниже для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="cfcd07593239051faf246484efaebb97ba82d930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:location&lt;/code&gt; - when set to &lt;code&gt;:keep&lt;/code&gt;, keeps the current line and file from quote. Read the Stacktrace information section below for more information.</source>
          <target state="translated">&lt;code&gt;:location&lt;/code&gt; - при значении &lt;code&gt;:keep&lt;/code&gt; сохраняет текущую строку и файл в кавычках. Прочтите раздел информации о Stacktrace ниже для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="5137daa216d64ac53bf38b99f22806a1235171de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lockfile&lt;/code&gt; - the name of the lockfile used by the &lt;code&gt;mix deps.*&lt;/code&gt; family of tasks. Defaults to &lt;code&gt;&quot;mix.lock&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:lockfile&lt;/code&gt; - имя файла блокировки, используемого семейством задач &lt;code&gt;mix deps.*&lt;/code&gt; . По умолчанию &lt;code&gt;&quot;mix.lock&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7ba0e954b25d27630807b5856f0184e746d75a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:logs&lt;/code&gt; - the captured logs</source>
          <target state="translated">&lt;code&gt;:logs&lt;/code&gt; - записанные логи</target>
        </trans-unit>
        <trans-unit id="74e254f6115f1df6d06f6416aceed432de1bf551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:long_compilation_threshold&lt;/code&gt; - the timeout (in seconds) after the &lt;code&gt;:each_long_compilation&lt;/code&gt; callback is invoked; defaults to &lt;code&gt;15&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:long_compilation_threshold&lt;/code&gt; - таймаут (в секундах) после вызова callback- функции &lt;code&gt;:each_long_compilation&lt;/code&gt; ; по умолчанию &lt;code&gt;15&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bac92ef3bb0e22c610f60cb124c66d506c247071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:long_compilation_threshold&lt;/code&gt; - the timeout (in seconds) to check for modules taking too long to compile. For each file that exceeds the threshold, the &lt;code&gt;:each_long_compilation&lt;/code&gt; callback is invoked. From Elixir v1.11, only the time spent compiling the actual module is taken into account by the threshold, the time spent waiting is not considered. Defaults to &lt;code&gt;10&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;:long_compilation_threshold&lt;/code&gt; - таймаут (в секундах) для проверки модулей, компилируемых слишком долго. Для каждого файла, который превышает пороговое значение, &lt;code&gt;:each_long_compilation&lt;/code&gt; обратный вызов : each_long_compilation . Начиная с Elixir v1.11, порогом учитывается только время, затраченное на компиляцию самого модуля, время ожидания не учитывается. По умолчанию &lt;code&gt;10&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="7cd67b3fb5df5bb1987fc9dbcb07baac6819559b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lower&lt;/code&gt; - only allows lower case characters</source>
          <target state="translated">&lt;code&gt;:lower&lt;/code&gt; - разрешены только строчные буквы</target>
        </trans-unit>
        <trans-unit id="7d6e8730dd800cefae2baf72ae743c0716279a2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lower&lt;/code&gt; - uses lower case characters</source>
          <target state="translated">&lt;code&gt;:lower&lt;/code&gt; - использует символы нижнего регистра</target>
        </trans-unit>
        <trans-unit id="f9d48af9aa8969ec86a7796ad15c7f82335435a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ls_device&lt;/code&gt; - ... device entries (ls helper)</source>
          <target state="translated">&lt;code&gt;:ls_device&lt;/code&gt; - ... записи устройства (ls helper)</target>
        </trans-unit>
        <trans-unit id="76a0375cdb3b60feccfdda63d1a539b46cb68d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ls_directory&lt;/code&gt; - ... for directory entries (ls helper)</source>
          <target state="translated">&lt;code&gt;:ls_directory&lt;/code&gt; - ... для записей каталога (ls helper)</target>
        </trans-unit>
        <trans-unit id="506569494edc9248d6a2f2302b4439f2e96276ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lt&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than &lt;code&gt;right&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:lt&lt;/code&gt; , если &lt;code&gt;left&lt;/code&gt; меньше &lt;code&gt;right&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea8b474d5276b62fa7ce3871c317e1304b154515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; - (keyword list of macro names and values) if the record being extracted depends on the values of macros, this option allows the value of those macros to be set.</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; - (список ключевых слов с именами и значениями макросов), если извлекаемая запись зависит от значений макросов, эта опция позволяет установить значение этих макросов.</target>
        </trans-unit>
        <trans-unit id="bdd6fc4b3174a22178b58fcac0146935fec07be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; - a keyword list of public macros and their arities</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; - список ключевых слов публичных макросов и их составов</target>
        </trans-unit>
        <trans-unit id="7f42bda26ea8c1a6a9dd3b2a40ab9a327bd93d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; - a list of tuples where the first element is a module and the second a list of imported macro names and arity; the list of function names and arity must be sorted</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; - список кортежей, где первый элемент - это модуль, а второй - список импортированных имен макросов и их арности; список имён функций и арности должен быть отсортирован</target>
        </trans-unit>
        <trans-unit id="6312c0d6714796c2204270cb1e7d3871b5ef9d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:main_module&lt;/code&gt; - the module to be invoked once the escript starts. The module must contain a function named &lt;code&gt;main/1&lt;/code&gt; that will receive the command line arguments as binaries.</source>
          <target state="translated">&lt;code&gt;:main_module&lt;/code&gt; - модуль, который будет вызываться при запуске эскрипта. Модуль должен содержать функцию с именем &lt;code&gt;main/1&lt;/code&gt; , которая будет получать аргументы командной строки в виде двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="cc3c522f02a3af4dc217288f8b1eb20711817774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:main_module&lt;/code&gt; - the module to be invoked once the escript starts. The module must contain a function named &lt;code&gt;main/1&lt;/code&gt; that will receive the command line arguments. By default the arguments are given as a list of binaries, but if project is configured with &lt;code&gt;language: :erlang&lt;/code&gt; it will be a list of charlists.</source>
          <target state="translated">&lt;code&gt;:main_module&lt;/code&gt; - модуль, который будет вызываться при запуске скрипта. Модуль должен содержать функцию с именем &lt;code&gt;main/1&lt;/code&gt; , которая будет получать аргументы командной строки. По умолчанию аргументы представлены в виде списка двоичных файлов, но если проект настроен с помощью &lt;code&gt;language: :erlang&lt;/code&gt; это будет список списков символов.</target>
        </trans-unit>
        <trans-unit id="49eaeb78baf611c9045b2d73f47f2e066d78d4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:manager&lt;/code&gt; - Mix can also compile Rebar, Rebar3 and makefile projects and can fetch sub dependencies of Rebar and Rebar3 projects. Mix will try to infer the type of project but it can be overridden with this option by setting it to &lt;code&gt;:mix&lt;/code&gt;, &lt;code&gt;:rebar3&lt;/code&gt;, &lt;code&gt;:rebar&lt;/code&gt; or &lt;code&gt;:make&lt;/code&gt;. In case there are conflicting definitions, the first manager in the list above will be picked up. For example, if a dependency is found with &lt;code&gt;:rebar3&lt;/code&gt; and &lt;code&gt;:rebar&lt;/code&gt; managers in different part of the trees, &lt;code&gt;:rebar3&lt;/code&gt; will be automatically picked. You can find the manager by running &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix deps&lt;/code&gt;&lt;/a&gt; and override it by setting the &lt;code&gt;:override&lt;/code&gt; option in a top-level project.</source>
          <target state="translated">&lt;code&gt;:manager&lt;/code&gt; - Mix также может компилировать проекты Rebar, Rebar3 и makefile, а также может получать подчиненные зависимости проектов Rebar и Rebar3. Mix будет пытаться определить тип проекта , но он может быть изменён с помощью этой опции, установив его &lt;code&gt;:mix&lt;/code&gt; , &lt;code&gt;:rebar3&lt;/code&gt; , &lt;code&gt;:rebar&lt;/code&gt; или &lt;code&gt;:make&lt;/code&gt; . В случае противоречивых определений будет выбран первый менеджер в списке выше. Например, если зависимость обнаружена с &lt;code&gt;:rebar3&lt;/code&gt; и &lt;code&gt;:rebar&lt;/code&gt; manager в разных &lt;code&gt;:rebar3&lt;/code&gt; деревьев ,: rebar3 будет выбран автоматически. Вы можете найти менеджера, запустив &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;mix deps&lt;/code&gt; &lt;/a&gt; и переопределить его, установив &lt;code&gt;:override&lt;/code&gt; вариант в проекте верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="96e15db9e5bfbc4ba5285a2fe5b52aa94a4f5e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match_dot&lt;/code&gt; - (boolean) if &lt;code&gt;false&lt;/code&gt;, the special wildcard characters &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; will not match files starting with a dot (&lt;code&gt;.&lt;/code&gt;). If &lt;code&gt;true&lt;/code&gt;, files starting with a &lt;code&gt;.&lt;/code&gt; will not be treated specially. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:match_dot&lt;/code&gt; - (логическое), если &lt;code&gt;false&lt;/code&gt; , специальные символы подстановки &lt;code&gt;*&lt;/code&gt; и &lt;code&gt;?&lt;/code&gt; не будет соответствовать файлам, начинающимся с точки ( &lt;code&gt;.&lt;/code&gt; ). Если это &lt;code&gt;true&lt;/code&gt; , файлы, начинающиеся с &lt;code&gt;.&lt;/code&gt; лечиться особо не буду. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25cfe17ed4d0c17b8947d4488da46751a3647b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:matching&lt;/code&gt; - only profile calls matching the given pattern in form of &lt;code&gt;{module, function, arity}&lt;/code&gt;, where each element may be replaced by &lt;code&gt;:_&lt;/code&gt; to allow any value</source>
          <target state="translated">&lt;code&gt;:matching&lt;/code&gt; - только вызовы профиля, соответствующие заданному шаблону в форме &lt;code&gt;{module, function, arity}&lt;/code&gt; , где каждый элемент может быть заменен на &lt;code&gt;:_&lt;/code&gt; , чтобы разрешить любое значение</target>
        </trans-unit>
        <trans-unit id="42ebd2069ec0f3e2797b61fbde9e009a24ad84bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:maxT&lt;/code&gt; - specifies the maximum time the application is allowed to run, in milliseconds. Applications are stopped if &lt;code&gt;:maxT&lt;/code&gt; is reached, and their top-level supervisor terminated with reason &lt;code&gt;:normal&lt;/code&gt;. This threshold is technically valid in any resource file, but it is only effective for applications with a callback module. Defaults to &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:maxT&lt;/code&gt; - указывает максимальное время, в течение которого приложение может работать, в миллисекундах. Приложения останавливаются, если &lt;code&gt;:maxT&lt;/code&gt; , и их супервизор верхнего уровня завершает работу по причине &lt;code&gt;:normal&lt;/code&gt; . Этот порог технически допустим для любого файла ресурсов, но действует только для приложений с модулем обратного вызова. По умолчанию &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3147b5a0fb2e849450b365c6255880763733efd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_buffer&lt;/code&gt; - maximum events to buffer while waiting for a confirmation from the IO device (default: 32). Once the buffer is full, the backend will block until a confirmation is received.</source>
          <target state="translated">&lt;code&gt;:max_buffer&lt;/code&gt; - максимальное количество событий для буферизации при ожидании подтверждения от устройства ввода-вывода (по умолчанию: 32). Как только буфер заполнится, серверная часть заблокируется до получения подтверждения.</target>
        </trans-unit>
        <trans-unit id="905d135eadf49d07d81b9fabb6a7350712b5784a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_cases&lt;/code&gt; - maximum number of tests to run in parallel. Only tests from different modules run in parallel. It defaults to &lt;code&gt;System.schedulers_online * 2&lt;/code&gt; to optimize both CPU-bound and IO-bound tests;</source>
          <target state="translated">&lt;code&gt;:max_cases&lt;/code&gt; - максимальное количество тестов для параллельного запуска. Параллельно запускаются только тесты из разных модулей. По умолчанию используется &lt;code&gt;System.schedulers_online * 2&lt;/code&gt; для оптимизации тестов, связанных как с процессором, так и с привязкой к вводу-выводу ;</target>
        </trans-unit>
        <trans-unit id="8fab015d698bee7727fc36fea627deb3b1e8c230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_children&lt;/code&gt; - the maximum amount of children to be running under this supervisor at the same time. When &lt;code&gt;:max_children&lt;/code&gt; is exceeded, &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;{:error, :max_children}&lt;/code&gt;. Defaults to &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_children&lt;/code&gt; - максимальное количество детей, которые будут работать под этим супервизором одновременно. Когда &lt;code&gt;:max_children&lt;/code&gt; превышено, &lt;a href=&quot;#start_child/2&quot;&gt; &lt;code&gt;start_child/2&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;{:error, :max_children}&lt;/code&gt; . По умолчанию &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff319be0dd599ba6b214d3212d79f61effc1ee4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_concurrency&lt;/code&gt; - sets the maximum number of tasks to run at the same time. Defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#schedulers_online/0&quot;&gt;&lt;code&gt;System.schedulers_online/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:max_concurrency&lt;/code&gt; - устанавливает максимальное количество задач для одновременного запуска. По умолчанию &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#schedulers_online/0&quot;&gt; &lt;code&gt;System.schedulers_online/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c502e807b79f572af6b184e4e525ad8d305506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_concurrency&lt;/code&gt; - sets the maximum number of tasks to run at the same time. Defaults to &lt;a href=&quot;system#schedulers_online/0&quot;&gt;&lt;code&gt;System.schedulers_online/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:max_concurrency&lt;/code&gt; - устанавливает максимальное количество задач для одновременного запуска. По умолчанию &lt;a href=&quot;system#schedulers_online/0&quot;&gt; &lt;code&gt;System.schedulers_online/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8a51fd2c88faac4f54fbf9a61f83b1a8681a6d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_failures&lt;/code&gt; - the suite stops evaluating tests when this number of test failures is reached. All tests within a module that fail when using the &lt;code&gt;setup_all/1,2&lt;/code&gt; callbacks are counted as failures. Defaults to &lt;code&gt;:infinity&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:max_failures&lt;/code&gt; - набор перестает оценивать тесты, когда достигается это количество неудачных тестов. Все тесты в модуле, которые не &lt;code&gt;setup_all/1,2&lt;/code&gt; при использовании обратных вызовов setup_all / 1,2 , считаются ошибками. По умолчанию &lt;code&gt;:infinity&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="c1f0fbb4a29b3387f5201046cd2e3ba65a10f3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_restarts&lt;/code&gt; - the maximum number of restarts allowed in a time frame. Defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_restarts&lt;/code&gt; - максимальное количество перезапусков, разрешенных за временной интервал. По умолчанию &lt;code&gt;3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="438e5847c9117bcb9f43069717cac9034ce9351b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_restarts&lt;/code&gt;, &lt;code&gt;:max_seconds&lt;/code&gt; and &lt;code&gt;:max_children&lt;/code&gt; - as specified in &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:max_restarts&lt;/code&gt; , &lt;code&gt;:max_seconds&lt;/code&gt; и &lt;code&gt;:max_children&lt;/code&gt; - как указано в &lt;a href=&quot;dynamicsupervisor&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="13165c6f080c8328ea081243ef689529758b0544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_restarts&lt;/code&gt;, &lt;code&gt;:max_seconds&lt;/code&gt; and &lt;code&gt;:max_children&lt;/code&gt; - as specified in &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:max_restarts&lt;/code&gt; , &lt;code&gt;:max_seconds&lt;/code&gt; и &lt;code&gt;:max_children&lt;/code&gt; - как указано в &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="92a2af847d15488a31b261836f27642231b4a122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_seconds&lt;/code&gt; - the time frame in seconds in which &lt;code&gt;:max_restarts&lt;/code&gt; applies. Defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_seconds&lt;/code&gt; - временной интервал в секундах, в котором применяется &lt;code&gt;:max_restarts&lt;/code&gt; . По умолчанию &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dc0a0ea17c02ef8f2ffa4b965899530fd408446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_seconds&lt;/code&gt; - the time frame in which &lt;code&gt;:max_restarts&lt;/code&gt; applies. Defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_seconds&lt;/code&gt; - временной интервал, в котором применяется &lt;code&gt;:max_restarts&lt;/code&gt; . По умолчанию &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c61041dd58d74bdbedb62c521c7f4749e88c0bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:md5&lt;/code&gt; - the MD5 of the module</source>
          <target state="translated">&lt;code&gt;:md5&lt;/code&gt; - MD5 модуля</target>
        </trans-unit>
        <trans-unit id="d988deaf0e7f29872de2d461c32db3cfe2b75adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:meta&lt;/code&gt; - a keyword list of metadata to be attached to the registry.</source>
          <target state="translated">&lt;code&gt;:meta&lt;/code&gt; - список ключевых слов метаданных, которые нужно прикрепить к реестру.</target>
        </trans-unit>
        <trans-unit id="f8c0e8ae95524397c8a10deff38a828266588e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:metadata&lt;/code&gt; - the metadata to be printed by &lt;code&gt;$metadata&lt;/code&gt;. Defaults to an empty list (no metadata). Setting &lt;code&gt;:metadata&lt;/code&gt; to &lt;code&gt;:all&lt;/code&gt; prints all metadata. See the &quot;Metadata&quot; section for more information.</source>
          <target state="translated">&lt;code&gt;:metadata&lt;/code&gt; - метаданные, которые должны быть напечатаны &lt;code&gt;$metadata&lt;/code&gt; . По умолчанию пустой список (без метаданных). Установка &lt;code&gt;:metadata&lt;/code&gt; в &lt;code&gt;:all&lt;/code&gt; печатает все метаданные. См. Раздел &amp;laquo;Метаданные&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="4226f062e7d1ef7200c84fbb24a73070b2503346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:metadata&lt;/code&gt; - the metadata to include in that backend</source>
          <target state="translated">&lt;code&gt;:metadata&lt;/code&gt; - метаданные для включения в этот бэкэнд</target>
        </trans-unit>
        <trans-unit id="423c0a58a79d023b9f5b5d7cf743b5847dc44739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:mfa&lt;/code&gt; - the current module, function and arity</source>
          <target state="translated">&lt;code&gt;:mfa&lt;/code&gt; - текущий модуль, функция и арность</target>
        </trans-unit>
        <trans-unit id="b7aae5a6990f3cfd919e8ecdb09d09ba492bca93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:mismatch&lt;/code&gt; - if the lock doesn't match and we need to simply move to the latest lock</source>
          <target state="translated">&lt;code&gt;:mismatch&lt;/code&gt; - если блокировка не совпадает и нам нужно просто перейти на последнюю блокировку</target>
        </trans-unit>
        <trans-unit id="0dd254815bbc61d41ceac9cf399bee96bce92c84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:mixed&lt;/code&gt; - allows mixed case characters</source>
          <target state="translated">&lt;code&gt;:mixed&lt;/code&gt; - допускает символы в смешанном регистре</target>
        </trans-unit>
        <trans-unit id="596b0c3b3719c76fc8431693379baf1ab0c8bce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:mod&lt;/code&gt; - specifies a module to invoke when the application is started. It must be in the format &lt;code&gt;{Mod, args}&lt;/code&gt; where args is often an empty list. The module specified must implement the callbacks defined by the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;:mod&lt;/code&gt; - указывает модуль, вызываемый при запуске приложения. Он должен быть в формате &lt;code&gt;{Mod, args}&lt;/code&gt; где args часто является пустым списком. Указанный модуль должен реализовывать обратные вызовы, определенные модулем &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="034a02a2f75fdec584b2557986417d5297d5c51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - an atom which is the module where the function is defined when anonymous or the module which the function refers to when it's a named function.</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - атом, который является модулем, в котором функция определена при анонимности, или модулем, на который функция ссылается, если это именованная функция.</target>
        </trans-unit>
        <trans-unit id="03afe92f92a850066369ecbeec077fb8c8730935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - filters out any results not pertaining to the given module</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - отфильтровывает любые результаты, не относящиеся к данному модулю</target>
        </trans-unit>
        <trans-unit id="0552f53025571c2689aef7da69460330435bbcbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - purges all messages with the matching module</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - удаляет все сообщения с соответствующим модулем</target>
        </trans-unit>
        <trans-unit id="e73e68fdc5f4b5f45f5d525de21b134f3514b74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - the current module</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - текущий модуль</target>
        </trans-unit>
        <trans-unit id="44a3a462ffcd267c2d4f890aa1dcb1bb7578f22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - the module atom name</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - имя атома модуля</target>
        </trans-unit>
        <trans-unit id="9552132b93967bd9351a85fab1e15d279d8a46db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - the module on which the test was defined</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - модуль, на котором был определен тест</target>
        </trans-unit>
        <trans-unit id="fc6879076b19a627a0380a04c7a0d2d546631516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - the protocol module atom name</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - имя атома модуля протокола</target>
        </trans-unit>
        <trans-unit id="8b13174d9aff6adff24ee44d0e9d07b2214e3c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module&lt;/code&gt; - the test module</source>
          <target state="translated">&lt;code&gt;:module&lt;/code&gt; - тестовый модуль</target>
        </trans-unit>
        <trans-unit id="2d3cb635d826e6e2f42e31d395df5bc5b08374a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:module_load_timeout&lt;/code&gt; - the timeout to be used when loading a test module in milliseconds, defaults to &lt;code&gt;60_000&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:module_load_timeout&lt;/code&gt; - таймаут, который будет использован при загрузке тестового модуля в миллисекундах, по умолчанию &lt;code&gt;60_000&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="bd0c3449d4231037d7b07d947c468a0259aabd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:modules&lt;/code&gt; - it should be a list with one element &lt;code&gt;[module]&lt;/code&gt;, where module is the name of the callback module only if the child process is a &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;; if the child process is a &lt;a href=&quot;https://hexdocs.pm/elixir/GenEvent.html&quot;&gt;&lt;code&gt;GenEvent&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;:modules&lt;/code&gt; should be &lt;code&gt;:dynamic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:modules&lt;/code&gt; - это должен быть список с одним элементом &lt;code&gt;[module]&lt;/code&gt; , где модуль - это имя модуля обратного вызова, только если дочерний процесс является &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; ; , если дочерний процесс является &lt;a href=&quot;https://hexdocs.pm/elixir/GenEvent.html&quot;&gt; &lt;code&gt;GenEvent&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;:modules&lt;/code&gt; должны быть &lt;code&gt;:dynamic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4de44ef4c35d06879a3ced99558869a7eb86898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:modules&lt;/code&gt; - it should be a list with one element &lt;code&gt;[module]&lt;/code&gt;, where module is the name of the callback module only if the child process is a &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;; if the child process is a &lt;a href=&quot;genevent&quot;&gt;&lt;code&gt;GenEvent&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;:modules&lt;/code&gt; should be &lt;code&gt;:dynamic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:modules&lt;/code&gt; - это должен быть список с одним элементом &lt;code&gt;[module]&lt;/code&gt; , где модуль - это имя модуля обратного вызова, только если дочерний процесс является &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; ; если дочерний процесс &lt;a href=&quot;genevent&quot;&gt; &lt;code&gt;GenEvent&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;:modules&lt;/code&gt; должны быть &lt;code&gt;:dynamic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46c49197edb9f631c7197843c5072be7a2e97cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:monotonic&lt;/code&gt; - the returned integer is monotonically increasing. This means that, on the same runtime instance (but even on different processes), integers returned using the &lt;code&gt;:monotonic&lt;/code&gt; modifier will always be strictly less than integers returned by successive calls with the &lt;code&gt;:monotonic&lt;/code&gt; modifier.</source>
          <target state="translated">&lt;code&gt;:monotonic&lt;/code&gt; - возвращаемое целое число монотонно увеличивается. Это означает, что в одном и том же экземпляре среды выполнения (но даже в разных процессах) целые числа, возвращаемые с использованием модификатора &lt;code&gt;:monotonic&lt;/code&gt; , всегда будут строго меньше, чем целые числа, возвращаемые последовательными вызовами с модификатором &lt;code&gt;:monotonic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fbb5beafe9bc0ad8f2a578809e2d75ff004b389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:month_names&lt;/code&gt; - a function that receives a number and returns the name of the corresponding month, if the option is not received it defaults to a function that returns the month names in English</source>
          <target state="translated">&lt;code&gt;:month_names&lt;/code&gt; - функция, которая получает число и возвращает название соответствующего месяца, если опция не получена, по умолчанию используется функция, которая возвращает названия месяцев на английском языке</target>
        </trans-unit>
        <trans-unit id="fe1bf16ea612e21f7ed9d11d89e86df957666d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - (atom) the name of the function.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - (атом) имя функции.</target>
        </trans-unit>
        <trans-unit id="50c8b0d3195f9dcf65699cef76043138713e0e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - a name to register the supervisor process. Supported values are explained in the &quot;Name registration&quot; section in the documentation for &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. Optional.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя для регистрации процесса супервизора. Поддерживаемые значения объясняются в разделе &amp;laquo;Регистрация имени&amp;raquo; документации &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . По желанию.</target>
        </trans-unit>
        <trans-unit id="cf21f63d401a175a63aabaf39d68fdb4ecd635fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - a name to register the supervisor process. Supported values are explained in the &quot;Name registration&quot; section in the documentation for &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. Optional.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя для регистрации процесса супервизора. Поддерживаемые значения объясняются в разделе &amp;laquo;Регистрация имени&amp;raquo; документации &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . Необязательный.</target>
        </trans-unit>
        <trans-unit id="16f8eb524605e91d50e6381d13c1fec381bf9af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name of the generated escript. Defaults to app name.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя сгенерированного эскрипта. По умолчанию используется имя приложения.</target>
        </trans-unit>
        <trans-unit id="2600c278c31a1e1c8298e6e701956a29855af335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name of the registry and its tables</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя реестра и его таблиц</target>
        </trans-unit>
        <trans-unit id="cb3b7516896f4133c115959b24e1c922f8132f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name of the release as an atom</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - название выпуска в виде атома</target>
        </trans-unit>
        <trans-unit id="128744a3dca6488c56f9f75cfe18ae9e4336a316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the test case name</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя тестового примера</target>
        </trans-unit>
        <trans-unit id="265f58abf2028279ac7fca3abc5074f1e7a643bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the test module name</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя тестового модуля</target>
        </trans-unit>
        <trans-unit id="c3eb020586c1e91919b1e11fc875e674f851d758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the test name</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - название теста</target>
        </trans-unit>
        <trans-unit id="01a18172e153ec90bcdbca66d6e84c34c3288cc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - used for name registration as described in the &quot;Name registration&quot; section in the documentation for &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - используется для регистрации имени, как описано в разделе &amp;laquo;Регистрация имени&amp;raquo; в документации к &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d74908d7eb54c999a9bfde3e2955191d78ff9678" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - used to register a supervisor name, the supported values are described under the &lt;code&gt;Name Registration&lt;/code&gt; section in the &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; module docs;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - используется для регистрации имени супервизора, поддерживаемые значения описаны в разделе &amp;laquo; &lt;code&gt;Name Registration&lt;/code&gt; имени &amp;raquo; в документации модуля &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="90b9c6e1416d732312d68ee3662116ea2ec9441e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - used to register a supervisor name, the supported values are described under the &lt;code&gt;Name Registration&lt;/code&gt; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; module docs;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - используется для регистрации имени супервизора, поддерживаемые значения описаны в разделе &amp;laquo; &lt;code&gt;Name Registration&lt;/code&gt; имени &amp;raquo; в документации модуля &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="acfd8be1ce758b3026bf57dff69111e7fcd5a8ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:new_index&lt;/code&gt; - (integer) an index into the module function table.</source>
          <target state="translated">&lt;code&gt;:new_index&lt;/code&gt; - (целое число) индекс в таблице функций модуля.</target>
        </trans-unit>
        <trans-unit id="161c527608bad21ffff501946a03419dfc142531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:new_uniq&lt;/code&gt; - (binary) a unique value for this function. It's calculated from the compiled code for the entire module.</source>
          <target state="translated">&lt;code&gt;:new_uniq&lt;/code&gt; - (двоичное) уникальное значение для этой функции. Он рассчитывается из скомпилированного кода для всего модуля.</target>
        </trans-unit>
        <trans-unit id="1f6fea81bc1e0f6b5eff26c026b0aee54699962a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nfc&lt;/code&gt; - Normalization Form Canonical Composition. Characters are decomposed and then recomposed by canonical equivalence.</source>
          <target state="translated">&lt;code&gt;:nfc&lt;/code&gt; - Нормализация формы канонической композиции. Персонажи раскладываются, а затем перекомпоновываются в соответствии с канонической эквивалентностью.</target>
        </trans-unit>
        <trans-unit id="7045d14e5dbaf635ddb7e2ebbfa3e40fdcbb6c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nfd&lt;/code&gt; - Normalization Form Canonical Decomposition. Characters are decomposed by canonical equivalence, and multiple combining characters are arranged in a specific order.</source>
          <target state="translated">&lt;code&gt;:nfd&lt;/code&gt; - Каноническая декомпозиция формы нормализации. Символы разложены по канонической эквивалентности, а несколько комбинируемых символов расположены в определенном порядке.</target>
        </trans-unit>
        <trans-unit id="924b1471aedd7ee272f0f448b49401d8347766e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nfkc&lt;/code&gt; - Normalization Form Compatibility Composition. Characters are decomposed and then recomposed by compatibility equivalence.</source>
          <target state="translated">&lt;code&gt;:nfkc&lt;/code&gt; - Композиция совместимости форм нормализации. Символы раскладываются, а затем перекомпоновываются в соответствии с эквивалентностью совместимости.</target>
        </trans-unit>
        <trans-unit id="03bc69da1a1b05d7425651fbce0aa14921cc7fc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nfkd&lt;/code&gt; - Normalization Form Compatibility Decomposition. Characters are decomposed by compatibility equivalence, and multiple combining characters are arranged in a specific order.</source>
          <target state="translated">&lt;code&gt;:nfkd&lt;/code&gt; - Разложение совместимости форм нормализации. Символы раскладываются по эквивалентности совместимости, а несколько комбинируемых символов располагаются в определенном порядке.</target>
        </trans-unit>
        <trans-unit id="a4fd23651aa4ba923efcc2ce067f547b373d352f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:no_warn_undefined&lt;/code&gt; (since v1.10.0) - list of modules and &lt;code&gt;{Mod, fun, arity}&lt;/code&gt; tuples that will not emit warnings that the module or function does not exist at compilation time. Pass atom &lt;code&gt;:all&lt;/code&gt; to skip warning for all undefined functions. This can be useful when doing dynamic compilation. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:no_warn_undefined&lt;/code&gt; (начиная с v1.10.0 ) - список модулей и кортежей &lt;code&gt;{Mod, fun, arity}&lt;/code&gt; , которые не будут выдавать предупреждения о том, что модуль или функция не существует во время компиляции. Передайте atom &lt;code&gt;:all&lt;/code&gt; , чтобы пропустить предупреждение для всех неопределенных функций. Это может быть полезно при динамической компиляции. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4aa6af82b34423b1f6ea582b4cb31c825940854b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:noconnect&lt;/code&gt; - when used, if sending the message would require an auto-connection to another node the message is not sent and &lt;code&gt;:noconnect&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;:noconnect&lt;/code&gt; - при использовании, если для отправки сообщения потребуется автоматическое соединение с другим узлом, сообщение не отправляется и &lt;code&gt;:noconnect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e039a3b05df1dbc0406ab8f52dd05fb5a8365cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:none&lt;/code&gt; - does not return matching subpatterns at all</source>
          <target state="translated">&lt;code&gt;:none&lt;/code&gt; - вообще не возвращает совпадающие подшаблоны</target>
        </trans-unit>
        <trans-unit id="e05cd3cd1ea9b5187e61dc703681711120bf8926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:none&lt;/code&gt; - if there is no translation, which triggers the next translator</source>
          <target state="translated">&lt;code&gt;:none&lt;/code&gt; - если перевода нет, запускает следующий переводчик</target>
        </trans-unit>
        <trans-unit id="8ae0a7eaa97811afd519e3a4653f6c98c9ac6403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:none&lt;/code&gt; - no messages will be logged at all</source>
          <target state="translated">&lt;code&gt;:none&lt;/code&gt; - сообщения вообще не будут регистрироваться</target>
        </trans-unit>
        <trans-unit id="248a5e3e1ddcb8649f57c5d7d49a25803785ca46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:none&lt;/code&gt; - the application is part of the release but it is neither loaded nor started All applications default to &lt;code&gt;:permanent&lt;/code&gt;. By default &lt;code&gt;:applications&lt;/code&gt; includes the current application and all applications the current application depends on, recursively. You can include new applications or change the mode of existing ones by listing them here. The order of the applications given in &lt;code&gt;:applications&lt;/code&gt; will be preserved as much as possible, with only &lt;code&gt;:kernel&lt;/code&gt;, &lt;code&gt;:stdlib&lt;/code&gt;, &lt;code&gt;:sasl&lt;/code&gt;, and &lt;code&gt;:elixir&lt;/code&gt; listed before the given application list. Releases assembled from an umbrella project require this configuration to be explicitly given.</source>
          <target state="translated">&lt;code&gt;:none&lt;/code&gt; - приложение является частью выпуска, но оно не загружается и не запускается. По умолчанию для всех приложений &lt;code&gt;:permanent&lt;/code&gt; . По умолчанию &lt;code&gt;:applications&lt;/code&gt; включает текущее приложение и все приложения, от которых зависит текущее приложение, рекурсивно. Вы можете включить новые приложения или изменить режим существующих, перечислив их здесь. Порядок применения указанного в &lt;code&gt;:applications&lt;/code&gt; будет сохранен как можно больше, только &lt;code&gt;:kernel&lt;/code&gt; , &lt;code&gt;:stdlib&lt;/code&gt; , &lt;code&gt;:sasl&lt;/code&gt; , и &lt;code&gt;:elixir&lt;/code&gt; , перечисленное до данного списка приложений. Релизы, собранные из зонтичного проекта, требуют явного указания этой конфигурации.</target>
        </trans-unit>
        <trans-unit id="249a47ff9128b780dd1578c5de067a02d8afb0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - in such cases, the exit won't be logged, there is no restart in transient mode, and linked processes do not exit</source>
          <target state="translated">&lt;code&gt;:normal&lt;/code&gt; - в таких случаях выход не регистрируется, в переходном режиме перезапуска нет, связанные процессы не выходят</target>
        </trans-unit>
        <trans-unit id="bf16a0cb151458c4bbe810828ac70da7a9c6b053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - used if the startup is a normal startup or if the application is distributed and is started on the current node because of a failover from another node and the application specification key &lt;code&gt;:start_phases&lt;/code&gt; is &lt;code&gt;:undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:normal&lt;/code&gt; - используется , если запуск нормальный запуск или если приложение распространяется и запускается на текущем узле из - за отказа от другого узла и ключа спецификации приложения &lt;code&gt;:start_phases&lt;/code&gt; это &lt;code&gt;:undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0108614a94cf717462c8a940ce89f65176962e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nosuspend&lt;/code&gt; - when used, if sending the message would cause the sender to be suspended the message is not sent and &lt;code&gt;:nosuspend&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;:nosuspend&lt;/code&gt; - при использовании, если отправка сообщения приведет к приостановке отправителя, сообщение не отправляется и &lt;code&gt;:nosuspend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ba01b9670df7bb9a255fb3a91a9ae5681ddde22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:notice&lt;/code&gt; - for normal, but significant, messages</source>
          <target state="translated">&lt;code&gt;:notice&lt;/code&gt; - для нормальных, но значимых сообщений</target>
        </trans-unit>
        <trans-unit id="794865e481978906436be52d4399fc27bf3e5950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ok&lt;/code&gt; - everything is fine</source>
          <target state="translated">&lt;code&gt;:ok&lt;/code&gt; - все нормально</target>
        </trans-unit>
        <trans-unit id="9d697c6fad7644d5c44cc03beb2cdf09f070f143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on&lt;/code&gt; - specifies which captures to split the string on, and in what order. Defaults to &lt;code&gt;:first&lt;/code&gt; which means captures inside the regex do not affect the splitting process.</source>
          <target state="translated">&lt;code&gt;:on&lt;/code&gt; - указывает, какие захваты нужно разделить на строку и в каком порядке. По умолчанию &lt;code&gt;:first&lt;/code&gt; , что означает, что захваты внутри регулярного выражения не влияют на процесс разделения.</target>
        </trans-unit>
        <trans-unit id="b63ce5b92cf87aaf8196a041e1faa21397a5e1a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_eof&lt;/code&gt; - if it should &lt;code&gt;:stop_evaluator&lt;/code&gt; (default) or &lt;code&gt;:halt&lt;/code&gt; the system</source>
          <target state="translated">&lt;code&gt;:on_eof&lt;/code&gt; - если нужно &lt;code&gt;:stop_evaluator&lt;/code&gt; (по умолчанию) или &lt;code&gt;:halt&lt;/code&gt; систему</target>
        </trans-unit>
        <trans-unit id="d548253b9f1938f29a8cd30c79d0668b2da0b00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_timeout&lt;/code&gt; - what do to when a task times out. The possible values are:</source>
          <target state="translated">&lt;code&gt;:on_timeout&lt;/code&gt; - что делать по истечении времени ожидания задачи. Возможные значения:</target>
        </trans-unit>
        <trans-unit id="967f2648d4361145dec902214164deca8962ea9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_timeout&lt;/code&gt; - what to do when a task times out. The possible values are:</source>
          <target state="translated">&lt;code&gt;:on_timeout&lt;/code&gt; - что делать по истечении времени ожидания задачи. Возможные значения:</target>
        </trans-unit>
        <trans-unit id="c005f28aee9fbfc4e81dfedffe4486f2021c9fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:one_for_all&lt;/code&gt; - if a child process terminates, all other child processes are terminated and then all child processes (including the terminated one) are restarted.</source>
          <target state="translated">&lt;code&gt;:one_for_all&lt;/code&gt; - если дочерний процесс завершается, все остальные дочерние процессы завершаются, а затем все дочерние процессы (включая завершенный) перезапускаются.</target>
        </trans-unit>
        <trans-unit id="0336c9bdb63340074782b8de5a2753c895868b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:one_for_one&lt;/code&gt; - if a child process terminates, only that process is restarted.</source>
          <target state="translated">&lt;code&gt;:one_for_one&lt;/code&gt; - если дочерний процесс завершается, перезапускается только этот процесс.</target>
        </trans-unit>
        <trans-unit id="b4da7ffd56200ac235498ad9d226c28f3442d30a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - generates tests only for functions listed (list of &lt;code&gt;{function, arity}&lt;/code&gt; tuples, and/or &lt;code&gt;:moduledoc&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; - генерирует тесты только для перечисленных функций (список кортежей &lt;code&gt;{function, arity}&lt;/code&gt; и / или &lt;code&gt;:moduledoc&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="49745e56745dd2d278e647db8397f06e8ac4651a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - the dependency is made available only in the given environments, useful when declaring dev- or test-only dependencies; by default the dependency will be available in all environments. The value of this option can either be a single environment (like &lt;code&gt;:dev&lt;/code&gt;) or a list of environments (like &lt;code&gt;[:dev, :test]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; - зависимость доступна только в заданных средах, полезно при объявлении зависимостей только для разработки или тестирования; по умолчанию зависимость будет доступна во всех средах. Значением этой опции может быть отдельная среда (например &lt;code&gt;:dev&lt;/code&gt; ) или список сред (например, &lt;code&gt;[:dev, :test]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4a49a5b1a71967998498e4f9c663e9db62e642a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only_operators&lt;/code&gt; - includes only operators</source>
          <target state="translated">&lt;code&gt;:only_operators&lt;/code&gt; - включает только операторов</target>
        </trans-unit>
        <trans-unit id="89ac265643029bb4e9eb87a3a1eb43a83ac0e877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only_test_ids&lt;/code&gt; - a list of &lt;code&gt;{module_name, test_name}&lt;/code&gt; tuples that limits what tests get run;</source>
          <target state="translated">&lt;code&gt;:only_test_ids&lt;/code&gt; - список кортежей &lt;code&gt;{module_name, test_name}&lt;/code&gt; , ограничивающий запуск тестов;</target>
        </trans-unit>
        <trans-unit id="63e34ca0c4f83325812704dbfa01fc6f74cf793a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:opt_release&lt;/code&gt; - OTP release it was compiled with</source>
          <target state="translated">&lt;code&gt;:opt_release&lt;/code&gt; - OTP-релиз, с которым он был скомпилирован</target>
        </trans-unit>
        <trans-unit id="759987ebbfa09610ba0e7f6e23e613bfab1fb35f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:optional&lt;/code&gt; - marks the dependency as optional. In such cases, the current project will always include the optional dependency but any other project that depends on the current project won't be forced to use the optional dependency. However, if the other project includes the optional dependency on its own, the requirements and options specified here will also be applied.</source>
          <target state="translated">&lt;code&gt;:optional&lt;/code&gt; - отмечает зависимость как необязательную. В таких случаях текущий проект всегда будет включать необязательную зависимость, но любой другой проект, который зависит от текущего проекта, не будет вынужден использовать необязательную зависимость. Однако, если другой проект включает в себя дополнительную зависимость, указанные здесь требования и параметры также будут применены.</target>
        </trans-unit>
        <trans-unit id="4d77cd44101dcc68d93ce9599b519201f30be1c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:options&lt;/code&gt; - a keyword list with all other user supplied release options</source>
          <target state="translated">&lt;code&gt;:options&lt;/code&gt; - список ключевых слов со всеми другими вариантами выпуска, предоставленными пользователем</target>
        </trans-unit>
        <trans-unit id="aa75a186c5e0b6e3cd756723da44fdbe7c72a94a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ordered&lt;/code&gt; - whether the results should be returned in the same order as the input stream. This option is useful when you have large streams and don't want to buffer results before they are delivered. This is also useful when you're using the tasks for side effects. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:ordered&lt;/code&gt; - должны ли результаты возвращаться в том же порядке, что и входной поток. Эта опция полезна, когда у вас большие потоки и вы не хотите буферизовать результаты до их доставки. Это также полезно, когда вы используете задачи для побочных эффектов. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f8b8b05abb4b3b7f7a5f17c9cf310b6fda40df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:otp_release&lt;/code&gt; - OTP release it was compiled with</source>
          <target state="translated">&lt;code&gt;:otp_release&lt;/code&gt; - Релиз OTP, с которым он был скомпилирован</target>
        </trans-unit>
        <trans-unit id="783a0b11664c5d60c05a34631d16e5986d51ec9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:outdated&lt;/code&gt; - the repository options are outdated in the lock and we need to trigger a full update</source>
          <target state="translated">&lt;code&gt;:outdated&lt;/code&gt; - параметры репозитория в блокировке устарели и нам нужно запустить полное обновление</target>
        </trans-unit>
        <trans-unit id="109bd51b27eae75e1fd5751b4effad28d8d6894c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:output&lt;/code&gt; - the output directory for cover results. Defaults to &lt;code&gt;&quot;cover&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:output&lt;/code&gt; - выходной каталог для результатов обложки. По умолчанию &lt;code&gt;&quot;cover&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fae85b40b0e9ccda0863d3a8ba7efc8793f8336e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:overlays&lt;/code&gt; - a list of directories with extra files to be copied as is to the release. The &quot;overlays&quot; directory at &lt;code&gt;:rel_templates_path&lt;/code&gt; is always included in this list by default (typically at &quot;rel/overlays&quot;). See the &quot;Overlays&quot; section for more information.</source>
          <target state="translated">&lt;code&gt;:overlays&lt;/code&gt; - список каталогов с дополнительными файлами, которые нужно скопировать в релиз. Каталог &amp;laquo; &lt;code&gt;:rel_templates_path&lt;/code&gt; &amp;raquo; по адресу : rel_templates_path всегда включен в этот список по умолчанию (обычно в &amp;laquo;rel / overlays&amp;raquo;). См. Раздел &amp;laquo;Наложения&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="76158c8f2eabea3e3536d776f5b957d9fce3b9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:overlays&lt;/code&gt; - a list of extra files added to the release. If you have a custom step adding extra files to a release, you can add these files to the &lt;code&gt;:overlays&lt;/code&gt; field so they are also considered on further commands, such as tar/zip. Each entry in overlays is the relative path to the release root of each file</source>
          <target state="translated">&lt;code&gt;:overlays&lt;/code&gt; - список дополнительных файлов, добавленных в релиз. Если у вас есть настраиваемый этап добавления дополнительных файлов в выпуск, вы можете добавить эти файлы в поле &lt;code&gt;:overlays&lt;/code&gt; , чтобы они также учитывались в дальнейших командах, таких как tar / zip. Каждая запись в оверлее - это относительный путь к корню выпуска каждого файла.</target>
        </trans-unit>
        <trans-unit id="dae0f0ed816b6755246a3425d7e89c8cbe1617c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:override&lt;/code&gt; - if set to &lt;code&gt;true&lt;/code&gt; the dependency will override any other definitions of itself by other dependencies</source>
          <target state="translated">&lt;code&gt;:override&lt;/code&gt; - если установлено значение &lt;code&gt;true&lt;/code&gt; , зависимость переопределит любые другие определения себя другими зависимостями</target>
        </trans-unit>
        <trans-unit id="ee21d75db571092b33f3c6e04150d8d96d12186b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:owner&lt;/code&gt; - the PID of the process that started the task</source>
          <target state="translated">&lt;code&gt;:owner&lt;/code&gt; - PID процесса, запустившего задачу</target>
        </trans-unit>
        <trans-unit id="c871b777e9d6dc410ad77517a57eb10ea04f208d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:padding&lt;/code&gt; - specifies whether to apply padding</source>
          <target state="translated">&lt;code&gt;:padding&lt;/code&gt; - указывает, применять ли отступы</target>
        </trans-unit>
        <trans-unit id="05b6bc5dd9b9c177e298ed308bd0312e9879c46e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:padding&lt;/code&gt; - specifies whether to require padding</source>
          <target state="translated">&lt;code&gt;:padding&lt;/code&gt; - указывает, требовать ли заполнения</target>
        </trans-unit>
        <trans-unit id="7e85cd35375539c186e4ef217380868547a2f1d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parallelism&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, the VM will schedule port tasks to improve parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the VM will try to perform commands immediately, improving latency at the expense of parallelism. The default can be set on system startup by passing the &quot;+spp&quot; argument to &lt;code&gt;--erl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:parallelism&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , виртуальная машина будет планировать задачи порта для улучшения параллелизма в системе. Если установлено значение &lt;code&gt;false&lt;/code&gt; , виртуальная машина будет пытаться выполнять команды немедленно, уменьшая задержку за счет параллелизма. Значение по умолчанию можно установить при запуске системы, передав аргумент &quot;+ spp&quot; параметру &lt;code&gt;--erl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="102eba9adcb8ff5954a857f9e93f446ec880188e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parents&lt;/code&gt; - starts the dependency traversal from the given parents instead of the application root</source>
          <target state="translated">&lt;code&gt;:parents&lt;/code&gt; - запускает обход зависимости от заданных родителей вместо корня приложения</target>
        </trans-unit>
        <trans-unit id="ff408c1fbae5e0e2cec9a82d524ed1cb444550c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parser_options&lt;/code&gt; (since v1.10.0) - a keyword list of options to be given to the parser when compiling files. It accepts the same options as &lt;a href=&quot;#string_to_quoted/2&quot;&gt;&lt;code&gt;string_to_quoted/2&lt;/code&gt;&lt;/a&gt; (except by the options that change the AST itself). This can be used in combination with the tracer to retrieve localized information about events happening during compilation. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:parser_options&lt;/code&gt; (начиная с v1.10.0 ) - список ключевых слов параметров, которые будут переданы парсеру при компиляции файлов. Он принимает те же параметры, что и &lt;a href=&quot;#string_to_quoted/2&quot;&gt; &lt;code&gt;string_to_quoted/2&lt;/code&gt; &lt;/a&gt; (за исключением параметров, изменяющих сам AST). Это можно использовать в сочетании с трассировщиком для получения локализованной информации о событиях, происходящих во время компиляции. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3623e6b3ee4e48790eba50c01efff6e8f6ad8dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:partitions&lt;/code&gt; - the number of partitions in the registry. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:partitions&lt;/code&gt; - количество разделов в реестре. По умолчанию &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe591931e54f52a5cb6243fb366662ce3c9e43a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parts&lt;/code&gt; (positive integer or &lt;code&gt;:infinity&lt;/code&gt;) - the string is split into at most as many parts as this option specifies. If &lt;code&gt;:infinity&lt;/code&gt;, the string will be split into all possible parts. Defaults to &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:parts&lt;/code&gt; (положительное целое число или &lt;code&gt;:infinity&lt;/code&gt; ) - строка разбивается на максимальное количество частей, указанное в этой опции. Если &lt;code&gt;:infinity&lt;/code&gt; , строка будет разбита на все возможные части. По умолчанию &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="738e4711d24c22556e9769f827fc877a333c3ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parts&lt;/code&gt; - when specified, splits the string into the given number of parts. If not specified, &lt;code&gt;:parts&lt;/code&gt; defaults to &lt;code&gt;:infinity&lt;/code&gt;, which will split the string into the maximum number of parts possible based on the given pattern.</source>
          <target state="translated">&lt;code&gt;:parts&lt;/code&gt; - если указано, разбивает строку на заданное количество частей. Если не указано ,: &lt;code&gt;:parts&lt;/code&gt; умолчанию &lt;code&gt;:infinity&lt;/code&gt; , что разбивает строку на максимально возможное количество частей на основе заданного шаблона.</target>
        </trans-unit>
        <trans-unit id="f8406b284a5d9f169d7ef202053625ca78690289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path for the dependency</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - путь к зависимости</target>
        </trans-unit>
        <trans-unit id="9b1aae4946c05bf12ef95fc42d018117aef88409" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path the release should be installed to. Defaults to &lt;code&gt;&quot;_build/MIX_ENV/rel/RELEASE_NAME&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - путь, по которому должен быть установлен релиз. По умолчанию &lt;code&gt;&quot;_build/MIX_ENV/rel/RELEASE_NAME&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f91ce8c0b0e2841f4d3256442a382201b31b1118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path to the release root</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - путь к корню релиза</target>
        </trans-unit>
        <trans-unit id="b56c1cc4784009d5aadab5d03f37af62be889258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path to write the escript to. Defaults to app name.</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - путь для записи эскрипта. По умолчанию используется имя приложения.</target>
        </trans-unit>
        <trans-unit id="37ef1282fca65e1ae92072e62b8991b4072fcb4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permanent&lt;/code&gt; - if &lt;code&gt;app&lt;/code&gt; terminates, all other applications and the entire node are also terminated.</source>
          <target state="translated">&lt;code&gt;:permanent&lt;/code&gt; - если &lt;code&gt;app&lt;/code&gt; завершается, все остальные приложения и весь узел также закрываются.</target>
        </trans-unit>
        <trans-unit id="8d66a9301bef60322786bfdd30672123b2332672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permanent&lt;/code&gt; - the application is started and the node shuts down if the application terminates, regardless of reason</source>
          <target state="translated">&lt;code&gt;:permanent&lt;/code&gt; - приложение запускается и узел выключается, если приложение завершает работу, независимо от причины</target>
        </trans-unit>
        <trans-unit id="8173b1a9fdd8413821b53ff0d59ff5ae7d56eec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permanent&lt;/code&gt; - the child process is always restarted</source>
          <target state="translated">&lt;code&gt;:permanent&lt;/code&gt; - дочерний процесс всегда перезапускается</target>
        </trans-unit>
        <trans-unit id="234321a1e7ed8d159948d60118f2b6f61e82c18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permanent&lt;/code&gt; - the child process is always restarted.</source>
          <target state="translated">&lt;code&gt;:permanent&lt;/code&gt; - дочерний процесс всегда перезапускается.</target>
        </trans-unit>
        <trans-unit id="5af1c24ccb0c6eacd3bee795d8a1eb3bffe04c6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:persist&lt;/code&gt; - the attribute will be persisted in the Erlang Abstract Format. Useful when interfacing with Erlang libraries.</source>
          <target state="translated">&lt;code&gt;:persist&lt;/code&gt; - атрибут будет сохранен в абстрактном формате Erlang. Полезно при взаимодействии с библиотеками Erlang.</target>
        </trans-unit>
        <trans-unit id="95c886b860026fac40b14994cc8c7589bc9d5579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:persistent&lt;/code&gt; - persists the given value on application load and reloads</source>
          <target state="translated">&lt;code&gt;:persistent&lt;/code&gt; - сохраняет заданное значение при загрузке и перезагрузке приложения</target>
        </trans-unit>
        <trans-unit id="c1e21c7b8be8dd8f64aa4684e89339f074ceea00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pid&lt;/code&gt; - PID of the process that originally created the function.</source>
          <target state="translated">&lt;code&gt;:pid&lt;/code&gt; - PID процесса, который изначально создал функцию.</target>
        </trans-unit>
        <trans-unit id="6fdd59eeb918211220a78f33fe0ea77139aabb39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pid&lt;/code&gt; - the PID of the task process; &lt;code&gt;nil&lt;/code&gt; if the task does not use a task process</source>
          <target state="translated">&lt;code&gt;:pid&lt;/code&gt; - PID процесса задачи; &lt;code&gt;nil&lt;/code&gt; если задача не использует процесс задачи</target>
        </trans-unit>
        <trans-unit id="89fc2eba42a25521afbb74432f41643f75e1cb86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pid&lt;/code&gt; - the current process identifier</source>
          <target state="translated">&lt;code&gt;:pid&lt;/code&gt; - идентификатор текущего процесса</target>
        </trans-unit>
        <trans-unit id="b5003a88b1f32f3ca59143861dd60c14442ca836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pop&lt;/code&gt;, which implies that the current value under &lt;code&gt;key&lt;/code&gt; should be removed from the structure and returned.</source>
          <target state="translated">&lt;code&gt;:pop&lt;/code&gt; , что означает, что текущее значение &lt;code&gt;key&lt;/code&gt; должно быть удалено из структуры и возвращено.</target>
        </trans-unit>
        <trans-unit id="c23ced478543f9465b4975d50e6ad67db0bc29fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:positive&lt;/code&gt; - the returned integer is guaranteed to be positive.</source>
          <target state="translated">&lt;code&gt;:positive&lt;/code&gt; - возвращаемое целое число гарантированно положительное.</target>
        </trans-unit>
        <trans-unit id="b7eca98f205a2eb6fa4afcfa1aaf0a99d46382c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:posix&lt;/code&gt; - returns the time as integer seconds since epoch</source>
          <target state="translated">&lt;code&gt;:posix&lt;/code&gt; - возвращает время в секундах с начала эпохи</target>
        </trans-unit>
        <trans-unit id="6ba636137c1209daa78b647a6c83aa8569c8a9b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preferred_cli_env&lt;/code&gt; - a keyword list of &lt;code&gt;{task, env}&lt;/code&gt; tuples where &lt;code&gt;task&lt;/code&gt; is the task name as an atom (for example, &lt;code&gt;:&quot;deps.get&quot;&lt;/code&gt;) and &lt;code&gt;env&lt;/code&gt; is the preferred environment (for example, &lt;code&gt;:test&lt;/code&gt;). This option overrides what is specified by the tasks with the &lt;code&gt;@preferred_cli_env&lt;/code&gt; attribute (see the docs for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:preferred_cli_env&lt;/code&gt; - список ключевых слов из кортежей &lt;code&gt;{task, env}&lt;/code&gt; где &lt;code&gt;task&lt;/code&gt; - это имя задачи в виде атома (например &lt;code&gt;:&quot;deps.get&quot;&lt;/code&gt; ), а &lt;code&gt;env&lt;/code&gt; - предпочтительная среда (например ,: &lt;code&gt;:test&lt;/code&gt; ). Этот параметр переопределяет то, что указано задачами с атрибутом &lt;code&gt;@preferred_cli_env&lt;/code&gt; (см. Документацию для &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt; ). По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea02bc9a384e4edfcb6c2cc741dc4786b967cbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preferred_cli_env&lt;/code&gt; - a keyword list of &lt;code&gt;{task, env}&lt;/code&gt; tuples where &lt;code&gt;task&lt;/code&gt; is the task name as an atom (for example, &lt;code&gt;:&quot;deps.get&quot;&lt;/code&gt;) and &lt;code&gt;env&lt;/code&gt; is the preferred environment (for example, &lt;code&gt;:test&lt;/code&gt;). This option overrides what is specified by the tasks with the &lt;code&gt;@preferred_cli_env&lt;/code&gt; attribute (see the docs for &lt;a href=&quot;mix.task&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:preferred_cli_env&lt;/code&gt; - список ключевых слов из кортежей &lt;code&gt;{task, env}&lt;/code&gt; где &lt;code&gt;task&lt;/code&gt; - это имя задачи в виде атома (например &lt;code&gt;:&quot;deps.get&quot;&lt;/code&gt; ), а &lt;code&gt;env&lt;/code&gt; - предпочтительная среда (например ,: &lt;code&gt;:test&lt;/code&gt; ). Этот параметр отменяет то, что указано задачами с атрибутом &lt;code&gt;@preferred_cli_env&lt;/code&gt; (см. Документацию для &lt;a href=&quot;mix.task&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt; ). По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae71f650b5c3ff499f225d9db2c4ded70c2ae8af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preferred_cli_target&lt;/code&gt; - a keyword list of &lt;code&gt;{task, target}&lt;/code&gt; tuples where &lt;code&gt;task&lt;/code&gt; is the task name as an atom (for example, &lt;code&gt;:test&lt;/code&gt;) and &lt;code&gt;target&lt;/code&gt; is the preferred target (for example, &lt;code&gt;:host&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:preferred_cli_target&lt;/code&gt; - список ключевых слов из кортежей &lt;code&gt;{task, target}&lt;/code&gt; где &lt;code&gt;task&lt;/code&gt; - это имя задачи в виде атома (например &lt;code&gt;:test&lt;/code&gt; ), а &lt;code&gt;target&lt;/code&gt; - предпочтительная цель (например &lt;code&gt;:host&lt;/code&gt; ). По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84d8fd01e4ac3a03688d3cb8a217f2a5c5eca7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preferred_date&lt;/code&gt; - a string for the preferred format to show dates, it can't contain the &lt;code&gt;%x&lt;/code&gt; format and defaults to &lt;code&gt;&quot;%Y-%m-%d&quot;&lt;/code&gt; if the option is not received</source>
          <target state="translated">&lt;code&gt;:preferred_date&lt;/code&gt; - строка для предпочтительного формата отображения дат, она не может содержать формат &lt;code&gt;%x&lt;/code&gt; и по умолчанию &lt;code&gt;&quot;%Y-%m-%d&quot;&lt;/code&gt; если опция не получена</target>
        </trans-unit>
        <trans-unit id="2acb98981fffc86ccb3c9e02b9fc07d875791dbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preferred_datetime&lt;/code&gt; - a string for the preferred format to show datetimes, it can't contain the &lt;code&gt;%c&lt;/code&gt; format and defaults to &lt;code&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/code&gt; if the option is not received</source>
          <target state="translated">&lt;code&gt;:preferred_datetime&lt;/code&gt; - строка для предпочтительного формата для отображения даты и времени, она не может содержать формат &lt;code&gt;%c&lt;/code&gt; и по умолчанию &lt;code&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/code&gt; если опция не получена</target>
        </trans-unit>
        <trans-unit id="2655a91978652ca7736d675134eccc73d9c1ea9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preferred_time&lt;/code&gt; - a string for the preferred format to show times, it can't contain the &lt;code&gt;%X&lt;/code&gt; format and defaults to &lt;code&gt;&quot;%H:%M:%S&quot;&lt;/code&gt; if the option is not received</source>
          <target state="translated">&lt;code&gt;:preferred_time&lt;/code&gt; - строка для предпочтительного формата для отображения времени, она не может содержать формат &lt;code&gt;%X&lt;/code&gt; и по умолчанию &lt;code&gt;&quot;%H:%M:%S&quot;&lt;/code&gt; если опция не получена</target>
        </trans-unit>
        <trans-unit id="144b18390df45b9e362d37e94ce800c0b5df1bba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - the IEx prefix</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - префикс IEx</target>
        </trans-unit>
        <trans-unit id="825668baf0806b14b62d6651ff422468cea677d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pretty&lt;/code&gt; - if set to &lt;code&gt;true&lt;/code&gt; enables pretty printing, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:pretty&lt;/code&gt; - если установлено в &lt;code&gt;true&lt;/code&gt; ,то печать будет приятной, по умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35fe279cfbaa96a1845875f08e10ee3bdc928f4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pretty&lt;/code&gt; - if set to &lt;code&gt;true&lt;/code&gt; enables pretty printing. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:pretty&lt;/code&gt; - при значении &lt;code&gt;true&lt;/code&gt; разрешает красивую печать. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3935e14f3fff23b20187323804a993d43587986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:print_app&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, does not print the app name when the command outputs something</source>
          <target state="translated">&lt;code&gt;:print_app&lt;/code&gt; - при &lt;code&gt;false&lt;/code&gt; не печатает имя приложения, когда команда что-то выводит</target>
        </trans-unit>
        <trans-unit id="8601a8e7eca3b625cc8cb07702803a2fe0b6855d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:printable&lt;/code&gt; - the string is split into chunks of printable and non-printable character sequences</source>
          <target state="translated">&lt;code&gt;:printable&lt;/code&gt; - строка разбивается на части печатаемых и непечатаемых последовательностей символов</target>
        </trans-unit>
        <trans-unit id="884c2c0455ef140b143751eb9af36dbb4fc2016c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:printable_limit&lt;/code&gt; - limits the number of characters that are inspected on printable strings and printable charlists. You can use &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#printable?/1&quot;&gt;&lt;code&gt;String.printable?/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/List.html#ascii_printable?/1&quot;&gt;&lt;code&gt;List.ascii_printable?/1&lt;/code&gt;&lt;/a&gt; to check if a given string or charlist is printable. If you don't want to limit the number of characters to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;. It accepts a positive integer or &lt;code&gt;:infinity&lt;/code&gt;. Defaults to &lt;code&gt;4096&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:printable_limit&lt;/code&gt; - ограничивает количество символов, которые проверяются в печатаемых строках и печатаемых списках. Вы можете использовать &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#printable?/1&quot;&gt; &lt;code&gt;String.printable?/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/List.html#ascii_printable?/1&quot;&gt; &lt;code&gt;List.ascii_printable?/1&lt;/code&gt; ,&lt;/a&gt; чтобы проверить, можно ли распечатать данную строку или список символов. Если вы не хотите ограничивать количество символов определенным числом, используйте &lt;code&gt;:infinity&lt;/code&gt; . Он принимает положительное целое число или &lt;code&gt;:infinity&lt;/code&gt; . По умолчанию &lt;code&gt;4096&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79f3790d5f2a7ff6e99ae9f98dc69012ae7abae7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:printable_limit&lt;/code&gt; - limits the number of characters that are inspected on printable strings and printable charlists. You can use &lt;a href=&quot;string#printable?/1&quot;&gt;&lt;code&gt;String.printable?/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#ascii_printable?/1&quot;&gt;&lt;code&gt;List.ascii_printable?/1&lt;/code&gt;&lt;/a&gt; to check if a given string or charlist is printable. Defaults to 4096. If you don't want to limit the number of characters to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:printable_limit&lt;/code&gt; - ограничивает количество символов, которые проверяются в печатаемых строках и печатаемых списках. Вы можете использовать &lt;a href=&quot;string#printable?/1&quot;&gt; &lt;code&gt;String.printable?/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;list#ascii_printable?/1&quot;&gt; &lt;code&gt;List.ascii_printable?/1&lt;/code&gt; ,&lt;/a&gt; чтобы проверить, можно ли распечатать данную строку или список символов. По умолчанию - 4096. Если вы не хотите ограничивать количество символов определенным числом, используйте &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="410adb09a6ecf7e6416cfacc8be4f6d5ae1a9cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prod&lt;/code&gt; - the environment your dependencies run on</source>
          <target state="translated">&lt;code&gt;:prod&lt;/code&gt; - среда, в которой работают ваши зависимости</target>
        </trans-unit>
        <trans-unit id="7a4f54da6e36123b2d0abcd43ec7c9b1ec1bb3a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prod&lt;/code&gt; - the one you will use to run your project in production</source>
          <target state="translated">&lt;code&gt;:prod&lt;/code&gt; - тот, который вы будете использовать для запуска вашего проекта в продакшене</target>
        </trans-unit>
        <trans-unit id="e8914e9825fe8b4a29ce502c2135ef392b326369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:profile&lt;/code&gt; - if set to &lt;code&gt;:time&lt;/code&gt; measure the compilation time of each compilation cycle and group pass checker</source>
          <target state="translated">&lt;code&gt;:profile&lt;/code&gt; - если установлено &lt;code&gt;:time&lt;/code&gt; измеряет время компиляции каждого цикла компиляции и группового прохода проверки</target>
        </trans-unit>
        <trans-unit id="e2b4fb1538eb0b3321b10395f6eeb08b1757f804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prune_metadata&lt;/code&gt; - when true, removes metadata from escaped AST nodes. Note this option changes the semantics of escaped code and it should only be used when escaping ASTs, never values. Defaults to false.</source>
          <target state="translated">&lt;code&gt;:prune_metadata&lt;/code&gt; - при значении true удаляет метаданные из экранированных узлов AST. Обратите внимание, что этот параметр изменяет семантику экранированного кода, и его следует использовать только при экранировании AST, а не значений. По умолчанию false.</target>
        </trans-unit>
        <trans-unit id="c3564ab1b8f04bee127ed8b30a7f4d3a187b2a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prune_runtime_sys_config_after_boot&lt;/code&gt; - if &lt;code&gt;:reboot_system_after_config&lt;/code&gt; is set, every time your system boots, the release will write a config file to your tmp directory. These configuration files are generally small. But if you are concerned with disk space or if you have other restrictions, you can ask the system to remove said config files after boot. The downside is that you will no longer be able to restart the system internally (neither via &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#restart/0&quot;&gt;&lt;code&gt;System.restart/0&lt;/code&gt;&lt;/a&gt; nor &lt;code&gt;bin/RELEASE_NAME restart&lt;/code&gt;). If you need a restart, you will have to terminate the Operating System process and start a new one. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:prune_runtime_sys_config_after_boot&lt;/code&gt; - если &lt;code&gt;:reboot_system_after_config&lt;/code&gt; установлен, каждый раз, когда ваша система загружается, выпуск будет записывать файл конфигурации в ваш каталог tmp. Эти файлы конфигурации обычно небольшие. Но если вас беспокоит место на диске или у вас есть другие ограничения, вы можете попросить систему удалить указанные файлы конфигурации после загрузки. &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#restart/0&quot;&gt; &lt;code&gt;System.restart/0&lt;/code&gt; &lt;/a&gt; является то, что вы больше не сможете перезапустить систему изнутри (ни через System.restart / 0, ни через &lt;code&gt;bin/RELEASE_NAME restart&lt;/code&gt; ). Если вам потребуется перезагрузка, вам придется завершить процесс операционной системы и запустить новый. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b55fb4e95b14772ccbb1186f6f3493e0cf8a0e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:public&lt;/code&gt; &amp;mdash; Read/Write available to all processes. &lt;code&gt;:protected&lt;/code&gt; &amp;mdash; Read available to all processes. Only writable by owner process. This is the default. &lt;code&gt;:private&lt;/code&gt; &amp;mdash; Read/Write limited to owner process.</source>
          <target state="translated">&lt;code&gt;:public&lt;/code&gt; - Чтение / запись доступны для всех процессов. &lt;code&gt;:protected&lt;/code&gt; - Чтение доступно всем процессам. Доступно для записи только процессу владельца. Это значение по умолчанию. &lt;code&gt;:private&lt;/code&gt; - Чтение / запись ограничено процессом владельца.</target>
        </trans-unit>
        <trans-unit id="5a581bcd3ce2b556bb1f31df853ff0e9552f7bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:quiet&lt;/code&gt; - a boolean that controls if releases should write steps to the standard output. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:quiet&lt;/code&gt; - логическое значение, которое определяет, должны ли выпуски записывать шаги в стандартный вывод. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20083b66a02c8c95d37e42271561c5940f79e38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:quiet&lt;/code&gt; - does not log command output</source>
          <target state="translated">&lt;code&gt;:quiet&lt;/code&gt; - не записывает вывод команды</target>
        </trans-unit>
        <trans-unit id="a6ccf057923db37eb056ec1d9f042986f7f93ed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:quiet&lt;/code&gt; - overrides the callback to no-op</source>
          <target state="translated">&lt;code&gt;:quiet&lt;/code&gt; - отменяет обратный вызов на неработающий</target>
        </trans-unit>
        <trans-unit id="dd25440335b576f00d611a518115acf24cbca5f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:quiet&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, do not print the command output</source>
          <target state="translated">&lt;code&gt;:quiet&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; не выводить вывод команды</target>
        </trans-unit>
        <trans-unit id="6bfc26e873b6c092ea866965157d01fa76cb5ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:raw&lt;/code&gt; - a single atom to bypass the file server and only check for the file locally</source>
          <target state="translated">&lt;code&gt;:raw&lt;/code&gt; - один атом для обхода файлового сервера и проверки файла только локально</target>
        </trans-unit>
        <trans-unit id="837ead4ba27d5e026c9a07708c1e9ca692ba17c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read&lt;/code&gt; - the file, which must exist, is opened for reading.</source>
          <target state="translated">&lt;code&gt;:read&lt;/code&gt; - файл, который должен существовать, открывается для чтения.</target>
        </trans-unit>
        <trans-unit id="18ee5e7a81043110ac8844bf70ea56f20fec0c4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:reboot_system_after_config&lt;/code&gt; - every time your release is configured, the system is rebooted to allow the new configuration to take place. You can set this option to &lt;code&gt;false&lt;/code&gt; to disable the rebooting for applications that are sensitive to boot time but, in doing so, note you won't be able to configure system applications, such as &lt;code&gt;:kernel&lt;/code&gt; and &lt;code&gt;:stdlib&lt;/code&gt;. Defaults to &lt;code&gt;true&lt;/code&gt; if using the deprecated &lt;code&gt;config/releases.exs&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;:reboot_system_after_config&lt;/code&gt; - каждый раз, когда ваш выпуск настраивается, система перезагружается, чтобы позволить новую конфигурацию иметь место. Вы можете установить для этого параметра значение &lt;code&gt;false&lt;/code&gt; , чтобы отключить перезагрузку приложений, чувствительных к времени загрузки, но при этом обратите внимание, что вы не сможете настраивать системные приложения, такие как &lt;code&gt;:kernel&lt;/code&gt; и &lt;code&gt;:stdlib&lt;/code&gt; . По умолчанию используется значение &lt;code&gt;true&lt;/code&gt; , если используется устаревший &lt;code&gt;config/releases.exs&lt;/code&gt; , в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41f2b24882408cbe66a5f9e787bb34bbad9bb826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ref&lt;/code&gt; - the reference to checkout (may be a branch, a commit SHA or a tag)</source>
          <target state="translated">&lt;code&gt;:ref&lt;/code&gt; - ссылка на оформление заказа (может быть ветка, SHA фиксации или тег)</target>
        </trans-unit>
        <trans-unit id="9d480f66df0057bb82616e58781811e154a72adc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ref&lt;/code&gt; - the task monitor reference</source>
          <target state="translated">&lt;code&gt;:ref&lt;/code&gt; - справочник монитора задач</target>
        </trans-unit>
        <trans-unit id="417480cff77826d3dfc29a2ea00d2a119bdc3ade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:refute_receive_timeout&lt;/code&gt; - the timeout to be used on &lt;code&gt;refute_receive&lt;/code&gt; calls in milliseconds, defaults to &lt;code&gt;100&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:refute_receive_timeout&lt;/code&gt; - тайм-аут, который будет использоваться &lt;code&gt;refute_receive&lt;/code&gt; вызовов refute_receive в миллисекундах, по умолчанию &lt;code&gt;100&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="069f247f2b60afa78d80169e2487589aa0fff09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:registered&lt;/code&gt; - the name of all registered processes in the application. If your application defines a local GenServer with name &lt;code&gt;MyServer&lt;/code&gt;, it is recommended to add &lt;code&gt;MyServer&lt;/code&gt; to this list. It is most useful in detecting conflicts between applications that register the same names.</source>
          <target state="translated">&lt;code&gt;:registered&lt;/code&gt; - название всех зарегистрированных процессов в приложении. Если ваше приложение определяет локальный GenServer с именем &lt;code&gt;MyServer&lt;/code&gt; , рекомендуется добавить &lt;code&gt;MyServer&lt;/code&gt; в этот список. Это наиболее полезно при обнаружении конфликтов между приложениями, регистрирующими одинаковые имена.</target>
        </trans-unit>
        <trans-unit id="cf01f6a628776e25cb84a45225de3e04054cf3c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:registered&lt;/code&gt; - used for &lt;a href=&quot;#register_attribute/3&quot;&gt;&lt;code&gt;ExUnit.Case.register_attribute/3&lt;/code&gt;&lt;/a&gt; values</source>
          <target state="translated">&lt;code&gt;:registered&lt;/code&gt; - используется для &lt;a href=&quot;#register_attribute/3&quot;&gt; &lt;code&gt;ExUnit.Case.register_attribute/3&lt;/code&gt; &lt;/a&gt; значений</target>
        </trans-unit>
        <trans-unit id="229b5c7ed45f45fed3bc29a08eb916ef712f16c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:registered&lt;/code&gt; - used for &lt;a href=&quot;exunit.case#register_attribute/3&quot;&gt;&lt;code&gt;ExUnit.Case.register_attribute/3&lt;/code&gt;&lt;/a&gt; values</source>
          <target state="translated">&lt;code&gt;:registered&lt;/code&gt; - используется для &lt;a href=&quot;exunit.case#register_attribute/3&quot;&gt; &lt;code&gt;ExUnit.Case.register_attribute/3&lt;/code&gt; &lt;/a&gt; значений</target>
        </trans-unit>
        <trans-unit id="76107f04b252aa2d494b9f3ac57d2e536b8f063b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:registered_name&lt;/code&gt; - the process registered name as an atom</source>
          <target state="translated">&lt;code&gt;:registered_name&lt;/code&gt; - зарегистрированное имя процесса как атом</target>
        </trans-unit>
        <trans-unit id="70e756009c366998da6d0181428a687607c0b064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rel_templates_path&lt;/code&gt; - the path to find template files that are copied to the release, such as &quot;vm.args.eex&quot;, &quot;env.sh.eex&quot; (or &quot;env.bat.eex&quot;), and &quot;overlays&quot;. Defaults to &quot;rel&quot; in the project root.</source>
          <target state="translated">&lt;code&gt;:rel_templates_path&lt;/code&gt; - путь для поиска файлов шаблонов, скопированных в выпуск, таких как &amp;laquo;vm.args.eex&amp;raquo;, &amp;laquo;env.sh.eex&amp;raquo; (или &amp;laquo;env.bat.eex&amp;raquo;) и &amp;laquo;оверлеи&amp;raquo;. По умолчанию в корне проекта используется &quot;rel&quot;.</target>
        </trans-unit>
        <trans-unit id="06becb331a4b35f5874f87f1f273eb1acc1b1ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:relative_paths&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, use relative paths in quoted nodes, warnings and errors generated by the compiler. Note disabling this option won't affect runtime warnings and errors. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:relative_paths&lt;/code&gt; - когда &lt;code&gt;true&lt;/code&gt; , использовать относительные пути в цитируемых узлах, предупреждения и ошибки, генерируемые компилятором. Обратите внимание, что отключение этой опции не повлияет на предупреждения и ошибки во время выполнения. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73bb38eea763b04bfecbf21b97eb5c978955816d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rename_deprecated_at&lt;/code&gt; - rename all known deprecated functions at the given version to their non-deprecated equivalent. It expects a valid &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; which is usually the minimum Elixir version supported by the project.</source>
          <target state="translated">&lt;code&gt;:rename_deprecated_at&lt;/code&gt; - переименовать все известные устаревшие функции данной версии в их нерекомендуемые эквиваленты. Он ожидает действительную &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; которая обычно является минимальной версией Elixir, поддерживаемой проектом.</target>
        </trans-unit>
        <trans-unit id="3c9b9529236ac69920375f4608006430e5e82f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rename_deprecated_at&lt;/code&gt; - rename all known deprecated functions at the given version to their non-deprecated equivalent. It expects a valid &lt;a href=&quot;version&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; which is usually the minimum Elixir version supported by the project.</source>
          <target state="translated">&lt;code&gt;:rename_deprecated_at&lt;/code&gt; - переименовать все известные устаревшие функции данной версии в их нерекомендуемые эквиваленты. Он ожидает действительную &lt;a href=&quot;version&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; которая обычно является минимальной версией Elixir, поддерживаемой проектом.</target>
        </trans-unit>
        <trans-unit id="a041a0b82d4d647034a3e36bbcb3cd58280dd271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:requires&lt;/code&gt; - a list of modules required</source>
          <target state="translated">&lt;code&gt;:requires&lt;/code&gt; - список необходимых модулей</target>
        </trans-unit>
        <trans-unit id="94cf107e8f2ec96f62b5bcda4ba38f57ecdf19f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rest_for_one&lt;/code&gt; - if a child process terminates, the terminated child process and the rest of the children started after it, are terminated and restarted.</source>
          <target state="translated">&lt;code&gt;:rest_for_one&lt;/code&gt; - если дочерний процесс завершается, завершенный дочерний процесс и остальные дочерние процессы, запущенные после него, завершаются и перезапускаются.</target>
        </trans-unit>
        <trans-unit id="68e05441de900538fe9477d909c390fedde76193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; - an atom that defines when a terminated child process should be restarted (see the &quot;Restart values&quot; section below)</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; - атом, определяющий, когда завершенный дочерний процесс должен быть перезапущен (см. раздел &amp;laquo;Значения перезапуска&amp;raquo; ниже)</target>
        </trans-unit>
        <trans-unit id="c3f56495278d055220a28af1dee51e5d16162127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; - an atom that defines when a terminated child process should be restarted (see the &quot;Restart values&quot; section below). This key is optional and defaults to &lt;code&gt;:permanent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; - атом, определяющий, когда должен быть перезапущен завершенный дочерний процесс (см. раздел &amp;laquo;Значения перезапуска&amp;raquo; ниже). Этот ключ является необязательным и по умолчанию &lt;code&gt;:permanent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31df30af299f360d0ce36c8750e7fac18dea49e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; - the restart strategy, may be &lt;code&gt;:temporary&lt;/code&gt; (the default), &lt;code&gt;:transient&lt;/code&gt; or &lt;code&gt;:permanent&lt;/code&gt;. &lt;code&gt;:temporary&lt;/code&gt; means the task is never restarted, &lt;code&gt;:transient&lt;/code&gt; means it is restarted if the exit is not &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, reason}&lt;/code&gt;. A &lt;code&gt;:permanent&lt;/code&gt; restart strategy means it is always restarted. It defaults to &lt;code&gt;:temporary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; - стратегия перезапуска, может быть &lt;code&gt;:temporary&lt;/code&gt; (по умолчанию) &lt;code&gt;:transient&lt;/code&gt; или &lt;code&gt;:permanent&lt;/code&gt; . &lt;code&gt;:temporary&lt;/code&gt; средства задача никогда не перезапускается, &lt;code&gt;:transient&lt;/code&gt; означает , что он будет перезапущен , если выход не &lt;code&gt;:normal&lt;/code&gt; , &lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, reason}&lt;/code&gt; . A &lt;code&gt;:permanent&lt;/code&gt; стратегия постоянного перезапуска означает, что он всегда перезапускается. По умолчанию &lt;code&gt;:temporary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d94868512153cae048d95355b79448372cfe504b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; - when the child should be restarted, defaults to &lt;code&gt;:permanent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; - когда ребенок должен быть перезапущен, по умолчанию &lt;code&gt;:permanent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c63e56060e5424b4a88bbcfb341afd200f5f7897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; - when the child should be restarted, defaults to &lt;code&gt;:temporary&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; - когда ребенок должен быть перезапущен, по умолчанию &lt;code&gt;:temporary&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6de1858d17c1b3a7b52262da84be82d05ba0d46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; - when the supervisor should be restarted, defaults to &lt;code&gt;:permanent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; - при перезапуске супервизора по умолчанию &lt;code&gt;:permanent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2150253b601fd354ccc5f3ad25262c6607dbb5df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; and &lt;code&gt;:shutdown&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html#start_child/3&quot;&gt;&lt;code&gt;Task.Supervisor.start_child/3&lt;/code&gt;&lt;/a&gt; (v1.6)</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; и &lt;code&gt;:shutdown&lt;/code&gt; в &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html#start_child/3&quot;&gt; &lt;code&gt;Task.Supervisor.start_child/3&lt;/code&gt; &lt;/a&gt; (v1.6)</target>
        </trans-unit>
        <trans-unit id="80a64a33880d3d19ac4fdf6ba615bddb3c656767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:restart&lt;/code&gt; and &lt;code&gt;:shutdown&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html#start_link/1&quot;&gt;&lt;code&gt;Task.Supervisor.start_link/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:restart&lt;/code&gt; и &lt;code&gt;:shutdown&lt;/code&gt; в &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html#start_link/1&quot;&gt; &lt;code&gt;Task.Supervisor.start_link/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="440372047cb7510fed08fef14217a8f597bd7289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:return&lt;/code&gt; - set to &lt;code&gt;:index&lt;/code&gt; to return byte index and match length. Defaults to &lt;code&gt;:binary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:return&lt;/code&gt; - установите &lt;code&gt;:index&lt;/code&gt; для возврата байтового индекса и длины совпадения. По умолчанию &lt;code&gt;:binary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84b43d88cd9627077946c3ac8fe36d289275998a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:return&lt;/code&gt; - when set to &lt;code&gt;:index&lt;/code&gt;, returns byte index and match length. Defaults to &lt;code&gt;:binary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:return&lt;/code&gt; - если установлено &lt;code&gt;:index&lt;/code&gt; , возвращает индекс байта и длину совпадения. По умолчанию &lt;code&gt;:binary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38002dbf053bffbccd100620de9a971d9751a6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:revision&lt;/code&gt; - short Git revision hash. If Git was not available at building time, it is set to &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:revision&lt;/code&gt; - короткий хеш ревизии Git. Если Git был недоступен во время сборки, для него устанавливается значение &lt;code&gt;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47ad37a4945d66cff0b511df34d8cb047955022d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:runtime&lt;/code&gt; - whether the dependency is part of runtime applications. If the &lt;code&gt;:applications&lt;/code&gt; key is not provided in &lt;code&gt;def application&lt;/code&gt; in your &lt;code&gt;mix.exs&lt;/code&gt; file, Mix will automatically include all dependencies as a runtime application, except if &lt;code&gt;runtime: false&lt;/code&gt; is given. Defaults to true.</source>
          <target state="translated">&lt;code&gt;:runtime&lt;/code&gt; - является ли зависимость частью исполняемых приложений. Если ключ &lt;code&gt;:applications&lt;/code&gt; не &lt;code&gt;mix.exs&lt;/code&gt; в &lt;code&gt;def application&lt;/code&gt; в вашем файле mix.exs , Mix автоматически включит все зависимости как приложение времени выполнения, за исключением случаев, когда указано &lt;code&gt;runtime: false&lt;/code&gt; . По умолчанию true.</target>
        </trans-unit>
        <trans-unit id="6b4fe43590698ba79e552053214a3aec256f4156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:safe&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, failures while inspecting structs will be raised as errors instead of being wrapped in the &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Error.html&quot;&gt;&lt;code&gt;Inspect.Error&lt;/code&gt;&lt;/a&gt; exception. This is useful when debugging failures and crashes for custom inspect implementations.</source>
          <target state="translated">&lt;code&gt;:safe&lt;/code&gt; - если &lt;code&gt;false&lt;/code&gt; , сбои при проверке структур будут выдаваться как ошибки, а не заключаться в исключение &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Error.html&quot;&gt; &lt;code&gt;Inspect.Error&lt;/code&gt; &lt;/a&gt; . Это полезно при отладке сбоев и сбоев для пользовательских реализаций проверки.</target>
        </trans-unit>
        <trans-unit id="00d27bf7444b8506e92e835fad445d9f5d17c7a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:safe&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, failures while inspecting structs will be raised as errors instead of being wrapped in the &lt;a href=&quot;inspect.error&quot;&gt;&lt;code&gt;Inspect.Error&lt;/code&gt;&lt;/a&gt; exception. This is useful when debugging failures and crashes for custom inspect implementations.</source>
          <target state="translated">&lt;code&gt;:safe&lt;/code&gt; - если &lt;code&gt;false&lt;/code&gt; , сбои при проверке структур будут выдаваться как ошибки, а не заключаться в исключение &lt;a href=&quot;inspect.error&quot;&gt; &lt;code&gt;Inspect.Error&lt;/code&gt; &lt;/a&gt; . Это полезно при отладке сбоев и сбоев для пользовательских реализаций проверки.</target>
        </trans-unit>
        <trans-unit id="001fb2888a3bbf8f2282716dcd9bc9e213771931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:second&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt;, etc. (v1.4)</source>
          <target state="translated">&lt;code&gt;:second&lt;/code&gt; , &lt;code&gt;:millisecond&lt;/code&gt; , и т.д. (v1.4)</target>
        </trans-unit>
        <trans-unit id="fc20f799112d39f70e51b99fd18bdd1c1ee396e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:seconds&lt;/code&gt;, &lt;code&gt;:milliseconds&lt;/code&gt;, etc. as time units</source>
          <target state="translated">&lt;code&gt;:seconds&lt;/code&gt; , &lt;code&gt;:milliseconds&lt;/code&gt; , и т.д. , как единицы времени</target>
        </trans-unit>
        <trans-unit id="998c92a04eac1b1ae60c5fb46272bef007b2eaa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:seed&lt;/code&gt; - an integer seed value to randomize the test suite. This seed is also mixed with the test module and name to create a new unique seed on every test, which is automatically fed into the &lt;code&gt;:rand&lt;/code&gt; module. This provides randomness between tests, but predictable and reproducible results;</source>
          <target state="translated">&lt;code&gt;:seed&lt;/code&gt; - целое начальное значение для рандомизации набора тестов. Это семя также смешивается с тестовым модулем и именем, чтобы создать новое уникальное семя для каждого теста, которое автоматически передается в модуль &lt;code&gt;:rand&lt;/code&gt; . Это обеспечивает случайность между тестами, но предсказуемые и воспроизводимые результаты;</target>
        </trans-unit>
        <trans-unit id="6f522c42e08b6faff3741f41a44a8b151be7a4ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:separator&lt;/code&gt; - the separator used between each doc</source>
          <target state="translated">&lt;code&gt;:separator&lt;/code&gt; - разделитель, используемый между каждым документом</target>
        </trans-unit>
        <trans-unit id="3df407e63d4f1dd306d22158c48447875dcd44a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shebang&lt;/code&gt; - shebang interpreter directive used to execute the escript. Defaults to &lt;code&gt;&quot;#! /usr/bin/env escript\n&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:shebang&lt;/code&gt; - директива интерпретатора shebang, используемая для выполнения сценария. По умолчанию &lt;code&gt;&quot;#! /usr/bin/env escript\n&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac59fe1ea179551b1d0d56d67d2e5ba3c352a0ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; - &lt;code&gt;:brutal_kill&lt;/code&gt; if the tasks must be killed directly on shutdown or an integer indicating the timeout value, defaults to 5000 milliseconds.</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; - &lt;code&gt;:brutal_kill&lt;/code&gt; , если задачи должны быть завершены непосредственно при завершении работы, или целое число, указывающее значение тайм-аута, по умолчанию 5000 миллисекунд.</target>
        </trans-unit>
        <trans-unit id="936a9bb35e41ad39f3649a9ecb5c019ee144362b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; - &lt;code&gt;:brutal_kill&lt;/code&gt; if the tasks must be killed directly on shutdown or an integer indicating the timeout value. Defaults to &lt;code&gt;5000&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; - &lt;code&gt;:brutal_kill&lt;/code&gt; , если задачи должны быть завершены непосредственно при завершении работы, или целое число, указывающее значение тайм-аута. По умолчанию &lt;code&gt;5000&lt;/code&gt; миллисекунд.</target>
        </trans-unit>
        <trans-unit id="1cf41cf5f20acc429222ecbf9a193bced833b34a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; - an atom that defines how a child process should be terminated (see the &quot;Shutdown values&quot; section below)</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; - атом, определяющий, как должен завершаться дочерний процесс (см. раздел &amp;laquo;Значения выключения&amp;raquo; ниже)</target>
        </trans-unit>
        <trans-unit id="9620978d3a10c2d505e327fdfaf699eced8b0449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; - an atom that defines how a child process should be terminated (see the &quot;Shutdown values&quot; section below). This key is optional and defaults to &lt;code&gt;5000&lt;/code&gt; if the type is &lt;code&gt;:worker&lt;/code&gt; or &lt;code&gt;:infinity&lt;/code&gt; if the type is &lt;code&gt;:supervisor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; - атом, определяющий, как должен завершаться дочерний процесс (см. раздел &amp;laquo;Значения выключения&amp;raquo; ниже). Этот ключ является необязательным и по умолчанию равен &lt;code&gt;5000&lt;/code&gt; , если тип &lt;code&gt;:worker&lt;/code&gt; , или &lt;code&gt;:infinity&lt;/code&gt; , если тип &lt;code&gt;:supervisor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a298b809646f9726faf7a54db690bceabcd9ffe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; - an integer or atom that defines how a child process should be terminated (see the &quot;Shutdown values&quot; section below). This key is optional and defaults to &lt;code&gt;5_000&lt;/code&gt; if the type is &lt;code&gt;:worker&lt;/code&gt; or &lt;code&gt;:infinity&lt;/code&gt; if the type is &lt;code&gt;:supervisor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; - целое число или атом, определяющий, как должен завершаться дочерний процесс (см. раздел &amp;laquo;Значения выключения&amp;raquo; ниже). Этот ключ является необязательным и по умолчанию &lt;code&gt;5_000&lt;/code&gt; если тип &lt;code&gt;:worker&lt;/code&gt; , или &lt;code&gt;:infinity&lt;/code&gt; , если тип &lt;code&gt;:supervisor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddcaa1d742adc479e7f57ff4367400cc87484a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; - how to shut down the child, either immediately or by giving it time to shut down</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; - как выключить ребенка, либо сразу, либо дав ему время выключиться</target>
        </trans-unit>
        <trans-unit id="b1aba46cc3edbcb6180c7652dcd34c6ba320a2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, term}&lt;/code&gt; - in such cases, the exit won't be logged, there is no restart in transient mode, and linked processes exit with the same reason unless they're trapping exits</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, term}&lt;/code&gt; - в таких случаях выход не регистрируется, перезапуск в переходном режиме не выполняется, а связанные процессы завершаются по той же причине, если только они не перехватывают выходы</target>
        </trans-unit>
        <trans-unit id="9b75f4be45ab868e30a756df9409b11d4ccc9da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:simple_one_for_one&lt;/code&gt; strategy in &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:simple_one_for_one&lt;/code&gt; стратегия simple_one_for_one в &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="266532d049cf506370e108062bc4a50658b5256d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:skip&lt;/code&gt; - if the message is not meant to be translated nor logged</source>
          <target state="translated">&lt;code&gt;:skip&lt;/code&gt; - если сообщение не предназначено для перевода или регистрации</target>
        </trans-unit>
        <trans-unit id="ff7f81cb7821c0feece478ab371981af6cf1f69a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:skip&lt;/code&gt; - skips the test with the given reason</source>
          <target state="translated">&lt;code&gt;:skip&lt;/code&gt; - пропускает тест по указанной причине</target>
        </trans-unit>
        <trans-unit id="022caec0dc167b29f0c878de3ec67c7ab0c56551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:skip_operators&lt;/code&gt; - skips operators</source>
          <target state="translated">&lt;code&gt;:skip_operators&lt;/code&gt; - пропускает операторы</target>
        </trans-unit>
        <trans-unit id="a4b3697aab2485b4ee7ea6ef4fb2eecc63a70d5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:slowest&lt;/code&gt; - prints timing information for the N slowest tests. Running ExUnit with slow test reporting automatically runs in &lt;code&gt;trace&lt;/code&gt; mode. It is disabled by default;</source>
          <target state="translated">&lt;code&gt;:slowest&lt;/code&gt; - выводит информацию о времени для N самых медленных тестов. Запуск ExUnit с медленными отчетами о тестах автоматически запускается в режиме &lt;code&gt;trace&lt;/code&gt; . По умолчанию он отключен;</target>
        </trans-unit>
        <trans-unit id="61a5ecc1db838c978ad68e03c29acffb369c9b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:sort&lt;/code&gt; - sort the results by &lt;code&gt;:time&lt;/code&gt; or &lt;code&gt;:calls&lt;/code&gt; (default: &lt;code&gt;:time&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:sort&lt;/code&gt; - отсортировать результаты по &lt;code&gt;:time&lt;/code&gt; или &lt;code&gt;:calls&lt;/code&gt; (по умолчанию &lt;code&gt;:time&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5a0fbd35060bc33058f26c75fbb0786746853984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:sort&lt;/code&gt; - sorts the output by given key: &lt;code&gt;:acc&lt;/code&gt; (default) or &lt;code&gt;:own&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:sort&lt;/code&gt; - сортирует вывод по заданному ключу &lt;code&gt;:acc&lt;/code&gt; (по умолчанию) или &lt;code&gt;:own&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9e7c356c97afffd3a818fde5198c984e991605e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:sparse&lt;/code&gt; - checkout a single directory inside the Git repository and use it as your Mix dependency. Search &quot;sparse Git checkouts&quot; for more information.</source>
          <target state="translated">&lt;code&gt;:sparse&lt;/code&gt; - получить единственный каталог внутри репозитория Git и использовать его в качестве зависимости Mix. Для получения дополнительной информации выполните поиск по запросу &amp;laquo;sparse Git checkouts&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f7c0ae6bc71ab6ce71807d74b1d6644314067777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:sparse&lt;/code&gt; - checkout a single directory inside the Git repository and use it as your Mix dependency. Search &quot;sparse git checkouts&quot; for more information.</source>
          <target state="translated">&lt;code&gt;:sparse&lt;/code&gt; - получить единственный каталог внутри репозитория Git и использовать его в качестве зависимости Mix. Для получения дополнительной информации выполните поиск по запросу &quot;sparse git checkouts&quot;.</target>
        </trans-unit>
        <trans-unit id="8f14b0c78d56b7cb533ee482d5f2f0bb4eb40c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:spawn&lt;/code&gt; will retrieve the program name from the argument and traverse your operating system &lt;code&gt;$PATH&lt;/code&gt; environment variable looking for a matching program.</source>
          <target state="translated">&lt;code&gt;:spawn&lt;/code&gt; получит имя программы из аргумента и будет просматривать &lt;code&gt;$PATH&lt;/code&gt; среды $ PATH вашей операционной системы в поисках подходящей программы.</target>
        </trans-unit>
        <trans-unit id="de505a352b524c46739338344225c7fc86e2e90b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:spawn_opt&lt;/code&gt; - if present, its value is passed as options to the underlying process as in &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html#spawn/4&quot;&gt;&lt;code&gt;Process.spawn/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:spawn_opt&lt;/code&gt; - если присутствует, его значение передается в качестве параметров базовому процессу, как в &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html#spawn/4&quot;&gt; &lt;code&gt;Process.spawn/4&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bc8c2fc08c495bee7787edbf2eea78df04638c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:spawn_opt&lt;/code&gt; - if present, its value is passed as options to the underlying process as in &lt;a href=&quot;process#spawn/4&quot;&gt;&lt;code&gt;Process.spawn/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:spawn_opt&lt;/code&gt; - если присутствует, его значение передается в качестве параметров базовому процессу, как в &lt;a href=&quot;process#spawn/4&quot;&gt; &lt;code&gt;Process.spawn/4&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd4275872253e2afba277f439142884806fb692e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:specs&lt;/code&gt; - the number of children processes</source>
          <target state="translated">&lt;code&gt;:specs&lt;/code&gt; - количество дочерних процессов</target>
        </trans-unit>
        <trans-unit id="3a46b61f201e318f7905a2d0fe61831192204a3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:specs&lt;/code&gt; - the total count of children, dead or alive</source>
          <target state="translated">&lt;code&gt;:specs&lt;/code&gt; - общее количество детей, мертвых или живых</target>
        </trans-unit>
        <trans-unit id="9d3891b26de246a89814cfdd208bf4676f78f7f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stack_info&lt;/code&gt; - ... the stacktrace color</source>
          <target state="translated">&lt;code&gt;:stack_info&lt;/code&gt; - ... цвет трассировки стека</target>
        </trans-unit>
        <trans-unit id="0070dccb5edec0c3460ca92eea2a5ff294243a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stacktrace_depth&lt;/code&gt; - configures the stacktrace depth to be used on formatting and reporters, defaults to &lt;code&gt;20&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:stacktrace_depth&lt;/code&gt; - настраивает глубину трассировки стека, которая будет использоваться при форматировании и репортерах, по умолчанию &lt;code&gt;20&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3b5b2b047eb09a879ba0c672086ea2c2cc66ea14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:start&lt;/code&gt; - (since v1.11.0) invoked whenever the compiler starts to trace a new lexical context, such as a new file. Keep in mind the compiler runs in parallel, so multiple files may invoke &lt;code&gt;:start&lt;/code&gt; and run at the same time. The value of the &lt;code&gt;lexical_tracker&lt;/code&gt; of the macro environment, albeit opaque, can be used to uniquely identify the environment.</source>
          <target state="translated">&lt;code&gt;:start&lt;/code&gt; - (начиная с v1.11.0) вызывается всякий раз, когда компилятор начинает отслеживать новый лексический контекст, например новый файл. Имейте в виду, что компилятор работает параллельно, поэтому несколько файлов могут вызывать &lt;code&gt;:start&lt;/code&gt; и запускать одновременно. Значение &lt;code&gt;lexical_tracker&lt;/code&gt; макросреды, хотя и непрозрачное, может использоваться для однозначной идентификации среды.</target>
        </trans-unit>
        <trans-unit id="81aa5a013a0b30e71264b2a6df647e044f117888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:start&lt;/code&gt; - a tuple with the module-function-args to be invoked to start the child process. This key is required.</source>
          <target state="translated">&lt;code&gt;:start&lt;/code&gt; - кортеж с аргументами функции-модуля, который должен быть вызван для запуска дочернего процесса. Этот ключ обязателен.</target>
        </trans-unit>
        <trans-unit id="6024fc0e73c83aa97530debf09e0c85edf918383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:start_distribution_during_config&lt;/code&gt; - if &lt;code&gt;:reboot_system_after_config&lt;/code&gt; is set, releases only start the Erlang VM distribution features after the config files are evaluated. You can set it to &lt;code&gt;true&lt;/code&gt; if you need distribution during configuration. Defaults to &lt;code&gt;false&lt;/code&gt; from Erlang/OTP 22+.</source>
          <target state="translated">&lt;code&gt;:start_distribution_during_config&lt;/code&gt; - если установлено &lt;code&gt;:reboot_system_after_config&lt;/code&gt; , выпуски запускают функции распространения виртуальной машины Erlang только после оценки файлов конфигурации. Вы можете установить для него значение &lt;code&gt;true&lt;/code&gt; , если вам нужно распространение во время настройки. По умолчанию в Erlang / OTP 22+ установлено значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dee7e8a60c9cef779eb344139f12b915b5873be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:start_options&lt;/code&gt; - passes start options to Logger's main process, such as &lt;code&gt;:spawn_opt&lt;/code&gt; and &lt;code&gt;:hibernate_after&lt;/code&gt;. All options in &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#t:option/0&quot;&gt;&lt;code&gt;GenServer.option/0&lt;/code&gt;&lt;/a&gt; are accepted, except &lt;code&gt;:name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:start_options&lt;/code&gt; - передает параметры запуска основному процессу Logger, например &lt;code&gt;:spawn_opt&lt;/code&gt; и &lt;code&gt;:hibernate_after&lt;/code&gt; . &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#t:option/0&quot;&gt; &lt;code&gt;GenServer.option/0&lt;/code&gt; &lt;/a&gt; все параметры в GenServer.option / 0 , кроме &lt;code&gt;:name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53207861878627a9856b8a09c335f4510b61355d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:start_permanent&lt;/code&gt; - the application and all of its children applications are started in permanent mode. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:start_permanent&lt;/code&gt; - приложение и все его дочерние приложения запускаются в постоянном режиме. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9068edad0e3d5edd1d0376c81542cc29c3b4b9ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:start_phases&lt;/code&gt; - specifies a list of phases and their arguments to be called after the application is started. See the &quot;Phases&quot; section below.</source>
          <target state="translated">&lt;code&gt;:start_phases&lt;/code&gt; - указывает список фаз и их аргументов, которые будут вызываться после запуска приложения. См. Раздел &amp;laquo;Фазы&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="e4389c8a4f1e9e9b79cd01871ba2e306282798fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:state&lt;/code&gt; - the finished test state (see &lt;a href=&quot;exunit#t:state/0&quot;&gt;&lt;code&gt;ExUnit.state/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;:state&lt;/code&gt; - состояние завершения теста (см. &lt;a href=&quot;exunit#t:state/0&quot;&gt; &lt;code&gt;ExUnit.state/0&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ecf28b1aeab439f9c4c755e9496479feca6949cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:state&lt;/code&gt; - the finished test state (see &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#t:state/0&quot;&gt;&lt;code&gt;ExUnit.state/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;:state&lt;/code&gt; - состояние завершения теста (см. &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#t:state/0&quot;&gt; &lt;code&gt;ExUnit.state/0&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="060b62ea4c1cd006950ab4a603b2e3d10c314354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:state&lt;/code&gt; - the test error state (see &lt;a href=&quot;exunit#t:state/0&quot;&gt;&lt;code&gt;ExUnit.state/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;:state&lt;/code&gt; - состояние тестовой ошибки (см. &lt;a href=&quot;exunit#t:state/0&quot;&gt; &lt;code&gt;ExUnit.state/0&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7f0506955a2d3231cc3ce3ed65beddd6df9d4fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:state&lt;/code&gt; - the test error state (see &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#t:state/0&quot;&gt;&lt;code&gt;ExUnit.state/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;:state&lt;/code&gt; - состояние ошибки теста (см. &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#t:state/0&quot;&gt; &lt;code&gt;ExUnit.state/0&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4e8e9dbb5db3d0c5b133a1711403f03c2707f93c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:static_atom_encoder&lt;/code&gt; - The static atom encoder function, see &quot;The &lt;code&gt;:static_atom_encoder&lt;/code&gt; function&quot; section below. This option overrides the &lt;code&gt;:existing_atoms_only&lt;/code&gt; behaviour for static atoms but &lt;code&gt;:existing_atoms_only&lt;/code&gt; is still used for dynamic atoms, such as atoms with interpolations.</source>
          <target state="translated">&lt;code&gt;:static_atom_encoder&lt;/code&gt; - Функция статического кодирования атомов, см. раздел &amp;laquo;Функция &lt;code&gt;:static_atom_encoder&lt;/code&gt; &amp;raquo; ниже. Эта опция отменяет поведение &lt;code&gt;:existing_atoms_only&lt;/code&gt; для статических атомов, но &lt;code&gt;:existing_atoms_only&lt;/code&gt; по-прежнему используется для динамических атомов, таких как атомы с интерполяцией.</target>
        </trans-unit>
        <trans-unit id="052dc6fd565494048caa83d67d18faefc9afd4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:static_atoms_encoder&lt;/code&gt; - the static atom encoder function, see &quot;The &lt;code&gt;:static_atoms_encoder&lt;/code&gt; function&quot; section below. Note this option overrides the &lt;code&gt;:existing_atoms_only&lt;/code&gt; behaviour for static atoms but &lt;code&gt;:existing_atoms_only&lt;/code&gt; is still used for dynamic atoms, such as atoms with interpolations.</source>
          <target state="translated">&lt;code&gt;:static_atoms_encoder&lt;/code&gt; - функция статического кодировщика атомов, см. раздел &amp;laquo;Функция &lt;code&gt;:static_atoms_encoder&lt;/code&gt; &amp;raquo; ниже. Обратите внимание, что эта опция переопределяет поведение &lt;code&gt;:existing_atoms_only&lt;/code&gt; для статических атомов, но &lt;code&gt;:existing_atoms_only&lt;/code&gt; по-прежнему используется для динамических атомов, таких как атомы с интерполяцией.</target>
        </trans-unit>
        <trans-unit id="343ef905fb4f21e5d27635c8e9062e23d8bcc3a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stderr&lt;/code&gt; - a shortcut for the named process &lt;code&gt;:standard_error&lt;/code&gt; provided in Erlang</source>
          <target state="translated">&lt;code&gt;:stderr&lt;/code&gt; - ярлык для названного процесса &lt;code&gt;:standard_error&lt;/code&gt; , предоставленный в Erlang</target>
        </trans-unit>
        <trans-unit id="2f83bee1f54001a194ca817ca04fac4082d02743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stderr_to_stdout&lt;/code&gt; - redirects stderr to stdout when &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:stderr_to_stdout&lt;/code&gt; - перенаправляет stderr на stdout, если &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="123d98f0b0876225ab09f3d6f9824080e529ce76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stderr_to_stdout&lt;/code&gt; - redirects stderr to stdout, defaults to true</source>
          <target state="translated">&lt;code&gt;:stderr_to_stdout&lt;/code&gt; - перенаправляет stderr на stdout, по умолчанию true</target>
        </trans-unit>
        <trans-unit id="77e80897aa98dfae6574c1d823b5479922340efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stderr_to_stdout&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, does not redirect stderr to stdout</source>
          <target state="translated">&lt;code&gt;:stderr_to_stdout&lt;/code&gt; - при &lt;code&gt;false&lt;/code&gt; не перенаправляет stderr на stdout</target>
        </trans-unit>
        <trans-unit id="089ae9c248a88108c7e281eae61632693ac0260d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stdio&lt;/code&gt; - a shortcut for &lt;code&gt;:standard_io&lt;/code&gt;, which maps to the current &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html#group_leader/0&quot;&gt;&lt;code&gt;Process.group_leader/0&lt;/code&gt;&lt;/a&gt; in Erlang</source>
          <target state="translated">&lt;code&gt;:stdio&lt;/code&gt; - ярлык для &lt;code&gt;:standard_io&lt;/code&gt; , который соответствует текущему &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html#group_leader/0&quot;&gt; &lt;code&gt;Process.group_leader/0&lt;/code&gt; &lt;/a&gt; в Erlang</target>
        </trans-unit>
        <trans-unit id="e60878611aa41a0dc31c7c64864c5d1bd0faed6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stdio&lt;/code&gt; - a shortcut for &lt;code&gt;:standard_io&lt;/code&gt;, which maps to the current &lt;a href=&quot;process#group_leader/0&quot;&gt;&lt;code&gt;Process.group_leader/0&lt;/code&gt;&lt;/a&gt; in Erlang</source>
          <target state="translated">&lt;code&gt;:stdio&lt;/code&gt; - ярлык для &lt;code&gt;:standard_io&lt;/code&gt; , который соответствует текущему &lt;a href=&quot;process#group_leader/0&quot;&gt; &lt;code&gt;Process.group_leader/0&lt;/code&gt; &lt;/a&gt; в Erlang</target>
        </trans-unit>
        <trans-unit id="ccb4bdef8d880ba8920d070f06387a7a28cdafb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:steps&lt;/code&gt; - a list of functions that receive the release and returns a release. Must also contain the atom &lt;code&gt;:assemble&lt;/code&gt; which is the internal assembling step. May also contain the atom &lt;code&gt;:tar&lt;/code&gt; to create a tarball of the release.</source>
          <target state="translated">&lt;code&gt;:steps&lt;/code&gt; - список функций, которые получают релиз и возвращают релиз. Также должен содержать атом &lt;code&gt;:assemble&lt;/code&gt; который является этапом внутренней сборки. Также может содержать атом &lt;code&gt;:tar&lt;/code&gt; для создания архива выпуска.</target>
        </trans-unit>
        <trans-unit id="80a9c12cc55671e52f75c111a76d96c880b6779b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:steps&lt;/code&gt; - a list of steps to execute when assembling the release. See the &quot;Steps&quot; section for more information.</source>
          <target state="translated">&lt;code&gt;:steps&lt;/code&gt; - список шагов, которые нужно выполнить при сборке релиза. См. Раздел &amp;laquo;Шаги&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="77db38aa55cfe6f6331322a0e3af39e2112f0a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stop&lt;/code&gt; - (since v1.11.0) invoked whenever the compiler stops tracing a new lexical context, such as a new file.</source>
          <target state="translated">&lt;code&gt;:stop&lt;/code&gt; - (начиная с v1.11.0) вызывается всякий раз, когда компилятор прекращает отслеживание нового лексического контекста, например нового файла.</target>
        </trans-unit>
        <trans-unit id="41a1af434ddb3a13634b6c518bc4dbbba1015095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the restart strategy option. It can be either &lt;code&gt;:one_for_one&lt;/code&gt;, &lt;code&gt;:rest_for_one&lt;/code&gt;, &lt;code&gt;:one_for_all&lt;/code&gt;, or &lt;code&gt;:simple_one_for_one&lt;/code&gt;. You can learn more about strategies in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module docs.</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - вариант стратегии перезапуска. Это может быть &lt;code&gt;:one_for_one&lt;/code&gt; , &lt;code&gt;:rest_for_one&lt;/code&gt; , &lt;code&gt;:one_for_all&lt;/code&gt; , или &lt;code&gt;:simple_one_for_one&lt;/code&gt; . Вы можете узнать больше о стратегиях в документации модуля &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58045e7e96ed45a0fb6a2556602dbe4dff9befbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the restart strategy option. It can be either &lt;code&gt;:one_for_one&lt;/code&gt;, &lt;code&gt;:rest_for_one&lt;/code&gt;, &lt;code&gt;:one_for_all&lt;/code&gt;, or &lt;code&gt;:simple_one_for_one&lt;/code&gt;. You can learn more about strategies in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module docs.</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - вариант стратегии перезапуска. Это может быть &lt;code&gt;:one_for_one&lt;/code&gt; , &lt;code&gt;:rest_for_one&lt;/code&gt; , &lt;code&gt;:one_for_all&lt;/code&gt; , или &lt;code&gt;:simple_one_for_one&lt;/code&gt; . Вы можете узнать больше о стратегиях в документации модуля &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="808f131dcdd49dedad13f811ed1d6662d7baa2c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the restart strategy option. The only supported value is &lt;code&gt;:one_for_one&lt;/code&gt; which means that no other child is terminated if a child process terminates. You can learn more about strategies in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module docs.</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - вариант стратегии перезапуска. Единственное поддерживаемое значение &lt;code&gt;:one_for_one&lt;/code&gt; , что означает, что ни один другой дочерний процесс не завершается, если дочерний процесс завершается. Вы можете узнать больше о стратегиях в документации модуля &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="328214f38c6d873de09f4dee8577407384e48cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the restart strategy option. The only supported value is &lt;code&gt;:one_for_one&lt;/code&gt; which means that no other child is terminated if a child process terminates. You can learn more about strategies in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module docs.</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - вариант стратегии перезапуска. Единственное поддерживаемое значение &lt;code&gt;:one_for_one&lt;/code&gt; , что означает, что ни один дочерний процесс не завершается, если дочерний процесс завершается. Вы можете узнать больше о стратегиях в документации модуля &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aba2a28a21a71d37aecb4e25a9571218596b092c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the supervision strategy option. It can be either &lt;code&gt;:one_for_one&lt;/code&gt;, &lt;code&gt;:rest_for_one&lt;/code&gt; or &lt;code&gt;:one_for_all&lt;/code&gt;. Required. See the &quot;Strategies&quot; section.</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - опция стратегии наблюдения. Это может быть &lt;code&gt;:one_for_one&lt;/code&gt; , &lt;code&gt;:rest_for_one&lt;/code&gt; или &lt;code&gt;:one_for_all&lt;/code&gt; . Необходимые. См. Раздел &amp;laquo;Стратегии&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e1f83540fffe130cdc9643409c033d9e92241452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the supervision strategy option. It can be either &lt;code&gt;:one_for_one&lt;/code&gt;, &lt;code&gt;:rest_for_one&lt;/code&gt;, &lt;code&gt;:one_for_all&lt;/code&gt;, or the deprecated &lt;code&gt;:simple_one_for_one&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - опция стратегии наблюдения. Это может быть &lt;code&gt;:one_for_one&lt;/code&gt; , &lt;code&gt;:rest_for_one&lt;/code&gt; , &lt;code&gt;:one_for_all&lt;/code&gt; или осуждается &lt;code&gt;:simple_one_for_one&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07925dedade7f49e9f501d8828ec4a8429dff7b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strategy&lt;/code&gt; - the supervision strategy option. It can be either &lt;code&gt;:one_for_one&lt;/code&gt;, &lt;code&gt;:rest_for_one&lt;/code&gt;, or &lt;code&gt;:one_for_all&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:strategy&lt;/code&gt; - опция стратегии наблюдения. Это может быть &lt;code&gt;:one_for_one&lt;/code&gt; , &lt;code&gt;:rest_for_one&lt;/code&gt; , или &lt;code&gt;:one_for_all&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af1c6ce276c33d1550d8c38b505c9a844b0f8a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strict&lt;/code&gt; - defines strict switches and their types. Any switch in &lt;code&gt;argv&lt;/code&gt; that is not specified in the list is returned in the invalid options list. This is the preferred way to parse options.</source>
          <target state="translated">&lt;code&gt;:strict&lt;/code&gt; - определяет строгие переключатели и их типы. Любой параметр в &lt;code&gt;argv&lt;/code&gt; , не указанный в списке, возвращается в списке недопустимых параметров. Это предпочтительный способ анализа параметров.</target>
        </trans-unit>
        <trans-unit id="c793876b11b8ab1cbc7182ff168a554b74265bdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:string&lt;/code&gt; - parses the value as a string</source>
          <target state="translated">&lt;code&gt;:string&lt;/code&gt; - анализирует значение как строку</target>
        </trans-unit>
        <trans-unit id="5fb0eee54aeddb670a69245cf74b0ac28cacdc61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strip_beam&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; strips BEAM code in the escript to remove chunks unnecessary at runtime, such as debug information and documentation. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:strip_beam&lt;/code&gt; - при значении &lt;code&gt;true&lt;/code&gt; удаляет код BEAM в эскрипте для удаления ненужных во время выполнения фрагментов, таких как отладочная информация и документация. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfa4e1f5a7f42116482cd8994190a99c938783f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strip_beams&lt;/code&gt; - controls if BEAM files should have their debug information, documentation chunks, and other non-essential metadata removed. Defaults to &lt;code&gt;true&lt;/code&gt;. Maybe be set to &lt;code&gt;false&lt;/code&gt; to disable striping. Also accepts &lt;code&gt;[keep: [&quot;Docs&quot;, &quot;Dbgi&quot;]]&lt;/code&gt; to keep certain chunks that are usually stripped.</source>
          <target state="translated">&lt;code&gt;:strip_beams&lt;/code&gt; - определяет, нужно ли удалять отладочную информацию, фрагменты документации и другие несущественные метаданные из файлов BEAM. По умолчанию &lt;code&gt;true&lt;/code&gt; . Может быть установлено значение &lt;code&gt;false&lt;/code&gt; , чтобы отключить чередование. Также принимает &lt;code&gt;[keep: [&quot;Docs&quot;, &quot;Dbgi&quot;]]&lt;/code&gt; для хранения определенных фрагментов, которые обычно удаляются.</target>
        </trans-unit>
        <trans-unit id="33bdd7bb992a69ba6958a1acf8375ae6ed081bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:strip_beams&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; strips BEAM code in the escript to remove chunks unnecessary at runtime, such as debug information and documentation. Can be set to [keep: ['Docs', 'Dbgi']] to strip while keeping some chunks that would otherwise be stripped, like docs, and debug info, for instance. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:strip_beams&lt;/code&gt; - при значении &lt;code&gt;true&lt;/code&gt; удаляет код BEAM в эскрипте для удаления ненужных во время выполнения фрагментов, таких как отладочная информация и документация. Может быть установлено значение [keep: ['Docs', 'Dbgi']] для удаления с сохранением некоторых фрагментов, которые в противном случае были бы удалены, например, документов и отладочной информации. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d4b0681bc2e63567bfddd7c1a32eb1a2af4cc12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:structs&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, structs are not formatted by the inspect protocol, they are instead printed as maps, defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:structs&lt;/code&gt; - когда &lt;code&gt;false&lt;/code&gt; , структуры не форматируются протоколом проверки, вместо этого они печатаются как карты, по умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51416afb8fac3efecf25b760f32e70547ea2f1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:structs&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, structs are not formatted by the inspect protocol, they are instead printed as maps. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:structs&lt;/code&gt; - при &lt;code&gt;false&lt;/code&gt; структуры не форматируются протоколом проверки, а печатаются как карты. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="979a36abafd2aade898583d6236276e328af2112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:subdirectories&lt;/code&gt; (a list of paths and patterns) - specifies subdirectories that have their own formatting rules. Each subdirectory should have a &lt;code&gt;.formatter.exs&lt;/code&gt; that configures how entries in that subdirectory should be formatted as. Configuration between &lt;code&gt;.formatter.exs&lt;/code&gt; are not shared nor inherited. If a &lt;code&gt;.formatter.exs&lt;/code&gt; lists &quot;lib/app&quot; as a subdirectory, the rules in &lt;code&gt;.formatter.exs&lt;/code&gt; won't be available in &lt;code&gt;lib/app/.formatter.exs&lt;/code&gt;. Note that the parent &lt;code&gt;.formatter.exs&lt;/code&gt; must not specify files inside the &quot;lib/app&quot; subdirectory in its &lt;code&gt;:inputs&lt;/code&gt; configuration. If this happens, the behaviour of which formatter configuration will be picked is unspecified.</source>
          <target state="translated">&lt;code&gt;:subdirectories&lt;/code&gt; (список путей и шаблонов) - определяет подкаталоги, которые имеют свои собственные правила форматирования. В каждом подкаталоге должен быть &lt;code&gt;.formatter.exs&lt;/code&gt; , который настраивает, как записи в этом подкаталоге должны быть отформатированы как. Конфигурация между &lt;code&gt;.formatter.exs&lt;/code&gt; не передается и не наследуется. Если &lt;code&gt;.formatter.exs&lt;/code&gt; перечисляет &amp;laquo;lib / app&amp;raquo; как подкаталог, правила в &lt;code&gt;.formatter.exs&lt;/code&gt; не будут доступны в &lt;code&gt;lib/app/.formatter.exs&lt;/code&gt; . Обратите внимание, что родительский &lt;code&gt;.formatter.exs&lt;/code&gt; не должен указывать файлы внутри подкаталога &amp;laquo;lib / app&amp;raquo; в своей конфигурации &lt;code&gt;:inputs&lt;/code&gt; . Если это произойдет, поведение того, какая конфигурация форматера будет выбрана, не определено.</target>
        </trans-unit>
        <trans-unit id="535bfa8e2b14835196f89e91d1dbba30cd7fd13e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:submodules&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, initialize submodules for the repo</source>
          <target state="translated">&lt;code&gt;:submodules&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; инициализировать подмодули для репо</target>
        </trans-unit>
        <trans-unit id="fd1a11e08b3533d6ec7807000ca6b512f99b293b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:summary&lt;/code&gt; - summary output configuration; can be either a boolean or a keyword list. When a keyword list is passed, it can specify a &lt;code&gt;:threshold&lt;/code&gt;, which is a boolean or numeric value that enables coloring of code coverage results in red or green depending on whether the percentage is below or above the specified threshold, respectively. Defaults to &lt;code&gt;[threshold: 90]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:summary&lt;/code&gt; - конфигурация итогового вывода; может быть логическим значением или списком ключевых слов. Когда передается список ключевых слов, он может указывать &lt;code&gt;:threshold&lt;/code&gt; , которое является логическим или числовым значением, которое позволяет окрашивать результаты покрытия кода в красный или зеленый цвет в зависимости от того, находится ли процентное значение ниже или выше указанного порога, соответственно. По умолчанию &lt;code&gt;[threshold: 90]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caae8c51b443956985309cfe957ca2d2488d4f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:supervisors&lt;/code&gt; - the count of all supervisors whether or not the child process is still alive</source>
          <target state="translated">&lt;code&gt;:supervisors&lt;/code&gt; - количество всех супервизоров, жив ли дочерний процесс</target>
        </trans-unit>
        <trans-unit id="fe23eb4b90f7f51cad01e75be68fdcd3f495ebbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:supervisors&lt;/code&gt; - the count of all supervisors whether or not these child supervisors are still alive</source>
          <target state="translated">&lt;code&gt;:supervisors&lt;/code&gt; - подсчет всех супервизоров, живы ли эти дочерние супервизоры</target>
        </trans-unit>
        <trans-unit id="28c96dc0f5b0d2b21c6a75b87f6a5675c12740c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:suspend&lt;/code&gt; - the enumeration should be suspended immediately</source>
          <target state="translated">&lt;code&gt;:suspend&lt;/code&gt; - нужно немедленно приостановить перечисление</target>
        </trans-unit>
        <trans-unit id="afff777a8b91efd6a7328a1dc7bacbf707dcf110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:switches&lt;/code&gt; - defines switches and their types. This function still attempts to parse switches that are not in this list.</source>
          <target state="translated">&lt;code&gt;:switches&lt;/code&gt; - определяет переключатели и их типы. Эта функция все еще пытается проанализировать переключатели, которых нет в этом списке.</target>
        </trans-unit>
        <trans-unit id="fe6ee28c7980294509aa65f52a5155fddb2b9949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:switches&lt;/code&gt; or &lt;code&gt;:strict&lt;/code&gt; - see the &quot;Switch definitions&quot; section below</source>
          <target state="translated">&lt;code&gt;:switches&lt;/code&gt; или &lt;code&gt;:strict&lt;/code&gt; - см. раздел &amp;laquo;Определения переключателей&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="41ebdb15357f55413373b605a304c40cd67b6e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:symlink_ebin&lt;/code&gt; - symlink ebin instead of copying it</source>
          <target state="translated">&lt;code&gt;:symlink_ebin&lt;/code&gt; - символическая ссылка на ebin вместо его копирования</target>
        </trans-unit>
        <trans-unit id="3f4ba688e23f2c521ba75337c1b3789939d1ff7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:sync_threshold&lt;/code&gt; - if the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; manager has more than &lt;code&gt;:sync_threshold&lt;/code&gt; messages in its queue, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will change to &lt;em&gt;sync mode&lt;/em&gt;, to apply backpressure to the clients. &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will return to &lt;em&gt;async mode&lt;/em&gt; once the number of messages in the queue is reduced to one below the &lt;code&gt;sync_threshold&lt;/code&gt;. Defaults to 20 messages. &lt;code&gt;:sync_threshold&lt;/code&gt; can be set to &lt;code&gt;0&lt;/code&gt; to force &lt;em&gt;sync mode&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;:sync_threshold&lt;/code&gt; - если &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; менеджер имеет более чем &lt;code&gt;:sync_threshold&lt;/code&gt; сообщение в очереди, &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; будет меняться в &lt;em&gt;синхронном режиме&lt;/em&gt; , чтобы применить противодавление к клиентам. &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; вернется в &lt;em&gt;асинхронный режим, как&lt;/em&gt; только количество сообщений в очереди уменьшится до одного ниже &lt;code&gt;sync_threshold&lt;/code&gt; . По умолчанию 20 сообщений. &lt;code&gt;:sync_threshold&lt;/code&gt; можно установить в &lt;code&gt;0&lt;/code&gt; для принудительного &lt;em&gt;режима синхронизации&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f0ab2e25a195639053e1141defa599889c4a9d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:syntax_colors&lt;/code&gt; - when set to a keyword list of colors the output is colorized. The keys are types and the values are the colors to use for each type (for example, &lt;code&gt;[number: :red, atom: :blue]&lt;/code&gt;). Types can include &lt;code&gt;:atom&lt;/code&gt;, &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:boolean&lt;/code&gt;, &lt;code&gt;:list&lt;/code&gt;, &lt;code&gt;:map&lt;/code&gt;, &lt;code&gt;:number&lt;/code&gt;, &lt;code&gt;:regex&lt;/code&gt;, &lt;code&gt;:string&lt;/code&gt;, and &lt;code&gt;:tuple&lt;/code&gt;. Custom data types may provide their own options. Colors can be any &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#t:ansidata/0&quot;&gt;&lt;code&gt;IO.ANSI.ansidata/0&lt;/code&gt;&lt;/a&gt; as accepted by &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#format/1&quot;&gt;&lt;code&gt;IO.ANSI.format/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:syntax_colors&lt;/code&gt; - при установке в список ключевых слов цветов вывод раскрашивается. Ключи - это типы, а значения - это цвета, используемые для каждого типа (например, &lt;code&gt;[number: :red, atom: :blue]&lt;/code&gt; ). Типы могут включать в себя &lt;code&gt;:atom&lt;/code&gt; , &lt;code&gt;:binary&lt;/code&gt; , &lt;code&gt;:boolean&lt;/code&gt; , &lt;code&gt;:list&lt;/code&gt; , &lt;code&gt;:map&lt;/code&gt; , &lt;code&gt;:number&lt;/code&gt; , &lt;code&gt;:regex&lt;/code&gt; , &lt;code&gt;:string&lt;/code&gt; , и &lt;code&gt;:tuple&lt;/code&gt; . Пользовательские типы данных могут предоставлять свои собственные параметры. Цвета могут быть любыми &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#t:ansidata/0&quot;&gt; &lt;code&gt;IO.ANSI.ansidata/0&lt;/code&gt; ,&lt;/a&gt; как это принято &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#format/1&quot;&gt; &lt;code&gt;IO.ANSI.format/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ec2abd529b1aa552da9ce3d98d2a89cd3dc8ad8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:syntax_colors&lt;/code&gt; - when set to a keyword list of colors the output is colorized. The keys are types and the values are the colors to use for each type (for example, &lt;code&gt;[number: :red, atom: :blue]&lt;/code&gt;). Types can include &lt;code&gt;:number&lt;/code&gt;, &lt;code&gt;:atom&lt;/code&gt;, &lt;code&gt;regex&lt;/code&gt;, &lt;code&gt;:tuple&lt;/code&gt;, &lt;code&gt;:map&lt;/code&gt;, &lt;code&gt;:list&lt;/code&gt;, and &lt;code&gt;:reset&lt;/code&gt;. Colors can be any &lt;a href=&quot;io.ansi#t:ansidata/0&quot;&gt;&lt;code&gt;IO.ANSI.ansidata/0&lt;/code&gt;&lt;/a&gt; as accepted by &lt;a href=&quot;io.ansi#format/1&quot;&gt;&lt;code&gt;IO.ANSI.format/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:syntax_colors&lt;/code&gt; - при установке в список ключевых слов цветов вывод раскрашивается. Ключи - это типы, а значения - это цвета, используемые для каждого типа (например, &lt;code&gt;[number: :red, atom: :blue]&lt;/code&gt; ). Типы могут включать в себя &lt;code&gt;:number&lt;/code&gt; , &lt;code&gt;:atom&lt;/code&gt; , &lt;code&gt;regex&lt;/code&gt; , &lt;code&gt;:tuple&lt;/code&gt; , &lt;code&gt;:map&lt;/code&gt; , &lt;code&gt;:list&lt;/code&gt; , и &lt;code&gt;:reset&lt;/code&gt; . Цвета могут быть любыми &lt;a href=&quot;io.ansi#t:ansidata/0&quot;&gt; &lt;code&gt;IO.ANSI.ansidata/0&lt;/code&gt; ,&lt;/a&gt; как это принято &lt;a href=&quot;io.ansi#format/1&quot;&gt; &lt;code&gt;IO.ANSI.format/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fc68f71f7771a43da5d88e5526c2ab32c9df54a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:system_env&lt;/code&gt; - an enumerable of key-value tuples of binaries to be set as environment variables when loading or compiling the dependency</source>
          <target state="translated">&lt;code&gt;:system_env&lt;/code&gt; - перечисление кортежей двоичных файлов, которые будут установлены в качестве переменных среды при загрузке или компиляции зависимости</target>
        </trans-unit>
        <trans-unit id="3ada65ff2401005a619f67139d0ac025b40891d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:system_limit&lt;/code&gt; - all available ports in the Erlang emulator are in use</source>
          <target state="translated">&lt;code&gt;:system_limit&lt;/code&gt; - все доступные порты в эмуляторе Erlang используются</target>
        </trans-unit>
        <trans-unit id="c3723a25f474d6156a4964e6d55bb745f148b597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tag&lt;/code&gt; - the Git tag to checkout</source>
          <target state="translated">&lt;code&gt;:tag&lt;/code&gt; - тег Git для оформления заказа</target>
        </trans-unit>
        <trans-unit id="5514a7bd5809a26f526d2901bdd61c20d9edfc3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tags&lt;/code&gt; - a list of tags to apply to all generated doctests.</source>
          <target state="translated">&lt;code&gt;:tags&lt;/code&gt; - список тегов, применяемых ко всем сгенерированным документам</target>
        </trans-unit>
        <trans-unit id="3619075d3eee8e910609afdbc22465ad531aeddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tags&lt;/code&gt; - the test tags</source>
          <target state="translated">&lt;code&gt;:tags&lt;/code&gt; - тестовые теги</target>
        </trans-unit>
        <trans-unit id="15bab339e392d9ab02b1dd78aed7b9a11ae4130d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:target&lt;/code&gt; - the target the configuration file runs on. See &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html#config_target/0&quot;&gt;&lt;code&gt;Config.config_target/0&lt;/code&gt;&lt;/a&gt; for sample usage</source>
          <target state="translated">&lt;code&gt;:target&lt;/code&gt; - цель, на которой выполняется файл конфигурации. См. &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html#config_target/0&quot;&gt; &lt;code&gt;Config.config_target/0&lt;/code&gt; &lt;/a&gt; для примера использования</target>
        </trans-unit>
        <trans-unit id="9b5435d8bc38d5fc84b0cc5dd6913e6d59a3dd03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:targets&lt;/code&gt; - the dependency is made available only for the given targets. By default the dependency will be available in all environments. The value of this option can either be a single target (like &lt;code&gt;:host&lt;/code&gt;) or a list of environments (like &lt;code&gt;[:host, :rpi3]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:targets&lt;/code&gt; - зависимость доступна только для заданных целей. По умолчанию зависимость будет доступна во всех средах. Значение этой опции может быть либо одной целью (например &lt;code&gt;:host&lt;/code&gt; ), либо списком сред (например, &lt;code&gt;[:host, :rpi3]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="54d2de44d85c61192c7cad03af98fe1af3d9a1be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary&lt;/code&gt; - if &lt;code&gt;app&lt;/code&gt; terminates, it is reported but no other applications are terminated (the default).</source>
          <target state="translated">&lt;code&gt;:temporary&lt;/code&gt; - если &lt;code&gt;app&lt;/code&gt; завершает работу, сообщается, но никакие другие приложения не закрываются (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="1926b5a4f7e0ee326021aabae526c9584a7a2f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary&lt;/code&gt; - the application is started and the node does not shut down if the application terminates</source>
          <target state="translated">&lt;code&gt;:temporary&lt;/code&gt; - приложение запускается и узел не завершает работу, если приложение завершает работу</target>
        </trans-unit>
        <trans-unit id="4c539ed3846b0fb29a4866d15d8c60ecc20ec1d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary&lt;/code&gt; - the child process is never restarted (not even when the supervisor's strategy is &lt;code&gt;:rest_for_one&lt;/code&gt; or &lt;code&gt;:one_for_all&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:temporary&lt;/code&gt; - дочерний процесс никогда не перезапускается (даже если стратегия &lt;code&gt;:rest_for_one&lt;/code&gt; или &lt;code&gt;:one_for_all&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="31eabe44bb62418e11c93f7e46da12189bd5aaa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary&lt;/code&gt; - the child process is never restarted, regardless of the supervision strategy: any termination (even abnormal) is considered successful.</source>
          <target state="translated">&lt;code&gt;:temporary&lt;/code&gt; - дочерний процесс никогда не перезапускается, независимо от стратегии наблюдения: любое завершение (даже ненормальное) считается успешным.</target>
        </trans-unit>
        <trans-unit id="0ce2aee555fdf4ffd836d7c73c3539ffc7971d49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test&lt;/code&gt; - the environment &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; runs on</source>
          <target state="translated">&lt;code&gt;:test&lt;/code&gt; - тест среды &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; &lt;/a&gt; запускается на</target>
        </trans-unit>
        <trans-unit id="f22bbcb496432cea55f6a9f47e8bd2d643c8b467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test&lt;/code&gt; - the environment &lt;a href=&quot;mix.tasks.test&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; runs on</source>
          <target state="translated">&lt;code&gt;:test&lt;/code&gt; - тест среды &lt;a href=&quot;mix.tasks.test&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; &lt;/a&gt; запускается на</target>
        </trans-unit>
        <trans-unit id="b76e6f5c90e7a6502ee72e49445edbe147645e1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test&lt;/code&gt; - the test name</source>
          <target state="translated">&lt;code&gt;:test&lt;/code&gt; - название теста</target>
        </trans-unit>
        <trans-unit id="90fcbfaf585325b36b4502c01e390ea297199d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test&lt;/code&gt; - used by &lt;code&gt;mix test&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:test&lt;/code&gt; - используется &lt;code&gt;mix test&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8552d2a1fa910d0583045a91b3e56578f35d7bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test_coverage&lt;/code&gt; - a set of options to be passed down to the coverage mechanism</source>
          <target state="translated">&lt;code&gt;:test_coverage&lt;/code&gt; - набор параметров, передаваемых механизму покрытия</target>
        </trans-unit>
        <trans-unit id="ab99093006f8a392a546b357f96e21e57466385c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test_location_relative_path&lt;/code&gt; - the test location is the file:line information printed by tests as a shortcut to run a given test. When this value is set, the value is used as a prefix for the test itself. This is typically used by Mix to properly set-up umbrella projects</source>
          <target state="translated">&lt;code&gt;:test_location_relative_path&lt;/code&gt; - расположение теста - это файл: информация строки, напечатанная тестами как ярлык для запуска данного теста. Когда это значение установлено, оно используется как префикс для самого теста. Обычно это используется Mix для правильной настройки зонтичных проектов.</target>
        </trans-unit>
        <trans-unit id="002a1a6acbf0c987e6f149650dc64ee37f6191d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test_paths&lt;/code&gt; - list of paths containing test files. Defaults to &lt;code&gt;[&quot;test&quot;]&lt;/code&gt; if the &lt;code&gt;test&lt;/code&gt; directory exists; otherwise, it defaults to &lt;code&gt;[]&lt;/code&gt;. It is expected that all test paths contain a &lt;code&gt;test_helper.exs&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;:test_paths&lt;/code&gt; - список путей, содержащих тестовые файлы. По умолчанию &lt;code&gt;[&quot;test&quot;]&lt;/code&gt; , если каталог &lt;code&gt;test&lt;/code&gt; существует; в противном случае по умолчанию используется &lt;code&gt;[]&lt;/code&gt; . Ожидается, что все тестовые пути содержат файл &lt;code&gt;test_helper.exs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b83107d9f58141aa3359434d963157b4ee458a18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:test_pattern&lt;/code&gt; - a pattern to load test files. Defaults to &lt;code&gt;*_test.exs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:test_pattern&lt;/code&gt; - шаблон для загрузки тестовых файлов. По умолчанию &lt;code&gt;*_test.exs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a91a4aef73b36cb1759a347e386bab5fcd35f14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tests&lt;/code&gt; - all tests for this case</source>
          <target state="translated">&lt;code&gt;:tests&lt;/code&gt; - все тесты для этого случая</target>
        </trans-unit>
        <trans-unit id="e8ddb9bbe82c60d7cad913e758c9ed506285bd66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tests&lt;/code&gt; - all tests in this module</source>
          <target state="translated">&lt;code&gt;:tests&lt;/code&gt; - все тесты в этом модуле</target>
        </trans-unit>
        <trans-unit id="6fe266c99e03604d6137a8d1ea2015fe914436ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:time&lt;/code&gt; - configures how the file timestamps are returned</source>
          <target state="translated">&lt;code&gt;:time&lt;/code&gt; - настраивает способ возврата временных меток файла</target>
        </trans-unit>
        <trans-unit id="0bf29d79146cc591901187eaae942b579a923d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:time&lt;/code&gt; - filters out any results that took lower than specified (in &amp;micro;s)</source>
          <target state="translated">&lt;code&gt;:time&lt;/code&gt; - отфильтровывает любые результаты, полученные меньше указанного (в мкс)</target>
        </trans-unit>
        <trans-unit id="945d163c11a9410b1a739a489e0aa33606521d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:time&lt;/code&gt; - the duration in microseconds of the test's runtime</source>
          <target state="translated">&lt;code&gt;:time&lt;/code&gt; - продолжительность в микросекундах времени выполнения теста</target>
        </trans-unit>
        <trans-unit id="1bb289f6502ed3468e35c755cc0f3501180ebada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - customizes the test timeout in milliseconds (defaults to 60000). Accepts &lt;code&gt;:infinity&lt;/code&gt; as a timeout value.</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - настраивает время ожидания теста в миллисекундах (по умолчанию 60000). Принимает &lt;code&gt;:infinity&lt;/code&gt; в качестве значения тайм-аута.</target>
        </trans-unit>
        <trans-unit id="cc267265be13bca0983f3fe0f82491f86c3281fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - if present, the server is allowed to spend the given number of milliseconds initializing or it will be terminated and the start function will return &lt;code&gt;{:error, :timeout}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - если присутствует, серверу разрешено потратить указанное количество миллисекунд на инициализацию или он будет остановлен, а функция запуска вернет &lt;code&gt;{:error, :timeout}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31542e4a35ff214ba221de059f800cc2101050ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - sets the timeout for the tests in milliseconds, defaults to &lt;code&gt;60_000&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - устанавливает тайм-аут для тестов в миллисекундах, по умолчанию &lt;code&gt;60_000&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="40b4404cae97d3d7d76ffe0fb3c4b4b612d974a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - the maximum amount of time (in milliseconds or &lt;code&gt;:infinity&lt;/code&gt;) each task is allowed to execute for. Defaults to &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - максимальное количество времени (в миллисекундах или &lt;code&gt;:infinity&lt;/code&gt; ), в течение которого может выполняться каждая задача. По умолчанию &lt;code&gt;5000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2baafad806202f66b01ccfd25bb715322d63de82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - the maximum amount of time (in milliseconds) each task is allowed to execute for. Defaults to &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - максимальное время (в миллисекундах), в течение которого может выполняться каждая задача. По умолчанию &lt;code&gt;5000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb2ba6f815c6858cb7e4136a89c5d45161dc4d98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - the maximum amount of time to wait (in milliseconds) without receiving a task reply (across all running tasks). Defaults to &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - максимальное время ожидания (в миллисекундах) без получения ответа задачи (для всех запущенных задач). По умолчанию &lt;code&gt;5000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a888f2b8abe68c72ecc4a468fad6dcd9c82ece65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - the timeout for the change (defaults to &lt;code&gt;5_000&lt;/code&gt; milliseconds)</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - тайм-аут для изменения (по умолчанию &lt;code&gt;5_000&lt;/code&gt; миллисекунд)</target>
        </trans-unit>
        <trans-unit id="c2940059755d08ff63bb5888cd0560b52286892c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tmp_dir&lt;/code&gt; - (since v1.11.0) see the &quot;Tmp Dir&quot; section below</source>
          <target state="translated">&lt;code&gt;:tmp_dir&lt;/code&gt; - (начиная с v1.11.0) см. раздел &quot;Tmp Dir&quot; ниже</target>
        </trans-unit>
        <trans-unit id="34e24470b02bfc44c44f776cb2fcc734faafb94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - the module to dispatch to.</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - модуль для отправки.</target>
        </trans-unit>
        <trans-unit id="241180839bccf50fef1d7e52acc8dc866e9f2bb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:token_metadata&lt;/code&gt; (since v1.10.0) - when &lt;code&gt;true&lt;/code&gt;, includes token-related metadata in the expression AST, such as metadata for &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; tokens, for closing tokens, end of expressions, as well as delimiters for sigils. See &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#t:metadata/0&quot;&gt;&lt;code&gt;Macro.metadata/0&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:token_metadata&lt;/code&gt; (начиная с v1.10.0 ) - если &lt;code&gt;true&lt;/code&gt; , включает в выражение AST метаданные, &lt;code&gt;do&lt;/code&gt; токенами, такие как метаданные для токенов do и &lt;code&gt;end&lt;/code&gt; , для закрывающих токенов, конца выражений, а также разделители для сигил. См. &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#t:metadata/0&quot;&gt; &lt;code&gt;Macro.metadata/0&lt;/code&gt; &lt;/a&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="834e5bf44b0a682b00fcfce09fe6a6d232dc65ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tool&lt;/code&gt; - the coverage tool</source>
          <target state="translated">&lt;code&gt;:tool&lt;/code&gt; - инструмент покрытия</target>
        </trans-unit>
        <trans-unit id="99082314da4b63e3d8f7a64f945d58a484e4ab21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trace&lt;/code&gt; - sets ExUnit into trace mode, this sets &lt;code&gt;:max_cases&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; and prints each test case and test while running. Note that in trace mode test timeouts will be ignored as timeout is set to &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:trace&lt;/code&gt; - устанавливает ExUnit в режим трассировки, это устанавливает &lt;code&gt;:max_cases&lt;/code&gt; в &lt;code&gt;1&lt;/code&gt; и печатает каждый тестовый пример и тест во время работы. Обратите внимание, что в режиме трассировки таймауты теста будут игнорироваться, так как тайм-аут установлен на &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ec94545c922ce5e41e07bb5c604622489eab6ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tracers&lt;/code&gt; (since v1.10.0) - a list of tracers (modules) to be used during compilation. See the module docs for more information. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:tracers&lt;/code&gt; (начиная с v1.10.0) - список трейсеров (модулей), которые будут использоваться при компиляции. См. Дополнительную информацию в документации модуля. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70971b562b0e5ec3e13c95916e7a96be595a80a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transient&lt;/code&gt; - if &lt;code&gt;app&lt;/code&gt; terminates with &lt;code&gt;:normal&lt;/code&gt; reason, it is reported but no other applications are terminated. If a transient application terminates abnormally, all other applications and the entire node are also terminated.</source>
          <target state="translated">&lt;code&gt;:transient&lt;/code&gt; - если &lt;code&gt;app&lt;/code&gt; завершается с &lt;code&gt;:normal&lt;/code&gt; причиной, сообщается, но никакие другие приложения не закрываются. Если временное приложение завершает работу ненормально, все другие приложения и весь узел также завершаются.</target>
        </trans-unit>
        <trans-unit id="2da8940e8144a7fccc5c0ca92bd5df97576b17bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transient&lt;/code&gt; - the application is started and the node shuts down if the application terminates abnormally</source>
          <target state="translated">&lt;code&gt;:transient&lt;/code&gt; - приложение запускается и узел выключается, если приложение завершает работу ненормально</target>
        </trans-unit>
        <trans-unit id="8c8b579053cc8b765ddb56db8a5d6c340a1c9ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transient&lt;/code&gt; - the child process is restarted only if it terminates abnormally, i.e., with an exit reason other than &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, term}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:transient&lt;/code&gt; - дочерний процесс перезапускается только если он завершается аварийно, то есть, с выходом причиной, кроме &lt;code&gt;:normal&lt;/code&gt; , &lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, term}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd62486aa68570d0f4a2e16bacd9ea1b578b8a0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transient&lt;/code&gt; - the child process is restarted only if it terminates abnormally, i.e., with an exit reason other than &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:shutdown&lt;/code&gt;, or &lt;code&gt;{:shutdown, term}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:transient&lt;/code&gt; - дочерний процесс перезапускается только если он завершается аварийно, то есть, с выхода другой причине , чем &lt;code&gt;:normal&lt;/code&gt; , &lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, term}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f069e598cc72f10de360ffe78ef566fd3d1a1b38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:translator_inspect_opts&lt;/code&gt; - when translating OTP reports and errors, the last message and state must be inspected in the error reports. This configuration allow developers to change how much and how the data should be inspected.</source>
          <target state="translated">&lt;code&gt;:translator_inspect_opts&lt;/code&gt; - при переводе отчетов OTP и ошибок последнее сообщение и состояние должны быть проверены в отчетах об ошибках. Эта конфигурация позволяет разработчикам изменять объем и способ проверки данных.</target>
        </trans-unit>
        <trans-unit id="d8bd50a7c18a4e891bbba01af094152e12dc8854" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trim&lt;/code&gt; (boolean) - if &lt;code&gt;true&lt;/code&gt;, empty strings are removed from the resulting list.</source>
          <target state="translated">&lt;code&gt;:trim&lt;/code&gt; (boolean) - если &lt;code&gt;true&lt;/code&gt; , пустые строки удаляются из результирующего списка.</target>
        </trans-unit>
        <trans-unit id="1e33e496658d1b2ef28a0ac4a674b4a7b390e8b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trim&lt;/code&gt; - if true, trims whitespace left/right of quotation tags up until newlines. At least one newline is retained. Defaults to false.</source>
          <target state="translated">&lt;code&gt;:trim&lt;/code&gt; - если true, обрезает пробелы слева / справа в тегах цитат до новой строки. По крайней мере одна новая строка сохраняется. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="4a665c5e500044cbff85b11b93656534301845be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trim&lt;/code&gt; - trims whitespace left/right of quotation tags. If a quotation tag appears on its own in a given line, line endings are also removed.</source>
          <target state="translated">&lt;code&gt;:trim&lt;/code&gt; - обрезает пробелы слева и справа от тегов кавычек. Если тег цитаты появляется сам по себе в данной строке, окончания строки также удаляются.</target>
        </trans-unit>
        <trans-unit id="b09754295e0a7f11e57f31788d5d04d1352790d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trim&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, removes empty strings (&lt;code&gt;&quot;&quot;&lt;/code&gt;) from the result. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:trim&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; удаляет из результата пустые строки ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ). По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d71bda1f4d67b286a26089f9b3d3a7af2141030a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:truncate&lt;/code&gt; - the maximum message size to be logged (in bytes). Defaults to 8192 bytes. Note this configuration is approximate. Truncated messages will have &lt;code&gt;&quot; (truncated)&quot;&lt;/code&gt; at the end. The atom &lt;code&gt;:infinity&lt;/code&gt; can be passed to disable this behavior.</source>
          <target state="translated">&lt;code&gt;:truncate&lt;/code&gt; - максимальный размер сообщения в журнале (в байтах). По умолчанию 8192 байта. Обратите внимание, что эта конфигурация является приблизительной. В конце &lt;code&gt;&quot; (truncated)&quot;&lt;/code&gt; сообщений будет &amp;laquo;(усечено)&amp;raquo; . Для отключения этого поведения можно передать атом &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c269b735cc40a6e0b9e6ae233b92cbc96bb45b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - &lt;code&gt;:local&lt;/code&gt; (for anonymous functions) or &lt;code&gt;:external&lt;/code&gt; (for named functions).</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - &lt;code&gt;:local&lt;/code&gt; (для анонимных функций) или &lt;code&gt;:external&lt;/code&gt; (для именованных функций).</target>
        </trans-unit>
        <trans-unit id="07b2d5e7363b172a9678eec9bf2505da8b949758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - specifies that the child process is a &lt;code&gt;:worker&lt;/code&gt; or a &lt;code&gt;:supervisor&lt;/code&gt;. This key is optional and defaults to &lt;code&gt;:worker&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - указывает, что дочерний процесс является &lt;code&gt;:worker&lt;/code&gt; или &lt;code&gt;:supervisor&lt;/code&gt; . Этот ключ является необязательным и по умолчанию &lt;code&gt;:worker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef0b82875d3e0219deca5a33c69825d900b1ddd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:uniq&lt;/code&gt; - (integer) a unique value for this function. This integer is calculated from the compiled code for the entire module.</source>
          <target state="translated">&lt;code&gt;:uniq&lt;/code&gt; - (целое число) уникальное значение для этой функции. Это целое число вычисляется из скомпилированного кода для всего модуля.</target>
        </trans-unit>
        <trans-unit id="ca9d3acb06123805c5480fec9d97b0e18ec5a45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:universal&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple in UTC (default)</source>
          <target state="translated">&lt;code&gt;:universal&lt;/code&gt; - возвращает кортеж &lt;code&gt;{date, time}&lt;/code&gt; в формате UTC (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="90bb6b004d3a5bade442ad27b72dd634377a8d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unquote&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, disables unquoting. This means any &lt;code&gt;unquote&lt;/code&gt; call will be kept as is in the AST, instead of replaced by the &lt;code&gt;unquote&lt;/code&gt; arguments. For example:</source>
          <target state="translated">&lt;code&gt;:unquote&lt;/code&gt; - при &lt;code&gt;false&lt;/code&gt; отключает снятие кавычек. Это означает, что любой вызов &lt;code&gt;unquote&lt;/code&gt; будет сохранен как есть в AST, а не заменен аргументами &lt;code&gt;unquote&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="ca239f50831e74496105ed57bfccd2176b9bde0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unquote&lt;/code&gt; - when true, this function leaves &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#unquote_splicing/1&quot;&gt;&lt;code&gt;unquote_splicing/1&lt;/code&gt;&lt;/a&gt; statements unescaped, effectively unquoting the contents on escape. This option is useful only when escaping ASTs which may have quoted fragments in them. Defaults to false.</source>
          <target state="translated">&lt;code&gt;:unquote&lt;/code&gt; - если true, эта функция оставляет &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#unquote/1&quot;&gt; &lt;code&gt;unquote/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#unquote_splicing/1&quot;&gt; &lt;code&gt;unquote_splicing/1&lt;/code&gt; без&lt;/a&gt; экранирования, эффективно отменяя кавычки содержимого при выходе. Эта опция полезна только при экранировании AST, в которых могли быть кавычки. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="c8522475e803f9d234e8fefb372137355db79dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unquote&lt;/code&gt; - when true, this function leaves &lt;a href=&quot;kernel.specialforms#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel.specialforms#unquote_splicing/1&quot;&gt;&lt;code&gt;unquote_splicing/1&lt;/code&gt;&lt;/a&gt; statements unescaped, effectively unquoting the contents on escape. This option is useful only when escaping ASTs which may have quoted fragments in them. Defaults to false.</source>
          <target state="translated">&lt;code&gt;:unquote&lt;/code&gt; - когда true, эта функция оставляет &lt;a href=&quot;kernel.specialforms#unquote/1&quot;&gt; &lt;code&gt;unquote/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;kernel.specialforms#unquote_splicing/1&quot;&gt; &lt;code&gt;unquote_splicing/1&lt;/code&gt; без&lt;/a&gt; экранирования, эффективно отменяя кавычки содержимого при выходе. Эта опция полезна только при экранировании AST, которые могли содержать в себе цитируемые фрагменты. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="da1acb5f6f05ab526efed9e68ec909c1560d04b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:upper&lt;/code&gt; - only allows upper case characters (default)</source>
          <target state="translated">&lt;code&gt;:upper&lt;/code&gt; - разрешены только символы верхнего регистра (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="e7569b8882893c01db9f45913b40ea583be067a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:upper&lt;/code&gt; - uses upper case characters (default)</source>
          <target state="translated">&lt;code&gt;:upper&lt;/code&gt; - используются символы верхнего регистра (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="9411b629323b5e86fa681c28de9a4aceec773ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:utc_log&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, uses UTC in logs. By default it uses local time (i.e., it defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:utc_log&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , в логах используется UTC. По умолчанию используется местное время (т. Е. По умолчанию установлено значение &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="effab779af0f67bc8dd05247dbafef135012c33f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:utf8&lt;/code&gt; - this option denotes how data is actually stored in the disk file and makes the file perform automatic translation of characters to and from UTF-8.</source>
          <target state="translated">&lt;code&gt;:utf8&lt;/code&gt; - этот параметр указывает, как данные фактически хранятся в файле на диске, и заставляет файл выполнять автоматический перевод символов в UTF-8 и обратно.</target>
        </trans-unit>
        <trans-unit id="f94cda1b877876edd0aa1cda48627ad7c2b262a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:valid&lt;/code&gt; - the string is split into chunks of valid and invalid character sequences</source>
          <target state="translated">&lt;code&gt;:valid&lt;/code&gt; - строка разбивается на части допустимой и недопустимой последовательности символов</target>
        </trans-unit>
        <trans-unit id="3dbbb02ddae1c6e25945e61a88a9034ff5e9d986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:validate_compile_env&lt;/code&gt; - by default a release will match all runtime configuration against any configuration that was marked at compile time in your application of its dependencies via the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#compile_env/3&quot;&gt;&lt;code&gt;Application.compile_env/3&lt;/code&gt;&lt;/a&gt; function. If there is a mismatch between those, it means your system is misconfigured and unable to boot. You can disable this check by setting this option to false.</source>
          <target state="translated">&lt;code&gt;:validate_compile_env&lt;/code&gt; - по умолчанию выпуск будет сопоставлять всю конфигурацию среды выполнения с любой конфигурацией, которая была отмечена во время компиляции в вашем приложении ее зависимостей с помощью функции &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#compile_env/3&quot;&gt; &lt;code&gt;Application.compile_env/3&lt;/code&gt; &lt;/a&gt; . Если между ними есть несоответствие, это означает, что ваша система неправильно настроена и не может загружаться. Вы можете отключить эту проверку, установив для этого параметра значение false.</target>
        </trans-unit>
        <trans-unit id="a98e922988f8dbcd40e1a470d7e72b6cdc5f2b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:var&lt;/code&gt; - Used for improved error messages on undefined variables.</source>
          <target state="translated">&lt;code&gt;:var&lt;/code&gt; - Используется для улучшенных сообщений об ошибках для неопределенных переменных.</target>
        </trans-unit>
        <trans-unit id="f2b436b6c7866bb272d673331295201a888ee4c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:version&lt;/code&gt; - the Elixir version</source>
          <target state="translated">&lt;code&gt;:version&lt;/code&gt; - версия Эликсира</target>
        </trans-unit>
        <trans-unit id="a6d8969f5535ce7530d4678c5a4a1f566e94c02f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:version&lt;/code&gt; - the release version as a string or &lt;code&gt;{:from_app, app_name}&lt;/code&gt;. Defaults to the current application version. The &lt;code&gt;{:from_app, app_name}&lt;/code&gt; format can be used to easily reference the application version from another application. This is particularly useful in umbrella applications.</source>
          <target state="translated">&lt;code&gt;:version&lt;/code&gt; - версия выпуска в виде строки или &lt;code&gt;{:from_app, app_name}&lt;/code&gt; . По умолчанию используется текущая версия приложения. Формат &lt;code&gt;{:from_app, app_name}&lt;/code&gt; можно использовать для упрощения ссылки на версию приложения из другого приложения. Это особенно полезно в зонтичных приложениях.</target>
        </trans-unit>
        <trans-unit id="adbbd1cb410f7b60b674181eeef3e7b4e50c44f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:version&lt;/code&gt; - the version of the release as a string or &lt;code&gt;{:from_app, app_name}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:version&lt;/code&gt; - версия выпуска в виде строки или &lt;code&gt;{:from_app, app_name}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53fc48349916e64ba6e56ead279e0d353c720513" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:version_path&lt;/code&gt; - the path to the release version inside the release</source>
          <target state="translated">&lt;code&gt;:version_path&lt;/code&gt; - путь к релизной версии внутри релиза</target>
        </trans-unit>
        <trans-unit id="55a62f489cf1e3c1c55f5ca9ee8251ef3deeeaf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warn&lt;/code&gt; - color for warn messages. Defaults to: &lt;code&gt;:yellow&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:warn&lt;/code&gt; - цвет предупреждений. По умолчанию &lt;code&gt;:yellow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68a5c8c86c9e1b365a2615c66c731e8c5b2d45e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warn&lt;/code&gt; - color for warning messages. Defaults to: &lt;code&gt;:yellow&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:warn&lt;/code&gt; - цвет предупреждений. По умолчанию &lt;code&gt;:yellow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c5e79805db42d87c49b6e732710f8a9883d53cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warn&lt;/code&gt; - for warnings</source>
          <target state="translated">&lt;code&gt;:warn&lt;/code&gt; - для предупреждений</target>
        </trans-unit>
        <trans-unit id="8897349b08555a476d4d32bf64bf637a91daee5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warn_on_unnecessary_quotes&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, does not warn when atoms, keywords or calls have unnecessary quotes on them. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:warn_on_unnecessary_quotes&lt;/code&gt; - если &lt;code&gt;false&lt;/code&gt; , не предупреждает, когда атомы, ключевые слова или вызовы содержат ненужные кавычки. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b142347ad2985921b40e9d4f2b41f245a5ea2680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warn_test_pattern&lt;/code&gt; - a pattern to match potentially misnamed test files and display a warning. Defaults to &lt;code&gt;*_test.ex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:warn_test_pattern&lt;/code&gt; - шаблон для сопоставления потенциально неверно названных тестовых файлов и отображения предупреждения. По умолчанию &lt;code&gt;*_test.ex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="158997e8b50dde2e650503069d646d05e1abc1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warning&lt;/code&gt; - An issue that did not cause failure but suggests the programmer may have made a mistake</source>
          <target state="translated">&lt;code&gt;:warning&lt;/code&gt; - Проблема, которая не вызвала сбоя, но предполагает, что программист мог ошибиться</target>
        </trans-unit>
        <trans-unit id="b1b7d9631b9bf143835a222ded6dafa81e4899e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warning&lt;/code&gt; - for warnings</source>
          <target state="translated">&lt;code&gt;:warning&lt;/code&gt; - для предупреждений</target>
        </trans-unit>
        <trans-unit id="b69954b8616460123488d7e49e31c3f41ede8d95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:warnings_as_errors&lt;/code&gt; - causes compilation to fail when warnings are generated. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:warnings_as_errors&lt;/code&gt; - приводит к сбою компиляции при генерации предупреждений. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf0388681f52d7a3593391ced5d12986df6c7ec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:width&lt;/code&gt; - defaults to 80 characters, used when pretty is &lt;code&gt;true&lt;/code&gt; or when printing to IO devices. Set to 0 to force each item to be printed on its own line. If you don't want to limit the number of items to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:width&lt;/code&gt; - по умолчанию 80 символов, используется, если значение &lt;code&gt;true&lt;/code&gt; или при печати на устройства ввода-вывода. Установите значение 0, чтобы каждый элемент печатался в отдельной строке. Если вы не хотите ограничивать количество элементов определенным числом, используйте &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f43d876408925078073b86fa254ec07479b2e5fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:width&lt;/code&gt; - number of characters per line used when pretty is &lt;code&gt;true&lt;/code&gt; or when printing to IO devices. Set to &lt;code&gt;0&lt;/code&gt; to force each item to be printed on its own line. If you don't want to limit the number of items to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;. Defaults to &lt;code&gt;80&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:width&lt;/code&gt; - количество символов в строке, используемое, если это &lt;code&gt;true&lt;/code&gt; или при печати на устройства ввода-вывода. Установите значение &lt;code&gt;0&lt;/code&gt; , чтобы каждый элемент печатался в отдельной строке. Если вы не хотите ограничивать количество элементов определенным числом, используйте &lt;code&gt;:infinity&lt;/code&gt; . По умолчанию &lt;code&gt;80&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7d69d648c9f7b6c21f4f63f8b22f6cb9790f034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:workers&lt;/code&gt; - the count of all workers, whether or not the child process is still alive</source>
          <target state="translated">&lt;code&gt;:workers&lt;/code&gt; - количество всех рабочих процессов, независимо от того, жив ли дочерний процесс</target>
        </trans-unit>
        <trans-unit id="334cc70397dfdbf2e8f49b9a5c8da45b65cfee84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:workers&lt;/code&gt; - the count of all workers, whether or not these child workers are still alive</source>
          <target state="translated">&lt;code&gt;:workers&lt;/code&gt; - подсчет всех рабочих, живы ли эти дети</target>
        </trans-unit>
        <trans-unit id="0f80205292677fed0fe9f8b3f5a559aeecfd0ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:write&lt;/code&gt; - the file is opened for writing. It is created if it does not exist.</source>
          <target state="translated">&lt;code&gt;:write&lt;/code&gt; - файл открывается на запись. Он создается, если его не существует.</target>
        </trans-unit>
        <trans-unit id="09715b1f90ef6627a93d9acfa01177825316b0eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:yecc_options&lt;/code&gt; - compilation options that apply to Yecc's compiler.</source>
          <target state="translated">&lt;code&gt;:yecc_options&lt;/code&gt; - параметры компиляции, которые применяются к компилятору Yecc.</target>
        </trans-unit>
        <trans-unit id="0fefd30d847d0341dd6b85fb040758a0c5fb2fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;gt;&lt;/code&gt; (valid syntax only inside &lt;code&gt;%{}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt; (допустимый синтаксис только внутри &lt;code&gt;%{}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b58630b3dd6306489c90fcaf7aafd5491cf141b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;gt;&lt;/code&gt; - see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%25%7B%7D/1&quot;&gt;&lt;code&gt;%{}&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt; - см. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%25%7B%7D/1&quot;&gt; &lt;code&gt;%{}&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f772920ee2b8149ecd45efca6c94a408441c5967" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;=~&lt;/code&gt;&lt;code&gt;===&lt;/code&gt;&lt;code&gt;!==&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;=~&lt;/code&gt;&lt;code&gt;===&lt;/code&gt;&lt;code&gt;!==&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30dbfa13a150bcf3624e9ca02561b827e1f10970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; - matches one character.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; - соответствует одному символу.</target>
        </trans-unit>
        <trans-unit id="8fff3a404ea676594d737e706c90d88f4f595921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\a&lt;/code&gt; - Bell</source>
          <target state="translated">&lt;code&gt;?\a&lt;/code&gt; - Колокол</target>
        </trans-unit>
        <trans-unit id="613f9bcb89eecba54532c8aaec33df641326ae00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\b&lt;/code&gt; - Backspace</source>
          <target state="translated">&lt;code&gt;?\b&lt;/code&gt; - Backspace</target>
        </trans-unit>
        <trans-unit id="e5ecf6f761279616c3d32f47521aec8133a4e290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\e&lt;/code&gt; - Escape</source>
          <target state="translated">&lt;code&gt;?\e&lt;/code&gt; - Побег</target>
        </trans-unit>
        <trans-unit id="39d2d4d0c7cc57ab6723bacaa43078296d967029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\f&lt;/code&gt; - Form feed</source>
          <target state="translated">&lt;code&gt;?\f&lt;/code&gt; - Подача формы</target>
        </trans-unit>
        <trans-unit id="23e3f2abd16162eb807b9232767c5ace80662783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\n&lt;/code&gt; - Line feed</source>
          <target state="translated">&lt;code&gt;?\n&lt;/code&gt; - перевод строки</target>
        </trans-unit>
        <trans-unit id="95a05724bb974cbfc0c47983a4723149096071b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\r&lt;/code&gt; - Carriage return</source>
          <target state="translated">&lt;code&gt;?\r&lt;/code&gt; - возврат каретки</target>
        </trans-unit>
        <trans-unit id="bca888af28a2983a4c7577d14529f75cf25fb175" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\t&lt;/code&gt; - Horizontal tab</source>
          <target state="translated">&lt;code&gt;?\t&lt;/code&gt; - горизонтальная вкладка</target>
        </trans-unit>
        <trans-unit id="df9cea6c334078b1be9dce7f59ef87281fa242d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?\v&lt;/code&gt; - Vertical tab</source>
          <target state="translated">&lt;code&gt;?\v&lt;/code&gt; - Вертикальная табуляция</target>
        </trans-unit>
        <trans-unit id="37a3265ca91a672634680057bcfb31fce197ab8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@before_compile&lt;/code&gt; - provides a hook that will be invoked before the module is compiled. This makes it possible to inject functions inside the module exactly before compilation.</source>
          <target state="translated">&lt;code&gt;@before_compile&lt;/code&gt; - обеспечивает ловушку, которая будет вызываться перед компиляцией модуля. Это позволяет вставлять функции в модуль непосредственно перед компиляцией.</target>
        </trans-unit>
        <trans-unit id="b5006c789ded71d15ca28be2b24956a998969c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@behaviour&lt;/code&gt; - (notice the British spelling) used for specifying an</source>
          <target state="translated">&lt;code&gt;@behaviour&lt;/code&gt; - (обратите внимание на британское написание) используется для указания</target>
        </trans-unit>
        <trans-unit id="a27e3e245e0b9d802a39440f4800291c27791121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@callback&lt;/code&gt; - provides a specification for a behaviour callback</source>
          <target state="translated">&lt;code&gt;@callback&lt;/code&gt; - предоставляет спецификацию для обратного вызова поведения</target>
        </trans-unit>
        <trans-unit id="2b99fba722dcddee5b4e812a35c1a4ae382006f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@callback&lt;/code&gt; module attribute (v1.0)</source>
          <target state="translated">&lt;code&gt;@callback&lt;/code&gt; модуля @callback (v1.0)</target>
        </trans-unit>
        <trans-unit id="d3ad364f188f9d6529caf420bd702cacfcfd7c8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile :debug_info&lt;/code&gt; - includes &lt;code&gt;:debug_info&lt;/code&gt; regardless of the corresponding setting in &lt;a href=&quot;code#compiler_options/1&quot;&gt;&lt;code&gt;Code.compiler_options/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@compile :debug_info&lt;/code&gt; - включает &lt;code&gt;:debug_info&lt;/code&gt; независимо от соответствующего параметра в &lt;a href=&quot;code#compiler_options/1&quot;&gt; &lt;code&gt;Code.compiler_options/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cc23c397b3c6f71d22362aab95f3ad8295c309e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile :debug_info&lt;/code&gt; - includes &lt;code&gt;:debug_info&lt;/code&gt; regardless of the corresponding setting in &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#get_compiler_option/1&quot;&gt;&lt;code&gt;Code.get_compiler_option/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@compile :debug_info&lt;/code&gt; - включает &lt;code&gt;:debug_info&lt;/code&gt; независимо от соответствующего параметра в &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#get_compiler_option/1&quot;&gt; &lt;code&gt;Code.get_compiler_option/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5910f1418f6efbba1a18f2905a498692fe1df693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:autoload, false}&lt;/code&gt; - disables automatic loading of modules after compilation. Instead, the module will be loaded after it is dispatched to</source>
          <target state="translated">&lt;code&gt;@compile {:autoload, false}&lt;/code&gt; - отключает автоматическую загрузку модулей после компиляции. Вместо этого модуль будет загружен после того, как он будет отправлен в</target>
        </trans-unit>
        <trans-unit id="0389a458fd16e5d2ea5409d9cccc30f2ad04f1c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:debug_info, false}&lt;/code&gt; - disables &lt;code&gt;:debug_info&lt;/code&gt; regardless of the corresponding setting in &lt;a href=&quot;code#compiler_options/1&quot;&gt;&lt;code&gt;Code.compiler_options/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@compile {:debug_info, false}&lt;/code&gt; - отключает &lt;code&gt;:debug_info&lt;/code&gt; независимо от соответствующей настройки в &lt;a href=&quot;code#compiler_options/1&quot;&gt; &lt;code&gt;Code.compiler_options/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea8fd4c1b2ec219f8e69c73226aadbc00088bdfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:debug_info, false}&lt;/code&gt; - disables &lt;code&gt;:debug_info&lt;/code&gt; regardless of the corresponding setting in &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#get_compiler_option/1&quot;&gt;&lt;code&gt;Code.get_compiler_option/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@compile {:debug_info, false}&lt;/code&gt; - отключает &lt;code&gt;:debug_info&lt;/code&gt; независимо от соответствующей настройки в &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#get_compiler_option/1&quot;&gt; &lt;code&gt;Code.get_compiler_option/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97e47694ebddaaa4418902dea32c44caad53bf34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:inline, some_fun: 2, other_fun: 3}&lt;/code&gt; - inlines the given name/arity pairs. Inlining is applied locally, calls from another module are not affected by this option</source>
          <target state="translated">&lt;code&gt;@compile {:inline, some_fun: 2, other_fun: 3}&lt;/code&gt; - встраивает заданные пары имя / арность. Встраивание применяется локально, эта опция не влияет на вызовы из другого модуля</target>
        </trans-unit>
        <trans-unit id="e264aa6872b7684b8a71c56ed946e94f8eb31a20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:no_warn_undefined, Mod}&lt;/code&gt; or &lt;code&gt;@compile {:no_warn_undefined, {Mod, fun, arity}}&lt;/code&gt; - does not warn if the given module or the given &lt;code&gt;Mod.fun/arity&lt;/code&gt; are not defined</source>
          <target state="translated">&lt;code&gt;@compile {:no_warn_undefined, Mod}&lt;/code&gt; или &lt;code&gt;@compile {:no_warn_undefined, {Mod, fun, arity}}&lt;/code&gt; - не предупреждает, если данный модуль или данный &lt;code&gt;Mod.fun/arity&lt;/code&gt; не определены</target>
        </trans-unit>
        <trans-unit id="dc0ddc66111ecd10979a8f58c42ef3420edfc74d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:parse_transform, _}&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@compile {:parse_transform, _}&lt;/code&gt; в &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77e73a5ef9dce8313d7bfd5b64cbcbaee21df0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@compile {:parse_transform, _}&lt;/code&gt; in &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@compile {:parse_transform, _}&lt;/code&gt; в &lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e96152207ec3eb21d84903fe60382b1b081d4289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@doc&lt;/code&gt; - provides documentation for the function or macro that follows the attribute.</source>
          <target state="translated">&lt;code&gt;@doc&lt;/code&gt; - предоставляет документацию для функции или макроса, следующих за атрибутом.</target>
        </trans-unit>
        <trans-unit id="f15234e54e9e652b13174cfaa49be965b1680a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@doc&lt;/code&gt; and &lt;code&gt;@typedoc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@doc&lt;/code&gt; и &lt;code&gt;@typedoc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59af86a43d50330626df1552fc92e1a38a7fb747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@doc&lt;/code&gt; module attribute (v1.0)</source>
          <target state="translated">&lt;code&gt;@doc&lt;/code&gt; модуля @doc (v1.0)</target>
        </trans-unit>
        <trans-unit id="934e98fc755a06331804d907ade934513ee502fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@impl&lt;/code&gt; - declares an implementation of a callback function or macro</source>
          <target state="translated">&lt;code&gt;@impl&lt;/code&gt; - объявляет реализацию функции обратного вызова или макроса</target>
        </trans-unit>
        <trans-unit id="17819c89ee896cbaf7bd2d2e886773c6fce57eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@impl&lt;/code&gt; also helps with maintainability by making it clear to other developers that the function is implementing a callback.</source>
          <target state="translated">&lt;code&gt;@impl&lt;/code&gt; также помогает с ремонтопригодностью, давая понять другим разработчикам, что функция реализует обратный вызов.</target>
        </trans-unit>
        <trans-unit id="a88e78800c83e0b772a5ac19b1fe178e99242f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@impl&lt;/code&gt; works on a per-context basis. If you generate a function through a macro and mark it with &lt;code&gt;@impl&lt;/code&gt;, that won't affect the module where that function is generated in.</source>
          <target state="translated">&lt;code&gt;@impl&lt;/code&gt; работает на основе контекста. Если вы сгенерируете функцию с помощью макроса и отметите ее &lt;code&gt;@impl&lt;/code&gt; , это не повлияет на модуль, в котором эта функция сгенерирована.</target>
        </trans-unit>
        <trans-unit id="f2bccc6948542760dcd3c3f6f7b7199679e2fa95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@macrocallback&lt;/code&gt; - provides a specification for a macro behaviour callback</source>
          <target state="translated">&lt;code&gt;@macrocallback&lt;/code&gt; - предоставляет спецификацию обратного вызова поведения макроса</target>
        </trans-unit>
        <trans-unit id="381a38bb94c99bb9edf99588bac350cd814a717c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@moduledoc&lt;/code&gt; - provides documentation for the current module.</source>
          <target state="translated">&lt;code&gt;@moduledoc&lt;/code&gt; - предоставляет документацию для текущего модуля.</target>
        </trans-unit>
        <trans-unit id="437861897b2e92f1b4983b067489afc4d19b2f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@moduledoc&lt;/code&gt; and &lt;code&gt;@doc&lt;/code&gt; are by far the most used attributes, and we expect you to use them a lot. Elixir treats documentation as first-class and provides many functions to access documentation. You can read more about &lt;a href=&quot;https://hexdocs.pm/elixir/writing-documentation.html&quot;&gt;writing documentation in Elixir in our official documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@moduledoc&lt;/code&gt; и &lt;code&gt;@doc&lt;/code&gt; - безусловно, наиболее часто используемые атрибуты, и мы ожидаем, что вы будете их часто использовать. Elixir рассматривает документацию как первоклассную и предоставляет множество функций для доступа к документации. Подробнее о &lt;a href=&quot;https://hexdocs.pm/elixir/writing-documentation.html&quot;&gt;написании документации в Elixir&lt;/a&gt; вы можете прочитать в нашей официальной документации .</target>
        </trans-unit>
        <trans-unit id="451e2829b6a116284e15823242417d31cdf4fd8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@opaque&lt;/code&gt; - defines an opaque type to be used in &lt;code&gt;@spec&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@opaque&lt;/code&gt; - определяет непрозрачный тип, который будет использоваться в &lt;code&gt;@spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85a017da91a01cbf5dc930c0f088328c5e12a293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@optional_callbacks&lt;/code&gt; - specifies which behaviour callbacks and macro behaviour callbacks are optional</source>
          <target state="translated">&lt;code&gt;@optional_callbacks&lt;/code&gt; - указывает, какие обратные вызовы поведения и обратные вызовы поведения макроса являются необязательными</target>
        </trans-unit>
        <trans-unit id="ee5ea93d68f800c9bb96b3ffb5f441757ca185d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@preferred_cli_env&lt;/code&gt; - recommends an environment in which to run the task. It is used only if &lt;code&gt;MIX_ENV&lt;/code&gt; is not yet set. Note &lt;code&gt;@preferred_cli_env&lt;/code&gt; is not loaded from dependencies as we need to know the environment in order to load the dependencies themselves. In those cases, you can set the &lt;code&gt;preferred_cli_env&lt;/code&gt; configuration under &lt;code&gt;def project&lt;/code&gt; in your &lt;code&gt;mix.exs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@preferred_cli_env&lt;/code&gt; - рекомендует среду, в которой запускать задачу. Он используется, только если &lt;code&gt;MIX_ENV&lt;/code&gt; еще не установлен. Обратите внимание, что &lt;code&gt;@preferred_cli_env&lt;/code&gt; не загружается из зависимостей, так как нам нужно знать среду, чтобы загрузить сами зависимости. В этих случаях вы можете установить &lt;code&gt;preferred_cli_env&lt;/code&gt; конфигурацию под &lt;code&gt;def project&lt;/code&gt; в вашем &lt;code&gt;mix.exs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07bf37b9ee7e6e2d160fd237b741b014ae960ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@preferred_cli_env&lt;/code&gt; - recommends environment to run task. It is used in absence of a Mix project recommendation, or explicit &lt;code&gt;MIX_ENV&lt;/code&gt;, and it only works for tasks in the current project. &lt;code&gt;@preferred_cli_env&lt;/code&gt; is not loaded from dependencies as we need to know the environment before dependencies are loaded.</source>
          <target state="translated">&lt;code&gt;@preferred_cli_env&lt;/code&gt; - рекомендует среду для запуска задачи. Он используется при отсутствии рекомендации проекта Mix или явного &lt;code&gt;MIX_ENV&lt;/code&gt; и работает только для задач в текущем проекте. &lt;code&gt;@preferred_cli_env&lt;/code&gt; не загружается из зависимостей, так как нам нужно знать среду до загрузки зависимостей.</target>
        </trans-unit>
        <trans-unit id="ca908949bd667b235800ff24cb022d02b2c7b22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@recursive&lt;/code&gt; - runs the task recursively in umbrella projects</source>
          <target state="translated">&lt;code&gt;@recursive&lt;/code&gt; - рекурсивно запускает задачу в зонтичных проектах</target>
        </trans-unit>
        <trans-unit id="ad8d923e21cb0fdaa694cadcdbf76f50e2e38af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@requirements&lt;/code&gt; - list of required tasks to be run before the task</source>
          <target state="translated">&lt;code&gt;@requirements&lt;/code&gt; - список необходимых задач для запуска перед задачей</target>
        </trans-unit>
        <trans-unit id="5148e38aa0a49680bc03e8478fdc78dc53e6332e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@shortdoc&lt;/code&gt; - makes the task public with a short description that appears on &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@shortdoc&lt;/code&gt; - делает задачу общедоступной с кратким описанием, которое появляется в &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; по миксу</target>
        </trans-unit>
        <trans-unit id="cbfdcfb85b0218f0ecbce848006d6e4018957214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@shortdoc&lt;/code&gt; - makes the task public with a short description that appears on &lt;a href=&quot;mix.tasks.help&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@shortdoc&lt;/code&gt; - делает задачу общедоступной с кратким описанием, которое появляется в &lt;a href=&quot;mix.tasks.help&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; по миксу</target>
        </trans-unit>
        <trans-unit id="efee48c5a9b83b5d61138f95175ab7ba3a1452ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@spec&lt;/code&gt; - provides a specification for a function</source>
          <target state="translated">&lt;code&gt;@spec&lt;/code&gt; - предоставляет спецификацию функции</target>
        </trans-unit>
        <trans-unit id="158af346d3f53b1378f06a1d8efff2de54c7e218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@type&lt;/code&gt; - defines a type to be used in &lt;code&gt;@spec&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@type&lt;/code&gt; - определяет тип, который будет использоваться в &lt;code&gt;@spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d93ce7d4632d38027a52a9295a9a40662cdf05f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@typep&lt;/code&gt; - defines a private type to be used in &lt;code&gt;@spec&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@typep&lt;/code&gt; - определяет частный тип, который будет использоваться в &lt;code&gt;@spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be2c80ff23d06188671d40d1e4258d13bb6998da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Any&lt;/code&gt; (see below)</source>
          <target state="translated">&lt;code&gt;Any&lt;/code&gt; (см. Ниже)</target>
        </trans-unit>
        <trans-unit id="cab1a8a7a7f40a3fa2c2093e4a4bbf8aec7bfe18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C:\TMP&lt;/code&gt; on Windows or &lt;code&gt;/tmp&lt;/code&gt; on Unix</source>
          <target state="translated">&lt;code&gt;C:\TMP&lt;/code&gt; в Windows или &lt;code&gt;/tmp&lt;/code&gt; в Unix</target>
        </trans-unit>
        <trans-unit id="f082141a99150b35659e21185e44032030c389df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C:\TMP&lt;/code&gt; on Windows or &lt;code&gt;/tmp&lt;/code&gt; on Unix-like operating systems</source>
          <target state="translated">&lt;code&gt;C:\TMP&lt;/code&gt; в Windows или &lt;code&gt;/tmp&lt;/code&gt; в Unix-подобных операционных системах</target>
        </trans-unit>
        <trans-unit id="83b7688814bc4bb8e003a5dec38f284a5a872dd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoverModule&lt;/code&gt; can be any module that exports &lt;code&gt;start/2&lt;/code&gt;, receiving the compilation path and the &lt;code&gt;test_coverage&lt;/code&gt; options as arguments. It must return either &lt;code&gt;nil&lt;/code&gt; or an anonymous function of zero arity that will be run after the test suite is done.</source>
          <target state="translated">&lt;code&gt;CoverModule&lt;/code&gt; может быть любым модулем, который экспортирует &lt;code&gt;start/2&lt;/code&gt; , получая путь компиляции и параметры &lt;code&gt;test_coverage&lt;/code&gt; в качестве аргументов. Он должен возвращать либо &lt;code&gt;nil&lt;/code&gt; , либо анонимную функцию с нулевой арностью, которая будет запущена после завершения набора тестов.</target>
        </trans-unit>
        <trans-unit id="ac3a6bcf59cce82a9597afb726db205333f00d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicSupervisor.start_child/2&lt;/code&gt; expects the name of the supervisor and the child specification of the child to be started.</source>
          <target state="translated">&lt;code&gt;DynamicSupervisor.start_child/2&lt;/code&gt; ожидает, что будет запущено имя супервизора и дочерняя спецификация дочернего элемента.</target>
        </trans-unit>
        <trans-unit id="4be1d465a033470e0d13e03f803f35a23df2fbc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; - can be used to give default compile options. The value must be a valid Erlang term. If the value is a list, it will be used as is. If it is not a list, it will be put into a list.</source>
          <target state="translated">&lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; - может использоваться для задания параметров компиляции по умолчанию. Значение должно быть допустимым термином Erlang. Если значением является список, он будет использоваться как есть. Если это не список, он будет помещен в список.</target>
        </trans-unit>
        <trans-unit id="6f324bdba6e17d20eaca2ae660b30254ca8ff092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Enum.chunk/2&lt;/code&gt;&lt;a href=&quot;%60enum.chunk/4%60&quot;&gt;&lt;code&gt;/3/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Enum.chunk/2&lt;/code&gt;&lt;a href=&quot;%60enum.chunk/4%60&quot;&gt;&lt;code&gt;/3/4&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed541833a5f66414f125983720593b8ffac0eb96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IEx.pry/0&lt;/code&gt; and &lt;code&gt;IEx.break!/2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IEx.pry/0&lt;/code&gt; и &lt;code&gt;IEx.break!/2&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
