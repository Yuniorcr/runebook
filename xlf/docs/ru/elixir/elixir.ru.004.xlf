<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="f364101757fd7b07c462556f8631107344aea9a7" translate="yes" xml:space="preserve">
          <source>Anti-patterns</source>
          <target state="translated">Anti-patterns</target>
        </trans-unit>
        <trans-unit id="bf6f13831a7432164063eab288ffb17f48516527" translate="yes" xml:space="preserve">
          <source>Any Elixir code can be represented using Elixir data structures. The building block of Elixir macros is a tuple with three elements, for example:</source>
          <target state="translated">Любой код эликсира может быть представлен с помощью структур данных эликсира.Структурный блок макросов Elixir представляет собой кортеж с тремя элементами,например:</target>
        </trans-unit>
        <trans-unit id="cc4013b8d32a07ea1cafd334cef7889bf5c90d15" translate="yes" xml:space="preserve">
          <source>Any arbitrary configuration can also be passed to &lt;a href=&quot;#configure/1&quot;&gt;&lt;code&gt;configure/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#start/1&quot;&gt;&lt;code&gt;start/1&lt;/code&gt;&lt;/a&gt;, and these options can then be used in places such as custom formatters. These other options will be ignored by ExUnit itself.</source>
          <target state="translated">Любая произвольная конфигурация также может быть передана в &lt;a href=&quot;#configure/1&quot;&gt; &lt;code&gt;configure/1&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#start/1&quot;&gt; &lt;code&gt;start/1&lt;/code&gt; &lt;/a&gt; , а затем эти параметры можно использовать в таких местах, как пользовательские средства форматирования. Эти другие параметры будут проигнорированы самим ExUnit.</target>
        </trans-unit>
        <trans-unit id="ddb0b53128202d492ea01bc6e15be1d122ecf8de" translate="yes" xml:space="preserve">
          <source>Any developer can create their own &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; backend. Since &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; is an event manager powered by &lt;code&gt;:gen_event&lt;/code&gt;, writing a new backend is a matter of creating an event handler, as described in the &lt;a href=&quot;http://erlang.org/doc/man/gen_event.html&quot;&gt;&lt;code&gt;:gen_event&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">Любой разработчик может создать свой собственный серверный &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; . Поскольку &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; - это менеджер событий, поддерживаемый &lt;code&gt;:gen_event&lt;/code&gt; , написание нового бэкенда - это вопрос создания обработчика событий, как описано в документации &lt;a href=&quot;http://erlang.org/doc/man/gen_event.html&quot;&gt; &lt;code&gt;:gen_event&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0eda7adbc051844f9bb1f76988dfdbc8ee614b71" translate="yes" xml:space="preserve">
          <source>Any expression is allowed to serve as a default value, but it won&amp;rsquo;t be evaluated during the function definition. Every time the function is invoked and any of its default values have to be used, the expression for that default value will be evaluated:</source>
          <target state="translated">Любое выражение может служить значением по умолчанию, но оно не будет оцениваться во время определения функции. Каждый раз, когда вызывается функция и необходимо использовать любое из ее значений по умолчанию, будет вычисляться выражение для этого значения по умолчанию:</target>
        </trans-unit>
        <trans-unit id="51294445c2892caace0f93beba65cca2df4db722" translate="yes" xml:space="preserve">
          <source>Any functions may be called when defining a module attribute.</source>
          <target state="translated">При определении атрибута модуля могут быть вызваны любые функции.</target>
        </trans-unit>
        <trans-unit id="168da730b1d34c5154e469d6a2c57e8cc938548d" translate="yes" xml:space="preserve">
          <source>Any map/struct that contains the date fields</source>
          <target state="translated">Любая карта/инструкция,содержащая поля даты.</target>
        </trans-unit>
        <trans-unit id="6009b6eb66ee2e5f4fe90dd4f8cc38fa5add92f6" translate="yes" xml:space="preserve">
          <source>Any map/struct that contains the datetime fields</source>
          <target state="translated">Любая карта/поручение,содержащее поля даты.</target>
        </trans-unit>
        <trans-unit id="bdac0a5a4c31c821fbdf66fa2f00b8ebf1826565" translate="yes" xml:space="preserve">
          <source>Any map/struct that contains the naive_datetime fields</source>
          <target state="translated">Любая карта/инструкция,содержащая поля naive_datetime</target>
        </trans-unit>
        <trans-unit id="c72e818c080afa7ce37cf5ba8b92ceb1c5d794de" translate="yes" xml:space="preserve">
          <source>Any map/struct that contains the time fields</source>
          <target state="translated">Любая карта/поручение,содержащая временные поля.</target>
        </trans-unit>
        <trans-unit id="f0169052fc32e3ac2806fe55bbfa851febc0b349" translate="yes" xml:space="preserve">
          <source>Any module is also able to define its own types and the modules in Elixir are no exception. For example, the &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; module defines a &lt;a href=&quot;t:Range.t/0&quot;&gt;&lt;code&gt;t/0&lt;/code&gt;&lt;/a&gt; type that represents a range: this type can be referred to as &lt;a href=&quot;range#t:t/0&quot;&gt;&lt;code&gt;Range.t/0&lt;/code&gt;&lt;/a&gt;. In a similar fashion, a string is &lt;a href=&quot;string#t:t/0&quot;&gt;&lt;code&gt;String.t/0&lt;/code&gt;&lt;/a&gt;, any enumerable can be &lt;a href=&quot;enum#t:t/0&quot;&gt;&lt;code&gt;Enum.t/0&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">Любой модуль также может определять свои собственные типы, и модули в Elixir не являются исключением. Например, модуль &lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; определяет тип &lt;a href=&quot;t:Range.t/0&quot;&gt; &lt;code&gt;t/0&lt;/code&gt; &lt;/a&gt; , представляющий диапазон: этот тип может называться &lt;a href=&quot;range#t:t/0&quot;&gt; &lt;code&gt;Range.t/0&lt;/code&gt; &lt;/a&gt; . Аналогичным образом строка - это &lt;a href=&quot;string#t:t/0&quot;&gt; &lt;code&gt;String.t/0&lt;/code&gt; &lt;/a&gt; , любое перечисляемое может быть &lt;a href=&quot;enum#t:t/0&quot;&gt; &lt;code&gt;Enum.t/0&lt;/code&gt; &lt;/a&gt; и так далее.</target>
        </trans-unit>
        <trans-unit id="8630a55fc792a79de5fdbeb3cf17c110eb8b5440" translate="yes" xml:space="preserve">
          <source>Any module that contains a call to the &lt;a href=&quot;#defexception/1&quot;&gt;&lt;code&gt;defexception/1&lt;/code&gt;&lt;/a&gt; macro automatically implements the &lt;a href=&quot;exception#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt; callback expected by &lt;a href=&quot;#raise/2&quot;&gt;&lt;code&gt;raise/2&lt;/code&gt;&lt;/a&gt;. For more information, see &lt;a href=&quot;#defexception/1&quot;&gt;&lt;code&gt;defexception/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Любой модуль, который содержит вызов &lt;a href=&quot;#defexception/1&quot;&gt; &lt;code&gt;defexception/1&lt;/code&gt; &lt;/a&gt; автоматически реализует обратный вызов &lt;a href=&quot;exception#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; ,&lt;/a&gt; ожидаемый с помощью &lt;a href=&quot;#raise/2&quot;&gt; &lt;code&gt;raise/2&lt;/code&gt; &lt;/a&gt; . Для получения дополнительной информации см. &lt;a href=&quot;#defexception/1&quot;&gt; &lt;code&gt;defexception/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75747731e474a8178e05e264cb1563d939c05224" translate="yes" xml:space="preserve">
          <source>Any other exit reason will cause the operating system process to exit with status &lt;code&gt;1&lt;/code&gt; and linked Erlang processes to crash.</source>
          <target state="translated">Любая другая причина выхода приведет к завершению процесса операционной системы со статусом &lt;code&gt;1&lt;/code&gt; и сбою связанных процессов Erlang.</target>
        </trans-unit>
        <trans-unit id="0f5f30288dbfabd82f00bbad3a6e84be7fe32c88" translate="yes" xml:space="preserve">
          <source>Any other value, such as a map or a four-element tuple, must be escaped (&lt;a href=&quot;macro#escape/1&quot;&gt;&lt;code&gt;Macro.escape/1&lt;/code&gt;&lt;/a&gt;) before being introduced into an AST.</source>
          <target state="translated">Любое другое значение, такое как map или четырехэлементный кортеж, должно быть экранировано ( &lt;a href=&quot;macro#escape/1&quot;&gt; &lt;code&gt;Macro.escape/1&lt;/code&gt; &lt;/a&gt; ) перед введением в AST.</target>
        </trans-unit>
        <trans-unit id="21dbf38e245345b7875ff893e598c955362174cf" translate="yes" xml:space="preserve">
          <source>Any protocol module contains three extra functions:</source>
          <target state="translated">Любой протокольный модуль содержит три дополнительные функции:</target>
        </trans-unit>
        <trans-unit id="9f90ff0f062168c098cc8f21cea2c19c727f8a1e" translate="yes" xml:space="preserve">
          <source>Appends a path to the end of the Erlang VM code path list.</source>
          <target state="translated">Добавляет путь к концу списка путей к VM-коду Erlang.</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="97e8780936863ac8125cd13898e95fb6c124a954" translate="yes" xml:space="preserve">
          <source>Application &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Поведение&lt;/small&gt; приложения&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1631e1c82584aae550c9008087504b1cc7b074ed" translate="yes" xml:space="preserve">
          <source>Application callback modules may also implement the optional callback &lt;a href=&quot;#c:prep_stop/1&quot;&gt;&lt;code&gt;prep_stop/1&lt;/code&gt;&lt;/a&gt;. If present, &lt;a href=&quot;#c:prep_stop/1&quot;&gt;&lt;code&gt;prep_stop/1&lt;/code&gt;&lt;/a&gt; is invoked before the supervision tree is terminated. Its argument is the state returned by &lt;a href=&quot;#c:start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt;, if it did, or &lt;code&gt;[]&lt;/code&gt; otherwise, and its return value is passed to &lt;a href=&quot;#c:stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Модули обратного вызова приложения могут также реализовать дополнительный обратный вызов &lt;a href=&quot;#c:prep_stop/1&quot;&gt; &lt;code&gt;prep_stop/1&lt;/code&gt; &lt;/a&gt; . Если присутствует, &lt;a href=&quot;#c:prep_stop/1&quot;&gt; &lt;code&gt;prep_stop/1&lt;/code&gt; &lt;/a&gt; вызывается до завершения дерева надзора. Его аргумент - это состояние, возвращаемое функцией &lt;a href=&quot;#c:start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; &lt;/a&gt; , если это так, или &lt;code&gt;[]&lt;/code&gt; в противном случае, а его возвращаемое значение передается функции &lt;a href=&quot;#c:stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ce84d4d04cdd60bd8ab75207bda952026831b49" translate="yes" xml:space="preserve">
          <source>Application configuration</source>
          <target state="translated">Конфигурация приложения</target>
        </trans-unit>
        <trans-unit id="eb463fa74d812fcc05af997894ad4ba18a4c240c" translate="yes" xml:space="preserve">
          <source>Application configuration - must be set before the &lt;code&gt;:logger&lt;/code&gt; application is started</source>
          <target state="translated">Конфигурация приложения - необходимо установить до запуска приложения &lt;code&gt;:logger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6bfdc5f066d27eac11710638a304662a34399413" translate="yes" xml:space="preserve">
          <source>Application environment</source>
          <target state="translated">Прикладная среда</target>
        </trans-unit>
        <trans-unit id="133263b1a0a761afc7a839c1e0d9f30d4370bf27" translate="yes" xml:space="preserve">
          <source>Applications are &lt;em&gt;loaded&lt;/em&gt;, which means that the runtime finds and processes their resource files:</source>
          <target state="translated">Приложения &lt;em&gt;загружаются&lt;/em&gt; , что означает, что среда выполнения находит и обрабатывает их файлы ресурсов:</target>
        </trans-unit>
        <trans-unit id="72f9cc4dac3452357e96e709303ddb464195b4c3" translate="yes" xml:space="preserve">
          <source>Applications are also &lt;em&gt;started&lt;/em&gt;:</source>
          <target state="translated">Также &lt;em&gt;запускаются приложения&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8e022aa7ab84d060d734fd766d3347c2181f8ccb" translate="yes" xml:space="preserve">
          <source>Applications are specified in their &lt;a href=&quot;http://erlang.org/doc/man/app.html&quot;&gt;&lt;em&gt;resource file&lt;/em&gt;&lt;/a&gt;, which is a file called &lt;code&gt;APP.app&lt;/code&gt;, where &lt;code&gt;APP&lt;/code&gt; is the application name. For example, the application resource file of the OTP application &lt;code&gt;ex_unit&lt;/code&gt; is called &lt;code&gt;ex_unit.app&lt;/code&gt;.</source>
          <target state="translated">Приложения указываются в их &lt;a href=&quot;http://erlang.org/doc/man/app.html&quot;&gt;&lt;em&gt;файле ресурсов&lt;/em&gt;&lt;/a&gt; , который представляет собой файл &lt;code&gt;APP.app&lt;/code&gt; , где &lt;code&gt;APP&lt;/code&gt; - это имя приложения. Например, файл ресурсов приложения OTP-приложения &lt;code&gt;ex_unit&lt;/code&gt; называется &lt;code&gt;ex_unit.app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43a3c55fce58945b7955ada014ceb15badbab6c6" translate="yes" xml:space="preserve">
          <source>Applications are the idiomatic way to package software in Erlang/OTP. To get the idea, they are similar to the &quot;library&quot; concept common in other programming languages, but with some additional characteristics.</source>
          <target state="translated">Приложения являются идиоматическим способом упаковки программного обеспечения в Erlang/OTP.Чтобы получить идею,они схожи с концепцией &quot;библиотеки&quot;,распространенной в других языках программирования,но с некоторыми дополнительными характеристиками.</target>
        </trans-unit>
        <trans-unit id="b4dbd62a16fa04d91bfc40f06c512edf333a1fbe" translate="yes" xml:space="preserve">
          <source>Applications with supervision tree</source>
          <target state="translated">Заявки с деревом наблюдения</target>
        </trans-unit>
        <trans-unit id="bac054c1e14c519b199d2517df6a0101c94441d1" translate="yes" xml:space="preserve">
          <source>Applies the given function to each element in the &lt;code&gt;enumerable&lt;/code&gt;, storing the result in a list and passing it as the accumulator for the next computation. Uses the first element in the &lt;code&gt;enumerable&lt;/code&gt; as the starting value.</source>
          <target state="translated">Применяет данную функцию к каждому элементу &lt;code&gt;enumerable&lt;/code&gt; , сохраняя результат в списке и передавая его в качестве аккумулятора для следующего вычисления. Использует первый элемент &lt;code&gt;enumerable&lt;/code&gt; в качестве начального значения.</target>
        </trans-unit>
        <trans-unit id="2f961980e9fba3a80a3fe84a5a33a282dd684b9a" translate="yes" xml:space="preserve">
          <source>Applies the given function to each element in the &lt;code&gt;enumerable&lt;/code&gt;, storing the result in a list and passing it as the accumulator for the next computation. Uses the given &lt;code&gt;acc&lt;/code&gt; as the starting value.</source>
          <target state="translated">Применяет данную функцию к каждому элементу &lt;code&gt;enumerable&lt;/code&gt; , сохраняя результат в списке и передавая его в качестве аккумулятора для следующего вычисления. Использует данный &lt;code&gt;acc&lt;/code&gt; в качестве начального значения.</target>
        </trans-unit>
        <trans-unit id="71a330535e646341a3e67bdc7aa7099b09d7d159" translate="yes" xml:space="preserve">
          <source>Applies the given function to the node metadata if it contains one.</source>
          <target state="translated">Применяет данную функцию к метаданным узла,если она содержит одну из них.</target>
        </trans-unit>
        <trans-unit id="41ed7b8f7c8e97d4eaa49d91cf5d985f2894e409" translate="yes" xml:space="preserve">
          <source>ArgumentError</source>
          <target state="translated">ArgumentError</target>
        </trans-unit>
        <trans-unit id="05067852bd2137fdf10aad2ca39e484ed4d4c628" translate="yes" xml:space="preserve">
          <source>ArgumentError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ArgumentError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="0953d0a8d8a481b72be4dd1a2e649d93e22bf086" translate="yes" xml:space="preserve">
          <source>Arguments given to the alias will be appended to the arguments of the last task in the list, if the last task is a function they will be given as a list of strings to the function.</source>
          <target state="translated">Аргументы,присвоенные псевдониму,будут приложены к аргументам последней задачи в списке,если последняя задача является функцией,то они будут даны в виде списка строк функции.</target>
        </trans-unit>
        <trans-unit id="655bc33009493f707144bb646531efed13876152" translate="yes" xml:space="preserve">
          <source>Arithmetic addition.</source>
          <target state="translated">Арифметическое добавление.</target>
        </trans-unit>
        <trans-unit id="9681d96eaf931c989e28ccf9f0440d77ba06dd99" translate="yes" xml:space="preserve">
          <source>Arithmetic division.</source>
          <target state="translated">Арифметическое разделение.</target>
        </trans-unit>
        <trans-unit id="4a61e0447f1394155d9609b0e8ddd9ef54c528e0" translate="yes" xml:space="preserve">
          <source>Arithmetic multiplication.</source>
          <target state="translated">Арифметическое умножение.</target>
        </trans-unit>
        <trans-unit id="da79f19cf7e168e8190dfbc95a70f65090f55686" translate="yes" xml:space="preserve">
          <source>Arithmetic subtraction.</source>
          <target state="translated">Арифметическое вычитание.</target>
        </trans-unit>
        <trans-unit id="1a3bb43ad05ec69548de8b5dbef76098f6a10101" translate="yes" xml:space="preserve">
          <source>Arithmetic unary minus.</source>
          <target state="translated">Арифметический унарный минус.</target>
        </trans-unit>
        <trans-unit id="cf96a5cfba060ff295e5568cfb369fe78d6a4661" translate="yes" xml:space="preserve">
          <source>Arithmetic unary plus.</source>
          <target state="translated">Арифметический унарный плюс.</target>
        </trans-unit>
        <trans-unit id="5509c94c0f9f738717633e15c4c8dbc85e63a4c9" translate="yes" xml:space="preserve">
          <source>ArithmeticError</source>
          <target state="translated">ArithmeticError</target>
        </trans-unit>
        <trans-unit id="8a7db15e8806afedd47b1c010408683e54e7f2aa" translate="yes" xml:space="preserve">
          <source>ArithmeticError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ArithmeticError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8a481eb9afcf30f19b235a484387c683a5bc9ce7" translate="yes" xml:space="preserve">
          <source>As &amp;ldquo;constants&amp;rdquo;</source>
          <target state="translated">Как &amp;laquo;константы&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="5a534e4a24eb4e108c8c81b831db9cad75e840a4" translate="yes" xml:space="preserve">
          <source>As IEx evaluates its input line by line, it will first encounter &lt;code&gt;[1, [2], 3]&lt;/code&gt;. As a list is a valid expression, IEx will evaluate it immediately before looking at the next input line. Only then will IEx attempt to evaluate the now incomplete expression &lt;code&gt;|&amp;gt; List.flatten()&lt;/code&gt;, which on its own is missing its left operand. The evaluation thus fails with the above syntax error.</source>
          <target state="translated">Поскольку IEx построчно оценивает свой ввод, он сначала встречает &lt;code&gt;[1, [2], 3]&lt;/code&gt; . Поскольку список является допустимым выражением, IEx оценит его непосредственно перед просмотром следующей строки ввода. Только тогда IEx попытается вычислить теперь неполное выражение &lt;code&gt;|&amp;gt; List.flatten()&lt;/code&gt; , в котором сам по себе отсутствует левый операнд. Таким образом, оценка не выполняется из-за указанной выше синтаксической ошибки.</target>
        </trans-unit>
        <trans-unit id="af041e603020699ecc4a407c05175708814edeb5" translate="yes" xml:space="preserve">
          <source>As a library author, it is your responsibility to make sure users are not required to use exceptions for control-flow in their applications. You can follow the same convention as Elixir here, using the name without &lt;code&gt;!&lt;/code&gt; for returning &lt;code&gt;:ok&lt;/code&gt;/&lt;code&gt;:error&lt;/code&gt; tuples and appending &lt;code&gt;!&lt;/code&gt; for a version of the function which raises an exception.</source>
          <target state="translated">Как автор библиотеки вы несете ответственность за то, чтобы пользователям не требовалось использовать исключения для потока управления в своих приложениях. Здесь вы можете следовать тому же соглашению, что и Elixir, используя имя без &lt;code&gt;!&lt;/code&gt; для возврата &lt;code&gt;:ok&lt;/code&gt; / &lt;code&gt;:error&lt;/code&gt; кортежи ошибок и добавление &lt;code&gt;!&lt;/code&gt; для версии функции, которая вызывает исключение.</target>
        </trans-unit>
        <trans-unit id="77c3cf325603a665b9b8eac02035614c9c18c7ae" translate="yes" xml:space="preserve">
          <source>As a provider</source>
          <target state="translated">Как поставщик</target>
        </trans-unit>
        <trans-unit id="99a1d5c639e5fae94bea39706a508ae1b1b194aa" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, use &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;not&lt;/code&gt; when you are expecting booleans. If any of the arguments are non-boolean, use &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">Как правило, использование &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; и &lt;code&gt;not&lt;/code&gt; , когда вы ожидаете булевы. Если какой-либо из аргументов не является логическим, используйте &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; , &lt;code&gt;||&lt;/code&gt; и &lt;code&gt;!&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="9d342dd5680ead35a3c501294db776be8ca86c04" translate="yes" xml:space="preserve">
          <source>As a short summary, prefer to using the &lt;code&gt;:spawn&lt;/code&gt; and &lt;code&gt;:spawn_executable&lt;/code&gt; options mentioned below. The other two options, &lt;code&gt;:spawn_driver&lt;/code&gt; and &lt;code&gt;:fd&lt;/code&gt; are for advanced usage within the VM. Also consider using &lt;a href=&quot;system#cmd/3&quot;&gt;&lt;code&gt;System.cmd/3&lt;/code&gt;&lt;/a&gt; if all you want is to execute a program and retrieve its return value.</source>
          <target state="translated">Вкратце, предпочтите использовать параметры &lt;code&gt;:spawn&lt;/code&gt; и &lt;code&gt;:spawn_executable&lt;/code&gt; , упомянутые ниже. Два других параметра &lt;code&gt;:spawn_driver&lt;/code&gt; и &lt;code&gt;:fd&lt;/code&gt; предназначены для расширенного использования в виртуальной машине . Также рассмотрите возможность использования &lt;a href=&quot;system#cmd/3&quot;&gt; &lt;code&gt;System.cmd/3&lt;/code&gt; ,&lt;/a&gt; если все, что вам нужно, - это выполнить программу и получить ее возвращаемое значение.</target>
        </trans-unit>
        <trans-unit id="cb104516ec4ba9c5daae1d819dfced70e5b80a3a" translate="yes" xml:space="preserve">
          <source>As a starting point, let&amp;rsquo;s define a release that includes both &lt;code&gt;:kv_server&lt;/code&gt; and &lt;code&gt;:kv&lt;/code&gt; applications. We will also add a version to it. Open up the &lt;code&gt;mix.exs&lt;/code&gt; in the umbrella root and add inside &lt;code&gt;def project&lt;/code&gt;:</source>
          <target state="translated">В качестве отправной точки давайте определим выпуск, который включает приложения &lt;code&gt;:kv_server&lt;/code&gt; и &lt;code&gt;:kv&lt;/code&gt; . Мы также добавим к нему версию. Откройте &lt;code&gt;mix.exs&lt;/code&gt; в корневом каталоге зонтика и добавьте внутрь &lt;code&gt;def project&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="71409663988da93d2218196a4f8d08db41758aae" translate="yes" xml:space="preserve">
          <source>As an alternative to &lt;code&gt;Enum&lt;/code&gt;, Elixir provides &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt;the &lt;code&gt;Stream&lt;/code&gt; module&lt;/a&gt; which supports lazy operations:</source>
          <target state="translated">В качестве альтернативы &lt;code&gt;Enum&lt;/code&gt; , эликсир обеспечивает &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt;в &lt;code&gt;Stream&lt;/code&gt; модуль&lt;/a&gt; , который поддерживает ленивую операцию:</target>
        </trans-unit>
        <trans-unit id="1e751881fcb15d693b8ad4d4a8a7706bd11e93e1" translate="yes" xml:space="preserve">
          <source>As an example, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt;&lt;code&gt;ExUnit&lt;/code&gt;&lt;/a&gt; stores the AST of every assertion, so when an assertion fails we can show code snippets to users. Without this option, each time the test module is compiled, we get a different MD5 of the module byte code, because the AST contains metadata, such as counters, specific to the compilation environment. By pruning the metadata, we ensure that the module is deterministic and reduce the amount of data &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt;&lt;code&gt;ExUnit&lt;/code&gt;&lt;/a&gt; needs to keep around.</source>
          <target state="translated">Например, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt; &lt;code&gt;ExUnit&lt;/code&gt; &lt;/a&gt; хранит AST каждого утверждения, поэтому, когда утверждение не работает, мы можем показать пользователям фрагменты кода. Без этой опции каждый раз при компиляции тестового модуля мы получаем разные MD5 байтового кода модуля, поскольку AST содержит метаданные, такие как счетчики, специфичные для среды компиляции. Обрезая метаданные, мы гарантируем, что модуль является детерминированным, и уменьшаем объем данных, которые &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt; &lt;code&gt;ExUnit&lt;/code&gt; &lt;/a&gt; должен хранить.</target>
        </trans-unit>
        <trans-unit id="0349a9ec4dea6160dbbe7ca7df0fd8cda00d0b76" translate="yes" xml:space="preserve">
          <source>As an example, here is the implementation of &lt;code&gt;reduce&lt;/code&gt; for lists:</source>
          <target state="translated">В качестве примера, вот реализация &lt;code&gt;reduce&lt;/code&gt; для списков:</target>
        </trans-unit>
        <trans-unit id="464ac5e237ea0054e115f37d2c18ebb476327aba" translate="yes" xml:space="preserve">
          <source>As an example, when &lt;code&gt;Mix.shell.info(&quot;hello&quot;)&lt;/code&gt; is called, the following message will be sent to the calling process:</source>
          <target state="translated">Например, когда &lt;code&gt;Mix.shell.info(&quot;hello&quot;)&lt;/code&gt; , вызывающему процессу будет отправлено следующее сообщение:</target>
        </trans-unit>
        <trans-unit id="dc93e8a699323a5ad9c331b0b8b1db6ef13f00e3" translate="yes" xml:space="preserve">
          <source>As an interactive shell, IEx evaluates expressions. This has some interesting consequences that are worth discussing.</source>
          <target state="translated">В качестве интерактивной оболочки IEx оценивает выражения.Это имеет некоторые интересные последствия,которые стоит обсудить.</target>
        </trans-unit>
        <trans-unit id="85b7c3a4aee2708f25f8484199a1fbbe55745c55" translate="yes" xml:space="preserve">
          <source>As annotations</source>
          <target state="translated">В качестве примечаний</target>
        </trans-unit>
        <trans-unit id="b3d151430c89c74eb889709b00af1b8cd57bf29f" translate="yes" xml:space="preserve">
          <source>As before, if &lt;code&gt;heavy_fun/0&lt;/code&gt; fails, the whole computation will fail, including the parent process. If you don't want the task to fail then you must change the &lt;code&gt;heavy_fun/0&lt;/code&gt; code in the same way you would achieve it if you didn't have the async call. For example, to either return &lt;code&gt;{:ok, val} | :error&lt;/code&gt; results or, in more extreme cases, by using &lt;code&gt;try/rescue&lt;/code&gt;. In other words, an asynchronous task should be thought of as an extension of a process rather than a mechanism to isolate it from all errors.</source>
          <target state="translated">Как и раньше, если &lt;code&gt;heavy_fun/0&lt;/code&gt; завершится неудачно, все вычисления завершатся ошибкой, включая родительский процесс. Если вы не хотите, чтобы задача &lt;code&gt;heavy_fun/0&lt;/code&gt; ошибкой, вы должны изменить код heavy_fun / 0 так же, как если бы у вас не было асинхронного вызова. Например, чтобы вернуть &lt;code&gt;{:ok, val} | :error&lt;/code&gt; приводит к ошибке или, в более крайних случаях, с помощью команды &lt;code&gt;try/rescue&lt;/code&gt; . Другими словами, асинхронную задачу следует рассматривать как расширение процесса, а не как механизм, позволяющий изолировать его от всех ошибок.</target>
        </trans-unit>
        <trans-unit id="92c62ad7d5aa1057f77beb16eeaa0f4ad0108cba" translate="yes" xml:space="preserve">
          <source>As can be seen in the example above, &lt;code&gt;@doc&lt;/code&gt; and &lt;code&gt;@typedoc&lt;/code&gt; also accept a keyword list that serves as a way to provide arbitrary metadata about the entity. Tools like &lt;a href=&quot;https://hexdocs.pm/ex_doc/&quot;&gt;&lt;code&gt;ExDoc&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html&quot;&gt;&lt;code&gt;IEx&lt;/code&gt;&lt;/a&gt; may use this information to display annotations. A common use case is &lt;code&gt;since&lt;/code&gt; that may be used to annotate in which version the function was introduced.</source>
          <target state="translated">Как видно из приведенного выше примера, &lt;code&gt;@doc&lt;/code&gt; и &lt;code&gt;@typedoc&lt;/code&gt; также принимают список ключевых слов, который служит способом предоставления произвольных метаданных об объекте. Такие инструменты, как &lt;a href=&quot;https://hexdocs.pm/ex_doc/&quot;&gt; &lt;code&gt;ExDoc&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html&quot;&gt; &lt;code&gt;IEx&lt;/code&gt; ,&lt;/a&gt; могут использовать эту информацию для отображения аннотаций. Общий случай использования &lt;code&gt;since&lt;/code&gt; , что может быть использовано для аннотирования , в котором версии была введена функция.</target>
        </trans-unit>
        <trans-unit id="53c5b01ebc748740fa3a202be293afebe8d3531d" translate="yes" xml:space="preserve">
          <source>As hinted at the beginning of this chapter, sigils in Elixir are extensible. In fact, using the sigil &lt;code&gt;~r/foo/i&lt;/code&gt; is equivalent to calling &lt;code&gt;sigil_r&lt;/code&gt; with a binary and a char list as the argument:</source>
          <target state="translated">Как указывалось в начале этой главы, сигилы в Elixir расширяемы. Фактически, использование sigil &lt;code&gt;~r/foo/i&lt;/code&gt; эквивалентно вызову &lt;code&gt;sigil_r&lt;/code&gt; с двоичным кодом и списком символов в качестве аргумента:</target>
        </trans-unit>
        <trans-unit id="6c8f5fa4753404d9868b5d71ab1cbc0f0b9f0e9c" translate="yes" xml:space="preserve">
          <source>As illustrated in the example, it is possible to use these attributes more than once before an entity. However, the compiler will warn if used twice with binaries as that replaces the documentation text from the preceding use. Multiple uses with keyword lists will merge the lists into one.</source>
          <target state="translated">Как показано в примере,можно использовать эти атрибуты более одного раза перед сущностью.Однако,компилятор предупредит,если дважды использовать с двоичными файлами,так как это заменит текст документации от предыдущего использования.Многократное использование со списками ключевых слов объединит эти списки в один.</target>
        </trans-unit>
        <trans-unit id="4ba33298179402c80c62d07ca88b3e24f39778d2" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;#for/1&quot;&gt;&lt;code&gt;for/1&lt;/code&gt;&lt;/a&gt;, variables bound inside &lt;a href=&quot;#with/1&quot;&gt;&lt;code&gt;with/1&lt;/code&gt;&lt;/a&gt; won't leak. Expressions without &lt;code&gt;&amp;lt;-&lt;/code&gt; may also be used in clauses. For instance, you can perform regular matches with the &lt;code&gt;=&lt;/code&gt; operator:</source>
          <target state="translated">Как и в случае &lt;a href=&quot;#for/1&quot;&gt; &lt;code&gt;for/1&lt;/code&gt; &lt;/a&gt; , переменные, связанные внутри &lt;a href=&quot;#with/1&quot;&gt; &lt;code&gt;with/1&lt;/code&gt; &lt;/a&gt; , не протекают. Выражения без &lt;code&gt;&amp;lt;-&lt;/code&gt; также могут использоваться в предложениях. Например, вы можете выполнять регулярные совпадения с оператором &lt;code&gt;=&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7618dfe0b48bdcbbc92fb053f674001960e2baaf" translate="yes" xml:space="preserve">
          <source>As many programming languages, Elixir also support operators as non-qualified calls with their precedence and associativity rules. Constructs such as &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;when&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt; are simply treated as operators. See &lt;a href=&quot;operators&quot;&gt;the Operators page&lt;/a&gt; for a full reference.</source>
          <target state="translated">Как и многие языки программирования, Elixir также поддерживает операторы как неквалифицированные вызовы с их правилами приоритета и ассоциативности. Такие конструкции, как &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; и &lt;code&gt;@&lt;/code&gt; , просто обрабатываются как операторы. См. &lt;a href=&quot;operators&quot;&gt;Страницу &amp;laquo;Операторы&amp;raquo;&lt;/a&gt; для полной справки.</target>
        </trans-unit>
        <trans-unit id="37b8d1cf77312071adcc9e820be3a314b89ebb03" translate="yes" xml:space="preserve">
          <source>As mentioned before, only the expressions listed in this page are allowed in guards. However, we can take advantage of macros to write custom guards that can simplify our programs or make them more domain-specific. At the end of the day, what matters is that the &lt;em&gt;output&lt;/em&gt; of the macros (which is what will be compiled) boils down to a combinations of the allowed expressions.</source>
          <target state="translated">Как упоминалось ранее, в гвардейцах разрешены только выражения, перечисленные на этой странице. Однако мы можем использовать макросы для написания настраиваемых средств защиты, которые могут упростить наши программы или сделать их более специфичными для предметной области. В конце концов, важно то, что &lt;em&gt;вывод&lt;/em&gt; макросов (который будет скомпилирован) сводится к комбинациям разрешенных выражений.</target>
        </trans-unit>
        <trans-unit id="8270045d7128d710af04fe8613d76eb301a527bc" translate="yes" xml:space="preserve">
          <source>As per the standard, a code point is a single Unicode Character, which may be represented by one or more bytes.</source>
          <target state="translated">Согласно стандарту,точка кода-это один символ Юникода,который может быть представлен одним или несколькими байтами.</target>
        </trans-unit>
        <trans-unit id="676396c741582d57035ca27fdb32352c00e638d7" translate="yes" xml:space="preserve">
          <source>As seen as in the example above, &lt;code&gt;super&lt;/code&gt; can be used to call the default implementation.</source>
          <target state="translated">Как видно из приведенного выше примера, &lt;code&gt;super&lt;/code&gt; можно использовать для вызова реализации по умолчанию.</target>
        </trans-unit>
        <trans-unit id="1acf70e5576f741c3828bd3ef7c8c6ec15e18ff5" translate="yes" xml:space="preserve">
          <source>As seen in the example above, defining a callback is a matter of defining a specification for that callback, made of:</source>
          <target state="translated">Как видно из вышеприведенного примера,определение обратного вызова-это вопрос определения спецификации для этого обратного вызова:</target>
        </trans-unit>
        <trans-unit id="c17961654b5ef8c817d3bea42d0612f57d6bdfb6" translate="yes" xml:space="preserve">
          <source>As shown above, a map matches as long as the keys in the pattern exist in the given map. Therefore, an empty map matches all maps.</source>
          <target state="translated">Как показано выше,карта совпадает до тех пор,пока клавиши на шаблоне существуют на данной карте.Поэтому пустая карта соответствует всем картам.</target>
        </trans-unit>
        <trans-unit id="3e87159a8128cba6f69d2d663e334e06403ae804" translate="yes" xml:space="preserve">
          <source>As specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.2&quot;&gt;RFC 3986, section 2.2&lt;/a&gt;, the following characters are reserved: &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;</source>
          <target state="translated">Как указано в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.2&quot;&gt;RFC 3986, раздел 2.2&lt;/a&gt; , следующие символы зарезервированы: &lt;code&gt;:&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;#&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;]&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; , &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;)&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f34ca7664a4faf689aba327936c76b57db41870" translate="yes" xml:space="preserve">
          <source>As specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.3&quot;&gt;RFC 3986, section 2.3&lt;/a&gt;, the following characters are unreserved:</source>
          <target state="translated">Как указано в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.3&quot;&gt;RFC 3986, раздел 2.3&lt;/a&gt; , следующие символы не зарезервированы:</target>
        </trans-unit>
        <trans-unit id="ae8c2d0eb718b47d6bdc235bbe27fe6688ec42f5" translate="yes" xml:space="preserve">
          <source>As specified in the standard, the separator &quot;T&quot; may be omitted if desired as there is no ambiguity within this function.</source>
          <target state="translated">Как указано в стандарте,сепаратор &quot;T&quot; при желании может быть опущен,так как в этой функции нет неоднозначности.</target>
        </trans-unit>
        <trans-unit id="172b9ef57ee22a616a5d576f366995c400978c73" translate="yes" xml:space="preserve">
          <source>As temporary storage</source>
          <target state="translated">В качестве временного хранения</target>
        </trans-unit>
        <trans-unit id="09bf92a059d2e30dbaaf2c6c71588317b92537a3" translate="yes" xml:space="preserve">
          <source>As the context is a map, it can be pattern matched on to extract information:</source>
          <target state="translated">Так как контекст представляет собой карту,то для извлечения информации на ней может быть найден подходящий шаблон:</target>
        </trans-unit>
        <trans-unit id="aa7714894dcee21ed3c16ea2836ca8361fe264b6" translate="yes" xml:space="preserve">
          <source>As the name says, doctest is documentation first and a test later. Their goal is not to replace tests but to provide up to date documentation. You can read more about doctests in &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.DocTest.html&quot;&gt;the &lt;code&gt;ExUnit.DocTest&lt;/code&gt; docs&lt;/a&gt;.</source>
          <target state="translated">Как следует из названия, doctest - это в первую очередь документация, а затем тест. Их цель - не заменить тесты, а предоставить актуальную документацию. Вы можете прочитать больше о doctests в &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.DocTest.html&quot;&gt;самых &lt;code&gt;ExUnit.DocTest&lt;/code&gt; документации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b3950445b3884bea63da00e819f70e116c9c457" translate="yes" xml:space="preserve">
          <source>As the name says, this function is useful to stream values from resources.</source>
          <target state="translated">Как следует из названия,эта функция полезна для потоковой передачи значений из ресурсов.</target>
        </trans-unit>
        <trans-unit id="94f0af78270d1f9bb5f3fb4c7e50123a2d1e6b3c" translate="yes" xml:space="preserve">
          <source>As usual, we&amp;rsquo;ve passed a two-element tuple as a child specification, which in turn will invoke &lt;code&gt;Task.start_link/1&lt;/code&gt;.</source>
          <target state="translated">Как обычно, мы передали двухэлементный кортеж в качестве дочерней спецификации, которая, в свою очередь, вызовет &lt;code&gt;Task.start_link/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="200471b29b35258f77b2250785934287d372a624" translate="yes" xml:space="preserve">
          <source>As we are now able to parse commands, we can finally start implementing the logic that runs the commands. Let&amp;rsquo;s add a stub definition for this function for now:</source>
          <target state="translated">Теперь, когда мы можем анализировать команды, мы, наконец, можем приступить к реализации логики, запускающей команды. Давайте пока добавим определение заглушки для этой функции:</target>
        </trans-unit>
        <trans-unit id="601235f1a3d19d8aa741732ca63364ee542ff5d9" translate="yes" xml:space="preserve">
          <source>As we have seen above, code points can be inserted into a string by their hexadecimal code:</source>
          <target state="translated">Как мы видели выше,точки кода могут быть вставлены в строку по их шестнадцатеричному коду:</target>
        </trans-unit>
        <trans-unit id="b744ff728795adae8a150cdd6bdfc7a23aebec3d" translate="yes" xml:space="preserve">
          <source>As we said in the previous section, the implementation of &lt;code&gt;Size&lt;/code&gt; for &lt;code&gt;Any&lt;/code&gt; is not one that can apply to any data type. That&amp;rsquo;s one of the reasons why &lt;code&gt;@fallback_to_any&lt;/code&gt; is an opt-in behaviour. For the majority of protocols, raising an error when a protocol is not implemented is the proper behaviour. That said, assuming we have implemented &lt;code&gt;Any&lt;/code&gt; as in the previous section:</source>
          <target state="translated">Как мы сказали в предыдущем разделе, реализация &lt;code&gt;Size&lt;/code&gt; for &lt;code&gt;Any&lt;/code&gt; не может применяться к любому типу данных. Это одна из причин, почему &lt;code&gt;@fallback_to_any&lt;/code&gt; - это поведение согласия . Для большинства протоколов сообщение об ошибке, когда протокол не реализован, является правильным поведением. Тем не менее, при условии, что мы реализовали &lt;code&gt;Any&lt;/code&gt; , как в предыдущем разделе:</target>
        </trans-unit>
        <trans-unit id="15c53c6aaf99d7b2cea9d0b0858060f9842a9b54" translate="yes" xml:space="preserve">
          <source>As we saw at the beginning of this chapter, only some values are valid quoted expressions in Elixir. For example, a map is not a valid quoted expression. Neither is a tuple with four elements. However, such values &lt;em&gt;can&lt;/em&gt; be expressed as a quoted expression:</source>
          <target state="translated">Как мы видели в начале этой главы, только некоторые значения являются допустимыми выражениями в кавычках в Elixir. Например, карта не является допустимым выражением в кавычках. Также нет кортежа из четырех элементов. Однако такие значения &lt;em&gt;могут&lt;/em&gt; быть выражены в виде выражения в кавычках:</target>
        </trans-unit>
        <trans-unit id="a70db684277fce0a661e1a1649e67da611b415a0" translate="yes" xml:space="preserve">
          <source>As we will see in later chapters, aliases also play a crucial role in macros, to guarantee they are hygienic.</source>
          <target state="translated">Как мы увидим в последующих главах,псевдонимы также играют решающую роль в макросах,чтобы гарантировать их гигиеничность.</target>
        </trans-unit>
        <trans-unit id="4b0983ae2706b788ff3f58d0346e9d53db96d9c3" translate="yes" xml:space="preserve">
          <source>As well as with lists and tuples:</source>
          <target state="translated">А также со списками и кортежами:</target>
        </trans-unit>
        <trans-unit id="0f4afdbad8980e1dc31c0b805a2715e284761af4" translate="yes" xml:space="preserve">
          <source>As with any other function or macro call in Elixir, explicit parens can also be used around the arguments before the &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; block:</source>
          <target state="translated">Как и в случае с любой другой функцией или вызовом макроса в Elixir, можно использовать явные скобки вокруг аргументов перед блоком &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="97fa256436a4dcbb72bdc937146524beaa952bd1" translate="yes" xml:space="preserve">
          <source>As with other functions in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; module, &lt;a href=&quot;#next_codepoint/1&quot;&gt;&lt;code&gt;next_codepoint/1&lt;/code&gt;&lt;/a&gt; works with binaries that are invalid UTF-8. If the string starts with a sequence of bytes that is not valid in UTF-8 encoding, the first element of the returned tuple is a binary with the first byte.</source>
          <target state="translated">Как и другие функции в модуле &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#next_codepoint/1&quot;&gt; &lt;code&gt;next_codepoint/1&lt;/code&gt; &lt;/a&gt; работает с двоичными файлами, недопустимыми для UTF-8. Если строка начинается с последовательности байтов, недопустимой в кодировке UTF-8, первый элемент возвращаемого кортежа является двоичным с первым байтом.</target>
        </trans-unit>
        <trans-unit id="3f6413773613da2d0a327678be51feae49a384ac" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;#compare/2&quot;&gt;&lt;code&gt;compare/2&lt;/code&gt;&lt;/a&gt; function both &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; structs and other structures containing time can be used. If for instance a &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is passed, only the hour, month, second, and microsecond is considered. Any additional information about a date or time zone is ignored when calculating the difference.</source>
          <target state="translated">Как и в случае с функцией &lt;a href=&quot;#compare/2&quot;&gt; &lt;code&gt;compare/2&lt;/code&gt; ,могут&lt;/a&gt; использоваться как &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; структуры, так и другие структуры, содержащие время. Если, например, &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; ,&lt;/a&gt;учитываются только час, месяц, секунда и микросекунда. Любая дополнительная информация о дате или часовом поясе игнорируется при вычислении разницы.</target>
        </trans-unit>
        <trans-unit id="bfac16304766e4e02a86d724f96fe90d475e9d00" translate="yes" xml:space="preserve">
          <source>As you can see &lt;code&gt;IO.inspect/2&lt;/code&gt; makes it possible to &amp;ldquo;spy&amp;rdquo; on values almost anywhere in your code without altering the result, making it very helpful inside of a pipeline like in the above case.</source>
          <target state="translated">Как видите, &lt;code&gt;IO.inspect/2&lt;/code&gt; позволяет &amp;laquo;шпионить&amp;raquo; за значениями практически в любом месте вашего кода, не изменяя результат, что делает его очень полезным внутри конвейера, как в приведенном выше случае.</target>
        </trans-unit>
        <trans-unit id="21f8fc70137800358c066550264ed73297889dbe" translate="yes" xml:space="preserve">
          <source>As you can see above, Elixir supports a special syntax for defining such lists: &lt;code&gt;[key: value]&lt;/code&gt;. Underneath it maps to the same list of tuples as above. Since keyword lists are lists, we can use all operations available to lists. For example, we can use &lt;code&gt;++&lt;/code&gt; to add new values to a keyword list:</source>
          <target state="translated">Как видно выше, Elixir поддерживает специальный синтаксис для определения таких списков: &lt;code&gt;[key: value]&lt;/code&gt; . Под ним отображается тот же список кортежей, что и выше. Поскольку списки ключевых слов являются списками, мы можем использовать все операции, доступные для списков. Например, мы можем использовать &lt;code&gt;++&lt;/code&gt; для добавления новых значений в список ключевых слов:</target>
        </trans-unit>
        <trans-unit id="aa4170415b6c223620cdf1f88ee2130beff4adea" translate="yes" xml:space="preserve">
          <source>As you can see in the example, tuples are a compound type and each tuple is identified by the types inside it. To understand why &lt;code&gt;String.t&lt;/code&gt; is not written as &lt;code&gt;string&lt;/code&gt;, have another look at the &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#the-string-type&quot;&gt;typespecs docs&lt;/a&gt;.</source>
          <target state="translated">Как вы можете видеть в примере, кортежи являются составным типом, и каждый кортеж идентифицируется типами внутри него. Чтобы понять, почему &lt;code&gt;String.t&lt;/code&gt; не записывается как &lt;code&gt;string&lt;/code&gt; , еще раз взгляните на &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#the-string-type&quot;&gt;документацию&lt;/a&gt; со спецификациями типов .</target>
        </trans-unit>
        <trans-unit id="6e385b1477b16c3d8afb0738a5dc664781fad0f5" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;|&amp;gt;&lt;/code&gt; operator retains the same semantics as when the pipe is not used since both require the &lt;code&gt;fun.(...)&lt;/code&gt; notation.</source>
          <target state="translated">Как видите, оператор &lt;code&gt;|&amp;gt;&lt;/code&gt; сохраняет ту же семантику, что и когда канал не используется, поскольку оба требуют нотации &lt;code&gt;fun.(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30d1ce2388da1cbee1aee34fe86a268a3580437f" translate="yes" xml:space="preserve">
          <source>As you can see, we can modify the agent state in any way we want. Therefore, we most likely don&amp;rsquo;t want to access the Agent API throughout many different places in our code. Instead, we want to encapsulate all Agent-related functionality in a single module, which we will call &lt;code&gt;KV.Bucket&lt;/code&gt;. Before we implement it, let&amp;rsquo;s write some tests which will outline the API exposed by our module.</source>
          <target state="translated">Как видите, мы можем изменять состояние агента как угодно. Следовательно, мы, скорее всего, не хотим получать доступ к API агента в разных местах нашего кода. Вместо этого мы хотим инкапсулировать все функции, связанные с агентом, в одном модуле, который мы назовем &lt;code&gt;KV.Bucket&lt;/code&gt; . Прежде чем мы его реализуем, давайте напишем несколько тестов, которые опишут API, предоставляемый нашим модулем.</target>
        </trans-unit>
        <trans-unit id="210d4ba9daa92ffc70077cd3f9e0051375613c5f" translate="yes" xml:space="preserve">
          <source>As you grow more proficient in Elixir, you may want to explore the Erlang &lt;a href=&quot;http://erlang.org/doc/apps/stdlib/index.html&quot;&gt;STDLIB Reference Manual&lt;/a&gt; in more detail.</source>
          <target state="translated">По мере того, как вы становитесь более опытными в Elixir, вы можете более подробно &lt;a href=&quot;http://erlang.org/doc/apps/stdlib/index.html&quot;&gt;изучить Справочное руководство&lt;/a&gt; Erlang STDLIB .</target>
        </trans-unit>
        <trans-unit id="42243c9d4edc16320cc7a5237930463fbe38b8c3" translate="yes" xml:space="preserve">
          <source>Asking questions</source>
          <target state="translated">Задаваемые вопросы</target>
        </trans-unit>
        <trans-unit id="e7490b91fb48bace99c9c58dc1ba9142c591d1b6" translate="yes" xml:space="preserve">
          <source>Assembling multiple releases</source>
          <target state="translated">Сборка нескольких релизов</target>
        </trans-unit>
        <trans-unit id="5e68467c391c90ed39d1769e2c7fc777abc9ce10" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;expression&lt;/code&gt; will cause an error.</source>
          <target state="translated">Утверждает &lt;code&gt;expression&lt;/code&gt; вызовет ошибку.</target>
        </trans-unit>
        <trans-unit id="21ea5a6283f658e3d8429f3c704fec015ff7ac86" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;expression&lt;/code&gt; will exit.</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; утверждений завершится.</target>
        </trans-unit>
        <trans-unit id="51dd35c873c4195a1aa602ca5fc4593065d118d6" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;expression&lt;/code&gt; will throw a value.</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; утверждений выдаст значение.</target>
        </trans-unit>
        <trans-unit id="a4fccd55c6fefc18e898969890abca9f3867d90f" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;value1&lt;/code&gt; and &lt;code&gt;value2&lt;/code&gt; are not within &lt;code&gt;delta&lt;/code&gt;.</source>
          <target state="translated">Утверждения, что &lt;code&gt;value1&lt;/code&gt; и &lt;code&gt;value2&lt;/code&gt; не находятся в пределах &lt;code&gt;delta&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e3419e6d5b518f88bf525f195c071962c45d888" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (that is, &lt;code&gt;value&lt;/code&gt; is not truthy).</source>
          <target state="translated">Утверждает, что &lt;code&gt;value&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; (то есть &lt;code&gt;value&lt;/code&gt; не соответствует действительности).</target>
        </trans-unit>
        <trans-unit id="b25f69bb32e51bfa75bcf7ba330376b516079f9a" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;value&lt;/code&gt; is truthy, displaying the given &lt;code&gt;message&lt;/code&gt; otherwise.</source>
          <target state="translated">Утверждает, что &lt;code&gt;value&lt;/code&gt; истинно, иначе отображается данное &lt;code&gt;message&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfe5bb735de6540b2a06f98b0a42bdd8ef4828e5" translate="yes" xml:space="preserve">
          <source>Asserts a message matching &lt;code&gt;pattern&lt;/code&gt; was not received (i.e. it is not in the current process' mailbox).</source>
          <target state="translated">Утверждает, что совпадение с &lt;code&gt;pattern&lt;/code&gt; сообщения не было получено (т. Е. Его нет в почтовом ящике текущего процесса).</target>
        </trans-unit>
        <trans-unit id="27e6e46a40f5aa357f1b1f71823ab2714d6dfc2c" translate="yes" xml:space="preserve">
          <source>Asserts against a larger timeout:</source>
          <target state="translated">Утверждает против большего таймаута:</target>
        </trans-unit>
        <trans-unit id="0dcb430556180c632dbd6a05ebad3939684ea882" translate="yes" xml:space="preserve">
          <source>Asserts its argument is a truthy value.</source>
          <target state="translated">Утверждает,что его аргумент-правдивое значение.</target>
        </trans-unit>
        <trans-unit id="631f267df18019d097de2ba4fa501aea456587c9" translate="yes" xml:space="preserve">
          <source>Asserts that &lt;code&gt;value1&lt;/code&gt; and &lt;code&gt;value2&lt;/code&gt; differ by no more than &lt;code&gt;delta&lt;/code&gt;.</source>
          <target state="translated">Утверждает, что значения &lt;code&gt;value1&lt;/code&gt; и &lt;code&gt;value2&lt;/code&gt; отличаются не более чем на &lt;code&gt;delta&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3d081c32e7b0ecb8b1370d55ed5d56cfeed4172" translate="yes" xml:space="preserve">
          <source>Asserts that a message matching &lt;code&gt;pattern&lt;/code&gt; was not received (and won't be received) within the &lt;code&gt;timeout&lt;/code&gt; period, specified in milliseconds.</source>
          <target state="translated">Утверждает, что &lt;code&gt;pattern&lt;/code&gt; соответствия сообщения не был получен (и не будет получен) в течение периода &lt;code&gt;timeout&lt;/code&gt; , указанного в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="c8c7b2bb8b65a4ae00cb202f3465c2a6e04800c2" translate="yes" xml:space="preserve">
          <source>Asserts that a message matching &lt;code&gt;pattern&lt;/code&gt; was or is going to be received within the &lt;code&gt;timeout&lt;/code&gt; period, specified in milliseconds.</source>
          <target state="translated">Утверждает, что &lt;code&gt;pattern&lt;/code&gt; сопоставления сообщения был или будет получен в течение периода &lt;code&gt;timeout&lt;/code&gt; , указанного в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="e4b2d80d77ed40f1fbbfa18c2d6aec035c3583ca" translate="yes" xml:space="preserve">
          <source>Asserts that a message matching &lt;code&gt;pattern&lt;/code&gt; was received and is in the current process' mailbox.</source>
          <target state="translated">Утверждает, что получено сообщение, соответствующее &lt;code&gt;pattern&lt;/code&gt; и оно находится в почтовом ящике текущего процесса.</target>
        </trans-unit>
        <trans-unit id="08e716a4d9543f0675eaa0e9aeb88e0dbd3e68b3" translate="yes" xml:space="preserve">
          <source>Asserts the &lt;code&gt;exception&lt;/code&gt; is raised during &lt;code&gt;function&lt;/code&gt; execution with the expected &lt;code&gt;message&lt;/code&gt;, which can be a &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; or an exact &lt;a href=&quot;https://hexdocs.pm/elixir/String.html&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Returns the rescued exception, fails otherwise.</source>
          <target state="translated">Утверждает, что &lt;code&gt;exception&lt;/code&gt; возникает во время выполнения &lt;code&gt;function&lt;/code&gt; с ожидаемым &lt;code&gt;message&lt;/code&gt; , которое может быть &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; выражением или точной &lt;a href=&quot;https://hexdocs.pm/elixir/String.html&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; . Возвращает спасенное исключение, в противном случае не работает.</target>
        </trans-unit>
        <trans-unit id="f189bf2d977136873077301bfd1a2a270f543d21" translate="yes" xml:space="preserve">
          <source>Asserts the &lt;code&gt;exception&lt;/code&gt; is raised during &lt;code&gt;function&lt;/code&gt; execution. Returns the rescued exception, fails otherwise.</source>
          <target state="translated">Утверждает, что &lt;code&gt;exception&lt;/code&gt; возникает во время выполнения &lt;code&gt;function&lt;/code&gt; . Возвращает спасенное исключение, в противном случае не работает.</target>
        </trans-unit>
        <trans-unit id="c6416f331120cf783e79cebf7095c44ed2cd766d" translate="yes" xml:space="preserve">
          <source>Assigns can also be used when compiled to a function:</source>
          <target state="translated">Назначения могут также использоваться при компиляции с функцией:</target>
        </trans-unit>
        <trans-unit id="e92203a0ace3ba65c682a54de5d568ec7a27a848" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;port&lt;/code&gt; identifier with a &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">Связывает идентификатор &lt;code&gt;port&lt;/code&gt; с &lt;code&gt;pid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="0706e10abd81eb18f13ab749dfc8f7c363cf456b" translate="yes" xml:space="preserve">
          <source>Assuming the &lt;code&gt;Stack&lt;/code&gt; GenServer mentioned in the docs for the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; module is registered as &lt;code&gt;Stack&lt;/code&gt; in the &lt;code&gt;:&quot;foo@my-machine&quot;&lt;/code&gt; and &lt;code&gt;:&quot;bar@my-machine&quot;&lt;/code&gt; nodes:</source>
          <target state="translated">Предположим, что &lt;code&gt;Stack&lt;/code&gt; GenServer, упомянутый в документации для модуля &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; ,&lt;/a&gt; зарегистрирован как &lt;code&gt;Stack&lt;/code&gt; в узлах: &lt;code&gt;:&quot;foo@my-machine&quot;&lt;/code&gt; и &lt;code&gt;:&quot;bar@my-machine&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3a5f997602b6a56d42f72e433af46958ffb188f5" translate="yes" xml:space="preserve">
          <source>Assuming we defined &lt;code&gt;TestCase&lt;/code&gt; in a file named &lt;code&gt;tests.exs&lt;/code&gt;, we can open it up by running &lt;code&gt;iex tests.exs&lt;/code&gt; and define our first tests:</source>
          <target state="translated">Предполагая, что мы определили &lt;code&gt;TestCase&lt;/code&gt; в файле с именем &lt;code&gt;tests.exs&lt;/code&gt; , мы можем открыть его, запустив &lt;code&gt;iex tests.exs&lt;/code&gt; и определив наши первые тесты:</target>
        </trans-unit>
        <trans-unit id="d95ac37a47c14d5f1acc4f76198a9b839014e3cc" translate="yes" xml:space="preserve">
          <source>Async or not, our new test should obviously fail, as none of the functionality is implemented in the module being tested:</source>
          <target state="translated">Async или нет,но наш новый тест,очевидно,не пройдет,так как ни один из функционалов не реализован в тестируемом модуле:</target>
        </trans-unit>
        <trans-unit id="44790a848ce1e0b878b857a7d7bf4211e67c716a" translate="yes" xml:space="preserve">
          <source>At first, the process map has no keys, so sending a &lt;code&gt;:get&lt;/code&gt; message and then flushing the current process inbox returns &lt;code&gt;nil&lt;/code&gt;. Let&amp;rsquo;s send a &lt;code&gt;:put&lt;/code&gt; message and try it again:</source>
          <target state="translated">Сначала карта процесса не имеет ключей, поэтому отправка сообщения &lt;code&gt;:get&lt;/code&gt; и последующая очистка папки входящих сообщений текущего процесса возвращает &lt;code&gt;nil&lt;/code&gt; . Отправим сообщение &lt;code&gt;:put&lt;/code&gt; и попробуем снова:</target>
        </trans-unit>
        <trans-unit id="16f7256f734477a56caabe25739de6426b77ff24" translate="yes" xml:space="preserve">
          <source>At first, there is nothing in this example that actually reveals it is a macro. But what is happening is that, at compilation time, &lt;code&gt;squared(5)&lt;/code&gt; becomes &lt;code&gt;5 * 5&lt;/code&gt;. The argument &lt;code&gt;5&lt;/code&gt; is duplicated in the produced code, we can see this behaviour in practice though because our macro actually has a bug:</source>
          <target state="translated">Во-первых, в этом примере нет ничего, что действительно указывает на то, что это макрос. Но происходит то, что во время компиляции &lt;code&gt;squared(5)&lt;/code&gt; становится &lt;code&gt;5 * 5&lt;/code&gt; . Аргумент &lt;code&gt;5&lt;/code&gt; продублирован в созданном коде, мы можем увидеть это поведение на практике, потому что наш макрос действительно содержит ошибку:</target>
        </trans-unit>
        <trans-unit id="17e0c2ba6bf8585ab612f28b687b66ddbc446816" translate="yes" xml:space="preserve">
          <source>At the end of the chapter, we will also talk about Applications. As we will see, Mix has been packaging all of our code into an application, and we will learn how to customize our application to guarantee that our Supervisor and the Registry are up and running whenever our system starts.</source>
          <target state="translated">В конце главы мы также поговорим о Приложениях.Как мы увидим,Mix упаковывал весь наш код в приложение,и мы узнаем,как настроить наше приложение,чтобы гарантировать,что наш администратор и реестр будут готовы к работе всякий раз,когда наша система запустится.</target>
        </trans-unit>
        <trans-unit id="7e1720c79764d1bd4a3c1260e363853f08ce78d4" translate="yes" xml:space="preserve">
          <source>At the end of the day, it is up to you and your team to figure out the best testing strategy for your applications. You need to balance code quality, confidence, and test suite runtime. For example, we may start with testing the server only with integration tests, but if the server continues to grow in future releases, or it becomes a part of the application with frequent bugs, it is important to consider breaking it apart and writing more intensive unit tests that don&amp;rsquo;t have the weight of an integration test.</source>
          <target state="translated">В конце концов, вы и ваша команда должны определить лучшую стратегию тестирования для ваших приложений. Вам необходимо сбалансировать качество кода, надежность и время выполнения набора тестов. Например, мы можем начать с тестирования сервера только с помощью интеграционных тестов, но если сервер продолжит расти в будущих выпусках или станет частью приложения с частыми ошибками, важно рассмотреть возможность его разделения и более интенсивного написания. модульные тесты, которые не имеют веса интеграционного теста.</target>
        </trans-unit>
        <trans-unit id="2a3ffa5cb7dc9aa4c3ec3ff462d233d2b07bed27" translate="yes" xml:space="preserve">
          <source>At the end of the day, it&amp;rsquo;s up to your application to decide if an error while opening a file is exceptional or not. That&amp;rsquo;s why Elixir doesn&amp;rsquo;t impose exceptions on &lt;code&gt;File.read/1&lt;/code&gt; and many other functions. Instead, it leaves it up to the developer to choose the best way to proceed.</source>
          <target state="translated">В конце концов, ваше приложение должно решить, является ли ошибка при открытии файла исключительной или нет. Вот почему Elixir не делает исключений для &lt;code&gt;File.read/1&lt;/code&gt; и многих других функций. Вместо этого разработчик оставляет за собой право выбрать лучший способ продолжения.</target>
        </trans-unit>
        <trans-unit id="b873e6ad14549bcea5b5a36336f039751d9658a1" translate="yes" xml:space="preserve">
          <source>At the end of the day, tools like Observer are one of the reasons you want to always start processes inside supervision trees, even if they are temporary, to ensure they are always reachable and introspectable.</source>
          <target state="translated">В конце концов,такие инструменты,как Observer,являются одной из причин,по которым вы хотите всегда начинать процессы внутри деревьев наблюдения,даже если они временные,чтобы они всегда были доступными и интроспективными.</target>
        </trans-unit>
        <trans-unit id="e06f56d0fcde25a11eb9f4fd12e26af6e57cc715" translate="yes" xml:space="preserve">
          <source>At this point, we have learned four control structures: &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;cond&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, and &lt;code&gt;unless&lt;/code&gt;, and they were all wrapped in &lt;code&gt;do/end&lt;/code&gt; blocks. It happens we could also write &lt;code&gt;if&lt;/code&gt; as follows:</source>
          <target state="translated">На данный момент мы изучили четыре управляющие структуры: &lt;code&gt;case&lt;/code&gt; , &lt;code&gt;cond&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; и &lt;code&gt;unless&lt;/code&gt; , и все они были заключены в блоки &lt;code&gt;do/end&lt;/code&gt; . Случается , мы могли бы также написать , &lt;code&gt;if&lt;/code&gt; следующим образом :</target>
        </trans-unit>
        <trans-unit id="0ac71a7b2e14e6b71166183a00716c799d7bccef" translate="yes" xml:space="preserve">
          <source>At this point, you may be wondering, how can we make two nodes start with two different routing tables? One option is to use the &lt;code&gt;--config&lt;/code&gt; flag in &lt;code&gt;mix run&lt;/code&gt;. For example, you could write two extra configuration files, &lt;code&gt;config/foo.exs&lt;/code&gt; and &lt;code&gt;config/bar.exs&lt;/code&gt;, with two distinct routing tables and then:</source>
          <target state="translated">На этом этапе вы можете спросить, как мы можем заставить два узла запускаться с двумя разными таблицами маршрутизации? Один из вариантов - использовать флаг &lt;code&gt;--config&lt;/code&gt; при &lt;code&gt;mix run&lt;/code&gt; . Например, вы можете написать два дополнительных файла конфигурации, &lt;code&gt;config/foo.exs&lt;/code&gt; и &lt;code&gt;config/bar.exs&lt;/code&gt; , с двумя отдельными таблицами маршрутизации, а затем:</target>
        </trans-unit>
        <trans-unit id="0dfd56da90b26d4f5fcb9d69b1cd07569e6e1396" translate="yes" xml:space="preserve">
          <source>At this point, you may be wondering: should you also locally name bucket processes? Remember buckets are started dynamically based on user input. Since local names MUST be atoms, we would have to dynamically create atoms, which is a bad idea since once an atom is defined, it is never erased nor garbage collected. This means that, if we create atoms dynamically based on user input, we will eventually run out of memory (or to be more precise, the VM will crash because it imposes a hard limit on the number of atoms). This limitation is precisely why we created our own registry (or why one would use Elixir&amp;rsquo;s built-in &lt;a href=&quot;https://hexdocs.pm/elixir/Registry.html&quot;&gt;&lt;code&gt;Registry&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">На этом этапе вы можете спросить: следует ли вам также локально называть процессы корзины? Помните, что корзины запускаются динамически на основе ввода данных пользователем. Поскольку локальные имена ДОЛЖНЫ быть атомами, нам пришлось бы динамически создавать атомы, что является плохой идеей, поскольку после определения атома он никогда не стирается и не собирается сборщик мусора. Это означает, что если мы создаем атомы динамически на основе пользовательского ввода, у нас в конечном итоге закончится нехватка памяти (или, точнее, виртуальная машина выйдет из строя, потому что она налагает жесткое ограничение на количество атомов). Именно из-за этого ограничения мы создали наш собственный реестр (или зачем использовать встроенный модуль &lt;a href=&quot;https://hexdocs.pm/elixir/Registry.html&quot;&gt; &lt;code&gt;Registry&lt;/code&gt; &lt;/a&gt; Elixir ).</target>
        </trans-unit>
        <trans-unit id="4f19fee95b461d9367b1c2a9128f16cd17a5edf3" translate="yes" xml:space="preserve">
          <source>At this point, you may be wondering: what exactly is an Elixir alias and how is it represented?</source>
          <target state="translated">В этот момент вам может быть интересно:что такое псевдоним &quot;Эликсир&quot; и как он представлен?</target>
        </trans-unit>
        <trans-unit id="41dded417052424bdcf3c39f6c8664147fae6806" translate="yes" xml:space="preserve">
          <source>Atom</source>
          <target state="translated">Atom</target>
        </trans-unit>
        <trans-unit id="f53a98286f82798d588f67a7f0db19f7aebc839e" translate="yes" xml:space="preserve">
          <source>Atoms</source>
          <target state="translated">Atoms</target>
        </trans-unit>
        <trans-unit id="2a69989a3d606e64bc701c17d1245c7fdba9b230" translate="yes" xml:space="preserve">
          <source>Atoms and tuples are allowed as keys.</source>
          <target state="translated">Атомы и кортежи разрешены в качестве ключей.</target>
        </trans-unit>
        <trans-unit id="c3e82516bd38cc41825c1c56991455366d6b7205" translate="yes" xml:space="preserve">
          <source>Atoms are equal if their names are equal.</source>
          <target state="translated">Атомы равны,если их имена равны.</target>
        </trans-unit>
        <trans-unit id="4e0ec53ea5b7d828ef6e5c43d6e21909c2587391" translate="yes" xml:space="preserve">
          <source>Atoms can be written either in &lt;code&gt;:snake_case&lt;/code&gt; or &lt;code&gt;:CamelCase&lt;/code&gt;, although the convention is to use the snake case version throughout Elixir.</source>
          <target state="translated">Атомы могут быть записаны либо в &lt;code&gt;:snake_case&lt;/code&gt; , либо &lt;code&gt;:CamelCase&lt;/code&gt; , хотя по соглашению во всем Эликсире используется версия змеиного футляра.</target>
        </trans-unit>
        <trans-unit id="7823d59c9025838f9df163a9aa5632eb33e8f5f9" translate="yes" xml:space="preserve">
          <source>Atoms with foreign characters, such as whitespace, must be wrapped in quotes. This rule applies to keywords as well:</source>
          <target state="translated">Атомы с инородными символами,например,с пробелами,должны быть обернуты в кавычки.Это правило распространяется и на ключевые слова:</target>
        </trans-unit>
        <trans-unit id="adfc32a230bc2cd9939f99a65ee1e1c430d56f45" translate="yes" xml:space="preserve">
          <source>Attaches information to exceptions for extra debugging.</source>
          <target state="translated">Прикрепляет информацию к исключениям для дополнительной отладки.</target>
        </trans-unit>
        <trans-unit id="be4563947c24c97f1390cb029a949e02c2dd4bc2" translate="yes" xml:space="preserve">
          <source>Attempting to convert an invalid ISO calendar date will produce an error tuple.</source>
          <target state="translated">Попытка конвертировать недействительную дату календаря ISO приведет к появлению кортежа ошибки.</target>
        </trans-unit>
        <trans-unit id="2cb1d997f70ceafe9419b46accfb019d8d855e4b" translate="yes" xml:space="preserve">
          <source>Attention! While the access syntax is allowed in maps via &lt;code&gt;map[key]&lt;/code&gt;, if your map is made of predefined atom keys, you should prefer to access those atom keys with &lt;code&gt;map.key&lt;/code&gt; instead of &lt;code&gt;map[key]&lt;/code&gt;, as &lt;code&gt;map.key&lt;/code&gt; will raise if the key is missing. This is important because, if a map has a predefined set of keys and a key is missing, it is most likely a bug in your software or a typo on the key name. For this reason, because structs are predefined in nature, they only allow the &lt;code&gt;struct.key&lt;/code&gt; syntax and they do not allow the &lt;code&gt;struct[key]&lt;/code&gt; access syntax. See the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">Внимание! Хотя синтаксис доступа разрешен в картах через &lt;code&gt;map[key]&lt;/code&gt; , если ваша карта состоит из предопределенных атомных ключей, вы должны предпочесть доступ к этим атомным ключам с помощью &lt;code&gt;map.key&lt;/code&gt; вместо &lt;code&gt;map[key]&lt;/code&gt; , поскольку &lt;code&gt;map.key&lt;/code&gt; будет повышаться, если ключ отсутствует. Это важно, потому что, если на карте есть предопределенный набор ключей и ключ отсутствует, это, скорее всего, ошибка в вашем программном обеспечении или опечатка в имени ключа. По этой причине, поскольку структуры предопределены по своей природе, они допускают &lt;code&gt;struct.key&lt;/code&gt; синтаксис struct.key и не разрешают синтаксис доступа к &lt;code&gt;struct[key]&lt;/code&gt; . См. Модуль &amp;laquo; &lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; &amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="5f97e36f103d67250ebb8f2ffecafc5a4f3670e6" translate="yes" xml:space="preserve">
          <source>Autocomplete</source>
          <target state="translated">Autocomplete</target>
        </trans-unit>
        <trans-unit id="59ca0e6a6a5c6fa7d8b2946ea7d9f3d1a2cddf19" translate="yes" xml:space="preserve">
          <source>Autocomplete may not be available on some Windows shells. You may need to pass the &lt;code&gt;--werl&lt;/code&gt; option when starting IEx, as in &lt;code&gt;iex --werl&lt;/code&gt; for it to work. &lt;code&gt;--werl&lt;/code&gt; may be permanently enabled by setting the &lt;code&gt;IEX_WITH_WERL&lt;/code&gt; environment variable.</source>
          <target state="translated">Автозаполнение может быть недоступно в некоторых оболочках Windows. Вам может потребоваться передать опцию &lt;code&gt;--werl&lt;/code&gt; при запуске IEx, как в &lt;code&gt;iex --werl&lt;/code&gt; , чтобы она работала. &lt;code&gt;--werl&lt;/code&gt; можно постоянно включить, установив переменную среды &lt;code&gt;IEX_WITH_WERL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51a4c659ece8f79813a8062061a37db34ec84e7f" translate="yes" xml:space="preserve">
          <source>Automatic code formatting</source>
          <target state="translated">Автоматическое форматирование кода</target>
        </trans-unit>
        <trans-unit id="a5325c58f3190f03981f3d4b6e263a0fcae8b5bc" translate="yes" xml:space="preserve">
          <source>Available options are:</source>
          <target state="translated">Доступны различные варианты:</target>
        </trans-unit>
        <trans-unit id="092cd6bcec2dc4f94a4fc33bc1ed3409700531e1" translate="yes" xml:space="preserve">
          <source>Avoid &lt;code&gt;use&lt;/code&gt; when an &lt;code&gt;import&lt;/code&gt; is enough</source>
          <target state="translated">Избегайте &lt;code&gt;use&lt;/code&gt; , когда &lt;code&gt;import&lt;/code&gt; достаточно</target>
        </trans-unit>
        <trans-unit id="41d25fe1a41fca091b7e6f07deb9576aa406ed90" translate="yes" xml:space="preserve">
          <source>Avoid application configuration</source>
          <target state="translated">Избегайте конфигурации приложений</target>
        </trans-unit>
        <trans-unit id="7dd92d342635cd8bad5012751cc0ba8c68f401f5" translate="yes" xml:space="preserve">
          <source>Avoid macros</source>
          <target state="translated">Избегать макросов</target>
        </trans-unit>
        <trans-unit id="f82e2d945abfb2dbbf3f826fcc4d148cee063c63" translate="yes" xml:space="preserve">
          <source>Avoid spawning unsupervised processes</source>
          <target state="translated">Избегайте нереста без наблюдения за процессами</target>
        </trans-unit>
        <trans-unit id="8ee9dc89a780c53fc8d9382fa5ad113c6c75cdf9" translate="yes" xml:space="preserve">
          <source>Avoid using exceptions for control-flow</source>
          <target state="translated">Избегайте использования исключений для контроля потока</target>
        </trans-unit>
        <trans-unit id="29209be29de64c2bb9545649ddfd6abf62c0ea65" translate="yes" xml:space="preserve">
          <source>Avoid using processes for code organization</source>
          <target state="translated">Избегайте использования процессов для организации кода</target>
        </trans-unit>
        <trans-unit id="ee960a2bc0567e3f91ebc97f2955ec11939e5015" translate="yes" xml:space="preserve">
          <source>Avoid working with invalid data</source>
          <target state="translated">Избегайте работы с недействительными данными</target>
        </trans-unit>
        <trans-unit id="6bbd15d15dade34920aa898885177fb819b3bbad" translate="yes" xml:space="preserve">
          <source>Awaits a task reply and returns it.</source>
          <target state="translated">Ждет ответа на задание и возвращает его.</target>
        </trans-unit>
        <trans-unit id="b3776d63ad7b7a84bfe20d9c6d4a53a2b25d0e43" translate="yes" xml:space="preserve">
          <source>Backends</source>
          <target state="translated">Backends</target>
        </trans-unit>
        <trans-unit id="607e2afde4148b04e8bd542f10f2849f8f644bf6" translate="yes" xml:space="preserve">
          <source>Backends added by this function are not persisted. Therefore if the Logger application or supervision tree is restarted, the backend won't be available. If you need this guarantee, then configure the backend via the application environment.</source>
          <target state="translated">Бэкэнды,добавленные этой функцией,не сохраняются.Поэтому,если приложение Журнала или дерево контроля будет перезапущено,бэкэнд будет недоступен.Если вам нужна такая гарантия,настройте бэкэнд через среду приложений.</target>
        </trans-unit>
        <trans-unit id="43d581f1eb0812cfb36d4f0598607e6abe9c3fc9" translate="yes" xml:space="preserve">
          <source>Backends typically allow developers to supply such control strings via configuration files. This module provides &lt;a href=&quot;#compile/1&quot;&gt;&lt;code&gt;compile/1&lt;/code&gt;&lt;/a&gt;, which compiles the string into a format for fast operations at runtime and &lt;a href=&quot;#format/5&quot;&gt;&lt;code&gt;format/5&lt;/code&gt;&lt;/a&gt; to format the compiled pattern into an actual IO data.</source>
          <target state="translated">Серверные ВМ обычно позволяют разработчикам предоставлять такие управляющие строки через файлы конфигурации. Этот модуль обеспечивает &lt;a href=&quot;#compile/1&quot;&gt; &lt;code&gt;compile/1&lt;/code&gt; &lt;/a&gt; , который компилирует строку в формат для быстрых операций во время выполнения и &lt;a href=&quot;#format/5&quot;&gt; &lt;code&gt;format/5&lt;/code&gt; &lt;/a&gt; для форматирования скомпилированного шаблона в фактические данные ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="01490bc8fe9235ceac536a8719e2fd8ca0b13630" translate="yes" xml:space="preserve">
          <source>BadArityError</source>
          <target state="translated">BadArityError</target>
        </trans-unit>
        <trans-unit id="1df44135a4f51a5f9d12b388a32c4c2e6d2a6b30" translate="yes" xml:space="preserve">
          <source>BadArityError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Исключение&lt;/small&gt; BadArityError&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5bb59613df97911bc039ac4ce8ed0b812a7d3491" translate="yes" xml:space="preserve">
          <source>BadBooleanError</source>
          <target state="translated">BadBooleanError</target>
        </trans-unit>
        <trans-unit id="57ba7227528009570f1b1d15380fc32ed086f39e" translate="yes" xml:space="preserve">
          <source>BadBooleanError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">BadBooleanError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a0852fff990851477fa9d2fdee0a9048bbbbdb7d" translate="yes" xml:space="preserve">
          <source>BadFunctionError</source>
          <target state="translated">BadFunctionError</target>
        </trans-unit>
        <trans-unit id="e756ec5075fbedd06423ae8813b13fdf69470cc6" translate="yes" xml:space="preserve">
          <source>BadFunctionError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">BadFunctionError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f157c6b78035669d35edd4f53d7a99803e6b19c9" translate="yes" xml:space="preserve">
          <source>BadMapError</source>
          <target state="translated">BadMapError</target>
        </trans-unit>
        <trans-unit id="a74cad8b7640a588410f7882a3ccc9f02553c083" translate="yes" xml:space="preserve">
          <source>BadMapError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">BadMapError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a7b05ea8ad05f0867a5f60c4ed382b666fac7e20" translate="yes" xml:space="preserve">
          <source>BadStructError</source>
          <target state="translated">BadStructError</target>
        </trans-unit>
        <trans-unit id="77be63d18634fd3f43204f653d7f4f7be7b6d9cf" translate="yes" xml:space="preserve">
          <source>BadStructError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">BadStructError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="077fe9c54ed5ed26fa547f4ded3ef9a9bb066d65" translate="yes" xml:space="preserve">
          <source>Base</source>
          <target state="translated">Base</target>
        </trans-unit>
        <trans-unit id="b061ce422c6698d64988deeb26c5124d27241a6d" translate="yes" xml:space="preserve">
          <source>Base 16 alphabet</source>
          <target state="translated">Базовый 16 алфавит</target>
        </trans-unit>
        <trans-unit id="d9713d603d3e619edcf68e9a83a17b392250a596" translate="yes" xml:space="preserve">
          <source>Base 32 (extended hex) alphabet</source>
          <target state="translated">Базовый 32 (расширенный шестнадцатеричный)алфавит</target>
        </trans-unit>
        <trans-unit id="f6d0d37e0e6abc4695da716daeb5b71bf9e4e8a9" translate="yes" xml:space="preserve">
          <source>Base 32 alphabet</source>
          <target state="translated">Базовый 32 алфавит</target>
        </trans-unit>
        <trans-unit id="2ace0138e855f83bb01e7ea6cfff3e40f0341e66" translate="yes" xml:space="preserve">
          <source>Base 64 (URL and filename safe) alphabet</source>
          <target state="translated">Базовый 64-ый алфавит (URL и имя файла безопасны)</target>
        </trans-unit>
        <trans-unit id="a8bce8929575acb7ad98c820c9d117c8df047208" translate="yes" xml:space="preserve">
          <source>Base 64 alphabet</source>
          <target state="translated">Базовый 64 алфавит</target>
        </trans-unit>
        <trans-unit id="8f7bbf48e0f79ed0979b2afc3fafb20bb06f11dd" translate="yes" xml:space="preserve">
          <source>Basic EEx engine that ships with Elixir.</source>
          <target state="translated">Базовый двигатель EEx,который поставляется с эликсиром.</target>
        </trans-unit>
        <trans-unit id="3fea98561b7f996109a7e74c90044335541db19e" translate="yes" xml:space="preserve">
          <source>Basic arithmetic</source>
          <target state="translated">Базовая арифметика</target>
        </trans-unit>
        <trans-unit id="ab72076fa59e5852da2fccb552c3249d259cf025" translate="yes" xml:space="preserve">
          <source>Basic operators</source>
          <target state="translated">Основные операторы</target>
        </trans-unit>
        <trans-unit id="3fc431b29bb2c2516db706b2f480a558166eba6d" translate="yes" xml:space="preserve">
          <source>Basic types</source>
          <target state="translated">Основные типы</target>
        </trans-unit>
        <trans-unit id="5db51d4d8d4118f127c924c3d2f8f040e27fb0f4" translate="yes" xml:space="preserve">
          <source>Basic writing and formatting syntax</source>
          <target state="translated">Основной синтаксис написания и форматирования</target>
        </trans-unit>
        <trans-unit id="6e3c900efbf268090f3977656c91979f9f90e7e4" translate="yes" xml:space="preserve">
          <source>Be aware that a negative &lt;code&gt;count&lt;/code&gt; implies the &lt;code&gt;enumerable&lt;/code&gt; will be enumerated twice: once to calculate the position, and a second time to do the actual splitting.</source>
          <target state="translated">Имейте в виду, что отрицательное значение &lt;code&gt;count&lt;/code&gt; подразумевает, что &lt;code&gt;enumerable&lt;/code&gt; будет перечисляться дважды: один раз для вычисления позиции и второй раз для фактического разделения.</target>
        </trans-unit>
        <trans-unit id="c537de13da2b3fc86676babd1bbd74c778fed4a2" translate="yes" xml:space="preserve">
          <source>Be aware that this function can match within or across grapheme boundaries. For example, take the grapheme &quot;&amp;eacute;&quot; which is made of the characters &quot;e&quot; and the acute accent. The following returns &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">Имейте в виду, что эта функция может соответствовать как внутри, так и за границами графемы. Например, возьмем графему &amp;laquo;&amp;eacute;&amp;raquo;, состоящую из букв &amp;laquo;е&amp;raquo; и острого ударения. Следующее возвращает &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe3b9560a0f552cce44a7d701654dd7f10621bc4" translate="yes" xml:space="preserve">
          <source>Be aware that this function can split within or across grapheme boundaries. For example, take the grapheme &quot;&amp;eacute;&quot; which is made of the characters &quot;e&quot; and the acute accent. The following will split the string into two parts:</source>
          <target state="translated">Имейте в виду, что эта функция может разделяться внутри или между границами графемы. Например, возьмем графему &amp;laquo;&amp;eacute;&amp;raquo;, состоящую из букв &amp;laquo;е&amp;raquo; и острого ударения. Следующее разделит строку на две части:</target>
        </trans-unit>
        <trans-unit id="cf25f9df3bad9cb90f28a2c00f8a03ffb9eb9c29" translate="yes" xml:space="preserve">
          <source>Be careful when invoking this function as any project configuration won't be reloaded.</source>
          <target state="translated">Будьте осторожны при вызове этой функции,так как любая конфигурация проекта не будет перезагружена.</target>
        </trans-unit>
        <trans-unit id="e18c280856e9dc54c0e0dc6a6cbf86bdcec2ba1b" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; does not hold time information, data will be lost during the conversion.</source>
          <target state="translated">Поскольку &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; не хранит информацию о времени, данные будут потеряны во время преобразования.</target>
        </trans-unit>
        <trans-unit id="89a503aad4225c39937eafdaf3de6829d7a2c3d7" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; does not hold time nor time zone information, data will be lost during the conversion.</source>
          <target state="translated">Поскольку &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; не хранит информацию о времени и часовом поясе, данные будут потеряны во время преобразования.</target>
        </trans-unit>
        <trans-unit id="ee3ed875cfa3017d3e47eeb02c53615d3ef66c7c" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; does not hold time zone information, any time zone related data will be lost during the conversion.</source>
          <target state="translated">Поскольку &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; не хранит информацию о часовом поясе, любые данные, связанные с часовым поясом, будут потеряны во время преобразования.</target>
        </trans-unit>
        <trans-unit id="9953ea4685d0c190284f858b1d39f874790b5054" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; does not hold date information, data will be lost during the conversion.</source>
          <target state="translated">Поскольку &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; не хранит информацию о дате, данные будут потеряны во время преобразования.</target>
        </trans-unit>
        <trans-unit id="a4d4f5f9b7fb3d32cc67b90484bddec4871ac391" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; does not hold date nor time zone information, data will be lost during the conversion.</source>
          <target state="translated">Поскольку &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; не хранит дату и информацию о часовом поясе, данные будут потеряны во время преобразования.</target>
        </trans-unit>
        <trans-unit id="78be6a8f5f24d82881c32f396a97e82cbdfa517d" translate="yes" xml:space="preserve">
          <source>Because a message may arrive before the timeout is set, even a timeout of &lt;code&gt;0&lt;/code&gt; milliseconds is not guaranteed to execute. To take another action immediately and unconditionally, use a &lt;code&gt;:continue&lt;/code&gt; instruction.</source>
          <target state="translated">Поскольку сообщение может поступить до того, как будет установлен тайм-аут, даже тайм-аут в &lt;code&gt;0&lt;/code&gt; миллисекунд не гарантируется. Чтобы немедленно и безоговорочно предпринять другое действие, используйте инструкцию &lt;code&gt;:continue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eb887b63f6f74f7dc70ebfb02ba9a98c81899af" translate="yes" xml:space="preserve">
          <source>Because code comments are handled apart from the code representation (AST), there are some situations where code comments are seen as ambiguous by the code formatter. For example, the comment in the anonymous function below</source>
          <target state="translated">Поскольку комментарии к коду обрабатываются отдельно от представления кода (AST),возникают ситуации,когда комментарии к коду воспринимаются форматировщиком кода как неоднозначные.Например,комментарий в анонимной функции ниже</target>
        </trans-unit>
        <trans-unit id="cb95a029baf84de67bb48b3b03c76e87ea66bc98" translate="yes" xml:space="preserve">
          <source>Because private functions cannot be accessed externally, Elixir will warn if a private function has a &lt;code&gt;@doc&lt;/code&gt; attribute and will discard its content. However, you can add code comments to private functions, as with any other piece of code, and we recommend developers to do so whenever they believe it will add relevant information to the readers and maintainers of such code.</source>
          <target state="translated">Поскольку к частным функциям нельзя получить доступ извне, Elixir предупредит, если у частной функции есть атрибут &lt;code&gt;@doc&lt;/code&gt; , и отбросит ее содержимое. Однако вы можете добавлять комментарии к частным функциям, как и любой другой фрагмент кода, и мы рекомендуем разработчикам делать это всякий раз, когда они считают, что это добавит релевантную информацию для читателей и сопровождающих такой код.</target>
        </trans-unit>
        <trans-unit id="63e17dd4459e7d876a444fbbbb7e7cf39c566595" translate="yes" xml:space="preserve">
          <source>Because processes are linked, we now see a message saying the parent process, which is the shell process, has received an EXIT signal from another process causing the shell to terminate. IEx detects this situation and starts a new shell session.</source>
          <target state="translated">Поскольку процессы связаны,мы видим сообщение о том,что родительский процесс,который является процессом оболочки,получил сигнал EXIT от другого процесса,что приводит к завершению работы оболочки.IEx обнаруживает эту ситуацию и начинает новый сеанс работы с оболочкой.</target>
        </trans-unit>
        <trans-unit id="974c41adb42d893477152cfa18608582df7753a0" translate="yes" xml:space="preserve">
          <source>Because we have assigned the value of 1 to the variable x, this last example could also have been written as:</source>
          <target state="translated">Поскольку мы присвоили переменной x значение 1,этот последний пример также мог быть записан как:</target>
        </trans-unit>
        <trans-unit id="f4b97ed92549a1467b9e669e260cb145416087a8" translate="yes" xml:space="preserve">
          <source>Because we passed the &lt;code&gt;--sup&lt;/code&gt; flag, Mix automatically added &lt;code&gt;mod: {KVServer.Application, []}&lt;/code&gt;, specifying that &lt;code&gt;KVServer.Application&lt;/code&gt; is our application callback module. &lt;code&gt;KVServer.Application&lt;/code&gt; will start our application supervision tree.</source>
          <target state="translated">Поскольку мы передали флаг &lt;code&gt;--sup&lt;/code&gt; , Mix автоматически добавил &lt;code&gt;mod: {KVServer.Application, []}&lt;/code&gt; , указав, что &lt;code&gt;KVServer.Application&lt;/code&gt; является нашим модулем обратного вызова приложения. &lt;code&gt;KVServer.Application&lt;/code&gt; запустит наше дерево наблюдения за приложением.</target>
        </trans-unit>
        <trans-unit id="0e079b753ab1db1c0b01fd308f3688e970fbe5e7" translate="yes" xml:space="preserve">
          <source>Before Erlang/OTP 21, the call is going to block until a connection happens. This was done to guarantee ordering. Starting with Erlang/OTP 21, both Erlang and Elixir do not block the call.</source>
          <target state="translated">Перед Erlang/OTP 21 вызов будет блокироваться до тех пор,пока не произойдет соединение.Это было сделано для гарантии заказа.Начиная с Erlang/OTP 21,как Erlang,так и Elixir не блокируют вызов.</target>
        </trans-unit>
        <trans-unit id="0bd87597929851d458fd795ea7da7ac0201de944" translate="yes" xml:space="preserve">
          <source>Before creating our new application, we must discuss how Mix handles dependencies. In practice, there are two kinds of dependencies we usually work with: internal and external dependencies. Mix supports mechanisms to work with both of them.</source>
          <target state="translated">Перед созданием нового приложения мы должны обсудить,как Mix работает с зависимостями.На практике существует два вида зависимостей,с которыми мы обычно работаем:внутренние и внешние.Mix поддерживает механизмы работы с обеими из них.</target>
        </trans-unit>
        <trans-unit id="9e1d3d5382e86bf1a14e9500b332884bdb9faaa9" translate="yes" xml:space="preserve">
          <source>Before doing anything, Mix will compile the current application if needed, unless you pass &lt;code&gt;--no-compile&lt;/code&gt;.</source>
          <target state="translated">Перед тем, как что-либо делать, Mix при необходимости скомпилирует текущее приложение, если вы не передадите &lt;code&gt;--no-compile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deff23ba4c089e0db16c965d3ed9a26698499445" translate="yes" xml:space="preserve">
          <source>Before moving on and adding more features to &lt;code&gt;KV.Bucket&lt;/code&gt;, let&amp;rsquo;s talk about ExUnit callbacks. As you may expect, all &lt;code&gt;KV.Bucket&lt;/code&gt; tests will require a bucket agent to be up and running. Luckily, ExUnit supports callbacks that allow us to skip such repetitive tasks.</source>
          <target state="translated">Прежде чем двигаться дальше и добавлять новые функции в &lt;code&gt;KV.Bucket&lt;/code&gt; , давайте поговорим об обратных вызовах ExUnit. Как и следовало ожидать, для всех тестов &lt;code&gt;KV.Bucket&lt;/code&gt; требуется, чтобы агент корзины был запущен и работал. К счастью, ExUnit поддерживает обратные вызовы, которые позволяют нам пропускать такие повторяющиеся задачи.</target>
        </trans-unit>
        <trans-unit id="961885446a9fe194662c4186d4c9a590779945e8" translate="yes" xml:space="preserve">
          <source>Before running the code, it invokes the &lt;code&gt;app.start&lt;/code&gt; task which compiles and loads your project. Then the target expression is profiled, together with all matching function calls using the Erlang trace BIFs. The tracing of the function calls for that is enabled when the profiling is begun, and disabled when profiling is stopped.</source>
          <target state="translated">Перед запуском кода он вызывает задачу &lt;code&gt;app.start&lt;/code&gt; , которая компилирует и загружает ваш проект. Затем целевое выражение профилируется вместе со всеми соответствующими вызовами функций с использованием BIF трассировки Erlang. Трассировка вызовов функции включается, когда профилирование начинается, и отключается, когда профилирование остановлено.</target>
        </trans-unit>
        <trans-unit id="98349800481aea068998de4b5050ab0150891107" translate="yes" xml:space="preserve">
          <source>Before running the code, it invokes the &lt;code&gt;app.start&lt;/code&gt; task which compiles and loads your project. Then the target expression is profiled, together with all matching function calls, by setting breakpoints containing counters. These can only be set on BEAM code so BIFs cannot be call count traced.</source>
          <target state="translated">Перед запуском кода он вызывает задачу &lt;code&gt;app.start&lt;/code&gt; , которая компилирует и загружает ваш проект. Затем целевое выражение профилируется вместе со всеми соответствующими вызовами функций путем установки точек останова, содержащих счетчики. Их можно установить только в коде BEAM, поэтому BIF не могут быть отслежены по счетчику вызовов.</target>
        </trans-unit>
        <trans-unit id="0c0b9f1f5eae004310d510256ead240f82165663" translate="yes" xml:space="preserve">
          <source>Before running the code, it invokes the &lt;code&gt;app.start&lt;/code&gt; task which compiles and loads your project. Then the target expression is profiled, together with all processes which are spawned by it. Other processes (e.g. those residing in the OTP application supervision tree) are not profiled.</source>
          <target state="translated">Перед запуском кода он вызывает задачу &lt;code&gt;app.start&lt;/code&gt; , которая компилирует и загружает ваш проект. Затем целевое выражение профилируется вместе со всеми процессами, которые оно порождает. Другие процессы (например, находящиеся в дереве надзора за приложениями OTP) не профилируются.</target>
        </trans-unit>
        <trans-unit id="1031dca640f3e14f582133d487561b8ee04d85da" translate="yes" xml:space="preserve">
          <source>Before we added monitoring, if a bucket crashed, the registry would forever point to a bucket that no longer exists. If a user tried to read or write to the crashed bucket, it would fail. Any attempt at creating a new bucket with the same name would just return the PID of the crashed bucket. In other words, that registry entry for that bucket would forever be in a bad state. Once we added monitoring, the registry automatically removes the entry for the crashed bucket. Trying to lookup the crashed bucket now (correctly) says the bucket does not exist and a user of the system can successfully create a new one if desired.</source>
          <target state="translated">Перед тем,как мы добавили мониторинг,в случае аварии ведра реестр навсегда укажет на ведро,которого больше не существует.Если пользователь попытается прочитать или записать в разбитое ведро,это не удастся.Любая попытка создать новое ведро с тем же именем просто вернет PID разбившегося ведра.Другими словами,эта запись реестра для этого ведра навсегда останется в плохом состоянии.Как только мы добавили мониторинг,реестр автоматически удаляет запись для разбившегося ведра.Попытка поиска разбившегося ведра сейчас (правильно)говорит о том,что ведра не существует,и пользователь системы может при желании успешно создать новое.</target>
        </trans-unit>
        <trans-unit id="73411f78618a7af4cd67aad8b3e0200b03df8a87" translate="yes" xml:space="preserve">
          <source>Before we finish this brief introduction, you will notice that, even though we defined a variable &lt;code&gt;x&lt;/code&gt; inside our quote:</source>
          <target state="translated">Прежде чем мы закончим это краткое введение, вы заметите, что, хотя мы определили переменную &lt;code&gt;x&lt;/code&gt; внутри нашей цитаты:</target>
        </trans-unit>
        <trans-unit id="9e016d24e4bd4f71c8ebd97643051b410bf7754a" translate="yes" xml:space="preserve">
          <source>Before we implement this function, let&amp;rsquo;s change our server to start using our new &lt;code&gt;parse/1&lt;/code&gt; and &lt;code&gt;run/1&lt;/code&gt; functions. Remember, our &lt;code&gt;read_line/1&lt;/code&gt; function was also crashing when the client closed the socket, so let&amp;rsquo;s take the opportunity to fix it, too. Open up &lt;code&gt;lib/kv_server.ex&lt;/code&gt; and replace the existing server definition:</source>
          <target state="translated">Прежде чем реализовать эту функцию, давайте изменим наш сервер, чтобы он начал использовать наши новые функции &lt;code&gt;parse/1&lt;/code&gt; и &lt;code&gt;run/1&lt;/code&gt; . Помните, наша &lt;code&gt;read_line/1&lt;/code&gt; также аварийно завершала работу, когда клиент закрыл сокет, поэтому давайте воспользуемся возможностью, чтобы исправить и это. Откройте &lt;code&gt;lib/kv_server.ex&lt;/code&gt; и замените существующее определение сервера:</target>
        </trans-unit>
        <trans-unit id="f3303e03cd7a934490164882116bb279452d10ec" translate="yes" xml:space="preserve">
          <source>Before we move on to the next chapter, let&amp;rsquo;s discuss the client/server dichotomy in agents. Let&amp;rsquo;s expand the &lt;code&gt;delete/2&lt;/code&gt; function we have just implemented:</source>
          <target state="translated">Прежде чем перейти к следующей главе, давайте обсудим дихотомию клиент / сервер в агентах. Давайте расширим только что реализованную функцию &lt;code&gt;delete/2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c38b5c81b1c893dcec882d171436db1cd1a630dc" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;#monitor/2&quot;&gt;&lt;code&gt;monitor/2&lt;/code&gt;&lt;/a&gt; except that it allows an extra option to be given, namely &lt;code&gt;:allow_passive_connect&lt;/code&gt;.</source>
          <target state="translated">Ведет себя как &lt;a href=&quot;#monitor/2&quot;&gt; &lt;code&gt;monitor/2&lt;/code&gt; ,&lt;/a&gt; за исключением того, что позволяет &lt;code&gt;:allow_passive_connect&lt;/code&gt; дополнительную опцию, а именно : allow_passive_connect .</target>
        </trans-unit>
        <trans-unit id="e1590670ae5ba07b6059ef77a6163f923d148669" translate="yes" xml:space="preserve">
          <source>Behaves exactly like &lt;a href=&quot;#get_and_update/3&quot;&gt;&lt;code&gt;get_and_update/3&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;keyerror&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;key&lt;/code&gt; is not present in &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">Действует точно так же, как &lt;a href=&quot;#get_and_update/3&quot;&gt; &lt;code&gt;get_and_update/3&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;keyerror&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;key&lt;/code&gt; отсутствует на &lt;code&gt;map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="171ca0385a0e84eb697558f3866b7cb4cf03fcb1" translate="yes" xml:space="preserve">
          <source>Behaviour</source>
          <target state="translated">Behaviour</target>
        </trans-unit>
        <trans-unit id="50adeaa74402f255e81a881e8e825fcfde5736a2" translate="yes" xml:space="preserve">
          <source>Behaviours</source>
          <target state="translated">Behaviours</target>
        </trans-unit>
        <trans-unit id="520b702bda3e42703a9629b3c841c1dac503dd33" translate="yes" xml:space="preserve">
          <source>Behaviours are frequently used with dynamic dispatching. For example, we could add a &lt;code&gt;parse!&lt;/code&gt; function to the &lt;code&gt;Parser&lt;/code&gt; module that dispatches to the given implementation and returns the &lt;code&gt;:ok&lt;/code&gt; result or raises in cases of &lt;code&gt;:error&lt;/code&gt;:</source>
          <target state="translated">Поведение часто используется при динамической диспетчеризации. Например, мы могли бы добавить &lt;code&gt;parse!&lt;/code&gt; в модуль &lt;code&gt;Parser&lt;/code&gt; , который выполняет отправку в заданную реализацию и возвращает результат &lt;code&gt;:ok&lt;/code&gt; или вызывает повышение в случаях &lt;code&gt;:error&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c431c072b0cc17065274eb235452b6f56afb83ac" translate="yes" xml:space="preserve">
          <source>Behaviours can be referenced by modules to ensure they implement required specific function signatures defined by &lt;code&gt;@callback&lt;/code&gt;.</source>
          <target state="translated">Модули могут ссылаться на поведение, чтобы гарантировать, что они реализуют требуемые сигнатуры конкретных функций, определенные &lt;code&gt;@callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18891de861c3177370c1c4c8a6abb93b6d478d0c" translate="yes" xml:space="preserve">
          <source>Behaviours in Elixir (and Erlang) are a way to separate and abstract the generic part of a component (which becomes the &lt;em&gt;behaviour module&lt;/em&gt;) from the specific part (which becomes the &lt;em&gt;callback module&lt;/em&gt;).</source>
          <target state="translated">Поведение в Elixir (и Erlang) - это способ отделить и абстрагировать общую часть компонента (которая становится &lt;em&gt;модулем поведения&lt;/em&gt; ) от конкретной части (которая становится &lt;em&gt;модулем обратного вызова&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="59b495bc5ef8fa3525a42f910a73c32fc61ed8ab" translate="yes" xml:space="preserve">
          <source>Behaviours provide a way to:</source>
          <target state="translated">Поведение дает возможность:</target>
        </trans-unit>
        <trans-unit id="cc4b77c255d4ba04e467a0cc47a0e51ec0adef1c" translate="yes" xml:space="preserve">
          <source>Behind the scenes, &lt;code&gt;use&lt;/code&gt; requires the given module and then calls the &lt;code&gt;__using__/1&lt;/code&gt; callback on it allowing the module to inject some code into the current context. Some modules (for example, the above &lt;code&gt;ExUnit.Case&lt;/code&gt;, but also &lt;code&gt;Supervisor&lt;/code&gt; and &lt;code&gt;GenServer&lt;/code&gt;) use this mechanism to populate your module with some basic behaviour, which your module is intended to override or complete.</source>
          <target state="translated">За кулисами, &lt;code&gt;use&lt;/code&gt; требует данного модуля , а затем вызывает &lt;code&gt;__using__/1&lt;/code&gt; обратный вызов на него , позволяя модуль , чтобы ввести код в текущем контексте. Некоторые модули (например, вышеприведенный &lt;code&gt;ExUnit.Case&lt;/code&gt; , но также &lt;code&gt;Supervisor&lt;/code&gt; и &lt;code&gt;GenServer&lt;/code&gt; ) используют этот механизм для заполнения вашего модуля некоторым базовым поведением, которое ваш модуль должен переопределить или завершить.</target>
        </trans-unit>
        <trans-unit id="603deb4a274e7852a27649e6771d381771e20617" translate="yes" xml:space="preserve">
          <source>Below we provide a more detailed look into the available options.</source>
          <target state="translated">Ниже мы предлагаем более детальное рассмотрение доступных вариантов.</target>
        </trans-unit>
        <trans-unit id="fcad24575feed887abc51ccc85f8548bece28f68" translate="yes" xml:space="preserve">
          <source>Besides &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#await/2&quot;&gt;&lt;code&gt;await/2&lt;/code&gt;&lt;/a&gt;, tasks can also be started as part of a supervision tree and dynamically spawned on remote nodes. We will explore all three scenarios next.</source>
          <target state="translated">Помимо &lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#await/2&quot;&gt; &lt;code&gt;await/2&lt;/code&gt; &lt;/a&gt; , задачи также можно запускать как часть дерева надзора и динамически порождать на удаленных узлах. Далее мы рассмотрим все три сценария.</target>
        </trans-unit>
        <trans-unit id="84bd8dd7435a7e50a7902eac99410b942c4d0240" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;@before_compile&lt;/code&gt;, there are other useful module attributes like &lt;code&gt;@on_definition&lt;/code&gt; and &lt;code&gt;@after_compile&lt;/code&gt;, which you can read more about in &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt;the docs for the &lt;code&gt;Module&lt;/code&gt; module&lt;/a&gt;. You can also find useful information about macros and the compilation environment in the documentation for the &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html&quot;&gt;&lt;code&gt;Macro&lt;/code&gt; module&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Кроме &lt;code&gt;@before_compile&lt;/code&gt; , есть другие полезные атрибуты , как модуль &lt;code&gt;@on_definition&lt;/code&gt; и &lt;code&gt;@after_compile&lt;/code&gt; , которые вы можете прочитать больше в &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt;Документов для &lt;code&gt;Module&lt;/code&gt; модуля&lt;/a&gt; . Вы также можете найти полезную информацию о макросах и среде компиляции в документации для &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html&quot;&gt;модуля &lt;/a&gt; &lt;code&gt;Macro&lt;/code&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1e80b1ec582384418cc616d1f8343b52b2b4cd5" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;cond&lt;/code&gt;, Elixir also provides the macros &lt;code&gt;if/2&lt;/code&gt; and &lt;code&gt;unless/2&lt;/code&gt; which are useful when you need to check for only one condition:</source>
          <target state="translated">Помимо &lt;code&gt;case&lt;/code&gt; и &lt;code&gt;cond&lt;/code&gt; , Elixir также предоставляет макросы &lt;code&gt;if/2&lt;/code&gt; и &lt;code&gt;unless/2&lt;/code&gt; которые полезны, когда вам нужно проверить только одно условие:</target>
        </trans-unit>
        <trans-unit id="f6cdfaf2baa94aad4e65fa26be490d407b1c2ff9" translate="yes" xml:space="preserve">
          <source>Besides allowing pattern matching on struct fields, such as:</source>
          <target state="translated">Кроме того,позволяет выполнять совпадение шаблонов в полях структуры,например:</target>
        </trans-unit>
        <trans-unit id="01bb2cd8bbff810bc2463c24d74581c14f3d6b3f" translate="yes" xml:space="preserve">
          <source>Besides environments, Mix supports targets. Targets are useful when a project needs to compile to different architectures and some of the dependencies are only available to some of them. By default, the target is &lt;code&gt;:host&lt;/code&gt; but it can be set via the &lt;code&gt;MIX_TARGET&lt;/code&gt; environment variable. The target can be read via &lt;a href=&quot;mix#target/0&quot;&gt;&lt;code&gt;Mix.target/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Помимо сред, Mix поддерживает цели. Цели полезны, когда проект необходимо скомпилировать для разных архитектур, и некоторые зависимости доступны только для некоторых из них. По умолчанию целью является &lt;code&gt;:host&lt;/code&gt; , но ее можно установить с помощью переменной среды &lt;code&gt;MIX_TARGET&lt;/code&gt; . Цель можно прочитать через &lt;a href=&quot;mix#target/0&quot;&gt; &lt;code&gt;Mix.target/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57fd661d50a52343735a3a512de7f5de0c57eebb" translate="yes" xml:space="preserve">
          <source>Besides functions for opening, reading and writing files, the &lt;code&gt;File&lt;/code&gt; module has many functions to work with the file system. Those functions are named after their UNIX equivalents. For example, &lt;code&gt;File.rm/1&lt;/code&gt; can be used to remove files, &lt;code&gt;File.mkdir/1&lt;/code&gt; to create directories, &lt;code&gt;File.mkdir_p/1&lt;/code&gt; to create directories and all their parent chain. There are even &lt;code&gt;File.cp_r/2&lt;/code&gt; and &lt;code&gt;File.rm_rf/1&lt;/code&gt; to respectively copy and remove files and directories recursively (i.e., copying and removing the contents of the directories too).</source>
          <target state="translated">Помимо функций для открытия, чтения и записи файлов, модуль &lt;code&gt;File&lt;/code&gt; имеет множество функций для работы с файловой системой. Эти функции названы в честь их эквивалентов в UNIX. Например, &lt;code&gt;File.rm/1&lt;/code&gt; можно использовать для удаления файлов, &lt;code&gt;File.mkdir/1&lt;/code&gt; для создания каталогов, &lt;code&gt;File.mkdir_p/1&lt;/code&gt; для создания каталогов и всей их родительской цепочки. Есть даже &lt;code&gt;File.cp_r/2&lt;/code&gt; и &lt;code&gt;File.rm_rf/1&lt;/code&gt; для рекурсивного копирования и удаления файлов и каталогов соответственно (т. Е. Копирование и удаление содержимого каталогов).</target>
        </trans-unit>
        <trans-unit id="bf0bf58fef26f8d47abf58c4e98d942fe7e09d41" translate="yes" xml:space="preserve">
          <source>Besides getting a value and updating the agent state, agents allow us to get a value and update the agent state in one function call via &lt;code&gt;Agent.get_and_update/2&lt;/code&gt;. Let&amp;rsquo;s implement a &lt;code&gt;KV.Bucket.delete/2&lt;/code&gt; function that deletes a key from the bucket, returning its current value:</source>
          <target state="translated">Помимо получения значения и обновления состояния агента, агенты позволяют нам получать значение и обновлять состояние агента за один вызов функции через &lt;code&gt;Agent.get_and_update/2&lt;/code&gt; . Давайте реализуем функцию &lt;code&gt;KV.Bucket.delete/2&lt;/code&gt; , которая удаляет ключ из корзины , возвращая его текущее значение:</target>
        </trans-unit>
        <trans-unit id="9789e063966a758871f9c998af33a9bf355ebc18" translate="yes" xml:space="preserve">
          <source>Besides lowercase sigils, Elixir supports uppercase sigils to deal with escaping characters and interpolation. While both &lt;code&gt;~s&lt;/code&gt; and &lt;code&gt;~S&lt;/code&gt; will return strings, the former allows escape codes and interpolation while the latter does not:</source>
          <target state="translated">Помимо символов нижнего регистра, Elixir поддерживает символы верхнего регистра для работы с экранирующими символами и интерполяцией. Хотя и &lt;code&gt;~s&lt;/code&gt; и &lt;code&gt;~S&lt;/code&gt; будут возвращать строки, первый допускает escape-коды и интерполяцию, а второй - нет:</target>
        </trans-unit>
        <trans-unit id="d7d97bd69019c17af96e7bec585780be62ea803d" translate="yes" xml:space="preserve">
          <source>Besides regular expressions, Elixir ships with three other sigils.</source>
          <target state="translated">Кроме регулярных выражений,корабли Эликсира с тремя другими знаками.</target>
        </trans-unit>
        <trans-unit id="fa2db308837aea27b007c38a306f2dbb8af757b6" translate="yes" xml:space="preserve">
          <source>Besides relying on pattern matching, &lt;code&gt;rescue&lt;/code&gt; clauses provide some conveniences around exceptions that allow one to rescue an exception by its name. All the following formats are valid patterns in &lt;code&gt;rescue&lt;/code&gt; clauses:</source>
          <target state="translated">Помимо использования сопоставления с образцом, предложения &lt;code&gt;rescue&lt;/code&gt; предоставляют некоторые удобства в отношении исключений, которые позволяют спасать исключение по его имени. Все следующие форматы являются допустимыми шаблонами в предложениях по &lt;code&gt;rescue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3ce006769a3ad73d2aa5c3e5097589962e275bb7" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;BREAK&lt;/code&gt; menu, one can type &lt;code&gt;Ctrl+G&lt;/code&gt; to get to the &lt;code&gt;User switch command&lt;/code&gt; menu. When reached, you can type &lt;code&gt;h&lt;/code&gt; to get more information.</source>
          <target state="translated">Помимо меню &lt;code&gt;BREAK&lt;/code&gt; , можно нажать &lt;code&gt;Ctrl+G&lt;/code&gt; , чтобы &lt;code&gt;User switch command&lt;/code&gt; меню команд переключения пользователя . Когда дойдете до, вы можете ввести &lt;code&gt;h&lt;/code&gt; , чтобы получить дополнительную информацию.</target>
        </trans-unit>
        <trans-unit id="17a296909c364def2f70ba9542fcca5af1be1690" translate="yes" xml:space="preserve">
          <source>Besides the booleans &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; Elixir also has the concept of a &quot;truthy&quot; or &quot;falsy&quot; value.</source>
          <target state="translated">Помимо логических значений, &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;false&lt;/code&gt; Эликсир также имеет понятие &amp;laquo;истинное&amp;raquo; или &amp;laquo;ложное&amp;raquo; значение.</target>
        </trans-unit>
        <trans-unit id="5b77eafa1881088ae45eaa4e4da415f6bbc48892" translate="yes" xml:space="preserve">
          <source>Besides the functions available in this module, the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module exposes and auto-imports some basic functionality related to processes available through the following functions:</source>
          <target state="translated">Помимо функций, доступных в этом модуле, модуль &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; предоставляет и автоматически импортирует некоторые базовые функции, связанные с процессами, доступными через следующие функции:</target>
        </trans-unit>
        <trans-unit id="24c285ef9b5dcc5c662b164a6b173b44cbf8936b" translate="yes" xml:space="preserve">
          <source>Besides the modules and functions libraries provide as part of their public interface, libraries may also implement important functionality that is not part of their API. While these modules and functions can be accessed, they are meant to be internal to the library and thus should not have documentation for end users.</source>
          <target state="translated">Кроме модулей и функций,которые библиотеки предоставляют как часть своего публичного интерфейса,библиотеки могут реализовывать и важный функционал,не являющийся частью их API.Несмотря на то,что доступ к этим модулям и функциям возможен,они должны быть внутренними для библиотеки и,следовательно,не должны иметь документации для конечных пользователей.</target>
        </trans-unit>
        <trans-unit id="d1e278a8ee8e14b171370d3d1993e61557fa885d" translate="yes" xml:space="preserve">
          <source>Besides the synchronous and asynchronous communication provided by &lt;a href=&quot;#call/3&quot;&gt;&lt;code&gt;call/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cast/2&quot;&gt;&lt;code&gt;cast/2&lt;/code&gt;&lt;/a&gt;, &quot;regular&quot; messages sent by functions such as &lt;a href=&quot;kernel#send/2&quot;&gt;&lt;code&gt;Kernel.send/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;process#send_after/4&quot;&gt;&lt;code&gt;Process.send_after/4&lt;/code&gt;&lt;/a&gt; and similar, can be handled inside the &lt;a href=&quot;#c:handle_info/2&quot;&gt;&lt;code&gt;handle_info/2&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">Помимо синхронной и асинхронной связи, обеспечиваемой &lt;a href=&quot;#call/3&quot;&gt; &lt;code&gt;call/3&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#cast/2&quot;&gt; &lt;code&gt;cast/2&lt;/code&gt; &lt;/a&gt; , внутри обратного вызова &lt;a href=&quot;#c:handle_info/2&quot;&gt; &lt;code&gt;handle_info/2&lt;/code&gt; &lt;/a&gt; могут обрабатываться &amp;laquo;обычные&amp;raquo; сообщения, отправляемые такими функциями, как &lt;a href=&quot;kernel#send/2&quot;&gt; &lt;code&gt;Kernel.send/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;process#send_after/4&quot;&gt; &lt;code&gt;Process.send_after/4&lt;/code&gt; &lt;/a&gt; и т.п.</target>
        </trans-unit>
        <trans-unit id="517337ce1caa7ff89458c6a131be85fc7edc22c4" translate="yes" xml:space="preserve">
          <source>Besides the tuple defined above, there are five Elixir literals that, when quoted, return themselves (and not a tuple). They are:</source>
          <target state="translated">Кроме кортежа,определенного выше,есть пять букв Elixir,которые при цитировании возвращают себя (а не кортеж).Так и есть:</target>
        </trans-unit>
        <trans-unit id="36c1c37f1ad939c92cf62bb17cfdd2a856f1bff4" translate="yes" xml:space="preserve">
          <source>Besides the tuple described above, Elixir has a few literals that are also part of its AST. Those literals return themselves when quoted. They are:</source>
          <target state="translated">Кроме кортежа,описанного выше,у Elixir есть несколько букв,которые также являются частью его AST.Эти литералы возвращаются сами по себе,когда их цитируют.Так и есть:</target>
        </trans-unit>
        <trans-unit id="be7cb95beca4417119b196c5145eac30a92f05f3" translate="yes" xml:space="preserve">
          <source>Besides these boolean operators, Elixir also provides &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt; which accept arguments of any type. For these operators, all values except &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt; will evaluate to true:</source>
          <target state="translated">Помимо этих логических операторов, Elixir также предоставляет &lt;code&gt;||&lt;/code&gt; , &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; и &lt;code&gt;!&lt;/code&gt; которые принимают аргументы любого типа. Для этих операторов все значения, кроме &lt;code&gt;false&lt;/code&gt; и &lt;code&gt;nil&lt;/code&gt; , будут иметь значение true:</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">Передовые методы</target>
        </trans-unit>
        <trans-unit id="21f3045d2e00281b8e684e3df830ced85cb7ac6f" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;(&lt;/code&gt;/&lt;code&gt;)&lt;/code&gt;:</source>
          <target state="translated">Между &lt;code&gt;(&lt;/code&gt; / &lt;code&gt;)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c2e583cf3da1aee0a9f017fc5ad1b43ad947c175" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;fn/end&lt;/code&gt;:</source>
          <target state="translated">Между &lt;code&gt;fn/end&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b564736adfe95cd2b39d3044818184c7616b6b8d" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;use ExUnit.Case&lt;/code&gt; and setup, add the following call:</source>
          <target state="translated">Между &lt;code&gt;use ExUnit.Case&lt;/code&gt; и настройкой добавьте следующий вызов:</target>
        </trans-unit>
        <trans-unit id="536a214ab9480c5673911e94b4e8775035965909" translate="yes" xml:space="preserve">
          <source>Beware that the Erlang VM does not terminate child processes when it shuts down. Therefore, if you use &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix cmd&lt;/code&gt;&lt;/a&gt; to start long running processes and then shut down the VM, it is likely that those child processes won't be terminated with the VM.</source>
          <target state="translated">Помните, что Erlang VM не завершает дочерние процессы при завершении работы. Следовательно, если вы используете &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;mix cmd&lt;/code&gt; &lt;/a&gt; для запуска длительных процессов, а затем выключите виртуальную машину, вполне вероятно, что эти дочерние процессы не будут завершены вместе с виртуальной машиной.</target>
        </trans-unit>
        <trans-unit id="ac071b29fee9c70fb03e3c3c8147b7946ee31eea" translate="yes" xml:space="preserve">
          <source>Binaries (and bitstrings)</source>
          <target state="translated">Бинарии (и битстринги)</target>
        </trans-unit>
        <trans-unit id="b191af7fc34f7fbb5fbc2a69591b4e9bf648fbff" translate="yes" xml:space="preserve">
          <source>Binaries have a representation similar to tuples, except they are tagged with &lt;code&gt;:&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; instead of &lt;code&gt;:{}&lt;/code&gt;:</source>
          <target state="translated">Бинарные файлы имеют представление, подобное кортежам, за исключением того, что они помечены &lt;code&gt;:&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; вместо &lt;code&gt;:{}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="49aff6fbacb348e58a8db3dc080372ebbadd0f28" translate="yes" xml:space="preserve">
          <source>Binaries, strings, and charlists</source>
          <target state="translated">Бинарии,струнные и шарлисты</target>
        </trans-unit>
        <trans-unit id="af15fd6b97639efd6a9b693a8880e6903d2f3cd2" translate="yes" xml:space="preserve">
          <source>Binary matching can be used by itself to extract information from binaries:</source>
          <target state="translated">Двоичное совпадение может быть использовано само по себе для извлечения информации из двоичных файлов:</target>
        </trans-unit>
        <trans-unit id="2042acc40e9773f089632ff1fc5f3d54f8826ee5" translate="yes" xml:space="preserve">
          <source>Binary matching is a powerful feature in Elixir that is useful for extracting information from binaries as well as pattern matching.</source>
          <target state="translated">Сопоставление двоичных файлов является мощной функцией в Elixir,которая полезна для извлечения информации из двоичных файлов,а также для сопоставления шаблонов.</target>
        </trans-unit>
        <trans-unit id="64a4a40cae012874b1a177797783b5c6ec4aefa1" translate="yes" xml:space="preserve">
          <source>Binary pattern matching provides a similar way to decompose a string:</source>
          <target state="translated">Сопоставление бинарных шаблонов обеспечивает аналогичный способ разложения строки:</target>
        </trans-unit>
        <trans-unit id="8ea819ee42276da3a90285cc5b8c1cf028115def" translate="yes" xml:space="preserve">
          <source>Binary pattern matching, however, is simpler and more efficient, so pick the option that better suits your use case.</source>
          <target state="translated">Сопоставление двоичных шаблонов,однако,проще и эффективнее,поэтому выберите вариант,который лучше подходит для вашего случая использования.</target>
        </trans-unit>
        <trans-unit id="d61004333e425a59f39f73680dda0fe68656875f" translate="yes" xml:space="preserve">
          <source>Binary/Bitstring Matching</source>
          <target state="translated">Сопоставление бинарных/битстринговых данных</target>
        </trans-unit>
        <trans-unit id="c282b192a231740a4b0a7bb6f752b62b8492be4b" translate="yes" xml:space="preserve">
          <source>Binding and unquote fragments</source>
          <target state="translated">Привязка и отвязка фрагментов</target>
        </trans-unit>
        <trans-unit id="45c425457bcdcfb5085aa625ded75d4bf3929b5b" translate="yes" xml:space="preserve">
          <source>Bitstring - a sequence of bits, created with &lt;a href=&quot;kernel.specialforms#%253C%253C%253E%253E/1&quot;&gt;&lt;code&gt;Kernel.SpecialForms.&amp;lt;&amp;lt;&amp;gt;&amp;gt;/1&lt;/code&gt;&lt;/a&gt;. When the number of bits is divisible by 8, they are called binaries and can be manipulated with Erlang's &lt;code&gt;:binary&lt;/code&gt; module</source>
          <target state="translated">Bitstring - последовательность битов, созданная с помощью &lt;a href=&quot;kernel.specialforms#%253C%253C%253E%253E/1&quot;&gt; &lt;code&gt;Kernel.SpecialForms.&amp;lt;&amp;lt;&amp;gt;&amp;gt;/1&lt;/code&gt; &lt;/a&gt; . Когда количество битов делится на 8, они называются двоичными, и ими можно манипулировать с помощью модуля Erlang &lt;code&gt;:binary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ea9d52bc54bc6f374f2fad4f115fc7ac1b63024" translate="yes" xml:space="preserve">
          <source>Bitstring generators</source>
          <target state="translated">генераторы битстронг</target>
        </trans-unit>
        <trans-unit id="f3c1518585255719399d723cff9097dc10d6275d" translate="yes" xml:space="preserve">
          <source>Bitstring generators are also supported and are very useful when you need to comprehend over bitstring streams. The example below receives a list of pixels from a binary with their respective red, green and blue values and converts them into tuples of three elements each:</source>
          <target state="translated">Генераторы битстрок также поддерживаются и очень полезны,когда необходимо понимать потоки над битстроками.В примере ниже приводится список пикселей из бинарного файла с соответствующими значениями красного,зеленого и синего,который преобразует их в кортежи по три элемента в каждом:</target>
        </trans-unit>
        <trans-unit id="beaa67a4353085a5a0b2c675dc039718337cb9d0" translate="yes" xml:space="preserve">
          <source>Bitstring generators are also supported and are very useful when you need to organize bitstring streams:</source>
          <target state="translated">Генераторы битстрок также поддерживаются и очень полезны,когда необходимо организовать потоки битстрок:</target>
        </trans-unit>
        <trans-unit id="afaf36b63e4b1dad0901ea18c5897446e09881ea" translate="yes" xml:space="preserve">
          <source>Bitstrings are compared byte by byte, incomplete bytes are compared bit by bit.</source>
          <target state="translated">Байт за байтом сравниваются битовые строки,байт за байтом сравниваются неполные байты.</target>
        </trans-unit>
        <trans-unit id="3f687d3e29fc77fc43b356662b1a2660353fff87" translate="yes" xml:space="preserve">
          <source>Bitwise</source>
          <target state="translated">Bitwise</target>
        </trans-unit>
        <trans-unit id="aad380f630b0abfaeebd6b63365cfb723443ad4d" translate="yes" xml:space="preserve">
          <source>Blames the invocation of the given module, function and arguments.</source>
          <target state="translated">Обвиняет вызов данного модуля,функции и аргументов.</target>
        </trans-unit>
        <trans-unit id="6f46461436a8e71915de539b6c2a0b43e158d0cd" translate="yes" xml:space="preserve">
          <source>Blink: off.</source>
          <target state="translated">Моргни.</target>
        </trans-unit>
        <trans-unit id="ba5e3f453d009bde1d3539dbf1179df1faca9394" translate="yes" xml:space="preserve">
          <source>Blink: rapid. MS-DOS ANSI.SYS; 150 per minute or more; not widely supported.</source>
          <target state="translated">Моргни:быстро.MS-DOS ANSI.SYS;150 в минуту и более;не широко поддерживается.</target>
        </trans-unit>
        <trans-unit id="701dbab8ca66a57b0d87ff8fc2dc263f3150cedf" translate="yes" xml:space="preserve">
          <source>Blink: slow. Less than 150 per minute.</source>
          <target state="translated">Моргни:медленно.Меньше 150 в минуту.</target>
        </trans-unit>
        <trans-unit id="54c45c033f5eb914fae27a646cbd9e23d3750d19" translate="yes" xml:space="preserve">
          <source>Blocks</source>
          <target state="translated">Blocks</target>
        </trans-unit>
        <trans-unit id="2822489452326c302f28e1501fd6edcfc934d1fa" translate="yes" xml:space="preserve">
          <source>Blocks are multiple Elixir expressions separated by newlines or semi-colons. A new block may be created at any moment by using parentheses.</source>
          <target state="translated">Блоки представляют собой несколько выражений эликсира,разделенных новыми строками или полуколоннами.Новый блок может быть создан в любой момент с помощью круглых скобок.</target>
        </trans-unit>
        <trans-unit id="d103eae36d19a85d68a720e19cf2a1c73ba893fb" translate="yes" xml:space="preserve">
          <source>Blocks are represented as a &lt;code&gt;__block__&lt;/code&gt; call with each line as a separate argument:</source>
          <target state="translated">Блоки представлены в виде вызова &lt;code&gt;__block__&lt;/code&gt; с каждой строкой в ​​качестве отдельного аргумента:</target>
        </trans-unit>
        <trans-unit id="c3b2d105cf560a74b63402e4c3067e0eff5cac1a" translate="yes" xml:space="preserve">
          <source>Blocks examples</source>
          <target state="translated">Примеры блоков</target>
        </trans-unit>
        <trans-unit id="36016951d6cf223fe79a2c8002262083d4f62b06" translate="yes" xml:space="preserve">
          <source>Boolean and.</source>
          <target state="translated">Булева и...</target>
        </trans-unit>
        <trans-unit id="c2e29c3c880739783d09b4fe1f081591e67b960c" translate="yes" xml:space="preserve">
          <source>Boolean not.</source>
          <target state="translated">Не надо.</target>
        </trans-unit>
        <trans-unit id="39431fd4748e66e596621d8b72c4abb89473c694" translate="yes" xml:space="preserve">
          <source>Boolean or.</source>
          <target state="translated">Булева или...</target>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="f2506581ad8aed3b0c1c03b8ace8bf389d0d1aef" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#new/3&quot;&gt;&lt;code&gt;new/3&lt;/code&gt;&lt;/a&gt; and sigil return a struct where the date fields can be accessed directly:</source>
          <target state="translated">И &lt;a href=&quot;#new/3&quot;&gt; &lt;code&gt;new/3&lt;/code&gt; ,&lt;/a&gt; и sigil возвращают структуру, в которой можно получить прямой доступ к полям даты:</target>
        </trans-unit>
        <trans-unit id="c5670efb08fea60db5c1dc778b7fa5fca46a8dfe" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#new/4&quot;&gt;&lt;code&gt;new/4&lt;/code&gt;&lt;/a&gt; and sigil return a struct where the time fields can be accessed directly:</source>
          <target state="translated">И &lt;a href=&quot;#new/4&quot;&gt; &lt;code&gt;new/4&lt;/code&gt; ,&lt;/a&gt; и sigil возвращают структуру, в которой можно напрямую обращаться к полям времени:</target>
        </trans-unit>
        <trans-unit id="e6db73dfc41eeeab376e55d7d970cd504e5c8628" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#start/3&quot;&gt;&lt;code&gt;start/3&lt;/code&gt;&lt;/a&gt; support the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; to register a name on start via the &lt;code&gt;:name&lt;/code&gt; option. Registered names are also automatically cleaned up on termination. The supported values are:</source>
          <target state="translated">И &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; ,&lt;/a&gt; и &lt;a href=&quot;#start/3&quot;&gt; &lt;code&gt;start/3&lt;/code&gt; &lt;/a&gt; поддерживают &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; для регистрации имени при запуске с помощью параметра &lt;code&gt;:name&lt;/code&gt; . Зарегистрированные имена также автоматически удаляются при прекращении действия. Поддерживаемые значения:</target>
        </trans-unit>
        <trans-unit id="6a2c37b3cef4535145ce827a33ddc90d02fb5af8" translate="yes" xml:space="preserve">
          <source>Both alias and the regular stack are reenabled when this function is called.</source>
          <target state="translated">При вызове этой функции снова включается и псевдоним,и обычный стек.</target>
        </trans-unit>
        <trans-unit id="c950a48885327096ba9eaa9566182e792003879f" translate="yes" xml:space="preserve">
          <source>Both errors and warnings are a list of three-element tuples containing the file, line and the formatted error/warning.</source>
          <target state="translated">И ошибки,и предупреждения-это список трехэлементных кортежей,содержащих файл,строку и отформатированную ошибку/предупреждение.</target>
        </trans-unit>
        <trans-unit id="ced4465ef3cf40ff59c16c913d6d37a1752d7479" translate="yes" xml:space="preserve">
          <source>Both key-based access syntaxes can be used with the nested update functions and macros in &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;kernel#get_in/2&quot;&gt;&lt;code&gt;Kernel.get_in/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#put_in/3&quot;&gt;&lt;code&gt;Kernel.put_in/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#update_in/3&quot;&gt;&lt;code&gt;Kernel.update_in/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#pop_in/2&quot;&gt;&lt;code&gt;Kernel.pop_in/2&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;kernel#get_and_update_in/3&quot;&gt;&lt;code&gt;Kernel.get_and_update_in/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Оба синтаксиса доступа на основе ключей могут использоваться с вложенными функциями обновления и макросами в &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; , такими как &lt;a href=&quot;kernel#get_in/2&quot;&gt; &lt;code&gt;Kernel.get_in/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#put_in/3&quot;&gt; &lt;code&gt;Kernel.put_in/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#update_in/3&quot;&gt; &lt;code&gt;Kernel.update_in/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#pop_in/2&quot;&gt; &lt;code&gt;Kernel.pop_in/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;kernel#get_and_update_in/3&quot;&gt; &lt;code&gt;Kernel.get_and_update_in/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1725c5aa2fe9943dc5f589af21621f3d6dac806" translate="yes" xml:space="preserve">
          <source>Both keyword lists (list of two-element tuples where the first element is atom) and maps with atom keys support a keyword notation where the colon character &lt;code&gt;:&lt;/code&gt; is moved to the end of the atom. &lt;code&gt;%{hello: &quot;world&quot;}&lt;/code&gt; is equivalent to &lt;code&gt;%{:hello =&amp;gt; &quot;world&quot;}&lt;/code&gt; and &lt;code&gt;[foo: :bar]&lt;/code&gt; is equivalent to &lt;code&gt;[{:foo, :bar}]&lt;/code&gt;. This notation is a syntax sugar that emits the same AST representation. It will be explained in later sections.</source>
          <target state="translated">Оба списка ключевых слов (список двухэлементных кортежей, где первый элемент - атом) и карты с ключами атома поддерживают обозначение ключевых слов, в котором символ двоеточия &lt;code&gt;:&lt;/code&gt; перемещается в конец атома. &lt;code&gt;%{hello: &quot;world&quot;}&lt;/code&gt; эквивалентно &lt;code&gt;%{:hello =&amp;gt; &quot;world&quot;}&lt;/code&gt; а &lt;code&gt;[foo: :bar]&lt;/code&gt; эквивалентно &lt;code&gt;[{:foo, :bar}]&lt;/code&gt; . Эта нотация представляет собой синтаксический сахар, который испускает то же представление AST. Это будет объяснено в следующих разделах.</target>
        </trans-unit>
        <trans-unit id="aeaad2964ed5e5302fd8d6cbf6876b036e35f28d" translate="yes" xml:space="preserve">
          <source>Both parameters can be a filename or an IO device opened with &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;bytes_count&lt;/code&gt; specifies the number of bytes to copy, the default being &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">Оба параметра могут быть именем файла или устройством ввода-вывода, открытым с помощью &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;bytes_count&lt;/code&gt; указывает количество байтов для копирования, по умолчанию &lt;code&gt;:infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b065bf9a58cf78ea7c21c2504ab89c6bf366d41d" translate="yes" xml:space="preserve">
          <source>Both these options accept a keyword list where the key is an atom defining the name of the switch and value is the &lt;code&gt;type&lt;/code&gt; of the switch (see the &quot;Types&quot; section below for more information).</source>
          <target state="translated">Обе эти опции принимают список ключевых слов, где ключ - это атом, определяющий имя переключателя, а значение - это &lt;code&gt;type&lt;/code&gt; переключателя (см. Раздел &amp;laquo;Типы&amp;raquo; ниже для получения дополнительной информации).</target>
        </trans-unit>
        <trans-unit id="fe42655b432ab90415ad78eca77b12d1539f938b" translate="yes" xml:space="preserve">
          <source>Both warning behaviours could be changed by explicitly setting the &lt;code&gt;:warn&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Оба поведения предупреждений можно изменить, явно установив для параметра &lt;code&gt;:warn&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4804b38853ff3a7357a1b3869d1bda894f6fb5c8" translate="yes" xml:space="preserve">
          <source>Breaks a pipeline expression into a list.</source>
          <target state="translated">Разбивает выражение трубопровода на список.</target>
        </trans-unit>
        <trans-unit id="a3a49c6ab668c2b3b545008e5e7b0af2866999c8" translate="yes" xml:space="preserve">
          <source>Breaks and &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Перерывы и &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d9f59f6ab1ddf5fe748e2618c2c67b4cc598990" translate="yes" xml:space="preserve">
          <source>Bright (increased intensity) or bold.</source>
          <target state="translated">Яркий (повышенная интенсивность)или жирный.</target>
        </trans-unit>
        <trans-unit id="838f6cdccb12d9e52e7eaf582463cf22eb4cba90" translate="yes" xml:space="preserve">
          <source>Bug fixes and security patches</source>
          <target state="translated">Исправления ошибок и исправления безопасности</target>
        </trans-unit>
        <trans-unit id="c41f68079c3956a3a9d158dc0407d610d85618c9" translate="yes" xml:space="preserve">
          <source>Bugs: if an API has undesired behaviour, a program that depends on the buggy behaviour may break if the bug is fixed. We reserve the right to fix such bugs.</source>
          <target state="translated">Ошибки:если API имеет нежелательное поведение,то программа,зависящая от багги-поведения,может сломаться,если ошибка исправлена.Мы оставляем за собой право исправлять такие ошибки.</target>
        </trans-unit>
        <trans-unit id="a375cb36a8473ab5ec8546cdcf8ac0d2a5cb8b43" translate="yes" xml:space="preserve">
          <source>Build information can be added by appending a plus sign and a series of dot-separated identifiers immediately following the patch or pre-release version. Identifiers consist of only ASCII alphanumeric characters and hyphens (&lt;code&gt;[0-9A-Za-z-]&lt;/code&gt;):</source>
          <target state="translated">Информацию о сборке можно добавить, добавив знак плюс и серию разделенных точками идентификаторов сразу после исправления или предварительной версии. Идентификаторы состоят только из буквенно-цифровых символов ASCII и дефисов ( &lt;code&gt;[0-9A-Za-z-]&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="a6e387e513a488787baf35f75987dd36421ea7d2" translate="yes" xml:space="preserve">
          <source>Build segments are ignored: if two versions differ only in their build segment they are considered to be equal.</source>
          <target state="translated">Сегменты сборки игнорируются:если две версии отличаются только сегментом сборки,то они считаются равными.</target>
        </trans-unit>
        <trans-unit id="bad1e9b6552746278d7a8c6c088673f831353f0b" translate="yes" xml:space="preserve">
          <source>Build your first Elixir project</source>
          <target state="translated">Создай свой первый проект Эликсира</target>
        </trans-unit>
        <trans-unit id="a7c7f9a08b1bad090b46d9ebf6e47a7e84c9421c" translate="yes" xml:space="preserve">
          <source>Building IO data is cheaper than concatenating binaries. Concatenating multiple pieces of IO data just means putting them together inside a list since IO data can be arbitrarily nested, and that's a cheap and efficient operation. Most of the IO-based APIs, such as &lt;code&gt;:gen_tcp&lt;/code&gt;, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, etc, receive IO data and write it to the socket directly without converting it to binary.</source>
          <target state="translated">Создание данных ввода-вывода дешевле, чем объединение двоичных файлов. Объединение нескольких частей данных ввода-вывода означает просто объединение их в список, поскольку данные ввода-вывода могут быть произвольно вложены, а это дешевая и эффективная операция. Большинство API-интерфейсов на основе ввода-вывода, таких как &lt;code&gt;:gen_tcp&lt;/code&gt; , &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; и т. Д., Получают данные ввода-вывода и записывают их в сокет напрямую, без преобразования в двоичный.</target>
        </trans-unit>
        <trans-unit id="c158d8129679833ab365e0432154a06c26bbe385" translate="yes" xml:space="preserve">
          <source>Building on top of the exit signals mentioned above, if the process started by the command line exits with any of the three reasons above, its exit is considered normal and the Operating System process will exit with status 0.</source>
          <target state="translated">Основываясь на вышеперечисленных сигналах выхода,если процесс,запущенный из командной строки,завершается по любой из трех причин,то его выход считается нормальным и процесс операционной системы завершается со статусом 0.</target>
        </trans-unit>
        <trans-unit id="54488c84dcebf713a9804555c846d54e655ff471" translate="yes" xml:space="preserve">
          <source>Building our own test case</source>
          <target state="translated">Создание нашего собственного тестового примера</target>
        </trans-unit>
        <trans-unit id="5b816d21e0eec18041c314dcb38039717c983b72" translate="yes" xml:space="preserve">
          <source>Builds a naive datetime from date and time structs.</source>
          <target state="translated">Строит наивное время даты из структур даты и времени.</target>
        </trans-unit>
        <trans-unit id="3802216eb98726ee9ca40c4c3bac375bd9485cbb" translate="yes" xml:space="preserve">
          <source>Builds a new ISO date.</source>
          <target state="translated">Сборка новой даты ISO.</target>
        </trans-unit>
        <trans-unit id="b5365600952fb4b419ca2ffa21c352a921992cfb" translate="yes" xml:space="preserve">
          <source>Builds a new ISO naive datetime.</source>
          <target state="translated">Строит новое наивное ISO-датированное время.</target>
        </trans-unit>
        <trans-unit id="ad04bee5eab482961a816bfa7021b7c0d60dd82a" translate="yes" xml:space="preserve">
          <source>Builds a new time.</source>
          <target state="translated">Строит новое время.</target>
        </trans-unit>
        <trans-unit id="e8ea57a5a998c38bcfc9ffa8c023a39dd669576d" translate="yes" xml:space="preserve">
          <source>Builds a path from &lt;code&gt;relative_to&lt;/code&gt; to &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Строит путь от &lt;code&gt;relative_to&lt;/code&gt; к &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22bdb46a287e3157896ab159a9b538b7fcd94ffb" translate="yes" xml:space="preserve">
          <source>Builds an escript for the project.</source>
          <target state="translated">Строит эскрипт для проекта.</target>
        </trans-unit>
        <trans-unit id="3596331ae831e5817637a172c927de54ca3c406d" translate="yes" xml:space="preserve">
          <source>Builds and overrides a child specification.</source>
          <target state="translated">Строит и переопределяет спецификацию для ребенка.</target>
        </trans-unit>
        <trans-unit id="0943df460e764126fabb5f2d806ad8f731c23730" translate="yes" xml:space="preserve">
          <source>Builds the project structure for the given application.</source>
          <target state="translated">Строит структуру проекта для данной заявки.</target>
        </trans-unit>
        <trans-unit id="9ce6098db87d0ac3e024a19c0c868db81217ca3a" translate="yes" xml:space="preserve">
          <source>Built-in protocols</source>
          <target state="translated">Встроенные протоколы</target>
        </trans-unit>
        <trans-unit id="d424bfa2909fd88b6e78f50f994b1bd31b188869" translate="yes" xml:space="preserve">
          <source>Built-in time zone database that works only in Etc/UTC.</source>
          <target state="translated">Встроенная база данных часовых поясов,которая работает только в Etc/UTC.</target>
        </trans-unit>
        <trans-unit id="4389d7f528857f621560c37a11c338ec93a16c7f" translate="yes" xml:space="preserve">
          <source>Built-in translation function.</source>
          <target state="translated">Встроенная функция перевода.</target>
        </trans-unit>
        <trans-unit id="16eecec82d486c492cf075a47b6a4441bd83afc7" translate="yes" xml:space="preserve">
          <source>Built-in type</source>
          <target state="translated">Встроенный тип</target>
        </trans-unit>
        <trans-unit id="0f6bebd51ff8927e6e3679a7b2412429e9c60cb6" translate="yes" xml:space="preserve">
          <source>Built-in types</source>
          <target state="translated">Встроенные типы</target>
        </trans-unit>
        <trans-unit id="3ce0e81919d4eeb06fc46e63df5ab62e9c33b1f7" translate="yes" xml:space="preserve">
          <source>But &lt;strong&gt;do&lt;/strong&gt;:</source>
          <target state="translated">Но &lt;strong&gt;сделайте&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="94aeec5dec71ba6c72dd8ee87f32d3fcfa0e12f5" translate="yes" xml:space="preserve">
          <source>But let&amp;rsquo;s also try something different. Let&amp;rsquo;s write integration tests that rely on the global server names to exercise the whole stack from the TCP server to the bucket. Our integration tests will rely on global state and must be synchronous. With integration tests, we get coverage on how the components in our application work together at the cost of test performance. They are typically used to test the main flows in your application. For example, we should avoid using integration tests to test an edge case in our command parsing implementation.</source>
          <target state="translated">Но давайте попробуем и другое. Давайте напишем интеграционные тесты, которые полагаются на глобальные имена серверов для проверки всего стека от TCP-сервера до корзины. Наши интеграционные тесты будут полагаться на глобальное состояние и должны быть синхронными. С помощью интеграционных тестов мы получаем представление о том, как компоненты в нашем приложении работают вместе, за счет производительности тестов. Обычно они используются для тестирования основных потоков в вашем приложении. Например, нам следует избегать использования интеграционных тестов для проверки пограничного случая в нашей реализации синтаксического анализа команд.</target>
        </trans-unit>
        <trans-unit id="2104911582eed895c4670127fe6ced7d06c28a31" translate="yes" xml:space="preserve">
          <source>But this is recommended only for scripting and should be avoided in production code. Generally speaking, processes should always be started inside supervision trees.</source>
          <target state="translated">Но это рекомендуется только для скриптинга,и этого следует избегать в производственном коде.Вообще говоря,процессы всегда должны запускаться внутри деревьев наблюдения.</target>
        </trans-unit>
        <trans-unit id="a957b50ab3b7a97450a9f30efde74d666b75a07a" translate="yes" xml:space="preserve">
          <source>But we are not done yet. So far we are supervising the registry but our application is also starting buckets. Since buckets are started dynamically, they have to be supervised by a special type of supervisor, called &lt;code&gt;DynamicSupervisor&lt;/code&gt;, which we will explore next.</source>
          <target state="translated">Но мы еще не закончили. Пока мы контролируем реестр, но наше приложение также запускает корзины. Поскольку бакеты запускаются динамически, они должны контролироваться специальным типом супервизора, называемым &lt;code&gt;DynamicSupervisor&lt;/code&gt; , который мы рассмотрим далее.</target>
        </trans-unit>
        <trans-unit id="259915d984d09b8201e37a16fe47bc5e83ead48a" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;#register/3&quot;&gt;&lt;code&gt;register/3&lt;/code&gt;&lt;/a&gt;, different processes can register under a given key and associate any value under that key. In this case, let's register the current process under the key &lt;code&gt;&quot;hello&quot;&lt;/code&gt; and attach the &lt;code&gt;{IO, :inspect}&lt;/code&gt; tuple to it:</source>
          <target state="translated">Вызывая &lt;a href=&quot;#register/3&quot;&gt; &lt;code&gt;register/3&lt;/code&gt; &lt;/a&gt; , различные процессы могут регистрироваться под данным ключом и связывать любое значение под этим ключом. В этом случае давайте зарегистрируем текущий процесс под ключом &lt;code&gt;&quot;hello&quot;&lt;/code&gt; и присоединим к нему кортеж &lt;code&gt;{IO, :inspect}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="35c51c698203bdb71ecbe3d1c4e04427369f9034" translate="yes" xml:space="preserve">
          <source>By convention, &lt;code&gt;gcd(0, 0)&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">По соглашению &lt;code&gt;gcd(0, 0)&lt;/code&gt; возвращает &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4048bc8096f6b36395ad6e4a56b15f84086c68e9" translate="yes" xml:space="preserve">
          <source>By default Elixir supports all the module attributes supported by Erlang, but custom attributes can be used as well:</source>
          <target state="translated">По умолчанию Elixir поддерживает все атрибуты модуля,поддерживаемые Erlang,но можно использовать и пользовательские атрибуты:</target>
        </trans-unit>
        <trans-unit id="29b4b62fb6ee1da01a3d45071c4e61941d60a2f2" translate="yes" xml:space="preserve">
          <source>By default functions starting with &lt;code&gt;_&lt;/code&gt; are not imported. If you really want to import a function starting with &lt;code&gt;_&lt;/code&gt; you must explicitly include it in the &lt;code&gt;:only&lt;/code&gt; selector.</source>
          <target state="translated">По умолчанию функции, начинающиеся с &lt;code&gt;_&lt;/code&gt; , не импортируются. Если вы действительно хотите импортировать функцию, начинающуюся с &lt;code&gt;_&lt;/code&gt; , вы должны явно включить ее в селектор &lt;code&gt;:only&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="428db1ab9fef04afe30a2b4353b549c7fa27a980" translate="yes" xml:space="preserve">
          <source>By default it replaces all occurrences but this behaviour can be controlled through the &lt;code&gt;:global&lt;/code&gt; option; see the &quot;Options&quot; section below.</source>
          <target state="translated">По умолчанию он заменяет все вхождения, но этим поведением можно управлять с помощью параметра &lt;code&gt;:global&lt;/code&gt; ; см. раздел &amp;laquo;Параметры&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="6b5c9ac97926d41c848960a670c7a3023e1508cb" translate="yes" xml:space="preserve">
          <source>By default they are stored in the app path inside the build directory. Umbrella applications have the manifest path set to the root of the build directory. Directories may be changed in future releases.</source>
          <target state="translated">По умолчанию они хранятся в пути к приложению внутри каталога сборки.Для зонтичных приложений путь манифеста установлен в корень каталога сборки.Директории могут быть изменены в будущих релизах.</target>
        </trans-unit>
        <trans-unit id="e03fb74ffa75b5e845b130ed2ea480214ef77b84" translate="yes" xml:space="preserve">
          <source>By default this task works across all environments, unless &lt;code&gt;--only&lt;/code&gt; is given.</source>
          <target state="translated">По умолчанию эта задача работает во всех средах, если не &lt;code&gt;--only&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b1fb5bfb4739bdd9aa579eb2c739f86cf625765" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;EEx&lt;/code&gt;&lt;/a&gt; uses the &lt;a href=&quot;eex.smartengine&quot;&gt;&lt;code&gt;EEx.SmartEngine&lt;/code&gt;&lt;/a&gt; that provides some conveniences on top of the simple &lt;a href=&quot;eex.engine&quot;&gt;&lt;code&gt;EEx.Engine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">По умолчанию &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;EEx&lt;/code&gt; &lt;/a&gt; использует &lt;a href=&quot;eex.smartengine&quot;&gt; &lt;code&gt;EEx.SmartEngine&lt;/code&gt; ,&lt;/a&gt; который предоставляет некоторые удобства поверх простого &lt;a href=&quot;eex.engine&quot;&gt; &lt;code&gt;EEx.Engine&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bdca89e148f6c41a836026b82ff88340bd20f20" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#import_file/1&quot;&gt;&lt;code&gt;import_file/1&lt;/code&gt;&lt;/a&gt; fails when the given file does not exist. However, since &lt;a href=&quot;#import_file/1&quot;&gt;&lt;code&gt;import_file/1&lt;/code&gt;&lt;/a&gt; is expanded at compile-time, it's not possible to conditionally import a file since the macro is always expanded:</source>
          <target state="translated">По умолчанию &lt;a href=&quot;#import_file/1&quot;&gt; &lt;code&gt;import_file/1&lt;/code&gt; &lt;/a&gt; завершается ошибкой, если данный файл не существует. Однако, поскольку &lt;a href=&quot;#import_file/1&quot;&gt; &lt;code&gt;import_file/1&lt;/code&gt; &lt;/a&gt; раскрывается во время компиляции, невозможно условно импортировать файл, поскольку макрос всегда раскрывается:</target>
        </trans-unit>
        <trans-unit id="adb610af913a885c5f8ec16a7315dfe5ad91f080" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;date#to_iso8601/2&quot;&gt;&lt;code&gt;Date.to_iso8601/2&lt;/code&gt;&lt;/a&gt; returns dates formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format through passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию &lt;a href=&quot;date#to_iso8601/2&quot;&gt; &lt;code&gt;Date.to_iso8601/2&lt;/code&gt; &lt;/a&gt; возвращает даты, отформатированные в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения человеком. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccc1fef33702c4720574cd45b1815c6fd01a3c75" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;datetime#to_iso8601/2&quot;&gt;&lt;code&gt;DateTime.to_iso8601/2&lt;/code&gt;&lt;/a&gt; returns datetimes formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format through passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию &lt;a href=&quot;datetime#to_iso8601/2&quot;&gt; &lt;code&gt;DateTime.to_iso8601/2&lt;/code&gt; &lt;/a&gt; возвращает дату и время в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения человеком. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31bee08f151471a3561e8ba12545f1a1c133d832" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;naivedatetime#to_iso8601/2&quot;&gt;&lt;code&gt;NaiveDateTime.to_iso8601/2&lt;/code&gt;&lt;/a&gt; returns naive datetimes formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format through passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию &lt;a href=&quot;naivedatetime#to_iso8601/2&quot;&gt; &lt;code&gt;NaiveDateTime.to_iso8601/2&lt;/code&gt; &lt;/a&gt; возвращает простые даты, отформатированные в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения человеком. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b515c8daeec8b46c7f7d220a1b811128e57e311e" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;time#to_iso8601/2&quot;&gt;&lt;code&gt;Time.to_iso8601/2&lt;/code&gt;&lt;/a&gt; returns times formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format through passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию &lt;a href=&quot;time#to_iso8601/2&quot;&gt; &lt;code&gt;Time.to_iso8601/2&lt;/code&gt; &lt;/a&gt; возвращает время, отформатированное в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения человеком. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8cda1125e6a420cc973a5e4e861c0de6be40f01" translate="yes" xml:space="preserve">
          <source>By default, Elixir imports functions and macros from the given module, except the ones starting with underscore (which are usually callbacks):</source>
          <target state="translated">По умолчанию Elixir импортирует функции и макросы из данного модуля,за исключением тех,которые начинаются со знака подчеркивания (которые обычно являются обратными вызовами):</target>
        </trans-unit>
        <trans-unit id="94a6204986c6d52028cb274c78170f8522dfc345" translate="yes" xml:space="preserve">
          <source>By default, Elixir provides some basic types, such as &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;pid&lt;/code&gt;, as well as more complex types: for example, the &lt;code&gt;round/1&lt;/code&gt; function, which rounds a float to its nearest integer, takes a &lt;code&gt;number&lt;/code&gt; as an argument (an &lt;code&gt;integer&lt;/code&gt; or a &lt;code&gt;float&lt;/code&gt;) and returns an &lt;code&gt;integer&lt;/code&gt;. As you can see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#round/1&quot;&gt;in its documentation&lt;/a&gt;, &lt;code&gt;round/1&lt;/code&gt;&amp;rsquo;s typed signature is written as:</source>
          <target state="translated">По умолчанию Elixir предоставляет некоторые базовые типы, такие как &lt;code&gt;integer&lt;/code&gt; или &lt;code&gt;pid&lt;/code&gt; , а также более сложные типы: например, функция &lt;code&gt;round/1&lt;/code&gt; , которая округляет число с плавающей запятой до ближайшего целого числа, принимает &lt;code&gt;number&lt;/code&gt; в качестве аргумента ( &lt;code&gt;integer&lt;/code&gt; или с &lt;code&gt;float&lt;/code&gt; ) и возвращает &lt;code&gt;integer&lt;/code&gt; . Как вы можете видеть &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#round/1&quot;&gt;в документации&lt;/a&gt; , типизированная подпись &lt;code&gt;round/1&lt;/code&gt; имеет следующий вид:</target>
        </trans-unit>
        <trans-unit id="1d78fd453e9e78e2b87f694e9f9cc1959686ec03" translate="yes" xml:space="preserve">
          <source>By default, Elixir uses the record name as the first element of the tuple (the &quot;tag&quot;). However, a different tag can be specified when defining a record, as in the following example, in which we use &lt;code&gt;Customer&lt;/code&gt; as the second argument of &lt;a href=&quot;#defrecord/3&quot;&gt;&lt;code&gt;defrecord/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">По умолчанию Elixir использует имя записи как первый элемент кортежа (&amp;laquo;тег&amp;raquo;). Однако при определении записи можно указать другой тег, как в следующем примере, в котором мы используем &lt;code&gt;Customer&lt;/code&gt; в качестве второго аргумента &lt;a href=&quot;#defrecord/3&quot;&gt; &lt;code&gt;defrecord/3&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="fecf0c12d9669a08a42b3ae280cf7c91a67014c4" translate="yes" xml:space="preserve">
          <source>By default, a SIGTERM from the operating system will automatically translate to &lt;a href=&quot;system#stop/0&quot;&gt;&lt;code&gt;System.stop/0&lt;/code&gt;&lt;/a&gt;. You can also have more explicit control over operating system signals via the &lt;a href=&quot;http://www.erlang.org/doc/man/os.html#set_signal-2&quot;&gt;&lt;code&gt;:os.set_signal/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">По умолчанию SIGTERM из операционной системы автоматически преобразуется в &lt;a href=&quot;system#stop/0&quot;&gt; &lt;code&gt;System.stop/0&lt;/code&gt; &lt;/a&gt; . Вы также можете иметь более явный контроль над сигналами операционной системы с помощью функции &lt;a href=&quot;http://www.erlang.org/doc/man/os.html#set_signal-2&quot;&gt; &lt;code&gt;:os.set_signal/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6e330cb0e08f49bb3e2e3203bfbe1f8002483ca" translate="yes" xml:space="preserve">
          <source>By default, a very simple wrapper around OTP's &lt;code&gt;cover&lt;/code&gt; is used as a tool, but it can be overridden as follows:</source>
          <target state="translated">По умолчанию в качестве инструмента используется очень простая оболочка &lt;code&gt;cover&lt;/code&gt; OTP , но ее можно переопределить следующим образом:</target>
        </trans-unit>
        <trans-unit id="6a9b40c40cdba277f891d9a5de3cd80838db5f8e" translate="yes" xml:space="preserve">
          <source>By default, both options are &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">По умолчанию оба параметра &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f61d408262ba8f9487dfd034c6dee6a7168af604" translate="yes" xml:space="preserve">
          <source>By default, dependencies are fetched using the &lt;a href=&quot;https://hex.pm/&quot;&gt;Hex package manager&lt;/a&gt;:</source>
          <target state="translated">По умолчанию зависимости выбираются с помощью &lt;a href=&quot;https://hex.pm/&quot;&gt;диспетчера пакетов Hex&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="402ef1fd034af623e1289d8acec9995fa48d7ee2" translate="yes" xml:space="preserve">
          <source>By default, functions in the &lt;code&gt;IO&lt;/code&gt; module read from the standard input and write to the standard output. We can change that by passing, for example, &lt;code&gt;:stderr&lt;/code&gt; as an argument (in order to write to the standard error device):</source>
          <target state="translated">По умолчанию функции в модуле &lt;code&gt;IO&lt;/code&gt; читают из стандартного ввода и записывают в стандартный вывод. Мы можем изменить это, передав, например &lt;code&gt;:stderr&lt;/code&gt; в качестве аргумента (для записи на стандартное устройство ошибок):</target>
        </trans-unit>
        <trans-unit id="4ed5dc3aa06cbe6867cbdf252c51bacfce3e2d13" translate="yes" xml:space="preserve">
          <source>By default, it attempts to open the file and line using the &lt;code&gt;file:line&lt;/code&gt; notation. For example, if your editor is called &lt;code&gt;subl&lt;/code&gt;, it will open the file as:</source>
          <target state="translated">По умолчанию он пытается открыть файл и строку, используя нотацию &lt;code&gt;file:line&lt;/code&gt; . Например, если ваш редактор называется &lt;code&gt;subl&lt;/code&gt; , он откроет файл как:</target>
        </trans-unit>
        <trans-unit id="c829da1aa58fc9ca50895d425d34bf3c9320a86e" translate="yes" xml:space="preserve">
          <source>By default, it uses the default time zone database returned by &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt;&lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt;&lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt;&lt;/a&gt; which only handles &quot;Etc/UTC&quot; datetimes. Other time zone databases can be passed as argument or set globally. See the &quot;Time zone database&quot; section in the module docs.</source>
          <target state="translated">По умолчанию он использует базу данных часовых поясов по умолчанию, возвращаемую &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt; &lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt; &lt;/a&gt; , которая по умолчанию &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt; &lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; ,&lt;/a&gt; которая обрабатывает только даты &amp;laquo;Etc / UTC&amp;raquo;. Другие базы данных часовых поясов можно передать в качестве аргумента или установить глобально. См. Раздел &amp;laquo;База данных часовых поясов&amp;raquo; в документации модуля.</target>
        </trans-unit>
        <trans-unit id="e9dec0631c2a769f90c241506aa566e6abbea33c" translate="yes" xml:space="preserve">
          <source>By default, it uses the default time_zone returned by &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt;&lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt;&lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt;&lt;/a&gt; which only handles &quot;Etc/UTC&quot; datetimes. Other time zone databases can be passed as argument or set globally. See the &quot;Time zone database&quot; section in the module docs.</source>
          <target state="translated">По умолчанию он использует time_zone по умолчанию, возвращаемый &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt; &lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt; &lt;/a&gt; , который по умолчанию - &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt; &lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; ,&lt;/a&gt; который обрабатывает только дату и время &amp;laquo;Etc / UTC&amp;raquo;. Другие базы данных часовых поясов можно передать в качестве аргумента или установить глобально. См. Раздел &amp;laquo;База данных часовых поясов&amp;raquo; в документации модуля.</target>
        </trans-unit>
        <trans-unit id="9c13147ccfd35712f018a1f03ef31c9fbc8ad18d" translate="yes" xml:space="preserve">
          <source>By default, returns dates formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format by passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию возвращает даты в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20a23cbb3ef91c7f640f08773138ca20ec0122ed" translate="yes" xml:space="preserve">
          <source>By default, returns datetimes formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format by passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию возвращает дату и время в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d95b00ea148fc8f3ba77340beb5e5c599d4d480" translate="yes" xml:space="preserve">
          <source>By default, returns times formatted in the &quot;extended&quot; format, for human readability. It also supports the &quot;basic&quot; format by passing the &lt;code&gt;:basic&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию время возвращается в &amp;laquo;расширенном&amp;raquo; формате для удобства чтения. Он также поддерживает &quot;базовый&quot; формат, передавая опцию &lt;code&gt;:basic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79230ff1afddb9cbbca293f5d5dcc65fc02ebeae" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;device&lt;/code&gt; is the standard output.</source>
          <target state="translated">По умолчанию &lt;code&gt;device&lt;/code&gt; является стандартным выводом.</target>
        </trans-unit>
        <trans-unit id="ee717eb9f32dadabdfe51a1c183f392e83d0ac3e" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;device&lt;/code&gt; is the standard output. It returns &lt;code&gt;:ok&lt;/code&gt; if it succeeds.</source>
          <target state="translated">По умолчанию &lt;code&gt;device&lt;/code&gt; является стандартным выводом. Он возвращает &lt;code&gt;:ok&lt;/code&gt; если это удается.</target>
        </trans-unit>
        <trans-unit id="152a3dd3601b47a2fc040c22f7db42fbbe85286d" translate="yes" xml:space="preserve">
          <source>By default, the Erlang VM runs in interactive mode, where modules are loaded as needed. In embedded mode the opposite happens, as all modules need to be loaded upfront or explicitly.</source>
          <target state="translated">По умолчанию VM Erlang работает в интерактивном режиме,где модули загружаются по мере необходимости.Во встроенном режиме происходит обратное,так как все модули должны быть загружены заранее или явно.</target>
        </trans-unit>
        <trans-unit id="e13fb2c0bf54cc07fce73aa25bcefd707893e86c" translate="yes" xml:space="preserve">
          <source>By default, the contents of a &lt;code&gt;.iex.exs&lt;/code&gt; file in the same directory as you are starting IEx are automatically imported. See the section for &quot;.iex.exs&quot; in the &lt;a href=&quot;iex&quot;&gt;&lt;code&gt;IEx&lt;/code&gt;&lt;/a&gt; module docs for more information.</source>
          <target state="translated">По умолчанию автоматически импортируется содержимое файла &lt;code&gt;.iex.exs&lt;/code&gt; в том же каталоге, в котором вы запускаете IEx. Дополнительную информацию см. В разделе &quot;.iex.exs&quot; в &lt;a href=&quot;iex&quot;&gt; &lt;code&gt;IEx&lt;/code&gt; &lt;/a&gt; модуля IEx .</target>
        </trans-unit>
        <trans-unit id="cdfad8bcd03f7fb8e453f58547c4b335ce6d4024" translate="yes" xml:space="preserve">
          <source>By default, the environment of an application is an empty list. In a Mix project you can set that key in &lt;code&gt;application/0&lt;/code&gt;:</source>
          <target state="translated">По умолчанию среда приложения - это пустой список. В проекте Mix вы можете установить этот ключ в &lt;code&gt;application/0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e9135e0a0bea88ce661f36edb920759a95dcfb15" translate="yes" xml:space="preserve">
          <source>By default, the function &lt;code&gt;start_link&lt;/code&gt; is invoked on the given module. Overall, the default values for the options are:</source>
          <target state="translated">По умолчанию для данного модуля вызывается функция &lt;code&gt;start_link&lt;/code&gt; . В целом, значения параметров по умолчанию:</target>
        </trans-unit>
        <trans-unit id="98ef59d20d514a8b4d0714a0cd844e52ec39eb70" translate="yes" xml:space="preserve">
          <source>By default, the maximum number of atoms is &lt;code&gt;1_048_576&lt;/code&gt;. This limit can be raised or lowered using the VM option &lt;code&gt;+t&lt;/code&gt;.</source>
          <target state="translated">По умолчанию максимальное количество атомов &lt;code&gt;1_048_576&lt;/code&gt; . Этот предел может быть увеличен или уменьшен с помощью опции VM &lt;code&gt;+t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86266caa42c7dcf2b57a3b39797b6e7045f35720" translate="yes" xml:space="preserve">
          <source>By default, the number of stops in a breakpoint is 1. Any follow-up call won't stop the code execution unless another breakpoint is set.</source>
          <target state="translated">По умолчанию количество стопов в точке останова равно 1.Любой последующий вызов не остановит выполнение кода,если не установлена другая точка останова.</target>
        </trans-unit>
        <trans-unit id="20bf365c81414f9dd0f97d60214c83776220e730" translate="yes" xml:space="preserve">
          <source>By default, the patterns &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; do not match files starting with a dot &lt;code&gt;.&lt;/code&gt;. See the &lt;code&gt;:match_dot&lt;/code&gt; option in the &quot;Options&quot; section below.</source>
          <target state="translated">По умолчанию шаблоны &lt;code&gt;*&lt;/code&gt; и &lt;code&gt;?&lt;/code&gt; не соответствуют файлам, начинающимся с точки &lt;code&gt;.&lt;/code&gt; , См &lt;code&gt;:match_dot&lt;/code&gt; в разделе &amp;laquo;Параметры&amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="62f836c1ca1f7ffa0fe44a5d83b70dadbe30aead" translate="yes" xml:space="preserve">
          <source>By default, this returns &lt;a href=&quot;mix.shell.io&quot;&gt;&lt;code&gt;Mix.Shell.IO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">По умолчанию это возвращает &lt;a href=&quot;mix.shell.io&quot;&gt; &lt;code&gt;Mix.Shell.IO&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4039ff511c9b0c6e465576202aa05d0f1134bbb1" translate="yes" xml:space="preserve">
          <source>By default, this task starts the current application. If this is not desired, set the &lt;code&gt;:app&lt;/code&gt; configuration to nil.</source>
          <target state="translated">По умолчанию эта задача запускает текущее приложение. Если это нежелательно, установите для параметра &lt;code&gt;:app&lt;/code&gt; значение nil.</target>
        </trans-unit>
        <trans-unit id="76c88cd6bc21370893bb9ca4286fa947e3185c6d" translate="yes" xml:space="preserve">
          <source>By forbidding hierarchies in favor of named setups, it is straightforward for the developer to glance at each describe block and know exactly the setup steps involved.</source>
          <target state="translated">Запрещая иерархии в пользу именованных установок,разработчик может просто взглянуть на каждый описываемый блок и точно знать,какие этапы установки ему нужны.</target>
        </trans-unit>
        <trans-unit id="be8729ba3d997306cc7c2732e9d5715d7b733113" translate="yes" xml:space="preserve">
          <source>By modeling IO devices with processes, the Erlang</source>
          <target state="translated">Моделируя устройства ввода-вывода с процессами,Эрланг</target>
        </trans-unit>
        <trans-unit id="20fbb45a951d34847b2361b232cf1603416a2b67" translate="yes" xml:space="preserve">
          <source>By registering an attribute, a developer is able to customize how Elixir will store and accumulate the attribute values.</source>
          <target state="translated">Регистрируя атрибут,разработчик может настроить то,как Elixir будет хранить и накапливать значения атрибутов.</target>
        </trans-unit>
        <trans-unit id="3a533dc2f30d084da0ee799f07f2509ceacdcbfd" translate="yes" xml:space="preserve">
          <source>By specifying such dependencies, Mix will automatically install Hex (if it wasn't previously installed) and download a package suitable to your project. Note Hex expects the dependency requirement to always be given and it will warn otherwise.</source>
          <target state="translated">Указав такие зависимости,Mix автоматически установит Hex (если он не был ранее установлен)и загрузит пакет,подходящий для вашего проекта.Обратите внимание,что Hex ожидает,что требования к зависимостям будут указаны всегда,и предупредит об обратном.</target>
        </trans-unit>
        <trans-unit id="28e75c4b609dc334804d7f657136c8679b6ee20a" translate="yes" xml:space="preserve">
          <source>By starting a new IEx session, we can now define our tests and run them:</source>
          <target state="translated">Начав новую IEx-сессию,мы можем определить наши тесты и запустить их:</target>
        </trans-unit>
        <trans-unit id="6ed40a81a21966a2166b56cae05accc09ed2523e" translate="yes" xml:space="preserve">
          <source>By tagging a test, the tag value can be accessed in the context, allowing the developer to customize the test. Let's see an example:</source>
          <target state="translated">Пометив тест,можно получить доступ к значению тега в контексте,что позволяет разработчику настроить тест.Рассмотрим пример:</target>
        </trans-unit>
        <trans-unit id="c72eb5d7c9a45f27e69792c0b3ad14f6fb4125b9" translate="yes" xml:space="preserve">
          <source>By the way, since we are now returning &lt;code&gt;{:error, :not_found}&lt;/code&gt;, we should amend the &lt;code&gt;write_line/2&lt;/code&gt; function in &lt;code&gt;KVServer&lt;/code&gt; to print such error as well:</source>
          <target state="translated">Кстати, поскольку теперь мы возвращаем &lt;code&gt;{:error, :not_found}&lt;/code&gt; , нам следует изменить &lt;code&gt;write_line/2&lt;/code&gt; в &lt;code&gt;KVServer&lt;/code&gt; , чтобы она также выводила такую ​​ошибку:</target>
        </trans-unit>
        <trans-unit id="afd2b04041c5023417e7856e0350ac915e93bf70" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt;, modules get a default implementation of &lt;a href=&quot;#c:stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt; that ignores its argument and returns &lt;code&gt;:ok&lt;/code&gt;, but it can be overridden.</source>
          <target state="translated">Используя &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; , модули получают реализацию по умолчанию &lt;a href=&quot;#c:stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; ,&lt;/a&gt; которая игнорирует свой аргумент и возвращает &lt;code&gt;:ok&lt;/code&gt; , но его можно переопределить.</target>
        </trans-unit>
        <trans-unit id="3f1539bdede002cb03f8125233616b6cf3691dc6" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;~S&lt;/code&gt;, this problem can be avoided altogether:</source>
          <target state="translated">Используя &lt;code&gt;~S&lt;/code&gt; , можно полностью избежать этой проблемы:</target>
        </trans-unit>
        <trans-unit id="ace2af82bde9ed60e0b2eb329287e9e1f1b8c284" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;alias/2&lt;/code&gt; directive, we are changing the atom the alias expands to.</source>
          <target state="translated">Используя директиву &lt;code&gt;alias/2&lt;/code&gt; , мы меняем атом, до которого расширяется псевдоним.</target>
        </trans-unit>
        <trans-unit id="3f1405ee5f9cba8a93cc7f0b13abb38e7a60f2e5" translate="yes" xml:space="preserve">
          <source>By using the functions in this module one can specify the children to be used under a supervisor, started with &lt;a href=&quot;supervisor#start_link/2&quot;&gt;&lt;code&gt;Supervisor.start_link/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Используя функции в этом модуле, можно указать дочерние элементы, которые будут использоваться под супервизором, запущенным с &lt;a href=&quot;supervisor#start_link/2&quot;&gt; &lt;code&gt;Supervisor.start_link/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2c4df2c57a78ef2bacad336bf3270c7691b6b4a9" translate="yes" xml:space="preserve">
          <source>By using this module, the callbacks and assertions available for regular test cases will also be available.</source>
          <target state="translated">С помощью этого модуля будут также доступны обратные вызовы и утверждения,доступные для обычных тестовых случаев.</target>
        </trans-unit>
        <trans-unit id="b1570089a3b884d047ed831c82108ff3c320012d" translate="yes" xml:space="preserve">
          <source>Byte order marks</source>
          <target state="translated">Знаки байтового заказа</target>
        </trans-unit>
        <trans-unit id="eb1ba157957ddfdacc5b18a96c80b83156efc283" translate="yes" xml:space="preserve">
          <source>CLI exits</source>
          <target state="translated">Выходы CLI</target>
        </trans-unit>
        <trans-unit id="e0116c5110dfc390223e2cf0357726dcea588606" translate="yes" xml:space="preserve">
          <source>CNT - total number of invocations of the given function</source>
          <target state="translated">CNT-общее число вызовов данной функции</target>
        </trans-unit>
        <trans-unit id="5a1f679c89e760e380af7bd2f44ba411cf25722e" translate="yes" xml:space="preserve">
          <source>Calculates the bitwise AND of its arguments.</source>
          <target state="translated">Вычисляет битовые И его аргументы.</target>
        </trans-unit>
        <trans-unit id="84e4f0eeebc650c4d2644607d336f04cbb23d438" translate="yes" xml:space="preserve">
          <source>Calculates the bitwise NOT of its argument.</source>
          <target state="translated">Вычисляет битовый NOT своего аргумента.</target>
        </trans-unit>
        <trans-unit id="82c78143ba33e97d749e3529f91d872adcb213b4" translate="yes" xml:space="preserve">
          <source>Calculates the bitwise OR of its arguments.</source>
          <target state="translated">Вычисляет битовое &quot;ИЛИ&quot; его аргументов.</target>
        </trans-unit>
        <trans-unit id="66848a208113faeb7ce19122ab8c270554db335f" translate="yes" xml:space="preserve">
          <source>Calculates the bitwise XOR of its arguments.</source>
          <target state="translated">Вычисляет битовый XOR своих аргументов.</target>
        </trans-unit>
        <trans-unit id="872e2eaef65c0a774ab638167d32944d779fe0db" translate="yes" xml:space="preserve">
          <source>Calculates the day and era from the given &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt;.</source>
          <target state="translated">Вычисляет день и эру по заданному &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59531be2cfe81760a8bcb2ad77fdb94258d79267" translate="yes" xml:space="preserve">
          <source>Calculates the day of the week from the given &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt;.</source>
          <target state="translated">Вычисляет день недели по заданному &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="977d26fb6d2c6237ad910b694ef77ece58a18321" translate="yes" xml:space="preserve">
          <source>Calculates the day of the week of a given &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="translated">Вычисляет день недели заданной &lt;code&gt;date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48ab91160e20cbcc7db86d12c7c5d29ffe417d69" translate="yes" xml:space="preserve">
          <source>Calculates the day of the year from the given &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt;.</source>
          <target state="translated">Вычисляет день года из заданного &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69bb790c7a94873e3a63a87bed9ab85d41e51ad2" translate="yes" xml:space="preserve">
          <source>Calculates the day of the year of a given &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="translated">Вычисляет день года указанной &lt;code&gt;date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51f486811d7efdb5f59099bf0821d88cdd0fcdb3" translate="yes" xml:space="preserve">
          <source>Calculates the day-of-era and era for a given calendar &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="translated">Вычисляет день эры и эру для заданной календарной &lt;code&gt;date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31ffe77841021e9cd0d8d28a2ff0eb90596f7c2f" translate="yes" xml:space="preserve">
          <source>Calculates the difference between two dates, in a full number of days.</source>
          <target state="translated">Вычисляет разницу между двумя датами,за полное количество дней.</target>
        </trans-unit>
        <trans-unit id="1e22629218c7c2524d719a6aafb26320a9e33d6f" translate="yes" xml:space="preserve">
          <source>Calculates the quarter of the year from the given &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt;.</source>
          <target state="translated">Вычисляет квартал года по заданному &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ced99eb284fbbc4addff1f8982435da702405206" translate="yes" xml:space="preserve">
          <source>Calculates the quarter of the year of a given &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="translated">Вычисляет квартал года заданной &lt;code&gt;date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38a63816978a3500d8832c7b1f94a4f1bae97c63" translate="yes" xml:space="preserve">
          <source>Calculates the result of an arithmetic left bitshift.</source>
          <target state="translated">Вычисляет результат арифметического сдвига влево.</target>
        </trans-unit>
        <trans-unit id="4efe33d70304152372f10ae59d4a94377d6ac6d6" translate="yes" xml:space="preserve">
          <source>Calculates the result of an arithmetic right bitshift.</source>
          <target state="translated">Вычисляет результат арифметического сдвига вправо.</target>
        </trans-unit>
        <trans-unit id="df000a9c3e0cbb692af58f43cb56584844928596" translate="yes" xml:space="preserve">
          <source>Calculates the year and era from the given &lt;code&gt;year&lt;/code&gt;.</source>
          <target state="translated">Вычисляет год и эру для данного &lt;code&gt;year&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b862a12e39e020b060e66f5c4acab9c33e37a6" translate="yes" xml:space="preserve">
          <source>Calculates the year-of-era and era for a given calendar year.</source>
          <target state="translated">Вычисляет год и эпоху для данного календарного года.</target>
        </trans-unit>
        <trans-unit id="adab5090ac6a1b7b5420faac7be86c41721ba27c" translate="yes" xml:space="preserve">
          <source>Calendar</source>
          <target state="translated">Calendar</target>
        </trans-unit>
        <trans-unit id="d2846e6231c1d94a724f86fb32fe4ede252c7e62" translate="yes" xml:space="preserve">
          <source>Calendar &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Календарное &lt;small&gt;поведение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ef9e9ae658ec14ea6882de0157e1d6807db80ee5" translate="yes" xml:space="preserve">
          <source>Calendar.ISO</source>
          <target state="translated">Calendar.ISO</target>
        </trans-unit>
        <trans-unit id="f5c6e67829066a800fc5a7db8149d3747aa50714" translate="yes" xml:space="preserve">
          <source>Calendar.TimeZoneDatabase</source>
          <target state="translated">Calendar.TimeZoneDatabase</target>
        </trans-unit>
        <trans-unit id="97fb668d95f303af428dbebc65b8e7dcb0c6a7d1" translate="yes" xml:space="preserve">
          <source>Calendar.TimeZoneDatabase &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Calendar.TimeZoneDatabase &lt;small&gt;поведение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d8efcf40cde9eb544b2f246797c94807656d1da5" translate="yes" xml:space="preserve">
          <source>Calendar.UTCOnlyTimeZoneDatabase</source>
          <target state="translated">Calendar.UTCOnlyTimeZoneDatabase</target>
        </trans-unit>
        <trans-unit id="c7ed9654ce3205b4d11f855df757291b19bd05d6" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;enum#to_list/1&quot;&gt;&lt;code&gt;Enum.to_list/1&lt;/code&gt;&lt;/a&gt; on the second argument before hand (v1.0)</source>
          <target state="translated">Вызов &lt;a href=&quot;enum#to_list/1&quot;&gt; &lt;code&gt;Enum.to_list/1&lt;/code&gt; &lt;/a&gt; для второго аргумента перед рукой (v1.0)</target>
        </trans-unit>
        <trans-unit id="0ec5483fd7a38077d057ae7802d3cb47d7ef8aa0" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;eex.engine#c:handle_begin/1&quot;&gt;&lt;code&gt;EEx.Engine.handle_begin/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Реализация обратного вызова для &lt;a href=&quot;eex.engine#c:handle_begin/1&quot;&gt; &lt;code&gt;EEx.Engine.handle_begin/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c10d1f66343bff0367facdfabc09309b1db76d10" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;eex.engine#c:handle_body/1&quot;&gt;&lt;code&gt;EEx.Engine.handle_body/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Реализация обратного вызова для &lt;a href=&quot;eex.engine#c:handle_body/1&quot;&gt; &lt;code&gt;EEx.Engine.handle_body/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="809f4f9c22dd6ee3ec66bf463f931344c3f340dd" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;eex.engine#c:handle_end/1&quot;&gt;&lt;code&gt;EEx.Engine.handle_end/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Реализация обратного вызова для &lt;a href=&quot;eex.engine#c:handle_end/1&quot;&gt; &lt;code&gt;EEx.Engine.handle_end/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b8c930f53b6ae5c6504b04c2e084c2c472b9f22" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;eex.engine#c:handle_expr/3&quot;&gt;&lt;code&gt;EEx.Engine.handle_expr/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Реализация обратного вызова для &lt;a href=&quot;eex.engine#c:handle_expr/3&quot;&gt; &lt;code&gt;EEx.Engine.handle_expr/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d538426bfe18e63fe5c0d95dab134b723574484b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;eex.engine#c:handle_text/2&quot;&gt;&lt;code&gt;EEx.Engine.handle_text/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Реализация обратного вызова для &lt;a href=&quot;eex.engine#c:handle_text/2&quot;&gt; &lt;code&gt;EEx.Engine.handle_text/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f0b1ed3855a5c3236f255f01ab409ddde0f8818" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;eex.engine#c:init/1&quot;&gt;&lt;code&gt;EEx.Engine.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Реализация обратного вызова для &lt;a href=&quot;eex.engine#c:init/1&quot;&gt; &lt;code&gt;EEx.Engine.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd7ab7f77ceb6a2945635de1386a402a7ef6ee53" translate="yes" xml:space="preserve">
          <source>Callback invoked after code upgrade, if the application environment has changed.</source>
          <target state="translated">Обратный вызов после обновления кода,если прикладная среда изменилась.</target>
        </trans-unit>
        <trans-unit id="9fbe07680545fab8c38f764f99ebaad2d192e475" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades.</source>
          <target state="translated">Обратный вызов для запуска супервизора и во время обновления горячего кода.</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="f6c42f7bb51b73d4b211ee83945d9879bce48368" translate="yes" xml:space="preserve">
          <source>Callbacks registered first will run last.</source>
          <target state="translated">Обратные вызовы,зарегистрированные первыми,будут выполняться последними.</target>
        </trans-unit>
        <trans-unit id="66201e1b84a1d1a6ff96f16fa8793345ed84e782" translate="yes" xml:space="preserve">
          <source>Callbacks registered first will run last. Any overridable definition will be made concrete before the first callback runs. A definition may be made overridable again in another before compile callback and it will be made concrete one last time after after all callbacks run.</source>
          <target state="translated">Обратные вызовы,зарегистрированные первыми,будут выполняться последними.Любое переопределяемое определение будет сделано конкретным до запуска первого обратного вызова.Определение может быть сделано переопределяемым снова в другом определении перед компиляцией обратного вызова,и оно будет сделано конкретным в последний раз после того,как все обратные вызовы будут выполнены.</target>
        </trans-unit>
        <trans-unit id="d85b3a76866da7a60448467248c2cfd125983166" translate="yes" xml:space="preserve">
          <source>Callbacks set with &lt;a href=&quot;#after_suite/1&quot;&gt;&lt;code&gt;after_suite/1&lt;/code&gt;&lt;/a&gt; must accept a single argument, which is a map containing the results of the test suite's execution.</source>
          <target state="translated">&lt;a href=&quot;#after_suite/1&quot;&gt; &lt;code&gt;after_suite/1&lt;/code&gt; &lt;/a&gt; установленные с помощью after_suite / 1, должны принимать один аргумент, который представляет собой карту, содержащую результаты выполнения набора тестов.</target>
        </trans-unit>
        <trans-unit id="0faabceba35fd7a48636a9f242b76d779503989b" translate="yes" xml:space="preserve">
          <source>Called after an application has been stopped.</source>
          <target state="translated">Вызывается после того,как приложение было остановлено.</target>
        </trans-unit>
        <trans-unit id="63380a742a1ed6d808719b27ab046bd5083024b3" translate="yes" xml:space="preserve">
          <source>Called at the beginning of every template.</source>
          <target state="translated">Вызывается в начале каждого шаблона.</target>
        </trans-unit>
        <trans-unit id="c3e6c4eb21e116160c46b9548a425a642cdad1e5" translate="yes" xml:space="preserve">
          <source>Called at the end of every template.</source>
          <target state="translated">Вызывается в конце каждого шаблона.</target>
        </trans-unit>
        <trans-unit id="442535ed506cf7f3e8f4628a3a6c0adb928772c4" translate="yes" xml:space="preserve">
          <source>Called before stopping the application.</source>
          <target state="translated">Вызывается перед остановкой приложения.</target>
        </trans-unit>
        <trans-unit id="e32234ad249148d3b937bfee926f036a291cfa48" translate="yes" xml:space="preserve">
          <source>Called for the dynamic/code parts of a template.</source>
          <target state="translated">Вызывается динамическая/кодовая часть шаблона.</target>
        </trans-unit>
        <trans-unit id="03a90d4fa846b3199574f48f2a69056a02070095" translate="yes" xml:space="preserve">
          <source>Called for the text/static parts of a template.</source>
          <target state="translated">Вызываются текстовые/статические части шаблона.</target>
        </trans-unit>
        <trans-unit id="efdaf943b92658db4a3efff473253de2372bcf86" translate="yes" xml:space="preserve">
          <source>Called from &lt;a href=&quot;exception#blame/3&quot;&gt;&lt;code&gt;Exception.blame/3&lt;/code&gt;&lt;/a&gt; to augment the exception struct.</source>
          <target state="translated">Вызывается из &lt;a href=&quot;exception#blame/3&quot;&gt; &lt;code&gt;Exception.blame/3&lt;/code&gt; &lt;/a&gt; для расширения структуры исключения.</target>
        </trans-unit>
        <trans-unit id="f0ca56a7a06bc47a8cf3a0a7612d281facc7aec4" translate="yes" xml:space="preserve">
          <source>Called when an application is started.</source>
          <target state="translated">Вызывается при запуске приложения.</target>
        </trans-unit>
        <trans-unit id="b8f234a1e4d68947a81625776c2d1d09281b09d9" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;kernel.specialforms#super/1&quot;&gt;&lt;code&gt;super/1&lt;/code&gt;&lt;/a&gt; on GenServer callbacks</source>
          <target state="translated">Вызов &lt;a href=&quot;kernel.specialforms#super/1&quot;&gt; &lt;code&gt;super/1&lt;/code&gt; &lt;/a&gt; при обратных вызовах GenServer</target>
        </trans-unit>
        <trans-unit id="351d7d149e48159d87db220bf823be28fe3f8023" translate="yes" xml:space="preserve">
          <source>Calling anonymous functions uses the dot in the AST with a single argument, mirroring the fact the function name is &quot;missing&quot; from right side of the dot:</source>
          <target state="translated">При вызове анонимных функций используется точка в AST с единственным аргументом,отражающим тот факт,что имя функции &quot;отсутствует&quot; с правой стороны точки:</target>
        </trans-unit>
        <trans-unit id="483676a4323ff474475176f21ccdb14d6acd93be" translate="yes" xml:space="preserve">
          <source>Calling this new &lt;code&gt;return_length/0&lt;/code&gt; will still return &lt;code&gt;3&lt;/code&gt; as result.</source>
          <target state="translated">Вызов этого нового &lt;code&gt;return_length/0&lt;/code&gt; все равно вернет &lt;code&gt;3&lt;/code&gt; в качестве результата.</target>
        </trans-unit>
        <trans-unit id="2f70240a7a73a837a65004029341593ba5615c20" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#import/2&quot;&gt;&lt;code&gt;import/2&lt;/code&gt;&lt;/a&gt; with the given arguments, but only if the module is available.</source>
          <target state="translated">Вызывает &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#import/2&quot;&gt; &lt;code&gt;import/2&lt;/code&gt; &lt;/a&gt; с заданными аргументами, но только если модуль доступен.</target>
        </trans-unit>
        <trans-unit id="32b79b53c10b7818f97870494be94fb3c414206b" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#use/2&quot;&gt;&lt;code&gt;use/2&lt;/code&gt;&lt;/a&gt; with the given arguments, but only if the module is available.</source>
          <target state="translated">Вызов &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#use/2&quot;&gt; &lt;code&gt;use/2&lt;/code&gt; &lt;/a&gt; с заданными аргументами, но только если модуль доступен.</target>
        </trans-unit>
        <trans-unit id="aa43ce86529e7a9b7d32993a0bcab9a4c00c893f" translate="yes" xml:space="preserve">
          <source>Calls all servers locally registered as &lt;code&gt;name&lt;/code&gt; at the specified &lt;code&gt;nodes&lt;/code&gt;.</source>
          <target state="translated">Вызывает все серверы, локально зарегистрированные как &lt;code&gt;name&lt;/code&gt; на указанных &lt;code&gt;nodes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="973a2b37cbb904055d8b2cb9085515443a94fcfb" translate="yes" xml:space="preserve">
          <source>Calls inside &lt;a href=&quot;#try/1&quot;&gt;&lt;code&gt;try/1&lt;/code&gt;&lt;/a&gt; are not tail recursive since the VM needs to keep the stacktrace in case an exception happens. To retrieve the stacktrace, access &lt;a href=&quot;#__STACKTRACE__/0&quot;&gt;&lt;code&gt;__STACKTRACE__/0&lt;/code&gt;&lt;/a&gt; inside the &lt;code&gt;rescue&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt; clause.</source>
          <target state="translated">Вызовы внутри &lt;a href=&quot;#try/1&quot;&gt; &lt;code&gt;try/1&lt;/code&gt; &lt;/a&gt; не являются хвостовыми рекурсивными, поскольку виртуальная машина должна сохранять трассировку стека в случае возникновения исключения. Чтобы получить трассировку стека, обратитесь к &lt;a href=&quot;#__STACKTRACE__/0&quot;&gt; &lt;code&gt;__STACKTRACE__/0&lt;/code&gt; &lt;/a&gt; внутри предложения &lt;code&gt;rescue&lt;/code&gt; или &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e45c3b1dc9f022a7ca2feaa09407ac0c9c46f51" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;exception/1&lt;/code&gt; function on the given argument (which has to be a module name like &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;) passing &lt;code&gt;attrs&lt;/code&gt; as the attributes in order to retrieve the exception struct.</source>
          <target state="translated">Вызывает функцию &lt;code&gt;exception/1&lt;/code&gt; для данного аргумента (который должен быть именем модуля, например &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; ), передавая &lt;code&gt;attrs&lt;/code&gt; в качестве атрибутов, чтобы получить структуру исключения.</target>
        </trans-unit>
        <trans-unit id="cf2cbc473a24499b6038ffab5fe859228e498845" translate="yes" xml:space="preserve">
          <source>Calls the overridden function when overriding it with &lt;a href=&quot;kernel#defoverridable/1&quot;&gt;&lt;code&gt;Kernel.defoverridable/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вызывает переопределенную функцию при переопределении ее с помощью &lt;a href=&quot;kernel#defoverridable/1&quot;&gt; &lt;code&gt;Kernel.defoverridable/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4da0eb7496c45b4f2e06c9a592ed791d6921bdac" translate="yes" xml:space="preserve">
          <source>Calls the provided &lt;code&gt;empty_fallback&lt;/code&gt; function and returns its value if &lt;code&gt;enumerable&lt;/code&gt; is empty. The default &lt;code&gt;empty_fallback&lt;/code&gt; raises &lt;a href=&quot;enum.emptyerror&quot;&gt;&lt;code&gt;Enum.EmptyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вызывает предоставленную функцию &lt;code&gt;empty_fallback&lt;/code&gt; и возвращает ее значение, если &lt;code&gt;enumerable&lt;/code&gt; пусто. По умолчанию &lt;code&gt;empty_fallback&lt;/code&gt; вызывает &lt;a href=&quot;enum.emptyerror&quot;&gt; &lt;code&gt;Enum.EmptyError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8341f9c0dc9a43feb95e575c7d1ff19857e6cc50" translate="yes" xml:space="preserve">
          <source>Can be used to collect additional information about the exception or do some additional expensive computation.</source>
          <target state="translated">Может использоваться для сбора дополнительной информации об исключении или для дополнительных дорогостоящих вычислений.</target>
        </trans-unit>
        <trans-unit id="e334a2ce3108e0febeb57230bd2cb23a051d7fbe" translate="yes" xml:space="preserve">
          <source>Can return values to be merged into the &lt;code&gt;context&lt;/code&gt;, to set up the state for tests. For more details, see the &quot;Context&quot; section shown above.</source>
          <target state="translated">Может возвращать значения для объединения в &lt;code&gt;context&lt;/code&gt; , чтобы настроить состояние для тестов. Дополнительные сведения см. В разделе &amp;laquo;Контекст&amp;raquo;, показанном выше.</target>
        </trans-unit>
        <trans-unit id="0242ecee6ab6bf770b987438f3bfcd7060632331" translate="yes" xml:space="preserve">
          <source>Can return values to be merged into the context, to set up the state for tests. For more details, see the &quot;Context&quot; section shown above.</source>
          <target state="translated">Может возвращать значения для объединения в контекст,чтобы настроить состояние для тестов.Подробнее см.раздел &quot;Контекст&quot;,показанный выше.</target>
        </trans-unit>
        <trans-unit id="8716b1b959af99def374d9b25e8ba6c67f8e0642" translate="yes" xml:space="preserve">
          <source>Cancels a timer returned by &lt;a href=&quot;#send_after/3&quot;&gt;&lt;code&gt;send_after/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Отменяет таймер, возвращаемый &lt;a href=&quot;#send_after/3&quot;&gt; &lt;code&gt;send_after/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="772a4bcb6564702a3954bd84a80b8688f24e0663" translate="yes" xml:space="preserve">
          <source>Capture</source>
          <target state="translated">Capture</target>
        </trans-unit>
        <trans-unit id="7c8134e39c2398e58f343200b0596b236c139932" translate="yes" xml:space="preserve">
          <source>Captures</source>
          <target state="translated">Captures</target>
        </trans-unit>
        <trans-unit id="ee795a7fa93d1d3588ea4bf78c087bb3df764e96" translate="yes" xml:space="preserve">
          <source>Captures or creates an anonymous function.</source>
          <target state="translated">Захватывает или создает анонимную функцию.</target>
        </trans-unit>
        <trans-unit id="a1bd477e88eb362e3b6ca6a4a29b2702d3015ff6" translate="yes" xml:space="preserve">
          <source>Captures the given function.</source>
          <target state="translated">Захватывает данную функцию.</target>
        </trans-unit>
        <trans-unit id="aa83b0db7571a9b488496ed9d08b379219be7ce6" translate="yes" xml:space="preserve">
          <source>Carefully stops the Erlang runtime system.</source>
          <target state="translated">Аккуратно останавливает работу системы Erlang.</target>
        </trans-unit>
        <trans-unit id="3de7c7c7fd9020f41906a55076bb7100b700d996" translate="yes" xml:space="preserve">
          <source>Case, Callbacks and Assertions</source>
          <target state="translated">Дело,Обратные вызовы и утверждения</target>
        </trans-unit>
        <trans-unit id="50ae5b37c236ae7f885890b3cfa7f117f01aadb1" translate="yes" xml:space="preserve">
          <source>CaseClauseError</source>
          <target state="translated">CaseClauseError</target>
        </trans-unit>
        <trans-unit id="fdf5275c868ecbada652e512ffc1fdefc861f736" translate="yes" xml:space="preserve">
          <source>CaseClauseError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">CaseClauseError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f3d4dffe4c9ebac969ee4f02157e5740619b3299" translate="yes" xml:space="preserve">
          <source>Casing</source>
          <target state="translated">Casing</target>
        </trans-unit>
        <trans-unit id="7ed67e7a3ac2c5f0b4ebfcbd5516cf4cb07f36ce" translate="yes" xml:space="preserve">
          <source>Casts all servers locally registered as &lt;code&gt;name&lt;/code&gt; at the specified nodes.</source>
          <target state="translated">Приводит все серверы, локально зарегистрированные как &lt;code&gt;name&lt;/code&gt; на указанных узлах.</target>
        </trans-unit>
        <trans-unit id="a338872f01e247b728456edb7f0b896e06d6f40c" translate="yes" xml:space="preserve">
          <source>Catching thrown values</source>
          <target state="translated">Поймать брошенные значения</target>
        </trans-unit>
        <trans-unit id="b1d7430e3b7ebe0c9345e291ab7d148a7c0b4616" translate="yes" xml:space="preserve">
          <source>Catching values of any kind</source>
          <target state="translated">Уловительные значения любого рода</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="fb1ca31f7b105b5db3d68fcceddbb09d728d0d20" translate="yes" xml:space="preserve">
          <source>Change the assertion in &lt;code&gt;test/kv_test.exs&lt;/code&gt; to the following:</source>
          <target state="translated">Измените утверждение в &lt;code&gt;test/kv_test.exs&lt;/code&gt; на следующее:</target>
        </trans-unit>
        <trans-unit id="4a4854b634f3d16dfe0416ab69448c4d70e815bc" translate="yes" xml:space="preserve">
          <source>Changes the &lt;code&gt;mode&lt;/code&gt; for a given &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">Изменяет &lt;code&gt;mode&lt;/code&gt; для данного &lt;code&gt;file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e48df922da0b08e16af81da8ffa6075f757955f" translate="yes" xml:space="preserve">
          <source>Changes the current Mix environment to &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">Изменяет текущую среду Mix на &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="441d60b43c53fc069fbc6a19e176cade2240e17d" translate="yes" xml:space="preserve">
          <source>Changes the current Mix target to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">Изменяет текущую цель микса на &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d07d3f0b91ed23185354c26ccbebfdb380e8f21" translate="yes" xml:space="preserve">
          <source>Changes the current directory to the given &lt;code&gt;path&lt;/code&gt;, executes the given function and then reverts back to the previous path regardless of whether there is an exception.</source>
          <target state="translated">Изменяет текущий каталог на заданный &lt;code&gt;path&lt;/code&gt; , выполняет заданную функцию и затем возвращается к предыдущему пути независимо от того, существует ли исключение.</target>
        </trans-unit>
        <trans-unit id="81244f5feba2a2ae578c67d52abe75adcd2c03c4" translate="yes" xml:space="preserve">
          <source>Changes the current working directory to the given path.</source>
          <target state="translated">Изменяет текущий рабочий каталог на заданный путь.</target>
        </trans-unit>
        <trans-unit id="dca7438f013e9357695dd4f7bbf67adfc6043e3a" translate="yes" xml:space="preserve">
          <source>Changes the filename used in stacktraces for the function or macro that follows the attribute, such as:</source>
          <target state="translated">Изменяет имя файла,используемое в стеке для функции или макроса,следующего за атрибутом,например:</target>
        </trans-unit>
        <trans-unit id="d49019da62eaa7b23d02a05fcc1a34795c0447dd" translate="yes" xml:space="preserve">
          <source>Changes the group given by the group ID &lt;code&gt;gid&lt;/code&gt; for a given &lt;code&gt;file&lt;/code&gt;. Returns &lt;code&gt;:ok&lt;/code&gt; on success, or &lt;code&gt;{:error, reason}&lt;/code&gt; on failure.</source>
          <target state="translated">Изменяет группу, заданную идентификатором группы &lt;code&gt;gid&lt;/code&gt; для данного &lt;code&gt;file&lt;/code&gt; . Возвращает &lt;code&gt;:ok&lt;/code&gt; в случае успеха или &lt;code&gt;{:error, reason}&lt;/code&gt; в случае неудачи.</target>
        </trans-unit>
        <trans-unit id="f8403cc6f3117f7214b1f5348fc78e244e7765be" translate="yes" xml:space="preserve">
          <source>Changes the list of command line arguments. Use it with caution, as it destroys any previous argv information.</source>
          <target state="translated">Изменяет список аргументов командной строки.Используйте его с осторожностью,так как он уничтожает любую предыдущую информацию об аргументах.</target>
        </trans-unit>
        <trans-unit id="f78fe574885e1218644c8eb3ec719b0f72557786" translate="yes" xml:space="preserve">
          <source>Changes the owner given by the user ID &lt;code&gt;uid&lt;/code&gt; for a given &lt;code&gt;file&lt;/code&gt;. Returns &lt;code&gt;:ok&lt;/code&gt; on success, or &lt;code&gt;{:error, reason}&lt;/code&gt; on failure.</source>
          <target state="translated">Изменяет владельца, заданного идентификатором пользователя &lt;code&gt;uid&lt;/code&gt; для данного &lt;code&gt;file&lt;/code&gt; . Возвращает &lt;code&gt;:ok&lt;/code&gt; в случае успеха или &lt;code&gt;{:error, reason}&lt;/code&gt; в случае неудачи.</target>
        </trans-unit>
        <trans-unit id="4a5a85be01bff52b55691c3e0e53685cf643afeb" translate="yes" xml:space="preserve">
          <source>Changes the time zone of a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Изменяет часовой пояс &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="284d1f54427e012e84088102ed1bc9f15dfbd47a" translate="yes" xml:space="preserve">
          <source>Char lists</source>
          <target state="translated">Шар-листы</target>
        </trans-unit>
        <trans-unit id="bf238be65bb5e7ebb05fdca2c63f71cc0a076a1a" translate="yes" xml:space="preserve">
          <source>Character classes</source>
          <target state="translated">Классы характера</target>
        </trans-unit>
        <trans-unit id="c51df18f8947669b0b6631dd0793cff088cde7c4" translate="yes" xml:space="preserve">
          <source>Chardata</source>
          <target state="translated">Chardata</target>
        </trans-unit>
        <trans-unit id="6995b6a69e7114b0d9f12f1dd5c41634206726e5" translate="yes" xml:space="preserve">
          <source>Charlists</source>
          <target state="translated">Charlists</target>
        </trans-unit>
        <trans-unit id="6c06cb03cc85ac5b58f555f3b3b633f044c1c86a" translate="yes" xml:space="preserve">
          <source>Charlists are always represented as themselves in the AST.</source>
          <target state="translated">Шарлисты всегда представлены как сами по себе в АСТ.</target>
        </trans-unit>
        <trans-unit id="29fe510ad38d3c89583dde7f48d5a6ec1fc330d4" translate="yes" xml:space="preserve">
          <source>Charlists in Elixir are written in single-quotes, such as &lt;code&gt;'foo'&lt;/code&gt;. Any single-quote inside the string must be escaped with &lt;code&gt;\&lt;/code&gt;. Charlists are made of non-negative integers, where each integer represents a Unicode code point.</source>
          <target state="translated">Чарлисты в Elixir заключаются в одинарные кавычки, например &lt;code&gt;'foo'&lt;/code&gt; . Любая одинарная кавычка внутри строки должна быть экранирована символом &lt;code&gt;\&lt;/code&gt; . Charlists состоят из неотрицательных целых чисел, где каждое целое число представляет собой кодовую точку Unicode.</target>
        </trans-unit>
        <trans-unit id="692ca546041e0defb9df176c51dca7a9351edd04" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#compiler_options/1&quot;&gt;&lt;code&gt;compiler_options/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#compiler_options/1&quot;&gt; &lt;code&gt;compiler_options/1&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="580e68b2106988dd01d5c2d7c8cd6275df6bffa6" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#def/2&quot;&gt;&lt;code&gt;def/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#def/2&quot;&gt; &lt;code&gt;def/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="95077ccb031fbcb95d39307f645abe3b02d020d7" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#def/2&quot;&gt;&lt;code&gt;def/2&lt;/code&gt;&lt;/a&gt; for rules on naming and default arguments.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#def/2&quot;&gt; &lt;code&gt;def/2&lt;/code&gt; на&lt;/a&gt; предмет правил именования и аргументов по умолчанию.</target>
        </trans-unit>
        <trans-unit id="16471b3c05acbe867b23d78e9ce516c95eaa45af" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#defmacro/2&quot;&gt;&lt;code&gt;defmacro/2&lt;/code&gt;&lt;/a&gt; for more information, and check &lt;a href=&quot;#def/2&quot;&gt;&lt;code&gt;def/2&lt;/code&gt;&lt;/a&gt; for rules on naming and default arguments.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#defmacro/2&quot;&gt; &lt;code&gt;defmacro/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации и проверьте &lt;a href=&quot;#def/2&quot;&gt; &lt;code&gt;def/2&lt;/code&gt; &lt;/a&gt; для правил именования и аргументов по умолчанию.</target>
        </trans-unit>
        <trans-unit id="d696caf065aad7dda368b9ed69150792a031438c" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#ensure_loaded/1&quot;&gt;&lt;code&gt;ensure_loaded/1&lt;/code&gt;&lt;/a&gt; for more information on module loading and when to use &lt;a href=&quot;#ensure_loaded/1&quot;&gt;&lt;code&gt;ensure_loaded/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ensure_compiled/1&quot;&gt;&lt;code&gt;ensure_compiled/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#ensure_loaded/1&quot;&gt; &lt;code&gt;ensure_loaded/1&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации о загрузке модуля и когда использовать &lt;a href=&quot;#ensure_loaded/1&quot;&gt; &lt;code&gt;ensure_loaded/1&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#ensure_compiled/1&quot;&gt; &lt;code&gt;ensure_compiled/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="223535a829f654f4ba1b94d2f73c385014b275bc" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#string_to_quoted/2&quot;&gt;&lt;code&gt;string_to_quoted/2&lt;/code&gt;&lt;/a&gt; for options information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#string_to_quoted/2&quot;&gt; &lt;code&gt;string_to_quoted/2&lt;/code&gt; &lt;/a&gt; для информации о параметрах.</target>
        </trans-unit>
        <trans-unit id="7c8d72337056863704c80e076ca875b05f4c79da" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#unescape_string/1&quot;&gt;&lt;code&gt;unescape_string/1&lt;/code&gt;&lt;/a&gt; if you want to use the same map as Elixir single- and double-quoted strings.</source>
          <target state="translated">Отметьте &lt;a href=&quot;#unescape_string/1&quot;&gt; &lt;code&gt;unescape_string/1&lt;/code&gt; ,&lt;/a&gt; если вы хотите использовать ту же карту, что и строки в одинарных и двойных кавычках Elixir.</target>
        </trans-unit>
        <trans-unit id="ee05709b378da3558eb634305561ffc48a326464" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#yield/2&quot;&gt;&lt;code&gt;yield/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;#yield/2&quot;&gt; &lt;code&gt;yield/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="785712997747226e23cf4b84e679095c307ba597" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;file#open/2&quot;&gt;&lt;code&gt;File.open/2&lt;/code&gt;&lt;/a&gt; for other available options.</source>
          <target state="translated">Проверьте &lt;a href=&quot;file#open/2&quot;&gt; &lt;code&gt;File.open/2&lt;/code&gt; &lt;/a&gt; для других доступных опций.</target>
        </trans-unit>
        <trans-unit id="f8d550f87c99e2d04e0824dc4af6695df840266f" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#open-2&quot;&gt;&lt;code&gt;:file.open/2&lt;/code&gt;&lt;/a&gt; for more information about such options and other performance considerations.</source>
          <target state="translated">Посетите &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#open-2&quot;&gt; &lt;code&gt;:file.open/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации о таких параметрах и других аспектах производительности.</target>
        </trans-unit>
        <trans-unit id="0f5fa039b607cd582c6a4c955e7af1e177a34d30" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;kernel.specialforms#quote/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;kernel.specialforms#quote/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="9879b9cff677770f7fc6dce2a1ef0f51a801fd9d" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;kernel.specialforms#try/1&quot;&gt;&lt;code&gt;Kernel.SpecialForms.try/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;kernel.specialforms#try/1&quot;&gt; &lt;code&gt;Kernel.SpecialForms.try/1&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="f8681dafec33d53ad1aff221f5baee38d09e6e9c" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;list#myers_difference/2&quot;&gt;&lt;code&gt;List.myers_difference/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверьте &lt;a href=&quot;list#myers_difference/2&quot;&gt; &lt;code&gt;List.myers_difference/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="e75e0fdd1c293bab75b6473bd2c4557b0ba22f15" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt;&lt;code&gt;Regex&lt;/code&gt; module&lt;/a&gt; for more information on other modifiers and the supported operations with regular expressions.</source>
          <target state="translated">Ознакомьтесь с &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt;модулем &lt;/a&gt; &lt;code&gt;Regex&lt;/code&gt; для получения дополнительной информации о других модификаторах и поддерживаемых операциях с регулярными выражениями.</target>
        </trans-unit>
        <trans-unit id="cbebd3b6561ff651e663b17bfb1588d294d1f922" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; module for more process-related functions.</source>
          <target state="translated">Проверьте модуль &lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; для получения дополнительных функций, связанных с процессами.</target>
        </trans-unit>
        <trans-unit id="a3840e7aee47b59321bae16ce0d7c094d2966b67" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; module for more process-related functions. For more information on linking, check &lt;a href=&quot;process#link/1&quot;&gt;&lt;code&gt;Process.link/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Проверьте модуль &lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; для получения дополнительных функций, связанных с процессами. Для получения дополнительной информации о связывании см. &lt;a href=&quot;process#link/1&quot;&gt; &lt;code&gt;Process.link/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="240896e1c6f52924fd3b42c51075a7aa10e367b9" translate="yes" xml:space="preserve">
          <source>Check the implementation for &lt;a href=&quot;https://hexdocs.pm/logger/Logger.Backends.Console.html&quot;&gt;&lt;code&gt;Logger.Backends.Console&lt;/code&gt;&lt;/a&gt;, for examples on how to handle the recommendations in this section and how to process the existing options.</source>
          <target state="translated">Проверьте реализацию &lt;a href=&quot;https://hexdocs.pm/logger/Logger.Backends.Console.html&quot;&gt; &lt;code&gt;Logger.Backends.Console&lt;/code&gt; &lt;/a&gt; , чтобы увидеть примеры того, как выполнять рекомендации в этом разделе и как обрабатывать существующие параметры.</target>
        </trans-unit>
        <trans-unit id="000a7110c0505a98fde3ef2e1bc528f24d4ff55d" translate="yes" xml:space="preserve">
          <source>Check the module doc for documentation on the valid parameters that will be interpolated in the pattern. If you pass &lt;code&gt;nil&lt;/code&gt; as the pattern, the pattern defaults to:</source>
          <target state="translated">Проверьте документацию модуля для документации по допустимым параметрам, которые будут интерполированы в шаблоне. Если вы передадите &lt;code&gt;nil&lt;/code&gt; в качестве шаблона, по умолчанию будет использоваться следующий шаблон:</target>
        </trans-unit>
        <trans-unit id="baffb5f95d2d027ef564012567d5c8bd4d57d7b5" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;character&lt;/code&gt; is a reserved one in a URI.</source>
          <target state="translated">Проверяет, является ли &lt;code&gt;character&lt;/code&gt; зарезервированным в URI.</target>
        </trans-unit>
        <trans-unit id="4d43630cda829f9c5480cb619b0d9ba3fc02bfa4" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;character&lt;/code&gt; is allowed unescaped in a URI.</source>
          <target state="translated">Проверяет , является ли &lt;code&gt;character&lt;/code&gt; разрешено неэкранированный в URI.</target>
        </trans-unit>
        <trans-unit id="642c5506cb97150c8b0c49957d1ec0c39ec37c4b" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;character&lt;/code&gt; is an unreserved one in a URI.</source>
          <target state="translated">Проверяет, является ли &lt;code&gt;character&lt;/code&gt; незарезервированным в URI.</target>
        </trans-unit>
        <trans-unit id="bc5a3786cdb4b06c32ad1fea1d9dd0e8f286bf9a" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;element&lt;/code&gt; exists within the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Проверяет, существует ли &lt;code&gt;element&lt;/code&gt; в &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34e9118ae59c73fb1d0e9850a5a925dc8f08a60c" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;list&lt;/code&gt; is a charlist made only of printable ASCII characters.</source>
          <target state="translated">Проверяет, является ли &lt;code&gt;list&lt;/code&gt; символов, состоящим только из печатаемых символов ASCII.</target>
        </trans-unit>
        <trans-unit id="51ba5162de69ab5b19b61f1d779e77a231f9273a" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;map_set1&lt;/code&gt; and &lt;code&gt;map_set2&lt;/code&gt; have no members in common.</source>
          <target state="translated">Проверяет, не имеют ли &lt;code&gt;map_set1&lt;/code&gt; и &lt;code&gt;map_set2&lt;/code&gt; общих членов.</target>
        </trans-unit>
        <trans-unit id="6de0146be0b596d291b6d034f7c054092ea93647" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;map_set1&lt;/code&gt;'s members are all contained in &lt;code&gt;map_set2&lt;/code&gt;.</source>
          <target state="translated">Проверяет, &lt;code&gt;map_set1&lt;/code&gt; ли все члены &lt;code&gt;map_set2&lt;/code&gt; в map_set2 .</target>
        </trans-unit>
        <trans-unit id="860353a348e857f20a74b65256993cbd76ecfd45" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;map_set&lt;/code&gt; contains &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Проверяет, содержит ли &lt;code&gt;map_set&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d02d1acf553172c398ff3badaa55f9975d65496" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;string&lt;/code&gt; contains any of the given &lt;code&gt;contents&lt;/code&gt;.</source>
          <target state="translated">Проверяет, содержит ли &lt;code&gt;string&lt;/code&gt; какое-либо из заданного &lt;code&gt;contents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd0b0ab3712234c91e2a938e6cf5b5d74612661e" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;string&lt;/code&gt; matches the given regular expression.</source>
          <target state="translated">Проверяет, соответствует ли &lt;code&gt;string&lt;/code&gt; заданному регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="c32e6246846b85caee2acf1229eb3f9ce12bff47" translate="yes" xml:space="preserve">
          <source>Checks if ANSI coloring is supported and enabled on this machine.</source>
          <target state="translated">Проверяет,поддерживается ли ANSI раскраска и включена ли она на этой машине.</target>
        </trans-unit>
        <trans-unit id="598cd82c1f65bc6e00bf01f403ad5bf50ee82808" translate="yes" xml:space="preserve">
          <source>Checks if a module is open.</source>
          <target state="translated">Проверяет,открыт ли модуль.</target>
        </trans-unit>
        <trans-unit id="97952b511a27ef4ca31c8b021afb71a2e3a4d636" translate="yes" xml:space="preserve">
          <source>Checks if a string contains only printable characters up to &lt;code&gt;character_limit&lt;/code&gt;.</source>
          <target state="translated">Проверяет, содержит ли строка только печатаемые символы до &lt;code&gt;character_limit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="738ad3d07d9803b45243f29adefcce780279e603" translate="yes" xml:space="preserve">
          <source>Checks if a variable belongs to the environment.</source>
          <target state="translated">Проверяет,принадлежит ли переменная окружению.</target>
        </trans-unit>
        <trans-unit id="9b7301ad49b99d36c204b6d78c9440851f9234b1" translate="yes" xml:space="preserve">
          <source>Checks if an &lt;code&gt;element&lt;/code&gt; exists within the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Проверяет, существует ли &lt;code&gt;element&lt;/code&gt; в &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c385aef6748980d6bd7e8fb950ad4f9d46b618a" translate="yes" xml:space="preserve">
          <source>Checks if an alias called &lt;code&gt;task&lt;/code&gt; exists.</source>
          <target state="translated">Проверяет, существует ли псевдоним с именем &lt;code&gt;task&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e7e666e0c3d03945af8991776e375da93987b75" translate="yes" xml:space="preserve">
          <source>Checks if the current module defines the given type (private, opaque or not).</source>
          <target state="translated">Проверяет,определяет ли текущий модуль данный тип (приватный,непрозрачный или нет).</target>
        </trans-unit>
        <trans-unit id="889ecbb917f6d1b03f6c203ac51a025e0d0d4cb0" translate="yes" xml:space="preserve">
          <source>Checks if the element on the left-hand side is a member of the collection on the right-hand side.</source>
          <target state="translated">Проверяет,является ли элемент с левой стороны членом коллекции с правой стороны.</target>
        </trans-unit>
        <trans-unit id="3a7758dda8842a876dc8bd8d7f91d3f50d8c1417" translate="yes" xml:space="preserve">
          <source>Checks if the given &lt;code&gt;data&lt;/code&gt; is a record of kind &lt;code&gt;kind&lt;/code&gt;.</source>
          <target state="translated">Проверяет, являются ли &lt;code&gt;data&lt;/code&gt; записи своего &lt;code&gt;kind&lt;/code&gt; записью .</target>
        </trans-unit>
        <trans-unit id="118f8426c42f72df84637b50990f8b910aead852" translate="yes" xml:space="preserve">
          <source>Checks if the given &lt;code&gt;data&lt;/code&gt; is a record.</source>
          <target state="translated">Проверяет, являются ли &lt;code&gt;data&lt;/code&gt; записью.</target>
        </trans-unit>
        <trans-unit id="124c3e109b20d327475da3b493e383ae7cd3250b" translate="yes" xml:space="preserve">
          <source>Checks if the given module is loaded and is an implementation of the given protocol.</source>
          <target state="translated">Проверяет,загружен ли данный модуль и является ли он реализацией данного протокола.</target>
        </trans-unit>
        <trans-unit id="5a8b4e75b4856943a7b23d0e4a8d665c881560a7" translate="yes" xml:space="preserve">
          <source>Checks if the given module is loaded and is protocol.</source>
          <target state="translated">Проверяет,загружен ли данный модуль и является ли он протоколом.</target>
        </trans-unit>
        <trans-unit id="713890b386025a6cc8d7c4048850fb4a3ab6191f" translate="yes" xml:space="preserve">
          <source>Checks if the given version matches the specification.</source>
          <target state="translated">Проверяет,соответствует ли данная версия спецификации.</target>
        </trans-unit>
        <trans-unit id="ea84db153f8c1bc78f779caa23e3b2b9bc11b2d3" translate="yes" xml:space="preserve">
          <source>Checks if the module defines a function or macro of the given &lt;code&gt;kind&lt;/code&gt;.</source>
          <target state="translated">Проверяет, определяет ли модуль функцию или макрос данного &lt;code&gt;kind&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92dc6ac545a0ed645ba9886a5695677e1e6e7604" translate="yes" xml:space="preserve">
          <source>Checks if the module defines the given function or macro.</source>
          <target state="translated">Проверяет,определяет ли модуль данную функцию или макрос.</target>
        </trans-unit>
        <trans-unit id="3bea1813950d347f459ed2da2d1886b8aa3f7f12" translate="yes" xml:space="preserve">
          <source>Checks if the system will halt or not at the end of ARGV processing.</source>
          <target state="translated">Проверяет,будет ли система останавливаться или нет в конце обработки ARGV.</target>
        </trans-unit>
        <trans-unit id="437313cfd325500ea732df919e03e5de51e3289c" translate="yes" xml:space="preserve">
          <source>Checks if the task should be run recursively for all sub-apps in umbrella projects.</source>
          <target state="translated">Проверяет,должна ли задача выполняться рекурсивно для всех под-приложений в зонтичных проектах.</target>
        </trans-unit>
        <trans-unit id="c8fc6d1821d83fee2fd98b4e29b2eab8ee0991ba" translate="yes" xml:space="preserve">
          <source>Checks if there is a message matching the given clauses in the current process mailbox.</source>
          <target state="translated">Проверяет,есть ли сообщение,соответствующее заданным пунктам в текущем почтовом ящике процесса.</target>
        </trans-unit>
        <trans-unit id="79beead16967435820b57e591ccbecace1d1c3ce" translate="yes" xml:space="preserve">
          <source>Checks if two keywords are equal.</source>
          <target state="translated">Проверяет,равны ли два ключевых слова.</target>
        </trans-unit>
        <trans-unit id="73ce1f2860aa5f7e1244cc43d53173af401fa1c5" translate="yes" xml:space="preserve">
          <source>Checks if two maps are equal.</source>
          <target state="translated">Проверяет,равны ли две карты.</target>
        </trans-unit>
        <trans-unit id="616eb9024590388233fa19552a45060a809c58ab" translate="yes" xml:space="preserve">
          <source>Checks if two ranges are disjoint.</source>
          <target state="translated">Проверяет,не разобщены ли два диапазона.</target>
        </trans-unit>
        <trans-unit id="fc3b8041f2a764e72f9a99d83ff9d7edebb760d0" translate="yes" xml:space="preserve">
          <source>Checks if two sets are equal.</source>
          <target state="translated">Проверяет,равны ли два набора.</target>
        </trans-unit>
        <trans-unit id="41c4661f5df293e90c7e8468bec27fa2820e5985" translate="yes" xml:space="preserve">
          <source>Checks the &lt;a href=&quot;macro#t:t/0&quot;&gt;&lt;code&gt;Macro.t/0&lt;/code&gt;&lt;/a&gt; for the specification of a valid quoted expression.</source>
          <target state="translated">Проверяет &lt;a href=&quot;macro#t:t/0&quot;&gt; &lt;code&gt;Macro.t/0&lt;/code&gt; на&lt;/a&gt; предмет спецификации допустимого выражения в кавычках.</target>
        </trans-unit>
        <trans-unit id="666ba3e423d21e52f9fd2dec6cb05f41ff960a45" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;string&lt;/code&gt; contains only valid characters.</source>
          <target state="translated">Проверяет, содержит ли &lt;code&gt;string&lt;/code&gt; только допустимые символы.</target>
        </trans-unit>
        <trans-unit id="f6e9c56ca18d9754f5af26417de2a328548838cb" translate="yes" xml:space="preserve">
          <source>Child specification</source>
          <target state="translated">Детская спецификация</target>
        </trans-unit>
        <trans-unit id="c3d58e131073765a8fbc52191251a770441a66e5" translate="yes" xml:space="preserve">
          <source>Choose a &lt;a href=&quot;https://choosealicense.com/&quot;&gt;license&lt;/a&gt;. The most common licenses in the Elixir community are the &lt;a href=&quot;https://choosealicense.com/licenses/mit/&quot;&gt;MIT License&lt;/a&gt; and the &lt;a href=&quot;https://choosealicense.com/licenses/apache-2.0/&quot;&gt;Apache License 2.0&lt;/a&gt;. The latter is also the one used by Elixir itself.</source>
          <target state="translated">Выберите &lt;a href=&quot;https://choosealicense.com/&quot;&gt;лицензию&lt;/a&gt; . Наиболее распространенными лицензиями в сообществе Elixir являются &lt;a href=&quot;https://choosealicense.com/licenses/mit/&quot;&gt;MIT License&lt;/a&gt; и &lt;a href=&quot;https://choosealicense.com/licenses/apache-2.0/&quot;&gt;Apache License 2.0&lt;/a&gt; . Последний также используется самим Elixir.</target>
        </trans-unit>
        <trans-unit id="d746003f831879f4d9c00718df18aa77507218d3" translate="yes" xml:space="preserve">
          <source>Choose a versioning schema. Elixir requires versions to be in the format &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; but the meaning of those numbers is up to you. Most projects choose &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;.</source>
          <target state="translated">Выберите схему управления версиями. Elixir требует, чтобы версии были в формате &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; , но значение этих чисел зависит от вас. Большинство проектов выбирают &lt;a href=&quot;https://semver.org/&quot;&gt;семантическое управление версиями&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1339b412671e2da05add576032c5b579ea52376a" translate="yes" xml:space="preserve">
          <source>Choosing requirement R6 automatically excludes requirements R4, R5 and R7.</source>
          <target state="translated">Выбор требования R6 автоматически исключает требования R4,R5 и R7.</target>
        </trans-unit>
        <trans-unit id="ef47da406dcfe37fc12040175eeecabe9f974ccd" translate="yes" xml:space="preserve">
          <source>Chunks the &lt;code&gt;enum&lt;/code&gt; by buffering elements for which &lt;code&gt;fun&lt;/code&gt; returns the same value.</source>
          <target state="translated">Разбивает &lt;code&gt;enum&lt;/code&gt; на части, буферизуя элементы, для которых &lt;code&gt;fun&lt;/code&gt; возвращает то же значение.</target>
        </trans-unit>
        <trans-unit id="09c64d73a45df2fc80159ff7084b07b4e192ed3b" translate="yes" xml:space="preserve">
          <source>Chunks the &lt;code&gt;enum&lt;/code&gt; with fine grained control when every chunk is emitted.</source>
          <target state="translated">Разделяет &lt;code&gt;enum&lt;/code&gt; с мелкозернистым контролем при отправке каждого фрагмента.</target>
        </trans-unit>
        <trans-unit id="f3199a3f0afc069c8d87ccec0cb9e42069a3b81e" translate="yes" xml:space="preserve">
          <source>Chunks the &lt;code&gt;enumerable&lt;/code&gt; with fine grained control when every chunk is emitted.</source>
          <target state="translated">Разделяет &lt;code&gt;enumerable&lt;/code&gt; с мелкозернистым контролем, когда генерируется каждый кусок.</target>
        </trans-unit>
        <trans-unit id="5130e70e6af041df0b4f02efa5896c71601680f4" translate="yes" xml:space="preserve">
          <source>Clauses also allow extra conditions to be specified via guards:</source>
          <target state="translated">Пункты также позволяют задавать дополнительные условия с помощью охранников:</target>
        </trans-unit>
        <trans-unit id="4d21fa3b66fd85a0eae22c5b7627920962b58e23" translate="yes" xml:space="preserve">
          <source>Clears all invoked tasks, allowing them to be reinvoked.</source>
          <target state="translated">Очищает все вызываемые задачи,позволяя их вызывать заново.</target>
        </trans-unit>
        <trans-unit id="b5501033c685e38d6fb36033a17bad897fb206fd" translate="yes" xml:space="preserve">
          <source>Clears line.</source>
          <target state="translated">Чистая линия.</target>
        </trans-unit>
        <trans-unit id="b408d2632b8e891b143869b00518580273c47949" translate="yes" xml:space="preserve">
          <source>Clears out all messages sent to the shell's inbox and prints them out.</source>
          <target state="translated">Удаляет все сообщения,отправленные в почтовый ящик оболочки,и распечатывает их.</target>
        </trans-unit>
        <trans-unit id="8eb38935be80ed9039da3a39b11aa4d0c24919e9" translate="yes" xml:space="preserve">
          <source>Clears screen.</source>
          <target state="translated">Очищает экран.</target>
        </trans-unit>
        <trans-unit id="f02f33c6f3cdd9389808e91d095c2309fcb9224a" translate="yes" xml:space="preserve">
          <source>Clears the console screen.</source>
          <target state="translated">Очищает экран консоли.</target>
        </trans-unit>
        <trans-unit id="827e22262ec4bb7ded4eeadb9fb3aa8dc2c35bd9" translate="yes" xml:space="preserve">
          <source>Clears the dependency for the current environment.</source>
          <target state="translated">Очищает зависимость от текущего окружения.</target>
        </trans-unit>
        <trans-unit id="9c4f3063144d0a8e09522b56e2ecffbfbfc5efbc" translate="yes" xml:space="preserve">
          <source>Client / Server APIs</source>
          <target state="translated">API клиента/сервера</target>
        </trans-unit>
        <trans-unit id="ee4f79f897434114271f46c13449ce1869f416ea" translate="yes" xml:space="preserve">
          <source>Client/Server in agents</source>
          <target state="translated">Клиент/сервер в агентах</target>
        </trans-unit>
        <trans-unit id="182072135056cbdedcd87bbad9287c89ec82bc4d" translate="yes" xml:space="preserve">
          <source>Clients and Servers - Learn You Some Erlang for Great Good!</source>
          <target state="translated">Клиенты и серверы-Узнайте немного Эрланга на отлично!</target>
        </trans-unit>
        <trans-unit id="5321f8adc0182546df611269506b6bc3b81f34df" translate="yes" xml:space="preserve">
          <source>Closes the &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">Закрывает &lt;code&gt;port&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08b2eefe6b6ef7fc70e6d5b483e21b4922d35e18" translate="yes" xml:space="preserve">
          <source>Closes the file referenced by &lt;code&gt;io_device&lt;/code&gt;. It mostly returns &lt;code&gt;:ok&lt;/code&gt;, except for some severe errors such as out of memory.</source>
          <target state="translated">Закрывает файл, на который ссылается &lt;code&gt;io_device&lt;/code&gt; . Обычно он возвращает &lt;code&gt;:ok&lt;/code&gt; , за исключением некоторых серьезных ошибок, таких как нехватка памяти.</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="e9b5273619e7c9d59651c9302451ddc5bba79f43" translate="yes" xml:space="preserve">
          <source>Code comments</source>
          <target state="translated">Примечания к кодексу</target>
        </trans-unit>
        <trans-unit id="407e0b95bcfcf898b9202ae04357406ff3f10f14" translate="yes" xml:space="preserve">
          <source>Code comments are aimed at developers reading the code. They are useful for marking improvements, leaving notes (for example, why you had to resort to a workaround due to a bug in a library), and so forth. They are tied to the source code: you can completely rewrite a function and remove all existing code comments, and it will continue to behave the same, with no change to either its behaviour or its documentation.</source>
          <target state="translated">Комментарии к коду направлены на то,чтобы разработчики могли его прочитать.Они полезны для разметки улучшений,оставления заметок (например,почему пришлось прибегнуть к обходному пути из-за ошибки в библиотеке)и так далее.Они привязаны к исходному коду:вы можете полностью переписать функцию и удалить все существующие комментарии к коду,и она будет продолжать вести себя так же,не изменяя ни своего поведения,ни своей документации.</target>
        </trans-unit>
        <trans-unit id="3d0c84971ed8c269fff1364330b0cb908605d37f" translate="yes" xml:space="preserve">
          <source>Code loading on the Erlang VM</source>
          <target state="translated">Загрузка кода на VM Erlang</target>
        </trans-unit>
        <trans-unit id="ec7909dcc79311e3f0b6979c6dc4d55422c72b61" translate="yes" xml:space="preserve">
          <source>Code points and grapheme cluster</source>
          <target state="translated">Кодовые точки и графемная кластеризация</target>
        </trans-unit>
        <trans-unit id="1aa5924d1c20fa9f241eb4e1b21f78f5905bf0bd" translate="yes" xml:space="preserve">
          <source>Code preloading. The VM has two mechanisms for loading code: interactive and embedded. By default, it runs in the interactive mode which dynamically loads modules when they are used for the first time. The first time your application calls &lt;code&gt;Enum.map/2&lt;/code&gt;, the VM will find the &lt;code&gt;Enum&lt;/code&gt; module and load it. There&amp;rsquo;s a downside. When you start a new server in production, it may need to load many other modules, causing the first requests to have an unusual spike in response time. Releases run in embedded mode, which loads all available modules upfront, guaranteeing your system is ready to handle requests after booting.</source>
          <target state="translated">Предварительная загрузка кода. В виртуальной машине есть два механизма загрузки кода: интерактивный и встроенный. По умолчанию он работает в интерактивном режиме, который динамически загружает модули при их первом использовании. Когда ваше приложение в первый раз вызывает &lt;code&gt;Enum.map/2&lt;/code&gt; , виртуальная машина найдет модуль &lt;code&gt;Enum&lt;/code&gt; и загрузит его. Есть и обратная сторона. Когда вы запускаете новый сервер в производство, ему может потребоваться загрузка многих других модулей, в результате чего первые запросы будут иметь необычный всплеск времени отклика. Релизы работают во встроенном режиме, который загружает все доступные модули заранее, гарантируя, что ваша система готова обрабатывать запросы после загрузки.</target>
        </trans-unit>
        <trans-unit id="9bbbc29ce6e01c5f883b21207d4df5d189f562e4" translate="yes" xml:space="preserve">
          <source>Code to be executed can also be passed inline with the &lt;code&gt;-e&lt;/code&gt; option:</source>
          <target state="translated">Код для выполнения также может быть передан встроенным с параметром &lt;code&gt;-e&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8925ef3817c5078333f965ac2c4f8fd3dec413cd" translate="yes" xml:space="preserve">
          <source>Code.LoadError</source>
          <target state="translated">Code.LoadError</target>
        </trans-unit>
        <trans-unit id="2793300c10721db92c5d2235001b12020b992cc1" translate="yes" xml:space="preserve">
          <source>Code.LoadError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Code.LoadError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87076accf13c08a15b009170f620b176a4faca61" translate="yes" xml:space="preserve">
          <source>Code.fetch_docs/1</source>
          <target state="translated">Code.fetch_docs/1</target>
        </trans-unit>
        <trans-unit id="faada4c03778897c42585b08b0a16dfdfe932b0b" translate="yes" xml:space="preserve">
          <source>Collapse any new lines and whitespace following this node, emitting up to &lt;code&gt;max&lt;/code&gt; new lines.</source>
          <target state="translated">Сверните все новые строки и пробелы, следующие за этим узлом, выдав &lt;code&gt;max&lt;/code&gt; новых строк.</target>
        </trans-unit>
        <trans-unit id="91af54365271b68093cc58f58877c5e5fbf80e5a" translate="yes" xml:space="preserve">
          <source>Collectable</source>
          <target state="translated">Collectable</target>
        </trans-unit>
        <trans-unit id="d80c0d2f5db391e72e90f3887949506276cfb40c" translate="yes" xml:space="preserve">
          <source>Collectable &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">Собираемый &lt;small&gt;протокол&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="efccae93725e6f5a9afb9579e21ff7b906852fd3" translate="yes" xml:space="preserve">
          <source>Collectable.command (0)</source>
          <target state="translated">Collectable.command (0)</target>
        </trans-unit>
        <trans-unit id="8647850dbe0b4bbf11c6e320d7b6ef187ee2db5e" translate="yes" xml:space="preserve">
          <source>Collectable.into (1)</source>
          <target state="translated">Собираемый.в (1)</target>
        </trans-unit>
        <trans-unit id="3f6e96c64cc87200f83a7abe1d28f9e91920b4d4" translate="yes" xml:space="preserve">
          <source>Collectable.t (0)</source>
          <target state="translated">Collectable.t (0)</target>
        </trans-unit>
        <trans-unit id="88d5e4cac104ffc3f02dd54f2f0f1074fd33fd9b" translate="yes" xml:space="preserve">
          <source>Colors</source>
          <target state="translated">Colors</target>
        </trans-unit>
        <trans-unit id="96e74053cae538c3ecd9d29799c5c9b0fceb9d72" translate="yes" xml:space="preserve">
          <source>Colors a document if the &lt;code&gt;color_key&lt;/code&gt; has a color in the options.</source>
          <target state="translated">&lt;code&gt;color_key&lt;/code&gt; документ, если color_key имеет цвет в параметрах.</target>
        </trans-unit>
        <trans-unit id="6e3d3bf1961b8057b125fc05310e2099de8793b0" translate="yes" xml:space="preserve">
          <source>Command line options</source>
          <target state="translated">Опции командной строки</target>
        </trans-unit>
        <trans-unit id="f67e000a046a21604b2818c94a17c7ddab8e2442" translate="yes" xml:space="preserve">
          <source>Command-line options</source>
          <target state="translated">Опции командной строки</target>
        </trans-unit>
        <trans-unit id="e49bd0922826a05729c3e5928e11f174c484ef82" translate="yes" xml:space="preserve">
          <source>Community and other resources</source>
          <target state="translated">Общественные и другие ресурсы</target>
        </trans-unit>
        <trans-unit id="351b39c3cb9ffe473609505c1caefaf73bfad121" translate="yes" xml:space="preserve">
          <source>Compared to keyword lists, we can already see two differences:</source>
          <target state="translated">По сравнению со списками ключевых слов,мы уже видим два отличия:</target>
        </trans-unit>
        <trans-unit id="3c4dd5827aee0b7bc5bce155cef1a41295eb21d9" translate="yes" xml:space="preserve">
          <source>Compared to the &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt;, this function is more low-level, allowing a copy from device to device limited by a number of bytes. On the other hand, &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt; performs more extensive checks on both source and destination and it also preserves the file mode after copy.</source>
          <target state="translated">По сравнению с &lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt; , эта функция является более низкоуровневой, позволяя копировать с устройства на устройство, ограниченное количеством байтов. С другой стороны, &lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt; выполняет более тщательные проверки как источника, так и места назначения, а также сохраняет режим файла после копирования.</target>
        </trans-unit>
        <trans-unit id="4396ebd5f93ea927d7f38fcc76884b2d876b8c70" translate="yes" xml:space="preserve">
          <source>Compares log levels.</source>
          <target state="translated">Сравнивает уровни журнала.</target>
        </trans-unit>
        <trans-unit id="2bddca0648b60655df6f9b1bec6eaa161ae7af3b" translate="yes" xml:space="preserve">
          <source>Compares two &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; structs.</source>
          <target state="translated">Сравнивает две структуры &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="221fa096c94059dac8cb4762f358f4aa7a03c1ff" translate="yes" xml:space="preserve">
          <source>Compares two date structs.</source>
          <target state="translated">Сравнивает две структуры дат.</target>
        </trans-unit>
        <trans-unit id="6782100a1e3b01bfa6aced20d6a89d3df7b1b892" translate="yes" xml:space="preserve">
          <source>Compares two datetime structs.</source>
          <target state="translated">Сравнивает две структуры даты.</target>
        </trans-unit>
        <trans-unit id="34b17d0b1be43ba0ceacc7bc5ba086b336622a11" translate="yes" xml:space="preserve">
          <source>Compares two time structs.</source>
          <target state="translated">Сравнивает две временные структуры.</target>
        </trans-unit>
        <trans-unit id="aed844f61a9c1a83201e59d846227cc4ca353638" translate="yes" xml:space="preserve">
          <source>Compares two versions.</source>
          <target state="translated">Сравнивает две версии.</target>
        </trans-unit>
        <trans-unit id="7dca07167ef3fe34550bf0509fc6fb45f893e74a" translate="yes" xml:space="preserve">
          <source>Comparing dates</source>
          <target state="translated">Сравнительные даты</target>
        </trans-unit>
        <trans-unit id="fb5333c90cc8d2bfbc9b665af90800832ab0f856" translate="yes" xml:space="preserve">
          <source>Comparing naive date times</source>
          <target state="translated">Сравнение наивных дат</target>
        </trans-unit>
        <trans-unit id="72158d6e3482e00cedae532226bd81727e66a164" translate="yes" xml:space="preserve">
          <source>Comparing times</source>
          <target state="translated">Сравнительные сроки</target>
        </trans-unit>
        <trans-unit id="9461d4c9f916ad7df5538225ed552fb6e7e3284b" translate="yes" xml:space="preserve">
          <source>Comparison operators</source>
          <target state="translated">Операторы сравнения</target>
        </trans-unit>
        <trans-unit id="15ab192596c8ba15e4efa62ffe722828f388b1e3" translate="yes" xml:space="preserve">
          <source>Comparison to &lt;a href=&quot;kernel.specialforms#quote/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Сравнение с &lt;a href=&quot;kernel.specialforms#quote/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b40ad652f0b8e3e0fb8ff30d06417bb28cb7e636" translate="yes" xml:space="preserve">
          <source>Comparison with binary pattern matching</source>
          <target state="translated">Сравнение с совпадением бинарного паттерна</target>
        </trans-unit>
        <trans-unit id="7ea963a047168a722cbd246ebd47586d05f01b19" translate="yes" xml:space="preserve">
          <source>Comparisons in Elixir using &lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%253E/2&quot;&gt;&lt;code&gt;&amp;gt;/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%253C/2&quot;&gt;&lt;code&gt;&amp;lt;/2&lt;/code&gt;&lt;/a&gt; and similar are structural and based on the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; struct fields. For proper comparison between dates, use the &lt;a href=&quot;#compare/2&quot;&gt;&lt;code&gt;compare/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Сравнения в Elixir с использованием &lt;a href=&quot;kernel#==/2&quot;&gt; &lt;code&gt;==/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#%253E/2&quot;&gt; &lt;code&gt;&amp;gt;/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#%253C/2&quot;&gt; &lt;code&gt;&amp;lt;/2&lt;/code&gt; &lt;/a&gt; и т.п. являются структурными и основаны на полях структуры &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . Для правильного сравнения дат используйте функцию &lt;a href=&quot;#compare/2&quot;&gt; &lt;code&gt;compare/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="223f508a513f824a4ac2feecf7af48fa276819c5" translate="yes" xml:space="preserve">
          <source>Comparisons in Elixir using &lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%253E/2&quot;&gt;&lt;code&gt;&amp;gt;/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%253C/2&quot;&gt;&lt;code&gt;&amp;lt;/2&lt;/code&gt;&lt;/a&gt; and similar are structural and based on the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; struct fields. For proper comparison between naive datetimes, use the &lt;a href=&quot;#compare/2&quot;&gt;&lt;code&gt;compare/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Сравнения в Elixir с использованием &lt;a href=&quot;kernel#==/2&quot;&gt; &lt;code&gt;==/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#%253E/2&quot;&gt; &lt;code&gt;&amp;gt;/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#%253C/2&quot;&gt; &lt;code&gt;&amp;lt;/2&lt;/code&gt; &lt;/a&gt; и т.п. являются структурными и основаны на &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; структуры NaiveDateTime . Для правильного сравнения между наивными датами используйте функцию &lt;a href=&quot;#compare/2&quot;&gt; &lt;code&gt;compare/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bfda4dfed8330e94d2d4752354274648b44ba3b" translate="yes" xml:space="preserve">
          <source>Comparisons in Elixir using &lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%253E/2&quot;&gt;&lt;code&gt;&amp;gt;/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%253C/2&quot;&gt;&lt;code&gt;&amp;lt;/2&lt;/code&gt;&lt;/a&gt; and similar are structural and based on the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; struct fields. For proper comparison between times, use the &lt;a href=&quot;#compare/2&quot;&gt;&lt;code&gt;compare/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Сравнения в Elixir с использованием &lt;a href=&quot;kernel#==/2&quot;&gt; &lt;code&gt;==/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#%253E/2&quot;&gt; &lt;code&gt;&amp;gt;/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#%253C/2&quot;&gt; &lt;code&gt;&amp;lt;/2&lt;/code&gt; &lt;/a&gt; и т.п. являются структурными и основаны на полях структуры &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; . Для правильного сравнения времен используйте функцию &lt;a href=&quot;#compare/2&quot;&gt; &lt;code&gt;compare/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="c4a94cda45edff3876fed45dbc4c3cb4ce79baa3" translate="yes" xml:space="preserve">
          <source>Compatibility and Deprecations</source>
          <target state="translated">Совместимость и несоответствия</target>
        </trans-unit>
        <trans-unit id="f42d7b50ca233e04dc35e582f6b9af961f23c004" translate="yes" xml:space="preserve">
          <source>Compatibility between Elixir and Erlang/OTP</source>
          <target state="translated">Совместимость между Elixir и Erlang/OTP</target>
        </trans-unit>
        <trans-unit id="8f74e2722c1f84edbd83275bae1006369ac7ea9d" translate="yes" xml:space="preserve">
          <source>Compatibility between non-major Elixir versions</source>
          <target state="translated">Совместимость между не-мейджорными версиями Elixir</target>
        </trans-unit>
        <trans-unit id="1684199ac60e5587c6ced4c1cbb54268a896b641" translate="yes" xml:space="preserve">
          <source>Compatibility with OTP behaviours</source>
          <target state="translated">Совместимость с поведением OTP</target>
        </trans-unit>
        <trans-unit id="aad755de429541e8ec1db943cf4102247f2bb5d3" translate="yes" xml:space="preserve">
          <source>Compilation</source>
          <target state="translated">Compilation</target>
        </trans-unit>
        <trans-unit id="3e7a794cfc66ce992a7ff5365bcfa7b7bd38cc57" translate="yes" xml:space="preserve">
          <source>Compilation environment macros (&lt;a href=&quot;kernel.specialforms#__CALLER__/0&quot;&gt;&lt;code&gt;__CALLER__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel.specialforms#__DIR__/0&quot;&gt;&lt;code&gt;__DIR__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel.specialforms#__MODULE__/0&quot;&gt;&lt;code&gt;__MODULE__/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;kernel.specialforms#__CALLER__/0&quot;&gt; &lt;code&gt;__CALLER__/0&lt;/code&gt; &lt;/a&gt; среды компиляции ( __CALLER __ / 0 , &lt;a href=&quot;kernel.specialforms#__DIR__/0&quot;&gt; &lt;code&gt;__DIR__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;kernel.specialforms#__MODULE__/0&quot;&gt; &lt;code&gt;__MODULE__/0&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f657a919e86d30d7dc49c2990c4badfef6d2ae9b" translate="yes" xml:space="preserve">
          <source>Compile a string (&lt;code&gt;compile_string&lt;/code&gt;) or a file (&lt;code&gt;compile_file&lt;/code&gt;) into Elixir syntax tree. This is the API used by both functions above and is available to you if you want to provide your own ways of handling the compiled template.</source>
          <target state="translated">Скомпилируйте строку ( &lt;code&gt;compile_string&lt;/code&gt; ) или файл ( &lt;code&gt;compile_file&lt;/code&gt; ) в синтаксическое дерево Elixir. Это API, используемый обеими вышеуказанными функциями, и он доступен вам, если вы хотите предоставить свои собственные способы обработки скомпилированного шаблона.</target>
        </trans-unit>
        <trans-unit id="99d6c95e99f15d2782415966b874bf7ac7c480ec" translate="yes" xml:space="preserve">
          <source>Compile callbacks</source>
          <target state="translated">Скомпилировать обратные вызовы</target>
        </trans-unit>
        <trans-unit id="b9b345cfc373ededcbc96ee76cf173b0c38e656e" translate="yes" xml:space="preserve">
          <source>Compile options</source>
          <target state="translated">Скомпилировать варианты</target>
        </trans-unit>
        <trans-unit id="a4eb1e8f716939c9fd4a5a9009f8576e365876fc" translate="yes" xml:space="preserve">
          <source>CompileError</source>
          <target state="translated">CompileError</target>
        </trans-unit>
        <trans-unit id="f54ad90826f1166c75feaaf8212b1ffed6e2b140" translate="yes" xml:space="preserve">
          <source>CompileError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">CompileError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d3b37411d97ddaa5a4d151b734a15fb76e5fca29" translate="yes" xml:space="preserve">
          <source>Compiler front-end: improvements may be done to the compiler, introducing new warnings for ambiguous modes and providing more detailed error messages. Those can lead to compilation errors (when running with &lt;code&gt;--warning-as-errors&lt;/code&gt;) or tooling failures when asserting on specific error messages (although one should avoid such). We reserve the right to do such improvements.</source>
          <target state="translated">Интерфейс компилятора: в компилятор могут быть внесены улучшения, добавив новые предупреждения для неоднозначных режимов и предоставив более подробные сообщения об ошибках. Это может привести к ошибкам компиляции (при работе с &lt;code&gt;--warning-as-errors&lt;/code&gt; ) или сбоям инструментов при утверждении конкретных сообщений об ошибках (хотя этого следует избегать). Мы оставляем за собой право вносить такие улучшения.</target>
        </trans-unit>
        <trans-unit id="e1be83a7756a5bb6c9b11d838efbdc2b010f2edd" translate="yes" xml:space="preserve">
          <source>Compilers</source>
          <target state="translated">Compilers</target>
        </trans-unit>
        <trans-unit id="6a97aec4e0f175d98451227716629a5e06e9daa5" translate="yes" xml:space="preserve">
          <source>Compiles Elixir source files.</source>
          <target state="translated">Компилирует исходные файлы Elixir.</target>
        </trans-unit>
        <trans-unit id="bec1c5e79e401a7466a08ba63018054233105899" translate="yes" xml:space="preserve">
          <source>Compiles Erlang source files.</source>
          <target state="translated">Компилирует исходные файлы Erlang.</target>
        </trans-unit>
        <trans-unit id="1f5b4ba2582167bc9dbc03751202b445126c211d" translate="yes" xml:space="preserve">
          <source>Compiles Yecc source files.</source>
          <target state="translated">Компилирует исходные файлы Yecc.</target>
        </trans-unit>
        <trans-unit id="0555a5fff463fa1be9a0f36abf14a298f2675629" translate="yes" xml:space="preserve">
          <source>Compiles a format string into a data structure that &lt;a href=&quot;#format/5&quot;&gt;&lt;code&gt;format/5&lt;/code&gt;&lt;/a&gt; can handle.</source>
          <target state="translated">Компилирует строку формата в структуру данных, которую может обрабатывать &lt;a href=&quot;#format/5&quot;&gt; &lt;code&gt;format/5&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12d2667a1f41abc65eebfb8aca2ce483662f6d90" translate="yes" xml:space="preserve">
          <source>Compiles a requirement to its internal representation with &lt;a href=&quot;http://www.erlang.org/doc/man/ets.html#match_spec_compile-1&quot;&gt;&lt;code&gt;:ets.match_spec_compile/1&lt;/code&gt;&lt;/a&gt; for faster matching.</source>
          <target state="translated">Компилирует требование к своему внутреннему представлению с помощью &lt;a href=&quot;http://www.erlang.org/doc/man/ets.html#match_spec_compile-1&quot;&gt; &lt;code&gt;:ets.match_spec_compile/1&lt;/code&gt; &lt;/a&gt; для более быстрого сопоставления.</target>
        </trans-unit>
        <trans-unit id="f2cf002d6de77f196a3161337e5d01f628fa219c" translate="yes" xml:space="preserve">
          <source>Compiles the given file.</source>
          <target state="translated">Компилирует данный файл.</target>
        </trans-unit>
        <trans-unit id="fe5d7e4a131dbe8c58cc4a04762428daf778a3f1" translate="yes" xml:space="preserve">
          <source>Compiles the given files.</source>
          <target state="translated">Компилирует данные файлы.</target>
        </trans-unit>
        <trans-unit id="a5664f86acdcfb847dd8e5c6fc454b47248e9f79" translate="yes" xml:space="preserve">
          <source>Compiles the given project.</source>
          <target state="translated">Составляет данный проект.</target>
        </trans-unit>
        <trans-unit id="ae26c039cef510e8b34ba14faf19222f446f7af5" translate="yes" xml:space="preserve">
          <source>Compiles the given string.</source>
          <target state="translated">Компилирует данную строку.</target>
        </trans-unit>
        <trans-unit id="917e43c9d373a6e4c3419110429f241ad1a5803b" translate="yes" xml:space="preserve">
          <source>Compiles the quoted expression.</source>
          <target state="translated">Компилирует цитируемое выражение.</target>
        </trans-unit>
        <trans-unit id="c23a1bc10af7479e16b7d2e120610e8416f989f4" translate="yes" xml:space="preserve">
          <source>Compiles the regular expression and raises &lt;a href=&quot;regex.compileerror&quot;&gt;&lt;code&gt;Regex.CompileError&lt;/code&gt;&lt;/a&gt; in case of errors.</source>
          <target state="translated">Компилирует регулярное выражение и вызывает &lt;a href=&quot;regex.compileerror&quot;&gt; &lt;code&gt;Regex.CompileError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e49c3744a3522b82c9288a53a5c637df4b01d82" translate="yes" xml:space="preserve">
          <source>Compiles the regular expression.</source>
          <target state="translated">Компилирует регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="ed2ff637c10fb1755e29c0eb2376d67d8e5a91b4" translate="yes" xml:space="preserve">
          <source>Comprehensions</source>
          <target state="translated">Comprehensions</target>
        </trans-unit>
        <trans-unit id="1310c30df240bc12f3591d11936eb9f7e6967dd7" translate="yes" xml:space="preserve">
          <source>Comprehensions allow you to quickly build a data structure from an enumerable or a bitstring.</source>
          <target state="translated">Понимание позволяет быстро построить структуру данных из перечисляемых или битовых строк.</target>
        </trans-unit>
        <trans-unit id="dfe3133c5fadf89f0c4e372dfb9d3554729a6dc3" translate="yes" xml:space="preserve">
          <source>Comprehensions discard all elements for which the filter expression returns &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;; all other values are selected.</source>
          <target state="translated">Компоненты отбрасывают все элементы, для которых выражение фильтра возвращает &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ; все остальные значения выбраны.</target>
        </trans-unit>
        <trans-unit id="5b77c42be234abc320cd3adb104af1c94a8cbc7a" translate="yes" xml:space="preserve">
          <source>Comprehensions generally provide a much more concise representation than using the equivalent functions from the &lt;code&gt;Enum&lt;/code&gt; and &lt;code&gt;Stream&lt;/code&gt; modules. Furthermore, comprehensions also allow multiple generators and filters to be given. Here is an example that receives a list of directories and gets the size of each file in those directories:</source>
          <target state="translated">Понимания обычно обеспечивают более сжатое представление, чем использование эквивалентных функций из модулей &lt;code&gt;Enum&lt;/code&gt; и &lt;code&gt;Stream&lt;/code&gt; . Кроме того, понимания также позволяют задавать несколько генераторов и фильтров. Вот пример, который получает список каталогов и размер каждого файла в этих каталогах:</target>
        </trans-unit>
        <trans-unit id="2a2326284774c69e81d063232192764ec8e7d87e" translate="yes" xml:space="preserve">
          <source>Computes the Jaro distance (similarity) between two strings.</source>
          <target state="translated">Вычисляет расстояние (сходство)Jaro между двумя строками.</target>
        </trans-unit>
        <trans-unit id="d58e9fd05f3363b68db438a625d16b10d703140f" translate="yes" xml:space="preserve">
          <source>Computes the bag distance between two strings.</source>
          <target state="translated">Вычисляет расстояние между двумя струнами.</target>
        </trans-unit>
        <trans-unit id="7e5fa6baea52e5444c5ab52e6620ff1a5e2eaa64" translate="yes" xml:space="preserve">
          <source>Computes the modulo remainder of an integer division.</source>
          <target state="translated">Вычисляет modulo остаток от целочисленного деления.</target>
        </trans-unit>
        <trans-unit id="1695adb6bedb251b98b5d02b3e294f80f6533ad8" translate="yes" xml:space="preserve">
          <source>Computes the remainder of an integer division.</source>
          <target state="translated">Вычисляет остаток от целочисленного деления.</target>
        </trans-unit>
        <trans-unit id="ca3e5ac4bfa4005f9e7c85636c6e23330025a032" translate="yes" xml:space="preserve">
          <source>Concatenates a list of aliases and returns a new alias only if the alias was already referenced.</source>
          <target state="translated">Сокращает список псевдонимов и возвращает новый псевдоним только в том случае,если на псевдоним уже была сделана ссылка.</target>
        </trans-unit>
        <trans-unit id="79fdba952b89833ad044a47f954b778d9ac3754b" translate="yes" xml:space="preserve">
          <source>Concatenates a list of aliases and returns a new alias.</source>
          <target state="translated">Сокращает список псевдонимов и возвращает новый псевдоним.</target>
        </trans-unit>
        <trans-unit id="7bfc55b10bbbaaa1172955e020d089c69f73a61a" translate="yes" xml:space="preserve">
          <source>Concatenates a list of documents returning a new document.</source>
          <target state="translated">Сокращает список документов,возвращающих новый документ.</target>
        </trans-unit>
        <trans-unit id="5b0b906d9626f876d63bb926f568d768133479d8" translate="yes" xml:space="preserve">
          <source>Concatenates a proper list and a term, returning a list.</source>
          <target state="translated">Сосредоточивает правильный список и срок,возвращая список.</target>
        </trans-unit>
        <trans-unit id="602a2270158b7a64f1f9b30928698846da471ed5" translate="yes" xml:space="preserve">
          <source>Concatenates the enumerable on the &lt;code&gt;right&lt;/code&gt; with the enumerable on the &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">Объединяет перечислимое &lt;code&gt;right&lt;/code&gt; с перечислимым &lt;code&gt;left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17b31e6fe3e3ae89aaf0d1779930dec62c20d4ce" translate="yes" xml:space="preserve">
          <source>Concatenates two aliases and returns a new alias only if the alias was already referenced.</source>
          <target state="translated">Концентрирует два псевдонима и возвращает новый псевдоним только в том случае,если на псевдоним уже была сделана ссылка.</target>
        </trans-unit>
        <trans-unit id="386735a5ef2326d96732530103099d26861648c4" translate="yes" xml:space="preserve">
          <source>Concatenates two aliases and returns a new alias.</source>
          <target state="translated">Соединяет два псевдонима и возвращает новый псевдоним.</target>
        </trans-unit>
        <trans-unit id="d9fca663b0cde911b53f590809a91e7d824fbc80" translate="yes" xml:space="preserve">
          <source>Concatenates two binaries.</source>
          <target state="translated">Концентрирует два бинарных файла.</target>
        </trans-unit>
        <trans-unit id="0f2b5970a12dbb01ecd860bde29bb4c55faec263" translate="yes" xml:space="preserve">
          <source>Concatenates two document entities returning a new document.</source>
          <target state="translated">Сосредоточивает два документа,возвращающих новый документ.</target>
        </trans-unit>
        <trans-unit id="f8bc4ede142b49230daa5c308a51253e61b3acb4" translate="yes" xml:space="preserve">
          <source>Conceal. Not widely supported.</source>
          <target state="translated">Скрыть.Не пользуется широкой поддержкой.</target>
        </trans-unit>
        <trans-unit id="464963b89dcc6466af50e87b1ef88a9571abb6de" translate="yes" xml:space="preserve">
          <source>Concurrency and distribution</source>
          <target state="translated">Конкурентоспособность и распределение</target>
        </trans-unit>
        <trans-unit id="7cd453bb0f5341af9292ceae5a5c3162881bf52e" translate="yes" xml:space="preserve">
          <source>CondClauseError</source>
          <target state="translated">CondClauseError</target>
        </trans-unit>
        <trans-unit id="ee1067fabb817f815f6d1ba09137fd2a6703386f" translate="yes" xml:space="preserve">
          <source>CondClauseError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">CondClauseError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="be61fc18c63c243175cee5a20cbdc6209fe104d3" translate="yes" xml:space="preserve">
          <source>Config providers are typically used during releases to load external configuration while the system boots. This is done by starting the VM with the minimum amount of applications running, then invoking all of the providers, and then restarting the system. This requires a mutable configuration file on disk, as the results of the providers are written to the file system. For more information on runtime configuration, see &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt;&lt;code&gt;mix release&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Поставщики конфигурации обычно используются во время выпусков для загрузки внешней конфигурации во время загрузки системы. Для этого нужно запустить виртуальную машину с минимальным количеством запущенных приложений, затем вызвать всех поставщиков и перезапустить систему. Для этого требуется изменяемый файл конфигурации на диске, так как результаты поставщиков записываются в файловую систему. Дополнительные сведения о настройке среды выполнения см. В &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt; &lt;code&gt;mix release&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fcd3c95e9636c8e66396624d0366fb4e126a6fc" translate="yes" xml:space="preserve">
          <source>Config.Provider</source>
          <target state="translated">Config.Provider</target>
        </trans-unit>
        <trans-unit id="44f0cb9ea6de4ecc8ddcc1c6279200cfa4b1dd4c" translate="yes" xml:space="preserve">
          <source>Config.Provider &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Config.Provider &lt;small&gt;поведение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9ada04c4b7a0b493079259a2091c99186d5d2a8d" translate="yes" xml:space="preserve">
          <source>Config.Reader</source>
          <target state="translated">Config.Reader</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="933619b0b6242cbc74cd30c08b880cf1aadc921f" translate="yes" xml:space="preserve">
          <source>Configuration and customization. Releases give developers fine grained control over system configuration and the VM flags used to start the system.</source>
          <target state="translated">Конфигурация и настройка.Релизы предоставляют разработчикам детальный контроль над конфигурацией системы и флагами ВМ,используемыми для запуска системы.</target>
        </trans-unit>
        <trans-unit id="6d11d00d9a62190558bb928d4cffeb8d72a5cbfa" translate="yes" xml:space="preserve">
          <source>Configuration and releases</source>
          <target state="translated">Конфигурация и релизы</target>
        </trans-unit>
        <trans-unit id="304a1684e3b52f4fb102a5314a519b8e7696a2ea" translate="yes" xml:space="preserve">
          <source>Configuration files provide a mechanism for us to configure the environment of any application. Such configuration is done by the &lt;code&gt;config/config.exs&lt;/code&gt; file.</source>
          <target state="translated">Файлы конфигурации предоставляют нам механизм для настройки среды любого приложения. Такая конфигурация выполняется файлом &lt;code&gt;config/config.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afb00b3a5bb013d5e19cf2138a2e20f7d4494b4e" translate="yes" xml:space="preserve">
          <source>Configuration for most built-in data types are supported: &lt;code&gt;:atom&lt;/code&gt;, &lt;code&gt;:string&lt;/code&gt;, &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:list&lt;/code&gt;, &lt;code&gt;:number&lt;/code&gt;, &lt;code&gt;:boolean&lt;/code&gt;, &lt;code&gt;:nil&lt;/code&gt;, etc. The default is:</source>
          <target state="translated">Конфигурация для большинства встроенных типов данных поддерживаются: &lt;code&gt;:atom&lt;/code&gt; , &lt;code&gt;:string&lt;/code&gt; , &lt;code&gt;:binary&lt;/code&gt; , &lt;code&gt;:list&lt;/code&gt; , &lt;code&gt;:number&lt;/code&gt; , &lt;code&gt;:boolean&lt;/code&gt; , &lt;code&gt;:nil&lt;/code&gt; и т.д. по умолчанию:</target>
        </trans-unit>
        <trans-unit id="35d5425d04246c4803ef5cf5e8d025d35dd3c648" translate="yes" xml:space="preserve">
          <source>Configures ExUnit.</source>
          <target state="translated">Настраивает выход.</target>
        </trans-unit>
        <trans-unit id="f86ca4f2497f02577bc94a87775d8f36d626720d" translate="yes" xml:space="preserve">
          <source>Configures IEx.</source>
          <target state="translated">Настраивает IEx.</target>
        </trans-unit>
        <trans-unit id="39aba670500b643a046792d3d15815451b7382dd" translate="yes" xml:space="preserve">
          <source>Configures the given &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;root_key&lt;/code&gt;.</source>
          <target state="translated">Настраивает данный &lt;code&gt;key&lt;/code&gt; для данного &lt;code&gt;root_key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dab905aea9ce47c3e8e30630f4f6fdec7eafa472" translate="yes" xml:space="preserve">
          <source>Configures the given &lt;code&gt;root_key&lt;/code&gt;.</source>
          <target state="translated">Настраивает заданный &lt;code&gt;root_key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="931f9f9842f89caae33a5520f0561b2c38a9e395" translate="yes" xml:space="preserve">
          <source>Configures the given backend.</source>
          <target state="translated">Настраивает данную часть.</target>
        </trans-unit>
        <trans-unit id="f7ca95cd7d184c9f425b7a30f220923f9cfac8a1" translate="yes" xml:space="preserve">
          <source>Configures the logger.</source>
          <target state="translated">Настраивает лесозаготовитель.</target>
        </trans-unit>
        <trans-unit id="2d88aa7d5d042401a88814d3d2e345c7830e2a8f" translate="yes" xml:space="preserve">
          <source>Configuring releases</source>
          <target state="translated">Настройка релизов</target>
        </trans-unit>
        <trans-unit id="7297dda9d64e28b97aa3fde0b781b550726677f6" translate="yes" xml:space="preserve">
          <source>Configuring the shell</source>
          <target state="translated">Настройка оболочки</target>
        </trans-unit>
        <trans-unit id="480ea81ed58de6247a0cec11d6c975007208ce9e" translate="yes" xml:space="preserve">
          <source>Connecting an Elixir shell to a remote node without Elixir is &lt;strong&gt;not&lt;/strong&gt; supported.</source>
          <target state="translated">Подключение оболочки Elixir к удаленному узлу без Elixir &lt;strong&gt;не&lt;/strong&gt; поддерживается.</target>
        </trans-unit>
        <trans-unit id="c0f664a4d1ec0a9ec3a687038c62cd4690e15c63" translate="yes" xml:space="preserve">
          <source>Consider a new application &lt;code&gt;:my_app&lt;/code&gt;. &lt;code&gt;:my_app&lt;/code&gt; contains a database engine which supports a pool of databases. The database engine needs to know the configuration for each of those databases, and that configuration is supplied by key-value pairs in environment of &lt;code&gt;:my_app&lt;/code&gt;.</source>
          <target state="translated">Рассмотрим новое приложение &lt;code&gt;:my_app&lt;/code&gt; . &lt;code&gt;:my_app&lt;/code&gt; содержит ядро базы данных, которое поддерживает пул баз данных. Механизм базы данных должен знать конфигурацию для каждой из этих баз данных, и эта конфигурация предоставляется парами ключ-значение в среде &lt;code&gt;:my_app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">Рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="3d212d623893215a5c1ab44a4dc949acff16e8f9" translate="yes" xml:space="preserve">
          <source>Consider the implementation below:</source>
          <target state="translated">Рассмотрим реализацию ниже:</target>
        </trans-unit>
        <trans-unit id="7a7b310d2495e484fea1ff460e80d2fdad0204cf" translate="yes" xml:space="preserve">
          <source>Consider these two examples:</source>
          <target state="translated">Рассмотрим эти два примера:</target>
        </trans-unit>
        <trans-unit id="2b2d8a64936d851f0d73e6380decdfbb4b3fdb12" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;task.supervisor#async_stream/6&quot;&gt;&lt;code&gt;Task.Supervisor.async_stream/6&lt;/code&gt;&lt;/a&gt; to start tasks under a supervisor. If you find yourself trapping exits to handle exits inside the async stream, consider using &lt;a href=&quot;task.supervisor#async_stream_nolink/6&quot;&gt;&lt;code&gt;Task.Supervisor.async_stream_nolink/6&lt;/code&gt;&lt;/a&gt; to start tasks that are not linked to the calling process.</source>
          <target state="translated">Рассмотрите возможность использования &lt;a href=&quot;task.supervisor#async_stream/6&quot;&gt; &lt;code&gt;Task.Supervisor.async_stream/6&lt;/code&gt; &lt;/a&gt; для запуска задач под супервизором. Если вы обнаруживаете, что перехватываете выходы для обработки выходов внутри асинхронного потока, подумайте об использовании &lt;a href=&quot;task.supervisor#async_stream_nolink/6&quot;&gt; &lt;code&gt;Task.Supervisor.async_stream_nolink/6&lt;/code&gt; &lt;/a&gt; для запуска задач, которые не связаны с вызывающим процессом.</target>
        </trans-unit>
        <trans-unit id="6430b20394a2b43032f0df564046ae9e5ed61c04" translate="yes" xml:space="preserve">
          <source>Considers the next break as fit.</source>
          <target state="translated">Считает следующий перерыв подходящим.</target>
        </trans-unit>
        <trans-unit id="39cbdd33812e96a59909005452966168ffe901bd" translate="yes" xml:space="preserve">
          <source>Console backend</source>
          <target state="translated">Бэкэнд консоли</target>
        </trans-unit>
        <trans-unit id="81ff41187d9a55a0a0d410b37e2a03ec4014258e" translate="yes" xml:space="preserve">
          <source>Consolidation</source>
          <target state="translated">Consolidation</target>
        </trans-unit>
        <trans-unit id="781883259f97b814dbeb10bd2aa9654bde39c92f" translate="yes" xml:space="preserve">
          <source>Consolidation happens by changing the protocol &lt;code&gt;impl_for&lt;/code&gt; in the abstract format to have fast lookup rules. Usually the list of implementations to use during consolidation are retrieved with the help of &lt;a href=&quot;#extract_impls/2&quot;&gt;&lt;code&gt;extract_impls/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Консолидация происходит путем изменения протокола &lt;code&gt;impl_for&lt;/code&gt; в абстрактном формате, чтобы иметь правила быстрого поиска. Обычно список реализаций, используемых во время консолидации, извлекается с помощью &lt;a href=&quot;#extract_impls/2&quot;&gt; &lt;code&gt;extract_impls/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea5ee0077ba2637f156ee60a85375b364c21ab7b" translate="yes" xml:space="preserve">
          <source>Constructs such as &lt;code&gt;unless/2&lt;/code&gt;, &lt;code&gt;defmacro/2&lt;/code&gt;, &lt;code&gt;def/2&lt;/code&gt;, &lt;code&gt;defprotocol/2&lt;/code&gt;, and many others used throughout this getting started guide are implemented in pure Elixir, often as a macro. This means that the constructs being used to build the language can be used by developers to extend the language to the domains they are working on.</source>
          <target state="translated">Такие конструкции, как &lt;code&gt;defmacro/2&lt;/code&gt; &lt;code&gt;unless/2&lt;/code&gt; , defmacro / 2 , &lt;code&gt;def/2&lt;/code&gt; , &lt;code&gt;defprotocol/2&lt;/code&gt; и многие другие, используемые в этом руководстве по началу работы , реализованы в чистом Эликсире, часто в виде макроса. Это означает, что конструкции, используемые для создания языка, могут использоваться разработчиками для расширения языка на те области, над которыми они работают.</target>
        </trans-unit>
        <trans-unit id="f06815eccc7951b7a3293862d553938e6057b7dd" translate="yes" xml:space="preserve">
          <source>Consult &lt;a href=&quot;https://hexdocs.pm/elixir/guards.html&quot;&gt;the full documentation for guards&lt;/a&gt; for more information about guards, how they are used, and what expressions are allowed in them.</source>
          <target state="translated">Проконсультируйтесь &lt;a href=&quot;https://hexdocs.pm/elixir/guards.html&quot;&gt;с полной документацией по охранникам,&lt;/a&gt; чтобы получить дополнительную информацию о стражниках, их использовании и разрешенных выражениях.</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="1bbfd156f85e030d051094c906e097817e15b4d1" translate="yes" xml:space="preserve">
          <source>Continues execution of the current process.</source>
          <target state="translated">Продолжает выполнение текущего процесса.</target>
        </trans-unit>
        <trans-unit id="9cf96af56061f48b77f2ca372e437a5cbfd34ccd" translate="yes" xml:space="preserve">
          <source>Controls an IO device process that wraps a string.</source>
          <target state="translated">Управляет процессом IO-устройства,которое обматывает строку.</target>
        </trans-unit>
        <trans-unit id="511bc588c44b169481c4ab2f5fa4baa6ea94d293" translate="yes" xml:space="preserve">
          <source>Convenience functions for defining supervisor specifications.</source>
          <target state="translated">Функции удобства для определения спецификаций супервайзера.</target>
        </trans-unit>
        <trans-unit id="1896f8c1898ba69ed8398e4cd445925ae4014f8a" translate="yes" xml:space="preserve">
          <source>Convenience functions for working with atoms.</source>
          <target state="translated">Функции удобства для работы с атомами.</target>
        </trans-unit>
        <trans-unit id="0dec42bbf61a109359c91148d0509bd563207899" translate="yes" xml:space="preserve">
          <source>Convenience to get the path relative to the current working directory.</source>
          <target state="translated">Удобство получения пути относительно текущей рабочей директории.</target>
        </trans-unit>
        <trans-unit id="9398c3d1709bffcf5ee58dc22ca7bba010067260" translate="yes" xml:space="preserve">
          <source>Conveniences for formatting data for logs.</source>
          <target state="translated">Удобства для форматирования данных для журналов.</target>
        </trans-unit>
        <trans-unit id="ac8dec653917d71f3e1fde2e3774b6870ed89c0c" translate="yes" xml:space="preserve">
          <source>Conveniences for spawning and awaiting tasks.</source>
          <target state="translated">Удобства для нереста и ожидания задач.</target>
        </trans-unit>
        <trans-unit id="11a944db3534dab5708e3a3090c3d296632e9d28" translate="yes" xml:space="preserve">
          <source>Conveniences for working with macros.</source>
          <target state="translated">Удобства для работы с макросами.</target>
        </trans-unit>
        <trans-unit id="58e5e941c629021c4446da1893e95f1f6661c6be" translate="yes" xml:space="preserve">
          <source>Conveniences for working with processes and the process dictionary.</source>
          <target state="translated">Удобства для работы с процессами и словарем процессов.</target>
        </trans-unit>
        <trans-unit id="2bb0c4c90fda78018fef946d3af1057c1a6f7f6f" translate="yes" xml:space="preserve">
          <source>Conveniently, Elixir allows developers to hide modules and functions from the documentation, by setting &lt;code&gt;@doc false&lt;/code&gt; to hide a particular function, or &lt;code&gt;@moduledoc false&lt;/code&gt; to hide the whole module. If a module is hidden, you may even document the functions in the module, but the module itself won't be listed in the documentation:</source>
          <target state="translated">Удобно, что Elixir позволяет разработчикам скрывать модули и функции из документации, задав &lt;code&gt;@doc false&lt;/code&gt; , чтобы скрыть определенную функцию, или &lt;code&gt;@moduledoc false&lt;/code&gt; , чтобы скрыть весь модуль. Если модуль скрыт, вы можете даже задокументировать функции в модуле, но сам модуль не будет указан в документации:</target>
        </trans-unit>
        <trans-unit id="734c112fb013ffbcab9477e1420f148661879dd3" translate="yes" xml:space="preserve">
          <source>Converts &lt;a href=&quot;#t:day_fraction/0&quot;&gt;&lt;code&gt;day_fraction/0&lt;/code&gt;&lt;/a&gt; to the Calendar's time format.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#t:day_fraction/0&quot;&gt; &lt;code&gt;day_fraction/0&lt;/code&gt; &lt;/a&gt; в формат времени календаря.</target>
        </trans-unit>
        <trans-unit id="c263dea4a8926f236fd6cf885211f470d0040f25" translate="yes" xml:space="preserve">
          <source>Converts &lt;a href=&quot;#t:iso_days/0&quot;&gt;&lt;code&gt;iso_days/0&lt;/code&gt;&lt;/a&gt; to the Calendar's datetime format.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#t:iso_days/0&quot;&gt; &lt;code&gt;iso_days/0&lt;/code&gt; &lt;/a&gt; в формат даты и времени календаря.</target>
        </trans-unit>
        <trans-unit id="2c5350eabc852769f746830f4fbed1c2624db80b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;enumerable&lt;/code&gt; to a list.</source>
          <target state="translated">Преобразует &lt;code&gt;enumerable&lt;/code&gt; в список.</target>
        </trans-unit>
        <trans-unit id="a74487f27205428d15f0451bc0d11babd1e1ca88" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;map&lt;/code&gt; to a list.</source>
          <target state="translated">Преобразует &lt;code&gt;map&lt;/code&gt; в список.</target>
        </trans-unit>
        <trans-unit id="7f76385606d85b29a0ecab53642a1b53c3fb2af8" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;map_set&lt;/code&gt; to a list.</source>
          <target state="translated">Преобразует &lt;code&gt;map_set&lt;/code&gt; в список.</target>
        </trans-unit>
        <trans-unit id="b4037010ef8b8f68c53234550440e37ebcec11b4" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;term&lt;/code&gt; into an algebra document.</source>
          <target state="translated">Преобразует &lt;code&gt;term&lt;/code&gt; в документ алгебры.</target>
        </trans-unit>
        <trans-unit id="2239811e8691306d987c87bb035ec0e285472797" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;term&lt;/code&gt; to a charlist.</source>
          <target state="translated">Преобразует &lt;code&gt;term&lt;/code&gt; в список символов.</target>
        </trans-unit>
        <trans-unit id="9282cdf0f052d8c88bcaf95a8ca087cb35fb7850" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;term&lt;/code&gt; to a string.</source>
          <target state="translated">Преобразует &lt;code&gt;term&lt;/code&gt; в строку.</target>
        </trans-unit>
        <trans-unit id="dcced501d6c07a24ff93c483518b8cc2d151f569" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;time&lt;/code&gt; from time unit &lt;code&gt;from_unit&lt;/code&gt; to time unit &lt;code&gt;to_unit&lt;/code&gt;.</source>
          <target state="translated">Преобразует &lt;code&gt;time&lt;/code&gt; из единицы времени &lt;code&gt;from_unit&lt;/code&gt; в единицу времени &lt;code&gt;to_unit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b45c5892f77b48c1c88133c4a37df2e1f1e3aa7" translate="yes" xml:space="preserve">
          <source>Converts IO data into a binary</source>
          <target state="translated">Преобразовывает данные ввода-вывода в двоичный файл</target>
        </trans-unit>
        <trans-unit id="1e80e49bd371488057e5eccaf5915dabe9cfd4b5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; into &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; во &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79f2b0486144a184da614f47d1d9aa5bd5c88b86" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e51af90c033ac5546b2570c303b594fb7ef386c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct to a &lt;code&gt;:file_info&lt;/code&gt; record.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; - структуру к &lt;code&gt;:file_info&lt;/code&gt; записи.</target>
        </trans-unit>
        <trans-unit id="e71a4386d83ce453a946bfe6a893f35063f07d35" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; into &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; во &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83028e5e704a1dc83086bc5f2000e97670618390" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f9f5e5dfb5e1f309523442b6a2bb70c25fa00ad" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; struct to an Erlang datetime tuple.</source>
          <target state="translated">Преобразует структуру &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; в кортеж даты и времени Erlang.</target>
        </trans-unit>
        <trans-unit id="8719af2c72dba20a75e23d17b6bea44825e5d5d1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;:file_info&lt;/code&gt; record into a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует запись &lt;code&gt;:file_info&lt;/code&gt; в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2727fee5122159fbc0af23661dab2ef0c9c2631" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;struct&lt;/code&gt; to map.</source>
          <target state="translated">Преобразует &lt;code&gt;struct&lt;/code&gt; в карту.</target>
        </trans-unit>
        <trans-unit id="254bf8d1b281f322924363fb1a83ad9e2361d7e3" translate="yes" xml:space="preserve">
          <source>Converts a charlist to an atom.</source>
          <target state="translated">Преобразует чарлиста в атом.</target>
        </trans-unit>
        <trans-unit id="e68efbd247250deb02e7332f2af7b7b7a3149d56" translate="yes" xml:space="preserve">
          <source>Converts a charlist to an existing atom. Raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the atom does not exist.</source>
          <target state="translated">Преобразует список символов в существующий атом. Вызывает ошибку &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; ,&lt;/a&gt; если атом не существует.</target>
        </trans-unit>
        <trans-unit id="0a5d5cd9b05db0c45b6438328ca412df82f34ace" translate="yes" xml:space="preserve">
          <source>Converts a day fraction to this Calendar's representation of time.</source>
          <target state="translated">Преобразует дробь дня в представление времени в этом Календаре.</target>
        </trans-unit>
        <trans-unit id="0e54c7b2dbe83fdf26bac6202e532577515f8965" translate="yes" xml:space="preserve">
          <source>Converts a given &lt;code&gt;datetime&lt;/code&gt; from one calendar to another.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;datetime&lt;/code&gt; из одного календаря в другой.</target>
        </trans-unit>
        <trans-unit id="d8dc043a8b2c88ab996fe2e13bf007f26909078f" translate="yes" xml:space="preserve">
          <source>Converts a list of integers representing code points, lists or strings into a charlist.</source>
          <target state="translated">Преобразовывает список целых чисел,представляющих точки кода,списки или строки в charlist.</target>
        </trans-unit>
        <trans-unit id="6e5cc0b47448c4c5bcff4e00375ab0e486ccf2c4" translate="yes" xml:space="preserve">
          <source>Converts a list of integers representing code points, lists or strings into a string.</source>
          <target state="translated">Преобразует список целых чисел,представляющих точки кода,списки или строки в строку.</target>
        </trans-unit>
        <trans-unit id="c987e9c958f5bc59b13e956f62b766e68b6fe8f4" translate="yes" xml:space="preserve">
          <source>Converts a list to a tuple.</source>
          <target state="translated">Преобразует список в кортеж.</target>
        </trans-unit>
        <trans-unit id="02dde49cf9a6a46064141cae9a87851199d4ae33" translate="yes" xml:space="preserve">
          <source>Converts a string into a charlist.</source>
          <target state="translated">Преобразует строку в чарлист.</target>
        </trans-unit>
        <trans-unit id="947ec7e9bf96de02e99903966169c97ef903b0be" translate="yes" xml:space="preserve">
          <source>Converts a string to an atom.</source>
          <target state="translated">Преобразует строку в атом.</target>
        </trans-unit>
        <trans-unit id="780538ea266d284ab56b9dc3c29cf37ce27a4b0f" translate="yes" xml:space="preserve">
          <source>Converts a string to an existing atom.</source>
          <target state="translated">Преобразует строку в существующий атом.</target>
        </trans-unit>
        <trans-unit id="b5a8ad6e165d7ed1c7615d02f03e2dbeea23252b" translate="yes" xml:space="preserve">
          <source>Converts a tuple to a list.</source>
          <target state="translated">Преобразует кортеж в список.</target>
        </trans-unit>
        <trans-unit id="13453b8d1508b3203babeb1e62e12b28c32edc34" translate="yes" xml:space="preserve">
          <source>Converts all characters in &lt;code&gt;string&lt;/code&gt; to Unicode normalization form identified by &lt;code&gt;form&lt;/code&gt;.</source>
          <target state="translated">Преобразует все символы в &lt;code&gt;string&lt;/code&gt; в форму нормализации Unicode, определяемую &lt;code&gt;form&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9b6510ebfe5cd9b4636c09de47097a06fbbf94e" translate="yes" xml:space="preserve">
          <source>Converts all characters in the given string to lowercase according to &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">Преобразует все символы в данной строке в нижний регистр в соответствии с &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27176c2f820ec7f891716f0f78755c8187c887d6" translate="yes" xml:space="preserve">
          <source>Converts all characters in the given string to uppercase according to &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">Преобразует все символы в данной строке в верхний регистр в соответствии с &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="197e6c77a16aeec861dffc2a445548a230c5e211" translate="yes" xml:space="preserve">
          <source>Converts an Elixir term to an algebra document according to the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">Преобразует термин Elixir в документ алгебры в соответствии с протоколом &lt;a href=&quot;inspect&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad1541b2455219564d77382ed7fe2e73581b2fa4" translate="yes" xml:space="preserve">
          <source>Converts an Erlang date tuple but raises for invalid dates.</source>
          <target state="translated">Преобразовывает кортеж даты Эрланга,но повышает для недействительных дат.</target>
        </trans-unit>
        <trans-unit id="6237472326aa97d4d91dbe7ea3d8a7f40e943982" translate="yes" xml:space="preserve">
          <source>Converts an Erlang date tuple to a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Преобразует кортеж даты Erlang в структуру &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0dc925bdd2a6249b07fa9efae38dfa76258fa019" translate="yes" xml:space="preserve">
          <source>Converts an Erlang datetime tuple to a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Преобразует кортеж даты и времени Erlang в структуру &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8dd9ae9ebd84083585be7487d706b7eaa52e69ec" translate="yes" xml:space="preserve">
          <source>Converts an Erlang time tuple to a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Преобразует кортеж времени Erlang в структуру &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d582318b9473f2734864958a0821294f01f1b66d" translate="yes" xml:space="preserve">
          <source>Converts an atom to a charlist.</source>
          <target state="translated">Преобразует атом в чарлиста.</target>
        </trans-unit>
        <trans-unit id="7fa16e00cee3fcccbfdea7311d60ada14e4f260e" translate="yes" xml:space="preserve">
          <source>Converts an atom to a string.</source>
          <target state="translated">Преобразует атом в строку.</target>
        </trans-unit>
        <trans-unit id="e841d0667d5d6ef74ab9e5853d985c4cea6b18cc" translate="yes" xml:space="preserve">
          <source>Converts chardata into a string.</source>
          <target state="translated">Преобразует чардата в строку.</target>
        </trans-unit>
        <trans-unit id="a145202abf06e7ca92dcbfc3594ac19f06cf61b5" translate="yes" xml:space="preserve">
          <source>Converts given &lt;code&gt;time&lt;/code&gt; to a different calendar.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;time&lt;/code&gt; в другой календарь.</target>
        </trans-unit>
        <trans-unit id="60bf168f1407388298d9b210e72535da75765532" translate="yes" xml:space="preserve">
          <source>Converts given &lt;code&gt;time&lt;/code&gt; to an Erlang time tuple.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;time&lt;/code&gt; в кортеж времени Erlang.</target>
        </trans-unit>
        <trans-unit id="3ac0da74aab610cfdee319e397f52884c7cca511" translate="yes" xml:space="preserve">
          <source>Converts the &lt;a href=&quot;calendar#t:iso_days/0&quot;&gt;&lt;code&gt;Calendar.iso_days/0&lt;/code&gt;&lt;/a&gt; format to the datetime format specified by this calendar.</source>
          <target state="translated">Преобразует формат &lt;a href=&quot;calendar#t:iso_days/0&quot;&gt; &lt;code&gt;Calendar.iso_days/0&lt;/code&gt; в&lt;/a&gt; формат даты и времени, заданный этим календарем.</target>
        </trans-unit>
        <trans-unit id="4b6111172b0ba4063d262291c6c3b2b09eac09ae" translate="yes" xml:space="preserve">
          <source>Converts the IO &lt;code&gt;device&lt;/code&gt; into an &lt;a href=&quot;io.stream&quot;&gt;&lt;code&gt;IO.Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует &lt;code&gt;device&lt;/code&gt; ввода-вывода в &lt;a href=&quot;io.stream&quot;&gt; &lt;code&gt;IO.Stream&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e89484d19f8b391081fcfbf11774ccd7e0029f8" translate="yes" xml:space="preserve">
          <source>Converts the IO &lt;code&gt;device&lt;/code&gt; into an &lt;a href=&quot;io.stream&quot;&gt;&lt;code&gt;IO.Stream&lt;/code&gt;&lt;/a&gt;. The operation is Unicode unsafe.</source>
          <target state="translated">Преобразует &lt;code&gt;device&lt;/code&gt; ввода-вывода в &lt;a href=&quot;io.stream&quot;&gt; &lt;code&gt;IO.Stream&lt;/code&gt; &lt;/a&gt; . Операция небезопасна для Unicode.</target>
        </trans-unit>
        <trans-unit id="c8e6e16de8acf03faa5a8b241195a52aa4b1e29e" translate="yes" xml:space="preserve">
          <source>Converts the argument to a string according to the &lt;a href=&quot;string.chars&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">Преобразует аргумент в строку в соответствии с протоколом &lt;a href=&quot;string.chars&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b8fbdf0a0fa574e14e63c37f6a8ef88b3232cef" translate="yes" xml:space="preserve">
          <source>Converts the date into a string according to the calendar.</source>
          <target state="translated">Преобразует дату в строку в соответствии с календарем.</target>
        </trans-unit>
        <trans-unit id="227b186ae0acc44776906432dd066fbe4fde8846" translate="yes" xml:space="preserve">
          <source>Converts the datetime (with time zone) into a string according to the calendar.</source>
          <target state="translated">Преобразует дату (с часовым поясом)в строку в соответствии с календарем.</target>
        </trans-unit>
        <trans-unit id="92e2c5a23650305fee01a1fcd9a57ab26fc28d72" translate="yes" xml:space="preserve">
          <source>Converts the datetime (with time zone) into a string.</source>
          <target state="translated">Преобразует дату (с часовым поясом)в строку.</target>
        </trans-unit>
        <trans-unit id="e1625d9cdfd25143785b1fa11bbd89706012c4af" translate="yes" xml:space="preserve">
          <source>Converts the datetime (without time zone) into a string according to the calendar.</source>
          <target state="translated">Преобразует дату (без часового пояса)в строку в соответствии с календарем.</target>
        </trans-unit>
        <trans-unit id="717185aa13daa78bdde43f04c886115fa0e73941" translate="yes" xml:space="preserve">
          <source>Converts the datetime (without time zone) into a string.</source>
          <target state="translated">Преобразует дату (без часового пояса)в строку.</target>
        </trans-unit>
        <trans-unit id="a2abe353af0045108936797a9195af1772dfd552" translate="yes" xml:space="preserve">
          <source>Converts the first character in the given string to uppercase and the remainder to lowercase according to &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">Преобразует первый символ данной строки в верхний регистр, а остаток в нижний регистр в соответствии с &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4564c56ea18e08e51a07042222eb171cff78504" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует заданный &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21e264a9524cd6e7dc80e416d4e36f478333a439" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;date&lt;/code&gt; from its calendar to the given &lt;code&gt;calendar&lt;/code&gt;.</source>
          <target state="translated">Преобразует заданную &lt;code&gt;date&lt;/code&gt; из своего календаря в заданный &lt;code&gt;calendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="030c0774d22f233ba42fb12f10a1a70296d43037" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;date&lt;/code&gt; to &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601:2004&lt;/a&gt;.</source>
          <target state="translated">Преобразует данную &lt;code&gt;date&lt;/code&gt; в &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601: 2004&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6c9bebf617d290f961736311cefb7f89e429aa0" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;date&lt;/code&gt; to an Erlang date tuple.</source>
          <target state="translated">Преобразует заданную &lt;code&gt;date&lt;/code&gt; в кортеж дат Erlang.</target>
        </trans-unit>
        <trans-unit id="90042dc24d2d96d4b3dd9984c599920efaec9579" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;datetime&lt;/code&gt; into a &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;datetime&lt;/code&gt; в &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38607d070d5886f0af38c1f08b0fc3fd52cfa931" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;datetime&lt;/code&gt; to Unix time.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;datetime&lt;/code&gt; во время Unix.</target>
        </trans-unit>
        <trans-unit id="e7713cd000f48f06c03b261c1ce2b54eeac3472c" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;datetime&lt;/code&gt; to a string according to its calendar.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;datetime&lt;/code&gt; в строку в соответствии с его календарем.</target>
        </trans-unit>
        <trans-unit id="023233441b992e80b392f70911a5906ce4e0cba9" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;naive_datetime&lt;/code&gt; from one calendar to another.</source>
          <target state="translated">Преобразует заданное время &lt;code&gt;naive_datetime&lt;/code&gt; из одного календаря в другой.</target>
        </trans-unit>
        <trans-unit id="8ec6376d2a13e24a0141c11d23138342f5fbc8b0" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;time&lt;/code&gt; to a string.</source>
          <target state="translated">Преобразует заданное &lt;code&gt;time&lt;/code&gt; в строку.</target>
        </trans-unit>
        <trans-unit id="5e23f4682b8833610adb0fd47c62bcd1fdcc4cd9" translate="yes" xml:space="preserve">
          <source>Converts the given Unix time to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Преобразует заданное время Unix в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="612b4c3348db1df419a84869d47308c8a6a2a9d6" translate="yes" xml:space="preserve">
          <source>Converts the given atom or binary to underscore format.</source>
          <target state="translated">Преобразует заданный атом или двоичный файл в формат подчёркивания.</target>
        </trans-unit>
        <trans-unit id="e4c120019c6ce0243ca3ed4ef026a01e5af3d50a" translate="yes" xml:space="preserve">
          <source>Converts the given date into a string.</source>
          <target state="translated">Преобразует указанную дату в строку.</target>
        </trans-unit>
        <trans-unit id="748850d792b313b153351dc3fad876e09a4a6167" translate="yes" xml:space="preserve">
          <source>Converts the given date to a string according to its calendar.</source>
          <target state="translated">Преобразует данную дату в строку в соответствии с ее календарем.</target>
        </trans-unit>
        <trans-unit id="580ca61be38d506e1fbabba1567234376f9fb67a" translate="yes" xml:space="preserve">
          <source>Converts the given datetime (without time zone) into the &lt;a href=&quot;#t:iso_days/0&quot;&gt;&lt;code&gt;iso_days/0&lt;/code&gt;&lt;/a&gt; format.</source>
          <target state="translated">Преобразует заданное datetime (без часового пояса) в формат &lt;a href=&quot;#t:iso_days/0&quot;&gt; &lt;code&gt;iso_days/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ac5ca644110fb9234b585f20da953fc40183d3a" translate="yes" xml:space="preserve">
          <source>Converts the given datetime to &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601:2004&lt;/a&gt; format.</source>
          <target state="translated">Преобразует указанную дату и время в формат &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601: 2004&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98e2af74ab4f811ebccb7dfd38e2983ea26bd505" translate="yes" xml:space="preserve">
          <source>Converts the given expression AST to a string.</source>
          <target state="translated">Преобразует данное выражение AST в строку.</target>
        </trans-unit>
        <trans-unit id="1a63c1aa4ca02493d9e3dc44717b50d2c6cdc341" translate="yes" xml:space="preserve">
          <source>Converts the given naive datetime to &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601:2004&lt;/a&gt;.</source>
          <target state="translated">Преобразует заданное наивное datetime в &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601: 2004&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="228c1561eef12bb4d3d95a29c1441ec5a4be11f6" translate="yes" xml:space="preserve">
          <source>Converts the given naive datetime to a string according to its calendar.</source>
          <target state="translated">Преобразует заданное наивное время даты в строку в соответствии со своим календарем.</target>
        </trans-unit>
        <trans-unit id="c9286e3dd5d56cf4207fbf7300a7241dc950a591" translate="yes" xml:space="preserve">
          <source>Converts the given path to an absolute one. Unlike &lt;a href=&quot;#expand/1&quot;&gt;&lt;code&gt;expand/1&lt;/code&gt;&lt;/a&gt;, no attempt is made to resolve &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">Преобразует заданный путь в абсолютный. В отличие от &lt;a href=&quot;#expand/1&quot;&gt; &lt;code&gt;expand/1&lt;/code&gt; &lt;/a&gt; , не предпринимается попыток разрешить &lt;code&gt;..&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; или &lt;code&gt;~&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f7f5abb6efabe13737c9ca4626a86c8733407bd" translate="yes" xml:space="preserve">
          <source>Converts the given string to CamelCase format.</source>
          <target state="translated">Преобразует данную строку в формат CamelCase.</target>
        </trans-unit>
        <trans-unit id="309d33e35d53f2e58eb95fc785af528ca7744f6d" translate="yes" xml:space="preserve">
          <source>Converts the given string to its quoted form.</source>
          <target state="translated">Преобразует данную строку в ее кавычки.</target>
        </trans-unit>
        <trans-unit id="8bc0590b1dbce230536e4466653afeda26e0e2ec" translate="yes" xml:space="preserve">
          <source>Converts the given term to a charlist according to the &lt;a href=&quot;list.chars&quot;&gt;&lt;code&gt;List.Chars&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">Преобразует заданный термин в список символов в соответствии с протоколом &lt;a href=&quot;list.chars&quot;&gt; &lt;code&gt;List.Chars&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c044a36802721d40a5b50ee9d1fca02b69813080" translate="yes" xml:space="preserve">
          <source>Converts the given time into a string.</source>
          <target state="translated">Преобразует заданное время в строку.</target>
        </trans-unit>
        <trans-unit id="babee3dcd26752eb23edd13cb79aa04dd96a76e9" translate="yes" xml:space="preserve">
          <source>Converts the given time to &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601:2004&lt;/a&gt;.</source>
          <target state="translated">Преобразует заданное время в &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601: 2004&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c7a03767b5d1566df3d146e4fbaef558f6a1090" translate="yes" xml:space="preserve">
          <source>Converts the given time to the &lt;a href=&quot;#t:day_fraction/0&quot;&gt;&lt;code&gt;day_fraction/0&lt;/code&gt;&lt;/a&gt; format.</source>
          <target state="translated">Преобразует заданное время в формат &lt;a href=&quot;#t:day_fraction/0&quot;&gt; &lt;code&gt;day_fraction/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8bef9301d9edb5e35de1e260e607e1823667132d" translate="yes" xml:space="preserve">
          <source>Converts the path to an absolute one and expands any &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; characters and a leading &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">Преобразует путь в абсолютный и расширяет любой &lt;code&gt;.&lt;/code&gt; и &lt;code&gt;..&lt;/code&gt; персонажи и ведущие &lt;code&gt;~&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23415e661cc9d41a024959347984730e2601bed2" translate="yes" xml:space="preserve">
          <source>Converts the time into a string according to the calendar.</source>
          <target state="translated">Преобразует время в строку в соответствии с календарем.</target>
        </trans-unit>
        <trans-unit id="0a49d0c8f3285f335233220c5993daacbad3d3a5" translate="yes" xml:space="preserve">
          <source>Copies the contents in &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;destination&lt;/code&gt; recursively, maintaining the source directory structure and modes.</source>
          <target state="translated">Рекурсивно копирует содержимое из &lt;code&gt;source&lt;/code&gt; в &lt;code&gt;destination&lt;/code&gt; , сохраняя структуру и режимы исходного каталога.</target>
        </trans-unit>
        <trans-unit id="abf53458642b38d338f60c6e1bf1d5064dfd444e" translate="yes" xml:space="preserve">
          <source>Copies the contents in &lt;code&gt;source_file&lt;/code&gt; to &lt;code&gt;destination_file&lt;/code&gt; preserving its modes.</source>
          <target state="translated">Копирует содержимое в &lt;code&gt;source_file&lt;/code&gt; для &lt;code&gt;destination_file&lt;/code&gt; сохранения своих режимов.</target>
        </trans-unit>
        <trans-unit id="e3e9a52265052fb7c4cbfaaee0f1c813d805b775" translate="yes" xml:space="preserve">
          <source>Copies the contents of &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;destination&lt;/code&gt;.</source>
          <target state="translated">Копирует содержимое &lt;code&gt;source&lt;/code&gt; в &lt;code&gt;destination&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb042f0b0cf7bbae523e4db50401acd89b538c94" translate="yes" xml:space="preserve">
          <source>Copies the given spec as a callback.</source>
          <target state="translated">Копирует данную спецификацию в качестве обратного вызова.</target>
        </trans-unit>
        <trans-unit id="5bd5c22751074967a6095132bfee44e6a2f51436" translate="yes" xml:space="preserve">
          <source>Count the code points in each string asynchronously, then add the counts together using reduce.</source>
          <target state="translated">Считайте точки кода в каждой строке асинхронно,затем,используя сокращения,складывайте их вместе.</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">Coverage</target>
        </trans-unit>
        <trans-unit id="028ea82f8e6a71263262972962b3eb339200a07d" translate="yes" xml:space="preserve">
          <source>Create a file at &lt;code&gt;lib/kv/router.ex&lt;/code&gt; with the following contents:</source>
          <target state="translated">Создайте файл в &lt;code&gt;lib/kv/router.ex&lt;/code&gt; со следующим содержимым:</target>
        </trans-unit>
        <trans-unit id="1ef2cd8271ebb73d84add4da7d468bc9403cf8d4" translate="yes" xml:space="preserve">
          <source>Create a file at &lt;code&gt;test/kv/bucket_test.exs&lt;/code&gt; (remember the &lt;code&gt;.exs&lt;/code&gt; extension) with the following:</source>
          <target state="translated">Создайте файл по адресу &lt;code&gt;test/kv/bucket_test.exs&lt;/code&gt; (помните расширение &lt;code&gt;.exs&lt;/code&gt; ) со следующим:</target>
        </trans-unit>
        <trans-unit id="a8070c19ec35f828badfb0971876a3836aa01640" translate="yes" xml:space="preserve">
          <source>Create a new file at &lt;code&gt;lib/kv/registry.ex&lt;/code&gt; with the following contents:</source>
          <target state="translated">Создайте новый файл в &lt;code&gt;lib/kv/registry.ex&lt;/code&gt; со следующим содержимым:</target>
        </trans-unit>
        <trans-unit id="4d096b85c273e9bc8931277d2ffdc25ab305cfa5" translate="yes" xml:space="preserve">
          <source>Creates a PID from &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Создает PID из &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17c20052fb303436bdb11d8899b481f14df4590c" translate="yes" xml:space="preserve">
          <source>Creates a PID with 3 non-negative integers passed as arguments to the function.</source>
          <target state="translated">Создает PID с 3 неотрицательными целыми числами,переданными в качестве аргументов функции.</target>
        </trans-unit>
        <trans-unit id="4ccd0821086d4ce314a99c2b1ec5d27e4161dbd2" translate="yes" xml:space="preserve">
          <source>Creates a Port from &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Создает порт из &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95deb48dcab4fa865482dbf5af752daa124b8bc8" translate="yes" xml:space="preserve">
          <source>Creates a Port from two non-negative integers.</source>
          <target state="translated">Создает порт из двух неотрицательных целых чисел.</target>
        </trans-unit>
        <trans-unit id="65524decb6cf29f2e8ddd1d1ebc67371ef0050b6" translate="yes" xml:space="preserve">
          <source>Creates a Reference from &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Создает ссылку из &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80e84c042a84564fb45d3e4ea04bdde0d79343e7" translate="yes" xml:space="preserve">
          <source>Creates a Reference from its 4 non-negative integers components.</source>
          <target state="translated">Создает ссылку из 4 неотрицательных целочисленных компонентов.</target>
        </trans-unit>
        <trans-unit id="72a773275c1891d62c509356c702ed500fd44357" translate="yes" xml:space="preserve">
          <source>Creates a document represented by string.</source>
          <target state="translated">Создает документ,представленный строкой.</target>
        </trans-unit>
        <trans-unit id="a25ffa072c9b4497ffa77caddb84e10a12c4fece" translate="yes" xml:space="preserve">
          <source>Creates a hard link &lt;code&gt;new&lt;/code&gt; to the file &lt;code&gt;existing&lt;/code&gt;.</source>
          <target state="translated">Создает &lt;code&gt;new&lt;/code&gt; жесткую ссылку на &lt;code&gt;existing&lt;/code&gt; файл .</target>
        </trans-unit>
        <trans-unit id="498fc9088eefd0b5d1f1097ae8face4e13b2235a" translate="yes" xml:space="preserve">
          <source>Creates a keyword list from an enumerable via the transformation function.</source>
          <target state="translated">Создает список ключевых слов из перечисляемого через функцию трансформации.</target>
        </trans-unit>
        <trans-unit id="0cf02892cb76f3bfd617a2b9b66aa2c84f3221a2" translate="yes" xml:space="preserve">
          <source>Creates a keyword list from an enumerable.</source>
          <target state="translated">Создает список ключевых слов из множества.</target>
        </trans-unit>
        <trans-unit id="484073e0a88950e889b7cb4cdaaff39cb41a7044" translate="yes" xml:space="preserve">
          <source>Creates a link between the calling process and the given item (process or port).</source>
          <target state="translated">Создает связь между вызывающим процессом и данным элементом (процессом или портом).</target>
        </trans-unit>
        <trans-unit id="3845ba5590ad3018c23c28e5c890fa7cb6ca6f20" translate="yes" xml:space="preserve">
          <source>Creates a map from an &lt;code&gt;enumerable&lt;/code&gt; via the given transformation function.</source>
          <target state="translated">Создает карту из &lt;code&gt;enumerable&lt;/code&gt; через заданную функцию преобразования.</target>
        </trans-unit>
        <trans-unit id="1f569ea7402f94a429015887b7617e16fc743562" translate="yes" xml:space="preserve">
          <source>Creates a map from an &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Создает карту из &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce89e48193f46f044fa2d633cfe5156548be0642" translate="yes" xml:space="preserve">
          <source>Creates a map.</source>
          <target state="translated">Создает карту.</target>
        </trans-unit>
        <trans-unit id="bca0cb06c3c10839d539f0c9df1de4a58a5af887" translate="yes" xml:space="preserve">
          <source>Creates a module with the given name and defined by the given quoted expressions.</source>
          <target state="translated">Создает модуль с заданным именем и определяется заданными выражениями в кавычках.</target>
        </trans-unit>
        <trans-unit id="f6fb16ff7d235494c11327d98497f4cf281e95fe" translate="yes" xml:space="preserve">
          <source>Creates a new empty dict.</source>
          <target state="translated">Создает новый пустой диктат.</target>
        </trans-unit>
        <trans-unit id="1c9315ba3d69260c14b757669db279c4b74f54d8" translate="yes" xml:space="preserve">
          <source>Creates a new range.</source>
          <target state="translated">Создает новый ассортимент.</target>
        </trans-unit>
        <trans-unit id="a2eba7b5cc42b2afd7e58fcb27cbf5d6f7a5f7b2" translate="yes" xml:space="preserve">
          <source>Creates a new tuple.</source>
          <target state="translated">Создает новый кортеж.</target>
        </trans-unit>
        <trans-unit id="7d7a85ef1ed1803d92c9416ace3552ee52d3a318" translate="yes" xml:space="preserve">
          <source>Creates a set from an enumerable via the transformation function.</source>
          <target state="translated">Создает набор из множества с помощью функции преобразования.</target>
        </trans-unit>
        <trans-unit id="c912e955c1e13f472af8b11a6e720fa581a82ea3" translate="yes" xml:space="preserve">
          <source>Creates a set from an enumerable.</source>
          <target state="translated">Создает набор из множества.</target>
        </trans-unit>
        <trans-unit id="92c9b57f1e2cecc049ffa0a17491ad60c9aea49d" translate="yes" xml:space="preserve">
          <source>Creates a stream that applies the given function to each element, emits the result and uses the same result as the accumulator for the next computation. Uses the first element in the enumerable as the starting value.</source>
          <target state="translated">Создает поток,который применяет данную функцию к каждому элементу,излучает результат и использует тот же результат,что и аккумулятор для следующих вычислений.Использует первый элемент из перечисляемого как начальное значение.</target>
        </trans-unit>
        <trans-unit id="3febf59f90e67bb54f793ba91dfddfb75ca065cb" translate="yes" xml:space="preserve">
          <source>Creates a stream that applies the given function to each element, emits the result and uses the same result as the accumulator for the next computation. Uses the given &lt;code&gt;acc&lt;/code&gt; as the starting value.</source>
          <target state="translated">Создает поток, который применяет данную функцию к каждому элементу, выдает результат и использует тот же результат, что и аккумулятор, для следующего вычисления. Использует данный &lt;code&gt;acc&lt;/code&gt; в качестве начального значения.</target>
        </trans-unit>
        <trans-unit id="368eb7731010419d3d1b8a5fa0a96992f65548c6" translate="yes" xml:space="preserve">
          <source>Creates a stream that cycles through the given enumerable, infinitely.</source>
          <target state="translated">Создает поток,который циклически проходит через заданное количество,бесконечно.</target>
        </trans-unit>
        <trans-unit id="09a0edafbe5af88cdea45c406f8cf75648a29039" translate="yes" xml:space="preserve">
          <source>Creates a stream that drops every &lt;code&gt;nth&lt;/code&gt; element from the enumerable.</source>
          <target state="translated">Создает поток, который удаляет каждый &lt;code&gt;nth&lt;/code&gt; элемент из перечисляемого.</target>
        </trans-unit>
        <trans-unit id="a65e224893927d60f5f1aea1df74c6d4636b9d19" translate="yes" xml:space="preserve">
          <source>Creates a stream that emits a single value after &lt;code&gt;n&lt;/code&gt; milliseconds.</source>
          <target state="translated">Создает поток, который выдает одно значение через &lt;code&gt;n&lt;/code&gt; миллисекунд.</target>
        </trans-unit>
        <trans-unit id="e7bf644491bc4caaaa2f9796f5b0a4de1a1168a3" translate="yes" xml:space="preserve">
          <source>Creates a stream that emits a value after the given period &lt;code&gt;n&lt;/code&gt; in milliseconds.</source>
          <target state="translated">Создает поток, который передает значение после заданного периода &lt;code&gt;n&lt;/code&gt; в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="6b1bf40efcd55deb62653b37917ef53710fe8a67" translate="yes" xml:space="preserve">
          <source>Creates a stream that enumerates each enumerable in an enumerable.</source>
          <target state="translated">Создает поток,который перечисляет каждый из них.</target>
        </trans-unit>
        <trans-unit id="1b7ed8a49c2a04606f29f4e01e9a43aba6e74367" translate="yes" xml:space="preserve">
          <source>Creates a stream that enumerates the first argument, followed by the second.</source>
          <target state="translated">Создает поток,который перечисляет первый аргумент,а затем второй.</target>
        </trans-unit>
        <trans-unit id="5de27bcf3f438e8e62f7ff655930f9a342d628f0" translate="yes" xml:space="preserve">
          <source>Creates a stream that filters elements according to the given function on enumeration.</source>
          <target state="translated">Создает поток,который фильтрует элементы в соответствии с данной функцией по перечислению.</target>
        </trans-unit>
        <trans-unit id="a292d4224debffe065f234930161932a5927780b" translate="yes" xml:space="preserve">
          <source>Creates a stream that only emits elements if the result of calling &lt;code&gt;fun&lt;/code&gt; on the element is different from the (stored) result of calling &lt;code&gt;fun&lt;/code&gt; on the last emitted element.</source>
          <target state="translated">Создает поток, который испускает элементы только в том случае, если результат вызова &lt;code&gt;fun&lt;/code&gt; для элемента отличается от (сохраненного) результата вызова &lt;code&gt;fun&lt;/code&gt; для последнего отправленного элемента.</target>
        </trans-unit>
        <trans-unit id="58a5512f2444ff6976377bbee4eb5372d54fcd5c" translate="yes" xml:space="preserve">
          <source>Creates a stream that only emits elements if they are different from the last emitted element.</source>
          <target state="translated">Создает поток,который испускает элементы только в том случае,если они отличаются от последнего испускаемого элемента.</target>
        </trans-unit>
        <trans-unit id="962425bd297f3b883238978c7ce6a85a752c07fc" translate="yes" xml:space="preserve">
          <source>Creates a stream that only emits elements if they are unique, by removing the elements for which function &lt;code&gt;fun&lt;/code&gt; returned duplicate elements.</source>
          <target state="translated">Создает поток, который генерирует элементы только в том случае, если они уникальны, путем удаления элементов, для которых функция &lt;code&gt;fun&lt;/code&gt; вернула повторяющиеся элементы.</target>
        </trans-unit>
        <trans-unit id="cdde751cd26237ff05d16e7de6b337007018fc9a" translate="yes" xml:space="preserve">
          <source>Creates a stream that only emits elements if they are unique.</source>
          <target state="translated">Создает поток,который излучает элементы только в том случае,если они уникальны.</target>
        </trans-unit>
        <trans-unit id="32be0a0b96ea6c99b90acb3b387e407fab509a1f" translate="yes" xml:space="preserve">
          <source>Creates a stream that takes every &lt;code&gt;nth&lt;/code&gt; element from the enumerable.</source>
          <target state="translated">Создает поток, который берет каждый &lt;code&gt;nth&lt;/code&gt; элемент из перечисляемого.</target>
        </trans-unit>
        <trans-unit id="018a830e30f48f2abb4f6e375d5c3596f09ae1a1" translate="yes" xml:space="preserve">
          <source>Creates a stream that will apply the given function on enumeration.</source>
          <target state="translated">Создает поток,который будет применять данную функцию при перечислении.</target>
        </trans-unit>
        <trans-unit id="52a5b372e2b712a7fcefd3796ad7bb8aa811e396" translate="yes" xml:space="preserve">
          <source>Creates a stream that will apply the given function on every &lt;code&gt;nth&lt;/code&gt; element from the enumerable.</source>
          <target state="translated">Создает поток, который применяет данную функцию к каждому &lt;code&gt;nth&lt;/code&gt; элементу из перечисляемого.</target>
        </trans-unit>
        <trans-unit id="a1c7db814b0f2d86987998b90fdbe81b3fe20363" translate="yes" xml:space="preserve">
          <source>Creates a stream that will reject elements according to the given function on enumeration.</source>
          <target state="translated">Создает поток,который будет отвергать элементы в соответствии с данной функцией по перечислению.</target>
        </trans-unit>
        <trans-unit id="d4e101ae0e59e353e2c11459f9cd83b9fb41375b" translate="yes" xml:space="preserve">
          <source>Creates a stream where each element in the enumerable will be wrapped in a tuple alongside its index.</source>
          <target state="translated">Создает поток,в котором каждый элемент из перечисляемого будет обернут в кортеж вместе со своим индексом.</target>
        </trans-unit>
        <trans-unit id="794b74194468fc9dd669423522605922875647a9" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link &lt;code&gt;new&lt;/code&gt; to the file or directory &lt;code&gt;existing&lt;/code&gt;.</source>
          <target state="translated">Создает символическую ссылку &lt;code&gt;new&lt;/code&gt; файл или каталог &lt;code&gt;existing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37d7b6cf67d4f7ee7f942e6b2de56067571c402e" translate="yes" xml:space="preserve">
          <source>Creates a tuple of &lt;code&gt;size&lt;/code&gt; containing the given &lt;code&gt;data&lt;/code&gt; at every position.</source>
          <target state="translated">Создает кортеж &lt;code&gt;size&lt;/code&gt; содержащий заданные &lt;code&gt;data&lt;/code&gt; в каждой позиции.</target>
        </trans-unit>
        <trans-unit id="c12cdd291771a6531cab586dd7713827a9512c63" translate="yes" xml:space="preserve">
          <source>Creates a tuple.</source>
          <target state="translated">Создает кортеж.</target>
        </trans-unit>
        <trans-unit id="981204be793902bce796c0cf3f7b3ba3f28ef48b" translate="yes" xml:space="preserve">
          <source>Creates an IO device.</source>
          <target state="translated">Создает устройство ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="0c34079208451017d540c9fb615f1989d707408b" translate="yes" xml:space="preserve">
          <source>Creates and updates structs.</source>
          <target state="translated">Создает и обновляет структуры.</target>
        </trans-unit>
        <trans-unit id="4b73576aa815a8d50bb5014bba09ef6ac2a8dadd" translate="yes" xml:space="preserve">
          <source>Creating Streams</source>
          <target state="translated">Создание потоков</target>
        </trans-unit>
        <trans-unit id="9bf07eaecf55e49059496beb7aa95c4062a592c9" translate="yes" xml:space="preserve">
          <source>Creating a supervisor is not much different from creating a GenServer. We are going to define a module named &lt;code&gt;KV.Supervisor&lt;/code&gt;, which will use the Supervisor behaviour, inside the &lt;code&gt;lib/kv/supervisor.ex&lt;/code&gt; file:</source>
          <target state="translated">Создание супервизора мало чем отличается от создания GenServer. Мы собираемся определить модуль с именем &lt;code&gt;KV.Supervisor&lt;/code&gt; , который будет использовать поведение Supervisor, внутри файла &lt;code&gt;lib/kv/supervisor.ex&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="89584c30004088bac7c1dae0caca5ec122b003e7" translate="yes" xml:space="preserve">
          <source>Crossed-out. Characters legible, but marked for deletion. Not widely supported.</source>
          <target state="translated">Вычеркнуто.Символы разборчивы,но помечены для удаления.Не пользуется широкой поддержкой.</target>
        </trans-unit>
        <trans-unit id="b32ee5eae663bc459ca55799e6c9e900ee825b77" translate="yes" xml:space="preserve">
          <source>Current working directory, exception on error.</source>
          <target state="translated">Текущая рабочая директория,исключение по ошибке.</target>
        </trans-unit>
        <trans-unit id="a9e67a1612d3786289b31085caea29dd802d1a39" translate="yes" xml:space="preserve">
          <source>Current working directory.</source>
          <target state="translated">Текущая рабочая директория.</target>
        </trans-unit>
        <trans-unit id="f248a387f0f37e77ff666c2a85a59f7074c24d85" translate="yes" xml:space="preserve">
          <source>Currently &lt;code&gt;@deprecated&lt;/code&gt; only supports functions and macros. However you can use the &lt;code&gt;:deprecated&lt;/code&gt; key in the annotation metadata to annotate the docs of modules, types and callbacks too.</source>
          <target state="translated">В настоящее время &lt;code&gt;@deprecated&lt;/code&gt; поддерживает только функции и макросы. Однако вы можете использовать ключ &lt;code&gt;:deprecated&lt;/code&gt; в метаданных аннотации для аннотирования документов модулей, типов и обратных вызовов.</target>
        </trans-unit>
        <trans-unit id="51f90102aa9d37408ac2a331660c80b3de845ceb" translate="yes" xml:space="preserve">
          <source>Currently it defines types and the minimal implementation for a calendar behaviour in Elixir. The goal of the Calendar features in Elixir is to provide a base for interoperability instead of full-featured datetime API.</source>
          <target state="translated">В настоящее время он определяет типы и минимальную реализацию календарного поведения в Elixir.Целью функций &quot;Календарь&quot; в Elixir является обеспечение базы для функциональной совместимости вместо полнофункционального API для работы с датами.</target>
        </trans-unit>
        <trans-unit id="58e947fb9b58beb32c0020272eaa3d95ced9ee44" translate="yes" xml:space="preserve">
          <source>Currently the only accepted PID is &lt;code&gt;self()&lt;/code&gt;.</source>
          <target state="translated">В настоящее время единственный допустимый PID - это &lt;code&gt;self()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f26076c7ac35014e638bc9d9a7df511fa73b4d" translate="yes" xml:space="preserve">
          <source>Currently we have two tests tagged with &lt;code&gt;@tag :distributed&lt;/code&gt;. The &amp;ldquo;server interaction&amp;rdquo; test in &lt;code&gt;KVServerTest&lt;/code&gt;, and the &amp;ldquo;route requests across nodes&amp;rdquo; in &lt;code&gt;KV.RouterTest&lt;/code&gt;. Both tests are failing since they require a routing table, which is currently empty.</source>
          <target state="translated">В настоящее время у нас есть два теста с тегами &lt;code&gt;@tag :distributed&lt;/code&gt; . Тест &amp;laquo;взаимодействия с сервером&amp;raquo; в &lt;code&gt;KVServerTest&lt;/code&gt; и &amp;laquo;маршрутизация запросов между узлами&amp;raquo; в &lt;code&gt;KV.RouterTest&lt;/code&gt; . Оба теста не работают, так как им требуется таблица маршрутизации, которая в настоящее время пуста.</target>
        </trans-unit>
        <trans-unit id="5bdaaebe2bbb603df00e4573b0900ccd99aa7d09" translate="yes" xml:space="preserve">
          <source>Custom Sigils</source>
          <target state="translated">Пользовательские сигнализированные данные</target>
        </trans-unit>
        <trans-unit id="d797cab8a29cd6c10dc9372d1ab9213b989caf7f" translate="yes" xml:space="preserve">
          <source>Custom and overridden operators</source>
          <target state="translated">Пользовательские и переопределенные операторы</target>
        </trans-unit>
        <trans-unit id="00146f5b748062fe67c9600ecfcdf444284e0bcf" translate="yes" xml:space="preserve">
          <source>Custom attributes</source>
          <target state="translated">Пользовательские атрибуты</target>
        </trans-unit>
        <trans-unit id="e3fd71a31afaaf057b0fedc28ba72336f1780a64" translate="yes" xml:space="preserve">
          <source>Custom backends</source>
          <target state="translated">Пользовательские бэкэнды</target>
        </trans-unit>
        <trans-unit id="abe70270d1f6e2920fe2d28c23289b5295fb962a" translate="yes" xml:space="preserve">
          <source>Custom configuration</source>
          <target state="translated">Пользовательская конфигурация</target>
        </trans-unit>
        <trans-unit id="170bc5dc5f750c41d4def27ed27eed6bf3c468fb" translate="yes" xml:space="preserve">
          <source>Custom editors are supported by using the &lt;code&gt;__FILE__&lt;/code&gt; and &lt;code&gt;__LINE__&lt;/code&gt; notations, for example:</source>
          <target state="translated">Пользовательские редакторы поддерживаются с использованием &lt;code&gt;__FILE__&lt;/code&gt; и &lt;code&gt;__LINE__&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="642fb7c499e4524f98e2922e90ae2a2b071cfd52" translate="yes" xml:space="preserve">
          <source>Custom formatting</source>
          <target state="translated">Настраиваемое форматирование</target>
        </trans-unit>
        <trans-unit id="8eb31d3e78f5111c059041eed039c75877655487" translate="yes" xml:space="preserve">
          <source>Custom sigils</source>
          <target state="translated">Пользовательские знаки</target>
        </trans-unit>
        <trans-unit id="b447a4b2b4a5635d3f0dd6f81cbcc0d90e8e4a6d" translate="yes" xml:space="preserve">
          <source>Custom types defined through &lt;code&gt;@type&lt;/code&gt; are exported and available outside the module they&amp;rsquo;re defined in:</source>
          <target state="translated">Пользовательские типы, определенные через &lt;code&gt;@type&lt;/code&gt; , экспортируются и доступны вне модуля, в котором они определены:</target>
        </trans-unit>
        <trans-unit id="8b25d03b9dabe02b1fafe8ede605cce72a76c6c5" translate="yes" xml:space="preserve">
          <source>Customization per environment can be done by accessing &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#env/0&quot;&gt;the &lt;code&gt;Mix.env&lt;/code&gt; function&lt;/a&gt; in your &lt;code&gt;mix.exs&lt;/code&gt; file, which returns the current environment as an atom. That&amp;rsquo;s what we have used in the &lt;code&gt;:start_permanent&lt;/code&gt; options:</source>
          <target state="translated">Настройка на окружающую среду может быть сделано путем доступа &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#env/0&quot;&gt;к &lt;code&gt;Mix.env&lt;/code&gt; функции&lt;/a&gt; в вашем &lt;code&gt;mix.exs&lt;/code&gt; файл, который возвращает текущую среду в качестве атома. Вот что мы использовали в параметрах &lt;code&gt;:start_permanent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="303c85db56e6f90f1fcaafbed47e91067f22fbe9" translate="yes" xml:space="preserve">
          <source>Data structures</source>
          <target state="translated">Структуры данных</target>
        </trans-unit>
        <trans-unit id="696ae3d17016ea7046f1ce357ae0b1f6103499a3" translate="yes" xml:space="preserve">
          <source>Data structures such as lists, tuples, and binaries are marked respectively by the delimiters &lt;code&gt;[...]&lt;/code&gt;, &lt;code&gt;{...}&lt;/code&gt;, and &lt;code&gt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;. Each element is separated by comma. A trailing comma is also allowed, such as in &lt;code&gt;[1, 2, 3,]&lt;/code&gt;.</source>
          <target state="translated">Структуры данных, такие как списки, кортежи и двоичные файлы, помечаются соответственно разделителями &lt;code&gt;[...]&lt;/code&gt; , &lt;code&gt;{...}&lt;/code&gt; и &lt;code&gt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt; . Каждый элемент разделяется запятой. Также допускается использование завершающей запятой, например, в &lt;code&gt;[1, 2, 3,]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">Типы данных</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="904c0db9491168bf7b0f96a8127a1e2e956e54ec" translate="yes" xml:space="preserve">
          <source>Date.Range</source>
          <target state="translated">Date.Range</target>
        </trans-unit>
        <trans-unit id="f1e5baf5ecc3589631088c40cbdd43061976ed8f" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="translated">DateTime</target>
        </trans-unit>
        <trans-unit id="d0c32ae37c8ec0c5b70c6fbada27ade3b4484def" translate="yes" xml:space="preserve">
          <source>Debug options supported by the &lt;code&gt;start*&lt;/code&gt; functions</source>
          <target state="translated">Параметры отладки, поддерживаемые функциями &lt;code&gt;start*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dea78e2b42ff6c53cdfe32a0caf66a693083f61" translate="yes" xml:space="preserve">
          <source>Debugger</source>
          <target state="translated">Debugger</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="4dbfbf2c1ca5c9cbf7ff86eebf9f1e60dfaae3c2" translate="yes" xml:space="preserve">
          <source>Debugging with the :sys module</source>
          <target state="translated">Отладка с модулем :sys</target>
        </trans-unit>
        <trans-unit id="49bac63211bb6e767f6bd201454a7033e302753a" translate="yes" xml:space="preserve">
          <source>Decodes &lt;code&gt;string&lt;/code&gt; as &quot;x-www-form-urlencoded&quot;.</source>
          <target state="translated">Расшифровывает &lt;code&gt;string&lt;/code&gt; как &amp;laquo;x-www-form-urlencoded&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f7d7142bd19e1c0ea0198316fec06393f6cb0ea2" translate="yes" xml:space="preserve">
          <source>Decodes a base 16 encoded string into a binary string.</source>
          <target state="translated">Декодирует базовую 16-кодированную строку в двоичную.</target>
        </trans-unit>
        <trans-unit id="fb034015ded81968d20fd5f7e210338ebd758879" translate="yes" xml:space="preserve">
          <source>Decodes a base 32 encoded string into a binary string.</source>
          <target state="translated">Декодирует базовую 32-кодированную строку в двоичную.</target>
        </trans-unit>
        <trans-unit id="885c7e9658ad97e9a9af45bd4781416e206a6334" translate="yes" xml:space="preserve">
          <source>Decodes a base 32 encoded string with extended hexadecimal alphabet into a binary string.</source>
          <target state="translated">Декодирует базовую 32-кодированную строку с расширенным шестнадцатеричным алфавитом в двоичную строку.</target>
        </trans-unit>
        <trans-unit id="4b608e75a46b84e1feb5de2f9f73f4f8523e9f1d" translate="yes" xml:space="preserve">
          <source>Decodes a base 64 encoded string into a binary string.</source>
          <target state="translated">Декодирует базовую 64-кодированную строку в двоичную.</target>
        </trans-unit>
        <trans-unit id="b945eb1852da433ae69fcf285b6a56aed338e16f" translate="yes" xml:space="preserve">
          <source>Decodes a base 64 encoded string with URL and filename safe alphabet into a binary string.</source>
          <target state="translated">Декодирует базовую 64-кодированную строку с безопасным алфавитом URL и имени файла в двоичную строку.</target>
        </trans-unit>
        <trans-unit id="12cd61b38813ead53840f88994a5a092cca61e7f" translate="yes" xml:space="preserve">
          <source>Decodes a query string into a map.</source>
          <target state="translated">Декодирует строку запроса на карте.</target>
        </trans-unit>
        <trans-unit id="624612278a208a23a0e8ccd36697aaa475bd3192" translate="yes" xml:space="preserve">
          <source>Decomposes a local or remote call into its remote part (when provided), function name and argument list.</source>
          <target state="translated">Разлагает локальный или удаленный вызов на удаленную часть (когда это предусмотрено),имя функции и список аргументов.</target>
        </trans-unit>
        <trans-unit id="7151035c3114809bda0193c2a85fa1a470935213" translate="yes" xml:space="preserve">
          <source>Default Unit</source>
          <target state="translated">Блок по умолчанию</target>
        </trans-unit>
        <trans-unit id="6bcca2541d3f4eb99df509a0ef05a98d2f536b6d" translate="yes" xml:space="preserve">
          <source>Default arguments</source>
          <target state="translated">Аргументы по умолчанию</target>
        </trans-unit>
        <trans-unit id="6593ff7fb992a5e5072fa654c1b194d94010d120" translate="yes" xml:space="preserve">
          <source>Default background color.</source>
          <target state="translated">Цвет фона по умолчанию.</target>
        </trans-unit>
        <trans-unit id="6e98c72a394abdbcd4b12051bb239d5b6259e9ce" translate="yes" xml:space="preserve">
          <source>Default text color.</source>
          <target state="translated">Цвет текста по умолчанию.</target>
        </trans-unit>
        <trans-unit id="89487e7c33b83cf47b069ff9b1fec8587ba1c7a6" translate="yes" xml:space="preserve">
          <source>Default translation for Erlang log messages.</source>
          <target state="translated">Трансляция сообщений журнала Erlang по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e19bd89011e61a7bb0e77dd718395ff863fa6b57" translate="yes" xml:space="preserve">
          <source>Default values and required keys</source>
          <target state="translated">Значения по умолчанию и требуемые клавиши</target>
        </trans-unit>
        <trans-unit id="0b6846959c6ecef6294ea2738ab118ae06eb0104" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt; for Elixir projects, &lt;code&gt;false&lt;/code&gt; for Erlang projects.</source>
          <target state="translated">По умолчанию &lt;code&gt;true&lt;/code&gt; для проектов Elixir, &lt;code&gt;false&lt;/code&gt; для проектов Erlang.</target>
        </trans-unit>
        <trans-unit id="d3da7d067c0e2af23683cd3618963a0c016ef27c" translate="yes" xml:space="preserve">
          <source>Define a function from a string (&lt;code&gt;function_from_string&lt;/code&gt;) or a file (&lt;code&gt;function_from_file&lt;/code&gt;). This allows you to embed the template as a function inside a module which will then be compiled. This is the preferred API if you have access to the template at compilation time.</source>
          <target state="translated">Определите функцию из строки ( &lt;code&gt;function_from_string&lt;/code&gt; ) или файла ( &lt;code&gt;function_from_file&lt;/code&gt; ). Это позволяет вам встроить шаблон как функцию в модуль, который затем будет скомпилирован. Это предпочтительный API, если у вас есть доступ к шаблону во время компиляции.</target>
        </trans-unit>
        <trans-unit id="7af570fa4ced5be1c1e832e70770e29cb3378f42" translate="yes" xml:space="preserve">
          <source>Define the function explicitly (v1.0)</source>
          <target state="translated">Определите функцию явно (v1.0).</target>
        </trans-unit>
        <trans-unit id="bc125b89387e69b38c0b71432e6451758cd10e9b" translate="yes" xml:space="preserve">
          <source>Define the rollover moment for the given calendar.</source>
          <target state="translated">Определите момент опрокидывания для данного календаря.</target>
        </trans-unit>
        <trans-unit id="cdc8ce38051bdb795b598be018ffa7c0e1241cd3" translate="yes" xml:space="preserve">
          <source>Defined as</source>
          <target state="translated">Определяется как</target>
        </trans-unit>
        <trans-unit id="2c159947b8552c14519d220c3a6ddfaa0e00eeec" translate="yes" xml:space="preserve">
          <source>Defines ExUnit callbacks.</source>
          <target state="translated">Определяет обратные вызовы ExUnit.</target>
        </trans-unit>
        <trans-unit id="3fba28715c151409c38236ee7000eb4ed16c82f1" translate="yes" xml:space="preserve">
          <source>Defines a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; struct returned by &lt;a href=&quot;file#stream!/3&quot;&gt;&lt;code&gt;File.stream!/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Определяет структуру &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; ,&lt;/a&gt; возвращаемую &lt;a href=&quot;file#stream!/3&quot;&gt; &lt;code&gt;File.stream!/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="718b6b621786a1acc4c26d42dbc485e26faf7eec" translate="yes" xml:space="preserve">
          <source>Defines a callback that runs once the test exits.</source>
          <target state="translated">Определяет обратный вызов,который запускается после завершения теста.</target>
        </trans-unit>
        <trans-unit id="9200a3742bfb9e88c562c9f6f3ed2f69e18c6f67" translate="yes" xml:space="preserve">
          <source>Defines a callback to be run before all tests in a case.</source>
          <target state="translated">Определяет обратный вызов,который должен быть выполнен перед всеми тестами в деле.</target>
        </trans-unit>
        <trans-unit id="4b6166591f75c5a4bf0202583ee95cba035668e8" translate="yes" xml:space="preserve">
          <source>Defines a callback to be run before each test in a case.</source>
          <target state="translated">Определяет обратный вызов,который должен быть выполнен перед каждым тестом в конкретном случае.</target>
        </trans-unit>
        <trans-unit id="d5bc2aab7b6f9616afc524a405cb7757608452d9" translate="yes" xml:space="preserve">
          <source>Defines a function callback according to the given type specification.</source>
          <target state="translated">Определяет обратный вызов функции в соответствии со спецификацией данного типа.</target>
        </trans-unit>
        <trans-unit id="c5db38a50b427e41d0ad25365053a42c56f8a1f7" translate="yes" xml:space="preserve">
          <source>Defines a function that delegates to another module.</source>
          <target state="translated">Определяет функцию,которая делегируется другому модулю.</target>
        </trans-unit>
        <trans-unit id="307e106c43982d5b12630cb72b848406b819c6c6" translate="yes" xml:space="preserve">
          <source>Defines a function with the given name and body.</source>
          <target state="translated">Определяет функцию с заданным именем и телом.</target>
        </trans-unit>
        <trans-unit id="f063e0d1325de98da63498e5fe376536a4c88d2c" translate="yes" xml:space="preserve">
          <source>Defines a macro callback according to the given type specification.</source>
          <target state="translated">Определяет обратный вызов макроса в соответствии со спецификацией данного типа.</target>
        </trans-unit>
        <trans-unit id="d1bdce6fb82524ea6dca239a6d1b4282ce120736" translate="yes" xml:space="preserve">
          <source>Defines a macro with the given name and body.</source>
          <target state="translated">Определяет макрос с заданным именем и телом.</target>
        </trans-unit>
        <trans-unit id="45436ad823527d91893ee57c61d5208fd54f8f28" translate="yes" xml:space="preserve">
          <source>Defines a module given by name with the given contents.</source>
          <target state="translated">Свойство определяет модуль по имени с заданным содержимым.</target>
        </trans-unit>
        <trans-unit id="cf550b43951705ff60d293e8451b26e72a1b3d68" translate="yes" xml:space="preserve">
          <source>Defines a new bitstring.</source>
          <target state="translated">Определяет новую струну.</target>
        </trans-unit>
        <trans-unit id="5e5448d0355663eca910a26c7f674b96bdfb1318" translate="yes" xml:space="preserve">
          <source>Defines a not implemented test with a string.</source>
          <target state="translated">Свойство определяет нереализованный тест со строкой.</target>
        </trans-unit>
        <trans-unit id="3c2d3289caf113cf07d04f07d984ecc30b13bea4" translate="yes" xml:space="preserve">
          <source>Defines a private function with the given name and body.</source>
          <target state="translated">Свойство определяет частную функцию с заданным именем и телом.</target>
        </trans-unit>
        <trans-unit id="08a09270f00cde41495279c24131c417ef5be1db" translate="yes" xml:space="preserve">
          <source>Defines a private macro with the given name and body.</source>
          <target state="translated">Определяет частный макрос с заданным именем и телом.</target>
        </trans-unit>
        <trans-unit id="234e236e77f17928fa5de859398ddc5049a5ff60" translate="yes" xml:space="preserve">
          <source>Defines a protocol.</source>
          <target state="translated">Определяет протокол.</target>
        </trans-unit>
        <trans-unit id="cf0422852f7761d300210619550ed122f7749dee" translate="yes" xml:space="preserve">
          <source>Defines a range.</source>
          <target state="translated">Определяет диапазон.</target>
        </trans-unit>
        <trans-unit id="84d0bf0e5d21a052c34ad1cf8cc4fd2c0b2d922d" translate="yes" xml:space="preserve">
          <source>Defines a remote call, a call to an anonymous function, or an alias.</source>
          <target state="translated">Свойство определяет удаленный вызов,вызов анонимной функции или псевдоним.</target>
        </trans-unit>
        <trans-unit id="148ce01689924171178db559eb8519855c18cbf6" translate="yes" xml:space="preserve">
          <source>Defines a set of macros to create, access, and pattern match on a record.</source>
          <target state="translated">Определяет набор макросов для создания,доступа и сопоставления шаблонов на записи.</target>
        </trans-unit>
        <trans-unit id="d43aa789386d3da190d548740ece58b49c1b5c28" translate="yes" xml:space="preserve">
          <source>Defines a struct.</source>
          <target state="translated">Определяет структуру.</target>
        </trans-unit>
        <trans-unit id="6ff008b3bfc5f520079685bb6518c7f8c263c332" translate="yes" xml:space="preserve">
          <source>Defines a test with a string.</source>
          <target state="translated">Определяет тест со строкой.</target>
        </trans-unit>
        <trans-unit id="81a4f177d77d4b3501935507c322bb13c914958e" translate="yes" xml:space="preserve">
          <source>Defines an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IO.Stream&lt;/code&gt;&lt;/a&gt; struct returned by &lt;a href=&quot;io#stream/2&quot;&gt;&lt;code&gt;IO.stream/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#binstream/2&quot;&gt;&lt;code&gt;IO.binstream/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Определяет структуру &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IO.Stream&lt;/code&gt; ,&lt;/a&gt; возвращаемую &lt;a href=&quot;io#stream/2&quot;&gt; &lt;code&gt;IO.stream/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;io#binstream/2&quot;&gt; &lt;code&gt;IO.binstream/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61d9e7c667e3e371baebf26eb4a1e174baee751d" translate="yes" xml:space="preserve">
          <source>Defines an anonymous function.</source>
          <target state="translated">Определяет анонимную функцию.</target>
        </trans-unit>
        <trans-unit id="1f336908a8420d524aec43e1dfa0a8c9f56be6ac" translate="yes" xml:space="preserve">
          <source>Defines an exception.</source>
          <target state="translated">Определяет исключение.</target>
        </trans-unit>
        <trans-unit id="47c4eab1a12c9a4e9e5bfc15095c4f5f1e7f8420" translate="yes" xml:space="preserve">
          <source>Defines an implementation for the given protocol.</source>
          <target state="translated">Определяет реализацию для данного протокола.</target>
        </trans-unit>
        <trans-unit id="7574e6578cdcbcf5986b0221d662d60206450586" translate="yes" xml:space="preserve">
          <source>Defines and manipulates Mix projects.</source>
          <target state="translated">Определяет и манипулирует проектами Mix.</target>
        </trans-unit>
        <trans-unit id="c87324807b8cf7ca458804ea8ef4c07d69ba7fe6" translate="yes" xml:space="preserve">
          <source>Defines options for module compilation. This is used to configure both Elixir and Erlang compilers, as any other compilation pass added by external tools. For example:</source>
          <target state="translated">Определяет опции для компиляции модулей.Используется для настройки компиляторов Elixir и Erlang,как и любых других передач компиляции,добавляемых внешними инструментами.Например:</target>
        </trans-unit>
        <trans-unit id="51d68b5790fad1de6d84cef24485698c5aa44718" translate="yes" xml:space="preserve">
          <source>Defines the given &lt;code&gt;module&lt;/code&gt; as a supervisor which will be started with the given arguments.</source>
          <target state="translated">Определяет данный &lt;code&gt;module&lt;/code&gt; как супервизор, который будет запущен с заданными аргументами.</target>
        </trans-unit>
        <trans-unit id="a74b181531a071dccf103975ef9b5f457594135a" translate="yes" xml:space="preserve">
          <source>Defines the given &lt;code&gt;module&lt;/code&gt; as a worker which will be started with the given arguments.</source>
          <target state="translated">Определяет данный &lt;code&gt;module&lt;/code&gt; как рабочий, который будет запущен с заданными аргументами.</target>
        </trans-unit>
        <trans-unit id="1e7e7a56a0498c33eb4666ce267e88fdd0443785" translate="yes" xml:space="preserve">
          <source>Defines the options used by the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">Определяет параметры, используемые протоколом &lt;a href=&quot;inspect&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f752321778df74391c3378581723efb4dca5e78b" translate="yes" xml:space="preserve">
          <source>Defines warnings to request or suppress when using a version of &lt;code&gt;:dialyzer&lt;/code&gt; that supports module attributes.</source>
          <target state="translated">Определяет предупреждения для запроса или подавления при использовании версии &lt;code&gt;:dialyzer&lt;/code&gt; , которая поддерживает атрибуты модуля.</target>
        </trans-unit>
        <trans-unit id="99cdfc3cbea74f1f4372e3c3f255ee42a2f77809" translate="yes" xml:space="preserve">
          <source>Defining a protocol automatically defines a type named &lt;code&gt;t&lt;/code&gt;, which can be used as follows:</source>
          <target state="translated">Определение протокола автоматически определяет тип с именем &lt;code&gt;t&lt;/code&gt; , который можно использовать следующим образом:</target>
        </trans-unit>
        <trans-unit id="eed610b2a524f1fea8a5a11a6b90ab2b660a40c7" translate="yes" xml:space="preserve">
          <source>Defining a specification</source>
          <target state="translated">Определение спецификации</target>
        </trans-unit>
        <trans-unit id="375bfa92ccfe2bd509e0a5a5c9ecb19ed5761bbc" translate="yes" xml:space="preserve">
          <source>Defining behaviours</source>
          <target state="translated">Определение поведения</target>
        </trans-unit>
        <trans-unit id="1ea27e7345dd55520e1c3fd955a1961190ab35d0" translate="yes" xml:space="preserve">
          <source>Defining custom guard expressions</source>
          <target state="translated">Определение пользовательских защитных выражений</target>
        </trans-unit>
        <trans-unit id="67ee31ce55d3432708e003e7896d5c65897de368" translate="yes" xml:space="preserve">
          <source>Defining custom operators</source>
          <target state="translated">Определение пользовательских операторов</target>
        </trans-unit>
        <trans-unit id="88f1538130a6f0b0a36142a4e1e014b6b0b27ac0" translate="yes" xml:space="preserve">
          <source>Defining custom types</source>
          <target state="translated">Определение пользовательских типов</target>
        </trans-unit>
        <trans-unit id="da279c1a631ba36a0429ee2b6ef866ee7c040663" translate="yes" xml:space="preserve">
          <source>Defining extracted records with anonymous functions in the values</source>
          <target state="translated">Определение извлекаемых записей с анонимными функциями в значениях</target>
        </trans-unit>
        <trans-unit id="d271da3ed06fd6bd866bb6e79184abd537c3512e" translate="yes" xml:space="preserve">
          <source>Defining function specs this way works, but it quickly becomes annoying since we&amp;rsquo;re repeating the type &lt;code&gt;{number, String.t}&lt;/code&gt; over and over. We can use the &lt;code&gt;@type&lt;/code&gt; directive in order to declare our own custom type.</source>
          <target state="translated">Такое определение спецификаций функций работает, но быстро становится раздражающим, поскольку мы повторяем тип &lt;code&gt;{number, String.t}&lt;/code&gt; снова и снова. Мы можем использовать директиву &lt;code&gt;@type&lt;/code&gt; для объявления нашего собственного настраиваемого типа.</target>
        </trans-unit>
        <trans-unit id="9fec1dfeb38c397bddde90cce354ec968be3e685" translate="yes" xml:space="preserve">
          <source>Defining structs</source>
          <target state="translated">Определение структур</target>
        </trans-unit>
        <trans-unit id="ac3516b411710c30e4cd006454c7f1994a4da34a" translate="yes" xml:space="preserve">
          <source>Delegation only works with functions; delegating macros is not supported.</source>
          <target state="translated">Делегирование работает только с функциями,делегирование макросов не поддерживается.</target>
        </trans-unit>
        <trans-unit id="e726a77011c0fe0cd388991d477e194ae9fd7af2" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;value&lt;/code&gt; from &lt;code&gt;map_set&lt;/code&gt;.</source>
          <target state="translated">Удаляет &lt;code&gt;value&lt;/code&gt; из &lt;code&gt;map_set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7197d992ec2d7887544bc401d08055b1f065eeeb" translate="yes" xml:space="preserve">
          <source>Deletes a path from the Erlang VM code path list. This is the list of directories the Erlang VM uses for finding module code.</source>
          <target state="translated">Удаляет путь из списка путей VM-кода Эрланга.Это список директорий,которые VM Erlang использует для поиска кода модуля.</target>
        </trans-unit>
        <trans-unit id="23800ac90aacec2911367a4560daa8ed5fec9cb1" translate="yes" xml:space="preserve">
          <source>Deletes an environment variable.</source>
          <target state="translated">Удаляет переменную окружения.</target>
        </trans-unit>
        <trans-unit id="28cada09dd4174a63836f40b25ecf14ff7e1c534" translate="yes" xml:space="preserve">
          <source>Deletes generated application files.</source>
          <target state="translated">Удаляет сгенерированные файлы приложений.</target>
        </trans-unit>
        <trans-unit id="6511b55cc1b351a9cd395e58f52ffa508ee0de39" translate="yes" xml:space="preserve">
          <source>Deletes the &lt;code&gt;key&lt;/code&gt; from the given &lt;code&gt;app&lt;/code&gt; environment.</source>
          <target state="translated">Удаляет &lt;code&gt;key&lt;/code&gt; из данной среды &lt;code&gt;app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cda458e47c2adb906a94c0b5117cdc3d628bc0de" translate="yes" xml:space="preserve">
          <source>Deletes the child specification identified by &lt;code&gt;child_id&lt;/code&gt;.</source>
          <target state="translated">Удаляет &lt;code&gt;child_id&lt;/code&gt; спецификацию, идентифицированную child_id .</target>
        </trans-unit>
        <trans-unit id="06519f5a98d8a9576fa45c95f0c76ae133cbfd51" translate="yes" xml:space="preserve">
          <source>Deletes the element at the given &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;tuple&lt;/code&gt;. Raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is negative or greater than or equal to the length of &lt;code&gt;tuple&lt;/code&gt;. Index is zero-based.</source>
          <target state="translated">Удаляет элемент по данному &lt;code&gt;index&lt;/code&gt; из &lt;code&gt;tuple&lt;/code&gt; . Вызывает ошибку &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;index&lt;/code&gt; отрицательный, больше или равен длине &lt;code&gt;tuple&lt;/code&gt; . Индекс отсчитывается от нуля.</target>
        </trans-unit>
        <trans-unit id="768479db33c4ea83d038f3e75c0b46d08cfff3a1" translate="yes" xml:space="preserve">
          <source>Deletes the entries in the keyword list for a &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Удаляет записи в списке ключевых слов для &lt;code&gt;key&lt;/code&gt; со &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30f8ea2c4a41f9ff990549664a0c3e8cc979a2f3" translate="yes" xml:space="preserve">
          <source>Deletes the entries in the keyword list for a specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Удаляет записи в списке ключевых слов для определенного &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e356fc985f5b4c45501dcdd4bf05b2d169dc820a" translate="yes" xml:space="preserve">
          <source>Deletes the entry in &lt;code&gt;map&lt;/code&gt; for a specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Удаляет запись на &lt;code&gt;map&lt;/code&gt; для определенного &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84bf7f6c44bf7d1a25fea2eb0b485822b94e4057" translate="yes" xml:space="preserve">
          <source>Deletes the first entry in the keyword list for a specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Удаляет первую запись в списке ключевых слов для определенного &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8205134472497de5f123b07ed4ca04623561776" translate="yes" xml:space="preserve">
          <source>Deletes the given &lt;code&gt;element&lt;/code&gt; from the &lt;code&gt;list&lt;/code&gt;. Returns a new list without the element.</source>
          <target state="translated">Удаляет указанный &lt;code&gt;element&lt;/code&gt; из &lt;code&gt;list&lt;/code&gt; . Возвращает новый список без элемента.</target>
        </trans-unit>
        <trans-unit id="6931640e5585d21423be80c31e8281e15f83ebe2" translate="yes" xml:space="preserve">
          <source>Deletes the given &lt;code&gt;key&lt;/code&gt; from the process dictionary.</source>
          <target state="translated">Удаляет указанный &lt;code&gt;key&lt;/code&gt; из словаря процесса.</target>
        </trans-unit>
        <trans-unit id="241d39fd9168ac37f5f1398b699e96cae08161ab" translate="yes" xml:space="preserve">
          <source>Deletes the module attribute that matches the given key.</source>
          <target state="translated">Удаляет атрибут модуля,соответствующий данному ключу.</target>
        </trans-unit>
        <trans-unit id="a7699468279a4b12f6e55a5ad1b8c725c2c3ca8c" translate="yes" xml:space="preserve">
          <source>Demonitors the monitor identified by the given &lt;code&gt;reference&lt;/code&gt;.</source>
          <target state="translated">Демонстрирует монитор, идентифицированный по данной &lt;code&gt;reference&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="ca0bdefd221fdbfd10bc0f3013fa9c019ef6808e" translate="yes" xml:space="preserve">
          <source>Dependencies and umbrella projects</source>
          <target state="translated">Зависимости и зонтичные проекты</target>
        </trans-unit>
        <trans-unit id="0aeab4e8a30c470967346544f8d2eeabc88b3b63" translate="yes" xml:space="preserve">
          <source>Dependencies between applications in an umbrella project must still be explicitly defined and Mix makes it easy to do so. Open up &lt;code&gt;apps/kv_server/mix.exs&lt;/code&gt; and change the &lt;code&gt;deps/0&lt;/code&gt; function to the following:</source>
          <target state="translated">Зависимости между приложениями в зонтичном проекте по-прежнему должны быть определены явно, и Mix упрощает это. Откройте &lt;code&gt;apps/kv_server/mix.exs&lt;/code&gt; и измените функцию &lt;code&gt;deps/0&lt;/code&gt; на следующее:</target>
        </trans-unit>
        <trans-unit id="20c4e61613e0bb2759ad45cedce4f0b014181be0" translate="yes" xml:space="preserve">
          <source>Dependencies must be specified in the &lt;code&gt;mix.exs&lt;/code&gt; file in one of the following formats:</source>
          <target state="translated">Зависимости должны быть указаны в файле &lt;code&gt;mix.exs&lt;/code&gt; в одном из следующих форматов:</target>
        </trans-unit>
        <trans-unit id="1313d46d93e4456c33c34bdf877a2b31296e6f6b" translate="yes" xml:space="preserve">
          <source>Dependencies within an umbrella project</source>
          <target state="translated">Зависимости в рамках зонтичного проекта</target>
        </trans-unit>
        <trans-unit id="2ae4f4df59c1f88916b85e951202eefbff4c7b68" translate="yes" xml:space="preserve">
          <source>Dependency definition options</source>
          <target state="translated">Варианты определения зависимости</target>
        </trans-unit>
        <trans-unit id="ac1bc59655cdca7840ee9bf9d55721f13ebb7a55" translate="yes" xml:space="preserve">
          <source>Depending on the accumulator value, the result returned by &lt;a href=&quot;enumerable#reduce/3&quot;&gt;&lt;code&gt;Enumerable.reduce/3&lt;/code&gt;&lt;/a&gt; will change. Please check the &lt;a href=&quot;#t:result/0&quot;&gt;&lt;code&gt;result/0&lt;/code&gt;&lt;/a&gt; type documentation for more information.</source>
          <target state="translated">В зависимости от значения аккумулятора результат, возвращаемый &lt;a href=&quot;enumerable#reduce/3&quot;&gt; &lt;code&gt;Enumerable.reduce/3&lt;/code&gt; ,&lt;/a&gt; будет изменяться. Пожалуйста, проверьте документацию типа &lt;a href=&quot;#t:result/0&quot;&gt; &lt;code&gt;result/0&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="4962f760a0cc6ed936dcedffadba8733dd81e124" translate="yes" xml:space="preserve">
          <source>Deploys a given module's BEAM code to a list of nodes.</source>
          <target state="translated">Развертывает код BEAM данного модуля на список узлов.</target>
        </trans-unit>
        <trans-unit id="f6ef72731d9f2999dced5cdda829d282f60229ed" translate="yes" xml:space="preserve">
          <source>Deprecated feature</source>
          <target state="translated">Исключенная функция</target>
        </trans-unit>
        <trans-unit id="e5135ac9aa0f3adf0ead688638a7cada98f65645" translate="yes" xml:space="preserve">
          <source>Deprecated function to retrieve old documentation format.</source>
          <target state="translated">Утраченная функция для получения старого формата документации.</target>
        </trans-unit>
        <trans-unit id="355cf2e1caeb8e5de974f3e0ee6f449e9a16967c" translate="yes" xml:space="preserve">
          <source>Deprecated mechanism to retrieve the last exception stacktrace.</source>
          <target state="translated">Утраченный механизм для извлечения последней стековой дорожки исключений.</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="8189415262d9b40fadd78cc759dd14fdb9868384" translate="yes" xml:space="preserve">
          <source>Deps task</source>
          <target state="translated">Задача Депутатов</target>
        </trans-unit>
        <trans-unit id="1751cb6240f8427862c44d9fda1a1acebc588f2b" translate="yes" xml:space="preserve">
          <source>Derives the &lt;code&gt;protocol&lt;/code&gt; for &lt;code&gt;module&lt;/code&gt; with the given options.</source>
          <target state="translated">Выводит &lt;code&gt;protocol&lt;/code&gt; для &lt;code&gt;module&lt;/code&gt; с заданными параметрами.</target>
        </trans-unit>
        <trans-unit id="b1f507cfab066377ebfd776c06ce8c6ae1d1dfae" translate="yes" xml:space="preserve">
          <source>Deriving</source>
          <target state="translated">Deriving</target>
        </trans-unit>
        <trans-unit id="469b2320b22b8de425b1224d561debab3b7e4eec" translate="yes" xml:space="preserve">
          <source>Describes tests together.</source>
          <target state="translated">Описывает тесты вместе.</target>
        </trans-unit>
        <trans-unit id="373b67a9ef6e15b48984d2e64ecfb18feb928f40" translate="yes" xml:space="preserve">
          <source>Design principles</source>
          <target state="translated">Принципы конструирования</target>
        </trans-unit>
        <trans-unit id="9c5959e7ab4938c2e1595e724f3e5f686f3d536b" translate="yes" xml:space="preserve">
          <source>Destructures two lists, assigning each term in the right one to the matching term in the left one.</source>
          <target state="translated">Разрушает два списка,присваивая каждому термину в правом списке совпадающий термин в левом.</target>
        </trans-unit>
        <trans-unit id="55519a961a5691717096efcabf1914eee5dab5a5" translate="yes" xml:space="preserve">
          <source>Determines if &lt;code&gt;integer&lt;/code&gt; is odd.</source>
          <target state="translated">Определяет, является ли &lt;code&gt;integer&lt;/code&gt; нечетным.</target>
        </trans-unit>
        <trans-unit id="026e5ca0dfda1ad25fabda732fd35af3e32e25b5" translate="yes" xml:space="preserve">
          <source>Determines if an &lt;code&gt;integer&lt;/code&gt; is even.</source>
          <target state="translated">Определяет, является ли &lt;code&gt;integer&lt;/code&gt; четным.</target>
        </trans-unit>
        <trans-unit id="ada7ef5eac5cda7b071d8c84d536d21adaaabe11" translate="yes" xml:space="preserve">
          <source>Determines if the &lt;code&gt;enumerable&lt;/code&gt; is empty.</source>
          <target state="translated">Определяет, пусто ли &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="240590c512304822fc6f9051f63c5097957b51d1" translate="yes" xml:space="preserve">
          <source>Determines if the date given is valid according to the proleptic Gregorian calendar.</source>
          <target state="translated">Определяет,действительна ли указанная дата по пролептическому григорианскому календарю.</target>
        </trans-unit>
        <trans-unit id="b906ed370d76a314f78611272f97a7c5324fbfb8" translate="yes" xml:space="preserve">
          <source>Developers can also use tools like &lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;Distillery&lt;/a&gt; that build &lt;strong&gt;releases&lt;/strong&gt;. Releases are able to package all of your source code as well as the Erlang VM into a single directory. Releases also give you explicit control over how each application is started and in which order. They also provide a more streamlined mechanism for starting and stopping systems, debugging, logging, as well as system monitoring.</source>
          <target state="translated">Разработчики также могут использовать такие инструменты, как &lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;Distillery&lt;/a&gt; , для создания &lt;strong&gt;выпусков&lt;/strong&gt; . Релизы могут упаковать весь ваш исходный код, а также виртуальную машину Erlang в один каталог. Релизы также дают вам явный контроль над тем, как каждое приложение запускается и в каком порядке. Они также обеспечивают более удобный механизм для запуска и остановки систем, отладки, ведения журнала, а также для мониторинга системы.</target>
        </trans-unit>
        <trans-unit id="17f25608342d4ab77bb1907f884cfe439bc54de0" translate="yes" xml:space="preserve">
          <source>Developers may also implement their own backends, an option that is explored in more detail below.</source>
          <target state="translated">Разработчики также могут реализовать свои собственные бэкэнды,вариант,который более подробно рассматривается ниже.</target>
        </trans-unit>
        <trans-unit id="0f26c5755a434f3e16da5992d7fb7b82ce5cc7eb" translate="yes" xml:space="preserve">
          <source>Developers may also use umbrella projects to break large business domains apart. The caution here is to make sure the domains don&amp;rsquo;t depend on each other (also known as cyclic dependencies). If you run into such situations, it means those applications are not as isolated from each other as you originally thought, and you have architectural and design issues to solve.</source>
          <target state="translated">Разработчики также могут использовать зонтичные проекты для разделения больших бизнес-доменов. Здесь следует предостеречь, чтобы домены не зависели друг от друга (также известные как циклические зависимости). Если вы столкнетесь с такими ситуациями, это означает, что эти приложения не так изолированы друг от друга, как вы первоначально думали, и вам необходимо решить архитектурные и дизайнерские проблемы.</target>
        </trans-unit>
        <trans-unit id="b4df092ce16103b5263190978f954da4abebc038" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; struct directly and instead rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Разработчикам следует избегать создания структуры &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; напрямую и вместо этого полагаться на функции, предоставляемые этим модулем, а также функции сторонних библиотек календарей.</target>
        </trans-unit>
        <trans-unit id="9399f0af7289ccae2bbfba26b54d6beaa45eceaa" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the Date structs directly and instead rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Разработчикам следует избегать непосредственного создания структур Date и вместо этого полагаться на функции,предоставляемые этим модулем,а также на функции сторонних календарных библиотек.</target>
        </trans-unit>
        <trans-unit id="372765583e2c62003b134d7cd14c816d752b1af8" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the NaiveDateTime structs directly and instead, rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Разработчикам следует избегать создания структур NaiveDateTime напрямую,а вместо этого полагаться на функции,предоставляемые этим модулем,а также на функции сторонних календарных библиотек.</target>
        </trans-unit>
        <trans-unit id="055215a2dc231830ec70e2ea3ed245f009feefc1" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the Time structs directly and instead rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Разработчикам следует избегать непосредственного создания временных структур и вместо этого полагаться на функции,предоставляемые этим модулем,а также на функции сторонних календарных библиотек.</target>
        </trans-unit>
        <trans-unit id="a0f9f33bf587fbe7754189054b93906eb196c38a" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;dynamicsupervisor#init/1&quot;&gt;&lt;code&gt;DynamicSupervisor.init/1&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Разработчики обычно вызывают &lt;a href=&quot;dynamicsupervisor#init/1&quot;&gt; &lt;code&gt;DynamicSupervisor.init/1&lt;/code&gt; &lt;/a&gt; в конце обратного вызова init, чтобы вернуть надлежащие флаги контроля.</target>
        </trans-unit>
        <trans-unit id="c23ae07b94722ec4976e1fcb3346ba8a18a11515" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;supervisor#init/2&quot;&gt;&lt;code&gt;Supervisor.init/2&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Разработчики обычно вызывают &lt;a href=&quot;supervisor#init/2&quot;&gt; &lt;code&gt;Supervisor.init/2&lt;/code&gt; &lt;/a&gt; в конце обратного вызова init, чтобы вернуть соответствующие флаги контроля.</target>
        </trans-unit>
        <trans-unit id="c943b3eb860130726114a82a12d17559028bcef9" translate="yes" xml:space="preserve">
          <source>Developing in Elixir does not make your code free of race conditions. However, Elixir&amp;rsquo;s abstractions where nothing is shared by default make it easier to spot a race condition&amp;rsquo;s root cause.</source>
          <target state="translated">Разработка в Elixir не освобождает ваш код от состояния гонки. Однако абстракции Elixir, в которых по умолчанию ничего не используется совместно, упрощают определение первопричины состояния гонки.</target>
        </trans-unit>
        <trans-unit id="3550a4a38c380e14df95457cd13d6dabbd0c0b20" translate="yes" xml:space="preserve">
          <source>Dict</source>
          <target state="translated">Dict</target>
        </trans-unit>
        <trans-unit id="28a9d7ddb98e082ecef8831bdb74b74701f20d77" translate="yes" xml:space="preserve">
          <source>Differences from &lt;code&gt;defmodule&lt;/code&gt;</source>
          <target state="translated">Отличия от &lt;code&gt;defmodule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="951f149c561762e46794ae9088e9246ba02fb48d" translate="yes" xml:space="preserve">
          <source>Differences to &lt;a href=&quot;#count/1&quot;&gt;&lt;code&gt;count/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Различия для &lt;a href=&quot;#count/1&quot;&gt; &lt;code&gt;count/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7664bc212e56811cb62a63d951c16c5ee311e137" translate="yes" xml:space="preserve">
          <source>Directory separators must always be written as &lt;code&gt;/&lt;/code&gt;, even on Windows. You may call &lt;a href=&quot;path#expand/1&quot;&gt;&lt;code&gt;Path.expand/1&lt;/code&gt;&lt;/a&gt; to normalize the path before invoking this function.</source>
          <target state="translated">Разделители каталогов всегда должны быть записаны как &lt;code&gt;/&lt;/code&gt; , даже в Windows. Вы можете вызвать &lt;a href=&quot;path#expand/1&quot;&gt; &lt;code&gt;Path.expand/1&lt;/code&gt; &lt;/a&gt; для нормализации пути перед вызовом этой функции.</target>
        </trans-unit>
        <trans-unit id="5095c2a8d43020f623949798775e0dea6df3427e" translate="yes" xml:space="preserve">
          <source>Disables logging for the current process.</source>
          <target state="translated">Отключает протоколирование текущего процесса.</target>
        </trans-unit>
        <trans-unit id="3243542aa799d7700902fa9d17f21c898a51bd23" translate="yes" xml:space="preserve">
          <source>Dispatching happens in the process that calls &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; either serially or concurrently in case of multiple partitions (via spawned tasks). The registered processes are not involved in dispatching unless involving them is done explicitly (for example, by sending them a message in the callback).</source>
          <target state="translated">Диспетчеризация происходит в процессе, который вызывает &lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt; последовательно или одновременно в случае нескольких разделов (через порожденные задачи). Зарегистрированные процессы не участвуют в диспетчеризации, если их вовлечение не выполняется явно (например, путем отправки им сообщения в обратном вызове).</target>
        </trans-unit>
        <trans-unit id="129dd56090745e370bed845813615f5c08f21b2a" translate="yes" xml:space="preserve">
          <source>Distributed tasks</source>
          <target state="translated">Распределенные задачи</target>
        </trans-unit>
        <trans-unit id="aef0124ef44afd7de1feb0a9b09b0c6ee2798fe2" translate="yes" xml:space="preserve">
          <source>Distributed tasks and tags</source>
          <target state="translated">Распределенные задачи и теги</target>
        </trans-unit>
        <trans-unit id="b4c7a18ac5c24ec1029c892a8a7fb3fbcc59af1d" translate="yes" xml:space="preserve">
          <source>Distributed tasks are exactly the same as supervised tasks. The only difference is that we pass the node name when spawning the task on the supervisor. Open up &lt;code&gt;lib/kv/supervisor.ex&lt;/code&gt; from the &lt;code&gt;:kv&lt;/code&gt; application. Let&amp;rsquo;s add a task supervisor as the last child of the tree:</source>
          <target state="translated">Распределенные задачи точно такие же, как контролируемые задачи. Единственная разница в том, что мы передаем имя узла при порождении задачи в супервизоре. Откройте &lt;code&gt;lib/kv/supervisor.ex&lt;/code&gt; из приложения &lt;code&gt;:kv&lt;/code&gt; . Давайте добавим супервизора задач в качестве последнего потомка дерева:</target>
        </trans-unit>
        <trans-unit id="98348afa0d882c80ed7d05917265b30ff93c136a" translate="yes" xml:space="preserve">
          <source>Divides a string into parts based on a pattern.</source>
          <target state="translated">Разделяет строку на части по шаблону.</target>
        </trans-unit>
        <trans-unit id="4f19d3c5ba97dc473a0dd975ca453b2aa1eeca76" translate="yes" xml:space="preserve">
          <source>Divides a string into substrings at each Unicode whitespace occurrence with leading and trailing whitespace ignored. Groups of whitespace are treated as a single occurrence. Divisions do not occur on non-breaking whitespace.</source>
          <target state="translated">Разделяет строку на подстроки при каждом появлении пробела в Unicode с игнорированием лидирующего и скользящего пробела.Группы пробельных символов рассматриваются как единое вхождение.Разделения не происходят при неразрывном пробеле.</target>
        </trans-unit>
        <trans-unit id="6e4d17c0fddf7977be47a1ef9b14e7b1d0cef265" translate="yes" xml:space="preserve">
          <source>Do not rely on the particular format returned by the &lt;code&gt;format*&lt;/code&gt; functions in this module. They may be changed in future releases in order to better suit Elixir's tool chain. In other words, by using the functions in this module it is guaranteed you will format exceptions as in the current Elixir version being used.</source>
          <target state="translated">Не полагайтесь на конкретный формат, возвращаемый функциями &lt;code&gt;format*&lt;/code&gt; в этом модуле. Они могут быть изменены в будущих выпусках, чтобы лучше соответствовать цепочке инструментов Elixir. Другими словами, используя функции этого модуля, вы гарантированно отформатируете исключения, как в текущей используемой версии Elixir.</target>
        </trans-unit>
        <trans-unit id="5be89a1272cff39c64911be3f9a33057d2a2263c" translate="yes" xml:space="preserve">
          <source>Do not use &lt;a href=&quot;mix.project#config/0&quot;&gt;&lt;code&gt;Mix.Project.config/0&lt;/code&gt;&lt;/a&gt; to find the runtime configuration. Use it only to configure aspects of your project (like compilation directories) and not your application runtime.</source>
          <target state="translated">Не используйте &lt;a href=&quot;mix.project#config/0&quot;&gt; &lt;code&gt;Mix.Project.config/0&lt;/code&gt; &lt;/a&gt; для поиска конфигурации времени выполнения. Используйте его только для настройки аспектов вашего проекта (например, каталогов компиляции), а не среды выполнения вашего приложения.</target>
        </trans-unit>
        <trans-unit id="a8d3dcf5e3a5a8a9d6963913c532d9b07e33dbf9" translate="yes" xml:space="preserve">
          <source>Do not use special match variables &lt;code&gt;:&quot;$_&quot;&lt;/code&gt; and &lt;code&gt;:&quot;$$&quot;&lt;/code&gt;, because they might not work as expected.</source>
          <target state="translated">Не используйте специальные переменные соответствия &lt;code&gt;:&quot;$_&quot;&lt;/code&gt; и &lt;code&gt;:&quot;$$&quot;&lt;/code&gt; , потому что они могут работать не так, как ожидалось.</target>
        </trans-unit>
        <trans-unit id="9078c7f338a72de9ec9a277913417c733a31c6ad" translate="yes" xml:space="preserve">
          <source>Do not use this function to generate a sequence of numbers. If blocking the caller process is not necessary, use &lt;code&gt;Stream.iterate(0, &amp;amp; &amp;amp;1 + 1)&lt;/code&gt; instead.</source>
          <target state="translated">Не используйте эту функцию для генерации последовательности чисел. Если в блокировке вызывающего процесса нет необходимости, используйте &lt;code&gt;Stream.iterate(0, &amp;amp; &amp;amp;1 + 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e01c221d853296d84e769113c74b2df4ca129d1" translate="yes" xml:space="preserve">
          <source>Doctests</source>
          <target state="translated">Doctests</target>
        </trans-unit>
        <trans-unit id="fd6f84b7484c0cf7709bebbb23583c23abf1b083" translate="yes" xml:space="preserve">
          <source>Doctests are specified by an indentation of four spaces followed by the &lt;code&gt;iex&amp;gt;&lt;/code&gt; prompt in a documentation string. If a command spans multiple lines, you can use &lt;code&gt;...&amp;gt;&lt;/code&gt;, as in IEx. The expected result should start at the next line after &lt;code&gt;iex&amp;gt;&lt;/code&gt; or &lt;code&gt;...&amp;gt;&lt;/code&gt; line(s) and is terminated either by a newline or a new &lt;code&gt;iex&amp;gt;&lt;/code&gt; prefix.</source>
          <target state="translated">Доктесты задаются отступом из четырех пробелов, за которым &lt;code&gt;iex&amp;gt;&lt;/code&gt; приглашение iex&amp;gt; в строке документации. Если команда занимает несколько строк, вы можете использовать &lt;code&gt;...&amp;gt;&lt;/code&gt; , как в IEx. Ожидаемый результат должен начинаться со следующей строки после строки &lt;code&gt;iex&amp;gt;&lt;/code&gt; или &lt;code&gt;...&amp;gt;&lt;/code&gt; и заканчиваться новой &lt;code&gt;iex&amp;gt;&lt;/code&gt; или новым префиксом iex&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="acfc0021db2710ad6e5c5976444819b508e6a8e7" translate="yes" xml:space="preserve">
          <source>Doctests, patterns and with</source>
          <target state="translated">Врачебные тесты,схемы и с</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="dbeb3b73b289a45968e86a1c4e28757eddbb7b21" translate="yes" xml:space="preserve">
          <source>Documentation != Code comments</source>
          <target state="translated">Документация !=Комментарии к коду</target>
        </trans-unit>
        <trans-unit id="dc66ec30a9e7992a7f99224cd60ef6a9e6f7c515" translate="yes" xml:space="preserve">
          <source>Documentation in Elixir is usually attached to module attributes. Let's see an example:</source>
          <target state="translated">Документация в Elixir обычно прикреплена к атрибутам модуля.Рассмотрим пример:</target>
        </trans-unit>
        <trans-unit id="d46677a0ad1e404b917f0ea8b3b31b80c34ffa5f" translate="yes" xml:space="preserve">
          <source>Documentation metadata</source>
          <target state="translated">Метаданные документации</target>
        </trans-unit>
        <trans-unit id="fcb85c951e6d656fcd603d110a64fcd8866200d9" translate="yes" xml:space="preserve">
          <source>Documents in a group are attempted to be rendered together to the best of the renderer ability.</source>
          <target state="translated">Документы,входящие в группу,пытаются визуализировать вместе,насколько это возможно.</target>
        </trans-unit>
        <trans-unit id="7bd6d91ba0fc6656f3596671325c2a8e0bccb23f" translate="yes" xml:space="preserve">
          <source>Does not load any of the implementations.</source>
          <target state="translated">Не загружает ни одну из реализаций.</target>
        </trans-unit>
        <trans-unit id="e1c5568ff1b2696956a80de3fbdad95c454b1c9a" translate="yes" xml:space="preserve">
          <source>Does not load any of the protocols.</source>
          <target state="translated">Не загружает ни один из протоколов.</target>
        </trans-unit>
        <trans-unit id="c263be485f93e4de275853028d24c5388efd78f6" translate="yes" xml:space="preserve">
          <source>Doing 0.1 * 0.1 should return 0.01, but because 0.1 is actually 0.1000000014, the result is 0.010000000000000002, and because this is not the closest representable number to 0.01, you'll get the wrong result for this operation</source>
          <target state="translated">Выполнение 0.1*0.1 должно вернуть 0.01,но так как 0.1 на самом деле 0.1000000014,результат 0.010000000000000002,и так как это не самое близкое к 0.01 репрезентабельное число,то вы получите неправильный результат для этой операции.</target>
        </trans-unit>
        <trans-unit id="576aa93d193455e3276b07f4cd2af71d8167c617" translate="yes" xml:space="preserve">
          <source>Doing it in reverse order will raise a syntax error:</source>
          <target state="translated">Если сделать это в обратном порядке,то возникнет синтаксическая ошибка:</target>
        </trans-unit>
        <trans-unit id="a56ad56b6280b6eca6747cdcbe707267d3443caf" translate="yes" xml:space="preserve">
          <source>Domain-specific languages</source>
          <target state="translated">Языки,специфичные для домена</target>
        </trans-unit>
        <trans-unit id="e6ab4e40cdc60406c301246d5709b2813b1c0221" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t drink the kool aid</source>
          <target state="translated">Не пей помощь кула</target>
        </trans-unit>
        <trans-unit id="bfd4ab20e5eed869032f79c7d0b2472213257269" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget that you can also check the &lt;a href=&quot;https://github.com/elixir-lang/elixir&quot;&gt;source code of Elixir itself&lt;/a&gt;, which is mostly written in Elixir (mainly the &lt;code&gt;lib&lt;/code&gt; directory), or &lt;a href=&quot;https://elixir-lang.org/docs.html&quot;&gt;explore Elixir&amp;rsquo;s documentation&lt;/a&gt;.</source>
          <target state="translated">Не забывайте, что вы также можете проверить &lt;a href=&quot;https://github.com/elixir-lang/elixir&quot;&gt;исходный код самого Elixir&lt;/a&gt; , который в основном написан на Elixir (в основном, каталог &lt;code&gt;lib&lt;/code&gt; ), или &lt;a href=&quot;https://elixir-lang.org/docs.html&quot;&gt;изучить документацию Elixir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e3dff4b81533f75ceec6a97ebb6191aa309061e" translate="yes" xml:space="preserve">
          <source>Drops elements at the beginning of the &lt;code&gt;enumerable&lt;/code&gt; while &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">Удаляет элементы в начале &lt;code&gt;enumerable&lt;/code&gt; а &lt;code&gt;fun&lt;/code&gt; возвращает истинное значение.</target>
        </trans-unit>
        <trans-unit id="594f287d9f0bd3fb9ea891584418c737436dd38e" translate="yes" xml:space="preserve">
          <source>Drops the &lt;code&gt;amount&lt;/code&gt; of elements from the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Удаляет &lt;code&gt;amount&lt;/code&gt; элементов из &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab32b2e5c71cd1c17d36b26a0d25edc63a27b074" translate="yes" xml:space="preserve">
          <source>Drops the given &lt;code&gt;keys&lt;/code&gt; from &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">Сбрасывает данные &lt;code&gt;keys&lt;/code&gt; с &lt;code&gt;map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdb8b8343fe7d1adbf36b056e528d2571ea6a12c" translate="yes" xml:space="preserve">
          <source>Drops the given keys from the keyword list.</source>
          <target state="translated">Отображает заданные ключи из списка ключевых слов.</target>
        </trans-unit>
        <trans-unit id="69c0475e80c404bbdc2d49a7a643fb10c6ace760" translate="yes" xml:space="preserve">
          <source>Due to immutability, loops in Elixir (as in any functional programming language) are written differently from imperative languages. For example, in an imperative language like C, one would write:</source>
          <target state="translated">Благодаря неизменяемости,циклы в эликсире (как и в любом функциональном языке программирования)написаны иначе,чем в императивных языках.Например,на императивном языке,таком как C,можно было бы написать:</target>
        </trans-unit>
        <trans-unit id="5cf07ff6fe7f2d796d09183c5eda29bcd66f1127" translate="yes" xml:space="preserve">
          <source>Due to their cons cell based representation, prepending an element to a list is always fast (constant time), while appending becomes slower as the list grows in size (linear time):</source>
          <target state="translated">Благодаря представлению,основанному на методе &quot;минус ячейки&quot;,добавление элемента в список всегда происходит быстро (постоянное время),в то время как добавление становится медленнее по мере увеличения размера списка (линейное время):</target>
        </trans-unit>
        <trans-unit id="4f1ef09b3bb7845a809a8a0e2e38529155ed603e" translate="yes" xml:space="preserve">
          <source>Due to their laziness, streams are useful when working with large (or even infinite) collections. When chaining many operations with &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, intermediate lists are created, while &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; creates a recipe of computations that are executed at a later moment. Let's see another example:</source>
          <target state="translated">Из-за своей лени потоки полезны при работе с большими (или даже бесконечными) коллекциями. При связывании многих операций с &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; создаются промежуточные списки, а &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; создает рецепт вычислений, которые выполняются в более поздний момент. Посмотрим на другой пример:</target>
        </trans-unit>
        <trans-unit id="9895fb241f7b45a9dc3e35cea835d242910bcea5" translate="yes" xml:space="preserve">
          <source>Due to this property, Elixir relies on functions starting with underscore to attach compile-time metadata to modules. Such functions are most often in the &lt;code&gt;__foo__&lt;/code&gt; format. For example, every module in Elixir has an &lt;a href=&quot;module#c:__info__/1&quot;&gt;&lt;code&gt;__info__/1&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Благодаря этому свойству Elixir полагается на функции, начинающиеся с символа подчеркивания, для присоединения к модулям метаданных времени компиляции. Чаще всего такие функции имеют формат &lt;code&gt;__foo__&lt;/code&gt; . Например, каждый модуль в Elixir имеет функцию &lt;a href=&quot;module#c:__info__/1&quot;&gt; &lt;code&gt;__info__/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7d17d072820769c205a9be99134b8181cc1f8d63" translate="yes" xml:space="preserve">
          <source>Duplicated entries are removed, the latest one prevails. Unlike &lt;code&gt;Enum.into(enumerable, [])&lt;/code&gt;, &lt;code&gt;Keyword.new(enumerable)&lt;/code&gt; guarantees the keys are unique.</source>
          <target state="translated">Дублирующиеся записи удаляются, преобладает последняя. В отличие от &lt;code&gt;Enum.into(enumerable, [])&lt;/code&gt; , &lt;code&gt;Keyword.new(enumerable)&lt;/code&gt; гарантирует, что ключи уникальны.</target>
        </trans-unit>
        <trans-unit id="076f63ae0f418e3862988b172f7c4cc5852450a8" translate="yes" xml:space="preserve">
          <source>Duplicated entries are removed, the latest one prevails. Unlike &lt;code&gt;Enum.into(enumerable, [], fun)&lt;/code&gt;, &lt;code&gt;Keyword.new(enumerable, fun)&lt;/code&gt; guarantees the keys are unique.</source>
          <target state="translated">Дублирующиеся записи удаляются, преобладает последняя. В отличие от &lt;code&gt;Enum.into(enumerable, [], fun)&lt;/code&gt; , &lt;code&gt;Keyword.new(enumerable, fun)&lt;/code&gt; гарантирует, что ключи уникальны.</target>
        </trans-unit>
        <trans-unit id="64aa4fe0da505292ed7a57df0b239e0d4183ccec" translate="yes" xml:space="preserve">
          <source>Duplicated keys appear duplicated in the final list of keys.</source>
          <target state="translated">Дублированные клавиши появляются в финальном списке дубликатов.</target>
        </trans-unit>
        <trans-unit id="efdd2fd6681b594f9b79a82e9b5aa48b4fbf5e9b" translate="yes" xml:space="preserve">
          <source>Duplicated keys are not removed.</source>
          <target state="translated">Дублированные ключи не удаляются.</target>
        </trans-unit>
        <trans-unit id="ac53e68a8e0e729bf98aeec7ce7b6340de177d35" translate="yes" xml:space="preserve">
          <source>Duplicated keys are preserved in the new keyword list.</source>
          <target state="translated">Дублированные ключи сохраняются в новом списке ключевых слов.</target>
        </trans-unit>
        <trans-unit id="b3b6f1eeffe99ed90517ec6eae526962d142636d" translate="yes" xml:space="preserve">
          <source>Duplicated keys are removed; the latest one prevails.</source>
          <target state="translated">Дублированные ключи удаляются;превалирует последний.</target>
        </trans-unit>
        <trans-unit id="9ba8d07a9bc46aeb1c779fab12a8b4dd715ff170" translate="yes" xml:space="preserve">
          <source>Duplicates the given element &lt;code&gt;n&lt;/code&gt; times in a list.</source>
          <target state="translated">Дублирует данный элемент в списке &lt;code&gt;n&lt;/code&gt; раз.</target>
        </trans-unit>
        <trans-unit id="612d35050e691a1a2b9f22fe6b8f2fde9cb8f9d1" translate="yes" xml:space="preserve">
          <source>Dynamic dispatch</source>
          <target state="translated">Динамическое отправление</target>
        </trans-unit>
        <trans-unit id="edd7dafc098b4b13db6ad466bd4e821198c0337f" translate="yes" xml:space="preserve">
          <source>Dynamic names</source>
          <target state="translated">Динамические имена</target>
        </trans-unit>
        <trans-unit id="46d2782a295d697a8b9e27c2d91c25f66bfd854d" translate="yes" xml:space="preserve">
          <source>Dynamic supervisors</source>
          <target state="translated">Динамические руководители</target>
        </trans-unit>
        <trans-unit id="3aa9130077fcc44c7eb24ab3a909359998b572f0" translate="yes" xml:space="preserve">
          <source>DynamicSupervisor</source>
          <target state="translated">DynamicSupervisor</target>
        </trans-unit>
        <trans-unit id="4981d257018e7d749e02934b79c0b6bdb94f8f95" translate="yes" xml:space="preserve">
          <source>DynamicSupervisor &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Поведение&lt;/small&gt; DynamicSupervisor&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7ba279830cac8f3b7ac440b34f16c258d525250e" translate="yes" xml:space="preserve">
          <source>Dynamically adds a child specification to &lt;code&gt;supervisor&lt;/code&gt; and starts that child.</source>
          <target state="translated">Динамически добавляет дочернюю спецификацию к &lt;code&gt;supervisor&lt;/code&gt; и запускает ее.</target>
        </trans-unit>
        <trans-unit id="887cf55c60fc1c9af6689bd5e2a2c3b3766133c3" translate="yes" xml:space="preserve">
          <source>Dynamically supervised tasks</source>
          <target state="translated">Динамически контролируемые задачи</target>
        </trans-unit>
        <trans-unit id="5b16ec2483e166fe049f665c022763eabe66f30f" translate="yes" xml:space="preserve">
          <source>EEx</source>
          <target state="translated">EEx</target>
        </trans-unit>
        <trans-unit id="af3993684170f3f24c787f9d7ffb881775da9c68" translate="yes" xml:space="preserve">
          <source>EEx has the concept of engines which allows you to modify or transform the code extracted from the given string or file.</source>
          <target state="translated">В EEx есть концепция движков,которая позволяет модифицировать или преобразовывать код,извлеченный из заданной строки или файла.</target>
        </trans-unit>
        <trans-unit id="818fc332cfd248836c5442317677dfe04bdbbd73" translate="yes" xml:space="preserve">
          <source>EEx stands for Embedded Elixir. It allows you to embed Elixir code inside a string in a robust way.</source>
          <target state="translated">EEx означает встраиваемый эликсир.Он позволяет надежно встраивать код эликсира в строку.</target>
        </trans-unit>
        <trans-unit id="22a24f67ecb347cc9015ff6237454fdbf0669653" translate="yes" xml:space="preserve">
          <source>EEx.Engine &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">EEx. &lt;small&gt;Поведение&lt;/small&gt; двигателя&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eebf2acaee05e7c09c816457012d68bbfc96c6f3" translate="yes" xml:space="preserve">
          <source>EEx.SmartEngine</source>
          <target state="translated">EEx.SmartEngine</target>
        </trans-unit>
        <trans-unit id="674e9c18d21c34b87c83982cf9afa4d95159a4be" translate="yes" xml:space="preserve">
          <source>EEx.SyntaxError</source>
          <target state="translated">EEx.SyntaxError</target>
        </trans-unit>
        <trans-unit id="49bba56082c8e3c9fff304ab7864ed3cb3a25fb5" translate="yes" xml:space="preserve">
          <source>EEx.SyntaxError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">EEx.SyntaxError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="98d18c239604c617df6f8788536838fd25d8c03d" translate="yes" xml:space="preserve">
          <source>EEx: &lt;code&gt;&amp;lt;%=&lt;/code&gt; in middle and end expressions</source>
          <target state="translated">EEx: &lt;code&gt;&amp;lt;%=&lt;/code&gt; в средних и конечных выражениях</target>
        </trans-unit>
        <trans-unit id="7eceb14d6ed554f3e39c3487db659c8d63e28acd" translate="yes" xml:space="preserve">
          <source>ETS</source>
          <target state="translated">ETS</target>
        </trans-unit>
        <trans-unit id="1500176ef8cc8bfbbaf08eb4c1316bcf890f3395" translate="yes" xml:space="preserve">
          <source>ETS (Erlang Term Storage)</source>
          <target state="translated">ETS (Erlang Term Storage)</target>
        </trans-unit>
        <trans-unit id="4f5a2cc3fa91eb59c67ada064593bcea69c5e3b4" translate="yes" xml:space="preserve">
          <source>ETS allows us to store any Elixir term in an in-memory table. Working with ETS tables is done via &lt;a href=&quot;http://www.erlang.org/doc/man/ets.html&quot;&gt;Erlang&amp;rsquo;s &lt;code&gt;:ets&lt;/code&gt; module&lt;/a&gt;:</source>
          <target state="translated">ETS позволяет нам хранить любой термин Elixir в таблице в памяти. Работа с таблицами ETS осуществляется через &lt;a href=&quot;http://www.erlang.org/doc/man/ets.html&quot;&gt;модуль &lt;/a&gt;Erlang &lt;code&gt;:ets&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8e8dd8378100a7f6cf535d73f581bb5835a296a0" translate="yes" xml:space="preserve">
          <source>ETS as a cache</source>
          <target state="translated">ETS в качестве кэша</target>
        </trans-unit>
        <trans-unit id="0c6b672feadc74b2fa303a786fd5682cec52505f" translate="yes" xml:space="preserve">
          <source>ETS lets you create a table containing tuples. By default, ETS tables are protected, which means only the owner process may write to the table but any other process can read. ETS has some functionality to allow a table to be used as a simple database, a key-value store or as a cache mechanism.</source>
          <target state="translated">ETS позволяет создать таблицу,содержащую кортежи.По умолчанию таблицы ETS защищены,что означает,что только процесс владельца может записывать в таблицу,но любой другой процесс может читать.ETS имеет некоторую функциональность,позволяющую использовать таблицу в качестве простой базы данных,хранилища значений ключей или в качестве механизма кэширования.</target>
        </trans-unit>
        <trans-unit id="52adb6284390fce5741221672f061e71df403d05" translate="yes" xml:space="preserve">
          <source>ETS tables can also be named, allowing us to access them by a given name:</source>
          <target state="translated">Таблицы ETS также могут иметь имена,что позволяет нам получать к ним доступ по заданному имени:</target>
        </trans-unit>
        <trans-unit id="362cea4d522d64f424e9ad3e438c8000b26fb5c9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;enumerable&lt;/code&gt; element is passed as argument to the given function &lt;code&gt;fun&lt;/code&gt; and processed by its own task. The tasks will be linked to the current process, similarly to &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Каждый &lt;code&gt;enumerable&lt;/code&gt; элемент передается в качестве аргумента данной функции &lt;code&gt;fun&lt;/code&gt; и обрабатывается ее собственной задачей. Задачи будут связаны с текущим процессом, аналогично &lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c70223b508f5fb20c656733438516d9c4a38e207" translate="yes" xml:space="preserve">
          <source>Each application has an environment that stores the application&amp;rsquo;s specific configuration by key. For example, we could store the routing table in the &lt;code&gt;:kv&lt;/code&gt; application environment, giving it a default value and allowing other applications to change the table as needed.</source>
          <target state="translated">Каждое приложение имеет среду, в которой по ключам хранится конкретная конфигурация приложения. Например, мы могли бы сохранить таблицу маршрутизации в среде приложения &lt;code&gt;:kv&lt;/code&gt; , присвоив ей значение по умолчанию и разрешив другим приложениям изменять таблицу по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="30b77596010e1d94e168b64218473fa0c4476548" translate="yes" xml:space="preserve">
          <source>Each application in our system can be started and stopped. The rules for starting and stopping an application are also defined in the &lt;code&gt;.app&lt;/code&gt; file. When we invoke &lt;code&gt;iex -S mix&lt;/code&gt;, Mix compiles our application and then starts it.</source>
          <target state="translated">Каждое приложение в нашей системе можно запускать и останавливать. Правила запуска и остановки приложения также определены в файле &lt;code&gt;.app&lt;/code&gt; . Когда мы вызываем &lt;code&gt;iex -S mix&lt;/code&gt; , Mix компилирует наше приложение, а затем запускает его.</target>
        </trans-unit>
        <trans-unit id="6ee7cee4e35c13e97e0b113c7ad93de2b2e9f9ff" translate="yes" xml:space="preserve">
          <source>Each element in &lt;code&gt;enumerable&lt;/code&gt; is passed as argument to the given function &lt;code&gt;fun&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and linked to the current process, similarly to &lt;a href=&quot;#async/2&quot;&gt;&lt;code&gt;async/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Каждый элемент в &lt;code&gt;enumerable&lt;/code&gt; передается в качестве аргумента данной функции &lt;code&gt;fun&lt;/code&gt; и обрабатывается ее собственной задачей. Задачи будут созданы под данным &lt;code&gt;supervisor&lt;/code&gt; и связаны с текущим процессом, аналогично &lt;a href=&quot;#async/2&quot;&gt; &lt;code&gt;async/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bff2b054449ef93f88ae378fceaa7c3773b512d" translate="yes" xml:space="preserve">
          <source>Each element in &lt;code&gt;enumerable&lt;/code&gt; is passed as argument to the given function &lt;code&gt;fun&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and will not be linked to the current process, similarly to &lt;a href=&quot;#async_nolink/2&quot;&gt;&lt;code&gt;async_nolink/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Каждый элемент в &lt;code&gt;enumerable&lt;/code&gt; передается в качестве аргумента данной функции &lt;code&gt;fun&lt;/code&gt; и обрабатывается ее собственной задачей. Задачи будут созданы под данным &lt;code&gt;supervisor&lt;/code&gt; и не будут связаны с текущим процессом, как и &lt;a href=&quot;#async_nolink/2&quot;&gt; &lt;code&gt;async_nolink/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8ff31374c6e0e1792073cfd7bf59921a2ee8196" translate="yes" xml:space="preserve">
          <source>Each element in &lt;code&gt;enumerable&lt;/code&gt; will be prepended to the given &lt;code&gt;args&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and will not be linked to the current process, similarly to &lt;a href=&quot;#async_nolink/4&quot;&gt;&lt;code&gt;async_nolink/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Каждый элемент в &lt;code&gt;enumerable&lt;/code&gt; будет добавлен к заданным &lt;code&gt;args&lt;/code&gt; и обработан своей собственной задачей. Задачи будут созданы под данным &lt;code&gt;supervisor&lt;/code&gt; и не будут связаны с текущим процессом, как и в &lt;a href=&quot;#async_nolink/4&quot;&gt; &lt;code&gt;async_nolink/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e074b39ec3a1ed372a909c0a3201829b19421e8" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;enumerable&lt;/code&gt; will be prepended to the given &lt;code&gt;args&lt;/code&gt; and processed by its own task. The tasks will be linked to an intermediate process that is then linked to the current process. This means a failure in a task terminates the current process and a failure in the current process terminates all tasks.</source>
          <target state="translated">Каждый элемент &lt;code&gt;enumerable&lt;/code&gt; будет добавлен к заданным &lt;code&gt;args&lt;/code&gt; и обработан его собственной задачей. Задачи будут связаны с промежуточным процессом, который затем будет связан с текущим процессом. Это означает, что сбой в задаче завершает текущий процесс, а сбой в текущем процессе завершает все задачи.</target>
        </trans-unit>
        <trans-unit id="ea81b39bec07b5eca51e7cb8e73b08cc88b185e5" translate="yes" xml:space="preserve">
          <source>Each element will be prepended to the given &lt;code&gt;args&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and linked to the current process, similarly to &lt;a href=&quot;#async/4&quot;&gt;&lt;code&gt;async/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Каждый элемент будет добавлен к заданным &lt;code&gt;args&lt;/code&gt; и обработан своей собственной задачей. Задачи будут созданы под данным &lt;code&gt;supervisor&lt;/code&gt; и связаны с текущим процессом, аналогично &lt;a href=&quot;#async/4&quot;&gt; &lt;code&gt;async/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77459e85ee4402d66fd92ef0b7844cafe8faeccd" translate="yes" xml:space="preserve">
          <source>Each entry in the registry is associated to the process that has registered the key. If the process crashes, the keys associated to that process are automatically removed. All key comparisons in the registry are done using the match operation (&lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Каждая запись в реестре связана с процессом, зарегистрировавшим ключ. В случае сбоя процесса ключи, связанные с этим процессом, автоматически удаляются. Все сравнения ключей в реестре выполняются с помощью операции сопоставления ( &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f51dcc2b38618bcc3fe87f6cb31bfc9d58a91577" translate="yes" xml:space="preserve">
          <source>Each item in the list is a map with the following keys:</source>
          <target state="translated">Каждый пункт списка представляет собой карту со следующими клавишами:</target>
        </trans-unit>
        <trans-unit id="532f0099dc0a59c8142722d964bd46289ef70cfc" translate="yes" xml:space="preserve">
          <source>Each key-value pair in the map is converted to a two-element tuple &lt;code&gt;{key, value}&lt;/code&gt; in the resulting list.</source>
          <target state="translated">Каждая пара &quot;ключ-значение&quot; на карте преобразуется в двухэлементный кортеж &lt;code&gt;{key, value}&lt;/code&gt; в результирующем списке.</target>
        </trans-unit>
        <trans-unit id="4934170f741619738531430df9405d17c3b39b24" translate="yes" xml:space="preserve">
          <source>Each module can be decorated with one or more attributes. The following ones are currently defined by Elixir:</source>
          <target state="translated">Каждый модуль может быть украшен одним или несколькими атрибутами.Следующие атрибуты в настоящее время определены Elixir:</target>
        </trans-unit>
        <trans-unit id="9ac8e172618067a3e6bc12be54b49bfe15535ac3" translate="yes" xml:space="preserve">
          <source>Each module gets an &lt;code&gt;__info__/1&lt;/code&gt; function when it's compiled. The function takes one of the following items:</source>
          <target state="translated">Каждый модуль при &lt;code&gt;__info__/1&lt;/code&gt; получает функцию __info __ / 1 . Функция принимает один из следующих элементов:</target>
        </trans-unit>
        <trans-unit id="e4ebc93808a7013b1682e04607e3d5c0727d33dc" translate="yes" xml:space="preserve">
          <source>Each number given to a binary is meant to represent a byte and therefore must go up to 255. Binaries allow modifiers to be given to store numbers bigger than 255 or to convert a code point to its UTF-8 representation:</source>
          <target state="translated">Каждое число,присваиваемое двоичному файлу,должно представлять байт и,следовательно,должно доходить до 255.Бинарные файлы позволяют задавать модификаторы для хранения чисел больше 255 или преобразовывать точку кода в ее UTF-8 представление:</target>
        </trans-unit>
        <trans-unit id="372725c1f82abeb98e09b054fcea454db1d9af25" translate="yes" xml:space="preserve">
          <source>Each process started with the application must be listed as a child under the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; above. We call those &quot;static processes&quot; because they are known upfront. For handling dynamic processes, such as the ones started during requests and other user inputs, look at the &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Каждый процесс, запущенный с приложением, должен быть указан как дочерний под вышеприведенным &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; . Мы называем эти &amp;laquo;статические процессы&amp;raquo;, потому что они известны заранее. Для обработки динамических процессов, таких как те, которые запускаются во время запросов и других пользовательских вводов, посмотрите модуль &lt;a href=&quot;dynamicsupervisor&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1a597396bbd78d869061e9cc988eca475a9257e" translate="yes" xml:space="preserve">
          <source>Each task has its own options and sometimes specific configuration to be defined in the &lt;code&gt;project/0&lt;/code&gt; function. You can use &lt;a href=&quot;mix.tasks.help&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt; to list all available tasks and &lt;code&gt;mix help NAME&lt;/code&gt; to show help for a particular task.</source>
          <target state="translated">У каждой задачи есть свои параметры, а иногда и конкретная конфигурация, которую нужно определить в функции &lt;code&gt;project/0&lt;/code&gt; . Вы можете использовать &lt;a href=&quot;mix.tasks.help&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; чтобы перечислить все доступные задачи, и &lt;code&gt;mix help NAME&lt;/code&gt; чтобы показать справку по конкретной задаче.</target>
        </trans-unit>
        <trans-unit id="bcac1b6f9d120c9722086c7e508489b0226da684" translate="yes" xml:space="preserve">
          <source>Each variable is identified by a tuple of two elements, where the first element is the variable name as an atom and the second element is its context, which may be an atom or an integer.</source>
          <target state="translated">Каждая переменная идентифицируется кортежом из двух элементов,где первый элемент-имя переменной как атом,а второй-ее контекст,который может быть атомом или целым числом.</target>
        </trans-unit>
        <trans-unit id="68310c7d97bd5e9d47967e9e9edcb285e94d70ff" translate="yes" xml:space="preserve">
          <source>Eager to learn more? Keep reading!</source>
          <target state="translated">Хочешь узнать больше? Продолжайте читать!</target>
        </trans-unit>
        <trans-unit id="773015863b8b24712e29c53fe98994b9728f6381" translate="yes" xml:space="preserve">
          <source>Eager vs Lazy</source>
          <target state="translated">Eager vs Lazy</target>
        </trans-unit>
        <trans-unit id="28ac06af2cb7839cf14f9821c41dfad421032a0a" translate="yes" xml:space="preserve">
          <source>Echo server</source>
          <target state="translated">сервер Эхо</target>
        </trans-unit>
        <trans-unit id="eeccb169551120a3e6a633e63e844185e028c154" translate="yes" xml:space="preserve">
          <source>Edit the file at &lt;code&gt;lib/kv/registry.ex&lt;/code&gt;, filling in the blanks for the client API:</source>
          <target state="translated">Отредактируйте файл по адресу &lt;code&gt;lib/kv/registry.ex&lt;/code&gt; , заполнив пробелы для клиентского API:</target>
        </trans-unit>
        <trans-unit id="25857c2157bff6e7a9f798c89b04873173125f2d" translate="yes" xml:space="preserve">
          <source>Elements are compared using &lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Элементы сравниваются с помощью &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1bc7fb1f226e6f6f3ef7ee47c49d49289229118" translate="yes" xml:space="preserve">
          <source>Elements are only emitted when &lt;code&gt;fun&lt;/code&gt; returns a new value or the &lt;code&gt;enum&lt;/code&gt; finishes.</source>
          <target state="translated">Элементы испускаются только тогда, когда &lt;code&gt;fun&lt;/code&gt; возвращает новое значение или завершается &lt;code&gt;enum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0c7bf14304705b88f3bf9ecdfcf919293c76e53" translate="yes" xml:space="preserve">
          <source>Elixir</source>
          <target state="translated">Elixir</target>
        </trans-unit>
        <trans-unit id="e5c4daa79e73a93f8dc527746d72ef1e1f99e8dd" translate="yes" xml:space="preserve">
          <source>Elixir 1.5.0 onwards</source>
          <target state="translated">Эликсир 1.5.0 дальше</target>
        </trans-unit>
        <trans-unit id="67dd209de0ff8f0eac333c13b028cb684c348812" translate="yes" xml:space="preserve">
          <source>Elixir 1.9.0 onwards</source>
          <target state="translated">Эликсир 1.9.0 вперёд.</target>
        </trans-unit>
        <trans-unit id="bff9443fa7cf4ae0bab8d5c8f1f4dab57c2d5acf" translate="yes" xml:space="preserve">
          <source>Elixir Forum</source>
          <target state="translated">Эликсирный форум</target>
        </trans-unit>
        <trans-unit id="de61752fa33c065b078b47c60fdefbfedf94b579" translate="yes" xml:space="preserve">
          <source>Elixir allows developers to attach arbitrary metadata to the documentation. This is done by passing a keyword list to the relevant attribute (such as &lt;code&gt;@moduledoc&lt;/code&gt;, &lt;code&gt;@typedoc&lt;/code&gt;, and &lt;code&gt;@doc&lt;/code&gt;). A commonly used metadata is &lt;code&gt;:since&lt;/code&gt;, which annotates in which version that particular module, function, type, or callback was added, as shown in the example above.</source>
          <target state="translated">Elixir позволяет разработчикам прикреплять к документации произвольные метаданные. Это делается путем передачи списка ключевых слов в соответствующий атрибут (например, &lt;code&gt;@moduledoc&lt;/code&gt; , &lt;code&gt;@typedoc&lt;/code&gt; и &lt;code&gt;@doc&lt;/code&gt; ). Обычно используемые метаданные &lt;code&gt;:since&lt;/code&gt; , которые указывают, в какой версии был добавлен конкретный модуль, функция, тип или обратный вызов, как показано в примере выше.</target>
        </trans-unit>
        <trans-unit id="3c0ee4efd422df64d926e1699ce27c5bdf0b25e6" translate="yes" xml:space="preserve">
          <source>Elixir allows integers to contain &lt;code&gt;_&lt;/code&gt; to separate digits and provides conveniences to represent integers in other bases:</source>
          <target state="translated">Elixir позволяет целым числам содержать &lt;code&gt;_&lt;/code&gt; для разделения цифр и обеспечивает удобство представления целых чисел в других основаниях:</target>
        </trans-unit>
        <trans-unit id="f75c26877ef871217ff6769618e4b459e83b4aa9" translate="yes" xml:space="preserve">
          <source>Elixir allows us to derive a protocol implementation based on the &lt;code&gt;Any&lt;/code&gt; implementation. Let&amp;rsquo;s first implement &lt;code&gt;Any&lt;/code&gt; as follows:</source>
          <target state="translated">Elixir позволяет нам получить реализацию протокола на основе реализации &lt;code&gt;Any&lt;/code&gt; . Давайте сначала реализуем &lt;code&gt;Any&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="83c382416abbdb750f7a0b52274c72d3eeffa512" translate="yes" xml:space="preserve">
          <source>Elixir allows variables to be rebound via static single assignment:</source>
          <target state="translated">Эликсир допускает отскок переменных через статическое одиночное присваивание:</target>
        </trans-unit>
        <trans-unit id="0e0d77b67e657e2b9066c1ff6972927494c31617" translate="yes" xml:space="preserve">
          <source>Elixir allows you to skip the leading &lt;code&gt;:&lt;/code&gt; for the atoms &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эликсир позволяет пропускать ведущие &lt;code&gt;:&lt;/code&gt; для атомов &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ff842a6a4a3cf98a11fae4fd4498e3695c470e" translate="yes" xml:space="preserve">
          <source>Elixir already provides mechanisms to write your everyday code in a simple and readable fashion by using its data structures and functions. Macros should only be used as a last resort. Remember that &lt;strong&gt;explicit is better than implicit&lt;/strong&gt;. &lt;strong&gt;Clear code is better than concise code.&lt;/strong&gt;</source>
          <target state="translated">Elixir уже предоставляет механизмы для написания вашего повседневного кода в простой и удобочитаемой форме, используя свои структуры данных и функции. Макросы следует использовать только в крайнем случае. Помните, что &lt;strong&gt;явное лучше, чем неявное&lt;/strong&gt; . &lt;strong&gt;Четкий код лучше краткого.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3c84bd869e800cf00a0f15faeb1fec6f09ff020" translate="yes" xml:space="preserve">
          <source>Elixir already provides mechanisms to write your everyday code in a simple and readable fashion by using its data structures and functions. Macros should only be used as a last resort. Remember that &lt;strong&gt;explicit is better than implicit&lt;/strong&gt;. &lt;strong&gt;Clear code is better than concise code&lt;/strong&gt;.</source>
          <target state="translated">Elixir уже предоставляет механизмы для написания вашего повседневного кода в простой и удобочитаемой форме, используя свои структуры данных и функции. Макросы следует использовать только в крайнем случае. Помните, что &lt;strong&gt;явное лучше, чем неявное&lt;/strong&gt; . &lt;strong&gt;Четкий код лучше краткого&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="04d508ddfa3159bfde64248d0cbc115d950cb551" translate="yes" xml:space="preserve">
          <source>Elixir also accepts by default the segment to be a literal string or a literal charlist, which are by default expanded to integers:</source>
          <target state="translated">Эликсир также принимает по умолчанию сегмент как строку или символ литерала,которые по умолчанию расширены до целых чисел:</target>
        </trans-unit>
        <trans-unit id="738cbc7a97733fcad20b5d4c9dce828da97453d5" translate="yes" xml:space="preserve">
          <source>Elixir also allows developers to enforce certain keys must always be given when building the struct:</source>
          <target state="translated">Эликсир также позволяет разработчикам применять определенные ключи,которые всегда должны быть даны при построении структуры:</target>
        </trans-unit>
        <trans-unit id="b2aeb44fb689a73ee1106300bdf2d7f03241fd14" translate="yes" xml:space="preserve">
          <source>Elixir also contains an &lt;a href=&quot;#ensure_compiled/1&quot;&gt;&lt;code&gt;ensure_compiled/1&lt;/code&gt;&lt;/a&gt; function that is a superset of &lt;a href=&quot;#ensure_loaded/1&quot;&gt;&lt;code&gt;ensure_loaded/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эликсир также содержит функцию &lt;a href=&quot;#ensure_compiled/1&quot;&gt; &lt;code&gt;ensure_compiled/1&lt;/code&gt; &lt;/a&gt; которая является надмножеством &lt;a href=&quot;#ensure_loaded/1&quot;&gt; &lt;code&gt;ensure_loaded/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
